package ab0j;
import ab.common.*;
import af.common.*;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=AB0J ****
// This application allows the user to maintain the value of
// existing rows in the Size Break Table(DABUY.VBSIZE01).
// The user may change the value of the quantity/ies
// of each style/color/size which meet the selection criteria.
// An Apparel Scheduler will use this application to adjust the
// quantity of each size for each style which meets the
// selection criteria. This application will use a combination
// of stored internal keys for styles which meet the selection
// criteria, and the TSQ which will contain all the color/sizes
// for a given style. The user may PF7 or PF8 to page through
// all the colors for a style (if multiple pages for a single
// style) or PF19 to go backward to the previous style or PF20
// to go forward to the next style.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view and/or update the rows that were
// selected.
// 
// This application updates the following databases: DABUY.
// VSIZEB01, DABUY.VBPLAN01, DABUY.VBCOLR01. Update synchroni-
// zation logic has been employed to control updates.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 06/01/89   JRAMOS   New application.
// 09/17/93   SWHITA   ADDED HELP SCREEN LINK TO AB0J140.
// Y2KFIX   01/27/98  KSUMME  Y2K MODIFICATIONS MADE TO:
//        Y2K TABLE CHANGES:  AB0JM001, AB0JM002, AB0JW03,
//             XPAB001 (FLOW PORTION).
//        GLOBAL CHANGES: ABWREC, AB3REC, AB4REC, AB5REC,
//                      AB6REC, XP1REC, XPAB020
// *********************
Program AB0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AB0JW01 AB0JW01; // record
  AB0JW02 AB0JW02; // record
  AB0JW03 AB0JW03; // record
  AB0JW04 AB0JW04; // record
  AB1REC AB1REC; // record
  AB2REC AB2REC; // record
  AB3REC AB3REC; // record
  AB4REC AB4REC; // record
  AB5REC AB5REC; // record
  AB6REC AB6REC; // record
  ABWREC ABWREC; // record
  AF2REC AF2REC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  PC2REC PC2REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XP1REC XP1REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGATBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use AB0JM.AB0JM001,  // forms
      AB0JM.AB0JM002, 
      AB0JM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAB001: XPAB001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Apparel Buy Prototype process.*/
     /* ------------------------------------------------------------*/

    set ABWREC empty; /* Initialize working storage*/
    set AB0JW01 empty; /* Initialize working storage*/
    set AB0JW02 empty; /* Initialize working storage*/
    set AB0JW03 empty; /* Initialize working storage*/
    set AB0JW04 empty; /* Initialize working storage*/
    set AB1REC empty; /* Initialize working storage*/
    set AB2REC empty; /* Initialize working storage*/
    set AB3REC empty; /* Initialize working storage*/
    set AB4REC empty; /* Initialize working storage*/
    set AB5REC empty; /* Initialize working storage*/
    set AB6REC empty; /* Initialize working storage*/
    set ERRSQLCA empty; /* Initialize working storage*/
    set FY1REC empty; /* Initialize working storage*/
    set PC2REC empty;
    set PG1REC empty; /* Initialize working storage*/
    set PG2REC empty; /* Initialize working storage*/
    set PG3REC empty; /* Initialize working storage*/
    set SQLCA empty; /* Initialize working storage*/
    set TAEREC empty; /* Initialize working storage*/
    set TA1REC empty; /* Initialize working storage*/
    set TA3REC empty; /* Initialize working storage*/
    set TA5REC empty; /* Initialize working storage*/
    set XX0XW01 empty; /* Initialize working storage*/
    set XX0XW02 empty; /* Initialize working storage*/

    set AB0JM001 initial; /* Initialize map output area*/


                      /* (Set Pack Factor)*/

    AB0JW01.AB0JWPKF = +1; /* Pack Factor to 1 (no pack factor)*/


                   /* (Define Map Environment)*/

    ABWREC.ABWAPPL = "AB0J"; /* Initialize appl ID for this appl*/
    AB0JW01.AB0JW-MAP-IND = "1"; /* Indicate map one*/
    ABWREC.ABWPRCSN = "M001"; /* Indicate map one*/
    ABWREC.XXXMAPNM = ABWREC.ABWERLOC; /* Move map name to abwrec*/


                    /* (Set Map Item Values)*/

    ABWREC.ABWPRCSN = "0000"; /* Initialize process number to zero*/
    ABWREC.ABWMAP = "1"; /* Indicate map to be displayed*/
    AB0JM001.XXXCURDT = VGVar.currentShortGregorianDate; /* To map current date*/

    ABWREC.ABWSWR = "N"; /* Do not obtain initial data*/


                    /* (Set Constants)*/

    AB0JW01.XQACD = "01"; /* Qual cd*/
    AB0JW01.AB0JWSLM = +1394; /* Set 1394 as max style array limit*/


              /* (Process Passed Items from XP1REC)*/

    AB0JM001.PG1SC4CD = XP1REC.XXXUSER; /* Userid*/
    AB0JM001.XSECD = XP1REC.XSECD; /* Season cd*/
    AB0JM001.XSNYR = XP1REC.XSNYR; /* Season yr*/
    AB0JM001.AB3BUYMO = XP1REC.XP1CBYMO; /* Character Buy/Mo*/
    AB0JM001.SY1STNBR = XP1REC.SY1STNBR; /* Style no.*/
    AB0JM001.SY1SSTNM = XP1REC.SY1SSTNM; /* Style name*/
    AB0JM001.FY1FCTYC = XP1REC.FY1FCTYC; /* Factory cd*/
    AB0JM001.PC2CUXID = XP1REC.PC2CUXID; /* cust xref*/
    AB0JM001.AB0JMPKF = AB0JW01.AB0JWPKF; /* Pack Factor*/


           /* (Calculate for Temporary Storage Size)*/

    ABWREC.ABWMPMAX = 4; /* Max logical lines per map*/
     /* ----------------------Y2K OUT BEGIN--------------------------*/
     /*  */
     /* MOVE +1079 TO ABWREC.ABWTSL;    /* tsq length*/
     /*  */
     /* ----------------------Y2K OUT END----------------------------*/
     /* ----------------------Y2K OUT BEGIN--------------------------*/
     /*  */
    ABWREC.ABWTSL = +1089; /* tsq length*/
     /*  */
     /* ----------------------Y2K OUT END----------------------------*/
                                    /* ABWREC.ABWTSL = ABWREC.ABWMPMAX **/
                                     /* ;  /* Max lines * TSQ data length*/
     /* ABWREC.ABWTSL = ABWREC.ABWTSL + 4;       /* Add 4 bytes for TSQ info*/


           /* (Set Protect,Dark all Map Dtl Items)*/

    set AB0JM001.AB0JMBC1 skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMSC1 skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMSTY skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMSSN skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMMFS skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMBC2 skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMBC3 skip, invisible; /* Protect,darken hdgs*/
    set AB0JM001.AB0JMHTL skip, invisible; /* Protect,darken hdgs*/


    ABWREC.ABWIXM = 1; /* Reset loop index*/
    while (ABWREC.ABWIXM <= 8) /* Process all size descriptions*/
      set AB0JM001.SY4IDDSC[ABWIXM] skip, invisible;
      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/
    end


    ABWREC.ABWIDX1 = 1; /* Initialize loop index*/
    while (ABWREC.ABWIDX1 <= ABWREC.ABWMPMAX) /* Protect,dark map dtl lines*/

      set AB0JM001.AB0JMBSC[ABWIDX1] skip, invisible; /* Line Hdgs*/
      set AB0JM001.AB0JMSSC[ABWIDX1] skip, invisible; /* Line Hdgs*/
      set AB0JM001.AB0JMHSB[ABWIDX1] skip, invisible; /* Line Hdgs*/
      set AB0JM001.AB0JMQS1[ABWIDX1] skip, invisible; /* Qty 1*/
      set AB0JM001.AB0JMQS2[ABWIDX1] skip, invisible; /* Qty 2*/
      set AB0JM001.AB0JMQS3[ABWIDX1] skip, invisible; /* Qty 3*/
      set AB0JM001.AB0JMQS4[ABWIDX1] skip, invisible; /* Qty 4*/
      set AB0JM001.AB0JMQS5[ABWIDX1] skip, invisible; /* Qty 5*/
      set AB0JM001.AB0JMQS6[ABWIDX1] skip, invisible; /* Qty 6*/
      set AB0JM001.AB0JMQS7[ABWIDX1] skip, invisible; /* Qty 7*/
      set AB0JM001.AB0JMQS8[ABWIDX1] skip, invisible; /* Qty 8*/
      set AB0JM001.AB0JMQST[ABWIDX1] skip, invisible; /* Qty totals*/

      set AB0JM001.AB0JMBPC[ABWIDX1] skip, invisible; /* Line Hdgs*/
      set AB0JM001.AB0JMSPC[ABWIDX1] skip, invisible; /* Line Hdgs*/
      set AB0JM001.AB0JMHPF[ABWIDX1] skip, invisible; /* Line Hdgs*/
      set AB0JM001.AB0JMQP1[ABWIDX1] skip, invisible; /* Qty 1*/
      set AB0JM001.AB0JMQP2[ABWIDX1] skip, invisible; /* Qty 2*/
      set AB0JM001.AB0JMQP3[ABWIDX1] skip, invisible; /* Qty 3*/
      set AB0JM001.AB0JMQP4[ABWIDX1] skip, invisible; /* Qty 4*/
      set AB0JM001.AB0JMQP5[ABWIDX1] skip, invisible; /* Qty 5*/
      set AB0JM001.AB0JMQP6[ABWIDX1] skip, invisible; /* Qty 6*/
      set AB0JM001.AB0JMQP7[ABWIDX1] skip, invisible; /* Qty 7*/
      set AB0JM001.AB0JMQP8[ABWIDX1] skip, invisible; /* Qty 8*/
      set AB0JM001.AB0JMQPT[ABWIDX1] skip, invisible; /* Qty totals*/

      set AB0JM001.AB0JM-ADD-BUY[ABWIDX1] initialAttributes; /* Line Hdgs*/
      set AB0JM001.AB0JMQA1[ABWIDX1] initialAttributes; /* Qty 1*/
      set AB0JM001.AB0JMQA2[ABWIDX1] initialAttributes; /* Qty 2*/
      set AB0JM001.AB0JMQA3[ABWIDX1] initialAttributes; /* Qty 3*/
      set AB0JM001.AB0JMQA4[ABWIDX1] initialAttributes; /* Qty 4*/
      set AB0JM001.AB0JMQA5[ABWIDX1] initialAttributes; /* Qty 5*/
      set AB0JM001.AB0JMQA6[ABWIDX1] initialAttributes; /* Qty 6*/
      set AB0JM001.AB0JMQA7[ABWIDX1] initialAttributes; /* Qty 7*/
      set AB0JM001.AB0JMQA8[ABWIDX1] initialAttributes; /* Qty 8*/
      set AB0JM001.AB0JMQAT[ABWIDX1] initialAttributes; /* Qty totals*/

      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Loop through*/

    end


                    /* (Converse Main Process)*/

    goto AB0J001; /* Converse Apparel Buy Application*/


    AB0J001: AB0J001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    goto AB0J001; /* Converse Transportation Prototype*/


  end // end main
end // end AB0J

// Choose which map to display
Function AB0J001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/


  AB0J100(); /* Display map 1*/



end // end AB0J001

// Driver process for 100 map
Function AB0J100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  AB0J110(); /* Obtain the data to display*/

  if (AB0JW-MAP-IND == "1")
    AB0J120(); /* Format and display the map*/
  else
    AB0J130(); /* Format and display the map*/
  end

  AB0J140(); /* Check attention identifier*/

  AB0J150(); /* Reset fields to normal intensity*/

  AB0J160(); /* Verify the entered data*/

  AB0J170(); /* Process valid input request*/


end // end AB0J100

// Obtain The Data to Display
Function AB0J110()
   /* ------------------------------------------------------------*/
   /* If data was not requested, return to the previous process.*/
   /* Purge any existing queue in temporary storage.*/
   /* Check for User Response and process appropriate data base.*/
   /* If no errors found from data retrieve, indicate that the*/
     /* request for data was completed.*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum != 0 /* Errors detected*/
   || ABWREC.ABWSWR != "Y")             /* or Data was not requested*/
    return; /* Return to previous process*/
  end


  ABWREC.ABWFIRST = "N"; /* Set first time ind off*/


   /* ------------------------------------------------------------*/
    /* Obtain Style data from DABUY.VABSTY01*/
   /* ------------------------------------------------------------*/


  if (AB0JW01.AB0JWSTS == "Y") /* Select new style set*/


    AB0J112(); /* Select Set DABUY.VABSTY01 data*/

    if (converseVar.validationMsgNum == 0) /* No errors found*/

      set AB0JW02 empty; /* Clear style data wk area*/

      AB0J122(); /* Clear all TSQ's*/

      ABWREC.ABWSWC = "N"; /* Reset EOF indicator*/
      ABWREC.ABWIDX1 = 0; /* Set store pointer*/

      /* ------------------------------------------------------------*/
                   /* (Store All Styles Retrieved)*/
      /* ------------------------------------------------------------*/
      while (ABWREC.ABWSWC == "N") /* Until all rows processed*/

        AB0J113(); /* Process style rows*/

        if (converseVar.validationMsgNum != 0) /* Errors found*/
          return; /* Exit to display map*/
        end

      end

      AB0JW01.AB0JWMST = ABWREC.ABWIDX1; /* Save interim sty count*/

      AB0J115(); /* Close style cursor*/

      /* ------------------------------------------------------------*/
               /* (Check for Multiple-Factory Styles)*/
      /* ------------------------------------------------------------*/
      ABWREC.ABWIDX2 = 1; /* Reset loop index*/
      while (ABWREC.ABWIDX2 <= AB0JW01.AB0JWMST) /* Process all styles*/

        AB0J116(); /* Set select style*/

        if (converseVar.validationMsgNum == 0) /* No errors found*/

          ABWREC.ABWSWC = "N"; /* Reset EOF indicator*/
          ABWREC.ABWIDX3 = 0; /* Set style counter*/

          while (ABWREC.ABWSWC == "N") /* Until all rows processed*/

            AB0J117(); /* Process style rows*/

            if (converseVar.validationMsgNum != 0) /* Errors found*/
              return; /* Exit to display map*/
            end

          end

          if (ABWREC.ABWIDX3 > 1) /* Multiple factory style*/
            AB0JW02.AB0JWMSI[ABWIDX2] = "Y"; /* Mult fcty sty*/
          end

        end

        AB0J118(); /* Close style cursor*/

        ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Loop through*/

      end

      /* ------------------------------------------------------------*/
         /* (check all styles for matching DABUY.VBSIZE01 rows)*/
      /* ------------------------------------------------------------*/
      ABWREC.ABWIDX2 = 1; /* Reset loop index*/
      while (ABWREC.ABWIDX2 <= AB0JW01.AB0JWMST) /* Process all styles*/

        AB0J119(); /* Set select VBSIZE01 rows*/

        if (converseVar.validationMsgNum == 0) /* No errors found*/

          ABWREC.ABWIDX3 = 0; /* Set size counter*/

          AB0J11A(); /* Fetch first size row*/

          if (ABWREC.ABWIDX3 > 0) /* Style with size row/s*/
            AB0JW02.AB0JWQID[ABWIDX2] = "Y"; /* Valid style*/
          end

        end

        AB0J11B(); /* Close style cursor*/


        ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Loop through*/

      end

      /* ------------------------------------------------------------*/
         /* (resize style array to contain only valid styles)*/
      /* ------------------------------------------------------------*/
      set AB0JW04 empty; /* Initialize wk area*/
      ABWREC.ABWIDX1 = 0; /* Initialize store index*/
      move AB0JW02.AB0JWSTY to AB0JW04.AB0JWSTY[1] for all; /* To wk area*/
      set AB0JW02 empty; /* Initialize map wk area*/

      ABWREC.ABWIDX2 = 1; /* Reset loop index*/
      while (ABWREC.ABWIDX2 <= AB0JW01.AB0JWMST) /* Process all styles*/

        if (AB0JW04.AB0JWQID[ABWIDX2] == "Y") /* Valid style*/
          ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Store index*/
          AB0JW02.AB0JWSTY[ABWIDX1] = AB0JW04.AB0JWSTY[ABWIDX2];
        end

        ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Loop through*/

      end

    end


    AB0JW01.AB0JWMST = ABWREC.ABWIDX1; /* Save final sty count*/


  end



   /* ------------------------------------------------------------*/
    /* Check for specific style to retrieve.*/
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is enter) /* Enter key pressed*/

    if (AB0JW01.AB0JWUPD == " ") /* DB update indicator inactive*/

      if (XP1REC.SY1STNBR != " ") /* Specific style requested*/

        if (XP1REC.SY1STNBR in AB0JW02.SY1STNBR) /* Style found*/

          AB0JW01.AB0JWCST = sysVar.arrayIndex; /* Set current style*/

        else /* Style not found*/

          AB0JS01(); /* Clear map detail*/

          set AB0JM001.SY1STNBR cursor; /* Set cursor position*/
          ABWREC.ABWPRCSN = "110 "; /* Process number*/
          converseLib.validationFailed(5); /* Indicate no data to display*/
          return; /* Exit to next process*/

        end

      else

        AB0JW01.AB0JWCST = 1; /* Set current style to 1*/

      end

    end


  end



   /* ------------------------------------------------------------*/
             /* Obtain Data from DABUY.VBSIZE01.*/
   /* Select and open the cursor for the set to be formatted.*/
   /* Fetch and format the data in the page.*/
   /* If the page is full, add the page to the storage queue.*/
   /* At the end of the set, add any partial page to the queue,*/
      /* then close the selected set cursor.*/
   /* ------------------------------------------------------------*/


  AB0J122(); /* Purge any temporary storage*/

  AB0JW01.AB6XSTYN = " "; /* Reset Blank/Finished style wk*/
  AB0JW01.AB6XCOLR = " "; /* Reset Blank/Finished color wk*/


  AB0J123(); /* Select Set DABUY.VBSIZE01 data*/


  if (converseVar.validationMsgNum == 0) /* No errors found*/

    set AB0JW03 empty; /* Clear map work area*/
    ABWREC.ABWSWC = "N"; /* Reset EOF indicator*/
    ABWREC.ABWIXM = 1; /* Set store pointer*/
    AB0JW01.AB0JWSIX = 0; /* Initialize pointer save area*/

           /* (Store All Size Break Rows Retrieved)*/

    while (ABWREC.ABWSWC == "N") /* Until all rows processed*/

      AB0J124(); /* Process size rows*/

      if (ABWREC.ABWIXM > ABWREC.ABWMPMAX) /* Page is full*/
        AB0J126(); /* Add page to TSQ*/
      end

      if (converseVar.validationMsgNum != 0) /* Errors found*/
        ABWREC.ABWSWC = "Y"; /* Force loop end*/
      end

    end

  end


  if (converseVar.validationMsgNum == 0 /* No errors found*/
   && AB0JW01.AB0JWSIX > 1)             /* Page was formatted*/

    ABWREC.ABWIDX2 = AB0JW01.AB0JWSIX; /* Set start line*/
    while (ABWREC.ABWIDX2 <= ABWREC.ABWMPMAX) /* Until end of lines*/

      AB0JW03.AB0JWBSC[ABWIDX2] = "***"; /* Indicate unused line*/

      ABWREC.ABWIDX2 = ABWREC.ABWIDX2 + 1; /* Increment line index*/

    end

    AB0J126(); /* Add page to temporary storage*/

  end


  if (converseVar.validationMsgNum == 0) /* No errors found*/
    AB0J125(); /* Close size cursor*/
  end


  if (AB0JW01.AB0JWUPD == " ") /* DB update indicator inactive*/
    ABWREC.ABWTSP = 1; /* Set TSQ page to 1*/
  else /* DB update indicator active*/
    ABWREC.ABWTSP = AB0JW01.AB0JWTSP; /* Restore current TSQ page*/
  end




   /* ------------------------------------------------------------*/
   /* Check Obtain Data Status.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    ABWREC.ABWSWR = "N"; /* Request for data completed*/
    AB0JW01.AB0JWSTS = " "; /* Reset style select indicator*/
    AB0JW01.AB0JWUPD = " "; /* Reset DB update indicator*/

  end


end // end AB0J110

// Select set DABUY.VABSTY01
Function AB0J112()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

  set AB2REC empty; /* Clear record work area*/

     /* (Sched/Avail-Specialist code)*/
  if (XP1REC.PG1SC4CD != " ")
    AB2REC.PG1SC4CD = XP1REC.PG1SC4CD;
  else
    AB2REC.PG1SC4CD = "**";
  end

          /* (Style No.)*/
  if (XP1REC.SY1STNBR != " ") /* Specific style set requested*/
    AB2REC.SY1STNBR = XP1REC.SY1STNBR;
  else
    AB2REC.SY1STNBR = "******"; /* Obtain all styles*/
  end

          /* (Factory code)*/
  if (XP1REC.FY1FCTYC != " ")
    AB2REC.FY1FCTYC = XP1REC.FY1FCTYC;
  else
    AB2REC.FY1FCTYC = "****";
  end

          /* (Customer id)*/
  if (XP1REC.PC2CUXID != " ")
    AB2REC.PC2CUXID = XP1REC.PC2CUXID;
  else
    AB2REC.PC2CUXID = "*****";
  end

          /* (Dimension)*/
  AB2REC.XDMCD = "00";

          /* (Warehouse Cd)*/
  AB2REC.XWHCD = "**";

           /* (PO type)*/
  AB2REC.PC4ORTYP = "**";

            /* (Gender Age)*/
  AB2REC.XGACD = "**";

          /* (Product Category)*/
  AB2REC.XPCCD = "**";

          /* (Silhouette)*/
  AB2REC.XSUCD = "**";

        /* (Quota Cat Code)*/
  AB2REC.XQTCD[1] = "***";
  AB2REC.XQTCD[2] = "***";

       /* (Fy Fcty Prgn Fl)*/
  AB2REC.FY1FRGN = "*";

         /* (FY6FOCD)*/
  AB2REC.FY6FOCD = "**";

         /* (AB6BKFNI)*/
  AB2REC.AB6BKFNI = "*";

         /* (Season code)*/
  AB2REC.XSECD = XP1REC.XSECD;

         /* (Season year)*/
  AB2REC.XSNYR = XP1REC.XSNYR;



   /* *==========================**/
   /* *  Access DABUY.VABSTY01   **/
   /* *==========================**/

  try
    call "IO3560" ("S1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "112 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB2REC.AB2KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0J112

// Process DABUY.VABSTY01
Function AB0J113()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal  array display line.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VABSTY01  **/
   /* *=========================**/

  try
    call "IO3560" ("N1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000") /* successful call*/


    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/

      if (AB2REC.XOWCD != "00")
        return;
      end

      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Increment store pointer*/

      if (ABWREC.ABWIDX1 > AB0JW01.AB0JWSLM) /* Max style array size*/
        AB0JS01(); /* Clear map detail area*/
        converseLib.validationFailed(70); /* Indicate limit exceeded*/
        ABWREC.ABWPRCSN = "113 "; /* Process number*/
        return; /* Return to calling process*/
      end

      AB0JW02.SY1STNBR[ABWIDX1] = AB2REC.SY1STNBR; /* style number*/
      AB0JW02.XDMCD[ABWIDX1] = AB2REC.XDMCD; /* dimension code*/
      AB0JW02.XWHCD[ABWIDX1] = AB2REC.XWHCD; /* warehouse code*/
      AB0JW02.XDVCD[ABWIDX1] = AB2REC.XDVCD; /* division code*/
      AB0JW02.XSECD[ABWIDX1] = AB2REC.XSECD; /* season code*/
      AB0JW02.XSNYR[ABWIDX1] = AB2REC.XSNYR; /* season year range*/
      AB0JW02.FY1FCTYC[ABWIDX1] = AB2REC.FY1FCTYC; /* factory code*/
      AB0JW02.PC4ORTYP[ABWIDX1] = AB2REC.PC4ORTYP; /* p.o. type*/
      AB0JW02.PC2CUXID[ABWIDX1] = AB2REC.PC2CUXID; /* cust x-ref code*/
      AB0JW02.PG1SC4CD[ABWIDX1] = AB2REC.PG1SC4CD; /* scheduler code*/
      AB0JW02.XGACD[ABWIDX1] = AB2REC.XGACD; /* G/A code*/
      AB0JW02.XPCCD[ABWIDX1] = AB2REC.XPCCD; /* cat code*/
      AB0JW02.XSUCD[ABWIDX1] = AB2REC.XSUCD; /* sil code*/
      AB0JW02.XQTCD1[ABWIDX1] = AB2REC.XQTCD[1]; /* qual code*/
      AB0JW02.XQTCD2[ABWIDX1] = AB2REC.XQTCD[2]; /* qual code*/
      AB0JW02.FY1FRGN[ABWIDX1] = AB2REC.FY1FRGN; /* fcty flag*/
      AB0JW02.FY6FOCD[ABWIDX1] = AB2REC.FY6FOCD; /* fld ofc code*/
      AB0JW02.AB6BKFNI[ABWIDX1] = AB2REC.AB6BKFNI; /* blnk/fin ind*/

      return; /* Return to calling process*/

    end


    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      ABWREC.ABWSWC = "Y"; /* Indicate end of file*/

      return; /* Return to previous process*/

    end
  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "113 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Return to previous process*/

end // end AB0J113

// Close DABUY.VABSTY01 cursor
Function AB0J115()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VABSTY01  **/
   /* *=========================**/

  try
    call "IO3560" ("C1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/


   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   || sysVar.errorCode != "00000000") /* or unsuccessful call*/

    TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "115 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0J115

// Select set DABUY.VABSTY01 (2)
Function AB0J116()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

  set AB2REC empty; /* Clear record work area*/

          /* (Style No.)*/
  AB2REC.SY1STNBR = AB0JW02.SY1STNBR[ABWIDX2];

          /* (Warehouse Cd)*/
  AB2REC.XWHCD = AB0JW02.XWHCD[ABWIDX2];

         /* (Season code)*/
  AB2REC.XSECD = AB0JW02.XSECD[ABWIDX2];

         /* (Season year)*/
  AB2REC.XSNYR = AB0JW02.XSNYR[ABWIDX2];

          /* (Factory code)*/
  AB2REC.FY1FCTYC = "****"; /* Get all factories*/

           /* (PO type)*/
  AB2REC.PC4ORTYP = AB0JW02.PC4ORTYP[ABWIDX2];

          /* (Customer id)*/
  AB2REC.PC2CUXID = AB0JW02.PC2CUXID[ABWIDX2];

     /* (Sched/Avail-Specialist code)*/
  AB2REC.PG1SC4CD = AB0JW02.PG1SC4CD[ABWIDX2];

            /* (Gender Age)*/
  AB2REC.XGACD = AB0JW02.XGACD[ABWIDX2];

          /* (Product Category)*/
  AB2REC.XPCCD = AB0JW02.XPCCD[ABWIDX2];

          /* (Silhouette)*/
  AB2REC.XSUCD = AB0JW02.XSUCD[ABWIDX2];

        /* (Quota Cat Code)*/
  AB2REC.XQTCD[1] = AB0JW02.XQTCD1[ABWIDX2];
  AB2REC.XQTCD[2] = AB0JW02.XQTCD2[ABWIDX2];

       /* (Fy Fcty Prgn Fl)*/
  AB2REC.FY1FRGN = AB0JW02.FY1FRGN[ABWIDX2];

         /* (FY6FOCD)*/
  AB2REC.FY6FOCD = AB0JW02.FY6FOCD[ABWIDX2];

         /* (AB6BKFNI)*/
  AB2REC.AB6BKFNI = AB0JW02.AB6BKFNI[ABWIDX2];



   /* *==========================**/
   /* *  Access DABUY.VABSTY01   **/
   /* *==========================**/

  try
    call "IO3560" ("S1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "116 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB2REC.AB2KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0J116

// Process DABUY.VABSTY01 rows(2)
Function AB0J117()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal  array display line.*/
   /* ------------------------------------------------------------*/

   /* *=========================**/
   /* *  Access DABUY.VABSTY01  **/
   /* *=========================**/

  try
    call "IO3560" ("N1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/

   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/

      if (AB2REC.XOWCD != "00")
        return;
      end

      ABWREC.ABWIDX3 = ABWREC.ABWIDX3 + 1; /* Increment style counter*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
      ABWREC.ABWSWC = "Y"; /* Indicate end of file*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "117 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  exit stack; /* Return to previous process*/

end // end AB0J117

// Close DABUY.VABSTY01 crsor (2)
Function AB0J118()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VABSTY01  **/
   /* *=========================**/

  try
    call "IO3560" ("C1", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/


   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   || sysVar.errorCode != "00000000") /* or unsuccessful call*/

    TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "118 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0J118

// Select set DABUY.VBSIZE01
Function AB0J119()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

  set AB6REC empty; /* Clear record work area*/

          /* (Style No.)*/
  AB6REC.SY1STNBR = AB0JW02.SY1STNBR[ABWIDX2]; /* style code*/

          /* (Wildcard color ID)*/
  AB6REC.SY2CLRID = "***"; /* Color ID*/

          /* (Dimension Cd)*/
  AB6REC.XDMCD = AB0JW02.XDMCD[ABWIDX2];

          /* (Warehouse Cd)*/
  AB6REC.XWHCD = AB0JW02.XWHCD[ABWIDX2];

           /* (owner group)*/
  AB6REC.XOWCD = "00";

          /* (Division Cd)*/
  AB6REC.XDVCD = AB0JW02.XDVCD[ABWIDX2];

         /* (Season code)*/
  AB6REC.XSECD = AB0JW02.XSECD[ABWIDX2];

         /* (Season year)*/
  AB6REC.XSNYR = AB0JW02.XSNYR[ABWIDX2];

          /* (Factory code)*/
  AB6REC.FY1FCTYC = AB0JW02.FY1FCTYC[ABWIDX2];

           /* (PO type)*/
  AB6REC.PC4ORTYP = AB0JW02.PC4ORTYP[ABWIDX2];

          /* (Customer id)*/
  AB6REC.PC2CUXID = AB0JW02.PC2CUXID[ABWIDX2];

           /* (Buy Month)*/
  AB6REC.AB3BUYMO = XP1REC.AB3BUYMO;

           /* (Buy Status)*/
  if (AB0JW02.AB6BKFNI[ABWIDX2] == "B") /* blank style*/
    AB6REC.AB3BUYST = "T"; /* buy status*/
    AB6REC.AB6BYTYP = "B"; /* action type*/
  else
    if (AB0JW02.AB6BKFNI[ABWIDX2] == "S") /* screen style*/
      AB6REC.AB3BUYST = "K"; /* buy status*/
      AB6REC.AB6BYTYP = "B"; /* action type*/
    else
      AB6REC.AB3BUYST = "Z"; /* Indicate size break status*/
    end
  end



   /* *==========================**/
   /* *  Access DABUY.VBSIZE01   **/
   /* *==========================**/

  try
    call "IO3590" ("S1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "119 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB6REC.AB6KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0J119

// Process DABUY.VBSIZE01 rows
Function AB0J11A()
   /* ------------------------------------------------------------*/
   /* Fetch the first from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VBSIZE01  **/
   /* *=========================**/

  try
    call "IO3590" ("N1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/

      ABWREC.ABWIDX3 = ABWREC.ABWIDX3 + 1; /* Indicate row retrieved*/
      return; /* Return to previous process*/

    end


    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      return; /* Return to previous process*/

    end

  end



   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "11A "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Return to previous process*/

end // end AB0J11A

// Close DABUY.VBSIZE01 cursor
Function AB0J11B()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VBSIZE01  **/
   /* *=========================**/

  try
    call "IO3590" ("C1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/


   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   || sysVar.errorCode != "00000000") /* or unsuccessful call*/

    TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "11B "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0J11B

// Format and display the map1
Function AB0J120()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/



  if (ABWREC.ABWFIRST != " ") /* Not first time through*/

    if (converseVar.validationMsgNum == 0) /* No error message to display*/

      AB0J121(); /* Format map page data from TSQ*/

      if (converseVar.validationMsgNum == 0) /* No error message to display*/
        if (ABWREC.ABWNMO == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(ABWREC.ABWNMO);
        end /* Information message number*/
      end

    end

  end



  if (converseVar.validationMsgNum == 0 /* No errors found*/
   && ABWREC.ABWFIRST != " ")           /* Not first time*/
    set AB0JM001.AB0JMQP1[1] cursor; /* Set cursor at map dtl area*/
  end



  if (converseVar.validationMsgNum != 0) /* Message to display*/
    set AB0JM001 alarm; /* Indicate sound alarm*/
    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  end


  AB0JM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  AB0JM001.CATOAP = COMMAREA.CATOAP; /* Fast path information*/
  AB0JM001.CAITEM = COMMAREA.CAITEM; /* Fast path information*/



   /* *==============================**/
   /* * Check security authorization **/
   /* *==============================**/

  if (COMMAREA.CACLVL[1] == "N" /* No data changes allowed*/
   && COMMAREA.CACLVL[2] == "Y") /* May change Scheduler cd*/

               /* (User has Inquiry Profile)*/

    if (converseVar.validationMsgNum == 0 /* No errors found*/
     || converseVar.validationMsgNum == 5) /* No data to display*/
      set AB0JM001.PG1SC4CD cursor; /* Position cursor at userid fld*/
    end

    if (ABWREC.TA5TSQIX == 0) /* No data to display*/

      ABWREC.ABWIX2 = 1; /* Initialize loop index*/
      while (ABWREC.ABWIX2 <= 5) /* Protect map dtl flds*/
        set AB0JM001.AB0JMQP1[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP2[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP3[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP4[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP5[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP6[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP7[ABWIX2] skip, invisible;
        set AB0JM001.AB0JMQP8[ABWIX2] skip, invisible;
        ABWREC.ABWIX2 = ABWREC.ABWIX2 + 1; /* Loop through*/
      end

    else

      ABWREC.ABWIX2 = 1; /* Initialize loop index*/
      while (ABWREC.ABWIX2 <= 5) /* Protect map dtl flds*/
        set AB0JM001.AB0JMQP1[ABWIX2] skip;
        set AB0JM001.AB0JMQP2[ABWIX2] skip;
        set AB0JM001.AB0JMQP3[ABWIX2] skip;
        set AB0JM001.AB0JMQP4[ABWIX2] skip;
        set AB0JM001.AB0JMQP5[ABWIX2] skip;
        set AB0JM001.AB0JMQP6[ABWIX2] skip;
        set AB0JM001.AB0JMQP7[ABWIX2] skip;
        set AB0JM001.AB0JMQP8[ABWIX2] skip;
        ABWREC.ABWIX2 = ABWREC.ABWIX2 + 1; /* Loop through*/
      end

    end

  else

                /* (User has Scheduler Profile)*/

    if (COMMAREA.CACLVL[1] == "Y" /* Data changes allowed*/
     && COMMAREA.CACLVL[2] == "N") /* May not change Scheduler cd*/

      set AB0JM001.PG1SC4CD skip; /* Protect userid fld*/

      if (converseVar.validationMsgNum == 5 /* No data to display*/
       || ABWREC.ABWSWU == " ")             /* First time security chk*/
        set AB0JM001.SY1STNBR cursor; /* Cursor position*/
      else
        if (converseVar.validationMsgNum == 0)
          set AB0JM001.AB0JMQP1[1] cursor; /* Cursor position*/
        end
      end

    else

                  /* (User has Supervisory Profile)*/

      if (COMMAREA.CACLVL[1] == "Y" /* Data changes allowed*/
       && COMMAREA.CACLVL[2] == "Y") /* May change Scheduler cd*/

        if (converseVar.validationMsgNum == 5 /* No data to display*/
         || ABWREC.ABWSWU == " ")             /* First time security chk*/
          set AB0JM001.PG1SC4CD cursor; /* Position cursor*/
        else
          if (converseVar.validationMsgNum == 0)
            set AB0JM001.AB0JMQP1[1] cursor; /* Cursor position*/
          end
        end

      end
    end
  end


  ABWREC.ABWSWU = "N"; /* Set security ind*/


  converse AB0JM001 ;


   /* ----------------------------------------------------------*/
    /* Clear Message Work Area and Save Fast Path Information*/
   /* ----------------------------------------------------------*/

  ABWREC.ABWNMO = 0; /* Reset information message number*/

  COMMAREA.CATOAP = AB0JM001.CATOAP; /* Fast path information*/
  COMMAREA.CAITEM = AB0JM001.CAITEM; /* Fast path information*/


end // end AB0J120

// Format Map1 Data
Function AB0J121()
   /* ------------------------------------------------------------*/
   /* Clear Map for New Data to Display.*/
   /* ------------------------------------------------------------*/

  set AB0JM001 initial; /* Clear map for display*/


   /* ------------------------------------------------------------*/
   /* Format Map Header Information from XP1REC fields.*/
   /* ------------------------------------------------------------*/

  AB0JM001.PG1SC4CD = XP1REC.XXXUSER; /* Userid*/
  AB0JM001.XSECD = XP1REC.XSECD; /* Season cd*/
  AB0JM001.XSNYR = XP1REC.XSNYR; /* Season yr*/
  AB0JM001.AB3BUYMO = XP1REC.XP1CBYMO; /* Buy mo*/
  AB0JM001.SY1STNBR = XP1REC.SY1STNBR; /* Style no.*/
  AB0JM001.SY1SSTNM = XP1REC.SY1SSTNM; /* Style name*/
  AB0JM001.FY1FCTYC = XP1REC.FY1FCTYC; /* Factory cd*/
  AB0JM001.PC2CUXID = XP1REC.PC2CUXID; /* cust xref*/

  AB0JM001.AB0JMPKF = AB0JW01.AB0JWPKF; /* Pack Factor Qty*/

  AB0JM001.AB0JMCSY = AB0JW02.SY1STNBR[AB0JWCST]; /* Current style*/
  AB0JM001.AB0JMFCD = AB0JW02.FY1FCTYC[AB0JWCST]; /* Fcty cd*/
  AB0JM001.AB0JM-CURR-XREF = AB0JW02.PC2CUXID[AB0JWCST]; /* cust xref*/

  if (AB0JW02.AB0JWMSI[AB0JWCST] == "Y") /* Current style has multi fctys*/
    set AB0JM001.AB0JMMFS initialAttributes; /* Show message*/
  else
    set AB0JM001.AB0JMMFS skip, invisible; /* Darken message*/
  end

  AB0JM001.AB0JMSTY = AB0JW01.AB6XSTYN; /* Blank/Finished Style*/
  AB0JM001.AB0JMSSN = AB0JW01.AB0JWFSN; /* Blank/Finished Style name*/

  if (AB0JW01.AB6XSTYN == " " /* No Blank/Finished Style*/
   && AB0JW01.AB6XCOLR == " ") /* and no color cd*/

    set AB0JM001.AB0JMBC1 skip, invisible; /* Protect,dark headings*/
    set AB0JM001.AB0JMSC1 skip, invisible; /* Protect,dark headings*/
    set AB0JM001.AB0JMSTY skip, invisible; /* Protect,dark headings*/
    set AB0JM001.AB0JMSSN skip, invisible; /* Protect,dark headings*/
    set AB0JM001.AB0JMBC2 skip, invisible; /* Protect,dark headings*/

  else

    set AB0JM001.AB0JMBC1 initialAttributes; /* Reset attribute*/
    set AB0JM001.AB0JMSC1 initialAttributes; /* Reset attribute*/
    set AB0JM001.AB0JMSTY initialAttributes; /* Reset attribute*/
    set AB0JM001.AB0JMSSN initialAttributes; /* Reset attribute*/
    set AB0JM001.AB0JMBC2 initialAttributes; /* Reset attribute*/

  end



   /* ------------------------------------------------------------*/
   /* Check if there are pages to display. If none, set message*/
     /* and redisplay map.*/
   /* ------------------------------------------------------------*/


  if (ABWREC.TA5TSQIX == 0) /* No data to display*/

    AB0JS01(); /* Clear detail data from map*/

    set AB0JM001.XSECD cursor; /* Set cursor position*/
    ABWREC.ABWPRCSN = "121 "; /* Process number*/
    converseLib.validationFailed(5); /* Indicate no data to display*/
    return; /* Return to calling process*/

  end


  set AB0JM001.AB0JMQP1[1] cursor; /* Set cursor position*/


   /* ------------------------------------------------------------*/
   /* Display the Size Descriptions.*/
   /* ------------------------------------------------------------*/

  ABWREC.ABWIXM = 1; /* Initialize loop index*/


  while (ABWREC.ABWIXM <= 8) /* Display all sizes*/

    AB0JM001.SY4IDDSC[ABWIXM] = AB0JW01.SY4IDDSC[ABWIXM];
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/

  end



   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the map detail data obtained.*/
   /* ------------------------------------------------------------*/


  AB0J127(); /* Obtain TSQ page*/


  ABWREC.ABWIXM = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Not Unused line*/

      AB0JM001.AB0JMBSC[ABWIXM] = AB0JW03.AB0JWBSC[ABWIXM]; /* Ln HD1*/
      AB0JM001.AB0JMSSC[ABWIXM] = AB0JW03.AB0JWSSC[ABWIXM]; /* Ln HD1*/
      AB0JM001.AB0JMQS1[ABWIXM] = AB0JW03.AB0JWQS1[ABWIXM]; /* Qty 1*/
      AB0JM001.AB0JMQS2[ABWIXM] = AB0JW03.AB0JWQS2[ABWIXM]; /* Qty 2*/
      AB0JM001.AB0JMQS3[ABWIXM] = AB0JW03.AB0JWQS3[ABWIXM]; /* Qty 3*/
      AB0JM001.AB0JMQS4[ABWIXM] = AB0JW03.AB0JWQS4[ABWIXM]; /* Qty 4*/
      AB0JM001.AB0JMQS5[ABWIXM] = AB0JW03.AB0JWQS5[ABWIXM]; /* Qty 5*/
      AB0JM001.AB0JMQS6[ABWIXM] = AB0JW03.AB0JWQS6[ABWIXM]; /* Qty 6*/
      AB0JM001.AB0JMQS7[ABWIXM] = AB0JW03.AB0JWQS7[ABWIXM]; /* Qty 7*/
      AB0JM001.AB0JMQS8[ABWIXM] = AB0JW03.AB0JWQS8[ABWIXM]; /* Qty 8*/
      AB0JM001.AB0JMQST[ABWIXM] = AB0JW03.AB0JWQST[ABWIXM]; /* Totals*/

      AB0JM001.AB0JMBPC[ABWIXM] = AB0JW03.AB0JWBPC[ABWIXM]; /* Ln HD1*/
      AB0JM001.AB0JMSPC[ABWIXM] = AB0JW03.AB0JWSPC[ABWIXM]; /* Ln HD1*/
      AB0JM001.AB0JMQP1[ABWIXM] = AB0JW03.AB0JWQP1[ABWIXM]; /* Qty 1*/
      AB0JM001.AB0JMQP2[ABWIXM] = AB0JW03.AB0JWQP2[ABWIXM]; /* Qty 2*/
      AB0JM001.AB0JMQP3[ABWIXM] = AB0JW03.AB0JWQP3[ABWIXM]; /* Qty 3*/
      AB0JM001.AB0JMQP4[ABWIXM] = AB0JW03.AB0JWQP4[ABWIXM]; /* Qty 4*/
      AB0JM001.AB0JMQP5[ABWIXM] = AB0JW03.AB0JWQP5[ABWIXM]; /* Qty 5*/
      AB0JM001.AB0JMQP6[ABWIXM] = AB0JW03.AB0JWQP6[ABWIXM]; /* Qty 6*/
      AB0JM001.AB0JMQP7[ABWIXM] = AB0JW03.AB0JWQP7[ABWIXM]; /* Qty 7*/
      AB0JM001.AB0JMQP8[ABWIXM] = AB0JW03.AB0JWQP8[ABWIXM]; /* Qty 8*/
      AB0JM001.AB0JMQPT[ABWIXM] = AB0JW03.AB0JWQPT[ABWIXM]; /* Totals*/

      if (AB0JW03.AB0JWFBL[ABWIXM] == "B")

        set AB0JM001.AB0JM-ADD-BUY[ABWIXM] skip;
        set AB0JM001.AB0JMQA1[ABWIXM] normal;
        set AB0JM001.AB0JMQA2[ABWIXM] normal;
        set AB0JM001.AB0JMQA3[ABWIXM] normal;
        set AB0JM001.AB0JMQA4[ABWIXM] normal;
        set AB0JM001.AB0JMQA5[ABWIXM] normal;
        set AB0JM001.AB0JMQA6[ABWIXM] normal;
        set AB0JM001.AB0JMQA7[ABWIXM] normal;
        set AB0JM001.AB0JMQA8[ABWIXM] normal;
        set AB0JM001.AB0JMQAT[ABWIXM] normal;

        AB0JS26(); /* check for additional buy row*/

        if (SQLCA.VAGen_SQLCODE == 0)
          AB0JM001.AB0JMQA1[ABWIXM] = AB0JW03.AB0JWQA1[ABWIXM];
          AB0JM001.AB0JMQA2[ABWIXM] = AB0JW03.AB0JWQA2[ABWIXM];
          AB0JM001.AB0JMQA3[ABWIXM] = AB0JW03.AB0JWQA3[ABWIXM];
          AB0JM001.AB0JMQA4[ABWIXM] = AB0JW03.AB0JWQA4[ABWIXM];
          AB0JM001.AB0JMQA5[ABWIXM] = AB0JW03.AB0JWQA5[ABWIXM];
          AB0JM001.AB0JMQA6[ABWIXM] = AB0JW03.AB0JWQA6[ABWIXM];
          AB0JM001.AB0JMQA7[ABWIXM] = AB0JW03.AB0JWQA7[ABWIXM];
          AB0JM001.AB0JMQA8[ABWIXM] = AB0JW03.AB0JWQA8[ABWIXM];

          AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]           + AB0JW03.AB0JWQA1[ABWIXM]           + AB0JW03.AB0JWQA2[ABWIXM]           + AB0JW03.AB0JWQA3[ABWIXM]           + AB0JW03.AB0JWQA4[ABWIXM]           + AB0JW03.AB0JWQA5[ABWIXM]           + AB0JW03.AB0JWQA6[ABWIXM]           + AB0JW03.AB0JWQA7[ABWIXM]           + AB0JW03.AB0JWQA8[ABWIXM]           + AB0JW03.AB0JWQA9[ABWIXM]           + AB0JW03.AB0JWQAA[ABWIXM];
          AB0JM001.AB0JMQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM];

        end

      end
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end



   /* ------------------------------------------------------------*/
   /* Protect All Unused Columns/Lines on Map Detail Area.*/
   /* ------------------------------------------------------------*/

  AB0JS05();

   /* **************************/
  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Not Unused line*/
      AB0JM002.AB0JMQS9[ABWIXM] = AB0JW03.AB0JWQS9[ABWIXM]; /* size 9*/
      AB0JM002.AB0JMQSA[ABWIXM] = AB0JW03.AB0JWQSA[ABWIXM]; /* size 10*/
      AB0JM002.AB0JMQST[ABWIXM] = AB0JW03.AB0JWQST[ABWIXM]; /* Totals*/
      AB0JM002.AB0JMQP9[ABWIXM] = AB0JW03.AB0JWQP9[ABWIXM]; /* size 9*/
      AB0JM002.AB0JMQPA[ABWIXM] = AB0JW03.AB0JWQPA[ABWIXM]; /* size 10*/
      AB0JM002.AB0JMQPT[ABWIXM] = AB0JW03.AB0JWQPT[ABWIXM]; /* Totals*/

      if (AB0JW03.AB0JWFBL[ABWIXM] == "B") /* style is a blank*/
        set AB0JM002.AB0JM-ADD-BUY[ABWIXM] skip;
        set AB0JM002.AB0JMQA9[ABWIXM] normal;
        set AB0JM002.AB0JMQAA[ABWIXM] normal;
        set AB0JM002.AB0JMQAT[ABWIXM] normal;

        AB0JS26(); /* check for additional buy row*/

        if (SQLCA.VAGen_SQLCODE == 0)
          AB0JM002.AB0JMQA9[ABWIXM] = AB0JW03.AB0JWQA9[ABWIXM];
          AB0JM002.AB0JMQAA[ABWIXM] = AB0JW03.AB0JWQAA[ABWIXM];

          AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]           + AB0JW03.AB0JWQA1[ABWIXM]           + AB0JW03.AB0JWQA2[ABWIXM]           + AB0JW03.AB0JWQA3[ABWIXM]           + AB0JW03.AB0JWQA4[ABWIXM]           + AB0JW03.AB0JWQA5[ABWIXM]           + AB0JW03.AB0JWQA6[ABWIXM]           + AB0JW03.AB0JWQA7[ABWIXM]           + AB0JW03.AB0JWQA8[ABWIXM]           + AB0JW03.AB0JWQA9[ABWIXM]           + AB0JW03.AB0JWQAA[ABWIXM];
          AB0JM002.AB0JMQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM];

        end
      end
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end

end // end AB0J121

// Purge any temporary storage
Function AB0J122()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/


  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/



  call "TA0050" (AB0JW03, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
                                        /* ; subroutine*/


  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    ABWREC.ABWPRCSN = "122 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  end



  ABWREC.ABWTSP = 0; /* Reset current page number*/
  ABWREC.TA5TSQIX = 0; /* Reset highest page number*/


end // end AB0J122

// Select set DABUY.VBSIZE01
Function AB0J123()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

  set AB6REC empty; /* Clear record work area*/

          /* (Style No.)*/
  AB6REC.SY1STNBR = AB0JW02.SY1STNBR[AB0JWCST]; /* style code*/

          /* (Wildcard color ID)*/
  AB6REC.SY2CLRID = "***"; /* Color ID*/

          /* (Dimension Cd)*/
  AB6REC.XDMCD = AB0JW02.XDMCD[AB0JWCST];

           /* (Own group)*/
  AB6REC.XOWCD = "**";

          /* (Warehouse Cd)*/
  AB6REC.XWHCD = AB0JW02.XWHCD[AB0JWCST];

          /* (Division Cd)*/
  AB6REC.XDVCD = AB0JW02.XDVCD[AB0JWCST];

         /* (Season code)*/
  AB6REC.XSECD = AB0JW02.XSECD[AB0JWCST];

         /* (Season year)*/
  AB6REC.XSNYR = AB0JW02.XSNYR[AB0JWCST];

          /* (Factory code)*/
  AB6REC.FY1FCTYC = AB0JW02.FY1FCTYC[AB0JWCST];

           /* (PO type)*/
  AB6REC.PC4ORTYP = AB0JW02.PC4ORTYP[AB0JWCST];

          /* (Customer id)*/
  AB6REC.PC2CUXID = AB0JW02.PC2CUXID[AB0JWCST];

           /* (Buy Month)*/
  AB6REC.AB3BUYMO = XP1REC.AB3BUYMO;

           /* (Buy Status)*/
  if (AB0JW02.AB6BKFNI[AB0JWCST] == "B") /* blank style*/
    AB6REC.AB3BUYST = "T";
    AB6REC.AB6BYTYP = "B";
  else
    if (AB0JW02.AB6BKFNI[AB0JWCST] == "S") /* screen style*/
      AB6REC.AB3BUYST = "K";
      AB6REC.AB6BYTYP = "B";
    else
      AB6REC.AB3BUYST = "Z"; /* Indicate size break status*/
    end
  end



   /* *==========================**/
   /* *  Access DABUY.VBSIZE01   **/
   /* *==========================**/

  try
    call "IO3590" ("S1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "123 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB6REC.AB6KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0J123

// Process DABUY.VBSIZE01 rows
Function AB0J124()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the internal array display line for*/
      /* TSQ storage.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VBSIZE01  **/
   /* *=========================**/

  try
    call "IO3590" ("N1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/

      if (AB6REC.XOWCD != "00")
        return;
      end

      if (ABWREC.ABWIXM == 1 /* First row retrieved*/
       && ABWREC.TA5TSQIX <= 1) /* and first page to fill*/

        XP1REC.SY2CLRID = AB6REC.SY2CLRID; /* Color id to save*/
        AB0JS02(); /* Obtain size descriptions*/

      end

      AB0JS03(); /* Store size/color data*/

      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

      return; /* Return to calling process*/

    end


    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      ABWREC.ABWSWC = "Y"; /* Indicate end of file*/
      AB0JW01.AB0JWSIX = ABWREC.ABWIXM; /* Save index*/

      return; /* Return to previous process*/

    end

  end



   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "124 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Return to previous process*/

end // end AB0J124

// Close DABUY.VBSIZE01 cursor
Function AB0J125()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VBSIZE01  **/
   /* *=========================**/

  try
    call "IO3590" ("C1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/


   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   || sysVar.errorCode != "00000000") /* or unsuccessful call*/

    TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "125 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0J125

// Write map storage to TSQ
Function AB0J126()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/



  AB0JW03.AB0JWLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application id*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/



  call "TA0050" (AB0JW03, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
                                        /* ;subroutine*/


  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "126 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end



  ABWREC.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/

  ABWREC.ABWIXM = 1; /* Reset display line number*/

  set AB0JW03 empty; /* Clear temporary storage record*/



end // end AB0J126

// Read temporary storage page
Function AB0J127()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/


  AB0JW03.AB0JWLEN = ABWREC.ABWTSL; /* Temporary storage length*/
  TA5REC.TA5APPID = ABWREC.ABWAPPL; /* Application identification*/
  TA5REC.TA5TSQIX = ABWREC.ABWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/


  call "TA0050" (AB0JW03, TA5REC) {isNoRefresh = yes}; /* Temporary storage subroutine*/


  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "127 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    converseLib.validationFailed(5); /* Indicate no data to display*/

    if (AB0JW-MAP-IND == "1")
      AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
      set AB0JM001.PG1SC4CD cursor; /* Fix cursor position*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    else
      AB0JM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
      set AB0JM002.PG1SC4CD cursor; /* Fix cursor position*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end


    exit stack; /* Exit to redisplay map*/

  end


end // end AB0J127

// Format and display the map2
Function AB0J130()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/



  if (ABWREC.ABWFIRST != " ") /* Not first time through*/

    if (converseVar.validationMsgNum == 0) /* No error message to display*/

      AB0J131(); /* Format map page data from TSQ*/

      if (converseVar.validationMsgNum == 0) /* No error message to display*/
        if (ABWREC.ABWNMO == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(ABWREC.ABWNMO);
        end /* Information message number*/
      end

    end

  end



  if (converseVar.validationMsgNum == 0 /* No errors found*/
   && ABWREC.ABWFIRST != " ")           /* Not first time*/
    set AB0JM002.XSECD cursor; /* Set cursor at map dtl area*/
  end



  if (converseVar.validationMsgNum != 0) /* Message to display*/
    set AB0JM002 alarm; /* Indicate sound alarm*/
    AB0JM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  end


  AB0JM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  AB0JM002.CATOAP = COMMAREA.CATOAP; /* Fast path information*/
  AB0JM002.CAITEM = COMMAREA.CAITEM; /* Fast path information*/



   /* *==============================**/
   /* * Check security authorization **/
   /* *==============================**/

  if (COMMAREA.CACLVL[1] == "N" /* No data changes allowed*/
   && COMMAREA.CACLVL[2] == "Y") /* May change Scheduler cd*/

               /* (User has Inquiry Profile)*/

    if (converseVar.validationMsgNum == 0 /* No errors found*/
     || converseVar.validationMsgNum == 5) /* No data to display*/
      set AB0JM002.PG1SC4CD cursor; /* Position cursor at userid fld*/
    end

    if (ABWREC.TA5TSQIX == 0)

      ABWREC.ABWIDX2 = 1;
      while (ABWREC.ABWIDX2 <= 5)
        set AB0JM002.AB0JMQP9[ABWIDX2] skip, invisible;
        set AB0JM002.AB0JMQPA[ABWIDX2] skip, invisible;

        set AB0JM002.AB0JMQS9[ABWIDX2] skip, invisible;
        set AB0JM002.AB0JMQSA[ABWIDX2] skip, invisible;

        set AB0JM002.AB0JMQA9[ABWIDX2] skip, invisible;
        set AB0JM002.AB0JMQAA[ABWIDX2] skip, invisible;
      end

    else

      ABWREC.ABWIDX2 = 1;
      while (ABWREC.ABWIDX2 <= 5)
        set AB0JM002.AB0JMQP9[ABWIDX2] skip;
        set AB0JM002.AB0JMQPA[ABWIDX2] skip;
      end

    end

  else
             /* (User has Scheduler Profile)*/
    if (COMMAREA.CACLVL[1] == "Y" /* data changes allowed*/
     && COMMAREA.CACLVL[2] == "N") /* May not change Scheduler cd*/
      set AB0JM002.PG1SC4CD skip;

      if (converseVar.validationMsgNum == 5 /* No data to display*/
       || ABWREC.ABWSWU == " ")             /* First time security check*/
        set AB0JM002.SY1STNBR cursor;
      else
        if (converseVar.validationMsgNum == 0)
          set AB0JM002.AB0JMQP9[1] cursor;
        end
      end

    else

             /* (User has Supervisor Profile)*/
      if (COMMAREA.CACLVL[1] == "Y" /* data changes allowed*/
       && COMMAREA.CACLVL[2] == "Y") /* May change Scheduler cd*/

        if (converseVar.validationMsgNum == 5 /* No data to display*/
         || ABWREC.ABWSWU == " ")             /* First time security check*/
          set AB0JM002.PG1SC4CD cursor;
        else
          if (converseVar.validationMsgNum == 0)
            set AB0JM002.AB0JMQP9[1] cursor;
          end
        end

      end
    end
  end

  ABWREC.ABWSWU = "N";


  converse AB0JM002 ;


   /* ----------------------------------------------------------*/
    /* Clear Message Work Area and Save Fast Path Information*/
   /* ----------------------------------------------------------*/

  ABWREC.ABWNMO = 0; /* Reset information message number*/

  COMMAREA.CATOAP = AB0JM002.CATOAP; /* Fast path information*/
  COMMAREA.CAITEM = AB0JM002.CAITEM; /* Fast path information*/


end // end AB0J130

// Format Map2 Data
Function AB0J131()
   /* ------------------------------------------------------------*/
   /* Clear Map for New Data to Display.*/
   /* ------------------------------------------------------------*/

  set AB0JM002 initial; /* Clear map for display*/


   /* ------------------------------------------------------------*/
   /* Format Map Header Information from XP1REC fields.*/
   /* ------------------------------------------------------------*/

  AB0JM002.PG1SC4CD = XP1REC.XXXUSER; /* Userid*/
  AB0JM002.XSECD = XP1REC.XSECD; /* Season cd*/
  AB0JM002.XSNYR = XP1REC.XSNYR; /* Season yr*/
  AB0JM002.AB3BUYMO = XP1REC.XP1CBYMO; /* Buy mo*/
  AB0JM002.SY1STNBR = XP1REC.SY1STNBR; /* Style no.*/
  AB0JM002.SY1SSTNM = XP1REC.SY1SSTNM; /* Style name*/
  AB0JM002.FY1FCTYC = XP1REC.FY1FCTYC; /* Factory cd*/
  AB0JM002.PC2CUXID = XP1REC.PC2CUXID; /* cust xref*/

  AB0JM002.AB0JMPKF = AB0JW01.AB0JWPKF; /* Pack Factor Qty*/

  AB0JM002.AB0JMCSY = AB0JW02.SY1STNBR[AB0JWCST]; /* Current style*/
  AB0JM002.AB0JMFCD = AB0JW02.FY1FCTYC[AB0JWCST]; /* Fcty cd*/
  AB0JM002.AB0JM-CURR-XREF = AB0JW02.PC2CUXID[AB0JWCST]; /* cust xref*/

  if (AB0JW02.AB0JWMSI[AB0JWCST] == "Y") /* Current style has multi fctys*/
    set AB0JM002.AB0JMMFS initialAttributes; /* Show message*/
  else
    set AB0JM002.AB0JMMFS skip, invisible; /* Darken message*/
  end

  AB0JM002.AB0JMSTY = AB0JW01.AB6XSTYN; /* Blank/Finished Style*/
  AB0JM002.AB0JMSSN = AB0JW01.AB0JWFSN; /* Blank/Finished Style name*/

  if (AB0JW01.AB6XSTYN == " " /* No Blank/Finished Style*/
   && AB0JW01.AB6XCOLR == " ") /* and no color cd*/

    set AB0JM002.AB0JMBC1 skip, invisible; /* Protect,dark headings*/
    set AB0JM002.AB0JMSC1 skip, invisible; /* Protect,dark headings*/
    set AB0JM002.AB0JMSTY skip, invisible; /* Protect,dark headings*/
    set AB0JM002.AB0JMSSN skip, invisible; /* Protect,dark headings*/
    set AB0JM002.AB0JMBC2 skip, invisible; /* Protect,dark headings*/

  else

    set AB0JM002.AB0JMBC1 initialAttributes; /* Reset attribute*/
    set AB0JM002.AB0JMSC1 initialAttributes; /* Reset attribute*/
    set AB0JM002.AB0JMSTY initialAttributes; /* Reset attribute*/
    set AB0JM002.AB0JMSSN initialAttributes; /* Reset attribute*/
    set AB0JM002.AB0JMBC2 initialAttributes; /* Reset attribute*/

  end



   /* ------------------------------------------------------------*/
   /* Check if there are pages to display. If none, set message*/
     /* and redisplay map.*/
   /* ------------------------------------------------------------*/


  if (ABWREC.TA5TSQIX == 0) /* No data to display*/

    AB0JS25(); /* Clear detail data from map*/

    set AB0JM002.XSECD cursor; /* Set cursor position*/
    ABWREC.ABWPRCSN = "121 "; /* Process number*/
    converseLib.validationFailed(5); /* Indicate no data to display*/
    return; /* Return to calling process*/

  end

  set AB0JM002.AB0JMQP9[1] cursor;

   /* ------------------------------------------------------------*/
   /* Format the map detail data obtained.*/
   /* ------------------------------------------------------------*/


  AB0JM002.SY4IDDSC[1] = AB0JW01.SY4IDDSC[9];
  AB0JM002.SY4IDDSC[2] = AB0JW01.SY4IDDSC[10];

  AB0J127();

  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Not Unused line*/

      AB0JM002.AB0JMBSC[ABWIXM] = AB0JW03.AB0JWBSC[ABWIXM]; /* Ln HD1*/
      AB0JM002.AB0JMSSC[ABWIXM] = AB0JW03.AB0JWSSC[ABWIXM]; /* Ln HD1*/
      AB0JM002.AB0JMQS9[ABWIXM] = AB0JW03.AB0JWQS9[ABWIXM]; /* size 9*/
      AB0JM002.AB0JMQSA[ABWIXM] = AB0JW03.AB0JWQSA[ABWIXM]; /* size 10*/
      AB0JM002.AB0JM-SO-NBR[ABWIXM] = AB0JW03.OP1CUOID[ABWIXM];
      AB0JM002.AB0JM-NO-NBR[ABWIXM] = AB0JW03.OP1NORID[ABWIXM];
      AB0JM002.AB0JMQST[ABWIXM] = AB0JW03.AB0JWQST[ABWIXM]; /* Totals*/

      AB0JM002.AB0JMBPC[ABWIXM] = AB0JW03.AB0JWBPC[ABWIXM]; /* Ln HD1*/
      AB0JM002.AB0JMSPC[ABWIXM] = AB0JW03.AB0JWSPC[ABWIXM]; /* Ln HD1*/
      AB0JM002.AB0JMQP9[ABWIXM] = AB0JW03.AB0JWQP9[ABWIXM]; /* size 9*/
      AB0JM002.AB0JMQPA[ABWIXM] = AB0JW03.AB0JWQPA[ABWIXM]; /* size 10*/
      AB0JM002.AB0JMQPT[ABWIXM] = AB0JW03.AB0JWQPT[ABWIXM]; /* Totals*/

      if (AB0JW03.AB0JWFBL[ABWIXM] == "B") /* style is a blank*/
        set AB0JM002.AB0JM-ADD-BUY[ABWIXM] skip;
        set AB0JM002.AB0JMQA9[ABWIXM] normal;
        set AB0JM002.AB0JMQAA[ABWIXM] normal;
        set AB0JM002.AB0JMQAT[ABWIXM] normal;

        AB0JS26(); /* check for additional buy row*/

        if (SQLCA.VAGen_SQLCODE == 0)
          AB0JM002.AB0JMQA9[ABWIXM] = AB0JW03.AB0JWQA9[ABWIXM];
          AB0JM002.AB0JMQAA[ABWIXM] = AB0JW03.AB0JWQAA[ABWIXM];

          AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]           + AB0JW03.AB0JWQA1[ABWIXM]           + AB0JW03.AB0JWQA2[ABWIXM]           + AB0JW03.AB0JWQA3[ABWIXM]           + AB0JW03.AB0JWQA4[ABWIXM]           + AB0JW03.AB0JWQA5[ABWIXM]           + AB0JW03.AB0JWQA6[ABWIXM]           + AB0JW03.AB0JWQA7[ABWIXM]           + AB0JW03.AB0JWQA8[ABWIXM]           + AB0JW03.AB0JWQA9[ABWIXM]           + AB0JW03.AB0JWQAA[ABWIXM];
          AB0JM002.AB0JMQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM];

        end
      end
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* Protect All Unused Columns/Lines on Map Detail Area.*/
   /* ------------------------------------------------------------*/

  AB0JS24();



end // end AB0J131

// Check attention identifier
Function AB0J140()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (AB0JW-MAP-IND == "1")
      set AB0JM001 initial; /* Clear the map fields*/
    else
      set AB0JM002 initial; /* Clear the map fields*/
    end

    exit stack; /* Exit to redisplay map*/

  end


  if (AB0JM001.CATOAP > " " /* FAST PATH was requested*/
   || AB0JM002.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      if (AB0JW-MAP-IND == "1")
        COMMAREA.CATOAP = AB0JM001.CATOAP; /* TO application*/
        COMMAREA.CAITEM = AB0JM001.CAITEM; /* Application data*/
      else
        COMMAREA.CATOAP = AB0JM002.CATOAP; /* TO application*/
        COMMAREA.CAITEM = AB0JM002.CAITEM; /* Application data*/
      end
      XSABS01(); /* Exit to another application*/
    else
      converseLib.validationFailed(4); /* Indicate PF key not valid*/
    end

    if (AB0JW-MAP-IND == "1")
      set AB0JM001.CATOAP cursor, modified, bold; /* Highlight*/
    else
      set AB0JM002.CATOAP cursor, modified, bold; /* Highlight*/
    end
    ABWREC.ABWPRCSN = "140 "; /* Process number*/
    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end


  if (AB0JM001.CAITEM > " " /* Application data was entered*/
   && AB0JW-MAP-IND == "1")
    set AB0JM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with fast path*/
    ABWREC.ABWPRCSN = "140 "; /* Process number*/
    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (AB0JM002.CAITEM > " " /* Application data was entered*/
   && AB0JW-MAP-IND == "2")
    set AB0JM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with fast path*/
    ABWREC.ABWPRCSN = "140 "; /* Process number*/
    AB0JM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end


  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AB0JM001"; /* Appl find code*/
    end
    XSABS01(); /* Exit to another application*/

    ABWREC.ABWPRCSN = "140 "; /* Process number*/
    if (AB0JW-MAP-IND == "1")
      AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    else
      AB0JM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    end

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* and PF5 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf10  /* and PF10 was not pressed*/
   && converseVar.eventKey not pf11  /* and PF11 was not pressed*/
   && converseVar.eventKey not pf16  /* and PF16 was not pressed*/
   && converseVar.eventKey not pf17  /* and PF17 was not pressed*/
   && converseVar.eventKey not pf19  /* and PF19 was not pressed*/
   && converseVar.eventKey not pf20) /* and PF20 was not pressed*/

    ABWREC.ABWPRCSN = "140 "; /* Process number*/
    if (AB0JW-MAP-IND == "1")
      AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    else
      AB0JM002.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    end
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


  if (converseVar.eventKey is pf5) /* Report Request Appl Request*/

    AB0J141(); /* XFER to AB0F*/

  end



end // end AB0J140

// Transfer to Rept Req Appl
Function AB0J141()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF5.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "AB0F"; /* Indicate Rept Req Appl*/


   /* ------------------------------------------------------------*/
   /* Save the application user area in the COMMAREA.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOSYS == "AB") /* Transfer within same system*/

    COMMAREA.CAUSERA = " ";
    COMMAREA.CAUSERA = XP1REC.XP1GROUP;
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/

  end

   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/

  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end /* Move ERROR MESSAGE NBR to EZEMNO*/

  COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* From application*/
  XSEXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* If transfer failed, return an error to the calling process.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CAITEM = " "; /* Clear any application data*/

  if (COMMAREA.CASECRC == 3 /* Application not found*/
   || COMMAREA.CASECRC == 4) /* or transfer not allowed*/

    converseLib.validationFailed(6); /* Indicate not allowed*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/

  end



end // end AB0J141

// Reset highlighted fields
Function AB0J150()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

   /* ************/
   /* *  MAP 1  **/
   /* ************/

  set AB0JM001.SY1STNBR initialAttributes; /* Reset Style no.*/
  set AB0JM001.FY1FCTYC initialAttributes; /* Reset Factory cd*/

  set AB0JM001.CATOAP initialAttributes; /* Commarea TO application*/
  set AB0JM001.CAITEM initialAttributes; /* Commarea application data*/

  AB0JM001.XXXPRCNM = "AB0J    "; /* Reset process name*/
  ABWREC.ABWERLOC = "AB0J    "; /* Reset process name*/


  if (AB0JW01.AB6XSTYN == " " /* No blank/finished style*/
   && AB0JW01.AB6XCOLR == " ") /* and blank/finished color cd*/

    set AB0JM001.AB0JMBC1 skip, invisible; /* Reset hdgs*/
    set AB0JM001.AB0JMSC1 skip, invisible; /* Reset hdgs*/
    set AB0JM001.AB0JMSTY skip, invisible; /* Reset hdgs*/
    set AB0JM001.AB0JMBC2 skip, invisible; /* Reset hdgs*/
    set AB0JM001.AB0JMSSN skip, invisible; /* Reset hdgs*/

  else

    set AB0JM001.AB0JMBC1 initialAttributes; /* Reset hdgs*/
    set AB0JM001.AB0JMSC1 initialAttributes; /* Reset hdgs*/
    set AB0JM001.AB0JMSTY initialAttributes; /* Reset hdgs*/
    set AB0JM001.AB0JMBC2 initialAttributes; /* Reset hdgs*/
    set AB0JM001.AB0JMSSN initialAttributes; /* Reset hdgs*/

  end


  set AB0JM001.AB0JMPKF initialAttributes; /* Reset hdgs*/


  ABWREC.ABWIXM = 1; /* Reset loop index*/
  while (ABWREC.ABWIXM <= 8) /* Process all size descriptions*/
    set AB0JM001.SY4IDDSC[ABWIXM] initialAttributes; /* Reset hdgs*/
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/
  end


  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    set AB0JM001.AB0JMBSC[ABWIXM] initialAttributes; /* SB Blk Clr*/
    set AB0JM001.AB0JMSSC[ABWIXM] initialAttributes; /* SB Sty Clr*/
    set AB0JM001.AB0JMHSB[ABWIXM] initialAttributes; /* SB Sty Clr*/
    set AB0JM001.AB0JMQS1[ABWIXM] initialAttributes; /* SB Qty 1*/
    set AB0JM001.AB0JMQS2[ABWIXM] initialAttributes; /* SB Qty 2*/
    set AB0JM001.AB0JMQS3[ABWIXM] initialAttributes; /* SB Qty 3*/
    set AB0JM001.AB0JMQS4[ABWIXM] initialAttributes; /* SB Qty 4*/
    set AB0JM001.AB0JMQS5[ABWIXM] initialAttributes; /* SB Qty 5*/
    set AB0JM001.AB0JMQS6[ABWIXM] initialAttributes; /* SB Qty 6*/
    set AB0JM001.AB0JMQS7[ABWIXM] initialAttributes; /* SB Qty 7*/
    set AB0JM001.AB0JMQS8[ABWIXM] initialAttributes; /* SB Qty 8*/
    set AB0JM001.AB0JMQST[ABWIXM] initialAttributes; /* SB Totals*/

    set AB0JM001.AB0JMBPC[ABWIXM] initialAttributes; /* pf Blk Clr*/
    set AB0JM001.AB0JMSPC[ABWIXM] initialAttributes; /* pf Sty Clr*/
    set AB0JM001.AB0JMHPF[ABWIXM] initialAttributes; /* pf Sty Clr*/
    set AB0JM001.AB0JMQP1[ABWIXM] initialAttributes; /* pf Qty 1*/
    set AB0JM001.AB0JMQP2[ABWIXM] initialAttributes; /* pf Qty 2*/
    set AB0JM001.AB0JMQP3[ABWIXM] initialAttributes; /* pf Qty 3*/
    set AB0JM001.AB0JMQP4[ABWIXM] initialAttributes; /* pf Qty 4*/
    set AB0JM001.AB0JMQP5[ABWIXM] initialAttributes; /* pf Qty 5*/
    set AB0JM001.AB0JMQP6[ABWIXM] initialAttributes; /* pf Qty 6*/
    set AB0JM001.AB0JMQP7[ABWIXM] initialAttributes; /* pf Qty 7*/
    set AB0JM001.AB0JMQP8[ABWIXM] initialAttributes; /* pf Qty 8*/
    set AB0JM001.AB0JMQPT[ABWIXM] initialAttributes; /* pf Totals*/

    if (AB0JW03.AB0JWFBL[ABWIXM] == "B")
      set AB0JM001.AB0JM-ADD-BUY[ABWIXM] skip; /* AB hdg*/
      set AB0JM001.AB0JMQA1[ABWIXM] normal; /* AB Qty 1*/
      set AB0JM001.AB0JMQA2[ABWIXM] normal; /* AB Qty 2*/
      set AB0JM001.AB0JMQA3[ABWIXM] normal; /* AB Qty 3*/
      set AB0JM001.AB0JMQA4[ABWIXM] normal; /* AB Qty 4*/
      set AB0JM001.AB0JMQA5[ABWIXM] normal; /* AB Qty 5*/
      set AB0JM001.AB0JMQA6[ABWIXM] normal; /* AB Qty 6*/
      set AB0JM001.AB0JMQA7[ABWIXM] normal; /* AB Qty 7*/
      set AB0JM001.AB0JMQA8[ABWIXM] normal; /* AB Qty 8*/
      set AB0JM001.AB0JMQAT[ABWIXM] skip; /* AB Totals*/
    else
      set AB0JM001.AB0JM-ADD-BUY[ABWIXM] initialAttributes; /* AB hdg*/
      set AB0JM001.AB0JMQA1[ABWIXM] initialAttributes; /* AB Qty 1*/
      set AB0JM001.AB0JMQA2[ABWIXM] initialAttributes; /* AB Qty 2*/
      set AB0JM001.AB0JMQA3[ABWIXM] initialAttributes; /* AB Qty 3*/
      set AB0JM001.AB0JMQA4[ABWIXM] initialAttributes; /* AB Qty 4*/
      set AB0JM001.AB0JMQA5[ABWIXM] initialAttributes; /* AB Qty 5*/
      set AB0JM001.AB0JMQA6[ABWIXM] initialAttributes; /* AB Qty 6*/
      set AB0JM001.AB0JMQA7[ABWIXM] initialAttributes; /* AB Qty 7*/
      set AB0JM001.AB0JMQA8[ABWIXM] initialAttributes; /* AB Qty 8*/
      set AB0JM001.AB0JMQAT[ABWIXM] initialAttributes; /* AB Totals*/
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* Protect all unused columns/lines on map detail area.*/
   /* ------------------------------------------------------------*/

  AB0JS05();



   /* ************/
   /* *  MAP 2  **/
   /* ************/

  set AB0JM002.SY1STNBR initialAttributes; /* Reset Style no.*/
  set AB0JM002.FY1FCTYC initialAttributes; /* Reset Factory cd*/

  set AB0JM002.CATOAP initialAttributes; /* Commarea TO application*/
  set AB0JM002.CAITEM initialAttributes; /* Commarea application data*/

  AB0JM002.XXXPRCNM = "AB0J    "; /* Reset process name*/
  ABWREC.ABWERLOC = "AB0J    "; /* Reset process name*/


  if (AB0JW01.AB6XSTYN == " " /* No blank/finished style*/
   && AB0JW01.AB6XCOLR == " ") /* and blank/finished color cd*/

    set AB0JM002.AB0JMBC1 skip, invisible; /* Reset hdgs*/
    set AB0JM002.AB0JMSC1 skip, invisible; /* Reset hdgs*/
    set AB0JM002.AB0JMSTY skip, invisible; /* Reset hdgs*/
    set AB0JM002.AB0JMBC2 skip, invisible; /* Reset hdgs*/
    set AB0JM002.AB0JMSSN skip, invisible; /* Reset hdgs*/

  else

    set AB0JM002.AB0JMBC1 initialAttributes; /* Reset hdgs*/
    set AB0JM002.AB0JMSC1 initialAttributes; /* Reset hdgs*/
    set AB0JM002.AB0JMSTY initialAttributes; /* Reset hdgs*/
    set AB0JM002.AB0JMBC2 initialAttributes; /* Reset hdgs*/
    set AB0JM002.AB0JMSSN initialAttributes; /* Reset hdgs*/

  end


  set AB0JM002.AB0JMPKF initialAttributes;
  set AB0JM001.SY4IDDSC[1] initialAttributes;
  set AB0JM001.SY4IDDSC[2] initialAttributes;



  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    set AB0JM002.AB0JMBSC[ABWIXM] initialAttributes; /* SB Blk Clr*/
    set AB0JM002.AB0JMSSC[ABWIXM] initialAttributes; /* SB Sty Clr*/
    set AB0JM002.AB0JMHSB[ABWIXM] initialAttributes; /* SB Sty Clr*/
    set AB0JM002.AB0JMQS9[ABWIXM] initialAttributes; /* SB Siz 9*/
    set AB0JM002.AB0JMQSA[ABWIXM] initialAttributes; /* SB Siz 10*/
    set AB0JM002.AB0JM-SO-NBR[ABWIXM] initialAttributes; /* sales order*/
    set AB0JM002.AB0JM-NO-NBR[ABWIXM] initialAttributes; /* nike order*/
    set AB0JM002.AB0JMQST[ABWIXM] initialAttributes; /* SB Totals*/

    set AB0JM002.AB0JMBPC[ABWIXM] initialAttributes; /* SB Blk Clr*/
    set AB0JM002.AB0JMSPC[ABWIXM] initialAttributes; /* SB Sty Clr*/
    set AB0JM002.AB0JMHPF[ABWIXM] initialAttributes; /* SB Sty Clr*/
    set AB0JM002.AB0JMQP9[ABWIXM] initialAttributes; /* PF Siz 9*/
    set AB0JM002.AB0JMQPA[ABWIXM] initialAttributes; /* PF Siz 10*/
    set AB0JM002.AB0JMQPT[ABWIXM] initialAttributes; /* SB Totals*/

    if (AB0JW03.AB0JWFBL[ABWIXM] == "B")
      set AB0JM002.AB0JM-ADD-BUY[ABWIXM] skip; /* AB hdg*/
      set AB0JM002.AB0JMQA9[ABWIXM] normal; /* AB Siz 9*/
      set AB0JM002.AB0JMQAA[ABWIXM] normal; /* AB Siz 10*/
      set AB0JM002.AB0JMQAT[ABWIXM] skip; /* AB Totals*/
    else
      set AB0JM002.AB0JM-ADD-BUY[ABWIXM] initialAttributes; /* AB hdg*/
      set AB0JM002.AB0JMQA9[ABWIXM] initialAttributes; /* AB Siz 9*/
      set AB0JM002.AB0JMQAA[ABWIXM] initialAttributes; /* AB Siz 10*/
      set AB0JM002.AB0JMQAT[ABWIXM] initialAttributes; /* AB Totals*/
    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end


   /* ------------------------------------------------------------*/
   /* Protect all unused columns/lines on map detail area.*/
   /* ------------------------------------------------------------*/

  AB0JS24();



end // end AB0J150

// Verify the entered data
Function AB0J160()
   /* ------------------------------------------------------------*/
   /* Verify if a valid request to scroll was entered.*/
   /* Verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf7  /* Scroll back request*/
   || converseVar.eventKey is pf8  /* or Scroll forward request*/
   || converseVar.eventKey is pf10 /* or Scroll left request*/
   || converseVar.eventKey is pf11 /* or Scroll right request*/
   || converseVar.eventKey is pf16 /* or Previous xref  request*/
   || converseVar.eventKey is pf17 /* or Next cust xref request*/
   || converseVar.eventKey is pf19 /* or Previous Style request*/
   || converseVar.eventKey is pf20) /* or Next Style request*/

    AB0J161(); /* Verify scroll request*/

    if (converseVar.validationMsgNum != 0) /* Errors found*/

      if (ABWREC.TA5TSQIX > 0) /* Data formatted into TSQ*/
        exit stack; /* then exit to redisplay map*/
      end

    end

  else

    AB0J162(); /* Verify selection criteria*/

  end



  if (converseVar.validationMsgNum != 0) /* Errors found*/

    AB0JS01(); /* Clear Map detail data*/

    exit stack; /* Exit to redisplay map*/

  else

    if (ABWREC.ABWSWR == "Y") /* Selection criteria changed*/
      exit stack; /* Go back to start of applic*/
    else /* (Selection criteria unchanged)*/

      if (converseVar.eventKey is enter) /* Enter key pressed*/

        AB0J163(); /* Verify any changed dtl data*/

        if (AB0JW01.AB0JWUPI != "Y") /* Valid updates not found*/
          exit stack; /* Exit to redisplay map*/
        else /* Else (Process updates)*/
        end

      end

    end

  end



end // end AB0J160

// Verify scroll request
Function AB0J161()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

                 /* (Check for Map Modifications)*/

  if (AB0JW01.AB0JW-MAP-IND == "1") /* first page*/
    ABWREC.ABWIXM = 1; /* Initialize line index*/

    while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Check for map modifications*/

      if (AB0JM001.AB0JMQP1[ABWIXM] != AB0JW03.AB0JWQP1[ABWIXM])
        set AB0JM001.AB0JMQP1[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP2[ABWIXM] != AB0JW03.AB0JWQP2[ABWIXM])
        set AB0JM001.AB0JMQP2[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP3[ABWIXM] != AB0JW03.AB0JWQP3[ABWIXM])
        set AB0JM001.AB0JMQP3[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP4[ABWIXM] != AB0JW03.AB0JWQP4[ABWIXM])
        set AB0JM001.AB0JMQP4[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP5[ABWIXM] != AB0JW03.AB0JWQP5[ABWIXM])
        set AB0JM001.AB0JMQP5[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP6[ABWIXM] != AB0JW03.AB0JWQP6[ABWIXM])
        set AB0JM001.AB0JMQP6[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP7[ABWIXM] != AB0JW03.AB0JWQP7[ABWIXM])
        set AB0JM001.AB0JMQP7[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM001.AB0JMQP8[ABWIXM] != AB0JW03.AB0JWQP8[ABWIXM])
        set AB0JM001.AB0JMQP8[ABWIXM] cursor, modified, bold; /* Highlight*/
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line number*/

    end
  end


  if (AB0JW01.AB0JW-MAP-IND == "2") /* first page*/
    ABWREC.ABWIXM = 1; /* Initialize line index*/

    while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Check for map modifications*/

      if (AB0JM002.AB0JMQP9[ABWIXM] != AB0JW03.AB0JWQP9[ABWIXM])
        set AB0JM002.AB0JMQP9[ABWIXM] cursor, modified, bold;
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      if (AB0JM002.AB0JMQPA[ABWIXM] != AB0JW03.AB0JWQPA[ABWIXM])
        set AB0JM002.AB0JMQPA[ABWIXM] cursor, modified, bold;
        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end

      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line number*/

    end
  end


  if (converseVar.validationMsgNum != 0) /* Modifications not allowed*/
    return;
  end


                  /* (Check Scroll Request)*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && ABWREC.ABWTSP < 2)          /* and no previous pages*/

    ABWREC.ABWPRCSN = "161 "; /* Process number*/
    converseLib.validationFailed(2); /* No previous page to display*/

    ABWREC.ABWTSP = 1; /* Default to first TSQ page*/

  end


  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && ABWREC.ABWTSP >= ABWREC.TA5TSQIX) /* and no more pages*/

    ABWREC.ABWPRCSN = "161 "; /* Process number*/
    converseLib.validationFailed(3); /* No more pages to display*/

    ABWREC.ABWTSP = ABWREC.TA5TSQIX; /* Default to last TSQ page*/

  end

  if (converseVar.eventKey is pf10 /* Scroll back request*/
   && AB0JW01.AB0JW-MAP-IND == "1") /* first page*/
    ABWREC.ABWPRCSN = "161 "; /* Process number*/
    converseLib.validationFailed(49); /* No more pages to display*/
  end

  if (converseVar.eventKey is pf10 /* Scroll back request*/
   && ABWREC.TA5TSQIX == 0)        /* and no data*/
    ABWREC.ABWPRCSN = "161 "; /* Process number*/
    converseLib.validationFailed(5); /* No data*/
  end


  if (converseVar.eventKey is pf11 /* Scroll forward request*/
   && AB0JW01.AB0JW-MAP-IND == "2") /* first page*/
    ABWREC.ABWPRCSN = "161 "; /* Process number*/
    converseLib.validationFailed(50); /* No more pages to display*/
  end

  if (converseVar.eventKey is pf11 /* Scroll back request*/
   && ABWREC.TA5TSQIX == 0)        /* and no pages*/
    ABWREC.ABWPRCSN = "161 "; /* Process number*/
    converseLib.validationFailed(5); /* No pages to display*/
  end


  if (converseVar.eventKey is pf16) /* Previous cxref request*/

    if (AB0JW01.AB0JWCST < 2) /* and no previous row*/

      ABWREC.ABWPRCSN = "161 "; /* Process number*/
      converseLib.validationFailed(120); /* No previous cust  to display*/

      AB0JW01.AB0JWCST = 1; /* Default to first page*/
    else

      ABWREC.ABWIDX1 = AB0JW01.AB0JWCST;
      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 - 1;
      if (AB0JW02.SY1STNBR[AB0JWCST] != AB0JW02.SY1STNBR[ABWIDX1])

        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(120); /* No previous cust  to display*/

      else
        AB0JW01.AB0JWCST = ABWREC.ABWIDX1;
      end
    end
  end

  if (converseVar.eventKey is pf17) /* next cxref request*/

    if (AB0JW01.AB0JWCST >= AB0JW01.AB0JWMST) /* and no next style*/

      ABWREC.ABWPRCSN = "161 "; /* Process number*/
      converseLib.validationFailed(121); /* No next cust  to display*/

      AB0JW01.AB0JWCST = AB0JW01.AB0JWMST; /* Default to last page*/
    else

      ABWREC.ABWIDX1 = AB0JW01.AB0JWCST;
      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1;
      if (AB0JW02.SY1STNBR[AB0JWCST] != AB0JW02.SY1STNBR[ABWIDX1])

        ABWREC.ABWPRCSN = "161 "; /* Process number*/
        converseLib.validationFailed(121); /* No next cust  to display*/

      else
        AB0JW01.AB0JWCST = ABWREC.ABWIDX1;
      end
    end
  end

  if (converseVar.eventKey is pf19) /* Previous style request*/

    if (AB0JW01.AB0JWCST < 2) /* and no previous style*/

      ABWREC.ABWPRCSN = "161 "; /* Process number*/
      converseLib.validationFailed(46); /* No previous style to display*/

      AB0JW01.AB0JWCST = 1; /* Default to first page*/

    else

      ABWREC.ABWIDX1 = AB0JW01.AB0JWCST;
      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 - 1;
      ABWREC.ABWPRCSN = "161 "; /* Process number*/
      converseLib.validationFailed(46); /* No previous style to display*/

      while (ABWREC.ABWIDX1 >= 1)
        if (AB0JW02.SY1STNBR[AB0JWCST] != AB0JW02.SY1STNBR[ABWIDX1])
          ABWREC.ABWPRCSN = "    "; /* reset /* Process number*/
          converseLib.validationFailed(0); /* reset style to display*/
          AB0JW01.AB0JWCST = ABWREC.ABWIDX1;
          ABWREC.ABWIDX1 = ABWREC.ABWIDX1 - 1;
          while (ABWREC.ABWIDX1 >= 1)
            if (AB0JW02.SY1STNBR[AB0JWCST] == AB0JW02.SY1STNBR[ABWIDX1])
              AB0JW01.AB0JWCST = ABWREC.ABWIDX1; /* new FIRST style*/
              ABWREC.ABWIDX1 = ABWREC.ABWIDX1 - 1;
            else
              ABWREC.ABWIDX1 = 0; /* force end of loop*/
            end
          end
        else
          ABWREC.ABWIDX1 = ABWREC.ABWIDX1 - 1;
        end
      end
    end
  end


  if (converseVar.eventKey is pf20) /* Scroll forward request*/

    if (AB0JW01.AB0JWCST >= AB0JW01.AB0JWMST) /* and no next style*/

      ABWREC.ABWPRCSN = "161 "; /* Process number*/
      converseLib.validationFailed(47); /* No more styles to display*/

    else

      ABWREC.ABWIDX1 = AB0JW01.AB0JWCST;
      ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1;
      ABWREC.ABWPRCSN = "161 "; /* Process number*/
      converseLib.validationFailed(47); /* No more styles to display*/

      while (ABWREC.ABWIDX1 <= AB0JW01.AB0JWMST)
        if (AB0JW02.SY1STNBR[AB0JWCST] != AB0JW02.SY1STNBR[ABWIDX1])
          ABWREC.ABWPRCSN = "    "; /* reset /* Process number*/
          converseLib.validationFailed(0); /* reset style to display*/
          AB0JW01.AB0JWCST = ABWREC.ABWIDX1;
          ABWREC.ABWIDX1 = 0; /* force end of loop*/
          ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 9999;
        else
          ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1;
        end
      end
    end
  end

end // end AB0J161

// Edit selection criteria
Function AB0J162()
   /* ============================================================*/
   /* ===== E D I T    S E L E C T I O N    C R I T E R I A  =====*/
   /* =====                                                  =====*/
   /* ===== Compare selection criteria on screen to data on  =====*/
   /* =====  working storage  record. If any has changed,    =====*/
   /* ===== Set data select switch to 'on'.                  =====*/
   /* ===== Validate all selection criteria fields.          =====*/
   /* ===== Validate report request selection if no criteria =====*/
   /* =====  fields changed and no errors found.             =====*/
   /* ============================================================*/


            /* (Reset Edit Indicators)*/

  if (ABWREC.ABWFIRST == " ") /* First time through*/
    ABWREC.ABWSWR = "Y"; /* Request for data*/
    AB0JW01.AB0JWSTS = "Y"; /* Select new style set*/
  else
    ABWREC.ABWSWR = "N"; /* Reset data select ind*/
  end

  XP1REC.XP1MNO = 0; /* Reset error ind*/


          /* (Check Selection Criteria)*/

  if (AB0JM001.PC2CUXID != XP1REC.PC2CUXID) /* Category cd*/
    XP1REC.PC2CUXID = AB0JM001.PC2CUXID; /* To save area*/
    ABWREC.ABWSWR = "Y"; /* Request for data*/
    AB0JW01.AB0JWSTS = "Y"; /* Select new style set*/
  end

  if (AB0JM001.FY1FCTYC != XP1REC.FY1FCTYC) /* Factory cd*/
    XP1REC.FY1FCTYC = AB0JM001.FY1FCTYC; /* To save area*/
    ABWREC.ABWSWR = "Y"; /* Request for data*/
    AB0JW01.AB0JWSTS = "Y"; /* Select new style set*/
  end

  if (AB0JM001.SY1STNBR != XP1REC.SY1STNBR) /* Style no.*/
    XP1REC.SY1STNBR = AB0JM001.SY1STNBR; /* To save area*/
    ABWREC.ABWSWR = "Y"; /* Request for data*/
    AB0JW01.AB0JWSTS = "Y"; /* Select new style set*/
  end


     /* (This field is accessible only to the supervisor -*/
       /* the program automatically protects it if a non-*/
       /* supervisory userid is logged on)*/

  if (AB0JM001.PG1SC4CD != XP1REC.XXXUSER) /* Forecaster cd*/

    XP1REC.XXXUSER = AB0JM001.PG1SC4CD; /* To save area*/
    ABWREC.ABWSWR = "Y"; /* Request for data*/
    AB0JW01.AB0JWSTS = "Y"; /* Select new style set*/
    AB0JW01.AB0JWSCH = "Y"; /* Edit scheduler ID*/

  else

    AB0JW01.AB0JWSCH = " "; /* Do not edit scheduler id*/

  end


              /* (Validate Selection Criteria)*/

  AB0JS06(); /* Validate cust xref*/
  AB0JS07(); /* Validate Factory cd*/
  AB0JS08(); /* Validate Style no*/

  if (AB0JW01.AB0JWSCH == "Y") /* Userid changed by supervisor*/
    AB0JS13(); /* Edit userid, get derived data*/
  end


              /* (Validate Map Detail Data)*/

  if (ABWREC.ABWSWR == "N" /* Selection criteria unchanged*/
   && XP1REC.XP1MNO == 0)  /* And no errors found so far*/

    AB0JW01.AB0JWUPI = " "; /* Reset updates present indicator*/
    AB0JS14(); /* Validate map detail data*/

    if (XP1REC.XP1MNO != 0) /* Errors found*/
      converseLib.clearScreen();
       /* Reset map*/
      if (XP1REC.XP1MNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(XP1REC.XP1MNO);
      end /* Move to msg area*/
      exit stack; /* Exit to redisplay map*/
    end

  end


              /* (Set-up Exit Requirements)*/

  converseLib.clearScreen();
  
  if (XP1REC.XP1MNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(XP1REC.XP1MNO);
  end


           /* (Purge Old Data if Errors Exist)*/

  if (converseVar.validationMsgNum != 0) /* Errors detected*/

    AB0J122(); /* Purge any temporary storage*/
    AB0JW01.AB0JWCST = 0; /* Initialize current style ptr*/
    AB0JW01.AB0JWMST = 0; /* Initialize maximum style ptr*/
    XP1REC.FY1FCTYC = " "; /* Clear wk fld*/
    XP1REC.SY1STNBR = " "; /* Clear wk fld*/
    XP1REC.PC2CUXID = " "; /* Clear wk fld*/

  else

        /* (Otherwise, Check for Global Wildcard Request)*/

    if (AB0JW01.AB0JWUPI != "Y"  /* No updates present*/
     && AB0JM001.FY1FCTYC == " " /* Map Factory cd = spaces*/
     && AB0JM001.SY1STNBR == " " /* Map Style no. = spaces*/
     && AB0JM001.PC2CUXID == " ") /* Map Style no. = spaces*/

      ABWREC.ABWSWR = "Y"; /* Request for data*/
      AB0JW01.AB0JWSTS = "Y"; /* Select new style set*/

    end

  end



end // end AB0J162

// Verify any changed dtl data
Function AB0J163()
   /* ------------------------------------------------------------*/
    /* Check all record status indicators for a valid update tag.*/
    /* if found, then indicate that valid updates present for*/
      /* current style/color being processed.*/
   /* ------------------------------------------------------------*/


  AB0JW01.AB0JWUPI = " "; /* Reset update indicator*/


  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWSTA[ABWIXM] == "U") /* Record for Change(upd)*/

      AB0JW01.AB0JWUPI = "Y"; /* Indicate valid updates fnd*/

    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end



end // end AB0J163

// Process valid input request
Function AB0J170()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* If Enter key pressed, Update any changed data.*/
   /* ------------------------------------------------------------*/


  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    ABWREC.ABWTSP = ABWREC.ABWTSP - 1; /* Decrement page number*/
    return; /* Return to previous process*/

  end


  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    ABWREC.ABWTSP = ABWREC.ABWTSP + 1; /* Increment page number*/
    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf10) /* Scroll right requested*/
    AB0JW-MAP-IND = "1";
    return; /* Return to previous process*/
  end

  if (converseVar.eventKey is pf11) /* Scroll right requested*/
    AB0JW-MAP-IND = "2";
    return; /* Return to previous process*/
  end



  if (converseVar.eventKey is pf16 /* Previous cxref requested*/
   || converseVar.eventKey is pf17 /* Next cxref requested*/
   || converseVar.eventKey is pf19 /* Previous style requested*/
   || converseVar.eventKey is pf20) /* Next style requested*/

    ABWREC.ABWSWR = "Y"; /* Obtain new data to display*/
    return; /* Return to previous process*/

  end




  if (converseVar.eventKey is enter) /* Update Apparel Buy Databases*/

    XX0XS01(); /* Get system date/time*/

    ABWREC.ABWIXM = 1; /* Reset loop index*/
    while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Process all line data*/

      if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Valid line*/

        if (AB0JW03.AB0JWSTA[ABWIXM] == "U") /* Record for update*/
          AB0J171(); /* Update DABUY.VSIZE01 db*/
        end

        if (AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] == "Y") /* add buy update*/
          AB0JS28(); /* update vbsize*/
          AB0JS29(); /* update vbplan*/
          AB0JS30(); /* update vabsty*/
        end
      end

      ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

    end


    if (converseVar.validationMsgNum == 0) /* No errors found*/
      AB0J172(); /* Update DABUY.VBCOLR01/VBPLAN01 dbs*/
    end


    if (converseVar.validationMsgNum == 0) /* Update successful*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit(); /* Commit all updates*/

      AB0JW01.AB0JWTSP = ABWREC.ABWTSP; /* Save current TSQ page*/
      ABWREC.ABWPRCSN = "170 "; /* Process number*/
      ABWREC.ABWSWR = "Y"; /* Reselect updated data*/
      AB0JW01.AB0JWUPD = "Y"; /* Indicate DB update done*/
      ABWREC.ABWNMO = 45; /* Indicate update message*/

    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all updates*/

    end


  end



end // end AB0J170

// Update DABUY.VSIZE01 db
Function AB0J171()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/


   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/

  set AB6REC empty; /* Reset Wk Storage field*/

  AB6REC.SY1STNBR = AB0JW03.AB0JWSTN[ABWIXM]; /* Style no.*/
  AB6REC.SY2CLRID = AB0JW03.AB0JWCOL[ABWIXM]; /* Color id*/
  AB6REC.XDMCD = AB0JW03.AB0JWXDM[ABWIXM]; /* Dimension cd*/
  AB6REC.XWHCD = AB0JW03.AB0JWXWH[ABWIXM]; /* Warehouse cd*/
  AB6REC.XOWCD = AB0JW03.AB0JWXOW[ABWIXM]; /* Owner group code*/
  AB6REC.XDVCD = AB0JW03.AB0JWXDV[ABWIXM]; /* Division cd*/
  AB6REC.XSECD = AB0JW03.AB0JWXSE[ABWIXM]; /* Season cd*/
  AB6REC.XSNYR = AB0JW03.AB0JWXSN[ABWIXM]; /* Season yr*/
  AB6REC.FY1FCTYC = AB0JW03.AB0JWFCT[ABWIXM]; /* Factory cd*/
  AB6REC.PC4ORTYP = AB0JW03.AB0JWORT[ABWIXM]; /* Order type*/
  AB6REC.PC2CUXID = AB0JW03.AB0JWCID[ABWIXM]; /* Cust id*/
  AB6REC.AB3BUYMO = AB0JW03.AB0JWBYM[ABWIXM]; /* Buy month*/
  AB6REC.AB6BYTYP = AB0JW03.AB0JWBYT[ABWIXM]; /* Buy type*/
  AB6REC.OP1PARTN = AB0JW03.OP1PARTN[ABWIXM];
  AB6REC.OP1CUOID = AB0JW03.OP1CUOID[ABWIXM];
  AB6REC.OP1NORID = AB0JW03.OP1NORID[ABWIXM];



   /* *=====================================**/
   /* *  Move Non-Update Items into AB6REC  **/
   /* *=====================================**/

  AB6REC.AB3BUYST = AB0JW03.AB0JWBYS[ABWIXM]; /* Buy status*/
  AB6REC.AB3BYSDT = AB0JW03.AB0JWBYD[ABWIXM]; /* Buy date*/
  AB6REC.PC3PONBR = AB0JW03.AB0JWPON[ABWIXM]; /* PO number*/
  AB6REC.AB6XSTYN = AB0JW03.AB0JWFSY[ABWIXM]; /* Blk/fin style*/
  AB6REC.AB6XCOLR = AB0JW03.AB0JWFCD[ABWIXM]; /* Blk/fin color*/
  AB6REC.AB6XFCTY = AB0JW03.AB0JWFFC[ABWIXM]; /* Blk/fin fc*/
  AB6REC.AB6BKFNI = AB0JW03.AB0JWFBL[ABWIXM]; /* Blk/fin indicator*/
  AB6REC.XOWCD = "00"; /* default owner group*/



   /* *=================================**/
   /* *  Move Update Items into AB6REC  **/
   /* *=================================**/

  ABWREC.ABWIDX1 = 1; /* Reset loop index*/

                   /* (Sizes)*/
  while (ABWREC.ABWIDX1 <= 10) /* Process all sizes*/
    AB6REC.SY5SZID[ABWIDX1] = AB0JW01.SY5SZID[ABWIDX1];
    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Loop through*/
  end

                    /* (Buy Size Qtys)*/
  AB6REC.AB6BUYSQ[1] = AB0JW03.AB0JWQS1[ABWIXM]; /* Move Qty1*/
  AB6REC.AB6BUYSQ[2] = AB0JW03.AB0JWQS2[ABWIXM]; /* Move Qty2*/
  AB6REC.AB6BUYSQ[3] = AB0JW03.AB0JWQS3[ABWIXM]; /* Move Qty3*/
  AB6REC.AB6BUYSQ[4] = AB0JW03.AB0JWQS4[ABWIXM]; /* Move Qty4*/
  AB6REC.AB6BUYSQ[5] = AB0JW03.AB0JWQS5[ABWIXM]; /* Move Qty5*/
  AB6REC.AB6BUYSQ[6] = AB0JW03.AB0JWQS6[ABWIXM]; /* Move Qty6*/
  AB6REC.AB6BUYSQ[7] = AB0JW03.AB0JWQS7[ABWIXM]; /* Move Qty7*/
  AB6REC.AB6BUYSQ[8] = AB0JW03.AB0JWQS8[ABWIXM]; /* Move Qty8*/
  AB6REC.AB6BUYSQ[9] = AB0JW03.AB0JWQS9[ABWIXM]; /* Move Qty9*/
  AB6REC.AB6BUYSQ[10] = AB0JW03.AB0JWQSA[ABWIXM]; /* Move Qty10*/

                     /* (Packed Qtys)*/
  AB6REC.AB6PACKQ[1] = AB0JW03.AB0JWQP1[ABWIXM]; /* Move Qty1*/
  AB6REC.AB6PACKQ[2] = AB0JW03.AB0JWQP2[ABWIXM]; /* Move Qty2*/
  AB6REC.AB6PACKQ[3] = AB0JW03.AB0JWQP3[ABWIXM]; /* Move Qty3*/
  AB6REC.AB6PACKQ[4] = AB0JW03.AB0JWQP4[ABWIXM]; /* Move Qty4*/
  AB6REC.AB6PACKQ[5] = AB0JW03.AB0JWQP5[ABWIXM]; /* Move Qty5*/
  AB6REC.AB6PACKQ[6] = AB0JW03.AB0JWQP6[ABWIXM]; /* Move Qty6*/
  AB6REC.AB6PACKQ[7] = AB0JW03.AB0JWQP7[ABWIXM]; /* Move Qty7*/
  AB6REC.AB6PACKQ[8] = AB0JW03.AB0JWQP8[ABWIXM]; /* Move Qty8*/
  AB6REC.AB6PACKQ[9] = AB0JW03.AB0JWQP9[ABWIXM]; /* Move Qty9*/
  AB6REC.AB6PACKQ[10] = AB0JW03.AB0JWQPA[ABWIXM]; /* Move Qty10*/


  AB6REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  AB6REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  AB6REC.ZZZCHGCT = AB0JW03.AB0JWCHC[ABWIXM]; /* Change count*/



   /* *==============================**/
   /* *  Update DABUY.VBSIZE01  Row  **/
   /* *==============================**/

  try
    call "IO3590" ("U ", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to calling process*/

  end



   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row updated by other user/s*/
      ABWREC.ABWSWR = "Y"; /* Reselect same rows*/
      ABWREC.ABWPRCSN = "171 "; /* Process number*/
      ABWREC.ABWNMO = 13; /* Indicate concurrent update*/
      exit stack; /* Exit to redisplay map*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else

        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Rollback all db updates*/

        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "171 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0J171

// Update DABUY.VBSIZE01
Function AB0J172()
   /* ------------------------------------------------------------*/
    /* Select Set Updated DABUY.VBSIZE01 Record Group*/
   /* ------------------------------------------------------------*/

  AB0JS15(); /* Select set DABUY.VBSIZE01 rows*/


   /* ------------------------------------------------------------*/
    /* Process Selected DABUY.VBSIZE01 Record Group Rows*/
   /* ------------------------------------------------------------*/

  ABWREC.ABWSWC = "N"; /* Reset EOF indicator*/
  AB0JW01.AB0JWQCT = 0; /* Initialize Qty Style/Clr Totals*/

  while (ABWREC.ABWSWC == "N") /* Until all rows processed*/

    AB0JS16(); /* Process all rows*/

    if (converseVar.validationMsgNum != 0) /* Errors found*/
      ABWREC.ABWSWC = "Y"; /* Force loop end*/
    end

  end

  if (converseVar.validationMsgNum == 0) /* No errors found*/
    AB0JS19(); /* Close size cursor*/
  end



end // end AB0J172

// Clear Detail Data from Map1
Function AB0JS01()
   /* ------------------------------------------------------------*/
   /* Set Protect,Dark all map detail data items. This is done*/
     /* when processing errors have been detected by the program.*/
   /* ------------------------------------------------------------*/


  set AB0JM001.AB0JMCSY skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMBC1 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMSC1 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMSTY skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMSSN skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMMFS skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMFCD skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMBC2 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMBC3 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM001.AB0JMHTL skip, invisible; /* Prot,Dark hdgs*/


  ABWREC.ABWIXM = 1; /* Reset loop index*/
  while (ABWREC.ABWIXM <= 8) /* Process all size descriptions*/
    set AB0JM001.SY4IDDSC[ABWIXM] skip, invisible; /* Prot,Dark hdgs*/
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/
  end


  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    set AB0JM001.AB0JMBSC[ABWIXM] skip, invisible; /* SB Blk Clr*/
    set AB0JM001.AB0JMSSC[ABWIXM] skip, invisible; /* SB Sty Clr*/
    set AB0JM001.AB0JMHSB[ABWIXM] skip, invisible; /* SB Sty Clr*/
    set AB0JM001.AB0JMQS1[ABWIXM] skip, invisible; /* SB Qty 1*/
    set AB0JM001.AB0JMQS2[ABWIXM] skip, invisible; /* SB Qty 2*/
    set AB0JM001.AB0JMQS3[ABWIXM] skip, invisible; /* SB Qty 3*/
    set AB0JM001.AB0JMQS4[ABWIXM] skip, invisible; /* SB Qty 4*/
    set AB0JM001.AB0JMQS5[ABWIXM] skip, invisible; /* SB Qty 5*/
    set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* SB Qty 6*/
    set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* SB Qty 7*/
    set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* SB Qty 8*/
    set AB0JM001.AB0JMQST[ABWIXM] skip, invisible; /* SB Totals*/

    set AB0JM001.AB0JMBPC[ABWIXM] skip, invisible; /* SB Blk Clr*/
    set AB0JM001.AB0JMSPC[ABWIXM] skip, invisible; /* SB Sty Clr*/
    set AB0JM001.AB0JMHPF[ABWIXM] skip, invisible; /* SB Sty Clr*/
    set AB0JM001.AB0JMQP1[ABWIXM] skip, invisible; /* SB Qty 1*/
    set AB0JM001.AB0JMQP2[ABWIXM] skip, invisible; /* SB Qty 2*/
    set AB0JM001.AB0JMQP3[ABWIXM] skip, invisible; /* SB Qty 3*/
    set AB0JM001.AB0JMQP4[ABWIXM] skip, invisible; /* SB Qty 4*/
    set AB0JM001.AB0JMQP5[ABWIXM] skip, invisible; /* SB Qty 5*/
    set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* SB Qty 6*/
    set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* SB Qty 7*/
    set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* SB Qty 8*/
    set AB0JM001.AB0JMQPT[ABWIXM] skip, invisible; /* SB Totals*/

    set AB0JM001.AB0JM-ADD-BUY[ABWIXM] skip, invisible; /* AB Title*/
    set AB0JM001.AB0JMQA1[ABWIXM] skip, invisible; /* AB Qty 1*/
    set AB0JM001.AB0JMQA2[ABWIXM] skip, invisible; /* AB Qty 2*/
    set AB0JM001.AB0JMQA3[ABWIXM] skip, invisible; /* AB Qty 3*/
    set AB0JM001.AB0JMQA4[ABWIXM] skip, invisible; /* AB Qty 4*/
    set AB0JM001.AB0JMQA5[ABWIXM] skip, invisible; /* AB Qty 5*/
    set AB0JM001.AB0JMQA6[ABWIXM] skip, invisible; /* AB Qty 6*/
    set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* AB Qty 7*/
    set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* AB Qty 8*/
    set AB0JM001.AB0JMQAT[ABWIXM] skip, invisible; /* AB Totals*/

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end



end // end AB0JS01

// Obtain size descriptions
Function AB0JS02()
   /* ------------------------------------------------------------*/
   /* Obtain valid sizes and size descriptions for a given style.*/
   /* ASSUMPTION: Sizes and size descriptions obtained are VALID*/
               /* for ALL colors within the given style.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1PGMNM = "AB0JS02 "; /* program name*/
  TA1REC.TA1MAP = "AB0JM001"; /* processing map*/
  ABWREC.ABWIDX4 = 1; /* Reset loop index*/
  ABWREC.ABWIDX5 = 0; /* Reset store index*/
  move 0 to AB0JW01.SY5SZID[1] for all; /* Reset Size Id Array*/
  move " " to AB0JW01.SY4IDDSC[1] for all; /* Reset Size Desc Array*/
  AB0JS22(); /* get sizes from afsty*/

   /* ------------------------------------------------------------*/
   /* Store all retrieved size descriptions.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(0); /* reset error msg*/
  ABWREC.ABWIDX4 = 1; /* Reset loop index*/
  ABWREC.ABWIDX5 = 0; /* Reset store index*/
  move 0 to AB0JW01.SY5SZID[1] for all; /* Reset Size Id Array*/

  while (ABWREC.ABWIDX4 <= 10) /* Find valid sizes*/
    AB0JW01.SY5SZID[ABWIDX4] = AF2REC.SY5SZID[ABWIDX4];

    if (AF2REC.SY5SZID[ABWIDX4] != 0) /* a vakud suze exists*/
      ABWREC.ABWIDX5 = ABWREC.ABWIDX5 + 1; /* Add store index*/
    end

    ABWREC.ABWIDX4 = ABWREC.ABWIDX4 + 1; /* Loop through*/
  end

  AB0JW01.AB0JWSZC = ABWREC.ABWIDX5 + 1; /* Save size count + 1*/

  AB0JS23(); /* get size descriptions*/

   /* ------------------------------------------------------------*/
   /* Center all retrieved size descriptions within save field*/
   /* ------------------------------------------------------------*/


  ABWREC.ABWIDX5 = 1; /* Set loop index*/


  while (ABWREC.ABWIDX5 <= 10) /* Center size descriptions*/

    AB0JW01.AB0JWSDS = " "; /* Initialize wk area*/
    AB0JW01.AB0JWSDC = " "; /* Initialize wk area*/
    AB0JW01.AB0JWSDS = AB0JW01.SY4IDDSC[ABWIDX5];

    if (AB0JW01.AB0JWSD5 != " ")
      if (AB0JW01.AB0JWSD4 != " ")
        if (AB0JW01.AB0JWSD3 != " ")
          if (AB0JW01.AB0JWSD2 != " ")
            if (AB0JW01.AB0JWSD1 != " ")
            else
              AB0JW01.AB0JWSC2 = AB0JW01.AB0JWSD2;
              AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD3;
              AB0JW01.AB0JWSC4 = AB0JW01.AB0JWSD4;
              AB0JW01.AB0JWSC5 = AB0JW01.AB0JWSD5;
            end
          else
            AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD3;
            AB0JW01.AB0JWSC4 = AB0JW01.AB0JWSD4;
            AB0JW01.AB0JWSC5 = AB0JW01.AB0JWSD5;
          end
        else
          AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD4;
          AB0JW01.AB0JWSC4 = AB0JW01.AB0JWSD5;
        end
      else
        AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD5;
      end
      AB0JW01.SY4IDDSC[ABWIDX5] = AB0JW01.AB0JWSDC;

    end

    ABWREC.ABWIDX5 = ABWREC.ABWIDX5 + 1; /* Loop through*/

  end

end // end AB0JS02

// Store Size breakout data
Function AB0JS03()
   /* ------------------------------------------------------------*/
   /* Store DABUY.Vbsize01 data into program save area for*/
     /* display and possible update.*/
   /* ------------------------------------------------------------*/


             /* (Save Blank/Finished Style and Color)*/
  AB0JW01.AB6XSTYN = AB6REC.AB6XSTYN; /* Blnk/Finished style*/
  AB0JW01.AB6XCOLR = AB6REC.AB6XCOLR; /* Blnk/Finished color*/

  if (AB6REC.AB6XSTYN != " " /* With valid style*/
   && AB6REC.AB6XCOLR != " ") /* With valid color*/

    AB0JS04(); /* Obtain style name*/

  end


                 /* (Save Non-Update Data)*/
  AB0JW03.AB0JWSTN[ABWIXM] = AB6REC.SY1STNBR; /* Style no.*/
  AB0JW03.AB0JWCOL[ABWIXM] = AB6REC.SY2CLRID; /* Color*/
  AB0JW03.AB0JWSSC[ABWIXM] = AB6REC.SY2CLRID; /* Color (Disp)*/
  AB0JW03.AB0JWSPC[ABWIXM] = " "; /* Color (Disp)*/
  AB0JW03.AB0JWXDM[ABWIXM] = AB6REC.XDMCD; /* Dimension*/
  AB0JW03.AB0JWXWH[ABWIXM] = AB6REC.XWHCD; /* Whse*/
  AB0JW03.AB0JWXOW[ABWIXM] = AB6REC.XOWCD; /* owner group code*/
  AB0JW03.AB0JWXDV[ABWIXM] = AB6REC.XDVCD; /* Division*/
  AB0JW03.AB0JWXSE[ABWIXM] = AB6REC.XSECD; /* Season cd*/
  AB0JW03.AB0JWXSN[ABWIXM] = AB6REC.XSNYR; /* Season yr*/
  AB0JW03.AB0JWFCT[ABWIXM] = AB6REC.FY1FCTYC; /* Factory cd*/
  AB0JW03.AB0JWORT[ABWIXM] = AB6REC.PC4ORTYP; /* Order type*/
  AB0JW03.AB0JWCID[ABWIXM] = AB6REC.PC2CUXID; /* Cust id*/
  AB0JW03.AB0JWBYM[ABWIXM] = AB6REC.AB3BUYMO; /* Buy mo*/
  AB0JW03.AB0JWBYT[ABWIXM] = AB6REC.AB6BYTYP; /* Buy type*/
  AB0JW03.AB0JWBYS[ABWIXM] = AB6REC.AB3BUYST; /* Buy status*/
  AB0JW03.AB0JWBYD[ABWIXM] = AB6REC.AB3BYSDT; /* Buy stat date*/
  AB0JW03.AB0JWPON[ABWIXM] = AB6REC.PC3PONBR; /* PO nbr*/
  AB0JW03.OP1PARTN[ABWIXM] = AB6REC.OP1PARTN; /* ord part char*/
  AB0JW03.OP1CUOID[ABWIXM] = AB6REC.OP1CUOID; /* cust/sales ord id*/
  AB0JW03.OP1NORID[ABWIXM] = AB6REC.OP1NORID; /* nike ord id*/
  AB0JW03.AB0JWFSY[ABWIXM] = AB6REC.AB6XSTYN; /* Blnk/Fin Style*/
  AB0JW03.AB0JWFCD[ABWIXM] = AB6REC.AB6XCOLR; /* Blnk/Fin Color*/
  AB0JW03.AB0JWBSC[ABWIXM] = AB6REC.AB6XCOLR;
                                   /* Blnk/Fin Color (Disp)*/
  AB0JW03.AB0JWBPC[ABWIXM] = " "; /* Blnk/Fin Color*/
  AB0JW03.AB0JWFFC[ABWIXM] = AB6REC.AB6XFCTY; /* Blnk/Fin fld*/
  AB0JW03.AB0JWFBL[ABWIXM] = AB6REC.AB6BKFNI; /* Blnk/Fin flag*/
  AB0JW03.AB0JWCHC[ABWIXM] = AB6REC.ZZZCHGCT; /* Change count*/


               /* (Save/Format Data for Update)*/

  ABWREC.ABWIDX1 = 1; /* Reset loop ctr*/
  while (ABWREC.ABWIDX1 <= 10) /* Move size/qty to wk area*/

    if (AB6REC.SY5SZID[ABWIDX1] > 0) /* Valid Size*/

      if (AB6REC.SY5SZID[ABWIDX1] in AB0JW01.SY5SZID) /* Size found?*/

        if (sysVar.arrayIndex == 1) /* To Qty Array 1*/
          AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
          AB0JW03.AB0JWQS1[ABWIXM] = AB0JW01.AB0JWQTW;
          AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
          AB0JW03.AB0JWQP1[ABWIXM] = AB0JW01.AB0JWQTW;
        else
          if (sysVar.arrayIndex == 2) /* To Qty Array 2*/
            AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
            AB0JW03.AB0JWQS2[ABWIXM] = AB0JW01.AB0JWQTW;
            AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
            AB0JW03.AB0JWQP2[ABWIXM] = AB0JW01.AB0JWQTW;
          else
            if (sysVar.arrayIndex == 3) /* To Qty Array 3*/
              AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
              AB0JW03.AB0JWQS3[ABWIXM] = AB0JW01.AB0JWQTW;
              AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
              AB0JW03.AB0JWQP3[ABWIXM] = AB0JW01.AB0JWQTW;
            else
              if (sysVar.arrayIndex == 4) /* To Qty Array 4*/
                AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                AB0JW03.AB0JWQS4[ABWIXM] = AB0JW01.AB0JWQTW;
                AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                AB0JW03.AB0JWQP4[ABWIXM] = AB0JW01.AB0JWQTW;
              else
                if (sysVar.arrayIndex == 5) /* To Qty Array 5*/
                  AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                  AB0JW03.AB0JWQS5[ABWIXM] = AB0JW01.AB0JWQTW;
                  AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                  AB0JW03.AB0JWQP5[ABWIXM] = AB0JW01.AB0JWQTW;
                else
                  if (sysVar.arrayIndex == 6) /* To Qty Array 6*/
                    AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                    AB0JW03.AB0JWQS6[ABWIXM] = AB0JW01.AB0JWQTW;
                    AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                    AB0JW03.AB0JWQP6[ABWIXM] = AB0JW01.AB0JWQTW;
                  else
                    if (sysVar.arrayIndex == 7) /* To Qty Array 7*/
                      AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                      AB0JW03.AB0JWQS7[ABWIXM] = AB0JW01.AB0JWQTW;
                      AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                      AB0JW03.AB0JWQP7[ABWIXM] = AB0JW01.AB0JWQTW;
                    else
                      if (sysVar.arrayIndex == 8) /* To Qty Array 8*/
                        AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                        AB0JW03.AB0JWQS8[ABWIXM] = AB0JW01.AB0JWQTW;
                        AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                        AB0JW03.AB0JWQP8[ABWIXM] = AB0JW01.AB0JWQTW;
                      else
                        if (sysVar.arrayIndex == 9) /* To Qty Array 9*/
                          AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                          AB0JW03.AB0JWQS9[ABWIXM] = AB0JW01.AB0JWQTW;
                          AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                          AB0JW03.AB0JWQP9[ABWIXM] = AB0JW01.AB0JWQTW;
                        else
                          if (sysVar.arrayIndex == 10) /* To Qty Array 10*/
                            AB0JW01.AB0JWQTW = AB6REC.AB6BUYSQ[ABWIDX1];
                            AB0JW03.AB0JWQSA[ABWIXM] = AB0JW01.AB0JWQTW;
                            AB0JW01.AB0JWQTW = AB6REC.AB6PACKQ[ABWIDX1];
                            AB0JW03.AB0JWQPA[ABWIXM] = AB0JW01.AB0JWQTW;
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end

        end

                         /* (Accumulate Totals)*/

                            /* (Size Break)*/
        AB0JW01.AB0JWQTT = AB0JW03.AB0JWQST[ABWIXM]; /* To wk fld*/
        AB0JW01.AB0JWQTT = AB0JW01.AB0JWQTT + AB6REC.AB6BUYSQ[ABWIDX1];
        AB0JW03.AB0JWQST[ABWIXM] = AB0JW01.AB0JWQTT; /* To save*/

                           /* (Pack Factor Qty)*/
        AB0JW01.AB0JWQTT = AB0JW03.AB0JWQPT[ABWIXM]; /* To wk fld*/
        AB0JW01.AB0JWQTT = AB0JW01.AB0JWQTT + AB6REC.AB6PACKQ[ABWIDX1];
        AB0JW03.AB0JWQPT[ABWIXM] = AB0JW01.AB0JWQTT; /* To save*/

      end

    end


    ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Loop through*/


  end



end // end AB0JS03

// Obtain Blnk/Fin Style name
Function AB0JS04()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select unique' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set PG2REC empty; /* Reset rec work area*/

  PG2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PG2REC.SY1STNBR = AB6REC.AB6XSTYN; /* Style no.*/
  PG2REC.SY2CLRID = AB6REC.AB6XCOLR; /* Color id*/
  PG2REC.XDMCD = AB6REC.XDMCD; /* Dimension cd*/


   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, save style name, then return to calling*/
                  /* process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      AB0JW01.AB0JWFSN = PG2REC.SY1SSTNM; /* Save style name*/
      return; /* Return to calling process*/

    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Style not found*/

      AB0JW01.AB0JWFSN = "*NOT FOUND*  "; /* Save style name*/
      return; /* Return to calling process*/

    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "F03 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS04

// Protect unused map dtl areas
Function AB0JS05()
   /* ------------------------------------------------------------*/
   /* Protect,Dark All Unused Columns/Lines on Map Detail Area.*/
   /* ------------------------------------------------------------*/

                 /* (Unused Map Detail Lines)*/

  ABWREC.ABWIXM = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] == "***") /* Unused line*/

      set AB0JM001.AB0JMBSC[ABWIXM] skip, invisible; /* Hdg 1*/
      set AB0JM001.AB0JMSSC[ABWIXM] skip, invisible; /* Hdg 2*/
      set AB0JM001.AB0JMHSB[ABWIXM] skip, invisible; /* Line hdg*/
      set AB0JM001.AB0JMQS1[ABWIXM] skip, invisible; /* Qty 1*/
      set AB0JM001.AB0JMQS2[ABWIXM] skip, invisible; /* Qty 2*/
      set AB0JM001.AB0JMQS3[ABWIXM] skip, invisible; /* Qty 3*/
      set AB0JM001.AB0JMQS4[ABWIXM] skip, invisible; /* Qty 4*/
      set AB0JM001.AB0JMQS5[ABWIXM] skip, invisible; /* Qty 5*/
      set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* Qty 6*/
      set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
      set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/
      set AB0JM001.AB0JMQST[ABWIXM] skip, invisible; /* Totals*/

      set AB0JM001.AB0JMBPC[ABWIXM] skip, invisible; /* Clr*/
      set AB0JM001.AB0JMSPC[ABWIXM] skip, invisible; /* Clr*/
      set AB0JM001.AB0JMHPF[ABWIXM] skip, invisible; /* Line hdg*/
      set AB0JM001.AB0JMQP1[ABWIXM] skip, invisible; /* Qty 1*/
      set AB0JM001.AB0JMQP2[ABWIXM] skip, invisible; /* Qty 2*/
      set AB0JM001.AB0JMQP3[ABWIXM] skip, invisible; /* Qty 3*/
      set AB0JM001.AB0JMQP4[ABWIXM] skip, invisible; /* Qty 4*/
      set AB0JM001.AB0JMQP5[ABWIXM] skip, invisible; /* Qty 5*/
      set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* Qty 6*/
      set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
      set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/
      set AB0JM001.AB0JMQPT[ABWIXM] skip, invisible; /* Totals*/

      set AB0JM001.AB0JM-ADD-BUY[ABWIXM] initialAttributes; /* Line hdg*/
      set AB0JM001.AB0JMQA1[ABWIXM] initialAttributes; /* Qty 1*/
      set AB0JM001.AB0JMQA2[ABWIXM] initialAttributes; /* Qty 2*/
      set AB0JM001.AB0JMQA3[ABWIXM] initialAttributes; /* Qty 3*/
      set AB0JM001.AB0JMQA4[ABWIXM] initialAttributes; /* Qty 4*/
      set AB0JM001.AB0JMQA5[ABWIXM] initialAttributes; /* Qty 5*/
      set AB0JM001.AB0JMQA6[ABWIXM] initialAttributes; /* Qty 6*/
      set AB0JM001.AB0JMQA7[ABWIXM] initialAttributes; /* Qty 7*/
      set AB0JM001.AB0JMQA8[ABWIXM] initialAttributes; /* Qty 8*/
      set AB0JM001.AB0JMQAT[ABWIXM] initialAttributes; /* Totals*/

    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end


                  /* (Unused Map Columns)*/

  if (AB0JW01.AB0JWSZC > 1) /* Sizes obtained*/
    ABWREC.ABWIXM = AB0JW01.AB0JWSZC; /* Initialize loop index*/
  else
    return; /* Return to calling process*/
  end



  while (ABWREC.ABWIXM <= 8) /* process all columns from start pt.*/
    set AB0JM001.SY4IDDSC[ABWIXM] skip, invisible; /* Size desc*/
    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/
  end



  ABWREC.ABWIXM = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Not Unused line*/

      if (AB0JW01.AB0JWSZC == 2) /* One size obtained*/

        set AB0JM001.AB0JMQS2[ABWIXM] skip, invisible; /* Qty 2*/
        set AB0JM001.AB0JMQS3[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM001.AB0JMQS4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQS5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQP2[ABWIXM] skip, invisible; /* Qty 2*/
        set AB0JM001.AB0JMQP3[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM001.AB0JMQP4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQP5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQA2[ABWIXM] skip, invisible; /* Qty 2*/
        set AB0JM001.AB0JMQA3[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM001.AB0JMQA4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQA5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQA6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/

      end

      if (AB0JW01.AB0JWSZC == 3) /* two sizes obtained*/

        set AB0JM001.AB0JMQS3[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM001.AB0JMQS4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQS5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQP3[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM001.AB0JMQP4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQP5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQA3[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM001.AB0JMQA4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQA5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQA6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/
      end

      if (AB0JW01.AB0JWSZC == 4) /* three sizes obtained*/

        set AB0JM001.AB0JMQS4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQS5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQP4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQP5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQA4[ABWIXM] skip, invisible; /* Qty 4*/
        set AB0JM001.AB0JMQA5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQA6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/

      end

      if (AB0JW01.AB0JWSZC == 5) /* four  sizes obtained*/

        set AB0JM001.AB0JMQS5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQP5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQA5[ABWIXM] skip, invisible; /* Qty 5*/
        set AB0JM001.AB0JMQA6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/

      end

      if (AB0JW01.AB0JWSZC == 6) /* five  sizes obtained*/

        set AB0JM001.AB0JMQS6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQP6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQA6[ABWIXM] skip, invisible; /* Qty 6*/
        set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/

      end

      if (AB0JW01.AB0JWSZC == 7) /* six   sizes obtained*/

        set AB0JM001.AB0JMQS7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQP7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/

        set AB0JM001.AB0JMQA7[ABWIXM] skip, invisible; /* Qty 7*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/

      end

      if (AB0JW01.AB0JWSZC == 8) /* seven sizes obtained*/
        set AB0JM001.AB0JMQS8[ABWIXM] skip, invisible; /* Qty 8*/
        set AB0JM001.AB0JMQP8[ABWIXM] skip, invisible; /* Qty 8*/
        set AB0JM001.AB0JMQA8[ABWIXM] skip, invisible; /* Qty 8*/
      end


    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/

  end



end // end AB0JS05

// Edit Cust Xref
Function AB0JS06()

  if (XP1REC.PC2CUXID == " ") /* XP1REC Field eq spaces*/
    AB0JM001.PC2CUXID = " "; /* Move blank customer cd*/
    return; /* Return to calling process*/
  end


  if (XP1REC.PC2CUXID == "?") /* Pop-up window requested*/
    XP1REC.PC2CUXID = " "; /* Move blank customer cd*/
    set AB0JM001.PC2CUXID cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 42; /* Indicate pop-up window not available*/
    ABWREC.ABWPRCSN = "S06 "; /* Process number*/
    return; /* Return to calling process*/
  end


   /* ------------------------------------------------------------*/
   /* Verify if customer cd entered is found in dprodc.vprdcu01*/
   /* ------------------------------------------------------------*/

   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/

  set PC2REC empty; /* initialize db record*/
  PC2REC.XGPCD = XP1REC.XGPCD; /* gpc cd*/
  PC2REC.PC2CUXID = XP1REC.PC2CUXID; /* customer*/


   /* *=============================**/
   /* *  Access Dprodc.vprdcu01     **/
   /* *=============================**/

  try
    call "IO3340" ("S ", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
    /* If successful call, return*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      XP1REC.PC2CUXID = " "; /* Move blank customer cd*/
      set AB0JM001.PC2CUXID cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 48; /* Indicate error message*/
      ABWREC.ABWPRCSN = "S06 "; /* Process number*/
      return; /* Return to calling process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "525 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODC.VPRDCU01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODC   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS06

// Edit Factory cd
Function AB0JS07()
  if (XP1REC.FY1FCTYC == " ") /* XP1REC Field eq spaces*/
    return; /* Return to calling process*/
  end


  if (XP1REC.FY1FCTYC == "?") /* Pop-up window requested*/
    XP1REC.FY1FCTYC = " "; /* Move blank Factory cd*/
    set AB0JM001.FY1FCTYC cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 42; /* Indicate pop-up window not available*/
    ABWREC.ABWPRCSN = "V02 "; /* Process number*/
    return; /* Return to calling process*/
  end


   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/

   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/

  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = XP1REC.XGPCD; /* gpc cd*/
  FY1REC.FY1FCTYC = XP1REC.FY1FCTYC; /* Fld office*/


   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/

  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      XP1REC.FY1FCTYC = " "; /* Move blank Factory cd*/
      set AB0JM001.FY1FCTYC cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 41; /* Indicate error message*/
      ABWREC.ABWPRCSN = "V02 "; /* Process number*/
      return; /* Return to calling process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "V02 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS07

// Edit Style no.
Function AB0JS08()
  if (XP1REC.SY1STNBR == " ") /* Style eq spaces*/
    XP1REC.SY1SSTNM = " "; /* Space out desc*/
    AB0JM001.SY1SSTNM = " "; /* Space out desc*/
    return; /* Exit to calling process*/
  end


  if (XP1REC.SY1STNBR == "?") /* Pop-up window requested*/
    XP1REC.SY1STNBR = " "; /* Space out wk storage*/
    XP1REC.SY1SSTNM = " "; /* Space out desc*/
    AB0JM001.SY1SSTNM = " "; /* Space out desc*/
    set AB0JM001.SY1STNBR cursor, bold; /* Highlight field*/
    XP1REC.XP1MNO = 42; /* Indicate pop-up not available*/
    ABWREC.ABWPRCSN = "S13 "; /* Process number*/
    return; /* Return to calling process*/
  end



   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *==================================**/
   /* *  Check Style in DPRODG.VSYCLR01  **/
   /* *==================================**/

  AB0JS09(); /* Select set style*/

  AB0JS10(); /* Validate style*/

  AB0JS11(); /* Close style cursor*/



end // end AB0JS08

// Select Set Style
Function AB0JS09()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/

  set PG2REC empty; /* Reset rec work area*/

  PG2REC.XGPCD = XP1REC.XGPCD; /* GPC cd*/
  PG2REC.SY1STNBR = XP1REC.SY1STNBR; /* Style no.*/


   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to calling process*/

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "V20 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS09

// Validate Style retrieved
Function AB0JS10()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/


  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/


  if (sysVar.errorCode == "00000000") /* Call successful*/


    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/

      XP1REC.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      AB0JM001.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/

      return; /* Return to calling process*/

    end


    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/

      XP1REC.SY1STNBR = " "; /* Space out wk storage*/
      XP1REC.SY1SSTNM = " "; /* Space out desc*/
      AB0JM001.SY1SSTNM = " "; /* Space out desc*/

      set AB0JM001.SY1STNBR cursor, bold; /* Highlight field*/
      XP1REC.XP1MNO = 38; /* Indicate error message*/
      ABWREC.ABWPRCSN = "V21 "; /* Process number*/
      return; /* Exit to calling rtn*/

    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "V21 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS10

// Close Style Cursor
Function AB0JS11()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/


   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to calling process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  ABWREC.ABWPRCSN = "V22 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
  converseLib.validationFailed(10); /* Indicate system error*/

  converseLib.clearScreen();
   /* Clear screen before redisplay*/



end // end AB0JS11

// Edit scheduler id
Function AB0JS13()
   /* ------------------------------------------------------------*/
   /* Get Two Charactor Scheduler Code From DPRODG.VSUSER01,*/
    /* then obtain valid Season, Year and Buy Month as assigned.*/
   /* ------------------------------------------------------------*/

  if (XP1REC.XXXUSER == " ") /* Eq spaces*/
    XP1REC.PG1SC4CD = " "; /* Space out save area*/
  end


   /* ------------------------------------------------------------*/
   /* Get Two Charactor Scheduler Code From DPRODG.VSUSER01*/
   /* ------------------------------------------------------------*/

  if (XP1REC.PG1SC4CD == "  ") /* If SCHEDULER CODE BLANK*/
    XP1REC.XXXUSER = COMMAREA.CAUSERID; /* Move CICS SIGNON ID*/
  end

  XP1REC.XP1ERRFL = " "; /* Reset error flag*/


  XPAB010(); /* Get 2 Digit Sched Code*/


  if (XP1REC.XP1ERRFL != " ") /* Edit error found*/
                  /* (Field in Error)*/
    set AB0JM001.PG1SC4CD cursor, bold; /* Highlight field*/
    ABWREC.ABWPRCSN = "V05 "; /* Process number*/
    XP1REC.XP1MNO = 21; /* Indicate error msg*/
    XP1REC.XXXUSER = " "; /* Space out save area*/
    XP1REC.PG1SC4CD = " "; /* Space out save area*/
    return; /* Return to calling process*/

  end


   /* ------------------------------------------------------------*/
   /* Get new current season, year, and buy month*/
   /* ------------------------------------------------------------*/

  set AB3REC empty; /* Initialize AB3REC*/

  XPAB020(); /* Get Current XSE/XSN/BUY-MO*/


end // end AB0JS13

// Edit map detail adjustments
Function AB0JS14()
   /* ------------------------------------------------------------*/
    /* Evaluate map detail data to determine the kind of data*/
     /* base update action necessary for each line. If valid*/
     /* update found, then assign update code. Otherwise, ignore*/
     /* map detail line.*/
   /* ------------------------------------------------------------*/


  ABWREC.ABWIXM = 1; /* Initialize line index*/



  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/


    if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Valid line*/

      AB0JW01.AB0JWQTM = 0; /* Reset line qty total*/
      AB0JW01.AB0JWCIN = " "; /* Reset change indicator*/

                    /* (Compute Map Line Qty Totals)*/
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP1[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP2[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP3[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP4[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP5[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP6[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP7[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM001.AB0JMQP8[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM002.AB0JMQP9[ABWIXM];
      AB0JW01.AB0JWQTM = AB0JW01.AB0JWQTM + AB0JM002.AB0JMQPA[ABWIXM];

                      /* (Check for Qty Entered)*/
      if (AB0JM001.AB0JMQP1[ABWIXM] == AB0JW03.AB0JWQP1[ABWIXM]
       && AB0JM001.AB0JMQP2[ABWIXM] == AB0JW03.AB0JWQP2[ABWIXM]
       && AB0JM001.AB0JMQP3[ABWIXM] == AB0JW03.AB0JWQP3[ABWIXM]
       && AB0JM001.AB0JMQP4[ABWIXM] == AB0JW03.AB0JWQP4[ABWIXM]
       && AB0JM001.AB0JMQP5[ABWIXM] == AB0JW03.AB0JWQP5[ABWIXM]
       && AB0JM001.AB0JMQP6[ABWIXM] == AB0JW03.AB0JWQP6[ABWIXM]
       && AB0JM001.AB0JMQP7[ABWIXM] == AB0JW03.AB0JWQP7[ABWIXM]
       && AB0JM001.AB0JMQP8[ABWIXM] == AB0JW03.AB0JWQP8[ABWIXM]
       && AB0JM002.AB0JMQP9[ABWIXM] == AB0JW03.AB0JWQP9[ABWIXM]
       && AB0JM002.AB0JMQPA[ABWIXM] == AB0JW03.AB0JWQPA[ABWIXM])
                 /* (then no changes were entered....)*/
      else

        AB0JW01.AB0JWCIN = "Y"; /* Indicate that updates entered*/

      end

             /* (Assign Valid Update Code Where Applicable)*/

      if (AB0JW01.AB0JWCIN == "Y") /* Changes were entered*/

                    /* (Move map data to save arrays)*/

        if (AB0JM001.AB0JMQP1[ABWIXM] != AB0JW03.AB0JWQP1[ABWIXM])
          if (AB0JM001.AB0JMQP1[ABWIXM] > 0) /* Greater than zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP1[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP1[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP1[ABWIXM] = AB0JM001.AB0JMQP1[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP1[ABWIXM] = AB0JM001.AB0JMQP1[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP2[ABWIXM] != AB0JW03.AB0JWQP2[ABWIXM])
          if (AB0JM001.AB0JMQP2[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP2[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP2[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP2[ABWIXM] = AB0JM001.AB0JMQP2[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP2[ABWIXM] = AB0JM001.AB0JMQP2[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP3[ABWIXM] != AB0JW03.AB0JWQP3[ABWIXM])
          if (AB0JM001.AB0JMQP3[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP3[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP3[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP3[ABWIXM] = AB0JM001.AB0JMQP3[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP3[ABWIXM] = AB0JM001.AB0JMQP3[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP4[ABWIXM] != AB0JW03.AB0JWQP4[ABWIXM])
          if (AB0JM001.AB0JMQP4[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP4[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP4[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP4[ABWIXM] = AB0JM001.AB0JMQP4[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP4[ABWIXM] = AB0JM001.AB0JMQP4[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP5[ABWIXM] != AB0JW03.AB0JWQP5[ABWIXM])
          if (AB0JM001.AB0JMQP5[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP5[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP5[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP5[ABWIXM] = AB0JM001.AB0JMQP5[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP5[ABWIXM] = AB0JM001.AB0JMQP5[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP6[ABWIXM] != AB0JW03.AB0JWQP6[ABWIXM])
          if (AB0JM001.AB0JMQP6[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP6[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP6[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP6[ABWIXM] = AB0JM001.AB0JMQP6[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP6[ABWIXM] = AB0JM001.AB0JMQP6[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP7[ABWIXM] != AB0JW03.AB0JWQP7[ABWIXM])
          if (AB0JM001.AB0JMQP7[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP7[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP7[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP7[ABWIXM] = AB0JM001.AB0JMQP7[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP7[ABWIXM] = AB0JM001.AB0JMQP7[ABWIXM];
          end
        end

        if (AB0JM001.AB0JMQP8[ABWIXM] != AB0JW03.AB0JWQP8[ABWIXM])
          if (AB0JM001.AB0JMQP8[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0; /* Initialize wk area*/
            AB0JW01.AB0JWPKR = AB0JM001.AB0JMQP8[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "1";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM001.AB0JMQP8[ABWIXM] cursor, bold; /* Highlight fld*/
            else
              AB0JW03.AB0JWQP8[ABWIXM] = AB0JM001.AB0JMQP8[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP8[ABWIXM] = AB0JM001.AB0JMQP8[ABWIXM];
          end
        end

        if (AB0JM002.AB0JMQP9[ABWIXM] != AB0JW03.AB0JWQP9[ABWIXM])
          if (AB0JM002.AB0JMQP9[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0;
            AB0JW01.AB0JWPKR = AB0JM002.AB0JMQP9[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "2";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM002.AB0JMQP9[ABWIXM] cursor, bold;
            else
              AB0JW03.AB0JWQP9[ABWIXM] = AB0JM002.AB0JMQP9[ABWIXM];
            end
          else
            AB0JW03.AB0JWQP9[ABWIXM] = AB0JM002.AB0JMQP9[ABWIXM];
          end
        end

        if (AB0JM002.AB0JMQPA[ABWIXM] != AB0JW03.AB0JWQPA[ABWIXM])
          if (AB0JM002.AB0JMQPA[ABWIXM] > 0) /* Greater that zero*/
            AB0JW01.AB0JWPKR = 0;
            AB0JW01.AB0JWPKR = AB0JM002.AB0JMQP9[ABWIXM]             / AB0JW01.AB0JWPKF;
            if (AB0JW01.AB0JWPK2 > 0) /* Not a multiple of pk factor*/
              AB0JW01.AB0JW-MAP-IND = "2";
              XP1REC.XP1MNO = 65; /* Indicate message*/
              ABWREC.ABWPRCSN = "S14"; /* Process number*/
              set AB0JM002.AB0JMQPA[ABWIXM] cursor, bold;
            else
              AB0JW03.AB0JWQPA[ABWIXM] = AB0JM002.AB0JMQPA[ABWIXM];
            end
          else
            AB0JW03.AB0JWQPA[ABWIXM] = AB0JM002.AB0JMQPA[ABWIXM];
          end
        end


        AB0JW03.AB0JWQPT[ABWIXM] = AB0JW01.AB0JWQTM;


        if (XP1REC.XP1MNO == 0)
          AB0JW03.AB0JWSTA[ABWIXM] = "U"; /* Tag for change*/
          AB0JW01.AB0JWUPI = "Y"; /* Indicate valid update*/
        end

      end

      AB0JS27(); /* additional buy row validation*/

    end


    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/


  end



end // end AB0JS14

// Select Set Upd DABUY.VBSIZE01
Function AB0JS15()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows, keys reflect current style*/
          /* in process.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

          /* (Style No.)*/
  AB6REC.SY1STNBR = AB0JW02.SY1STNBR[AB0JWCST]; /* style code*/

          /* (Wildcard color id )*/
  AB6REC.SY2CLRID = "***"; /* Color ID*/

          /* (Dimension Cd)*/
  AB6REC.XDMCD = AB0JW02.XDMCD[AB0JWCST];

          /* (Warehouse Cd)*/
  AB6REC.XWHCD = AB0JW02.XWHCD[AB0JWCST];

          /* (Owner group)*/
  AB6REC.XOWCD = "**";

          /* (Division Cd)*/
  AB6REC.XDVCD = AB0JW02.XDVCD[AB0JWCST];

         /* (Season code)*/
  AB6REC.XSECD = AB0JW02.XSECD[AB0JWCST];

         /* (Season year)*/
  AB6REC.XSNYR = AB0JW02.XSNYR[AB0JWCST];

          /* (Factory code)*/
  AB6REC.FY1FCTYC = AB0JW02.FY1FCTYC[AB0JWCST];

           /* (PO type)*/
  AB6REC.PC4ORTYP = AB0JW02.PC4ORTYP[AB0JWCST];

          /* (Customer id)*/
  AB6REC.PC2CUXID = AB0JW02.PC2CUXID[AB0JWCST];

           /* (Buy Month)*/
  AB6REC.AB3BUYMO = XP1REC.AB3BUYMO;



   /* *==========================**/
   /* *  Access DABUY.VBSIZE01   **/
   /* *==========================**/

  try
    call "IO3590" ("S1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/
    return; /* return*/
  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "U01 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB6REC.AB6KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0JS15

// Process Upd DABUY.VBSIZE01
Function AB0JS16()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VBSIZE01  **/
   /* *=========================**/

  try
    call "IO3590" ("N1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch the next row*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000") /* successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/

      if (AB6REC.XOWCD != "00")
        return;
      end

      ABWREC.ABWIDX5 = 1; /* Set loop index*/
      AB0JW01.AB0JWQTT = 0; /* Reset qty line totals*/

                    /* (Compute Qty Totals)*/
      while (ABWREC.ABWIDX5 <= 10) /* Process all sizes*/

        AB0JW01.AB0JWQTT = AB0JW01.AB0JWQTT + AB6REC.AB6PACKQ[ABWIDX5];
        AB0JW01.AB0JWQCT = AB0JW01.AB0JWQCT + AB6REC.AB6PACKQ[ABWIDX5];

        ABWREC.ABWIDX5 = ABWREC.ABWIDX5 + 1; /* Loop through*/

      end

      AB0JS17(); /* Process DABUY.VBCOLR01 updates*/

      return; /* Return to calling process*/

    end


    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      ABWREC.ABWSWC = "Y"; /* Indicate end of file*/

      return; /* Return to previous process*/

    end

  end



   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "U02 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Return to previous process*/



end // end AB0JS16

// Access DABUY.VBCOLR01 row upd
Function AB0JS17()
   /* ------------------------------------------------------------*/
   /* Select Unique the DABUY.VBCOLR01 row to be updated.*/
   /* Update specific DABUY.VBCOLR01 row from AB6REC keys.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

          /* (Style No.)*/
  AB5REC.SY1STNBR = AB6REC.SY1STNBR;

          /* (Color Id)*/
  AB5REC.SY2CLRID = AB6REC.SY2CLRID;

          /* (Dimension Cd)*/
  AB5REC.XDMCD = AB6REC.XDMCD;

          /* (Warehouse Cd)*/
  AB5REC.XWHCD = AB6REC.XWHCD;

          /* (Division Cd)*/
  AB5REC.XDVCD = AB6REC.XDVCD;

         /* (Season code)*/
  AB5REC.XSECD = AB6REC.XSECD;

         /* (Season year)*/
  AB5REC.XSNYR = AB6REC.XSNYR;

          /* (Factory code)*/
  AB5REC.FY1FCTYC = AB6REC.FY1FCTYC;

           /* (PO type)*/
  AB5REC.PC4ORTYP = AB6REC.PC4ORTYP;

          /* (Customer id)*/
  AB5REC.PC2CUXID = AB6REC.PC2CUXID;

           /* (Buy Month)*/
  AB5REC.AB3BUYMO = AB6REC.AB3BUYMO;



   /* *==========================**/
   /* *  Access DABUY.VBCOLR01   **/
   /* *==========================**/

  try
    call "IO3580" ("S ", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* no sql errors*/

    AB0JS18(); /* Update DABUY.VBCOLR01 row*/

    return; /* return to calling process*/

  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all updates*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S17 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT UNIQUE TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB5REC.AB5KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0JS17

// Update DABUY.VBCOLR01 db
Function AB0JS18()
   /* ------------------------------------------------------------*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/


   /* *=================================**/
   /* *  Move Update Item  into AB5REC  **/
   /* *=================================**/

  AB5REC.AB5ACTBY = AB0JW01.AB0JWQTT; /* Replace Actual Buy Qty*/

  AB5REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  AB5REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/



   /* *=============================**/
   /* *  Update DABUY.VBCOLR01 Row  **/
   /* *=============================**/

  try
    call "IO3580" ("U ", SQLCA, AB5REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to calling process*/

  end



   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row updated by other user/s*/
      ABWREC.ABWSWR = "Y"; /* Reselect same rows*/
      ABWREC.ABWPRCSN = "U11 "; /* Process number*/
      ABWREC.ABWNMO = 13; /* Indicate concurrent update*/
      exit stack; /* Exit to redisplay map*/
    else
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else

        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end
    end
  end

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback all db updates*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "U11 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBCOLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS18

// Close DABUY.VBSIZE01 cursor
Function AB0JS19()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/


   /* *=========================**/
   /* *  Access DABUY.VBSIZE01  **/
   /* *=========================**/

  try
    call "IO3590" ("C1", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close table set*/


   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   || sysVar.errorCode != "00000000") /* or unsuccessful call*/

    TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ABWREC.ABWPRCSN = "U03 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
    TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    return; /* Return to previous process*/

  end


end // end AB0JS19

// select unique afsty01 row
Function AB0JS22()

  TA1REC.TA1PGMNM = "AB0JS02 "; /* program name*/
  TA1REC.TA1MAP = "AB0JM001"; /* processing map*/

  set PG3REC empty; /* Clear record work area*/

   /* MOVE '01 TO PG3REC.PG3XDVCD     ; all divisions returned*/
  PG2REC.XGPCD = XP1REC.XGPCD; /* gpc cd as key*/
  PG2REC.SY1STNBR = AB6REC.SY1STNBR; /* style as key*/
  PG2REC.SY2CLRID = AB6REC.SY2CLRID; /* color as key*/
  PG2REC.XDMCD = AB6REC.XDMCD; /* dim cd as key*/
   /* MOVE AB0JW01.XQACD TO PG3REC.XQACD     ; qual cd as key*/

   /* MOVE 'PC' TO PG3REC.PG3FUNCD    ; all valid sizes*/
   /* MOVE 'N' TO PG3REC.PG3DATFM     ; not compressed sizes*/

   /* ------------------------------------------------------------*/
        /* call xspg301    --  (get all sizes)*/
   /* ------------------------------------------------------------*/

  XSPG202();

  if (sysVar.errorCode != "00000000" /* unexpected error found*/
   || SQLCA.VAGen_SQLCODE != 0)     

    ABWREC.ABWPRCSN = "S22 "; /* Process number*/
    exit stack;
  end
   /* *************/

   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set AF2REC empty;
  AF2REC.XDVCD = "01";
  AF2REC.SY1STNBR = PG2REC.SY1BSTNB;

  if (AF2REC.SY1STNBR == " ")
    AF2REC.SY1STNBR = AB6REC.SY1STNBR;
  end

  AF2REC.XDMCD = AB6REC.XDMCD;
  AF2REC.XSECD = XP1REC.XSECD;
  AF2REC.XSNYR = XP1REC.XSNYR;
  AF2REC.XOWCD = "00"; /* DEFAULT OWNER GROUP*/

   /* ------------------------------------------------------------*/
   /* Select unique the DACAST.VAFSTY01 row to be updated.*/
   /* ------------------------------------------------------------*/


  try
    call "IO3510" ("S ", SQLCA, AF2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If not successful, go to flow*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call successful*/
   || SQLCA.VAGen_SQLCODE != 0)      /* and normal return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "S22 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
    TA1REC.TA1MAP = "AB0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VAFSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end


   /* ------------------------------------------------------------*/
   /* Store all retrieved size descriptions.*/
   /* ------------------------------------------------------------*/

  ABWREC.ABWIDX4 = 1; /* Reset loop index*/
  ABWREC.ABWIDX5 = 0; /* Reset store index*/


  move 0 to AB0JW01.SY5SZID[1] for all; /* Reset Size Id Array*/
  move " " to AB0JW01.SY4IDDSC[1] for all; /* Reset Size Desc Array*/


  while (ABWREC.ABWIDX4 <= 40) /* Find valid sizes*/

    if (PG3REC.SY5SZID[ABWIDX4] > 0) /* Valid size found*/

      ABWREC.ABWIDX5 = ABWREC.ABWIDX5 + 1; /* Add store index*/
      if (ABWREC.ABWIDX5 <= 10) /* Within save array limits*/
        AB0JW01.SY5SZID[ABWIDX5] = PG3REC.SY5SZID[ABWIDX4];
        AB0JW01.SY4IDDSC[ABWIDX5] = PG3REC.SY4IDDSC[ABWIDX4];
      end

    end

    ABWREC.ABWIDX4 = ABWREC.ABWIDX4 + 1; /* Loop through*/

  end


  AB0JW01.AB0JWSZC = ABWREC.ABWIDX5 + 1; /* Save size count + 1*/



   /* ------------------------------------------------------------*/
   /* Center all retrieved size descriptions within save field*/
   /* ------------------------------------------------------------*/


  ABWREC.ABWIDX5 = 1; /* Set loop index*/


  while (ABWREC.ABWIDX5 <= 10) /* Center size descriptions*/

    AB0JW01.AB0JWSDS = " "; /* Initialize wk area*/
    AB0JW01.AB0JWSDC = " "; /* Initialize wk area*/
    AB0JW01.AB0JWSDS = AB0JW01.SY4IDDSC[ABWIDX5];

    if (AB0JW01.AB0JWSD5 != " ")
      if (AB0JW01.AB0JWSD4 != " ")
        if (AB0JW01.AB0JWSD3 != " ")
          if (AB0JW01.AB0JWSD2 != " ")
            if (AB0JW01.AB0JWSD1 != " ")
            else
              AB0JW01.AB0JWSC2 = AB0JW01.AB0JWSD2;
              AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD3;
              AB0JW01.AB0JWSC4 = AB0JW01.AB0JWSD4;
              AB0JW01.AB0JWSC5 = AB0JW01.AB0JWSD5;
            end
          else
            AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD3;
            AB0JW01.AB0JWSC4 = AB0JW01.AB0JWSD4;
            AB0JW01.AB0JWSC5 = AB0JW01.AB0JWSD5;
          end
        else
          AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD4;
          AB0JW01.AB0JWSC4 = AB0JW01.AB0JWSD5;
        end
      else
        AB0JW01.AB0JWSC3 = AB0JW01.AB0JWSD5;
      end
      AB0JW01.SY4IDDSC[ABWIDX5] = AB0JW01.AB0JWSDC;

    end

    ABWREC.ABWIDX5 = ABWREC.ABWIDX5 + 1; /* Loop through*/

  end



end // end AB0JS22

// select unique vscale row
Function AB0JS23()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set SY4REC empty;
  SY4REC.SY4SZSCL = AF2REC.SY4SZSCL;

   /* ------------------------------------------------------------*/
   /* Select unique the Dprod.Vscale01 row*/
   /* ------------------------------------------------------------*/


  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE != 0)     

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If not successful, go to flow*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call successful*/
   || SQLCA.VAGen_SQLCODE != 0)      /* and normal return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    ABWREC.ABWPRCSN = "S23 "; /* Process number*/
    TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
    TA1REC.TA1LOC = "FETCH SELECTED TABLE ROW";
    TA1REC.TA1MAP = "AB0JM001"; /* Map name*/
    TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSCALE01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

   /* ------------------------------------------------------------*/
   /* Store all retrieved size descriptions.*/
   /* ------------------------------------------------------------*/

  ABWREC.ABWIDX4 = 1; /* Reset loop index*/
  move " " to AB0JW01.SY4IDDSC[1] for all; /* Reset Size desc array*/

  while (ABWREC.ABWIDX4 <= 10) /* Find valid sizes*/
    ABWREC.ABWIDX5 = AB0JW01.SY5SZID[ABWIDX4];
    if (ABWREC.ABWIDX5 != 0)
      AB0JW01.SY4IDDSC[ABWIDX4] = SY4REC.SY4IDDSC[ABWIDX5];
    end
    ABWREC.ABWIDX4 = ABWREC.ABWIDX4 + 1; /* Loop through*/
  end

end // end AB0JS23

// Protect unused map dtl areas
Function AB0JS24()
   /* ------------------------------------------------------------*/
   /* Protect,Dark All Unused Columns/Lines on Map Detail Area.*/
   /* ------------------------------------------------------------*/

                 /* (Unused Map Detail Lines)*/

  ABWREC.ABWIXM = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] == "***") /* Unused line*/

      set AB0JM002.AB0JMBSC[ABWIXM] skip, invisible; /* Hdg 1*/
      set AB0JM002.AB0JMSSC[ABWIXM] skip, invisible; /* Hdg 2*/
      set AB0JM002.AB0JMHSB[ABWIXM] skip, invisible; /* Line hdg*/
      set AB0JM002.AB0JMQS9[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQSA[ABWIXM] skip, invisible;
      set AB0JM002.AB0JM-SO-NBR[ABWIXM] skip, invisible;
      set AB0JM002.AB0JM-SO-NBR[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQST[ABWIXM] skip, invisible; /* Totals*/

      set AB0JM002.AB0JMBPC[ABWIXM] skip, invisible; /* Clr*/
      set AB0JM002.AB0JMSPC[ABWIXM] skip, invisible; /* Clr*/
      set AB0JM002.AB0JMHPF[ABWIXM] skip, invisible; /* Line hdg*/
      set AB0JM002.AB0JMQP9[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQPA[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQPT[ABWIXM] skip, invisible; /* Totals*/

      set AB0JM002.AB0JM-ADD-BUY[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQA9[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQAA[ABWIXM] skip, invisible;
      set AB0JM002.AB0JMQAT[ABWIXM] skip, invisible; /* Totals*/

    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end


  ABWREC.ABWIXM = 1; /* Initialize line index*/

  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    if (AB0JW03.AB0JWBSC[ABWIXM] != "***") /* Used line*/

      if (AB0JW01.AB0JWSZC < 9) /* No sizes for this screen*/

        set AB0JM002.SY4IDDSC[1] skip, invisible;
        set AB0JM002.SY4IDDSC[2] skip, invisible;

        set AB0JM002.AB0JMQS9[ABWIXM] skip, invisible; /* Qty 2*/
        set AB0JM002.AB0JMQSA[ABWIXM] skip, invisible; /* Qty 3*/

        set AB0JM002.AB0JMQP9[ABWIXM] skip, invisible; /* Qty 2*/
        set AB0JM002.AB0JMQPA[ABWIXM] skip, invisible; /* Qty 3*/

        set AB0JM002.AB0JMQA9[ABWIXM] skip, invisible; /* Qty 2*/
        set AB0JM002.AB0JMQAA[ABWIXM] skip, invisible; /* Qty 3*/

      end

      if (AB0JW01.AB0JWSZC == 9) /* two sizes obtained*/

        set AB0JM002.SY4IDDSC[2] skip, invisible;

        set AB0JM002.AB0JMQSA[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM002.AB0JMQPA[ABWIXM] skip, invisible; /* Qty 3*/
        set AB0JM002.AB0JMQAA[ABWIXM] skip, invisible; /* Qty 3*/
      end

    end

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Loop through*/

  end




end // end AB0JS24

// Clear Detail Data from Map2
Function AB0JS25()
   /* ------------------------------------------------------------*/
   /* Set Protect,Dark all map detail data items. This is done*/
     /* when processing errors have been detected by the program.*/
   /* ------------------------------------------------------------*/


  set AB0JM002.AB0JMCSY skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMBC1 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMSC1 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMSTY skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMSSN skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMMFS skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMFCD skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMBC2 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMBC3 skip, invisible; /* Prot,Dark hdgs*/
  set AB0JM002.AB0JMHTL skip, invisible; /* Prot,Dark hdgs*/



  ABWREC.ABWIXM = 1; /* Initialize line index*/
  while (ABWREC.ABWIXM <= ABWREC.ABWMPMAX) /* Until end of lines*/

    set AB0JM002.AB0JMBSC[ABWIXM] skip, invisible; /* SB Blk Clr*/
    set AB0JM002.AB0JMSSC[ABWIXM] skip, invisible; /* SB Sty Clr*/
    set AB0JM002.AB0JMHSB[ABWIXM] skip, invisible; /* SB Sty Clr*/
    set AB0JM002.AB0JMQS9[ABWIXM] skip, invisible; /* SB Size 9*/
    set AB0JM002.AB0JMQSA[ABWIXM] skip, invisible; /* SB Size 10*/
    set AB0JM002.AB0JM-SO-NBR skip, invisible; /* sales order number*/
    set AB0JM002.AB0JM-NO-NBR skip, invisible; /* nike order number*/
    set AB0JM002.AB0JMQST[ABWIXM] skip, invisible; /* SB Totals*/

    set AB0JM002.AB0JMBPC[ABWIXM] skip, invisible; /* PF Blk Clr*/
    set AB0JM002.AB0JMSPC[ABWIXM] skip, invisible; /* PF Sty Clr*/
    set AB0JM002.AB0JMHPF[ABWIXM] skip, invisible; /* PF Sty Clr*/
    set AB0JM002.AB0JMQP9[ABWIXM] skip, invisible; /* PF Size 9*/
    set AB0JM002.AB0JMQPA[ABWIXM] skip, invisible; /* PF Size 10*/
    set AB0JM002.AB0JMQPT[ABWIXM] skip, invisible; /* PF Totals*/

    set AB0JM002.AB0JM-ADD-BUY[ABWIXM] skip, invisible; /* AB*/
    set AB0JM002.AB0JMQA9[ABWIXM] skip, invisible; /* AB Size 9*/
    set AB0JM002.AB0JMQAA[ABWIXM] skip, invisible; /* AB Size 10*/
    set AB0JM002.AB0JMQAT[ABWIXM] skip, invisible; /* AB Totals*/

    ABWREC.ABWIXM = ABWREC.ABWIXM + 1; /* Increment line index*/

  end



end // end AB0JS25

// Addtl Buy Row DABUY.VBSIZE01
Function AB0JS26()
   /* ------------------------------------------------------------*/
   /* Select the additional buy row.*/
   /* If not available, return.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

   /* *=================**/
   /* *  Build DB Keys  **/
   /* *=================**/

  set AB6REC empty; /* Clear record work area*/

  AB6REC.SY1STNBR = AB0JW03.AB0JWSTN[ABWIXM]; /* style*/
  AB6REC.SY2CLRID = AB0JW03.AB0JWSSC[ABWIXM]; /* color*/
  AB6REC.XDMCD = AB0JW03.AB0JWXDM[ABWIXM]; /* dimension*/
  AB6REC.XWHCD = AB0JW03.AB0JWXWH[ABWIXM]; /* whse*/
  AB6REC.XOWCD = "NS"; /* owner group*/
  AB6REC.XDVCD = AB0JW03.AB0JWXDV[ABWIXM]; /* division*/
  AB6REC.XSECD = AB0JW03.AB0JWXSE[ABWIXM]; /* season*/
  AB6REC.XSNYR = AB0JW03.AB0JWXSN[ABWIXM]; /* year*/
  AB6REC.FY1FCTYC = AB0JW03.AB0JWFCT[ABWIXM]; /* factory*/
  AB6REC.PC4ORTYP = AB0JW03.AB0JWORT[ABWIXM]; /* order type*/
  AB6REC.PC2CUXID = AB0JW03.AB0JWCID[ABWIXM]; /* cust xref*/
  AB6REC.AB3BUYMO = XP1REC.AB3BUYMO; /* buy month*/
  AB6REC.AB6BYTYP = AB0JW03.AB0JWBYT[ABWIXM]; /* buy type*/
  AB6REC.OP1PARTN = AB0JW03.OP1PARTN[ABWIXM]; /* part char*/
  AB6REC.OP1CUOID = AB0JW03.OP1CUOID[ABWIXM]; /* cust order id*/
  AB6REC.OP1NORID = AB0JW03.OP1NORID[ABWIXM]; /* nike order id*/


   /* *==========================**/
   /* *  Access DABUY.VBSIZE01   **/
   /* *==========================**/

  try
    call "IO3590" ("S ", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/



   /* *======================**/
   /* *  Check Call Results  **/
   /* *======================**/


  if (sysVar.errorCode == "00000000") /* successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* no sql errors*/
      AB0JW03.AB0JWQA1[ABWIXM] = AB6REC.AB6PACKQ[1];
      AB0JW03.AB0JWQA2[ABWIXM] = AB6REC.AB6PACKQ[2];
      AB0JW03.AB0JWQA3[ABWIXM] = AB6REC.AB6PACKQ[3];
      AB0JW03.AB0JWQA4[ABWIXM] = AB6REC.AB6PACKQ[4];
      AB0JW03.AB0JWQA5[ABWIXM] = AB6REC.AB6PACKQ[5];
      AB0JW03.AB0JWQA6[ABWIXM] = AB6REC.AB6PACKQ[6];
      AB0JW03.AB0JWQA7[ABWIXM] = AB6REC.AB6PACKQ[7];
      AB0JW03.AB0JWQA8[ABWIXM] = AB6REC.AB6PACKQ[8];
      AB0JW03.AB0JWQA9[ABWIXM] = AB6REC.AB6PACKQ[9];
      AB0JW03.AB0JWQAA[ABWIXM] = AB6REC.AB6PACKQ[10];
      return; /* return*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
        return; /* return*/
      end
    end
  end


  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/


  if (sysVar.errorCode == "00000000" /* successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* post error and continue process*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S26 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/
  TA1REC.TA1TBLKE = AB6REC.AB6KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* process name*/

  exit stack; /* Return to previous process*/



end // end AB0JS26

// Edit addtl buy line
Function AB0JS27()
   /* ------------------------------------------------------------*/
    /* Evaluate map detail data to determine the kind of data*/
     /* base update action necessary for each line. If valid*/
     /* update found, then assign update code. Otherwise, ignore*/
     /* map detail line.*/
   /* ------------------------------------------------------------*/


  AB0JW03.AB0JWQAT[ABWIXM] = 0;

  if (AB0JM001.AB0JMQA1[ABWIXM] != AB0JW03.AB0JWQA1[ABWIXM])
    if (AB0JM001.AB0JMQA1[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA1[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S27";
        set AB0JM001.AB0JMQA1[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA1[ABWIXM] = AB0JM001.AB0JMQA1[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA1[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA1[ABWIXM] = AB0JM001.AB0JMQA1[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA2[ABWIXM] != AB0JW03.AB0JWQA2[ABWIXM])
    if (AB0JM001.AB0JMQA2[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA2[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA2[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA2[ABWIXM] = AB0JM001.AB0JMQA2[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA2[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA2[ABWIXM] = AB0JM001.AB0JMQA2[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA3[ABWIXM] != AB0JW03.AB0JWQA3[ABWIXM])
    if (AB0JM001.AB0JMQA3[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA3[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA3[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA3[ABWIXM] = AB0JM001.AB0JMQA3[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA3[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA3[ABWIXM] = AB0JM001.AB0JMQA3[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA4[ABWIXM] != AB0JW03.AB0JWQA4[ABWIXM])
    if (AB0JM001.AB0JMQA4[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA4[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA4[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA4[ABWIXM] = AB0JM001.AB0JMQA4[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA4[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA4[ABWIXM] = AB0JM001.AB0JMQA4[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA5[ABWIXM] != AB0JW03.AB0JWQA5[ABWIXM])
    if (AB0JM001.AB0JMQA5[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA5[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA5[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA5[ABWIXM] = AB0JM001.AB0JMQA5[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA5[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA5[ABWIXM] = AB0JM001.AB0JMQA5[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA6[ABWIXM] != AB0JW03.AB0JWQA6[ABWIXM])
    if (AB0JM001.AB0JMQA6[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA6[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA6[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA6[ABWIXM] = AB0JM001.AB0JMQA6[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA6[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA6[ABWIXM] = AB0JM001.AB0JMQA6[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA7[ABWIXM] != AB0JW03.AB0JWQA7[ABWIXM])
    if (AB0JM001.AB0JMQA7[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA7[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA7[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA7[ABWIXM] = AB0JM001.AB0JMQA7[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA7[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA7[ABWIXM] = AB0JM001.AB0JMQA7[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM001.AB0JMQA8[ABWIXM] != AB0JW03.AB0JWQA8[ABWIXM])
    if (AB0JM001.AB0JMQA8[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM001.AB0JMQA8[ABWIXM] / AB0JW01.AB0JWPKF;
      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "1";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM001.AB0JMQA8[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/
        AB0JW03.AB0JWQA8[ABWIXM] = AB0JM001.AB0JMQA8[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA8[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA8[ABWIXM] = AB0JM001.AB0JMQA8[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM002.AB0JMQA9[ABWIXM] != AB0JW03.AB0JWQA9[ABWIXM])
    if (AB0JM002.AB0JMQA9[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM002.AB0JMQA9[ABWIXM] / AB0JW01.AB0JWPKF;

      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "2";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM002.AB0JMQA9[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y";
        AB0JW03.AB0JWQA9[ABWIXM] = AB0JM002.AB0JMQA9[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQA9[ABWIXM];
      end

    else

      AB0JW03.AB0JWQA9[ABWIXM] = AB0JM002.AB0JMQA9[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end


  if (AB0JM002.AB0JMQAA[ABWIXM] != AB0JW03.AB0JWQAA[ABWIXM])
    if (AB0JM002.AB0JMQAA[ABWIXM] > 0)
      AB0JW01.AB0JWPKR = 0;
      AB0JW01.AB0JWPKR = AB0JM002.AB0JMQAA[ABWIXM] / AB0JW01.AB0JWPKF;

      if (AB0JW01.AB0JWPK2 > 0)
        AB0JW01.AB0JW-MAP-IND = "2";
        XP1REC.XP1MNO = 65;
        ABWREC.ABWPRCSN = "S14";
        set AB0JM002.AB0JMQAA[ABWIXM] cursor, bold;
      else
        AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y";
        AB0JW03.AB0JWQAA[ABWIXM] = AB0JM002.AB0JMQAA[ABWIXM];
        AB0JW03.AB0JWQAT[ABWIXM] = AB0JW03.AB0JWQAT[ABWIXM]         + AB0JW03.AB0JWQAA[ABWIXM];
      end

    else

      AB0JW03.AB0JWQAA[ABWIXM] = AB0JM002.AB0JMQAA[ABWIXM];
      AB0JW03.AB0JW-ADD-BUY-UPD[ABWIXM] = "Y"; /* add buy row upd*/

    end
  end



  if (XP1REC.XP1MNO == 0)
    AB0JW03.AB0JWSTA[ABWIXM] = "U"; /* Tag for change*/
    AB0JW01.AB0JWUPI = "Y"; /* Indicate valid update*/
  end


end // end AB0JS27

// Update DABUY.VBSIZE01 add buy
Function AB0JS28()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/


   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/

  set AB6REC empty; /* Reset Wk Storage field*/

  AB6REC.SY1STNBR = AB0JW03.AB0JWSTN[ABWIXM]; /* Style no.*/
  AB6REC.SY2CLRID = AB0JW03.AB0JWCOL[ABWIXM]; /* Color id*/
  AB6REC.XDMCD = AB0JW03.AB0JWXDM[ABWIXM]; /* Dimension cd*/
  AB6REC.XOWCD = "NS"; /* add buy owner group*/
  AB6REC.XWHCD = AB0JW03.AB0JWXWH[ABWIXM]; /* Warehouse cd*/
  AB6REC.XDVCD = AB0JW03.AB0JWXDV[ABWIXM]; /* Division cd*/
  AB6REC.XSECD = AB0JW03.AB0JWXSE[ABWIXM]; /* Season cd*/
  AB6REC.XSNYR = AB0JW03.AB0JWXSN[ABWIXM]; /* Season yr*/
  AB6REC.FY1FCTYC = AB0JW03.AB0JWFCT[ABWIXM]; /* Factory cd*/
  AB6REC.PC4ORTYP = AB0JW03.AB0JWORT[ABWIXM]; /* Order type*/
  AB6REC.PC2CUXID = AB0JW03.AB0JWCID[ABWIXM]; /* Cust id*/
  AB6REC.AB3BUYMO = AB0JW03.AB0JWBYM[ABWIXM]; /* Buy month*/
  AB6REC.AB6BYTYP = AB0JW03.AB0JWBYT[ABWIXM]; /* Buy type*/
  AB6REC.OP1PARTN = AB0JW03.OP1PARTN[ABWIXM];
  AB6REC.OP1CUOID = AB0JW03.OP1CUOID[ABWIXM];
  AB6REC.OP1NORID = AB0JW03.OP1NORID[ABWIXM];



   /* *=====================================**/
   /* *  Move Non-Update Items into AB6REC  **/
   /* *=====================================**/

  AB6REC.AB3BUYST = AB0JW03.AB0JWBYS[ABWIXM]; /* Buy status*/
  AB6REC.AB3BYSDT = AB0JW03.AB0JWBYD[ABWIXM]; /* Buy date*/
  AB6REC.PC3PONBR = AB0JW03.AB0JWPON[ABWIXM]; /* PO number*/
  AB6REC.AB6XSTYN = AB0JW03.AB0JWFSY[ABWIXM]; /* Blk/fin style*/
  AB6REC.AB6XCOLR = AB0JW03.AB0JWFCD[ABWIXM]; /* Blk/fin color*/
  AB6REC.AB6XFCTY = AB0JW03.AB0JWFFC[ABWIXM]; /* Blk/fin fc*/
  AB6REC.AB6BKFNI = AB0JW03.AB0JWFBL[ABWIXM]; /* Blk/fin indicator*/



   /* *=====================================**/
   /* *  Read VBSIZE01                      **/
   /* *=====================================**/

  try
    call "IO3590" ("S ", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, update VBSIZE01.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

    /* *=================================**/
    /* *  Move Update Items into AB6REC  **/
    /* *=================================**/

      ABWREC.ABWIDX1 = 1; /* Reset loop index*/

                   /* (Sizes)*/
      while (ABWREC.ABWIDX1 <= 10) /* Process all sizes*/
        AB6REC.SY5SZID[ABWIDX1] = AB0JW01.SY5SZID[ABWIDX1];
        ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Loop through*/
      end

                     /* (add buy Qtys)*/
      AB6REC.AB6PACKQ[1] = AB0JW03.AB0JWQA1[ABWIXM]; /* Move Qty1*/
      AB6REC.AB6PACKQ[2] = AB0JW03.AB0JWQA2[ABWIXM]; /* Move Qty2*/
      AB6REC.AB6PACKQ[3] = AB0JW03.AB0JWQA3[ABWIXM]; /* Move Qty3*/
      AB6REC.AB6PACKQ[4] = AB0JW03.AB0JWQA4[ABWIXM]; /* Move Qty4*/
      AB6REC.AB6PACKQ[5] = AB0JW03.AB0JWQA5[ABWIXM]; /* Move Qty5*/
      AB6REC.AB6PACKQ[6] = AB0JW03.AB0JWQA6[ABWIXM]; /* Move Qty6*/
      AB6REC.AB6PACKQ[7] = AB0JW03.AB0JWQA7[ABWIXM]; /* Move Qty7*/
      AB6REC.AB6PACKQ[8] = AB0JW03.AB0JWQA8[ABWIXM]; /* Move Qty8*/
      AB6REC.AB6PACKQ[9] = AB0JW03.AB0JWQA9[ABWIXM]; /* Move Qty9*/
      AB6REC.AB6PACKQ[10] = AB0JW03.AB0JWQAA[ABWIXM]; /* Move Qty10*/


      AB6REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
      AB6REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/


    /* *=====================================**/
    /* *  Update VBSIZE01                    **/
    /* *=====================================**/

      try
        call "IO3590" ("U ", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
      end


    else

      if (SQLCA.VAGen_SQLCODE == 100) /* not found*/

    /* *=================================**/
    /* *  Move Update Items into AB6REC  **/
    /* *=================================**/

        ABWREC.ABWIDX1 = 1; /* Reset loop index*/

                   /* (Sizes)*/
        while (ABWREC.ABWIDX1 <= 10) /* Process all sizes*/
          AB6REC.SY5SZID[ABWIDX1] = AB0JW01.SY5SZID[ABWIDX1];
          ABWREC.ABWIDX1 = ABWREC.ABWIDX1 + 1; /* Loop through*/
        end

                     /* (add buy Qtys)*/
        AB6REC.AB6PACKQ[1] = AB0JW03.AB0JWQA1[ABWIXM]; /* Move Qty1*/
        AB6REC.AB6PACKQ[2] = AB0JW03.AB0JWQA2[ABWIXM]; /* Move Qty2*/
        AB6REC.AB6PACKQ[3] = AB0JW03.AB0JWQA3[ABWIXM]; /* Move Qty3*/
        AB6REC.AB6PACKQ[4] = AB0JW03.AB0JWQA4[ABWIXM]; /* Move Qty4*/
        AB6REC.AB6PACKQ[5] = AB0JW03.AB0JWQA5[ABWIXM]; /* Move Qty5*/
        AB6REC.AB6PACKQ[6] = AB0JW03.AB0JWQA6[ABWIXM]; /* Move Qty6*/
        AB6REC.AB6PACKQ[7] = AB0JW03.AB0JWQA7[ABWIXM]; /* Move Qty7*/
        AB6REC.AB6PACKQ[8] = AB0JW03.AB0JWQA8[ABWIXM]; /* Move Qty8*/
        AB6REC.AB6PACKQ[9] = AB0JW03.AB0JWQA9[ABWIXM]; /* Move Qty9*/
        AB6REC.AB6PACKQ[10] = AB0JW03.AB0JWQAA[ABWIXM]; /* Move Qty10*/


        AB6REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
        AB6REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/



    /* *==============================**/
    /* *  Insert DABUY.VBSIZE01  Row  **/
    /* *==============================**/

        try
          call "IO3590" ("A ", SQLCA, AB6REC) {isNoRefresh = yes, isExternal = yes};
        end

      end
    end

   /* ------------------------------------------------------------*/
    /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

      return; /* Return to calling process*/

    end
  end



   /* ------------------------------------------------------------*/
    /* If data not available, return an error message to the user.*/
    /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all db updates*/

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S28 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBSIZE01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS28

// Update DABUY.VBPLAN01 add buy
Function AB0JS29()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/


   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/

  set AB4REC empty; /* Reset Wk Storage field*/

  AB4REC.SY1STNBR = AB0JW03.AB0JWSTN[ABWIXM]; /* Style no.*/
  AB4REC.XDMCD = AB0JW03.AB0JWXDM[ABWIXM]; /* Dimension cd*/
  AB4REC.XOWCD = "NS"; /* add buy owner group*/
  AB4REC.XWHCD = AB0JW03.AB0JWXWH[ABWIXM]; /* Warehouse cd*/
  AB4REC.XDVCD = AB0JW03.AB0JWXDV[ABWIXM]; /* Division cd*/
  AB4REC.XSECD = AB0JW03.AB0JWXSE[ABWIXM]; /* Season cd*/
  AB4REC.XSNYR = AB0JW03.AB0JWXSN[ABWIXM]; /* Season yr*/
  AB4REC.FY1FCTYC = AB0JW03.AB0JWFCT[ABWIXM]; /* Factory cd*/
  AB4REC.PC4ORTYP = AB0JW03.AB0JWORT[ABWIXM]; /* Order type*/
  AB4REC.PC2CUXID = AB0JW03.AB0JWCID[ABWIXM]; /* Cust id*/
  AB4REC.AB3BUYMO = AB0JW03.AB0JWBYM[ABWIXM]; /* Buy month*/



   /* *=====================================**/
   /* *  Move Non-Update Items into AB4REC  **/
   /* *=====================================**/

  AB4REC.AB3BUYST = AB0JW03.AB0JWBYS[ABWIXM]; /* Buy status*/
  AB4REC.AB3BYSDT = AB0JW03.AB0JWBYD[ABWIXM]; /* Buy date*/



   /* *=====================================**/
   /* *  Read VBPLAN01                      **/
   /* *=====================================**/

  try
    call "IO3570" ("S ", SQLCA, AB4REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, update VBPLAN01.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

      return;

    else

      if (SQLCA.VAGen_SQLCODE == 100) /* not found*/

    /* *=================================**/
    /* *  Move Update Items into AB4REC  **/
    /* *=================================**/

        AB4REC.AB4SMBQT = 0; /* Total Buy Qty*/

        AB4REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
        AB4REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

    /* *==============================**/
    /* *  Insert DABUY.VBPLAN01  Row  **/
    /* *==============================**/

        try
          call "IO3570" ("A ", SQLCA, AB4REC) {isNoRefresh = yes, isExternal = yes};
        end


      end
    end


   /* ------------------------------------------------------------*/
    /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

      return; /* Return to calling process*/

    end
  end



   /* ------------------------------------------------------------*/
    /* If data not available, return an error message to the user.*/
    /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all db updates*/

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S29 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VBPLAN01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS29

// Update DABUY.VABSTY01 add buy
Function AB0JS30()
   /* ------------------------------------------------------------*/
   /* Move update items to corresponding DB fields.*/
   /* Call IO module to perform actual update process.*/
   /* ------------------------------------------------------------*/


   /* *==================**/
   /* *  Build DB Keys   **/
   /* *==================**/

  set AB2REC empty; /* Reset Wk Storage field*/

  AB2REC.SY1STNBR = AB0JW03.AB0JWSTN[ABWIXM]; /* Style no.*/
  AB2REC.XDMCD = AB0JW03.AB0JWXDM[ABWIXM]; /* Dimension cd*/
  AB2REC.XOWCD = "NS"; /* add buy owner group*/
  AB2REC.XWHCD = AB0JW03.AB0JWXWH[ABWIXM]; /* Warehouse cd*/
  AB2REC.XDVCD = AB0JW03.AB0JWXDV[ABWIXM]; /* Division cd*/
  AB2REC.XSECD = AB0JW03.AB0JWXSE[ABWIXM]; /* Season cd*/
  AB2REC.XSNYR = AB0JW03.AB0JWXSN[ABWIXM]; /* Season yr*/
  AB2REC.FY1FCTYC = AB0JW03.AB0JWFCT[ABWIXM]; /* Factory cd*/
  AB2REC.PC4ORTYP = AB0JW03.AB0JWORT[ABWIXM]; /* Order type*/
  AB2REC.PC2CUXID = AB0JW03.AB0JWCID[ABWIXM]; /* Cust id*/


   /* *=====================================**/
   /* *  Read VABSTY01                      **/
   /* *=====================================**/

  try
    call "IO3560" ("S ", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, update VBPLAN01.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

      return;

    else

      if (SQLCA.VAGen_SQLCODE == 100) /* not found*/

    /* *=====================================**/
    /* *  Move Non-Update Items into AB2REC  **/
    /* *=====================================**/

        AB2REC.PG1SC4CD = XP1REC.PG1SC4CD; /* scheduler code*/
        AB2REC.AB6BKFNI = AB6REC.AB6BKFNI; /* blank/finish ind*/


        AB2REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
        AB2REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

    /* *==============================**/
    /* *  Insert DABUY.VABSTY01  Row  **/
    /* *==============================**/

        try
          call "IO3560" ("A ", SQLCA, AB2REC) {isNoRefresh = yes, isExternal = yes};
        end


      end
    end


   /* ------------------------------------------------------------*/
    /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

      return; /* Return to calling process*/

    end
  end



   /* ------------------------------------------------------------*/
    /* If data not available, return an error message to the user.*/
    /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Rollback all db updates*/

      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  ABWREC.ABWPRCSN = "S30 "; /* Process number*/
  TA1REC.TA1PGMNM = ABWREC.ABWERLOC; /* Error location*/
  TA1REC.TA1LOC = "UPDATE SELECTED TABLE ROW";
  TA1REC.TA1MAP = ABWREC.XXXMAPNM; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VABSTY01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  AB0JM001.XXXPRCNM = ABWREC.ABWERLOC; /* Process name*/

  exit stack; /* Exit to redisplay map*/



end // end AB0JS30

//*** RECORD=AB0JW01 ****
// ********************************
// Application Working Storage (1).
// ********************************
// ***********************
Record AB0JW01 type basicRecord
  10 AB6XSTYN AB6XSTYN ; 
  10 AB6XCOLR AB6XCOLR ; 
  10 SY4IDDSC SY4IDDSC [10] ; 
  10 SY5SZID SY5SZID [10] ; 
  10 XQACD XQACD ; 
  10 AB0JWCIN AB0JWCIN ; 
  10 AB0JWCST AB0JWCST ; 
  10 AB0JWFSN AB0JWFSN ; 
  10 AB0JWMST AB0JWMST ; 
  10 AB0JWPKF AB0JWPKF ; 
  10 AB0JWPKR AB0JWPKR ; 
    15 AB0JWPK1 AB0JWPK1 ; 
    15 AB0JWPK2 AB0JWPK2 ; 
  10 AB0JWQCT AB0JWQCT ; 
  10 AB0JWQTM AB0JWQTM ; 
  10 AB0JWQTT AB0JWQTT ; 
  10 AB0JWQTW AB0JWQTW ; 
  10 AB0JWSCH AB0JWSCH ; 
  10 AB0JWSDS AB0JWSDS ; 
    15 AB0JWSD1 AB0JWSD1 ; 
    15 AB0JWSD2 AB0JWSD2 ; 
    15 AB0JWSD3 AB0JWSD3 ; 
    15 AB0JWSD4 AB0JWSD4 ; 
    15 AB0JWSD5 AB0JWSD5 ; 
  10 AB0JWSDC AB0JWSDC ; 
    15 AB0JWSC1 AB0JWSC1 ; 
    15 AB0JWSC2 AB0JWSC2 ; 
    15 AB0JWSC3 AB0JWSC3 ; 
    15 AB0JWSC4 AB0JWSC4 ; 
    15 AB0JWSC5 AB0JWSC5 ; 
  10 AB0JWSIX AB0JWSIX ; 
  10 AB0JWSLM AB0JWSLM ; 
  10 AB0JWSTS AB0JWSTS ; 
  10 AB0JWSZC AB0JWSZC ; 
  10 AB0JWTSP AB0JWTSP ; 
  10 AB0JWUPI AB0JWUPI ; 
  10 AB0JWUPD AB0JWUPD ; 
  10 AB0JWXPC AB0JWXPC ; 
  10 AB0JWXSA AB0JWXSA ; 
    15 AB0JWXSS AB0JWXSS ; 
    15 AB0JWXYR AB0JWXYR ; 
  10 AB0JWXSY AB0JWXSY ; 
  10 AB0JW-MAP-IND AB0JW-MAP-IND ; 
end // end AB0JW01

//*** RECORD=AB0JW02 ****
// *****************************************************
// Application Working Storage (2): Map Detail Save Area
// *****************************************************
// ***********************
Record AB0JW02 type basicRecord
  5 AB0JWSTY AB0JWSTY [1394] ; 
    10 AB0JWQID AB0JWQID ; 
    10 SY1STNBR SY1STNBR ; 
    10 XDMCD XDMCD ; 
    10 XWHCD XWHCD ; 
    10 XDVCD XDVCD ; 
    10 XSECD XSECD ; 
    10 XSNYR XSNYR ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PC2CUXID PC2CUXID ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 XGACD XGACD ; 
    10 XPCCD XPCCD ; 
    10 XSUCD XSUCD ; 
    10 XQTCD1 XQTCD1 ; 
    10 XQTCD2 XQTCD2 ; 
    10 FY1FRGN FY1FRGN ; 
    10 FY6FOCD FY6FOCD ; 
    10 AB6BKFNI AB6BKFNI ; 
    10 AB0JWMSI AB0JWMSI ; 
end // end AB0JW02

//*** RECORD=AB0JW03 ****
// *****************************************************
// Application Working Storage (3): Map Detail Save Area
// *****************************************************
// ***********************
Record AB0JW03 type basicRecord
  5 * char(1089) ; 
    10 AB0JWLEN AB0JWLEN ; 
    10 AB0JWSTA AB0JWSTA [5] ; 
    10 AB0JW-ADD-BUY-UPD AB0JW-ADD-BUY-UPD [5] ; 
    10 AB0JWSTC AB0JWSTC [5] ; 
    10 AB0JWBSC AB0JWBSC [5] ; 
    10 AB0JWSSC AB0JWSSC [5] ; 
    10 AB0JWQS1 AB0JWQS1 [5] ; 
    10 AB0JWQS2 AB0JWQS2 [5] ; 
    10 AB0JWQS3 AB0JWQS3 [5] ; 
    10 AB0JWQS4 AB0JWQS4 [5] ; 
    10 AB0JWQS5 AB0JWQS5 [5] ; 
    10 AB0JWQS6 AB0JWQS6 [5] ; 
    10 AB0JWQS7 AB0JWQS7 [5] ; 
    10 AB0JWQS8 AB0JWQS8 [5] ; 
    10 AB0JWQS9 AB0JWQS9 [5] ; 
    10 AB0JWQSA AB0JWQSA [5] ; 
    10 AB0JWQST AB0JWQST [5] ; 
    10 AB0JWCCT AB0JWCCT [5] ; 
    10 AB0JWBPC AB0JWBPC [5] ; 
    10 AB0JWSPC AB0JWSPC [5] ; 
    10 AB0JWQP1 AB0JWQP1 [5] ; 
    10 AB0JWQP2 AB0JWQP2 [5] ; 
    10 AB0JWQP3 AB0JWQP3 [5] ; 
    10 AB0JWQP4 AB0JWQP4 [5] ; 
    10 AB0JWQP5 AB0JWQP5 [5] ; 
    10 AB0JWQP6 AB0JWQP6 [5] ; 
    10 AB0JWQP7 AB0JWQP7 [5] ; 
    10 AB0JWQP8 AB0JWQP8 [5] ; 
    10 AB0JWQP9 AB0JWQP9 [5] ; 
    10 AB0JWQPA AB0JWQPA [5] ; 
    10 AB0JWQPT AB0JWQPT [5] ; 
    10 AB0JWQA1 AB0JWQA1 [5] ; 
    10 AB0JWQA2 AB0JWQA2 [5] ; 
    10 AB0JWQA3 AB0JWQA3 [5] ; 
    10 AB0JWQA4 AB0JWQA4 [5] ; 
    10 AB0JWQA5 AB0JWQA5 [5] ; 
    10 AB0JWQA6 AB0JWQA6 [5] ; 
    10 AB0JWQA7 AB0JWQA7 [5] ; 
    10 AB0JWQA8 AB0JWQA8 [5] ; 
    10 AB0JWQA9 AB0JWQA9 [5] ; 
    10 AB0JWQAA AB0JWQAA [5] ; 
    10 AB0JWQAT AB0JWQAT [5] ; 
    10 AB0JWSTN AB0JWSTN [5] ; 
    10 AB0JWCOL AB0JWCOL [5] ; 
    10 AB0JWXDM AB0JWXDM [5] ; 
    10 AB0JWXWH AB0JWXWH [5] ; 
    10 AB0JWXOW AB0JWXOW [5] ; 
    10 AB0JWXDV AB0JWXDV [5] ; 
    10 AB0JWXSE AB0JWXSE [5] ; 
    10 AB0JWXSN AB0JWXSN [5] ; 
    10 AB0JWFCT AB0JWFCT [5] ; 
    10 AB0JWORT AB0JWORT [5] ; 
    10 AB0JWCID AB0JWCID [5] ; 
    10 AB0JWBYM AB0JWBYM [5] ; 
    10 AB0JWBYT AB0JWBYT [5] ; 
    10 AB0JWBYS AB0JWBYS [5] ; 
    10 AB0JWBYD AB0JWBYD [5] ; 
    10 AB0JWPON AB0JWPON [5] ; 
    10 OP1PARTN OP1PARTN [5] ; 
    10 OP1CUOID OP1CUOID [5] ; 
    10 OP1NORID OP1NORID [5] ; 
    10 AB0JWFSY AB0JWFSY [5] ; 
    10 AB0JWFCD AB0JWFCD [5] ; 
    10 AB0JWFFC AB0JWFFC [5] ; 
    10 AB0JWFBL AB0JWFBL [5] ; 
    10 AB0JWCHC AB0JWCHC [5] ; 
end // end AB0JW03

//*** RECORD=AB0JW04 ****
// *****************************************************
// Application Working Storage (2): Map Detail Save Area
// *****************************************************
// ***********************
Record AB0JW04 type basicRecord
  5 AB0JWSTY AB0JWSTY [1394] ; 
    10 AB0JWQID AB0JWQID ; 
    10 SY1STNBR SY1STNBR ; 
    10 XDMCD XDMCD ; 
    10 XWHCD XWHCD ; 
    10 XDVCD XDVCD ; 
    10 XSECD XSECD ; 
    10 XSNYR XSNYR ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC4ORTYP PC4ORTYP ; 
    10 PC2CUXID PC2CUXID ; 
    10 PG1SC4CD PG1SC4CD ; 
    10 XGACD XGACD ; 
    10 XPCCD XPCCD ; 
    10 XSUCD XSUCD ; 
    10 XQTCD1 XQTCD1 ; 
    10 XQTCD2 XQTCD2 ; 
    10 FY1FRGN FY1FRGN ; 
    10 FY6FOCD FY6FOCD ; 
    10 AB6BKFNI AB6BKFNI ; 
    10 AB0JWMSI AB0JWMSI ; 
end // end AB0JW04

// update add buy row
DataItem AB0JW-ADD-BUY-UPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab0j map display indicator
DataItem AB0JW-MAP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color cd - BRK (PF)
DataItem AB0JWBPC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color cd - BRK (SB)
DataItem AB0JWBSC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Buy Status Date
DataItem AB0JWBYD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Buy Month, Format YYMM
DataItem AB0JWBYM int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Buy Status
DataItem AB0JWBYS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Buy Action Code
DataItem AB0JWBYT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Change count
DataItem AB0JWCCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change count
DataItem AB0JWCHC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PRDCU_ID
DataItem AB0JWCID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map Qty change indicator
DataItem AB0JWCIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// identifying color
DataItem AB0JWCOL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current style in process
DataItem AB0JWCST smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Blank/Finished Indicator
DataItem AB0JWFBL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Finished Color Code
DataItem AB0JWFCD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FY_FCTY_CD
DataItem AB0JWFCT char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Finished Factory Code
DataItem AB0JWFFC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Blk/Fin Style name
DataItem AB0JWFSN char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Finished Style Number
DataItem AB0JWFSY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem AB0JWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Multiple style indicator
DataItem AB0JWMSI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Max styles retrieved
DataItem AB0JWMST smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PO_OT_CD
DataItem AB0JWORT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Pack Factor Num 1 (Whole)
DataItem AB0JWPK1 num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Pack Factor Num 2 (Decimal)
DataItem AB0JWPK2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Pack Factor Qty
DataItem AB0JWPKF smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Pack Factor Result
DataItem AB0JWPKR num(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PO_NBR
DataItem AB0JWPON int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 1
DataItem AB0JWQA1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 2
DataItem AB0JWQA2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 3
DataItem AB0JWQA3 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 4
DataItem AB0JWQA4 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 5
DataItem AB0JWQA5 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 6
DataItem AB0JWQA6 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 7
DataItem AB0JWQA7 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 8
DataItem AB0JWQA8 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 9
DataItem AB0JWQA9 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty 10
DataItem AB0JWQAA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// AB Qty totals
DataItem AB0JWQAT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Qty Style/Color Total
DataItem AB0JWQCT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Style qualify flag
DataItem AB0JWQID char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF Qty 1
DataItem AB0JWQP1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 2
DataItem AB0JWQP2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 3
DataItem AB0JWQP3 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 4
DataItem AB0JWQP4 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 5
DataItem AB0JWQP5 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 6
DataItem AB0JWQP6 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 7
DataItem AB0JWQP7 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 8
DataItem AB0JWQP8 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 9
DataItem AB0JWQP9 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty 10
DataItem AB0JWQPA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF Qty totals
DataItem AB0JWQPT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 1
DataItem AB0JWQS1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 2
DataItem AB0JWQS2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 3
DataItem AB0JWQS3 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 4
DataItem AB0JWQS4 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 5
DataItem AB0JWQS5 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 6
DataItem AB0JWQS6 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 7
DataItem AB0JWQS7 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 8
DataItem AB0JWQS8 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 9
DataItem AB0JWQS9 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty 10
DataItem AB0JWQSA int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SB Qty totals
DataItem AB0JWQST int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map Qty accum wk
DataItem AB0JWQTM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Qty totals wk
DataItem AB0JWQTT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Saved Qty accum wk
DataItem AB0JWQTW int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Size wk area 2 fld 1
DataItem AB0JWSC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 2 fld 2
DataItem AB0JWSC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 2 fld 3
DataItem AB0JWSC3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 2 fld 4
DataItem AB0JWSC4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 2 fld 5
DataItem AB0JWSC5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit scheduler id indicator
DataItem AB0JWSCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 1 fld 1
DataItem AB0JWSD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 1 fld 2
DataItem AB0JWSD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 1 fld 3
DataItem AB0JWSD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 1 fld 4
DataItem AB0JWSD4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size wk area 1 fld 5
DataItem AB0JWSD5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size desc wk area 2
DataItem AB0JWSDC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size desc wk area 1
DataItem AB0JWSDS char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size row store index
DataItem AB0JWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Style array max size
DataItem AB0JWSLM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Color cd - STY (PF)
DataItem AB0JWSPC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color cd - STY (SB)
DataItem AB0JWSSC char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row status indicator 1
DataItem AB0JWSTA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row status indicator 2
DataItem AB0JWSTC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// style number
DataItem AB0JWSTN char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Style select indicator
DataItem AB0JWSTS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Style Data Save Area
DataItem AB0JWSTY char(47)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size count + 1
DataItem AB0JWSZC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current temporary storage page
DataItem AB0JWTSP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Update status indicator
DataItem AB0JWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Updates present indicator
DataItem AB0JWUPI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dimension code
DataItem AB0JWXDM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// division code
DataItem AB0JWXDV char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Owner group
DataItem AB0JWXOW char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product category code
DataItem AB0JWXPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk abrv
DataItem AB0JWXSA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season code
DataItem AB0JWXSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season year range
DataItem AB0JWXSN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XSN wk season cd
DataItem AB0JWXSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xsnyr work area
DataItem AB0JWXSY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// warehouse code
DataItem AB0JWXWH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN wk season yr
DataItem AB0JWXYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

