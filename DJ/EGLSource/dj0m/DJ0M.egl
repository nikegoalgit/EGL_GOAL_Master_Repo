package dj0m;

import corpcom2.XSDAW01;
import corpcom2.XSDAW02;
import corpcom4.XSDAS-DA1140-ADD;
import corpcom4.XSDAS-DA1140-CLOSE;
import corpcom4.XSDAS-DA1140-DEL;
import corpcom4.XSDAS-DA1140-FETCH;
import corpcom4.XSDAS-DA1140-OPEN;
import corpcom4.XSDAS-DA1140-SEL;
import corpcom4.XSDAS-DA1140-SEL-2;
import corpcom4.XSDAS-DA1140-UPD;
import corpcom4.XSDAS-FMT-DB2-MDCY;
import corpcom4.XSDAS-PRINT-TABLE;
import corpcom4.XSDAS-SET-STATUS;
import corpcom4.XSDAS-XSEXIT-CAMSG;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXSTAT;
import corpx1.XSZTBL;
import corpx2.XSZCD;
import corpx2.XSZDESC;
import corpx2.XSZNBRSZ;
import corpx2.XSZPCT1;
import corpx2.XSZPCT10;
import corpx2.XSZPCT11;
import corpx2.XSZPCT12;
import corpx2.XSZPCT13;
import corpx2.XSZPCT14;
import corpx2.XSZPCT15;
import corpx2.XSZPCT16;
import corpx2.XSZPCT17;
import corpx2.XSZPCT18;
import corpx2.XSZPCT19;
import corpx2.XSZPCT2;
import corpx2.XSZPCT20;
import corpx2.XSZPCT21;
import corpx2.XSZPCT22;
import corpx2.XSZPCT23;
import corpx2.XSZPCT24;
import corpx2.XSZPCT25;
import corpx2.XSZPCT26;
import corpx2.XSZPCT27;
import corpx2.XSZPCT28;
import corpx2.XSZPCT29;
import corpx2.XSZPCT3;
import corpx2.XSZPCT30;
import corpx2.XSZPCT31;
import corpx2.XSZPCT32;
import corpx2.XSZPCT33;
import corpx2.XSZPCT34;
import corpx2.XSZPCT35;
import corpx2.XSZPCT36;
import corpx2.XSZPCT37;
import corpx2.XSZPCT38;
import corpx2.XSZPCT39;
import corpx2.XSZPCT4;
import corpx2.XSZPCT40;
import corpx2.XSZPCT5;
import corpx2.XSZPCT6;
import corpx2.XSZPCT7;
import corpx2.XSZPCT8;
import corpx2.XSZPCT9;
import corpy2.XXX-TBL-PFX;
import corpz3.ZZ-CHNG-DT;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import da.common.DA-CCAT-KEY-TXT;
import da.common.DA-CHNG-USER-ID;
import da.common.DA-PLOG-TXT1;
import da.common.DA-PLOG-TXT2;
import da.common.DAW-CHNG-DT-MDY;
import da.common.DAW-RECORD-TYPE;
import da.common.DAW-SELECT-CD;
import da.common.DAW-STATUS-DESC;
import da.common.DAW-TEMP-STORAGE-LENGTH;
import da.common.DAW-VDATRN01-KEY;
import da.common.DAWREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VDATRN01;
import ww.common.WDA1140;
//*** PROGRAM=DJ0M ****
// NIKE TABLE HANDLER - TABLE MAINTENANCE - STANDARD SIZE
//                                          DISTRIBUTION
// OVERVIEW: This application is used to maintain the standard
//           size distribution table.
// 
// DB2 TABLE: DCORP.VXSZ0001
// CSP TABLE: XSZTBL
// 
// DATE CREATED: 04/13/98
//       AUTHOR: Eric Chan
// 
// MAINTENANCE HISTORY:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   05-06-98  ECHAN       MODIFIED DJ0MM002
//   03-01-99  ECHAN       Add NOHILITE in DJ0MP25-SET-ATTR-1
//                         Chg TRAMSACTION to TRANSACTION in
//                         DJ0MP70-PROC-MAP-1
//                         Check duplicate and deadlock in
//                         DJ0MP70-PROC-MAP-2
// *********************
Program DJ0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DAWREC DAWREC; // record
  DJ0MW01 DJ0MW01; // record
  DJ0MW02 DJ0MW02; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VDATRN01 VDATRN01; // record
  WDA1140 WDA1140; // record
  XSDAW01 XSDAW01; // record
  XSDAW02 XSDAW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSZTBL {deleteAfterUse = yes}; // table
  use DJ0MM.DJ0MM001,  // forms
      DJ0MM.DJ0MM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    DJ0MP00-DRIVER: DJ0MP00-DRIVER();
    exit program;
  end // end main
end // end DJ0M

// DRIVER FOR APPLICATION
Function DJ0MP00-DRIVER()
  /* **************************************************************/
  /* DRIVER FOR APPLICATION*/
  /* **************************************************************/

  DJ0MP10-INITIALIZE(); /* Initialize application*/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    DJ0MP20-BUILD-MAP2(); /* Build the second map*/
  else
    DJ0MP20-BUILD-MAP1(); /* Build the first map*/
  end

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    while (DAWREC.DAW-DONE-WITH-ROW-FL == "N")
      DJ0MP30-MAIN-MAP-2(); /* Process map until ready to exit*/
    end
  else
    while (DAWREC.DAW-TERM-APPL-FL == "N")
      DJ0MP30-MAIN-MAP-1(); /* Process map until ready to exit*/
    end
  end

  DJ0MP99-TERMINATE(); /* Terminate the application*/

  /* **************/
  /* ****************** END DJ0MP00 *******************************/
  /* **************/
end // end DJ0MP00-DRIVER

// INITIALIZE THE APPLICATION
Function DJ0MP10-INITIALIZE()
  /* **********************************************************/
  /* This process initializes the program work area and map.*/
  /* **********************************************************/

  XSENTRY(); /* Check entry security*/

  XSSEGTR(); /* Set segmented transaction id*/

  /* Initialize records*/

  DAWREC.DAWGROUP = COMMAREA.CAUSERA; /* restore system record*/
  set DJ0MW01 empty; /* Working storage record*/
  set DJ0MW02 empty; /* Temp storage record*/

  DAWREC.DAW-TERM-APPL-FL = "N";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  /* Initialize and move standard information to the map*/

  set DJ0MM001 initial;
  XSDAS-FMT-DB2-MDCY();
  DJ0MM001.DAW-MAP-DATE = DAWREC.DAW-DATE-MDCY;
  DJ0MM001.DAW-MAP-TIME = VGVar.currentFormattedTime;

  set DJ0MM002 initial;
  XSDAS-FMT-DB2-MDCY();
  DJ0MM002.DAW-MAP-DATE = DAWREC.DAW-DATE-MDCY;
  DJ0MM002.DAW-MAP-TIME = VGVar.currentFormattedTime;

  if (COMMAREA.CAMSG != " "
   && COMMAREA.CAFRMSYS == "DA")
    DJ0MM001.DAW-INFO-MESSAGE = COMMAREA.CAMSG; /* commarea message*/
  end

  /* **************/
  /* ****************** END DJ0MP10 ******************************/
  /* **************/
end // end DJ0MP10-INITIALIZE

// BUILD MAP 2 - LIST TABLE ROWS
Function DJ0MP20-BUILD-MAP1()
  /* ****************************************************************/
  /* Build temp storage and move first page to MAP 001*/
  /* ****************************************************************/

  DJ0MP22-BUILD-TSQ(); /* build temp storage file*/

  if (DAWREC.DAW-CURR-PAGE != DJ0MM001.DAW-CURR-PAGE)
    DJ0MS-TS-READ-PAGE(); /* read temp storage page*/
    DJ0MP71-TSQ-TO-MAP(); /* move page to the map*/
  end

  DJ0MP25-SET-ATTR-1(); /* Set field attributes*/

  /* **************/
  /* ***************** END DJ0MP20 **********************************/
  /* **************/
end // end DJ0MP20-BUILD-MAP1

// BUILD MAP 2 - TBLE ROW DETAILS
Function DJ0MP20-BUILD-MAP2()
  /* ****************************************************************/
  /* Build MAP 002*/
  /* ****************************************************************/

  DJ0MM002.DA-CHNG-USER-ID = sysVar.userID;
  DJ0MM002.DAW-UPDATE-DATE = VGVar.currentShortGregorianDate;

  set DJ0MW01 empty;
  set VDATRN01 empty;

  /* *****************************************************************/
  /* Add a row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD")
    DJ0MM002.DA-PLOG-TXT1 = " ";
    DJ0MM002.DA-PLOG-TXT2 = " ";
    DJ0MM002.XSZCD = " ";
    DJ0MM002.XSZDESC = " ";
    DJ0MM002.XSZNBRSZ = 0;
    DJ0MM002.XSZPCT1 = 0;
    DJ0MM002.XSZPCT2 = 0;
    DJ0MM002.XSZPCT3 = 0;
    DJ0MM002.XSZPCT4 = 0;
    DJ0MM002.XSZPCT5 = 0;
    DJ0MM002.XSZPCT6 = 0;
    DJ0MM002.XSZPCT7 = 0;
    DJ0MM002.XSZPCT8 = 0;
    DJ0MM002.XSZPCT9 = 0;
    DJ0MM002.XSZPCT10 = 0;
    DJ0MM002.XSZPCT11 = 0;
    DJ0MM002.XSZPCT12 = 0;
    DJ0MM002.XSZPCT13 = 0;
    DJ0MM002.XSZPCT14 = 0;
    DJ0MM002.XSZPCT15 = 0;
    DJ0MM002.XSZPCT16 = 0;
    DJ0MM002.XSZPCT17 = 0;
    DJ0MM002.XSZPCT18 = 0;
    DJ0MM002.XSZPCT19 = 0;
    DJ0MM002.XSZPCT20 = 0;
    DJ0MM002.XSZPCT21 = 0;
    DJ0MM002.XSZPCT22 = 0;
    DJ0MM002.XSZPCT23 = 0;
    DJ0MM002.XSZPCT24 = 0;
    DJ0MM002.XSZPCT25 = 0;
    DJ0MM002.XSZPCT26 = 0;
    DJ0MM002.XSZPCT27 = 0;
    DJ0MM002.XSZPCT28 = 0;
    DJ0MM002.XSZPCT29 = 0;
    DJ0MM002.XSZPCT30 = 0;
    DJ0MM002.XSZPCT30 = 0;
    DJ0MM002.XSZPCT31 = 0;
    DJ0MM002.XSZPCT32 = 0;
    DJ0MM002.XSZPCT33 = 0;
    DJ0MM002.XSZPCT34 = 0;
    DJ0MM002.XSZPCT35 = 0;
    DJ0MM002.XSZPCT36 = 0;
    DJ0MM002.XSZPCT37 = 0;
    DJ0MM002.XSZPCT38 = 0;
    DJ0MM002.XSZPCT39 = 0;
    DJ0MM002.XSZPCT40 = 0;
    DJ0MM002.XXXSTAT = " ";
  end

  /* *****************************************************************/
  /* Update or copy a row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD"
   || DAWREC.DAW-CURR-FUNCTION-CD == "CPY"
   || DAWREC.DAW-CURR-FUNCTION-CD == "DEL")

    if (DAWREC.DAW-RECORD-TYPE == "TRAN") /* update, copy or delete*/
                                   /* a transaction*/

      VDATRN01.DAW-VDATRN01-KEY = DJ0MW02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
      XSDAS-DA1140-SEL(); /* select the transaction*/

      DJ0MW01.XSZGROUP = VDATRN01.DA-ROW-DATA-TXT-TEXT; /* save data*/
      DJ0MW01.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1; /* for a later*/
      DJ0MW01.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2; /* compare*/

      DJ0MM002.XSZCD = DJ0MW01.XSZCD; /* move to map*/
      DJ0MM002.XSZDESC = DJ0MW01.XSZDESC;
      DJ0MM002.XSZNBRSZ = DJ0MW01.XSZNBRSZ;
      DJ0MM002.XSZPCT1 = DJ0MW01.XSZPCT1;
      DJ0MM002.XSZPCT2 = DJ0MW01.XSZPCT2;
      DJ0MM002.XSZPCT3 = DJ0MW01.XSZPCT3;
      DJ0MM002.XSZPCT4 = DJ0MW01.XSZPCT4;
      DJ0MM002.XSZPCT5 = DJ0MW01.XSZPCT5;
      DJ0MM002.XSZPCT6 = DJ0MW01.XSZPCT6;
      DJ0MM002.XSZPCT7 = DJ0MW01.XSZPCT7;
      DJ0MM002.XSZPCT8 = DJ0MW01.XSZPCT8;
      DJ0MM002.XSZPCT9 = DJ0MW01.XSZPCT9;
      DJ0MM002.XSZPCT10 = DJ0MW01.XSZPCT10;
      DJ0MM002.XSZPCT11 = DJ0MW01.XSZPCT11;
      DJ0MM002.XSZPCT12 = DJ0MW01.XSZPCT12;
      DJ0MM002.XSZPCT13 = DJ0MW01.XSZPCT13;
      DJ0MM002.XSZPCT14 = DJ0MW01.XSZPCT14;
      DJ0MM002.XSZPCT15 = DJ0MW01.XSZPCT15;
      DJ0MM002.XSZPCT16 = DJ0MW01.XSZPCT16;
      DJ0MM002.XSZPCT17 = DJ0MW01.XSZPCT17;
      DJ0MM002.XSZPCT18 = DJ0MW01.XSZPCT18;
      DJ0MM002.XSZPCT19 = DJ0MW01.XSZPCT19;
      DJ0MM002.XSZPCT20 = DJ0MW01.XSZPCT20;
      DJ0MM002.XSZPCT21 = DJ0MW01.XSZPCT21;
      DJ0MM002.XSZPCT22 = DJ0MW01.XSZPCT22;
      DJ0MM002.XSZPCT23 = DJ0MW01.XSZPCT23;
      DJ0MM002.XSZPCT24 = DJ0MW01.XSZPCT24;
      DJ0MM002.XSZPCT25 = DJ0MW01.XSZPCT25;
      DJ0MM002.XSZPCT26 = DJ0MW01.XSZPCT26;
      DJ0MM002.XSZPCT27 = DJ0MW01.XSZPCT27;
      DJ0MM002.XSZPCT28 = DJ0MW01.XSZPCT28;
      DJ0MM002.XSZPCT29 = DJ0MW01.XSZPCT29;
      DJ0MM002.XSZPCT30 = DJ0MW01.XSZPCT30;
      DJ0MM002.XSZPCT31 = DJ0MW01.XSZPCT31;
      DJ0MM002.XSZPCT32 = DJ0MW01.XSZPCT32;
      DJ0MM002.XSZPCT33 = DJ0MW01.XSZPCT33;
      DJ0MM002.XSZPCT34 = DJ0MW01.XSZPCT34;
      DJ0MM002.XSZPCT35 = DJ0MW01.XSZPCT35;
      DJ0MM002.XSZPCT36 = DJ0MW01.XSZPCT36;
      DJ0MM002.XSZPCT37 = DJ0MW01.XSZPCT37;
      DJ0MM002.XSZPCT38 = DJ0MW01.XSZPCT38;
      DJ0MM002.XSZPCT39 = DJ0MW01.XSZPCT39;
      DJ0MM002.XSZPCT40 = DJ0MW01.XSZPCT40;
      DJ0MM002.XXXSTAT = DJ0MW01.XXXSTAT;
      DJ0MM002.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1;
      DJ0MM002.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2;

    else
      if (DAWREC.DAW-RECORD-TYPE == "TBL ") /* update or copy a table row*/

        DJ0MM002.XSZCD = DJ0MW02.XSZCD[DAW-ROW-NBR];
                                         /* get the table row*/
        if (DJ0MM002.XSZCD in XSZTBL.XSZCD)
          DJ0MW01.XSZCD = XSZTBL.XSZCD[sysVar.arrayIndex]; /* save for*/
          DJ0MW01.XSZDESC = XSZTBL.XSZDESC[sysVar.arrayIndex]; /* later compare*/
          DJ0MW01.XSZNBRSZ = XSZTBL.XSZNBRSZ[sysVar.arrayIndex];
          DJ0MW01.XSZPCT1 = XSZTBL.XSZPCT1[sysVar.arrayIndex];
          DJ0MW01.XSZPCT2 = XSZTBL.XSZPCT2[sysVar.arrayIndex];
          DJ0MW01.XSZPCT3 = XSZTBL.XSZPCT3[sysVar.arrayIndex];
          DJ0MW01.XSZPCT4 = XSZTBL.XSZPCT4[sysVar.arrayIndex];
          DJ0MW01.XSZPCT5 = XSZTBL.XSZPCT5[sysVar.arrayIndex];
          DJ0MW01.XSZPCT6 = XSZTBL.XSZPCT6[sysVar.arrayIndex];
          DJ0MW01.XSZPCT7 = XSZTBL.XSZPCT7[sysVar.arrayIndex];
          DJ0MW01.XSZPCT8 = XSZTBL.XSZPCT8[sysVar.arrayIndex];
          DJ0MW01.XSZPCT9 = XSZTBL.XSZPCT9[sysVar.arrayIndex];
          DJ0MW01.XSZPCT10 = XSZTBL.XSZPCT10[sysVar.arrayIndex];
          DJ0MW01.XSZPCT11 = XSZTBL.XSZPCT11[sysVar.arrayIndex];
          DJ0MW01.XSZPCT12 = XSZTBL.XSZPCT12[sysVar.arrayIndex];
          DJ0MW01.XSZPCT13 = XSZTBL.XSZPCT13[sysVar.arrayIndex];
          DJ0MW01.XSZPCT14 = XSZTBL.XSZPCT14[sysVar.arrayIndex];
          DJ0MW01.XSZPCT15 = XSZTBL.XSZPCT15[sysVar.arrayIndex];
          DJ0MW01.XSZPCT16 = XSZTBL.XSZPCT16[sysVar.arrayIndex];
          DJ0MW01.XSZPCT17 = XSZTBL.XSZPCT17[sysVar.arrayIndex];
          DJ0MW01.XSZPCT18 = XSZTBL.XSZPCT18[sysVar.arrayIndex];
          DJ0MW01.XSZPCT19 = XSZTBL.XSZPCT19[sysVar.arrayIndex];
          DJ0MW01.XSZPCT20 = XSZTBL.XSZPCT20[sysVar.arrayIndex];
          DJ0MW01.XSZPCT21 = XSZTBL.XSZPCT21[sysVar.arrayIndex];
          DJ0MW01.XSZPCT22 = XSZTBL.XSZPCT22[sysVar.arrayIndex];
          DJ0MW01.XSZPCT23 = XSZTBL.XSZPCT23[sysVar.arrayIndex];
          DJ0MW01.XSZPCT24 = XSZTBL.XSZPCT24[sysVar.arrayIndex];
          DJ0MW01.XSZPCT25 = XSZTBL.XSZPCT25[sysVar.arrayIndex];
          DJ0MW01.XSZPCT26 = XSZTBL.XSZPCT26[sysVar.arrayIndex];
          DJ0MW01.XSZPCT27 = XSZTBL.XSZPCT27[sysVar.arrayIndex];
          DJ0MW01.XSZPCT28 = XSZTBL.XSZPCT28[sysVar.arrayIndex];
          DJ0MW01.XSZPCT29 = XSZTBL.XSZPCT29[sysVar.arrayIndex];
          DJ0MW01.XSZPCT30 = XSZTBL.XSZPCT30[sysVar.arrayIndex];
          DJ0MW01.XSZPCT31 = XSZTBL.XSZPCT31[sysVar.arrayIndex];
          DJ0MW01.XSZPCT32 = XSZTBL.XSZPCT32[sysVar.arrayIndex];
          DJ0MW01.XSZPCT33 = XSZTBL.XSZPCT33[sysVar.arrayIndex];
          DJ0MW01.XSZPCT34 = XSZTBL.XSZPCT34[sysVar.arrayIndex];
          DJ0MW01.XSZPCT35 = XSZTBL.XSZPCT35[sysVar.arrayIndex];
          DJ0MW01.XSZPCT36 = XSZTBL.XSZPCT36[sysVar.arrayIndex];
          DJ0MW01.XSZPCT37 = XSZTBL.XSZPCT37[sysVar.arrayIndex];
          DJ0MW01.XSZPCT38 = XSZTBL.XSZPCT38[sysVar.arrayIndex];
          DJ0MW01.XSZPCT39 = XSZTBL.XSZPCT39[sysVar.arrayIndex];
          DJ0MW01.XSZPCT40 = XSZTBL.XSZPCT40[sysVar.arrayIndex];
          DJ0MW01.XXXSTAT = XSZTBL.XXXSTAT[sysVar.arrayIndex];
          DJ0MW01.ZZZSDT = XSZTBL.ZZZSDT[sysVar.arrayIndex];
          DJ0MW01.ZZZCHGDT = XSZTBL.ZZZCHGDT[sysVar.arrayIndex];
          DJ0MW01.ZZZCHGTM = XSZTBL.ZZZCHGTM[sysVar.arrayIndex];
          DJ0MW01.ZZZCHGCT = XSZTBL.ZZZCHGCT[sysVar.arrayIndex];

          DJ0MM002.XSZDESC = XSZTBL.XSZDESC[sysVar.arrayIndex]; /* move*/
          DJ0MM002.XSZNBRSZ = XSZTBL.XSZNBRSZ[sysVar.arrayIndex]; /* to map*/
          DJ0MM002.XSZPCT1 = XSZTBL.XSZPCT1[sysVar.arrayIndex];
          DJ0MM002.XSZPCT2 = XSZTBL.XSZPCT2[sysVar.arrayIndex];
          DJ0MM002.XSZPCT3 = XSZTBL.XSZPCT3[sysVar.arrayIndex];
          DJ0MM002.XSZPCT4 = XSZTBL.XSZPCT4[sysVar.arrayIndex];
          DJ0MM002.XSZPCT5 = XSZTBL.XSZPCT5[sysVar.arrayIndex];
          DJ0MM002.XSZPCT6 = XSZTBL.XSZPCT6[sysVar.arrayIndex];
          DJ0MM002.XSZPCT7 = XSZTBL.XSZPCT7[sysVar.arrayIndex];
          DJ0MM002.XSZPCT8 = XSZTBL.XSZPCT8[sysVar.arrayIndex];
          DJ0MM002.XSZPCT9 = XSZTBL.XSZPCT9[sysVar.arrayIndex];
          DJ0MM002.XSZPCT10 = XSZTBL.XSZPCT10[sysVar.arrayIndex];
          DJ0MM002.XSZPCT11 = XSZTBL.XSZPCT11[sysVar.arrayIndex];
          DJ0MM002.XSZPCT12 = XSZTBL.XSZPCT12[sysVar.arrayIndex];
          DJ0MM002.XSZPCT13 = XSZTBL.XSZPCT13[sysVar.arrayIndex];
          DJ0MM002.XSZPCT14 = XSZTBL.XSZPCT14[sysVar.arrayIndex];
          DJ0MM002.XSZPCT15 = XSZTBL.XSZPCT15[sysVar.arrayIndex];
          DJ0MM002.XSZPCT16 = XSZTBL.XSZPCT16[sysVar.arrayIndex];
          DJ0MM002.XSZPCT17 = XSZTBL.XSZPCT17[sysVar.arrayIndex];
          DJ0MM002.XSZPCT18 = XSZTBL.XSZPCT18[sysVar.arrayIndex];
          DJ0MM002.XSZPCT19 = XSZTBL.XSZPCT19[sysVar.arrayIndex];
          DJ0MM002.XSZPCT20 = XSZTBL.XSZPCT20[sysVar.arrayIndex];
          DJ0MM002.XSZPCT21 = XSZTBL.XSZPCT21[sysVar.arrayIndex];
          DJ0MM002.XSZPCT22 = XSZTBL.XSZPCT22[sysVar.arrayIndex];
          DJ0MM002.XSZPCT23 = XSZTBL.XSZPCT23[sysVar.arrayIndex];
          DJ0MM002.XSZPCT24 = XSZTBL.XSZPCT24[sysVar.arrayIndex];
          DJ0MM002.XSZPCT25 = XSZTBL.XSZPCT25[sysVar.arrayIndex];
          DJ0MM002.XSZPCT26 = XSZTBL.XSZPCT26[sysVar.arrayIndex];
          DJ0MM002.XSZPCT27 = XSZTBL.XSZPCT27[sysVar.arrayIndex];
          DJ0MM002.XSZPCT28 = XSZTBL.XSZPCT28[sysVar.arrayIndex];
          DJ0MM002.XSZPCT29 = XSZTBL.XSZPCT29[sysVar.arrayIndex];
          DJ0MM002.XSZPCT30 = XSZTBL.XSZPCT30[sysVar.arrayIndex];
          DJ0MM002.XSZPCT31 = XSZTBL.XSZPCT31[sysVar.arrayIndex];
          DJ0MM002.XSZPCT32 = XSZTBL.XSZPCT32[sysVar.arrayIndex];
          DJ0MM002.XSZPCT33 = XSZTBL.XSZPCT33[sysVar.arrayIndex];
          DJ0MM002.XSZPCT34 = XSZTBL.XSZPCT34[sysVar.arrayIndex];
          DJ0MM002.XSZPCT35 = XSZTBL.XSZPCT35[sysVar.arrayIndex];
          DJ0MM002.XSZPCT36 = XSZTBL.XSZPCT36[sysVar.arrayIndex];
          DJ0MM002.XSZPCT37 = XSZTBL.XSZPCT37[sysVar.arrayIndex];
          DJ0MM002.XSZPCT38 = XSZTBL.XSZPCT38[sysVar.arrayIndex];
          DJ0MM002.XSZPCT39 = XSZTBL.XSZPCT39[sysVar.arrayIndex];
          DJ0MM002.XSZPCT40 = XSZTBL.XSZPCT40[sysVar.arrayIndex];
          DJ0MM002.XXXSTAT = XSZTBL.XXXSTAT[sysVar.arrayIndex];
        end
      end
    end
  end

  /* *****************************************************************/
  /* inquire on a row selected in DA01*/
  /* *****************************************************************/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    DAWREC.DAW-DONE-WITH-ROW-FL = "N";
    DAWREC.DAW-CURR-FUNCTION-CD = "UPD";
    DAWREC.DAW-RECORD-TYPE = "TRAN";

    VDATRN01.DAW-VDATRN01-KEY = DAWREC.DAW-VDATRN01-KEY;
    XSDAS-DA1140-SEL(); /* select the transaction*/

    DJ0MW01.XSZGROUP = VDATRN01.DA-ROW-DATA-TXT-TEXT; /* save data*/
    DJ0MW01.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1; /* for a later*/
    DJ0MW01.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2; /* compare*/

    DJ0MM002.XSZCD = DJ0MW01.XSZCD; /* move to the map*/
    DJ0MM002.XSZDESC = DJ0MW01.XSZDESC;
    DJ0MM002.XSZNBRSZ = DJ0MW01.XSZNBRSZ;
    DJ0MM002.XSZPCT1 = DJ0MW01.XSZPCT1;
    DJ0MM002.XSZPCT2 = DJ0MW01.XSZPCT2;
    DJ0MM002.XSZPCT3 = DJ0MW01.XSZPCT3;
    DJ0MM002.XSZPCT4 = DJ0MW01.XSZPCT4;
    DJ0MM002.XSZPCT5 = DJ0MW01.XSZPCT5;
    DJ0MM002.XSZPCT6 = DJ0MW01.XSZPCT6;
    DJ0MM002.XSZPCT7 = DJ0MW01.XSZPCT7;
    DJ0MM002.XSZPCT8 = DJ0MW01.XSZPCT8;
    DJ0MM002.XSZPCT9 = DJ0MW01.XSZPCT9;
    DJ0MM002.XSZPCT10 = DJ0MW01.XSZPCT10;
    DJ0MM002.XSZPCT11 = DJ0MW01.XSZPCT11;
    DJ0MM002.XSZPCT12 = DJ0MW01.XSZPCT12;
    DJ0MM002.XSZPCT13 = DJ0MW01.XSZPCT13;
    DJ0MM002.XSZPCT14 = DJ0MW01.XSZPCT14;
    DJ0MM002.XSZPCT15 = DJ0MW01.XSZPCT15;
    DJ0MM002.XSZPCT16 = DJ0MW01.XSZPCT16;
    DJ0MM002.XSZPCT17 = DJ0MW01.XSZPCT17;
    DJ0MM002.XSZPCT18 = DJ0MW01.XSZPCT18;
    DJ0MM002.XSZPCT19 = DJ0MW01.XSZPCT19;
    DJ0MM002.XSZPCT20 = DJ0MW01.XSZPCT20;
    DJ0MM002.XSZPCT21 = DJ0MW01.XSZPCT21;
    DJ0MM002.XSZPCT22 = DJ0MW01.XSZPCT22;
    DJ0MM002.XSZPCT23 = DJ0MW01.XSZPCT23;
    DJ0MM002.XSZPCT24 = DJ0MW01.XSZPCT24;
    DJ0MM002.XSZPCT25 = DJ0MW01.XSZPCT25;
    DJ0MM002.XSZPCT26 = DJ0MW01.XSZPCT26;
    DJ0MM002.XSZPCT27 = DJ0MW01.XSZPCT27;
    DJ0MM002.XSZPCT28 = DJ0MW01.XSZPCT28;
    DJ0MM002.XSZPCT29 = DJ0MW01.XSZPCT29;
    DJ0MM002.XSZPCT30 = DJ0MW01.XSZPCT30;
    DJ0MM002.XSZPCT31 = DJ0MW01.XSZPCT31;
    DJ0MM002.XSZPCT32 = DJ0MW01.XSZPCT32;
    DJ0MM002.XSZPCT33 = DJ0MW01.XSZPCT33;
    DJ0MM002.XSZPCT34 = DJ0MW01.XSZPCT34;
    DJ0MM002.XSZPCT35 = DJ0MW01.XSZPCT35;
    DJ0MM002.XSZPCT36 = DJ0MW01.XSZPCT36;
    DJ0MM002.XSZPCT37 = DJ0MW01.XSZPCT37;
    DJ0MM002.XSZPCT38 = DJ0MW01.XSZPCT38;
    DJ0MM002.XSZPCT39 = DJ0MW01.XSZPCT39;
    DJ0MM002.XSZPCT40 = DJ0MW01.XSZPCT40;
    DJ0MM002.XXXSTAT = DJ0MW01.XXXSTAT;
    DJ0MM002.DA-PLOG-TXT1 = VDATRN01.DA-PLOG-TXT1;
    DJ0MM002.DA-PLOG-TXT2 = VDATRN01.DA-PLOG-TXT2;

  end

  if (DJ0MM002.XXXSTAT == "A")
    DJ0MM002.DAW-TBL-STATUS-DESC = "ACTIVE  ";
  end
  if (DJ0MM002.XXXSTAT == "I")
    DJ0MM002.DAW-TBL-STATUS-DESC = "INACTIVE";
  end
  if (DJ0MM002.XXXSTAT == " ")
    DJ0MM002.DAW-TBL-STATUS-DESC = " ";
  end

  DJ0MP25-SET-ATTR-2(); /* Set field attributes*/

  /* **************/
  /* ***************** END DJ0MP20 **********************************/
  /* **************/
end // end DJ0MP20-BUILD-MAP2

// BUILD TEMP STORAGE FILE
Function DJ0MP22-BUILD-TSQ()
  /* ****************************************************************/
  /* Build temp storage from menu table to allow scrolling*/
  /* ****************************************************************/

  set DJ0MW02 empty; /* temp storage record*/
  DAWREC.DAW-ROW-NBR = 0; /* temp storage row subscript*/
  DAWREC.DAW-CURR-PAGE = 0; /* temp storage page(record) number*/
  DAWREC.DAW-MAX-PAGE = 0; /* temp storage max page number*/

  /* Move the Maintenance records to temp storage*/

  XSDAS-DA1140-OPEN(); /* open cursor*/
  XSDAS-DA1140-FETCH(); /* fetch first row*/

  while (SQLCA.VAGen_SQLCODE == 0) /* until last row*/
    DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
    DJ0MP23-DB2-TO-TSQ(); /* move tbl row to temp storage row*/
    if (DAWREC.DAW-ROW-NBR == 14) /* maximum tsq rows per map*/
      DJ0MS-TS-ADD-PAGE(); /* write temp storage record when full*/
    end
    XSDAS-DA1140-FETCH(); /* fetch next row*/
  end

  XSDAS-DA1140-CLOSE(); /* close cursor*/


  /* Move the CSP table to temp storage*/

  sysVar.arrayIndex = 1;
  while (XSZTBL.XSZCD[sysVar.arrayIndex] != "99") /* until last row*/
    DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
    DJ0MP24-CSP-TO-TSQ(); /* move tbl row to temp storage row*/
    if (DAWREC.DAW-ROW-NBR == 14) /* maximum tsq rows per map*/
      DJ0MS-TS-ADD-PAGE(); /* write temp storage record when full*/
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  if (DAWREC.DAW-ROW-NBR > 0 /* rows were moved*/
   || DAWREC.DAW-MAX-PAGE > 0) /* or tsq pages were written*/

    if (DAWREC.DAW-ROW-NBR < 14 /* last page not full*/
     && DAWREC.DAW-ROW-NBR != 0) /* rows exist*/
      DJ0MS-TS-ADD-PAGE();
    end

    DJ0MM001.DAW-CURR-PAGE = 1; /* page number to read*/
    DAWREC.DAW-CURR-PAGE = 0; /* last page read*/
    DJ0MM001.DAW-LAST-PAGE = DAWREC.DAW-MAX-PAGE;

  end

  /* **************/
  /* ***************** END DJ0MP22 **********************************/
  /* **************/
end // end DJ0MP22-BUILD-TSQ

// MOVE TO TEMP STORAGE PAGE
Function DJ0MP23-DB2-TO-TSQ()
  /* **************************************************************/
  /* Move db2 table row to temp storage*/
  /* The key to the view is saved in temp storage to make it*/
  /* easier to retrieve and update/delete the row if necessary.*/
  /* **************************************************************/

  DJ0MW02.DAW-RECORD-TYPE[DAW-ROW-NBR] = "TRAN ";
  DJ0MW02.DAW-SELECT-CD[DAW-ROW-NBR] = " ";
  DJ0MW01.XSZGROUP = VDATRN01.DA-ROW-DATA-TXT-TEXT;

  DJ0MW02.XSZCD[DAW-ROW-NBR] = DJ0MW01.XSZCD;
  DJ0MW02.XSZDESC[DAW-ROW-NBR] = DJ0MW01.XSZDESC;
  DJ0MW02.XSZNBRSZ[DAW-ROW-NBR] = DJ0MW01.XSZNBRSZ;
  DJ0MW02.XXXSTAT[DAW-ROW-NBR] = DJ0MW01.XXXSTAT;
  if (VDATRN01.DA-CHNG-STAT-IND == "E")
    DJ0MW02.DAW-STATUS-DESC[DAW-ROW-NBR] = "EDIT    ";
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "P")
    DJ0MW02.DAW-STATUS-DESC[DAW-ROW-NBR] = "PENDING ";
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "A")
    DJ0MW02.DAW-STATUS-DESC[DAW-ROW-NBR] = "APPROVED";
    DJ0MW02.DAW-SELECT-CD[DAW-ROW-NBR] = "*"; /* select not allowed*/
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "R")
    DJ0MW02.DAW-STATUS-DESC[DAW-ROW-NBR] = "REJECTED";
  end
  if (VDATRN01.DA-CHNG-STAT-IND == "I")
    DJ0MW02.DAW-STATUS-DESC[DAW-ROW-NBR] = "PROCESS ";
    DJ0MW02.DAW-SELECT-CD[DAW-ROW-NBR] = "*"; /* select not allowed*/
  end

  DJ0MW02.DA-CHNG-USER-ID[DAW-ROW-NBR] = VDATRN01.DA-CHNG-USER-ID;

  DAWREC.DAW-DATE-COMP = VDATRN01.ZZ-CHNG-DT;
  XSDAS-FMT-DB2-MDCY();
  DJ0MW02.DAW-CHNG-DT-MDY[DAW-ROW-NBR] = DAWREC.DAW-DATE-MDCY;

  DJ0MW02.DAW-VDATRN01-KEY[DAW-ROW-NBR] = VDATRN01.DAW-VDATRN01-KEY;


  /* ***************/
  /* ****************** END DJ0MP221 ******************************/
  /* ***************/
end // end DJ0MP23-DB2-TO-TSQ

// MOVE TO TEMP STORAGE PAGE
Function DJ0MP24-CSP-TO-TSQ()
  /* **************************************************************/
  /* Move table row to temp storage*/
  /* **************************************************************/

  DJ0MW02.DAW-RECORD-TYPE[DAW-ROW-NBR] = "TBL ";
  DJ0MW02.DAW-SELECT-CD[DAW-ROW-NBR] = " ";

  DJ0MW02.XSZCD[DAW-ROW-NBR] = XSZTBL.XSZCD[sysVar.arrayIndex];
  DJ0MW02.XSZDESC[DAW-ROW-NBR] = XSZTBL.XSZDESC[sysVar.arrayIndex];
  DJ0MW02.XSZNBRSZ[DAW-ROW-NBR] = XSZTBL.XSZNBRSZ[sysVar.arrayIndex];
  DJ0MW02.XXXSTAT[DAW-ROW-NBR] = XSZTBL.XXXSTAT[sysVar.arrayIndex];
  DJ0MW02.DAW-STATUS-DESC[DAW-ROW-NBR] = " ";
  DJ0MW02.DA-CHNG-USER-ID[DAW-ROW-NBR] = " ";
  DJ0MW02.DAW-CHNG-DT-MDY[DAW-ROW-NBR] = " ";

  /* ***************/
  /* ****************** END DJ0MP221 ******************************/
  /* ***************/
end // end DJ0MP24-CSP-TO-TSQ

// SET MAP 1 FIELD ATTRIBUTES
Function DJ0MP25-SET-ATTR-1()
  /* *********************************************************/
  /* Set MAP 001 field attributes - only show page numbers when*/
  /* there is more than 1 page. Autoskip,dark any rows with*/
  /* an '*' in the select. They can look at the data (for the*/
  /* status) but they can't select it.*/
  /* *********************************************************/

  if (DAW-LAST-PAGE > 1)
    DJ0MM001.DAW-PAGE-LIT = "PAGE";
    set DJ0MM001.DAW-CURR-PAGE initialAttributes;
    DJ0MM001.DAW-OF-LIT = "OF";
    set DJ0MM001.DAW-LAST-PAGE initialAttributes;
    DJ0MM001.DAW-PF7-LIT = "PF7 = SCROLL BACK";
    DJ0MM001.DAW-PF8-LIT = "PF8 = SCROLL FRWD";
  else
    DJ0MM001.DAW-PAGE-LIT = " ";
    set DJ0MM001.DAW-CURR-PAGE skip, noHighLight, invisible;
    DJ0MM001.DAW-OF-LIT = " ";
    set DJ0MM001.DAW-LAST-PAGE skip, invisible;
    DJ0MM001.DAW-PF7-LIT = " ";
    DJ0MM001.DAW-PF8-LIT = " ";
  end

  sysVar.arrayIndex = 14;
  while (sysVar.arrayIndex > 0)
    if (DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == "*")
      set DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] skip, invisible;
    else
      if (DJ0MM001.XSZCD[sysVar.arrayIndex] == " ")
        set DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] skip, invisible;
        set DJ0MM001.XSZNBRSZ[sysVar.arrayIndex] skip, invisible;
      else
        set DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, initialAttributes;
        set DJ0MM001.XSZNBRSZ[sysVar.arrayIndex] initialAttributes;
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end

  /* **************/
  /* ****************** END DJ0MP25 **************************/
  /* **************/
end // end DJ0MP25-SET-ATTR-1

// SET FIELD ATTRIBUTES FOR MAP 2
Function DJ0MP25-SET-ATTR-2()
  /* *********************************************************/
  /* Set MAP 002 field attributes - autoskip the DA-CODE when*/
  /* the function is 'upd'.*/
  /* *********************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD"
   || DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
    set DJ0MM002.XSZCD initialAttributes;
    set DJ0MM002.XSZDESC initialAttributes;
    set DJ0MM002.XSZNBRSZ initialAttributes;
    set DJ0MM002.XSZPCT1 initialAttributes;
    set DJ0MM002.XSZPCT2 initialAttributes;
    set DJ0MM002.XSZPCT3 initialAttributes;
    set DJ0MM002.XSZPCT4 initialAttributes;
    set DJ0MM002.XSZPCT5 initialAttributes;
    set DJ0MM002.XSZPCT6 initialAttributes;
    set DJ0MM002.XSZPCT7 initialAttributes;
    set DJ0MM002.XSZPCT8 initialAttributes;
    set DJ0MM002.XSZPCT9 initialAttributes;
    set DJ0MM002.XSZPCT10 initialAttributes;
    set DJ0MM002.XSZPCT11 initialAttributes;
    set DJ0MM002.XSZPCT12 initialAttributes;
    set DJ0MM002.XSZPCT13 initialAttributes;
    set DJ0MM002.XSZPCT14 initialAttributes;
    set DJ0MM002.XSZPCT15 initialAttributes;
    set DJ0MM002.XSZPCT16 initialAttributes;
    set DJ0MM002.XSZPCT17 initialAttributes;
    set DJ0MM002.XSZPCT18 initialAttributes;
    set DJ0MM002.XSZPCT19 initialAttributes;
    set DJ0MM002.XSZPCT20 initialAttributes;
    set DJ0MM002.XSZPCT21 initialAttributes;
    set DJ0MM002.XSZPCT22 initialAttributes;
    set DJ0MM002.XSZPCT23 initialAttributes;
    set DJ0MM002.XSZPCT24 initialAttributes;
    set DJ0MM002.XSZPCT25 initialAttributes;
    set DJ0MM002.XSZPCT26 initialAttributes;
    set DJ0MM002.XSZPCT27 initialAttributes;
    set DJ0MM002.XSZPCT28 initialAttributes;
    set DJ0MM002.XSZPCT29 initialAttributes;
    set DJ0MM002.XSZPCT30 initialAttributes;
    set DJ0MM002.XSZPCT31 initialAttributes;
    set DJ0MM002.XSZPCT32 initialAttributes;
    set DJ0MM002.XSZPCT33 initialAttributes;
    set DJ0MM002.XSZPCT34 initialAttributes;
    set DJ0MM002.XSZPCT35 initialAttributes;
    set DJ0MM002.XSZPCT36 initialAttributes;
    set DJ0MM002.XSZPCT37 initialAttributes;
    set DJ0MM002.XSZPCT38 initialAttributes;
    set DJ0MM002.XSZPCT39 initialAttributes;
    set DJ0MM002.XSZPCT40 initialAttributes;
    set DJ0MM002.XXXSTAT initialAttributes;
  end

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    set DJ0MM002.XSZCD skip;
    set DJ0MM002.XSZDESC skip;
    set DJ0MM002.XSZNBRSZ skip;
    set DJ0MM002.XSZPCT1 skip;
    set DJ0MM002.XSZPCT2 skip;
    set DJ0MM002.XSZPCT3 skip;
    set DJ0MM002.XSZPCT4 skip;
    set DJ0MM002.XSZPCT5 skip;
    set DJ0MM002.XSZPCT6 skip;
    set DJ0MM002.XSZPCT7 skip;
    set DJ0MM002.XSZPCT8 skip;
    set DJ0MM002.XSZPCT9 skip;
    set DJ0MM002.XSZPCT10 skip;
    set DJ0MM002.XSZPCT11 skip;
    set DJ0MM002.XSZPCT12 skip;
    set DJ0MM002.XSZPCT13 skip;
    set DJ0MM002.XSZPCT14 skip;
    set DJ0MM002.XSZPCT15 skip;
    set DJ0MM002.XSZPCT16 skip;
    set DJ0MM002.XSZPCT17 skip;
    set DJ0MM002.XSZPCT18 skip;
    set DJ0MM002.XSZPCT19 skip;
    set DJ0MM002.XSZPCT20 skip;
    set DJ0MM002.XSZPCT21 skip;
    set DJ0MM002.XSZPCT22 skip;
    set DJ0MM002.XSZPCT23 skip;
    set DJ0MM002.XSZPCT24 skip;
    set DJ0MM002.XSZPCT25 skip;
    set DJ0MM002.XSZPCT26 skip;
    set DJ0MM002.XSZPCT27 skip;
    set DJ0MM002.XSZPCT28 skip;
    set DJ0MM002.XSZPCT29 skip;
    set DJ0MM002.XSZPCT30 skip;
    set DJ0MM002.XSZPCT31 skip;
    set DJ0MM002.XSZPCT32 skip;
    set DJ0MM002.XSZPCT33 skip;
    set DJ0MM002.XSZPCT34 skip;
    set DJ0MM002.XSZPCT35 skip;
    set DJ0MM002.XSZPCT36 skip;
    set DJ0MM002.XSZPCT37 skip;
    set DJ0MM002.XSZPCT38 skip;
    set DJ0MM002.XSZPCT39 skip;
    set DJ0MM002.XSZPCT40 skip;
    set DJ0MM002.XXXSTAT skip;
  end

  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    set DJ0MM002.XSZCD skip;
    set DJ0MM002.XSZDESC initialAttributes;
    set DJ0MM002.XSZNBRSZ initialAttributes;
    set DJ0MM002.XSZPCT1 initialAttributes;
    set DJ0MM002.XSZPCT2 initialAttributes;
    set DJ0MM002.XSZPCT3 initialAttributes;
    set DJ0MM002.XSZPCT4 initialAttributes;
    set DJ0MM002.XSZPCT5 initialAttributes;
    set DJ0MM002.XSZPCT6 initialAttributes;
    set DJ0MM002.XSZPCT7 initialAttributes;
    set DJ0MM002.XSZPCT8 initialAttributes;
    set DJ0MM002.XSZPCT9 initialAttributes;
    set DJ0MM002.XSZPCT10 initialAttributes;
    set DJ0MM002.XSZPCT11 initialAttributes;
    set DJ0MM002.XSZPCT12 initialAttributes;
    set DJ0MM002.XSZPCT13 initialAttributes;
    set DJ0MM002.XSZPCT14 initialAttributes;
    set DJ0MM002.XSZPCT15 initialAttributes;
    set DJ0MM002.XSZPCT16 initialAttributes;
    set DJ0MM002.XSZPCT17 initialAttributes;
    set DJ0MM002.XSZPCT18 initialAttributes;
    set DJ0MM002.XSZPCT19 initialAttributes;
    set DJ0MM002.XSZPCT20 initialAttributes;
    set DJ0MM002.XSZPCT21 initialAttributes;
    set DJ0MM002.XSZPCT22 initialAttributes;
    set DJ0MM002.XSZPCT23 initialAttributes;
    set DJ0MM002.XSZPCT24 initialAttributes;
    set DJ0MM002.XSZPCT25 initialAttributes;
    set DJ0MM002.XSZPCT26 initialAttributes;
    set DJ0MM002.XSZPCT27 initialAttributes;
    set DJ0MM002.XSZPCT28 initialAttributes;
    set DJ0MM002.XSZPCT29 initialAttributes;
    set DJ0MM002.XSZPCT30 initialAttributes;
    set DJ0MM002.XSZPCT31 initialAttributes;
    set DJ0MM002.XSZPCT32 initialAttributes;
    set DJ0MM002.XSZPCT33 initialAttributes;
    set DJ0MM002.XSZPCT34 initialAttributes;
    set DJ0MM002.XSZPCT35 initialAttributes;
    set DJ0MM002.XSZPCT36 initialAttributes;
    set DJ0MM002.XSZPCT37 initialAttributes;
    set DJ0MM002.XSZPCT38 initialAttributes;
    set DJ0MM002.XSZPCT39 initialAttributes;
    set DJ0MM002.XSZPCT40 initialAttributes;
    set DJ0MM002.XXXSTAT initialAttributes;
  end

  set DJ0MM002.DA-PLOG-TXT1 cursor, initialAttributes;
  set DJ0MM002.DA-PLOG-TXT2 initialAttributes;

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD")
    DJ0MM002.DAW-CURR-FUNCTION-DESC = "ADD ROW ";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
    DJ0MM002.DAW-CURR-FUNCTION-DESC = "COPY ROW";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    DJ0MM002.DAW-CURR-FUNCTION-DESC = "UPDATE ROW";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    DJ0MM002.DAW-CURR-FUNCTION-DESC = "DELETE ROW";
  end

  if (DAWREC.DAW-RECORD-TYPE == "TRAN")
    DJ0MM002.DAW-RECORD-TYPE-DESC = "TRANSACTION";
  end

  if (DAWREC.DAW-RECORD-TYPE == "TBL ")
    DJ0MM002.DAW-RECORD-TYPE-DESC = "TABLE ROW  ";
  end


  /* **************/
  /* ****************** END DJ0MP25 **************************/
  /* **************/
end // end DJ0MP25-SET-ATTR-2

// MAIN PROCESS LOOP FOR MAP 1
Function DJ0MP30-MAIN-MAP-1()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'Y'*/
  /* **********************************************************/

  DJ0MP40-CONVERSE-1(); /* Display the map*/

  converseLib.validationFailed(0);
  DJ0MM001.VAGen_EZEMSG = " ";
  DJ0MM001.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  DJ0MP25-SET-ATTR-1(); /* Reset field attributes to defined*/

  DJ0MP50-PF-KEYS-1(); /* Edit pf keys*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "N"
   && DAWREC.DAW-TERM-APPL-FL == "N") /* No errors and not ready to exit*/

    DJ0MP60-EDIT-MAP-1(); /* Do all edits for map 1*/

    if (DAWREC.DAW-EDIT-ERROR-FL == "N")
      DJ0MP70-PROC-MAP-1(); /* Do any processing needed for map 1*/
    end

  end


  /* **************/
  /* ****************** END DJ0MP30 *****************************/
  /* **************/
end // end DJ0MP30-MAIN-MAP-1

// MAIN PROCESSING LOOP FOR MAP 2
Function DJ0MP30-MAIN-MAP-2()
  /* **********************************************************/
  /* MAIN PROCESS - Program loops through this process until*/
  /* the user exits with a PF key or transfers to another*/
  /* application. Exit occurs when DA-TERM-APPL = 'Y' or*/
  /* DA-DONE-WITH-ROW-FL = 'Y'*/
  /* **********************************************************/

  DJ0MP40-CONVERSE-2(); /* Display the map*/

  converseLib.validationFailed(0);
  DJ0MM002.VAGen_EZEMSG = " ";
  DJ0MM002.DAW-INFO-MESSAGE = " ";
  DAWREC.DAW-EDIT-ERROR-FL = "N";

  DJ0MP25-SET-ATTR-2(); /* Reset field attributes to defined*/

  DJ0MP50-PF-KEYS-2(); /* Edit pf keys*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "N" /* No errors*/
   && DAWREC.DAW-TERM-APPL-FL == "N"  /* and not ready to exit to MENU*/
   && DAWREC.DAW-DONE-WITH-ROW-FL == "N") /* and not ready to exit to MAP1*/

    DJ0MP60-EDIT-MAP-2(); /* Do all edits for MAP 2*/

    if (DAWREC.DAW-EDIT-ERROR-FL == "N")
      DJ0MP70-PROC-MAP-2(); /* Do any processing needed for MAP 2*/
    end

  end

  /* **************/
  /* ****************** END DJ0MP30 *****************************/
  /* **************/
end // end DJ0MP30-MAIN-MAP-2

// CONVERSE MAP 001
Function DJ0MP40-CONVERSE-1()
  /* **********************************************************/
  /* CONVERSE MAP 001 - LIST TABLE*/
  /* **********************************************************/
  converse DJ0MM001 ;

  /* **************/
  /* ****************** END DJ0MP40 *****************************/
  /* **************/
end // end DJ0MP40-CONVERSE-1

// CONVERSE MAP 002
Function DJ0MP40-CONVERSE-2()
  /* **********************************************************/
  /* CONVERSE MAP 002 - TABLE ROW DETAILS*/
  /* **********************************************************/
  converse DJ0MM002 ;

  /* **************/
  /* ****************** END DJ0MP40 *****************************/
  /* **************/
end // end DJ0MP40-CONVERSE-2

// EDIT PF KEYS FOR MAP 1
Function DJ0MP50-PF-KEYS-1()
  /* **************************************************************/
  /* Edit the PF keys for MAP 001*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (converseVar.eventKey is pf7)
    if (DJ0MM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(002); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF7 at the same time*/
    end
    if (DJ0MM001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (DJ0MM001.DAW-CURR-PAGE <= 1)
      converseLib.validationFailed(003); /* Can't use PF7 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* first page*/
    end
  end

  if (converseVar.eventKey is pf8)
    if (DJ0MM001.DAW-CURR-PAGE != DAWREC.DAW-CURR-PAGE)
      converseLib.validationFailed(004); /* Can't change page number and use*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* PF8 at the same time*/
    end
    if (DJ0MM001.DAW-LAST-PAGE <= 1)
      converseLib.validationFailed(001); /* Invalid PF Key*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
    end
    if (DJ0MM001.DAW-CURR-PAGE >= DAWREC.DAW-MAX-PAGE)
      converseLib.validationFailed(005); /* Can't use PF8 - already at the*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page*/
    end
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    DJ0MP55-HNDL-PFK-1();
  end

  /* **************/
  /* ****************** END DJ0MP50 *******************************/
  /* **************/
end // end DJ0MP50-PF-KEYS-1

// EDIT PF KEYS FOR MAP 2
Function DJ0MP50-PF-KEYS-2()
  /* **************************************************************/
  /* Edit the PF keys for MAP 002*/
  /* **************************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf6
   || converseVar.eventKey is pf10)
    /* valid pf keys for this application*/
  else
    converseLib.validationFailed(001); /* Invalid PF Key*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (DAWREC.DAW-EDIT-ERROR-FL == "N")
    DJ0MP55-HNDL-PFK-2();
  end

  /* **************/
  /* ****************** END DJ0MP50 *******************************/
  /* **************/
end // end DJ0MP50-PF-KEYS-2

// HANDLE MAP 1 PF KEYS
Function DJ0MP55-HNDL-PFK-1()
  /* ************************************************************/
  /* MAP 001 Process PF Keys - do whatever is needed to handle the*/
  /* pf key and set the exit flag to 'y' when the pfkey does not*/
  /* require any furthur edits. If the pf key does require editting*/
  /* of anything entered on the map (like fastpath option) the exit*/
  /* flag will be set to 'Y' in the map edit process when there are*/
  /* no errors and there is something in the DA-EXIT-OPTION*/
  /* ************************************************************/

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-EXIT-OPTION = "RETN";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end

  if (converseVar.eventKey is pf7) /* subtract 1 from the map page number*/
    DJ0MM001.DAW-CURR-PAGE = DJ0MM001.DAW-CURR-PAGE - 1;
  end

  if (converseVar.eventKey is pf8) /* add 1 to the map page number*/
    DJ0MM001.DAW-CURR-PAGE = DJ0MM001.DAW-CURR-PAGE + 1;
  end

  if (converseVar.eventKey is pf9) /* print the tables*/
    set XSDAW01 empty;
    XSDAW01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;
    XSDAS-PRINT-TABLE();
    DJ0MM001.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
  end

  if (converseVar.eventKey is pf10) /* set in process status to pending*/
    DAWREC.DAW-SET-PENDING-ALL-FL = "Y";
  else
    DAWREC.DAW-SET-PENDING-ALL-FL = "N";
  end

  if (converseVar.eventKey is pf11) /* add a new code*/
    DAWREC.DAW-ADD-ROW-FL = "Y";
  else
    DAWREC.DAW-ADD-ROW-FL = "N";
  end

  /* **************/
  /* ****************** END DJ0MP55 *****************************/
  /* **************/
end // end DJ0MP55-HNDL-PFK-1

// HANDLE PF KEYS FOR MAP 2
Function DJ0MP55-HNDL-PFK-2()
  /* ************************************************************/
  /* MAP 002 Process PF Keys - do whatever is needed to handle the*/
  /* pf key and set the DA-DONE-WITH-ROW-FL to 'y' when the pfkey*/
  /* doesn't require any furthur edits or processing.*/
  /* For PF6 and PF10 the DA-DONE-WITH-ROW-FL will be set to 'Y'*/
  /* in DJ0MP70-PROC-MAP-2.*/
  /* ************************************************************/

  if (converseVar.eventKey is pf3)
    DAWREC.DAW-DONE-WITH-ROW-FL = "Y";
  end

  if (converseVar.eventKey is pf4)
    DAWREC.DAW-EXIT-OPTION = "MENU";
    DAWREC.DAW-TERM-APPL-FL = "Y";
  end


  if (converseVar.eventKey is pf10) /* set in process status to pending*/
    DAWREC.DAW-SET-PENDING-FL = "Y";
  else
    DAWREC.DAW-SET-PENDING-FL = "N";
  end

  if (converseVar.eventKey is pf6) /* apply the update or add*/
    DAWREC.DAW-APPLY-FL = "Y";
  else
    DAWREC.DAW-APPLY-FL = "N";
  end

  /* **************/
  /* ****************** END DJ0MP55 *****************************/
  /* **************/
end // end DJ0MP55-HNDL-PFK-2

// EDIT ALL MAP FIELDS ON MAP 1
Function DJ0MP60-EDIT-MAP-1()
  /* ***********************************************************/
  /* Edit MAP 001 fields in reverse order*/
  /* ***********************************************************/

  DAWREC.DAW-SELECT-ROW-FL = "N";
  DAWREC.DAW-DELETE-ROW-FL = "N";
  DAWREC.DAW-COPY-ROW-FL = "N";

  DJ0MP61-EDIT-SEL(); /* edit select*/

  DJ0MP62-EDIT-PAGE(); /* edit current page number*/

  if (DAWREC.DAW-EDIT-ERROR-FL == "Y" /* any errors*/
   && DAWREC.DAW-EXIT-OPTION != " ")  /* don't allow exit from appl*/
    DAWREC.DAW-TERM-APPL-FL = "N";
    DAWREC.DAW-EXIT-OPTION = " ";
  end

  /* **************/
  /* ****************** END DJ0MP60 ****************************/
  /* **************/
end // end DJ0MP60-EDIT-MAP-1

// EDIT ALL FIELDS FOR MAP 2
Function DJ0MP60-EDIT-MAP-2()
  /* ***********************************************************/
  /* Edit MAP 001 fields in reverse order*/
  /* ***********************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    if (DAWREC.DAW-RECORD-TYPE == "TBL ")
      DJ0MP61-EDIT-STAT(); /* Edit status*/
      DJ0MP68-EDIT-PLOG(); /* Edit prologs*/
    end
    return;
  end

  DJ0MP61-EDIT-STAT(); /* Edit status*/

  DJ0MP65-EDIT-NBRSZ(); /* Edit Nbr of sizes*/

  DJ0MP62-EDIT-DESC(); /* Edit description*/

  DJ0MP68-EDIT-PLOG(); /* Edit prologs*/

  DJ0MP69-EDIT-KEY(); /* Edit the table code and/or key*/

  /* **************/
  /* ****************** END DJ0MP60 ****************************/
  /* **************/
end // end DJ0MP60-EDIT-MAP-2

// EDIT MAP PREFIX OPTION
Function DJ0MP61-EDIT-SEL()
  /* ***********************************************************/
  /* Edit map select codes - user may enter multiple selects*/
  /* on a single page. Each will be processed as long as there*/
  /* are no errors.*/
  /* ***********************************************************/

  sysVar.arrayIndex = 14;

  while (sysVar.arrayIndex != 0)

    if (DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == " "
     || DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == "*")
       /* CONTINUE*/
    else
      if (DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == "S")
        DAWREC.DAW-SELECT-ROW-FL = "Y";
      else
        if (DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == "C")
          DAWREC.DAW-COPY-ROW-FL = "Y";
        else
          if (DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == "D")
            if (DJ0MM001.DAW-STATUS-DESC[sysVar.arrayIndex] == "EDIT    "
             || DJ0MM001.DAW-STATUS-DESC[sysVar.arrayIndex] == "PENDING "
             || DJ0MM001.DAW-STATUS-DESC[sysVar.arrayIndex] == "REJECTED")
              DAWREC.DAW-DELETE-ROW-FL = "Y";
            else
              converseLib.validationFailed(009); /* only edit, wait or rejected*/
              DAWREC.DAW-EDIT-ERROR-FL = "Y";
                                   /* status rows may be deleted*/
              set DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, bold;
            end
          else
            if (DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] == "A")
              converseLib.validationFailed(010); /* invalid select - use PF11 to add a*/
              DAWREC.DAW-EDIT-ERROR-FL = "Y";
                                   /* new code instead of 'A'*/
              set DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, bold;
            else
              converseLib.validationFailed(011); /* invalid select - use 's' to select*/
              DAWREC.DAW-EDIT-ERROR-FL = "Y";
                                   /* 'd' to delete or 'c' copy*/
              set DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] cursor, bold;
            end
          end
        end
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex - 1;
  end

  /* **************/
  /* ****************** END DJ0MP61 ****************************/
  /* **************/
end // end DJ0MP61-EDIT-SEL

// EDIT TABLE STATUS A/I
Function DJ0MP61-EDIT-STAT()
  /* ****************************************************************/
  /* Edit status (XXXSTAT) must be 'A' active or 'I' inactive*/
  /* ****************************************************************/

  if (DJ0MM002.XXXSTAT == "A")
    DJ0MM002.DAW-TBL-STATUS-DESC = "ACTIVE  ";
  else
    if (DJ0MM002.XXXSTAT == "I")
      DJ0MM002.DAW-TBL-STATUS-DESC = "INACTIVE";
    else
      converseLib.validationFailed(012); /* status must be 'A' or 'I'*/
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      set DJ0MM002.XXXSTAT cursor, bold;
    end
  end

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL"
   && DJ0MM002.XXXSTAT != "I")
    DJ0MM002.DAW-INFO-MESSAGE = "CANNOT DELETE TABLE ROW; STATUS IS ACTIVE. PF3 TO RETURN TO LIST";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end


  /* **************/
  /* ***************** END DJ0MP61 **********************************/
  /* **************/
end // end DJ0MP61-EDIT-STAT

// EDIT TABLE ROW DESCRIPTION
Function DJ0MP62-EDIT-DESC()
  /* ****************************************************************/
  /* Edit description - space is acceptable*/
  /* ****************************************************************/
  /* IF DJ0MM002.XSZDESC EQ ' ';*/
  /* MOVE 013 TO EZEMNO;            /* Description is required*/
  /* MOVE 'Y' TO DAWREC.DAW-EDIT-ERROR-FL;*/
  /* SET DJ0MM002.XSZDESC CURSOR,BRIGHT;*/
  /* END;*/
  /* **************/
  /* ***************** END DJ0MP62 **********************************/
  /* **************/
end // end DJ0MP62-EDIT-DESC

// EDIT MAP PAGE NUMBER
Function DJ0MP62-EDIT-PAGE()
  /* ***********************************************************/
  /* Edit map current page number*/
  /* ***********************************************************/

  if (DJ0MM001.DAW-CURR-PAGE == DAWREC.DAW-CURR-PAGE)
    return;
  end

  /* if select codes entered and page number changed*/
  /* then reset page number*/

  if (DAWREC.DAW-ADD-ROW-FL == "Y"
   || DAWREC.DAW-DELETE-ROW-FL == "Y"
   || DAWREC.DAW-SELECT-ROW-FL == "Y"
   || DAWREC.DAW-COPY-ROW-FL == "Y")
    set DJ0MM001.DAW-CURR-PAGE bold;
    DJ0MM001.VAGen_EZEMSG = "CANNOT MAINTAIN OR ADD A ROW AND CHANGE PAGE AT THE SAME TIME";
    DJ0MM001.DAW-CURR-PAGE = DAWREC.DAW-CURR-PAGE;
    DJ0MM001.DAW-INFO-MESSAGE = "PAGE NUMBER HAS BEEN RESET - HIT ENTER OR PF11 TO CONTINUE";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
  end

  if (DJ0MM001.DAW-CURR-PAGE > DJ0MM001.DAW-LAST-PAGE)
    set DJ0MM001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(006); /* page number entered is greater than*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* last page available*/
  end

  if (DJ0MM001.DAW-CURR-PAGE == 0)
    set DJ0MM001.DAW-CURR-PAGE cursor, bold;
    converseLib.validationFailed(007); /* page number entered is zero - page*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* does not exist*/
  end

  /* **************/
  /* ****************** END DJ0MP62 ****************************/
  /* **************/
end // end DJ0MP62-EDIT-PAGE

Function DJ0MP65-EDIT-NBRSZ()
  /* ********************************************************************/
  /* edit nbr of sizes (1 - 40)*/
  /* ********************************************************************/

  if (DJ0MM002.XSZNBRSZ < 1
   || DJ0MM002.XSZNBRSZ > 40)
    converseLib.validationFailed(572); /* must between 1 and 40*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DJ0MM002.XSZNBRSZ cursor, bold;
  end

  /* **************/
  /* ****************** END DJ0MP65 **************************************/
  /* **************/
end // end DJ0MP65-EDIT-NBRSZ

// EDIT PROLOGS
Function DJ0MP68-EDIT-PLOG()
  /* ****************************************************************/
  /* Edit prologs - required, something must be in the field*/
  /* ****************************************************************/

  if (DJ0MM002.DA-PLOG-TXT1 == " "
   && DJ0MM002.DA-PLOG-TXT2 == " ")
    converseLib.validationFailed(018); /* a least one description of the*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y"; /* change is required*/
    set DJ0MM002.DA-PLOG-TXT1 cursor, bold;
  end


  /* **************/
  /* ***************** END DJ0MP68 **********************************/
  /* **************/
end // end DJ0MP68-EDIT-PLOG

// EDIT TABLE ROW KEY
Function DJ0MP69-EDIT-KEY()
  /* ****************************************************************/
  /* Edit the table key (XSZCD)*/
  /* a) required - can't be spaces*/
  /* b) can't exist if current function is add or copy*/
  /* field is protected when current function is update*/
  /* c) can't exist in transaction table with todays date*/
  /* in any status except 'c' complete*/
  /* ****************************************************************/

  if (DJ0MM002.XSZCD == " ")
    converseLib.validationFailed(574); /* table key is required*/
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DJ0MM002.XSZCD cursor, bold;
  end

  /* Can't exist in current table (no matter what the status is)*/

  if (DJ0MM002.XSZCD in XSZTBL.XSZCD)
    if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD")
      converseLib.validationFailed(573); /* table key already exists*/
      DJ0MM002.DAW-INFO-MESSAGE = "REVIEW TABLE LIST AND SELECT ROW TO UPDATE";
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      set DJ0MM002.XSZCD cursor, bold;
    end
    if (DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
      converseLib.validationFailed(573); /* table key already exists*/
      DJ0MM002.DAW-INFO-MESSAGE = "TABLE KEY MUST BE CHANGED WHEN COPYING A ROW TO BE ADDED";
      DAWREC.DAW-EDIT-ERROR-FL = "Y";
      set DJ0MM002.XSZCD cursor, bold;
    end
  end

  /* **  **  **  **  **  **  **  **  **  **  **  **  **  **  ***/
  /* WARNING - Add any new edits for the key prior to this line*/
  /* **  **  **  **  **  **  **  **  **  **  **  **  **  **  ***/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    return; /* row is a transaction that is being*/
  end /* updated - skip the next edit*/

  /* Can't exist in transaction table - must be the last edit*/

  VDATRN01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;
  DJ0MW01.DA-CCAT-KEY-TXT = " ";
  DJ0MW01.DJ0MW-KEY-XSZCD = DJ0MM002.XSZCD;
  VDATRN01.DA-CCAT-KEY-TXT = DJ0MW01.DA-CCAT-KEY-TXT;
  VDATRN01.ZZ-CHNG-DT = DAWREC.ZZ-CHNG-DT;

  XSDAS-DA1140-SEL-2();

  if (SQLCA.VAGen_SQLCODE != 100) /* row found*/
    converseLib.validationFailed(017); /* table key already added or changed*/
    DJ0MM002.DAW-INFO-MESSAGE = "SELECT TRANSACTION TO UPDATE OR CALL DATA ADMIN IF APPROVED/PROCESSING";
    DAWREC.DAW-EDIT-ERROR-FL = "Y";
    set DJ0MM002.XSZCD cursor, bold;
  end

  /* **************/
  /* ***************** END DJ0MP69 **********************************/
  /* **************/
end // end DJ0MP69-EDIT-KEY

// DO PROCESSING FOR THE MAP 1
Function DJ0MP70-PROC-MAP-1()
  /* ****************************************************************/
  /* Do any processing for MAP 001*/
  /* ****************************************************************/

  /* *****************************************************************/
  /* Display new page*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-PAGE != DJ0MM001.DAW-CURR-PAGE)
    DJ0MS-TS-READ-PAGE();
    DJ0MP71-TSQ-TO-MAP();
    DJ0MP25-SET-ATTR-1();
  end

  /* *****************************************************************/
  /* set all in-process rows on the current page to pending*/
  /* *****************************************************************/

  if (DAWREC.DAW-SET-PENDING-ALL-FL == "Y")

    DAWREC.DAW-ROW-NBR = 1;
    while (DAWREC.DAW-ROW-NBR <= 14) /* check each row on the MAP 001*/
      if (DJ0MM001.DAW-STATUS-DESC[DAW-ROW-NBR] == "EDIT")
        set VDATRN01 empty;
        VDATRN01.DAW-VDATRN01-KEY = DJ0MW02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
        XSDAS-SET-STATUS(); /* set the status to 'pending'*/
      end
      DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
    end

  end

  /* *****************************************************************/
  /* Add a row*/
  /* *****************************************************************/

  if (DAWREC.DAW-ADD-ROW-FL == "Y")

    DAWREC.DAW-RECORD-TYPE = " ";
    DAWREC.DAW-CURR-FUNCTION-CD = "ADD";
    DAWREC.DAW-ROW-NBR = 0;

    DJ0MP20-BUILD-MAP2();

    DAWREC.DAW-DONE-WITH-ROW-FL = "N";
    while (DAWREC.DAW-DONE-WITH-ROW-FL != "Y" /* process row until done*/
     && DAWREC.DAW-TERM-APPL-FL == "N") /* with it or exit from appl*/
      DJ0MP30-MAIN-MAP-2(); /* main loop for MAP 002*/
    end

    DAWREC.DAW-CURR-FUNCTION-CD = "   ";

  end

  /* *****************************************************************/
  /* Select, copy or delete rows;*/
  /* *****************************************************************/

  if (DAWREC.DAW-SELECT-ROW-FL == "Y"
   || DAWREC.DAW-COPY-ROW-FL == "Y"
   || DAWREC.DAW-DELETE-ROW-FL == "Y")

    DAWREC.DAW-ROW-NBR = 1;
    while (DAWREC.DAW-ROW-NBR <= 14 /* check each row on the MAP 001*/
     && DAWREC.DAW-TERM-APPL-FL == "N") /* until done or exit from appl*/

      DAWREC.DAW-RECORD-TYPE = DJ0MW02.DAW-RECORD-TYPE[DAW-ROW-NBR];

      if (DJ0MM001.DAW-SELECT-CD[DAW-ROW-NBR] == "S"
       || DJ0MM001.DAW-SELECT-CD[DAW-ROW-NBR] == "C"
       || DJ0MM001.DAW-SELECT-CD[DAW-ROW-NBR] == "D")

        if (DJ0MM001.DAW-SELECT-CD[DAW-ROW-NBR] == "S")
          DAWREC.DAW-CURR-FUNCTION-CD = "UPD";
        end
        if (DJ0MM001.DAW-SELECT-CD[DAW-ROW-NBR] == "C")
          DAWREC.DAW-CURR-FUNCTION-CD = "CPY";
        end
        if (DJ0MM001.DAW-SELECT-CD[DAW-ROW-NBR] == "D")
          DAWREC.DAW-CURR-FUNCTION-CD = "DEL";
          DAWREC.DAW-OK-TO-DELETE-FL = "N";
        end

        DAWREC.DAW-DONE-WITH-ROW-FL = "N";
        DJ0MP20-BUILD-MAP2();
        while (DAWREC.DAW-DONE-WITH-ROW-FL != "Y" /* process row until done*/
         && DAWREC.DAW-TERM-APPL-FL == "N") /* with it or exit from appl*/
          DJ0MP30-MAIN-MAP-2(); /* main loop for MAP 002*/
        end

      end

      DAWREC.DAW-ROW-NBR = DAWREC.DAW-ROW-NBR + 1;
      DAWREC.DAW-CURR-FUNCTION-CD = "   ";

    end
  end

  /* *****************************************************************/
  /* Any maintenance selections are now completed so rebuild*/
  /* temp storage*/
  /* *****************************************************************/

  if (DAWREC.DAW-TERM-APPL-FL == "N") /* not ready to exit this application*/
    if (DAWREC.DAW-SELECT-ROW-FL == "Y"
     || DAWREC.DAW-COPY-ROW-FL == "Y"
     || DAWREC.DAW-DELETE-ROW-FL == "Y"
     || DAWREC.DAW-ADD-ROW-FL == "Y"
     || DAWREC.DAW-SET-PENDING-ALL-FL == "Y")
      DJ0MS-TS-PURGE-FIL(); /* purge temp storage*/
      DJ0MP20-BUILD-MAP1(); /* and then rebuilt it*/
      if (DAWREC.DAW-SET-PENDING-ALL-FL == "Y")
        DJ0MM001.DAW-INFO-MESSAGE = "ALL TRANSACTIONS IN EDIT STATUS SET TO PENDING - PLEASE REVIEW LIST";
      else
        DJ0MM001.DAW-INFO-MESSAGE = "ALL MAINTENANCE SELECTIONS HAVE BEEN COMPLETED - PLEASE REVIEW LIST";
      end
    end
  end

  /* **************/
  /* ***************** END DJ0MP70 **********************************/
  /* **************/
end // end DJ0MP70-PROC-MAP-1

// DO PROCESSING NEEDED FOR MAP 2
Function DJ0MP70-PROC-MAP-2()
  /* ****************************************************************/
  /* Do any processing for MAP 002*/
  /* ****************************************************************/

  /* ****************************************************************/
  /* User hit enter instead of PF6 or PF10, so there's nothing to*/
  /* do except give them a message indicating what to do*/
  /* ****************************************************************/

  if (DAWREC.DAW-APPLY-FL == "N"
   && DAWREC.DAW-SET-PENDING-FL == "N")
    DJ0MM002.DAW-INFO-MESSAGE = "USE PF6 TO CREATE TRANSACTION OR PF10 TO CREATE AND SET TO PENDING";
    DJ0MM002.VAGen_EZEMSG = "OR PF3 TO RETURN TO LIST";
    return;
  end


  /* *****************************************************************/
  /* See if anything was changed- Compare map to table record*/
  /* *****************************************************************/

  DJ0MP71-COMPARE();


  /* *****************************************************************/
  /* Set status to pending if no change to row*/
  /* *****************************************************************/

  if (DAWREC.DAW-SET-PENDING-FL == "Y"
   && DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-DATA-CHANGED-FL == "N") /* no change to row*/
    set VDATRN01 empty;
    if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
      VDATRN01.DAW-VDATRN01-KEY = DAWREC.DAW-VDATRN01-KEY;
    else
      VDATRN01.DAW-VDATRN01-KEY = DJ0MW02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
    end
    XSDAS-SET-STATUS(); /* set the status to 'pending'*/
    DJ0MM002.DAW-INFO-MESSAGE = "TRANSACTION STATUS CHANGED TO PENDING: PF3 TO CONTINUE ";
    return;
  end


  /* *****************************************************************/
  /* Create a transaction to add a table row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD"
   && DAWREC.DAW-RECORD-TYPE == " "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* row was added or changed*/

    DJ0MP72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DJ0MM002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DJ0MM002.DAW-INFO-MESSAGE = "NEW TABLE ROW WILL BE ADDED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;

  end


  /* *****************************************************************/
  /* Create a transaction to copy a table row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "CPY"
   && DAWREC.DAW-RECORD-TYPE == "TBL "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* row was copied or updated*/

    DJ0MP72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DJ0MM002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DJ0MM002.DAW-INFO-MESSAGE = "NEW TABLE ROW WILL BE ADDED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;
  end


  /* *****************************************************************/
  /* Create a transaction to update a table row*/
  /* *****************************************************************/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD"
   && DAWREC.DAW-RECORD-TYPE == "TBL "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* row was copied or updated*/

    DJ0MP72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DJ0MM002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DJ0MM002.DAW-INFO-MESSAGE = "TABLE ROW WILL BE UPDATED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;
  end


  /* *****************************************************************/
  /* Create a transaction to delete a table row*/
  /* *****************************************************************/

  /* This function has not been used*/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL"
   && DAWREC.DAW-RECORD-TYPE == "TBL "
   && DAWREC.DAW-DATA-CHANGED-FL == "Y")

    if (DAWREC.DAW-OK-TO-DELETE-FL == "Y")
      DJ0MP72-NEW-TRAN(); /* build new transaction row*/
      XSDAS-DA1140-ADD();
      DJ0MM002.DAW-INFO-MESSAGE = "TABLE ROW WILL BE DELETED - PF3 TO CONTINUE OR RETURN TO LIST";
    else
      DJ0MM002.DAW-INFO-MESSAGE = "USE PF6 TO DELETE OR PF3 TO CANCEL THE DELETE AND RETURN TO LIST";
      DAWREC.DAW-OK-TO-DELETE-FL = "Y";
    end
    return;
  end


  /* *****************************************************************/
  /* Update a transaction*/
  /* *****************************************************************/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "UPD"
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* something was changed*/

    DJ0MP73-OLD-TRAN(); /* build old transaction row*/
    XSDAS-DA1140-UPD();
    if (SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DJ0MM002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DJ0MM002.DAW-INFO-MESSAGE = "TRANSACTION UPDATED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;

  end


  /* *****************************************************************/
  /* copy a transaction*/
  /* *****************************************************************/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "CPY"
   && DAWREC.DAW-DATA-CHANGED-FL == "Y") /* something was changed*/

    DJ0MP72-NEW-TRAN(); /* build new transaction row*/
    XSDAS-DA1140-ADD();
    if (SQLCA.VAGen_SQLCODE == -803 /* check duplicate*/
     || SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
      DJ0MM002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
    else
      DJ0MM002.DAW-INFO-MESSAGE = "NEW TABLE ROW WILL BE ADDED - PF3 TO CONTINUE OR RETURN TO LIST";
    end
    return;

  end


  /* *****************************************************************/
  /* Delete  a transaction*/
  /* *****************************************************************/

  if (DAWREC.DAW-RECORD-TYPE == "TRAN"
   && DAWREC.DAW-CURR-FUNCTION-CD == "DEL")

    if (DAWREC.DAW-OK-TO-DELETE-FL == "Y")
      set VDATRN01 empty;
      VDATRN01.DAW-VDATRN01-KEY = DJ0MW02.DAW-VDATRN01-KEY[DAW-ROW-NBR];
      XSDAS-DA1140-DEL();
      if (SQLCA.VAGen_SQLCODE == -911) /* check deadlock*/
        DJ0MM002.DAW-INFO-MESSAGE = DAWREC.DAW-INFO-MESSAGE;
      else
        DJ0MM002.DAW-INFO-MESSAGE = "TRANSACTION DELETED - PF3 TO CONTINUE OR RETURN TO LIST";
        DAWREC.DAW-OK-TO-DELETE-FL = "N";
      end
      return;
    else
      DJ0MM002.DAW-INFO-MESSAGE = "USE PF6 TO DELETE OR PF3 TO CANCEL THE DELETE AND RETURN TO LIST";
      DAWREC.DAW-OK-TO-DELETE-FL = "Y";
      return;
    end
  end


  /* still here !! Then nothing changed and there's nothing to process*/

  DJ0MM002.DAW-INFO-MESSAGE = "NOTHING ADDED OR CHANGED..... ARE YOU JUST LOOKING ?? ";
  DJ0MM002.VAGen_EZEMSG = "USE PF3 TO RETURN TO LIST WHEN YOU ARE READY";

  /* **************/
  /* ***************** END DJ0MP70 **********************************/
  /* **************/
end // end DJ0MP70-PROC-MAP-2

// COMPARE TABLE ROW TO RECORD
Function DJ0MP71-COMPARE()
  /* *****************************************************************/
  /* See if anything changed*/
  /* *****************************************************************/

  if (DJ0MW01.XSZCD == DJ0MM002.XSZCD
   && DJ0MW01.XSZDESC == DJ0MM002.XSZDESC
   && DJ0MW01.XSZNBRSZ == DJ0MM002.XSZNBRSZ
   && DJ0MW01.XSZPCT1 == DJ0MM002.XSZPCT1
   && DJ0MW01.XSZPCT2 == DJ0MM002.XSZPCT2
   && DJ0MW01.XSZPCT3 == DJ0MM002.XSZPCT3
   && DJ0MW01.XSZPCT4 == DJ0MM002.XSZPCT4
   && DJ0MW01.XSZPCT5 == DJ0MM002.XSZPCT5
   && DJ0MW01.XSZPCT6 == DJ0MM002.XSZPCT6
   && DJ0MW01.XSZPCT7 == DJ0MM002.XSZPCT7
   && DJ0MW01.XSZPCT8 == DJ0MM002.XSZPCT8
   && DJ0MW01.XSZPCT9 == DJ0MM002.XSZPCT9
   && DJ0MW01.XSZPCT10 == DJ0MM002.XSZPCT10
   && DJ0MW01.XSZPCT11 == DJ0MM002.XSZPCT11
   && DJ0MW01.XSZPCT12 == DJ0MM002.XSZPCT12
   && DJ0MW01.XSZPCT13 == DJ0MM002.XSZPCT13
   && DJ0MW01.XSZPCT14 == DJ0MM002.XSZPCT14
   && DJ0MW01.XSZPCT15 == DJ0MM002.XSZPCT15
   && DJ0MW01.XSZPCT16 == DJ0MM002.XSZPCT16
   && DJ0MW01.XSZPCT17 == DJ0MM002.XSZPCT17
   && DJ0MW01.XSZPCT18 == DJ0MM002.XSZPCT18
   && DJ0MW01.XSZPCT19 == DJ0MM002.XSZPCT19
   && DJ0MW01.XSZPCT20 == DJ0MM002.XSZPCT20
   && DJ0MW01.XSZPCT21 == DJ0MM002.XSZPCT21
   && DJ0MW01.XSZPCT22 == DJ0MM002.XSZPCT22
   && DJ0MW01.XSZPCT23 == DJ0MM002.XSZPCT23
   && DJ0MW01.XSZPCT24 == DJ0MM002.XSZPCT24
   && DJ0MW01.XSZPCT25 == DJ0MM002.XSZPCT25
   && DJ0MW01.XSZPCT26 == DJ0MM002.XSZPCT26
   && DJ0MW01.XSZPCT27 == DJ0MM002.XSZPCT27
   && DJ0MW01.XSZPCT28 == DJ0MM002.XSZPCT28
   && DJ0MW01.XSZPCT29 == DJ0MM002.XSZPCT29
   && DJ0MW01.XSZPCT30 == DJ0MM002.XSZPCT30
   && DJ0MW01.XSZPCT31 == DJ0MM002.XSZPCT31
   && DJ0MW01.XSZPCT32 == DJ0MM002.XSZPCT32
   && DJ0MW01.XSZPCT33 == DJ0MM002.XSZPCT33
   && DJ0MW01.XSZPCT34 == DJ0MM002.XSZPCT34
   && DJ0MW01.XSZPCT35 == DJ0MM002.XSZPCT35
   && DJ0MW01.XSZPCT36 == DJ0MM002.XSZPCT36
   && DJ0MW01.XSZPCT37 == DJ0MM002.XSZPCT37
   && DJ0MW01.XSZPCT38 == DJ0MM002.XSZPCT38
   && DJ0MW01.XSZPCT39 == DJ0MM002.XSZPCT39
   && DJ0MW01.XSZPCT40 == DJ0MM002.XSZPCT40
   && DJ0MW01.XXXSTAT == DJ0MM002.XXXSTAT
   && DJ0MW01.DA-PLOG-TXT1 == DJ0MM002.DA-PLOG-TXT1
   && DJ0MW01.DA-PLOG-TXT2 == DJ0MM002.DA-PLOG-TXT2)
    DAWREC.DAW-DATA-CHANGED-FL = "N";
  else
    DAWREC.DAW-DATA-CHANGED-FL = "Y";
  end

  /* **************/
  /* ***************** END DJ0MP71 **********************************/
  /* **************/
end // end DJ0MP71-COMPARE

// MOVE TEMP STORAGE PAGE TO MAP
Function DJ0MP71-TSQ-TO-MAP()
  /* ************************************************************/
  /* Move temp storage page to map*/
  /* ************************************************************/

  sysVar.arrayIndex = 1;

  while (sysVar.arrayIndex <= 14)
    DJ0MM001.DAW-SELECT-CD[sysVar.arrayIndex] = DJ0MW02.DAW-SELECT-CD[sysVar.arrayIndex];
    DJ0MM001.XSZCD[sysVar.arrayIndex] = DJ0MW02.XSZCD[sysVar.arrayIndex];
    DJ0MM001.XSZDESC[sysVar.arrayIndex] = DJ0MW02.XSZDESC[sysVar.arrayIndex];
    DJ0MM001.XSZNBRSZ[sysVar.arrayIndex] = DJ0MW02.XSZNBRSZ[sysVar.arrayIndex];
    DJ0MM001.XXXSTAT[sysVar.arrayIndex] = DJ0MW02.XXXSTAT[sysVar.arrayIndex];
    DJ0MM001.DAW-STATUS-DESC[sysVar.arrayIndex] = DJ0MW02.DAW-STATUS-DESC[sysVar.arrayIndex];
    DJ0MM001.DA-CHNG-USER-ID[sysVar.arrayIndex] = DJ0MW02.DA-CHNG-USER-ID[sysVar.arrayIndex];
    DJ0MM001.DAW-CHNG-DT-MDY[sysVar.arrayIndex] = DJ0MW02.DAW-CHNG-DT-MDY[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

  /* **************/
  /* ****************** END DJ0MP71 *****************************/
  /* **************/
end // end DJ0MP71-TSQ-TO-MAP

// BUILD NEW VDATRN01 RECORD
Function DJ0MP72-NEW-TRAN()
  /* *****************************************************************/
  /* Build a new transaction row*/
  /* *****************************************************************/

  set VDATRN01 empty;

  VDATRN01.XXX-TBL-PFX = DAWREC.XXX-TBL-PFX;

  /* Build the prolog information*/

  VDATRN01.ZZ-CHNG-DT = DAWREC.ZZ-CHNG-DT;
  VDATRN01.DA-CHNG-USER-ID = sysVar.userID;
  VDATRN01.DA-APVD-USER-ID = " ";
  VDATRN01.DA-PLOG-TXT1 = DJ0MM002.DA-PLOG-TXT1;
  VDATRN01.DA-PLOG-TXT2 = DJ0MM002.DA-PLOG-TXT2;

  /* Determine the transaction type*/

  if (DAWREC.DAW-CURR-FUNCTION-CD == "ADD"
   || DAWREC.DAW-CURR-FUNCTION-CD == "CPY")
    VDATRN01.DA-ROW-EDIT-IND = "A";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "UPD")
    VDATRN01.DA-ROW-EDIT-IND = "C";
  end
  if (DAWREC.DAW-CURR-FUNCTION-CD == "DEL")
    VDATRN01.DA-ROW-EDIT-IND = "D";
  end

  /* Build the table key*/

  DJ0MW01.DA-CCAT-KEY-TXT = " ";
  DJ0MW01.DJ0MW-KEY-XSZCD = DJ0MM002.XSZCD;
  VDATRN01.DA-CCAT-KEY-TXT = DJ0MW01.DA-CCAT-KEY-TXT;

  /* Build the table row*/

  DJ0MW01.XSZCD = DJ0MM002.XSZCD;
  DJ0MW01.XSZDESC = DJ0MM002.XSZDESC;
  DJ0MW01.XSZNBRSZ = DJ0MM002.XSZNBRSZ;
  DJ0MW01.XSZPCT1 = DJ0MM002.XSZPCT1;
  DJ0MW01.XSZPCT2 = DJ0MM002.XSZPCT2;
  DJ0MW01.XSZPCT3 = DJ0MM002.XSZPCT3;
  DJ0MW01.XSZPCT4 = DJ0MM002.XSZPCT4;
  DJ0MW01.XSZPCT5 = DJ0MM002.XSZPCT5;
  DJ0MW01.XSZPCT6 = DJ0MM002.XSZPCT6;
  DJ0MW01.XSZPCT7 = DJ0MM002.XSZPCT7;
  DJ0MW01.XSZPCT8 = DJ0MM002.XSZPCT8;
  DJ0MW01.XSZPCT9 = DJ0MM002.XSZPCT9;
  DJ0MW01.XSZPCT10 = DJ0MM002.XSZPCT10;
  DJ0MW01.XSZPCT11 = DJ0MM002.XSZPCT11;
  DJ0MW01.XSZPCT12 = DJ0MM002.XSZPCT12;
  DJ0MW01.XSZPCT13 = DJ0MM002.XSZPCT13;
  DJ0MW01.XSZPCT14 = DJ0MM002.XSZPCT14;
  DJ0MW01.XSZPCT15 = DJ0MM002.XSZPCT15;
  DJ0MW01.XSZPCT16 = DJ0MM002.XSZPCT16;
  DJ0MW01.XSZPCT17 = DJ0MM002.XSZPCT17;
  DJ0MW01.XSZPCT18 = DJ0MM002.XSZPCT18;
  DJ0MW01.XSZPCT19 = DJ0MM002.XSZPCT19;
  DJ0MW01.XSZPCT20 = DJ0MM002.XSZPCT20;
  DJ0MW01.XSZPCT21 = DJ0MM002.XSZPCT21;
  DJ0MW01.XSZPCT22 = DJ0MM002.XSZPCT22;
  DJ0MW01.XSZPCT23 = DJ0MM002.XSZPCT23;
  DJ0MW01.XSZPCT24 = DJ0MM002.XSZPCT24;
  DJ0MW01.XSZPCT25 = DJ0MM002.XSZPCT25;
  DJ0MW01.XSZPCT26 = DJ0MM002.XSZPCT26;
  DJ0MW01.XSZPCT27 = DJ0MM002.XSZPCT27;
  DJ0MW01.XSZPCT28 = DJ0MM002.XSZPCT28;
  DJ0MW01.XSZPCT29 = DJ0MM002.XSZPCT29;
  DJ0MW01.XSZPCT30 = DJ0MM002.XSZPCT30;
  DJ0MW01.XSZPCT31 = DJ0MM002.XSZPCT31;
  DJ0MW01.XSZPCT32 = DJ0MM002.XSZPCT32;
  DJ0MW01.XSZPCT33 = DJ0MM002.XSZPCT33;
  DJ0MW01.XSZPCT34 = DJ0MM002.XSZPCT34;
  DJ0MW01.XSZPCT35 = DJ0MM002.XSZPCT35;
  DJ0MW01.XSZPCT36 = DJ0MM002.XSZPCT36;
  DJ0MW01.XSZPCT37 = DJ0MM002.XSZPCT37;
  DJ0MW01.XSZPCT38 = DJ0MM002.XSZPCT38;
  DJ0MW01.XSZPCT39 = DJ0MM002.XSZPCT39;
  DJ0MW01.XSZPCT40 = DJ0MM002.XSZPCT40;
  DJ0MW01.XXXSTAT = DJ0MM002.XXXSTAT;

  VDATRN01.DA-ROW-DATA-TXT-LEN = 169;
  VDATRN01.DA-ROW-DATA-TXT-TEXT = DJ0MW01.XSZGROUP;

  /* Determine the status*/

  if (DAWREC.DAW-SET-PENDING-FL == "Y")
    VDATRN01.DA-CHNG-STAT-IND = "P";
  else
    VDATRN01.DA-CHNG-STAT-IND = "E";
  end

  /* **************/
  /* ***************** END DJ0MP72 **********************************/
  /* **************/
end // end DJ0MP72-NEW-TRAN

// BUILD UPDATED VDATRN01 RECORD
Function DJ0MP73-OLD-TRAN()
  /* *****************************************************************/
  /* Build an updated transaction row*/
  /* *****************************************************************/


  /* move the prolog information in case it changed*/
  /* the transaction type stays the same*/

  VDATRN01.DA-CHNG-USER-ID = sysVar.userID;
  VDATRN01.DA-APVD-USER-ID = " ";
  VDATRN01.DA-PLOG-TXT1 = DJ0MM002.DA-PLOG-TXT1;
  VDATRN01.DA-PLOG-TXT2 = DJ0MM002.DA-PLOG-TXT2;

  /* Build the table row*/

  DJ0MW01.XSZCD = DJ0MM002.XSZCD;
  DJ0MW01.XSZDESC = DJ0MM002.XSZDESC;
  DJ0MW01.XSZNBRSZ = DJ0MM002.XSZNBRSZ;
  DJ0MW01.XSZPCT1 = DJ0MM002.XSZPCT1;
  DJ0MW01.XSZPCT2 = DJ0MM002.XSZPCT2;
  DJ0MW01.XSZPCT3 = DJ0MM002.XSZPCT3;
  DJ0MW01.XSZPCT4 = DJ0MM002.XSZPCT4;
  DJ0MW01.XSZPCT5 = DJ0MM002.XSZPCT5;
  DJ0MW01.XSZPCT6 = DJ0MM002.XSZPCT6;
  DJ0MW01.XSZPCT7 = DJ0MM002.XSZPCT7;
  DJ0MW01.XSZPCT8 = DJ0MM002.XSZPCT8;
  DJ0MW01.XSZPCT9 = DJ0MM002.XSZPCT9;
  DJ0MW01.XSZPCT10 = DJ0MM002.XSZPCT10;
  DJ0MW01.XSZPCT11 = DJ0MM002.XSZPCT11;
  DJ0MW01.XSZPCT12 = DJ0MM002.XSZPCT12;
  DJ0MW01.XSZPCT13 = DJ0MM002.XSZPCT13;
  DJ0MW01.XSZPCT14 = DJ0MM002.XSZPCT14;
  DJ0MW01.XSZPCT15 = DJ0MM002.XSZPCT15;
  DJ0MW01.XSZPCT16 = DJ0MM002.XSZPCT16;
  DJ0MW01.XSZPCT17 = DJ0MM002.XSZPCT17;
  DJ0MW01.XSZPCT18 = DJ0MM002.XSZPCT18;
  DJ0MW01.XSZPCT19 = DJ0MM002.XSZPCT19;
  DJ0MW01.XSZPCT20 = DJ0MM002.XSZPCT20;
  DJ0MW01.XSZPCT21 = DJ0MM002.XSZPCT21;
  DJ0MW01.XSZPCT22 = DJ0MM002.XSZPCT22;
  DJ0MW01.XSZPCT23 = DJ0MM002.XSZPCT23;
  DJ0MW01.XSZPCT24 = DJ0MM002.XSZPCT24;
  DJ0MW01.XSZPCT25 = DJ0MM002.XSZPCT25;
  DJ0MW01.XSZPCT26 = DJ0MM002.XSZPCT26;
  DJ0MW01.XSZPCT27 = DJ0MM002.XSZPCT27;
  DJ0MW01.XSZPCT28 = DJ0MM002.XSZPCT28;
  DJ0MW01.XSZPCT29 = DJ0MM002.XSZPCT29;
  DJ0MW01.XSZPCT30 = DJ0MM002.XSZPCT30;
  DJ0MW01.XSZPCT30 = DJ0MM002.XSZPCT30;
  DJ0MW01.XSZPCT31 = DJ0MM002.XSZPCT31;
  DJ0MW01.XSZPCT32 = DJ0MM002.XSZPCT32;
  DJ0MW01.XSZPCT33 = DJ0MM002.XSZPCT33;
  DJ0MW01.XSZPCT34 = DJ0MM002.XSZPCT34;
  DJ0MW01.XSZPCT35 = DJ0MM002.XSZPCT35;
  DJ0MW01.XSZPCT36 = DJ0MM002.XSZPCT36;
  DJ0MW01.XSZPCT37 = DJ0MM002.XSZPCT37;
  DJ0MW01.XSZPCT38 = DJ0MM002.XSZPCT38;
  DJ0MW01.XSZPCT39 = DJ0MM002.XSZPCT39;
  DJ0MW01.XSZPCT40 = DJ0MM002.XSZPCT40;
  DJ0MW01.XXXSTAT = DJ0MM002.XXXSTAT;

  VDATRN01.DA-ROW-DATA-TXT-LEN = 169;
  VDATRN01.DA-ROW-DATA-TXT-TEXT = DJ0MW01.XSZGROUP;

  /* Determine the status*/

  if (DAWREC.DAW-SET-PENDING-FL == "Y"
   || DAWREC.DAW-RETURN-TO-DA01-FL == "Y")
    VDATRN01.DA-CHNG-STAT-IND = "P";
  else
    VDATRN01.DA-CHNG-STAT-IND = "E";
  end

  /* **************/
  /* ***************** END DJ0MP73 **********************************/
  /* **************/
end // end DJ0MP73-OLD-TRAN

// EXIT FROM THE APPLICATION
Function DJ0MP99-TERMINATE()
  /* ************************************************************/
  /* Transfer out of the application*/
  /* ************************************************************/

  COMMAREA.CAUSERA = DAWREC.DAWGROUP;

  DJ0MS-TS-PURGE-FIL(); /* purge temp storage*/

  if (DAWREC.DAW-RETURN-TO-DA01-FL == "Y") /* return to DA01 application*/
    COMMAREA.CATOAP = "DA01";
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "RETN") /* return to prior application*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end

  if (DAW-EXIT-OPTION == "MENU") /* return to main menu*/
    XSPF4();
  end

  if (DAW-EXIT-OPTION == "HELP") /* check for system help*/
    XSPF1(); /* help facility*/
  end

  /* Still here - then XSEXIT didn't allow the transfer so restart*/
  /* the current application and display the error message*/

  if (COMMAREA.CASECRC != 0) /* no message from xsexit*/
    XSDAS-XSEXIT-CAMSG();
  end

  COMMAREA.CAFROMAP = "DJ0M";
  sysVar.transferName = "DJ0M";
  transfer to program sysVar.transferName passing COMMAREA;

  /* **************/
  /* ****************** END DJ0MP99 *****************************/
  /* **************/
end // end DJ0MP99-TERMINATE

// ADD TEMP STORAGE PAGE(RECORD)
Function DJ0MS-TS-ADD-PAGE()
  /* ************************************************************/
  /* Write temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "DJ0M"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  DJ0MW02.DAW-TEMP-STORAGE-LENGTH = 1334;

  call "TA0050" (DJ0MW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    DAWREC.DAW-MAX-PAGE = TA5REC.TA5TSQIX;
    set DJ0MW02 empty; /* Reset for next write*/
    DAWREC.DAW-ROW-NBR = 0;
  else
    TA1REC.TA1LOCAT[1] = "ADD TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DAWREC.XXX-TBL-PFX; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    DJ0MM001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END DJ0MS-ADD-TSQ-PAGE ******************/
  /* *************************/
end // end DJ0MS-TS-ADD-PAGE

// PURGE TEMP STORAGE FILE
Function DJ0MS-TS-PURGE-FIL()
  /* ************************************************************/
  /* Purge temporary storage*/
  /* ************************************************************/

  TA5REC.TA5APPID = "DJ0M"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/

  call "TA0050" (DJ0MW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  /* **********************/
  /* ****************** END DJ0MS-PURGE-TSQ *********************/
  /* **********************/
end // end DJ0MS-TS-PURGE-FIL

// READ TEMP STORAGE PAGE
Function DJ0MS-TS-READ-PAGE()
  /* ************************************************************/
  /* Read temporary storage*/
  /* ************************************************************/

  DAWREC.DAW-CURR-PAGE = DJ0MM001.DAW-CURR-PAGE;

  set DJ0MW02 empty;

  TA5REC.TA5APPID = "DJ0M"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = DAWREC.DAW-CURR-PAGE; /* current page*/
  DJ0MW02.DAW-TEMP-STORAGE-LENGTH = 1334;

  call "TA0050" (DJ0MW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
     /* NEXT SENTENCE*/
  else
    TA1REC.TA1LOCAT[1] = "READ TSQ";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = DAWREC.XXX-TBL-PFX; /* first row*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    DJ0MM001.DAW-INFO-MESSAGE = "TEMPORARY STORAGE FAILURE - CONTACT HELP DESK";
  end

  /* *************************/
  /* ****************** END DJ0MS-READ-TSQ-PAGE ******************/
  /* *************************/
end // end DJ0MS-TS-READ-PAGE

//*** RECORD=DJ0MW01 ****
// /*********************************************************
// /*  working storage record used to hold the concatinated
// /*  table key and the table record.
// /*********************************************************
// /* DATE      USERID     DESC. OF CHANGE
// /* --------  ------     ----------------------------------
// /* 04/13/98  ECHAN      CREATED RECORD
// /*
// /*********************************************************
// ***********************
Record DJ0MW01 type basicRecord
  10 XSZGROUP XSZGROUP ; 
    15 XSZCD XSZCD ; 
    15 XSZDESC XSZDESC ; 
    15 XSZNBRSZ XSZNBRSZ ; 
    15 XSZPCT1 XSZPCT1 ; 
    15 XSZPCT2 XSZPCT2 ; 
    15 XSZPCT3 XSZPCT3 ; 
    15 XSZPCT4 XSZPCT4 ; 
    15 XSZPCT5 XSZPCT5 ; 
    15 XSZPCT6 XSZPCT6 ; 
    15 XSZPCT7 XSZPCT7 ; 
    15 XSZPCT8 XSZPCT8 ; 
    15 XSZPCT9 XSZPCT9 ; 
    15 XSZPCT10 XSZPCT10 ; 
    15 XSZPCT11 XSZPCT11 ; 
    15 XSZPCT12 XSZPCT12 ; 
    15 XSZPCT13 XSZPCT13 ; 
    15 XSZPCT14 XSZPCT14 ; 
    15 XSZPCT15 XSZPCT15 ; 
    15 XSZPCT16 XSZPCT16 ; 
    15 XSZPCT17 XSZPCT17 ; 
    15 XSZPCT18 XSZPCT18 ; 
    15 XSZPCT19 XSZPCT19 ; 
    15 XSZPCT20 XSZPCT20 ; 
    15 XSZPCT21 XSZPCT21 ; 
    15 XSZPCT22 XSZPCT22 ; 
    15 XSZPCT23 XSZPCT23 ; 
    15 XSZPCT24 XSZPCT24 ; 
    15 XSZPCT25 XSZPCT25 ; 
    15 XSZPCT26 XSZPCT26 ; 
    15 XSZPCT27 XSZPCT27 ; 
    15 XSZPCT28 XSZPCT28 ; 
    15 XSZPCT29 XSZPCT29 ; 
    15 XSZPCT30 XSZPCT30 ; 
    15 XSZPCT31 XSZPCT31 ; 
    15 XSZPCT32 XSZPCT32 ; 
    15 XSZPCT33 XSZPCT33 ; 
    15 XSZPCT34 XSZPCT34 ; 
    15 XSZPCT35 XSZPCT35 ; 
    15 XSZPCT36 XSZPCT36 ; 
    15 XSZPCT37 XSZPCT37 ; 
    15 XSZPCT38 XSZPCT38 ; 
    15 XSZPCT39 XSZPCT39 ; 
    15 XSZPCT40 XSZPCT40 ; 
    15 XXXSTAT XXXSTAT ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
  10 DA-CCAT-KEY-TXT DA-CCAT-KEY-TXT ; 
    15 DJ0MW-KEY-XSZCD DJ0MW-KEY-XSZCD ; 
    15 FILLER char(16) ; 
  10 DA-PLOG-TXT1 DA-PLOG-TXT1 ; 
  10 DA-PLOG-TXT2 DA-PLOG-TXT2 ; 
end // end DJ0MW01

//*** RECORD=DJ0MW02 ****
// /*********************************************************
// /* Temp storage record for the application
// /*********************************************************
// /*
// /* DATE      USERID     DESC. OF CHANGE
// /* --------  ------     ----------------------------------
// /* 04/13/98  ECHAN      CREATED RECORD
// /*
// /*********************************************************
// ***********************
Record DJ0MW02 type basicRecord
  5 DA00W-TEMP-STORAGE-RECORD char(1334) ; // TEMP STORAGE RECORD FOR DA0A
    10 DAW-TEMP-STORAGE-LENGTH DAW-TEMP-STORAGE-LENGTH ; 
    10 DA00W-TEMP-STORAGE-ROW char(95) [14] ; // DA0A TSQ ROW
      15 DAW-RECORD-TYPE DAW-RECORD-TYPE ; 
      15 DAW-SELECT-CD DAW-SELECT-CD ; 
      15 XSZCD XSZCD ; 
      15 XSZDESC XSZDESC ; 
      15 XSZNBRSZ XSZNBRSZ ; 
      15 XXXSTAT XXXSTAT ; 
      15 DAW-STATUS-DESC DAW-STATUS-DESC ; 
      15 DA-CHNG-USER-ID DA-CHNG-USER-ID ; 
      15 DAW-CHNG-DT-MDY DAW-CHNG-DT-MDY ; 
      15 DAW-VDATRN01-KEY DAW-VDATRN01-KEY ; 
        20 XXX-TBL-PFX XXX-TBL-PFX ; 
        20 DA-CCAT-KEY-TXT DA-CCAT-KEY-TXT ; 
        20 ZZ-CHNG-DT ZZ-CHNG-DT ; 
end // end DJ0MW02

// TABLE KEY - ADD MORE IF NEEDED
DataItem DJ0MW-KEY-XSZCD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XSZGROUP char(169)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

