package sl0b;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import pc.common.*;
import sl.common.*;
import sw.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=SL0B ****
// Retrofit job summission screen
// ;
// This application allows users to submit report jobs
// ;
// This screen will generate JCL for batch processing after
// edits are performed on entered data.
// ;
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// retroft  01/06/98  sjohn6  new program
// retroft  01/09/98  sjohn6  fix for bundl
// retroft  01/12/98  sjohn6  add multi sku location report
// retroft  02/06/98  sjohn6  add option a
// retroft  08/03/98  sjohn6  allow multiple aisles in opt 2
// retroft  09/30/98  sjohn6  Change for zone 18
// retroft  01/22/99  sjohn6  only allow from area for 02
// ;
// *********************
Program SL0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SL0BW00 SL0BW00; // record
  SL0BW01 SL0BW01; // record
  SL0BW9B SL0BW9B; // record
  SL0BW9D SL0BW9D; // record
  SL0BW9L SL0BW9L; // record
  SL0BW9O SL0BW9O; // record
  SL0BW9U SL0BW9U; // record
  SL0BW9W SL0BW9W; // record
  SL20REC SL20REC; // record
  SL4REC SL4REC; // record
  SLWREC SLWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VCTNID01 VCTNID01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SL0BT01 {deleteAfterUse = yes}; // table
  use SL0BT0A {deleteAfterUse = yes}; // table
  use SL0BT02 {deleteAfterUse = yes}; // table
  use SL0BT03 {deleteAfterUse = yes}; // table
  use SL0BT04 {deleteAfterUse = yes}; // table
  use SL0BT05 {deleteAfterUse = yes}; // table
  use SL0BT06 {deleteAfterUse = yes}; // table
  use SL00ENU; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use SL0BM.SL0BM001,  // forms
      SL0BM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPSL001: XPSL001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set SL0BM001 initial; /* M001 input/output*/
    set SL0BW00 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA3REC empty; /**/
    set TA6REC empty; /**/

    SL0BM001.XWHCD = "51";
    SL0BW00.SL0BWSWR = "Y"; /* CICS determination needed*/

     /* ------------------------------------------------------------*/
     /* Flow to mainline processing*/
     /* ------------------------------------------------------------*/

    goto SL0B001;

    SL0B001: SL0B001();
    goto SL0B001;
    SL0B002: SL0B002();
    goto SL0B002; /* Converse map*/

  end // end main
end // end SL0B

// Main Process
Function SL0B001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  SL0BS100-GET-DATA(); /* Obtain the data to display*/

  SL0BS200-CNVRS-MAP(); /* Format and display the map*/

  SL0BS300-CHK-PFKEY(); /* Check attention identifier*/

  SL0BS400-RST-FLDS(); /* Reset fields to normal intensity*/

  SL0BS500-VRFY-DATA(); /* Verify the entered data*/

  SL0BS600-PROC-RQST(); /* Process valid input request*/

end // end SL0B001

// Converse map
Function SL0B002()
  converse SL0BM001 ;
end // end SL0B002

// Determine CICS region
Function SL0BS-CALL-TA0230()
   /* ------------------------------------------------------------*/
   /* FIND WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING IN*/
   /*  */
   /* PRODUCTION REGION CAUSES PRODUCTION JCL TO BE EXECUTED,*/
   /* TEST REGION CAUSES TEST JCL TO BE EXECUTED USING DSNT OR DSND.*/
   /*  */
   /* ALL VERSIONS OF JCL ARE FOUND IN TS09T01*/
   /*  */
   /* ------------------------------------------------------------*/

  set TA3REC empty;

  TA3REC.TA3OPTN = "ASSIGN";

  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)         

    return;

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/

  SL0BW00.XXXLOCID = "TA0"; /* Module identification*/
  converseLib.validationFailed(1); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "FIND CICS REGION";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = SL0BW00.XXXLOCID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M099"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SL0BS-CALL-TA0230

// Call Vctnid01 tbl i/o mod
Function SL0BS-VCTNID-IO()
   /* -------------------------------------------------------------------*/
   /* call vctnid01 to do vctnid01 i/o's*/
   /* -------------------------------------------------------------------*/

  set SL20REC empty;
  SL20REC.SL20W-RQST-TYP = SL0BW00.SL0BW-RQST-TYP;
  SL20REC.XXXPGMNB = "SL0B";
  SL20REC.SL20W-VCTNID01 = VCTNID01.VCTNID01-DATA;

  call "SL0020" (SL20REC) {isNoRefresh = yes, isExternal = yes}; /* call vctnid io mod*/

   /* ------------------------------------------------------------*/
   /* Check return codes*/
   /* ------------------------------------------------------------*/
  if (SL20REC.SL20W-RTRN-CD == 0
   && (SL20REC.SL20W-RTRN-SQLCD == 0
   || SL20REC.SL20W-RTRN-SQLCD == 100))
    VCTNID01.VCTNID01-DATA = SL20REC.SL20W-VCTNID01;
  else
    SL0BW00.XXXLOCID = "CTN";
    if (SL20REC.SL20W-RTRN-SQLCD == -911)
      converseLib.validationFailed(31); /* contention*/
    else
      converseLib.validationFailed(103); /* unexpected return*/
    end
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Rollback updates*/
  end


end // end SL0BS-VCTNID-IO

// get screen data
Function SL0BS100-GET-DATA()
   /* ------------------------------------------------------------*/
   /* Determine CICS region*/
   /* ------------------------------------------------------------*/

  if (SL0BW00.SL0BWSWR == "Y")
    SL0BW00.SL0BWSWR = "N";

    SL0BS-CALL-TA0230();
  end


   /* ------------------------------------------------------------*/
   /* If an error was found, return to the previous process*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* An error was found*/

    return; /* Return to previous process*/
  end


end // end SL0BS100-GET-DATA

// Converse map
Function SL0BS200-CNVRS-MAP()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    SL0BW00.SL0BWMSG = converseVar.validationMsgNum; /* Message number*/
  else
    if (SL0BW00.SL0BW-INFO-MSG != 0)
      SL0BW00.SL0BWMSG = SL0BW00.SL0BW-INFO-MSG;
    end
  end

   /* ------------------------------------------------------------*/
   /* format top & bottom info on map*/
   /* ------------------------------------------------------------*/

  SL0BM001.XWHCD = "51"; /* warehouse code*/
  SL0BM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (SL0BW00.SL0BWMSG != 0) /* Message to display*/
    if (SL0BW00.SL0BWMSG == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(SL0BW00.SL0BWMSG);
    end /* error message number*/
    SL0BM001.XXXLOCID = SL0BW00.XXXLOCID; /* Module identification*/
    set SL0BM001 alarm; /* Indicate sound alarm*/
  end

   /* ------------------------------------------------------------*/
   /* CONVERSE THE MAP*/
   /* ------------------------------------------------------------*/

  SL0B002(); /* Converse map*/


   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  SL0BW00.XXXLOCID = " "; /* Module identification*/
  SL0BW00.SL0BWMSG = 0;
  SL0BW00.SL0BW-INFO-MSG = 0;


end // end SL0BS200-CNVRS-MAP

// check attention identifier
Function SL0BS300-CHK-PFKEY()
   /* ------------------------------------------------------------*/
   /* Check attention identifier*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* refresh map*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* if fast path entered, only enter key is valid*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.CATOAP > " " /* Fast path requested, but*/
   && converseVar.eventKey not enter) /* ENTER was not pressed*/

    SL0BW00.XXXLOCID = "300"; /* Module identification*/
    converseLib.validationFailed(258); /* Only "enter" valid w/fast path*/
    set SL0BM001.CATOAP cursor, bold;
    exit stack;
  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD00";

    XSPF1(); /* Exit to the HELP facility*/

    SL0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    SL0BW00.XXXLOCID = "300"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If END was requested, make sure user re-requests PF3 if*/
   /* location information was entered.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    COMMAREA.CATOAP = "SL0M"; /* Stock Locate main menu*/
    COMMAREA.CAUSERA = SLWREC.SLWGROUP; /* COMMAREA user area*/

    XSEXIT(); /* Invoke selected application*/

    SL0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    SL0BW00.XXXLOCID = "300"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* Exit to Main Menu was requested*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/

    XSPF4(); /* Exit to system main menu*/

    SL0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    SL0BW00.XXXLOCID = "300"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* if fast path entered: exit immeditately*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.CATOAP > " ")
    COMMAREA.CATOAP = SL0BM001.CATOAP;
    COMMAREA.CAITEM = SL0BM001.CAITEM;

    XSEXIT();

    SL0BW00.XXXLOCID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    SL0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    set SL0BM001.CATOAP cursor, bold;
    exit stack;
  end

   /* ------------------------------------------------------------*/
   /* Check for invalid key requested*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    SL0BW00.XXXLOCID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/
  end


end // end SL0BS300-CHK-PFKEY

// Reset enterable fields
Function SL0BS400-RST-FLDS()
   /* ------------------------------------------------------------*/
   /* reset enterable fields to DEFINED intensity.*/
   /* ------------------------------------------------------------*/

  set SL0BM001.XWHCD initialAttributes;
  set SL0BM001.SL0BM-SELECTION initialAttributes;
  set SL0BM001.SL-CONV-GRP-CD initialAttributes;
  set SL0BM001.SL8FRAR initialAttributes;
  set SL0BM001.SL8FRZN initialAttributes;
  set SL0BM001.SL8FRLC initialAttributes;
  set SL0BM001.SL8TOAR initialAttributes;
  set SL0BM001.SL8TOZN initialAttributes;
  set SL0BM001.SL8TOLC initialAttributes;
  set SL0BM001.TS-UCC-128-CD initialAttributes;
  set SL0BM001.CATOAP initialAttributes;
  set SL0BM001.CAITEM initialAttributes;


end // end SL0BS400-RST-FLDS

// verify entered data
Function SL0BS500-VRFY-DATA()
   /* ------------------------------------------------------------*/
   /* Edit entered data*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SL0BM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
    else
      SL0BM001.XWHABRV = " ";
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(10); /* <--- inactive msg*/
      set SL0BM001.XWHCD cursor, bold;
      exit stack; /* go to display error message*/
    end
  else
    SL0BM001.XWHABRV = " ";
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid value msg*/
    set SL0BM001.XWHCD cursor, bold;
    exit stack; /* go to display error message*/
  end

  SLWREC.XWHCD = SL0BM001.XWHCD;
  COMMAREA.XWHCD = SL0BM001.XWHCD;

  if (SL0BM001.CATOAP == " "
   && SL0BM001.CAITEM > " ")
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(259); /* data valid only w/fast path*/
    set SL0BM001.CAITEM cursor, bold;
  end

  if (SL0BM001.SL0BM-SELECTION == "A")
    SL0BS501-EDITSL01();
  else

    if (SL0BM001.SL0BM-SELECTION == "1")
      SL0BS501-EDITSL01();
    else
      if (SL0BM001.SL0BM-SELECTION == "2")
        SL0BS502-EDITSL02();
      else
        if (SL0BM001.SL0BM-SELECTION == "3")
          SL0BS503-EDITSL03();
        else
          if (SL0BM001.SL0BM-SELECTION == "4")
            SL0BS504-EDITSL04();
          else
            if (SL0BM001.SL0BM-SELECTION == "5")
              SL0BS505-EDITSL05();
            else
              if (SL0BM001.SL0BM-SELECTION == "6")
                SL0BS506-EDITSL06();
              else
                /* IF SL0BM001.SL0BM-selection EQ '7';*/
                /* SL0BS507-EDITSL07;*/
                /* ELSE;*/
                /* IF SL0BM001.SL0BM-selection EQ '8';*/
                 /* SL0BS508-EDITSL08;*/
                /* ELSE;*/
                 /* IF SL0BM001.SL0BM-selection EQ '9';*/
                   /* SL0BS509-EDITSL09;*/
                   /* ;              /* next sentence*/
                 /* ELSE;*/
                set SL0BM001.SL0BM-SELECTION cursor, bold;
                SL0BW00.XXXLOCID = "500";
                converseLib.validationFailed(11); /* invalid data*/
                 /* END;*/
                /* END;*/
                /* END;*/
              end
            end
          end
        end
      end
    end
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

end // end SL0BS500-VRFY-DATA

// EDIT SELECTION 1 DATA
Function SL0BS501-EDITSL01()
   /* ------------------------------------------------------------*/
   /* Edit selection 1 data*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ucc128 cd*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.TS-UCC-128-CD > " ")
    set SL0BM001.TS-UCC-128-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end
   /* ------------------------------------------------------------*/
   /* from area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRAR > " ")
    if (SL0BM001.SL8FRAR == "01"
     || SL0BM001.SL8FRAR == "02")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if from zone is entered, from area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN > " ")
    if (SL0BM001.SL8FRAR > " "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if from loc is entered, from area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRLC > " ")
    if (SL0BM001.SL8FRZN > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRZN cursor, bold;
    end
    if (SL0BM001.SL8FRAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* to   area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOAR > " ")
    if (SL0BM001.SL8TOAR == "01"
     || SL0BM001.SL8TOAR == "02")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   zone is entered, to   area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOZN > " ")
    if (SL0BM001.SL8TOAR > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   loc is entered, to   area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOLC > " ")
    if (SL0BM001.SL8TOZN > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
    if (SL0BM001.SL8TOAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* conversion group code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL-CONV-GRP-CD == "1"
   || SL0BM001.SL-CONV-GRP-CD == "2"
   || SL0BM001.SL-CONV-GRP-CD == "3"
   || SL0BM001.SL-CONV-GRP-CD == "4"
   || SL0BM001.SL-CONV-GRP-CD == " "
  ) /* next sentence*/
  else
    set SL0BM001.SL-CONV-GRP-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

   /* ************************************************************/
   /* *** validate from area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8FRAR == "  "
   || SL0BM001.SL8FRAR == "00"
   || SL0BM001.SL8FRZN == "  "
   || SL0BM001.SL8FRZN == "00"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8FRAR;
    SL4REC.SL4ZONE = SL0BM001.SL8FRZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8FRAR cursor, bold;
      set SL0BM001.SL8FRZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** validate to   area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8TOAR == "  "
   || SL0BM001.SL8TOAR == "99"
   || SL0BM001.SL8TOZN == "  "
   || SL0BM001.SL8TOZN == "99"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8TOAR;
    SL4REC.SL4ZONE = SL0BM001.SL8TOZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8TOAR cursor, bold;
      set SL0BM001.SL8TOZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end
end // end SL0BS501-EDITSL01

// EDIT SELECTION 1 DATA
Function SL0BS502-EDITSL02()
   /* ------------------------------------------------------------*/
   /* Edit selection 1 data*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ucc128 cd*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.TS-UCC-128-CD == " ")
    set SL0BM001.TS-UCC-128-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(9); /* required field*/
  else

    set VCTNID01 empty;
    VCTNID01.XWHCD = SL0BM001.XWHCD;
    VCTNID01.TS-UCC-128-CD = SL0BM001.TS-UCC-128-CD;
    SL0BW00.SL0BW-RQST-TYP = "S1"; /* Open Vctnid*/

    SL0BS-VCTNID-IO();

    if (SL20REC.SL20W-RTRN-CD == 0
     && SL20REC.SL20W-RTRN-SQLCD == 0) /* good return codes*/
      SL0BW00.SL0BW-RQST-TYP = "N1"; /* Fetch Vctnid01*/

      SL0BS-VCTNID-IO();

      if (SL20REC.SL20W-RTRN-CD == 0
       && SL20REC.SL20W-RTRN-SQLCD == 0) /* good return codes*/
        SL0BW00.XXXLOCID = "500";
        converseLib.validationFailed(473); /* ucc already used*/
        set SL0BM001.TS-UCC-128-CD cursor, bold;
      else
        /* next sentence*/
      end
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(473); /* <--- invalid area code*/
      set SL0BM001.TS-UCC-128-CD cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* from area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRAR == "01"
   || SL0BM001.SL8FRAR == "02")
      /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRAR cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* if from zone is entered, from area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN > " "
  ) /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRZN cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* if from loc is entered, from area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRLC > " ")
                                  /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(09); /* <--- required*/
    set SL0BM001.SL8FRLC cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* to   area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOAR > " ")
    if (SL0BM001.SL8TOAR == "01"
     || SL0BM001.SL8TOAR == "09")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   zone is entered, to   area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOZN > " ")
    if (SL0BM001.SL8TOAR > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   loc is entered, to   area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOLC > " ")
    if (SL0BM001.SL8TOZN > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
    if (SL0BM001.SL8TOAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* conversion group code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL-CONV-GRP-CD == "1"
   || SL0BM001.SL-CONV-GRP-CD == "2"
   || SL0BM001.SL-CONV-GRP-CD == "3"
   || SL0BM001.SL-CONV-GRP-CD == "4"
   || SL0BM001.SL-CONV-GRP-CD == " "
  ) /* next sentence*/
  else
    set SL0BM001.SL-CONV-GRP-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

   /* ************************************************************/
   /* *** validate from area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8FRAR == "  "
   || SL0BM001.SL8FRAR == "00"
   || SL0BM001.SL8FRZN == "  "
   || SL0BM001.SL8FRZN == "00"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8FRAR;
    SL4REC.SL4ZONE = SL0BM001.SL8FRZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8FRAR cursor, bold;
      set SL0BM001.SL8FRZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** validate to   area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8TOAR == "  "
   || SL0BM001.SL8TOAR == "99"
   || SL0BM001.SL8TOZN == "  "
   || SL0BM001.SL8TOZN == "99"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8TOAR;
    SL4REC.SL4ZONE = SL0BM001.SL8TOZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8TOAR cursor, bold;
      set SL0BM001.SL8TOZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** only allow one aisle at a time in bulk            ****/
   /* ************************************************************/

   /* IF SL0BM001.SL8TOLC GT '      '*/
    /* AND SL0BM001.SL8FRAR EQ '01';*/
    /* MOVE SL0BM001.SL8TOLC TO SL0BW00.SL8TOLC;*/
    /* MOVE SL0BM001.SL8FRLC TO SL0BW00.SL8FRLC;*/
    /* IF SL0BW00.SL0BW-FROM-AISLE NE SL0BW00.SL0BW-TO-AISLE;*/
      /* MOVE '500' TO SL0BW00.XXXLOCID;*/
      /* SET SL0BM001.SL8TOLC CURSOR,BRIGHT;*/
      /* MOVE 474 TO EZEMNO;          /* azone not found*/
      /* EZEFLO;*/
    /* END;*/
   /* END;*/
end // end SL0BS502-EDITSL02

// EDIT SELECTION 1 DATA
Function SL0BS503-EDITSL03()
   /* ------------------------------------------------------------*/
   /* Edit selection 4 data*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ucc128 cd*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.TS-UCC-128-CD == " ")
     /* next sentence*/
  else
    set SL0BM001.TS-UCC-128-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* required field*/
  end
   /* ------------------------------------------------------------*/
   /* from area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRAR == "01"
  ) /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRAR cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* if from zone is entered, from area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN > " "
  ) /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRZN cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* from zone must be 06*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN == "06")
                                  /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRZN cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* if from loc is entered, from area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRLC > " ")
                                  /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(09); /* <--- required*/
    set SL0BM001.SL8FRLC cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* to   area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOAR > " ")
    if (SL0BM001.SL8TOAR == "01"
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   zone is entered, to   area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOZN > " ")
    if (SL0BM001.SL8TOAR > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
    /* ------------------------------------------------------------*/
    /* to   zone must be 06*/
    /* ------------------------------------------------------------*/

    if (SL0BM001.SL8TOZN == "06")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   loc is entered, to   area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOLC > " ")
    if (SL0BM001.SL8TOZN > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
    if (SL0BM001.SL8TOAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* conversion group code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL-CONV-GRP-CD == "1"
   || SL0BM001.SL-CONV-GRP-CD == "2"
   || SL0BM001.SL-CONV-GRP-CD == "3"
   || SL0BM001.SL-CONV-GRP-CD == "4"
   || SL0BM001.SL-CONV-GRP-CD == " "
  ) /* next sentence*/
  else
    set SL0BM001.SL-CONV-GRP-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

   /* ************************************************************/
   /* *** only allow one aisle at a time                      ****/
   /* ************************************************************/

  if (SL0BM001.SL8TOLC > "      ")
    SL0BW00.SL8TOLC = SL0BM001.SL8TOLC;
    SL0BW00.SL8FRLC = SL0BM001.SL8FRLC;
    if (SL0BW00.SL0BW-FROM-AISLE != SL0BW00.SL0BW-TO-AISLE)
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8TOLC cursor, bold;
      converseLib.validationFailed(474); /* azone not found*/
      exit stack;
    end
  end
end // end SL0BS503-EDITSL03

// EDIT SELECTION 1 DATA
Function SL0BS504-EDITSL04()
   /* ------------------------------------------------------------*/
   /* Edit selection 4 data*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ucc128 cd*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.TS-UCC-128-CD == " ")
     /* next sentence*/
  else
    set SL0BM001.TS-UCC-128-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* required field*/
  end
   /* ------------------------------------------------------------*/
   /* from area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRAR == "02"
  ) /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRAR cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* if from zone is entered, from area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN > " "
  ) /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRZN cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* from zone must be 47 or 48*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN == "18"
   || SL0BM001.SL8FRZN == "19")
                                  /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* <--- invalid area code*/
    set SL0BM001.SL8FRZN cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* if from loc is entered, from area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRLC > " ")
                                  /* next sentence*/
  else
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(09); /* <--- required*/
    set SL0BM001.SL8FRLC cursor, bold;
  end
   /* ------------------------------------------------------------*/
   /* to   area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOAR > " ")
    if (SL0BM001.SL8TOAR == "02"
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   zone is entered, to   area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOZN > " ")
    if (SL0BM001.SL8TOAR > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
    /* ------------------------------------------------------------*/
    /* to   zone must be 47 or 48*/
    /* ------------------------------------------------------------*/

    if (SL0BM001.SL8TOZN == "18"
     || SL0BM001.SL8TOZN == "19")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   loc is entered, to   area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOLC > " ")
    if (SL0BM001.SL8TOZN > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
    if (SL0BM001.SL8TOAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* conversion group code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL-CONV-GRP-CD == "1"
   || SL0BM001.SL-CONV-GRP-CD == "2"
   || SL0BM001.SL-CONV-GRP-CD == "3"
   || SL0BM001.SL-CONV-GRP-CD == "4"
   || SL0BM001.SL-CONV-GRP-CD == " "
  ) /* next sentence*/
  else
    set SL0BM001.SL-CONV-GRP-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

   /* ************************************************************/
   /* *** only allow one aisle at a time in bulk              ****/
   /* ************************************************************/

  if (SL0BM001.SL8TOLC > "      "
   && SL0BM001.SL8FRAR == "01")
    SL0BW00.SL8TOLC = SL0BM001.SL8TOLC;
    SL0BW00.SL8FRLC = SL0BM001.SL8FRLC;
    if (SL0BW00.SL0BW-FROM-AISLE != SL0BW00.SL0BW-TO-AISLE)
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8TOLC cursor, bold;
      converseLib.validationFailed(474); /* azone not found*/
      exit stack;
    end
  end
end // end SL0BS504-EDITSL04

// EDIT SELECTION 1 DATA
Function SL0BS505-EDITSL05()
   /* ------------------------------------------------------------*/
   /* Edit selection 1 data*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ucc128 cd*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.TS-UCC-128-CD > " ")
    set SL0BM001.TS-UCC-128-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end
   /* ------------------------------------------------------------*/
   /* from area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRAR > " ")
    if (SL0BM001.SL8FRAR == "01"
     || SL0BM001.SL8FRAR == "02")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if from zone is entered, from area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN > " ")
    if (SL0BM001.SL8FRAR > " "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if from loc is entered, from area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRLC > " ")
    if (SL0BM001.SL8FRZN > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRZN cursor, bold;
    end
    if (SL0BM001.SL8FRAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* to   area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOAR > " ")
    if (SL0BM001.SL8TOAR == "01"
     || SL0BM001.SL8TOAR == "02")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   zone is entered, to   area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOZN > " ")
    if (SL0BM001.SL8TOAR > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   loc is entered, to   area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOLC > " ")
    if (SL0BM001.SL8TOZN > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
    if (SL0BM001.SL8TOAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* conversion group code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL-CONV-GRP-CD == "1"
   || SL0BM001.SL-CONV-GRP-CD == "2"
   || SL0BM001.SL-CONV-GRP-CD == "3"
   || SL0BM001.SL-CONV-GRP-CD == "4"
   || SL0BM001.SL-CONV-GRP-CD == " "
  ) /* next sentence*/
  else
    set SL0BM001.SL-CONV-GRP-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

   /* ************************************************************/
   /* *** validate from area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8FRAR == "  "
   || SL0BM001.SL8FRAR == "00"
   || SL0BM001.SL8FRZN == "  "
   || SL0BM001.SL8FRZN == "00"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8FRAR;
    SL4REC.SL4ZONE = SL0BM001.SL8FRZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8FRAR cursor, bold;
      set SL0BM001.SL8FRZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** validate to   area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8TOAR == "  "
   || SL0BM001.SL8TOAR == "99"
   || SL0BM001.SL8TOZN == "  "
   || SL0BM001.SL8TOZN == "99"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8TOAR;
    SL4REC.SL4ZONE = SL0BM001.SL8TOZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8TOAR cursor, bold;
      set SL0BM001.SL8TOZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end
end // end SL0BS505-EDITSL05

// EDIT SELECTION 1 DATA
Function SL0BS506-EDITSL06()
   /* ------------------------------------------------------------*/
   /* Edit selection 1 data*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* ucc128 cd*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.TS-UCC-128-CD > " ")
    set SL0BM001.TS-UCC-128-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end
   /* ------------------------------------------------------------*/
   /* from area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRAR > " ")
    if (SL0BM001.SL8FRAR == "01"
     || SL0BM001.SL8FRAR == "02")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if from zone is entered, from area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRZN > " ")
    if (SL0BM001.SL8FRAR > " "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if from loc is entered, from area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8FRLC > " ")
    if (SL0BM001.SL8FRZN > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRZN cursor, bold;
    end
    if (SL0BM001.SL8FRAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8FRAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* to   area code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOAR > " ")
    if (SL0BM001.SL8TOAR == "01"
     || SL0BM001.SL8TOAR == "02")
      /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   zone is entered, to   area is required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOZN > " ")
    if (SL0BM001.SL8TOAR > "  ")
                                  /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* if to   loc is entered, to   area/zone are required*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL8TOLC > " ")
    if (SL0BM001.SL8TOZN > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOZN cursor, bold;
    end
    if (SL0BM001.SL8TOAR > "  "
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      converseLib.validationFailed(11); /* <--- invalid area code*/
      set SL0BM001.SL8TOAR cursor, bold;
    end
  end
   /* ------------------------------------------------------------*/
   /* conversion group code*/
   /* ------------------------------------------------------------*/

  if (SL0BM001.SL-CONV-GRP-CD == "1"
   || SL0BM001.SL-CONV-GRP-CD == "2"
   || SL0BM001.SL-CONV-GRP-CD == "3"
   || SL0BM001.SL-CONV-GRP-CD == "4"
   || SL0BM001.SL-CONV-GRP-CD == " "
  ) /* next sentence*/
  else
    set SL0BM001.SL-CONV-GRP-CD cursor, bold;
    SL0BW00.XXXLOCID = "500";
    converseLib.validationFailed(11); /* invalid data*/
  end

  if (converseVar.validationMsgNum > 0) /* errors found?*/
    exit stack; /* go to display error message*/
  end

   /* ************************************************************/
   /* *** validate from area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8FRAR == "  "
   || SL0BM001.SL8FRAR == "00"
   || SL0BM001.SL8FRZN == "  "
   || SL0BM001.SL8FRZN == "00"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8FRAR;
    SL4REC.SL4ZONE = SL0BM001.SL8FRZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8FRAR cursor, bold;
      set SL0BM001.SL8FRZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** validate to   area/zone                             ****/
   /* ************************************************************/

  if (SL0BM001.SL8TOAR == "  "
   || SL0BM001.SL8TOAR == "99"
   || SL0BM001.SL8TOZN == "  "
   || SL0BM001.SL8TOZN == "99"
  ) /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "XSSL4I0 ";
    TA1REC.TA1MAP = SLWREC.SLWTAMAP;
    set SL4REC empty;
    SL4REC.XWHCD = SL0BM001.XWHCD;
    SL4REC.XARCD = SL0BM001.SL8TOAR;
    SL4REC.SL4ZONE = SL0BM001.SL8TOZN;

    XSSL4I0(); /* select varzone01*/

    if (SQLCA.VAGen_SQLCODE == 0
    ) /* next sentence*/
    else
      SL0BW00.XXXLOCID = "500";
      set SL0BM001.SL8TOAR cursor, bold;
      set SL0BM001.SL8TOZN bold;
      converseLib.validationFailed(0035); /* azone not found*/
      exit stack;
    end
  end
end // end SL0BS506-EDITSL06

// process request
Function SL0BS600-PROC-RQST()
   /* --------------------------------------------------------*/
   /* Obtain printer information*/
   /* --------------------------------------------------------*/

  TA6REC.TA6SUBSW = "N"; /* obtain information, do not submit jcl*/
  TA6REC.TA6MSGSW = "N"; /* no eoj message*/

  XPTA0P(); /* go get printer info*/

  if (converseVar.eventKey is pa2)
    converseLib.validationFailed(217); /* Print request failed*/
    SL0BW00.XXXLOCID = "600"; /* Module identification*/
    exit stack; /* Exit to display map*/
  end

   /* --------------------------------------------------------*/
   /* format the parm record*/
   /* --------------------------------------------------------*/

  SL0BW01.SL-CONV-GRP-CD = SL0BM001.SL-CONV-GRP-CD;
  SL0BW01.SL8FRAR = SL0BM001.SL8FRAR;
  SL0BW01.SL8FRZN = SL0BM001.SL8FRZN;
  SL0BW01.SL8FRLC = SL0BM001.SL8FRLC;
  SL0BW01.SL8TOAR = SL0BM001.SL8TOAR;
  SL0BW01.SL8TOZN = SL0BM001.SL8TOZN;
  SL0BW01.SL8TOLC = SL0BM001.SL8TOLC;
  SL0BW01.TS-UCC-128-CD = SL0BM001.TS-UCC-128-CD;

   /* --------------------------------------------------------*/
   /* Process the request*/
   /* --------------------------------------------------------*/

  if (SL0BM001.SL0BM-SELECTION == "A")
    SL0BS60A-PRINT0A(); /* unlabeled locations report*/
  end

  if (SL0BM001.SL0BM-SELECTION == "1")
    SL0BS601-PRINT01(); /* unlabeled locations report*/
  end

  if (SL0BM001.SL0BM-SELECTION == "2")
    SL0BS602-PRINT02(); /**/
  end

  if (SL0BM001.SL0BM-SELECTION == "3")
    SL0BS603-PRINT03(); /**/
  end

  if (SL0BM001.SL0BM-SELECTION == "4")
    SL0BS604-PRINT04(); /**/
  end

  if (SL0BM001.SL0BM-SELECTION == "5")
    SL0BS605-PRINT05(); /**/
  end

  if (SL0BM001.SL0BM-SELECTION == "6")
    SL0BS606-PRINT06(); /**/
  end

end // end SL0BS600-PROC-RQST

Function SL0BS601-PRINT01()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT01.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT01.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT01.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT01.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT01.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS601-PRINT01

Function SL0BS602-PRINT02()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  SL0BW9B.TARJCL = "//             REPT=(N,,SLR1)";

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT02.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT02.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT02.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT02.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT02.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS602-PRINT02

Function SL0BS603-PRINT03()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT03.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT03.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT03.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT03.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT03.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS603-PRINT03

Function SL0BS604-PRINT04()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT04.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT04.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT04.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT04.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT04.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS604-PRINT04

Function SL0BS605-PRINT05()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  SL0BW9B.TARJCL = "//             REPT=(N,,SLR5)";

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT05.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT05.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT05.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT05.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT05.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS605-PRINT05

Function SL0BS606-PRINT06()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT06.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT06.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT06.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT06.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT06.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS606-PRINT06

Function SL0BS60A-PRINT0A()
   /* -----------------------------------------------------------*/
   /* Submit JCL to print Carton Content report*/
   /* Determine CICS region.*/
   /* Format the batch program parameters.*/
   /* Submit the job control through the internal reader.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  TA6REC.TA6INDEX = 1; /* Initialize index*/

  if (TA3REC.TA3RGNID == "03") /* PROD region*/
    SL0BW00.SL0BWIXJ = 1;
  else /* TEST region*/

    if ("/*EOF" in SL0BT0A.TARJCL)
      SL0BW00.SL0BWIXJ = sysVar.arrayIndex;
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1;
    else
      SL0BW00.SL0BWIXJ = 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* Format the Job Control Language statement from the table.*/
   /* ------------------------------------------------------------*/

  SL0BW00.SL0BWSWJ = "N";

  while (SL0BW00.SL0BWSWJ == "N" /* do until "eoj" found*/
   && SL0BW00.SL0BWIXJ < 999) /* limit to avoid endless loop*/

    TA6REC.TARJCL[TA6INDEX] = SL0BT0A.TARJCL[SL0BWIXJ]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = SL0BT0A.TARTYPE[SL0BWIXJ]; /* Type*/

    if (SL0BT0A.TARTYPE[SL0BWIXJ] > " ") /* special jcl card*/
      SL0BS622-SPCLJCLCD(); /* process any special JCL cards*/
    end

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/

    if (SL0BT0A.TARJCL[SL0BWIXJ] == "/*EOF") /* End of table*/
      SL0BW00.SL0BWSWJ = "Y"; /* Indicate job submitted*/
    else
      SL0BW00.SL0BWIXJ = SL0BW00.SL0BWIXJ + 1; /* Increment index*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    SL0BW00.SL0BW-INFO-MSG = 165; /* info msg "job submitted"*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(58); /* Print request failed*/
    SL0BW00.XXXLOCID = "620"; /* Module identification*/

    exit stack; /* Exit to display map*/
  end


end // end SL0BS60A-PRINT0A

Function SL0BS622-SPCLJCLCD()
   /* -----------------------------------------------------------*/
   /* Process any special JCL card.*/
   /* ------------------------------------------------------------*/


  if (TA6REC.TARTYPE[TA6INDEX] == "D") /* dnsT/dsnD statement*/
    SL0BW9D.TARJCL = TA6REC.TARJCL[TA6INDEX];
    if (TA3REC.TA3RGNID == "04"
     || TA3REC.TA3RGNID == "08")
      SL0BW9D.SL0BW-DSN = "T"; /* dsnT region*/
    else
      if (TA3REC.TA3RGNID == "05")
        SL0BW9D.SL0BW-DSN = "F"; /* dsnF region*/
      else
        SL0BW9D.SL0BW-DSN = "D"; /* dsnD region*/
      end
    end
    TA6REC.TARJCL[TA6INDEX] = SL0BW9D.TARJCL;
  else

    if (TA6REC.TARTYPE[TA6INDEX] == "P") /* parameter statement*/
      TA6REC.TARJCL[TA6INDEX] = SL0BW01.TARJCL;
    else


      if (TA6REC.TARTYPE[TA6INDEX] == "O") /* Output report card*/
        SL0BW9O.TARJCL = TA6REC.TARJCL[TA6INDEX];
        TA6REC.XURCOPY = TA0PM001.XURCOPY;
        TA6REC.XURDEST = TA0PM001.XURDEST;
        TA6REC.XURBLDID = TA0PM001.XURBLDID;
        TA6REC.XURUSRNM = TA0PM001.XURUSRNM;
        TA6REC.XRODESC = TA0PM001.XRODESC;
        TA6REC.TARJCL[TA6INDEX] = SL0BW9O.TARJCL;
      end
    end
  end


end // end SL0BS622-SPCLJCLCD

//*** RECORD=SL0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// 
// ***********************
Record SL0BW00 type basicRecord
  5 * char(33) ; 
    10 XXXLOCID XXXLOCID ; 
    10 PC-PO-NBR PC-PO-NBR ; 
    10 SL0BWSWJ SL0BWSWJ ; 
    10 SL0BWSWE SL0BWSWE ; 
    10 SL0BWSWR SL0BWSWR ; 
    10 SL0BW-INFO-MSG SL0BW-INFO-MSG ; 
    10 SL0BWMSG SL0BWMSG ; 
    10 SL0BWIXJ SL0BWIXJ ; 
    10 SL8FRLC SL8FRLC ; 
      15 SL0BW-FROM-AISLE SL0BW-FROM-AISLE ; 
      15 SL0BW-FROM-REST char(4) ; 
    10 SL8TOLC SL8TOLC ; 
      15 SL0BW-TO-AISLE SL0BW-TO-AISLE ; 
      15 SL0BW-TO-REST char(4) ; 
    10 SL0BW-RQST-TYP SL0BW-RQST-TYP ; 
end // end SL0BW00

//*** RECORD=SL0BW01 ****
// ----------------------------
// Application working storage.
// ----------------------------
// 
// ***********************
Record SL0BW01 type basicRecord
  5 * char(80) ; 
    10 TARJCL TARJCL ; 
      15 SL8FRAR SL8FRAR ; 
      15 SL8FRZN SL8FRZN ; 
      15 SL8FRLC SL8FRLC ; 
      15 * char(1) ; 
      15 SL8TOAR SL8TOAR ; 
      15 SL8TOZN SL8TOZN ; 
      15 SL8TOLC SL8TOLC ; 
      15 SL-CONV-GRP-CD SL-CONV-GRP-CD ; 
      15 TS-UCC-128-CD TS-UCC-128-CD ; 
      15 * char(38) ; 
end // end SL0BW01

//*** RECORD=SL0BW9B ****
// This record is a redefinition of the Job Control Language
// statement.  It is used to define the columns to be used to
// insert the dsnT/dsnD code.
// ***********************
Record SL0BW9B type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(23) ; 
    10 SL0BW-CLASS SL0BW-CLASS ; 
    10 * char(56) ; 
end // end SL0BW9B

//*** RECORD=SL0BW9D ****
// This record is a redefinition of the Job Control Language
// statement.  It is used to define the columns to be used to
// insert the dsnT/dsnD code.
// ***********************
Record SL0BW9D type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(14) ; 
    10 SL0BW-DSN SL0BW-DSN ; 
    10 * char(65) ; 
end // end SL0BW9D

//*** RECORD=SL0BW9L ****
// This record is a redefinition of the Job Control Language
// statement.  It is used to define the columns to be used to
// insert the dsnT/dsnD code.
// ***********************
Record SL0BW9L type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(27) ; 
    10 SL0BW-DSN SL0BW-DSN ; 
    10 * char(52) ; 
end // end SL0BW9L

//*** RECORD=SL0BW9O ****
// Parm card
// ***********************
Record SL0BW9O type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(33) ; 
    10 XURCOPY XURCOPY ; 
    10 * char(6) ; 
    10 XURDEST XURDEST ; 
    10 * char(34) ; 
end // end SL0BW9O

//*** RECORD=SL0BW9U ****
// This record is a redefinition of the Job Control Language
// statement.  It is used to define the columns to be used to
// insert the userid.
// ***********************
Record SL0BW9U type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(18) ; 
    10 CAUSERID CAUSERID ; 
    10 * char(54) ; 
end // end SL0BW9U

//*** RECORD=SL0BW9W ****
// This record is a redefinition of the Job Control Language
// statement.  It is used to define the columns to be used to
// insert the Warehouse code (xwhcd).
// ***********************
Record SL0BW9W type basicRecord
  5 TARJCL TARJCL ; 
    10 * char(21) ; 
    10 XWHCD XWHCD ; 
    10 * char(57) ; 
end // end SL0BW9W

// dsn(p), dsn(d), etc.
DataItem SL0BW-CLASS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dsn(p), dsn(d), etc.
DataItem SL0BW-DSN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SL0BW-FROM-AISLE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// information message to display
DataItem SL0BW-INFO-MSG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Call i/o request type
DataItem SL0BW-RQST-TYP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SL0BW-TO-AISLE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl index
DataItem SL0BWIXJ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save msg no
DataItem SL0BWMSG smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// error switch
DataItem SL0BWSWE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Job submitted sw
DataItem SL0BWSWJ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Need to determine CICS region
DataItem SL0BWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

