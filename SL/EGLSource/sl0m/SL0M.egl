package sl0m;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sl.common.*;
import sw.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=SL0M ****
// ************************************************************
// 
//           Stock Locate Master Menu
//           ========================
// 
// ************************************************************
// 
// OVERVIEW: This application displays a menu (or use PFkeys)
//           to choose the desired inventory applications.
// 
// 
// 
// MAINTENANCE HISTORY:
// ===================
// RVN
// NBR   DATE     BY WHOM    OVERVIEW OF CHANGES:
// --- --------  ----------  ----------------------------------
// 00  01/07/87  Jim Brady   created
// 01  11/10/88  John Wood   added xssegtr sgrp
// 02  04/13/90  rob yonker  added prod sas option to menu
// 03  10/13/90  joan moore  changed receiving functios to:
//                           01 receipt planning function menu
//                           02 receipt inspection menu
//                           03 receipt entry maintenance menu
//                           04 receipt planning reports menu
// sl365 09/28/93 gray       add SL0A.
// 05  10/22/96  psharm      added option 18 replenishment
//                           locations on the map. and this
//                           option(sl0o)in table sl0mt.
// 06  05/22/97  OVAZQU      Added option 19 for Indirect Ship-
//                           ments Screen (SL09).
// 07  09/19/97  OVAZQU      Added option 20 for UCC 128 Carton
//                           ID Maint. screen (sl08).
// GDS4NSC 01/25/01 RSEBAS   Added 21st option for
//                           VALID XIF/XIT/XIR COMBINATIONS.
// 
// 
// STATEMENT GROUPS:
// ================
// 
// NAME      DESCRIPTION
// -------   --------------------------------------------------
// 
//           sl0m010 - execute
//           -------
// 
// sl0mSY0   CAITEM processing
// 
//           sl0m020 - converse
//           -------
// 
// sl0mSA0   missing key inputs edits
// 
// 
// I/O Modules:
// ===========
// 
// NAME      DESCRIPTION
// --------  --------------------------------------------------
// none
// 
// 
// Table View Names:
// ================
// 
// none
// 
// ************************************************************
// ************************************************************
// *********************
Program SL0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SL0MWX1 SL0MWX1; // record
  SLWREC SLWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SL0MT {deleteAfterUse = yes}; // table
  use SL0MM.SL0MM010 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SL0M010: SL0M010();


     /* ************************************************************/
     /* *** normal flow                                         ****/
     /* ************************************************************/

    goto SL0M020; /* <=== display menu screen*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0M020: SL0M020();


    SL0MWX1.XXXMODID = "02F";

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0M010; /* <=== re-start this function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SL0MWX1.SL0MWERS == "Y")
      goto SL0M020; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "A";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    converseLib.validationFailed(0001); /* <--- fall thru error msg*/
    goto SL0M020; /* <=== display menu screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


  end // end main
end // end SL0M

// sl0m010 - init. for sl0m020
Function SL0M010()


   /* ************************************************************/
   /* *** standard security checking                          ****/
   /* ************************************************************/

  XSENTRY();

   /* ************************************************************/
   /* *** standard segmented trans id setting                 ****/
   /* ************************************************************/

  XSSEGTR();

   /* ************************************************************/
   /* *** initialize map, working storage & std switches      ****/
   /* ************************************************************/

  set SL0MM010 initial;
  set SL0MWX1 empty;
  set SLWREC empty;
  SL0MM010.XXXERRID = "SL0M020 ";
  SL0MM010.XXXMAPNM = "SL0MM010";
  SL0MM010.XXXTITLE = "STOCK LOCATE MASTER MENU";
  SL0MM010.XXXCURDT = VGVar.currentShortGregorianDate;
  SL0MWX1.SL0MWERS = "N";

   /* ************************************************************/
   /* *** maintenance information:                            ****/
   /* *** =======================                             ****/
   /* *** rvsn   date    update by:    description:           ****/
   /* *** ---- --------  ------------  ---------------------- ****/
   /* ***  00  01/07/86  J. Brady      created                ****/
   /* ***  01  11/10/88  J. Wood       added xssegtr sgrp     ****/
   /* ***                                                     ****/
   /* *** note: ws field used re: same no. on all sl0m maps   ****/
   /* ************************************************************/

  SL0MWX1.XXXRVNBR = "01";
  SL0MM010.XXXRVNBR = SL0MWX1.XXXRVNBR;

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

  SL0MWX1.XXXAPPID = "SL0M";
  SL0MWX1.XXXMODID = "010";

   /* ************************************************************/
   /* *** check commarea fast path item to see if it should   ****/
   /* *** be used to setup working storage &/or map fields    ****/
   /* ************************************************************/

  if (COMMAREA.CAITEM > " ")
    SL0MSY0(); /* <=== use commarea item*/
    SL0MWX1.XXXMODID = "010";
    COMMAREA.CAITEM = " ";
  end

   /* ************************************************************/
   /* *** if no selection from commarea: ezeflo immediately   ****/
   /* ************************************************************/

  if (SL0MM010.SL0MMSNO > " ")
    SL0MS0A(); /* <=== right justify single digit*/
  else
    exit stack;
  end

   /* ************************************************************/
   /* *** flow decisions based on CAITEM as selection         ****/
   /* *** note: invalid values detected when there is NOT     ****/
   /* ***       an equivalent selection                       ****/
   /* *** note: character data is used re: CAITEM = character ****/
   /* ************************************************************/

  if (SL0MM010.SL0MMSNO in SL0MT.SL0MTSEL)
    COMMAREA.CATOAP = SL0MT.SL0MTAPP[sysVar.arrayIndex];
    COMMAREA.CAUSERA = SLWREC.SLWGROUP;
    XSEXIT();
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "A";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    SL0MM010.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0MM010.SL0MMSNO cursor, bold;
    exit stack;
  else
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "B";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    converseLib.validationFailed(0017); /* <--- invalid selection passed msg*/
  end


   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0M010

// sl0m020 - converse & edits
Function SL0M020()


   /* ************************************************************/
   /* *** no "before" processing...                           ****/
   /* ************************************************************/


  converse SL0MM010 ;


  SL0MWX1.XXXMODID = "020";

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0MM010.CATOAP > " ")
    COMMAREA.CATOAP = SL0MM010.CATOAP;
    COMMAREA.CAITEM = SL0MM010.CAITEM;
    COMMAREA.CAUSERA = SLWREC.SLWGROUP;
    XSEXIT();
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "A";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    SL0MM010.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0MM010.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SL0MWX1.SL0MWERS = "N";
  SL0MM010.VAGen_EZEMSG = " ";
  SL0MM010.XXXERRID = "SL0M020 ";
  set SL0MM010.CATOAP initialAttributes;
  set SL0MM010.CAITEM initialAttributes;
  set SL0MM010.SL0MMSNO cursor;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

  set SL0MM010.SL0MMSNO initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0MM010.CAITEM > " ")
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "B";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    converseLib.validationFailed(0002); /* <--- option required msg*/
    set SL0MM010.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process                        ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
     /* ************************************************************/
     /* *** check for missing fields                            ****/
     /* *** note: don't care if it is the same key/selection    ****/
     /* *** note: edit/valid value part of flow decision        ****/
     /* ************************************************************/
    SL0MSA0(); /* <=== missing input edits*/
    if (SL0MWX1.SL0MWERS == "Y")
      exit stack;
    end
    SL0MWX1.XXXMODID = "020";
     /* ************************************************************/
     /* *** flow decisions based on input selection             ****/
     /* *** note: invalid values detected when there is NOT     ****/
     /* ***       an equivalent selection                       ****/
     /* *** note: character data is used re: CAITEM = character ****/
     /* *** note: if single digit input, right justify/zero fill****/
     /* ************************************************************/
    SL0MS0A(); /* <=== right justify single digit*/
    if (SL0MM010.SL0MMSNO in SL0MT.SL0MTSEL)
      COMMAREA.CATOAP = SL0MT.SL0MTAPP[sysVar.arrayIndex];
      COMMAREA.CAUSERA = SLWREC.SLWGROUP;
      XSEXIT();
      SL0MWX1.SL0MWERS = "Y";
      SL0MWX1.XXXUNQID = "C";
      SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
      SL0MM010.VAGen_EZEMSG = COMMAREA.CAMSG;
      set SL0MM010.SL0MMSNO cursor, bold;
      exit stack;
    else
      SL0MWX1.SL0MWERS = "Y";
      SL0MWX1.XXXUNQID = "D";
      SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
      converseLib.validationFailed(0017); /* <--- invalid selection passed msg*/
      exit stack;
    end
  end

   /* ************************************************************/
   /* *** flow decisions based on pfkey pressed               ****/
   /* ************************************************************/

   /* none at present*/

   /* ************************************************************/
   /* *** if PF3: go to previous logical level = sys mstr menu****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "MN0M";
    COMMAREA.CAUSERA = SLWREC.SLWGROUP;
    XSEXIT();
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "E";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    SL0MM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "F";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    SL0MM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to inventory main menu                   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    COMMAREA.CAUSERA = SLWREC.SLWGROUP;
    XSEXIT();
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "G";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    SL0MM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    COMMAREA.CAUSERA = SLWREC.SLWGROUP;
    XSEXIT();
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "H";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    SL0MM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SL0MWX1.SL0MWERS = "Y";
  SL0MWX1.XXXUNQID = "T";
  SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
  converseLib.validationFailed(0004); /* <--- invalid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0M020

// rigth justify single digit
Function SL0MS0A()


   /* ************************************************************/
   /* *** setup missing errors:                               ****/
   /* ************************************************************/

  SL0MWX1.SL0MWSNO = SL0MM010.SL0MMSNO;

  if (SL0MWX1.SL0MWDG2 == " ")
    SL0MWX1.SL0MWDG2 = SL0MWX1.SL0MWDG1;
    SL0MWX1.SL0MWDG1 = "0";
    SL0MM010.SL0MMSNO = SL0MWX1.SL0MWSNO;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0MS0A

// missing key inputs edits
Function SL0MSA0()


  SL0MWX1.XXXMODID = "SA0";

   /* ************************************************************/
   /* *** setup missing errors:                               ****/
   /* ************************************************************/

  if (SL0MM010.SL0MMSNO == " ")
    SL0MWX1.SL0MWERS = "Y";
    SL0MWX1.XXXUNQID = "A";
    SL0MM010.XXXERRID = SL0MWX1.XXXERRID;
    converseLib.validationFailed(0009); /* <--- enter required field msg*/
    set SL0MM010.SL0MMSNO cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0MSA0

// CAITEM processing
Function SL0MSY0()


  SL0MWX1.XXXMODID = "SY0";

   /* ************************************************************/
   /* *** if entered, use CAITEM data as the selection no.:   ****/
   /* *** valid values checked as part of flow decision(s)    ****/
   /* *** note: 'SNO' & CAITEM are character data             ****/
   /* ************************************************************/

  SL0MM010.SL0MMSNO = COMMAREA.CAITEM;

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0MSY0

//*** RECORD=SL0MWX1 ****
// ************************************************************
// 
//            COMMON WORKING STORAGE FIELDS
//            =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are generally used
//           by all applications.
// 
//           The name of this record and its fields will still
//           require customization for application uniqueness.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 10-21-86  Ward Jones   created
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record SL0MWX1 type basicRecord
  10 SL0MWERS SL0MWERS ; 
  10 XXXRVNBR XXXRVNBR ; 
  10 XXXERRID XXXERRID ; 
    15 XXXAPPID XXXAPPID ; 
    15 XXXMODID XXXMODID ; 
    15 XXXUNQID XXXUNQID ; 
  10 SL0MWSNO SL0MWSNO ; 
    15 SL0MWDG1 SL0MWDG1 ; 
    15 SL0MWDG2 SL0MWDG2 ; 
end // end SL0MWX1

// menu sel. no. digit 1
DataItem SL0MWDG1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu sel. no. digit 2
DataItem SL0MWDG2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error switch
DataItem SL0MWERS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// menu selection no.
DataItem SL0MWSNO char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

