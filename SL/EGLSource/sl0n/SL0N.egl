package sl0n;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import pc.common.*;
import sl.common.*;
import sw.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=SL0N ****
// ************************************************************
// 
//           STOCK LOCATE optional batch report request
//           ==========================================
// 
// ************************************************************
// 
// OVERVIEW: This application is intended to transfer control
//           to other applications and/or functions within its
//           application depending on the selction number
//           entered on the map or passed via fast path's
//           item area (first character only).
// 
//           notes:
//             1) selection number (since single digit) is
//                setup as a character type field in order to
//                make the use of CAITEM easier as well as
//                easier for the user and program to deal
//                with the map field.
//             2) if selections include both external appl.s
//                and internal functions,  the internal func.s
//                should be listed first so that they will
//                correspond to the level number used in the
//                multiple function naming convention(s).
//             3) transfer to external applications will use
//                xsexit and require these selection values
//                be tested in the after section in either
//                the process or the related statement group
//                  CAITEM: 110 After or SY1
//                  SelNo.: 120 After or SB1
// 
// 
//        the optional report selections are:
//              (1) stock aging report
//              (2) partial locations report
//              (3) setaside locations report
//              (4) safety stock report
//              (5) frozen locations report
//              (6) process auto letup request (the default
//                  days are set in sl0n610)
// 
// MAINTENANCE HISTORY:
// ===================
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// 00  03/18/87  ron politowski  created
// 00  06/06/88  judy juch       added area/zone input map110.
// 02  11/10/88  john wood       added xssegtr sgrp
//     05/09/90  kande1          remove option 6 code from
//                               sl0n
//     06/12/90  kande1          removed ts1rec from table list
// 03  11/20/90  RVAKEL          add code to set cursor to
//                               first field after warehouse:
//                                  pgms SL0N120, SL0N220,
//                                       SL0N320, SL0N420,
//                                       SL0N520
// SL#0     10/09/91  SPOPA   Change "Allow Implicits" to NO.
// SL#0     01/17/91  JWOOD   initialize w/s
// SL#M007  06/10/92  SHENDE  Add option to request auto letup
//                            for whse '04' only.
// SL#0     09/17/92  SHENDE  Allow access to auto letup for
//                            whse '02' and '07'.  Also, set
//                            default #of days w/no activity &
//                            allow user to modify this field.
// 
// I/O Modules:
// ===========
// 
// NAME      DESCRIPTION
// --------  --------------------------------------------------
// none
// 
// ************************************************************
// ************************************************************
// *********************
Program SL0N type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SL0NW01 SL0NW01; // record
  SL0NW02 SL0NW02; // record
  SL0NW03 SL0NW03; // record
  SL0NW04 SL0NW04; // record
  SL0NW05 SL0NW05; // record
  SL0NW06 SL0NW06; // record
  SL4REC SL4REC; // record
  SLVREC SLVREC; // record
  SLWREC SLWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  X2CREC X2CREC; // record
  X3CREC X3CREC; // record
  XZZREC XZZREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XARTBL; // table
  use XWHTBL; // table
  use SL0NM.SL0NM010,  // forms
      SL0NM.SL0NM110, 
      SL0NM.SL0NM210, 
      SL0NM.SL0NM310, 
      SL0NM.SL0NM410, 
      SL0NM.SL0NM510, 
      SL0NM.SL0NM610
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SL0N010: SL0N010();


     /* ************************************************************/
     /* *** if the map selection no. setup:                     ****/
     /* *** use it to go directly to selection (skip converse)  ****/
     /* ************************************************************/

    if (SL0NM010.XMSLMSNO > " ")
      if (SL0NM010.XMSLMSNO == "1")
        goto SL0N110; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "2")
        goto SL0N210; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "3")
        goto SL0N310; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "4")
        goto SL0N410; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "5")
        goto SL0N510; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "6")
        goto SL0N610; /* <=== new function*/
      end
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "010Z";
      SLWREC.SLWMSGNO = 0017; /* <--- invalid selection msg*/
      set SL0NM010.XMSLMSNO cursor, bold;
      goto SL0N020; /* <=== converse map*/
    end

     /* ************************************************************/
     /* *** normal flow to converse map                         ****/
     /* ************************************************************/

    SLWREC.XXXLOCID = "020 "; /* error id location id*/
    goto SL0N020; /* <=== converse map*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0N020: SL0N020();


     /* ************************************************************/
     /* *** if PA2: restart application regardless of status    ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N010; /* <=== re-start this function*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is pf13)
      goto SL0N110; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf14)
      goto SL0N210; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf15)
      goto SL0N310; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf16)
      goto SL0N410; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf17)
      goto SL0N510; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf18)
      goto SL0N610; /* <=== start new function*/
    end


     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N020; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is enter)
      if (SL0NM010.XMSLMSNO == "1")
        goto SL0N110; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "2")
        goto SL0N210; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "3")
        goto SL0N310; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "4")
        goto SL0N410; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "5")
        goto SL0N510; /* <=== new function*/
      end
      if (SL0NM010.XMSLMSNO == "6")
        goto SL0N610; /* <=== new function*/
      end
       /* ************************************************************/
       /* *** note: invalid selection is detected at this point   ****/
       /* ************************************************************/
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "020Y";
      SLWREC.SLWMSGNO = 0017; /* <--- invalid selection msg*/
      set SL0NM010.XMSLMSNO cursor, bold;
      goto SL0N020; /* <=== converse map*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "020Z";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    goto SL0N020; /* <=== display this screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


    SL0N110: SL0N110();


     /* ************************************************************/
     /* *** normal flow to converse map                         ****/
     /* ************************************************************/

    SLWREC.XXXLOCID = "120 "; /* error id location id*/
    goto SL0N120; /* <=== converse map*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0N120: SL0N120();


     /* ************************************************************/
     /* *** if PA2: restart application regardless of status    ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N110; /* <=== re-start this function*/
    end

    if (converseVar.eventKey is pf3)
      SLWREC.SLWMSGNO = 0; /* <=== reset msg no.*/
      SLWREC.XXXLOCID = "020 "; /* <=== reset error id*/
      SLWREC.SLWERRSW = "N"; /* <=== reset error switch*/
      SL0NM010.XMSLMSNO = " "; /* <=== blank out prev. selection value*/
      goto SL0N020; /* <=== re-display menu*/
    end

    if (converseVar.eventKey is pf14)
      goto SL0N210; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf15)
      goto SL0N310; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf16)
      goto SL0N410; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf17)
      goto SL0N510; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf18)
      goto SL0N610; /* <=== start new function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N120; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is enter)
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020;
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120Z";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    goto SL0N120; /* <=== display this screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


    SL0N210: SL0N210();


     /* ************************************************************/
     /* *** normal flow to converse map                         ****/
     /* ************************************************************/

    SLWREC.XXXLOCID = "220 "; /* error id location id*/
    goto SL0N220; /* <=== converse map*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0N220: SL0N220();


     /* ************************************************************/
     /* *** if PA2: restart application regardless of status    ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N210; /* <=== re-start this function*/
    end

    if (converseVar.eventKey is pf3)
      SLWREC.SLWMSGNO = 0; /* <=== reset msg no.*/
      SLWREC.XXXLOCID = "020 "; /* <=== reset error id*/
      SLWREC.SLWERRSW = "N"; /* <=== reset error switch*/
      SL0NM010.XMSLMSNO = " "; /* <=== blank out prev. selection value*/
      goto SL0N020; /* <=== re-display menu*/
    end

    if (converseVar.eventKey is pf13)
      goto SL0N110; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf15)
      goto SL0N310; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf16)
      goto SL0N410; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf17)
      goto SL0N510; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf18)
      goto SL0N610; /* <=== start new function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N220; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is enter)
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020; /* <=== converse map*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "220Z";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    goto SL0N220; /* <=== display this screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


    SL0N310: SL0N310();


     /* ************************************************************/
     /* *** normal flow to converse map                         ****/
     /* ************************************************************/

    SLWREC.XXXLOCID = "320 "; /* error id location id*/
    goto SL0N320; /* <=== converse map*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0N320: SL0N320();


     /* ************************************************************/
     /* *** if PA2: restart application regardless of status    ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N310; /* <=== re-start this function*/
    end

    if (converseVar.eventKey is pf3)
      SLWREC.SLWMSGNO = 0; /* <=== reset msg no.*/
      SLWREC.XXXLOCID = "020 "; /* <=== reset error id*/
      SLWREC.SLWERRSW = "N"; /* <=== reset error switch*/
      SL0NM010.XMSLMSNO = " "; /* <=== blank out prev. selection value*/
      goto SL0N020; /* <=== re-display menu*/
    end

    if (converseVar.eventKey is pf13)
      goto SL0N110; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf14)
      goto SL0N210; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf16)
      goto SL0N410; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf17)
      goto SL0N510; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf18)
      goto SL0N610; /* <=== start new function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N320; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is enter)
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020; /* <=== converse map*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "320Z";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    goto SL0N320; /* <=== display this screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


    SL0N410: SL0N410();


     /* ************************************************************/
     /* *** normal flow to converse map                         ****/
     /* ************************************************************/

    SLWREC.XXXLOCID = "420 "; /* error id location id*/
    goto SL0N420; /* <=== converse map*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0N420: SL0N420();


     /* ************************************************************/
     /* *** if PA2: restart application regardless of status    ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N410; /* <=== re-start this function*/
    end

    if (converseVar.eventKey is pf3)
      SLWREC.SLWMSGNO = 0; /* <=== reset msg no.*/
      SLWREC.XXXLOCID = "020 "; /* <=== reset error id*/
      SLWREC.SLWERRSW = "N"; /* <=== reset error switch*/
      SL0NM010.XMSLMSNO = " "; /* <=== blank out prev. selection value*/
      goto SL0N020; /* <=== re-display menu*/
    end

    if (converseVar.eventKey is pf13)
      goto SL0N110; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf14)
      goto SL0N210; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf15)
      goto SL0N310; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf17)
      goto SL0N510; /* <=== start new function*/
    end
    if (converseVar.eventKey is pf18)
      goto SL0N610; /* <=== start new function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N420; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is enter)
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020; /* <=== converse map*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "420Z";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    goto SL0N420; /* <=== display this screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


    SL0N510: SL0N510();


     /* ************************************************************/
     /* *** normal flow to converse map                         ****/
     /* ************************************************************/

    SLWREC.XXXLOCID = "520 "; /* error id location id*/
    goto SL0N520; /* <=== converse map*/

     /* ************************************************************/
     /* *** end of EXECUTE FLOW section                         ****/
     /* ************************************************************/


    SL0N520: SL0N520();


     /* ************************************************************/
     /* *** if PA2: restart application regardless of status    ****/
     /* ************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N510; /* <=== re-start this function*/
    end

    if (converseVar.eventKey is pf3)
      SLWREC.SLWMSGNO = 0; /* <=== reset msg no.*/
      SLWREC.XXXLOCID = "020 "; /* <=== reset error id*/
      SLWREC.SLWERRSW = "N"; /* <=== reset error switch*/
      SL0NM010.XMSLMSNO = " "; /* <=== blank out prev. selection value*/
      goto SL0N020; /* <=== re-display menu*/
    end

    if (converseVar.eventKey is pf13)
      goto SL0N110; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf14)
      goto SL0N210; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf15)
      goto SL0N310; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf16)
      goto SL0N410; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf18)
      goto SL0N610; /* <=== start new function*/
    end

     /* ************************************************************/
     /* *** if error: (re-)display the screen                   ****/
     /* ************************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N520; /* <=== re-display this screen*/
    end

     /* ************************************************************/
     /* *** if one of these PF keys: go to related process      ****/
     /* ************************************************************/

    if (converseVar.eventKey is enter)
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020; /* <=== converse map*/
    end

     /* ************************************************************/
     /* *** fall thru error - code shouldn't be executed        ****/
     /* ************************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "520Z";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    goto SL0N520; /* <=== display this screen*/

     /* ************************************************************/
     /* *** end of CONVERSE FLOW section                        ****/
     /* ************************************************************/


    SL0N610: SL0N610();
     /* ***************************************************************/
     /* ** normal flow to converse map                             ****/
     /* ***************************************************************/

    if (COMMAREA.XWHCD != "02"
     && COMMAREA.XWHCD != "04"
     && COMMAREA.XWHCD != "07")

      SLWREC.SLWMSGNO = 197;
      SLWREC.SLWERRSW = "N";
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020;
    end

    SLWREC.XXXLOCID = "620 ";
    goto SL0N620; /* <=== converse map*/

     /* ***************************************************************/
     /* ** end of EXECUTE FLOW section                             ****/
     /* ***************************************************************/


    SL0N620: SL0N620();
     /* **************************************************************/
     /* **  If PA2: restart application regardless of status      ****/
     /* **************************************************************/

    if (converseVar.eventKey is pa2)
      goto SL0N620; /* <===  re-start this function*/
    end

    if (converseVar.eventKey is pf3)
      SLWREC.SLWMSGNO = 0; /* <=== reset msg number*/
      SLWREC.XXXLOCID = "020 "; /* <=== reset error id*/
      SLWREC.SLWERRSW = "N"; /* <=== reset error switch*/
      SL0NM010.XMSLMSNO = " "; /* <=== blank out prev selection value*/
      goto SL0N020; /* <=== re-display menu*/
    end

    if (converseVar.eventKey is pf13)
      goto SL0N110; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf14)
      goto SL0N210; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf15)
      goto SL0N310; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf16)
      goto SL0N410; /* <=== start new function*/
    end

    if (converseVar.eventKey is pf17)
      goto SL0N510; /* <=== start new function*/
    end


     /* **********************************************************/
     /* **  if error; re-display the screen                   ****/
     /* **********************************************************/

    if (SLWREC.SLWERRSW == "Y")
      goto SL0N620; /* <=== re-display this screen*/
    end

     /* **********************************************************/
     /* ** if one of these PF keys; go to related process     ****/
     /* **********************************************************/

    if (converseVar.eventKey is enter)
      SL0NM010.XMSLMSNO = " ";
      SLWREC.XXXLOCID = "020 ";
      goto SL0N020; /* <=== converse map*/
    end

     /* **********************************************************/
     /* **  fall thru error - code shouldn't be executed      ****/
     /* **********************************************************/

    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "620Z";
    SLWREC.SLWMSGNO = 0001;
    goto SL0N620;

     /* **********************************************************/
     /* ** end of CONVERSE FLOW section****/
     /* **********************************************************/

  end // end main
end // end SL0N

// one time initializations
Function SL0N010()


   /* ************************************************************/
   /* *** standard security checking                          ****/
   /* *** note: comment out if exec'g from your msl           ****/
   /* ************************************************************/

  XSENTRY();

   /* ************************************************************/
   /* *** standard segmented trans id setting                 ****/
   /* ************************************************************/

  XSSEGTR();

   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM010 initial; /* resets fld values, attr.s & cursor*/
  converseLib.clearScreen();
  set SL0NM110 initial; /* resets fld values, attr.s & cursor*/
  converseLib.clearScreen();
  set SL0NM210 initial; /* resets fld values, attr.s & cursor*/
  converseLib.clearScreen();
  set SL0NM310 initial; /* resets fld values, attr.s & cursor*/
  converseLib.clearScreen();
  set SL0NM410 initial; /* resets fld values, attr.s & cursor*/
  converseLib.clearScreen();
  set SL0NM510 initial; /* resets fld values, attr.s & cursor*/
  converseLib.clearScreen();
  set SL0NM610 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW01 empty; /**/
  set SL0NW02 empty; /**/
  set SL0NW03 empty; /**/
  set SL0NW04 empty; /**/
  set SL0NW05 empty; /**/
  set SL0NW06 empty; /**/
  set SLVREC empty; /* common working storage fields*/
  set SLWREC empty; /* common working storage fields*/
  set SL4REC empty; /* common working storage fields*/
  set TA1REC empty; /* TA0020 record*/
  set TA2REC empty; /**/
  set X2CREC empty; /* common date routine record*/
  set X3CREC empty; /* common time routine record*/
  set XZZREC empty; /**/
  set SQLCA empty; /* SQL returned data record*/
  set ERRSQLCA empty; /* TA0020 version of SQLCA*/

   /* ************************************************************/
   /* *** maintenance information:                            ****/
   /* *** =======================                             ****/
   /* *** rvsn   date    update by:    description:           ****/
   /* *** ---- --------  ------------  ---------------------- ****/
   /* ***  00  01/28/87  ron politowski created               ****/
   /* ***  02  11/10/88  john wood      added xssegtr sgrp    ****/
   /* ***  03  12/20/88  sue atkin      added option 6        ****/
   /* ************************************************************/

  SLWREC.XXXRVNBR = "03";

  SLWREC.XXXMAPNM = "SL0NM010";
  SLWREC.XXXTITLE = "OPTIONAL BATCH REPORT REQUEST MENU";

  XSX2CDT(); /* get current ccyymmdd*/
  SLWREC.SLWWKCC = X2CREC.X2CCURCC;

  SLWREC.XXXAPPID = "SL0N"; /* error id appl. name*/
  SLWREC.SLWTALOC = "SL0N010 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NM010"; /* TA0020 current map name*/

  SLWREC.SLWSUMQU = "SLSN"; /* summary tsq id*/
  SLWREC.SLWDETQU = "SLDN"; /* detail tsq id*/
  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/
  SLWREC.SLWLINPP = 15; /* lines per page*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM010.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM010.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM010.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM010.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** check commarea fast path item to see if it should   ****/
   /* *** be used to setup working storage &/or map fields    ****/
   /* ************************************************************/

  if (COMMAREA.CAITEM > " ")
    SL0NSY0(); /* <=== use commarea item*/
    COMMAREA.CAITEM = " ";
  end

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N010

// converse & control key entry
Function SL0N020()

   /* ************************************************************/
   /* *** setup msg no.  and  error id  on map                ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM010.XXXERRID = SLWREC.XXXERRID;


  converse SL0NM010 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "020A";
    SLWREC.SLWMSGNO = 0;
    SL0NM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end


   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120B";
    SLWREC.SLWMSGNO = 0;
    SL0NM110.VAGen_EZEMSG = CAMSG;
    exit stack;
  end
   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "020C";
    SLWREC.SLWMSGNO = 0;
    SL0NM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "020D";
    SLWREC.SLWMSGNO = 0;
    SL0NM010.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM010.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM010.CATOAP;
    COMMAREA.CAITEM = SL0NM010.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "020E";
    SLWREC.SLWMSGNO = 0;
    SL0NM010.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM010.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset std fields and switches                       ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM010.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "020 ";
  set SL0NM010.CATOAP initialAttributes;
  set SL0NM010.CAITEM initialAttributes;
  set SL0NM010.XMSLMSNO cursor, initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM010.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "020F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM010.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* *** note: check first for selection entered error       ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH0(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18)
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "020I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N020

// one time initializations
Function SL0N110()


   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM110 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW01 empty; /* appl. working storage area*/

  SLWREC.XXXMAPNM = "SL0NM110";
  SLWREC.XXXTITLE = "STOCK AGEING REPORT REQUEST";

  SLWREC.SLWTALOC = "SL0N110 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NN110"; /* TA0020 current map name*/

  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM110.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM110.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM110.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM110.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

  SL0NM110.XWHCD = COMMAREA.XWHCD;
  SL0NM110.SL0NMOP3 = "Y";

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

  SLWREC.SLWLINPP = 5;

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N110

// conv & cntl fixed
Function SL0N120()


   /* ************************************************************/
   /* *** no "before" processing ...                          ****/
   /* *** ... except msg no.  and  error id setup             ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM110.XXXERRID = SLWREC.XXXERRID;

  set SL0NM110.SL0NMOP1 cursor; /* rnv added  11/19/90*/
                                 /* ;  chng # SL132*/
  converse SL0NM110 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120A";
    SLWREC.SLWMSGNO = 0;
    SL0NM110.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120C";
    SLWREC.SLWMSGNO = 0;
    SL0NM110.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120D";
    SLWREC.SLWMSGNO = 0;
    SL0NM110.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM110.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM110.CATOAP;
    COMMAREA.CAITEM = SL0NM110.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120E";
    SLWREC.SLWMSGNO = 0;
    SL0NM110.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM110.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM110.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "120 ";
  set SL0NM110.CATOAP initialAttributes;
  set SL0NM110.CAITEM initialAttributes;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

   /* ET SL0NM110.XWHCD CURSOR;  orig*/
  set SL0NM110.XWHCD initialAttributes;
  set SL0NM110.SL0NMOP1 cursor; /* rnv add  11/19/90*/
  set SL0NM110.SL0NMOP1 initialAttributes;
  set SL0NM110.SL0NMOP2 initialAttributes;
  set SL0NM110.SL0NMOP3 initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM110.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "120F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM110.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18)
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH1(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "120I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N120

// one time initializations
Function SL0N210()


   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM210 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW02 empty; /* appl. working storage area*/

  SLWREC.XXXMAPNM = "SL0NM210";
  SLWREC.XXXTITLE = "PARTIAL LOCATIONS REPORT REQUEST";

  SLWREC.SLWTALOC = "SL0N210 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NM210"; /* TA0020 current map name*/

  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM210.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM210.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM210.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM210.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

  SL0NM210.XWHCD = COMMAREA.XWHCD;
  SL0NM210.SL0NMOP2 = "Y";

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N210

// conv & cntl fixed
Function SL0N220()


   /* ************************************************************/
   /* *** no "before" processing ...                          ****/
   /* *** ... except msg no.  and  error id setup             ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM210.XXXERRID = SLWREC.XXXERRID;

  set SL0NM210.SL0NMOP1 cursor; /* rnv added  11/19/90*/
                                 /* ;  chng # SL132*/
  converse SL0NM210 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "220A";
    SLWREC.SLWMSGNO = 0;
    SL0NM210.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "220C";
    SLWREC.SLWMSGNO = 0;
    SL0NM210.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "220D";
    SLWREC.SLWMSGNO = 0;
    SL0NM210.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM210.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM210.CATOAP;
    COMMAREA.CAITEM = SL0NM210.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "220E";
    SLWREC.SLWMSGNO = 0;
    SL0NM210.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM210.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM210.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "220 ";
  set SL0NM210.CATOAP initialAttributes;
  set SL0NM210.CAITEM initialAttributes;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

   /* ET SL0NM210.XWHCD CURSOR;  orig*/
  set SL0NM210.SL0NMOP1 cursor; /* rnv add  11/19/90*/
  set SL0NM210.XWHCD initialAttributes;
  set SL0NM210.SL0NMOP1 initialAttributes;
  set SL0NM210.SL0NMOP2 initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM210.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "220F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM210.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18)
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH2(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "220I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N220

// one time initializations
Function SL0N310()


   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM310 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW03 empty; /* appl. working storage area*/

  SLWREC.XXXMAPNM = "SL0NM310";
  SLWREC.XXXTITLE = "SETASIDE LOCATIONS REPORT REQUEST";

  SLWREC.SLWTALOC = "SL0N310 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NM310"; /* TA0020 current map name*/

  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM310.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM310.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM310.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM310.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

  SL0NM310.XWHCD = COMMAREA.XWHCD;
  SL0NM310.SL0NMOP1 = "Y";

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N310

// conv & cntl fixed
Function SL0N320()


   /* ************************************************************/
   /* *** no "before" processing ...                          ****/
   /* *** ... except msg no.  and  error id setup             ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM310.XXXERRID = SLWREC.XXXERRID;

  set SL0NM310.SL0NMOP1 cursor; /* rnv added  11/19/90*/
                                 /* ;  chng # SL132*/
  converse SL0NM310 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "320A";
    SLWREC.SLWMSGNO = 0;
    SL0NM310.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "320C";
    SLWREC.SLWMSGNO = 0;
    SL0NM310.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "320D";
    SLWREC.SLWMSGNO = 0;
    SL0NM310.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM310.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM310.CATOAP;
    COMMAREA.CAITEM = SL0NM310.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "320E";
    SLWREC.SLWMSGNO = 0;
    SL0NM310.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM310.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM310.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "320 ";
  set SL0NM310.CATOAP initialAttributes;
  set SL0NM310.CAITEM initialAttributes;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

   /* ET SL0NM310.XWHCD CURSOR;  orig*/
  set SL0NM310.XWHCD initialAttributes;
  set SL0NM310.SL0NMOP1 cursor; /* rnv add  11/19/90*/
  set SL0NM310.SL0NMOP1 initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM310.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "320F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM310.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18)
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH3(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "320I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N320

// one time initializations
Function SL0N410()


   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM410 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW04 empty; /* appl. working storage area*/

  SLWREC.XXXMAPNM = "SL0NM410";
  SLWREC.XXXTITLE = "SAFETY STOCK REPORT REQUEST";

  SLWREC.SLWTALOC = "SL0N410 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NM410"; /* TA0020 current map name*/

  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM410.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM410.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM410.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM410.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

  SL0NM410.XWHCD = COMMAREA.XWHCD;
  SL0NM410.SL0NMOP1 = "C";
  SL0NM410.SL0NMOP2 = "Y";

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N410

// conv & cntl fixed
Function SL0N420()


   /* ************************************************************/
   /* *** no "before" processing ...                          ****/
   /* *** ... except msg no.  and  error id setup             ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM410.XXXERRID = SLWREC.XXXERRID;

  set SL0NM410.SL0NMOP1 cursor; /* rnv added  11/19/90*/
                                 /* ;  chng # SL132*/
  converse SL0NM410 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "420A";
    SLWREC.SLWMSGNO = 0;
    SL0NM410.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "420C";
    SLWREC.SLWMSGNO = 0;
    SL0NM410.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "420D";
    SLWREC.SLWMSGNO = 0;
    SL0NM410.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM410.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM410.CATOAP;
    COMMAREA.CAITEM = SL0NM410.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "420E";
    SLWREC.SLWMSGNO = 0;
    SL0NM410.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM410.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM410.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "420 ";
  set SL0NM410.CATOAP initialAttributes;
  set SL0NM410.CAITEM initialAttributes;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

   /* ET SL0NM410.XWHCD CURSOR;  orig*/
  set SL0NM410.XWHCD initialAttributes;
  set SL0NM410.SL0NMOP1 cursor; /* rnv added  11/19/90*/
  set SL0NM410.SL0NMOP1 initialAttributes;
  set SL0NM410.SL0NMOP2 initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM410.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "420F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM410.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18)
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH4(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "420I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N420

// one time initializations
Function SL0N510()


   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM510 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW05 empty; /* appl. working storage area*/

  SLWREC.XXXMAPNM = "SL0NM510";
  SLWREC.XXXTITLE = "FROZEN LOCATIONS REPORT REQUEST";

  SLWREC.SLWTALOC = "SL0N510 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NM510"; /* TA0020 current map name*/

  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM510.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM510.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM510.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM510.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

  SL0NM510.XWHCD = COMMAREA.XWHCD;
  SL0NM510.SL0NMOP1 = "Y";

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N510

// conv & cntl fixed
Function SL0N520()


   /* ************************************************************/
   /* *** no "before" processing ...                          ****/
   /* *** ... except msg no.  and  error id setup             ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM510.XXXERRID = SLWREC.XXXERRID;

  set SL0NM510.SL0NMOP1 cursor; /* rnv added  11/19/90*/
                                 /* ;  chng # SL132*/
  converse SL0NM510 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "520A";
    SLWREC.SLWMSGNO = 0;
    SL0NM510.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "520C";
    SLWREC.SLWMSGNO = 0;
    SL0NM510.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "520D";
    SLWREC.SLWMSGNO = 0;
    SL0NM510.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM510.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM510.CATOAP;
    COMMAREA.CAITEM = SL0NM510.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "520E";
    SLWREC.SLWMSGNO = 0;
    SL0NM510.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM510.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM510.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "520 ";
  set SL0NM510.CATOAP initialAttributes;
  set SL0NM510.CAITEM initialAttributes;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

   /* ET SL0NM510.XWHCD CURSOR;  orig*/
  set SL0NM510.XWHCD initialAttributes;
  set SL0NM510.SL0NMOP1 cursor; /* rnv added  11/19/90*/
  set SL0NM510.SL0NMOP1 initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM510.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "520F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM510.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf18)
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH5(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "520I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N520

// one time initializations
Function SL0N610()


   /* ************************************************************/
   /* *** "clear" map = resets fld values, attr.s & cursor    ****/
   /* ************************************************************/

  converseLib.clearScreen();
  set SL0NM610 initial; /* resets fld values, attr.s & cursor*/

   /* ************************************************************/
   /* *** initialize std working storage & map fields         ****/
   /* ************************************************************/

  set SL0NW06 empty; /* appl. working storage area*/

  SLWREC.XXXMAPNM = "SL0NM610";
  SLWREC.XXXTITLE = "AUTO LETUP PROCESS REQUEST";

  SLWREC.SLWTALOC = "SL0N610 "; /* TA0020 exec location(2)*/
  SLWREC.SLWTAMAP = "SL0NM610"; /* TA0020 current map name*/

  SLWREC.SLWERRSW = "N"; /* error switch*/
  SLWREC.SLWMSGNO = 0; /* saved msg no.*/

   /* ************************************************************/
   /* *** move ws fields to map fields - re: this data will   ****/
   /* *** be needed suring resets and for multiple levels     ****/
   /* ************************************************************/

  SL0NM610.XXXMAPNM = SLWREC.XXXMAPNM;
  SL0NM610.XXXRVNBR = SLWREC.XXXRVNBR;
  SL0NM610.XXXTITLE = SLWREC.XXXTITLE;
  SL0NM610.XXXCURDT = X2CREC.X2CCURSD;

   /* ************************************************************/
   /* *** setup ws default values & map fields, if any        ****/
   /* ************************************************************/

  SL0NM610.XWHCD = COMMAREA.XWHCD;
  SL0NM610.SL0NMOP1 = "Y";

   /* -----------------------------------------------------------*/
   /* Set up default "nbr of days w/ no activity" for each whse*/
   /* -----------------------------------------------------------*/
  if (COMMAREA.XWHCD == "02")
    SL0NM610.SL0NMOP2 = 15;
  end

  if (COMMAREA.XWHCD == "04")
    SL0NM610.SL0NMOP2 = 30;
  end

  if (COMMAREA.XWHCD == "07")
    SL0NM610.SL0NMOP2 = 180;
  end

   /* ************************************************************/
   /* *** initialize application working storage & switches   ****/
   /* ************************************************************/

   /* none at this time*/

   /* ************************************************************/
   /* *** end of EXECUTE section                              ****/
   /* ************************************************************/


end // end SL0N610

// conv & cntl fixed
Function SL0N620()


   /* ************************************************************/
   /* *** no "before" processing ...                          ****/
   /* *** ... except msg no.  and  error id setup             ****/
   /* ************************************************************/

  if (SLWREC.SLWMSGNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SLWREC.SLWMSGNO);
  end
  SL0NM610.XXXERRID = SLWREC.XXXERRID;

  if (converseVar.validationMsgNum > 0)
    set SL0NM610 alarm;
  else
    set SL0NM610.SL0NMOP1 cursor;
  end

  converse SL0NM610 ;


   /* ************************************************************/
   /* *** commented EZECLOS code to be used ONLY in test      ****/
   /* *** in order to end application without canceling it    ****/
   /* ************************************************************/

   /* IF EZEAID IS PF9;*/
    /* EZECLOS;*/
   /* END ;*/

   /* ************************************************************/
   /* *** if pa2: regardless of status - restart application  ****/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF1: go to help application                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD00";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "620A";
    SLWREC.SLWMSGNO = 0;
    SL0NM610.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF3: go to previous logical level                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf3)
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF4: go to system main menu                      ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf4)
    XSPF4();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "620C";
    SLWREC.SLWMSGNO = 0;
    SL0NM610.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if PF5: go to stock locate main menu                ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf5)
    COMMAREA.CATOAP = "SL0M";
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "620D";
    SLWREC.SLWMSGNO = 0;
    SL0NM610.VAGen_EZEMSG = CAMSG;
    exit stack;
  end

   /* ************************************************************/
   /* *** if fast path entered: exit immeditately             ****/
   /* ************************************************************/

  if (SL0NM610.CATOAP > " ")
    COMMAREA.CATOAP = SL0NM610.CATOAP;
    COMMAREA.CAITEM = SL0NM610.CAITEM;
    XSEXIT();
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "620E";
    SLWREC.SLWMSGNO = 0;
    SL0NM610.VAGen_EZEMSG = COMMAREA.CAMSG;
    set SL0NM610.CATOAP cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** reset error switch, std fields & cursor position    ****/
   /* ************************************************************/

  SLWREC.SLWMSGNO = 0;
  SLWREC.SLWERRSW = "N";
  SL0NM610.VAGen_EZEMSG = " ";
  SLWREC.XXXLOCID = "620 ";
  set SL0NM610.CATOAP initialAttributes;
  set SL0NM610.CAITEM initialAttributes;

   /* ************************************************************/
   /* *** reset appl. input fld attr.s as orig.ly defined     ****/
   /* ************************************************************/

  set SL0NM610.SL0NMOP1 initialAttributes;
  set SL0NM610.SL0NMOP2 initialAttributes;

   /* ************************************************************/
   /* *** if item data entered: error (option not entered)    ****/
   /* ************************************************************/

  if (SL0NM610.CAITEM > " ")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "620F";
    SLWREC.SLWMSGNO = 0002; /* <--- option required msg*/
    set SL0NM610.CAITEM cursor, bold;
    exit stack;
  end

   /* ************************************************************/
   /* *** if any of the following pfkeys:                     ****/
   /* *** xsexit to the specified application  or             ****/
   /* *** the FLOW section will transfer control to the       ****/
   /* *** appropriate level regardless of previous errors     ****/
   /* *** re: reset completed & no processing code executed   ****/
   /* ************************************************************/

  if (converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16)
    exit stack;
  end

   /* ************************************************************/
   /* *** if ENTER: do edits & process inputs                 ****/
   /* ************************************************************/

  if (converseVar.eventKey is enter)
    SL0NSH6(); /* <=== enter processing*/
    exit stack;
  end

   /* ************************************************************/
   /* *** if this code is executed (control drops thru),      ****/
   /* *** then use invalid pfkey was pressed msg              ****/
   /* ************************************************************/

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "620I";
  SLWREC.SLWMSGNO = 0004; /* <--- invlaid pfkey msg*/

   /* ************************************************************/
   /* *** end of CONVERSE AFTER section                       ****/
   /* ************************************************************/


end // end SL0N620

// setup parmater fields
Function SL0NS1A()


  set XZZREC empty;
  XZZREC.XZZQRYID = "SL5510  ";
  SL0NW01.XWHCD = SL0NM110.XWHCD;
  XZZREC.XZZQRYRN = SL0NW01.SL0NWWCN;
  XZZREC.XZZ1CHR1 = SL0NM110.SL0NMOP3;
  XZZREC.XZZ1CHR2 = SL0NM110.SL0NMOP2;
  XZZREC.XZZ2CHR1 = SL0NM110.XWHCD;
  SLWREC.SLWINDTE = SL0NM110.SL0NMOP1;
  SLWREC.SLWWKMM = SLWREC.SLWINMM;
  SLWREC.SLWWKDD = SLWREC.SLWINDD;
  SLWREC.SLWWKYY = SLWREC.SLWINYY;
  XZZREC.XZZINT1 = SLWREC.SLWWKDTE;
  SL0NW01.SL0NWDTE = SLWREC.SLWWKDTE;
   /* ******************************************************/
   /* ******************************************************/
   /* *** save area & zone fields                       ****/
   /* ******************************************************/
  SL0NWC2A = SL0NMAR[1];
  SL0NWC2B = SL0NMZN[1];
  move SL0NWCH4 to XZZ4CHR1 withV60Compat;

  SL0NWC2A = SL0NMAR[2];
  SL0NWC2B = SL0NMZN[2];
  move SL0NWCH4 to XZZ4CHR2 withV60Compat;

  SL0NWC2C = SL0NMAR[3];
  SL0NWC2D = SL0NMZN[3];
  move SL0NWCH6 to XZZ6CHR withV60Compat;

  SL0NWC2E = SL0NMAR[4];
  SL0NWC2F = SL0NMZN[4];
  SL0NWC2G = SL0NMAR[5];
  SL0NWC2H = SL0NMZN[5];
  move SL0NWCH8 to XZZ8CHR withV60Compat;

  XSX3CTM(); /* <=== get current time*/

   /* ******************************************************/
   /* *** end of statement group                        ****/
   /* ******************************************************/


end // end SL0NS1A

// add parms to database
Function SL0NS1B()


  XSXZZA0(); /* <=== add parm rec call*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SLWREC.SLWMSGNO = 0136; /* <--- successful msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S1BA";
    SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    if (SL0NW01.SL0NWDTE == XZZREC.XZZINT1
     && SL0NM110.SL0NMOP2 == XZZREC.XZZ1CHR2)
      if (SL0NM110.SL0NMOP3 == XZZREC.XZZ1CHR1)
        SLWREC.SLWMSGNO = 0133; /* <--- already exists msg*/
        return;
      else
        XSXZZD0(); /* <=== delete request*/
        if (SL0NM110.SL0NMOP3 == "N")
          SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
          return;
        else
          SL0NS1A(); /* <=== setup parm fields*/
          XSXZZA0(); /* <=== add parm rec*/
          if (SQLCA.VAGen_SQLCODE == 0)
            SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
            return;
          else
            SLWREC.SLWERRSW = "Y";
            SLWREC.XXXLOCID = "S1BB";
            SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
            return;
          end
        end
      end
    else
      SLWREC.SLWMSGNO = 0135; /* <--- no more requests msg*/
      return;
    end
  end

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "S1BC";
  SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/


end // end SL0NS1B

// validate area
Function SL0NS1C()


   /* ************************************************************/
   /* *** if area code in tbl & active: continue              ****/
   /* ************************************************************/

  SLWREC.SLWTBLCD = SL0NM110.SL0NMAR[SLWIDX01];
  if (SLWREC.SLWTBLKY in XARTBL.XARKEY
   && SLWREC.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* ** next sentence ***/
    else
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "S1CA";
      SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
      set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S1CB";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NS1C

// validate area/zone combo
Function SL0NS1D()


   /* ************************************************************/
   /* *** area/zone combination must be found                 ****/
   /* ************************************************************/

  TA1REC.TA1LOCAT[2] = "SL0NS1D ";
  TA1REC.TA1MAP = SLWREC.SLWTAMAP;

  SL4REC.XWHCD = SLWREC.XWHCD;
  SL4REC.XARCD = SL0NM110.SL0NMAR[SLWIDX01];
  SL4REC.SL4ZONE = SL0NM110.SL0NMZN[SLWIDX01];

  XSSL4I0(); /* <=== std prod loctn inquiry*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "S1DA";
      SLWREC.SLWMSGNO = 0011; /* <--- try again msg*/
      set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
      set SL0NM110.SL0NMZN[SLWIDX01] bold;
      return;
    end
    if (SQLCA.VAGen_SQLCODE == -911)
      SLWREC.SLWERRSW = "Y";
      SLWREC.SLWSKYSW = "N";
      SLWREC.XXXLOCID = "S1DB";
      SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
      set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
      set SL0NM110.SL0NMZN[SLWIDX01] bold;
      return;
    end
    if (SQLCA.VAGen_SQLCODE == -811)
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "S1DC";
      SLWREC.SLWMSGNO = 0001; /* <--- dupl rows/severe error msg*/
      set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
      set SL0NM110.SL0NMZN[SLWIDX01] bold;
      return;
    end
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S1DD";
    SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
    set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
    set SL0NM110.SL0NMZN[SLWIDX01] bold;
    return;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NS1D

// setup parmater fields
Function SL0NS2A()


  set XZZREC empty;
  XZZREC.XZZQRYID = "SL5520  ";
  SL0NW02.XWHCD = SL0NM210.XWHCD;
  XZZREC.XZZQRYRN = SL0NW02.SL0NWWCN;
  XZZREC.XZZ1CHR1 = SL0NM210.SL0NMOP2;
  XZZREC.XZZ2CHR1 = SL0NM210.XWHCD;
  XZZREC.XZZINT1 = SL0NM210.SL0NMOP1;

  XSX3CTM(); /* <=== get current time*/

   /* ******************************************************/
   /* *** end of statement group                        ****/
   /* ******************************************************/


end // end SL0NS2A

// add parms to database
Function SL0NS2B()


  XSXZZA0(); /* <=== add parm rec call*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SLWREC.SLWMSGNO = 0136; /* <--- successful msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S2BA";
    SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    if (SL0NM210.SL0NMOP1 == XZZREC.XZZINT1)
      if (SL0NM210.SL0NMOP2 == XZZREC.XZZ1CHR1)
        SLWREC.SLWMSGNO = 0133; /* <--- already exists msg*/
        return;
      else
        XSXZZD0(); /* <=== delete request*/
        if (SL0NM210.SL0NMOP2 == "N")
          SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
          return;
        else
          SL0NS2A(); /* <=== setup parm fields*/
          XSXZZA0(); /* <=== add parm rec*/
          if (SQLCA.VAGen_SQLCODE == 0)
            SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
            return;
          else
            SLWREC.SLWERRSW = "Y";
            SLWREC.XXXLOCID = "S2BB";
            SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
            return;
          end
        end
      end
    else
      SLWREC.SLWMSGNO = 0135; /* <--- no more requests msg*/
      return;
    end
  end

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "S2BC";
  SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/


end // end SL0NS2B

// setup parmater fields
Function SL0NS3A()


  set XZZREC empty;
  XZZREC.XZZQRYID = "SL5530  ";
  SL0NW03.XWHCD = SL0NM310.XWHCD;
  XZZREC.XZZQRYRN = SL0NW03.SL0NWWCN;
  XZZREC.XZZ1CHR1 = SL0NM310.SL0NMOP1;
  XZZREC.XZZ2CHR1 = SL0NM310.XWHCD;

  XSX3CTM(); /* <=== get current time*/

   /* ******************************************************/
   /* *** end of statement group                        ****/
   /* ******************************************************/


end // end SL0NS3A

// add parms to database
Function SL0NS3B()


  XSXZZA0(); /* <=== add parm rec call*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SLWREC.SLWMSGNO = 0136; /* <--- successful msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S3BA";
    SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    if (SL0NM310.SL0NMOP1 == XZZREC.XZZ1CHR1)
      SLWREC.SLWMSGNO = 0133; /* <--- already exists msg*/
      return;
    else
      XSXZZD0(); /* <=== delete request*/
      if (SL0NM310.SL0NMOP1 == "N")
        SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
        return;
      else
        SL0NS3A(); /* <=== setup parm fields*/
        XSXZZA0(); /* <=== add parm rec*/
        if (SQLCA.VAGen_SQLCODE == 0)
          SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
          return;
        else
          SLWREC.SLWERRSW = "Y";
          SLWREC.XXXLOCID = "S3BB";
          SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
          return;
        end
      end
    end
  end

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "S3BC";
  SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/


end // end SL0NS3B

// setup parmater fields
Function SL0NS4A()


  set XZZREC empty;
  XZZREC.XZZQRYID = "SL5540  ";
  SL0NW04.XWHCD = SL0NM410.XWHCD;
  XZZREC.XZZQRYRN = SL0NW04.SL0NWWCN;
  XZZREC.XZZ1CHR1 = SL0NM410.SL0NMOP2;
  XZZREC.XZZ1CHR2 = SL0NM410.SL0NMOP1;
  XZZREC.XZZ2CHR1 = SL0NM410.XWHCD;

  XSX3CTM(); /* <=== get current time*/

   /* ******************************************************/
   /* *** end of statement group                        ****/
   /* ******************************************************/


end // end SL0NS4A

// add parms to database
Function SL0NS4B()


  XSXZZA0(); /* <=== add parm rec call*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SLWREC.SLWMSGNO = 0136; /* <--- successful msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S4BA";
    SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    if (SL0NM410.SL0NMOP1 == XZZREC.XZZ1CHR2)
      if (SL0NM410.SL0NMOP2 == XZZREC.XZZ1CHR1)
        SLWREC.SLWMSGNO = 0133; /* <--- already exists msg*/
        return;
      else
        XSXZZD0(); /* <=== delete request*/
        if (SL0NM410.SL0NMOP2 == "N")
          SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
          return;
        else
          SL0NS1A(); /* <=== setup parm fields*/
          XSXZZA0(); /* <=== add parm rec*/
          if (SQLCA.VAGen_SQLCODE == 0)
            SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
            return;
          else
            SLWREC.SLWERRSW = "Y";
            SLWREC.XXXLOCID = "S4BB";
            SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
            return;
          end
        end
      end
    else
      SLWREC.SLWMSGNO = 0135; /* <--- no more requests msg*/
      return;
    end
  end

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "S4BC";
  SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/


end // end SL0NS4B

// setup parmater fields
Function SL0NS5A()


  set XZZREC empty;
  XZZREC.XZZQRYID = "SL5500  ";
  SL0NW05.XWHCD = SL0NM510.XWHCD;
  XZZREC.XZZQRYRN = SL0NW05.SL0NWWCN;
  XZZREC.XZZ1CHR1 = SL0NM510.SL0NMOP1;
  XZZREC.XZZ2CHR1 = SL0NM510.XWHCD;

  XSX3CTM(); /* <=== get current time*/

   /* ******************************************************/
   /* *** end of statement group                        ****/
   /* ******************************************************/


end // end SL0NS5A

// add parms to database
Function SL0NS5B()


  XSXZZA0(); /* <=== add parm rec call*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SLWREC.SLWMSGNO = 0136; /* <--- successful msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S5BA";
    SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    if (SL0NM510.SL0NMOP1 == XZZREC.XZZ1CHR1)
      SLWREC.SLWMSGNO = 0133; /* <--- already exists msg*/
      return;
    else
      XSXZZD0(); /* <=== delete request*/
      if (SL0NM510.SL0NMOP1 == "N")
        SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
        return;
      else
        SL0NS5A(); /* <=== setup parm fields*/
        XSXZZA0(); /* <=== add parm rec*/
        if (SQLCA.VAGen_SQLCODE == 0)
          SLWREC.SLWMSGNO = 0134; /* <--- print tonight chgd msg*/
          return;
        else
          SLWREC.SLWERRSW = "Y";
          SLWREC.XXXLOCID = "S5BB";
          SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
          return;
        end
      end
    end
  end

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "S5BC";
  SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/


end // end SL0NS5B

// setup parmater fields
Function SL0NS6A()


  set XZZREC empty;
  XZZREC.XZZQRYID = "SL3500  ";
  SL0NW06.XWHCD = SL0NM610.XWHCD;
  XZZREC.XZZ2CHR1 = SL0NM610.XWHCD;
  XZZREC.XZZQRYRN = SL0NW06.SL0NWWCN;
  XZZREC.XZZ1CHR1 = SL0NM610.SL0NMOP1;
  XZZREC.XZZSINT1 = SL0NM610.SL0NMOP2;

  XSX3CTM(); /* <=== get current time*/

   /* ******************************************************/
   /* *** end of statement group                        ****/
   /* ******************************************************/


end // end SL0NS6A

// add parms to database
Function SL0NS6B()


  XSXZZA0(); /* <=== add parm rec call*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SLWREC.SLWMSGNO = 0136; /* <--- successful msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "S6BA";
    SLWREC.SLWMSGNO = 0031; /* <--- try again msg*/
    return;
  end

  if (SQLCA.VAGen_SQLCODE == -803)
    if (SL0NM610.SL0NMOP1 == XZZREC.XZZ1CHR1
     && SL0NM610.SL0NMOP2 == XZZREC.XZZSINT1)

      SLWREC.SLWMSGNO = 0133; /* <--- already exists msg*/
      return;
    else
      XSXZZD0(); /* <=== delete request*/
      if (SL0NM610.SL0NMOP1 == "N")
        SLWREC.SLWMSGNO = 0428; /* <--- process auto letup chg msg*/
        return;
      else
        SL0NS6A(); /* <=== setup parm fields*/
        XSXZZA0(); /* <=== add parm rec*/
        if (SQLCA.VAGen_SQLCODE == 0)
          SLWREC.SLWMSGNO = 0428; /* <--- process auto letup chg msg*/
          return;
        else
          SLWREC.SLWERRSW = "Y";
          SLWREC.XXXLOCID = "S6BB";
          SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/
          return;
        end
      end
    end
  end

  SLWREC.SLWERRSW = "Y";
  SLWREC.XXXLOCID = "S6BC";
  SLWREC.SLWMSGNO = 0001; /* <--- severe error msg*/

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/


end // end SL0NS6B

// missing input edits
Function SL0NSA0()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: setup defaults for optional fields, if any    ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM010.XMSLMSNO > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA0A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM010.XMSLMSNO cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA0

// missing input edits
Function SL0NSA1()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: defaults setup during initialization          ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM110.SL0NMOP3 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA1A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM110.SL0NMOP3 cursor, bold;
  end
  if (SL0NM110.SL0NMOP2 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA1B";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM110.SL0NMOP2 cursor, bold;
  end
  if (SL0NM110.SL0NMOP1 > 0)
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA1C";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM110.SL0NMOP1 cursor, bold;
  end
  if (SL0NM110.XWHCD > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA1D";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM110.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA1

// missing input edits
Function SL0NSA2()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: defaults setup during initialization          ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM210.SL0NMOP2 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA2A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM210.SL0NMOP2 cursor, bold;
  end
  if (SL0NM210.SL0NMOP1 > 0)
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA2B";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM210.SL0NMOP1 cursor, bold;
  end
  if (SL0NM210.XWHCD > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA2C";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM210.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA2

// missing input edits
Function SL0NSA3()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: defaults setup during initialization          ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM310.SL0NMOP1 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA3A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM310.SL0NMOP1 cursor, bold;
  end
  if (SL0NM310.XWHCD > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA3B";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM310.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA3

// missing input edits
Function SL0NSA4()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: defaults setup during initialization          ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM410.SL0NMOP2 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA4A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM410.SL0NMOP2 cursor, bold;
  end
  if (SL0NM410.SL0NMOP1 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA4B";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM410.SL0NMOP1 cursor, bold;
  end
  if (SL0NM410.XWHCD > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA4C";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM410.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA4

// missing input edits
Function SL0NSA5()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: defaults setup during initialization          ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM510.SL0NMOP1 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA5A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM510.SL0NMOP1 cursor, bold;
  end
  if (SL0NM510.XWHCD > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA5B";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM510.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA5

// missing input edits
Function SL0NSA6()


   /* ************************************************************/
   /* *** setup error for each missing field                  ****/
   /* *** note: defaults setup during initialization          ****/
   /* *** note: check in reverse order as in edits            ****/
   /* ************************************************************/

  if (SL0NM610.SL0NMOP1 > " ")
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA6A";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM610.SL0NMOP1 cursor, bold;
  end

  if (SL0NM610.SL0NMOP2 > 0)
     /* ** next sentence ***/
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SA6B";
    SLWREC.SLWMSGNO = 0009; /* <--- missing required field msg*/
    set SL0NM610.SL0NMOP2 cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSA6

// key field edits
Function SL0NSC1()


   /* ************************************************************/
   /* *** edit all individual fields, even if error detected  ****/
   /* *** note: use reverse order to sync msg, cursor & attr. ****/
   /* ***       do not test for modified fields (CSP resets)  ****/
   /* ************************************************************/

  if (SL0NM110.SL0NMOP3 != "Y"
   && SL0NM110.SL0NMOP3 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1A";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM110.SL0NMOP3 cursor, bold;
  end

  if (SL0NM110.SL0NMOP2 != "Y"
   && SL0NM110.SL0NMOP2 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1B";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM110.SL0NMOP2 cursor, bold;
  end

   /* ************************************************************/
   /* *** validate entered date using ta0040.                 ****/
   /* ************************************************************/

  set TA2REC empty;
  TA2REC.TA2GRGAN = SL0NM110.SL0NMOP1;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  call "TA0040" (TA2REC) {isNoRefresh = yes};
  if (TA2REC.TA2RTNCD != 0)
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1C";
    SLWREC.SLWMSGNO = 011; /* <---invalid value msg*/
    set SL0NM110.SL0NMOP1 cursor, bold;
  end

   /* ************************************************************/
   /* *** if warehouse code in tbl & active: put abrv. on map ****/
   /* ************************************************************/

  if (SL0NM110.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* ** next sentence ***/
    else
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "SC1D";
      SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
      set SL0NM110.XWHCD cursor, bold;
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1E";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM110.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSC1

// key field edits
Function SL0NSC2()


   /* ************************************************************/
   /* *** edit all individual fields, even if error detected  ****/
   /* *** note: use reverse order to sync msg, cursor & attr. ****/
   /* ***       do not test for modified fields (CSP resets)  ****/
   /* ************************************************************/

  if (SL0NM210.SL0NMOP2 != "Y"
   && SL0NM210.SL0NMOP2 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1A";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM210.SL0NMOP2 cursor, bold;
  end

   /* ************************************************************/
   /* *** if warehouse code in tbl & active: put abrv. on map ****/
   /* ************************************************************/

  if (SL0NM210.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* ** next sentence ***/
    else
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "SC1B";
      SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
      set SL0NM210.XWHCD cursor, bold;
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1C";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM210.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSC2

// key field edits
Function SL0NSC3()


   /* ************************************************************/
   /* *** edit all individual fields, even if error detected  ****/
   /* *** note: use reverse order to sync msg, cursor & attr. ****/
   /* ***       do not test for modified fields (CSP resets)  ****/
   /* ************************************************************/

  if (SL0NM310.SL0NMOP1 != "Y"
   && SL0NM310.SL0NMOP1 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1A";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM310.SL0NMOP1 cursor, bold;
  end

   /* ************************************************************/
   /* *** if warehouse code in tbl & active: put abrv. on map ****/
   /* ************************************************************/

  if (SL0NM310.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* ** next sentence ***/
    else
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "SC1B";
      SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
      set SL0NM310.XWHCD cursor, bold;
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1C";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM310.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSC3

// key field edits
Function SL0NSC4()


   /* ************************************************************/
   /* *** edit all individual fields, even if error detected  ****/
   /* *** note: use reverse order to sync msg, cursor & attr. ****/
   /* ***       do not test for modified fields (CSP resets)  ****/
   /* ************************************************************/

  if (SL0NM410.SL0NMOP2 != "Y"
   && SL0NM410.SL0NMOP2 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC12";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM410.SL0NMOP2 cursor, bold;
  end

  if (SL0NM410.SL0NMOP1 != "F"
   && SL0NM410.SL0NMOP1 != "C"
   && SL0NM410.SL0NMOP1 != "P"
   && SL0NM410.SL0NMOP1 != "A")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1B";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM410.SL0NMOP1 cursor, bold;
  end

   /* ************************************************************/
   /* *** if warehouse code in tbl & active: put abrv. on map ****/
   /* ************************************************************/

  if (SL0NM410.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* ** next sentence ***/
    else
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "SC1C";
      SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
      set SL0NM410.XWHCD cursor, bold;
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1D";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM410.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSC4

// key field edits
Function SL0NSC5()


   /* ************************************************************/
   /* *** edit all individual fields, even if error detected  ****/
   /* *** note: use reverse order to sync msg, cursor & attr. ****/
   /* ***       do not test for modified fields (CSP resets)  ****/
   /* ************************************************************/

  if (SL0NM510.SL0NMOP1 != "Y"
   && SL0NM510.SL0NMOP1 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1A";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM510.SL0NMOP1 cursor, bold;
  end

   /* ************************************************************/
   /* *** if warehouse code in tbl & active: put abrv. on map ****/
   /* ************************************************************/

  if (SL0NM510.XWHCD in XWHTBL.XWHCD)
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* ** next sentence ***/
    else
      SLWREC.SLWERRSW = "Y";
      SLWREC.XXXLOCID = "SC1B";
      SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
      set SL0NM510.XWHCD cursor, bold;
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC1C";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM510.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSC5

// key field edits
Function SL0NSC6()


   /* ************************************************************/
   /* *** edit all individual fields, even if error detected  ****/
   /* *** note: use reverse order to sync msg, cursor & attr. ****/
   /* ***       do not test for modified fields (CSP resets)  ****/
   /* ************************************************************/

  if (SL0NM610.SL0NMOP1 != "Y"
   && SL0NM610.SL0NMOP1 != "N")
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC6A";
    SLWREC.SLWMSGNO = 0257; /* <--- only 'y','n' valid values*/
    set SL0NM610.SL0NMOP1 cursor, bold;
  end

   /* ************************************************************/
   /* *** if warehouse code in tbl & active: put abrv. on map ****/
   /* ************************************************************/

  if (SL0NM610.XWHCD in XWHTBL.XWHCD)
    if (SL0NM610.XWHCD == "02" /* <--- valid whse*/
     || SL0NM610.XWHCD == "04" 
     || SL0NM610.XWHCD == "07")

      if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
         /* ** next sentence ***/
      else
        SLWREC.SLWERRSW = "Y";
        SLWREC.XXXLOCID = "SC6B";
        SLWREC.SLWMSGNO = 0010; /* <--- inactive msg*/
        set SL0NM610.XWHCD cursor, bold;
      end
    else /* <--- not valid whse*/
      SL0NM010.XMSLMSNO = " ";
      SLWREC.SLWERRSW = "N";
      SLWREC.XXXLOCID = "020 ";
      SLWREC.SLWMSGNO = 197;
      SL0N020();
    end
  else
    SLWREC.SLWERRSW = "Y";
    SLWREC.XXXLOCID = "SC6C";
    SLWREC.SLWMSGNO = 0011; /* <--- invalid value msg*/
    set SL0NM610.XWHCD cursor, bold;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSC6

// rel field edits
Function SL0NSD1()

   /* ************************************************************/
   /* *** if zone is entered, area must be entered            ****/
   /* *** note: exit immediately if any error detected        ****/
   /* ************************************************************/

  SLWREC.SLWIDX01 = 1;
  SLWREC.XWHCD = SL0NM110.XWHCD;

  while (SLWREC.SLWIDX01 <= SLWREC.SLWLINPP)
    if (SL0NM110.SL0NMZN[SLWIDX01] > "  ")
      if (SL0NM110.SL0NMAR[SLWIDX01] == "  ")
        SLWREC.SLWERRSW = "Y";
        SLWREC.XXXLOCID = "SD1A";
        SLWREC.SLWMSGNO = 0009; /* <--- required fld msg*/
        set SL0NM110.SL0NMAR[SLWIDX01] cursor, bold;
        return;
      else
        SL0NS1C(); /* <--- validate area*/
        if (SLWREC.SLWERRSW == "Y")
          return;
        end
        SL0NS1D(); /* <--- validate area/zone comb*/
        if (SLWREC.SLWERRSW == "Y")
          return;
        end
      end
    else
      if (SL0NM110.SL0NMAR[SLWIDX01] > "  ")
        SL0NS1C(); /* <--- validate area*/
        if (SLWREC.SLWERRSW == "Y")
          return;
        end
      end
    end
    SLWREC.SLWIDX01 = SLWREC.SLWIDX01 + 1;
  end

   /* ************************************************************/
   /* *** end of statement group                              ****/
   /* ************************************************************/
end // end SL0NSD1

// ENTER processing
Function SL0NSH0()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA0(); /* <=== missing input edits*/

   /* ************************************************************/
   /* *** no missing fields:                                  ****/
   /* *** invalid selection detected in flow when             ****/
   /* *** transfer of control is attempted                    ****/
   /* ************************************************************/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH0

// ENTER processing
Function SL0NSH1()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA1(); /* <=== missing input edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** data present & changed: edit individual fields      ****/
   /* ************************************************************/

  SL0NSC1(); /* <=== field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** rel field edits                                     ****/
   /* ************************************************************/

  SL0NSD1(); /* <=== rel field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** no errors: save key value(s)                        ****/
   /* ************************************************************/

  COMMAREA.XWHCD = SL0NM110.XWHCD;

   /* ************************************************************/
   /* *** add parameters to database                          ****/
   /* ************************************************************/

  SL0NS1A(); /* <=== setup parm fields*/

  SL0NS1B(); /* <=== add parms to db*/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH1

// ENTER processing
Function SL0NSH2()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA2(); /* <=== missing input edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** data present & changed: edit individual fields      ****/
   /* ************************************************************/

  SL0NSC2(); /* <=== field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** no errors: save key value(s)                        ****/
   /* ************************************************************/

  COMMAREA.XWHCD = SL0NM210.XWHCD;

   /* ************************************************************/
   /* *** add parameters to database                          ****/
   /* ************************************************************/

  SL0NS2A(); /* <=== setup parm fields*/

  SL0NS2B(); /* <=== add parms to db*/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH2

// ENTER processing
Function SL0NSH3()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA3(); /* <=== missing input edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** data present & changed: edit individual fields      ****/
   /* ************************************************************/

  SL0NSC3(); /* <=== field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** no errors: save key value(s)                        ****/
   /* ************************************************************/

  COMMAREA.XWHCD = SL0NM310.XWHCD;

   /* ************************************************************/
   /* *** add parameters to database                          ****/
   /* ************************************************************/

  SL0NS3A(); /* <=== setup parm fields*/

  SL0NS3B(); /* <=== add parms to db*/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH3

// ENTER processing
Function SL0NSH4()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA4(); /* <=== missing input edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** data present & changed: edit individual fields      ****/
   /* ************************************************************/

  SL0NSC4(); /* <=== field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** no errors: save key value(s)                        ****/
   /* ************************************************************/

  COMMAREA.XWHCD = SL0NM410.XWHCD;

   /* ************************************************************/
   /* *** add parameters to database                          ****/
   /* ************************************************************/

  SL0NS4A(); /* <=== setup parm fields*/

  SL0NS4B(); /* <=== add parms to db*/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH4

// ENTER processing
Function SL0NSH5()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA5(); /* <=== missing input edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** data present & changed: edit individual fields      ****/
   /* ************************************************************/

  SL0NSC5(); /* <=== field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** no errors: save key value(s)                        ****/
   /* ************************************************************/

  COMMAREA.XWHCD = SL0NM510.XWHCD;

   /* ************************************************************/
   /* *** add parameters to database                          ****/
   /* ************************************************************/

  SL0NS5A(); /* <=== setup parm fields*/

  SL0NS5B(); /* <=== add parms to db*/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH5

// ENTER processing
Function SL0NSH6()


   /* ************************************************************/
   /* *** check for missing fields                            ****/
   /* ************************************************************/

  SL0NSA6(); /* <=== missing input edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** data present & changed: edit individual fields      ****/
   /* ************************************************************/

  SL0NSC6(); /* <=== field edits*/

  if (SLWREC.SLWERRSW == "Y")
    return;
  end

   /* ************************************************************/
   /* *** no errors: save key value(s)                        ****/
   /* ************************************************************/


   /* ************************************************************/
   /* *** add parameters to database                          ****/
   /* ************************************************************/

  SL0NS6A(); /* <=== setup parm fields*/

  SL0NS6B(); /* <=== add parms to db*/

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSH6

// CAITEM  processing
Function SL0NSY0()


   /* ************************************************************/
   /* *** if entered, use CAITEM data by first moving it to   ****/
   /* *** a ws field to make use of it with "redefines"       ****/
   /* *** note: CAITEM = character data as passed             ****/
   /* ************************************************************/

  SLWREC.CAITEM = COMMAREA.CAITEM;

  if (SLWREC.SLWCASNO > " ")
    SL0NM010.XMSLMSNO = SLWREC.SLWCASNO;
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SL0NSY0

//*** RECORD=SL0NW01 ****
// ************************************************************
// 
//           STOCK LOCATE INQUIRY SKELETON
//           =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are used specifically
//           by an application/function.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 01-26-87  Ward Jones   created
// 06-06-88  judy juch    added in 3 fields (sl0nwch4,
//                        sl0nwch6, sl0nwch8).
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record SL0NW01 type basicRecord
  10 SL0NWLK1 SL0NWLK1 ; 
    15 XWHCD XWHCD ; 
      20 SL0NWWCN SL0NWWCN ; 
  10 SL0NWDTE SL0NWDTE ; 
  10 SL0NWCH4 SL0NWCH4 ; 
    15 SL0NWC2A SL0NWC2A ; 
    15 SL0NWC2B SL0NWC2B ; 
  10 SL0NWCH6 SL0NWCH6 ; 
    15 SL0NWC2C SL0NWC2C ; 
    15 SL0NWC2D SL0NWC2D ; 
    15 * char(2) ; 
  10 SL0NWCH8 SL0NWCH8 ; 
    15 SL0NWC2E SL0NWC2E ; 
    15 SL0NWC2F SL0NWC2F ; 
    15 SL0NWC2G SL0NWC2G ; 
    15 SL0NWC2H SL0NWC2H ; 
end // end SL0NW01

//*** RECORD=SL0NW02 ****
// ************************************************************
// 
//           STOCK LOCATE INQUIRY SKELETON
//           =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are used specifically
//           by an application/function.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 01-26-87  Ward Jones   created
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record SL0NW02 type basicRecord
  10 SL0NWLK2 SL0NWLK2 ; 
    15 XWHCD XWHCD ; 
      20 SL0NWWCN SL0NWWCN ; 
end // end SL0NW02

//*** RECORD=SL0NW03 ****
// ************************************************************
// 
//           STOCK LOCATE INQUIRY SKELETON
//           =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are used specifically
//           by an application/function.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 01-26-87  Ward Jones   created
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record SL0NW03 type basicRecord
  10 SL0NWLK3 SL0NWLK3 ; 
    15 XWHCD XWHCD ; 
      20 SL0NWWCN SL0NWWCN ; 
end // end SL0NW03

//*** RECORD=SL0NW04 ****
// ************************************************************
// 
//           STOCK LOCATE INQUIRY SKELETON
//           =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are used specifically
//           by an application/function.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 01-26-87  Ward Jones   created
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record SL0NW04 type basicRecord
  10 SL0NWLK4 SL0NWLK4 ; 
    15 XWHCD XWHCD ; 
      20 SL0NWWCN SL0NWWCN ; 
end // end SL0NW04

//*** RECORD=SL0NW05 ****
// ************************************************************
// 
//           STOCK LOCATE INQUIRY SKELETON
//           =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are used specifically
//           by an application/function.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 01-26-87  Ward Jones   created
// 
// 
// ************************************************************
// ************************************************************
// ***********************
Record SL0NW05 type basicRecord
  10 SL0NWLK5 SL0NWLK5 ; 
    15 XWHCD XWHCD ; 
      20 SL0NWWCN SL0NWWCN ; 
end // end SL0NW05

//*** RECORD=SL0NW06 ****
// ************************************************************
// 
//           STOCK LOCATE INQUIRY SKELETON
//           =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are used specifically
//           by auto letup process request.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 06-10-92  SHENDE       created
// 
// ************************************************************
// ***********************
Record SL0NW06 type basicRecord
  10 SL0NWLK6 SL0NWLK6 ; 
    15 XWHCD XWHCD ; 
      20 SL0NWWCN SL0NWWCN ; 
end // end SL0NW06

// ws 2 char work fld - a
DataItem SL0NWC2A char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - b
DataItem SL0NWC2B char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - c
DataItem SL0NWC2C char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - d
DataItem SL0NWC2D char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - e
DataItem SL0NWC2E char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - f
DataItem SL0NWC2F char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - g
DataItem SL0NWC2G char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 2 char work fld - h
DataItem SL0NWC2H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 4 char work fld
DataItem SL0NWCH4 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 6 char work fld
DataItem SL0NWCH6 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws 8 char work fld
DataItem SL0NWCH8 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// db host date
DataItem SL0NWDTE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// complete last key
DataItem SL0NWLK1 char(2)  {
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// complete last key
DataItem SL0NWLK2 char(2)  {
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// complete last key
DataItem SL0NWLK3 char(2)  {
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// complete last key
DataItem SL0NWLK4 char(2)  {
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// complete last key
DataItem SL0NWLK5 char(2)  {
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// complete last key
DataItem SL0NWLK6 char(2)  {
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// whse code numeric
DataItem SL0NWWCN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

