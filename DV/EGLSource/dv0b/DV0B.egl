package dv0b;

import corpcom2.XPCREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPDV-00000;
import corpcom3.XPXDM01;
import corpcom3.XPXGP01;
import corpcom3.XPXPC01;
import corpcom3.XPXX001;
import corpcom4.XSDVS-EXIT;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXX-MAP-FMAT-FL;
import corpcom7.XXX-RQT-DATA-FL;
import corpx1.XDM-DIM-CD;
import corpx1.XDMTBL;
import corpx1.XGP-GPC-CD;
import corpx1.XGPTBL;
import corpx1.XPCTBL;
import corpx2.XPC-PROD-CAT-CD;
import dv.common.DVWREC;
import sy.common.SY-COLR-CD-ID;
import sy.common.SY-STY-COLR-DESC;
import sy.common.SY-STY-NBR;
import sy.common.SY2REC;
import ta.common.TA1REC;
import ta.common.TAEREC;
//*** PROGRAM=DV0B ****
// This application allows a user to inquire on and maintain a
// row in a DB2 table.
// 
// The screen is displayed for the user to enter the key to the
// table row for which data is to be displayed.
// 
// The entered data is verified to be complete and correct.
// The requested table row is selected and the data is
// formatted and displayed to the user.
// 
// If the user has sufficient security to change the data, the
// modifiable fields remain unprotected.  Otherwise, they are
// protected from modification by the user.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update was completed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/30/93  xxxxxx  New application.
// *********************
Program DV0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DV0BW00 DV0BW00; // record
  DV0BW01 DV0BW01; // record
  DVWREC DVWREC; // record
  SQLCA SQLCA; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  XPCREC XPCREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDMTBL; // table
  use XGPTBL; // table
  use XPCTBL; // table
  use DV0BM.DV0BM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPDV-00000: XPDV-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    ;
    set DV0BM001 initial; /* M001 input/output*/
    set DV0BW00 empty; /* Working storage*/
    set DV0BW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XPCREC empty; /* Product category table row*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    ;
    DV0BW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    DV0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    ;
     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/
    ;
    DV0BW01.XGP-GPC-CD = DVWREC.XGP-GPC-CD; /* GPC code*/
    ;
    if (COMMAREA.CAITEM > " ") /* Style was passed*/
      ;
      DV0BM001.XGP-GPC-CD = DVWREC.XGP-GPC-CD; /* GPC code*/
      DV0BM001.SY-STY-NBR = COMMAREA.CAITEM; /* Style number*/
      ;
      COMMAREA.CAITEM = " "; /* Clear application data*/
      ;
      DV0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
      ;
    end
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto DV0B-00000; /* Converse the main process*/
    ;
    ;
    DV0B-00000: DV0B-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto DV0B-00000; /* Converse the main process*/
    ;
    ;
  end // end main
end // end DV0B

// Main process to display a map
Function DV0B-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  DV0B-10000(); /* Obtain the data to display*/
  ;
  DV0B-20000(); /* Format and display the map*/
  ;
  DV0B-30000(); /* Check attention identifier*/
  ;
  DV0B-40000(); /* Verify the entered data*/
  ;
  DV0B-50000(); /* Process valid input request*/
  ;
  ;
end // end DV0B-00000

// Obtain the data to display
Function DV0B-10000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/
  ;
  set DV0BW01 empty; /* M001 display storage*/
  ;
  DV0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
  ;
  DV0BW01.XGP-GPC-CD = DV0BM001.XGP-GPC-CD; /* GPC*/
  DV0BW01.SY-STY-NBR = DV0BM001.SY-STY-NBR; /* Style*/
  DV0BW01.SY-COLR-CD-ID = DV0BM001.SY-COLR-CD-ID; /* Color*/
  DV0BW01.XDM-DIM-CD = DV0BM001.XDM-DIM-CD; /* Dimension*/
  ;
   /* ------------------------------------------------------------*/
   /* Establish defaults for fields left blank by the user.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BW01.SY-COLR-CD-ID == " ") /* Color identification*/
    DV0BW01.SY-COLR-CD-ID = "00 "; /* Default value*/
  end
  ;
  if (DV0BW01.XDM-DIM-CD == " ") /* Dimension code*/
    DV0BW01.XDM-DIM-CD = "00"; /* Default value*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set SY2REC empty; /* Clear row storage area*/
  ;
  SY2REC.XGPCD = DV0BW01.XGP-GPC-CD; /* GPC code*/
  SY2REC.SY1STNBR = DV0BW01.SY-STY-NBR; /* Style number*/
  SY2REC.SY2CLRID = DV0BW01.SY-COLR-CD-ID; /* Color identifcation*/
  SY2REC.XDMCD = DV0BW01.XDM-DIM-CD; /* Dimension code*/
  ;
  DV0BS-IO0130-S(); /* Select the table row*/
  ;
   /* ------------------------------------------------------------*/
   /* Save the data from the table row in display storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
    ;
    DV0BW01.SY-STY-COLR-DESC = SY2REC.SY2CLRDS; /* Color description*/
    DV0BW01.XPC-PROD-CAT-CD = SY2REC.XPCCD; /* Category code*/
    ;
  else
    ;
    DVWREC.XXX-MSG-LOC-ID = "10000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/
  ;
  DV0BW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
  ;
  ;
end // end DV0B-10000

// Format and converse the map
Function DV0B-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    DVWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    DV0B-21000(); /* Format the data in the map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/
  ;
  DV0B-22000(); /* Check change authorization*/
  ;
   /* ------------------------------------------------------------*/
   /* Format any descriptions for codes that are displayed.*/
   /* ------------------------------------------------------------*/
  ;
  XPCREC.XPCCD = DV0BM001.XPC-PROD-CAT-CD; /* Product category code*/
  XPCREC.XGPCD = DV0BM001.XGP-GPC-CD; /* GPC code*/
  ;
  if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* Code in table*/
   && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
    DV0BM001.XPC-PROD-CAT-SDESC = XPCTBL.XPCSDESC[sysVar.arrayIndex];
                                   /* Description*/
  else
    DV0BM001.XPC-PROD-CAT-SDESC = " "; /* No description*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  DV0BM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  DV0BM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  DV0BM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (DVWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/
    ;
    if (DVWREC.XXX-MSG-NBR != 0) /* Message to display*/
      ;
      if (DVWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(DVWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      DV0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    DV0BM001.XXX-MSG-LOC-ID = DVWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/
    ;
    set DV0BM001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse DV0BM001 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  DVWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  DVWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = DV0BM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = DV0BM001.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set DV0BM001.XGP-GPC-CD normal; /* GPC code*/
  set DV0BM001.SY-STY-NBR normal; /* Style number*/
  set DV0BM001.SY-COLR-CD-ID normal; /* Color identification*/
  set DV0BM001.XDM-DIM-CD normal; /* Dimension code*/
  set DV0BM001.XPC-PROD-CAT-CD normal; /* Category code*/
  set DV0BM001.CATOAP normal; /* TO application*/
  set DV0BM001.CAITEM normal; /* Application data*/
  ;
  ;
end // end DV0B-20000

// Format the data in the map
Function DV0B-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set DV0BM001 initial; /* M001 input/output area*/
  ;
  DV0BW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/
  ;
   /* ------------------------------------------------------------*/
   /* If GPC code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BW01.XGP-GPC-CD == " ") /* GPC code missing*/
    set DV0BM001.XGP-GPC-CD cursor; /* Position cursor*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/
  ;
  DV0BM001.XGP-GPC-CD = DV0BW01.XGP-GPC-CD;
  DV0BM001.SY-STY-NBR = DV0BW01.SY-STY-NBR;
  DV0BM001.SY-COLR-CD-ID = DV0BW01.SY-COLR-CD-ID;
  DV0BM001.XDM-DIM-CD = DV0BW01.XDM-DIM-CD;
  DV0BM001.SY-STY-COLR-DESC = DV0BW01.SY-STY-COLR-DESC;
  DV0BM001.XPC-PROD-CAT-CD = DV0BW01.XPC-PROD-CAT-CD;
  ;
  ;
end // end DV0B-21000

// Check change authorization
Function DV0B-22000()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y")       /* and user authorized to change*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/
  ;
  set DV0BM001.XPC-PROD-CAT-CD skip; /* Category code*/
  ;
  ;
end // end DV0B-22000

// Check attention identifier
Function DV0B-30000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    if (DV0BW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set DV0BW01 empty; /* M001 display storage*/
    end
    ;
    DV0BW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    DV0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      XSDVS-EXIT(); /* Exit to another application*/
      ;
      set DV0BM001.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      DVWREC.XXX-MSG-LOC-ID = "30000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "DV0BM001"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "DV0A"; /* System Menu*/
    end
    ;
    XSDVS-EXIT(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "30000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end DV0B-30000

// Verify data that was entered
Function DV0B-40000()
   /* ------------------------------------------------------------*/
   /* If any lists were requested, display the popup window.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XGP-GPC-CD == "?" /* GPC list requested*/
   || DV0BM001.XDM-DIM-CD == "?" /* or dimension list requested*/
   || DV0BM001.XPC-PROD-CAT-CD == "?") /* or category list requested*/
    ;
    DV0B-41000(); /* Display corporate table lists*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set DV0BM001.CAITEM cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If key field changed, determine if any other field changed.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XGP-GPC-CD != DV0BW01.XGP-GPC-CD       /* GPC changed*/
   || DV0BM001.SY-STY-NBR != DV0BW01.SY-STY-NBR       /* or style changed*/
   || DV0BM001.SY-COLR-CD-ID != DV0BW01.SY-COLR-CD-ID /* or color changed*/
   || DV0BM001.XDM-DIM-CD != DV0BW01.XDM-DIM-CD)      /* or dimension changed*/
    ;
    DV0B-42000(); /* Highlight other changed fields*/
    ;
    /* ------------------------------------------------------------*/
    /* Determine if all the required key fields were entered.*/
    /* ------------------------------------------------------------*/
    ;
    DV0B-43000(); /* Check for required key fields*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
    /* If product category was changed, verify the entered code.*/
    /* ------------------------------------------------------------*/
    ;
    if (DV0BM001.XPC-PROD-CAT-CD != DV0BW01.XPC-PROD-CAT-CD)
      DV0B-44000(); /* Verify product category code*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EDIT requested, indicate edit completed and no errors.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf12) /* EDIT was requested*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(17); /* Edit completed and no errors*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end DV0B-40000

// Display corporate table lists
Function DV0B-41000()
   /* ------------------------------------------------------------*/
   /* Determine whether ENTER was pressed to request the lists.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
    converseLib.validationFailed(19); /* PA/PF key may not be used*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, display the list of GPC codes.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XGP-GPC-CD == "?") /* GPC list requested*/
    ;
    XPXX001(); /* Window initialization*/
    ;
    XX0XW02.XX0XWHDR = "  GPC"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXGP01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      ;
      DV0BM001.XGP-GPC-CD = DV0BW01.XGP-GPC-CD; /* Restore prior code*/
    else
      DV0BM001.XGP-GPC-CD = XGPTBL.XGPCD[XX0XWPIX]; /* Selected code*/
      ;
    end
    ;
    set DV0BM001.XGP-GPC-CD cursor; /* Position cursor*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, display the list of dimension codes.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XDM-DIM-CD == "?") /* Dimension list requested*/
    ;
    XPXX001(); /* Window initialization*/
    ;
    XX0XW02.XX0XWHDR = "  DIMENSION"; /* Heading*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDM01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      ;
      DV0BM001.XDM-DIM-CD = DV0BW01.XDM-DIM-CD; /* Restore prior code*/
    else
      DV0BM001.XDM-DIM-CD = XDMTBL.XDMCD[XX0XWPIX]; /* Selected code*/
      ;
    end
    ;
    set DV0BM001.XDM-DIM-CD cursor; /* Position cursor*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If requested, display the list of category codes.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XPC-PROD-CAT-CD == "?") /* Category list requested*/
    ;
    XPXX001(); /* Window initialization*/
    ;
    XX0XW02.XX0XWHDR = "  CATEGORY"; /* Heading*/
    ;
    XX0XW02.XGPCD = DV0BM001.XGP-GPC-CD; /* GPC code*/
    ;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPC01(); /* Display the list*/
    end
    ;
    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/
      ;
      DV0BM001.XPC-PROD-CAT-CD = DV0BW01.XPC-PROD-CAT-CD;
                                   /* Restore prior code*/
    else
      DV0BM001.XPC-PROD-CAT-CD = XPCTBL.XPCCD[XX0XWPIX];
                                   /* Selected code*/
      ;
    end
    ;
    set DV0BM001.XPC-PROD-CAT-CD cursor; /* Position cursor*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.clearScreen();
   /* Clear screen before display*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
  converseLib.validationFailed(20); /* Requested list(s) displayed*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end DV0B-41000

// Highlight other changed fields
Function DV0B-42000()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a PF key is pressed.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XPC-PROD-CAT-CD != DV0BW01.XPC-PROD-CAT-CD)
                                   /* Category changed*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "42000"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set DV0BM001.XPC-PROD-CAT-CD cursor, bold; /* Highlight*/
    ;
  end
  ;
  ;
end // end DV0B-42000

// Check for required key fields
Function DV0B-43000()
   /* ------------------------------------------------------------*/
   /* Verify that a style number was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.SY-STY-NBR <= " ") /* Style not entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0BM001.SY-STY-NBR cursor, bold; /* Highlight*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify the General Product Class code.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XGP-GPC-CD in XGPTBL.XGPCD /* Code in table*/
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
     /* NEXT SENTENCE*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0BM001.XGP-GPC-CD cursor, bold; /* Highlight*/
    ;
  end
  ;
  ;
end // end DV0B-43000

// Verify product category code
Function DV0B-44000()
   /* ------------------------------------------------------------*/
   /* Format the table search key in the row storage area.*/
   /* ------------------------------------------------------------*/
  ;
  XPCREC.XPCCD = DV0BM001.XPC-PROD-CAT-CD; /* Category code*/
  XPCREC.XGPCD = DV0BM001.XGP-GPC-CD; /* GPC code*/
  ;
   /* ------------------------------------------------------------*/
   /* Determine if the code is in the table and status is active.*/
   /* ------------------------------------------------------------*/
  ;
  if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* Code in table*/
   && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/
    ;
     /* NEXT SENTENCE*/
    ;
  else
    ;
    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0BM001.XPC-PROD-CAT-CD cursor, bold; /* Highlight*/
    ;
  end
  ;
  ;
end // end DV0B-44000

// Process valid input request
Function DV0B-50000()
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/
  ;
  DVWREC.XGP-GPC-CD = DV0BM001.XGP-GPC-CD; /* GPC code*/
  ;
   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XGP-GPC-CD != DV0BW01.XGP-GPC-CD       /* GPC changed*/
   || DV0BM001.SY-STY-NBR != DV0BW01.SY-STY-NBR       /* or style changed*/
   || DV0BM001.SY-COLR-CD-ID != DV0BW01.SY-COLR-CD-ID /* or color changed*/
   || DV0BM001.XDM-DIM-CD != DV0BW01.XDM-DIM-CD)      /* or dimension changed*/
    ;
    DV0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0BM001.XPC-PROD-CAT-CD == DV0BW01.XPC-PROD-CAT-CD) /* Category*/
    ;
    DV0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Obtain the current date and time.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Obtain date and time*/
  ;
   /* ------------------------------------------------------------*/
   /* Update the changed data in the table row.*/
   /* ------------------------------------------------------------*/
  ;
  SY2REC.XPCCD = DV0BM001.XPC-PROD-CAT-CD; /* Category code*/
  ;
  SY2REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  SY2REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
  ;
  DV0BS-IO0130-U(); /* Update the table row*/
  ;
   /* ------------------------------------------------------------*/
   /* Commit all changes and refresh the data to be displayed.*/
   /* ------------------------------------------------------------*/
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "50000"; /* Message location*/
  DVWREC.XXX-MSG-NBR = 1; /* Table update was completed*/
  ;
  DV0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
  ;
  ;
end // end DV0B-50000

// Select the table row
Function DV0BS-IO0130-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "IO0130S"; /* Message location*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end DV0BS-IO0130-S

// Update the table row
Function DV0BS-IO0130-U()
   /* ------------------------------------------------------------*/
   /* Update the specified row in the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO0130" ("U ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    /* ------------------------------------------------------------*/
    /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/
      ;
      DV0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
      ;
      DVWREC.XXX-MSG-LOC-ID = "IO0130U"; /* Message location*/
      DVWREC.XXX-MSG-NBR = 12; /* Data was updated by another*/
      ;
      exit stack; /* Exit to display map*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "IO0130U"; /* Message location*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end DV0BS-IO0130-U

//*** RECORD=DV0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record DV0BW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
end // end DV0BW00

//*** RECORD=DV0BW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record DV0BW01 type basicRecord
  10 XGP-GPC-CD XGP-GPC-CD ; 
  10 SY-STY-NBR SY-STY-NBR ; 
  10 SY-COLR-CD-ID SY-COLR-CD-ID ; 
  10 XDM-DIM-CD XDM-DIM-CD ; 
  10 SY-STY-COLR-DESC SY-STY-COLR-DESC ; 
  10 XPC-PROD-CAT-CD XPC-PROD-CAT-CD ; 
end // end DV0BW01

