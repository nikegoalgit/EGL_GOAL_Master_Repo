package dv0c;

import corpcom2.XPCREC;
import corpcom2.XX0XW01;
import corpcom3.XPDV-00000;
import corpcom4.XSDVS-EXIT;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXX-CURR-PAGE-NBR;
import corpcom7.XXX-HI-PAGE-NBR;
import corpcom7.XXX-INX-FLD-NBR;
import corpcom7.XXX-INX-LMT-NBR;
import corpcom7.XXX-LN-SEL-IND;
import corpcom7.XXX-MAP-DSP-CD;
import corpcom7.XXX-MAP-FMAT-FL;
import corpcom7.XXX-PAGE-UPD-FL;
import corpcom7.XXX-RQT-DATA-FL;
import corpcom7.XXX-TEMP-STG-LNTH;
import corpx1.XDM-DIM-CD;
import corpx1.XGP-GPC-CD;
import corpx1.XGPTBL;
import corpx1.XPCTBL;
import corpx2.XPC-PROD-CAT-CD;
import dv.common.*;
import sy.common.SY-COLR-CD-ID;
import sy.common.SY-STY-COLR-DESC;
import sy.common.SY-STY-NBR;
import sy.common.SY-STY-NM;
import sy.common.SY1REC;
import sy.common.SY2REC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
//*** PROGRAM=DV0C ****
// This application allows a user to inquire and maintain rows
// in a DB2 table.
// 
// There are two different screens that may be displayed.
// 
// The first screen displayed to the user allows specification
// of the search criteria to be used to list the rows in the
// table.  The list is displayed and the user may page backward
// and forward to view the information.
// 
// When a line is selected on the screen, the second screen is
// displayed, showing all information for that table row.
// 
// If the user has sufficient security to change the data, the
// modifiable fields remain unprotected.  Otherwise, they are
// protected from modification by the user.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update is completed.
// 
// If more that one line was selected on the first screen, the
// next selection is displayed when the user presses the ENTER
// key without making any change to the displayed data.
// 
// When the user exits the second screen (either via PF3 key or
// after all selections have been viewed) the first screen is
// redisplayed, indicating the selections that were viewed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/30/93  xxxxxx  New application.
// *********************
Program DV0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DV0CW00 DV0CW00; // record
  DV0CW01 DV0CW01; // record
  DV0CW02 DV0CW02; // record
  DVWREC DVWREC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XPCREC XPCREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL; // table
  use XPCTBL; // table
  use DV0CM.DV0CM001,  // forms
      DV0CM.DV0CM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPDV-00000: XPDV-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set DV0CM001 initial; /* M001 input/output*/
    set DV0CM002 initial; /* M002 input/output*/
    set DV0CW00 empty; /* Working storage*/
    set DV0CW01 empty; /* M001 display storage*/
    set DV0CW02 empty; /* M002 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XPCREC empty; /* Product category table row*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    DV0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    DV0CW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    DV0CW00.XXX-TEMP-STG-LNTH = 698; /* Temporary storage length*/
    DV0CW00.XXX-INX-LMT-NBR = 15; /* Number of lines on a page*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    DV0CW01.DV0CM-GPC-CD = DVWREC.XGP-GPC-CD; /* GPC code*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      DV0CM001.DV0CM-GPC-CD = DVWREC.XGP-GPC-CD; /* GPC code*/
      DV0CM001.DV0CM-STY-NBR = COMMAREA.CAITEM; /* Style number*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/

      DV0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto DV0C-00000; /* Converse the main process*/


    DV0C-00000: DV0C-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto DV0C-00000; /* Converse the main process*/


  end // end main
end // end DV0C

// Determine which map to display
Function DV0C-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-MAP-DSP-CD == "1") /* Map 1 was requested*/

    DV0C-10000(); /* Display map 1*/

    exit stack; /* Exit to display map*/

  end

  if (DV0CW00.XXX-MAP-DSP-CD == "2") /* Map 2 was requested*/

    DV0C-20000(); /* Display map 2*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Write the error to the Error Diagnosis Reporting Facility.*/
   /* ------------------------------------------------------------*/

  DVWREC.XXX-MSG-LOC-ID = "00000"; /* Message location*/
  DVWREC.XXX-MSG-NBR = 10; /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "INVALID MAP NUMBER REQUESTED"; /* Description*/
  TA1REC.TA1MAPNO = DV0CW00.XXX-MAP-DSP-CD; /* Map requested*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

   /* ------------------------------------------------------------*/
   /* Exit to display the application system menu.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "DV0A"; /* System Menu*/

  XSDVS-EXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Abnormally terminate the transaction if the exit failed.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1FUNC = "ABND"; /* Termination function*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end DV0C-00000

// Main process to display a map
Function DV0C-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  DV0C-11000(); /* Obtain the data to display*/

  DV0C-12000(); /* Format and display the map*/

  DV0C-13000(); /* Check attention identifier*/

  DV0C-14000(); /* Verify the entered data*/

  DV0C-15000(); /* Process valid input request*/


end // end DV0C-10000

// Obtain the data to display
Function DV0C-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (DVWREC.XXX-MSG-NBR == 0) /* No message to display*/
    DV0CW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  DV0CS-TA0050-P(); /* Purge any temporary storage*/

  DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  DV0CW01.DV0CM-GPC-CD = DV0CM001.DV0CM-GPC-CD; /* GPC code*/
  DV0CW01.DV0CM-STY-NBR = DV0CM001.DV0CM-STY-NBR; /* Style number*/

   /* ------------------------------------------------------------*/
   /* Select the information to display in the map heading.*/
   /* ------------------------------------------------------------*/

  set SY1REC empty; /* Clear row storage area*/

  SY1REC.XGPCD = DV0CW01.DV0CM-GPC-CD; /* GPC code*/
  SY1REC.SY1STNBR = DV0CW01.DV0CM-STY-NBR; /* Style number*/

  DV0CS-IO0120-S(); /* Select the table row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    DV0CW01.SY-STY-NM = SY1REC.SY1STYNM; /* Style name*/
  else
    DV0CW01.SY-STY-NM = "* NOT FOUND *"; /* Default name*/

  end

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  set SY2REC empty; /* Clear row storage area*/

  SY2REC.XGPCD = DV0CW01.DV0CM-GPC-CD; /* GPC code*/
  SY2REC.SY1STNBR = DV0CW01.DV0CM-STY-NBR; /* Style number*/

  DV0CS-IO0130-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  DV0CW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  DV0CW00.DV0CW-COLOR-EOF-FL = "N"; /* End of cursor flag*/

  while (DV0CW00.DV0CW-COLOR-EOF-FL == "N") /* Until end of cursor*/

    DV0CS-IO0130-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (DV0CW00.DV0CW-COLOR-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* If first line on subsequent page, save heading information.*/
      /* ------------------------------------------------------------*/

      if (DV0CW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && DV0CW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/

        DV0CW01.DV0CM-GPC-CD = SY1REC.XGPCD; /* GPC code*/
        DV0CW01.DV0CM-STY-NBR = SY1REC.SY1STNBR; /* Style number*/
        DV0CW01.SY-STY-NM = SY1REC.SY1STYNM; /* Style name*/

      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      DV0CW01.XGP-GPC-CD[XXX-INX-FLD-NBR] = SY2REC.XGPCD; /* GPC code*/
      DV0CW01.SY-STY-NBR[XXX-INX-FLD-NBR] = SY2REC.SY1STNBR;
                                   /* Style number*/
      DV0CW01.SY-COLR-CD-ID[XXX-INX-FLD-NBR] = SY2REC.SY2CLRID;
                                   /* Color identification*/
      DV0CW01.XDM-DIM-CD[XXX-INX-FLD-NBR] = SY2REC.XDMCD;
                                   /* Dimension code*/
      DV0CW01.SY-STY-COLR-DESC[XXX-INX-FLD-NBR] = SY2REC.SY2CLRDS;
                                   /* Color description*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (DV0CW00.XXX-INX-FLD-NBR > DV0CW00.XXX-INX-LMT-NBR) /* Page is full*/

      DV0CS-TA0050-A(); /* Add page to temporary storage*/

      DV0CW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    DV0CS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  DV0CS-IO0130-CS(); /* Close selected set cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    DVWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  DV0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end DV0C-11000

// Format and converse the map
Function DV0C-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    DVWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    DV0C-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  DV0CM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  DV0CM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  DV0CM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (DVWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (DVWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (DVWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(DVWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      DV0CM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    DV0CM001.XXX-MSG-LOC-ID = DVWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set DV0CM001 alarm; /* Indicate sound alarm*/

  end

  converse DV0CM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  DVWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  DVWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = DV0CM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = DV0CM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set DV0CM001.DV0CM-GPC-CD normal; /* GPC code*/
  set DV0CM001.DV0CM-STY-NBR normal; /* Style number*/

  DV0CW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (DV0CW00.XXX-INX-FLD-NBR <= DV0CW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && DV0CM001.XGP-GPC-CD[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/

    set DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set DV0CM001.CATOAP normal; /* TO application*/
  set DV0CM001.CAITEM normal; /* Application data*/


end // end DV0C-12000

// Format the data in the map
Function DV0C-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set DV0CM001 initial; /* M001 input/output area*/

  DV0CW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (DV0CW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (DV0CW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        DV0CS-TA0050-U(); /* Update temporary storage page*/

        DV0CW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (DV0CW00.XXX-CURR-PAGE-NBR > DV0CW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        DV0CW00.XXX-CURR-PAGE-NBR = DV0CW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      DV0CS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set DV0CM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    DV0CM001.XXX-CURR-PAGE-NBR = DV0CW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set DV0CM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    DV0CM001.XXX-HI-PAGE-NBR = DV0CW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* If GPC code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (DV0CW01.DV0CM-GPC-CD <= " ") /* GPC code missing*/
    set DV0CM001.DV0CM-GPC-CD cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  DV0CM001.DV0CM-GPC-CD = DV0CW01.DV0CM-GPC-CD; /* GPC code*/
  DV0CM001.DV0CM-STY-NBR = DV0CW01.DV0CM-STY-NBR; /* Style number*/
  DV0CM001.SY-STY-NM = DV0CW01.SY-STY-NM; /* Style name*/

  DV0CW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (DV0CW00.XXX-INX-FLD-NBR <= DV0CW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && DV0CW01.XGP-GPC-CD[XXX-INX-FLD-NBR] > " ") /* or end of data*/

    if (DV0CW00.XXX-INX-FLD-NBR == 1) /* First select field*/

      set DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    else
      set DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    end

    DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = DV0CW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    DV0CM001.XGP-GPC-CD[XXX-INX-FLD-NBR] = DV0CW01.XGP-GPC-CD[XXX-INX-FLD-NBR];
    DV0CM001.SY-STY-NBR[XXX-INX-FLD-NBR] = DV0CW01.SY-STY-NBR[XXX-INX-FLD-NBR];
    DV0CM001.SY-COLR-CD-ID[XXX-INX-FLD-NBR] = DV0CW01.SY-COLR-CD-ID[XXX-INX-FLD-NBR];
    DV0CM001.XDM-DIM-CD[XXX-INX-FLD-NBR] = DV0CW01.XDM-DIM-CD[XXX-INX-FLD-NBR];
    DV0CM001.SY-STY-COLR-DESC[XXX-INX-FLD-NBR] = DV0CW01.SY-STY-COLR-DESC[XXX-INX-FLD-NBR];

    DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end DV0C-12100

// Check attention identifier
Function DV0C-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (DV0CW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set DV0CW01 empty; /* M001 display storage*/
    end

    DV0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      DV0CS-TA0050-P(); /* Purge any temporary storage*/

      XSDVS-EXIT(); /* Exit to another application*/

      set DV0CM001.CATOAP cursor, bold; /* Highlight*/

    else

      DVWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "DV0CM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "DV0A"; /* System Menu*/
    end

    DV0CS-TA0050-P(); /* Purge any temporary storage*/

    XSDVS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* and PF8 was not pressed*/

    DVWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end DV0C-13000

// Verify data that was entered
Function DV0C-14000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.CAITEM > " ") /* Application data was entered*/

    DVWREC.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set DV0CM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    DV0C-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    DV0C-14200(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* If key field changed, determine if any other field changed.*/
    /* ------------------------------------------------------------*/

    if (DV0CM001.DV0CM-GPC-CD != DV0CW01.DV0CM-GPC-CD /* GPC changed*/
     || DV0CM001.DV0CM-STY-NBR != DV0CW01.DV0CM-STY-NBR)
                                   /* or style changed*/

      DV0C-14100(); /* Highlight other changed fields*/

      /* ------------------------------------------------------------*/
      /* Determine if all the required key fields were entered.*/
      /* ------------------------------------------------------------*/

      DV0C-14300(); /* Check for required key fields*/

    else

      /* ------------------------------------------------------------*/
      /* Otherwise, verify any modifiable data that was changed.*/
      /* ------------------------------------------------------------*/

      if (DV0CW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

        DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-LMT-NBR;
                                   /* Line index*/

        while (DV0CW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

          DV0C-14400(); /* Verify data in the line*/

          DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end DV0C-14000

// Highlight other changed fields
Function DV0C-14100()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-LMT-NBR; /* Line index*/

  while (DV0CW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    DV0CW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      DVWREC.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(14); /* Field may not change*/
      set DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

    end

    DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end DV0C-14100

// Verify scroll request
Function DV0C-14200()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.DV0CM-STY-NBR != DV0CW01.DV0CM-STY-NBR) /* Style changed*/

    DVWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set DV0CM001.DV0CM-STY-NBR cursor, bold; /* Highlight*/

  end

  if (DV0CM001.DV0CM-GPC-CD != DV0CW01.DV0CM-GPC-CD) /* GPC changed*/

    DVWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(14); /* Field may not change*/
    set DV0CM001.DV0CM-GPC-CD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && DV0CW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    DVWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && DV0CW00.XXX-CURR-PAGE-NBR >= DV0CW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    DVWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end DV0C-14200

// Check for required key fields
Function DV0C-14300()
   /* ------------------------------------------------------------*/
   /* Verify that a style number was entered.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.DV0CM-STY-NBR <= " ") /* Style not entered*/

    DVWREC.XXX-MSG-LOC-ID = "14300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0CM001.DV0CM-STY-NBR cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the General Product Class code.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.DV0CM-GPC-CD in XGPTBL.XGPCD /* Code in table*/
   && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    DVWREC.XXX-MSG-LOC-ID = "14300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0CM001.DV0CM-GPC-CD cursor, bold; /* Highlight*/

  end


end // end DV0C-14300

// Verify data in the line
Function DV0C-14400()
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not a "S", indicate that*/
   /* only "S" may be entered to select a line.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  DV0CW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] /* Selection entered*/
   && DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "S")
                                   /* and is not a "S"*/

    DVWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(13); /* Only "S" may be entered*/
    set DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/

  end


end // end DV0C-14400

// Process valid input request
Function DV0C-15000()
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/

  DVWREC.XGP-GPC-CD = DV0CM001.DV0CM-GPC-CD; /* GPC code*/

   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (DV0CM001.DV0CM-GPC-CD != DV0CW01.DV0CM-GPC-CD /* GPC changed*/
   || DV0CM001.DV0CM-STY-NBR != DV0CW01.DV0CM-STY-NBR) /* or style changed*/

    DV0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    DV0CW00.XXX-CURR-PAGE-NBR = DV0CW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    DV0CW00.XXX-CURR-PAGE-NBR = DV0CW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* ------------------------------------------------------------*/

  DV0CW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (DV0CW00.XXX-INX-FLD-NBR <= DV0CW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/

    if (DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    DV0CW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      DV0CW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = DV0CM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      DV0CW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/

    end

    DV0CW00.XXX-INX-FLD-NBR = DV0CW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, format the key fields and indicate*/
   /* that map 002 is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in DV0CW01.XXX-LN-SEL-IND) /* Line was selected*/

    DV0CW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    DV0CM002.XGP-GPC-CD = DV0CW01.XGP-GPC-CD[XXX-INX-FLD-NBR]; /* GPC*/
    DV0CM002.SY-STY-NBR = DV0CW01.SY-STY-NBR[XXX-INX-FLD-NBR];
                                   /* Style*/
    DV0CM002.SY-COLR-CD-ID = DV0CW01.SY-COLR-CD-ID[XXX-INX-FLD-NBR];
                                   /* Color*/
    DV0CM002.XDM-DIM-CD = DV0CW01.XDM-DIM-CD[XXX-INX-FLD-NBR];
                                   /* Dimension*/

    DV0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    DV0CW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

  end


end // end DV0C-15000

// Main process to display a map
Function DV0C-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  DV0C-21000(); /* Obtain the data to display*/

  DV0C-22000(); /* Format and display the map*/

  DV0C-23000(); /* Check attention identifier*/

  DV0C-24000(); /* Verify the entered data*/

  DV0C-25000(); /* Process valid input request*/


end // end DV0C-20000

// Obtain the data to display
Function DV0C-21000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set DV0CW02 empty; /* M002 display storage*/

  DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  DV0CW02.XGP-GPC-CD = DV0CM002.XGP-GPC-CD; /* GPC*/
  DV0CW02.SY-STY-NBR = DV0CM002.SY-STY-NBR; /* Style*/
  DV0CW02.SY-COLR-CD-ID = DV0CM002.SY-COLR-CD-ID; /* Color*/
  DV0CW02.XDM-DIM-CD = DV0CM002.XDM-DIM-CD; /* Dimension*/

   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  set SY2REC empty; /* Clear row storage area*/

  SY2REC.XGPCD = DV0CW02.XGP-GPC-CD; /* GPC code*/
  SY2REC.SY1STNBR = DV0CW02.SY-STY-NBR; /* Style number*/
  SY2REC.SY2CLRID = DV0CW02.SY-COLR-CD-ID; /* Color identifcation*/
  SY2REC.XDMCD = DV0CW02.XDM-DIM-CD; /* Dimension code*/

  DV0CS-IO0130-S(); /* Select the table row*/

   /* ------------------------------------------------------------*/
   /* Save the data from the table row in display storage.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    DV0CW02.SY-STY-COLR-DESC = SY2REC.SY2CLRDS; /* Color description*/
    DV0CW02.XPC-PROD-CAT-CD = SY2REC.XPCCD; /* Category code*/

  else

    DVWREC.XXX-MSG-LOC-ID = "21000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  DV0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end DV0C-21000

// Format and converse the map
Function DV0C-22000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    DVWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    DV0C-22100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  DV0C-22200(); /* Check change authorization*/

   /* ------------------------------------------------------------*/
   /* Format any descriptions for codes that are displayed.*/
   /* ------------------------------------------------------------*/

  XPCREC.XPCCD = DV0CM002.XPC-PROD-CAT-CD; /* Product category code*/
  XPCREC.XGPCD = DV0CM002.XGP-GPC-CD; /* GPC code*/

  if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* Code in table*/
   && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

    DV0CM002.XPC-PROD-CAT-SDESC = XPCTBL.XPCSDESC[sysVar.arrayIndex];
                                   /* Description*/
  else
    DV0CM002.XPC-PROD-CAT-SDESC = " "; /* No description*/

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  DV0CM002.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  DV0CM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  DV0CM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (DVWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (DVWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (DVWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(DVWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      DV0CM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    DV0CM002.XXX-MSG-LOC-ID = DVWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set DV0CM002 alarm; /* Indicate sound alarm*/

  end

  converse DV0CM002 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  DVWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  DVWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = DV0CM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = DV0CM002.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set DV0CM002.XPC-PROD-CAT-CD normal; /* Category code*/
  set DV0CM002.CATOAP normal; /* TO application*/
  set DV0CM002.CAITEM normal; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Change the selection indicator to show the line was viewed.*/
   /* ------------------------------------------------------------*/

  DV0CW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "V";
                                   /* Select indicator*/


end // end DV0C-22000

// Format the data in the map
Function DV0C-22100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set DV0CM002 initial; /* M002 input/output area*/

  DV0CW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  DV0CM002.XGP-GPC-CD = DV0CW02.XGP-GPC-CD;
  DV0CM002.SY-STY-NBR = DV0CW02.SY-STY-NBR;
  DV0CM002.SY-COLR-CD-ID = DV0CW02.SY-COLR-CD-ID;
  DV0CM002.XDM-DIM-CD = DV0CW02.XDM-DIM-CD;
  DV0CM002.SY-STY-COLR-DESC = DV0CW02.SY-STY-COLR-DESC;
  DV0CM002.XPC-PROD-CAT-CD = DV0CW02.XPC-PROD-CAT-CD;


end // end DV0C-22100

// Check change authorization
Function DV0C-22200()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (DV0CW00.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y")       /* and user authorized to change*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, protect the modifiable fields on the screen.*/
   /* ------------------------------------------------------------*/

  set DV0CM002.XPC-PROD-CAT-CD skip; /* Category code*/


end // end DV0C-22200

// Check attention identifier
Function DV0C-23000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (DV0CW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set DV0CW02 empty; /* M002 display storage*/
    end

    DV0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      DV0CS-TA0050-P(); /* Purge any temporary storage*/

      XSDVS-EXIT(); /* Exit to another application*/

      set DV0CM001.CATOAP cursor, bold; /* Highlight*/

      DV0CW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    else

      DVWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "DV0CM002"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      DV0CW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

      exit stack; /* Exit to display map*/

    end

    DV0CS-TA0050-P(); /* Purge any temporary storage*/

    XSDVS-EXIT(); /* Exit to another application*/

    DV0CW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/

    DVWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end DV0C-23000

// Verify data that was entered
Function DV0C-24000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    DVWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set DV0CM002.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If product category was changed, verify the entered code.*/
   /* ------------------------------------------------------------*/

  if (DV0CM002.XPC-PROD-CAT-CD != DV0CW02.XPC-PROD-CAT-CD)
    DV0C-24100(); /* Verify product category code*/
  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If EDIT requested, indicate edit completed and no errors.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* PF12 was pressed*/

    DVWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(17); /* Edit completed and no errors*/

    exit stack; /* Exit to display map*/

  end


end // end DV0C-24000

// Verify product category code
Function DV0C-24100()
   /* ------------------------------------------------------------*/
   /* Format the table search key in the row storage area.*/
   /* ------------------------------------------------------------*/

  XPCREC.XPCCD = DV0CM002.XPC-PROD-CAT-CD; /* Category code*/
  XPCREC.XGPCD = DV0CM002.XGP-GPC-CD; /* GPC code*/

   /* ------------------------------------------------------------*/
   /* Determine if the code is in the table and status is active.*/
   /* ------------------------------------------------------------*/

  if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* Code in table*/
   && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    DVWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0CM002.XPC-PROD-CAT-CD cursor, bold; /* Highlight*/

  end


end // end DV0C-24100

// Process valid input request
Function DV0C-25000()
   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, search for next selection.*/
   /* ------------------------------------------------------------*/

  if (DV0CM002.XPC-PROD-CAT-CD == DV0CW02.XPC-PROD-CAT-CD) /* Category*/

    DV0C-25100(); /* Search for next selection*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Obtain the current date and time.*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

   /* ------------------------------------------------------------*/
   /* Update the changed data in the table row.*/
   /* ------------------------------------------------------------*/


  SY2REC.XPCCD = DV0CM002.XPC-PROD-CAT-CD; /* Category code*/

  SY2REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  SY2REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

  DV0CS-IO0130-U(); /* Update the table row*/

   /* ------------------------------------------------------------*/
   /* Commit all changes and refresh the data to be displayed.*/
   /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  DVWREC.XXX-MSG-LOC-ID = "25000"; /* Message location*/
  DVWREC.XXX-MSG-NBR = 1; /* Table update was completed*/

  DV0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/


end // end DV0C-25000

// Search for next selection
Function DV0C-25100()
   /* ------------------------------------------------------------*/
   /* Determine if another line was selected for viewing.*/
   /* ------------------------------------------------------------*/

  if ("S" in DV0CW01.XXX-LN-SEL-IND from XXX-INX-FLD-NBR) /* Line was selected*/

    DV0CW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    DV0CM002.XGP-GPC-CD = DV0CW01.XGP-GPC-CD[XXX-INX-FLD-NBR];
                                   /* GPC code*/
    DV0CM002.SY-STY-NBR = DV0CW01.SY-STY-NBR[XXX-INX-FLD-NBR];
                                   /* Style number*/
    DV0CM002.SY-COLR-CD-ID = DV0CW01.SY-COLR-CD-ID[XXX-INX-FLD-NBR];
                                   /* Color ident*/
    DV0CM002.XDM-DIM-CD = DV0CW01.XDM-DIM-CD[XXX-INX-FLD-NBR];
                                   /* Dimension code*/

    DV0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  else

    DV0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    DV0CW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

  end


end // end DV0C-25100

// Select the table row
Function DV0CS-IO0120-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  DVWREC.XXX-MSG-LOC-ID = "IO0120S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTYLE01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY1REC.SY1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-IO0120-S

// Close selected set cursor
Function DV0CS-IO0130-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  DVWREC.XXX-MSG-LOC-ID = "IO0130CS"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-IO0130-CS

// Select the table row
Function DV0CS-IO0130-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  DVWREC.XXX-MSG-LOC-ID = "IO0130S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-IO0130-S

// Fetch next row in cursor
Function DV0CS-IO0130-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      DV0CW00.DV0CW-COLOR-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  DVWREC.XXX-MSG-LOC-ID = "IO0130SN"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-IO0130-SN

// Select set and open cursor
Function DV0CS-IO0130-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  DVWREC.XXX-MSG-LOC-ID = "IO0130SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-IO0130-SS

// Update the table row
Function DV0CS-IO0130-U()
   /* ------------------------------------------------------------*/
   /* Update the specified row in the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0130" ("U ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      DV0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

      DVWREC.XXX-MSG-LOC-ID = "IO0130U"; /* Message location*/
      DVWREC.XXX-MSG-NBR = 12; /* Data was updated by another*/

      exit stack; /* Exit to display map*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  DVWREC.XXX-MSG-LOC-ID = "IO0130U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-IO0130-U

// Add page to temporary storage
Function DV0CS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  DV0CW01.XXX-TEMP-STG-LNTH = DV0CW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (DV0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set DV0CW01 empty; /* M001 display storage*/

    DV0CW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  DVWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-TA0050-A

// Purge any temporary storage
Function DV0CS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set DV0CW01 empty; /* M001 display storage*/

  DV0CW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  DV0CW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (DV0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  DVWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-TA0050-P

// Read temporary storage page
Function DV0CS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  DV0CW01.XXX-TEMP-STG-LNTH = DV0CW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = DV0CW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (DV0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  DVWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-TA0050-R

// Update temporary storage page
Function DV0CS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (DV0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  DVWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end DV0CS-TA0050-U

//*** RECORD=DV0CW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record DV0CW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
  10 DV0CW-COLOR-EOF-FL DV0CW-COLOR-EOF-FL ; 
end // end DV0CW00

//*** RECORD=DV0CW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record DV0CW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 * char(698) ; 
    10 DV0CM-GPC-CD DV0CM-GPC-CD ; 
    10 DV0CM-STY-NBR DV0CM-STY-NBR ; 
    10 SY-STY-NM SY-STY-NM ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [15] ; 
    10 XGP-GPC-CD XGP-GPC-CD [15] ; 
    10 SY-STY-NBR SY-STY-NBR [15] ; 
    10 SY-COLR-CD-ID SY-COLR-CD-ID [15] ; 
    10 XDM-DIM-CD XDM-DIM-CD [15] ; 
    10 SY-STY-COLR-DESC SY-STY-COLR-DESC [15] ; 
end // end DV0CW01

//*** RECORD=DV0CW02 ****
// ------------------------
// Map 002 display storage.
// ------------------------
// ***********************
Record DV0CW02 type basicRecord
  10 XGP-GPC-CD XGP-GPC-CD ; 
  10 SY-STY-NBR SY-STY-NBR ; 
  10 SY-COLR-CD-ID SY-COLR-CD-ID ; 
  10 XDM-DIM-CD XDM-DIM-CD ; 
  10 SY-STY-COLR-DESC SY-STY-COLR-DESC ; 
  10 XPC-PROD-CAT-CD XPC-PROD-CAT-CD ; 
end // end DV0CW02

// Requested XPG_GPC_CD
DataItem DV0CM-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Requested SY_STY_NBR
DataItem DV0CM-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file flag
DataItem DV0CW-COLOR-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

