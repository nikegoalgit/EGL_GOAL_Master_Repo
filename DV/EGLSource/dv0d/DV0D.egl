package dv0d;

import corpcom3.XPDV-00000;
import corpcom3.XPTA0P;
import corpcom4.XSDVS-EXIT;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXX-INX-FLD-NBR;
import corpcom7.XXX-INX-LMT-NBR;
import corpcom7.XXX-LN-SEL-IND;
import corpcom7.XXX-MAP-FMAT-FL;
import corpx1.XDM-DIM-CD;
import corpx1.XGP-GPC-CD;
import dv.common.*;
import sy.common.SY-COLR-CD-ID;
import sy.common.SY-STY-NBR;
import sy.common.SY2REC;
import ta.common.TA1REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
import ta.common.TARJCL;
//*** PROGRAM=DV0D ****
// This application displays the Background Job Request Menu
// screen and subordinate Background Job Submission screens.
// 
// The menu is displayed for the user to select the jobs to be
// submitted.  Another available selection allows the user to
// view the available printers and change the printed output
// destination.
// 
// Job Control Language statements are formatted and submitted
// through the Background Job Request Subroutine (TA0P).
// The job executes in batch and all output is routed to the
// remote destination specified through this application.
// 
// The JCL for each job is stored as a table.
// There are two formats available for a JCL statement.
// They are either a fixed or a variable format.
// 
// A fixed statement is identified in the table by a blank JCL
// statement type (TARTYPE).  These statements are written
// directly to the internal reader with no changes.
// 
// Variable statements are those that contain data that may
// change each time the job is submitted.  They are identified
// by a non-blank statement type.  The type determines the data
// that is to be substituted and the columns into which it is
// to be placed.  The data in working storage is substituted
// and the statement is written to the internal reader.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, from the menu, only.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      06/30/93  xxxxxx  New application.
// *********************
Program DV0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "DV00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  DV0DW00 DV0DW00; // record
  DV0DW02 DV0DW02; // record
  DVWREC DVWREC; // record
  SQLCA SQLCA; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use DV0DT02 {deleteAfterUse = yes}; // table
  use DV0DM.DV0DM002,  // forms
      DV0DM.DV0DM099,
      DV0DM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPDV-00000: XPDV-00000();
     /* ------------------------------------------------------------*/
     /* Initialize the working storage areas and variables.*/
     /* ------------------------------------------------------------*/
    ;
    set TA0PM001 initial; /* M001 input/output*/
    set DV0DM002 initial; /* M002 input/output*/
    set DV0DM099 initial; /* M099 input/output*/
    set DV0DW00 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA6REC empty; /* Background job subroutine parameters*/
    ;
    DV0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    ;
     /* ------------------------------------------------------------*/
     /* Indicate that the report distribution must be obtained.*/
     /* ------------------------------------------------------------*/
    ;
    TA6REC.TA6SUBSW = "I"; /* Obtain distribution information*/
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the number of selection lines on the menu.*/
     /* ------------------------------------------------------------*/
    ;
    DV0DW00.XXX-INX-LMT-NBR = 2; /* Number of selection lines*/
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto DV0D-00000; /* Converse the main process*/
    ;
    ;
    DV0D-00000: DV0D-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto DV0D-00000; /* Converse the main process*/
    ;
    ;
  end // end main
end // end DV0D

// Main process to display a map
Function DV0D-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0DW00.XXX-RQT-EXIT-FL != "Y") /* EXIT not requested*/
    ;
    if (DV0DW00.XXX-LN-SEL-IND[1] == "S" /* Line 1 was selected*/
     || TA6REC.TA6SUBSW == "I")          /* or information requested*/
      ;
      DV0D-01000(); /* Specify report distribution*/
      ;
    end
    ;
    if (DV0DW00.XXX-LN-SEL-IND[2] == "S") /* Line 2 was selected*/
      DV0D-02000(); /* Development Model Example*/
    end
    ;
  end
  ;
  DV0DW00.XXX-RQT-EXIT-FL = "N"; /* Reset exit requested switch*/
  ;
  DV0D-99000(); /* Report Request Menu*/
  ;
  ;
end // end DV0D-00000

// Specify output destination
Function DV0D-01000()
   /* ------------------------------------------------------------*/
   /* Obtain and/or display the report distribution for the user.*/
   /* ------------------------------------------------------------*/
  ;
  XPTA0P(); /* Report distribution information*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, indicate the selected function is completed.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (TA6REC.TA6RTNCD == "0") /* Normal return*/
      ;
      if (TA6REC.TA6SUBSW == "I") /* Obtain information only*/
        ;
        TA6REC.TA6SUBSW = "N"; /* Indicate information obtained*/
      else
        DV0DW00.XXX-LN-SEL-IND[1] = "*";
                                   /* Indicate function completed*/
        ;
      end
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
    /* If user cancelled request, indicate function cancelled.*/
    /* ------------------------------------------------------------*/
    ;
    if (TA6REC.TA6RTNCD == "1") /* User cancelled request*/
      ;
      DVWREC.XXX-MSG-LOC-ID = "01000"; /* Message location*/
      ;
      DV0DW00.XXX-LN-SEL-IND[1] = "C";
                                   /* Indicate function cancelled*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "01000"; /* Message location*/
  converseLib.validationFailed(10); /* Unexpected error occurred*/
  ;
  ;
end // end DV0D-01000

// Development Model Example
Function DV0D-02000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify the data that was entered.*/
   /* 4) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  DV0D-02100(); /* Format and display the map*/
  ;
  DV0D-02200(); /* Check attention identifier*/
  ;
  DV0D-02300(); /* Verify the data that was entered*/
  ;
  DV0D-02400(); /* Process valid input request*/
  ;
  ;
end // end DV0D-02000

// Format and converse the map
Function DV0D-02100()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    DVWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and report distribution information.*/
   /* ------------------------------------------------------------*/
  ;
  DV0DM002.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  DV0DM002.XURDEST = TA6REC.XURDEST; /* Print destination*/
  DV0DM002.XRODESC = TA6REC.XRODESC; /* Printer description*/
  DV0DM002.XURUSRNM = TA6REC.XURUSRNM; /* Report recipient*/
  DV0DM002.XURBLDID = TA6REC.XURBLDID; /* NIKE location*/
  DV0DM002.XURCOPY = TA6REC.XURCOPY; /* Number of copies*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (DVWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/
    ;
    if (DVWREC.XXX-MSG-NBR != 0) /* Message to display*/
      ;
      if (DVWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(DVWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      DV0DM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    DV0DM002.XXX-MSG-LOC-ID = DVWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/
    ;
    set DV0DM002 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse DV0DM002 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields.*/
   /* ------------------------------------------------------------*/
  ;
  DVWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  DVWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set DV0DM002.XGP-GPC-CD normal; /* GPC*/
  set DV0DM002.SY-STY-NBR normal; /* Style*/
  set DV0DM002.SY-COLR-CD-ID normal; /* Color*/
  set DV0DM002.XDM-DIM-CD normal; /* Dimension*/
  ;
  ;
end // end DV0D-02100

// Check attention identifier
Function DV0D-02200()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    DV0DW00.XXX-LN-SEL-IND[2] = "C";
                                   /* Indicate selection cancelled*/
    ;
    set DV0DM002 initial; /* M002 input/output*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    ;
    DV0DW00.XXX-RQT-EXIT-FL = "Y"; /* Indicate exit requested*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "02200"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end DV0D-02200

// Verify the entered data
Function DV0D-02300()
   /* ------------------------------------------------------------*/
   /* If a required field was not entered, indicate that it is*/
   /* missing or invalid.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0DM002.XDM-DIM-CD <= " ") /* Dimension not entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "02300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0DM002.XDM-DIM-CD cursor, bold; /* Highlight*/
    ;
  end
  ;
  if (DV0DM002.SY-COLR-CD-ID <= " ") /* Color not entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "02300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0DM002.SY-COLR-CD-ID cursor, bold; /* Highlight*/
    ;
  end
  ;
  if (DV0DM002.SY-STY-NBR <= " ") /* Style not entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "02300"; /* Message location*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    set DV0DM002.SY-STY-NBR cursor, bold; /* Highlight*/
    ;
  end
  ;
  if (DV0DM002.XGP-GPC-CD <= " ") /* GPC not entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "02300"; /* Message location*/
    set DV0DM002.XGP-GPC-CD cursor, bold; /* Highlight*/
    converseLib.validationFailed(8); /* Field missing or invalid*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the key fields were entered, verify against table.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0DM002.XGP-GPC-CD > " "    /* GPC entered*/
   && DV0DM002.SY-STY-NBR > " "    /* and style entered*/
   && DV0DM002.SY-COLR-CD-ID > " " /* and color entered*/
   && DV0DM002.XDM-DIM-CD > " ")   /* and dimension entered*/
    ;
    set SY2REC empty; /* Clear row storage area*/
    ;
    SY2REC.XGPCD = DV0DM002.XGP-GPC-CD; /* GPC*/
    SY2REC.SY1STNBR = DV0DM002.SY-STY-NBR; /* Style*/
    SY2REC.SY2CLRID = DV0DM002.SY-COLR-CD-ID; /* Color*/
    SY2REC.XDMCD = DV0DM002.XDM-DIM-CD; /* Dimension*/
    ;
    DV0DS-IO0130-S(); /* Select the table row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      ;
      DVWREC.XXX-MSG-LOC-ID = "02300"; /* Message location*/
      converseLib.validationFailed(15); /* No row in table with this key*/
      ;
      set DV0DM002.XGP-GPC-CD cursor, bold; /* Highlight*/
      set DV0DM002.SY-STY-NBR bold; /* Highlight*/
      set DV0DM002.SY-COLR-CD-ID bold; /* Highlight*/
      set DV0DM002.XDM-DIM-CD bold; /* Highlight*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end DV0D-02300

// Process valid input request
Function DV0D-02400()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and index to be used.*/
   /* ------------------------------------------------------------*/
  ;
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/
  ;
  TA6REC.TA6INDEX = 1; /* Initialize index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/
    ;
    if (DV0DT02.TARTYPE[TA6INDEX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
      /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/
      ;
      set DV0DW02 empty; /* Parameters work area*/
      ;
      DV0DW02.XGP-GPC-CD = DV0DM002.XGP-GPC-CD; /* GPC*/
      DV0DW02.SY-STY-NBR = DV0DM002.SY-STY-NBR; /* Style*/
      DV0DW02.SY-COLR-CD-ID = DV0DM002.SY-COLR-CD-ID; /* Color*/
      DV0DW02.XDM-DIM-CD = DV0DM002.XDM-DIM-CD; /* Dimension*/
      ;
      TA6REC.TARJCL[TA6INDEX] = DV0DW02.TARJCL; /* Parameters*/
      ;
    else
      ;
      /* ------------------------------------------------------------*/
      /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = DV0DT02.TARJCL[TA6INDEX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = DV0DT02.TARTYPE[TA6INDEX]; /* Type*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (DV0DT02.TARJCL[TA6INDEX] == "/*EOF") /* End of table*/
      ;
      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment index*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/
  ;
  XPTA0P(); /* Submit JCL for background job*/
  ;
   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "02500"; /* Message location*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    ;
    DV0DW00.XXX-LN-SEL-IND[2] = "*";
                                   /* Indicate function completed*/
    ;
    set DV0DM002 initial; /* Clear map output area*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end DV0D-02400

// Report Request Menu
Function DV0D-99000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify the data that was entered.*/
   /* 4) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  DV0D-99100(); /* Format and display the map*/
  ;
  DV0D-99200(); /* Check attention identifier*/
  ;
  DV0D-99300(); /* Verify the data that was entered*/
  ;
  DV0D-99400(); /* Process valid input request*/
  ;
  ;
end // end DV0D-99000

// Format and converse the map
Function DV0D-99100()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    DVWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0DW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    DV0D-99110(); /* Format the data in the map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  DV0DM099.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  DV0DM099.CATOAP = COMMAREA.CATOAP; /* TO application*/
  DV0DM099.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (DVWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/
    ;
    if (DVWREC.XXX-MSG-NBR != 0) /* Message to display*/
      ;
      if (DVWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(DVWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      DV0DM099.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    DV0DM099.XXX-MSG-LOC-ID = DVWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/
    ;
    set DV0DM099 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse DV0DM099 ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  DVWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  DVWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = DV0DM099.CATOAP; /* TO application*/
  COMMAREA.CAITEM = DV0DM099.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  DV0DW00.XXX-INX-FLD-NBR = 1; /* Initialize index*/
  ;
  while (DV0DW00.XXX-INX-FLD-NBR <= DV0DW00.XXX-INX-LMT-NBR)
                                   /* Until all lines are reset*/
    ;
    set DV0DM099.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Selection indicator*/
    ;
    DV0DW00.XXX-INX-FLD-NBR = DV0DW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/
    ;
  end
  ;
  set DV0DM099.CATOAP normal; /* TO application*/
  set DV0DM099.CAITEM normal; /* Application data*/
  ;
  ;
end // end DV0D-99100

// Format the data in the map
Function DV0D-99110()
   /* ------------------------------------------------------------*/
   /* Format the line selection indicators in the map.*/
   /* ------------------------------------------------------------*/
  ;
  set DV0DM099 initial; /* M099 input/output area*/
  ;
  DV0DW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/
  ;
  DV0DW00.XXX-INX-FLD-NBR = 1; /* Initialize map index*/
  ;
  while (DV0DW00.XXX-INX-FLD-NBR <= DV0DW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/
    ;
    DV0DM099.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = DV0DW00.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    ;
    DV0DW00.XXX-INX-FLD-NBR = DV0DW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment index*/
    ;
  end
  ;
  ;
end // end DV0D-99110

// Check attention identifier
Function DV0D-99200()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    DV0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    DV0DS-RESET-SELECT(); /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      XSDVS-EXIT(); /* Exit to another application*/
      ;
      set DV0DM099.CATOAP cursor, bold; /* Highlight*/
      ;
    else
      ;
      DVWREC.XXX-MSG-LOC-ID = "99200"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      ;
    end
    ;
    DV0DS-RESET-SELECT(); /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "DV0DM099"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "DV0A"; /* System Menu*/
    end
    ;
    XSDVS-EXIT(); /* Exit to another application*/
    ;
    COMMAREA.CATOAP = " "; /* Clear TO application*/
    ;
    DV0DS-RESET-SELECT(); /* Exit to display map*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "99200"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    DV0DS-RESET-SELECT(); /* Exit to display map*/
    ;
  end
  ;
  ;
end // end DV0D-99200

// Verify the entered data
Function DV0D-99300()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    DVWREC.XXX-MSG-LOC-ID = "99300"; /* Message location*/
    set DV0DM099.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify the line selection indicator.*/
   /* ------------------------------------------------------------*/
  ;
  DV0DW00.XXX-INX-FLD-NBR = DV0DW00.XXX-INX-LMT-NBR;
                                   /* Initialize line index*/
  ;
  while (DV0DW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/
    ;
    /* ------------------------------------------------------------*/
    /* Indicate an error if the line was not selected properly.*/
    /* ------------------------------------------------------------*/
    ;
    if (DV0DM099.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    DV0DW00.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Indicator changed*/
      ;
      if (DV0DM099.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " " /* To space*/
       && DV0DW00.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S") /* from "S"*/
        ;
         /* NEXT SENTENCE*/
        ;
      else
        ;
        if (DV0DM099.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "S") /* Not an "S"*/
          ;
          DVWREC.XXX-MSG-LOC-ID = "99300"; /* Message location*/
          converseLib.validationFailed(13); /* Only "S" is may be entered*/
          set DV0DM099.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
          ;
        end
        ;
      end
      ;
    end
    ;
    DV0DW00.XXX-INX-FLD-NBR = DV0DW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    DV0DS-RESET-SELECT(); /* Exit to display map*/
  end
  ;
  ;
end // end DV0D-99300

// Process valid input request
Function DV0D-99400()
   /* ------------------------------------------------------------*/
   /* Save the selections in the working storage array.*/
   /* ------------------------------------------------------------*/
  ;
  move DV0DM099.XXX-LN-SEL-IND to DV0DW00.XXX-LN-SEL-IND[1] for all;
                                   /* Menu selections*/
  ;
  DV0DW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
  ;
   /* ------------------------------------------------------------*/
   /* If specify destination selected, indicate to subroutine to*/
   /* display output destination, but, do not submit any JCL.*/
   /* ------------------------------------------------------------*/
  ;
  if (DV0DW00.XXX-LN-SEL-IND[1] == "S") /* Specify destination selected*/
    TA6REC.TA6SUBSW = "N"; /* Indicate do not submit JCL*/
  end
  ;
  ;
end // end DV0D-99400

// Select the table row
Function DV0DS-IO0130-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/
      ;
      return; /* Return to previous process*/
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  DVWREC.XXX-MSG-LOC-ID = "IO0130S"; /* Message location*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    ;
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = DVWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end DV0DS-IO0130-S

// Reset selections and exit
Function DV0DS-RESET-SELECT()
   /* ------------------------------------------------------------*/
   /* Reset any pending selections in working storage.*/
   /* ------------------------------------------------------------*/
  ;
  DV0DW00.XXX-INX-FLD-NBR = 1; /* Initialize map index*/
  ;
  while (DV0DW00.XXX-INX-FLD-NBR <= DV0DW00.XXX-INX-LMT-NBR)
                                   /* Until end of array*/
    ;
    if (DV0DW00.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S")
                                   /* Entry is selected*/
      DV0DW00.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = " ";
                                   /* Reset entry*/
    end
    ;
    DV0DW00.XXX-INX-FLD-NBR = DV0DW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment index*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Exit to display the selection menu map.*/
   /* ------------------------------------------------------------*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end DV0DS-RESET-SELECT

//*** RECORD=DV0DW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record DV0DW00 type basicRecord
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-RQT-EXIT-FL XXX-RQT-EXIT-FL ; 
  10 XXX-LN-SEL-IND XXX-LN-SEL-IND [98] ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
end // end DV0DW00

//*** RECORD=DV0DW02 ****
// ------------------------------------------------------------
// Parameters for DV1001 - Development Model Example.
// ------------------------------------------------------------
// ***********************
Record DV0DW02 type basicRecord
  5 TARJCL TARJCL ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 * char(1) ; 
    10 SY-STY-NBR SY-STY-NBR ; 
    10 * char(1) ; 
    10 SY-COLR-CD-ID SY-COLR-CD-ID ; 
    10 * char(1) ; 
    10 XDM-DIM-CD XDM-DIM-CD ; 
    10 * char(64) ; 
end // end DV0DW02

// Exit was requested flag
DataItem XXX-RQT-EXIT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

