package as0k;

import ab.common.AB-BELT-PRT-FCTR;
import ab.common.AB-EMB-PRT-FCTR;
import ab.common.AB-SPOT-PRT-FCTR;
import af.common.AF5REC;
import as1.common.AS1REC;
import as1.common.ASWREC;
import corpcom2.XX0XW01;
import corpcom3.XPAS-00000;
import corpcom3.XPAS-39999;
import corpcom3.XPAS-51200;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XSETBL;
import corpx2.XSECD;
import corpx2.XSNYR;
import corpy2.YSNTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import pg.common.PG1REC;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VPRTPL01;
//*** PROGRAM=AS0K ****
// This application is part of the Print Plan subsystem of
// the Apparel Buy system.  Its purpose is to add, maintain,
// and inquire on rows in the source override table (DABUY.
// VASOVR01)
// *--------------------MAINTENANCE HISTORY--------------------
// 
// S.R. #   DATE   USER   COMMENTS
// ------ -------- ------ -------------------------------------
// AB0198 06-13-94 LREIN  Added delete function
//        11/94-94 KJ     PRTPLN UPDATE/VARIOUS
//        02-15-95 kj     xsn-ysn
// *********************
Program AS0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AF5REC AF5REC; // record
  AS0KW00 AS0KW00; // record
  AS0KW01 AS0KW01; // record
  AS0KW02 AS0KW02; // record
  AS1REC AS1REC; // record
  ASWREC ASWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VASOVR01 VASOVR01; // record
  VPRTPL01 VPRTPL01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use AS0KM.AS0KM001,  // forms
      AS0KM.AS0KM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAS-00000: XPAS-00000();
    set ASWREC empty;
    set AS0KW00 empty;
    set AS0KW01 empty;
    set AS0KW02 empty;
    set AS0KM001 initial;
    set AS0KM002 initial;
    ;
    if (CAFRMSYS == "AS") /* entering from another as app*/
      AS0KM001.AS0KM-SELECT-FCTY = AS1REC.FY1FCTYC;
      AS0KM001.AS0KM-SELECT-STYLE = AS1REC.SY1STNBR;
      AS0KM001.AS0KM-SELECT-COLOR = AS1REC.SY2CLRID;
      AS0KM001.AS0KM-SELECT-SESN = AS1REC.XSECD;
      AS0KM001.AS0KM-SELECT-YEAR = AS1REC.AS1-XSN-YY;
    end
    ;
    move " " to AS0KM001.SY1STNBR[1] for all;
    AS0KW00.AS0KW-NUMBER-SCREEN-LINES = sysVar.arrayIndex;
    AS0KW00.AS0KW-TSQ-LENGTH = sysVar.arrayIndex * 49 + 4;
                                     /* nbr scrn lines * length + 4*/
    AS0KW00.AS0KW-FORMAT-MAP-SW = "N";
    AS0KW00.AS0KW-REQUEST-DATA-SW = "N";
    AS0KW00.AS0KW-MAP-SW = "1";
    AS0KW00.AS0KW-START-PAGE = 1;
    goto AS0K-0001; /* converse main process*/
    AS0K-0001: AS0K-0001();
    goto AS0K-0001; /* converse main process*/
  end // end main
end // end AS0K

// main process loop
Function AS0K-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (AS0KW00.AS0KW-MAP-SW == "1") /* maint or inq was selected*/
    AS0K-1000(); /* process maint/inq*/
  else /* add map was selected*/
    AS0K-2000(); /* process add*/
  end
  ;
  ;
end // end AS0K-0001

// inq/maint main process (map 1)
Function AS0K-1000()
  AS0K-1100(); /* obtain data*/
  AS0K-1200(); /* format map*/
  AS0K-1300(); /* validate pf keys*/
  AS0K-1400(); /* reset highlighted fields*/
  AS0K-1500(); /* validate input data*/
  AS0K-1600(); /* process valid input data*/
end // end AS0K-1000

// obtain data to display
Function AS0K-1100()
  ;
  if (AS0KW00.AS0KW-REQUEST-DATA-SW != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0)   /* Or error has occured*/
    return; /* Return to previous process*/
  end
  ;
  set AS0KW01 empty;
  set AS0KW02 empty;
  AS0KW00.AS0KW-ARRAY-INDEX = 1;
  AS0KM001.FY1FCTSN = " ";
  AS0KM001.SY1SSTNM = " ";
  AS0KM001.SY2CLRAB = " ";
  ;
  if (AS0KW00.AS0KW-KEY-CHANGED-SW == "Y") /* new key*/
    AS0KW00.AS0KW-START-PAGE = 1; /* page to display*/
    set TA5REC empty;
  end
  ;
  AS0K-1110(); /* purge temp storage queue*/
  AS0K-1120(); /* select vasovr01 rows*/
  while (SQLCA.VAGen_SQLCODE != 100) /* whilst still data*/
    AS0K-1130(); /* save data*/
    AS0KS-0001(); /* fetch next vafovr01 row*/
  end
  ;
  AS0K-1140(); /* close cursor*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* Request for data completed*/
  end
  ;
  if (AS0KW00.AS0KW-ARRAY-INDEX > 1) /* partial page formatted*/
    AS0K-1131(); /* add page to tsq*/
  end
  ;
  if (TA5REC.TA5TSQIX < 1) /* no data to display*/
    converseLib.validationFailed(5);
    AS0KM001.XXXPRCNM = "AS0K1100";
  end
end // end AS0K-1100

// purge temp storage queue
Function AS0K-1110()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = "AS0K"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  call "TA0050" (AS0KW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    AS0KM001.XXXPRCNM = "AS0K1110"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0K1110"; /* Error location*/
    TA1REC.TA1LOC = "PURGE TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
  end
  ;
  AS0KW00.AS0KW-START-PAGE = 1; /* Reset current page number*/
  AS0KW00.TA5TSQIX = 0; /* Reset highest page number*/
end // end AS0K-1110

// select set vasovr01
Function AS0K-1120()
  set VASOVR01 empty;
  ;
  if (AS0KM001.AS0KM-SELECT-SESN != " ")
    VASOVR01.XSECD = AS0KM001.AS0KM-SELECT-SESN;
  else
    VASOVR01.XSECD = "*";
  end
  ;
  if (AS0KM001.AS0KM-SELECT-YEAR != 0)
    AS1REC.AS1-XSN-YY = AS0KM001.AS0KM-SELECT-YEAR;
    AS1REC.AS1-XSN-CC = 0;
    if (AS0KM001.AS0KM-SELECT-YEAR < 50)
      AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
    else
      AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
    end
    VASOVR01.XSNYR = AS1REC.AS1-XSN-CC-YY;
  else
    VASOVR01.XSNYR = -1;
  end
  ;
  if (AS0KM001.AS0KM-SELECT-FCTY != " ")
    VASOVR01.FY1FCTYC = AS0KM001.AS0KM-SELECT-FCTY;
  else
    VASOVR01.FY1FCTYC = "*";
  end
  ;
  if (AS0KM001.AS0KM-SELECT-STYLE != " ")
    VASOVR01.SY1STNBR = AS0KM001.AS0KM-SELECT-STYLE;
  else
    VASOVR01.SY1STNBR = "*";
  end
  ;
  if (AS0KM001.AS0KM-SELECT-COLOR != " ")
    VASOVR01.SY2CLRID = AS0KM001.AS0KM-SELECT-COLOR;
  else
    VASOVR01.SY2CLRID = "*";
  end
  ;
   /* ===================================**/
   /* Select Set from dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("S1", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    AS0KS-0001(); /* fetch first row*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1120"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1120"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-1120

// save data in working storage
Function AS0K-1130()
  AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX] = VASOVR01.VASOVR01-GROUP;
  ;
  if (AS0KW00.AS0KW-ARRAY-INDEX == AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
    AS0K-1131(); /* add page to tsq*/
    AS0KW00.AS0KW-ARRAY-INDEX = 1; /* reset array*/
  else
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0K-1130

// add page to TSQ
Function AS0K-1131()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  AS0KW01.AS0KW-TSQ-LENGTH = AS0KW00.AS0KW-TSQ-LENGTH; /* Temporary storage length*/
  TA5REC.TA5APPID = "AS0K"; /* Application id*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  call "TA0050" (AS0KW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AS0KM001.XXXPRCNM = "AS0K1131"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0K1131"; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0KM001"; /* MAP NAME*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    return; /* Return to previous process*/
  end
  ;
  AS0KW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
  set AS0KW01 empty; /* Clear temporary storage record*/
end // end AS0K-1131

// close cursor vasovr01
Function AS0K-1140()
  ;
   /* ===================================**/
   /* close cursor for dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("C1", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1140"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1140"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE CURSOR";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-1140

// format and display map 1
Function AS0K-1200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0KM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0KM001 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0KW00.AS0KW-FORMAT-MAP-SW == "N" /* dont format map*/
   || converseVar.validationMsgNum != 0) /* Error message to display*/
   /* next sentence                /* return to calling process*/
  else
    AS0KW02.AS0KM-SELECT-FCTY = AS0KM001.AS0KM-SELECT-FCTY;
    AS0KW02.AS0KM-SELECT-STYLE = AS0KM001.AS0KM-SELECT-STYLE;
    AS0KW02.AS0KM-SELECT-COLOR = AS0KM001.AS0KM-SELECT-COLOR;
    AS0KW02.AS0KM-SELECT-SESN = AS0KM001.AS0KM-SELECT-SESN;
    AS0KW02.AS0KM-SELECT-YEAR = AS0KM001.AS0KM-SELECT-YEAR;
    set AS0KM001 initial;
    AS0KM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    if (AS1REC.AS1-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(AS1REC.AS1-MSG-NO);
    end /* Information message number*/
    AS1REC.AS1-MSG-NO = 0; /* Reset information message number*/
    AS0K-1210(); /* format header data*/
    AS0K-1220(); /* Format the data on the page*/
    set AS0KM001.FY1FCTYC[1] cursor; /* place cursor first factory*/
    AS0KW00.AS0KW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-NUMBER-SCREEN-LINES;
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX > 0
   && AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX] == " ")
    set AS0KM001.AS0KM-DELETE-IND[AS0KW-ARRAY-INDEX] skip, invisible;
    set AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] skip, invisible;
    set AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] skip, invisible;
    set AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] skip, invisible;
    set AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] skip, invisible;
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX - 1;
  end
  ;
  if (AS0KM001.AS0KM-SELECT-STYLE > " ")
    set AS0KM001.AS0KM-APPLY-ALL initialAttributes;
  else
    set AS0KM001.AS0KM-APPLY-ALL invisible;
  end
  ;
  ;
  converse AS0KM001 ;
end // end AS0K-1200

// format header data
Function AS0K-1210()
  AS0KM001.AS0KM-SELECT-FCTY = AS0KW02.AS0KM-SELECT-FCTY;
  AS0KM001.AS0KM-SELECT-STYLE = AS0KW02.AS0KM-SELECT-STYLE;
  AS0KM001.AS0KM-SELECT-COLOR = AS0KW02.AS0KM-SELECT-COLOR;
  AS0KM001.AS0KM-SELECT-SESN = AS0KW02.AS0KM-SELECT-SESN;
  AS0KM001.AS0KM-SELECT-YEAR = AS0KW02.AS0KM-SELECT-YEAR;
  ;
  if (AS0KM001.AS0KM-SELECT-FCTY != " ") /* a factory entered*/
    AS0KS-0002(); /* get factory short name*/
  else
    AS0KM001.FY1FCTSN = " "; /**/
  end
  ;
  if (AS0KM001.AS0KM-SELECT-STYLE != " ") /* a style entered*/
    AS0KS-0003(); /* get style short name*/
  else
    AS0KM001.SY1SSTNM = " "; /**/
  end
  ;
  if (AS0KM001.AS0KM-SELECT-COLOR != " ") /* a color entered*/
    AS0KS-0004(); /* get color abbrv*/
  else
    AS0KM001.SY2CLRAB = " "; /**/
  end
  ;
  if (AS0KM001.AS0KM-SELECT-SESN != " "
   || AS0KM001.AS0KM-SELECT-SESN != 0)
    ;
    if (AS0KM001.AS0KM-SELECT-SESN == " ")
      ;
      if (AS0KM001.AS0KM-SELECT-YEAR != 0)
        set AS0KM001.AS0KM-SELECT-SESN cursor, bold;
        converseLib.validationFailed(16);
        AS0KM001.XXXPRCNM = "AS0K-1210";
        AS0KW02.AS0KM-SELECT-YEAR = 0;
      end
      ;
    else
      ;
      if (AS0KM001.AS0KM-SELECT-YEAR == 0)
        set AS0KM001.AS0KM-SELECT-YEAR cursor, bold;
        converseLib.validationFailed(26);
        AS0KM001.XXXPRCNM = "AS0K-1210";
        AS0KW02.AS0KM-SELECT-SESN = " ";
      else
        AS0K-1520();
      end
      ;
    end
    ;
  end
  ;
end // end AS0K-1210

// format screen detail lines
Function AS0K-1220()
  AS0K-1221(); /* get page from tsq*/
  AS0KW00.AS0KW-ARRAY-INDEX = 1; /* first screen line*/
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
    AS0KM001.XSECD[AS0KW-ARRAY-INDEX] = AS0KW01.XSECD[AS0KW-ARRAY-INDEX];
    AS0KM001.XSNYR[AS0KW-ARRAY-INDEX] = AS0KW01.XSNYR[AS0KW-ARRAY-INDEX];
    AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] = AS0KW01.FY1FCTYC[AS0KW-ARRAY-INDEX];
    AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX] = AS0KW01.SY1STNBR[AS0KW-ARRAY-INDEX];
    AS0KM001.SY2CLRID[AS0KW-ARRAY-INDEX] = AS0KW01.SY2CLRID[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-SPOT-FL[AS0KW-ARRAY-INDEX] = AS0KW01.AB-SPOT-FL[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-BELT-FL[AS0KW-ARRAY-INDEX] = AS0KW01.AB-BELT-FL[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-EMB-FL[AS0KW-ARRAY-INDEX] = AS0KW01.AB-EMB-FL[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-STYDV-SPOT-FCTR[AS0KW-ARRAY-INDEX] = AS0KW01.AB-STYDV-SPOT-FCTR[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] = AS0KW01.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-STYDV-BELT-FCTR[AS0KW-ARRAY-INDEX] = AS0KW01.AB-STYDV-BELT-FCTR[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] = AS0KW01.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-STYDV-EMB-FCTR[AS0KW-ARRAY-INDEX] = AS0KW01.AB-STYDV-EMB-FCTR[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] = AS0KW01.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-SPOT-PRT-OVRDFL[AS0KW-ARRAY-INDEX] = AS0KW01.AB-SPOT-PRT-OVRDFL[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-BELT-PRT-OVRDFL[AS0KW-ARRAY-INDEX] = AS0KW01.AB-BELT-PRT-OVRDFL[AS0KW-ARRAY-INDEX];
    AS0KM001.AB-EMB-PRT-OVRD-FL[AS0KW-ARRAY-INDEX] = AS0KW01.AB-EMB-PRT-OVRD-FL[AS0KW-ARRAY-INDEX];
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0K-1220

// retrieve page from TSQ
Function AS0K-1221()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  set AS0KW01 empty; /* initialise tsq work area*/
  AS0KW01.AS0KW-TSQ-LENGTH = AS0KW00.AS0KW-TSQ-LENGTH;
  TA5REC.TA5APPID = "AS0K"; /* Application identification*/
  TA5REC.TA5TSQIX = AS0KW00.AS0KW-START-PAGE; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  call "TA0050" (AS0KW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0 /* no errors*/
   || TA5REC.TA5RTNCD == 1 /* both*/
   || TA5REC.TA5RTNCD == 4 /* both of these will*/
   || TA5REC.TA5RTNCD == 7) /* indicate no more pages*/
   /* next sentence;*/
  else
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AS0KM001.XXXPRCNM = "AS0K1221"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0K1221"; /* Error location*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(5); /* Indicate no data to display*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end AS0K-1221

// validate attn identifiers
Function AS0K-1300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AS0KM001 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0KM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      AS1REC.FY1FCTYC = AS0KM001.AS0KM-SELECT-FCTY;
      AS1REC.SY1STNBR = AS0KM001.AS0KM-SELECT-STYLE;
      AS1REC.SY2CLRID = AS0KM001.AS0KM-SELECT-COLOR;
      AS1REC.XSECD = AS0KM001.AS0KM-SELECT-SESN;
      if (AS0KM001.AS0KM-SELECT-YEAR != 0)
        AS1REC.AS1-XSN-YY = AS0KM001.AS0KM-SELECT-YEAR;
        AS1REC.AS1-XSN-CC = 0;
        if (AS1REC.AS1-XSN-YY < 50)
          AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
        else
          AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
        end
        AS1REC.XSNYR = AS1REC.AS1-XSN-CC-YY;
      else
        AS1REC.XSNYR = 0;
      end
      COMMAREA.CATOAP = AS0KM001.CATOAP;
      COMMAREA.CAITEM = AS0KM001.CAITEM;
      XPAS-39999(); /* Exit to another application*/
    else
      converseLib.validationFailed(4); /* Indicate PF key not valid*/
    end
    ;
    set AS0KM001.CATOAP cursor, modified, bold; /* Highlight*/
    AS0KM001.XXXPRCNM = "AS0K1300 "; /* process number*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0KM001.CAITEM > " ") /* application data was entered*/
    set AS0KM001.CAITEM cursor, modified, bold; /* highlight data*/
    converseLib.validationFailed(7); /* enter only with fast path*/
    AS0KM001.XXXPRCNM = "AS0K1300 "; /* process number*/
    exit stack; /* redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* pf1 is pressed*/
      COMMAREA.CAITEM = "AS0KM001"; /* appl find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* pf3 is pressed*/
      COMMAREA.CATOAP = "AS0A"; /* fluctuations menu*/
    end
    ;
    AS1REC.FY1FCTYC = AS0KM001.AS0KM-SELECT-FCTY;
    AS1REC.SY1STNBR = AS0KM001.AS0KM-SELECT-STYLE;
    AS1REC.SY2CLRID = AS0KM001.AS0KM-SELECT-COLOR;
    AS1REC.XSECD = AS0KM001.AS0KM-SELECT-SESN;
    if (AS0KM001.AS0KM-SELECT-YEAR != 0)
      AS1REC.AS1-XSN-YY = AS0KM001.AS0KM-SELECT-YEAR;
      if (AS1REC.AS1-XSN-YY < 50)
        AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
      else
        AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
      end
      AS1REC.XSNYR = AS1REC.AS1-XSN-CC-YY;
    else
      AS1REC.XSNYR = 0;
    end
    XPAS-39999(); /* Exit to another application*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey is pf15   /* apply update process*/
   && AS0KM001.AS0KM-SELECT-STYLE > " ")
    return; /* Exit*/
  end
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey is pf17)  /* reselect and resort data*/
    AS0KW00.AS0KW-REQUEST-DATA-SW = "Y";
    AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
    return; /* Exit*/
  end
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* or scroll forward*/
   && converseVar.eventKey not pf8   /* or scroll backward*/
   && converseVar.eventKey not pf13) /* or add screen*/
    AS0KM001.XXXPRCNM = "AS0K1300"; /* process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end AS0K-1300

// reset highlighted fields
Function AS0K-1400()
  set AS0KM001.AS0KM-SELECT-FCTY initialAttributes;
  set AS0KM001.AS0KM-SELECT-STYLE initialAttributes;
  set AS0KM001.AS0KM-SELECT-COLOR initialAttributes;
  set AS0KM001.AS0KM-SELECT-SESN initialAttributes;
  set AS0KM001.AS0KM-SELECT-YEAR initialAttributes;
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = 1; /* first screen line*/
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
    set AS0KM001.AS0KM-DELETE-IND[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.XSECD[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.XSNYR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.SY2CLRID[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-SPOT-FL[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-BELT-FL[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-EMB-FL[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-STYDV-SPOT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-STYDV-BELT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-STYDV-EMB-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-SPOT-PRT-OVRDFL[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-BELT-PRT-OVRDFL[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM001.AB-EMB-PRT-OVRD-FL[AS0KW-ARRAY-INDEX] initialAttributes;
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0K-1400

// validate entered data
Function AS0K-1500()
  if (converseVar.eventKey is pf7) /* scroll up*/
    ;
    if (AS0KW00.AS0KW-START-PAGE <= 1) /* already on first page*/
      converseLib.validationFailed(2); /* error no more backward*/
      AS0KM001.XXXPRCNM = "AS0K1500"; /* process number*/
      exit stack; /* return to display the map*/
    else /* no error*/
      return; /* return to calling process*/
    end
    ;
  end
  if (converseVar.eventKey is pf8) /* scroll down*/
    ;
    if (AS0KW00.AS0KW-START-PAGE >= AS0KW00.TA5TSQIX) /* already on last page*/
      converseLib.validationFailed(3); /* error no more forward*/
      AS0KM001.XXXPRCNM = "AS0K1500"; /* process number*/
      exit stack; /* return to display the map*/
    else /* no error*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  AS0KW00.AS0KW-DATA-CHANGED-SW = "N";
  AS0KW00.AS0KW-KEY-CHANGED-SW = "N";
  ;
  if (AS0KM001.AS0KM-SELECT-FCTY != AS0KW02.AS0KM-SELECT-FCTY
   || AS0KM001.AS0KM-SELECT-STYLE != AS0KW02.AS0KM-SELECT-STYLE
   || AS0KM001.AS0KM-SELECT-COLOR != AS0KW02.AS0KM-SELECT-COLOR
   || AS0KM001.AS0KM-SELECT-SESN != AS0KW02.AS0KM-SELECT-SESN
   || AS0KM001.AS0KM-SELECT-SESN == "  "
   || AS0KM001.AS0KM-SELECT-YEAR != AS0KW02.AS0KM-SELECT-YEAR
   || AS0KM001.AS0KM-SELECT-YEAR == 0)
    AS0KW00.AS0KW-KEY-CHANGED-SW = "Y";
    AS0KW00.AS0KW-DATA-CHANGED-SW = "N";
  end
  ;
  if (AS0KW02.AS0KM-SELECT-FCTY == " "
   && AS0KW02.AS0KM-SELECT-STYLE == " "
   && AS0KW02.AS0KM-SELECT-COLOR == " "
   && AS0KW02.AS0KM-SELECT-SESN == " "
   && AS0KW02.AS0KM-SELECT-YEAR == 0)
    AS0KW00.AS0KW-KEY-CHANGED-SW = "Y";
  end
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = 1;
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES
   && AS0KW00.AS0KW-DATA-CHANGED-SW == "N")
    ;
    if (AS0KM001.AS0KM-DELETE-IND[AS0KW-ARRAY-INDEX] != " ")
      AS0KW00.AS0KW-DATA-CHANGED-SW = "Y";
    else
      if (AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] != 
      AS0KW01.FY1FCTYC[AS0KW-ARRAY-INDEX])
        AS0KW00.AS0KW-DATA-CHANGED-SW = "Y";
      else
        if (AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] != 
        AS0KW01.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX])
          AS0KW00.AS0KW-DATA-CHANGED-SW = "Y";
        else
          if (AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] != 
          AS0KW01.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX])
            AS0KW00.AS0KW-DATA-CHANGED-SW = "Y";
          else
            if (AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] != 
            AS0KW01.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX])
              AS0KW00.AS0KW-DATA-CHANGED-SW = "Y";
            end
          end
        end
      end
    end
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  if (AS0KW00.AS0KW-DATA-CHANGED-SW == "N" /* data didnt change*/
   && AS0KW00.AS0KW-KEY-CHANGED-SW == "N") /* sel criteria not change*/
    return; /* return to calling routine*/
  end
  ;
  if (AS0KW00.AS0KW-KEY-CHANGED-SW == "Y") /* sel criteria changed*/
    ;
    if (AS0KM001.AS0KM-SELECT-SESN != AS0KW02.AS0KM-SELECT-SESN
     || AS0KM001.AS0KM-SELECT-YEAR != AS0KW02.AS0KM-SELECT-YEAR
     || AS0KM001.AS0KM-SELECT-SESN == " "
     || AS0KM001.AS0KM-SELECT-YEAR != 0)
      AS0KW02.AS0KM-SELECT-SESN = AS0KM001.AS0KM-SELECT-SESN;
      AS0KW02.AS0KM-SELECT-YEAR = AS0KM001.AS0KM-SELECT-YEAR;
      ;
      if (AS0KM001.AS0KM-SELECT-SESN == " ")
        set AS0KM001.AS0KM-SELECT-SESN cursor, bold;
        converseLib.validationFailed(16); /* invalid sesn msg*/
        AS0KM001.XXXPRCNM = "AS0K-1500";
        AS0KW02.AS0KM-SELECT-YEAR = 0;
      else
        if (AS0KM001.AS0KM-SELECT-YEAR == 0)
          set AS0KM001.AS0KM-SELECT-YEAR cursor, bold;
          converseLib.validationFailed(26); /* invalid year msg*/
          AS0KM001.XXXPRCNM = "AS0K-1500";
          AS0KW02.AS0KM-SELECT-SESN = " ";
        else
          AS0K-1520(); /* validate season/year*/
        end
      end
    end
    ;
    if (AS0KM001.AS0KM-SELECT-STYLE != AS0KW02.AS0KM-SELECT-STYLE)
      AS0KW02.AS0KM-SELECT-STYLE = AS0KM001.AS0KM-SELECT-STYLE;
      ;
      if (AS0KM001.AS0KM-SELECT-STYLE != " ")
        AS0KS-0003(); /* validate style number*/
      else
        AS0KM001.SY1SSTNM = " ";
      end
      ;
    end
    ;
    if (AS0KM001.AS0KM-SELECT-COLOR != AS0KW02.AS0KM-SELECT-COLOR)
      AS0KW02.AS0KM-SELECT-COLOR = AS0KM001.AS0KM-SELECT-COLOR;
      ;
      if (AS0KM001.AS0KM-SELECT-COLOR != " ")
        ;
        if (AS0KM001.AS0KM-SELECT-STYLE != " ")
          AS0KS-0004(); /* validate color code*/
        else
          converseLib.validationFailed(54); /* color needs style*/
          AS0KM001.XXXPRCNM = "AS0K1500";
          set AS0KM001.AS0KM-SELECT-STYLE cursor, bold;
          AS0KW02.AS0KM-SELECT-COLOR = " ";
        end
      else
        AS0KM001.SY2CLRAB = " ";
        ;
      end
      ;
    end
    ;
    if (AS0KM001.AS0KM-SELECT-FCTY != AS0KW02.AS0KM-SELECT-FCTY)
      AS0KW02.AS0KM-SELECT-FCTY = AS0KM001.AS0KM-SELECT-FCTY;
      ;
      if (AS0KM001.AS0KM-SELECT-FCTY != " ")
        AS0KS-0002(); /* validate factory code*/
      else
        AS0KM001.FY1FCTSN = " ";
      end
      ;
    end
    ;
  end
  ;
   /* *******************************************************/
   /* detail line quantities are edited by the map routines**/
   /* *******************************************************/
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-NUMBER-SCREEN-LINES;
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX > 0)
    ;
    if (AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] != 
    AS0KW01.FY1FCTYC[AS0KW-ARRAY-INDEX])
      AS0K-1510(); /* validate changed fcty*/
    end
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX - 1;
  end
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0KW00.AS0KW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0K-1500

// validate changed fcty
Function AS0K-1510()
  ;
   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  FY1REC.FY1FCTYC = AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX];
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] cursor, bold;
      converseLib.validationFailed(41); /* Indicate error message*/
      AS0KM001.XXXPRCNM = "AS0K1510 "; /* Process number*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1510"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1510"; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-1510

// Validat Season Code and Year
Function AS0K-1520()
  AS1REC.AS1-XSN-YY = AS0KM001.AS0KM-SELECT-YEAR;
  AS1REC.AS1-XSE-XSN = AS0KM001.AS0KM-SELECT-SESN;
  AS1REC.AS1-VALID-XSE-FL = "0";
  AS1REC.AS1-VALID-XSN-FL = "0";
  AS1REC.AS1-VALID-XSE-XSN-FL = "0";
  AS1REC.XSECD = AS0KM001.AS0KM-SELECT-SESN;
  AS1REC.AS1-XSN-CC = 0;
  XPAS-51200();
  ;
  if (AS1REC.AS1-VALID-XSE-XSN-FL != 0)
    set AS0KM001.AS0KM-SELECT-SESN cursor, bold;
    set AS0KM001.AS0KM-SELECT-YEAR bold;
    converseLib.validationFailed(71); /* invalid sesn/yr msg*/
    AS0KM001.XXXPRCNM = "AS0K-1520";
  end
  ;
  if (AS1REC.AS1-VALID-XSN-FL != 0)
    set AS0KM001.AS0KM-SELECT-YEAR cursor, bold;
    converseLib.validationFailed(26); /* invalid year msg*/
    AS0KM001.XXXPRCNM = "AS0K-1520";
  end
  ;
  if (AS1REC.AS1-VALID-XSE-FL != 0)
    set AS0KM001.AS0KM-SELECT-SESN cursor, bold;
    AS1REC.AS1-MSG-NO = 16; /* invalid sesn msg*/
    AS0KM001.XXXPRCNM = "AS0K-1520";
  end
  ;
end // end AS0K-1520

// process valid inq/maint req
Function AS0K-1600()
  if (converseVar.eventKey is pf7) /* scroll back*/
    AS0KW00.AS0KW-START-PAGE = AS0KW00.AS0KW-START-PAGE - 1;
    AS0KW00.AS0KW-REQUEST-DATA-SW = "N";
    AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* scroll forward*/
    AS0KW00.AS0KW-START-PAGE = AS0KW00.AS0KW-START-PAGE + 1;
    AS0KW00.AS0KW-REQUEST-DATA-SW = "N";
    AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf13) /* add screen*/
    AS0KW00.AS0KW-MAP-SW = "2";
    return;
  end
  ;
  if (converseVar.eventKey is pf15 /* add screen*/
   && AS0KM001.AS0KM-SELECT-STYLE > " ")
    AS0KW00.AS0KW-ARRAY-INDEX = 1; /* initialise*/
    while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
      if (AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX] > " ")
        AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] = AS0KM001.FY1FCTYC[1];
      end
      AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
    end
  end
  ;
  if (AS0KW00.AS0KW-KEY-CHANGED-SW == "Y") /* selection data changed*/
    AS0KW00.AS0KW-REQUEST-DATA-SW = "Y";
    AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
    AS0KW00.AS0KW-START-PAGE = 1;
    return;
  end
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = 1; /* initialise*/
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
    ;
    if (AS0KM001.AS0KM-DELETE-IND[AS0KW-ARRAY-INDEX] != " ")
      AS0K-1630(); /* delete row;*/
    else
      ;
      if (AS0KW01.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] != 
      AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX]
       || AS0KW01.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] != 
      AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX]
       || AS0KW01.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] != 
      AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX]
       || AS0KW01.FY1FCTYC[AS0KW-ARRAY-INDEX] != 
      AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX])
        AS0KW00.AS0KW-OLD-FCTY = AS0KW01.FY1FCTYC[AS0KW-ARRAY-INDEX];
        AS0K-1610(); /* update ASOVR01*/
        AS0K-1620(); /* update PRINT PLAN ROWS*/
        AS1REC.AS1-MSG-NO = 45; /* info msg update ok*/
      end
      ;
    end
    ;
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  ;
  if (AS0KW00.AS0KW-FORMAT-MAP-SW == "Y")
    AS0K-1613(); /* update TSQ*/
  end
  ;
end // end AS0K-1600

// update row
Function AS0K-1610()
  XX0XS01(); /* get date & time*/
  VASOVR01.VASOVR01-GROUP = AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX];
  VASOVR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VASOVR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VASOVR01.AB-SPOT-PRT-FCTR = AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VASOVR01.AB-BELT-PRT-FCTR = AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VASOVR01.AB-EMB-PRT-FCTR = AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VASOVR01.FY1FCTYC = AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX];
  ;
  if (VASOVR01.AB-SPOT-PRT-FCTR == 0)
    VASOVR01.AB-SPOT-FL = "N";
  else
    VASOVR01.AB-SPOT-FL = "Y";
  end
  ;
  if (VASOVR01.AB-SPOT-PRT-FCTR != 0
  )
    if (VASOVR01.AB-SPOT-PRT-FCTR == VASOVR01.AB-STYDV-SPOT-FCTR)
      VASOVR01.AB-SPOT-PRT-OVRDFL = "N";
    else
      VASOVR01.AB-SPOT-PRT-OVRDFL = "Y";
    end
    ;
  end
  ;
  if (VASOVR01.AB-BELT-PRT-FCTR == 0)
    VASOVR01.AB-BELT-FL = "N";
  else
    VASOVR01.AB-BELT-FL = "Y";
  end
  ;
  if (VASOVR01.AB-BELT-PRT-FCTR != 0
  )
    if (VASOVR01.AB-BELT-PRT-FCTR == VASOVR01.AB-STYDV-BELT-FCTR)
      VASOVR01.AB-BELT-PRT-OVRDFL = "N";
    else
      VASOVR01.AB-BELT-PRT-OVRDFL = "Y";
    end
    ;
  end
  ;
  if (VASOVR01.AB-EMB-PRT-FCTR == 0)
    VASOVR01.AB-EMB-FL = "N";
  else
    VASOVR01.AB-EMB-FL = "Y";
  end
  ;
  if (VASOVR01.AB-EMB-PRT-FCTR != 0
  )
    if (VASOVR01.AB-EMB-PRT-FCTR == VASOVR01.AB-STYDV-EMB-FCTR)
      VASOVR01.AB-EMB-PRT-OVRD-FL = "N";
    else
      VASOVR01.AB-EMB-PRT-OVRD-FL = "Y";
    end
    ;
  end
  ;
  AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX] = VASOVR01.VASOVR01-GROUP;
  ;
  if (VASOVR01.FY1FCTYC != AS0KW01.FY1FCTYC[AS0KW-ARRAY-INDEX])
    AS0K-1612(); /* check for duplicates*/
    VASOVR01.VASOVR01-GROUP = AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX];
  end
  ;
  AS0K-1611(); /* update ROW*/
end // end AS0K-1610

// update DABUY.VASOVR01 row
Function AS0K-1611()
   /* ===================================**/
   /* Update row in   dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("U ", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
      AS0KW01.ZZZCHGCT[AS0KW-ARRAY-INDEX] = AS0KW01.ZZZCHGCT[AS0KW-ARRAY-INDEX] + 1;
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any updates*/
      AS0KM001.XXXPRCNM = "AS0K1611"; /* process number*/
      set AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] cursor, bold; /* highlight*/
      converseLib.validationFailed(13); /* data already updated or something*/
      exit stack; /* return to display the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1611"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1611"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE ROW        ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-1611

// check for duplicate row
Function AS0K-1612()
  ;
   /* ===================================**/
   /* Select row from dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("S ", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* no row found*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* normal return code, row already there*/
      ;
      if (AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] == VASOVR01.FY1FCTYC)
        set AS0KM001.XSECD[AS0KW-ARRAY-INDEX] skip, bold;
        set AS0KM001.XSNYR[AS0KW-ARRAY-INDEX] skip, bold;
        set AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX] cursor, bold;
        set AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX] skip, bold;
        set AS0KM001.SY2CLRID[AS0KW-ARRAY-INDEX] skip, bold;
        set AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] bold;
        set AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] bold;
        set AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] bold;
        AS0KM001.XXXPRCNM = "AS0K1612"; /* Process number*/
        converseLib.validationFailed(134); /* dup row*/
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* roll back any changes*/
        exit stack; /* Return to display the map*/
      else
        return;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1612"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1612"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-1612

// UPDATE tsq
Function AS0K-1613()
   /* ------------------------------------------------------------*/
   /* UPDATE the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  AS0KW01.AS0KW-TSQ-LENGTH = AS0KW00.AS0KW-TSQ-LENGTH; /* Temporary storage length*/
  TA5REC.TA5APPID = "AS0K"; /* Application id*/
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  call "TA0050" (AS0KW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AS0KM001.XXXPRCNM = "AS0K1613"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0K1613"; /* Error location*/
    TA1REC.TA1LOC = "UPD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0KM001"; /* MAP NAME*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    return; /* Return to previous process*/
  end
  ;
  set AS0KW01 empty; /* Clear temporary storage record*/
end // end AS0K-1613

// PROCESS PRINT PLAN UPDATES
Function AS0K-1620()
  ;
    /* DECLARE CURSOR ON PRINT PLAN WITH NEW FACTORY TO DETRMINE*/
    /* IF DUPLICATES WILL BE CREATED*/
  AS0K-1621(); /* DECLARE CURSOR ON PRINT PLAN WITH NEW*/
                                   /* FACTORY*/
  AS0K-1622(); /* FETCH NEW FACTORY CURSOR*/
  AS0K-1623(); /* CLOSE NEW FACTORY CURSOR*/
  ;
  if (AS0KW00.AS0KW-NEW-FCTY-FOUND == "Y"
  ) /* SET ERROR TYPE*/
    return;
  end
  ;
  AS0KW00.AS0KW-EOC-OLD-FCTY-CURSOR = "N";
  AS0K-1624(); /* DELCARE CURSOR ON PP WITH OLD FCTY*/
  AS0K-1625(); /* FETCH OLD FACTORY CURSOR*/
  while (AS0KW00.AS0KW-EOC-OLD-FCTY-CURSOR == "N")
    AS0K-1626(); /* DELETE CURRENT PRITNT PLAN ROW*/
    AS0K-1627(); /* MOVE UPDATED FIELDS*/
    AS0K-1628(); /* INSERT NEW PRINT PLAN ROW*/
    AS0K-1625(); /* FETCH OLD FACTORY CURSOR*/
  end
  ;
  AS0K-1629(); /* CLOSE OLD FCTY PRTPL01 CURSOR*/
  ;
end // end AS0K-1620

// PRTPL01 CURSOR FOR NEW FCTY
Function AS0K-1621()
  set VPRTPL01 empty;
  ;
  VPRTPL01.XSECD = AS0KM001.XSECD[AS0KW-ARRAY-INDEX];
  ;
  AS1REC.AS1-XSN-YY = AS0KM001.XSNYR[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-XSN-CC = 0;
  if (AS0KM001.AS0KM-SELECT-YEAR < 50)
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
  else
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
  end
  VPRTPL01.XSNYR = AS1REC.AS1-XSN-CC-YY;
  ;
  VPRTPL01.SY1STNBR = AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX];
  VPRTPL01.SY2CLRID = AS0KM001.SY2CLRID[AS0KW-ARRAY-INDEX];
  ;
     /* ********************************************************/
     /* ********************  NEW FACTORY **********************/
     /* ********************************************************/
  VPRTPL01.FY1FCTYC = AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX];
  ;
  ;
  ;
   /* ===================================**/
   /* Select Set from DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("S1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1621"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1621"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-1621

// FETCH NEW PRTPL01 FCTY CURSOR
Function AS0K-1622()
  ;
   /* ===================================**/
   /* FETCH ROW  FROM DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("N1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      AS0KW00.AS0KW-NEW-FCTY-FOUND = "Y";
      return; /* Return to calling process*/
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* no more rows*/
      AS0KW00.AS0KW-NEW-FCTY-FOUND = "N";
      return; /* Return to calling process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K-1622"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K-1622"; /* Error location*/
  TA1REC.TA1LOC = "FETCH ROW  ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-1622

// CLOSE NEW PRTPL01 FCTY CURSOR
Function AS0K-1623()
   /* ===================================**/
   /* close cursor for DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("C1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1623"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1623"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE CURSOR";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-1623

// PRTPL01 CURSOR FOR OLD FCTY
Function AS0K-1624()
  set VPRTPL01 empty;
  ;
  VPRTPL01.XSECD = AS0KM001.XSECD[AS0KW-ARRAY-INDEX];
  ;
  AS1REC.AS1-XSN-YY = AS0KM001.XSNYR[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-XSN-CC = 0;
  if (AS0KM001.AS0KM-SELECT-YEAR < 50)
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
  else
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
  end
  VPRTPL01.XSNYR = AS1REC.AS1-XSN-CC-YY;
  ;
  VPRTPL01.SY1STNBR = AS0KM001.SY1STNBR[AS0KW-ARRAY-INDEX];
  VPRTPL01.SY2CLRID = AS0KM001.SY2CLRID[AS0KW-ARRAY-INDEX];
  ;
     /* ********************************************************/
     /* ********************  OLD FACTORY **********************/
     /* ********************************************************/
  VPRTPL01.FY1FCTYC = AS0KW00.AS0KW-OLD-FCTY;
  ;
  ;
  ;
   /* ===================================**/
   /* Select Set from DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("S1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1624"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1624"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-1624

// FETCH OLD PRTPL01 FCTY CURSOR
Function AS0K-1625()
  ;
   /* ===================================**/
   /* FETCH ROW  FROM DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("N1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to calling process*/
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* no more rows*/
      AS0KW00.AS0KW-EOC-OLD-FCTY-CURSOR = "Y";
      return; /* Return to calling process*/
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K-1625"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K-1625"; /* Error location*/
  TA1REC.TA1LOC = "FETCH ROW  ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-1625

// DELETE OLD PRTPL01 FCTY ROW
Function AS0K-1626()
  ;
   /* ===================================**/
   /* DELETE ROW FROM DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("D1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* Delete curr rec*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* return to display the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1626"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1626"; /* Error location*/
  TA1REC.TA1LOC = "DELETE ROW        ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-1626

// MOVE UPDATED FIELDS
Function AS0K-1627()
   /* Update Fields in print plan......*/
  ;
  XX0XS01(); /* get date & time*/
  ;
  VPRTPL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VPRTPL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  VPRTPL01.AB-SPOT-PRT-FCTR = AS0KM001.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VPRTPL01.AB-BELT-PRT-FCTR = AS0KM001.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VPRTPL01.AB-EMB-PRT-FCTR = AS0KM001.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VPRTPL01.FY1FCTYC = AS0KM001.FY1FCTYC[AS0KW-ARRAY-INDEX];
  VPRTPL01.XZZ6CHR = "AS0K";
  ;
end // end AS0K-1627

// INSERT NEW PRINT PLAN ROW
Function AS0K-1628()
   /* ===================================**/
   /* ADD ROW TO DABUY.VPRTPL01        **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("A ", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K1628"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1628"; /* Error location*/
  TA1REC.TA1LOC = "ADD ROW        ";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-1628

// CLOSE OLD FCTY PRTPL01 CURSOR
Function AS0K-1629()
   /* ===================================**/
   /* close cursor for DABUY.VPRTPL01  **/
   /* ===================================**/
  ;
  try
    call "AS1120" ("C1", SQLCA, VPRTPL01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1629"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1629"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE CURSOR";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRTPL01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-1629

// delete process
Function AS0K-1630()
  VASOVR01.VASOVR01-GROUP = AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX];
  ;
   /* ===================================**/
   /* Delete row from dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("D ", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      AS0KW00.AS0KW-REQUEST-DATA-SW = "Y";
      AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* return to display the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0K1630"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K1630"; /* Error location*/
  TA1REC.TA1LOC = "DELETE ROW        ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-1630

// add main process (map 2)
Function AS0K-2000()
  AS0K-2200(); /* format map*/
  AS0K-2300(); /* validate pf keys/ pop up windows*/
  AS0K-2400(); /* reset highlighted fields*/
  AS0K-2500(); /* validate input data*/
  AS0K-2600(); /* process valid input data*/
end // end AS0K-2000

// format and display map 2
Function AS0K-2200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0KM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0KM002 alarm; /* Indicate sound alarm*/
  end
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
   /* next sentence                /* return to calling process*/
  else
    set AS0KM002 initial;
    if (AS1REC.AS1-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(AS1REC.AS1-MSG-NO);
    end /* Information message number*/
    AS1REC.AS1-MSG-NO = 0; /* Reset information message number*/
    AS0KM002.AS0KM-SELECT-SESN = AS0KM001.AS0KM-SELECT-SESN;
    AS0KM002.AS0KM-SELECT-YEAR = AS0KM001.AS0KM-SELECT-YEAR;
    AS0KM002.AS0KM-SELECT-FCTY = AS0KM001.AS0KM-SELECT-FCTY;
    AS0KM002.FY1FCTSN = AS0KM001.FY1FCTSN; /* factory short name*/
    AS0KM002.AS0KM-SELECT-STYLE = AS0KM001.AS0KM-SELECT-STYLE;
    AS0KM002.SY1SSTNM = AS0KM001.SY1SSTNM; /* style short name*/
    AS0KM002.AS0KM-SELECT-COLOR = AS0KM001.AS0KM-SELECT-COLOR;
    AS0KM002.SY2CLRAB = AS0KM001.SY2CLRAB; /* color description*/
  end
  ;
  converse AS0KM002 ;
end // end AS0K-2200

// validate attn identifiers
Function AS0K-2300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AS0KM002 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0KM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      AS1REC.FY1FCTYC = AS0KM002.AS0KM-SELECT-FCTY;
      AS1REC.SY1STNBR = AS0KM002.AS0KM-SELECT-STYLE;
      AS1REC.SY2CLRID = AS0KM002.AS0KM-SELECT-COLOR;
      AS1REC.XSECD = AS0KM002.AS0KM-SELECT-SESN;
      if (AS0KM002.AS0KM-SELECT-YEAR != 0)
        AS1REC.AS1-XSN-YY = AS0KM002.AS0KM-SELECT-YEAR;
        AS1REC.AS1-XSN-CC = 0;
        if (AS1REC.AS1-XSN-YY < 50)
          AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
        else
          AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
        end
        AS1REC.XSNYR = AS1REC.AS1-XSN-CC-YY;
      else
        AS1REC.XSNYR = 0;
      end
      XPAS-39999(); /* Exit to another application*/
    else
      converseLib.validationFailed(4); /* Indicate PF key not valid*/
    end
    ;
    set AS0KM002.CATOAP cursor, modified, bold; /* Highlight*/
    AS0KM002.XXXPRCNM = "AS0K2300 "; /* process number*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0KM002.CAITEM > " ") /* application data was entered*/
    set AS0KM002.CAITEM cursor, modified, bold; /* highlight data*/
    converseLib.validationFailed(7); /* enter only with fast path*/
    AS0KM002.XXXPRCNM = "AS0K2300 "; /* process number*/
    exit stack; /* redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* pf1 is pressed*/
      COMMAREA.CAITEM = "AS0KM002"; /* appl find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* pf3 is pressed*/
      COMMAREA.CATOAP = "AS0A"; /* fluctuations menu*/
    end
    ;
    AS1REC.FY1FCTYC = AS0KM002.AS0KM-SELECT-FCTY;
    AS1REC.SY1STNBR = AS0KM002.AS0KM-SELECT-STYLE;
    AS1REC.SY2CLRID = AS0KM002.AS0KM-SELECT-COLOR;
    AS1REC.XSECD = AS0KM002.AS0KM-SELECT-SESN;
    if (AS0KM002.AS0KM-SELECT-YEAR != 0)
      AS1REC.AS1-XSN-YY = AS0KM002.AS0KM-SELECT-YEAR;
      if (AS1REC.AS1-XSN-YY < 50)
        AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
      else
        AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
      end
      AS1REC.XSNYR = AS1REC.AS1-XSN-CC-YY;
    else
      AS1REC.XSNYR = 0;
    end
    XPAS-39999(); /* Exit to another application*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* or scroll forward*/
   && converseVar.eventKey not pf8   /* or scroll backward*/
   && converseVar.eventKey not pf14) /* or maint screen*/
    AS0KM002.XXXPRCNM = "AS0K2300"; /* process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end AS0K-2300

// reset highlighted fields
Function AS0K-2400()
  AS0KW00.AS0KW-ARRAY-INDEX = 1; /* first screen line*/
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
    set AS0KM002.XSECD[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.FY1FCTYC[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    set AS0KM002.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] initialAttributes;
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0K-2400

// validate entered data
Function AS0K-2500()
  if (converseVar.eventKey is pf14)
    return;
  end
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-NUMBER-SCREEN-LINES;
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX > 0)
    ;
    if (AS0KM002.XSECD[AS0KW-ARRAY-INDEX] != " "
     || AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] != 0
     || AS0KM002.FY1FCTYC[AS0KW-ARRAY-INDEX] != " "
     || AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX] != " "
     || AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] != " "
     || AS0KM002.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] != 0
     || AS0KM002.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] != 0
     || AS0KM002.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] != 0)
      AS0K-2570(); /* edit season/year*/
      AS0K-2520(); /* edit style*/
      AS0K-2560(); /* edit factory*/
      if (AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] != " ") /* color was keyed*/
        AS0K-2510(); /* edit color*/
      else
        set AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] cursor, bold;
        converseLib.validationFailed(91); /* color invalid msg*/
        AS0KM002.XXXPRCNM = "AS0K-2500";
      end
      AS0K-2580(); /* edit sesn/year/style/color*/
    end
    ;
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX - 1;
  end
  ;
  if (converseVar.validationMsgNum != 0) /* an error*/
    exit stack; /* return to display the map*/
  end
end // end AS0K-2500

// edit color code
Function AS0K-2510()
   /* ------------------------------------------------------------*/
   /* Validate color code from DPRODG.VSYCLR01.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PG2REC empty; /* initialize db record*/
  PG2REC.XGPCD = "03"; /* gpc cd*/
  PG2REC.SY1STNBR = AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX]; /* style*/
  PG2REC.SY2CLRID = AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX]; /* color*/
  PG2REC.XDMCD = "00"; /* dimension cd*/
  ;
   /* *=============================**/
   /* *  Access DPRODG.VSYCLR01 DB  * Obtain style,color desc*/
   /* *=============================**/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      converseLib.validationFailed(91); /* invalid color*/
      set AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] cursor, bold; /* highlight*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AS0KS-0003"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AS0KM002.XXXPRCNM = "AS0K2510"; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
end // end AS0K-2510

// edit style number
Function AS0K-2520()
  AS0K-2530(); /* select set syclr*/
  AS0K-2540(); /* fetch one row*/
  AS0K-2550(); /* close cursor syclr*/
end // end AS0K-2520

// select set DPRODG.VSYCLR01
Function AS0K-2530()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = "03"; /* GPC cd*/
  PG2REC.SY1STNBR = AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX]; /* Style no.*/
  ;
   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2530"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2530"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-2530

// fetch row DPRODG.VSYCLR01
Function AS0K-2540()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      if (AS0KW00.AS0KW-GET-COLORS-SW != "Y")
        set AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX] cursor, bold;
        converseLib.validationFailed(38); /* Indicate error message*/
        AS0KM002.XXXPRCNM = "AS0K2540"; /* Process number*/
      end
      return; /* Exit to calling rtn*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2540"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2540"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0KM002"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-2540

// close cursor DPRODG.VSYCLR01
Function AS0K-2550()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  AS0KM002.XXXPRCNM = "AS0K2550"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2550"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
end // end AS0K-2550

// edit factory code
Function AS0K-2560()
  ;
   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  FY1REC.FY1FCTYC = AS0KM002.FY1FCTYC[AS0KW-ARRAY-INDEX];
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AS0KM002.FY1FCTYC[AS0KW-ARRAY-INDEX] cursor, bold;
      converseLib.validationFailed(41); /* Indicate error message*/
      AS0KM002.XXXPRCNM = "AS0K2560 "; /* Process number*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2560"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2560"; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-2560

// edit season/year
Function AS0K-2570()
  if (AS0KM002.XSECD[AS0KW-ARRAY-INDEX] == " ")
    set AS0KM002.XSECD[AS0KW-ARRAY-INDEX] cursor; /* bright;*/
    converseLib.validationFailed(16);
    AS0KM002.XXXPRCNM = "AS0K.2570";
    return;
  else
    if (AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] == 0)
      set AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] cursor; /* bright;*/
      converseLib.validationFailed(26);
      AS0KM002.XXXPRCNM = "AS0K.2570";
      return;
    end
  end
  ;
  AS1REC.AS1-XSN-YY = AS0KM002.XSNYR[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-XSE-XSN = AS0KM002.XSECD[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-VALID-XSE-FL = "0";
  AS1REC.AS1-VALID-XSN-FL = "0";
  AS1REC.AS1-VALID-XSE-XSN-FL = "0";
  AS1REC.XSECD = AS0KM002.XSECD[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-XSN-CC = 0;
  XPAS-51200();
  ;
  if (AS1REC.AS1-VALID-XSE-XSN-FL != 0)
    set AS0KM002.XSECD[AS0KW-ARRAY-INDEX] cursor, bold;
    set AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] bold;
    converseLib.validationFailed(71); /* invalid sesn/yr msg*/
    AS0KM002.XXXPRCNM = "AS0K-2570";
  end
  ;
  if (AS1REC.AS1-VALID-XSN-FL != 0)
    set AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] cursor, bold;
    converseLib.validationFailed(26); /* invalid year msg*/
    AS0KM002.XXXPRCNM = "AS0K-2570";
  end
  ;
  if (AS1REC.AS1-VALID-XSE-FL != 0)
    set AS0KM002.XSECD[AS0KW-ARRAY-INDEX] cursor, bold;
    AS1REC.AS1-MSG-NO = 16; /* invalid sesn msg*/
    AS0KM002.XXXPRCNM = "AS0K-2570";
  end
  ;
end // end AS0K-2570

// edit sesn/year/style/color
Function AS0K-2580()
  AS0K-2582(); /* select set afclr*/
  AS0K-2584(); /* fetch one row*/
  AS0K-2586(); /* close cursor afclr*/
end // end AS0K-2580

// select set afclr
Function AS0K-2582()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set AF5REC empty; /* Reset rec work area*/
  AF5REC.XSECD = AS0KM002.XSECD[AS0KW-ARRAY-INDEX]; /* season code*/
  ;
  AS1REC.AS1-XSN-YY = AS0KM002.XSNYR[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-XSN-CC = 0;
  if (AS1REC.AS1-XSN-YY < 50)
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
  else
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
  end
  AF5REC.XSNYR = AS1REC.AS1-XSN-CC-YY; /* season year*/
  ;
  AF5REC.SY1STNBR = AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX]; /* Style*/
  AF5REC.SY2CLRID = AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX]; /* color*/
  ;
   /* *===================================**/
   /* *  Select Set from DACAST.VAFCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3520" ("S5", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2582"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2582"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-2582

// fetch dacast.vafclr01 row
Function AS0K-2584()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
   /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3520" ("N5", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AS0KM002.XSECD[AS0KW-ARRAY-INDEX] cursor, bold;
      set AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] bold;
      set AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX] bold;
      set AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] bold;
      converseLib.validationFailed(150); /* Indicate error message*/
      AS0KM002.XXXPRCNM = "AS0K2584"; /* Process number*/
      return; /* Exit to calling rtn*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2584"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2584"; /* Error location*/
  TA1REC.TA1LOC = "GET DACAST.VAFCLR01 ROW";
  TA1REC.TA1MAP = "AS0KM002"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0K-2584

// close cursor dacast.vafclr01
Function AS0K-2586()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3520" ("C5", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  AS0KM002.XXXPRCNM = "AS0K2586"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2586"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
end // end AS0K-2586

// process valid add request
Function AS0K-2600()
  ;
  if (converseVar.eventKey is pf14) /* inq/maint screen*/
    AS0KW00.AS0KW-MAP-SW = "1";
    AS0KW00.AS0KW-REQUEST-DATA-SW = "Y";
    AS0KW00.AS0KW-FORMAT-MAP-SW = "Y";
    return;
  end
  ;
  AS0KW00.AS0KW-ARRAY-INDEX = 1; /* initialize*/
  XX0XS01(); /* get date & time*/
  ;
  while (AS0KW00.AS0KW-ARRAY-INDEX <= AS0KW00.AS0KW-NUMBER-SCREEN-LINES)
    ;
    if (AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX] != " ") /* an entry this line*/
      set VASOVR01 empty;
      VASOVR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
      VASOVR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
      VASOVR01.XSECD = AS0KM002.XSECD[AS0KW-ARRAY-INDEX];
      AS1REC.AS1-XSN-YY = AS0KM002.XSNYR[AS0KW-ARRAY-INDEX];
      ;
      AS1REC.AS1-XSN-CC = 0;
      if (AS1REC.AS1-XSN-YY < 50)
        AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
      else
        AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
      end
      VASOVR01.XSNYR = AS1REC.AS1-XSN-CC-YY;
      ;
      VASOVR01.FY1FCTYC = AS0KM002.FY1FCTYC[AS0KW-ARRAY-INDEX];
      VASOVR01.SY1STNBR = AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX];
      if (AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] != " ") /* keyed a color*/
        VASOVR01.SY2CLRID = AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX];
        AS0KW00.AS0KW-GET-COLORS-SW = "N";
        AS0K-2640(); /* build vasovr record*/
      else
        AS0KW00.AS0KW-GET-COLORS-SW = "Y";
        AS0K-2630(); /* build colors*/
      end
    end
    ;
    AS0KW00.AS0KW-ARRAY-INDEX = AS0KW00.AS0KW-ARRAY-INDEX + 1;
  end
  ;
  AS1REC.AS1-MSG-NO = 45; /* info msg update ok*/
end // end AS0K-2600

// add DABUY.VASOVR01 row
Function AS0K-2610()
   /* ===================================**/
   /* Add row to dabuy.vasovr01        **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("A ", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2610"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2610"; /* Error location*/
  TA1REC.TA1LOC = "ADD ROW        ";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0K-2610

// check for duplicates
Function AS0K-2620()
  set VASOVR01 empty;
  VASOVR01.XSECD = AS0KM002.XSECD[AS0KW-ARRAY-INDEX];
  AS1REC.AS1-XSN-YY = AS0KM002.XSNYR[AS0KW-ARRAY-INDEX];
  ;
  AS1REC.AS1-XSN-CC = 0;
  if (AS1REC.AS1-XSN-YY < 50)
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 2000;
  else
    AS1REC.AS1-XSN-CC-YY = AS1REC.AS1-XSN-CC-YY + 1900;
  end
  VASOVR01.XSNYR = AS1REC.AS1-XSN-CC-YY;
  ;
  VASOVR01.SY1STNBR = AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX];
  if (AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] != " ")
    VASOVR01.SY2CLRID = AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX];
  else
    VASOVR01.SY2CLRID = PG2REC.SY2CLRID;
  end
  ;
   /* ===================================**/
   /* Select row from dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("S ", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* no row found*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* normal return code, row already there*/
      set AS0KM002.XSECD[AS0KW-ARRAY-INDEX] cursor, bold;
      set AS0KM002.XSNYR[AS0KW-ARRAY-INDEX] cursor, bold;
      set AS0KM002.FY1FCTYC[AS0KW-ARRAY-INDEX] cursor, bold;
      set AS0KM002.SY1STNBR[AS0KW-ARRAY-INDEX] bold;
      set AS0KM002.SY2CLRID[AS0KW-ARRAY-INDEX] bold;
      set AS0KM002.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX] bold;
      set AS0KM002.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX] bold;
      set AS0KM002.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX] bold;
      AS0KM002.XXXPRCNM = "AS0K2620"; /* Process number*/
      converseLib.validationFailed(134); /* dup row*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any changes*/
      exit stack; /* Return to display the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM002.XXXPRCNM = "AS0K2620"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0K2620"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AS0KM002"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0K-2620

// set up colors for vasovr01
Function AS0K-2630()
  ;
  AS0K-2530(); /* set up dprodg.vsyclr01 to get colors*/
  ;
  AS0K-2540(); /* fetch first dprodg row*/
  ;
  while (SQLCA.VAGen_SQLCODE != 100) /* while there are more colors*/
    VASOVR01.SY2CLRID = PG2REC.SY2CLRID;
    AS0K-2640(); /* move remaining fields and add record*/
    AS0K-2540(); /* fetch next row*/
  end
  ;
  AS0K-2550(); /* close dprodg.vsyclr01 cursor*/
  ;
end // end AS0K-2630

// move screen to vasovr01
Function AS0K-2640()
  ;
  VASOVR01.AB-SPOT-PRT-FCTR = AS0KM002.AB-SPOT-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VASOVR01.AB-BELT-PRT-FCTR = AS0KM002.AB-BELT-PRT-FCTR[AS0KW-ARRAY-INDEX];
  VASOVR01.AB-EMB-PRT-FCTR = AS0KM002.AB-EMB-PRT-FCTR[AS0KW-ARRAY-INDEX];
  ;
  if (VASOVR01.AB-SPOT-PRT-FCTR == 0)
    VASOVR01.AB-SPOT-FL = "N";
    VASOVR01.AB-SPOT-PRT-OVRDFL = "N";
  else
    VASOVR01.AB-SPOT-FL = "Y";
    VASOVR01.AB-SPOT-PRT-OVRDFL = "Y";
  end
  ;
  if (VASOVR01.AB-BELT-PRT-FCTR == 0)
    VASOVR01.AB-BELT-FL = "N";
    VASOVR01.AB-BELT-PRT-OVRDFL = "N";
  else
    VASOVR01.AB-BELT-FL = "Y";
    VASOVR01.AB-BELT-PRT-OVRDFL = "Y";
  end
  ;
  if (VASOVR01.AB-EMB-PRT-FCTR == 0)
    VASOVR01.AB-EMB-FL = "N";
    VASOVR01.AB-EMB-PRT-OVRD-FL = "N";
  else
    VASOVR01.AB-EMB-FL = "Y";
    VASOVR01.AB-EMB-PRT-OVRD-FL = "Y";
  end
  ;
  AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX] = VASOVR01.VASOVR01-GROUP;
  AS0K-2620(); /* check for duplicates*/
  VASOVR01.VASOVR01-GROUP = AS0KW01.VASOVR01-GROUP[AS0KW-ARRAY-INDEX];
  AS0K-2610(); /* add row*/
  ;
end // end AS0K-2640

// fetch next vasovr01 row
Function AS0KS-0001()
  ;
   /* ===================================**/
   /* fetch row  from dabuy.vasovr01  **/
   /* ===================================**/
  ;
  try
    call "IO6430" ("N1", SQLCA, VASOVR01) {isNoRefresh = yes, isExternal = yes};
  end /* fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* no more rows*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0KS0010"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0KS0010"; /* Error location*/
  TA1REC.TA1LOC = "FETCH ROW  ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DABUY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VASOVR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0KW00.AS0KW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0KS-0001

// get factory short name
Function AS0KS-0002()
  if (AS0KM001.AS0KM-SELECT-FCTY == " ") /* as0km001 Field eq spaces*/
    AS0KM001.FY1FCTSN = " "; /* space out short name*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  FY1REC.FY1FCTYC = AS0KM001.AS0KM-SELECT-FCTY; /* factory code*/
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AS0KM001.FY1FCTSN = FY1REC.FY1FCTSN;
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      set AS0KM001.AS0KM-SELECT-FCTY cursor, bold; /* Highlight field*/
      AS0KM001.FY1FCTSN = " "; /* space screen description*/
      AS0KW02.AS0KM-SELECT-FCTY = " ";
      converseLib.validationFailed(41); /* Indicate error message*/
      AS0KM001.XXXPRCNM = "AS0KS0020 "; /* Process number*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0KS0020"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0KS0020"; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0KS-0002

// get style short name
Function AS0KS-0003()
  AS0KM001.SY1SSTNM = " "; /* space out short name*/
  AS0KS-0005(); /* select set syclr*/
  AS0KS-0006(); /* fetch one row*/
  AS0KS-0007(); /* close cursor syclr*/
end // end AS0KS-0003

// get color abreviation
Function AS0KS-0004()
   /* ------------------------------------------------------------*/
   /* Obtain Style and Color descriptions from DPRODG.VSYCLR01.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PG2REC empty; /* initialize db record*/
  PG2REC.XGPCD = "03"; /* gpc cd*/
  PG2REC.SY1STNBR = AS0KM001.AS0KM-SELECT-STYLE; /* style*/
  PG2REC.SY2CLRID = AS0KM001.AS0KM-SELECT-COLOR; /* color*/
  PG2REC.XDMCD = "00"; /* dimension cd*/
  ;
  ;
   /* *=============================**/
   /* *  Access DPRODG.VSYCLR01 DB  * Obtain style,color desc*/
   /* *=============================**/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AS0KM001.SY2CLRAB = PG2REC.SY2CLRAB; /* move color desc*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AS0KM001.SY2CLRAB = " "; /* Blank out color abbrev*/
      AS0KW02.AS0KM-SELECT-COLOR = " ";
      converseLib.validationFailed(91); /* invalid color*/
      set AS0KM001.AS0KM-SELECT-COLOR cursor, bold; /* highlight*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AS0KS0040"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AS0KM001.XXXPRCNM = "AS0KS0040"; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0KS-0004

// select set DPRODG.VSYCLR01
Function AS0KS-0005()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = "03"; /* GPC cd*/
  PG2REC.SY1STNBR = AS0KM001.AS0KM-SELECT-STYLE; /* Style no.*/
  ;
   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0KS0050"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0KS0050"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0KS-0005

// fetch row DPRODG.VSYCLR01
Function AS0KS-0006()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      AS0KM001.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AS0KM001.SY1SSTNM = " "; /* Space out desc*/
      AS0KW02.AS0KM-SELECT-STYLE = " ";
      set AS0KM001.AS0KM-SELECT-STYLE cursor, bold; /* Highlight field*/
      converseLib.validationFailed(38); /* Indicate error message*/
      AS0KM001.XXXPRCNM = "AS0KS0060"; /* Process number*/
      return; /* Exit to calling rtn*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0KM001.XXXPRCNM = "AS0KS0060"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0KS0060"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0KM001"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0KS-0006

// close cursor DPRODG.VSYCLR01
Function AS0KS-0007()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  AS0KM001.XXXPRCNM = "AS0KS0070"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0KS0070"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = "AS0KM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
end // end AS0KS-0007

//*** RECORD=AS0KW00 ****
// This record is misc working-storage for CSP application AS0K
// ***********************
Record AS0KW00 type basicRecord
  10 AS0KW-NUMBER-SCREEN-LINES AS0KW-NUMBER-SCREEN-LINES ; 
  10 AS0KW-START-PAGE AS0KW-START-PAGE ; 
  10 AS0KW-TSQ-LENGTH AS0KW-TSQ-LENGTH ; 
  10 AS0KW-ARRAY-INDEX AS0KW-ARRAY-INDEX ; 
  10 AS0KW-TEMP-INDEX AS0KW-TEMP-INDEX ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 AS0KW-FORMAT-MAP-SW AS0KW-FORMAT-MAP-SW ; 
  10 AS0KW-MAP-SW AS0KW-MAP-SW ; 
  10 AS0KW-REQUEST-DATA-SW AS0KW-REQUEST-DATA-SW ; 
  10 AS0KW-DATA-CHANGED-SW AS0KW-DATA-CHANGED-SW ; 
  10 AS0KW-KEY-CHANGED-SW AS0KW-KEY-CHANGED-SW ; 
  10 AS0KW-GET-COLORS-SW AS0KW-GET-COLORS-SW ; 
  10 AS0KW-NEW-FCTY-FOUND AS0KW-NEW-FCTY-FOUND ; 
  10 AS0KW-EOC-OLD-FCTY-CURSOR AS0KW-EOC-OLD-FCTY-CURSOR ; 
  10 AS0KW-OLD-FCTY AS0KW-OLD-FCTY ; 
end // end AS0KW00

//*** RECORD=AS0KW01 ****
// this record is the array which contains a page worth of
// detail lines for CSP application AS0K
// ***********************
Record AS0KW01 type basicRecord
  5 * char(592) ; 
    10 AS0KW-TSQ-LENGTH AS0KW-TSQ-LENGTH ; 
    10 VASOVR01-GROUP VASOVR01-GROUP [12] ; 
      15 XSECD XSECD ; 
      15 XSNYR XSNYR ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 AB-PRT-PLN-NMO-QTY AB-PRT-PLN-NMO-QTY ; 
      15 AB-BELT-FL AB-BELT-FL ; 
      15 AB-SPOT-FL AB-SPOT-FL ; 
      15 AB-EMB-FL AB-EMB-FL ; 
      15 AB-STYDV-BELT-FCTR AB-STYDV-BELT-FCTR ; 
      15 AB-STYDV-SPOT-FCTR AB-STYDV-SPOT-FCTR ; 
      15 AB-STYDV-EMB-FCTR AB-STYDV-EMB-FCTR ; 
      15 AB-BELT-PRT-FCTR AB-BELT-PRT-FCTR ; 
      15 AB-SPOT-PRT-FCTR AB-SPOT-PRT-FCTR ; 
      15 AB-EMB-PRT-FCTR AB-EMB-PRT-FCTR ; 
      15 AB-BELT-PRT-OVRDFL AB-BELT-PRT-OVRDFL ; 
      15 AB-SPOT-PRT-OVRDFL AB-SPOT-PRT-OVRDFL ; 
      15 AB-EMB-PRT-OVRD-FL AB-EMB-PRT-OVRD-FL ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end AS0KW01

Record AS0KW02 type basicRecord
  10 * char(5) ; 
  10 AS0KM-SELECT-SESN AS0KM-SELECT-SESN ; 
  10 AS0KM-SELECT-YEAR AS0KM-SELECT-YEAR ; 
  10 AS0KM-SELECT-FCTY AS0KM-SELECT-FCTY ; 
  10 AS0KM-SELECT-STYLE AS0KM-SELECT-STYLE ; 
  10 AS0KM-SELECT-COLOR AS0KM-SELECT-COLOR ; 
end // end AS0KW02

//*** RECORD=VASOVR01 ****
// *****************print plan default table*******************
// DB2 TABLE:         DAbuy.vasovr01
// COPYLIB MEMBER:    DCL01070
// I/O MOD:           IO
// KEY TO DB2 TABLE:  sy1stnbr
//                    sy2clrid
//                    fy1fctyc
// DATE CREATED:      08-03-92
// MAINTENANCE LOG:
//   DATE    USERID  COMMENT
// --------  ------  -------
// 08-03-92  LREIN   INITIAL INSTALLATION
// *****************print plan default table*******************
// ************************
Record VASOVR01 type basicRecord
  10 VASOVR01-GROUP VASOVR01-GROUP ; 
    15 XSECD XSECD ; 
    15 XSNYR XSNYR ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 AB-PRT-PLN-NMO-QTY AB-PRT-PLN-NMO-QTY ; 
    15 AB-BELT-FL AB-BELT-FL ; 
    15 AB-SPOT-FL AB-SPOT-FL ; 
    15 AB-EMB-FL AB-EMB-FL ; 
    15 AB-STYDV-BELT-FCTR AB-STYDV-BELT-FCTR ; 
    15 AB-STYDV-SPOT-FCTR AB-STYDV-SPOT-FCTR ; 
    15 AB-STYDV-EMB-FCTR AB-STYDV-EMB-FCTR ; 
    15 AB-BELT-PRT-FCTR AB-BELT-PRT-FCTR ; 
    15 AB-SPOT-PRT-FCTR AB-SPOT-PRT-FCTR ; 
    15 AB-EMB-PRT-FCTR AB-EMB-PRT-FCTR ; 
    15 AB-BELT-PRT-OVRDFL AB-BELT-PRT-OVRDFL ; 
    15 AB-SPOT-PRT-OVRDFL AB-SPOT-PRT-OVRDFL ; 
    15 AB-EMB-PRT-OVRD-FL AB-EMB-PRT-OVRD-FL ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end VASOVR01

// ab-belt-fl
DataItem AB-BELT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab-belt-prt-ovrdfl
DataItem AB-BELT-PRT-OVRDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab-emb-fl
DataItem AB-EMB-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab-emb-prt-ovrd-fl
DataItem AB-EMB-PRT-OVRD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab-prt-pln-nmo-qty
DataItem AB-PRT-PLN-NMO-QTY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ab-spot-fl
DataItem AB-SPOT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab-spot-prt-ovrdfl
DataItem AB-SPOT-PRT-OVRDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ab-stydv-belt-fctr
DataItem AB-STYDV-BELT-FCTR decimal(3,1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ab-stydv-emb-fctr
DataItem AB-STYDV-EMB-FCTR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ab-stydv-spot-fctr
DataItem AB-STYDV-SPOT-FCTR decimal(3,1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AS0KM-SELECT-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0KM-SELECT-FCTY char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSE-SESN-CD
DataItem AS0KM-SELECT-SESN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0KM-SELECT-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN_SESN_YR_RNG
DataItem AS0KM-SELECT-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// line on screen or w-s table
DataItem AS0KW-ARRAY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen detail data changed?
DataItem AS0KW-DATA-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of prtpl old cursor
DataItem AS0KW-EOC-OLD-FCTY-CURSOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format map? y,n
DataItem AS0KW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0KW-GET-COLORS-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen select data changed?
DataItem AS0KW-KEY-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format map? y,n
DataItem AS0KW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new factory row already exist
DataItem AS0KW-NEW-FCTY-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max lines on a screen
DataItem AS0KW-NUMBER-SCREEN-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// factory being updated
DataItem AS0KW-OLD-FCTY char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// request data? y,n
DataItem AS0KW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tsq page to display
DataItem AS0KW-START-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp work index
DataItem AS0KW-TEMP-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tsq length
DataItem AS0KW-TSQ-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// VASOVR01-GROUP
DataItem VASOVR01-GROUP char(49)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

