package as0q;

import ab.common.*;
import as1.common.AS1REC;
import as1.common.ASWREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPAS-00000;
import corpcom3.XPAS-39999;
import corpcom3.XPAS-51200;
import corpcom3.XPTA0P;
import corpcom3.XSASS-XOW;
import corpcom3.XSASS-XSE;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XOWTBL;
import corpx1.XSETBL;
import corpx2.XOWCD;
import corpx2.XSECD;
import corpx2.XSNYR;
import corpy2.YSNTBL;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import pg.common.PG1REC;
import pg.common.PG1SC4CD;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
//*** PROGRAM=AS0Q ****
// This application displays the Report Request Menu screen and
// all subordinate report specification screens.
// 
// The menu is displayed for the user to select the reports to
// be printed.  Another available selection allows the user to
// view the available printers and change the remote printer
// destination.
// 
// Job Control Language statements are formatted and submitted
// through the Internal Reader Transient Data Queue (INTR).
// The job executes in batch and all output is routed to the
// remote destination specified through this application.
// 
// The JCL for each job is stored as a table.
// There are two formats available for a JCL statement.
// They are either a fixed or a variable format.
// 
// A fixed statement is identified in the table by a blank JCL
// statement type (TARTYPE).  These statements are written
// directly to the internal reader with no changes.
// 
// Variable statements are those that contain data that may
// change each time the job is submitted.  They are identified
// by a non-blank statement type.  The type determines the data
// that is to be substituted and the columns into which it is
// to be placed, as follows:
// 
// TARTYPE         JCL statement        Variable        Columns
// -------         -------------        --------        -------
//    J                JOB              TARUSRID          5-10
//                     " "              TARUSRNM         27-46
//    N  (Test only)  NOTIFY            TARUSRID         23-28
//    O               OUTPUT            TARCOPY            34
//                    "    "            TARDEST          41-46
//    P             Parameters          TARJCL            1-80
// 
// The data in working storage is substituted and the statement
// is written to the internal reader.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, from the menu, only.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          08/03/92  lrein   New application.
// AB0219   05/04/93  TDODSO  Added ability for user to select
//                            remote or laser print for AS2441
// *********************
Program AS0Q type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AS0QW00 AS0QW00; // record
  AS0QW01 AS0QW01; // record
  AS0QW02 AS0QW02; // record
  AS0QW07 AS0QW07; // record
  AS0QW08 AS0QW08; // record
  AS0QW09 AS0QW09; // record
  AS1REC AS1REC; // record
  ASWREC ASWREC; // record
  COMMAREA COMMAREA ; // record
  FY1REC FY1REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use XOWTBL {deleteAfterUse = yes}; // table
  use AS0QT02 {deleteAfterUse = yes}; // table
  use AS0QT03 {deleteAfterUse = yes}; // table
  use AS0QT04 {deleteAfterUse = yes}; // table
  use AS0QT05 {deleteAfterUse = yes}; // table
  use AS0QT06 {deleteAfterUse = yes}; // table
  use AS0QT07 {deleteAfterUse = yes}; // table
  use AS0QT08 {deleteAfterUse = yes}; // table
  use AS0QM.AS0QM002,  // forms
      AS0QM.AS0QM003, 
      AS0QM.AS0QM004, 
      AS0QM.AS0QM005, 
      AS0QM.AS0QM006, 
      AS0QM.AS0QM007, 
      AS0QM.AS0QM008, 
      AS0QM.AS0QM099,
      AS0QM.TA0PM001,
      AS0QM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAS-00000: XPAS-00000();
     /* ------------------------------------------------------------*/
     /* Initialize the working storage areas and variables.*/
     /* ------------------------------------------------------------*/
    ;
    set TA0PM001 initial; /* M001 input/output*/
    set AS0QM002 initial; /* M002 input/output*/
    set AS0QM003 initial; /* M003 input/output*/
    set AS0QM004 initial; /* M004 input/output*/
    set AS0QM005 initial; /* M005 input/output*/
    set AS0QM006 initial; /* M006 input/output*/
    set AS0QM007 initial; /* M007 input/output*/
    set AS0QM008 initial; /* M008 input/output*/
    set AS0QM099 initial; /* rept dist input/output*/
    set AS0QW00 empty; /* Working storage*/
    set AS0QW01 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set ASWREC empty; /* common AS working storage*/
    set AS1REC empty; /* common AS working storage*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA3REC empty; /* Print subroutine parameters*/
    set TA6REC empty; /* Print subroutine parameters*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ;
     /* ------------------------------------------------------------*/
     /* Indicate that the report distribution must be obtained.*/
     /* ------------------------------------------------------------*/
    ;
    TA6REC.TA6SUBSW = "I"; /* Indicate obtain information*/
    ;
     /* ------------------------------------------------------------*/
     /* Indicate the number of selection lines on the report menu.*/
     /* ------------------------------------------------------------*/
    ;
    AS0QW00.AS0QWIXL = 8; /* Number of selection lines*/
    ;
     /* ------------------------------------------------------------*/
     /* Flow to converse the special initialization.*/
     /* ------------------------------------------------------------*/
    ;
     /* Perform special initialization*/
    goto AS0Q-0001;
    ;
    AS0Q-0001: AS0Q-0001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    ;
    goto AS0Q-0001;
    ;
    ;
  end // end main
end // end AS0Q

// Main process to display a map
Function AS0Q-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  if (AS0QW00.AS0QW-EXIT-REQ != "Y") /* EXIT not requested*/
    ;
    if (AS0QW00.AS0QM-SELECT[1] == "S" /* Line 1 was selected*/
     || TA6REC.TA6SUBSW == "I")        /* or information requested*/
      AS0Q-1000(); /* Specify report distribution*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[2] == "S") /* Line 2 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "2"; /* map we're on*/
      AS0Q-2000(); /* Print Plan report*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[3] == "S") /* Line 3 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "3"; /* map we're on*/
      AS0Q-3000(); /* Print Plan Detail Report*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[4] == "S") /* Line 4 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "4"; /* map we're on*/
      AS0Q-4000(); /* Factory Capacity Report*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[5] == "S") /* Line 5 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "5"; /* map we're on*/
      AS0Q-5000(); /* Source overrides report*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[6] == "S") /* Line 6 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "6"; /* map we're on*/
      AS0Q-6000(); /* Styles w/o pcts  Report*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[7] == "S") /* Line 7 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "7"; /* map we're on*/
      AS0Q-7000(); /* Production pcts  Report*/
    end
    ;
    if (AS0QW00.AS0QM-SELECT[8] == "S") /* Line 7 was selected*/
      ASWREC.ASW-DISPLAY-MAP = "8"; /* map we're on*/
      AS0Q-8000(); /* Blank Supply Report*/
    end
    ;
  end
  ;
  AS0QW00.AS0QW-EXIT-REQ = "N"; /* Reset exit requested switch*/
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "Y")
    AS0Q-9900(); /* Report Request Menu*/
  end
  ;
  ;
end // end AS0Q-0001

// Specify report distribution
Function AS0Q-1000()
   /* *************************************************************/
   /* SPECIFY REPORT DISTRIBUTION*/
   /* *************************************************************/
   /* ------------------------------------------------------------*/
   /* Obtain and/or display the routing information for the user.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If first time through, indicate information was obtained.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA6REC.TA6SUBSW == "I") /* Obtain report distribution*/
    TA6REC.TA6SUBSW = "N"; /* Indicate information obtained*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, indicate the selected function is completed.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    AS0QW00.AS0QM-SELECT[1] = "*"; /* Indicate function completed*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    AS0QW00.AS0QM-SELECT[1] = "C"; /* Indicate function cancelled*/
    ;
    /* ------------------------------------------------------------*/
     /* If missing distribution information, indicate that exit was*/
     /* requested.  Otherwise, return to continue processing.*/
    /* ------------------------------------------------------------*/
    ;
    if (TA6REC.XURDEST == " "  /* No print destination*/
     || TA6REC.XURUSRNM == " " /* or report recipient*/
     || TA6REC.XURBLDID == " ") /* or NIKE building*/
      AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    else
      return; /* Return to previous process*/
    end
    ;
  else
    AS0QM099.XXXPRCNM = "AS0Q1000"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-1000

// ***print plan report process**
Function AS0Q-2000()
  AS0Q-2200(); /* format map*/
  AS0Q-2300(); /* validate pf keys/ pop up windows*/
  AS0Q-2400(); /* reset highlighted fields*/
  AS0Q-2500(); /* validate input data*/
  AS0Q-2600(); /* process valid input data*/
end // end AS0Q-2000

// format and display the map
Function AS0Q-2200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM002.XURDEST = TA6REC.XURDEST;
  AS0QM002.XRODESC = TA6REC.XRODESC;
  AS0QM002.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM002.XURBLDID = TA6REC.XURBLDID;
  AS0QM002.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM002 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    set AS0QM002 initial;
    AS0QM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AS0QM002.XURDEST = TA6REC.XURDEST;
    AS0QM002.XRODESC = TA6REC.XRODESC;
    AS0QM002.XURUSRNM = TA6REC.XURUSRNM;
    AS0QM002.XURBLDID = TA6REC.XURBLDID;
    AS0QM002.XURCOPY = TA6REC.XURCOPY;
    AS0Q-2210(); /* get short names and save data*/
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QM002.AS0QM-DRP = "N"; /* reset detail report flag*/
    AS0QM002.AS0QM-SRP = "N"; /* reset summary report flag*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM002 ;
end // end AS0Q-2200

// format and save data
Function AS0Q-2210()
  AS0QW01.FY1FCTYC = AS0QM002.FY1FCTYC;
  AS0QW01.SY1STNBR = AS0QM002.SY1STNBR;
  AS0QW01.SY2CLRID = AS0QM002.SY2CLRID;
  AS0QW01.XOWCD = AS0QM002.XOWCD;
  AS0QW01.XSECD = AS0QM002.XSECD;
  AS0QW01.XSNYR = AS0QM002.XSNYR;
  AS0QW01.AS0QW-SCD = AS0QM002.PG1SC4CD;
  ;
  if (AS0QM002.FY1FCTYC != " ") /* a factory entered*/
    AS0QS-0001(); /* get factory short name*/
  end
  ;
  if (AS0QM002.SY1STNBR != " ") /* a style entered*/
    AS0QS-0002(); /* get style short name*/
  end
  ;
  if (AS0QM002.SY2CLRID != " ") /* a color entered*/
    AS0QS-0003(); /* get color abbrv*/
  end
  ;
  if (AS0QM002.XOWCD != " ") /* an owner group entered*/
    AS0QS-0004(); /* get owner group desc;*/
  end
  ;
  if (AS0QM002.PG1SC4CD != " " /* a scheduler code entered*/
   && AS0QM002.PG1SC4CD != "ALL")
    AS0QS-0009(); /* get user id;*/
  end
end // end AS0Q-2210

// validate attn identifiers
Function AS0Q-2300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[2] = "C"; /* Indicate selection cancelled*/
   /* MOVE ' ' TO ASWREC.ASW-FIRST-TIME;*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    set AS0QM002 initial; /* m002 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM002.XXXPRCNM = "AS0Q2300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-2300

// reset highlighted fields
Function AS0Q-2400()
  set AS0QM002.FY1FCTYC initialAttributes;
  set AS0QM002.SY1STNBR initialAttributes;
  set AS0QM002.SY2CLRID initialAttributes;
  set AS0QM002.XOWCD initialAttributes;
  set AS0QM002.XSECD initialAttributes;
  set AS0QM002.XSNYR initialAttributes;
  set AS0QM002.PG1SC4CD initialAttributes;
  set AS0QM002.AS0QM-DRP initialAttributes;
  set AS0QM002.AS0QM-SRP initialAttributes;
  ;
  if (AS0QM002.XOWCD == "?")
    AS1REC.XWHCD = "51";
    AS1REC.XOWCD = AS0QM002.XOWCD;
    XSASS-XOW(); /* pop up window routine*/
    AS0QM002.XOWCD = AS1REC.XOWCD;
    converseLib.clearScreen();
    
  end
  ;
  if (AS0QM002.XSECD == "?")
    AS1REC.XOWCD = AS0QM002.XOWCD;
    XSASS-XSE(); /* pop up window routine*/
    AS0QM002.XSECD = AS1REC.XSECD;
    converseLib.clearScreen();
    
  end
  ;
end // end AS0Q-2400

// verify input data
Function AS0Q-2500()
  AS0QW00.AS0QW-DATA-CHANGED-IND = "N";
  ;
  if (AS0QM002.FY1FCTYC != AS0QW01.FY1FCTYC
   || AS0QM002.SY1STNBR != AS0QW01.SY1STNBR
   || AS0QM002.SY2CLRID != AS0QW01.SY2CLRID
   || AS0QM002.XOWCD != AS0QW01.XOWCD
   || AS0QM002.XSECD != AS0QW01.XSECD
   || AS0QM002.XSNYR != AS0QW01.XSNYR
   || AS0QM002.PG1SC4CD != AS0QW01.AS0QW-SCD
   || AS0QM002.AS0QM-DRP != AS0QW01.AS0QW-DRP
   || AS0QM002.AS0QM-SRP != AS0QW01.AS0QW-SRP)
    AS0QW00.AS0QW-DATA-CHANGED-IND = "Y";
  end
  ;
  if (AS0QW00.AS0QW-DATA-CHANGED-IND == "N" /* data didnt change*/
   && ASWREC.ASW-FIRST-TIME == "Y")         /* but its been in once*/
    return; /* return to calling routine*/
  end
  ;
  ASWREC.ASW-FIRST-TIME = " "; /* time to edit data*/
  ;
  if (AS0QM002.XSECD != AS0QW01.XSECD
   && AS0QM002.XSECD != " ")
    AS0Q-2510(); /* validate season code*/
  end
  ;
  if (AS0QM002.XOWCD != AS0QW01.XOWCD
   && AS0QM002.XOWCD != " ")
    AS0QS-0004(); /* validate owner group*/
  end
  ;
  if (AS0QM002.SY1STNBR != AS0QW01.SY1STNBR)
    if (AS0QM002.SY1STNBR != " ")
      AS0QS-0002(); /* validate style number*/
    else
      AS0QM002.SY1SSTNM = " ";
      if (AS0QM002.SY2CLRID != " ")
        converseLib.validationFailed(54); /* color needs style*/
        AS0QM002.XXXPRCNM = "AS0Q2500";
        set AS0QM002.SY1STNBR cursor, bold;
        AS0QW01.SY1STNBR = " ";
        AS0QW01.SY2CLRID = " ";
      end
    end
  end
  ;
  if (AS0QM002.SY2CLRID != AS0QW01.SY2CLRID)
    if (AS0QM002.SY2CLRID != " ")
      ;
      if (AS0QM002.SY1STNBR != " ")
        AS0QS-0003(); /* validate color code*/
      else
        converseLib.validationFailed(54); /* color needs style*/
        AS0QM002.XXXPRCNM = "AS0Q2500";
        set AS0QM002.SY1STNBR cursor, bold;
        AS0QW01.SY1STNBR = " ";
        AS0QW01.SY2CLRID = " ";
      end
    else
      AS0QM002.SY2CLRAB = " ";
    end
    ;
  end
  ;
  if (AS0QM002.FY1FCTYC != AS0QW01.FY1FCTYC
   && AS0QM002.FY1FCTYC != " ")
    AS0QS-0001(); /* validate factory code*/
  end
  ;
  if (AS0QM002.PG1SC4CD != AS0QW01.AS0QW-SCD)
    if (AS0QM002.PG1SC4CD == "ALL")
      AS0QM002.XXXUSRID = " "; /* don't validate if 'all' codes*/
    else
      if (AS0QM002.PG1SC4CD != " ")
        AS0QS-0009(); /* validate scheduler code*/
      else
        AS0QM002.XXXUSRID = " "; /* don't validate if no codes entered*/
      end
    end
  end
  ;
  if (AS0QM002.AS0QM-DRP != "Y"
   && AS0QM002.AS0QM-DRP != "N") /* print detail report*/
    converseLib.validationFailed(118); /* report flag must be 'y' or 'n'*/
    AS0QM002.XXXPRCNM = "AS0Q2500";
    set AS0QM002.AS0QM-DRP cursor, bold;
  end
  ;
  if (AS0QM002.AS0QM-SRP != "Y"
   && AS0QM002.AS0QM-SRP != "N") /* print summary report*/
    converseLib.validationFailed(118); /* report flag must be 'y' or 'n'*/
    AS0QM002.XXXPRCNM = "AS0Q2500";
    set AS0QM002.AS0QM-SRP cursor, bold;
  end
  ;
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0Q-2500

// validate season/season yr
Function AS0Q-2510()
  AS1REC.AS1-XSN-YY = AS0QM002.XSNYR;
  AS1REC.AS1-XSE-XSN = AS0QM002.XSECD;
  AS1REC.AS1-VALID-XSE-FL = "0";
  AS1REC.AS1-VALID-XSN-FL = "0";
  AS1REC.AS1-VALID-XSE-XSN-FL = "0";
  AS1REC.XSECD = AS0QM002.XSECD;
  AS1REC.AS1-XSN-CC = 0;
  XPAS-51200();
  ;
  if (AS1REC.AS1-VALID-XSE-XSN-FL != 0)
    set AS0QM002.XSECD cursor, bold;
    set AS0QM002.XSNYR bold;
    converseLib.validationFailed(71); /* invalid sesn/yr msg*/
    AS0QM002.XXXPRCNM = "AS0Q2510";
  end
  if (AS1REC.AS1-VALID-XSN-FL != 0)
    set AS0QM002.XSNYR cursor, bold;
    converseLib.validationFailed(26); /* invalid yr msg;*/
    AS0QM002.XXXPRCNM = "AS0Q2510";
  end
  ;
  if (AS1REC.AS1-VALID-XSE-FL != "0")
    set AS0QM002.XSECD cursor, bold;
    AS1REC.AS1-MSG-NO = 16; /* invalid sesn msg;*/
    AS0QM002.XXXPRCNM = "AS0Q-2510";
  end
  ;
end // end AS0Q-2510

// process valid request
Function AS0Q-2600()
  if (ASWREC.ASW-FIRST-TIME == " ")
    ASWREC.ASW-FIRST-TIME = "Y";
    ASWREC.ASW-MSG-NO = 79; /* press enter to submit*/
    AS0QW01.FY1FCTYC = AS0QM002.FY1FCTYC;
    AS0QW01.SY1STNBR = AS0QM002.SY1STNBR;
    AS0QW01.SY2CLRID = AS0QM002.SY2CLRID;
    AS0QW01.XOWCD = AS0QM002.XOWCD;
    AS0QW01.XSECD = AS0QM002.XSECD;
    AS0QW01.XSNYR = AS0QM002.XSNYR;
    AS0QW01.AS0QW-SCD = AS0QM002.PG1SC4CD;
    AS0QW01.AS0QW-DRP = AS0QM002.AS0QM-DRP;
    AS0QW01.AS0QW-SRP = AS0QM002.AS0QM-SRP;
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    return;
  end
  ;
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT02.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
    if (AS0QT02.TARTYPE[ASW-IDX1] == "P") /* parameters statement*/
      AS0Q-2620(); /* build parm*/
    end
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT02.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT02.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT02.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-2630(); /* submit jcl/jobstream for batch run*/
  set AS0QM002 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-2600

// determine CICS region
Function AS0Q-2610()
   /* ------------------------------------------------------------*/
   /* FIND IN WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING*/
   /* ------------------------------------------------------------*/
  ;
  set TA3REC empty;
  TA3REC.TA3OPTN = "ALLFLDS";
  ;
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000")
    /* NEXT SENTENCE*/
  else
    TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
    AS0QM006.XXXPRCNM = "AS0Q2610"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "CSP ERROR -BAD CALL";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "AS0Q-2610"; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M006"; /* Map number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  if (TA3REC.TA3RTNCD == 0)
    return;
  else
    TAEREC.TAEDESC1 = TA3REC.TA3RTNCD; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
    AS0QM006.XXXPRCNM = "AS0Q2610"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "GET REGION";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "AS0Q-2610"; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M006"; /* Map number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
  ;
end // end AS0Q-2610

// build print plan parmaeter
Function AS0Q-2620()
  set AS0QW02 empty; /* reset parameters statement*/
  ;
  if (AS0QM002.XSNYR != 0)
    AS0QW02.AS0QW-YEAR = AS0QM002.XSNYR;
    ;
    if (AS0QM002.XSNYR < 89)
      AS0QW02.AS0QW-YEAR = 2000 + AS0QW02.AS0QW-YEAR;
    else
      AS0QW02.AS0QW-YEAR = 1900 + AS0QW02.AS0QW-YEAR;
    end
    ;
  else
    AS0QW02.AS0QW-YEAR = 0;
  end
  ;
  if (AS0QM002.FY1FCTYC != " ")
    AS0QW02.FY1FCTYC = AS0QM002.FY1FCTYC;
  else
    AS0QW02.FY1FCTYC = "****"; /* wild card*/
  end
  ;
  if (AS0QM002.SY1STNBR != " ")
    AS0QW02.SY1STNBR = AS0QM002.SY1STNBR;
  else
    AS0QW02.SY1STNBR = "******"; /* wild card*/
  end
  ;
  ;
  if (AS0QM002.SY2CLRID != " ")
    AS0QW02.SY2CLRID = AS0QM002.SY2CLRID;
  else
    AS0QW02.SY2CLRID = "***"; /* wild card*/
  end
  ;
  ;
  if (AS0QM002.XOWCD != " ")
    AS0QW02.XOWCD = AS0QM002.XOWCD;
  else
    AS0QW02.XOWCD = "**"; /* wild card*/
  end
  ;
  ;
  if (AS0QM002.XSECD != " ")
    AS0QW02.XSECD = AS0QM002.XSECD;
  else
    AS0QW02.XSECD = "**"; /* wild card*/
  end
  ;
  ;
  if (AS0QM002.PG1SC4CD != " ")
    AS0QW02.PG1SC4CD = AS0QM002.PG1SC4CD;
  else
    AS0QW02.PG1SC4CD = "**"; /* wild card*/
  end
  ;
  ;
  if (AS0QM002.AS0QM-DRP != " ")
    AS0QW02.AS0QW-DRP = AS0QM002.AS0QM-DRP;
  else
    AS0QW02.AS0QW-DRP = "N"; /* wild card*/
  end
  ;
  ;
  if (AS0QM002.AS0QM-SRP != " ")
    AS0QW02.AS0QW-SRP = AS0QM002.AS0QM-SRP;
  else
    AS0QW02.AS0QW-SRP = "N"; /* wild card*/
  end
  ;
  ;
  AS0QT02.TARJCL[ASW-IDX1] = AS0QW02.AS0QW-JCL;
end // end AS0Q-2620

// submit JCL
Function AS0Q-2630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM099.XXXPRCNM = "AS0Q2630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    set AS0QM002.FY1FCTYC cursor; /* Set cursor to XSECD field*/
    AS0QW00.AS0QM-SELECT[2] = "*"; /* Indicate function completed*/
    set AS0QM002 initial; /* Clear map output area*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-2630

// **print plan det rept process*
Function AS0Q-3000()
  AS0Q-3200(); /* format map*/
  AS0Q-3300(); /* validate pf keys/ pop up windows*/
  AS0Q-3400(); /* reset highlighted fields*/
  AS0Q-3500(); /* validate input data*/
  AS0Q-3600(); /* process valid input data*/
end // end AS0Q-3000

// format and display the map
Function AS0Q-3200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM003.XURDEST = TA6REC.XURDEST;
  AS0QM003.XRODESC = TA6REC.XRODESC;
  AS0QM003.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM003.XURBLDID = TA6REC.XURBLDID;
  AS0QM003.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM003 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    set AS0QM003 initial;
    AS0QM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AS0QM003.XURDEST = TA6REC.XURDEST;
    AS0QM003.XRODESC = TA6REC.XRODESC;
    AS0QM003.XURUSRNM = TA6REC.XURUSRNM;
    AS0QM003.XURBLDID = TA6REC.XURBLDID;
    AS0QM003.XURCOPY = TA6REC.XURCOPY;
    AS0Q-3210(); /* get short names and save data*/
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM003 ;
end // end AS0Q-3200

// format and save data
Function AS0Q-3210()
  AS0QW01.FY1FCTYC = AS0QM003.FY1FCTYC;
  AS0QW01.SY1STNBR = AS0QM003.SY1STNBR;
  AS0QW01.SY2CLRID = AS0QM003.SY2CLRID;
  AS0QW01.XOWCD = AS0QM003.XOWCD;
  AS0QW01.XSECD = AS0QM003.XSECD;
  AS0QW01.XSNYR = AS0QM003.XSNYR;
  AS0QW01.AS0QW-SCD = AS0QM003.PG1SC4CD;
  ;
  if (AS0QM003.FY1FCTYC != " ") /* a factory entered*/
    AS0QS-0001(); /* get factory short name*/
  end
  ;
  if (AS0QM003.SY1STNBR != " ") /* a style entered*/
    AS0QS-0002(); /* get style short name*/
  end
  ;
  if (AS0QM003.SY2CLRID != " ") /* a color entered*/
    AS0QS-0003(); /* get color abbrv*/
  end
  ;
  if (AS0QM003.XOWCD != " ") /* an owner group entered*/
    AS0QS-0004(); /* get owner group desc;*/
  end
  ;
  if (AS0QM003.PG1SC4CD != " " /* a scheduler code entered*/
   && AS0QM003.PG1SC4CD != "ALL")
    AS0QS-0009(); /* get user id*/
  end
end // end AS0Q-3210

// validate attn identifiers
Function AS0Q-3300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[3] = "C"; /* Indicate selection cancelled*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ASWREC.ASW-FIRST-TIME = "Y";
    set AS0QM003 initial; /* m003 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ASWREC.ASW-FIRST-TIME = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM003.XXXPRCNM = "AS0Q3300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-3300

// reset highlighted fields
Function AS0Q-3400()
  set AS0QM003.FY1FCTYC initialAttributes;
  set AS0QM003.SY1STNBR initialAttributes;
  set AS0QM003.SY2CLRID initialAttributes;
  set AS0QM003.XOWCD initialAttributes;
  set AS0QM003.XSECD initialAttributes;
  set AS0QM003.XSNYR initialAttributes;
  set AS0QM003.PG1SC4CD initialAttributes;
  ;
  if (AS0QM003.XOWCD == "?")
    AS1REC.XWHCD = "51";
    AS1REC.XOWCD = AS0QM003.XOWCD;
    XSASS-XOW(); /* pop up window routine*/
    AS0QM003.XOWCD = AS1REC.XOWCD;
    converseLib.clearScreen();
    
  end
  ;
  if (AS0QM003.XSECD == "?")
    AS1REC.XOWCD = AS0QM003.XOWCD;
    XSASS-XSE(); /* pop up window routine*/
    AS0QM003.XSECD = AS1REC.XSECD;
    converseLib.clearScreen();
    
  end
  ;
end // end AS0Q-3400

// validate input data
Function AS0Q-3500()
  AS0QW00.AS0QW-DATA-CHANGED-IND = "N";
  ;
  if (AS0QM003.FY1FCTYC != AS0QW01.FY1FCTYC
   || AS0QM003.SY1STNBR != AS0QW01.SY1STNBR
   || AS0QM003.SY2CLRID != AS0QW01.SY2CLRID
   || AS0QM003.XOWCD != AS0QW01.XOWCD
   || AS0QM003.XSECD != AS0QW01.XSECD
   || AS0QM003.XSNYR != AS0QW01.XSNYR
   || AS0QM003.PG1SC4CD != AS0QW01.AS0QW-SCD)
    AS0QW00.AS0QW-DATA-CHANGED-IND = "Y";
  end
  ;
  if (AS0QW00.AS0QW-DATA-CHANGED-IND == "N" /* data didnt change*/
   && ASWREC.ASW-FIRST-TIME == "Y")         /* but its been in once*/
    return; /* return to calling routine*/
  end
  ;
  ASWREC.ASW-FIRST-TIME = " "; /* time to edit data*/
  ;
  if (AS0QM003.XSECD != AS0QW01.XSECD
   && AS0QM003.XSECD != " ")
    AS0Q-3510(); /* validate season code*/
  end
  ;
  if (AS0QM003.XOWCD != AS0QW01.XOWCD
   && AS0QM003.XOWCD != " ")
    AS0QS-0004(); /* validate owner group*/
  end
  ;
  if (AS0QM003.SY1STNBR != AS0QW01.SY1STNBR)
    if (AS0QM003.SY1STNBR != " ")
      AS0QS-0002(); /* validate style number*/
    else
      AS0QM003.SY1SSTNM = " ";
      if (AS0QM003.SY2CLRID != " ")
        converseLib.validationFailed(54); /* color needs style*/
        AS0QM003.XXXPRCNM = "AS0Q3500";
        set AS0QM003.SY1STNBR cursor, bold;
        AS0QW01.SY1STNBR = " ";
        AS0QW01.SY2CLRID = " ";
      end
    end
  end
  ;
  if (AS0QM003.SY2CLRID != AS0QW01.SY2CLRID)
    if (AS0QM003.SY2CLRID != " ")
      ;
      if (AS0QM003.SY1STNBR != " ")
        AS0QS-0003(); /* validate color code*/
      else
        converseLib.validationFailed(54); /* color needs style*/
        AS0QM003.XXXPRCNM = "AS0Q3500";
        set AS0QM003.SY1STNBR cursor, bold;
        AS0QW01.SY1STNBR = " ";
        AS0QW01.SY2CLRID = " ";
      end
    else
      AS0QM003.SY2CLRAB = " "; /**/
    end
    ;
  end
  ;
  if (AS0QM003.FY1FCTYC != AS0QW01.FY1FCTYC
   && AS0QM003.FY1FCTYC != " ")
    AS0QS-0001(); /* validate factory code*/
  end
  ;
  if (AS0QM003.PG1SC4CD != AS0QW01.AS0QW-SCD)
    if (AS0QM003.PG1SC4CD == "ALL")
      AS0QM003.XXXUSRID = " "; /* don't validate 'all' codes*/
    else
      if (AS0QM003.PG1SC4CD != " ")
        AS0QS-0009(); /* validate scheduler code*/
      else
        AS0QM003.XXXUSRID = " "; /* don't validate if no code entered*/
      end
    end
  end
  ;
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0Q-3500

// validate season/season year
Function AS0Q-3510()
  AS1REC.AS1-XSN-YY = AS0QM003.XSNYR;
  AS1REC.AS1-XSE-XSN = AS0QM003.XSECD;
  AS1REC.AS1-VALID-XSE-FL = "0";
  AS1REC.AS1-VALID-XSN-FL = "0";
  AS1REC.AS1-VALID-XSE-XSN-FL = "0";
  AS1REC.XSECD = AS0QM003.XSECD;
  AS1REC.AS1-XSN-CC = 0;
  XPAS-51200();
  ;
  if (AS1REC.AS1-VALID-XSE-XSN-FL != 0)
    set AS0QM003.XSECD cursor, bold;
    set AS0QM003.XSNYR bold;
    converseLib.validationFailed(71); /* invalid sesn/yr msg*/
    AS0QM003.XXXPRCNM = "AS0Q3510";
  end
  if (AS1REC.AS1-VALID-XSN-FL != 0)
    set AS0QM003.XSNYR cursor, bold;
    converseLib.validationFailed(26); /* invalid yr msg;*/
    AS0QM003.XXXPRCNM = "AS0Q3510";
  end
  ;
  if (AS1REC.AS1-VALID-XSE-FL != "0")
    set AS0QM003.XSECD cursor, bold;
    AS1REC.AS1-MSG-NO = 16; /* invalid sesn msg;*/
    AS0QM003.XXXPRCNM = "AS0Q3510";
  end
  ;
end // end AS0Q-3510

// process valid request
Function AS0Q-3600()
  if (ASWREC.ASW-FIRST-TIME == " ")
    ASWREC.ASW-FIRST-TIME = "Y";
    ASWREC.ASW-MSG-NO = 79; /* press enter to submit*/
    AS0QW01.FY1FCTYC = AS0QM003.FY1FCTYC;
    AS0QW01.SY1STNBR = AS0QM003.SY1STNBR;
    AS0QW01.SY2CLRID = AS0QM003.SY2CLRID;
    AS0QW01.XOWCD = AS0QM003.XOWCD;
    AS0QW01.XSECD = AS0QM003.XSECD;
    AS0QW01.XSNYR = AS0QM003.XSNYR;
    AS0QW01.AS0QW-SCD = AS0QM003.PG1SC4CD;
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    return;
  end
  ;
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT03.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
    if (AS0QT03.TARTYPE[ASW-IDX1] == "P") /* parameters statement*/
      AS0Q-3620(); /* build parm*/
    end
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT03.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT03.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT03.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-3630(); /* submit jcl/jobstream for batch run*/
  set AS0QM003 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-3600

// build detail rept parameter
Function AS0Q-3620()
  set AS0QW02 empty; /* reset parameters statement*/
  ;
  if (AS0QM003.XSNYR != 0)
    AS0QW02.AS0QW-YEAR = AS0QM003.XSNYR;
    ;
    if (AS0QM003.XSNYR < 89)
      AS0QW02.AS0QW-YEAR = 2000 + AS0QW02.AS0QW-YEAR;
    else
      AS0QW02.AS0QW-YEAR = 1900 + AS0QW02.AS0QW-YEAR;
    end
    ;
  else
    AS0QW02.AS0QW-YEAR = 0;
  end
  ;
  if (AS0QM003.FY1FCTYC != " ")
    AS0QW02.FY1FCTYC = AS0QM003.FY1FCTYC;
  else
    AS0QW02.FY1FCTYC = "****"; /* wild card*/
  end
  ;
  if (AS0QM003.SY1STNBR != " ")
    AS0QW02.SY1STNBR = AS0QM003.SY1STNBR;
  else
    AS0QW02.SY1STNBR = "******"; /* wild card*/
  end
  ;
  ;
  if (AS0QM003.SY2CLRID != " ")
    AS0QW02.SY2CLRID = AS0QM003.SY2CLRID;
  else
    AS0QW02.SY2CLRID = "***"; /* wild card*/
  end
  ;
  ;
  if (AS0QM003.XOWCD != " ")
    AS0QW02.XOWCD = AS0QM003.XOWCD;
  else
    AS0QW02.XOWCD = "**"; /* wild card*/
  end
  ;
  ;
  if (AS0QM003.XSECD != " ")
    AS0QW02.XSECD = AS0QM003.XSECD;
  else
    AS0QW02.XSECD = "**"; /* wild card*/
  end
  ;
  if (AS0QM003.PG1SC4CD != " ")
    AS0QW02.PG1SC4CD = AS0QM003.PG1SC4CD;
  else
    AS0QW02.PG1SC4CD = "**"; /* wild card*/
  end
  ;
  AS0QT03.TARJCL[ASW-IDX1] = AS0QW02.AS0QW-JCL;
end // end AS0Q-3620

// Submit JCL
Function AS0Q-3630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM003.XXXPRCNM = "AS0Q3630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    set AS0QM003.FY1FCTYC cursor; /* Set cursor to XSECD field*/
    AS0QW00.AS0QM-SELECT[3] = "*"; /* Indicate function completed*/
    set AS0QM003 initial; /* Clear map output area*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-3630

// **fcty capacity rept process**
Function AS0Q-4000()
  AS0Q-4200(); /* format map*/
  AS0Q-4300(); /* validate pf keys/ pop up windows*/
  AS0Q-4400(); /* reset highlighted fields*/
  AS0Q-4500(); /* validate input data*/
  AS0Q-4600(); /* process valid input data*/
end // end AS0Q-4000

// format and display the map
Function AS0Q-4200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM004.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM004.XURDEST = TA6REC.XURDEST;
  AS0QM004.XRODESC = TA6REC.XRODESC;
  AS0QM004.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM004.XURBLDID = TA6REC.XURBLDID;
  AS0QM004.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM004 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    set AS0QM004 initial;
    AS0QM004.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AS0QM004.XURDEST = TA6REC.XURDEST;
    AS0QM004.XRODESC = TA6REC.XRODESC;
    AS0QM004.XURUSRNM = TA6REC.XURUSRNM;
    AS0QM004.XURBLDID = TA6REC.XURBLDID;
    AS0QM004.XURCOPY = TA6REC.XURCOPY;
    AS0Q-4210(); /* get short names and save data*/
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM004 ;
end // end AS0Q-4200

// format and save data
Function AS0Q-4210()
  AS0QW01.FY1FCTYC = AS0QM004.FY1FCTYC;
  ;
  if (AS0QM004.FY1FCTYC != " ") /* a factory entered*/
    AS0QS-0001(); /* get factory short name*/
  end
  ;
end // end AS0Q-4210

// validate attn identifiers
Function AS0Q-4300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[4] = "C"; /* Indicate selection cancelled*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ASWREC.ASW-FIRST-TIME = "Y";
    set AS0QM004 initial; /* m004 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ASWREC.ASW-FIRST-TIME = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM004.XXXPRCNM = "AS0Q4300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-4300

// reset highlighted fields
Function AS0Q-4400()
  set AS0QM004.FY1FCTYC initialAttributes;
  ;
end // end AS0Q-4400

// validate input data
Function AS0Q-4500()
  AS0QW00.AS0QW-DATA-CHANGED-IND = "N";
  ;
  if (AS0QM004.FY1FCTYC != AS0QW01.FY1FCTYC)
    AS0QW00.AS0QW-DATA-CHANGED-IND = "Y";
  end
  ;
  if (AS0QW00.AS0QW-DATA-CHANGED-IND == "N" /* data didnt change*/
   && ASWREC.ASW-FIRST-TIME == "Y")         /* but its been in once*/
    return; /* return to calling routine*/
  end
  ;
  ASWREC.ASW-FIRST-TIME = " "; /* time to edit data*/
  ;
  if (AS0QM004.FY1FCTYC != AS0QW01.FY1FCTYC
   && AS0QM004.FY1FCTYC != " ")
    AS0QS-0001(); /* validate factory code*/
  end
  ;
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0Q-4500

// process valid request
Function AS0Q-4600()
  if (ASWREC.ASW-FIRST-TIME == " ")
    ASWREC.ASW-FIRST-TIME = "Y";
    ASWREC.ASW-MSG-NO = 79; /* press enter to submit*/
    AS0QW01.FY1FCTYC = AS0QM004.FY1FCTYC;
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    return;
  end
  ;
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT04.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
    if (AS0QT04.TARTYPE[ASW-IDX1] == "P") /* parameters statement*/
      AS0Q-4620(); /* build parm*/
    end
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT04.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT04.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT04.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-4630(); /* submit jcl/jobstream for batch run*/
  set AS0QM004 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-4600

// build detail rept parameter
Function AS0Q-4620()
  set AS0QW02 empty; /* reset parameters statement*/
  ;
  if (AS0QM004.FY1FCTYC != " ")
    AS0QW02.FY1FCTYC = AS0QM004.FY1FCTYC;
  else
    AS0QW02.FY1FCTYC = "****"; /* wild card*/
  end
  ;
  AS0QT04.TARJCL[ASW-IDX1] = AS0QW02.AS0QW-JCL;
end // end AS0Q-4620

// Submit JCL
Function AS0Q-4630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM004.XXXPRCNM = "AS0Q4630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    set AS0QM004.FY1FCTYC cursor; /* Set cursor to XSECD field*/
    AS0QW00.AS0QM-SELECT[4] = "*"; /* Indicate function completed*/
    set AS0QM004 initial; /* Clear map output area*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-4630

// **Source override rept process
Function AS0Q-5000()
  AS0Q-5200(); /* format map*/
  AS0Q-5300(); /* validate pf keys/ pop up windows*/
  AS0Q-5600(); /* process valid input data*/
end // end AS0Q-5000

// format and display map
Function AS0Q-5200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM005.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM005.XURDEST = TA6REC.XURDEST;
  AS0QM005.XRODESC = TA6REC.XRODESC;
  AS0QM005.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM005.XURBLDID = TA6REC.XURBLDID;
  AS0QM005.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM005 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    set AS0QM005 initial;
    AS0QM005.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AS0QM005.XURDEST = TA6REC.XURDEST;
    AS0QM005.XRODESC = TA6REC.XRODESC;
    AS0QM005.XURUSRNM = TA6REC.XURUSRNM;
    AS0QM005.XURBLDID = TA6REC.XURBLDID;
    AS0QM005.XURCOPY = TA6REC.XURCOPY;
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM005 ;
end // end AS0Q-5200

// check attention identifier
Function AS0Q-5300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[5] = "C"; /* Indicate selection cancelled*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    set AS0QM005 initial; /* m005 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM005.XXXPRCNM = "AS0Q5300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-5300

// process valid input request
Function AS0Q-5600()
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT05.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
   /* IF AS0Qt04.TARTYPE(ASW-IDX1) EQ 'P';/* parameters statement*/
     /* PERFORM AS0Q-2620;           /* build parm*/
   /* END;*/
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT05.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT05.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT05.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-5630(); /* submit jcl/jobstream for batch run*/
  set AS0QM005 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-5600

// Submit JCL
Function AS0Q-5630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM003.XXXPRCNM = "AS0Q5630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    AS0QW00.AS0QM-SELECT[5] = "*"; /* Indicate function completed*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-5630

// **Sty w/o prod % rept process
Function AS0Q-6000()
  AS0Q-6200(); /* format map*/
  AS0Q-6300(); /* validate pf keys/ pop up windows*/
  AS0Q-6600(); /* process valid input data*/
end // end AS0Q-6000

// format and display map
Function AS0Q-6200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM006.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM006.XURDEST = TA6REC.XURDEST;
  AS0QM006.XRODESC = TA6REC.XRODESC;
  AS0QM006.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM006.XURBLDID = TA6REC.XURBLDID;
  AS0QM006.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM006 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    set AS0QM006 initial;
    AS0QM006.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AS0QM006.XURDEST = TA6REC.XURDEST;
    AS0QM006.XRODESC = TA6REC.XRODESC;
    AS0QM006.XURUSRNM = TA6REC.XURUSRNM;
    AS0QM006.XURBLDID = TA6REC.XURBLDID;
    AS0QM006.XURCOPY = TA6REC.XURCOPY;
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM006 ;
end // end AS0Q-6200

// check attention identifier
Function AS0Q-6300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[6] = "C"; /* Indicate selection cancelled*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    set AS0QM006 initial; /* m006 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM006.XXXPRCNM = "AS0Q6300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-6300

// process valid input request
Function AS0Q-6600()
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT06.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
    /* IF AS0QT06.TARTYPE(ASW-IDX1) EQ 'P';/* parameters statement*/
     /* PERFORM AS0Q-6620;           /* build parm*/
    /* END;*/
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT06.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT06.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT06.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-6630(); /* submit jcl/jobstream for batch run*/
  set AS0QM006 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-6600

// Submit JCL
Function AS0Q-6630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM003.XXXPRCNM = "AS0Q4630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    AS0QW00.AS0QM-SELECT[6] = "*"; /* Indicate function completed*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-6630

// **Production % db rept process
Function AS0Q-7000()
  /* GET AS0q-7000*/
  AS0Q-7200(); /* format map*/
  AS0Q-7300(); /* validate pf keys/ pop up windows*/
  AS0Q-7400(); /* reset highlighted fields*/
  AS0Q-7500(); /* validate input data*/
  AS0Q-7600(); /* process valid input data*/
end // end AS0Q-7000

// format and display map
Function AS0Q-7200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM007.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM007.XURDEST = TA6REC.XURDEST;
  AS0QM007.XRODESC = TA6REC.XRODESC;
  AS0QM007.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM007.XURBLDID = TA6REC.XURBLDID;
  AS0QM007.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM007 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    set AS0QM007 initial;
    AS0QM007.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    AS0QM007.XURDEST = TA6REC.XURDEST;
    AS0QM007.XRODESC = TA6REC.XRODESC;
    AS0QM007.XURUSRNM = TA6REC.XURUSRNM;
    AS0QM007.XURBLDID = TA6REC.XURBLDID;
    AS0QM007.XURCOPY = TA6REC.XURCOPY;
    AS0Q-7210(); /* save data*/
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM007 ;
end // end AS0Q-7200

// save data
Function AS0Q-7210()
end // end AS0Q-7210

// validate attention identifier
Function AS0Q-7300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[7] = "C"; /* Indicate selection cancelled*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    set AS0QM007 initial; /* m007 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    ASWREC.ASW-FIRST-TIME = "Y";
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM007.XXXPRCNM = "AS0Q7300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-7300

// reset highlighted fields
Function AS0Q-7400()
  ;
end // end AS0Q-7400

// validate input data
Function AS0Q-7500()
  AS0QW00.AS0QW-DATA-CHANGED-IND = "N";
  ;
  if (AS0QM007.XSECD != AS0QW01.XSECD
   || AS0QM007.XSNYR != AS0QW01.XSNYR)
    AS0QW00.AS0QW-DATA-CHANGED-IND = "Y";
  end
  ;
  if (AS0QW00.AS0QW-DATA-CHANGED-IND == "N" /* data didnt change*/
   && ASWREC.ASW-FIRST-TIME == "Y")         /* but its been in once*/
    return; /* return to calling routine*/
  end
  ;
  ASWREC.ASW-FIRST-TIME = " "; /* time to edit data*/
  ;
  if (AS0QM007.XSECD != AS0QW01.XSECD
   && AS0QM007.XSECD != " ")
    AS0Q-7510(); /* validate season code*/
  end
  ;
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0Q-7500

// edit season code
Function AS0Q-7510()
  AS1REC.AS1-XSN-YY = AS0QM007.XSNYR;
  AS1REC.AS1-XSE-XSN = AS0QM007.XSECD;
  AS1REC.AS1-VALID-XSE-FL = "0";
  AS1REC.AS1-VALID-XSN-FL = "0";
  AS1REC.AS1-VALID-XSE-XSN-FL = "0";
  AS1REC.XSECD = AS0QM007.XSECD;
  AS1REC.AS1-XSN-CC = 0;
  XPAS-51200();
  ;
  if (AS1REC.AS1-VALID-XSE-XSN-FL != 0)
    set AS0QM007.XSECD cursor, bold;
    set AS0QM007.XSNYR bold;
    converseLib.validationFailed(71); /* invalid sesn/yr msg*/
    AS0QM007.XXXPRCNM = "AS0Q7510";
  end
  if (AS1REC.AS1-VALID-XSN-FL != 0)
    set AS0QM007.XSNYR cursor, bold;
    converseLib.validationFailed(26); /* invalid yr msg;*/
    AS0QM007.XXXPRCNM = "AS0Q7510";
  end
  ;
  if (AS1REC.AS1-VALID-XSE-FL != "0")
    set AS0QM007.XSECD cursor, bold;
    AS1REC.AS1-MSG-NO = 16; /* invalid sesn msg;*/
    AS0QM007.XXXPRCNM = "AS0Q-7510";
  end
  ;
end // end AS0Q-7510

// process valid request
Function AS0Q-7600()
  if (ASWREC.ASW-FIRST-TIME == " ")
    ASWREC.ASW-FIRST-TIME = "Y";
    ASWREC.ASW-MSG-NO = 79; /* press enter to submit*/
    AS0QW01.XSECD = AS0QM007.XSECD;
    AS0QW01.XSNYR = AS0QM007.XSNYR;
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    return;
  end
  ;
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT07.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
    if (AS0QT07.TARTYPE[ASW-IDX1] == "P") /* parameters statement*/
      AS0Q-7620(); /* build parm*/
    end
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT07.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT07.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT07.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-7630(); /* submit jcl/jobstream for batch run*/
  set AS0QM007 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-7600

// build parameters
Function AS0Q-7620()
  set AS0QW07 empty; /* reset parameters statement*/
  ;
  if (AS0QM007.XSNYR != 0)
    AS0QW07.AS0QW-YEAR = AS0QM007.XSNYR;
    ;
    if (AS0QM007.XSNYR < 89)
      AS0QW07.AS0QW-YEAR = 2000 + AS0QW07.AS0QW-YEAR;
    else
      AS0QW07.AS0QW-YEAR = 1900 + AS0QW07.AS0QW-YEAR;
    end
    ;
  else
    AS0QW07.AS0QW-YEAR = 0;
  end
  ;
  if (AS0QM007.XSECD != " ")
    AS0QW07.XSECD = AS0QM007.XSECD;
  else
    AS0QW07.XSECD = "**"; /* wild card*/
  end
  ;
  AS0QT07.TARJCL[ASW-IDX1] = AS0QW07.AS0QW-JCL-AS225D;
end // end AS0Q-7620

// submit batch JCL
Function AS0Q-7630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM007.XXXPRCNM = "AS0Q7630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    AS0QW00.AS0QM-SELECT[7] = "*"; /* Indicate function completed*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-7630

// **blank supply report process*
Function AS0Q-8000()
  AS0Q-8200(); /* format map*/
  AS0Q-8300(); /* validate pf keys*/
  AS0Q-8400(); /* reset highlighted fields*/
  AS0Q-8500(); /* validate input data*/
  AS0Q-8600(); /* process valid input data*/
end // end AS0Q-8000

// format and display the map
Function AS0Q-8200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM008.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM008.XURDEST = TA6REC.XURDEST;
  AS0QM008.XRODESC = TA6REC.XRODESC;
  AS0QM008.XURUSRNM = TA6REC.XURUSRNM;
  AS0QM008.XURBLDID = TA6REC.XURBLDID;
  AS0QM008.XURCOPY = TA6REC.XURCOPY;
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0QM008 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0QW00.AS0QW-FORMAT-MAP-SW == "N") /* dont format map*/
    if (converseVar.validationMsgNum == 0) /* no error message to display*/
      if (ASWREC.ASW-MSG-NO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(ASWREC.ASW-MSG-NO);
      end /* Information message number*/
      ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    end
    ;
  else
    AS0Q-8210(); /* get short names and save data*/
    if (ASWREC.ASW-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(ASWREC.ASW-MSG-NO);
    end /* Information message number*/
    ASWREC.ASW-MSG-NO = 0; /* Reset information message number*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  converse AS0QM008 ;
end // end AS0Q-8200

// format and save data
Function AS0Q-8210()
  AS0QW01.SY1STNBR = AS0QM008.SY1STNBR;
  AS0QW01.SY2CLRID = AS0QM008.SY2CLRID;
  AS0QW01.PG1SC4CD = AS0QM008.PG1SC4CD;
  ;
  if (AS0QM008.SY1STNBR != " ") /* a style entered*/
    AS0QS-0002(); /* get style short name*/
  end
  ;
  if (AS0QM008.SY2CLRID != " ") /* a color entered*/
    AS0QS-0003(); /* get color abbrv*/
  end
  ;
  if (AS0QM008.PG1SC4CD != " ") /* a scheduler code entered*/
    AS0QS-0009(); /* get user id*/
  end
end // end AS0Q-8210

// validate attn identifiers
Function AS0Q-8300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    AS0QW00.AS0QM-SELECT[8] = "C"; /* Indicate selection cancelled*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ASWREC.ASW-FIRST-TIME = "Y";
    set AS0QM008 initial; /* m008 input/output*/
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    AS0QW00.AS0QW-EXIT-REQ = "Y"; /* Indicate exit requested*/
    AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
    ASWREC.ASW-FIRST-TIME = "Y";
    exit stack; /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM008.XXXPRCNM = "AS0Q8300"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ASWREC.ASW-FIRST-TIME = "Y";
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-8300

// reset highlighted fields
Function AS0Q-8400()
  set AS0QM008.SY1STNBR initialAttributes;
  set AS0QM008.SY2CLRID initialAttributes;
  set AS0QM008.PG1SC4CD initialAttributes;
  ;
end // end AS0Q-8400

// validate input data
Function AS0Q-8500()
  AS0QW00.AS0QW-DATA-CHANGED-IND = "N";
  ;
  if (AS0QM008.SY1STNBR != AS0QW01.SY1STNBR
   || AS0QM008.SY2CLRID != AS0QW01.SY2CLRID
   || AS0QM008.PG1SC4CD != AS0QW01.PG1SC4CD)
    AS0QW00.AS0QW-DATA-CHANGED-IND = "Y";
  end
  ;
  if (AS0QW00.AS0QW-DATA-CHANGED-IND == "N" /* data didnt change*/
   && ASWREC.ASW-FIRST-TIME == "Y")         /* but its been in once*/
    return; /* return to calling routine*/
  end
  ;
   /* move spaces to first time switch*/
  ASWREC.ASW-FIRST-TIME = " ";
  if (AS0QM008.SY1STNBR != AS0QW01.SY1STNBR)
    if (AS0QM008.SY1STNBR != " ")
      AS0QS-0002(); /* validate style number*/
    else
      AS0QM008.SY1SSTNM = " ";
      if (AS0QM008.SY2CLRID != " ")
        converseLib.validationFailed(54); /* color needs style*/
        AS0QM008.XXXPRCNM = "AS0Q-8500";
        set AS0QM008.SY1STNBR cursor, bold;
        AS0QW01.SY1STNBR = " ";
        AS0QW01.SY2CLRID = " ";
      end
    end
  end
  ;
  if (AS0QM008.SY2CLRID != AS0QW01.SY2CLRID)
    if (AS0QM008.SY2CLRID != " ")
      ;
      if (AS0QM008.SY1STNBR != " ")
        AS0QS-0003(); /* validate color code*/
      else
        converseLib.validationFailed(54); /* color needs style*/
        AS0QM008.XXXPRCNM = "AS0Q-8500";
        set AS0QM008.SY1STNBR cursor, bold;
        AS0QW01.SY1STNBR = " ";
        AS0QW01.SY2CLRID = " ";
      end
      ;
    else
      AS0QM008.SY2CLRAB = " ";
    end
  end
  ;
  if (AS0QM008.PG1SC4CD != AS0QW01.PG1SC4CD)
    if (AS0QM008.PG1SC4CD != " ")
      AS0QS-0009(); /* get user id*/
    else
      AS0QM008.XXXUSRID = " "; /* don't validate if no code entered*/
    end
  end
  ;
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0Q-8500

// process valid request
Function AS0Q-8600()
  if (ASWREC.ASW-FIRST-TIME == " ")
    ASWREC.ASW-FIRST-TIME = "Y";
    ASWREC.ASW-MSG-NO = 79; /* press enter to submit*/
    AS0QW01.SY1STNBR = AS0QM008.SY1STNBR;
    AS0QW01.SY2CLRID = AS0QM008.SY2CLRID;
    AS0QW01.PG1SC4CD = AS0QM008.PG1SC4CD;
    AS0QW00.AS0QW-FORMAT-MAP-SW = "N";
    return;
  end
  ;
  AS0Q-2610(); /* determine region*/
  move " " to TA6REC.TA6ROW[1] for all; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0QT08.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
    if (AS0QT08.TARTYPE[ASW-IDX1] == "P") /* parameters statement*/
      AS0Q-8620(); /* build parm*/
    end
    ;
    if (AS0QT08.TARTYPE[ASW-IDX1] == "O") /* parameters statement*/
      if (TA6REC.XURDEST == "LOCAL") /* Laser printer selected*/
        AS0Q-8640(); /* Build Output card*/
      end
    end
    ;
    if (AS0QT08.TARTYPE[ASW-IDX1] == "*") /* parameters statement*/
      if (TA6REC.XURDEST == "LOCAL") /* Laser printer selected*/
        AS0Q-8650(); /* Build Report Override card*/
      end
    end
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0QT08.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0QT08.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0QT08.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
    ;
  end
  ;
  AS0Q-8630(); /* submit jcl/jobstream for batch run*/
  set AS0QM008 initial; /* clear map*/
  AS0QW00.AS0QW-FORMAT-MAP-SW = "Y";
  ;
  ;
end // end AS0Q-8600

// build detail rept parameter
Function AS0Q-8620()
  set AS0QW02 empty; /* reset parameters statement*/
  ;
  if (AS0QM008.SY1STNBR != " ")
    AS0QW02.SY1STNBR = AS0QM008.SY1STNBR;
  else
    AS0QW02.SY1STNBR = "******"; /* wild card*/
  end
  ;
  if (AS0QM008.SY2CLRID != " ")
    AS0QW02.SY2CLRID = AS0QM008.SY2CLRID;
  else
    AS0QW02.SY2CLRID = "***"; /* wild card*/
  end
  ;
  if (AS0QM008.PG1SC4CD != " ")
    AS0QW02.PG1SC4CD = AS0QM008.PG1SC4CD;
  else
    AS0QW02.PG1SC4CD = "**"; /* wild card*/
  end
  ;
  AS0QT08.TARJCL[ASW-IDX1] = AS0QW02.AS0QW-JCL;
end // end AS0Q-8620

// Submit JCL
Function AS0Q-8630()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6INDEX = 1; /* Output array index*/
  TA6REC.TA6RTNCD = " "; /* Clear subroutine return code*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0QM003.XXXPRCNM = "AS0Q3630"; /* Process number*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    set AS0QM008.SY1STNBR cursor; /* Set cursor to STYLE field*/
    AS0QW00.AS0QM-SELECT[8] = "*"; /* Indicate function completed*/
    set AS0QM008 initial; /* Clear map output area*/
    ASWREC.ASW-FIRST-TIME = " ";
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0Q-8630

// Build Output Card for Laser Pr
Function AS0Q-8640()
  set AS0QW08 empty; /* reset parameters statement*/
  ;
  AS0QW08.AS0QW-OUTPUT-LITERAL = "/*OUTPUT  AS23 FORMS=AS23,COPIES=";
  ;
  AS0QW08.AS0QW-NBR-COPIES = TA6REC.XURCOPY;
  ;
  AS0QW08.AS0QW-DEST-LITERAL = ",DEST=";
  ;
  AS0QW08.AS0QW-DEST = TA6REC.XURDEST;
  ;
  AS0QT08.TARJCL[ASW-IDX1] = AS0QW08.AS0QW-JCL;
  ;
  AS0QT08.TARTYPE[ASW-IDX1] = " ";
  ;
end // end AS0Q-8640

// Build Report Sysout Override
Function AS0Q-8650()
  set AS0QW09 empty; /* reset parameters statement*/
  ;
  AS0QW09.AS0QW-OVERRIDE = "//P0010.DRPT02O DD SYSOUT=(N,,AS23)";
  ;
  AS0QT08.TARJCL[ASW-IDX1] = AS0QW09.AS0QW-JCL;
  ;
  AS0QT08.TARTYPE[ASW-IDX1] = " ";
  ;
end // end AS0Q-8650

// Report request menu
Function AS0Q-9900()
   /* *************************************************************/
  ;
                  /* REPORT REQUEST MENU*/
  ;
   /* *************************************************************/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AS0Q-9920(); /* Format and display the map*/
  ;
  AS0Q-9930(); /* Check attention identifier*/
  ;
  AS0Q-9940(); /* Reset fields to normal intensity*/
  ;
  AS0Q-9950(); /* Verify the data that was entered*/
  ;
  AS0Q-9960(); /* Process valid input request*/
  ;
  ;
end // end AS0Q-9900

// format and display map
Function AS0Q-9920()
  ;
  set AS0QM099 initial; /* M099 input/output*/
  ASWREC.ASW-IDX1 = 1; /* Initialize map index*/
  while (ASWREC.ASW-IDX1 <= AS0QW00.AS0QWIXL) /* Until end of array*/
    AS0QM099.AS0QM-SELECT[ASW-IDX1] = AS0QW00.AS0QM-SELECT[ASW-IDX1];
    ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* Increment index*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  AS0QM099.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  AS0QM099.CATOAP = COMMAREA.CATOAP; /* TO application*/
  AS0QM099.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Message to display*/
    set AS0QM099 alarm; /* Indicate sound alarm*/
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/
  ;
  COMMAREA.CATOAP = AS0QM099.CATOAP; /* TO application*/
  COMMAREA.CAITEM = AS0QM099.CAITEM; /* Application data*/
  converse AS0QM099 ;
  ;
  ;
end // end AS0Q-9920

// check attention identifier
Function AS0Q-9930()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AS0QM099 initial; /* M099 input/output*/
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    AS0QS-0008(); /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/
  ;
  if (AS0QM099.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AS0QM099.CATOAP;
      COMMAREA.CAITEM = AS0QM099.CAITEM;
      XPAS-39999(); /* Exit to another application*/
    else
      AS0QM099.XXXPRCNM = "AS0Q9930"; /* Module identification*/
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      set AS0QM099.CATOAP cursor, bold; /* Highlight*/
    end
    ;
    AS0QS-0008(); /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "AS0QM099"; /* Application find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "AS0A"; /* TO application*/
    end
    ;
    XPAS-39999(); /* Exit to another application*/
    COMMAREA.CATOAP = " "; /* Clear TO application*/
    AS0QS-0008(); /* Exit to display map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0QM099.XXXPRCNM = "AS0Q9930"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    AS0QS-0008(); /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-9930

// reset highlighted fields
Function AS0Q-9940()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  ASWREC.ASW-IDX1 = 1; /* Initialize index*/
  ;
  while (ASWREC.ASW-IDX1 <= AS0QW00.AS0QWIXL) /* Until all lines are reset*/
    set AS0QM099.AS0QM-SELECT[ASW-IDX1] initialAttributes; /* Reset select field*/
    ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* Increment line index*/
  end
  ;
  set AS0QM099.CATOAP initialAttributes; /* TO application*/
  set AS0QM099.CAITEM initialAttributes; /* Application data*/
  ;
  ;
end // end AS0Q-9940

// verify entered data
Function AS0Q-9950()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    AS0QM099.XXXPRCNM = "AS0Q9950"; /* Module identification*/
    set AS0QM099.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Check for proper select tag.*/
   /* ------------------------------------------------------------*/
  ;
  ASWREC.ASW-IDX1 = AS0QW00.AS0QWIXL; /* Initialize line index*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* Until all lines are verified*/
    ;
    /* ------------------------------------------------------------*/
     /* Indicate an error if the line was not selected properly.*/
    /* ------------------------------------------------------------*/
    ;
    if (AS0QM099.AS0QM-SELECT[ASW-IDX1] != AS0QW00.AS0QM-SELECT[ASW-IDX1]
     && AS0QM099.AS0QM-SELECT[ASW-IDX1] != " " /* Line was selected*/
     && AS0QM099.AS0QM-SELECT[ASW-IDX1] != "S") /* Line was selected*/
      ;
      AS0QM099.XXXPRCNM = "AS0Q9950"; /* Module identification*/
      set AS0QM099.AS0QM-SELECT[ASW-IDX1] cursor, bold; /* Highlight*/
      converseLib.validationFailed(115); /* Only "S" is valid*/
      ;
    end
    ;
    ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 - 1; /* Decrement line number*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Exit to display the map if any error was found.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    AS0QS-0008(); /* Exit to display map*/
  end
  ;
  ;
end // end AS0Q-9950

// process valid request
Function AS0Q-9960()
   /* ------------------------------------------------------------*/
   /* Save the selections in the working storage array.*/
   /* ------------------------------------------------------------*/
  ;
  move AS0QM099.AS0QM-SELECT to AS0QW00.AS0QM-SELECT[1] for all; /* Menu selections*/
  ;
   /* ------------------------------------------------------------*/
   /* If missing distribution information and at least one line*/
   /* was selected, force report distribution specification.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA6REC.XURDEST == " "  /* No print destination*/
   || TA6REC.XURUSRNM == " " /* or report recipient*/
   || TA6REC.XURBLDID == " ") /* or NIKE building*/
    ;
    if (AS0QW00.AS0QM-SELECT[1] != "S" /* Report distribution not selected*/
     && "S" in AS0QW00.AS0QM-SELECT)   /* and another line was selected*/
      AS0QM099.XXXPRCNM = "AS0Q9960"; /* Module identification*/
      converseLib.validationFailed(21); /* Indicate missing or invalid*/
      AS0QW00.AS0QM-SELECT[1] = "S"; /* Force report distribution*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If specify distribution selected, indicate to subroutine to*/
   /* display report distribution, but, do not submit any JCL.*/
   /* ------------------------------------------------------------*/
  ;
  if (AS0QW00.AS0QM-SELECT[1] == "S") /* Report distribution selected*/
    TA6REC.TA6SUBSW = "N"; /* Indicate do not submit JCL*/
  end
  ;
  ;
end // end AS0Q-9960

// get factory short name
Function AS0QS-0001()
  if (AS0QM002.FY1FCTYC == " " /* as0qm002 Field eq spaces*/
   && ASWREC.ASW-DISPLAY-MAP == "2")
    AS0QM002.FY1FCTSN = " "; /* space out short name*/
    return; /* Return to calling process*/
  end
  ;
  if (AS0QM003.FY1FCTYC == " " /* as0qm002 Field eq spaces*/
   && ASWREC.ASW-DISPLAY-MAP == "3")
    AS0QM002.FY1FCTSN = " "; /* space out short name*/
    return; /* Return to calling process*/
  end
  ;
  if (AS0QM004.FY1FCTYC == " " /* as0qm002 Field eq spaces*/
   && ASWREC.ASW-DISPLAY-MAP == "4")
    AS0QM002.FY1FCTSN = " "; /* space out short name*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Verify if Factory cd entered is found in DFCTY.VFCTY001*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set FY1REC empty; /* initialize db record*/
  FY1REC.XGPCD = "03"; /* gpc cd*/
  ;
  if (ASWREC.ASW-DISPLAY-MAP == "2")
    FY1REC.FY1FCTYC = AS0QM002.FY1FCTYC; /* factory code*/
  else
    if (ASWREC.ASW-DISPLAY-MAP == "3")
      FY1REC.FY1FCTYC = AS0QM003.FY1FCTYC; /* factory code*/
    else
      if (ASWREC.ASW-DISPLAY-MAP == "4")
        FY1REC.FY1FCTYC = AS0QM004.FY1FCTYC; /* factory code*/
      end
      ;
    end
    ;
  end
  ;
   /* *=============================**/
   /* *  Access DFCTY.VFCTY001 DB   **/
   /* *=============================**/
  ;
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.FY1FCTSN = FY1REC.FY1FCTSN;
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.FY1FCTSN = FY1REC.FY1FCTSN;
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "4")
        AS0QM004.FY1FCTSN = FY1REC.FY1FCTSN;
        return; /* Return to calling process*/
      end
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        set AS0QM002.FY1FCTYC cursor, bold; /* Highlight field*/
        AS0QM002.FY1FCTSN = " "; /* space screen description*/
        converseLib.validationFailed(41); /* Indicate error message*/
        AS0QM002.XXXPRCNM = "AS0S0010 "; /* Process number*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        set AS0QM003.FY1FCTYC cursor, bold; /* Highlight field*/
        AS0QM003.FY1FCTSN = " "; /* space screen description*/
        converseLib.validationFailed(41); /* Indicate error message*/
        AS0QM003.XXXPRCNM = "AS0S0010 "; /* Process number*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "4")
        set AS0QM004.FY1FCTYC cursor, bold; /* Highlight field*/
        AS0QM004.FY1FCTSN = " "; /* space screen description*/
        converseLib.validationFailed(41); /* Indicate error message*/
        AS0QM004.XXXPRCNM = "AS0S0010 "; /* Process number*/
        return; /* Return to calling process*/
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0QM002.XXXPRCNM = "AS0QS0010"; /* Process number*/
  AS0QM003.XXXPRCNM = "AS0QS0010"; /* Process number*/
  AS0QM004.XXXPRCNM = "AS0QS0010"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0QS0010"; /* Error location*/
  TA1REC.TA1LOC = "GET DFCTY.VFCTY001 ROW";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0QS-0001

// get style short name
Function AS0QS-0002()
  AS0QS-0005(); /* select set syclr*/
  AS0QS-0006(); /* fetch one row*/
  AS0QS-0007(); /* close cursor syclr*/
end // end AS0QS-0002

// get color abbrv
Function AS0QS-0003()
   /* ------------------------------------------------------------*/
   /* Obtain Style and Color descriptions from DPRODG.VSYCLR01.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PG2REC empty; /* initialize db record*/
  PG2REC.XGPCD = "03"; /* gpc cd*/
  ;
  if (ASWREC.ASW-DISPLAY-MAP == "2")
    PG2REC.SY1STNBR = AS0QM002.SY1STNBR; /* style*/
    PG2REC.SY2CLRID = AS0QM002.SY2CLRID; /* color*/
  else
    ;
    if (ASWREC.ASW-DISPLAY-MAP == "3")
      PG2REC.SY1STNBR = AS0QM003.SY1STNBR; /* style*/
      PG2REC.SY2CLRID = AS0QM003.SY2CLRID; /* color*/
    else
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        PG2REC.SY1STNBR = AS0QM008.SY1STNBR; /* style*/
        PG2REC.SY2CLRID = AS0QM008.SY2CLRID; /* color*/
      end
      ;
    end
    ;
  end
  ;
  PG2REC.XDMCD = "00"; /* dimension cd*/
  ;
  ;
   /* *=============================**/
   /* *  Access DPRODG.VSYCLR01 DB  * Obtain style,color desc*/
   /* *=============================**/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.SY2CLRAB = PG2REC.SY2CLRAB; /* move color desc*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.SY2CLRAB = PG2REC.SY2CLRAB; /* move color desc*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        AS0QM008.SY2CLRAB = PG2REC.SY2CLRAB; /* move color desc*/
        return; /* Return to calling process*/
      end
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.SY2CLRAB = " "; /* Blank out color abbrev*/
        converseLib.validationFailed(91); /* invalid color*/
        set AS0QM002.SY2CLRID cursor, bold; /* highlight*/
        AS0QW01.SY2CLRID = " "; /* Blank out color in working storage*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.SY2CLRAB = " "; /* Blank out color abbrev*/
        converseLib.validationFailed(91); /* invalid color*/
        set AS0QM003.SY2CLRID cursor, bold; /* highlight*/
        AS0QW01.SY2CLRID = " "; /* Blank out color in working storage*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        AS0QM008.SY2CLRAB = " "; /* Blank out color abbrev*/
        converseLib.validationFailed(91); /* invalid color*/
        set AS0QM008.SY2CLRID cursor, bold; /* highlight*/
        AS0QW01.SY2CLRID = " "; /* Blank out color in working storage*/
        return; /* Return to calling process*/
      end
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AS0QS0030"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0QM002"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AS0QM002.XXXPRCNM = "AS0QS0030"; /* Process name*/
  AS0QM003.XXXPRCNM = "AS0QS0030"; /* Process name*/
  AS0QM004.XXXPRCNM = "AS0QS0030"; /* Process name*/
  AS0QM008.XXXPRCNM = "AS0QS0030"; /* Process name*/
  exit stack; /* Exit to redisplay map*/
end // end AS0QS-0003

// get owner group abbrv
Function AS0QS-0004()
  AS1REC.XWHCD = "51"; /* default whse*/
  ;
  if (ASWREC.ASW-DISPLAY-MAP == "2")
    AS1REC.XOWCD = AS0QM002.XOWCD; /* owner group*/
  else
    ;
    if (ASWREC.ASW-DISPLAY-MAP == "3")
      AS1REC.XOWCD = AS0QM003.XOWCD; /* owner group*/
    end
    ;
  end
  ;
  if (AS1REC.AS1-XOW-KEY in XOWTBL.XOWKEY /* a match*/
   && XOWTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active*/
    ;
    if (ASWREC.ASW-DISPLAY-MAP == "2")
      AS0QM002.XOWABRV = XOWTBL.XOWABRV[sysVar.arrayIndex];
    else
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.XOWABRV = XOWTBL.XOWABRV[sysVar.arrayIndex];
      end
      ;
    end
    ;
  else /* an error*/
    ;
    if (ASWREC.ASW-DISPLAY-MAP == "2")
      AS0QM002.XOWABRV = " ";
      converseLib.validationFailed(44);
      set AS0QM002.XOWCD cursor, bold;
    else
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.XOWABRV = " ";
        converseLib.validationFailed(44);
        set AS0QM003.XOWCD cursor, bold;
      end
      ;
    end
    ;
  end
end // end AS0QS-0004

// select set DPRODG.VSYCLR01
Function AS0QS-0005()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = "03"; /* GPC cd*/
  ;
  if (ASWREC.ASW-DISPLAY-MAP == "2")
    PG2REC.SY1STNBR = AS0QM002.SY1STNBR; /* Style no.*/
  else
    ;
    if (ASWREC.ASW-DISPLAY-MAP == "3")
      PG2REC.SY1STNBR = AS0QM003.SY1STNBR; /* Style no.*/
    else
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        PG2REC.SY1STNBR = AS0QM008.SY1STNBR; /* Style no.*/
      end
      ;
    end
    ;
  end
  ;
   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0QM002.XXXPRCNM = "AS0QS0050"; /* Process number*/
  AS0QM003.XXXPRCNM = "AS0QS0050"; /* Process number*/
  AS0QM004.XXXPRCNM = "AS0QS0050"; /* Process number*/
  AS0QM008.XXXPRCNM = "AS0QS0050"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0QS0050"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET VSYCLR01     ";
  TA1REC.TA1MAP = "AS0QM002"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0QS-0005

// fetch one row DPRODG.VSYCLR01
Function AS0QS-0006()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        AS0QM008.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
        return; /* Return to calling process*/
      end
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.SY1SSTNM = " "; /* Space out desc*/
        set AS0QM002.SY1STNBR cursor, bold; /* Highlight field*/
        converseLib.validationFailed(38); /* Indicate error message*/
        AS0QM002.XXXPRCNM = "AS0QS0060"; /* Process number*/
        AS0QW01.SY1STNBR = " "; /* Space out style in working storage*/
        AS0QW01.SY2CLRID = " "; /* clear out color in ws*/
        return; /* Exit to calling rtn*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.SY1SSTNM = " "; /* Space out desc*/
        set AS0QM003.SY1STNBR cursor, bold; /* Highlight field*/
        converseLib.validationFailed(38); /* Indicate error message*/
        AS0QM003.XXXPRCNM = "AS0QS0060"; /* Process number*/
        AS0QW01.SY1STNBR = " "; /* Space out style in working storage*/
        AS0QW01.SY2CLRID = " "; /* clear out color in ws*/
        return; /* Exit to calling rtn*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        AS0QM008.SY1SSTNM = " "; /* Space out desc*/
        set AS0QM008.SY1STNBR cursor, bold; /* Highlight field*/
        converseLib.validationFailed(38); /* Indicate error message*/
        AS0QM008.XXXPRCNM = "AS0QS0060"; /* Process number*/
        AS0QW01.SY1STNBR = " "; /* clear out style in ws*/
        AS0QW01.SY2CLRID = " "; /* clear out color in ws*/
        return; /* Exit to calling rtn*/
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0QM002.XXXPRCNM = "AS0QS0060"; /* Process number*/
  AS0QM003.XXXPRCNM = "AS0QS0060"; /* Process number*/
  AS0QM004.XXXPRCNM = "AS0QS0060"; /* Process number*/
  AS0QM008.XXXPRCNM = "AS0QS0060"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0QS0060"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0QM002"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0QS-0006

// close cursor DPRODG.VSYCLR01
Function AS0QS-0007()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  AS0QM002.XXXPRCNM = "AS0QS0070"; /* Process number*/
  AS0QM003.XXXPRCNM = "AS0QS0070"; /* Process number*/
  AS0QM004.XXXPRCNM = "AS0QS0070"; /* Process number*/
  AS0QM008.XXXPRCNM = "AS0QS0070"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0QS0070"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = "AS0QM002"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
end // end AS0QS-0007

// clear selections and exit
Function AS0QS-0008()
   /* ------------------------------------------------------------*/
   /* Reset any pending selections in working storage.*/
   /* ------------------------------------------------------------*/
  ;
  ASWREC.ASW-IDX1 = 1; /* Initialize map index*/
  ;
  while (ASWREC.ASW-IDX1 <= AS0QW00.AS0QWIXL) /* Until end of array*/
    ;
    if (AS0QW00.AS0QM-SELECT[ASW-IDX1] == "S") /* Entry is selected*/
      AS0QW00.AS0QM-SELECT[ASW-IDX1] = " "; /* Reset entry*/
    end
    ;
    ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* Increment index*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Exit to display the selection menu map.*/
   /* ------------------------------------------------------------*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0QS-0008

// get User ID
Function AS0QS-0009()
   /* ------------------------------------------------------------*/
   /* Obtain User ID from DPRODG.VSUSER01.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PG1REC empty; /* initialize db record*/
  PG1REC.XGPCD = "03"; /* gpc cd*/
  ;
  if (ASWREC.ASW-DISPLAY-MAP == "2")
    PG1REC.PG1SC4CD = AS0QM002.PG1SC4CD; /* scheduler code*/
  else
    if (ASWREC.ASW-DISPLAY-MAP == "3")
      PG1REC.PG1SC4CD = AS0QM003.PG1SC4CD; /* scheduler code*/
    else
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        PG1REC.PG1SC4CD = AS0QM008.PG1SC4CD; /* scheduler code*/
      end
    end
  end
  ;
  PG1REC.PG1FCTCD = "  "; /* forecaster code*/
  ;
   /* *=============================**/
   /* *  Access DPRODG.VSUSER01 DB  * Obtain User ID*/
   /* *=============================**/
  ;
  try
    call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.XXXUSRID = PG1REC.XXXUSER; /* move user id*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.XXXUSRID = PG1REC.XXXUSER; /* move user id*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        AS0QM008.XXXUSRID = PG1REC.XXXUSER; /* move user id*/
        return; /* Return to calling process*/
      end
      ;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "2")
        AS0QM002.XXXUSRID = " "; /* Blank out user id*/
        converseLib.validationFailed(20); /* User ID not found on database*/
        set AS0QM002.PG1SC4CD cursor, bold; /* highlight*/
        AS0QW01.PG1SC4CD = " "; /* Blank out sched cd in ws*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "3")
        AS0QM003.XXXUSRID = " "; /* Blank out user id*/
        converseLib.validationFailed(20); /* User ID not found on database*/
        set AS0QM003.PG1SC4CD cursor, bold; /* highlight*/
        AS0QW01.PG1SC4CD = " "; /* Blank out sched cd in ws*/
        return; /* Return to calling process*/
      end
      ;
      if (ASWREC.ASW-DISPLAY-MAP == "8")
        AS0QM008.XXXUSRID = " "; /* Blank out user id*/
        converseLib.validationFailed(20); /* User ID not found on database*/
        set AS0QM008.PG1SC4CD cursor, bold; /* highlight*/
        AS0QW01.PG1SC4CD = " "; /* Blank out sched cd in ws*/
        return; /* Return to calling process*/
      end
      ;
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0QM002.XXXPRCNM = "AS0QS0090"; /* Process name*/
  AS0QM003.XXXPRCNM = "AS0QS0090"; /* Process name*/
  AS0QM008.XXXPRCNM = "AS0QS0090"; /* Process name*/
  TA1REC.TA1PGMNM = "AS0QS0090"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSUSER01 ROW";
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  exit stack; /* Exit to redisplay map*/
end // end AS0QS-0009

//*** RECORD=AS0QW00 ****
// misc working storage for AS0Q report requestor
// ***********************
Record AS0QW00 type basicRecord
  10 AS0QW-FORMAT-MAP-SW AS0QW-FORMAT-MAP-SW ; 
  10 AS0QW-DATA-CHANGED-IND AS0QW-DATA-CHANGED-IND ; 
  10 AS0QWIXL AS0QWIXL ; 
  10 AS0QM-SELECT AS0QM-SELECT [8] ; 
  10 AS0QW-EXIT-REQ AS0QW-EXIT-REQ ; 
end // end AS0QW00

//*** RECORD=AS0QW01 ****
// display working storage for AS0q report requestor
// ***********************
Record AS0QW01 type basicRecord
  10 FY1FCTYC FY1FCTYC ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XOWCD XOWCD ; 
  10 XSECD XSECD ; 
  10 XSNYR XSNYR ; 
  10 PG1SC4CD PG1SC4CD ; 
  10 AS0QW-SCD AS0QW-SCD ; 
  10 AS0QW-DRP AS0QW-DRP ; 
  10 AS0QW-SRP AS0QW-SRP ; 
end // end AS0QW01

//*** RECORD=AS0QW02 ****
// work area for passed parameter between AS0Q and the batch
// report programs it kicks off
// ***********************
Record AS0QW02 type basicRecord
  10 AS0QW-JCL AS0QW-JCL ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 SY1STNBR SY1STNBR ; 
    15 * char(1) ; 
    15 SY2CLRID SY2CLRID ; 
    15 * char(1) ; 
    15 XOWCD XOWCD ; 
    15 * char(1) ; 
    15 XSECD XSECD ; 
    15 * char(1) ; 
    15 AS0QW-YEAR AS0QW-YEAR ; 
    15 * char(1) ; 
    15 AS0QW-DRP AS0QW-DRP ; 
    15 * char(1) ; 
    15 AS0QW-SRP AS0QW-SRP ; 
    15 * char(1) ; 
    15 PG1SC4CD PG1SC4CD ; 
    15 * char(47) ; 
end // end AS0QW02

//*** RECORD=AS0QW07 ****
// work area for passed parameter between AS0Q and the batch
// report program AS225D
// ***********************
Record AS0QW07 type basicRecord
  10 AS0QW-JCL-AS225D AS0QW-JCL-AS225D ; 
    15 XSECD XSECD ; 
    15 * char(1) ; 
    15 AS0QW-YEAR AS0QW-YEAR ; 
    15 * char(1) [73] ; 
end // end AS0QW07

//*** RECORD=AS0QW08 ****
// JCL Output card if XEROX Laser Printer is selected.
// ***********************
Record AS0QW08 type basicRecord
  10 AS0QW-JCL AS0QW-JCL ; 
    15 AS0QW-OUTPUT-LITERAL AS0QW-OUTPUT-LITERAL ; 
    15 AS0QW-NBR-COPIES AS0QW-NBR-COPIES ; 
    15 AS0QW-DEST-LITERAL AS0QW-DEST-LITERAL ; 
    15 AS0QW-DEST AS0QW-DEST ; 
    15 * char(34) ; // FILLER
end // end AS0QW08

//*** RECORD=AS0QW09 ****
// REPORT SYSOUT OVERRIDE STATEMENT
// ***********************
Record AS0QW09 type basicRecord
  10 AS0QW-JCL AS0QW-JCL ; 
    15 AS0QW-OVERRIDE AS0QW-OVERRIDE ; 
    15 * char(45) ; // FILLER
end // end AS0QW09

// select field
DataItem AS0QM-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-DATA-CHANGED-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DESTINATION OF REPORT
DataItem AS0QW-DEST char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DESTINATION CONSTANT LITERAL
DataItem AS0QW-DEST-LITERAL char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-DRP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-EXIT-REQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL STATEMENT GROUP
DataItem AS0QW-JCL char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-JCL-AS225D char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NUMBER OF COPIES
DataItem AS0QW-NBR-COPIES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// OUTPUT CONSTANT LITERAL
DataItem AS0QW-OUTPUT-LITERAL char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DD SYSOUT OVERRIDE STATEMENT
DataItem AS0QW-OVERRIDE char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 3 byte sched cd
DataItem AS0QW-SCD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-SRP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0QW-YEAR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AS0QWIXL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

