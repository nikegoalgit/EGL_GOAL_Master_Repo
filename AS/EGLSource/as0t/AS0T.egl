package as0t;

import as1.common.AS1REC;
import as1.common.ASWREC;
import corpcom3.XPAS-00000;
import corpcom3.XPAS-39999;
import corpcom3.XPTA0P;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import pg.common.PG1REC;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
//*** PROGRAM=AS0T ****
// ************************************************************
// *                                                          *
// * CONTROL  DATE  USERID  COMMENTS                          *
// * ------- ------ ------  ----------------------------------*
// * AF9999  090393 Tdodso  4.1 conversion                    *
// * AB0221  102293 Tdodso  Removed report parameters from JCL*
// ************************************************************
// *********************
Program AS0T type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AS1REC AS1REC; // record
  ASWREC ASWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AS0TT01 {deleteAfterUse = yes}; // table
  use AS0TM.AS0TM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAS-00000: XPAS-00000();
    set ASWREC empty;
    set AS0TM001 initial;
    ;
    goto AS0T-0001; /* converse main process*/
    AS0T-0001: AS0T-0001();
    goto AS0T-0001; /* converse main process*/
  end // end main
end // end AS0T

// main process loop
Function AS0T-0001()
  AS0T-2000(); /* format map*/
  AS0T-3000(); /* validate pf keys/ pop up windows*/
  AS0T-4000(); /* reset highlighted fields*/
  /* RFORM AS0T-5000; /* validate input data*/
  AS0T-6000(); /* process valid input data*/
end // end AS0T-0001

// format data to display
Function AS0T-2000()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0TM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0TM001 alarm; /* Indicate sound alarm*/
  end
  ;
  converse AS0TM001 ;
end // end AS0T-2000

// validate attention id
Function AS0T-3000()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AS0TM001 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0TM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AS0TM001.CATOAP;
      COMMAREA.CAITEM = AS0TM001.CAITEM;
      XPAS-39999(); /* Exit to another application*/
    else
      converseLib.validationFailed(4); /* Indicate PF key not valid*/
    end
    ;
    set AS0TM001.CATOAP cursor, modified, bold; /* Highlight*/
    AS0TM001.XXXPRCNM = "AS0T3000 "; /* process number*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0TM001.CAITEM > " ") /* application data was entered*/
    set AS0TM001.CAITEM cursor, modified, bold; /* highlight data*/
    converseLib.validationFailed(7); /* enter only with fast path*/
    AS0TM001.XXXPRCNM = "AS0T3000 "; /* process number*/
    exit stack; /* redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* pf1 is pressed*/
      COMMAREA.CAITEM = "AS0PM001"; /* appl find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* pf3 is pressed*/
      COMMAREA.CATOAP = "AS0A"; /* fluctuations menu*/
    end
    ;
    XPAS-39999(); /* Exit to another application*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    AS0TM001.XXXPRCNM = "AS0T3000"; /* process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end AS0T-3000

// reset highlighted fields
Function AS0T-4000()
  set AS0TM001.CAITEM initialAttributes;
  set AS0TM001.CATOAP initialAttributes;
end // end AS0T-4000

// process valid input request
Function AS0T-6000()
  if (converseVar.validationMsgNum != 0)
    exit stack;
  end
  ;
  AS0T-6100(); /* determine region*/
  set TA6REC empty; /* subroutine work area*/
  TA6REC.TA6INDEX = 1; /* initialize parameters index*/
  ;
  if (TA3REC.TA3RGNID == "03") /* if production region*/
    ASWREC.ASW-IDX1 = 1; /* set index to point at prod jcl*/
  else
    ;
    if ("/*EOF" in AS0TT01.TARJCL) /* find end of prod jcl*/
      ASWREC.ASW-IDX1 = sysVar.arrayIndex;
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1;
    else
      ASWREC.ASW-IDX1 = 1;
    end
    ;
  end
  ;
   /* --------------------------------------------------------*/
   /* format jcl and parameters into the subroutine work area.*/
   /* --------------------------------------------------------*/
  ;
  while (ASWREC.ASW-IDX1 > 0) /* until end of table*/
    ;
   /* --------------------------------------------------------*/
   /* format the job control language statement from the table*/
   /* --------------------------------------------------------*/
    ;
    TA6REC.TARJCL[TA6INDEX] = AS0TT01.TARJCL[ASW-IDX1]; /* jcl*/
    TA6REC.TARTYPE[TA6INDEX] = AS0TT01.TARTYPE[ASW-IDX1]; /* type*/
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* increment parms index*/
    ;
   /* --------------------------------------------------------*/
   /* if not end of table, increment the table index*/
   /* --------------------------------------------------------*/
    ;
    if (AS0TT01.TARJCL[ASW-IDX1] == "/*EOF") /* end of table*/
      ASWREC.ASW-IDX1 = 0; /* indicate end of table*/
    else
      ASWREC.ASW-IDX1 = ASWREC.ASW-IDX1 + 1; /* increment table index*/
    end
  end
  ;
  AS0T-6400(); /* submit jcl/jobstream for batch run*/
  set AS0TM001 initial; /* clear map*/
  ;
  ;
end // end AS0T-6000

// determine cics region
Function AS0T-6100()
   /* ------------------------------------------------------------*/
   /* FIND IN WHICH ENVIRONMENT CURRENT PROGRAM IS RUNNING*/
   /* ------------------------------------------------------------*/
  ;
  set TA3REC empty;
  TA3REC.TA3OPTN = "ALLFLDS";
  ;
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000")
    /* NEXT SENTENCE*/
  else
    TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
    AS0TM001.XXXPRCNM = "AS0T6100"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "CSP ERROR -BAD CALL";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "AS0T6100"; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  if (TA3REC.TA3RTNCD == 0)
    return;
  else
    TAEREC.TAEDESC1 = TA3REC.TA3RTNCD; /* CSP return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* Subroutine parameters*/
    AS0TM001.XXXPRCNM = "AS0P-6100"; /* Module identification*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "GET REGION";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "AS0P-6100"; /* Program number*/
    TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
    TA1REC.TA1MAPNO = "M001"; /* Map number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
    exit stack; /* Exit to display map*/
  end
  ;
  ;
  ;
end // end AS0T-6100

// submit jcl
Function AS0T-6400()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* Send a message to the user when done*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
  ;
   /* ------------------------*/
   /* Fix process location*/
   /* ------------------------*/
  ;
  AS0TM001.XXXPRCNM = "AS0P-6500"; /* Process number*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(22); /* Indicate job was submitted*/
    set AS0TM001.CATOAP cursor; /* Set cursor to FASTPATH field*/
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(23); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end AS0T-6400

