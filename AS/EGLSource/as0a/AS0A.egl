package as0a;

import ab.common.*;
import as1.common.AS1REC;
import as1.common.ASWREC;
import corpcom3.XPAS-00000;
import corpcom3.XPAS-39999;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import pg.common.PG1REC;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TAEREC;
//*** PROGRAM=AS0A ****
// This application is a prototype for the Apparel Forecast/Buy
// system.  It will display multiple rows from a DB2 table for
// the user to view and/or modify.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME         DESCRIPTION OF CHANGE
// --------   -----------   -----------------------------------
// 06/28/88   G Gilray      New application.
// 09/03/93   Tdodso        Removed issue screen production
//                          selections from menu.
// 07-22-94   LREIN         Added AS0U to menu and table
// *********************
Program AS0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AS1REC AS1REC; // record
  ASWREC ASWREC; // record
  COMMAREA COMMAREA ; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use AS0AT; // table
  use AS0AM.AS0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAS-00000: XPAS-00000();
    ASWREC.ASW-PROCESS-NBR = "AS0A-0000";
    AS0A-1000: AS0A-1000();
     /* --------------------------------------------------------------*/
      /* Flow to converse the Issue Screener Production Process*/
     /* --------------------------------------------------------------*/
    ;
    goto AS0A-1000;
    ;
    ;
  end // end main
end // end AS0A

// Choose which map to display
Function AS0A-1000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  AS0A-2000(); /* Format and display the map*/
  ;
  AS0A-3000(); /* Check attention identifier*/
  ;
  AS0A-4000(); /* Reset fields to normal intensity*/
  ;
  AS0A-5000(); /* Verify the entered data*/
  ;
  ;
  ;
end // end AS0A-1000

// Format and display the map
Function AS0A-2000()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0)
    set AS0AM001 alarm;
  end
  ;
  if (converseVar.validationMsgNum == 0)
    if (COMMAREA.CAITEM > " ")
      AS0AM001.CAITEM = COMMAREA.CAITEM;
      set AS0AM001.CAITEM modified;
      COMMAREA.CAITEM = " ";
    end
    ;
  else
    set AS0AM001 initial;
  end
  ;
  AS0AM001.AS0AM-XXX-CURDT = VGVar.currentShortGregorianDate;
  AS0AM001.AS0AM-XXX-PRCNM = ASWREC.ASW-PROCESS-NBR;
  ;
  ;
  converse AS0AM001 ;
  ;
  ;
   /* *************************************************************/
end // end AS0A-2000

// Check attention identifier
Function AS0A-3000()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2)
    set AS0AM001 initial;
    exit stack;
  end
  ;
  if (AS0AM001.CATOAP > " ")
    ;
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = AS0AM001.CATOAP;
      COMMAREA.CAITEM = AS0AM001.CAITEM;
      XPAS-39999();
    else
      converseLib.validationFailed(5);
      ASWREC.ASW-PROCESS-NBR = "AS0A-3000";
    end
    ;
    set AS0AM001.CATOAP cursor, modified, bold;
    exit stack;
    ;
  end
  ;
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4)
    XPAS-39999();
    exit stack;
  end
  ;
  if (converseVar.eventKey not enter)
    converseLib.validationFailed(4);
    ASWREC.ASW-PROCESS-NBR = "AS0A3000";
    ;
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
      
    end
    ;
    exit stack;
    ;
  end
  ;
  ;
end // end AS0A-3000

// Reset highlighted fields
Function AS0A-4000()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set AS0AM001.CATOAP initialAttributes;
  set AS0AM001.CAITEM initialAttributes;
  set AS0AM001.AS0AM-SELECTION initialAttributes;
  ;
  ASWREC.ASW-PROCESS-NBR = "AS0A0000";
  ;
  ;
end // end AS0A-4000

// Verify the entered data
Function AS0A-5000()
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
  ;
  if (AS0AM001.CAITEM > " ") /* Application data was entered*/
    set AS0AM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    ASWREC.ASW-PROCESS-NBR = "AS0A5000";
  end
  ;
  AS0A-5200(); /* Verify selection criteria*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  ;
end // end AS0A-5000

// Edit selection criteria
Function AS0A-5200()
   /* ============================================================*/
   /* ===== E D I T    S E L E C T I O N    C R I T E R I A  =====*/
   /* ============================================================*/
  ;
  ;
  if (AS0AM001.AS0AM-SELECTION == " ")
      /* next sentence*/
  else
    if (AS0AM001.AS0AM-SELECTION in AS0AT.AS0AT-SELECTION)
      COMMAREA.CATOAP = AS0AT.AS0AT-PROGRAM[sysVar.arrayIndex];
      COMMAREA.CAUSERA = AS1REC.AS1-CAUSERA;
      XPAS-39999();
    else
      set AS0AM001.AS0AM-SELECTION cursor, bold;
      converseLib.validationFailed(96); /* invalid selection*/
      ASWREC.ASW-PROCESS-NBR = "AS0A5200";
    end
  end
  ;
  ;
   /* ====================== END OF PROCESS ======================*/
  ;
  ;
  ;
end // end AS0A-5200

