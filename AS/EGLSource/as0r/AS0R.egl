package as0r;

import ab.common.*;
import af.common.AF5GROUP;
import af.common.AF5REC;
import as1.common.AS1REC;
import as1.common.ASWREC;
import corpcom2.XX0XW01;
import corpcom3.XPAS-00000;
import corpcom3.XPAS-39999;
import corpcom3.XPAS-51200;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XDMCD;
import corpx1.XDVCD;
import corpx1.XSETBL;
import corpx2.XOWCD;
import corpx2.XSECD;
import corpx2.XSNYR;
import corpy2.YSNTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import pg.common.PG1REC;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VPRPCT01;
//*** PROGRAM=AS0R ****
// This application is part of the Print Plan subsystem of
// the Apparel Buy system.  Its purpose is to add, maintain,
// and inquire on rows in the apparel style/color table dacast
// vafclr01.  It updates the ab-prdctn-grp-id.
//  DATE    USERID    COMMENT
// ------   ------    -----------------------------------------
// 071393   TDODSO    CHANGED AS0RW01 TO ACCOMODATE TABLE CHG
// 090393   TDODSO    4.1 conversion
// 041193   LREIN     CHANGED AS0RW01 TO ACCOMODATE TABLE CHG
//                    ALSO NEEDED TO CHANGE TSQLENGTH
// 11--94   kj        season validation
// *********************
Program AS0R type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "AB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AF5REC AF5REC; // record
  AS0RW00 AS0RW00; // record
  AS0RW01 AS0RW01; // record
  AS0RW02 AS0RW02; // record
  AS1REC AS1REC; // record
  ASWREC ASWREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VPRPCT01 VPRPCT01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use AS0RM.AS0RM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPAS-00000: XPAS-00000();
    set ASWREC empty;
    set AS0RW00 empty;
    set AS0RW01 empty;
    set AS0RW02 empty;
    set AS0RM001 initial;
    ;
    if (CAFRMSYS == "AS") /* entering from another AS app*/
      AS0RM001.AS0RM-SELECT-STYLE = AS1REC.SY1STNBR;
      AS0RM001.AS0RM-SELECT-COLOR = AS1REC.SY2CLRID;
    end
    ;
    AS0RW00.AS0RW-NUMBER-SCREEN-LINES = +12;
    AS0RW00.AS0RW-TSQ-LENGTH = +1456;
                                     /* nbr scrn lines * length + 4*/
    AS0RW00.AS0RW-FORMAT-MAP-SW = "N";
    AS0RW00.AS0RW-REQUEST-DATA-SW = "N";
    AS0RW00.AS0RW-MAP-SW = "1";
    AS0RW00.AS0RW-START-PAGE = 1;
    goto AS0R-0001; /* converse main process*/
    AS0R-0001: AS0R-0001();
    goto AS0R-0001; /* converse main process*/
  end // end main
end // end AS0R

// main process loop
Function AS0R-0001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  AS0R-1000(); /* process maint/inq*/
  ;
  ;
end // end AS0R-0001

// inq/maint main process
Function AS0R-1000()
  AS0R-1100(); /* obtain data*/
  AS0R-1200(); /* format map*/
  AS0R-1300(); /* validate pf keys*/
  AS0R-1400(); /* reset highlighted fields*/
  AS0R-1500(); /* validate input data*/
  AS0R-1600(); /* process valid input data*/
end // end AS0R-1000

// obtain data to display
Function AS0R-1100()
  ;
  if (AS0RW00.AS0RW-REQUEST-DATA-SW != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0)   /* Or error has occured*/
    return; /* Return to previous process*/
  end
  ;
  set AS0RW01 empty;
  set AS0RW02 empty;
  AS0RW00.AS0RW-ARRAY-INDEX = 1;
  ;
  if (AS0RW00.AS0RW-KEY-CHANGED-SW == "Y") /* new key*/
    AS0RW00.AS0RW-START-PAGE = 1; /* page to display*/
    set TA5REC empty;
  end
  ;
  AS0R-1110(); /* purge temp storage queue*/
  AS0R-1120(); /* select vafclr01 rows*/
  while (SQLCA.VAGen_SQLCODE != 100) /* while still data*/
    AS0R-1130(); /* save data*/
    AS0RS-0001(); /* fetch next vafclr01 row*/
  end
  ;
  AS0R-1140(); /* close cursor*/
  ;
  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    AS0RW00.AS0RW-REQUEST-DATA-SW = "N"; /* Request for data completed*/
  end
  ;
  if (AS0RW00.AS0RW-ARRAY-INDEX > 1) /* partial page formatted*/
    AS0R-1131(); /* add page to tsq*/
  end
  ;
  if (TA5REC.TA5TSQIX < 1) /* no data to display*/
    converseLib.validationFailed(5);
    AS0RM001.XXXPRCNM = "AS0R1100";
  end
end // end AS0R-1100

// purge temp storage queue
Function AS0R-1110()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = "AS0R"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  call "TA0050" (AS0RW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    AS0RM001.XXXPRCNM = "AS0R1110"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0R1110"; /* Error location*/
    TA1REC.TA1LOC = "PURGE TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
  end
  ;
  AS0RW00.AS0RW-START-PAGE = 1; /* Reset current page number*/
  AS0RW00.TA5TSQIX = 0; /* Reset highest page number*/
end // end AS0R-1110

// select set vafclr01
Function AS0R-1120()
  set AF5REC empty;
  ;
  AF5REC.XSECD = AS0RM001.AS0RM-SELECT-SEASON;
  ;
  AF5REC.XSNYR = AS0RM001.AS0RM-SELECT-YEAR + 1900;
  ;
  if (AS0RM001.AS0RM-SELECT-STYLE != " ")
    AF5REC.SY1STNBR = AS0RM001.AS0RM-SELECT-STYLE;
  else
    AF5REC.SY1STNBR = "*";
  end
  ;
  if (AS0RM001.AS0RM-SELECT-COLOR != " ")
    AF5REC.SY2CLRID = AS0RM001.AS0RM-SELECT-COLOR;
  else
    AF5REC.SY2CLRID = "*";
  end
  ;
   /* ===================================**/
   /* Select Set from dacast.vafclr01 **/
   /* ===================================**/
  ;
  try
    call "IO3520" ("S5", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    AS0RS-0001(); /* fetch first row*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0RM001.XXXPRCNM = "AS0R1120"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0R1120"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET ";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0RW00.AS0RW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0R-1120

// save data in working storage
Function AS0R-1130()
  AS0RW01.AF5GROUP[AS0RW-ARRAY-INDEX] = AF5REC.AF5GROUP;
  ;
  if (AS0RW00.AS0RW-ARRAY-INDEX == AS0RW00.AS0RW-NUMBER-SCREEN-LINES)
    AS0R-1131(); /* add page to tsq*/
    AS0RW00.AS0RW-ARRAY-INDEX = 1; /* reset array*/
  else
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0R-1130

// add page to TSQ
Function AS0R-1131()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  AS0RW01.AS0RW-TSQ-LENGTH = AS0RW00.AS0RW-TSQ-LENGTH; /* Temporary storage length*/
  TA5REC.TA5APPID = "AS0R"; /* Application id*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  call "TA0050" (AS0RW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage*/
  ;
  if (TA5REC.TA5RTNCD != 0) /* Error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AS0RM001.XXXPRCNM = "AS0R1131"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0R1131"; /* Error location*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0RM001"; /* MAP NAME*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    return; /* Return to previous process*/
  end
  ;
  AS0RW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
  set AS0RW01 empty; /* Clear temporary storage record*/
end // end AS0R-1131

// close cursor VAFCLR01
Function AS0R-1140()
  ;
   /* ===================================**/
   /* close cursor for dabuy.VAFCLR01  **/
   /* ===================================**/
  ;
  try
    call "IO3520" ("C5", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0RM001.XXXPRCNM = "AS0R1140"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0R1140"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE CURSOR";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0RW00.AS0RW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0R-1140

// format and display map 1
Function AS0R-1200()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  AS0RM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error message to display*/
    set AS0RM001 alarm; /* Indicate sound alarm*/
  end
  ;
  if (AS0RW00.AS0RW-FORMAT-MAP-SW == "N" /* dont format map*/
   || converseVar.validationMsgNum != 0) /* Error message to display*/
   /* next sentence                /* return to calling process*/
  else
    AS0RW02.AS0RM-SELECT-SEASON = AS0RM001.AS0RM-SELECT-SEASON;
    AS0RW02.AS0RM-SELECT-YEAR = AS0RM001.AS0RM-SELECT-YEAR + 1900;
    /* MOVE AS0RM001.AS0RM-SELECT-YEAR TO AS0RW02.AS0RM-SELECT-YEAR;*/
    AS0RW02.AS0RM-SELECT-STYLE = AS0RM001.AS0RM-SELECT-STYLE;
    AS0RW02.AS0RM-SELECT-COLOR = AS0RM001.AS0RM-SELECT-COLOR;
    set AS0RM001 initial;
    AS0RM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    if (AS1REC.AS1-MSG-NO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(AS1REC.AS1-MSG-NO);
    end /* Information message number*/
    AS1REC.AS1-MSG-NO = 0; /* Reset information message number*/
    AS0R-1210(); /* format header data*/
    AS0R-1220(); /* Format the data on the page*/
    set AS0RM001.AB-PRDCTN-GRP-ID[1] cursor; /* cursor first prod code*/
    AS0RW00.AS0RW-FORMAT-MAP-SW = "N"; /* map is formatted*/
  end
  ;
  AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-NUMBER-SCREEN-LINES;
  ;
  while (AS0RW00.AS0RW-ARRAY-INDEX > 0
   && AS0RM001.XSECD[AS0RW-ARRAY-INDEX] == " ")
    set AS0RM001.XSECD[AS0RW-ARRAY-INDEX] skip, invisible;
    set AS0RM001.XSNYR[AS0RW-ARRAY-INDEX] skip, invisible;
    set AS0RM001.SY1STNBR[AS0RW-ARRAY-INDEX] skip, invisible;
    set AS0RM001.SY2CLRID[AS0RW-ARRAY-INDEX] skip, invisible;
    set AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] skip, invisible;
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX - 1;
  end
  ;
  converse AS0RM001 ;
end // end AS0R-1200

// format header data
Function AS0R-1210()
  AS0RM001.AS0RM-SELECT-SEASON = AS0RW02.AS0RM-SELECT-SEASON;
  AS0RM001.AS0RM-SELECT-YEAR = AS0RW02.AS0RM-SELECT-YEAR;
  AS0RM001.AS0RM-SELECT-STYLE = AS0RW02.AS0RM-SELECT-STYLE;
  AS0RM001.AS0RM-SELECT-COLOR = AS0RW02.AS0RM-SELECT-COLOR;
  ;
  if (AS0RM001.AS0RM-SELECT-STYLE != " ") /* a style entered*/
    AS0RS-0003(); /* get style short name*/
  end
  ;
  if (AS0RM001.AS0RM-SELECT-COLOR != " ") /* a color entered*/
    AS0RS-0004(); /* get color abbrv*/
  end
end // end AS0R-1210

// format screen detail lines
Function AS0R-1220()
  AS0R-1221(); /* get page from tsq*/
  AS0RW00.AS0RW-ARRAY-INDEX = 1; /* first screen line*/
  ;
  while (AS0RW00.AS0RW-ARRAY-INDEX <= AS0RW00.AS0RW-NUMBER-SCREEN-LINES)
    AS0RM001.XSECD[AS0RW-ARRAY-INDEX] = AS0RW01.XSECD[AS0RW-ARRAY-INDEX];
    AS0RM001.XSNYR[AS0RW-ARRAY-INDEX] = AS0RW01.XSNYR[AS0RW-ARRAY-INDEX];
    AS0RM001.XOWCD[AS0RW-ARRAY-INDEX] = AS0RW01.XOWCD[AS0RW-ARRAY-INDEX];
    AS0RM001.SY1STNBR[AS0RW-ARRAY-INDEX] = AS0RW01.SY1STNBR[AS0RW-ARRAY-INDEX];
    AS0RM001.SY2CLRID[AS0RW-ARRAY-INDEX] = AS0RW01.SY2CLRID[AS0RW-ARRAY-INDEX];
    AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] = AS0RW01.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX];
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0R-1220

// retrieve page from TSQ
Function AS0R-1221()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  set AS0RW01 empty; /* initialise tsq work area*/
  AS0RW01.AS0RW-TSQ-LENGTH = AS0RW00.AS0RW-TSQ-LENGTH;
  TA5REC.TA5APPID = "AS0R"; /* Application identification*/
  TA5REC.TA5TSQIX = AS0RW00.AS0RW-START-PAGE; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  call "TA0050" (AS0RW01, TA5REC) {isNoRefresh = yes}; /* Temporary storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0 /* no errors*/
   || TA5REC.TA5RTNCD == 1 /* both*/
   || TA5REC.TA5RTNCD == 4 /* both of these will*/
   || TA5REC.TA5RTNCD == 7) /* indicate no more pages*/
   /* next sentence;*/
  else
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    AS0RM001.XXXPRCNM = "AS0R1221"; /* Process number*/
    TA1REC.TA1PGMNM = "AS0R1221"; /* Error location*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    converseLib.validationFailed(5); /* Indicate no data to display*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end AS0R-1221

// validate attn identifiers
Function AS0R-1300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set AS0RM001 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0RM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = AS0RM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = AS0RM001.CAITEM;
      AS1REC.SY1STNBR = AS0RM001.AS0RM-SELECT-STYLE;
      AS1REC.SY2CLRID = AS0RM001.AS0RM-SELECT-COLOR;
      XPAS-39999(); /* Exit to another application*/
    else
      converseLib.validationFailed(4); /* Indicate PF key not valid*/
    end
    ;
    set AS0RM001.CATOAP cursor, modified, bold; /* Highlight*/
    AS0RM001.XXXPRCNM = "AS0R1300 "; /* process number*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (AS0RM001.CAITEM > " ") /* application data was entered*/
    set AS0RM001.CAITEM cursor, modified, bold; /* highlight data*/
    converseLib.validationFailed(7); /* enter only with fast path*/
    AS0RM001.XXXPRCNM = "AS0R1300 "; /* process number*/
    exit stack; /* redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
    if (converseVar.eventKey is pf1) /* pf1 is pressed*/
      COMMAREA.CAITEM = "AS0RM001"; /* appl find code*/
    end
    ;
    if (converseVar.eventKey is pf3) /* pf3 is pressed*/
      COMMAREA.CATOAP = "AS0A"; /* fluctuations menu*/
    end
    ;
    AS1REC.SY1STNBR = AS0RM001.AS0RM-SELECT-STYLE;
    AS1REC.SY2CLRID = AS0RM001.AS0RM-SELECT-COLOR;
    XPAS-39999(); /* Exit to another application*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* or scroll forward*/
   && converseVar.eventKey not pf8   /* or scroll backward*/
   && converseVar.eventKey not pf13) /* or add screen*/
    AS0RM001.XXXPRCNM = "AS0R1300"; /* process number*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    ;
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
    exit stack; /* Exit to redisplay map*/
  end
  ;
end // end AS0R-1300

// reset highlighted fields
Function AS0R-1400()
  set AS0RM001.AS0RM-SELECT-SEASON initialAttributes;
  set AS0RM001.AS0RM-SELECT-YEAR initialAttributes;
  set AS0RM001.AS0RM-SELECT-STYLE initialAttributes;
  set AS0RM001.AS0RM-SELECT-COLOR initialAttributes;
  ;
  AS0RW00.AS0RW-ARRAY-INDEX = 1; /* first screen line*/
  ;
  while (AS0RW00.AS0RW-ARRAY-INDEX <= AS0RW00.AS0RW-NUMBER-SCREEN-LINES)
    set AS0RM001.XSECD[AS0RW-ARRAY-INDEX] initialAttributes;
    set AS0RM001.XSNYR[AS0RW-ARRAY-INDEX] initialAttributes;
    set AS0RM001.SY1STNBR[AS0RW-ARRAY-INDEX] initialAttributes;
    set AS0RM001.SY2CLRID[AS0RW-ARRAY-INDEX] initialAttributes;
    set AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] initialAttributes;
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
  end
  ;
end // end AS0R-1400

// validate entered data
Function AS0R-1500()
  if (converseVar.eventKey is pf7) /* scroll up*/
    ;
    if (AS0RW00.AS0RW-START-PAGE <= 1) /* already on first page*/
      converseLib.validationFailed(2); /* error no more backward*/
      AS0RM001.XXXPRCNM = "AS0R1500"; /* process number*/
      exit stack; /* return to display the map*/
    else /* no error*/
      return; /* return to calling process*/
    end
    ;
  end
  if (converseVar.eventKey is pf8) /* scroll down*/
    ;
    if (AS0RW00.AS0RW-START-PAGE >= AS0RW00.TA5TSQIX) /* already on last page*/
      converseLib.validationFailed(3); /* error no more forward*/
      AS0RM001.XXXPRCNM = "AS0R1500"; /* process number*/
      exit stack; /* return to display the map*/
    else /* no error*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  AS0RW00.AS0RW-DATA-CHANGED-SW = "N";
  AS0RW00.AS0RW-KEY-CHANGED-SW = "N";
  ;
  AS0RW02.AS0RM-HOLD-SELECT-YEAR = AS0RM001.AS0RM-SELECT-YEAR + 1900;
  ;
  if (AS0RM001.AS0RM-SELECT-SEASON != AS0RW02.AS0RM-SELECT-SEASON
   || AS0RW02.AS0RM-HOLD-SELECT-YEAR != AS0RW02.AS0RM-SELECT-YEAR
   || AS0RM001.AS0RM-SELECT-STYLE != AS0RW02.AS0RM-SELECT-STYLE
   || AS0RM001.AS0RM-SELECT-COLOR != AS0RW02.AS0RM-SELECT-COLOR
   || AS0RM001.AS0RM-SELECT-SEASON == "  "
   || AS0RM001.AS0RM-SELECT-YEAR == 0)
    AS0RW00.AS0RW-KEY-CHANGED-SW = "Y";
    AS0RW00.AS0RW-DATA-CHANGED-SW = "N";
  end
  ;
  if (AS0RW02.AS0RM-SELECT-SEASON == " "
   && AS0RW02.AS0RM-SELECT-YEAR == 0
   && AS0RW02.AS0RM-SELECT-STYLE == " "
   && AS0RW02.AS0RM-SELECT-COLOR == " ")
    AS0RW00.AS0RW-KEY-CHANGED-SW = "Y";
  end
  ;
   /* set flag to indicate all colors are blank for processing*/
   /* all colors at once*/
  ;
  AS0RW00.AS0RW-ARRAY-INDEX = 2;
  AS0RW00.AS0RW-ALL-CLRS-BLNK-SW = "Y";
  while (AS0RW00.AS0RW-ARRAY-INDEX <= AS0RW00.AS0RW-NUMBER-SCREEN-LINES
   && AS0RW00.AS0RW-ALL-CLRS-BLNK-SW == "Y")
    if (AS0RM001.AB-PRDCTN-GRP-ID[1] > " "
     && AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] == " ")
      AS0RW00.AS0RW-SAVE-GRP-ID = AS0RM001.AB-PRDCTN-GRP-ID[1];
      AS0RW00.AS0RW-ALL-CLRS-BLNK-SW = "Y";
    else
      AS0RW00.AS0RW-ALL-CLRS-BLNK-SW = "N";
    end
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
  end
  ;
  AS0RW00.AS0RW-ARRAY-INDEX = 1;
  ;
  while (AS0RW00.AS0RW-ARRAY-INDEX <= AS0RW00.AS0RW-NUMBER-SCREEN-LINES
   && AS0RW00.AS0RW-DATA-CHANGED-SW == "N")
    ;
    if (AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] != 
    AS0RW01.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX])
      AS0RW00.AS0RW-DATA-CHANGED-SW = "Y";
      ;
    end
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
  end
  if (AS0RW00.AS0RW-DATA-CHANGED-SW == "N" /* data didnt change*/
   && AS0RW00.AS0RW-KEY-CHANGED-SW == "N") /* sel criteria not change*/
    return; /* return to calling routine*/
  end
  ;
  if (AS0RW00.AS0RW-KEY-CHANGED-SW == "Y") /* sel criteria changed*/
    ;
    if (AS0RM001.AS0RM-SELECT-SEASON != AS0RW02.AS0RM-SELECT-SEASON
     || AS0RM001.AS0RM-SELECT-YEAR != AS0RW02.AS0RM-SELECT-YEAR
     || AS0RM001.AS0RM-SELECT-SEASON == " "
     || AS0RM001.AS0RM-SELECT-YEAR != 0)
      AS0RW02.AS0RM-SELECT-SEASON = AS0RM001.AS0RM-SELECT-SEASON;
      AS0RW02.AS0RM-SELECT-YEAR = AS0RM001.AS0RM-SELECT-YEAR;
      ;
      if (AS0RM001.AS0RM-SELECT-SEASON == " ")
        set AS0RM001.AS0RM-SELECT-SEASON cursor, bold;
        converseLib.validationFailed(16); /* invalid sesn msg*/
        AS0RM001.XXXPRCNM = "AS0R-1500";
        AS0RW02.AS0RM-SELECT-YEAR = 0;
      else
        if (AS0RM001.AS0RM-SELECT-YEAR == 0)
          set AS0RM001.AS0RM-SELECT-YEAR cursor, bold;
          converseLib.validationFailed(26); /* invalid year msg*/
          AS0RM001.XXXPRCNM = "AS0R-1500";
          AS0RW02.AS0RM-SELECT-SEASON = " ";
        else
          AS0R-1520(); /* validate season/year*/
        end
      end
    end
    ;
    ;
    if (AS0RM001.AS0RM-SELECT-STYLE != AS0RW02.AS0RM-SELECT-STYLE)
      AS0RW02.AS0RM-SELECT-STYLE = AS0RM001.AS0RM-SELECT-STYLE;
    end
    ;
    if (AS0RM001.AS0RM-SELECT-COLOR != AS0RW02.AS0RM-SELECT-COLOR)
      AS0RW02.AS0RM-SELECT-COLOR = AS0RM001.AS0RM-SELECT-COLOR;
      ;
      if (AS0RM001.AS0RM-SELECT-COLOR != " ")
        ;
        if (AS0RM001.AS0RM-SELECT-STYLE == " ")
          converseLib.validationFailed(54); /* color needs style*/
          AS0RM001.XXXPRCNM = "AS0R1500";
          set AS0RM001.AS0RM-SELECT-STYLE cursor, bold;
        end
        ;
      end
      ;
    end
    ;
    if (converseVar.validationMsgNum == 0) /* no errors*/
      set AS0RM001 initial;
      AS0R-1210(); /* format selection data*/
    end
  end
  ;
  ;
  ;
  if (converseVar.validationMsgNum == 0) /* no errors*/
    return;
  else
    AS0RW00.AS0RW-FORMAT-MAP-SW = "N";
    exit stack;
  end
  ;
end // end AS0R-1500

// validate seaon cd/yr
Function AS0R-1520()
  AS1REC.AS1-XSN-YY = AS0RM001.AS0RM-SELECT-YEAR;
  AS1REC.AS1-XSE-XSN = AS0RM001.AS0RM-SELECT-SEASON;
  AS1REC.AS1-VALID-XSE-FL = "0";
  AS1REC.AS1-VALID-XSN-FL = "0";
  AS1REC.AS1-VALID-XSE-XSN-FL = "0";
  AS1REC.XSECD = AS0RM001.AS0RM-SELECT-SEASON;
  AS1REC.AS1-XSN-CC = 0;
  XPAS-51200();
  ;
  if (AS1REC.AS1-VALID-XSE-XSN-FL != 0)
    set AS0RM001.AS0RM-SELECT-SEASON cursor, bold;
    set AS0RM001.AS0RM-SELECT-YEAR bold;
    converseLib.validationFailed(71); /* invalid sesn/yr msg*/
    AS0RM001.XXXPRCNM = "AS0R-1520";
  end
  ;
  if (AS1REC.AS1-VALID-XSN-FL != 0)
    set AS0RM001.AS0RM-SELECT-YEAR cursor, bold;
    converseLib.validationFailed(26); /* invalid year msg*/
    AS0RM001.XXXPRCNM = "AS0R-1520";
  end
  ;
  if (AS1REC.AS1-VALID-XSE-FL != 0)
    set AS0RM001.AS0RM-SELECT-SEASON cursor, bold;
    AS1REC.AS1-MSG-NO = 16; /* invalid sesn msg*/
    AS0RM001.XXXPRCNM = "AS0R-1520";
  end
  ;
end // end AS0R-1520

// process valid inq/maint req
Function AS0R-1600()
  if (converseVar.eventKey is pf7) /* scroll back*/
    AS0RW00.AS0RW-START-PAGE = AS0RW00.AS0RW-START-PAGE - 1;
    AS0RW00.AS0RW-REQUEST-DATA-SW = "N";
    AS0RW00.AS0RW-FORMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* scroll forward*/
    AS0RW00.AS0RW-START-PAGE = AS0RW00.AS0RW-START-PAGE + 1;
    AS0RW00.AS0RW-REQUEST-DATA-SW = "N";
    AS0RW00.AS0RW-FORMAT-MAP-SW = "Y";
    return;
  end
  ;
  if (AS0RW00.AS0RW-KEY-CHANGED-SW == "Y") /* selection data changed*/
    AS0RW00.AS0RW-REQUEST-DATA-SW = "Y";
    AS0RW00.AS0RW-FORMAT-MAP-SW = "Y";
    AS0RW00.AS0RW-START-PAGE = 1;
    return;
  end
  ;
  if (AS0RM001.AS0RM-SELECT-STYLE > " "
   && AS0RM001.AS0RM-SELECT-COLOR == " "
   && AS0RW00.AS0RW-DATA-CHANGED-SW == "Y"
   && AS0RW00.AS0RW-ALL-CLRS-BLNK-SW == "Y")
    AS0RW00.AS0RW-PRCS-ALL-CLRS-SW = "Y";
  else
    AS0RW00.AS0RW-PRCS-ALL-CLRS-SW = "N";
  end
  ;
   /* if processing all colors, get all pages and update each row with*/
   /* the first production percent code*/
  ;
  if (AS0RW00.AS0RW-PRCS-ALL-CLRS-SW == "Y")
    while (AS0RW00.AS0RW-START-PAGE <= AS0RW00.TA5TSQIX) /* last page*/
      AS0RW00.AS0RW-ARRAY-INDEX = 1;
      while (AS0RW00.AS0RW-ARRAY-INDEX <= AS0RW00.AS0RW-NUMBER-SCREEN-LINES
       && AS0RM001.SY1STNBR[AS0RW-ARRAY-INDEX] > " ")
        AS0R-1620(); /* validate grp id*/
        AS0R-1610(); /* update row*/
        ;
        AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
      end
      AS0RW00.AS0RW-START-PAGE = AS0RW00.AS0RW-START-PAGE + 1;
      if (AS0RW00.AS0RW-START-PAGE <= AS0RW00.TA5TSQIX) /* if more pages*/
        AS0R-1220(); /* get next page*/
        AS0RM001.AB-PRDCTN-GRP-ID[1] = AS0RW00.AS0RW-SAVE-GRP-ID;
      end
    end
    AS1REC.AS1-MSG-NO = 45; /* info msg update ok*/
    return;
  end
  ;
  AS0RW00.AS0RW-ARRAY-INDEX = 1; /* initialiZe*/
  ;
  while (AS0RW00.AS0RW-ARRAY-INDEX <= AS0RW00.AS0RW-NUMBER-SCREEN-LINES
   && AS0RM001.SY1STNBR[AS0RW-ARRAY-INDEX] > " ")
    ;
    if (AS0RW01.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] != 
    AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX])
      AS0R-1620(); /* validate grp id*/
      AS0R-1610(); /* update row*/
    end
    ;
    AS0RW00.AS0RW-ARRAY-INDEX = AS0RW00.AS0RW-ARRAY-INDEX + 1;
  end
  ;
  AS1REC.AS1-MSG-NO = 45; /* info msg update ok*/
end // end AS0R-1600

// update row
Function AS0R-1610()
  XX0XS01(); /* get date & time*/
  AF5REC.AF5GROUP = AS0RW01.AF5GROUP[AS0RW-ARRAY-INDEX];
  AF5REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  AF5REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
   /* if the user wants to apply grp id to all colors*/
  if (AS0RW00.AS0RW-PRCS-ALL-CLRS-SW == "Y")
    if (AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] == " "
     && AS0RM001.AB-PRDCTN-GRP-ID[1] > " ")
      AF5REC.AB-PRDCTN-GRP-ID = AS0RM001.AB-PRDCTN-GRP-ID[1];
    else
      AF5REC.AB-PRDCTN-GRP-ID = AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX];
    end
    ;
  else
    ;
    AF5REC.AB-PRDCTN-GRP-ID = AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX];
  end
  ;
  AS0R-1611(); /* update row*/
end // end AS0R-1610

// update DABUY.VAFCLR01 row
Function AS0R-1611()
   /* ===================================**/
   /* Update row in   daCAST.VAFCLR01 **/
   /* ===================================**/
  ;
  try
    call "IO3520" ("U3", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select table set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      AS0RW00.AS0RW-REQUEST-DATA-SW = "Y";
      AS0RW00.AS0RW-FORMAT-MAP-SW = "Y";
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any updates*/
      AS0RM001.XXXPRCNM = "AS0R1611"; /* process number*/
      set AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] cursor, bold; /* highlight*/
      converseLib.validationFailed(13); /* data already updated or something*/
      exit stack; /* return to display the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* backout any changes*/
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0RM001.XXXPRCNM = "AS0R1611"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0R1611"; /* Error location*/
  TA1REC.TA1LOC = "UPDATE ROW        ";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0R-1611

// validate prod grp id
Function AS0R-1620()
  ;
   /* move selection data to vprpct01*/
  ;
  if (AS0RW00.AS0RW-PRCS-ALL-CLRS-SW == "Y"
   && AS0RW-ARRAY-INDEX > 1)
    return;
  end
  ;
  if (AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] == " ")
    return;
  end
  ;
  set VPRPCT01 empty;
  ;
  VPRPCT01.XSECD = AS0RM001.AS0RM-SELECT-SEASON;
  VPRPCT01.XSNYR = AS0RM001.AS0RM-SELECT-YEAR + 1900;
   /* OVE AS0RM001.AS0RM-SELECT-YEAR TO VPRPCT01.XSNYR;*/
  ;
  VPRPCT01.AB-PRDCTN-GRP-ID = AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX];
  ;
  AS0RS-0008(); /* select set to validate prd grp id*/
  ;
  AS0RS-0009(); /* fetch one row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 100) /* prod grp id not found*/
    AS0RS-0010(); /* close vprpct01 cursor*/
    set AS0RM001.AB-PRDCTN-GRP-ID[AS0RW-ARRAY-INDEX] bold, cursor;
    converseLib.validationFailed(147);
    exit stack;
  else
    AS0RS-0010(); /* close vprpct01 cursor*/
  end
  ;
end // end AS0R-1620

// fetch next vaFCLR01 row
Function AS0RS-0001()
  ;
   /* ===================================**/
   /* fetch row  from daCAST.VAFCLR01 **/
   /* ===================================**/
  ;
  try
    call "IO3520" ("N5", SQLCA, AF5REC) {isNoRefresh = yes, isExternal = yes};
  end /* fetch next row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* no more rows*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0RM001.XXXPRCNM = "AS0RS0010"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0RS0010"; /* Error location*/
  TA1REC.TA1LOC = "FETCH ROW  ";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DACAST "; /* Data base name*/
  TA1REC.TA1TBLVU = "VAFCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  AS0RW00.AS0RW-REQUEST-DATA-SW = "N"; /* dont request data*/
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0RS-0001

// get style short name
Function AS0RS-0003()
  AS0RM001.SY1SSTNM = " "; /* space out short name*/
  AS0RS-0005(); /* select set syclr*/
  AS0RS-0006(); /* fetch one row*/
  AS0RS-0007(); /* close cursor syclr*/
end // end AS0RS-0003

// get color abreviation
Function AS0RS-0004()
   /* ------------------------------------------------------------*/
   /* Obtain Style and Color descriptions from DPRODG.VSYCLR01.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=====================**/
   /* *  Build Access Keys  **/
   /* *=====================**/
  ;
  set PG2REC empty; /* initialize db record*/
  PG2REC.XGPCD = "03"; /* gpc cd*/
  PG2REC.SY1STNBR = AS0RM001.AS0RM-SELECT-STYLE; /* style*/
  PG2REC.SY2CLRID = AS0RM001.AS0RM-SELECT-COLOR; /* color*/
  PG2REC.XDMCD = "00"; /* dimension cd*/
  ;
  ;
   /* *=============================**/
   /* *  Access DPRODG.VSYCLR01 DB  * Obtain style,color desc*/
   /* *=============================**/
  ;
  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  ;
   /* ------------------------------------------------------------*/
    /* If successful call, save desc to working storage*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      AS0RM001.SY2CLRAB = PG2REC.SY2CLRAB; /* move color desc*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AS0RM001.SY2CLRAB = " "; /* Blank out color abbrev*/
      converseLib.validationFailed(91); /* invalid color*/
      set AS0RM001.AS0RM-SELECT-COLOR cursor, bold; /* highlight*/
      return; /* Return to calling process*/
    end
    ;
  end
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return error condition.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "AS0RS0040"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis rtn*/
  AS0RM001.XXXPRCNM = "AS0RS0040"; /* Process name*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
  ;
end // end AS0RS-0004

// select set DPRODG.VSYCLR01
Function AS0RS-0005()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select set' call.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
   /* *=================**/
   /* *  Build DB keys  **/
   /* *=================**/
  ;
  set PG2REC empty; /* Reset rec work area*/
  PG2REC.XGPCD = "03"; /* GPC cd*/
  PG2REC.SY1STNBR = AS0RM001.AS0RM-SELECT-STYLE; /* Style no.*/
  ;
   /* *===================================**/
   /* *  Select Set from DPRODG.VSYCLR01  **/
   /* *===================================**/
  ;
  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0RM001.XXXPRCNM = "AS0RS0050"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0RS0050"; /* Error location*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
end // end AS0RS-0005

// fetch row DPRODG.VSYCLR01
Function AS0RS-0006()
   /* ------------------------------------------------------------*/
   /* Select the target row on a 'select next' call and validate.*/
   /* For validation purposes only one (1) valid row retrieved*/
     /* will be enough to satisfy the existence check.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
   /* ------------------------------------------------------------*/
   /* If call successful, process retrieved row.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Return code normal*/
      AS0RM001.SY1SSTNM = PG2REC.SY1SSTNM; /* move style desc*/
      return; /* Return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* No data found*/
      AS0RM001.SY1SSTNM = " "; /* Space out desc*/
      set AS0RM001.AS0RM-SELECT-STYLE cursor, bold; /* Highlight field*/
      converseLib.validationFailed(38); /* Indicate error message*/
      AS0RM001.XXXPRCNM = "AS0RS0060"; /* Process number*/
      return; /* Exit to calling rtn*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  AS0RM001.XXXPRCNM = "AS0RS0060"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0RS0060"; /* Error location*/
  TA1REC.TA1LOC = "GET DPRODG.VSYCLR01 ROW";
  TA1REC.TA1MAP = "AS0RM001"; /* MAP NAME*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to redisplay map*/
  ;
end // end AS0RS-0006

// close cursor DPRODG.VSYCLR01
Function AS0RS-0007()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to calling process*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return; /* Return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Save SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  AS0RM001.XXXPRCNM = "AS0RS0070"; /* Process number*/
  TA1REC.TA1PGMNM = "AS0RS0070"; /* Error location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1MAP = "AS0RM001"; /* Map name*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  converseLib.validationFailed(10); /* Indicate system error*/
  converseLib.clearScreen();
   /* Clear screen before redisplay*/
end // end AS0RS-0007

// select set DABUY.VPRPCT01
Function AS0RS-0008()
   /* CALL IO6560 to get production percents codes*/
  ;
  try
    call "IO6560" ("S1", SQLCA, VPRPCT01) {isNoRefresh = yes, isExternal = yes};
  end /* select set*/
  ;
  if (sysVar.errorCode == "00000000" /* call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000") /* call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* resource not available*/
      converseLib.validationFailed(11); /* indiate not available*/
      TA1REC.TA1FUNC = "POST"; /* termination function*/
      ;
    else
      converseLib.validationFailed(10);
      TA1REC.TA1FUNC = "RETN"; /* termination function*/
      converseLib.clearScreen();
       /* clear screen before redisplay*/
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* save sql commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* type of error*/
  AS0RM001.XXXPRCNM = "AS0RS-0008"; /* process number*/
  TA1REC.TA1PGMNM = "AS0R"; /* error location*/
  TA1REC.TA1LOC = "SELECT SET PROD PCT CODES";
  TA1REC.TA1DBASE = "DABUY   "; /* database name*/
  TA1REC.TA1TBLVU = "VPRPCT01"; /* table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis rtn*/
  converseLib.validationFailed(10); /* indicate system error*/
  exit stack; /* exit to redisplay amp*/
  ;
end // end AS0RS-0008

// select set DABUY.VPRPCT01
Function AS0RS-0009()
   /* CALL IO6560 to get one row of percents codes*/
  ;
  try
    call "IO6560" ("N1", SQLCA, VPRPCT01) {isNoRefresh = yes, isExternal = yes};
  end /* select set*/
  ;
  if (sysVar.errorCode == "00000000" /* call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* call successful*/
   && SQLCA.VAGen_SQLCODE == 100)    /* no record found is ok*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000") /* call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* resource not available*/
      converseLib.validationFailed(11); /* indiate not available*/
      TA1REC.TA1FUNC = "POST"; /* termination function*/
      ;
    else
      converseLib.validationFailed(10);
      TA1REC.TA1FUNC = "RETN"; /* termination function*/
      converseLib.clearScreen();
       /* clear screen before redisplay*/
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* save sql commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* type of error*/
  AS0RM001.XXXPRCNM = "AS0RS-0009"; /* process number*/
  TA1REC.TA1PGMNM = "AS0R"; /* error location*/
  TA1REC.TA1LOC = "FETCH ONE  PROD PCT CODES";
  TA1REC.TA1DBASE = "DABUY   "; /* database name*/
  TA1REC.TA1TBLVU = "VPRPCT01"; /* table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis rtn*/
  converseLib.validationFailed(10); /* indicate system error*/
  exit stack; /* exit to redisplay amp*/
  ;
end // end AS0RS-0009

// select set DABUY.VPRPCT01
Function AS0RS-0010()
   /* CALL IO6560 to close prod percents codes*/
  ;
  try
    call "IO6560" ("C1", SQLCA, VPRPCT01) {isNoRefresh = yes, isExternal = yes};
  end /* select set*/
  ;
  if (sysVar.errorCode == "00000000" /* call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000") /* call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* resource not available*/
      converseLib.validationFailed(11); /* indiate not available*/
      TA1REC.TA1FUNC = "POST"; /* termination function*/
      ;
    else
      converseLib.validationFailed(10);
      TA1REC.TA1FUNC = "RETN"; /* termination function*/
      converseLib.clearScreen();
       /* clear screen before redisplay*/
    end
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* save CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* save sql commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* type of error*/
  AS0RM001.XXXPRCNM = "AS0RS-0010"; /* process number*/
  TA1REC.TA1PGMNM = "AS0R"; /* error location*/
  TA1REC.TA1LOC = "CLOSE CSR PROD PCT CODES";
  TA1REC.TA1DBASE = "DABUY   "; /* database name*/
  TA1REC.TA1TBLVU = "VPRPCT01"; /* table view name*/
  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis rtn*/
  converseLib.validationFailed(10); /* indicate system error*/
  exit stack; /* exit to redisplay amp*/
  ;
end // end AS0RS-0010

//*** RECORD=AS0RW00 ****
// This record is misc working-storage for CSP application AS0R
// ***********************
Record AS0RW00 type basicRecord
  10 AS0RW-NUMBER-SCREEN-LINES AS0RW-NUMBER-SCREEN-LINES ; 
  10 AS0RW-START-PAGE AS0RW-START-PAGE ; 
  10 AS0RW-TSQ-LENGTH AS0RW-TSQ-LENGTH ; 
  10 AS0RW-ARRAY-INDEX AS0RW-ARRAY-INDEX ; 
  10 AS0RW-TEMP-INDEX AS0RW-TEMP-INDEX ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 AS0RW-FORMAT-MAP-SW AS0RW-FORMAT-MAP-SW ; 
  10 AS0RW-MAP-SW AS0RW-MAP-SW ; 
  10 AS0RW-REQUEST-DATA-SW AS0RW-REQUEST-DATA-SW ; 
  10 AS0RW-DATA-CHANGED-SW AS0RW-DATA-CHANGED-SW ; 
  10 AS0RW-KEY-CHANGED-SW AS0RW-KEY-CHANGED-SW ; 
  10 AS0RW-GET-COLORS-SW AS0RW-GET-COLORS-SW ; 
  10 AS0RW-PRCS-ALL-CLRS-SW AS0RW-PRCS-ALL-CLRS-SW ; 
  10 AS0RW-ALL-CLRS-BLNK-SW AS0RW-ALL-CLRS-BLNK-SW ; 
  10 AS0RW-SAVE-GRP-ID AS0RW-SAVE-GRP-ID ; 
end // end AS0RW00

//*** RECORD=AS0RW01 ****
// this record is the array which contains a page worth of
// detail lines for CSP application AS0R
// ***********************
Record AS0RW01 type basicRecord
  5 * char(1456) ; 
    10 AS0RW-TSQ-LENGTH AS0RW-TSQ-LENGTH ; 
    10 AF5GROUP AF5GROUP [12] ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XOWCD XOWCD ; 
      15 XDVCD XDVCD ; 
      15 XSECD XSECD ; 
      15 XSNYR XSNYR ; 
      15 * char(12) ; // PG_SCHED_SPCLT_CD
      15 AB-PRDCTN-GRP-ID AB-PRDCTN-GRP-ID ; 
      15 * char(79) ; // PG_SCN_STY_IND
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
end // end AS0RW01

//*** RECORD=AS0RW02 ****
// Misc. working storage for program AS0R
// ***********************
Record AS0RW02 type basicRecord
  10 * char(5) ; 
  10 AS0RM-SELECT-STYLE AS0RM-SELECT-STYLE ; 
  10 AS0RM-SELECT-COLOR AS0RM-SELECT-COLOR ; 
  10 AS0RM-SELECT-SEASON AS0RM-SELECT-SEASON ; 
  10 AS0RM-SELECT-YEAR AS0RM-SELECT-YEAR ; 
  10 AS0RM-HOLD-SELECT-YEAR AS0RM-HOLD-SELECT-YEAR ; 
end // end AS0RW02

DataItem AS0RM-HOLD-SELECT-YEAR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RM-SELECT-COLOR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RM-SELECT-SEASON char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RM-SELECT-STYLE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RM-SELECT-YEAR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RW-ALL-CLRS-BLNK-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line on screen or w-s table
DataItem AS0RW-ARRAY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen detail data changed?
DataItem AS0RW-DATA-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format map? y,n
DataItem AS0RW-FORMAT-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RW-GET-COLORS-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen select data changed?
DataItem AS0RW-KEY-CHANGED-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format map? y,n
DataItem AS0RW-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max lines on a screen
DataItem AS0RW-NUMBER-SCREEN-LINES smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AS0RW-PRCS-ALL-CLRS-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// request data? y,n
DataItem AS0RW-REQUEST-DATA-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem AS0RW-SAVE-GRP-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tsq page to display
DataItem AS0RW-START-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp work index
DataItem AS0RW-TEMP-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tsq length
DataItem AS0RW-TSQ-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

