package tp0z;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import pk.common.*;
import sy.common.*;
import ta.common.*;
import tp.common.*;
//*** PROGRAM=TP0Z ****
// ------------------------------------------------------------
// This application allows the user to view the available
// printers and change the remote printer destination.
// 
// CONTROL     DATE     NAME   DESCRIPTION OF CHANGE
// --------  --------  ------  --------------------------------
// Fastpick  02/21/96  PANDER  New application.
// *********************
Program TP0Z type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  TP0ZW01 TP0ZW01; // record
  TPWREC TPWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XROTBL; // table
  use TP0ZM.TP0ZM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTP001: XPTP001();
     /* -------------------------------------------------------------------*/
     /* Initialize working storage areas.*/
     /* -------------------------------------------------------------------*/

    set TP0ZW01 empty; /* Initialize working storage*/

    TP0ZW01.TP0ZW-EZEMNO = converseVar.validationMsgNum; /* Initial warehouse error message*/

    goto TP0Z001; /* Converse select printer screen*/


    TP0Z001: TP0Z001();
     /* ------------------------------------------------------------*/
     /* Flow to execute the Specify/Override Default Printer process.*/
     /* ------------------------------------------------------------*/

    goto TP0Z001; /* Specify/Override Default Printer*/


  end // end main
end // end TP0Z

// Specify/Override Printer
Function TP0Z001()
   /* ------------------------------------------------------------*/
   /* Format map output area for display of map.*/
   /* ------------------------------------------------------------*/

  TP0ZS100-FORMAT(); /* Format and display the map*/

  TP0ZM001.XXXRVNBR = "00"; /* Application revision number*/

  converse TP0ZM001 ;
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  TP0ZS200-ATTN-KEYS(); /* Check attention identifier*/

  TP0ZS300-RESET(); /* Reset fields to normal intensity*/

  TP0ZS400-VERIFY(); /* Verify the entered data*/

  TP0ZS500-INPUT(); /* Process valid input request*/


end // end TP0Z001

// Format and display the map
Function TP0ZS100-FORMAT()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map,*/
   /* including the active printer destination table entries.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    TP0ZS110-HEADING(); /* Format map headers*/

    TP0ZW01.TP0ZW-PAGE-SW = "N"; /* Initialize page switch*/
    TP0ZW01.TP0ZW-MAP-IDX = 1; /* Initialize map index*/

    if (TP0ZW01.TP0ZW-PAGE-IDX > 0) /* If not first page*/

      TP0ZW01.TP0ZW-TABLE-IDX = TP0ZW01.TP0ZW-START-IDX[TP0ZW-PAGE-IDX];
                                    /* Starting index*/
    else
      TP0ZW01.TP0ZW-TABLE-IDX = 1;
                                   /* Initialize table index*/
    end

    TP0ZW01.TP0ZW-PAGE-IDX = TP0ZW01.TP0ZW-PAGE-IDX + 1;
                                          /* Increment page index*/
    while (TP0ZW01.TP0ZW-PAGE-SW == "N" /* Until page full*/
     && XROTBL.XROCD[TP0ZW-TABLE-IDX] != "9999") /* or end of table*/

      if (XROTBL.XXXSTAT[TP0ZW-TABLE-IDX] == "A") /* Active status*/

        if (TP0ZW01.TP0ZW-MAP-IDX > 28) /* Display entries exceeded*/

          if (TP0ZW01.TP0ZW-PAGE-IDX > 10) /* Page entries exceeded*/

            TA1REC.TA1FUNC = "RETN"; /* Termination function*/
            TA1REC.TA1TYPE = "APPL"; /* Type of error*/
            TA1REC.TA1PGMNM = "TP0Z100 "; /* Process name*/
            TA1REC.TA1LOC = "XROTBL DISPLAY ENTRIES EXCEEDED";
            TA1REC.TA1MAP = "TP0ZM001"; /* Map name*/
            SQLCA.SQLCAREC = " "; /* Application error information*/

            call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/

            converseLib.clearScreen();
             /* Clear screen before redisplay*/

          else

            TP0ZW01.TP0ZW-START-IDX[TP0ZW-PAGE-IDX] = TP0ZW01.TP0ZW-TABLE-IDX;

          end

          TP0ZW01.TP0ZW-PAGE-SW = "Y"; /* Indicate page full*/

        else

          TP0ZM001.XROPDEST[TP0ZW-MAP-IDX] = XROTBL.XROPDEST[TP0ZW-TABLE-IDX];
          TP0ZM001.XRODESC[TP0ZW-MAP-IDX] = XROTBL.XRODESC[TP0ZW-TABLE-IDX];

          TP0ZW01.TP0ZW-MAP-IDX = TP0ZW01.TP0ZW-MAP-IDX + 1;
                                          /* Increment map index*/
        end

      end

      if (TP0ZW01.TP0ZW-PAGE-SW == "N") /* If page not full*/

        TP0ZW01.TP0ZW-TABLE-IDX = TP0ZW01.TP0ZW-TABLE-IDX + 1;
                                        /* Increment table index*/
      end

    end

    if (TP0ZW01.TP0ZW-EZEMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(TP0ZW01.TP0ZW-EZEMNO);
    end /* Job submitted message number*/
    TP0ZW01.TP0ZW-EZEMNO = 0; /* Reset message number*/

  else

    set TP0ZM001 alarm; /* Indicate sound alarm*/

  end

  TP0ZW01.TP0ZW-FIRST-SW = "N"; /* Set first time switch*/


end // end TP0ZS100-FORMAT

// Format the map heading
Function TP0ZS110-HEADING()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* ------------------------------------------------------------*/

  set TP0ZM001 initial; /* Clear map storage area*/

  TP0ZM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  TP0ZM001.XWHCD = TPWREC.XWH-WHSE-CD; /* Warehouse code*/
  TP0ZM001.XWHABRV = TPWREC.XWHABRV; /* Warehouse abbreviation*/
  TP0ZM001.TP0ZMRMT = TPWREC.TPWMRMT; /* Printer name*/
  TP0ZM001.TP0ZMDES = TPWREC.TPWMDES; /* Printer destination*/

  if (TPWREC.TPW-SEL-RUN-MODE == "PP") /* Fast Pick Planning*/
    TP0ZM001.TP0ZM-RUN-MODE-LIT = "PICK PLANNING";
    set TP0ZM001.TP0ZM-XWHCD-LIT blue;
    set TP0ZM001.TP0ZM-HDR-LIT1 blue;
    set TP0ZM001.TP0ZM-HDR-DASH blue;
    set TP0ZM001.TP0ZM-HDR-LIT2 blue;
  else /* Fast Pick Selection*/
    TP0ZM001.TP0ZM-RUN-MODE-LIT = "P I C K I N G";
    set TP0ZM001.TP0ZM-XWHCD-LIT magenta;
    set TP0ZM001.TP0ZM-HDR-LIT1 magenta;
    set TP0ZM001.TP0ZM-HDR-DASH magenta;
    set TP0ZM001.TP0ZM-HDR-LIT2 magenta;
  end


end // end TP0ZS110-HEADING

// Check attention identifier
Function TP0ZS200-ATTN-KEYS()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    TP0ZW01.TP0ZW-PAGE-IDX = TP0ZW01.TP0ZW-PAGE-IDX - 1;
                                   /* Decrement page index*/
    return; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    COMMAREA.CATOAP = COMMAREA.CAFROMAP; /* Previous menu*/
    COMMAREA.CAUSERA = TPWREC.TPWGRPLV; /* COMMAREA user area*/

    XSEXIT(); /* Invoke selected application*/

    TP0ZM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    TP0ZM001.XXXPRCNM = "TP0ZS200"; /* Error location*/

    return; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* and PF8 was not pressed*/

    converseLib.validationFailed(12); /* Indicate invalid attention key*/
    TP0ZM001.XXXPRCNM = "TP0ZS200"; /* Process name*/

    return; /* Exit to redisplay map*/

  end


end // end TP0ZS200-ATTN-KEYS

// Reset highlighted fields
Function TP0ZS300-RESET()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TP0ZM001.TP0ZMRMT initialAttributes; /* Printer destination*/


end // end TP0ZS300-RESET

// Verify the entered data
Function TP0ZS400-VERIFY()
   /* ------------------------------------------------------------*/
   /* If scroll was requested and data changed, indicate error.*/
   /* If scroll was requested, verify pages exist to scroll.*/
   /* If printer was modified, verify the destination.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back requested*/
   || converseVar.eventKey is pf8) /* or scroll forward requested*/

    if (TP0ZM001.TP0ZMRMT != TPWREC.TPWMRMT) /* Printer was changed*/

      set TP0ZM001.TP0ZMRMT cursor, modified, bold; /* Highlight data*/

      TP0ZM001.TP0ZMDES = " "; /* Clear printer description*/

      converseLib.validationFailed(39); /* Indicate cannot change data*/
      TP0ZM001.XXXPRCNM = "TP0ZS400"; /* Process name*/

    end

  end

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    if (TP0ZW01.TP0ZW-PAGE-IDX == 1) /* First page displayed*/

      converseLib.validationFailed(37); /* Indicate no previous page*/
      TP0ZM001.XXXPRCNM = "TP0ZS400"; /* Process name*/

    end

  end

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    if (XROTBL.XROCD[TP0ZW-TABLE-IDX] == "9999") /* End of table*/

      converseLib.validationFailed(38); /* Indicate no more pages*/
      TP0ZM001.XXXPRCNM = "TP0ZS400"; /* Process name*/

    end

  end

  if (converseVar.eventKey not pf7 /* Scroll back not requested*/
   && converseVar.eventKey not pf8) /* and scroll forward not requested*/

    if (TP0ZM001.TP0ZMRMT != TPWREC.TPWMRMT /* Printer was changed*/
     || TP0ZM001.TP0ZMRMT == " ")           /* or no printer is specified*/

      if (TP0ZM001.TP0ZMRMT in XROTBL.XROPDEST)
        TP0ZM001.TP0ZMDES = XROTBL.XRODESC[sysVar.arrayIndex];
      end

      if (sysVar.arrayIndex == 0 /* Table entry not found*/
       || XROTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* or entry is not active*/

        set TP0ZM001.TP0ZMRMT cursor, modified, bold; /* Highlight data*/

        TP0ZM001.TP0ZMDES = " "; /* Clear printer description*/

        converseLib.validationFailed(124); /* Printer destination invalid*/
        TP0ZM001.XXXPRCNM = "TP0ZS400"; /* Process name*/

      end

    end

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end


end // end TP0ZS400-VERIFY

// Process valid input request
Function TP0ZS500-INPUT()
   /* ------------------------------------------------------------*/
   /* Save printer destination and description.*/
   /* If scroll was requested, exit to display the page.*/
   /* On enter, decrement index to redisplay current page.*/
   /* Indicate that the selected function is completed.*/
   /* ------------------------------------------------------------*/

  TPWREC.TPWMRMT = TP0ZM001.TP0ZMRMT; /* Printer*/
  TPWREC.TPWMDES = TP0ZM001.TP0ZMDES; /* Description*/

  if (converseVar.eventKey is pf7) /* If scroll back requested*/
    TP0ZW01.TP0ZW-PAGE-IDX = TP0ZW01.TP0ZW-PAGE-IDX - 2;
                                   /* Decrement page index*/
    return; /* Exit to display previous page*/
  end

  if (converseVar.eventKey is pf8) /* If scroll forward requested*/
    return; /* Exit to display next page*/
  end

  if (converseVar.eventKey is enter) /* If enter*/
    TP0ZW01.TP0ZW-PAGE-IDX = TP0ZW01.TP0ZW-PAGE-IDX - 1;
                                   /* Decrement page index*/
    return; /* Exit to redisplay current page*/
  end


end // end TP0ZS500-INPUT

//*** RECORD=TP0ZW01 ****
// Working Storage for TP0Z - Select/Override Default Printer
// ***********************
Record TP0ZW01 type basicRecord
  10 TP0ZW-EZEMNO TP0ZW-EZEMNO ; 
  10 TP0ZW-FIRST-SW TP0ZW-FIRST-SW ; 
  10 TP0ZW-PAGE-SW TP0ZW-PAGE-SW ; 
  10 TP0ZW-MAP-IDX TP0ZW-MAP-IDX ; 
  10 TP0ZW-PAGE-IDX TP0ZW-PAGE-IDX ; 
  10 TP0ZW-TABLE-IDX TP0ZW-TABLE-IDX ; 
  10 TP0ZW-START-IDX TP0ZW-START-IDX [10] ; 
end // end TP0ZW01

// Error message number
DataItem TP0ZW-EZEMNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First time through switch
DataItem TP0ZW-FIRST-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem TP0ZW-MAP-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for page number
DataItem TP0ZW-PAGE-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Page full switch
DataItem TP0ZW-PAGE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for starting table
DataItem TP0ZW-START-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for table fields
DataItem TP0ZW-TABLE-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

