package tp0a;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import pk.common.*;
import sy.common.*;
import ta.common.*;
import tp.common.*;
import ts.common.*;
//*** PROGRAM=TP0A ****
// This application displays the "FAST PICK SELECTION" menu.
// It controls entry to the subordinate Fast Pick functions.
// 
// CONTROL   DATE      NAME    COMMENTS
// --------  --------  ------  --------------------------------
// Fastpick  02/21/96  PANDER  New application.
// *********************
Program TP0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PK00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record
  TP0AW01 TP0AW01; // record
  TPWREC TPWREC; // record
  UT1REC UT1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TP0AT1; // table
  use XROTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use TP0AM.TP0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTP001: XPTP001();
     /* ------------------------------------------------------------*/
     /* Search the Remote Printer destination Table (XROTBL) to*/
     /* determine the default remote printer destination.*/
     /* ------------------------------------------------------------*/

    TP0AW01.TP0AW-MAP-IDX = 1; /* Initialize line index*/

    while (XROTBL.XROCD[TP0AW-MAP-IDX] != "9999" /* Until end of table*/
     && TPWREC.TPWMRMT == " ") /* or printer is found*/

      if (XROTBL.XXXSTAT[TP0AW-MAP-IDX] == "A") /* Active status*/

        if (XROTBL.XWHCD1[TP0AW-MAP-IDX] == TPWREC.XWH-WHSE-CD /* Warehouse*/
         || XROTBL.XWHCD2[TP0AW-MAP-IDX] == TPWREC.XWH-WHSE-CD /* code*/
         || XROTBL.XWHCD3[TP0AW-MAP-IDX] == TPWREC.XWH-WHSE-CD) /* matches*/

          TPWREC.TPWMRMT = XROTBL.XROPDEST[TP0AW-MAP-IDX]; /* Printer*/
          TPWREC.TPWMDES = XROTBL.XRODESC[TP0AW-MAP-IDX]; /* Description*/

        end

      end

      TP0AW01.TP0AW-MAP-IDX = TP0AW01.TP0AW-MAP-IDX + 1; /* Increment index*/

    end


    XPTP002: XPTP002();
     /* ------------------------------------------------------------*/
     /* Initialize working storage areas.*/
     /* ------------------------------------------------------------*/

    set TP0AW01 empty; /* Initialize working storage*/

    TP0AW01.TP0AW-EZEMNO = converseVar.validationMsgNum; /* Initial warehouse error msg*/

    goto TP0A001; /* Converse Fast Pick Menu*/


    TP0A001: TP0A001();
    goto TP0A001; /* Converse Fast Pick Menu*/


  end // end main
end // end TP0A

// Fast Pick menu
Function TP0A001()
   /* ------------------------------------------------------------*/
   /* Perform Picking application initialization.*/
   /* Obtain the CICS Logon User Identification.*/
   /* Initialize the application working storage.*/
   /* Format map output area for display of map.*/
   /* ------------------------------------------------------------*/

  set UT1REC empty; /* Iniitalize subroutine parameters*/

  call "UT0200" (UT1REC) {isNoRefresh = yes}; /* Obtain user identification*/

  if (UT1REC.UT1RETCD != 0) /* Non-zero return code*/

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "TP0A001 "; /* Process name*/
    TA1REC.TA1LOC = "OBTAIN CICS USER IDENTIFICATION";
    SQLCA.SQLCAREC = UT1REC.UT1GRPLV; /* Error information*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/

    converseLib.validationFailed(29); /* Indicate system error*/

    COMMAREA.CATOAP = "PK0A"; /* Picking Master Menu*/

    XSEXIT(); /* Exit to master menu*/

    exit program; /* Terminate application if exit failed*/

  end

  TPWREC.TPWUSRID = UT1REC.UT1USRID; /* User identification*/

  TP0AS100-FORMAT(); /* Format map output area*/

  TP0AM001.XXXRVNBR = "00"; /* Application revision number*/

  converse TP0AM001 ;

   /* ------------------------------------------------------------*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process input request if not a cancel and no errors found.*/
   /* ------------------------------------------------------------*/

  TP0AS200-ATTN-KEYS(); /* Check attention identifier*/

  TP0AS300-RESET(); /* Reset fields to normal intensity*/

  TP0AS400-VERIFY(); /* Verify the data that was entered*/

  if (converseVar.eventKey not pa2 /* Not a cancel request*/
   && converseVar.validationMsgNum == 0) /* and no errors were found*/
    TP0AS500-INPUT(); /* Process valid input request*/
  end


end // end TP0A001

// Format the output display
Function TP0AS100-FORMAT()
   /* ------------------------------------------------------------*/
   /* If first time through or no errors, format the map heading.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (TP0AW01.TP0AW-FIRST-SW == " " /* First time through*/
   || converseVar.validationMsgNum == 0) /* or no error messages*/

    TP0AS110-HEADING(); /* Format map heading area*/
    TP0AW01.TP0AW-FIRST-SW = "N"; /* Set first time switch*/

  end

  if (converseVar.validationMsgNum != 0) /* Error message to display*/

    set TP0AM001 alarm; /* Indicate sound alarm*/

  end


end // end TP0AS100-FORMAT

// Format the map heading
Function TP0AS110-HEADING()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* ------------------------------------------------------------*/

  set TP0AM001 initial; /* Clear map storage area*/

  TP0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  TP0AM001.XWHCD = TPWREC.XWH-WHSE-CD; /* Warehouse code*/
  TP0AM001.XWHABRV = TPWREC.XWHABRV; /* Warehouse abbreviation*/

  if (TPWREC.TPW-SEL-RUN-MODE == "PP") /* Fast Pick Planning*/
    TP0AM001.TP0AM-RUN-MODE-LIT = "PICK PLANNING";
    set TP0AM001.TP0AM-XWHCD-LIT blue;
    set TP0AM001.TP0AM-TEXT-LIT blue;
    set TP0AM001.TP0AM-SELECT-LIT blue;
  else /* Fast Pick Selection*/
    TP0AM001.TP0AM-RUN-MODE-LIT = "P I C K I N G";
    set TP0AM001.TP0AM-XWHCD-LIT magenta;
    set TP0AM001.TP0AM-TEXT-LIT magenta;
    set TP0AM001.TP0AM-SELECT-LIT magenta;
  end

  TP0AM001.CAITEM = COMMAREA.CAITEM; /* Application item*/
  COMMAREA.CAITEM = " "; /* Clear application item*/


end // end TP0AS110-HEADING

// Check attention identifier
Function TP0AS200-ATTN-KEYS()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/

    XSPF1(); /* Exit to the HELP facility*/

    TP0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    TP0AM001.XXXERRID = "TP0AS200"; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CATOAP = "PK0A"; /* Picking Master menu*/
    COMMAREA.CAUSERA = TPWREC.TPWGRPLV; /* COMMAREA user area*/

    XSEXIT(); /* Invoke selected application*/

    TP0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    TP0AM001.XXXERRID = "TP0AS200"; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/

    XSPF4(); /* Exit to system main menu*/

    TP0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
    converseLib.validationFailed(); /* Force alarm to sound*/
    TP0AM001.XXXERRID = "TP0AS200"; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set TP0AM001 initial; /* Clear the map fields*/

    TP0AW01.TP0AW-FIRST-SW = " "; /* Reset first time switch*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(12); /* Indicate invalid attention key*/
    TP0AM001.XXXERRID = "TP0AS200"; /* Error location*/

    exit stack; /* Exit to redisplay map*/

  end


end // end TP0AS200-ATTN-KEYS

// Reset highlighted fields
Function TP0AS300-RESET()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TP0AM001.TP0AMSEL cursor, initialAttributes; /* Menu selection*/
  set TP0AM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set TP0AM001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end TP0AS300-RESET

// Verify the entered data
Function TP0AS400-VERIFY()
   /* ------------------------------------------------------------*/
   /* Ensure that a TO application was entered if application*/
   /* data was entered.  If a TO application was entered, ensure*/
   /* that no menu selection was entered.  If it was entered,*/
   /* verify the menu selection.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pa2) /* Not a cancel request*/
    converseLib.validationFailed(0); /* Clear error message number*/
  end

  if (TP0AM001.CAITEM > " " /* Application data was entered and*/
   && TP0AM001.CATOAP <= " ") /* no TO application was entered*/

    set TP0AM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(15); /* Indicate enter only with FAST PATH*/
    TP0AM001.XXXERRID = "TP0AS400"; /* Error location*/

  end

  if (TP0AM001.CATOAP > " ") /* TO application specified and*/

    TP0AS410-VER-FAST(); /* See if anything else was entered*/

  else

    if (TP0AM001.TP0AMSEL > 0) /* Menu selection was entered*/

      TP0AS420-VER-SEL(); /* Verify the menu selection*/

      if (sysVar.arrayIndex == 0) /* Invalid menu selection*/

        set TP0AM001.TP0AMSEL cursor, modified, bold;
                                   /* Highlight selection*/
        converseLib.validationFailed(5); /* Indicate invalid selection*/
        TP0AM001.XXXERRID = "TP0AS400"; /* Error location*/

      end

    end

  end


end // end TP0AS400-VERIFY

// Verify Fast Path request
Function TP0AS410-VER-FAST()
   /* ------------------------------------------------------------*/
   /* Check to see if a map selection was entered.*/
   /* ------------------------------------------------------------*/

  if (TP0AM001.TP0AMSEL > 0) /* Map selection was entered*/

    set TP0AM001.TP0AMSEL cursor, modified, bold; /* Highlight selection*/
    converseLib.validationFailed(16); /* Indicate FAST PATH conflict*/
    TP0AM001.XXXERRID = "TP0AS410"; /* Error location*/

  end


end // end TP0AS410-VER-FAST

// Verify Menu selection
Function TP0AS420-VER-SEL()
   /* ------------------------------------------------------------*/
   /* Verify the menu selection against the selection table.*/
   /* Ensure that any initial keys entered are valid.*/
   /* ------------------------------------------------------------*/

  if (TP0AM001.TP0AMSEL in TP0AT1.TP0AMSEL /* Verify selection*/
  )                                        /* NEXT SENTENCE*/
  end

   /* ------------------------------------------------------------*/
   /* This is a patch area used to disable certain menu selections.*/
   /* ------------------------------------------------------------*/

  if (sysVar.arrayIndex > 0)
   /* IF EZETST = 2;     /* select by special handling code.*/
   /* SET TP0AM001.TP0AMSEL CURSOR,MODIFIED,BRIGHT;/* Highlight company*/
   /* MOVE 377 TO EZEMNO;*/
   /* MOVE 'TP0AS420' TO TP0AM001.XXXERRID;/* Error location*/
   /* EZERTN;*/
   /* END;*/
  end


end // end TP0AS420-VER-SEL

// Process valid input request
Function TP0AS500-INPUT()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application or exit via FAST PATH.*/
   /* If control is returned, ensure that warehouse is valid.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No errors were found*/
    /* NEXT SENTENCE*/
  else
    return;
  end

  if (TP0AM001.CATOAP == " ") /* No FAST PATH request*/

    if (TP0AM001.TP0AMSEL > 0) /* Menu selection was entered*/

      TP0AS510-SELECT(); /* Transfer to the selected application*/

    end

  else

    TP0AS520-FAST-PATH(); /* Execute FAST PATH request*/

  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    if (TP0AW01.TP0AW-EZEMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(TP0AW01.TP0AW-EZEMNO);
    end /* Restore any warehouse error*/

  end

  if (converseVar.validationMsgNum == 0) /* No errors were found*/

    if (TP0AM001.CAITEM > " ") /* Application data entered*/
      COMMAREA.CAITEM = TP0AM001.CAITEM; /* Save in common area*/
    end

  end


end // end TP0AS500-INPUT

// Invoke selected application
Function TP0AS510-SELECT()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  COMMAREA.XWHCD = TP0AM001.XWHCD; /* Warehouse code*/

   /* ------------------------------------------------------------*/
   /* Check table TP0AT1 for valid selection.*/
   /* ------------------------------------------------------------*/

  if (TP0AM001.TP0AMSEL in TP0AT1.TP0AMSEL)
    COMMAREA.CATOAP = TP0AT1.CATOAP[sysVar.arrayIndex];
  end /* Obtain application*/

  if (sysVar.arrayIndex == 0) /* Selection not in table*/

    converseLib.validationFailed(29); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "TP0AS510"; /* Process name*/
    TA1REC.TA1LOC = "OBTAIN APPLICATION FROM SELECTION TABLE";
    TA1REC.TA1MAP = "TP0AM001"; /* Map name*/
    SQLCA.SQLCAREC = TP0AM001.TP0AMSEL; /* Menu selection*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    TP0AM001.XXXERRID = "TP0AS510"; /* Error location*/
    return; /* Return to previous process*/

  end

  TPWREC.TPWFRMAP = "TP0A"; /* Previous application*/

  COMMAREA.CAUSERA = TPWREC.TPWGRPLV; /* Application user area*/

  XSEXIT(); /* Invoke selected application*/

  set TP0AM001.TP0AMSEL cursor, modified, bold; /* Highlight selection*/

  TP0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  TP0AM001.XXXERRID = "TP0AS510"; /* Error location*/


end // end TP0AS510-SELECT

// Execute Fast Path
Function TP0AS520-FAST-PATH()
   /* ------------------------------------------------------------*/
   /* Transfer to requested application via FAST PATH.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (TP0AM001.CATOAP == COMMAREA.CACURRAP)
                                   /* TO application same as current*/

    set TP0AM001.CATOAP cursor, bold; /* Highlight TO application*/
    converseLib.validationFailed(1); /* Indicate invalid request*/
    TP0AM001.XXXERRID = "TP0AS520"; /* Process name*/

    return; /* Return to previous process*/

  end

  COMMAREA.CATOAP = TP0AM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TP0AM001.CAITEM; /* Application data*/
  COMMAREA.CAUSERA = TPWREC.TPWGRPLV; /* Application user area*/

  XSEXIT(); /* Transfer to requested application*/

  set TP0AM001.CATOAP cursor, modified, bold; /* Highlight to application*/
  TP0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Returned error message*/
  converseLib.validationFailed(); /* Force alarm to sound*/
  TP0AM001.XXXERRID = "TP0AS520"; /* Process name*/


end // end TP0AS520-FAST-PATH

// Obtain warehouse abbreviation
Function XPTP002()
   /* ------------------------------------------------------------*/
   /* This process will validate the warehouse code passed in the*/
   /* PICKING work record and obtain the warehouse abbreviation.*/
   /* If the warehouse code is not valid, an error number is*/
   /* returned in EZEMNO and warehouse abbreviation is spaces.*/
   /* If the code is valid, EZEMNO remains unchanged.*/
   /* ------------------------------------------------------------*/

  if (TPWREC.XWHABRV != " " /* Current warehouse code is valid and*/
   && TPWREC.XWH-WHSE-CD == TPWREC.TPWXWHCD)
                                   /* warehouse code has not changed*/

    return; /* Return to caller*/

  end

  TPWREC.TPWXWHCD = TPWREC.XWH-WHSE-CD; /* Save current warehouse*/
  TPWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/

  if (TPWREC.XWH-WHSE-CD == "  ") /* Warehouse code not entered*/

    converseLib.validationFailed(4); /* Indicate warehouse code required*/
    return; /* Return to caller*/

  end

  if (TPWREC.XWH-WHSE-CD in XWHTBL.XWHCD)
    TPWREC.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
  end
  if (TPWREC.XWH-WHSE-CD in XWHTBL.XWHCD)
    TPWREC.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0) /* Table entry not found*/

    converseLib.validationFailed(2); /* Indicate invalid warehouse*/
    return; /* Return to caller*/

  end

  if (XWHTBL.XXXSTAT[sysVar.arrayIndex] != "A") /* Not active warehouse status*/

    TPWREC.XWHABRV = " "; /* Clear warehouse abbreviation*/
    TPWREC.XWHSABRV = " "; /* Clear warehouse short abbreviation*/
    converseLib.validationFailed(3); /* Indicate inactive warehouse*/
    return; /* Return to caller*/

  end


end // end XPTP002

//*** RECORD=TP0AW01 ****
// Working Storage for TP0A - Fast Pick Selection menu
// ***********************
Record TP0AW01 type basicRecord
  10 TP0AW-EZEMNO TP0AW-EZEMNO ; 
  10 TP0AW-FIRST-SW TP0AW-FIRST-SW ; 
  10 TP0AW-MAP-IDX TP0AW-MAP-IDX ; 
end // end TP0AW01

// Error message number
DataItem TP0AW-EZEMNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First time through switch
DataItem TP0AW-FIRST-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem TP0AW-MAP-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

