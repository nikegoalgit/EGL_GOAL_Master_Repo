package ki0c;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom6.SQLCA;
import corpcom7.XXXMSGNO;
import corpcom7.XXXPRCNM;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VCUSAP01;
//*** PROGRAM=KI0C ****
// This application will display the Goal and SAP customer
// numbers. The user may input either the SAP customer number
// or the Goal customer /store /department number. The applica-
// tion will display rows of data starting at the number enter-
// ed. Up to 7 pages worth of data is stored in temp storage.
// The user may page forward (pf8) and page backward (pf7)
// through the selected list.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      09/00/00  cbrin1  New application.
//          11/17/00  cbrin1  Fixed paging with blank/changed
//                            customer info.
//          12/03/01  DSINHA  Changed KI0C-11600 proc to stop
//                            displaying dummy cust 9777777.
// *********************
Program KI0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KI0CW00 KI0CW00; // record
  KI0CW01 KI0CW01; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VCUSAP01 VCUSAP01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KI0CM.KI0CM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KI0C-00001: KI0C-00001();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set KI0CM001 initial; /* M001 input/output*/
    set KI0CW00 empty; /* Working storage*/
    set KI0CW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    KI0CW00.KI0CW-SWF = "Y"; /* Format the map switch*/
    KI0CW00.KI0CW-SWR = "N"; /* Request for data switch*/

    /* ------------------------------------------------------------*/
    /* If control was passed to this transaction from another*/
    /* within the same application system, restore the work record*/
    /* from the COMMAREA.  Otherwise, initialize the work record.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAFRMSYS == "KA"
     || COMMAREA.CAFRMSYS == "KU"
     || COMMAREA.CAFRMSYS == "KM"
     || COMMAREA.CAFRMSYS == "KI"
     || COMMAREA.CAFRMSYS == "KG")
      KI0CW00.KI0CW-INPUT = COMMAREA.CAUSERA;
      if (KI0CW00.KI0CW-KUCCOID-CHAR is numeric)
        if (KI0CW00.KI0CW-KUCCOID-IN > 0)
          KI0CM001.KI0CM-KUCCOID = KI0CW00.KI0CW-KUCCOID-IN;
          KI0CW00.KI0CW-SWR = "Y";
          if (KI0CW00.KI0CW-KUMSTRID-CHAR is numeric)
            KI0CM001.KI0CM-KUMSTRID = KI0CW00.KI0CW-KUMSTRID-IN;
          else
            KI0CM001.KI0CM-KUMSTRID = 0;
          end
          if (KI0CW00.KI0CW-XNXCD-CHAR is numeric)
            KI0CM001.KI0CM-XNXCD = KI0CW00.KI0CW-XNXCD-IN;
          else
            KI0CM001.KI0CM-XNXCD = 0;
          end
        else
          KI0CM001.KI0CM-KUCCOID = 0;
          KI0CM001.KI0CM-KUMSTRID = 0;
          KI0CM001.KI0CM-XNXCD = 0;
        end
      else
        KI0CM001.KI0CM-KUCCOID = 0;
        KI0CM001.KI0CM-KUMSTRID = 0;
        KI0CM001.KI0CM-XNXCD = 0;
      end
      COMMAREA.CAUSERA = " ";
    end
    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      KI0CW00.KI0CW-INPUT = COMMAREA.CAITEM;
      if (KI0CW00.KI0CW-KUCCOID-CHAR is numeric)
        KI0CM001.KI0CM-KUCCOID = KI0CW00.KI0CW-KUCCOID-IN;
      else
        KI0CM001.KI0CM-KUCCOID = 0;
      end
      if (KI0CW00.KI0CW-KUMSTRID-CHAR is numeric)
        KI0CM001.KI0CM-KUMSTRID = KI0CW00.KI0CW-KUMSTRID-IN;
      else
        KI0CM001.KI0CM-KUMSTRID = 0;
      end
      if (KI0CW00.KI0CW-XNXCD-CHAR is numeric)
        KI0CM001.KI0CM-XNXCD = KI0CW00.KI0CW-XNXCD-IN;
      else
        KI0CM001.KI0CM-XNXCD = 0;
      end

      KI0CW00.KI0CW-SWR = "Y"; /* Request for data switch*/
      COMMAREA.CAITEM = " ";

    end

    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto KI0C-10000; /* Converse the main process*/


    KI0C-10000: KI0C-10000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto KI0C-10000; /* Converse the main process*/


  end // end main
end // end KI0C

// Application initialization
Function KI0C-00001()
  /* ------------------------------------------------------------*/
  /* Ensure that the COMMAREA has been properly formatted.*/
  /* ------------------------------------------------------------*/

  XSENTRY(); /* Application entry validation*/

  /* ------------------------------------------------------------*/
  /* Initialize the segmented transaction identification.*/
  /* ------------------------------------------------------------*/

  XSSEGTR(); /* Set transaction identification*/

  /* ------------------------------------------------------------*/
  /* Initialize CSP special function data items.*/
  /* ------------------------------------------------------------*/

  VGVar.handleHardIOErrors = 1; /* Return all file errors*/
  converseVar.commitOnConverse = 1; /* Commit on every converse*/


end // end KI0C-00001

// List the rows in the table
Function KI0C-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  KI0C-11000(); /* Obtain the data to display*/

  KI0C-12000(); /* Format and display the map*/

  KI0C-13000(); /* Check attention identifier*/

  KI0C-14000(); /* Reset fields to normal intensity*/

  KI0C-15000(); /* Verify the entered data*/

  KI0C-16000(); /* Process valid input request*/


end // end KI0C-10000

// Obtain the data to display
Function KI0C-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/

  if (KI0CW00.KI0CW-SWR == "N" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/

  KI0CW00.XXXTSLEN = 728; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/

  if (KI0CW00.XXXTSPAG == 0) /* no pages established*/
    KI0CW00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/

  KI0C-11100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Open cursor to get customer data*/
  /* ------------------------------------------------------------*/

  KI0CW00.KI0CW-CNT = 0; /* Initialize counter*/
  KI0CW00.KI0CW-OVER-98 = "N";

  KI0C-11300(); /* Select set and open cursor*/

  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until switch set to 'N'.*/
  /* Switch is set when count > 98 (7 pages of data) or end of cursor.*/
  /* ------------------------------------------------------------*/

  KI0CW00.KI0CW-IXM = 1; /* Display line index*/
  KI0CW00.KI0CW-SWC = "N"; /* End of cursor switch*/

  while (KI0CW00.KI0CW-SWC == "N") /* Until end of cursor*/

    KI0C-11400(); /* Fetch next row in the cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

   /* **TCS CHANGE BEGIN - 12/03/01*/
    if (KI0CW00.KI0CW-SWC == "N" /* Not end of cursor*/
     && VCUSAP01.KUCCOID != 9777777)
      KI0C-11500(); /* Save data in display storage*/
    end
   /* **TCS CHANGE end - 12/03/01*/

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (KI0CW00.KI0CW-IXM > 14) /* Page is full*/

      KI0C-11600(); /* Add page to temporary storage*/

      KI0CW00.KI0CW-IXM = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/

  if (KI0CW00.KI0CW-IXM > 1) /* Page was formatted*/
    KI0C-11600(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/

  KI0C-11700(); /* Close the selected set cursor*/

  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/

  if (KI0CW00.TA5TSQIX == 0) /* No pages formatted*/

    KI0CW00.XXXPRCNM = "11000"; /* Module identification*/
    KI0CW00.XXXMSGNO = 1; /* No data was found to display*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  KI0CW00.KI0CW-SWR = "N"; /* Request for data switch*/
  KI0CW00.XXXTSPAG = 1; /* Reset page number to 1*/


end // end KI0C-11000

// Purge any temporary storage
Function KI0C-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set KI0CW01 empty; /* M001 display storage*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  KI0CW00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (KI0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KI0CW00.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(477); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = KI0CW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11100

// Select set and open cursor
Function KI0C-11300()
  set VCUSAP01 empty; /* Clear row storage area*/

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID > " ")
    VCUSAP01.CU-SAP-ACCT-ID = KI0CM001.KI0CM-CU-SAP-ACCT-ID;
    try
      call "VCUSAP01" ("S2", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
    end

  else
    VCUSAP01.KUCCOID = KI0CM001.KI0CM-KUCCOID;
    VCUSAP01.KUMSTRID = KI0CM001.KI0CM-KUMSTRID;
    VCUSAP01.XNXCD = KI0CM001.KI0CM-XNXCD;
    try
      call "VCUSAP01" ("S1", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
    end

  end
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  KI0CW00.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(478); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(477); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "KI0C"; /* Program number*/
  TA1REC.TA1DBASE = "DCUST   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCUSAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCUSAP01.VCUSAP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11300

// Fetch next row in the cursor
Function KI0C-11400()

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID > " ")
    try
      call "VCUSAP01" ("N2", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
    end
                                   /* Fetch next row*/
  else
    try
      call "VCUSAP01" ("N1", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
    end
                                   /* Fetch next row*/
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      KI0CW00.KI0CW-CNT = KI0CW00.KI0CW-CNT + 1;
      if (KI0CW00.KI0CW-CNT < 99)
        return; /* Return to previous process*/
      else
        KI0CW00.KI0CW-SWC = "Y"; /* Indicate end of cursor*/
        KI0CW00.KI0CW-OVER-98 = "Y"; /* Indicate exceeded limit*/
        return; /* Return to previous process*/
      end
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      KI0CW00.KI0CW-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  KI0CW00.XXXPRCNM = "11400"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(478); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(477); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = KI0CW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DCUST   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCUSAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCUSAP01.VCUSAP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11400

// Save data in display storage
Function KI0C-11500()
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* ------------------------------------------------------------*/

  KI0CW01.KI0CW-SAPID[KI0CW-IXM] = VCUSAP01.CU-SAP-ACCT-ID;
  KI0CW01.KI0CW-ACCT-GRP[KI0CW-IXM] = VCUSAP01.CU-SAP-ACCT-GRP-CD;
  KI0CW01.KI0CW-CUST-NO[KI0CW-IXM] = VCUSAP01.KUCCOID;
  KI0CW01.KI0CW-STOR[KI0CW-IXM] = VCUSAP01.KUMSTRID;
  KI0CW01.KI0CW-DEPT[KI0CW-IXM] = VCUSAP01.XNXCD;

  if (VCUSAP01.CU-SAP-ACCT-GRP-CD == "Z002")
    KI0C-11520();
    KI0CW01.KI0CW-CUST-NAME[KI0CW-IXM] = KI0CW00.KI0CW-HOLD-NAME;
  else
    if (VCUSAP01.CU-SAP-ACCT-GRP-CD == "Z005")
      KI0C-11530();
      KI0CW01.KI0CW-CUST-NAME[KI0CW-IXM] = KI0CW00.KI0CW-HOLD-NAME;
    else
      KI0C-11510();
      KI0CW01.KI0CW-CUST-NAME[KI0CW-IXM] = KI0CW00.KI0CW-HOLD-NAME;
    end
  end

  KI0CW00.KI0CW-IXM = KI0CW00.KI0CW-IXM + 1; /* Increment index*/
end // end KI0C-11500

// Select KUCREC
Function KI0C-11510()

  set KUCREC empty;
  KUCREC.KUCCOID = VCUSAP01.KUCCOID;

  try
    call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select record*/

  /* ------------------------------------------------------------*/
  /* If successful, move customer name*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0)
      KI0CW00.KI0CW-HOLD-NAME = KUCREC.KUCCONM;
      return; /* Return to previous process*/
    else
      KI0CW00.KI0CW-HOLD-NAME = "NO CUST NAME ";
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(478); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(477); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "KI0C-11510 SELECT COMPANY";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "KI0C"; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11510

// Select KUMREC
Function KI0C-11520()

  set KUMREC empty;
  KUMREC.KUCCOID = VCUSAP01.KUCCOID;
  KUMREC.KUMSTRID = VCUSAP01.KUMSTRID;

  try
    call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select record*/

  /* ------------------------------------------------------------*/
  /* If successful, move customer name*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0)
      KI0CW00.KI0CW-HOLD-NAME = KUMREC.KUMSTRNM;
      return; /* Return to previous process*/
    else
      KI0CW00.KI0CW-HOLD-NAME = "NO CUST NAME ";
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(478); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(477); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "KI0C-11520 SELECT STORE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "KI0C"; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11520

// Select KUJREC
Function KI0C-11530()

  set KUJREC empty;
  KUJREC.KUCCOID = VCUSAP01.KUCCOID;
  KUJREC.XNXCD = VCUSAP01.XNXCD;

  try
    call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select record*/

  /* ------------------------------------------------------------*/
  /* If successful, move customer name*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0)
      KI0CW00.KI0CW-HOLD-NAME = KUJREC.KUJSLFNM;
      return; /* Return to previous process*/
    else
      KI0CW00.KI0CW-HOLD-NAME = "NO CUST NAME ";
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(478); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(477); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "KI0C-11530 SELECT DEPT";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "KI0C"; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "KUCREC"; /* Table view name*/
  TA1REC.TA1TBLKE = KUCREC.KUCGRP; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11530

// Select VCUSAP01
Function KI0C-11540()

  set VCUSAP01 empty;
  VCUSAP01.CU-SAP-ACCT-ID = KI0CM001.KI0CM-CU-SAP-ACCT-ID;

  try
    call "VCUSAP01" ("S ", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select record*/

  /* ------------------------------------------------------------*/
  /* If successful, move customer name*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0)
      return; /* Return to previous process*/
    else
      converseLib.validationFailed(481); /* Invalid SAP number*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(478); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(477); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "KI0C-11540 SELECT SAP";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "KI0C"; /* Program number*/
  TA1REC.TA1DBASE = "DCUST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCUSAP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VCUSAP01.VCUSAP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11540

// Add page to temporary storage
Function KI0C-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  KI0CW01.XXXTSLEN = KI0CW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (KI0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set KI0CW01 empty; /* M001 display storage*/

    KI0CW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KI0CW00.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(477); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = KI0CW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11600

// Close selected set cursor
Function KI0C-11700()

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID > " ")
    try
      call "VCUSAP01" ("C2", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
    end
                                   /* Close table set*/
  else
    try
      call "VCUSAP01" ("C1", SQLCA, VCUSAP01) {isNoRefresh = yes, isExternal = yes};
    end
                                   /* Close table set*/
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  move SQLCA to ERRSQLCA withV60Compat;

  KI0CW00.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(477); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = KI0CW00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDCD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VOCECB01"; /* Table view name*/

  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-11700

// Format and converse the map
Function KI0C-12000()
  /* ------------------------------------------------------------*/
  /* If obtain data or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (KI0CW00.KI0CW-SWR == "Y" /* Obtain data*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (KI0CW00.KI0CW-SWF == "Y") /* Map must be formatted*/
      KI0CW00.KI0CW-CU-SAP-ACCT-ID = KI0CM001.KI0CM-CU-SAP-ACCT-ID;
      KI0CW00.KI0CW-KUCCOID = KI0CM001.KI0CM-KUCCOID;
      KI0CW00.KI0CW-KUMSTRID = KI0CM001.KI0CM-KUMSTRID;
      KI0CW00.KI0CW-XNXCD = KI0CM001.KI0CM-XNXCD;
      KI0C-12100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  KI0CM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  KI0CM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  KI0CM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (KI0CW00.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (KI0CW00.XXXMSGNO != 0) /* Message to display*/

      if (KI0CW00.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KI0CW00.XXXMSGNO);
      end /* Message number*/
    else
      KI0CM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    KI0CM001.XXXPRCNM = KI0CW00.XXXPRCNM; /* Module identification*/

    set KI0CM001 alarm; /* Indicate sound alarm*/

  end

  converse KI0CM001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  KI0CW00.XXXPRCNM = " "; /* Module identification*/
  KI0CW00.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
   /* reset saved page*/
  KI0CW00.KI0CW-SAVE-PAGE = 0;
  COMMAREA.CATOAP = KI0CM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = KI0CM001.CAITEM; /* Application data*/
end // end KI0C-12000

// Format the display data
Function KI0C-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set KI0CM001 initial; /* M001 input/output area*/

  KI0CW00.KI0CW-SWF = "N"; /* Format the map switch*/

  XX0XS01(); /* get system date and time*/

  /* ------------------------------------------------------------*/

  if (KI0CW00.KI0CW-SAVE-PAGE != 0) /* if page saved off*/

    KI0CW00.XXXTSPAG = KI0CW-SAVE-PAGE; /* use saved page*/

    KI0C-12110(); /* Obtain temporary storage page*/

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (KI0CW00.TA5TSQIX > 0) /* Pages were formatted*/

      if (KI0CW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (KI0CW00.XXXTSPAG > KI0CW00.TA5TSQIX) /* Desired greater highest*/
          KI0CW00.XXXTSPAG = KI0CW00.TA5TSQIX; /* Default to highest*/
        end

        KI0C-12110(); /* Obtain temporary storage page*/

      end

    else
      if (converseVar.validationMsgNum == 0)
        converseLib.validationFailed(479); /* Please enter message*/
      end

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/

  KI0CW00.KI0CW-IXM = 1; /* Initialize map index*/
  while (KI0CW00.KI0CW-IXM <= 14
   && KI0CW01.KI0CW-SAPID[KI0CW-IXM] > " ")

    KI0CM001.KI0CM-SAPID[KI0CW-IXM] = KI0CW01.KI0CW-SAPID[KI0CW-IXM];
    KI0CM001.KI0CM-ACCT-GRP[KI0CW-IXM] = KI0CW01.KI0CW-ACCT-GRP[KI0CW-IXM];
    KI0CM001.KI0CM-CUST-NO[KI0CW-IXM] = KI0CW01.KI0CW-CUST-NO[KI0CW-IXM];
    KI0CM001.KI0CM-STOR[KI0CW-IXM] = KI0CW01.KI0CW-STOR[KI0CW-IXM];
    KI0CM001.KI0CM-DEPT[KI0CW-IXM] = KI0CW01.KI0CW-DEPT[KI0CW-IXM];
    KI0CM001.KI0CM-CUST-NAME[KI0CW-IXM] = KI0CW01.KI0CW-CUST-NAME[KI0CW-IXM];

    KI0CW00.KI0CW-IXM = KI0CW00.KI0CW-IXM + 1;
                                   /* Increment map index*/
  end

  KI0CM001.KI0CM-CU-SAP-ACCT-ID = KI0CW00.KI0CW-CU-SAP-ACCT-ID;
  KI0CM001.KI0CM-KUCCOID = KI0CW00.KI0CW-KUCCOID;
  KI0CM001.KI0CM-KUMSTRID = KI0CW00.KI0CW-KUMSTRID;
  KI0CM001.KI0CM-XNXCD = KI0CW00.KI0CW-XNXCD;

end // end KI0C-12100

// Read temporary storage page
Function KI0C-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  KI0CW01.XXXTSLEN = KI0CW00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = KI0CW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (KI0CW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KI0CW00.XXXPRCNM = "12110"; /* Module identification*/
  converseLib.validationFailed(477); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "KI0C"; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KI0C-12110

// Check attention identifier
Function KI0C-13000()
  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  if (KI0CM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      KI0C-11100(); /* Purge temporary storage*/

      KI0CS-00001(); /* Exit to another application*/

      set KI0CM001.CATOAP cursor, bold; /* Highlight*/

    else

      KI0CW00.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   
   && converseVar.eventKey not pf3   
   && converseVar.eventKey not pf4   
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8)  /* and PF8 was not pressed*/

    KI0CW00.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(3); /* PA/PF key pressed is not valid*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "KU0M";
    else
      COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    end

    KI0C-11100(); /* Purge temporary storage*/

    KI0CS-00001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* enter*/
  /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter)

    if (KI0CM001.KI0CM-CU-SAP-ACCT-ID == KI0CW00.KI0CW-CU-SAP-ACCT-ID
     && KI0CM001.KI0CM-KUCCOID == KI0CW00.KI0CW-KUCCOID
     && KI0CM001.KI0CM-KUMSTRID == KI0CW00.KI0CW-KUMSTRID
     && KI0CM001.KI0CM-XNXCD == KI0CW00.KI0CW-XNXCD)
      KI0CW00.KI0CW-SWR = "N"; /* No new data*/
      KI0CW00.KI0CW-SWF = "N";
    else
      KI0CW00.KI0CW-SWR = "Y"; /* Request for data switch*/
      KI0CW00.KI0CW-SWF = "Y";
    end

  end

end // end KI0C-13000

// Reset highlighted fields
Function KI0C-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  set KI0CM001.KI0CM-CU-SAP-ACCT-ID normal;
  set KI0CM001.KI0CM-KUCCOID normal;
  set KI0CM001.KI0CM-KUMSTRID normal;
  set KI0CM001.KI0CM-XNXCD normal;

  set KI0CM001.CATOAP initialAttributes; /* TO application*/
  set KI0CM001.CAITEM initialAttributes; /* Application data*/

end // end KI0C-14000

// Verify data that was entered
Function KI0C-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (KI0CM001.CAITEM > " ") /* Application data was entered*/

    KI0CW00.XXXPRCNM = "15000"; /* Module identification*/
    set KI0CM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(90); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* If nothing entered, clear everything & display message*/
  /* ------------------------------------------------------------*/

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID == " "
   && KI0CM001.KI0CM-KUCCOID == 0
   && KI0CM001.KI0CM-KUMSTRID == 0
   && KI0CM001.KI0CM-XNXCD == 0)
    KI0C-11100(); /* Purge any temporary storage*/
    set KI0CM001 initial; /* Clear map*/
    KI0CW00.KI0CWKEY = " ";
    KI0CW00.KI0CW-SWF = "Y"; /* Format the map switch*/
    converseLib.validationFailed(479); /* If nothing entered, display message*/
    return;
  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    KI0C-15100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the header.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter)
      KI0C-15200();

    end
  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end KI0C-15000

// edit pf7/pf8 key
Function KI0C-15100()
  /* ------------------------------------------------------------*/
  /* If no change, continue with scrolls*/
  /* ------------------------------------------------------------*/

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID == KI0CW00.KI0CW-CU-SAP-ACCT-ID
   && KI0CM001.KI0CM-KUCCOID == KI0CW00.KI0CW-KUCCOID
   && KI0CM001.KI0CM-KUMSTRID == KI0CW00.KI0CW-KUMSTRID
   && KI0CM001.KI0CM-XNXCD == KI0CW00.KI0CW-XNXCD)
  else
    KI0C-11100(); /* Purge any temporary storage*/
  /* SET KI0CM001 CLEAR;             /* Clear map*/
    KI0CW00.KI0CWKEY = " ";
    KI0CW00.KI0CW-SWF = "Y"; /* Format the map switch*/
    converseLib.validationFailed(484); /* Data changed, should press enter*/
    return;
  end
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && KI0CW00.XXXTSPAG < 2)       /* and no previous pages*/

    KI0CW00.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(38); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && KI0CW00.XXXTSPAG >= KI0CW00.TA5TSQIX) /* and no more pages*/

    KI0CW00.XXXPRCNM = "15100"; /* Module identification*/
    if (KI0CW00.KI0CW-OVER-98 == "Y")
      converseLib.validationFailed(483); /* Already displayed 7 pages*/
    else
      converseLib.validationFailed(39); /* No more pages to display*/
    end

  end


end // end KI0C-15100

// Edit map fields
Function KI0C-15200()
  /* ------------------------------------------------------------*/
  /* If no change, just by-pass edits*/
  /* ------------------------------------------------------------*/

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID == KI0CW00.KI0CW-CU-SAP-ACCT-ID
   && KI0CM001.KI0CM-KUCCOID == KI0CW00.KI0CW-KUCCOID
   && KI0CM001.KI0CM-KUMSTRID == KI0CW00.KI0CW-KUMSTRID
   && KI0CM001.KI0CM-XNXCD == KI0CW00.KI0CW-XNXCD)
    return;
  end

  /* ------------------------------------------------------------*/
  /* Check customer numbers*/
  /* ------------------------------------------------------------*/

  if (KI0CM001.KI0CM-CU-SAP-ACCT-ID == " ")
    if (KI0CM001.KI0CM-KUCCOID == 0)

      if (KI0CM001.KI0CM-KUMSTRID == 0
       || KI0CM001.KI0CM-XNXCD == 0)
        KI0CW00.XXXPRCNM = "15100"; /* Module identification*/
        converseLib.validationFailed(479); /* Please enter cust nbr*/

      else

        KI0CW00.XXXPRCNM = "15100"; /* Module identification*/
        converseLib.validationFailed(480); /* Goal cust nbr required*/

      end

    else

      KI0C-11510(); /* Check Goal cust nbr*/

      KI0C-11520(); /* Check Goal store nbr*/

      KI0C-11530(); /* Check Goal dept nbr*/

    end
  else
    if (KI0CM001.KI0CM-KUCCOID != 0)
      KI0CM001.KI0CM-KUCCOID = 0;
      KI0CM001.KI0CM-KUMSTRID = 0;
      KI0CM001.KI0CM-XNXCD = 0;
    end

    KI0C-11540(); /* Check SAP nbr*/

  end


end // end KI0C-15200

// Process valid input request
Function KI0C-16000()
  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    KI0CW00.XXXTSPAG = KI0CW00.XXXTSPAG - 1; /* Decrement page number*/
    KI0CW00.KI0CW-SWF = "Y";

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    KI0CW00.XXXTSPAG = KI0CW00.XXXTSPAG + 1; /* Increment page number*/
    KI0CW00.KI0CW-SWF = "Y";

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf7
   && converseVar.eventKey not pf8
   && converseVar.eventKey not pf1
   && converseVar.eventKey not pf4
  )
    KI0CW00.XXXPRCNM = "16000"; /* module id*/
    converseLib.validationFailed(3); /* pa/pf key pressed is not valid*/
    exit stack; /* exit to display map*/

  end

end // end KI0C-16000

// Exit to another application
Function KI0CS-00001()
  /* ------------------------------------------------------------*/
  /* Set the application to be invoked for PF1 or PF4.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD00"; /* Indicate Goal Documentation*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Indicate Master Menu*/
  end

  /* ------------------------------------------------------------*/
  /* Transfer control to the specified application.*/
  /* ------------------------------------------------------------*/

  XSEXIT(); /* Exit to another application*/

  /* ------------------------------------------------------------*/
  /* Reestablish the COMMAREA application and item fields.*/
  /* ------------------------------------------------------------*/

  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* CURR application*/

  if (converseVar.eventKey is pfkey) /* PF key was pressed*/

    COMMAREA.CATOAP = " "; /* Clear TO application*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Indicate error if transfer failed.*/
  /* ------------------------------------------------------------*/

  if (COMMAREA.CASECRC == 3 /* Application not found*/
   || COMMAREA.CASECRC == 4) /* or transfer not allowed*/

    converseLib.validationFailed(6); /* Indicate not allowed*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/

  end


end // end KI0CS-00001

//*** RECORD=KI0CW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record KI0CW00 type basicRecord
  10 KI0CW-IXM KI0CW-IXM ; 
  10 KI0CW-SWC KI0CW-SWC ; 
  10 KI0CW-SWF KI0CW-SWF ; 
  10 KI0CW-SWR KI0CW-SWR ; 
  10 * char(1) ; 
  10 KI0CW-SAVE-PAGE KI0CW-SAVE-PAGE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XXXPRCNM XXXPRCNM ; 
  10 XXXMSGNO XXXMSGNO ; 
  10 * char(1) ; 
  10 KI0CW-INPUT char(13) ; 
    15 KI0CW-KUCCOID-IN num(7) ; 
      20 KI0CW-KUCCOID-CHAR char(7) ; 
    15 KI0CW-KUMSTRID-IN num(4) ; 
      20 KI0CW-KUMSTRID-CHAR char(4) ; 
    15 KI0CW-XNXCD-IN num(2) ; 
      20 KI0CW-XNXCD-CHAR char(2) ; 
  10 * char(1) ; 
  10 KI0CWKEY char(27) ; 
    15 KI0CW-KUCCOID num(9) ; 
    15 KI0CW-KUMSTRID num(4) ; 
    15 KI0CW-XNXCD num(4) ; 
    15 KI0CW-CU-SAP-ACCT-ID char(10) ; 
  10 KI0CW-CNT smallint ; 
  10 KI0CW-HOLD-NAME char(30) ; 
  10 KI0CW-OVER-98 char(1) ; 
end // end KI0CW00

//*** RECORD=KI0CW01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record KI0CW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(728) ; // Temporary storage page length
    10 KI0CW-GROUP KI0CW-GROUP [14] ; 
      15 KI0CW-SAPID KI0CW-SAPID ; 
      15 KI0CW-ACCT-GRP KI0CW-ACCT-GRP ; 
      15 KI0CW-CUST-NO KI0CW-CUST-NO ; 
      15 KI0CW-STOR KI0CW-STOR ; 
      15 KI0CW-DEPT KI0CW-DEPT ; 
      15 KI0CW-CUST-NAME KI0CW-CUST-NAME ; 
end // end KI0CW01

DataItem KI0CW-ACCT-GRP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KI0CW-CUST-NAME char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem KI0CW-CUST-NO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KI0CW-DEPT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//  Group Level
DataItem KI0CW-GROUP char(52)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem KI0CW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem KI0CW-SAPID char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Page save field
DataItem KI0CW-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem KI0CW-STOR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Cursor end of file switch
DataItem KI0CW-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem KI0CW-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem KI0CW-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

