package sm0t;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import sm.common.*;
import ta.common.*;
//*** PROGRAM=SM0T ****
// this is the sales agency report menu application
// 
// 
// 
// date created:        march 17, 1987  (saint pat's day)
// 
// maintenance:
// 
// init   date      reason
// -------------------------------------------------------
// jw    10-21-88  call NONCSP option added
// jw    01-30-89  xssegtr logic added
// AYI   09-10-92  add option 2, rearrange map
// GBC   04-20-93  restructure program, rearrange map
// 
// *********************
Program SM0T type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SM00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SMWREC SMWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SM0TT {deleteAfterUse = yes}; // table
  use SM0TM.SM0TM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SM0T-00000: SM0T-00000();
    SM0T-10000: SM0T-10000();

    /* flow to sm0h-10000 which will display the map*/

    goto SM0T-10000;

  end // end main
end // end SM0T

// security check,first time thru
Function SM0T-00000()

  XSENTRY(); /* check goal security*/

  XSSEGTR(); /* set segmented transaction id*/

  SM0TS-INITIALIZE(); /* initialize*/

end // end SM0T-00000

// converse the salesman menu
Function SM0T-10000()

  SM0TM001.SMWDATE = VGVar.currentShortGregorianDate;

   /* ***********************************************************/
  converse SM0TM001 ;
   /* ***********************************************************/

  SM0TM001.CCAMSG = " ";
  VAGen_EZEMSG = " ";

  /* Reset field attributes*/

  set SM0TM001.SM0TSEL initialAttributes;
  set SM0TM001.CATOAP initialAttributes;
  set SM0TM001.CAITEM initialAttributes;

  if (converseVar.eventKey is enter) /* user pressed enter*/
    SM0TS-PROC-ENTER();
  else
    if (converseVar.eventKey is pf1 /* user presses a valid PF key*/
     || converseVar.eventKey is pf3 
     || converseVar.eventKey is pf4)
      SM0TS-PROC-PF-KEYS();
    else
      converseLib.validationFailed(2); /* invalid key pressed*/
    end
  end

end // end SM0T-10000

// Initialize
Function SM0TS-INITIALIZE()

  set SMWREC empty; /* initialize subsystem record*/
  set SM0TM001 initial; /* clear map*/

  if (COMMAREA.CAFRMSYS == "SM") /* from same system*/
    SMWREC.SMW-SUBSYSTEM-RECORD = COMMAREA.CAUSERA;
  end

  COMMAREA.CAUSERA = " "; /* initialise commarea user area*/

end // end SM0TS-INITIALIZE

// Process enter
Function SM0TS-PROC-ENTER()

  if (SM0TM001.CATOAP == " ") /* fastpath application and parms blank*/
    if (SM0TM001.CAITEM == " ")
    /* next sentence*/
    else
      SM0TM001.CAITEM = " "; /* parms entered without application*/
    end
  else
    SM0TS-PROC-FPATH(); /* process fpath*/
    if (converseVar.validationMsgNum != 0 /* error occurred*/
     || SM0TM001.VAGen_EZEMSG != " ")    
      return;
    end
  end

  /* retrieve the selected option from the program table and if found,*/
  /* move the program name to the commarea to appl field*/

  if (SM0TM001.SM0TSEL in SM0TT.SM0TTSEL)
    COMMAREA.CATOAP = SM0TT.SM0TPROG[sysVar.arrayIndex];
  end
  if (sysVar.arrayIndex == 0) /* option entered not found*/
    set SM0TM001.SM0TSEL cursor, bold;
    converseLib.validationFailed(1); /* invalid option entered*/
  else
    COMMAREA.CAUSERA = " "; /* clear user area*/
    COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD; /* move subsystem record to user area*/
    XSEXIT(); /* pass control to selected appl*/
    VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
  end

end // end SM0TS-PROC-ENTER

// Process fast path
Function SM0TS-PROC-FPATH()

  COMMAREA.CATOAP = SM0TM001.CATOAP; /* move to commarea*/
  COMMAREA.CAITEM = SM0TM001.CAITEM;
  COMMAREA.CAUSERA = " "; /* clear user area*/

  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* transfer in SM system*/
    COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD;
  end

  XSEXIT(); /* transfer control*/

  set SM0TM001.CATOAP cursor, bold;
  set SM0TM001.CAITEM bold;
  SM0TM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/

end // end SM0TS-PROC-FPATH

// Process pf keys
Function SM0TS-PROC-PF-KEYS()

  if (SM0TM001.CATOAP != " "
   || SM0TM001.CAITEM != " ")
    set SM0TM001.CATOAP cursor, bold;
    set SM0TM001.CAITEM bold;
    converseLib.validationFailed(4); /* cannot PF key with fast path*/
  end

  if (converseVar.validationMsgNum == 0) /* no errors*/
    if (converseVar.eventKey is pf1) /* help requested*/
      COMMAREA.CAUSERA = " ";
      XSPF1(); /* transfer to help system*/
      SM0TM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    end

    if (converseVar.eventKey is pf3) /* back to sales force menu*/
      COMMAREA.CAITEM = " ";
      COMMAREA.CATOAP = "SM0H";
      COMMAREA.CAFROMAP = "SM0T";
      COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD;
      XSEXIT();
      SM0TM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
      return;
    end

    if (converseVar.eventKey is pf4) /* transfer to MN0M requested*/
      COMMAREA.CAUSERA = " ";
      XSPF4(); /* pass control*/
      SM0TM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    end
  end

end // end SM0TS-PROC-PF-KEYS

