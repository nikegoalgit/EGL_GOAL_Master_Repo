package sm0i;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import pv.common.*;
import sm.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=SM0I ****
// SM0I displays REP-AGENCY assignment information.  It allows
// an authorized userid to modify the details of a rep's agency
// assignment, assign a rep to another or new agency, or ter-
// minate a rep's agency assginment.
// 
// ************************************************************
// *                    MAINTENANCE HISTORY                   *
// ************************************************************
// 
// Log #    Date     Name   Description
// -----  --------  ------  -----------------------------------
// 
//   001   4/14/93  RCORON  Created application.
//         5/24/93  RCORON  Added another security level check
//                          for inquiry only access.  Restrict
//                          viewing select fields for authorize
//                          d users w/ cailvl(1) = 'y'.
//         6/01/93  RCORON  Require position id only if assoc
//                          type is 'NE'.
//         6/03/93  RCORON  Add routine to automatically trans-
//                          fer to SM0V when a rep is assigned
//                          a vendor number.  This was done so
//                          that the required vendor informa-
//                          tion can immediately be entered.
//   009  07/07/93  jbecke  if the user enters only the rep
//                          ID, display the second screen for
//                          the user to pick the desired agency
//                          do not require PF16.
//        09 apr 99 jchoch  Allow user with change authority to
//                          update inactive rep fields: sm-srep
//                          -comrt-ind, sm-srep-tdt, sm-srep-
//                          trmn-rsn.
//        03 aug 99 jchoch  Allow user with change authority to
//                          update vendor.
//        09 aug 99 jchoch  Fix sm0is-get-dtl-desc code error.
// *********************
Program SM0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SM00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUGREC KUGREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  SM0IW01 SM0IW01; // record
  SM0IW02 SM0IW02; // record
  SM0IW03 SM0IW03; // record
  SM0IW04 SM0IW04; // record
  SM0IW05 SM0IW05; // record
  SM0IW06 SM0IW06; // record
  SM0IW07 SM0IW07; // record
  SM0IW08 SM0IW08; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SMWREC SMWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VREPOS01 VREPOS01; // record
  VREPVN01 VREPVN01; // record
  VSMAUD01 VSMAUD01; // record
  VSMCTL01 VSMCTL01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XRTTBL; // table
  use SM0IM.SM0IM001,  // forms
      SM0IM.SM0IM002, 
      SM0IM.SM0IM003, 
      SM0IM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SM0I-00000: SM0I-00000();
    if (SM0IW02.SM-SAGCY-ID == " ") /* no agency entered*/
      goto SM0I-20000; /* display map 2*/
    end

    goto SM0I-10000;
    SM0I-10000: SM0I-10000();

    if (SM0IW-ERR-FL == "Y")
      goto SM0I-10000; /* converse the map*/
    end

    if (converseVar.eventKey is pf16)
      goto SM0I-20000; /* init for SM0IM002*/
    else
      if (converseVar.eventKey not pa2
       && SM0IW02.SM-SAGCY-ID == " ")
        goto SM0I-20000; /* init for SM0IM002*/
      end
    end

    goto SM0I-10000; /* converse the map*/

    SM0I-20000: SM0I-20000();
    if (SM0IW-ERR-FL == "Y")
      SM5REC.VRAGCY01-GROUP = SM0IW01.VRAGCY01-GROUP;
      goto SM0I-10000;
    else
      if (SM0IW-SELECTED-FL == "Y")
        goto SM0I-10000;
      else
        goto SM0I-30000;
      end
    end


    SM0I-30000: SM0I-30000();
    if (SM0IW-SELECTED-FL == "Y" /* an agency was selected*/
     || converseVar.eventKey is pf3) /* exit key was pressed*/
      goto SM0I-10000; /* init for SM0IM002*/
    end

    goto SM0I-30000; /* converse the map*/

  end // end main
end // end SM0I

// Initial Processing for SM0I
Function SM0I-00000()
  /* ***********************************************************************/
  /* *  MODULE: INITIAL PROCESSING                                        **/
  /* * PURPOSE: Check security, set segmented transaction id and do       **/
  /* *          application initialization.                               **/
  /* ***********************************************************************/

  XSENTRY(); /* check goal security*/

  XSSEGTR(); /* set segmented transaction id*/

  SM0IS-INITIALIZE(); /* initialize*/

end // end SM0I-00000

// Converse map1 -- ragcy info
Function SM0I-10000()
   /*  */
   /* CONVERSE SM0IM001 MAP*/
   /*  */

  SM0IM001.SM0IM-CURR-DATE = VGVar.currentShortGregorianDate;

  converse SM0IM001 ;

  SM0IS-RESET-MAP1(); /* reset map attributes*/
  SM0IW-ERR-FL = "N"; /* reset error flag*/
  SM0IW-VEND-NBR-ASGN-FL = "N"; /* reset vendor nbr assigned fl*/
  SM0IM001.CAMSG = " "; /* reset alt msg area*/

  SM0IS-MAP1-TO-CHDR(); /* move header fields to workarea*/
  SM0IS-MAP1-TO-CDTL(); /* move detail fields to workarea*/


  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    if (SM0IW02.SM-SAGCY-ID == " ") /* agency not entered*/
      SM0IS-EDIT-REP-ID(); /* edit rep ID then flow to map 2*/
    else
      SM0IS-PROC1-ENTER();
    end
  else
    if (converseVar.eventKey is pf12 /* EDIT-ONLY key was pressed and allowed*/
     && SM0IW-PROC-TYP-IND != "I")  
      SM0IS-PROC1-ENTER();
    else
      if (converseVar.eventKey is pa2) /* CANCEL key was pressed*/
        SM0IS-PROC1-PA2();
      else
        if (converseVar.eventKey is pf16) /* Agency search key pressed*/
          SM0IS-EDIT-REP-ID(); /* Edit rep then flow to map2 if valid*/
        else
          if (converseVar.eventKey is pf1 /* Other valid PFkeys pressed*/
           || converseVar.eventKey is pf3 
           || converseVar.eventKey is pf4 
           || converseVar.eventKey is pf5)
            SM0IS-PROC1-PFKEYS();
          else
            if (converseVar.eventKey is pf21) /* Prompt pop-up screen*/
              SM0IS-PROC1-POPUP();
            else
              converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
              SM0IW-ERR-FL = "Y"; /* error*/
            end
          end
        end
      end
    end
  end


end // end SM0I-10000

// converse vrepos pop-up window
Function SM0I-10100()
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (SM0IW08.SM0IW-ERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (SM0IW08.SM0IW-FFL == "N") /* if not the first time through*/
      SM0IW08.SM0IW-CT1 = SM0IW08.SM0IW-INX[10] + 1; /* set up scroll pf8*/
    end

    set SM0IM003 initial; /* Clear map output area*/
    SM0IM003.SM0IM-HDR = SM0IW08.SM0IW-HDR; /* Place heading on map*/
    SM0IM003.SM0IM-TR1 = "              SELECT & ENTER          ";
    SM0IM003.SM0IM-TR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || SM0IW08.SM0IW-FFL == "Y")   /* Or it is the first time thru*/
      SM0IW08.SM0IW-CT2 = 1; /* Set up screen index*/
      while (SM0IW08.SM0IW-CT2 <= 10 /* Until end of screen lines or*/
       && SM0IW08.SM-SREP-PSTN-ID[SM0IW-CT1] != "9999999999")
                                                             /* end of data*/
        SM0IM003.SM-SREP-PSTN-ID[SM0IW-CT2] = SM0IW08.SM-SREP-PSTN-ID[SM0IW-CT1];
        SM0IM003.SM-SREP-PSTN-DESC[SM0IW-CT2] = SM0IW08.SM-SREP-PSTN-DESC[SM0IW-CT1];
        SM0IW08.SM0IW-INX[SM0IW-CT2] = SM0IW08.SM0IW-CT1;
                                                   /* Save array*/
        if (SM0IW08.SM0IW-FFL == "Y") /* If first time thru*/
          SM0IW08.SM0IW-SIX = SM0IW08.SM0IW-CT1; /* Save last index*/
        end
        set SM0IM003.SM0IM-SEL[SM0IW-CT2] normal; /* Set sel to normal*/
        SM0IW08.SM0IW-CT2 = SM0IW08.SM0IW-CT2 + 1; /* Increment scrn index*/
        SM0IW08.SM0IW-CT1 = SM0IW08.SM0IW-CT1 + 1; /* Increment tbl index*/
      end
      SM0IW08.SM0IW-FFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      SM0IW08.SM0IW-CT1 = SM0IW08.SM0IW-INX[1] - 1; /* Set up table index*/
      SM0IW08.SM0IW-CT2 = 10; /* Set up screen index*/
      while (SM0IW08.SM0IW-CT2 >= 1) /* Load from the bottom up*/
        SM0IM003.SM-SREP-PSTN-ID[SM0IW-CT2] = SM0IW08.SM-SREP-PSTN-ID[SM0IW-CT1];
        SM0IM003.SM-SREP-PSTN-DESC[SM0IW-CT2] = SM0IW08.SM-SREP-PSTN-DESC[SM0IW-CT1];
        SM0IW08.SM0IW-INX[SM0IW-CT2] = SM0IW08.SM0IW-CT1;
                                                   /* Save array*/
        set SM0IM003.SM0IM-SEL[SM0IW-CT2] normal; /* Set select visible*/
        SM0IW08.SM0IW-CT2 = SM0IW08.SM0IW-CT2 - 1; /* Decrement scrn index*/
        SM0IW08.SM0IW-CT1 = SM0IW08.SM0IW-CT1 - 1; /* Decrement tbl index*/
      end
      if (SM0IW08.SM0IW-CT1 < 1) /* If the table index was decremented*/
        SM0IW08.SM0IW-CT1 = 1; /* to 0, set it up to 1 (valid value)*/
      end
    end
  end


  converse SM0IM003 ;

  SM0IW08.SM0IW-ERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  SM0IW08.SM0IW-CT2 = 1; /* Screen index*/
  while (SM0IW08.SM0IW-CT2 <= 10 /* Set all fields with data to normal*/
   && SM0IM003.SM-SREP-PSTN-ID[SM0IW-CT2] != " ")
    set SM0IM003.SM0IM-SEL[SM0IW-CT2] normal;
    SM0IW08.SM0IW-CT2 = SM0IW08.SM0IW-CT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed and end of table*/
   && SM0IW08.SM-SREP-PSTN-ID[SM0IW-CT1] == "9999999999")
    SM0IW08.SM0IW-ERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && SM0IW08.SM0IW-INX[1] <= SM0IW08.SM0IW-SIX)
      SM0IW08.SM0IW-ERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        SM0IW08.SM0IW-END = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        SM0IW08.SM0IW-CT2 = 1; /* Screen index*/
        while (SM0IW08.SM0IW-CT2 <= 10) /* Until end of screen data*/
          if (SM0IM003.SM0IM-SEL[SM0IW-CT2] == "S") /* Check for selection*/
            SM0IW08.SM0IW-PIX = SM0IW08.SM0IW-INX[SM0IW-CT2];
            SM0IW08.SM0IW-CT2 = 11; /* End loop*/
          end
          SM0IW08.SM0IW-CT2 = SM0IW08.SM0IW-CT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          SM0IW08.SM0IW-ERR = "Y"; /* set error flag*/
        end
      end
    end
  end
end // end SM0I-10100

// Init for SM0IM002
Function SM0I-20000()
  /* ***********************************************************************/
  /* *  MODULE: INITIAL PROCESS FOR SM0IM002                              **/
  /* * PURPOSE: Prepare all relevant workareas for SM0IM002               **/
  /* ***********************************************************************/

  set SM0IM002 initial;
  set SM0IW07 empty;
  SM0IW01.SM0IW-HIGHEST-PAGE = 0;
  SM0IW-SELECTED-FL = "N"; /* indicates if a row was selected*/
  SM0IW-ERR-FL = "N";
  SM0IW01.VRAGCY01-GROUP = SM5REC.VRAGCY01-GROUP; /* save ragcy*/

  SM0IS-MAP1-TO-MAP2(); /* move map1 info to map2*/

  SM0IS-BUILD-DTL(); /* build temp sto for ragcy rows*/

  if (SM0IW-ERR-FL != "Y") /* no errors loading*/
    SM0IW01.SM0IW-REQUESTED-PAGE = 1;
    SM0IS-LOAD-DTL(); /* load a page of temp sto to map*/
    if (SM0IM002.SM-SAGCY-ID[1] != " " /* first line filled*/
     && SM0IM002.SM-SAGCY-ID[2] == " ") /* and only one agency for rep*/
      SM5REC.VRAGCY01-GROUP = SM0IW07.VRAGCY01-GROUP[1];
      SM0IS-RELOAD-DATA(); /* reload data for map1*/
      SM0IW-SELECTED-FL = "Y"; /* an agency is selected*/
      SM0IS-PRG-TMP-STRG(); /* purge temp sto*/
    else
      if (SM0IM002.XXX-STAT[1] == "A" /* first line active*/
       && SM0IM002.XXX-STAT[2] == "I" /* and only one active agency*/
       && SM0IM001.SM-SAGCY-ID == " ") /* and no agency on map 1*/
        SM5REC.VRAGCY01-GROUP = SM0IW07.VRAGCY01-GROUP[1];
        SM0IS-RELOAD-DATA(); /* reload data for map1*/
        SM0IW-SELECTED-FL = "Y"; /* an agency is selected*/
        SM0IS-PRG-TMP-STRG(); /* purge temp sto*/
      end
    end
  end


end // end SM0I-20000

// Converse map2 -- agency search
Function SM0I-30000()
   /*  */
   /* CONVERSE SM0IM002 MAP*/
   /*  */

  SM0IM002.SM0IM-CURR-DATE = VGVar.currentShortGregorianDate;

  converse SM0IM002 ;
  SM0IW-SELECTED-FL = "N";
  SM0IW-ERR-FL = "N";
  SM0IM001.CAMSG = " "; /* program message area*/

  SM0IS-RESET-MAP2(); /* Reset SM0IM002*/

  if (converseVar.eventKey is enter) /* user pressed enter*/
    SM0IS-PROC2-ENTER();
  else
    if (converseVar.eventKey is pf1 /* user presses a valid*/
     || converseVar.eventKey is pf3 /* PF key*/
     || converseVar.eventKey is pf4 
     || converseVar.eventKey is pf7 
     || converseVar.eventKey is pf8)
      SM0IS-PROC2-PFKEYS();
    else
      converseLib.validationFailed(2); /* invalid key pressed*/
      SM0IW-ERR-FL = "Y";
    end
  end


end // end SM0I-30000

// Add Rep-agency process
Function SM0IS-ADD-RAG-PROC()
   /* **********************************************************************/
   /* Add a Rep-Agency assignment record process*/
   /* **********************************************************************/

  SM0IS-SET-RAG-REC(); /* set VRAGCY01 to initial value*/
  SM0IS-SET-RAG-DATA(); /* move changed data to VRAGCY01*/
  SM0IS-ADD-VRAGCY(); /* Add VrAGCY01*/

  SM0IS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
  VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
  VSMAUD01.XXX-TBL-NM = "VRAGCY01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0IW-VRAGCY01-LENGTH;
  VSMAUD01.SM-AUDIT-TYP-CD = "A";
  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;

  SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/

end // end SM0IS-ADD-RAG-PROC

// Add rep-vendor table proc**
Function SM0IS-ADD-RVN-PROC()
   /* **********************************************************************/
   /* Add Rep-vendor table process*/
   /* Note: a vendor number is assigned to a rep if the association*/
   /* type is 'CT' and the print commission statement flag is*/
   /* 'Y' and the rep did not have a vendor number assigned.*/
   /* The next vendor number is store in the SM control table.*/
   /*  */
   /* 27 July JCHOCH    Add code for allowing update of VREPVN.*/
   /* **********************************************************************/

  if (SM0IW04.PV-MSA-VEND-NBR != " ")
    set VREPVN01 empty;
    VREPVN01.SM-SREP-ID = SM4REC.SM4REPID;
    VREPVN01.PV-MSA-VEND-NBR = SM0IW04.PV-MSA-VEND-NBR;
    VREPVN01.ZZ-CHNG-DT = SM0IW01.SM0IW-CURR-CCYYMMDD;
    VREPVN01.ZZ-CHNG-HHMM = SM0IW01.SM0IW-CURR-HHMM;
    VREPVN01.PV-MSA-VEND-NBR = SM0IW04.PV-MSA-VEND-NBR;

    SM0IS-ADD-VREPVN();

    SM0IS-SET-AUD-REC(); /* init audit record*/
    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.XXX-TBL-NM = "VREPVN01"; /* set table nm in the audit*/
    VSMAUD01.SM-AUDIT-FILLER-LEN = SM0IW-VREPVN01-LENGTH;
    VSMAUD01.SM-AUDIT-TYP-CD = "U";
    VSMAUD01.SM-BFR-AFT-IND = "U";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = VREPVN01.VREPVN01-GROUP;

    SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/
  end
  if (SM0IM001.PV-MSA-VEND-NBR != " " /* vend nbr exists or*/
   || SM0IW04.XRT-SREP-ASSN-TYP != "CT") /* not contractor or*/
    SM0IW-VEND-NBR-ASGN-FL = "N"; /* vendor number was not assigned*/
    return; /* then do not assign a vendor number*/
  else
    SM0IW-VEND-NBR-ASGN-FL = "Y"; /* vendor number to be assigned*/
  end

  set VREPVN01 empty;
  if (SM0IM001.PV-MSA-VEND-NBR == " ")
    SM0IS-GET-NEXT-VND(); /* get next vendor number*/
    VREPVN01.PV-MSA-VEND-NBR = VSMCTL01.SM-NXT-VEND-NBR;
  else
    VREPVN01.PV-MSA-VEND-NBR = SM0IM001.PV-MSA-VEND-NBR;
  end

  VREPVN01.SM-SREP-ID = SM5REC.SM4REPID;
  VREPVN01.ZZ-SDT = SM0IW01.SM0IW-CURR-CCYYMMDD;
  VREPVN01.ZZ-CHNG-DT = SM0IW01.SM0IW-CURR-CCYYMMDD;
  VREPVN01.ZZ-CHNG-HHMM = SM0IW01.SM0IW-CURR-HHMM;

  SM0IS-ADD-VREPVN(); /* Call IO6590 add vrepvn01*/

  SM0IM001.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;
  SM0IW04.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;

  SM0IS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
  VSMAUD01.XXX-TBL-NM = "VREPVN01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0IW-VREPVN01-LENGTH;
  VSMAUD01.SM-AUDIT-TYP-CD = "A";
  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = VREPVN01.VREPVN01-GROUP;

  SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/

  SM0IW01.PV-MSA-VEND-NBR = VSMCTL01.SM-NXT-VEND-NBR;
  SM0IW01.SM0IW-VEND-NBR-NUM = SM0IW01.SM0IW-VEND-NBR-NUM + 1;
  VSMCTL01.SM-NXT-VEND-NBR = SM0IW01.PV-MSA-VEND-NBR;
  VSMCTL01.ZZ-CHNG-DT = SM0IW01.SM0IW-CURR-CCYYMMDD;
  VSMCTL01.ZZ-CHNG-HHMM = SM0IW01.SM0IW-CURR-HHMM;

  SM0IS-UPDT-VSMCTL(); /* Call IO6580 update vsmctl01*/


end // end SM0IS-ADD-RVN-PROC

// Add WS page to temp sto
Function SM0IS-ADD-TMP-STRG()
  set TA5REC empty; /* clear ts parms*/

  TA5REC.TA5APPID = SM0IW01.TA5APPID; /* application ID*/
  SM0IW07.SM0IW-TEMP-STRG-LENGTH = SM0IW01.SM0IW-TSQ-REC-LENGTH;

  if (SM0IW01.SM0IW-HIGHEST-PAGE == 0) /* no pages formatted*/
    TA5REC.TA5FNCCD = "N"; /* function is new (purge & add)*/
  else
    TA5REC.TA5FNCCD = "A"; /* function is add*/
  end

  try
    call "TA0050" (SM0IW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage*/

  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
    SM0IW01.SM0IW-HIGHEST-PAGE = TA5REC.TA5TSQIX; /* page # added*/
    SM0IW01.SM0IW-PTR = 0; /* reset line pointer*/
    set SM0IW07 empty; /* initialise current detail record*/
  else /* an error occurred*/
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post*/
    TA1REC.TA1LOCAT[1] = "ADD TS  "; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    XSPF4(); /* pass control to menu*/
    exit program;
  end

end // end SM0IS-ADD-TMP-STRG

// Call IO0160 add vragcy01
Function SM0IS-ADD-VRAGCY()
   /* **********************************************************************/
   /* SM0IS-ADD-VRAGCY*/
   /* This routine calls IO0160 to insert a rep-agency row.*/
   /* (Sqlcode -803 is not checked because this table has no unique key.)*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("A ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* not found*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-ADD-VRAGCY

// Call IO6590 add vrepvn01
Function SM0IS-ADD-VREPVN()
   /* **********************************************************************/
   /* SM0IS-ADD-VREPVN*/
   /* This routine calls IO6590 to insert a rep-vendor row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6590" ("A ", SQLCA, VREPVN01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* db2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPVN01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6590"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-ADD-VREPVN

// Call IO0480 add vsmaud01
Function SM0IS-ADD-VSMAUD()
   /* **********************************************************************/
   /* SM0IS-ADD-VSMAUD*/
   /* This routine calls IO0480 to insert an SM audit record.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0480" ("A ", SQLCA, VSMAUD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMAUD01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-ADD-VSMAUD

// Build temporary storage pages
Function SM0IS-BUILD-DTL()
  /* ************************************************************************/
  /* SM0IS-BUILD-DTL*/
  /* This routine opens a cursor for VRAGCY01 for the passed rep-id*/
  /* and reads all the agency assignments for that rep then saves to*/
  /* temporary storage.*/
  /* ************************************************************************/

  set SM5REC empty;
  SM5REC.SM4REPID = SM4REC.SM4REPID;

  SM0IS-OPEN-VRAGCY(); /* open cursor*/

  SM0IW-PTR = 0; /* screen detail line index*/
  SM0IW01.SM0IW-MORE-VRAGCY01-FL = "Y";

  while (SM0IW01.SM0IW-MORE-VRAGCY01-FL == "Y" /* more ragcy*/
   && SM0IW-ERR-FL != "Y") /* no errors*/

    SM0IS-SCAN-VRAGCY(); /* fetch a ragcy row*/

    if (SM0IW-MORE-VRAGCY01-FL == "Y") /* ragcy row found*/
      SM0IW-PTR = SM0IW-PTR + 1;
      SM0IW07.VRAGCY01-GROUP[SM0IW-PTR] = SM5REC.VRAGCY01-GROUP;
      /* ********************************************************************/
      /* Get agency name*/
      /* ********************************************************************/
      SM1REC.SM1AGYID = SM5REC.SM1AGYID;
      SM0IS-FIND-VSAGCY(); /* call IO0050 read vsagcy01*/
      if (SM0IW-VSAGCY01-FOUND-FL == "Y")
        SM0IW07.SM-SAGCY-NM[SM0IW-PTR] = SM1REC.SM1AGYNM;
      end
      /* ********************************************************************/
      /* Get rep position abrv*/
      /* ********************************************************************/
      VREPOS01.SM-SREP-PSTN-ID = SM5REC.SM-SREP-PSTN-ID;
      SM0IS-FIND-VREPOS(); /* call IO0660 read vrepos01*/
      if (SM0IW-VREPOS01-FOUND-FL == "Y")
        SM0IW07.SM-SREP-PSTN-ABRV[SM0IW-PTR] = VREPOS01.SM-SREP-PSTN-ABRV;
      end
      /* ********************************************************************/
      /* Check for full page*/
      /* ********************************************************************/
      if (SM0IW01.SM0IW-PTR == SM0IW01.SM0IW-MAX-PER-PAGE)
        SM0IS-ADD-TMP-STRG(); /* add page to temp storage*/
      end

    else /* no more ragcy rows*/
      SM0IS-CLOS-VRAGCY(); /* close ragcy cursor*/

      if (SM0IW01.SM0IW-PTR > 0) /* partial page*/
        SM0IS-ADD-TMP-STRG(); /* add page to temp storage*/
      end

      if (SM0IW01.SM0IW-HIGHEST-PAGE <= 0) /* no data*/
        converseLib.validationFailed(70); /* no data to display*/
        SM0IW-ERR-FL = "Y";
      end
    end
  end


end // end SM0IS-BUILD-DTL

// Call IO5110 close cursor
Function SM0IS-CLOS-VCUREP()
   /* **********************************************************************/
   /* SM0IS-CLOS-VCUREP*/
   /* This routine calls IO5110 to close a CU-REP cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO5110" ("C1", SQLCA, KUGREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCUREP01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "C1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO5110"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-CLOS-VCUREP

// Call IO0160 close vragcy csr
Function SM0IS-CLOS-VRAGCY()
   /* **********************************************************************/
   /* SM0IS-CLOS-VRAGCY*/
   /* This routine calls IO0160 to close a Rep-Agency assignment cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("CS", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "CS      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-CLOS-VRAGCY

// Call IO0660 close vrepos csr
Function SM0IS-CLOS-VREPOS()
   /* **********************************************************************/
   /* SM0IS-CLOS-VREPOS*/
   /* This routine calls IO0660 to close a Rep-Position id cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0660" ("C1", SQLCA, VREPOS01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPOS01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "C1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0660"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-CLOS-VREPOS

// Clear SM0IM001 disp-only desc
Function SM0IS-CLR-DTL-DESC()
   /* **********************************************************************/
   /* Clear SM0IM001 detail descriptions*/
   /* **********************************************************************/

  SM0IM001.SM-SREP-PSTN-DESC = " ";
  SM0IM001.XRT-SREP-TYP-DESC = " ";
  SM0IM001.CU-CO-NM[1] = " ";
  SM0IM001.CU-CO-NM[2] = " ";
  SM0IM001.CU-CO-NM[3] = " ";

end // end SM0IS-CLR-DTL-DESC

// Edit Agency id
Function SM0IS-EDIT-AGCY-ID()
   /* **********************************************************************/
   /* Edit Agency id*/
   /* This routine reads the vsagcy01 table.  If the agency id was not*/
   /* found, then display error message.  If found, then save the agency*/
   /* name.*/
   /* **********************************************************************/

  SM0IW03.SM-SAGCY-NM = " ";
  SM0IM001.SM-SAGCY-NM = " ";

  if (SM0IW02.SM-SAGCY-ID == " ")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0032); /* enter sales agency id*/
    set SM0IM001.SM-SAGCY-ID cursor, bold;
    return;
  end

  SM1REC.SM1AGYID = SM0IW02.SM-SAGCY-ID;

  SM0IS-FIND-VSAGCY(); /* call io0050 to read the agency table*/

  if (SM0IW-VSAGCY01-FOUND-FL == "N") /* agency rec was not found*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0031); /* agency id not found*/
    set SM0IM001.SM-SAGCY-ID cursor, bold;
  else /* rep rec was found*/
    SM0IW03.SM-SAGCY-NM = SM1REC.SM1AGYNM;
    SM0IM001.SM-SAGCY-NM = SM1REC.SM1AGYNM;
  end

end // end SM0IS-EDIT-AGCY-ID

// Edit commission rate ind
Function SM0IS-EDIT-COMRT()
   /* **********************************************************************/
   /* EDIT COMM RT IND*/
   /* **********************************************************************/
  if (SM0IW04.SM-SREP-COMRT-IND != "Y"
   && SM0IW04.SM-SREP-COMRT-IND != "N")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0066); /* must be Y or N*/
    set SM0IM001.SM-SREP-COMRT-IND cursor, bold;
  end


end // end SM0IS-EDIT-COMRT

// Edit effective date
Function SM0IS-EDIT-EDT()
   /* **********************************************************************/
   /* Edit Rep-Agency effective date*/
   /* **********************************************************************/

   /* Validate date format*/

  SM0IW04.SM-SREP-EDT = 0;

  if (SM0IW04.SM0IW-SM-SREP-EDT == " ")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0094); /* effective date must be entered*/
    set SM0IM001.SM0IM-SM-SREP-EDT cursor, bold;
    return;
  else
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    SM0IW01.SM0IW-WORK-CHAR-DATE = SM0IW04.SM0IW-SM-SREP-EDT;
    SM0IS-VAL-DT-FMT(); /* validate date format*/
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      SM0IW04.SM-SREP-EDT = TA2REC.TA2GRGGN;
      SM0IW04.SM0IW-SM-SREP-EDT = TA2REC.TA2GRGB;
      SM0IM001.SM0IM-SM-SREP-EDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* invalid eff date*/
      set SM0IM001.SM0IM-SM-SREP-EDT cursor, bold;
      return;
    end
  end

   /* Effective date must not be after terminate date if both are*/
   /* entered.*/

  if (SM0IW04.SM-SREP-EDT != 0
   && SM0IW04.SM-SREP-TDT != 0
   && SM0IW04.SM-SREP-EDT > SM0IW04.SM-SREP-TDT)
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0075); /* eff dt must be bfr exp dt*/
    set SM0IM001.SM0IM-SM-SREP-EDT cursor, bold;
    set SM0IM001.SM0IM-SM-SREP-TDT bold;
  end


end // end SM0IS-EDIT-EDT

// Edit rep personal account
Function SM0IS-EDIT-PER-ACT()
  /* ************************************************************************/
  /* EDIT REP PERSONAL NUMBER*/
  /* ************************************************************************/

  SM0IM001.CU-CO-NM[2] = " ";
  SM0IW04.SM-PERS-CU-CO-ID = 0;
  SM0IW04.SM-PERS-CU-STOR-ID = 0;
  SM0IW04.SM-PERS-DEPT-ID = 0;
  SM0IW01.SM0IW-CUST-ERR-FL = "N"; /* reset error fl for cust edit*/

  if (SM0IW04.SM0IW-SM-PERS-CU-CO-ID == " "
   && SM0IW04.SM0IW-SM-PERS-CU-STOR-ID == " "
   && SM0IW04.SM0IW-SM-PERS-DEPT-ID == " ")
    return;
  end

  /* **********************************************************************/
  /* CHECK FOR NUMERIC VALUE*/
  /* **********************************************************************/
  /*  */
  /* customer department*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-PERS-DEPT-ID;
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = " ";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    XSSMS-NUM-CHK(); /* validate & convert from char to num*/
    if (SMWREC.SMW-NUM-CHK-ERR == "Y")
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-PERS-DEPT-ID cursor, bold;
    else
      SM0IW04.SM0IW-SM-PERS-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IM001.SM0IM-SM-PERS-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IW04.SM-PERS-DEPT-ID = SMWREC.SMW-NUM-CHK-NBR;
    end
  end
  /*  */
  /* customer store*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-PERS-CU-STOR-ID;
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = " ";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    XSSMS-NUM-CHK(); /* validate & convert from char to num*/
    if (SMWREC.SMW-NUM-CHK-ERR == "Y")
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-PERS-CU-STOR-ID cursor, bold;
    else
      SM0IW04.SM0IW-SM-PERS-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IM001.SM0IM-SM-PERS-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IW04.SM-PERS-CU-STOR-ID = SMWREC.SMW-NUM-CHK-NBR;
    end
  end
  /*  */
  /* customer company*/
  /*  */
  SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-PERS-CU-CO-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 9;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SM0IW01.SM0IW-CUST-ERR-FL = "Y";
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-PERS-CU-CO-ID cursor, bold;
    end
  else
    SM0IW04.SM0IW-SM-PERS-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IM001.SM0IM-SM-PERS-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IW04.SM-PERS-CU-CO-ID = SMWREC.SMW-NUM-CHK-NBR;
  end

  /* **********************************************************************/
  /* CHECK IF EXISTS IN DATABASE*/
  /* **********************************************************************/

  if (SM0IW01.SM0IW-CUST-ERR-FL == "Y") /* cust no not numeric*/
    return;
  end

  /*  */
  /* customer department*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    KUJREC.KUCCOID = SM0IW04.SM-PERS-CU-CO-ID;
    KUJREC.XNXCD = SM0IW04.SM-PERS-DEPT-ID;
    SM0IS-FIND-VDEPT0(); /* call io0290 to read the dept table*/
    if (SM0IW-VDEPT001-FOUND-FL == "N") /* dept rec was not found*/
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0087); /* dept not valid for company id*/
      set SM0IM001.SM0IM-SM-PERS-DEPT-ID cursor, bold;
    end
  end
  /*  */
  /* customer store*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    KUMREC.KUCCOID = SM0IW04.SM-PERS-CU-CO-ID;
    KUMREC.KUMSTRID = SM0IW04.SM-PERS-CU-STOR-ID;
    SM0IS-FIND-VSTORE(); /* call io0340 to read the store table*/
    if (SM0IW-VSTORE01-FOUND-FL == "N") /* stor rec was not found*/
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0086); /* stor not valid for company id*/
      set SM0IM001.SM0IM-SM-PERS-CU-STOR-ID cursor, bold;
    end
  end
  /*  */
  /* customer company id*/
  /*  */
  KUCREC.KUCCOID = SM0IW04.SM-PERS-CU-CO-ID; /* vcmpny01*/
  SM0IS-FIND-VCMPNY(); /* call io0240 to read the cmpny table*/
  if (SM0IW-VCMPNY01-FOUND-FL == "N") /* cmpny rec was not found*/
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0035); /* company id is not valid*/
      set SM0IM001.SM0IM-SM-PERS-CU-CO-ID cursor, bold;
    end
  else
    SM0IM001.CU-CO-NM[2] = KUCREC.KUCCONM;
  end

  /* **********************************************************************/
  /* CHECK if valid COMPANY-STORE-DEPT is valid for REP-AGENCY*/
  /* **********************************************************************/

  if (SM0IW01.SM0IW-CUST-ERR-FL == "Y" /* cmpny, stor, or dept not valid*/
   || SM0IW-DISP-ERR-FL != "Y")        /* or display desc only*/
    return;
  end

  KUGREC.KUCCOID = SM0IW04.SM-PERS-CU-CO-ID; /* company*/
  KUGREC.KUMSTRID = SM0IW04.SM-PERS-CU-STOR-ID; /* store*/
  KUGREC.XNXCD = SM0IW04.SM-PERS-DEPT-ID; /* dept*/
  KUGREC.YSBCD = "**"; /* resp cd*/
  KUGREC.KUGRPTDT = -1; /* term date*/
  SM0IW01.SM0IW-MORE-VCUREP01-FL = "Y";
  SM0IW01.SM0IW-VCUREP01-FOUND-FL = "N";
  SM0IS-OPEN-VCUREP(); /* call io5110 to open a cursor for cust*/
  while (SM0IW-MORE-VCUREP01-FL == "Y")
    SM0IS-SCAN-VCUREP(); /* call io5110 to fetch next row in cursor*/
    if (SM0IW-MORE-VCUREP01-FL == "Y" /* row found*/
     /* AND SM5REC.SM1AGYID EQ KUGREC.SM1AGYID;          /* cust is valid*/
     && SM5REC.SM4REPID == KUGREC.SM4REPID) /* for rep-agency*/
      SM0IW01.SM0IW-VCUREP01-FOUND-FL = "Y";
      SM0IW01.SM0IW-MORE-VCUREP01-FL = "N";
    end
  end
  SM0IS-CLOS-VCUREP(); /* call io5110 to close the cust cursor*/
  if (SM0IW-VCUREP01-FOUND-FL == "N") /* cust not valid for rep-agency*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0088); /* cust not valid for rep-agency*/
    set SM0IM001.SM0IM-SM-PERS-CU-CO-ID cursor, bold;
    set SM0IM001.SM0IM-SM-PERS-CU-STOR-ID bold;
    set SM0IM001.SM0IM-SM-PERS-DEPT-ID bold;
  end

end // end SM0IS-EDIT-PER-ACT

// Edit rep promo account
Function SM0IS-EDIT-PRM-ACT()
  /* ************************************************************************/
  /* EDIT REP PROMO NUMBER*/
  /* ************************************************************************/

  SM0IM001.CU-CO-NM[1] = " ";
  SM0IW04.SM-PRM-CU-CO-ID = 0;
  SM0IW04.SM-PRM-CU-STOR-ID = 0;
  SM0IW04.SM-PRM-DEPT-ID = 0;
  SM0IW01.SM0IW-CUST-ERR-FL = "N"; /* reset error fl for cust edit*/

  if (SM0IW04.SM0IW-SM-PRM-CU-CO-ID == " "
   && SM0IW04.SM0IW-SM-PRM-CU-STOR-ID == " "
   && SM0IW04.SM0IW-SM-PRM-DEPT-ID == " ")
    return;
  end

  /* **********************************************************************/
  /* CHECK FOR NUMERIC VALUE*/
  /* **********************************************************************/
  /*  */
  /* customer department*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-PRM-DEPT-ID;
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = " ";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    XSSMS-NUM-CHK(); /* validate & convert from char to num*/
    if (SMWREC.SMW-NUM-CHK-ERR == "Y")
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-PRM-DEPT-ID cursor, bold;
    else
      SM0IW04.SM0IW-SM-PRM-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IM001.SM0IM-SM-PRM-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IW04.SM-PRM-DEPT-ID = SMWREC.SMW-NUM-CHK-NBR;
    end
  end
  /*  */
  /* customer store*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-PRM-CU-STOR-ID;
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = " ";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    XSSMS-NUM-CHK(); /* validate & convert from char to num*/
    if (SMWREC.SMW-NUM-CHK-ERR == "Y")
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-PRM-CU-STOR-ID cursor, bold;
    else
      SM0IW04.SM0IW-SM-PRM-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IM001.SM0IM-SM-PRM-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IW04.SM-PRM-CU-STOR-ID = SMWREC.SMW-NUM-CHK-NBR;
    end
  end
  /*  */
  /* customer company*/
  /*  */
  SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-PRM-CU-CO-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 9;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SM0IW01.SM0IW-CUST-ERR-FL = "Y";
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-PRM-CU-CO-ID cursor, bold;
    end
  else
    SM0IW04.SM0IW-SM-PRM-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IM001.SM0IM-SM-PRM-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IW04.SM-PRM-CU-CO-ID = SMWREC.SMW-NUM-CHK-NBR;
  end

  /* **********************************************************************/
  /* CHECK IF EXISTS IN DATABASE*/
  /* **********************************************************************/

  if (SM0IW01.SM0IW-CUST-ERR-FL == "Y") /* cust no not numeric*/
    return;
  end

  /*  */
  /* customer department*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    KUJREC.KUCCOID = SM0IW04.SM-PRM-CU-CO-ID;
    KUJREC.XNXCD = SM0IW04.SM-PRM-DEPT-ID;
    SM0IS-FIND-VDEPT0(); /* call io0290 to read the dept table*/
    if (SM0IW-VDEPT001-FOUND-FL == "N") /* dept rec was not found*/
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0087); /* dept not valid for company id*/
      set SM0IM001.SM0IM-SM-PRM-DEPT-ID cursor, bold;
    end
  end
  /*  */
  /* customer store*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    KUMREC.KUCCOID = SM0IW04.SM-PRM-CU-CO-ID;
    KUMREC.KUMSTRID = SM0IW04.SM-PRM-CU-STOR-ID;
    SM0IS-FIND-VSTORE(); /* call io0340 to read the store table*/
    if (SM0IW-VSTORE01-FOUND-FL == "N") /* stor rec was not found*/
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0086); /* stor not valid for company id*/
      set SM0IM001.SM0IM-SM-PRM-CU-STOR-ID cursor, bold;
    end
  end
  /*  */
  /* customer company id*/
  /*  */
  KUCREC.KUCCOID = SM0IW04.SM-PRM-CU-CO-ID; /* vcmpny01*/
  SM0IS-FIND-VCMPNY(); /* call io0240 to read the cmpny table*/
  if (SM0IW-VCMPNY01-FOUND-FL == "N") /* cmpny rec was not found*/
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0035); /* company id is not valid*/
      set SM0IM001.SM0IM-SM-PRM-CU-CO-ID cursor, bold;
    end
  else
    SM0IM001.CU-CO-NM[1] = KUCREC.KUCCONM;
  end

  /* **********************************************************************/
  /* CHECK if valid COMPANY-STORE-DEPT is valid for REP-AGENCY*/
  /* **********************************************************************/

  if (SM0IW01.SM0IW-CUST-ERR-FL == "Y" /* cmpny, stor, or dept not valid*/
   || SM0IW-DISP-ERR-FL != "Y")        /* or display desc only*/
    return;
  end

  KUGREC.KUCCOID = SM0IW04.SM-PRM-CU-CO-ID; /* company*/
  KUGREC.KUMSTRID = SM0IW04.SM-PRM-CU-STOR-ID; /* store*/
  KUGREC.XNXCD = SM0IW04.SM-PRM-DEPT-ID; /* dept*/
  KUGREC.YSBCD = "**"; /* resp cd*/
  KUGREC.KUGRPTDT = -1; /* term date*/
  SM0IW01.SM0IW-MORE-VCUREP01-FL = "Y";
  SM0IW01.SM0IW-VCUREP01-FOUND-FL = "N";
  SM0IS-OPEN-VCUREP(); /* call io5110 to open a cursor for cust*/
  while (SM0IW-MORE-VCUREP01-FL == "Y")
    SM0IS-SCAN-VCUREP(); /* call io5110 to fetch next row in cursor*/
    if (SM0IW-MORE-VCUREP01-FL == "Y" /* row found*/
     /* AND SM5REC.SM1AGYID EQ KUGREC.SM1AGYID;          /* cust is valid*/
     && SM5REC.SM4REPID == KUGREC.SM4REPID) /* for rep-agency*/
      SM0IW01.SM0IW-VCUREP01-FOUND-FL = "Y";
      SM0IW01.SM0IW-MORE-VCUREP01-FL = "N";
    end
  end
  SM0IS-CLOS-VCUREP(); /* call io5110 to close the cust cursor*/
  if (SM0IW-VCUREP01-FOUND-FL == "N") /* cust not valid for rep-agency*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0088); /* cust not valid for rep-agency*/
    set SM0IM001.SM0IM-SM-PRM-CU-CO-ID cursor, bold;
    set SM0IM001.SM0IM-SM-PRM-CU-STOR-ID bold;
    set SM0IM001.SM0IM-SM-PRM-DEPT-ID bold;
  end

end // end SM0IS-EDIT-PRM-ACT

// Edit rep position id
Function SM0IS-EDIT-PSTN-ID()
   /* **********************************************************************/
   /* EDIT REP POSITION ID*/
   /* **********************************************************************/
  SM0IM001.SM-SREP-PSTN-DESC = " ";
  if (SM0IW04.SM-SREP-PSTN-ID == " ")
    if (SM0IW-DISP-ERR-FL == "Y"
     && SM0IW04.XRT-SREP-ASSN-TYP == "NE")
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0059); /* position id must be entered*/
      set SM0IM001.SM-SREP-PSTN-ID cursor, bold;
    end
    return;
  end

  VREPOS01.SM-SREP-PSTN-ID = SM0IW04.SM-SREP-PSTN-ID;

  SM0IS-FIND-VREPOS(); /* call io0660 to read the rep position tbl*/

  if (SM0IW-VREPOS01-FOUND-FL == "N") /* pstn id rec was not found*/
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0058); /* not a valid position id*/
      set SM0IM001.SM-SREP-PSTN-ID cursor, bold;
    end
  else /* rep rec was found*/
    SM0IM001.SM-SREP-PSTN-DESC = VREPOS01.SM-SREP-PSTN-DESC;
  end

end // end SM0IS-EDIT-PSTN-ID

// Edit Rep id
Function SM0IS-EDIT-REP-ID()
   /* **********************************************************************/
   /* Edit Rep id*/
   /* This routine reads the vreps001 table.  If the rep id was not*/
   /* found, then display error message.  If found, then save the rep*/
   /* name, employee id and get the rep vendor number if any.*/
   /* **********************************************************************/

  SM0IW03.XXX-LAST-NM = " ";
  SM0IW03.XXX-FRST-NM = " ";
  SM0IW03.XXX-MID-INIT = " ";
  SM0IW03.SM-SREP-EMPL-ID = " ";
  SM0IW04.PV-MSA-VEND-NBR = " ";
  SM0IM001.XXX-LAST-NM = " ";
  SM0IM001.XXX-FRST-NM = " ";
  SM0IM001.XXX-MID-INIT = " ";
  SM0IM001.SM-SREP-EMPL-ID = " ";
  SM0IM001.PV-MSA-VEND-NBR = " ";
  set SM0IM001.SM-SREP-EMPL-ID invisible, protect;
  set SM0IM001.PV-MSA-VEND-NBR invisible, protect;
  set SM0IM001.SM0IM-EMPL-LIT invisible, protect;
  set SM0IM001.SM0IM-VEND-LIT invisible, protect;

  if (SM0IW02.SM0IW-SM-SREP-ID == " ")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0060); /* enter sales rep id*/
    set SM0IM001.SM0IM-SM-SREP-ID cursor, bold;
    return;
  end

  SMWREC.SMW-NUM-CHK-WORD = SM0IW02.SM0IW-SM-SREP-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0036); /* this field must be numeric*/
    set SM0IM001.SM0IM-SM-SREP-ID cursor, bold;
    return;
  else
    SM0IW02.SM0IW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IM001.SM0IM-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM4REC.SM4REPID = SMWREC.SMW-NUM-CHK-NBR;
  end

  SM0IS-FIND-VREPS0(); /* call io0020 to read the reps table*/

  if (SM0IW-VREPS001-FOUND-FL == "N") /* rep rec was not found*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0009); /* rep id not found*/
    set SM0IM001.SM0IM-SM-SREP-ID cursor, bold;
    return;
  else /* rep rec was found*/
    SM0IW03.XXX-LAST-NM = SM4REC.XXXLSTNM;
    SM0IW03.XXX-FRST-NM = SM4REC.XXXFSTNM;
    SM0IW03.XXX-MID-INIT = SM4REC.XXXMDINT;
    SM0IW03.SM-SREP-EMPL-ID = SM4REC.SM-SREP-EMPL-ID;
    SM0IM001.XXX-LAST-NM = SM4REC.XXXLSTNM;
    SM0IM001.XXX-FRST-NM = SM4REC.XXXFSTNM;
    SM0IM001.XXX-MID-INIT = SM4REC.XXXMDINT;
    SM0IM001.SM-SREP-EMPL-ID = SM4REC.SM-SREP-EMPL-ID;
    SM0IS-GET-VEND-NBR(); /* get rep's vendor number*/
    SM0IW04.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;
    SM0IM001.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;
  end

  if (SM0IM001.SM-SREP-EMPL-ID != " ")
    set SM0IM001.SM-SREP-EMPL-ID initialAttributes;
    set SM0IM001.SM0IM-EMPL-LIT initialAttributes;
  end
  if (SM0IM001.PV-MSA-VEND-NBR != " ")
    set SM0IM001.PV-MSA-VEND-NBR initialAttributes;
    set SM0IM001.SM0IM-VEND-LIT initialAttributes;
  end


end // end SM0IS-EDIT-REP-ID

// Edit termination reason
Function SM0IS-EDIT-RSN()
   /* **********************************************************************/
   /* Edit Rep-Agency termination reason*/
   /* **********************************************************************/
  if (SM0IW04.SM0IW-SM-SREP-TDT != " ") /* term date entered*/
    if (SM0IW04.SM-SREP-TRMN-RSN == " ") /* term reason not entered*/
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0090); /* term reason required*/
      set SM0IM001.SM-SREP-TRMN-RSN cursor, bold;
    end
  else /* term date not entered*/
    if (SM0IW04.SM-SREP-TRMN-RSN != " ") /* term reason entered*/
      SM0IW-ERR-FL = "Y";
      /* edit for term date will put out message requiring it*/
      set SM0IM001.SM-SREP-TRMN-RSN bold;
    end
  end


end // end SM0IS-EDIT-RSN

// Edit rep sample account
Function SM0IS-EDIT-SMP-ACT()
  /* ************************************************************************/
  /* EDIT REP SAMPLE NUMBER*/
  /* ************************************************************************/

  SM0IM001.CU-CO-NM[3] = " ";
  SM0IW04.SM-SMPL-CU-CO-ID = 0;
  SM0IW04.SM-SMPL-CU-STOR-ID = 0;
  SM0IW04.SM-SMPL-DEPT-ID = 0;
  SM0IW01.SM0IW-CUST-ERR-FL = "N"; /* reset error fl for cust edit*/

  if (SM0IW04.SM0IW-SM-SMPL-CU-CO-ID == " "
   && SM0IW04.SM0IW-SM-SMPL-CU-STOR-ID == " "
   && SM0IW04.SM0IW-SM-SMPL-DEPT-ID == " ")
    return;
  end

  /* **********************************************************************/
  /* CHECK FOR NUMERIC VALUE*/
  /* **********************************************************************/
  /*  */
  /* customer department*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-SMPL-DEPT-ID;
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = " ";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    XSSMS-NUM-CHK(); /* validate & convert from char to num*/
    if (SMWREC.SMW-NUM-CHK-ERR == "Y")
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-SMPL-DEPT-ID cursor, bold;
    else
      SM0IW04.SM0IW-SM-SMPL-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IM001.SM0IM-SM-SMPL-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IW04.SM-SMPL-DEPT-ID = SMWREC.SMW-NUM-CHK-NBR;
    end
  end
  /*  */
  /* customer store*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-SMPL-CU-STOR-ID;
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = " ";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    XSSMS-NUM-CHK(); /* validate & convert from char to num*/
    if (SMWREC.SMW-NUM-CHK-ERR == "Y")
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID cursor, bold;
    else
      SM0IW04.SM0IW-SM-SMPL-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0IW04.SM-SMPL-CU-STOR-ID = SMWREC.SMW-NUM-CHK-NBR;
    end
  end
  /*  */
  /* customer company*/
  /*  */
  SMWREC.SMW-NUM-CHK-WORD = SM0IW04.SM0IW-SM-SMPL-CU-CO-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 9;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SM0IW01.SM0IW-CUST-ERR-FL = "Y";
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0036); /* this field must be numeric*/
      set SM0IM001.SM0IM-SM-SMPL-CU-CO-ID cursor, bold;
    end
  else
    SM0IW04.SM0IW-SM-SMPL-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IM001.SM0IM-SM-SMPL-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0IW04.SM-SMPL-CU-CO-ID = SMWREC.SMW-NUM-CHK-NBR;
  end

  /* **********************************************************************/
  /* CHECK IF EXISTS IN DATABASE*/
  /* **********************************************************************/

  if (SM0IW01.SM0IW-CUST-ERR-FL == "Y") /* cust no not numeric*/
    return;
  end

  /*  */
  /* customer department*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    KUJREC.KUCCOID = SM0IW04.SM-SMPL-CU-CO-ID;
    KUJREC.XNXCD = SM0IW04.SM-SMPL-DEPT-ID;
    SM0IS-FIND-VDEPT0(); /* call io0290 to read the dept table*/
    if (SM0IW-VDEPT001-FOUND-FL == "N") /* dept rec was not found*/
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0087); /* dept not valid for company id*/
      set SM0IM001.SM0IM-SM-SMPL-DEPT-ID cursor, bold;
    end
  end
  /*  */
  /* customer store*/
  /*  */
  if (SM0IW-DISP-ERR-FL == "Y")
    KUMREC.KUCCOID = SM0IW04.SM-SMPL-CU-CO-ID;
    KUMREC.KUMSTRID = SM0IW04.SM-SMPL-CU-STOR-ID;
    SM0IS-FIND-VSTORE(); /* call io0340 to read the store table*/
    if (SM0IW-VSTORE01-FOUND-FL == "N") /* stor rec was not found*/
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0086); /* stor not valid for company id*/
      set SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID cursor, bold;
    end
  end
  /*  */
  /* customer company id*/
  /*  */
  KUCREC.KUCCOID = SM0IW04.SM-SMPL-CU-CO-ID; /* vcmpny01*/
  SM0IS-FIND-VCMPNY(); /* call io0240 to read the cmpny table*/
  if (SM0IW-VCMPNY01-FOUND-FL == "N") /* cmpny rec was not found*/
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      SM0IW01.SM0IW-CUST-ERR-FL = "Y";
      converseLib.validationFailed(0035); /* company id is not valid*/
      set SM0IM001.SM0IM-SM-SMPL-CU-CO-ID cursor, bold;
    end
  else
    SM0IM001.CU-CO-NM[3] = KUCREC.KUCCONM;
  end

  /* **********************************************************************/
  /* CHECK if valid COMPANY-STORE-DEPT is valid for REP-AGENCY*/
  /* **********************************************************************/

  if (SM0IW01.SM0IW-CUST-ERR-FL == "Y" /* cmpny, stor, or dept not valid*/
   || SM0IW-DISP-ERR-FL != "Y")        /* or display desc only*/
    return;
  end

  KUGREC.KUCCOID = SM0IW04.SM-SMPL-CU-CO-ID; /* company*/
  KUGREC.KUMSTRID = SM0IW04.SM-SMPL-CU-STOR-ID; /* store*/
  KUGREC.XNXCD = SM0IW04.SM-SMPL-DEPT-ID; /* dept*/
  KUGREC.YSBCD = "**"; /* resp cd*/
  KUGREC.KUGRPTDT = -1; /* term date*/
  SM0IW01.SM0IW-MORE-VCUREP01-FL = "Y";
  SM0IW01.SM0IW-VCUREP01-FOUND-FL = "N";
  SM0IS-OPEN-VCUREP(); /* call io5110 to open a cursor for cust*/
  while (SM0IW-MORE-VCUREP01-FL == "Y")
    SM0IS-SCAN-VCUREP(); /* call io5110 to fetch next row in cursor*/
    if (SM0IW-MORE-VCUREP01-FL == "Y" /* row found*/
     /* AND SM5REC.SM1AGYID EQ KUGREC.SM1AGYID;          /* cust is valid*/
     && SM5REC.SM4REPID == KUGREC.SM4REPID) /* for rep-agency*/
      SM0IW01.SM0IW-VCUREP01-FOUND-FL = "Y";
      SM0IW01.SM0IW-MORE-VCUREP01-FL = "N";
    end
  end
  SM0IS-CLOS-VCUREP(); /* call io5110 to close the cust cursor*/
  if (SM0IW-VCUREP01-FOUND-FL == "N") /* cust not valid for rep-agency*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0088); /* cust not valid for rep-agency*/
    set SM0IM001.SM0IM-SM-SMPL-CU-CO-ID cursor, bold;
    set SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID bold;
    set SM0IM001.SM0IM-SM-SMPL-DEPT-ID bold;
  end

end // end SM0IS-EDIT-SMP-ACT

// Edit termination date
Function SM0IS-EDIT-TDT()
   /* **********************************************************************/
   /* Edit Rep-Agency termination date*/
   /* **********************************************************************/

   /* Validate date format*/

  SM0IW04.SM-SREP-TDT = 0;

  if (SM0IW04.SM0IW-SM-SREP-TDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    SM0IW01.SM0IW-WORK-CHAR-DATE = SM0IW04.SM0IW-SM-SREP-TDT;
    SM0IS-VAL-DT-FMT(); /* validate date format*/
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      SM0IW04.SM-SREP-TDT = TA2REC.TA2GRGGN;
      SM0IW04.SM0IW-SM-SREP-TDT = TA2REC.TA2GRGB;
      SM0IM001.SM0IM-SM-SREP-TDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* invalid end date*/
      set SM0IM001.SM0IM-SM-SREP-TDT cursor, bold;
    end
  else /* term date not entered*/
    if (SM0IW04.SM-SREP-TRMN-RSN != " ") /* term reason was entered*/
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0089); /* tdt required*/
      set SM0IM001.SM0IM-SM-SREP-TDT cursor, bold;
    end
  end


end // end SM0IS-EDIT-TDT

// Edit vendor number
Function SM0IS-EDIT-VEND()
   /* **********************************************************************/
   /* EDIT vendor number*/
   /* **********************************************************************/
  if (SM0IW04.PV-MSA-VEND-NBR == " ")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0065); /* cannot be blank*/
    set SM0IM001.PV-MSA-VEND-NBR cursor, bold;
    return;
  end

  set VREPVN01 empty;
  VREPVN01.PV-MSA-VEND-NBR = SM0IW04.PV-MSA-VEND-NBR;

  set SQLCA empty;

  call "IO6590" ("S ", SQLCA, VREPVN01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 && 
  SQLCA.VAGen_SQLCODE != 100)
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  ";
    TA1REC.TA1TBLVU = "VREPVN01";
    TA1REC.TA1LOCAT[3] = "SA      ";
    TA1REC.TA1LOCAT[4] = "IO6590";
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end
    COMMAREA.CAUSERA = " ";
    XSPF4();
    exit program;
  end

  if (SQLCA.VAGen_SQLCODE == 0 && 
  SM4REC.SM4REPID != VREPVN01.SM-SREP-ID)
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0082); /* cannot be blank*/
    set SM0IM001.PV-MSA-VEND-NBR cursor, bold;
    return;
  end
end // end SM0IS-EDIT-VEND

// Edit association type code
Function SM0IS-EDIT-XRTCD()
   /* **********************************************************************/
   /* EDIT ASSOCIATION TYPE CODE*/
   /* **********************************************************************/
  SM0IM001.XRT-SREP-TYP-DESC = " ";
  if (SM0IW04.XRT-SREP-ASSN-TYP in XRTTBL.XRTCD
   && XRTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    SM0IM001.XRT-SREP-TYP-DESC = XRTTBL.XRTDESC[sysVar.arrayIndex];
  else
    if (SM0IW-DISP-ERR-FL == "Y")
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0021); /* invalid association type code*/
      set SM0IM001.XRT-SREP-ASSN-TYP cursor, bold;
    end
  end


end // end SM0IS-EDIT-XRTCD

// Call IO0240 read vcmpny01
Function SM0IS-FIND-VCMPNY()
   /* **********************************************************************/
   /* SM0IS-FIND-VCMPNY*/
   /* This routine calls IO0240 to read a unique customer company.*/
   /* If found, the sompany found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0IW-VCMPNY01-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      SM0IW-VCMPNY01-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCMPNY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0240"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VCMPNY

// Call IO0290 read vdept001
Function SM0IS-FIND-VDEPT0()
   /* **********************************************************************/
   /* SM0IS-FIND-VDEPT0*/
   /* This routine calls IO0290 to read a unique customer department.*/
   /* If found, the department found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0IW-VDEPT001-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      SM0IW-VDEPT001-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VDEPT001"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0290"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VDEPT0

// Call IO0160 to read vragcy01
Function SM0IS-FIND-VRAGCY()
   /* **********************************************************************/
   /* SM0IS-FIND-VRAGCY*/
   /* This routine calls IO0160 to read a unique rep-agency record.*/
   /* If found, the rep-agency found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;
  SM5REC.XXXSTAT = "A";

  call "IO0160" ("S ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0IW-VRAGCY01-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      SM0IW-VRAGCY01-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VRAGCY

// Call IO0660 read vrepos01
Function SM0IS-FIND-VREPOS()
   /* **********************************************************************/
   /* SM0IS-FIND-VREPOS*/
   /* This routine calls IO0660 to read a unique Rep-position id row*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0660" ("S ", SQLCA, VREPOS01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    SM0IW-VREPOS01-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      SM0IW-VREPOS01-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VREPOS01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "SA      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0660"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VREPOS

// Call IO0020 read vreps001
Function SM0IS-FIND-VREPS0()
   /* **********************************************************************/
   /* SM0iS-FIND-VREPS0*/
   /* This routine calls IO0020 to read a unique rep record.*/
   /* If found, the rep found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0IW-VREPS001-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      SM0IW-VREPS001-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VREPS0

// Call IO6590 read vrepvn01
Function SM0IS-FIND-VREPVN()
   /* **********************************************************************/
   /* SM0IS-FIND-VREPVN*/
   /* This routine calls IO6590 to read a unique Rep-Vendor row given*/
   /* a rep id.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6590" ("SA", SQLCA, VREPVN01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPVN01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "SA      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6590"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-FIND-VREPVN

// Call IO0050 to read vsagcy01
Function SM0IS-FIND-VSAGCY()
   /* **********************************************************************/
   /* SM0IS-FIND-VSAGCY*/
   /* This routine calls IO0050 to read a unique agency record.*/
   /* If found, the adjustment found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0IW-VSAGCY01-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      SM0IW-VSAGCY01-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0050"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VSAGCY

// Call IO0340 read vstore01
Function SM0IS-FIND-VSTORE()
   /* **********************************************************************/
   /* SM0IS-FIND-VSTORE*/
   /* This routine calls IO0340 to read a unique customer store.*/
   /* If found, the store found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0IW-VSTORE01-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      SM0IW-VSTORE01-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSTORE01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0340"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-FIND-VSTORE

// Format map detail
Function SM0IS-FMT-MAP2-DTL()
  SM0IW-PTR = 1;

  while (SM0IW-PTR <= SM0IW01.SM0IW-MAX-PER-PAGE)
    SM0IM002.SM0IM-SEL[SM0IW-PTR] = " ";
    SM5REC.VRAGCY01-GROUP = SM0IW07.VRAGCY01-GROUP[SM0IW-PTR];
    if (SM5REC.SM1AGYID != " ")
      SM0IM002.SM-SAGCY-ID[SM0IW-PTR] = SM5REC.SM1AGYID;
      SM0IM002.SM-SAGCY-NM[SM0IW-PTR] = SM0IW07.SM-SAGCY-NM[SM0IW-PTR];
      SM0IM002.SM-SREP-PSTN-ABRV[SM0IW-PTR] = SM0IW07.SM-SREP-PSTN-ABRV[SM0IW-PTR];
      SM0IM002.XRT-SREP-ASSN-TYP[SM0IW-PTR] = SM5REC.XRTCD;
      SM0IM002.XXX-STAT[SM0IW-PTR] = SM5REC.XXXSTAT;
      SM0IM002.SM0IM-SM-SREP-EDT[SM0IW-PTR] = SM5REC.SM5EDT;
      SM0IM002.SM0IM-SM-SREP-TDT[SM0IW-PTR] = SM5REC.SM5TDT;
    else
      SM0IM002.SM-SAGCY-ID[SM0IW-PTR] = " ";
      SM0IM002.SM-SAGCY-NM[SM0IW-PTR] = " ";
      SM0IM002.SM-SREP-PSTN-ABRV[SM0IW-PTR] = " ";
      SM0IM002.XRT-SREP-ASSN-TYP[SM0IW-PTR] = " ";
      SM0IM002.XXX-STAT[SM0IW-PTR] = " ";
      SM0IM002.SM0IM-SM-SREP-EDT[SM0IW-PTR] = 0;
      SM0IM002.SM0IM-SM-SREP-TDT[SM0IW-PTR] = 0;
    end

    SM0IW-PTR = SM0IW-PTR + 1;

  end

  SM0IS-RESET-MAP2();

end // end SM0IS-FMT-MAP2-DTL

// Get rep-agency detail desc
Function SM0IS-GET-DTL-DESC()
   /* **********************************************************************/
   /* Get SM0LM001 detail descriptions*/
   /* This routine gets the descriptions for the rep-agency data fields.*/
   /* This also doubles up as the edit routine for the rep-agency details*/
   /* if the SM0IW-DISP-ERR-FL is set to 'Y'.*/
   /* NOTE: This routine picks up the key fields from CURR-DTL.*/
   /* **********************************************************************/
   /* If update and association type is not Nike, process vendor.*/
   /*  */
   /* PROCESS TERMINATION REASON, TERMINATION DATE, & EFFECTIVE DATE*/
   /* **********************************************************************/
  if (SM0IW-DISP-ERR-FL == "Y")
    if (SM0IM001.XRT-SREP-ASSN-TYP != "NE" && 
    SM0IW-PROC-TYP-IND == "U")
      SM0IS-EDIT-VEND(); /* edit vendor number*/
    end
    SM0IS-EDIT-RSN(); /* edit termination reason*/
    SM0IS-EDIT-TDT(); /* edit termination date*/
    SM0IS-EDIT-EDT(); /* edit effective date*/
  end
   /* **********************************************************************/
   /* PROCESS REP-AGENCY PROMO, PERSONAL & SAMPLE ACCOUNT NUMBERS*/
   /* **********************************************************************/
  SM0IS-EDIT-SMP-ACT(); /* edit rep sample number*/
  SM0IS-EDIT-PER-ACT(); /* edit rep personal number*/
  SM0IS-EDIT-PRM-ACT(); /* edit rep promo number*/
   /* **********************************************************************/
   /* PROCESS COMMISSION RATE INDICATOR*/
   /* **********************************************************************/
  if (SM0IW-DISP-ERR-FL == "Y")
    SM0IS-EDIT-COMRT(); /* edit commision rate ind*/
  end
   /* **********************************************************************/
   /* PROCESS ASSOCIATION TYPE*/
   /* **********************************************************************/
  SM0IS-EDIT-XRTCD(); /* edit association type code*/
   /* **********************************************************************/
   /* PROCESS POSITION ID*/
   /* **********************************************************************/
  SM0IS-EDIT-PSTN-ID(); /* edit rep position id*/


end // end SM0IS-GET-DTL-DESC

// Call IO6580 get next vndr nbr
Function SM0IS-GET-NEXT-VND()
   /* **********************************************************************/
   /* SM0IS-GET-NEXT-VND*/
   /* This routine calls IO6580 to read the control record*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6580" ("S ", SQLCA, VSMCTL01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    if (VSMCTL01.SM-NXT-VEND-NBR <= VSMCTL01.SM-MAX-VEND-NBR)
      return;
    else
      set TAEREC empty;
      TAEREC.TAEDESC1 = "VENDOR NUMBER OVERFLOWED.";
      TAEREC.TAEDESC2 = "CANNOT ASSIGN MORE VENDOR NUMBERS";
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "IO6580";
      TA1REC.TA1LOC = "NXT VEND";
      TA1REC.TA1MAP = "SM0IM001";
      try
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
      end
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* return to goal*/
      exit program;
    end
  else
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMCTL01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6580"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-GET-NEXT-VND

// Get date and time for updates
Function SM0IS-GET-TM-STAMP()
   /* **********************************************************************/
   /* Get current date and time*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "GETDATE";

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SM0IW01.SM0IW-CURR-CCYYMMDD = TA2REC.TA2GRGGN;
    SM0IW01.SM0IW-CURR-HHMMSS = TA2REC.TA2TIMEN;
    SM0IW01.SM0IW-CURR-HHMM = TA2REC.TA2TIMHM;
  else
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET-DATE FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GET DATE";
    TA1REC.TA1MAP = "SM0IM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    XSPF4(); /* return to goal*/
    exit program;
  end

end // end SM0IS-GET-TM-STAMP

// Get Rep's vendor number
Function SM0IS-GET-VEND-NBR()
   /* **********************************************************************/
   /* Get Rep's vendor number if it exists*/
   /* **********************************************************************/
  set VREPVN01 empty;
  VREPVN01.SM-SREP-ID = SM4REC.SM4REPID;

  SM0IS-FIND-VREPVN(); /* Call IO6590 read rep vendor*/


end // end SM0IS-GET-VEND-NBR

// Initialize screen fields
Function SM0IS-INIT-SCRN1()
  set SM0IW02 empty; /* initialize current map header record*/
  set SM0IW03 empty; /* initialize previous map header record*/
  set SM0IW04 empty; /* initialize map data*/
  set SM0IW05 empty; /* initialize map data*/

  set SM0IM001 initial; /* init map*/

  SM0IS-RESET-MAP1(); /* reset map attributes*/

end // end SM0IS-INIT-SCRN1

// Initialize
Function SM0IS-INITIALIZE()
  set SMWREC empty; /* subsystem record*/
  set SM0IW01 empty; /* sm0i workarea*/
  set SM0IW02 empty; /* sm0i curr-hdr*/
  set SM0IW03 empty; /* sm0i prev-hdr*/
  set SM0IW04 empty; /* sm0i curr-dtl*/
  set SM0IW05 empty; /* sm0i prev-dtl*/
  set SM0IW06 empty; /* sm0i literal area*/
  set SM0IW07 empty; /* sm0i temp storage layout for map2*/

  SM0IW01.SM0IW-VREPS001-LENGTH = 316; /* sm4rec   record length*/
  SM0IW01.SM0IW-VRAGCY01-LENGTH = 100; /* sm5rec   record length*/
  SM0IW01.SM0IW-VREPVN01-LENGTH = 073; /* vrepvn01 record length*/
  SM0IW01.SM0IW-TSQ-REC-LENGTH = 1242; /* temp sto record length*/
  SM0IW01.SM0IW-MAX-PER-PAGE = 9; /* SM0IM002 detail lines*/
  SM0IW01.TA5APPID = "SM0I"; /* temp sto appl id*/
  sysVar.errorCode = "00000000";
  SM0IW01.SM0IW-VEND-NBR-ASGN-FL = "N"; /* vendor nbr was assigned fl*/
  converseVar.commitOnConverse = 1; /* commit on converse*/

  SM0IS-INIT-SCRN1(); /* initialise screen fields*/

  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* from same system*/
    SMWREC.SMW-SUBSYSTEM-RECORD = COMMAREA.CAUSERA;
  end

  /* ***********************************************************************/
  /* * Check to see if we are being fastpathed into. if so, load the      **/
  /* * rep and agency id to the map and current header record.            **/
  /* ***********************************************************************/

  if (COMMAREA.CAITEM != " ")
    /* reformat agency and rep id from caitem*/
    SM0IW01.CAITEM = COMMAREA.CAITEM; /* reformat area*/
    if (SM0IW01.SM0IW-SM-SREP-ID == 0)
      SM0IW01.SM-SAGCY-ID = " ";
    else
      SM0IM001.SM-SAGCY-ID = SM0IW01.SM-SAGCY-ID; /* move to map*/
      SM0IW02.SM-SAGCY-ID = SM0IW01.SM-SAGCY-ID; /* curr map hdr rec*/
      SM0IM001.SM0IM-SM-SREP-ID = SM0IW01.SM0IW-SM-SREP-ID; /* map*/
      SM0IW02.SM0IW-SM-SREP-ID = SM0IW01.SM0IW-SM-SREP-ID; /* cur hdr*/
      SM0IS-NEW-REP-AGCY();
    end
  else

  /* ***********************************************************************/
  /* * Check to see if we are being PF keyed into. if so, load the        **/
  /* * rep and agency id to the map and current header record.            **/
  /* ***********************************************************************/

    if (SMWREC.SM-SAGCY-ID != " "
     || SMWREC.SM-SREP-ID != 0)
      if (SMWREC.SM-SREP-ID == 0)
        SMWREC.SM-SAGCY-ID = " ";
      else
        SM0IM001.SM-SAGCY-ID = SMWREC.SM-SAGCY-ID; /* move to map*/
        SM0IW02.SM-SAGCY-ID = SMWREC.SM-SAGCY-ID; /* curr map hdr rec*/
        SMWREC.SMW-NUM-CHK-NBR = SMWREC.SM-SREP-ID;
        SMWREC.SMW-NUM-CHK-FUNC = "NUMTOCHR"; /* convert to char*/
        SMWREC.SMW-NUM-CHK-PAD = " "; /* suppress lead 0's*/
        SMWREC.SMW-NUM-CHK-LEN = 4;
        XSSMS-NUM-CHK(); /* nbr convertion rtn*/
        SM0IM001.SM0IM-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* map*/
        SM0IW02.SM0IW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* cur hdr*/
        SM0IS-NEW-REP-AGCY();
      end
    end

  end

end // end SM0IS-INITIALIZE

// Load map1 for ADD
Function SM0IS-LD-MAP1-ADD()
   /* **********************************************************************/
   /* Set SM0IM001 and load for add*/
   /* **********************************************************************/

  SM0IW-DISP-ERR-FL = "Y"; /* highlight errors if found*/
  SM0IW-PROC-TYP-IND = "A"; /* process type is add rep-agcy*/
  SM0IM001.SM0IM-SUBTITLE = "   SALES REP/AGENCY ADD     ";

   /* if the previous screen was blanks, then accept the just entered*/
   /* screen detail.  Otherwise, clear the detail area and prompt for*/
   /* new detail information.*/

  if (SM0IW03.SM0IW-PREV-HDR == SM0IW06.SM0IW-INIT-DTL
   && SM0IW05.SM0IW-PREV-DTL == SM0IW06.SM0IW-INIT-DTL)

    SM0IW03.SM0IW-PREV-HDR = SM0IW02.SM0IW-CURR-HDR; /* save entered Header key*/

    SM0IS-RESET-MAP1(); /* reset SM0iM001 attributes*/
    SM0IS-PROC1-DETAIL(); /* Process Rep-Agency details*/

  else

    SM0IW03.SM0IW-PREV-HDR = SM0IW02.SM0IW-CURR-HDR; /* save entered Header key*/

    set SM0IW05 empty; /* initialize PREV-DTL*/
    SM0IS-PDTL-TO-MAP1(); /* initialize SM0iM001 dtl*/
    SM0IW04.SM0IW-CURR-DTL = SM0IW05.SM0IW-PREV-DTL; /* initialize CURR-DTL*/
    SM0IW04.SM-SREP-EDT = SM0IW05.SM-SREP-EDT;
    SM0IW04.SM-SREP-TDT = SM0IW05.SM-SREP-TDT;
    SM0IW04.SM-PRM-CU-CO-ID = SM0IW05.SM-PRM-CU-CO-ID;
    SM0IW04.SM-PRM-CU-STOR-ID = SM0IW05.SM-PRM-CU-STOR-ID;
    SM0IW04.SM-PRM-DEPT-ID = SM0IW05.SM-PRM-DEPT-ID;
    SM0IW04.SM-PERS-CU-CO-ID = SM0IW05.SM-PERS-CU-CO-ID;
    SM0IW04.SM-PERS-CU-STOR-ID = SM0IW05.SM-PERS-CU-STOR-ID;
    SM0IW04.SM-PERS-DEPT-ID = SM0IW05.SM-PERS-DEPT-ID;
    SM0IW04.SM-SMPL-CU-CO-ID = SM0IW05.SM-SMPL-CU-CO-ID;
    SM0IW04.SM-SMPL-CU-STOR-ID = SM0IW05.SM-SMPL-CU-STOR-ID;
    SM0IW04.SM-SMPL-DEPT-ID = SM0IW05.SM-SMPL-DEPT-ID;
    SM0IS-CLR-DTL-DESC(); /* clear SM0iM001 detail desc*/
    SM0IS-RESET-MAP1(); /* reset SM0iM001 attributes*/
    SM0IW-DISP-ERR-FL = "Y"; /* highlight errors if found*/
    SM0IS-GET-DTL-DESC(); /* get SM0IM001 dtl desc w/ edits*/

  end

end // end SM0IS-LD-MAP1-ADD

// Load map1 for INQUIRY/CHANGE
Function SM0IS-LD-MAP1-CHG()
   /* **********************************************************************/
   /* Set SM0IM001 and load for inquiry or update*/
   /* **********************************************************************/

  SM0IW-DISP-ERR-FL = "N"; /* do not highlight errors*/

  if (COMMAREA.CACHGFL == "Y") /* has change authority*/
    SM0IW-PROC-TYP-IND = "U";
    SM0IM001.SM0IM-SUBTITLE = "SALES REP/AGENCY MAINTENANCE";
  else
    SM0IW-PROC-TYP-IND = "I";
    SM0IM001.SM0IM-SUBTITLE = "SALES REP/AGENCY INFORMATION";
  end

  SM0IW03.SM0IW-PREV-HDR = SM0IW02.SM0IW-CURR-HDR; /* save entered Header key*/
  SM0IS-RAGY-TO-PDTL(); /* save VRAGCY01 info to prev dtl*/
  SM0IW05.PV-MSA-VEND-NBR = SM0IW04.PV-MSA-VEND-NBR;
  SM0IS-PDTL-TO-MAP1(); /* move save dtl info to SM0IM001*/
  SM0IW04.SM0IW-CURR-DTL = SM0IW05.SM0IW-PREV-DTL; /* move saved dtl to curr dtl*/
  SM0IW04.SM-PRM-CU-CO-ID = SM0IW05.SM-PRM-CU-CO-ID;
  SM0IW04.SM-PRM-CU-STOR-ID = SM0IW05.SM-PRM-CU-STOR-ID;
  SM0IW04.SM-PRM-DEPT-ID = SM0IW05.SM-PRM-DEPT-ID;
  SM0IW04.SM-PERS-CU-CO-ID = SM0IW05.SM-PERS-CU-CO-ID;
  SM0IW04.SM-PERS-CU-STOR-ID = SM0IW05.SM-PERS-CU-STOR-ID;
  SM0IW04.SM-PERS-DEPT-ID = SM0IW05.SM-PERS-DEPT-ID;
  SM0IW04.SM-SMPL-CU-CO-ID = SM0IW05.SM-SMPL-CU-CO-ID;
  SM0IW04.SM-SMPL-CU-STOR-ID = SM0IW05.SM-SMPL-CU-STOR-ID;
  SM0IW04.SM-SMPL-DEPT-ID = SM0IW05.SM-SMPL-DEPT-ID;
  SM0IW04.SM-SREP-EDT = SM0IW05.SM-SREP-EDT;
  SM0IW04.SM-SREP-TDT = SM0IW05.SM-SREP-TDT;

  SM0IS-GET-DTL-DESC(); /* get SM0IM001 detail desc*/

  SM0IS-RESET-MAP1(); /* reset map based on new data*/

end // end SM0IS-LD-MAP1-CHG

// Load temp storage to WS rec
Function SM0IS-LOAD-DTL()
  TA5REC.TA5TSQIX = SM0IW01.SM0IW-REQUESTED-PAGE;

  SM0IS-RD-TMP-STRG(); /* read requested page from temp storage*/

  SM0IS-FMT-MAP2-DTL(); /* move ws detail to map detail*/

end // end SM0IS-LOAD-DTL

// Move SM0IM001 to CURR-DTL
Function SM0IS-MAP1-TO-CDTL()
   /* **********************************************************************/
   /* move SM0IM001 to CURR-DTL*/
   /* **********************************************************************/

  SM0IW04.PV-MSA-VEND-NBR = SM0IM001.PV-MSA-VEND-NBR;
  SM0IW04.SM-SREP-PSTN-ID = SM0IM001.SM-SREP-PSTN-ID;
  SM0IW04.XRT-SREP-ASSN-TYP = SM0IM001.XRT-SREP-ASSN-TYP;
  SM0IW04.SM-SREP-COMRT-IND = SM0IM001.SM-SREP-COMRT-IND;

  SM0IW04.SM0IW-SM-PRM-CU-CO-ID = SM0IM001.SM0IM-SM-PRM-CU-CO-ID;
  SM0IW04.SM0IW-SM-PRM-CU-STOR-ID = SM0IM001.SM0IM-SM-PRM-CU-STOR-ID;
  SM0IW04.SM0IW-SM-PRM-DEPT-ID = SM0IM001.SM0IM-SM-PRM-DEPT-ID;
  SM0IW04.SM0IW-SM-PERS-CU-CO-ID = SM0IM001.SM0IM-SM-PERS-CU-CO-ID;
  SM0IW04.SM0IW-SM-PERS-CU-STOR-ID = SM0IM001.SM0IM-SM-PERS-CU-STOR-ID;
  SM0IW04.SM0IW-SM-PERS-DEPT-ID = SM0IM001.SM0IM-SM-PERS-DEPT-ID;
  SM0IW04.SM0IW-SM-SMPL-CU-CO-ID = SM0IM001.SM0IM-SM-SMPL-CU-CO-ID;
  SM0IW04.SM0IW-SM-SMPL-CU-STOR-ID = SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID;
  SM0IW04.SM0IW-SM-SMPL-DEPT-ID = SM0IM001.SM0IM-SM-SMPL-DEPT-ID;

  SM0IW04.SM0IW-SM-SREP-EDT = SM0IM001.SM0IM-SM-SREP-EDT;
  SM0IW04.SM0IW-SM-SREP-TDT = SM0IM001.SM0IM-SM-SREP-TDT;
  SM0IW04.SM-SREP-TRMN-RSN = SM0IM001.SM-SREP-TRMN-RSN;


end // end SM0IS-MAP1-TO-CDTL

// Move SM0IM001 to CURR-HDR
Function SM0IS-MAP1-TO-CHDR()
   /* **********************************************************************/
   /* move SM0IM001 to CURR-HDR*/
   /* **********************************************************************/

  SM0IW02.SM-SAGCY-ID = SM0IM001.SM-SAGCY-ID;
  SM0IW02.SM0IW-SM-SREP-ID = SM0IM001.SM0IM-SM-SREP-ID;


end // end SM0IS-MAP1-TO-CHDR

// Move map1 rep info to map2
Function SM0IS-MAP1-TO-MAP2()
  /* ************************************************************************/
  /* Move SM0IM001 to SM0IM002*/
  /* ************************************************************************/

  SM0IM002.SM0IM-SM-SREP-ID = SM0IM001.SM0IM-SM-SREP-ID;
  SM0IM002.XXX-LAST-NM = SM0IM001.XXX-LAST-NM;
  SM0IM002.XXX-FRST-NM = SM0IM001.XXX-FRST-NM;
  SM0IM002.XXX-MID-INIT = SM0IM001.XXX-MID-INIT;


end // end SM0IS-MAP1-TO-MAP2

// Init pop-up for vrepos
Function SM0IS-MAP3-INIT-WK()
   /* *******************************************************************/
   /* init SM0IW08 rep position id workarea*/
   /* *******************************************************************/

  set SM0IM003 initial; /* Clear the map area*/
  set SM0IW08 empty; /* clear working storage*/
  SM0IW08.SM0IW-CT1 = 1; /* Table index*/
  SM0IW08.SM0IW-CT2 = 1; /* Screen index*/
  SM0IW08.SM0IW-SIX = 0; /* End of first page save index*/
  SM0IW08.SM0IW-PIX = 0; /* Initialize pass index to zero*/
  SM0IW08.SM0IW-FFL = "Y"; /* first time thru flag*/
  SM0IW08.SM0IW-ERR = "N"; /* Scroll error flag to no*/
  SM0IW08.SM0IW-END = "N"; /* End of pop up window session flag*/
  SM0IW08.SM0IW-TBL-SZ = 200; /* Internal table size for pop-up*/


end // end SM0IS-MAP3-INIT-WK

// Load VREPOS01 into SM0IW08
Function SM0IS-MAP3-LD-RPOS()
  /* ************************************************************************/
  /* Load all active VREPOS01 rows into SM0IW08*/
  /* ************************************************************************/

  set VREPOS01 empty;

  SM0IS-OPEN-VREPOS(); /* open cursor*/

  SM0IW-PTR = 0; /* work table array index*/
  SM0IW01.SM0IW-MORE-VREPOS01-FL = "Y";

  while (SM0IW01.SM0IW-MORE-VREPOS01-FL == "Y") /* more rep position id*/

    SM0IS-SCAN-VREPOS(); /* fetch a repos row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* repos row found*/
      if (VREPOS01.XXXSTAT == "A") /* repos is active*/
        SM0IW-PTR = SM0IW-PTR + 1;
        if (SM0IW-PTR == SM0IW08.SM0IW-TBL-SZ) /* table full*/
          set TAEREC empty;
          TAEREC.TAEDESC2 = "INTERNAL TABLE FOR REP POSITION POP-UP";
          TAEREC.TAEDESC2 = "SCREEN HAS EXCEED THE LIMIT";
          TA1REC.TA1TYPE = "APPL"; /* application error*/
          TA1REC.TA1FUNC = "RETN"; /* post*/
          TA1REC.TA1LOC = "SM0IS-MAP3-LD-RPOS";
          try
            call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
          end /* message formatter*/
          XSPF4(); /* pass control to menu*/
          exit program;
        else
          SM0IW08.SM-SREP-PSTN-ID[SM0IW-PTR] = VREPOS01.SM-SREP-PSTN-ID;
          SM0IW08.SM-SREP-PSTN-DESC[SM0IW-PTR] = VREPOS01.SM-SREP-PSTN-DESC;
        end
      end

    else /* no more repos rows*/
      SM0IS-CLOS-VREPOS(); /* close repos cursor*/

      if (SM0IW01.SM0IW-PTR <= 0) /* no data*/
        converseLib.validationFailed(050); /* no prompt or help for this field*/
        SM0IW-ERR-FL = "Y"; /* set SM0I error flag*/
        SM0IW-END = "Y"; /* end the pop-up window session fl*/
      else
        SM0IW-PTR = SM0IW-PTR + 1;
        SM0IW08.SM-SREP-PSTN-ID[SM0IW-PTR] = "9999999999";
      end
    end
  end


end // end SM0IS-MAP3-LD-RPOS

// Get new Rep-Agency record
Function SM0IS-NEW-REP-AGCY()
   /* **********************************************************************/
   /* Get new rep-agency record*/
   /* This routine checks if the entered agency id and rep id are valid.*/
   /* If they are, then the vragcy01 table is read.  If the rep-agency was*/
   /* not found, then assume ADD process and prep the map for add if*/
   /* userid has add authority.   If found, then load the data on the*/
   /* map.  Prompt for changes if userid has change authority.*/
   /* **********************************************************************/

  SM0IS-EDIT-REP-ID(); /* check if valid rep entered*/

  SM0IS-EDIT-AGCY-ID(); /* check if valid agency entered*/

  if (SM0IW-ERR-FL == "Y")
    return;
  end

  SM5REC.SM1AGYID = SM1REC.SM1AGYID;
  SM5REC.SM4REPID = SM4REC.SM4REPID;

  SM0IS-FIND-VRAGCY(); /* call io0160 to read the ragcy table*/

  if (SM0IW-VRAGCY01-FOUND-FL == "N") /* rep-agency rec was not found*/
    if (COMMAREA.CAADDFL == "N") /* user id has no add authority*/
      set SM0IM001.SM-SAGCY-ID bold, cursor;
      set SM0IM001.SM0IM-SM-SREP-ID bold;
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(091); /* rep not currently assigned to agency*/
    else /* user id has add authority*/
      SM0IS-LD-MAP1-ADD(); /* load SM0IM001 for add*/
    end
  else /* agency rec was found*/
    SM0IS-LD-MAP1-CHG(); /* load SM0IM001 for inq or change*/
  end

end // end SM0IS-NEW-REP-AGCY

// Call IO5110 open cursor
Function SM0IS-OPEN-VCUREP()
   /* **********************************************************************/
   /* SM0IS-OPEN-VCUREP*/
   /* This routine calls IO5110 to open a CU-REP cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO5110" ("S1", SQLCA, KUGREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCUREP01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO5110"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-OPEN-VCUREP

// Call IO0160 open vragcy csr
Function SM0IS-OPEN-VRAGCY()
   /* **********************************************************************/
   /* SM0IS-OPEN-VRAGCY*/
   /* This routine calls IO0160 to open a Rep-Agency assignment cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("SS", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "SS      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-OPEN-VRAGCY

// Call IO0660 open vrepos csr
Function SM0IS-OPEN-VREPOS()
   /* **********************************************************************/
   /* SM0IS-OPEN-VREPOS*/
   /* This routine calls IO0660 to open a Rep-Position id cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0660" ("S1", SQLCA, VREPOS01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPOS01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0660"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-OPEN-VREPOS

// Move PREV-DTL to SM0IM001
Function SM0IS-PDTL-TO-MAP1()
   /* **********************************************************************/
   /* move PREV-DTL to SM0IM001*/
   /* **********************************************************************/

  SM0IM001.PV-MSA-VEND-NBR = SM0IW05.PV-MSA-VEND-NBR;
  SM0IM001.SM-SREP-PSTN-ID = SM0IW05.SM-SREP-PSTN-ID;
  SM0IM001.XRT-SREP-ASSN-TYP = SM0IW05.XRT-SREP-ASSN-TYP;
  SM0IM001.SM-SREP-COMRT-IND = SM0IW05.SM-SREP-COMRT-IND;

  SM0IM001.SM0IM-SM-PRM-CU-CO-ID = SM0IW05.SM0IW-SM-PRM-CU-CO-ID;
  SM0IM001.SM0IM-SM-PRM-CU-STOR-ID = SM0IW05.SM0IW-SM-PRM-CU-STOR-ID;
  SM0IM001.SM0IM-SM-PRM-DEPT-ID = SM0IW05.SM0IW-SM-PRM-DEPT-ID;
  SM0IM001.SM0IM-SM-PERS-CU-CO-ID = SM0IW05.SM0IW-SM-PERS-CU-CO-ID;
  SM0IM001.SM0IM-SM-PERS-CU-STOR-ID = SM0IW05.SM0IW-SM-PERS-CU-STOR-ID;
  SM0IM001.SM0IM-SM-PERS-DEPT-ID = SM0IW05.SM0IW-SM-PERS-DEPT-ID;
  SM0IM001.SM0IM-SM-SMPL-CU-CO-ID = SM0IW05.SM0IW-SM-SMPL-CU-CO-ID;
  SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID = SM0IW05.SM0IW-SM-SMPL-CU-STOR-ID;
  SM0IM001.SM0IM-SM-SMPL-DEPT-ID = SM0IW05.SM0IW-SM-SMPL-DEPT-ID;

  SM0IM001.SM0IM-SM-SREP-EDT = SM0IW05.SM0IW-SM-SREP-EDT;
  SM0IM001.SM0IM-SM-SREP-TDT = SM0IW05.SM0IW-SM-SREP-TDT;
  SM0IM001.SM-SREP-TRMN-RSN = SM0IW05.SM-SREP-TRMN-RSN;

   /* **********************************************************************/
   /* move saved read-only fields in PREV-DTL to SM0IM001*/
   /* **********************************************************************/

  SM0IM001.SM0IM-ZZ-SDT = SM0IW05.ZZ-SDT;
  SM0IM001.SM0IM-ZZ-CHNG-DT = SM0IW05.ZZ-CHNG-DT;
  SM0IM001.XXX-STAT = SM0IW05.XXX-STAT;
  if (SM0IW05.XXX-STAT == "A")
    SM0IM001.SM0IM-XXX-STAT-DESC = "ACTIVE";
  else
    if (SM0IW05.XXX-STAT == "I")
      SM0IM001.SM0IM-XXX-STAT-DESC = "INACTIVE";
    else
      SM0IM001.SM0IM-XXX-STAT-DESC = " ";
    end
  end

end // end SM0IS-PDTL-TO-MAP1

// Pop-up for vrepos01
Function SM0IS-POPUP-PSTN()
   /* *******************************************************************/
   /* popup sm-srep-pstn-id rep position id*/
   /* *******************************************************************/

  SM0IS-MAP3-INIT-WK(); /* initialize repos pop up workarea*/
  SM0IS-MAP3-LD-RPOS(); /* load VREPOS01 into SM0IW08*/

  SM0IW-PROMPT-ENTERED-FL = "Y"; /* pop-up exists for field*/
  set SM0IM001.SM-SREP-PSTN-ID cursor;
  SM0IW08.SM0IW-HDR = "           REP POSITION ID";

  while (SM0IW08.SM0IW-END == "N") /* not end of process*/
    SM0I-10100(); /* popup pstn id window*/
  end

  if (SM0IW08.SM0IW-PIX > 0 /* selection was made*/
   && SM0IW01.SM0IW-RETURN-PROMPT-FL == "Y") /* return the pop-up code*/
    SM0IM001.SM-SREP-PSTN-ID = SM0IW08.SM-SREP-PSTN-ID[SM0IW-PIX];
    SM0IM001.SM-SREP-PSTN-DESC = SM0IW08.SM-SREP-PSTN-DESC[SM0IW-PIX];
    converseLib.validationFailed(010); /* press enter again to validate changes*/
  end

end // end SM0IS-POPUP-PSTN

// Pop-up for xrtcd
Function SM0IS-POPUP-XRT()
   /* *******************************************************************/
   /* popup xrtcd rep-agency association code*/
   /* *******************************************************************/

  XPXX001(); /* initialize*/

  SM0IW-PROMPT-ENTERED-FL = "Y"; /* pop-up exists for field*/
  set SM0IM001.XRT-SREP-ASSN-TYP cursor;
  XX0XW02.XX0XWHDR = "         REP ASSOCIATION TYPE";

  while (XX0XW02.XX0XWEND == "N") /* not end of process*/
    XPXRT01(); /* popup xrtcd window*/
  end

  if (XX0XW02.XX0XWPIX > 0 /* selection was made*/
   && SM0IW01.SM0IW-RETURN-PROMPT-FL == "Y") /* return the pop-up code*/
    SM0IM001.XRT-SREP-ASSN-TYP = XRTTBL.XRTCD[XX0XWPIX];
    SM0IM001.XRT-SREP-TYP-DESC = XRTTBL.XRTDESC[XX0XWPIX];
    converseLib.validationFailed(010); /* press enter again to validate changes*/
  end

end // end SM0IS-POPUP-XRT

// Purge temp storage
Function SM0IS-PRG-TMP-STRG()
  set TA5REC empty; /* clear ts parms*/

  TA5REC.TA5FNCCD = "P"; /* purge queue*/
  TA5REC.TA5APPID = SM0IW01.TA5APPID; /* application ID*/

  try
    call "TA0050" (SM0IW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage*/

  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
  else /* an error occurred*/
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post, no abend*/
    TA1REC.TA1LOCAT[1] = "PURGE TS"; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    XSPF4(); /* pass control to menu*/
    exit program;
  end

end // end SM0IS-PRG-TMP-STRG

// Process Rep-Agency details
Function SM0IS-PROC1-DETAIL()
   /* **********************************************************************/
   /* Process SM0IM001 details*/
   /* **********************************************************************/

  SM0IW-DISP-ERR-FL = "Y"; /* highlight errors if found*/

  SM0IS-GET-DTL-DESC(); /* get SM0IM001 dtl desc w/ edits*/

  if (SM0IW-ERR-FL != "Y") /* no errors found editing detail*/
    if (converseVar.eventKey is pf12) /* edit only*/

      converseLib.validationFailed(0013); /* Press enter again to accept*/

    else /* Enter was pressed*/

      SM0IS-UPD-TBL-PROC(); /* Update tables process*/

    end /* end PF12 or ENTER pressed*/
  end /* end no errors from edit detail*/

end // end SM0IS-PROC1-DETAIL

// Enter key was pressed
Function SM0IS-PROC1-ENTER()
   /* **********************************************************************/
   /* Process ENTER for SM0IM001*/
   /* **********************************************************************/

  if (SM0IM001.CATOAP != " ") /* Fast path was filled*/
    SM0IS-PROC1-FPATH(); /* process fastpath*/
    if (SM0IW-ERR-FL == "Y")
      return;
    end
  else
    if (SM0IM001.CAITEM != " ") /* Fast path item was filled*/
      SM0IM001.CAITEM = " ";
    end
  end


  if (SM0IW02.SM0IW-CURR-HDR == SM0IW06.SM0IW-INIT-HDR) /* HDR blanks*/
  /* AND SM0IW04.SM0IW-CURR-DTL EQ SM0IW06.SM0IW-INIT-DTL; /* DTL blanks*/

    set SM0IM001 initial;
    set SM0IW03 empty;
    set SM0IW05 empty;
    SM0IS-RESET-MAP1();
    set SM0IM001.SM0IM-SM-SREP-ID cursor, bold;
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0060); /* Enter rep id*/
    return;

  end


  if (SM0IW02.SM0IW-CURR-HDR != SM0IW03.SM0IW-PREV-HDR) /* HDR changed*/
    SM0IS-NEW-REP-AGCY(); /* Retrive entered rep-agency*/

  else /* no HDR change*/
    if (SM0IW04.SM0IW-CURR-DTL != SM0IW05.SM0IW-PREV-DTL) /* DTL changed*/
      SM0IS-PROC1-DETAIL(); /* Process ragcy detail info*/

    else /* no DTL change*/
      SM0IW-ERR-FL = "Y";
      converseLib.validationFailed(0012); /* No changes made*/

    end
  end


end // end SM0IS-PROC1-ENTER

// Process fast path for SM0IM001
Function SM0IS-PROC1-FPATH()
   /* **********************************************************************/
   /* Process Fast Path for SM0IM001*/
   /* **********************************************************************/

  if (SM0IW02.SM0IW-CURR-HDR 
   != SM0IW03.SM0IW-PREV-HDR /* header key changed*/
   || SM0IW04.SM0IW-CURR-DTL 
   != SM0IW05.SM0IW-PREV-DTL) /* detail changed*/

    set SM0IM001.CATOAP cursor, bold;
    set SM0IM001.CAITEM bold;
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(69); /* cannot fpath changes*/

  else /* nothing on the screen changed*/
    if (converseVar.eventKey is pf12) /* edit only key was pressed*/
      converseLib.validationFailed(0004); /* Can't fastpath w/ pfkey*/
      SM0IW-ERR-FL = "Y";
      set SM0IM001.CATOAP cursor, bold;
      set SM0IM001.CAITEM bold;
    else /* enter was pressed*/
      COMMAREA.CATOAP = SM0IM001.CATOAP; /* move to commarea*/
      COMMAREA.CAITEM = SM0IM001.CAITEM;
      COMMAREA.CAUSERA = " "; /* clear user area*/

      if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* transfer in SM system*/
        SM0IS-SET-CAUSERA(); /* set subsystem rec & causera*/
      end
      XSEXIT(); /* transfer control*/

      SM0IS-NEW-REP-AGCY(); /* reload rep-agency data*/

      set SM0IM001.CATOAP cursor, bold;
      set SM0IM001.CAITEM bold;
      SM0IW-ERR-FL = "Y";
      SM0IM001.CAMSG = COMMAREA.CAMSG; /* transfer failed*/

    end
  end


end // end SM0IS-PROC1-FPATH

// Cancel key pressed for map1
Function SM0IS-PROC1-PA2()
   /* **********************************************************************/
   /* Process CANCEL key for SM0IM001*/
   /* **********************************************************************/

  if (SM0IW02.SM0IW-CURR-HDR == SM0IW03.SM0IW-PREV-HDR /* no hdr change*/
   && SM0IW04.SM0IW-CURR-DTL == SM0IW05.SM0IW-PREV-DTL) /* no dtl change*/

    set SM0IM001 initial; /* init map*/
    set SM0IW02 empty; /* init CURR-HDR*/
    set SM0IW03 empty; /* init PREV-HDR*/
    set SM0IW04 empty; /* init CURR-DTL*/
    set SM0IW05 empty; /* init PREV-DTL*/
    SM0IS-RESET-MAP1(); /* reset map attibutes*/

  else

    set SM0IM001 initial; /* init map*/
    SM0IW02.SM0IW-CURR-HDR = SM0IW03.SM0IW-PREV-HDR; /* reset to old key*/
    SM0IM001.SM-SAGCY-ID = SM0IW03.SM-SAGCY-ID;
    SM0IM001.SM0IM-SM-SREP-ID = SM0IW03.SM0IW-SM-SREP-ID;
    set SM0IW04 empty; /* init CURR-DTL*/
    set SM0IW05 empty; /* init PREV-DTL*/
    converseLib.validationFailed(0040); /* Updates cancelled*/
    SM0IS-NEW-REP-AGCY(); /* refresh rep-agency info from the database*/

  end

end // end SM0IS-PROC1-PA2

// Valid PFkey was pressed
Function SM0IS-PROC1-PFKEYS()
   /* **********************************************************************/
   /* Process valid PFkey was pressed*/
   /* PF1, PF3, PF4, or PF5*/
   /* **********************************************************************/

  if (SM0IW02.SM0IW-CURR-HDR == SM0IW03.SM0IW-PREV-HDR /* no HDR chng*/
   && SM0IW04.SM0IW-CURR-DTL == SM0IW05.SM0IW-PREV-DTL) /* no DTL chng*/
    if (SM0IM001.CATOAP != " ") /* Fast path was filled*/
      converseLib.validationFailed(0004); /* Can't Fastpath & PFkey*/
      SM0IW-ERR-FL = "Y";
      set SM0IM001.CATOAP cursor, bold;
      return;
    else
      if (SM0IM001.CAITEM != " ") /* Fast path item was filled*/
        SM0IM001.CAITEM = " ";
      end
    end
  else /* sm0iM001 changed*/
    if (SM0IW04.SM0IW-CURR-DTL != SM0IW05.SM0IW-PREV-DTL) /* DTL chng*/
      converseLib.validationFailed(0068); /* Can't PFkey w/ changes*/
      SM0IW-ERR-FL = "Y";
      return;
    else /* HDR chng*/
      if (converseVar.eventKey is pf1 /* HELP key is pressed*/
       || converseVar.eventKey is pf3 /* RETURN key is pressed*/
       || converseVar.eventKey is pf4) /* MAIN MENU key is pressed*/
      else
        converseLib.validationFailed(0068); /* Can't PFkey w/ changes*/
        SM0IW-ERR-FL = "Y";
        return;
      end
    end
  end


  if (converseVar.eventKey is pf1) /* HELP key is pressed*/
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help screen*/
    SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0IW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf3) /* RETURN key is pressed*/
    COMMAREA.CATOAP = "SM0H";
    COMMAREA.CAITEM = " ";
    SM0IS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0IW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf4) /* RETURN key is pressed*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to GOAL menu*/
    SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0IW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf5) /* Go to SLS MGRS FOR AN AGENCY*/
    COMMAREA.CATOAP = "SM0C";
    COMMAREA.CAITEM = " ";
    SM0IS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0IW-ERR-FL = "Y";
  end


end // end SM0IS-PROC1-PFKEYS

// Process Pop-up
Function SM0IS-PROC1-POPUP()
   /* ******************************************************************/
   /* * module:    SM0IS-PROC1-POPUP*/
   /* * purpose:   pop up window for select fields*/
   /* ******************************************************************/

  SM0IW01.SM0IW-PROMPT-ENTERED-FL = "N"; /* reset chk for prompt*/
  SM0IW01.SM0IW-RETURN-PROMPT-FL = "N"; /* do not retrieve data*/

   /* *******************************************************************/
   /* determine if any selection will be returned to the map          **/
   /* *******************************************************************/
  if (COMMAREA.CAADDFL == "Y" /* authorized for add*/
   && SM0IW05.SM0IW-PREV-DTL == 
  SM0IW06.SM0IW-INIT-DTL)     /* adding an agency row - prev dtl is empty*/
    SM0IW01.SM0IW-RETURN-PROMPT-FL = "Y"; /* move sel data to map*/
  else
    if (COMMAREA.CACHGFL == "Y" /* authorized for change*/
     && SM0IW05.XXX-STAT == "A") /* and row held is active*/
      SM0IW01.SM0IW-RETURN-PROMPT-FL = "Y"; /* move sel data to map*/
    end
  end

   /* *******************************************************************/
   /* if position id is visible on screen, check if rep position      **/
   /* was prompted for                                                **/
   /* *******************************************************************/
  if (COMMAREA.CAILVL[1] == "Y" /* authorized for extended inq*/
   || COMMAREA.CAADDFL == "Y"   /* authorized to add*/
   || COMMAREA.CACHGFL == "Y")  /* authorized to modify record*/
    if (SM0IM001.SM-SREP-PSTN-ID is cursor)
      SM0IS-POPUP-PSTN();
    end
  end

   /* *******************************************************************/
   /* check if rep association type was prompted for                  **/
   /* *******************************************************************/
  if (SM0IW-PROMPT-ENTERED-FL == "N")
    if (SM0IM001.XRT-SREP-ASSN-TYP is cursor)
      SM0IS-POPUP-XRT();
    end
  end

  converseLib.clearScreen();

  if (SM0IW01.SM0IW-PROMPT-ENTERED-FL == "N")
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(050); /* no prompt or help for this field*/
  end


end // end SM0IS-PROC1-POPUP

// Enter key was pressed
Function SM0IS-PROC2-ENTER()
  /* ************************************************************************/
  /* ENTER key was pressed*/
  /* ************************************************************************/

  /* ***********************************************************************/
  /* *  edit select fields.                                               **/
  /* ***********************************************************************/
  move SM0IW-MAX-PER-PAGE to SM0IW-PTR withV60Compat;
  SM0IW-SEL-COUNT = 0;
  SM0IW-SEL-LINE = 0;
  while (SM0IW-PTR >= 1) /* loop through backwards*/
    if (SM0IM002.SM0IM-SEL[SM0IW-PTR] != " ") /* line was selected*/
      SM0IW-SEL-COUNT = SM0IW-SEL-COUNT + 1; /* count selected lines*/
      move SM0IW-PTR to SM0IW-SEL-LINE withV60Compat; /* save top most selected line*/
    end
    SM0IW-PTR = SM0IW-PTR - 1; /* one line up*/
  end

  if (SM0IW-SEL-COUNT == 0) /* none selected*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(012); /* no changes entered*/
    return;
  end

  if (SM0IW-SEL-COUNT > 1) /* more than 1 line selected*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(008); /* only 1 may be selected*/
    return;
  end

  /* ***********************************************************************/
  /* *  process the one selected line                                     **/
  /* ***********************************************************************/
  SM0IW-SELECTED-FL = "Y"; /* a line was selected*/
  SM5REC.VRAGCY01-GROUP = SM0IW07.VRAGCY01-GROUP[SM0IW-SEL-LINE];
  SM0IS-RELOAD-DATA(); /* re-load data for map1*/


end // end SM0IS-PROC2-ENTER

// Valid PF key was pressed
Function SM0IS-PROC2-PFKEYS()
  /* ************************************************************************/
  /* Process valid pfkey pressed*/
  /* ************************************************************************/

  if (converseVar.eventKey is pf1) /* help requested*/
    SM0IS-PRG-TMP-STRG(); /* purge temporary storage*/
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help system*/
    SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    SM0IW-ERR-FL = "Y";
    return;
  end
  if (converseVar.eventKey is pf4) /* transfer to MN0M requested*/
    SM0IS-PRG-TMP-STRG(); /* purge temporary storage*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* pass control*/
    SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    SM0IW-ERR-FL = "Y";
    return;
  end

  if (converseVar.eventKey is pf3) /* return to SM0IM001*/
    SM0IS-PRG-TMP-STRG(); /* purge temporary storage*/
    SM5REC.VRAGCY01-GROUP = SM0IW01.VRAGCY01-GROUP;
    SM0IS-RELOAD-DATA(); /* reload data for map1*/
  end

  SM0IW-PTR = 0;
  while (SM0IW-PTR < SM0IW01.SM0IW-MAX-PER-PAGE)
    SM0IW-PTR = SM0IW-PTR + 1;
    if (SM0IM002.SM0IM-SEL[SM0IW-PTR] != " ")
      converseLib.validationFailed(68); /* cannot PF key with changes*/
      SM0IW-ERR-FL = "Y";
      return;
    end
  end

  if (converseVar.eventKey is pf7 /* page up*/
   || converseVar.eventKey is pf8) /* page down*/
    SM0IS-PROC2-SCROLL();
  end


end // end SM0IS-PROC2-PFKEYS

// Process scroll
Function SM0IS-PROC2-SCROLL()
  if (converseVar.eventKey is pf7) /* scroll backwards requested*/
    if (SM0IW01.SM0IW-REQUESTED-PAGE <= 1)
      converseLib.validationFailed(3); /* cannot page up any further*/
      SM0IW-ERR-FL = "Y";
    else
      SM0IW01.SM0IW-REQUESTED-PAGE = SM0IW01.SM0IW-REQUESTED-PAGE - 1;
    end
  end

  if (converseVar.eventKey is pf8) /* scroll forwards requested*/
    if (SM0IW01.SM0IW-REQUESTED-PAGE >= SM0IW01.SM0IW-HIGHEST-PAGE)
      converseLib.validationFailed(7); /* cannot page down any further*/
    else
      SM0IW01.SM0IW-REQUESTED-PAGE = SM0IW01.SM0IW-REQUESTED-PAGE + 1;
    end
  end

  if (SM0IW-ERR-FL != "Y")
    SM0IS-LOAD-DTL(); /* load requested page to map detail*/
  end


end // end SM0IS-PROC2-SCROLL

// Move VRAGCY01 to PREV-DTL
Function SM0IS-RAGY-TO-PDTL()
   /* **********************************************************************/
   /* move VRAGCY01 to PREV-DTL*/
   /* **********************************************************************/

  set SM0IW05 empty;

  SM0IW05.SM-SREP-PSTN-ID = SM5REC.SM-SREP-PSTN-ID;
  SM0IW05.XRT-SREP-ASSN-TYP = SM5REC.XRTCD;
  SM0IW05.SM-SREP-COMRT-IND = SM5REC.SM5COMIN;

  SM0IW05.SM-PRM-CU-CO-ID = SM5REC.SM5PRMCU;
  SM0IW05.SM-PRM-CU-STOR-ID = SM5REC.SM5PRMST;
  SM0IW05.SM-PRM-DEPT-ID = SM5REC.SM-PRM-DEPT-ID;
  SM0IW05.SM-PERS-CU-CO-ID = SM5REC.SM5PRSCU;
  SM0IW05.SM-PERS-CU-STOR-ID = SM5REC.SM5PRSST;
  SM0IW05.SM-PERS-DEPT-ID = SM5REC.SM-PERS-DEPT-ID;
  SM0IW05.SM-SMPL-CU-CO-ID = SM5REC.SM5SMPCU;
  SM0IW05.SM-SMPL-CU-STOR-ID = SM5REC.SM5SMPST;
  SM0IW05.SM-SMPL-DEPT-ID = SM5REC.SM-SMPL-DEPT-ID;

  SM0IW05.SM-SREP-EDT = SM5REC.SM5EDT;
  SM0IW05.SM-SREP-TDT = SM5REC.SM5TDT;
  SM0IW05.SM-SREP-TRMN-RSN = SM5REC.SM5TRSN;

  /* **********************************************************************/
  /* Convert customer numbers to character*/
  /* **********************************************************************/
  SMWREC.SMW-NUM-CHK-FUNC = "NUMTOCHR"; /* convert to char*/
  SMWREC.SMW-NUM-CHK-PAD = " "; /* suppress lead 0's*/
  SMWREC.SMW-NUM-CHK-LEN = 9;

  if (SM5REC.SM5PRMCU != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM5PRMCU;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-PRM-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
  end
  if (SM5REC.SM5PRSCU != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM5PRSCU;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-PERS-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
  end
  if (SM5REC.SM5SMPCU != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM5SMPCU;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-SMPL-CU-CO-ID = SMWREC.SMW-NUM-CHK-WORD;
  end

  SMWREC.SMW-NUM-CHK-LEN = 4;

  if (SM5REC.SM5PRMST != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM5PRMST;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-PRM-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
  end
  if (SM5REC.SM5PRSST != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM5PRSST;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-PERS-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
  end
  if (SM5REC.SM5SMPST != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM5SMPST;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-SMPL-CU-STOR-ID = SMWREC.SMW-NUM-CHK-WORD;
  end

  if (SM5REC.SM-PRM-DEPT-ID != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM-PRM-DEPT-ID;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-PRM-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
  end
  if (SM5REC.SM-PERS-DEPT-ID != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM-PERS-DEPT-ID;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-PERS-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
  end
  if (SM5REC.SM-SMPL-DEPT-ID != 0)
    SMWREC.SMW-NUM-CHK-NBR = SM5REC.SM-SMPL-DEPT-ID;
    XSSMS-NUM-CHK(); /* nbr convertion rtn*/
    SM0IW05.SM0IW-SM-SMPL-DEPT-ID = SMWREC.SMW-NUM-CHK-WORD;
  end

  /* **********************************************************************/
  /* Convert dates to character format*/
  /* **********************************************************************/

   /* reformat edt to mm-dd-yy format from ccyymmdd*/

  if (SM0IW05.SM-SREP-EDT > 0)
    SM0IW01.SM0IW-EDIT-CCYYMMDD = SM0IW05.SM-SREP-EDT;
    SM0IW01.SM0IW-EDIT-MMDDYY-MONTH = SM0IW01.SM0IW-EDIT-CCYYMMDD-MONTH;
    SM0IW01.SM0IW-EDIT-MMDDYY-DASH1 = "-";
    SM0IW01.SM0IW-EDIT-MMDDYY-DAY = SM0IW01.SM0IW-EDIT-CCYYMMDD-DAY;
    SM0IW01.SM0IW-EDIT-MMDDYY-DASH2 = "-";
    SM0IW01.SM0IW-EDIT-MMDDYY-YEAR = SM0IW01.SM0IW-EDIT-CCYYMMDD-YEAR;
    SM0IW05.SM0IW-SM-SREP-EDT = SM0IW01.SM0IW-EDIT-MMDDYY-DISPLAY;
  end

   /* reformat xdt to mm-dd-yy format from ccyymmdd*/

  if (SM0IW05.SM-SREP-TDT > 0
   && SM0IW05.SM-SREP-TDT < 999999999)
    SM0IW01.SM0IW-EDIT-CCYYMMDD = SM0IW05.SM-SREP-TDT;
    SM0IW01.SM0IW-EDIT-MMDDYY-MONTH = SM0IW01.SM0IW-EDIT-CCYYMMDD-MONTH;
    SM0IW01.SM0IW-EDIT-MMDDYY-DASH1 = "-";
    SM0IW01.SM0IW-EDIT-MMDDYY-DAY = SM0IW01.SM0IW-EDIT-CCYYMMDD-DAY;
    SM0IW01.SM0IW-EDIT-MMDDYY-DASH2 = "-";
    SM0IW01.SM0IW-EDIT-MMDDYY-YEAR = SM0IW01.SM0IW-EDIT-CCYYMMDD-YEAR;
    SM0IW05.SM0IW-SM-SREP-TDT = SM0IW01.SM0IW-EDIT-MMDDYY-DISPLAY;
  end

   /* **********************************************************************/
   /* save read-only fields from VRAGCY01 to PREV-DTL*/
   /* **********************************************************************/

  SM0IW05.XXX-STAT = SM5REC.XXXSTAT;
  SM0IW05.ZZ-SDT = SM5REC.ZZZSDT;
  SM0IW05.ZZ-CHNG-DT = SM5REC.ZZZCHGDT;


end // end SM0IS-RAGY-TO-PDTL

// Read temp storage record
Function SM0IS-RD-TMP-STRG()
  TA5REC.TA5FNCCD = "R"; /* retrieve temp storage*/
  TA5REC.TA5APPID = SM0IW01.TA5APPID; /* application ID*/
  SM0IW07.SM0IW-TEMP-STRG-LENGTH = SM0IW01.SM0IW-TSQ-REC-LENGTH;

  try
    call "TA0050" (SM0IW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage*/

  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
    /* next sentence*/
  else /* an error occurred*/
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post, no abend*/
    TA1REC.TA1LOCAT[1] = "READ TS "; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    XSPF4(); /* pass control to menu*/
    exit program;
  end


end // end SM0IS-RD-TMP-STRG

// Reload data for map1
Function SM0IS-RELOAD-DATA()
   /* **********************************************************************/
   /* Reload data for map1*/
   /* This assumes a valid ragcy row in the sm5rec work area.  This will*/
   /* reload this information to SM0IM001 and get all related data from*/
   /* vreps001 and vsagcy01.*/
   /* **********************************************************************/

  SM0IS-INIT-SCRN1();

  SM0IM001.SM-SAGCY-ID = SM5REC.SM1AGYID; /* map*/
  SM0IW02.SM-SAGCY-ID = SM5REC.SM1AGYID; /* cur hdr*/

  SM0IM001.SM0IM-SM-SREP-ID = SM0IM002.SM0IM-SM-SREP-ID; /* map*/
  SM0IW02.SM0IW-SM-SREP-ID = SM0IM002.SM0IM-SM-SREP-ID; /* cur hdr*/

  SM0IS-EDIT-REP-ID(); /* get rep info*/

  SM0IS-EDIT-AGCY-ID(); /* get agency info*/

  if (SM0IW-ERR-FL == "Y")
    return;
  end

  SM0IS-LD-MAP1-CHG(); /* load SM0IM001 for inq or change*/


end // end SM0IS-RELOAD-DATA

// Reset SM0IM001
Function SM0IS-RESET-MAP1()
  /* ************************************************************************/
  /* Reset map1 attributes depending on the userid authorization level*/
  /* ************************************************************************/

  /* Reset map items to normal*/

  set SM0IM001.SM-SAGCY-ID initialAttributes;
  set SM0IM001.SM0IM-SM-SREP-ID cursor, initialAttributes;
  set SM0IM001.SM0IM-EMPL-LIT initialAttributes;
  set SM0IM001.SM-SREP-EMPL-ID initialAttributes;
  set SM0IM001.SM0IM-VEND-LIT initialAttributes;
  set SM0IM001.PV-MSA-VEND-NBR initialAttributes;
  set SM0IM001.SM0IM-SM-SREP-PSTN-ID-LIT initialAttributes;
  set SM0IM001.SM-SREP-PSTN-ID initialAttributes;
  set SM0IM001.SM-SREP-PSTN-DESC initialAttributes;
  set SM0IM001.XRT-SREP-ASSN-TYP initialAttributes;
  set SM0IM001.SM-SREP-COMRT-IND initialAttributes;
  set SM0IM001.SM0IM-SM-PRM-CU-CO-ID initialAttributes;
  set SM0IM001.SM0IM-SM-PRM-CU-STOR-ID initialAttributes;
  set SM0IM001.SM0IM-SM-PRM-DEPT-ID initialAttributes;
  set SM0IM001.SM0IM-SM-PERS-CU-CO-ID initialAttributes;
  set SM0IM001.SM0IM-SM-PERS-CU-STOR-ID initialAttributes;
  set SM0IM001.SM0IM-SM-PERS-DEPT-ID initialAttributes;
  set SM0IM001.SM0IM-SM-SMPL-CU-CO-ID initialAttributes;
  set SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID initialAttributes;
  set SM0IM001.SM0IM-SM-SMPL-DEPT-ID initialAttributes;
  set SM0IM001.SM0IM-SM-SREP-EDT initialAttributes;
  set SM0IM001.SM0IM-SM-SREP-TDT initialAttributes;
  set SM0IM001.SM-SREP-TRMN-RSN initialAttributes;
  set SM0IM001.SM0IM-SM-SREP-TRMN-RSN-LIT initialAttributes;
  set SM0IM001.CATOAP initialAttributes;
  set SM0IM001.CAITEM initialAttributes;
  set SM0IM001.SM0IM-PF12-LIT initialAttributes;

  /* set empl-id and empl-id-lit dark if no empl-id*/

  if (SM0IM001.SM-SREP-EMPL-ID == " ")
    set SM0IM001.SM0IM-EMPL-LIT invisible, skip;
    set SM0IM001.SM-SREP-EMPL-ID invisible, skip;
  end

  /* Set vend-nbr and vend-nbr-lit dark if xrt-srep-assn-typ not 'CT'*/

  if (SM0IM001.XRT-SREP-ASSN-TYP == "NE")
    set SM0IM001.SM0IM-VEND-LIT invisible, skip;
    set SM0IM001.PV-MSA-VEND-NBR invisible, skip;
  end

  /* Protect map items depending on access level*/

  if (COMMAREA.CAADDFL == "Y") /* userid allowed to add rep-agcy*/
     /* unprotect all if adding.*/
    if (SM0IW05.SM0IW-PREV-DTL == 
    SM0IW06.SM0IW-INIT-DTL) /* adding an agency row -- prev dtl is*/
                                   /* empty*/
       /* leave all map items unprotected*/
      return;
    end
  end

  if (COMMAREA.CACHGFL == "Y" /* userid allowed to modify name*/
   && SM0IM001.XXX-STAT == "A") /* and active status*/
     /* leave all map items unprotected*/
  else /* userid can browse only*/
    if (COMMAREA.CAILVL[1] == "N") /* not authorized to browse fields*/
      set SM0IM001.SM0IM-EMPL-LIT invisible, skip;
      set SM0IM001.SM-SREP-EMPL-ID invisible, skip;
      set SM0IM001.SM0IM-VEND-LIT invisible, skip;
      set SM0IM001.PV-MSA-VEND-NBR invisible, skip;
      set SM0IM001.SM0IM-SM-SREP-PSTN-ID-LIT invisible, skip;
      set SM0IM001.SM-SREP-PSTN-ID invisible, skip;
      set SM0IM001.SM-SREP-PSTN-DESC invisible, skip;
    else /* Okay to browse selected fields*/
      set SM0IM001.SM-SREP-PSTN-ID skip;
    end
    set SM0IM001.XRT-SREP-ASSN-TYP skip;
    set SM0IM001.SM0IM-SM-PRM-CU-CO-ID skip;
    set SM0IM001.SM0IM-SM-PRM-CU-STOR-ID skip;
    set SM0IM001.SM0IM-SM-PRM-DEPT-ID skip;
    set SM0IM001.SM0IM-SM-PERS-CU-CO-ID skip;
    set SM0IM001.SM0IM-SM-PERS-CU-STOR-ID skip;
    set SM0IM001.SM0IM-SM-PERS-DEPT-ID skip;
    set SM0IM001.SM0IM-SM-SMPL-CU-CO-ID skip;
    set SM0IM001.SM0IM-SM-SMPL-CU-STOR-ID skip;
    set SM0IM001.SM0IM-SM-SMPL-DEPT-ID skip;
    set SM0IM001.SM0IM-SM-SREP-EDT skip;
    if (COMMAREA.CACHGFL == "N") /* browse only*/
      set SM0IM001.SM-SREP-COMRT-IND skip;
      set SM0IM001.SM0IM-SM-SREP-TDT skip;
      set SM0IM001.SM0IM-SM-SREP-TRMN-RSN-LIT invisible, skip;
      set SM0IM001.SM-SREP-TRMN-RSN invisible, skip;
    else /* inactive but userid authorized*/
      set SM0IM001.SM-SREP-COMRT-IND initialAttributes;
      set SM0IM001.SM0IM-SM-SREP-TDT initialAttributes;
      set SM0IM001.SM0IM-SM-SREP-TRMN-RSN-LIT initialAttributes;
      set SM0IM001.SM-SREP-TRMN-RSN initialAttributes;
    end
    set SM0IM001.SM0IM-PF12-LIT invisible, skip;
  end

end // end SM0IS-RESET-MAP1

// Reset SM0IM002
Function SM0IS-RESET-MAP2()
  /* ************************************************************************/
  /* Reset field attributes for SM0IM002*/
  /* ************************************************************************/

  SM0IW-PTR = 1; /* 1st map line*/
  while (SM0IW-PTR <= SM0IW01.SM0IW-MAX-PER-PAGE)
    if (SM0IM002.SM-SAGCY-ID[SM0IW-PTR] != " ") /* allow select*/
      set SM0IM002.SM0IM-SEL[SM0IW-PTR] initialAttributes;
    else
      set SM0IM002.SM0IM-SEL[SM0IW-PTR] skip, invisible;
    end
    SM0IW-PTR = SM0IW-PTR + 1;
  end

  set SM0IM002.SM0IM-SEL[1] cursor;

end // end SM0IS-RESET-MAP2

// Call IO5110 fetch next vcurep0
Function SM0IS-SCAN-VCUREP()
   /* **********************************************************************/
   /* SM0IS-SCAN-VCUREP*/
   /* This routine calls IO5110 to fetch the next CU-REP row*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO5110" ("N1", SQLCA, KUGREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* end of cursor*/
    SM0IW-MORE-VCUREP01-FL = "N";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCUREP01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "N1      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO5110"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-SCAN-VCUREP

// Call IO0160 fetch next vragcy
Function SM0IS-SCAN-VRAGCY()
   /* **********************************************************************/
   /* SM0IS-SCAN-VRAGCY*/
   /* This routine calls IO0160 to fetch the next Rep-Agency row*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("SN", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* end of cursor*/
    SM0IW-MORE-VRAGCY01-FL = "N";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "SN      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-SCAN-VRAGCY

// Call IO0660 fetch next vrepos
Function SM0IS-SCAN-VREPOS()
   /* **********************************************************************/
   /* SM0IS-SCAN-VREPOS*/
   /* This routine calls IO0660 to fetch the next Rep-Position row*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0660" ("N1", SQLCA, VREPOS01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* end of cursor*/
    SM0IW-MORE-VREPOS01-FL = "N";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VREPOS01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "N1      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0660"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0IS-SCAN-VREPOS

// Set default SM aud row fields
Function SM0IS-SET-AUD-REC()
   /* **********************************************************************/
   /* Setup common fields in the SM audit record*/
   /* **********************************************************************/

  set VSMAUD01 empty;

  VSMAUD01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSMAUD01.ZZ-SDT = SM0IW01.SM0IW-CURR-CCYYMMDD;
  VSMAUD01.ZZ-SETUP-HHMMSS = SM0IW01.SM0IW-CURR-HHMMSS;


end // end SM0IS-SET-AUD-REC

// Set subsystem rec & causera
Function SM0IS-SET-CAUSERA()
  /* ************************************************************************/
  /* This statement group moves the last entered Agency and Rep id to the*/
  /* subsystem record so the next application will have a valid key to*/
  /* start with.*/
  /* The subsystem record is then moved as a group to the causera field*/
  /* of the common data area.*/
  /* ************************************************************************/

  SMWREC.SM-SAGCY-ID = SM0IW02.SM-SAGCY-ID;

  SMWREC.SMW-NUM-CHK-WORD = SM0IW02.SM0IW-SM-SREP-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SMWREC.SM-SREP-ID = 0;
  else
    SMWREC.SM-SREP-ID = SMWREC.SMW-NUM-CHK-NBR;
  end

  COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD;


end // end SM0IS-SET-CAUSERA

// Move CURR-DTL to VRAGCY01
Function SM0IS-SET-RAG-DATA()
   /* **********************************************************************/
   /* move CURR-DTL to VRAGCY01*/
   /* **********************************************************************/

  SM5REC.SM-SREP-PSTN-ID = SM0IW04.SM-SREP-PSTN-ID;
  SM5REC.XRTCD = SM0IW04.XRT-SREP-ASSN-TYP;
  SM5REC.SM5COMIN = SM0IW04.SM-SREP-COMRT-IND;

  SM5REC.SM5PRMCU = SM0IW04.SM-PRM-CU-CO-ID;
  SM5REC.SM5PRMST = SM0IW04.SM-PRM-CU-STOR-ID;
  SM5REC.SM-PRM-DEPT-ID = SM0IW04.SM-PRM-DEPT-ID;
  SM5REC.SM5PRSCU = SM0IW04.SM-PERS-CU-CO-ID;
  SM5REC.SM5PRSST = SM0IW04.SM-PERS-CU-STOR-ID;
  SM5REC.SM-PERS-DEPT-ID = SM0IW04.SM-PERS-DEPT-ID;
  SM5REC.SM5SMPCU = SM0IW04.SM-SMPL-CU-CO-ID;
  SM5REC.SM5SMPST = SM0IW04.SM-SMPL-CU-STOR-ID;
  SM5REC.SM-SMPL-DEPT-ID = SM0IW04.SM-SMPL-DEPT-ID;

  SM5REC.SM5EDT = SM0IW04.SM-SREP-EDT;
  SM5REC.SM5TDT = SM0IW04.SM-SREP-TDT;
  SM5REC.SM5TRSN = SM0IW04.SM-SREP-TRMN-RSN;

   /* **********************************************************************/
   /* modify change date and time (change count is handled by IOMOD)*/
   /* **********************************************************************/

  SM5REC.ZZZCHGDT = SM0IW01.SM0IW-CURR-CCYYMMDD;
  SM5REC.ZZZCHGTM = SM0IW01.SM0IW-CURR-HHMM;

end // end SM0IS-SET-RAG-DATA

// Set initial VRAGCY01 value
Function SM0IS-SET-RAG-REC()
   /* **********************************************************************/
   /* Set initial value of VRAGCY01 for insert*/
   /* **********************************************************************/

  set SM5REC empty;

  SM5REC.XXXSTAT = "A";
  SM5REC.SM1AGYID = SM0IW02.SM-SAGCY-ID;
  SM5REC.ZZZSDT = SM0IW01.SM0IW-CURR-CCYYMMDD;

  SMWREC.SMW-NUM-CHK-WORD = SM0IW02.SM0IW-SM-SREP-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  SM5REC.SM4REPID = SMWREC.SMW-NUM-CHK-NBR;


end // end SM0IS-SET-RAG-REC

// Update Rep-Agency process
Function SM0IS-UPD-RAG-PROC()
   /* **********************************************************************/
   /* Update Rep-agency assignment record process*/
   /* **********************************************************************/

  SM0IS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VRAGCY01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0IW-VRAGCY01-LENGTH;
  VSMAUD01.SM-AUDIT-TYP-CD = "C";
  VSMAUD01.SM-BFR-AFT-IND = "B";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
  VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
  VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
  SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/

  SM0IS-SET-RAG-DATA(); /* move changed data to VRAGCY01*/
  SM0IS-UPDT-VRAGCY(); /* Update VRAGCY01*/

  if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
    SM0IW-ERR-FL = "Y";
    converseLib.validationFailed(0073); /* rec was updated by another*/
    return;
  end

  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;

  SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/

end // end SM0IS-UPD-RAG-PROC

// Update rep-vendor table proc**
Function SM0IS-UPD-RVN-PROC()
   /* **********************************************************************/
   /* Update Rep-vendor table process*/
   /* Update of vendor allowed iff association type ne 'NE'.  Vendor*/
   /* is updated w/ user entered data if exists, else one is assigned.*/
   /*  */
   /*  */
   /*  */
   /* 27 July JCHOCH    Add code for allowing update of VREPVN.*/
   /* **********************************************************************/

  if (SM0IW04.PV-MSA-VEND-NBR == SM0IW05.PV-MSA-VEND-NBR || 
  SM0IW04.XRT-SREP-ASSN-TYP != "CT") /* not contractor*/
    SM0IW-VEND-NBR-ASGN-FL = "N"; /* do not assign vend number*/
    return;
  end

  if (SM0IW04.PV-MSA-VEND-NBR != SM0IW05.PV-MSA-VEND-NBR && 
  SM0IW05.PV-MSA-VEND-NBR != " ")
    set VREPVN01 empty;
    VREPVN01.SM-SREP-ID = SM4REC.SM4REPID;

    SM0IS-FIND-VREPVN();

    VREPVN01.ZZ-CHNG-DT = SM0IW01.SM0IW-CURR-CCYYMMDD;
    VREPVN01.ZZ-CHNG-HHMM = SM0IW01.SM0IW-CURR-HHMM;
    VREPVN01.PV-MSA-VEND-NBR = SM0IW04.PV-MSA-VEND-NBR;

    SM0IS-UPD-VREPVN();

    SM0IS-SET-AUD-REC(); /* init audit record*/
    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
    VSMAUD01.XXX-TBL-NM = "VREPVN01"; /* set table nm in the audit*/
    VSMAUD01.SM-AUDIT-FILLER-LEN = SM0IW-VREPVN01-LENGTH;
    VSMAUD01.SM-AUDIT-TYP-CD = "A";
    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = VREPVN01.VREPVN01-GROUP;

    SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/

  else

    set VREPVN01 empty;
    if (SM0IM001.PV-MSA-VEND-NBR == " ")
      SM0IS-GET-NEXT-VND(); /* get next vendor number*/
      VREPVN01.PV-MSA-VEND-NBR = VSMCTL01.SM-NXT-VEND-NBR;
    else
      VREPVN01.PV-MSA-VEND-NBR = SM0IM001.PV-MSA-VEND-NBR;
    end

    VREPVN01.SM-SREP-ID = SM5REC.SM4REPID;
    VREPVN01.ZZ-SDT = SM0IW01.SM0IW-CURR-CCYYMMDD;
    VREPVN01.ZZ-CHNG-DT = SM0IW01.SM0IW-CURR-CCYYMMDD;
    VREPVN01.ZZ-CHNG-HHMM = SM0IW01.SM0IW-CURR-HHMM;

    SM0IS-ADD-VREPVN(); /* Call IO6590 add vrepvn01*/

    SM0IM001.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;
    SM0IW04.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;

    if (SM0IM001.PV-MSA-VEND-NBR == " ")
      SM0IW01.PV-MSA-VEND-NBR = VSMCTL01.SM-NXT-VEND-NBR;
      SM0IW01.SM0IW-VEND-NBR-NUM = SM0IW01.SM0IW-VEND-NBR-NUM + 1;
      VSMCTL01.SM-NXT-VEND-NBR = SM0IW01.PV-MSA-VEND-NBR;
      VSMCTL01.ZZ-CHNG-DT = SM0IW01.SM0IW-CURR-CCYYMMDD;
      VSMCTL01.ZZ-CHNG-HHMM = SM0IW01.SM0IW-CURR-HHMM;

      SM0IS-UPDT-VSMCTL(); /* Call IO6580 update vsmctl01*/
    end

    SM0IS-SET-AUD-REC(); /* init audit record*/
    VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.XXX-TBL-NM = "VREPVN01"; /* set table nm in the audit*/
    VSMAUD01.SM-AUDIT-FILLER-LEN = SM0IW-VREPVN01-LENGTH;
    VSMAUD01.SM-AUDIT-TYP-CD = "A";
    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = VREPVN01.VREPVN01-GROUP;

    SM0IS-ADD-VSMAUD(); /* Add VSMAUD01*/

  end

end // end SM0IS-UPD-RVN-PROC

// Update tables process
Function SM0IS-UPD-TBL-PROC()
   /* **********************************************************************/
   /* Update tables process*/
   /* **********************************************************************/

  SM0IS-GET-TM-STAMP(); /* get dt & tm stamp for update*/

  if (SM0IW-PROC-TYP-IND == "A") /* add a rep agency assignment*/
    SM0IS-ADD-RAG-PROC(); /* add VRAGCY01 process*/
    SM0IS-ADD-RVN-PROC(); /* Add rep-vendor table proc*/
  else
    if (SM0IW-PROC-TYP-IND == "U") /* update a rep agency assignment*/
      SM0IS-UPD-RAG-PROC(); /* update VRAGCY01 process*/
      SM0IS-UPD-RVN-PROC(); /* Update rep-vendor table proc*/
    end
  end

  if (SM0IW-ERR-FL != "Y") /* no errors found while updating*/
    if (SM0IW-VEND-NBR-ASGN-FL == "Y") /* vendor number was assigned*/
      COMMAREA.CATOAP = "SM0V";
      COMMAREA.CAITEM = " ";
      SM0IS-SET-CAUSERA();
      XSEXIT(); /* transfer to vendor info maint*/
      SM0IS-LD-MAP1-CHG(); /* Reload map*/
      SM0IM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      SM0IM001.CAMSG = "UPDATES ACCEPTED.  UNABLE TO TRANSFER TO SM0V.";
      SM0IW-ERR-FL = "Y"; /* unsuccessful transfer to SM0V*/
    else
      SM0IS-LD-MAP1-CHG(); /* Reload map*/
      converseLib.validationFailed(0074); /* Updates accepted*/
    end
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* Rollback any updates done*/
  end

end // end SM0IS-UPD-TBL-PROC

// Call IO6590 update vrepvn01
Function SM0IS-UPD-VREPVN()
   /* **********************************************************************/
   /* SM0IS-UPD-VREPVN*/
   /* This routine calls IO6590 to update a rep-vendor row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6590" ("U ", SQLCA, VREPVN01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* db2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPVN01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6590"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-UPD-VREPVN

// Call IO0160 update vragcy01
Function SM0IS-UPDT-VRAGCY()
   /* **********************************************************************/
   /* SM0IS-UPDT-VRAGCY*/
   /* This routine calls IO0160 to update a rep-agency row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("U ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != 100) /* not record not found*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-UPDT-VRAGCY

// Call IO6580 update nxt vnd nbr
Function SM0IS-UPDT-VSMCTL()
   /* **********************************************************************/
   /* SM0IS-UPDT-VSMCTL*/
   /* This routine calls IO6580 to update the next-vendor-number in the*/
   /* SM control table.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6580" ("U ", SQLCA, VSMCTL01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMCTL01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6580"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0IS-UPDT-VSMCTL

// Validate date format
Function SM0IS-VAL-DT-FMT()
   /* **********************************************************************/
   /* Validate Date format*/
   /* must be valid MMDDYY or MM/DD/YY format ('/' must be valid delimiter*/
   /* **********************************************************************/

  if (SM0IW-WORK-CHAR-DATE-BLANK == " ") /* mmddyy format*/
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = SM0IW-WORK-CHAR-DATE-MMDDYY;
  else /* mm/dd/yy format*/
    SM0IW01.SM0IW-EDIT-MMDDYY-DISPLAY = SM0IW-WORK-CHAR-DATE-MM-DD-YY;
    if (SM0IW-EDIT-MMDDYY-DASH1 != "/"
     && SM0IW-EDIT-MMDDYY-DASH1 != "."
     && SM0IW-EDIT-MMDDYY-DASH1 != "-"
     && SM0IW-EDIT-MMDDYY-DASH1 != " "
     && SM0IW-EDIT-MMDDYY-DASH1 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    if (SM0IW-EDIT-MMDDYY-DASH2 != "/"
     && SM0IW-EDIT-MMDDYY-DASH2 != "."
     && SM0IW-EDIT-MMDDYY-DASH2 != "-"
     && SM0IW-EDIT-MMDDYY-DASH2 != " "
     && SM0IW-EDIT-MMDDYY-DASH2 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    TA2REC.TA2GRTYP = "B";
    TA2REC.TA2GRGB = SM0IW-WORK-CHAR-DATE-MM-DD-YY;
  end

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0
   && TA2REC.TA2RTNCD != 222)
    SM0IW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 VALIDATE DATE FORMAT FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "SM0IM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    exit program;
  end

end // end SM0IS-VAL-DT-FMT

// converse xrttbl pop-up window
Function XPXRT01()
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XRTTBL.XRTCD[XX0XWCT1] != "99") /* Or end of data*/
        if (XRTTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XRTTBL.XRTCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XRTTBL.XRTDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (XRTTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XRTTBL.XRTCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XRTTBL.XRTDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XRTTBL.XRTCD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end
end // end XPXRT01

//*** RECORD=SM0IW01 ****
// Working storage record for application SM0I.
// 
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW01 type basicRecord
  10 * char(25) ; 
    15 SM0IW-ERR-FL SM0IW-ERR-FL ; 
    15 SM0IW-CUST-ERR-FL SM0IW-CUST-ERR-FL ; 
    15 SM0IW-VRAGCY01-FOUND-FL SM0IW-VRAGCY01-FOUND-FL ; 
    15 SM0IW-VREPS001-FOUND-FL SM0IW-VREPS001-FOUND-FL ; 
    15 SM0IW-VSAGCY01-FOUND-FL SM0IW-VSAGCY01-FOUND-FL ; 
    15 SM0IW-VREPOS01-FOUND-FL SM0IW-VREPOS01-FOUND-FL ; 
    15 SM0IW-VCMPNY01-FOUND-FL SM0IW-VCMPNY01-FOUND-FL ; 
    15 SM0IW-VSTORE01-FOUND-FL SM0IW-VSTORE01-FOUND-FL ; 
    15 SM0IW-VDEPT001-FOUND-FL SM0IW-VDEPT001-FOUND-FL ; 
    15 SM0IW-VCUREP01-FOUND-FL SM0IW-VCUREP01-FOUND-FL ; 
    15 SM0IW-MORE-VRAGCY01-FL SM0IW-MORE-VRAGCY01-FL ; 
    15 SM0IW-MORE-VCUREP01-FL SM0IW-MORE-VCUREP01-FL ; 
    15 SM0IW-MORE-VREPOS01-FL SM0IW-MORE-VREPOS01-FL ; 
    15 SM0IW-SELECTED-FL SM0IW-SELECTED-FL ; 
    15 SM0IW-VEND-NBR-ASGN-FL SM0IW-VEND-NBR-ASGN-FL ; 
    15 SM0IW-PROMPT-ENTERED-FL SM0IW-PROMPT-ENTERED-FL ; 
    15 SM0IW-RETURN-PROMPT-FL SM0IW-RETURN-PROMPT-FL ; 
    15 SM0IW-DISP-ERR-FL SM0IW-DISP-ERR-FL ; 
    15 SM0IW-PROC-TYP-IND SM0IW-PROC-TYP-IND ; 
    15 SM0IW-PTR SM0IW-PTR ; 
    15 SM0IW-SEL-COUNT SM0IW-SEL-COUNT ; 
    15 SM0IW-SEL-LINE SM0IW-SEL-LINE ; 
  10 * char(20) ; 
    15 SM0IW-VREPS001-LENGTH SM0IW-VREPS001-LENGTH ; 
    15 SM0IW-VRAGCY01-LENGTH SM0IW-VRAGCY01-LENGTH ; 
    15 SM0IW-VREPVN01-LENGTH SM0IW-VREPVN01-LENGTH ; 
    15 SM0IW-TSQ-REC-LENGTH SM0IW-TSQ-REC-LENGTH ; 
    15 TA5APPID TA5APPID ; 
    15 SM0IW-MAX-PER-PAGE SM0IW-MAX-PER-PAGE ; 
    15 SM0IW-REQUESTED-PAGE SM0IW-REQUESTED-PAGE ; 
    15 SM0IW-HIGHEST-PAGE SM0IW-HIGHEST-PAGE ; 
  10 * char(24) ; 
    15 SM0IW-EDIT-CCYYMMDD SM0IW-EDIT-CCYYMMDD ; 
      20 SM0IW-EDIT-CCYYMMDD-CENTURY SM0IW-EDIT-CCYYMMDD-CENTURY ; 
      20 SM0IW-EDIT-CCYYMMDD-YEAR SM0IW-EDIT-CCYYMMDD-YEAR ; 
      20 SM0IW-EDIT-CCYYMMDD-MONTH SM0IW-EDIT-CCYYMMDD-MONTH ; 
      20 SM0IW-EDIT-CCYYMMDD-DAY SM0IW-EDIT-CCYYMMDD-DAY ; 
    15 SM0IW-EDIT-MMDDYY-DISPLAY SM0IW-EDIT-MMDDYY-DISPLAY ; 
      20 SM0IW-EDIT-MMDDYY-MONTH SM0IW-EDIT-MMDDYY-MONTH ; 
      20 SM0IW-EDIT-MMDDYY-DASH1 SM0IW-EDIT-MMDDYY-DASH1 ; 
      20 SM0IW-EDIT-MMDDYY-DAY SM0IW-EDIT-MMDDYY-DAY ; 
      20 SM0IW-EDIT-MMDDYY-DASH2 SM0IW-EDIT-MMDDYY-DASH2 ; 
      20 SM0IW-EDIT-MMDDYY-YEAR SM0IW-EDIT-MMDDYY-YEAR ; 
    15 SM0IW-WORK-CHAR-DATE SM0IW-WORK-CHAR-DATE ; 
      20 SM0IW-WORK-CHAR-DATE-MM-DD-YY SM0IW-WORK-CHAR-DATE-MM-DD-YY ; 
        25 SM0IW-WORK-CHAR-DATE-MMDDYY SM0IW-WORK-CHAR-DATE-MMDDYY ; 
        25 SM0IW-WORK-CHAR-DATE-BLANK SM0IW-WORK-CHAR-DATE-BLANK ; 
  10 * char(14) ; 
    15 SM0IW-WORK-CCYYMMDD SM0IW-WORK-CCYYMMDD ; 
    15 SM0IW-CURR-CCYYMMDD SM0IW-CURR-CCYYMMDD ; 
    15 SM0IW-CURR-HHMMSS SM0IW-CURR-HHMMSS ; 
    15 SM0IW-CURR-HHMM SM0IW-CURR-HHMM ; 
  10 * char(10) ; 
    15 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
      20 SM0IW-VEND-NBR-NUM SM0IW-VEND-NBR-NUM ; 
      20 * char(7) ; 
  10 * char(20) ; 
    15 CAITEM CAITEM ; 
      20 SM-SAGCY-ID SM-SAGCY-ID ; 
      20 * char(1) ; 
      20 SM0IW-SM-SREP-ID SM0IW-SM-SREP-ID ; 
      20 * char(11) ; 
  10 VRAGCY01-GROUP VRAGCY01-GROUP ; 
end // end SM0IW01

//*** RECORD=SM0IW02 ****
// Working storage record for application SM0I to hold current
// Rep id and Agency id.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW02 type basicRecord
  10 SM0IW-CURR-HDR SM0IW-CURR-HDR ; 
    15 SM0IW-SM-SREP-ID SM0IW-SM-SREP-ID ; 
    15 SM-SAGCY-ID SM-SAGCY-ID ; 
end // end SM0IW02

//*** RECORD=SM0IW03 ****
// Working storage record for application SM0I to hold previous
// Rep id and Agency id.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW03 type basicRecord
  10 SM0IW-PREV-HDR SM0IW-PREV-HDR ; 
    15 SM0IW-SM-SREP-ID SM0IW-SM-SREP-ID ; 
    15 SM-SAGCY-ID SM-SAGCY-ID ; 
  10 SM0IW-PREV-HDR-DESC SM0IW-PREV-HDR-DESC ; 
    15 SM-SAGCY-NM SM-SAGCY-NM ; 
    15 SM-SREP-EMPL-ID SM-SREP-EMPL-ID ; 
    15 XXX-LAST-NM XXX-LAST-NM ; 
    15 XXX-FRST-NM XXX-FRST-NM ; 
    15 XXX-MID-INIT XXX-MID-INIT ; 
end // end SM0IW03

//*** RECORD=SM0IW04 ****
// Working storage record for application SM0I to hold current
// Rep-Agency details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW04 type basicRecord
  5 SM0IW-CURR-DTL SM0IW-CURR-DTL ; 
    10 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
    10 SM-SREP-PSTN-ID SM-SREP-PSTN-ID ; 
    10 XRT-SREP-ASSN-TYP XRT-SREP-ASSN-TYP ; 
    10 SM-SREP-COMRT-IND SM-SREP-COMRT-IND ; 
    10 SM0IW-SM-PRM-CU-CO-ID SM0IW-SM-PRM-CU-CO-ID ; 
    10 SM0IW-SM-PRM-CU-STOR-ID SM0IW-SM-PRM-CU-STOR-ID ; 
    10 SM0IW-SM-PRM-DEPT-ID SM0IW-SM-PRM-DEPT-ID ; 
    10 SM0IW-SM-PERS-CU-CO-ID SM0IW-SM-PERS-CU-CO-ID ; 
    10 SM0IW-SM-PERS-CU-STOR-ID SM0IW-SM-PERS-CU-STOR-ID ; 
    10 SM0IW-SM-PERS-DEPT-ID SM0IW-SM-PERS-DEPT-ID ; 
    10 SM0IW-SM-SMPL-CU-CO-ID SM0IW-SM-SMPL-CU-CO-ID ; 
    10 SM0IW-SM-SMPL-CU-STOR-ID SM0IW-SM-SMPL-CU-STOR-ID ; 
    10 SM0IW-SM-SMPL-DEPT-ID SM0IW-SM-SMPL-DEPT-ID ; 
    10 SM0IW-SM-SREP-EDT SM0IW-SM-SREP-EDT ; 
    10 SM0IW-SM-SREP-TDT SM0IW-SM-SREP-TDT ; 
    10 SM-SREP-TRMN-RSN SM-SREP-TRMN-RSN ; 
  5 SM-SREP-EDT SM-SREP-EDT ; 
  5 SM-SREP-TDT SM-SREP-TDT ; 
  5 SM-PRM-CU-CO-ID SM-PRM-CU-CO-ID ; 
  5 SM-PRM-CU-STOR-ID SM-PRM-CU-STOR-ID ; 
  5 SM-PRM-DEPT-ID SM-PRM-DEPT-ID ; 
  5 SM-PERS-CU-CO-ID SM-PERS-CU-CO-ID ; 
  5 SM-PERS-CU-STOR-ID SM-PERS-CU-STOR-ID ; 
  5 SM-PERS-DEPT-ID SM-PERS-DEPT-ID ; 
  5 SM-SMPL-CU-CO-ID SM-SMPL-CU-CO-ID ; 
  5 SM-SMPL-CU-STOR-ID SM-SMPL-CU-STOR-ID ; 
  5 SM-SMPL-DEPT-ID SM-SMPL-DEPT-ID ; 
end // end SM0IW04

//*** RECORD=SM0IW05 ****
// Working storage record for application SM0I to hold the
// previous Rep-Agency details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW05 type basicRecord
  5 SM0IW-PREV-DTL SM0IW-PREV-DTL ; 
    10 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
    10 SM-SREP-PSTN-ID SM-SREP-PSTN-ID ; 
    10 XRT-SREP-ASSN-TYP XRT-SREP-ASSN-TYP ; 
    10 SM-SREP-COMRT-IND SM-SREP-COMRT-IND ; 
    10 SM0IW-SM-PRM-CU-CO-ID SM0IW-SM-PRM-CU-CO-ID ; 
    10 SM0IW-SM-PRM-CU-STOR-ID SM0IW-SM-PRM-CU-STOR-ID ; 
    10 SM0IW-SM-PRM-DEPT-ID SM0IW-SM-PRM-DEPT-ID ; 
    10 SM0IW-SM-PERS-CU-CO-ID SM0IW-SM-PERS-CU-CO-ID ; 
    10 SM0IW-SM-PERS-CU-STOR-ID SM0IW-SM-PERS-CU-STOR-ID ; 
    10 SM0IW-SM-PERS-DEPT-ID SM0IW-SM-PERS-DEPT-ID ; 
    10 SM0IW-SM-SMPL-CU-CO-ID SM0IW-SM-SMPL-CU-CO-ID ; 
    10 SM0IW-SM-SMPL-CU-STOR-ID SM0IW-SM-SMPL-CU-STOR-ID ; 
    10 SM0IW-SM-SMPL-DEPT-ID SM0IW-SM-SMPL-DEPT-ID ; 
    10 SM0IW-SM-SREP-EDT SM0IW-SM-SREP-EDT ; 
    10 SM0IW-SM-SREP-TDT SM0IW-SM-SREP-TDT ; 
    10 SM-SREP-TRMN-RSN SM-SREP-TRMN-RSN ; 
  5 SM-SREP-EDT SM-SREP-EDT ; 
  5 SM-SREP-TDT SM-SREP-TDT ; 
  5 SM-PRM-CU-CO-ID SM-PRM-CU-CO-ID ; 
  5 SM-PRM-CU-STOR-ID SM-PRM-CU-STOR-ID ; 
  5 SM-PRM-DEPT-ID SM-PRM-DEPT-ID ; 
  5 SM-PERS-CU-CO-ID SM-PERS-CU-CO-ID ; 
  5 SM-PERS-CU-STOR-ID SM-PERS-CU-STOR-ID ; 
  5 SM-PERS-DEPT-ID SM-PERS-DEPT-ID ; 
  5 SM-SMPL-CU-CO-ID SM-SMPL-CU-CO-ID ; 
  5 SM-SMPL-CU-STOR-ID SM-SMPL-CU-STOR-ID ; 
  5 SM-SMPL-DEPT-ID SM-SMPL-DEPT-ID ; 
  5 SM0IW-PREV-DTL-READ-ONLY SM0IW-PREV-DTL-READ-ONLY ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
end // end SM0IW05

//*** RECORD=SM0IW06 ****
// Working storage record for application SM0I to hold the
// initialized (empty) value of Rep-Agency header and detail.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW06 type basicRecord
  5 SM0IW-INIT-HDR SM0IW-INIT-HDR ; 
    10 SM-SAGCY-ID SM-SAGCY-ID ; 
    10 SM0IW-SM-SREP-ID SM0IW-SM-SREP-ID ; 
  5 SM0IW-INIT-DTL SM0IW-INIT-DTL ; 
    10 SM-SREP-PSTN-ID SM-SREP-PSTN-ID ; 
    10 XRT-SREP-ASSN-TYP XRT-SREP-ASSN-TYP ; 
    10 SM-SREP-COMRT-IND SM-SREP-COMRT-IND ; 
    10 SM0IW-SM-PRM-CU-CO-ID SM0IW-SM-PRM-CU-CO-ID ; 
    10 SM0IW-SM-PRM-CU-STOR-ID SM0IW-SM-PRM-CU-STOR-ID ; 
    10 SM0IW-SM-PRM-DEPT-ID SM0IW-SM-PRM-DEPT-ID ; 
    10 SM0IW-SM-PERS-CU-CO-ID SM0IW-SM-PERS-CU-CO-ID ; 
    10 SM0IW-SM-PERS-CU-STOR-ID SM0IW-SM-PERS-CU-STOR-ID ; 
    10 SM0IW-SM-PERS-DEPT-ID SM0IW-SM-PERS-DEPT-ID ; 
    10 SM0IW-SM-SMPL-CU-CO-ID SM0IW-SM-SMPL-CU-CO-ID ; 
    10 SM0IW-SM-SMPL-CU-STOR-ID SM0IW-SM-SMPL-CU-STOR-ID ; 
    10 SM0IW-SM-SMPL-DEPT-ID SM0IW-SM-SMPL-DEPT-ID ; 
    10 SM0IW-SM-SREP-EDT SM0IW-SM-SREP-EDT ; 
    10 SM0IW-SM-SREP-TDT SM0IW-SM-SREP-TDT ; 
    10 SM-SREP-TRMN-RSN SM-SREP-TRMN-RSN ; 
end // end SM0IW06

//*** RECORD=SM0IW07 ****
// Temp storage record layout for SM0IM002
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    4/14/93  RCORON    Created record.
// 
// ***********************
Record SM0IW07 type basicRecord
  5 SM0IW-TEMP-STRG-LENGTH SM0IW-TEMP-STRG-LENGTH ; 
  5 SM0IW-TEMP-STRG-REC SM0IW-TEMP-STRG-REC ; 
    10 SM0IW-DTL-REC SM0IW-DTL-REC [9] ; 
      15 VRAGCY01-GROUP VRAGCY01-GROUP ; 
      15 SM-SAGCY-NM SM-SAGCY-NM ; 
      15 SM-SREP-PSTN-ABRV SM-SREP-PSTN-ABRV ; 
end // end SM0IW07

//*** RECORD=SM0IW08 ****
// Working storage for pop-up window SM0IM003
// ************************************************************
// *                  Maintenance History                     *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    6-01-93  RCORON    Created record.
// 
// ***********************
Record SM0IW08 type basicRecord
  10 SM0IW-CT1 SM0IW-CT1 ; 
  10 SM0IW-CT2 SM0IW-CT2 ; 
  10 SM0IW-SIX SM0IW-SIX ; 
  10 SM0IW-PIX SM0IW-PIX ; 
  10 SM0IW-INX SM0IW-INX [10] ; 
  10 SM0IW-END SM0IW-END ; 
  10 SM0IW-FFL SM0IW-FFL ; 
  10 SM0IW-ERR SM0IW-ERR ; 
  10 SM0IW-HDR SM0IW-HDR ; 
  10 SM0IW-TBL-SZ SM0IW-TBL-SZ ; 
  10 SM-SREP-PSTN-ID SM-SREP-PSTN-ID [200] ; 
  10 SM-SREP-PSTN-DESC SM-SREP-PSTN-DESC [200] ; 
end // end SM0IW08

// SM_PERS_CU_CO_ID
DataItem SM-PERS-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_PERS_CU_STOR_ID
DataItem SM-PERS-CU-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_PRM_CU_CO_ID
DataItem SM-PRM-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_PRM_CU_STOR_ID
DataItem SM-PRM-CU-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_SMPL_CU_CO_ID
DataItem SM-SMPL-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_SMPL_CU_STOR_ID
DataItem SM-SMPL-CU-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_SREP_COMRT_IND
DataItem SM-SREP-COMRT-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// contract eff date
DataItem SM-SREP-EDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CONTRACT TERM DATE
DataItem SM-SREP-TDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_SREP_TRMN_RSN
DataItem SM-SREP-TRMN-RSN char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table counter
DataItem SM0IW-CT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen counter
DataItem SM0IW-CT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// sm0a curr date ccyymmdd
DataItem SM0IW-CURR-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0IW-CURR-DTL char(120)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-CURR-HDR char(8)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a curr time hhmm
DataItem SM0IW-CURR-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a curr time hhmmss
DataItem SM0IW-CURR-HHMMSS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a error flag
DataItem SM0IW-CUST-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display errors found switch
DataItem SM0IW-DISP-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage record length
DataItem SM0IW-DTL-REC char(138)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0IW-EDIT-CCYYMMDD-CENTURY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-CCYYMMDD-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-CCYYMMDD-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-CCYYMMDD-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-MMDDYY-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-MMDDYY-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-MMDDYY-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-MMDDYY-DISPLAY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-MMDDYY-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-EDIT-MMDDYY-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag
DataItem SM0IW-END char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem SM0IW-ERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a error flag
DataItem SM0IW-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem SM0IW-FFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen header
DataItem SM0IW-HDR char(39)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// highest page number
DataItem SM0IW-HIGHEST-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0IW-INIT-DTL char(110)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-INIT-HDR char(8)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// counter link screen/table
DataItem SM0IW-INX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// max lines per page
DataItem SM0IW-MAX-PER-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-MORE-VCUREP01-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-MORE-VRAGCY01-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-MORE-VREPOS01-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// passed index table location
DataItem SM0IW-PIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-PREV-DTL char(120)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-PREV-DTL-READ-ONLY char(9)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-PREV-HDR char(8)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-PREV-HDR-DESC char(81)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment process indicator
DataItem SM0IW-PROC-TYP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// protect map fields flag
DataItem SM0IW-PROMPT-ENTERED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work index pointer
DataItem SM0IW-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// requested page number
DataItem SM0IW-REQUESTED-PAGE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// protect map fields flag
DataItem SM0IW-RETURN-PROMPT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work index pointer
DataItem SM0IW-SEL-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a work index pointer
DataItem SM0IW-SEL-LINE smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// protect map fields flag
DataItem SM0IW-SELECTED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem SM0IW-SIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_PERS_CU_CO_ID
DataItem SM0IW-SM-PERS-CU-CO-ID char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_PERS_CU_STOR_ID
DataItem SM0IW-SM-PERS-CU-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_PERS_DEPT_ID
DataItem SM0IW-SM-PERS-DEPT-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_PRM_CU_CO_ID
DataItem SM0IW-SM-PRM-CU-CO-ID char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_PRM_CU_STOR_ID
DataItem SM0IW-SM-PRM-CU-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_PRM_DEPT_ID
DataItem SM0IW-SM-PRM-DEPT-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SMPL_CU_CO_ID
DataItem SM0IW-SM-SMPL-CU-CO-ID char(9)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SMPL_CU_STOR_ID
DataItem SM0IW-SM-SMPL-CU-STOR-ID char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SMPL_DEPT_ID
DataItem SM0IW-SM-SMPL-DEPT-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_PAY_CD
DataItem SM0IW-SM-SREP-EDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work rep id
DataItem SM0IW-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_PAY_CD
DataItem SM0IW-SM-SREP-TDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// counter link screen/table
DataItem SM0IW-TBL-SZ smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// temp storage record length
DataItem SM0IW-TEMP-STRG-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage record length
DataItem SM0IW-TEMP-STRG-REC char(1242)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem SM0IW-TSQ-REC-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VCMPNY01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VCUREP01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VDEPT001-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// protect map fields flag
DataItem SM0IW-VEND-NBR-ASGN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0IW-VEND-NBR-NUM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VRAGCY01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VKOCOM01
DataItem SM0IW-VRAGCY01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VREPOS01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VREPS001-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VSNADJ01
DataItem SM0IW-VREPS001-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// length of VKOCOM01
DataItem SM0IW-VREPVN01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VSAGCY01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment found flag
DataItem SM0IW-VSTORE01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0IW-WORK-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a work date
DataItem SM0IW-WORK-CHAR-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0IW-WORK-CHAR-DATE-BLANK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0IW-WORK-CHAR-DATE-MM-DD-YY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0IW-WORK-CHAR-DATE-MMDDYY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

