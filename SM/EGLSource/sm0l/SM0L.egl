package sm0l;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import pv.common.*;
import sm.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=SM0L ****
// SM0L displays REP information. It allows an authorized
// userid to modify a rep's info or add a new independent rep.
// This application also allows an HR entered rep to 'merge'
// with a currently existing manually entered rep.
// 
// ************************************************************
// *                    MAINTENANCE HISTORY                   *
// ************************************************************
// 
// Log #    Date     Name   Description
// -----  --------  ------  -----------------------------------
// 
//   001   3/12/93  RCORON  Created application.
//         5/24/93  RCORON  Modified reset map routine to mask
//                          confidential fields from inquire
//                          only userid's.  These fields are
//                          visible if cailvl(1) = 'y'.
//         5/25/93  RCORON  Added pf19 to allow changing vendor
//                          information for the rep.
//         6/07/93  GCALKI  Sorted the PF literals in order.
//   011  07/21/93  jbecke  fix deletion of employee hire date.
//                          do not override phone number or
//                          fax number with HR data.
//        11/09/93  RPATTE  DB2 CHANGES - XXX-ADDR(N) RESIZED.
//                          USE XXXADDR(N) INSTEAD.
// 
//        09/08/95  mmcgol  zip changed to one 10 byte field
//                          for Canadian project-sgrps affected
//                          are smols-dup-alt-addr, sm0ls-edit-
//                          h-zip, sm0ls-edit-m-zip, sm0ls-get-
//                          dtl-desc, sm0ls-map1-to-cdtl, sm0ls
//                          -map1-to-map2, sm0ls-pdtl-to-map1,
//                          sm0ls-reps-to map2, sm0ls-reps-to-
//                          pdtl, sm0ls-reset-map1, sm0ls-set-
//                          rep-data, sm0ls-pd-man-rep; records
//                          affected are sm0lw04 and sm0lw05;
//                          maps affected are sm0lm001,and
//                          sm0lm002.
// *********************
Program SM0L type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SM00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SM0LW01 SM0LW01; // record
  SM0LW02 SM0LW02; // record
  SM0LW03 SM0LW03; // record
  SM0LW04 SM0LW04; // record
  SM0LW05 SM0LW05; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SMWREC SMWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VREPVN01 VREPVN01; // record
  VSMAUD01 VSMAUD01; // record
  VSMCTL01 VSMCTL01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSTTBL; // table
  use SM0LM.SM0LM001,  // forms
      SM0LM.SM0LM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SM0L-00000: SM0L-00000();
    goto SM0L-10000;
    SM0L-10000: SM0L-10000();
    goto SM0L-20000;
    SM0L-20000: SM0L-20000();

    if (SM0LW-ERR-FL == "Y") /* prior errors*/
      goto SM0L-20000; /* CONVERSE SM0LM001*/
    end

    if (SM0LW-REFRESH-FL == "Y") /* PF18 or PA2 pressed or good update*/
      goto SM0L-10000; /* INITIALIZE FOR SM0LM001*/
    end

    if (converseVar.eventKey is pf17) /* goto MERGE REP screen*/
      goto SM0L-30000; /* INITIALIZE FOR SM0LM002*/
    end
                                     /* no errors and other keys pressed*/
    goto SM0L-20000; /* CONVERSE SM0LM001*/

    SM0L-30000: SM0L-30000();
    goto SM0L-40000;
    SM0L-40000: SM0L-40000();

    if (SM0LW-ERR-FL == "Y") /* prior errors*/
      goto SM0L-40000; /* CONVERSE SM0LM002*/
    end

    if (converseVar.eventKey is pf3 /* exit*/
     || SM0LW-MERGED-FL == "Y")     /* rep merging completed*/
      goto SM0L-10000; /* INITIALIZE FOR SM0LM001*/
    end

    if (converseVar.eventKey is pa2) /* exit*/
      goto SM0L-30000; /* INITIALIZE FOR SM0LM002*/
    end
                                     /* no errors and other keys pressed*/
    goto SM0L-40000; /* CONVERSE SM0LM002*/

  end // end main
end // end SM0L

// Initialize SM0L
Function SM0L-00000()
  /* ***********************************************************************/
  /* *  MODULE: INITIAL PROCESSING                                        **/
  /* * PURPOSE: Check security, set segmented transaction id and do       **/
  /* *          application initialization.                               **/
  /* ***********************************************************************/

  XSENTRY(); /* check goal security*/

  XSSEGTR(); /* set segmented transaction id*/

  SM0LS-INITIALIZE(); /* initialize*/

end // end SM0L-00000

// Initialize SM0LM001
Function SM0L-10000()
  /* ***********************************************************************/
  /* *  MODULE: INITIAL PROCESS FOR SM0LM001                              **/
  /* * PURPOSE: Prepare all relevant workareas for SM0LM001               **/
  /* ***********************************************************************/

  set SM0LM001 initial;

  SM0LS-PHDR-TO-MAP1(); /* move previous hdr key to SM0LM001*/

  SM0LS-MAP1-TO-CHDR(); /* move SM0LM001 to current hdr key*/

  if (SM0LW02.SM0LW-SM-SREP-ID != " " /* valued*/
   && SM0LW-PROC-TYP-IND != "A")     
    SM0LS-GET-REP-INFO(); /* get rep information*/
  else
    SM0LS-RESET-MAP1(); /* reset map1 attributes*/
  end

end // end SM0L-10000

// Converse SM0LM001
Function SM0L-20000()
   /*  */
   /* CONVERSE SM0LM001 MAP*/
   /*  */

  SM0LM001.SM0LM-CURR-DATE = VGVar.currentShortGregorianDate;

  converse SM0LM001 ;

  SM0LS-RESET-MAP1(); /* reset map attributes*/
  SM0LW01.SM0LW-ERR-FL = "N";
  SM0LM001.CAMSG = " ";
  SM0LW01.SM0LW-REFRESH-FL = "N";

  SM0LS-MAP1-TO-CHDR(); /* move SM0LM001 to CURR-HDR*/
  SM0LS-MAP1-TO-CDTL(); /* move SM0LM001 to CURR-DTL*/

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    SM0LS-PROC1-ENTER();
  else
    if (converseVar.eventKey is pf12 /* EDIT-ONLY key was pressed and allowed*/
     && SM0LW-PROC-TYP-IND != "I")  
      SM0LS-PROC1-ENTER();
    else
      if (converseVar.eventKey is pa2) /* CANCEL key was pressed*/
        SM0LS-PROC1-PA2();
      else
        if (converseVar.eventKey is pf1 /* Other valid PFkeys pressed*/
         || converseVar.eventKey is pf3 
         || converseVar.eventKey is pf4 
         || converseVar.eventKey is pf6)
          SM0LS-PROC1-PFKEYS();
        else
          if (converseVar.eventKey is pf15 /* Rep name search*/
           && SM0LW-PROC-TYP-IND != "A")   /* update/inquire mode*/
            COMMAREA.CATOAP = "SM0R";
            COMMAREA.CAITEM = " ";
            SMWREC.XXX-LAST-NM = SM0LW04.XXX-LAST-NM;
            SM0LS-SET-CAUSERA();
            XSEXIT();
            SM0LM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error in fastpath*/
            SM0LW-ERR-FL = "Y";
          else
            if (converseVar.eventKey is pf17    /* Merge rep pfkey pressed*/
             && SM0LW-PROC-TYP-IND == "U"       /* update mode*/
             && COMMAREA.CACLVL[1] == "Y"       /* user id is authorized*/
             && SM0LW03.SM0LW-SM-SREP-ID != " " /* there is a rep on the screen*/
             && SM0LM001.SM-SREP-EMPL-ID == " ") /* and is not nike employed*/
              SM0LS-PROC1-PFKEYS();
            else
              if (converseVar.eventKey is pf17    /* Merge rep pfkey pressed*/
               && SM0LW-PROC-TYP-IND == "U"       /* update mode*/
               && COMMAREA.CACLVL[1] == "Y"       /* user id is authorized*/
               && SM0LW03.SM0LW-SM-SREP-ID != " " /* there is a rep on the screen*/
               && SM0LM001.SM-SREP-EMPL-ID != " " /* and is nike employed and was*/
               && SM0LM001.PV-MSA-VEND-NBR == " ") /* never an independent rep*/
                SM0LS-PROC1-PFKEYS();
              else
                if (converseVar.eventKey is pf18 /* Add rep pfkey pressed*/
                 && SM0LW-PROC-TYP-IND != "A"    /* update or inquire mode*/
                 && COMMAREA.CAADDFL == "Y")     /* user id is authorized*/
                  SM0LS-PROC1-PFKEYS();
                else
                  if (converseVar.eventKey is pf19 /* Rep vendor screen*/
                   && SM0LW-PROC-TYP-IND != "A"    /* update or inquire mode*/
                   && SM0LM001.PV-MSA-VEND-NBR != " ") /* rep is a vendor*/
                    if (COMMAREA.CACHGFL == "Y"   /* user id is authorized for chg*/
                     || COMMAREA.CACLVL[1] == "Y" /* user id is authorized for chg(1)*/
                     || COMMAREA.CAILVL[1] == "Y") /* user id is authorized for inq(1)*/
                      SM0LS-PROC1-PFKEYS();
                    else
                      converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
                      SM0LW-ERR-FL = "Y"; /* error*/
                    end
                  else
                    converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
                    SM0LW-ERR-FL = "Y"; /* error*/
                  end
                end
              end
            end
          end
        end
      end
    end
  end


end // end SM0L-20000

// Initialize SM0LM002
Function SM0L-30000()
  /* ***********************************************************************/
  /* *  MODULE: INITIAL PROCESS FOR SM0LM002                              **/
  /* * PURPOSE: Prepare all relevant workareas for SM0LM002               **/
  /* ***********************************************************************/

  set SM0LM002 initial;
  SM0LW-CONFIRM-FL = "N";

  SM0LS-MAP1-TO-MAP2(); /* move map1 info to map2*/

  SM0LS-RESET-MAP2(); /* reset map2 attributes*/

end // end SM0L-30000

// Converse SM0LM002
Function SM0L-40000()
   /*  */
   /* CONVERSE SM0LM002 MAP*/
   /*  */

  SM0LM002.SM0LM-CURR-DATE = VGVar.currentShortGregorianDate;

  converse SM0LM002 ;

  SM0LS-RESET-MAP2(); /* reset map attributes*/
  SM0LW01.SM0LW-ERR-FL = "N";
  SM0LM002.CAMSG = " ";
  SM0LW01.SM0LW-MERGED-FL = "N";

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    SM0LS-PROC2-ENTER();
  else
    if (converseVar.eventKey is pa2) /* CANCEL key was pressed*/
      return;
    else
      if (converseVar.eventKey is pf1 /* Other valid PFkeys pressed*/
       || converseVar.eventKey is pf3 
       || converseVar.eventKey is pf4)
        SM0LS-PROC2-PFKEYS();
      else
        converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
        SM0LW-ERR-FL = "Y"; /* error*/
      end
    end
  end


end // end SM0L-40000

// Call IO0160 add vragcy
Function SM0LS-ADD-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-ADD-VRAGCY*/
   /* This routine calls IO0160 to add a ragcy row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("A ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != -803) /* not duplicate record on insert*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-ADD-VRAGCY

// Call IO0020 add vreps001
Function SM0LS-ADD-VREPS0()
   /* **********************************************************************/
   /* SM0LS-ADD-VREPS0*/
   /* This routine calls IO0020 to add a rep row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0020" ("A ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != -803) /* not duplicate record on insert*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-ADD-VREPS0

// Call IO0480 add vsmaud01
Function SM0LS-ADD-VSMAUD()
   /* **********************************************************************/
   /* SM0LS-ADD-VSMAUD*/
   /* This routine calls IO0480 to insert an SM audit record.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0480" ("A ", SQLCA, VSMAUD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMAUD01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-ADD-VSMAUD

// Call IO0160 close vragcy csr
Function SM0LS-CLOS-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-CLOS-VRAGCY*/
   /* This routine calls IO0160 to close a Rep-Agency assignment cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("CS", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "CS      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-CLOS-VRAGCY

// Delete HR entered rep
Function SM0LS-DEL-HR-REP()
   /* **********************************************************************/
   /* Delete the HR entered rep.*/
   /* **********************************************************************/

  /* **********************************************************************/
  /* Find HR entered rep row*/
  /* **********************************************************************/
  SM4REC.SM4REPID = SM0LW01.SM-SREP-ID[2];

  SM0LS-FIND-VREPS0(); /* call io0020 to read the reps table*/

  if (SM0LW-VREPS001-FOUND-FL == "N") /* rep rec was not found*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0073); /* rec was updated by another*/
    return;
  end

  /* **********************************************************************/
  /* Set rep before image and log to audit table*/
  /* **********************************************************************/
  SM0LS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VREPS001"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0LW-VREPS001-LENGTH;
  VSMAUD01.SM-AUDIT-TYP-CD = "D";
  VSMAUD01.SM-BFR-AFT-IND = "B";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM4REC.VREPS001-GROUP;

  SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/

  /* **********************************************************************/
  /* Delete the HR entered rep record held*/
  /* **********************************************************************/
  SM0LS-DEL-VREPS0(); /* Delete VREPS001*/

  if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0073); /* rec was updated by another*/
    return;
  end


end // end SM0LS-DEL-HR-REP

// Call IO0160 delete vragcy rows
Function SM0LS-DEL-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-DEL-VRAGCY*/
   /* This routine calls IO0160 to delete all Rep-agency assignment rows*/
   /* for the given rep id.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("D1", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "D1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-DEL-VRAGCY

// Call IO0020 del vreps001
Function SM0LS-DEL-VREPS0()
   /* **********************************************************************/
   /* SM0LS-DEL-VREPS0*/
   /* This routine calls IO0020 to delete a unique rep record.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0020" ("D ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "D       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-DEL-VREPS0

// Dup mail addr to home addr
Function SM0LS-DUP-ALT-ADDR()
   /* **********************************************************************/
   /* Copy mailing address into the home address if adding an independent*/
   /* rep and of no home address was entered.*/
   /* **********************************************************************/

   /* zip changed to one 10 byte field for Canadian project*/

  if (SM4REC.XXXAADR1 == " "
   && SM4REC.XXXAADR2 == " "
   && SM4REC.XXXACITY == " "
   && SM4REC.XXXAST == " "
   && SM4REC.XXXAZIP == " ")

    SM4REC.XXXAADR1 = SM4REC.XXXADDR1;
    SM4REC.XXXAADR2 = SM4REC.XXXADDR2;
    SM4REC.XXXACITY = SM4REC.XXXCITY;
    SM4REC.XXXAST = SM4REC.XSTCD;
    SM4REC.XXXAZIP = SM4REC.XXXZIP;

  end


end // end SM0LS-DUP-ALT-ADDR

// Edit rep effective date
Function SM0LS-EDIT-EDT()
   /* **********************************************************************/
   /* Edit Rep effective date*/
   /* **********************************************************************/

   /* Validate date format*/

  SM0LW04.SM-SREP-CONT-EDT = 0;

  if (SM0LW04.SM0LW-SM-SREP-CONT-EDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    SM0LW01.SM0LW-WORK-CHAR-DATE = SM0LW04.SM0LW-SM-SREP-CONT-EDT;
    SM0LS-VAL-DT-FMT(); /* validate date format*/
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      SM0LW04.SM-SREP-CONT-EDT = TA2REC.TA2GRGGN;
      SM0LW04.SM0LW-SM-SREP-CONT-EDT = TA2REC.TA2GRGB;
      SM0LM001.SM0LM-SM-SREP-CONT-EDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* invalid eff date*/
      set SM0LM001.SM0LM-SM-SREP-CONT-EDT cursor, bold;
      return;
    end
  else
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0014); /* invalid eff date*/
    set SM0LM001.SM0LM-SM-SREP-CONT-EDT cursor, bold;
    return;
  end

   /* Effective date must not be after terminate date if both are*/
   /* entered.*/

  if (SM0LW04.SM-SREP-CONT-EDT != 0
   && SM0LW04.SM-SREP-CONT-TDT != 0
   && SM0LW04.SM-SREP-CONT-EDT > SM0LW04.SM-SREP-CONT-TDT)
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0075); /* eff dt must be bfr exp dt*/
    set SM0LM001.SM0LM-SM-SREP-CONT-EDT cursor, bold;
    set SM0LM001.SM0LM-SM-SREP-CONT-TDT bold;
  end


end // end SM0LS-EDIT-EDT

// Edit fax number
Function SM0LS-EDIT-FAX()
   /* **********************************************************************/
   /* Edit Rep fax number*/
   /* **********************************************************************/

   /* Set up char to num conversion parms*/

  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = "0";

  if (SM0LW04.SM0LW-FAX-NBR != " ") /* fax suffix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 4;
    SMWREC.SMW-NUM-CHK-WORD = SM0LW04.SM0LW-FAX-NBR;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* fax number must be numeric*/
      set SM0LM001.SM0LM-FAX-NBR cursor, bold;
    else
      SM0LW04.SM0LW-FAX-NBR = SMWREC.SMW-NUM-CHK-WORD;
      SM0LM001.SM0LM-FAX-NBR = SM0LW04.SM0LW-FAX-NBR;
    end
  else
    if (SM0LW04.SM0LW-FAX-AREA != " " /* fax area code is filled*/
     || SM0LW04.SM0LW-FAX-PRE != " ") /* fax prefix is filled*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0027); /* fax number must be filled*/
      set SM0LM001.SM0LM-FAX-NBR cursor, bold;
    end
  end

  if (SM0LW04.SM0LW-FAX-PRE != " ") /* fax prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0LW04.SM0LW-FAX-PRE;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* fax number must be numeric*/
      set SM0LM001.SM0LM-FAX-PRE cursor, bold;
    else
      SM0LW04.SM0LW-FAX-PRE = SMWREC.SMW-NUM-CHK-WORD;
      SM0LM001.SM0LM-FAX-PRE = SM0LW04.SM0LW-FAX-PRE;
    end
  else
    if (SM0LW04.SM0LW-FAX-AREA != " " /* fax area code is filled*/
     || SM0LW04.SM0LW-FAX-NBR != " ") /* fax suffix is filled*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0027); /* fax number must be filled*/
      set SM0LM001.SM0LM-FAX-PRE cursor, bold;
    end
  end

  if (SM0LW04.SM0LW-FAX-AREA != " ") /* fax prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0LW04.SM0LW-FAX-AREA;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* fax number must be numeric*/
      set SM0LM001.SM0LM-FAX-AREA cursor, bold;
    else
      SM0LW04.SM0LW-FAX-AREA = SMWREC.SMW-NUM-CHK-WORD;
      SM0LM001.SM0LM-FAX-AREA = SM0LW04.SM0LW-FAX-AREA;
    end
  else
    if (SM0LW04.SM0LW-FAX-PRE != " " /* fax prefix is filled*/
     || SM0LW04.SM0LW-FAX-NBR != " ") /* fax suffix is filled*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0027); /* fax number must be filled*/
      set SM0LM001.SM0LM-FAX-AREA cursor, bold;
    end
  end


end // end SM0LS-EDIT-FAX

// Edit home addr line 1
Function SM0LS-EDIT-H-ADDR()
   /* **********************************************************************/
   /* Edit Rep's home address line 1*/
   /* **********************************************************************/
  if (SM0LW04.XXX-ALT-ADDR1 == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0025); /* address line required*/
    set SM0LM001.XXX-ALT-ADDR1 cursor, bold;
  end


end // end SM0LS-EDIT-H-ADDR

// Edit home addr city
Function SM0LS-EDIT-H-CITY()
   /* **********************************************************************/
   /* Edit Rep's home address city*/
   /* **********************************************************************/
  if (SM0LW04.XXX-ALT-CITY == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0024); /* city must be present*/
    set SM0LM001.XXX-ALT-CITY cursor, bold;
  end


end // end SM0LS-EDIT-H-CITY

// Edit home addr state code
Function SM0LS-EDIT-H-ST()
   /* **********************************************************************/
   /* Edit Rep's home address' state code*/
   /* **********************************************************************/
  if (SM0LW04.XXX-ALT-ST-CD in XSTTBL.XSTCD
   && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
  else
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0023); /* invalid state code*/
    set SM0LM001.XXX-ALT-ST-CD cursor, bold;
  end


end // end SM0LS-EDIT-H-ST

// Edit home addr zip code
Function SM0LS-EDIT-H-ZIP()
   /* **********************************************************************/
   /* Edit Rep's home address zip code*/
   /* **********************************************************************/



  if (SM0LW04.SM0LW-XXXAZIP == " ") /* 5 digit zip is filled*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0022); /* zip code must be numeric*/
    set SM0LM001.SM0LM-XXXAZIP cursor, bold;
  else
    SM0LM001.SM0LM-XXXAZIP = SM0LW04.SM0LW-XXXAZIP;
  end


end // end SM0LS-EDIT-H-ZIP

// Prompt & edit for ind rep
Function SM0LS-EDIT-IND-REP()
   /* **********************************************************************/
   /* Edit for a manually entered rep*/
   /* **********************************************************************/

  /* ************************************************************************/
  /* manually entered rep id must not be blanks*/
  /* ************************************************************************/
  if (SM0LM002.SM0LM-SM-SREP-ID[1] == " ")
    set SM4REC empty;
    SM0LW-PTR = 1; /* point to the manual ent rep on map2*/
    SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
    SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0060); /* rep id must be entered*/
    set SM0LM002.SM0LM-SM-SREP-ID[1] cursor, bold;
    return;
  end

  /* ************************************************************************/
  /* reformat manually entered rep id on the map to binary*/
  /* ************************************************************************/
  SMWREC.SMW-NUM-CHK-WORD = SM0LM002.SM0LM-SM-SREP-ID[1];
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0036); /* this field must be numeric*/
    set SM0LM002.SM0LM-SM-SREP-ID[1] cursor, bold;
    return;
  else
    SM0LM002.SM0LM-SM-SREP-ID[1] = SMWREC.SMW-NUM-CHK-WORD;
    SM4REC.SM4REPID = SMWREC.SMW-NUM-CHK-NBR;
  end

  /* ************************************************************************/
  /* rep id must exist in the rep table and must not have an employee id*/
  /* ************************************************************************/
  SM0LS-FIND-VREPS0(); /* call io0020 to read the reps table*/

  if (SM0LW-VREPS001-FOUND-FL == "N") /* rep rec was not found*/
    set SM4REC empty;
    SM0LW-PTR = 1; /* point to the manual ent rep on map2*/
    SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
    SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0009); /* rep id not found*/
    set SM0LM002.SM0LM-SM-SREP-ID[1] cursor, bold;
  else /* Rep rec was found*/
    if (SM4REC.SM-SREP-EMPL-ID != " ") /* read rep nike employed*/
      SM0LW-PTR = 1; /* point to the manual ent rep on map2*/
      SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
      SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0079); /* rep must not have an empl id*/
      set SM0LM002.SM0LM-SM-SREP-ID[1] cursor, bold;
    else
      SM0LW-PTR = 1; /* point to the HR rep on map2*/
      SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
      set VREPVN01 empty;
      VREPVN01.SM-SREP-ID = SM4REC.SM4REPID;
      SM0LS-FIND-VREPVN(); /* Call IO6590 read rep vendor*/
      SM0LM002.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;
      SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
      if (SM0LW01.SM0LW-SM-SREP-ID != SM0LM002.SM0LM-SM-SREP-ID[1])
        SM0LW-CONFIRM-FL = "N";
        SM0LW01.SM0LW-SM-SREP-ID = SM0LM002.SM0LM-SM-SREP-ID[1];
      end
    end
  end


end // end SM0LS-EDIT-IND-REP

// Edit mailing addr line 1
Function SM0LS-EDIT-M-ADDR()
   /* **********************************************************************/
   /* Edit Rep's mailing address line 1*/
   /* **********************************************************************/
  if (SM0LW04.XXXADDR1 == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0025); /* address line required*/
    set SM0LM001.XXXADDR1 cursor, bold;
  end


end // end SM0LS-EDIT-M-ADDR

// Edit mailing addr city
Function SM0LS-EDIT-M-CITY()
   /* **********************************************************************/
   /* Edit Rep's mailing address city*/
   /* **********************************************************************/
  if (SM0LW04.XXX-CITY == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0024); /* city must be present*/
    set SM0LM001.XXX-CITY cursor, bold;
  end


end // end SM0LS-EDIT-M-CITY

// Edit mailing addr state code
Function SM0LS-EDIT-M-ST()
   /* **********************************************************************/
   /* Edit Rep's mailing address' state code*/
   /* **********************************************************************/
  if (SM0LW04.XST-ST-CD in XSTTBL.XSTCD
   && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
  else
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0023); /* invalid state code*/
    set SM0LM001.XST-ST-CD cursor, bold;
  end


end // end SM0LS-EDIT-M-ST

// Edit mailing addr zip code
Function SM0LS-EDIT-M-ZIP()
   /* **********************************************************************/
   /* Edit Rep's mailing address zip code*/
   /* **********************************************************************/

   /* zip code changed to one 10 byte field for Canadian project 9/95*/

  if (SM0LW04.SM0LW-XXXZIP == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0022); /* zip code must be numeric*/
    set SM0LM001.SM0LM-XXXZIP cursor, bold;
  else
    SM0LM001.SM0LM-XXXZIP = SM0LW04.SM0LW-XXXZIP;
  end

end // end SM0LS-EDIT-M-ZIP

// Prompt & edit for an HR Rep
Function SM0LS-EDIT-NKE-REP()
   /* **********************************************************************/
   /* Edit for an HR entered rep*/
   /* **********************************************************************/

  /* ************************************************************************/
  /* HR entered rep id on the map must not be blanks*/
  /* ************************************************************************/
  if (SM0LM002.SM0LM-SM-SREP-ID[2] == " ")
    set SM4REC empty;
    SM0LW-PTR = 2; /* point to the HR rep on map2*/
    SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
    SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0060); /* rep id must be entered*/
    set SM0LM002.SM0LM-SM-SREP-ID[2] cursor, bold;
    return;
  end

  /* ************************************************************************/
  /* reformat HR entered rep id on the map to binary*/
  /* ************************************************************************/
  SMWREC.SMW-NUM-CHK-WORD = SM0LM002.SM0LM-SM-SREP-ID[2];
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0036); /* this field must be numeric*/
    set SM0LM002.SM0LM-SM-SREP-ID[2] cursor, bold;
    return;
  else
    SM0LM002.SM0LM-SM-SREP-ID[2] = SMWREC.SMW-NUM-CHK-WORD;
    SM4REC.SM4REPID = SMWREC.SMW-NUM-CHK-NBR;
  end

  /* ************************************************************************/
  /* HR entered rep id on the map must exist in the sales rep table*/
  /* and must have an employee id.*/
  /* ************************************************************************/
  SM0LS-FIND-VREPS0(); /* call io0020 to read the reps table*/

  if (SM0LW-VREPS001-FOUND-FL == "N") /* rep rec was not found*/
    set SM4REC empty;
    SM0LW-PTR = 2; /* point to the HR rep on map2*/
    SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
    SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0009); /* rep id not found*/
    set SM0LM002.SM0LM-SM-SREP-ID[2] cursor, bold;
    return;
  else /* Rep rec was found*/
    if (SM4REC.SM-SREP-EMPL-ID == " ") /* read rep is independent*/
      SM0LW-PTR = 2; /* point to the HR rep on map2*/
      SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
      SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0078); /* rep must be nike employed*/
      set SM0LM002.SM0LM-SM-SREP-ID[2] cursor, bold;
      return;
    end
  end

  /* ************************************************************************/
  /* HR entered rep id on the map must not have a vendor number*/
  /* ************************************************************************/
  set VREPVN01 empty;
  VREPVN01.SM-SREP-ID = SM4REC.SM4REPID;
  SM0LS-FIND-VREPVN(); /* call IO6590 read rep vendor*/
  if (SQLCA.VAGen_SQLCODE == 0) /* rep is has a vendor number*/
    SM0LW-PTR = 2; /* point to the HR rep on map2*/
    SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
    SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0085); /* HR rep has a vendor number*/
    set SM0LM002.SM0LM-SM-SREP-ID[2] cursor, bold;
    return;
  end

  /* ************************************************************************/
  /* HR entered rep id edit okay*/
  /* ************************************************************************/
  SM0LW-PTR = 2; /* point to the HR rep on map2*/
  SM0LS-REPS-TO-MAP2(); /* move VREPS001 to SM0LM002*/
  SM0LS-RESET-MAP2(); /* Reset SM0LM002 attributes*/
  if (SM0LW01.SM0LW-SM-SREP-ID != SM0LM002.SM0LM-SM-SREP-ID[2])
    SM0LW-CONFIRM-FL = "N";
    SM0LW01.SM0LW-SM-SREP-ID = SM0LM002.SM0LM-SM-SREP-ID[2];
  end


end // end SM0LS-EDIT-NKE-REP

// Edit phone number
Function SM0LS-EDIT-PHONE()
   /* **********************************************************************/
   /* Edit Rep phone number*/
   /* **********************************************************************/

   /* Set up char to num conversion parms*/

  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = "0";

  if (SM0LW04.SM0LW-XXXPHNN != " ") /* phone suffix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 4;
    SMWREC.SMW-NUM-CHK-WORD = SM0LW04.SM0LW-XXXPHNN;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0028); /* phone number must be numeric*/
      set SM0LM001.SM0LM-XXXPHNN cursor, bold;
    else
      SM0LW04.SM0LW-XXXPHNN = SMWREC.SMW-NUM-CHK-WORD;
      SM0LM001.SM0LM-XXXPHNN = SM0LW04.SM0LW-XXXPHNN;
    end
  else
    if (SM0LW04.SM0LW-XXXPHNA != " " /* phone area code is filled*/
     || SM0LW04.SM0LW-XXXPHNP != " ") /* phone prefix is filled*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0029); /* phone number must be filled*/
      set SM0LM001.SM0LM-XXXPHNN cursor, bold;
    end
  end

  if (SM0LW04.SM0LW-XXXPHNP != " ") /* phone prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0LW04.SM0LW-XXXPHNP;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0028); /* phone number must be numeric*/
      set SM0LM001.SM0LM-XXXPHNP cursor, bold;
    else
      SM0LW04.SM0LW-XXXPHNP = SMWREC.SMW-NUM-CHK-WORD;
      SM0LM001.SM0LM-XXXPHNP = SM0LW04.SM0LW-XXXPHNP;
    end
  else
    if (SM0LW04.SM0LW-XXXPHNA != " " /* phone area code is filled*/
     || SM0LW04.SM0LW-XXXPHNN != " ") /* phone suffix is filled*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0029); /* phone number must be filled*/
      set SM0LM001.SM0LM-XXXPHNP cursor, bold;
    end
  end

  if (SM0LW04.SM0LW-XXXPHNA != " ") /* phone prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0LW04.SM0LW-XXXPHNA;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0028); /* phone number must be numeric*/
      set SM0LM001.SM0LM-XXXPHNA cursor, bold;
    else
      SM0LW04.SM0LW-XXXPHNA = SMWREC.SMW-NUM-CHK-WORD;
      SM0LM001.SM0LM-XXXPHNA = SM0LW04.SM0LW-XXXPHNA;
    end
  else
    if (SM0LW04.SM0LW-XXXPHNP != " " /* phone prefix is filled*/
     || SM0LW04.SM0LW-XXXPHNN != " ") /* phone suffix is filled*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0029); /* phone number must be filled*/
      set SM0LM001.SM0LM-XXXPHNA cursor, bold;
    end
  end


end // end SM0LS-EDIT-PHONE

// Edit Rep name
Function SM0LS-EDIT-REPNAME()
   /* **********************************************************************/
   /* Edit Rep's name*/
   /* **********************************************************************/
  if (SM0LW04.XXX-FRST-NM == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0039); /* Rep name is required*/
    set SM0LM001.XXX-FRST-NM cursor, bold;
  end

  if (SM0LW04.XXX-LAST-NM == " ")
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0039); /* Rep name is required*/
    set SM0LM001.XXX-LAST-NM cursor, bold;
  end


end // end SM0LS-EDIT-REPNAME

// Edit rep term date
Function SM0LS-EDIT-TDT()
   /* **********************************************************************/
   /* Edit Rep termination date*/
   /* **********************************************************************/

  SM0LW04.SM-SREP-CONT-TDT = 0;

  if (SM0LW04.SM0LW-SM-SREP-CONT-TDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    SM0LW01.SM0LW-WORK-CHAR-DATE = SM0LW04.SM0LW-SM-SREP-CONT-TDT;
    SM0LS-VAL-DT-FMT(); /* validate date format*/
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      SM0LW04.SM-SREP-CONT-TDT = TA2REC.TA2GRGGN;
      SM0LW04.SM0LW-SM-SREP-CONT-TDT = TA2REC.TA2GRGB;
      SM0LM001.SM0LM-SM-SREP-CONT-TDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* invalid end date*/
      set SM0LM001.SM0LM-SM-SREP-CONT-TDT cursor, bold;
    end
  end


end // end SM0LS-EDIT-TDT

// Call IO0160 read vragcy
Function SM0LS-FIND-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-FIND-VRAGCY*/
   /* This routine calls IO0160 to read a unique ragcy record.*/
   /* If found, the ragcy found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("S ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0LW-VRAGCY01-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      SM0LW-VRAGCY01-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0LS-FIND-VRAGCY

// Call IO0020 read vreps001
Function SM0LS-FIND-VREPS0()
   /* **********************************************************************/
   /* SM0LS-FIND-VREPS0*/
   /* This routine calls IO0020 to read a unique rep record.*/
   /* If found, the rep found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0LW-VREPS001-FOUND-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      SM0LW-VREPS001-FOUND-FL = "N";
    else /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0LS-FIND-VREPS0

// Call IO6590 read vrepvn01
Function SM0LS-FIND-VREPVN()
   /* **********************************************************************/
   /* SM0LS-FIND-VREPVN*/
   /* This routine calls IO6590 to read a unique Rep-Vendor row given*/
   /* a rep id.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6590" ("SA", SQLCA, VREPVN01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPVN01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "SA      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6590"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-FIND-VREPVN

// Call IO0050 find vsagcy
Function SM0LS-FIND-VSAGCY()
   /* **********************************************************************/
   /* SM0LS-FIND-VSAGCY*/
   /* This routine calls IO0050 to read a unique agency record.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0050"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-FIND-VSAGCY

// Get Agency name
Function SM0LS-GET-AGCY-NM()
   /* **********************************************************************/
   /* Get agency name*/
   /* **********************************************************************/

  SM1REC.SM1AGYID = SM0LM001.SM-SAGCY-ID;

  SM0LS-FIND-VSAGCY(); /* call io0050 to read the agency table*/

  if (SQLCA.VAGen_SQLCODE == 0)
    SM0LM001.SM-SAGCY-NM = SM1REC.SM1AGYNM;
  end

end // end SM0LS-GET-AGCY-NM

// Get detail desc/Edit info
Function SM0LS-GET-DTL-DESC()
   /* **********************************************************************/
   /* Get SM0LM001 detail descriptions*/
   /* This routine gets the rest of the display only information for*/
   /* the currently held rep id from other tables.  This routine also*/
   /* doubles up as an edit process for changeable fields if the*/
   /* SM0LW-DISP-ERR-FL is set to 'Y'.*/
   /* **********************************************************************/
   /* EDIT REP EFFECTIVE & TERMINATION DATES*/
   /* **********************************************************************/
  if (SM0LW-DISP-ERR-FL == "Y")
    if (SM0LW-PROC-TYP-IND == "A") /* if adding a rep record*/
      SM0LS-EDIT-TDT(); /* edit rep exp dt*/
      SM0LS-EDIT-EDT(); /* edit rep eff dt*/
    else
      if (SM0LW-PROC-TYP-IND == "U") /* if userid is authorized for*/
        SM0LS-EDIT-TDT(); /* edit rep exp dt*/
        SM0LS-EDIT-EDT(); /* edit rep eff dt*/
      end
    end
  end
   /* **********************************************************************/
   /* EDIT REP'S FAX & PHONE NUMBERS*/
   /* **********************************************************************/
  if (SM0LW-DISP-ERR-FL == "Y")
    if (SM0LW-PROC-TYP-IND == "A" /* if adding a rep record or*/
     || SM0LW-PROC-TYP-IND == "U") /* user is authorized for chg*/
      SM0LS-EDIT-FAX(); /* edit fax nbr*/
      SM0LS-EDIT-PHONE(); /* edit phone nbr*/
    end
  end
   /* **********************************************************************/
   /* EDIT REP'S HOME ADDRESS*/
   /* **********************************************************************/
  if (SM0LW-DISP-ERR-FL == "Y")
    if (SM0LW-PROC-TYP-IND == "A") /* if adding a rep record*/
      if (SM0LW04.XXX-ALT-ADDR1 == " " /* if the entire home address*/
       && SM0LW04.XXX-ALT-ADDR1 == " " /* was not entered, skip edit*/
       && SM0LW04.XXX-ALT-CITY == " "  /* for this and the update*/
       && SM0LW04.XXX-ALT-ST-CD == " " /* routine will dup this from*/
       && SM0LW04.XXX-ALT-ST-CD == " " /* the mailing address*/
       && SM0LW04.SM0LW-XXXAZIP == " ")

      else
        SM0LS-EDIT-H-ZIP(); /* edit home addr zip*/
        SM0LS-EDIT-H-ST(); /* edit home addr state*/
        SM0LS-EDIT-H-CITY(); /* edit home addr city*/
        SM0LS-EDIT-H-ADDR(); /* edit home addr line 1*/
      end
    else
      if (SM0LW-PROC-TYP-IND == "U" /* if userid is authorized for*/
       && SM0LW05.SM-SREP-EMPL-ID == " ") /* chg & rep is independent*/
        SM0LS-EDIT-H-ZIP(); /* edit home addr zip*/
        SM0LS-EDIT-H-ST(); /* edit home addr state*/
        SM0LS-EDIT-H-CITY(); /* edit home addr city*/
        SM0LS-EDIT-H-ADDR(); /* edit home addr line 1*/
      end
    end
  end
   /* **********************************************************************/
   /* EDIT REP'S MAILING ADDRESS*/
   /* **********************************************************************/
  if (SM0LW-DISP-ERR-FL == "Y")
    if (SM0LW-PROC-TYP-IND == "A" /* if adding a rep record or*/
     || SM0LW-PROC-TYP-IND == "U") /* user is authorized for chg*/
      SM0LS-EDIT-M-ZIP(); /* edit home addr zip*/
      SM0LS-EDIT-M-ST(); /* edit home addr state*/
      SM0LS-EDIT-M-CITY(); /* edit home addr city*/
      SM0LS-EDIT-M-ADDR(); /* edit home addr line 1*/
    end
  end
   /* **********************************************************************/
   /* EDIT REP'S NAME*/
   /* **********************************************************************/
  if (SM0LW-DISP-ERR-FL == "Y")
    if (SM0LW-PROC-TYP-IND == "A") /* if adding a rep record*/
      SM0LS-EDIT-REPNAME(); /* edit rep's name*/
    else
      if (SM0LW-PROC-TYP-IND == "U") /* userid is authorized for chg*/
        if (SM0LW05.SM-SREP-EMPL-ID == " ") /* rep is independent*/
          SM0LS-EDIT-REPNAME(); /* edit rep's name*/
        else /* rep is nike employed*/
          if (SM0LW04.XXX-LAST-NM != SM0LW05.XXX-LAST-NM)
            SM0LW-ERR-FL = "Y";
            converseLib.validationFailed(0084); /* Cannot change last name*/
            set SM0LM001.XXX-LAST-NM cursor, bold;
          end
        end
      end
    end
  end

  if (SM0LW-PROC-TYP-IND == "U" /* if updating a rep record*/
   || SM0LW-PROC-TYP-IND == "I") /* or inquiring a rep record*/
   /* **********************************************************************/
   /* GET REP VENDOR NUMBER*/
   /* **********************************************************************/
    SM0LS-GET-REP-VEND(); /* get rep's vendor nbr*/
   /* **********************************************************************/
   /* GET REP AGENCY ASSIGNMENT*/
   /* **********************************************************************/
    SM0LS-GET-REP-ASSN(); /* get rep's agency assgnmt*/
  end


end // end SM0LS-GET-DTL-DESC

// Get next rep id to use
Function SM0LS-GET-NEXT-ID()
   /* **********************************************************************/
   /* SM0LS-GET-NEXT-ID*/
   /* This routine calls IO6580 to read the control record and increment*/
   /* the rep id.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6580" ("S ", SQLCA, VSMCTL01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    if (VSMCTL01.SM-LST-REP-ID < 9999)
      SM0LW01.SM0LW-SM-NXT-REP-ID = VSMCTL01.SM-LST-REP-ID + 1;
    else
      set TAEREC empty;
      TAEREC.TAEDESC1 = "REP ID OVERFLOWED.";
      TAEREC.TAEDESC2 = "CANNOT ADD MORE REPS.";
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "IO6580";
      TA1REC.TA1LOC = "NX REPID";
      TA1REC.TA1MAP = "SM0LM001";
      try
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
      end
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* return to goal*/
      exit program;
    end
  else
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMCTL01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6580"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-GET-NEXT-ID

// Get Rep agency assignment
Function SM0LS-GET-REP-ASSN()
   /* **********************************************************************/
   /* Get Rep's agency assignment*/
   /* This routine will return:  blanks on the map if rep is not assigned*/
   /* to any agency;  the agency id and name if assigned to one active*/
   /* agency, and '***' with no agency description if assigned to more*/
   /* than one active agency.*/
   /* **********************************************************************/

  SM5REC.SM4REPID = SM4REC.SM4REPID;
  SM0LW-MORE-VRAGCY-FL = "Y";
  SM0LM001.SM-SAGCY-ID = " ";
  SM0LM001.SM-SAGCY-NM = " ";

  SM0LS-OPEN-VRAGCY(); /* call IO0160 open cursor 'ss'*/

  SM0LS-SCAN-VRAGCY(); /* call IO0160 fetch next row*/

  while (SM0LW-MORE-VRAGCY-FL == "Y")
    if (SM5REC.XXXSTAT == "I")
      SM0LW-MORE-VRAGCY-FL = "N"; /* stop when inactive row is hit*/
    else
      if (SM0LM001.SM-SAGCY-ID == " ") /* not yet filled*/
        SM0LM001.SM-SAGCY-ID = SM5REC.SM1AGYID;
        SM0LS-SCAN-VRAGCY(); /* call IO0160 fetch next row*/
      else /* rep assigned to more than 1*/
        SM0LM001.SM-SAGCY-ID = "****";
        SM0LW-MORE-VRAGCY-FL = "N"; /* stop when second agcy is hit*/
      end
    end
  end

  SM0LS-CLOS-VRAGCY(); /* call IO0160 close cursor 'ss'*/

  if (SM0LM001.SM-SAGCY-ID == "****")
    SM0LM001.SM-SAGCY-NM = "ASSIGNED TO MULTIPLE AGENCIES";
  else
    if (SM0LM001.SM-SAGCY-ID == " ")
      SM0LM001.SM-SAGCY-NM = "NO ACTIVE AGENCY ASSIGNMENT";
    else
      SM0LS-GET-AGCY-NM(); /* Get agency id name*/
    end
  end

end // end SM0LS-GET-REP-ASSN

// Get Rep information
Function SM0LS-GET-REP-INFO()
   /* **********************************************************************/
   /* Get new rep record*/
   /* This routine reads the vreps001 table.  If the rep id was not*/
   /* found, then display error message.  If found, then load the data*/
   /* on to the map and prompt for changes if userid has change*/
   /* authority.*/
   /* **********************************************************************/

  SMWREC.SMW-NUM-CHK-WORD = SM0LW02.SM0LW-SM-SREP-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    set SM0LW03 empty;
    set SM0LW04 empty;
    set SM0LW05 empty;
    SM0LS-PDTL-TO-MAP1(); /* move PREV-DTL to SM0LM001*/
    SM0LM001.SM-SAGCY-ID = " ";
    SM0LM001.SM-SAGCY-NM = " ";
    SM0LM001.PV-MSA-VEND-NBR = " ";
    SM0LS-RESET-MAP1(); /* Reset SM0LM001 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0036); /* this field must be numeric*/
    set SM0LM001.SM0LM-SM-SREP-ID cursor, bold;
    return;
  else
    SM0LW02.SM0LW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM0LM001.SM0LM-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD;
    SM4REC.SM4REPID = SMWREC.SMW-NUM-CHK-NBR;
  end

  SM0LS-FIND-VREPS0(); /* call io0020 to read the reps table*/

  if (SM0LW-VREPS001-FOUND-FL == "N") /* rep rec was not found*/
    set SM0LW03 empty;
    set SM0LW04 empty;
    set SM0LW05 empty;
    SM0LS-PDTL-TO-MAP1(); /* move PREV-DTL to SM0LM001*/
    SM0LM001.SM-SAGCY-ID = " ";
    SM0LM001.SM-SAGCY-NM = " ";
    SM0LM001.PV-MSA-VEND-NBR = " ";
    SM0LS-RESET-MAP1(); /* Reset SM0LM001 attributes*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0009); /* rep id not found*/
    set SM0LM001.SM0LM-SM-SREP-ID cursor, bold;
  else /* rep rec was found*/
    SM0LW03.SM0LW-PREV-HDR = SM0LW02.SM0LW-CURR-HDR;
    SM0LS-REPS-TO-PDTL(); /* move VREPS001 to PREV-DTL*/
    SM0LS-PDTL-TO-MAP1(); /* move PREV-DTL to SM0LM001*/
    SM0LS-MAP1-TO-CDTL(); /* move SM0LM001 to CURR-DTL*/
    SM0LW01.SM0LW-DISP-ERR-FL = "N";
    SM0LS-GET-DTL-DESC(); /* get rep detail descriptions*/
    SM0LS-RESET-MAP1(); /* Reset SM0LM001 attributes*/
  end

end // end SM0LS-GET-REP-INFO

// Get Rep vendor number
Function SM0LS-GET-REP-VEND()
   /* **********************************************************************/
   /* Get Rep's vendor number if it exists*/
   /* **********************************************************************/
  set VREPVN01 empty;
  VREPVN01.SM-SREP-ID = SM4REC.SM4REPID;

  SM0LS-FIND-VREPVN(); /* Call IO6590 read rep vendor*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    SM0LM001.PV-MSA-VEND-NBR = VREPVN01.PV-MSA-VEND-NBR;
  else /* record not found*/
    SM0LM001.PV-MSA-VEND-NBR = " ";
  end


end // end SM0LS-GET-REP-VEND

// Get date & time for updates
Function SM0LS-GET-TM-STAMP()
   /* **********************************************************************/
   /* Get current date and time*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "GETDATE";

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SM0LW01.SM0LW-CURR-CCYYMMDD = TA2REC.TA2GRGGN;
    SM0LW01.SM0LW-CURR-HHMMSS = TA2REC.TA2TIMEN;
    SM0LW01.SM0LW-CURR-HHMM = TA2REC.TA2TIMHM;
  else
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET-DATE FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GET DATE";
    TA1REC.TA1MAP = "SM0LM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    XSPF4(); /* return to goal*/
    exit program;
  end

end // end SM0LS-GET-TM-STAMP

// Initialize
Function SM0LS-INITIALIZE()
  set SMWREC empty; /* subsystem record*/
  set SM0LW01 empty; /* sm0l workarea*/
  set SM0LW02 empty; /* sm0l curr-hdr*/
  set SM0LW03 empty; /* sm0l prev-hdr*/
  set SM0LW04 empty; /* sm0l curr-dtl*/
  set SM0LW05 empty; /* sm0l prev-dtl*/
   /* SET SM0LW06 EMPTY;               /* sm0l literal area*/

  SM0LW01.SM0LW-VREPS001-LENGTH = 316; /* vreps001 record length*/
  SM0LW01.SM0LW-VRAGCY01-LENGTH = 100; /* vragcy01 record length*/
  SM0LS-SET-PROC-TYP(); /* set to update/inquire*/
  SM0LW01.SM0LW-CONFIRM-FL = "N";
  SM0LW01.SM0LW-MERGED-FL = "N";
  SM0LW01.SM0LW-DISP-ERR-FL = "N";
  SM0LW01.SM0LW-ERR-FL = "N";
  sysVar.errorCode = "00000000";
  converseVar.commitOnConverse = 1; /* commit on converse*/

  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* from same system*/
    SMWREC.SMW-SUBSYSTEM-RECORD = COMMAREA.CAUSERA;
  end

  /* ***********************************************************************/
  /* * Check to see if we are being fastpathed into. if so, load the      **/
  /* * rep  id   to the map and current header record.                    **/
  /* ***********************************************************************/

  if (COMMAREA.CAITEM != " ")
    SM0LM001.SM0LM-SM-SREP-ID = COMMAREA.CAITEM; /* move to map*/
    SM0LW02.SM0LW-SM-SREP-ID = COMMAREA.CAITEM; /* curr map hdr rec*/
    SM0LW03.SM0LW-SM-SREP-ID = COMMAREA.CAITEM; /* prev map hdr rec*/
  else

  /* ***********************************************************************/
  /* * Check to see if we are being PF keyed into. if so, load the        **/
  /* * rep  id   to the map and current header record.                    **/
  /* ***********************************************************************/

    if (SMWREC.SM-SREP-ID != 0)
      SMWREC.SMW-NUM-CHK-NBR = SMWREC.SM-SREP-ID;
      SMWREC.SMW-NUM-CHK-FUNC = "NUMTOCHR"; /* convert to char*/
      SMWREC.SMW-NUM-CHK-PAD = " "; /* suppress lead 0's*/
      SMWREC.SMW-NUM-CHK-LEN = 4;
      XSSMS-NUM-CHK(); /* nbr convertion rtn*/
      SM0LM001.SM0LM-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* map*/
      SM0LW02.SM0LW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* cur hdr*/
      SM0LW03.SM0LW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* prv hdr*/
    end

  end

end // end SM0LS-INITIALIZE

// Move SM0LM001 to CURR-DTL
Function SM0LS-MAP1-TO-CDTL()
  /* ************************************************************************/
  /* Move SM0LM001 to CURR-DTL (SM0LW04)*/
  /* ************************************************************************/

  SM0LW04.XXX-LAST-NM = SM0LM001.XXX-LAST-NM;
  SM0LW04.XXX-FRST-NM = SM0LM001.XXX-FRST-NM;
  SM0LW04.XXX-MID-INIT = SM0LM001.XXX-MID-INIT;
  SM0LW04.XXXADDR1 = SM0LM001.XXXADDR1;
  SM0LW04.XXXADDR2 = SM0LM001.XXXADDR2;
  SM0LW04.XXX-CITY = SM0LM001.XXX-CITY;
  SM0LW04.XST-ST-CD = SM0LM001.XST-ST-CD;
    /* zip changed to one 10 byte field for Canadian project*/
  SM0LW04.SM0LW-XXXZIP = SM0LM001.SM0LM-XXXZIP;

  SM0LW04.XXX-ALT-ADDR1 = SM0LM001.XXX-ALT-ADDR1;
  SM0LW04.XXX-ALT-ADDR2 = SM0LM001.XXX-ALT-ADDR2;
  SM0LW04.XXX-ALT-CITY = SM0LM001.XXX-ALT-CITY;
  SM0LW04.XXX-ALT-ST-CD = SM0LM001.XXX-ALT-ST-CD;
    /* zip changed to one 10 byte field for Canadian project*/
  SM0LW04.SM0LW-XXXAZIP = SM0LM001.SM0LM-XXXAZIP;

  SM0LW04.SM0LW-XXXPHNA = SM0LM001.SM0LM-XXXPHNA;
  SM0LW04.SM0LW-XXXPHNP = SM0LM001.SM0LM-XXXPHNP;
  SM0LW04.SM0LW-XXXPHNN = SM0LM001.SM0LM-XXXPHNN;
  SM0LW04.SM0LW-FAX-AREA = SM0LM001.SM0LM-FAX-AREA;
  SM0LW04.SM0LW-FAX-PRE = SM0LM001.SM0LM-FAX-PRE;
  SM0LW04.SM0LW-FAX-NBR = SM0LM001.SM0LM-FAX-NBR;

  SM0LW04.SM0LW-SM-SREP-CONT-EDT = SM0LM001.SM0LM-SM-SREP-CONT-EDT;
  SM0LW04.SM0LW-SM-SREP-CONT-TDT = SM0LM001.SM0LM-SM-SREP-CONT-TDT;

end // end SM0LS-MAP1-TO-CDTL

// move SM0LM001 to curr hdr
Function SM0LS-MAP1-TO-CHDR()
  SM0LW02.SM0LW-SM-SREP-ID = SM0LM001.SM0LM-SM-SREP-ID;

end // end SM0LS-MAP1-TO-CHDR

// Move SM0LM001 to SM0LM002
Function SM0LS-MAP1-TO-MAP2()
  /* ************************************************************************/
  /* Move SM0LM001 to SM0LM002*/
  /* Note that depending on whether or not the rep in map1 is independent*/
  /* will determine if the rep info from map1 will go to the left or the*/
  /* right side of map2.*/
  /* ************************************************************************/

  if (SM0LM001.SM-SREP-EMPL-ID == " ") /* independent rep*/
    SM0LW-PTR = 1;
    SM0LM002.PV-MSA-VEND-NBR = SM0LM001.PV-MSA-VEND-NBR;
    SM0LM002.SM0LM-FAX-AREA = SM0LM001.SM0LM-FAX-AREA;
    SM0LM002.SM0LM-FAX-PRE = SM0LM001.SM0LM-FAX-PRE;
    SM0LM002.SM0LM-FAX-NBR = SM0LM001.SM0LM-FAX-NBR;
  else /* nike employed rep*/
    SM0LW-PTR = 2;
    SM0LM002.SM-SREP-EMPL-ID = SM0LM001.SM-SREP-EMPL-ID;
  end

  SM0LM002.SM0LM-SM-SREP-ID[SM0LW-PTR] = SM0LM001.SM0LM-SM-SREP-ID;
  SM0LM002.XXX-LAST-NM[SM0LW-PTR] = SM0LM001.XXX-LAST-NM;
  SM0LM002.XXX-FRST-NM[SM0LW-PTR] = SM0LM001.XXX-FRST-NM;
  SM0LM002.XXX-MID-INIT[SM0LW-PTR] = SM0LM001.XXX-MID-INIT;
  SM0LM002.XXXADDR1[SM0LW-PTR] = SM0LM001.XXX-ALT-ADDR1;
  SM0LM002.XXXADDR2[SM0LW-PTR] = SM0LM001.XXX-ALT-ADDR2;
  SM0LM002.XXX-CITY[SM0LW-PTR] = SM0LM001.XXX-ALT-CITY;
  SM0LM002.XST-ST-CD[SM0LW-PTR] = SM0LM001.XXX-ALT-ST-CD;
    /* zip changed to one 10 byte field for Canadian project*/
  SM0LM002.XXX-ZIP[SM0LW-PTR] = SM0LM001.SM0LM-XXXAZIP;
  SM0LM002.SM0LM-XXXPHNA[SM0LW-PTR] = SM0LM001.SM0LM-XXXPHNA;
  SM0LM002.SM0LM-XXXPHNP[SM0LW-PTR] = SM0LM001.SM0LM-XXXPHNP;
  SM0LM002.SM0LM-XXXPHNN[SM0LW-PTR] = SM0LM001.SM0LM-XXXPHNN;

  SM0LM002.SM0LM-SM-SREP-CONT-EDT[SM0LW-PTR] = SM0LW05.SM-SREP-CONT-EDT;
  SM0LM002.SM0LM-SM-SREP-CONT-TDT[SM0LW-PTR] = SM0LW05.SM-SREP-CONT-TDT;

end // end SM0LS-MAP1-TO-MAP2

// Merge Rep process
Function SM0LS-MERGE-REP()
  /* ************************************************************************/
  /* This routine will update the held manually entered rep with*/
  /* information from the also held HR entered rep.  Then all active*/
  /* and inactive rep-agency assignments for the HR entered rep will*/
  /* be modified and re-assigned to the manually entered rep.*/
  /* ************************************************************************/

  SM0LS-GET-TM-STAMP(); /* get dt & tm stamp for update*/

  if (SM0LW-ERR-FL != "Y") /* no errors*/
    SM0LS-REPS-TO-BIN(); /* convert HR & man reps to bin*/
    SM0LS-UPD-MAN-REP(); /* update manually entered rep*/
  end

  if (SM0LW-ERR-FL != "Y") /* no errors*/
    SM0LS-DEL-HR-REP(); /* delete HR entered rep*/
  end

  if (SM0LW-ERR-FL != "Y") /* no errors*/
    SM0LS-UPD-RAG-PROC(); /* transfer agency assignment*/
  end

  if (SM0LW-ERR-FL == "Y") /* unsuccessful update*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
  else /* update okay*/
    converseLib.validationFailed(0074);
    SM0LW03.SM0LW-SM-SREP-ID = SM0LM002.SM0LM-SM-SREP-ID[1];
    SM0LW-MERGED-FL = "Y";
  end

end // end SM0LS-MERGE-REP

// Call IO0160 open vragcy csr
Function SM0LS-OPEN-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-OPEN-VRAGCY*/
   /* This routine calls IO0160 to open a Rep-Agency assignment cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("SS", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "SS      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-OPEN-VRAGCY

// Move PREV-DTL to SM0LM001
Function SM0LS-PDTL-TO-MAP1()
  /* ************************************************************************/
  /* Move PREV-DTL (SM0LW05) to SM0LM001*/
  /* ************************************************************************/

  SM0LM001.XXX-LAST-NM = SM0LW05.XXX-LAST-NM;
  SM0LM001.XXX-FRST-NM = SM0LW05.XXX-FRST-NM;
  SM0LM001.XXX-MID-INIT = SM0LW05.XXX-MID-INIT;
  SM0LM001.XXXADDR1 = SM0LW05.XXXADDR1;
  SM0LM001.XXXADDR2 = SM0LW05.XXXADDR2;
  SM0LM001.XXX-CITY = SM0LW05.XXX-CITY;
  SM0LM001.XST-ST-CD = SM0LW05.XST-ST-CD;

   /* zip changed to single 10 byte  field for Canadian project 9/95*/

  SM0LM001.SM0LM-XXXZIP = SM0LW05.SM0LW-XXXZIP;

  SM0LM001.XXX-ALT-ADDR1 = SM0LW05.XXX-ALT-ADDR1;
  SM0LM001.XXX-ALT-ADDR2 = SM0LW05.XXX-ALT-ADDR2;
  SM0LM001.XXX-ALT-CITY = SM0LW05.XXX-ALT-CITY;
  SM0LM001.XXX-ALT-ST-CD = SM0LW05.XXX-ALT-ST-CD;

   /* zip changed to single 10 byte  field for Canadian project 9/95*/

  SM0LM001.SM0LM-XXXAZIP = SM0LW05.SM0LW-XXXAZIP;

  SM0LM001.SM0LM-XXXPHNA = SM0LW05.SM0LW-XXXPHNA;
  SM0LM001.SM0LM-XXXPHNP = SM0LW05.SM0LW-XXXPHNP;
  SM0LM001.SM0LM-XXXPHNN = SM0LW05.SM0LW-XXXPHNN;
  SM0LM001.SM0LM-FAX-AREA = SM0LW05.SM0LW-FAX-AREA;
  SM0LM001.SM0LM-FAX-PRE = SM0LW05.SM0LW-FAX-PRE;
  SM0LM001.SM0LM-FAX-NBR = SM0LW05.SM0LW-FAX-NBR;

  SM0LM001.SM0LM-SM-SREP-CONT-EDT = SM0LW05.SM0LW-SM-SREP-CONT-EDT;
  SM0LM001.SM0LM-SM-SREP-CONT-TDT = SM0LW05.SM0LW-SM-SREP-CONT-TDT;

  SM0LM001.SM-SREP-EMPL-ID = SM0LW05.SM-SREP-EMPL-ID;
  SM0LM001.SM0LM-ZZ-SDT = SM0LW05.ZZ-SDT;
  SM0LM001.SM0LM-ZZ-CHNG-DT = SM0LW05.ZZ-CHNG-DT;

end // end SM0LS-PDTL-TO-MAP1

// move prev hdr to SM0LM001
Function SM0LS-PHDR-TO-MAP1()
  SM0LM001.SM0LM-SM-SREP-ID = SM0LW03.SM0LW-SM-SREP-ID;

end // end SM0LS-PHDR-TO-MAP1

// Process fast path
Function SM0LS-PROC-FPATH()
   /* **********************************************************************/
   /* Process Fast Path for SM0LM001*/
   /* **********************************************************************/

  if (SM0LW02.SM0LW-CURR-HDR 
   != SM0LW03.SM0LW-PREV-HDR /* header key changed*/
   || SM0LW04.SM0LW-CURR-DTL 
   != SM0LW05.SM0LW-PREV-DTL) /* detail changed*/

    set SM0LM001.CATOAP cursor, bold;
    set SM0LM001.CAITEM bold;
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(69); /* cannot fpath changes*/

  else /* nothing on the screen changed*/
    if (converseVar.eventKey is pf12) /* edit only key was pressed*/
      converseLib.validationFailed(0004); /* Can't fastpath w/ pfkey*/
      SM0LW-ERR-FL = "Y";
      set SM0LM001.CATOAP cursor, bold;
      set SM0LM001.CAITEM bold;
    else /* enter was pressed*/
      COMMAREA.CATOAP = SM0LM001.CATOAP; /* move to commarea*/
      COMMAREA.CAITEM = SM0LM001.CAITEM;
      COMMAREA.CAUSERA = " "; /* clear user area*/

      if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* transfer in SM system*/
        SM0LS-SET-CAUSERA(); /* set subsystem rec & causera*/
      end
      XSEXIT(); /* transfer control*/

      SM0LS-GET-REP-INFO(); /* reload rep data*/

      set SM0LM001.CATOAP cursor, bold;
      set SM0LM001.CAITEM bold;
      SM0LW-ERR-FL = "Y";
      SM0LM001.CAMSG = COMMAREA.CAMSG; /* transfer failed*/

    end
  end


end // end SM0LS-PROC-FPATH

// Process ENTER Add mode
Function SM0LS-PROC1-A-MODE()
   /* **********************************************************************/
   /* Process Add mode*/
   /* **********************************************************************/

  if (SM0LW04.SM0LW-CURR-DTL != SM0LW05.SM0LW-PREV-DTL) /* DTL changed*/
    SM0LS-PROC1-DETAIL(); /* Process rep detail info*/

  else /* no DTL change*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0012); /* No changes made*/

  end


end // end SM0LS-PROC1-A-MODE

// Process Rep details
Function SM0LS-PROC1-DETAIL()
   /* **********************************************************************/
   /* Process SM0LM001 details*/
   /* **********************************************************************/

  SM0LW-DISP-ERR-FL = "Y"; /* highlight errors if found*/

  SM0LS-GET-DTL-DESC(); /* get SM0LM001 dtl desc w/ edits*/

  if (SM0LW-ERR-FL != "Y") /* no errors found editing detail*/
    if (converseVar.eventKey is pf12) /* edit only*/

      converseLib.validationFailed(0013); /* Press enter again to accept*/

    else /* Enter was pressed*/

      SM0LS-UPD-TBL-PROC(); /* Update tables process*/

    end /* end PF12 or ENTER pressed*/
  end /* end no errors from edit detail*/

end // end SM0LS-PROC1-DETAIL

// Process ENTER
Function SM0LS-PROC1-ENTER()
   /* **********************************************************************/
   /* Process ENTER*/
   /* **********************************************************************/

  if (SM0LM001.CATOAP != " ") /* Fast path was filled*/
    SM0LS-PROC-FPATH(); /* process fastpath*/
    if (SM0LW-ERR-FL == "Y")
      return;
    end
  else
    if (SM0LM001.CAITEM != " ") /* Fast path item was filled*/
      SM0LM001.CAITEM = " ";
    end
  end

  if (SM0LW-PROC-TYP-IND == "I" /* inquiry mode*/
   || SM0LW-PROC-TYP-IND == "U") /* update mode*/
    SM0LS-PROC1-U-MODE(); /* process update/inquire mode*/
  else /* add rep mode*/
    SM0LS-PROC1-A-MODE(); /* process add mode*/
  end


end // end SM0LS-PROC1-ENTER

// Process cancel key
Function SM0LS-PROC1-PA2()
   /* **********************************************************************/
   /* Process CANCEL key*/
   /* **********************************************************************/

  SM0LW-REFRESH-FL = "Y";

  if (SM0LW02.SM0LW-CURR-HDR == SM0LW03.SM0LW-PREV-HDR /* no hdr change*/
   && SM0LW04.SM0LW-CURR-DTL == SM0LW05.SM0LW-PREV-DTL) /* no dtl change*/

    set SM0LW02 empty; /* init CURR-HDR*/
    set SM0LW03 empty; /* init PREV-HDR*/
    set SM0LW04 empty; /* init CURR-DTL*/
    set SM0LW05 empty; /* init PREV-DTL*/
    SM0LS-SET-PROC-TYP(); /* set proc-typ to updt/inq*/

  else

    set SM0LW02 empty; /* init CURR-HDR*/
    set SM0LW04 empty; /* init CURR-DTL*/
    set SM0LW05 empty; /* init PREV-DTL*/
    converseLib.validationFailed(0040); /* Updates cancelled*/

  end

end // end SM0LS-PROC1-PA2

// Process PFkeys
Function SM0LS-PROC1-PFKEYS()
   /* **********************************************************************/
   /* Process valid PFkey was pressed*/
   /* PF1, PF3, PF4, PF6, PF17 or PF18*/
   /* **********************************************************************/

  if (SM0LW02.SM0LW-CURR-HDR == SM0LW03.SM0LW-PREV-HDR /* no HDR chng*/
   && SM0LW04.SM0LW-CURR-DTL == SM0LW05.SM0LW-PREV-DTL) /* no DTL chng*/
    if (SM0LM001.CATOAP != " ") /* Fast path was filled*/
      converseLib.validationFailed(0004); /* Can't Fastpath & PFkey*/
      SM0LW-ERR-FL = "Y";
      set SM0LM001.CATOAP cursor, bold;
      return;
    else
      if (SM0LM001.CAITEM != " ") /* Fast path item was filled*/
        SM0LM001.CAITEM = " ";
      end
    end
  else /* sm0lM001 changed*/
    if (SM0LW04.SM0LW-CURR-DTL != SM0LW05.SM0LW-PREV-DTL) /* DTL chng*/
      converseLib.validationFailed(0068); /* Can't PFkey w/ changes*/
      SM0LW-ERR-FL = "Y";
      return;
    else /* HDR chng*/
      if (converseVar.eventKey is pf1 /* HELP key is pressed*/
       || converseVar.eventKey is pf3 /* RETURN key is pressed*/
       || converseVar.eventKey is pf4) /* MASTER MENU key is pressed*/
      else
        converseLib.validationFailed(0068); /* Can't PFkey w/ changes*/
        SM0LW-ERR-FL = "Y";
        return;
      end
    end
  end


  if (converseVar.eventKey is pf1) /* HELP key is pressed*/
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help screen*/
    SM0LM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf3) /* RETURN key is pressed*/
    COMMAREA.CATOAP = "SM0H";
    COMMAREA.CAITEM = " ";
    SM0LS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0LM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf4) /* RETURN key is pressed*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to GOAL menu*/
    SM0LM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf6) /* PF6 key is pressed*/
    COMMAREA.CATOAP = "SM0I";
    COMMAREA.CAITEM = " ";
    SM0LS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0LM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf17) /* Merge Rep key is pressed*/
    return;
  end

  if (converseVar.eventKey is pf18) /* Add Rep key is pressed*/
    SM0LW-PROC-TYP-IND = "A";
    set SM0LW03 empty; /* Init PREV-HDR*/
    set SM0LW05 empty; /* Init PREV-DTL*/
    SM0LW-REFRESH-FL = "Y";
  end

  if (converseVar.eventKey is pf19) /* PF19 key is pressed*/
    COMMAREA.CATOAP = "SM0V";
    COMMAREA.CAITEM = " ";
    SM0LS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0LM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end


end // end SM0LS-PROC1-PFKEYS

// Process ENTER updt/inq mode
Function SM0LS-PROC1-U-MODE()
   /* **********************************************************************/
   /* Process Update/Inquire mode*/
   /* **********************************************************************/

  if (SM0LW02.SM0LW-SM-SREP-ID == " ") /* blank rep id*/
  /* IF SM0LW04.XXX-LAST-NM NE ' ';                  /* name entered*/
  /* MOVE 'SM0R' TO COMMAREA.CATOAP;               /* rep name search*/
  /* MOVE ' ' TO COMMAREA.CAITEM;*/
  /* MOVE SM0LW04.XXX-LAST-NM TO SMWREC.XXX-LAST-NM;*/
  /* SM0LS-SET-CAUSERA;*/
  /* XSEXIT;*/
  /* MOVE COMMAREA.CAMSG TO SM0LM001.EZEMSG;       /* error in fastpath*/
  /* MOVE 'Y' TO SM0LW-ERR-FL;*/
  /* ELSE;*/
    set SM0LM001 initial;
    set SM0LW03 empty;
    set SM0LW05 empty;
    SM0LS-RESET-MAP1();
    set SM0LM001.SM0LM-SM-SREP-ID cursor, bold;
    set SM0LM001.XXX-LAST-NM bold;
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0060); /* Enter rep id or name*/
  /* END;*/
    return;
  end


  if (SM0LW02.SM0LW-CURR-HDR != SM0LW03.SM0LW-PREV-HDR) /* HDR changed*/
    SM0LS-GET-REP-INFO(); /* Retrive entered rep*/

  else /* no HDR change*/
    if (SM0LW-PROC-TYP-IND == "U") /* Update mode*/
      if (SM0LW04.SM0LW-CURR-DTL != SM0LW05.SM0LW-PREV-DTL) /* DTL changed*/
        SM0LS-PROC1-DETAIL(); /* Process rep detail info*/

      else /* no DTL change*/
        SM0LW-ERR-FL = "Y";
        converseLib.validationFailed(0012); /* No changes made*/

      end
    else /* Inquire mode*/
      if (SM0LW04.XXX-LAST-NM != SM0LW05.XXX-LAST-NM) /* lst-nm changed*/
        SM0LM001.XXX-LAST-NM = SM0LW05.XXX-LAST-NM;

      else
        SM0LW-ERR-FL = "Y";
        converseLib.validationFailed(0012); /* No changes made*/

      end
    end
  end


end // end SM0LS-PROC1-U-MODE

// Process Enter for SM0LM002
Function SM0LS-PROC2-ENTER()
   /* **********************************************************************/
   /* Process ENTER for SM0LM002*/
   /* **********************************************************************/

   /* Note that if map1 passed an independent rep to map2, then prompt*/
   /* for an HR rep on map2 and vice versa.*/

  if (SM0LM001.SM-SREP-EMPL-ID == " ") /* independent rep passed*/
    SM0LS-EDIT-NKE-REP(); /* prompt for HR entered rep*/
  else /* nike employed rep passed*/
    SM0LS-EDIT-IND-REP(); /* prompt for manually entered rep*/
  end

  if (SM0LW-ERR-FL == "Y")
    SM0LW-CONFIRM-FL = "N";
  else
    if (SM0LW-CONFIRM-FL == "N")
      SM0LW-CONFIRM-FL = "Y";
      converseLib.validationFailed(0013); /* Press enter again to update*/
    else
      SM0LS-MERGE-REP(); /* merge HR to manually entered rep*/
      SM0LW-CONFIRM-FL = "N";
    end
  end


end // end SM0LS-PROC2-ENTER

// Process Pfkeys for SM0LM002
Function SM0LS-PROC2-PFKEYS()
   /* **********************************************************************/
   /* Process valid PFkey was pressed*/
   /* PF1, PF3, or PF4*/
   /* **********************************************************************/

  if (converseVar.eventKey is pf1) /* HELP key is pressed*/
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help screen*/
    SM0LM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf3) /* RETURN key is pressed*/
    return;
  end

  if (converseVar.eventKey is pf4) /* RETURN key is pressed*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to GOAL menu*/
    SM0LM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0LW-ERR-FL = "Y";
  end


end // end SM0LS-PROC2-PFKEYS

// Conv HR & man reps to binary
Function SM0LS-REPS-TO-BIN()
   /* **********************************************************************/
   /* This routine will convert the HR and the manually entered rep id*/
   /* from map SM0LM002 in character format to binary.  These are then*/
   /* saved in binary fields in SM0LW01.*/
   /* **********************************************************************/

  /* **********************************************************************/
  /* Convert manually entered rep id*/
  /* **********************************************************************/
  SMWREC.SMW-NUM-CHK-WORD = SM0LM002.SM0LM-SM-SREP-ID[1];
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  SM0LW01.SM-SREP-ID[1] = SMWREC.SMW-NUM-CHK-NBR;

  /* **********************************************************************/
  /* Convert HR entered rep id*/
  /* **********************************************************************/
  SMWREC.SMW-NUM-CHK-WORD = SM0LM002.SM0LM-SM-SREP-ID[2];
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  SM0LW01.SM-SREP-ID[2] = SMWREC.SMW-NUM-CHK-NBR;


end // end SM0LS-REPS-TO-BIN

// Move VREPS001 to SM0LM002
Function SM0LS-REPS-TO-MAP2()
  /* ************************************************************************/
  /* Move VREPS001 to SM0LM002 depending on the value of sm0lw-ptr*/
  /* ************************************************************************/

  SM0LM002.XXX-LAST-NM[SM0LW-PTR] = SM4REC.XXXLSTNM;
  SM0LM002.XXX-FRST-NM[SM0LW-PTR] = SM4REC.XXXFSTNM;
  SM0LM002.XXX-MID-INIT[SM0LW-PTR] = SM4REC.XXXMDINT;
  SM0LM002.XXXADDR1[SM0LW-PTR] = SM4REC.XXXAADR1;
  SM0LM002.XXXADDR2[SM0LW-PTR] = SM4REC.XXXAADR2;
  SM0LM002.XXX-CITY[SM0LW-PTR] = SM4REC.XXXACITY;
  SM0LM002.XST-ST-CD[SM0LW-PTR] = SM4REC.XXXAST;
    /* zip changed to one 10 byte field for Canadian project*/
  SM0LM002.XXX-ZIP[SM0LW-PTR] = SM4REC.XXXAZIP;

  if (SM4REC.XXXPHN == "0000000000")
    SM0LW01.SM0LW-PHONE = " ";
  else
    SM0LW01.SM0LW-PHONE = SM4REC.XXXPHN;
  end
  SM0LM002.SM0LM-XXXPHNA[SM0LW-PTR] = SM0LW01.SM0LW-PHONE-AREA;
  SM0LM002.SM0LM-XXXPHNP[SM0LW-PTR] = SM0LW01.SM0LW-PHONE-PRE;
  SM0LM002.SM0LM-XXXPHNN[SM0LW-PTR] = SM0LW01.SM0LW-PHONE-NBR;

  if (SM0LW-PTR == 1)
    if (SM4REC.XXXFAX == "0000000000     ")
      SM0LW01.SM0LW-FAX = " ";
    else
      SM0LW01.SM0LW-FAX = SM4REC.XXXFAX;
    end
    SM0LM002.SM0LM-FAX-AREA = SM0LW01.SM0LW-FAX-AREA;
    SM0LM002.SM0LM-FAX-PRE = SM0LW01.SM0LW-FAX-PRE;
    SM0LM002.SM0LM-FAX-NBR = SM0LW01.SM0LW-FAX-NBR;
  else
    SM0LM002.SM-SREP-EMPL-ID = SM4REC.SM-SREP-EMPL-ID;
  end

  SM0LM002.SM0LM-SM-SREP-CONT-EDT[SM0LW-PTR] = SM4REC.SM4EDT;
  SM0LM002.SM0LM-SM-SREP-CONT-TDT[SM0LW-PTR] = SM4REC.SM4TDT;


end // end SM0LS-REPS-TO-MAP2

// Move VREPS001 to PREV-DTL
Function SM0LS-REPS-TO-PDTL()
  /* ************************************************************************/
  /* Move VREPS001 to PREV-DTL (SM0LW05)*/
  /* ************************************************************************/

  SM0LW05.XXX-LAST-NM = SM4REC.XXXLSTNM;
  SM0LW05.XXX-FRST-NM = SM4REC.XXXFSTNM;
  SM0LW05.XXX-MID-INIT = SM4REC.XXXMDINT;
  SM0LW05.XXXADDR1 = SM4REC.XXXADDR1;
  SM0LW05.XXXADDR2 = SM4REC.XXXADDR2;
  SM0LW05.XXX-CITY = SM4REC.XXXCITY;
  SM0LW05.XST-ST-CD = SM4REC.XSTCD;
    /* zip changed to one 10 byte field  for Canadian project 9/95*/
  SM0LW05.SM0LW-XXXZIP = SM4REC.XXXZIP;

  SM0LW05.XXX-ALT-ADDR1 = SM4REC.XXXAADR1;
  SM0LW05.XXX-ALT-ADDR2 = SM4REC.XXXAADR2;
  SM0LW05.XXX-ALT-CITY = SM4REC.XXXACITY;
  SM0LW05.XXX-ALT-ST-CD = SM4REC.XXXAST;
    /* zip changed to one 10 byte field  for Canadian project 9/95*/
  SM0LW05.SM0LW-XXXAZIP = SM4REC.XXXAZIP;

  if (SM4REC.XXXPHN == "0000000000")
    SM0LW01.SM0LW-PHONE = " ";
  else
    SM0LW01.SM0LW-PHONE = SM4REC.XXXPHN;
  end
  SM0LW05.SM0LW-XXXPHNA = SM0LW01.SM0LW-PHONE-AREA;
  SM0LW05.SM0LW-XXXPHNP = SM0LW01.SM0LW-PHONE-PRE;
  SM0LW05.SM0LW-XXXPHNN = SM0LW01.SM0LW-PHONE-NBR;

  if (SM4REC.XXXFAX == "0000000000     ")
    SM0LW01.SM0LW-FAX = " ";
  else
    SM0LW01.SM0LW-FAX = SM4REC.XXXFAX;
  end
  SM0LW05.SM0LW-FAX-AREA = SM0LW01.SM0LW-FAX-AREA;
  SM0LW05.SM0LW-FAX-PRE = SM0LW01.SM0LW-FAX-PRE;
  SM0LW05.SM0LW-FAX-NBR = SM0LW01.SM0LW-FAX-NBR;

  SM0LW05.SM-SREP-CONT-EDT = SM4REC.SM4EDT;
  SM0LW05.SM0LW-SM-SREP-CONT-EDT = " ";
  SM0LW05.SM-SREP-CONT-TDT = SM4REC.SM4TDT;
  SM0LW05.SM0LW-SM-SREP-CONT-TDT = " ";

   /* reformat edt & xdt to mm-dd-yy format from ccyymmdd*/

  if (SM0LW05.SM-SREP-CONT-EDT > 0)
    SM0LW01.SM0LW-EDIT-CCYYMMDD = SM0LW05.SM-SREP-CONT-EDT;
    SM0LW01.SM0LW-EDIT-MMDDYY-MONTH = SM0LW01.SM0LW-EDIT-CCYYMMDD-MONTH;
    SM0LW01.SM0LW-EDIT-MMDDYY-DASH1 = "-";
    SM0LW01.SM0LW-EDIT-MMDDYY-DAY = SM0LW01.SM0LW-EDIT-CCYYMMDD-DAY;
    SM0LW01.SM0LW-EDIT-MMDDYY-DASH2 = "-";
    SM0LW01.SM0LW-EDIT-MMDDYY-YEAR = SM0LW01.SM0LW-EDIT-CCYYMMDD-YEAR;
    SM0LW05.SM0LW-SM-SREP-CONT-EDT = SM0LW01.SM0LW-EDIT-MMDDYY-DISPLAY;
  end

  if (SM0LW05.SM-SREP-CONT-TDT > 0
   && SM0LW05.SM-SREP-CONT-TDT < 999999999)
    SM0LW01.SM0LW-EDIT-CCYYMMDD = SM0LW05.SM-SREP-CONT-TDT;
    SM0LW01.SM0LW-EDIT-MMDDYY-MONTH = SM0LW01.SM0LW-EDIT-CCYYMMDD-MONTH;
    SM0LW01.SM0LW-EDIT-MMDDYY-DASH1 = "-";
    SM0LW01.SM0LW-EDIT-MMDDYY-DAY = SM0LW01.SM0LW-EDIT-CCYYMMDD-DAY;
    SM0LW01.SM0LW-EDIT-MMDDYY-DASH2 = "-";
    SM0LW01.SM0LW-EDIT-MMDDYY-YEAR = SM0LW01.SM0LW-EDIT-CCYYMMDD-YEAR;
    SM0LW05.SM0LW-SM-SREP-CONT-TDT = SM0LW01.SM0LW-EDIT-MMDDYY-DISPLAY;
  end

   /* **********************************************************************/
   /* save read-only fields from VREPS001 to PREV-DTL*/
   /* **********************************************************************/

  SM0LW05.SM-SREP-EMPL-ID = SM4REC.SM-SREP-EMPL-ID;
  SM0LW05.ZZ-SDT = SM4REC.ZZZSDT;
  SM0LW05.ZZ-CHNG-DT = SM4REC.ZZZCHGDT;

end // end SM0LS-REPS-TO-PDTL

// Reset SM0LM001 attributes
Function SM0LS-RESET-MAP1()
  /* ************************************************************************/
  /* Reset map attributes depending on the userid authorization level*/
  /* ************************************************************************/
  /*  */
  /* Reset map items to normal*/
  /*  */
  set SM0LM001.SM0LM-SM-SREP-ID initialAttributes;
  set SM0LM001.XXX-LAST-NM initialAttributes;
  set SM0LM001.XXX-FRST-NM initialAttributes;
  set SM0LM001.XXX-MID-INIT initialAttributes;
  set SM0LM001.XXXADDR1 initialAttributes;
  set SM0LM001.XXX-ALT-ADDR1 initialAttributes;
  set SM0LM001.XXXADDR2 initialAttributes;
  set SM0LM001.XXX-ALT-ADDR2 initialAttributes;
  set SM0LM001.XXX-CITY initialAttributes;
  set SM0LM001.XXX-ALT-CITY initialAttributes;
  set SM0LM001.XST-ST-CD initialAttributes;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
  set SM0LM001.SM0LM-XXXZIP initialAttributes;
  set SM0LM001.XXX-ALT-ST-CD initialAttributes;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
  set SM0LM001.SM0LM-XXXAZIP initialAttributes;
  set SM0LM001.SM0LM-XXXPHNA initialAttributes;
  set SM0LM001.SM0LM-XXXPHNP initialAttributes;
  set SM0LM001.SM0LM-XXXPHNN initialAttributes;
  set SM0LM001.SM0LM-FAX-AREA initialAttributes;
  set SM0LM001.SM0LM-FAX-PRE initialAttributes;
  set SM0LM001.SM0LM-FAX-NBR initialAttributes;
  set SM0LM001.SM0LM-SM-SREP-CONT-EDT-LIT initialAttributes;
  set SM0LM001.SM0LM-SM-SREP-CONT-EDT initialAttributes;
  set SM0LM001.SM0LM-SM-SREP-CONT-TDT-LIT initialAttributes;
  set SM0LM001.SM0LM-SM-SREP-CONT-TDT initialAttributes;
  set SM0LM001.CATOAP initialAttributes;
  set SM0LM001.CAITEM initialAttributes;
  /*  */
  /* Protect rep id if in ADD mode and not if in Inquire or UPDATE mode*/
  /*  */
  if (SM0LW-PROC-TYP-IND == "A") /* process is in ADD mode*/
    set SM0LM001.SM0LM-SM-SREP-ID skip;
    SM0LM001.SM0LM-SUBTITLE = "    ADD SALES REP    ";
  else /* process is in UPDATE mode*/
    set SM0LM001.SM0LM-SM-SREP-ID initialAttributes, cursor;
    SM0LM001.SM0LM-SUBTITLE = "SALES REP INFORMATION";
  end
  /*  */
  /* Hide empl id and vendor nbr literals if codes are not valued*/
  /*  */
  if (SM0LM001.SM-SREP-EMPL-ID == " ") /* no employee id*/
    set SM0LM001.SM0LM-EMPL-LIT invisible, skip;
    set SM0LM001.SM-SREP-EMPL-ID invisible, skip;
  else
    set SM0LM001.SM0LM-EMPL-LIT initialAttributes;
    set SM0LM001.SM-SREP-EMPL-ID initialAttributes;
    /*  */
    /* Protect rep name, home addr, hire date & term date if nike employed*/
    /*  */
    set SM0LM001.XXX-FRST-NM skip;
    set SM0LM001.XXX-MID-INIT skip;
    set SM0LM001.XXX-ALT-ADDR1 skip;
    set SM0LM001.XXX-ALT-ADDR2 skip;
    set SM0LM001.XXX-ALT-CITY skip;
    set SM0LM001.XXX-ALT-ST-CD skip;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
    set SM0LM001.SM0LM-XXXAZIP skip;
    set SM0LM001.SM0LM-SM-SREP-CONT-EDT skip;
    set SM0LM001.SM0LM-SM-SREP-CONT-TDT skip;
  end

  if (SM0LM001.PV-MSA-VEND-NBR == " ") /* no vendor number*/
    set SM0LM001.SM0LM-VEND-LIT invisible, skip;
    set SM0LM001.PV-MSA-VEND-NBR invisible, skip;
  else
    set SM0LM001.SM0LM-VEND-LIT initialAttributes;
    set SM0LM001.PV-MSA-VEND-NBR initialAttributes;
  end
  /*  */
  /* Format PF key descriptions depending on the what is allowed when*/
  /*  */
  if (SM0LW-PROC-TYP-IND == "A") /* process is in ADD mode*/
    set SM0LM001.SM0LM-PF12-LIT initialAttributes;
    set SM0LM001.SM0LM-PF15-LIT invisible, skip;
  else /* process is in UPDATE mode*/
    set SM0LM001.SM0LM-PF15-LIT initialAttributes;
    if (SM0LW03.SM0LW-SM-SREP-ID != " ") /* a valid rep is on screen*/
      if (COMMAREA.CACHGFL == "Y" /* authorized for change*/
       || COMMAREA.CACLVL[1] == "Y")
        set SM0LM001.SM0LM-PF12-LIT initialAttributes;
      else
        set SM0LM001.SM0LM-PF12-LIT invisible, skip;
      end
    else
      set SM0LM001.SM0LM-PF12-LIT invisible, skip;
    end
  end

  if (SM0LW-PROC-TYP-IND == "U" /* process is in UPDATE mode*/
   && COMMAREA.CACLVL[1] == "Y" /* userid allowed to merge rep*/
   && SM0LW03.SM0LW-SM-SREP-ID != " ") /* there is a rep on the screen*/
    if (SM0LM001.SM-SREP-EMPL-ID != " " /* if rep has both empl id*/
     && SM0LM001.PV-MSA-VEND-NBR != " ") /* and vend nbr, do not*/
      set SM0LM001.SM0LM-PF17-LIT invisible, skip; /* show merge pfkey*/
    else
      set SM0LM001.SM0LM-PF17-LIT initialAttributes;
    end
  else
    set SM0LM001.SM0LM-PF17-LIT invisible, skip;
  end

  if (SM0LW-PROC-TYP-IND != "A" /* process is UPDT or INQ mode*/
   && COMMAREA.CAADDFL == "Y")  /* userid allowed to add rep*/
    set SM0LM001.SM0LM-PF18-LIT initialAttributes;
  else
    set SM0LM001.SM0LM-PF18-LIT invisible, skip;
  end

  if (SM0LM001.PV-MSA-VEND-NBR == " " /* no vendor number*/
   || SM0LW-PROC-TYP-IND == "A")      /* process is in ADD mode*/
    set SM0LM001.SM0LM-PF19-LIT invisible, skip;
  else
    if (COMMAREA.CACHGFL == "Y"   /* authorized for change*/
     || COMMAREA.CACLVL[1] == "Y" /* authorized for merge*/
     || COMMAREA.CAILVL[1] == "Y") /* no browse restrictions*/
      set SM0LM001.SM0LM-PF19-LIT initialAttributes;
    else
      set SM0LM001.SM0LM-PF19-LIT invisible, skip;
    end
  end
  /*  */
  /* Protect detail fields if inquiry only*/
  /*  */
  if (SM0LW-PROC-TYP-IND == "I") /* userid can browse only*/
    set SM0LM001.XXX-FRST-NM skip;
    set SM0LM001.XXX-MID-INIT skip;
    set SM0LM001.XXXADDR1 skip;
    set SM0LM001.XXX-ALT-ADDR1 skip;
    set SM0LM001.XXXADDR2 skip;
    set SM0LM001.XXX-ALT-ADDR2 skip;
    set SM0LM001.XXX-CITY skip;
    set SM0LM001.XXX-ALT-CITY skip;
    set SM0LM001.XST-ST-CD skip;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
    set SM0LM001.SM0LM-XXXZIP skip;
    set SM0LM001.XXX-ALT-ST-CD skip;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
    set SM0LM001.SM0LM-XXXAZIP skip;
    set SM0LM001.SM0LM-XXXPHNA skip;
    set SM0LM001.SM0LM-XXXPHNP skip;
    set SM0LM001.SM0LM-XXXPHNN skip;
    set SM0LM001.SM0LM-FAX-AREA skip;
    set SM0LM001.SM0LM-FAX-PRE skip;
    set SM0LM001.SM0LM-FAX-NBR skip;
    if (COMMAREA.CAILVL[1] == "N") /* restricted browse*/
      set SM0LM001.SM0LM-EMPL-LIT invisible, skip;
      set SM0LM001.SM-SREP-EMPL-ID invisible, skip;
      set SM0LM001.SM0LM-VEND-LIT invisible, skip;
      set SM0LM001.PV-MSA-VEND-NBR invisible, skip;
      set SM0LM001.SM0LM-SM-SREP-CONT-EDT-LIT invisible, skip;
      set SM0LM001.SM0LM-SM-SREP-CONT-EDT invisible, skip;
      set SM0LM001.SM0LM-SM-SREP-CONT-TDT-LIT invisible, skip;
      set SM0LM001.SM0LM-SM-SREP-CONT-TDT invisible, skip;
    else /* allowed to view above fields*/
      set SM0LM001.SM0LM-SM-SREP-CONT-EDT skip;
      set SM0LM001.SM0LM-SM-SREP-CONT-TDT skip;
    end
  end

end // end SM0LS-RESET-MAP1

// Reset SM0LM002 attributes
Function SM0LS-RESET-MAP2()
  /* ************************************************************************/
  /* Reset SM0LM002 attributes*/
  /* ************************************************************************/

  set SM0LM002.SM0LM-SM-SREP-ID[1] initialAttributes;
  set SM0LM002.SM0LM-SM-SREP-ID[2] initialAttributes;

  if (SM0LM001.SM-SREP-EMPL-ID == " ") /* independent rep*/
    set SM0LM002.SM0LM-SM-SREP-ID[1] skip;
    set SM0LM002.SM0LM-SM-SREP-ID[2] cursor;
  else /* nike employed rep*/
    set SM0LM002.SM0LM-SM-SREP-ID[1] cursor;
    set SM0LM002.SM0LM-SM-SREP-ID[2] skip;
  end

  if (SM0LM002.PV-MSA-VEND-NBR == " ")
    set SM0LM002.PV-MSA-VEND-NBR invisible, skip;
    set SM0LM002.SM0LM-VEND-LIT invisible, skip;
  else /* nike employed rep*/
    set SM0LM002.PV-MSA-VEND-NBR initialAttributes;
    set SM0LM002.SM0LM-VEND-LIT initialAttributes;
  end


end // end SM0LS-RESET-MAP2

// Call IO0160 fetch next vragcy
Function SM0LS-SCAN-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-SCAN-VRAGCY*/
   /* This routine calls IO0160 to fetch the next Rep-Agency row*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("SN", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* end of cursor*/
    SM0LW-MORE-VRAGCY-FL = "N";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "SN      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0LS-SCAN-VRAGCY

// Set default SM aud row fields
Function SM0LS-SET-AUD-REC()
   /* **********************************************************************/
   /* Setup common fields in the SM audit record*/
   /* **********************************************************************/

  set VSMAUD01 empty;

  VSMAUD01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSMAUD01.ZZ-SDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
  VSMAUD01.ZZ-SETUP-HHMMSS = SM0LW01.SM0LW-CURR-HHMMSS;

  VSMAUD01.SM-SREP-ID = SM4REC.SM4REPID;

end // end SM0LS-SET-AUD-REC

// Set subsystem rec & causera
Function SM0LS-SET-CAUSERA()
  /* ************************************************************************/
  /* This statement group moves the last valid Rep id to the subsystem*/
  /* record so the next application will have a valid key to start with.*/
  /* if the rep id is different from the one passed to this application,*/
  /* then the agency id in the subsystem record is initialized.*/
  /* The subsystem record is then moved as a group to the causera field*/
  /* of the common data area.*/
  /* ************************************************************************/

  SMWREC.SMW-NUM-CHK-WORD = SM0LW02.SM0LW-SM-SREP-ID;
  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = " ";
  SMWREC.SMW-NUM-CHK-LEN = 4;
  XSSMS-NUM-CHK(); /* validate & convert from char to num*/
  if (SMWREC.SMW-NUM-CHK-ERR == "Y")
    SMWREC.SM-SAGCY-ID = " ";
    SMWREC.SM-SREP-ID = 0;
    COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD;
  else
    SM4REC.SM4REPID = SMWREC.SMW-NUM-CHK-NBR;
    if (SM4REC.SM4REPID != SMWREC.SM-SREP-ID)
      SMWREC.SM-SREP-ID = SM4REC.SM4REPID;
      if (SM0LM001.SM-SAGCY-ID == "****"
       || SM0LM001.SM-SAGCY-ID == " ")
        SMWREC.SM-SAGCY-ID = " ";
      else
        SMWREC.SM-SAGCY-ID = SM0LM001.SM-SAGCY-ID;
      end
    else /* rep id did not change from passed value*/
      if (SM0LM001.SM-SAGCY-ID == "****")
         /* keep old agency id*/
      else
        SMWREC.SM-SAGCY-ID = SM0LM001.SM-SAGCY-ID;
      end
    end
    COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD;
  end


end // end SM0LS-SET-CAUSERA

// Set proc-typ to 'U' or 'I'
Function SM0LS-SET-PROC-TYP()
  /* ************************************************************************/
  /* This process sets the proc-typ indicator to either inquiry or update*/
  /* from the add mode.  Depending on the authorization level of the*/
  /* userid.*/
  /* ************************************************************************/
  if (COMMAREA.CACHGFL == "Y" /* has change authority*/
   || COMMAREA.CACLVL[1] == "Y")
    SM0LW01.SM0LW-PROC-TYP-IND = "U";
  else
    SM0LW01.SM0LW-PROC-TYP-IND = "I";
  end

end // end SM0LS-SET-PROC-TYP

// Move CURR-DTL to vreps001
Function SM0LS-SET-REP-DATA()
   /* **********************************************************************/
   /* move CURR-DTL to VREPS001*/
   /* **********************************************************************/

  SM4REC.XXXLSTNM = SM0LW04.XXX-LAST-NM;
  SM4REC.XXXFSTNM = SM0LW04.XXX-FRST-NM;
  SM4REC.XXXMDINT = SM0LW04.XXX-MID-INIT;
  SM4REC.XXXADDR1 = SM0LW04.XXXADDR1;
  SM4REC.XXXADDR2 = SM0LW04.XXXADDR2;
  SM4REC.XXXCITY = SM0LW04.XXX-CITY;
  SM4REC.XSTCD = SM0LW04.XST-ST-CD;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
  SM4REC.XXXZIP = SM0LW04.SM0LW-XXXZIP;

  SM4REC.XXXAADR1 = SM0LW04.XXX-ALT-ADDR1;
  SM4REC.XXXAADR2 = SM0LW04.XXX-ALT-ADDR2;
  SM4REC.XXXACITY = SM0LW04.XXX-ALT-CITY;
  SM4REC.XXXAST = SM0LW04.XXX-ALT-ST-CD;
    /* zip changed to one 10 byte field for Canadian project 9/95*/
  SM4REC.XXXAZIP = SM0LW04.SM0LW-XXXAZIP;

  if (SM0LW-PROC-TYP-IND == "A") /* if adding a rep*/
    SM0LS-DUP-ALT-ADDR(); /* check if no alt addr was entered and dup*/
  end

  SM4REC.XXXPHNA = SM0LW04.SM0LW-XXXPHNA;
  SM4REC.XXXPHNP = SM0LW04.SM0LW-XXXPHNP;
  SM4REC.XXXPHNN = SM0LW04.SM0LW-XXXPHNN;
  if (SM4REC.XXXPHN == " ")
    SM4REC.XXXPHN = "0000000000";
  end

  SM0LW01.SM0LW-FAX-AREA = SM0LW04.SM0LW-FAX-AREA;
  SM0LW01.SM0LW-FAX-PRE = SM0LW04.SM0LW-FAX-PRE;
  SM0LW01.SM0LW-FAX-NBR = SM0LW04.SM0LW-FAX-NBR;
  SM4REC.XXXFAX = SM0LW01.SM0LW-FAX;
  if (SM4REC.XXXFAX == " ")
    SM4REC.XXXFAX = "0000000000     ";
  end

  SM4REC.SM4EDT = SM0LW04.SM-SREP-CONT-EDT;
  SM4REC.SM4TDT = SM0LW04.SM-SREP-CONT-TDT;

   /* **********************************************************************/
   /* modify change date and time (change count is handled by IOMOD)*/
   /* **********************************************************************/

  SM4REC.ZZZCHGDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
  SM4REC.ZZZCHGTM = SM0LW01.SM0LW-CURR-HHMM;

end // end SM0LS-SET-REP-DATA

// Set initial VREPS001 value
Function SM0LS-SET-REP-REC()
   /* **********************************************************************/
   /* Set initial value of VREPS001 for insert*/
   /* **********************************************************************/

  set SM4REC empty;

  SM0LS-GET-NEXT-ID();

  SM4REC.SM4REPID = SM0LW01.SM0LW-SM-NXT-REP-ID;
  SM4REC.ZZZSDT = SM0LW01.SM0LW-CURR-CCYYMMDD;


end // end SM0LS-SET-REP-REC

// Transfer active ragcy record
Function SM0LS-TRN-A-RAGCY()
   /* **********************************************************************/
   /* Transfer active ragcy rec for HR rep to manually entered rep.*/
   /* **********************************************************************/

  /* **********************************************************************/
  /* Save SM5REC, position id, eff dt, term dt, and rep assn typ.*/
  /* **********************************************************************/
  SM0LW01.VRAGCY01-GROUP = SM5REC.VRAGCY01-GROUP; /* save sm5rec*/
  SM0LW01.SM-SREP-PSTN-ID = SM5REC.SM-SREP-PSTN-ID;
  SM0LW01.SM5EDT = SM5REC.SM5EDT;
  SM0LW01.SM5TDT = SM5REC.SM5TDT;
  SM0LW01.XRTCD = SM5REC.XRTCD;

  /* **********************************************************************/
  /* Check if agency assigned to HR rep is already assigned to the*/
  /* manually entered rep and is active.*/
  /* **********************************************************************/
  SM5REC.SM4REPID = SM0LW01.SM-SREP-ID[1];

  SM0LS-FIND-VRAGCY(); /* call io0160 to read vragcy01*/

  /* **********************************************************************/
  /* Set up the audit record*/
  /* **********************************************************************/
  SM0LS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VRAGCY01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0LW-VRAGCY01-LENGTH;

  if (SM0LW-VRAGCY01-FOUND-FL == "Y") /* agency is assigned to rep*/
  /* **********************************************************************/
  /* Agency assigned to HR rep is currently assigned to the*/
  /* manually entered rep.  Update that ragcy rec with info from the*/
  /* HR rep ragcy record.*/
  /* **********************************************************************/

    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
    VSMAUD01.SM-AUDIT-TYP-CD = "C";
    VSMAUD01.SM-BFR-AFT-IND = "B";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/

    SM5REC.SM-SREP-PSTN-ID = SM0LW01.SM-SREP-PSTN-ID;
    SM5REC.SM5EDT = SM0LW01.SM5EDT;
    SM5REC.SM5TDT = SM0LW01.SM5TDT;
    SM5REC.XRTCD = SM0LW01.XRTCD;
    SM5REC.ZZZCHGDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
    SM5REC.ZZZCHGTM = SM0LW01.SM0LW-CURR-HHMM;

    SM0LS-UPDT-VRAGCY(); /* Update VRAGCY01*/

    if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0073); /* rec was updated by another*/
    end

    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/

  else /* agency is not yet assigned*/
  /* **********************************************************************/
  /* Agency assigned to HR rep is not currently assigned to the*/
  /* manually entered rep.  Add a ragcy rec for the manually entered*/
  /* rep with info from the HR rep ragcy record.*/
  /* **********************************************************************/

    SM5REC.VRAGCY01-GROUP = SM0LW01.VRAGCY01-GROUP; /* restore sm5rec*/
    SM5REC.SM4REPID = SM0LW01.SM-SREP-ID[1];
    SM5REC.ZZZSDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
    SM5REC.ZZZCHGDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
    SM5REC.ZZZCHGTM = SM0LW01.SM0LW-CURR-HHMM;
    SM5REC.ZZZCHGCT = 0;

    SM0LS-ADD-VRAGCY(); /* Add VRAGCY01*/

    if (SQLCA.VAGen_SQLCODE == -803) /* record to add exists*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0073); /* rec was added by another*/
    end

    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
    VSMAUD01.SM-AUDIT-TYP-CD = "A";
    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/

  end

  /* **********************************************************************/
  /* If no errors, log HR rep ragcy record as deleted.*/
  /* **********************************************************************/
  if (SM0LW-ERR-FL != "Y") /* no DB2 errors*/
    SM5REC.VRAGCY01-GROUP = SM0LW01.VRAGCY01-GROUP; /* restore sm5rec*/
    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
    VSMAUD01.SM-AUDIT-TYP-CD = "D";
    VSMAUD01.SM-BFR-AFT-IND = "B";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/
  end


end // end SM0LS-TRN-A-RAGCY

// Transfer inactive ragcy record
Function SM0LS-TRN-I-RAGCY()
   /* **********************************************************************/
   /* Transfer inactive ragcy rec for HR rep to manually entered rep.*/
   /* **********************************************************************/

  /* **********************************************************************/
  /* Save SM5REC*/
  /* **********************************************************************/
  SM0LW01.VRAGCY01-GROUP = SM5REC.VRAGCY01-GROUP; /* save sm5rec*/

  /* **********************************************************************/
  /* Set up the audit record*/
  /* **********************************************************************/
  SM0LS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VRAGCY01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0LW-VRAGCY01-LENGTH;

  /* **********************************************************************/
  /* Add a ragcy rec for the manually entered rep with info from the*/
  /* HR rep ragcy record.*/
  /* **********************************************************************/

  SM5REC.SM4REPID = SM0LW01.SM-SREP-ID[1];
  SM5REC.ZZZSDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
  SM5REC.ZZZCHGDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
  SM5REC.ZZZCHGTM = SM0LW01.SM0LW-CURR-HHMM;
  SM5REC.ZZZCHGCT = 0;

  SM0LS-ADD-VRAGCY(); /* Add VRAGCY01*/

  VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
  VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
  VSMAUD01.SM-AUDIT-TYP-CD = "A";
  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
  SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/


  /* **********************************************************************/
  /* If no errors, log HR rep ragcy record as deleted.*/
  /* **********************************************************************/
  if (SM0LW-ERR-FL != "Y") /* no DB2 errors*/
    SM5REC.VRAGCY01-GROUP = SM0LW01.VRAGCY01-GROUP; /* restore sm5rec*/
    VSMAUD01.SM-SREP-ID = SM5REC.SM4REPID;
    VSMAUD01.SM-SAGCY-ID = SM5REC.SM1AGYID;
    VSMAUD01.SM-AUDIT-TYP-CD = "D";
    VSMAUD01.SM-BFR-AFT-IND = "B";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM5REC.VRAGCY01-GROUP;
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/
  end


end // end SM0LS-TRN-I-RAGCY

// Update manually entered rep
Function SM0LS-UPD-MAN-REP()
   /* **********************************************************************/
   /* Update manually entered Rep row using info from HR entered rep.*/
   /* **********************************************************************/

  /* **********************************************************************/
  /* Find manually entered rep row*/
  /* **********************************************************************/
  SM4REC.SM4REPID = SM0LW01.SM-SREP-ID[1];

  SM0LS-FIND-VREPS0(); /* call io0020 to read the reps table*/

  if (SM0LW-VREPS001-FOUND-FL == "N") /* rep rec was not found*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0073); /* rec was updated by another*/
    return;
  end

  /* **********************************************************************/
  /* Set rep before image and log to audit table*/
  /* **********************************************************************/
  SM0LS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VREPS001"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0LW-VREPS001-LENGTH;
  VSMAUD01.SM-AUDIT-TYP-CD = "C";
  VSMAUD01.SM-BFR-AFT-IND = "B";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM4REC.VREPS001-GROUP;

  SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/

  /* **********************************************************************/
  /* Move HR info into the manually entered rep record held*/
  /* **********************************************************************/
  SM4REC.SM-SREP-EMPL-ID = SM0LM002.SM-SREP-EMPL-ID;
  SM4REC.XXXLSTNM = SM0LM002.XXX-LAST-NM[2];
  SM4REC.XXXFSTNM = SM0LM002.XXX-FRST-NM[2];
  SM4REC.XXXMDINT = SM0LM002.XXX-MID-INIT[2];
  SM4REC.XXXAADR1 = SM0LM002.XXXADDR1[2];
  SM4REC.XXXAADR2 = SM0LM002.XXXADDR2[2];
  SM4REC.XXXACITY = SM0LM002.XXX-CITY[2];
  SM4REC.XXXAST = SM0LM002.XST-ST-CD[2];
    /* zip changed to one 10 byte field for Canadian project*/
  SM4REC.XXXAZIP = SM0LM002.XXX-ZIP[2];

  SM4REC.SM4EDT = SM0LM002.SM0LM-SM-SREP-CONT-EDT[2];
  SM4REC.SM4TDT = SM0LM002.SM0LM-SM-SREP-CONT-TDT[2];
  SM4REC.ZZZCHGDT = SM0LW01.SM0LW-CURR-CCYYMMDD;
  SM4REC.ZZZCHGTM = SM0LW01.SM0LW-CURR-HHMM;

  /* **********************************************************************/
  /* Update the manually entered rep record held*/
  /* **********************************************************************/
  SM0LS-UPDT-VREPS0(); /* Update VREPS001*/

  if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
    SM0LW-ERR-FL = "Y";
    converseLib.validationFailed(0073); /* rec was updated by another*/
    return;
  end

  /* **********************************************************************/
  /* Set rep after image and log to audit table*/
  /* **********************************************************************/
  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = SM4REC.VREPS001-GROUP;

  SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/


end // end SM0LS-UPD-MAN-REP

// Update Ragcy process
Function SM0LS-UPD-RAG-PROC()
   /* **********************************************************************/
   /* Transfer all agency assignment of the HR entered rep to the*/
   /* manually entered rep.*/
   /* **********************************************************************/

  /* **********************************************************************/
  /* Open a cursor for all HR rep agency assignments*/
  /* **********************************************************************/
  SM5REC.SM4REPID = SM0LW01.SM-SREP-ID[2];

  SM0LS-OPEN-VRAGCY(); /* call io0160 to open a cursor*/

  SM0LW-MORE-VRAGCY-FL = "Y";
  SM0LS-SCAN-VRAGCY(); /* call io0160 to fetch a ragcy row*/

  /* **********************************************************************/
  /* For each HR rep agency assignment, transfer assignment to the*/
  /* manually entered rep.*/
  /* **********************************************************************/
  while (SM0LW-MORE-VRAGCY-FL == "Y")
    if (SM5REC.XXXSTAT == "A") /* active agency assignment*/
      SM0LS-TRN-A-RAGCY(); /* process update active ragcy row*/
    else /* inactive agency assignment*/
      SM0LS-TRN-I-RAGCY(); /* process update inactive ragcy row*/
    end
    SM0LS-SCAN-VRAGCY(); /* call io0160 to fetch a ragcy row*/
  end

  /* **********************************************************************/
  /* Close the HR rep agency assignments cursor*/
  /* **********************************************************************/
  SM0LS-CLOS-VRAGCY(); /* call io0160 to close the cursor*/

  /* **********************************************************************/
  /* Delete all ragcy rows for the HR rep id*/
  /* **********************************************************************/
  SM5REC.SM4REPID = SM0LW01.SM-SREP-ID[2];

  SM0LS-DEL-VRAGCY(); /* call io0160 to delete all ragcy for rep*/


end // end SM0LS-UPD-RAG-PROC

// Update Rep row process
Function SM0LS-UPD-REP-PROC()
   /* **********************************************************************/
   /* Update Rep id table process*/
   /* **********************************************************************/

  SM0LS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VREPS001"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0LW-VREPS001-LENGTH;

  if (SM0LW-PROC-TYP-IND == "U") /* update agency row*/

    VSMAUD01.SM-AUDIT-TYP-CD = "C";
    VSMAUD01.SM-BFR-AFT-IND = "B";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM4REC.VREPS001-GROUP;
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/

    SM0LS-SET-REP-DATA(); /* move changed data to VREPS001*/
    SM0LS-UPDT-VREPS0(); /* Update VREPS001*/

    if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0073); /* rec was updated by another*/
    end

    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM4REC.VREPS001-GROUP;

  else /* add agency row*/

    SM0LS-SET-REP-REC(); /* set VREPS001 to initial value*/
    SM0LS-SET-REP-DATA(); /* move changed data to VREPS001*/
    SM0LS-ADD-VREPS0(); /* Add VREPS001*/

    if (SQLCA.VAGen_SQLCODE == -803) /* record to add exists*/
      SM0LW-ERR-FL = "Y";
      converseLib.validationFailed(0073); /* rec was added by another*/
    end

    if (SM0LW-ERR-FL != "Y") /* no prior errors*/
      VSMAUD01.SM-AUDIT-TYP-CD = "A";
      VSMAUD01.SM-BFR-AFT-IND = "A";
      VSMAUD01.SM-AUDIT-FILLER-TEXT = SM4REC.VREPS001-GROUP;
      VSMAUD01.SM-SREP-ID = SM4REC.SM4REPID;
      SM0LS-UPDT-VSMCTL(); /* updt lst rep id in control tbl*/

       /* convert rep-id in vreps001 to char and move to map & curr-hdr*/

      SMWREC.SMW-NUM-CHK-NBR = SM4REC.SM4REPID;
      SMWREC.SMW-NUM-CHK-FUNC = "NUMTOCHR"; /* convert to char*/
      SMWREC.SMW-NUM-CHK-PAD = " "; /* suppress lead 0's*/
      SMWREC.SMW-NUM-CHK-LEN = 4;
      XSSMS-NUM-CHK(); /* nbr convertion rtn*/
      SM0LM001.SM0LM-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* map*/
      SM0LW02.SM0LW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* cur hdr*/
      SM0LW03.SM0LW-SM-SREP-ID = SMWREC.SMW-NUM-CHK-WORD; /* prv hdr*/

    end

  end

  if (SM0LW-ERR-FL != "Y") /* no DB2 errors*/
    SM0LS-ADD-VSMAUD(); /* Add VSMAUD01*/
  end

end // end SM0LS-UPD-REP-PROC

// Update tables process
Function SM0LS-UPD-TBL-PROC()
   /* **********************************************************************/
   /* Update tables process*/
   /* **********************************************************************/

  SM0LS-GET-TM-STAMP(); /* get dt & tm stamp for update*/

  SM0LS-UPD-REP-PROC(); /* update/add VREPS001 process*/

  if (SM0LW-ERR-FL != "Y") /* no errors found while updating*/
    SM0LS-SET-PROC-TYP(); /* reset proc-typ to updt or inq*/
    SM0LS-GET-REP-INFO(); /* Reload map*/
    converseLib.validationFailed(0074); /* Updates accepted*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* Rollback any updates done*/
  end

end // end SM0LS-UPD-TBL-PROC

// Call IO0160 update vragcy
Function SM0LS-UPDT-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-UPDT-VRAGCY*/
   /* This routine calls IO0160 to update a ragcy row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("U ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != 100) /* not record not found*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-UPDT-VRAGCY

// Call IO0020 updt vreps001
Function SM0LS-UPDT-VREPS0()
   /* **********************************************************************/
   /* SM0LS-UPDT-VREPS0*/
   /* This routine calls IO0020 to update a rep row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0020" ("U ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != 100) /* not record not found*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-UPDT-VREPS0

// Call IO6480 incr rep-id in ctl
Function SM0LS-UPDT-VSMCTL()
   /* **********************************************************************/
   /* SM0LS-UPDT-VSMCTL*/
   /* This routine calls IO6580 to update the last rep id used in the*/
   /* SM control table.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO6580" ("U1", SQLCA, VSMCTL01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (VSMCTL01.SM-LST-REP-ID < 0)
      set TAEREC empty;
      TAEREC.TAEDESC1 = "UNABLE TO UPDATE LAST REP ID ";
      TAEREC.TAEDESC2 = "IN THE SM CONTROL TABLE.     ";
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "IO6580";
      TA1REC.TA1LOC = "U1      ";
      TA1REC.TA1MAP = "SM0LM001";
      try
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
      end
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* return to goal*/
      exit program;
    end
  else /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMCTL01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO6580"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0LS-UPDT-VSMCTL

// Validate date format
Function SM0LS-VAL-DT-FMT()
   /* **********************************************************************/
   /* Validate Date format*/
   /* must be valid MMDDYY or MM/DD/YY format ('/' must be valid delimiter*/
   /* **********************************************************************/

  if (SM0LW-WORK-CHAR-DATE-BLANK == " ") /* mmddyy format*/
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = SM0LW-WORK-CHAR-DATE-MMDDYY;
  else /* mm/dd/yy format*/
    SM0LW01.SM0LW-EDIT-MMDDYY-DISPLAY = SM0LW-WORK-CHAR-DATE-MM-DD-YY;
    if (SM0LW-EDIT-MMDDYY-DASH1 != "/"
     && SM0LW-EDIT-MMDDYY-DASH1 != "."
     && SM0LW-EDIT-MMDDYY-DASH1 != "-"
     && SM0LW-EDIT-MMDDYY-DASH1 != " "
     && SM0LW-EDIT-MMDDYY-DASH1 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    if (SM0LW-EDIT-MMDDYY-DASH2 != "/"
     && SM0LW-EDIT-MMDDYY-DASH2 != "."
     && SM0LW-EDIT-MMDDYY-DASH2 != "-"
     && SM0LW-EDIT-MMDDYY-DASH2 != " "
     && SM0LW-EDIT-MMDDYY-DASH2 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    TA2REC.TA2GRTYP = "B";
    TA2REC.TA2GRGB = SM0LW-WORK-CHAR-DATE-MM-DD-YY;
  end

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0
   && TA2REC.TA2RTNCD != 222)
    SM0LW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 VALIDATE DATE FORMAT FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "SM0LM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    exit program;
  end

end // end SM0LS-VAL-DT-FMT

//*** RECORD=SM0LW01 ****
// Working storage record for application SM0L.
// 
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    3/12/93  RCORON    Created record.
// 
// ***********************
Record SM0LW01 type basicRecord
  10 * char(17) ; 
    15 SM0LW-ERR-FL SM0LW-ERR-FL ; 
    15 SM0LW-VREPS001-FOUND-FL SM0LW-VREPS001-FOUND-FL ; 
    15 SM0LW-VRAGCY01-FOUND-FL SM0LW-VRAGCY01-FOUND-FL ; 
    15 SM0LW-MORE-VRAGCY-FL SM0LW-MORE-VRAGCY-FL ; 
    15 SM0LW-DISP-ERR-FL SM0LW-DISP-ERR-FL ; 
    15 SM0LW-PROC-TYP-IND SM0LW-PROC-TYP-IND ; 
    15 SM0LW-CONFIRM-FL SM0LW-CONFIRM-FL ; 
    15 SM0LW-MERGED-FL SM0LW-MERGED-FL ; 
    15 SM0LW-REFRESH-FL SM0LW-REFRESH-FL ; 
    15 SM0LW-PTR SM0LW-PTR ; 
    15 SM0LW-SM-NXT-REP-ID SM0LW-SM-NXT-REP-ID ; 
    15 SM0LW-SM-SREP-ID SM0LW-SM-SREP-ID ; 
  10 * char(4) ; 
    15 SM0LW-VREPS001-LENGTH SM0LW-VREPS001-LENGTH ; 
    15 SM0LW-VRAGCY01-LENGTH SM0LW-VRAGCY01-LENGTH ; 
  10 * char(124) ; 
    15 VRAGCY01-GROUP VRAGCY01-GROUP ; 
    15 SM-SREP-ID SM-SREP-ID [2] ; 
    15 SM-SREP-PSTN-ID SM-SREP-PSTN-ID ; 
    15 SM5EDT SM5EDT ; 
    15 SM5TDT SM5TDT ; 
    15 XRTCD XRTCD ; 
  10 * char(24) ; 
    15 SM0LW-EDIT-CCYYMMDD SM0LW-EDIT-CCYYMMDD ; 
      20 SM0LW-EDIT-CCYYMMDD-CENTURY SM0LW-EDIT-CCYYMMDD-CENTURY ; 
      20 SM0LW-EDIT-CCYYMMDD-YEAR SM0LW-EDIT-CCYYMMDD-YEAR ; 
      20 SM0LW-EDIT-CCYYMMDD-MONTH SM0LW-EDIT-CCYYMMDD-MONTH ; 
      20 SM0LW-EDIT-CCYYMMDD-DAY SM0LW-EDIT-CCYYMMDD-DAY ; 
    15 SM0LW-EDIT-MMDDYY-DISPLAY SM0LW-EDIT-MMDDYY-DISPLAY ; 
      20 SM0LW-EDIT-MMDDYY-MONTH SM0LW-EDIT-MMDDYY-MONTH ; 
      20 SM0LW-EDIT-MMDDYY-DASH1 SM0LW-EDIT-MMDDYY-DASH1 ; 
      20 SM0LW-EDIT-MMDDYY-DAY SM0LW-EDIT-MMDDYY-DAY ; 
      20 SM0LW-EDIT-MMDDYY-DASH2 SM0LW-EDIT-MMDDYY-DASH2 ; 
      20 SM0LW-EDIT-MMDDYY-YEAR SM0LW-EDIT-MMDDYY-YEAR ; 
    15 SM0LW-WORK-CHAR-DATE SM0LW-WORK-CHAR-DATE ; 
      20 SM0LW-WORK-CHAR-DATE-MM-DD-YY SM0LW-WORK-CHAR-DATE-MM-DD-YY ; 
        25 SM0LW-WORK-CHAR-DATE-MMDDYY SM0LW-WORK-CHAR-DATE-MMDDYY ; 
        25 SM0LW-WORK-CHAR-DATE-BLANK SM0LW-WORK-CHAR-DATE-BLANK ; 
  10 * char(14) ; 
    15 SM0LW-WORK-CCYYMMDD SM0LW-WORK-CCYYMMDD ; 
    15 SM0LW-CURR-CCYYMMDD SM0LW-CURR-CCYYMMDD ; 
    15 SM0LW-CURR-HHMMSS SM0LW-CURR-HHMMSS ; 
    15 SM0LW-CURR-HHMM SM0LW-CURR-HHMM ; 
  10 * char(25) ; 
    15 SM0LW-FAX SM0LW-FAX ; 
      20 SM0LW-FAX-AREA SM0LW-FAX-AREA ; 
      20 SM0LW-FAX-PRE SM0LW-FAX-PRE ; 
      20 SM0LW-FAX-NBR SM0LW-FAX-NBR ; 
      20 * char(5) ; 
    15 SM0LW-PHONE SM0LW-PHONE ; 
      20 SM0LW-PHONE-AREA SM0LW-PHONE-AREA ; 
      20 SM0LW-PHONE-PRE SM0LW-PHONE-PRE ; 
      20 SM0LW-PHONE-NBR SM0LW-PHONE-NBR ; 
end // end SM0LW01

//*** RECORD=SM0LW02 ****
// Working storage record for application SM0L to hold current
// Rep id.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    3/12/93  RCORON    Created record.
// 
// ***********************
Record SM0LW02 type basicRecord
  10 SM0LW-CURR-HDR SM0LW-CURR-HDR ; 
    15 SM0LW-SM-SREP-ID SM0LW-SM-SREP-ID ; 
end // end SM0LW02

//*** RECORD=SM0LW03 ****
// Working storage record for application SM0L to hold previous
// Rep id.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    3/12/93  RCORON    Created record.
// 
// ***********************
Record SM0LW03 type basicRecord
  10 SM0LW-PREV-HDR SM0LW-PREV-HDR ; 
    15 SM0LW-SM-SREP-ID SM0LW-SM-SREP-ID ; 
end // end SM0LW03

//*** RECORD=SM0LW04 ****
// Working storage record for application SM0L to hold current
// Rep details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    3/12/93  RCORON    Created record.
// 
// ***********************
Record SM0LW04 type basicRecord
  5 SM0LW-CURR-DTL SM0LW-CURR-DTL ; 
    10 XXX-LAST-NM XXX-LAST-NM ; 
    10 XXX-FRST-NM XXX-FRST-NM ; 
    10 XXX-MID-INIT XXX-MID-INIT ; 
    10 XXXADDR1 XXXADDR1 ; 
    10 XXX-ALT-ADDR1 XXX-ALT-ADDR1 ; 
    10 XXXADDR2 XXXADDR2 ; 
    10 XXX-ALT-ADDR2 XXX-ALT-ADDR2 ; 
    10 XXX-CITY XXX-CITY ; 
    10 XXX-ALT-CITY XXX-ALT-CITY ; 
    10 XST-ST-CD XST-ST-CD ; 
    10 SM0LW-XXXZIP SM0LW-XXXZIP ; 
    10 XXX-ALT-ST-CD XXX-ALT-ST-CD ; 
    10 SM0LW-XXXAZIP SM0LW-XXXAZIP ; 
    10 SM0LW-XXXPHNA SM0LW-XXXPHNA ; 
    10 SM0LW-XXXPHNP SM0LW-XXXPHNP ; 
    10 SM0LW-XXXPHNN SM0LW-XXXPHNN ; 
    10 SM0LW-FAX-AREA SM0LW-FAX-AREA ; 
    10 SM0LW-FAX-PRE SM0LW-FAX-PRE ; 
    10 SM0LW-FAX-NBR SM0LW-FAX-NBR ; 
    10 SM0LW-SM-SREP-CONT-EDT SM0LW-SM-SREP-CONT-EDT ; 
    10 SM0LW-SM-SREP-CONT-TDT SM0LW-SM-SREP-CONT-TDT ; 
  5 SM-SREP-CONT-EDT SM-SREP-CONT-EDT ; 
  5 SM-SREP-CONT-TDT SM-SREP-CONT-TDT ; 
end // end SM0LW04

//*** RECORD=SM0LW05 ****
// Working storage record for application SM0L to hold previous
// Rep details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    3/12/93  RCORON    Created record.
// 
// ***********************
Record SM0LW05 type basicRecord
  5 SM0LW-PREV-DTL SM0LW-PREV-DTL ; 
    10 XXX-LAST-NM XXX-LAST-NM ; 
    10 XXX-FRST-NM XXX-FRST-NM ; 
    10 XXX-MID-INIT XXX-MID-INIT ; 
    10 XXXADDR1 XXXADDR1 ; 
    10 XXX-ALT-ADDR1 XXX-ALT-ADDR1 ; 
    10 XXXADDR2 XXXADDR2 ; 
    10 XXX-ALT-ADDR2 XXX-ALT-ADDR2 ; 
    10 XXX-CITY XXX-CITY ; 
    10 XXX-ALT-CITY XXX-ALT-CITY ; 
    10 XST-ST-CD XST-ST-CD ; 
    10 SM0LW-XXXZIP SM0LW-XXXZIP ; 
    10 XXX-ALT-ST-CD XXX-ALT-ST-CD ; 
    10 SM0LW-XXXAZIP SM0LW-XXXAZIP ; 
    10 SM0LW-XXXPHNA SM0LW-XXXPHNA ; 
    10 SM0LW-XXXPHNP SM0LW-XXXPHNP ; 
    10 SM0LW-XXXPHNN SM0LW-XXXPHNN ; 
    10 SM0LW-FAX-AREA SM0LW-FAX-AREA ; 
    10 SM0LW-FAX-PRE SM0LW-FAX-PRE ; 
    10 SM0LW-FAX-NBR SM0LW-FAX-NBR ; 
    10 SM0LW-SM-SREP-CONT-EDT SM0LW-SM-SREP-CONT-EDT ; 
    10 SM0LW-SM-SREP-CONT-TDT SM0LW-SM-SREP-CONT-TDT ; 
  5 SM-SREP-CONT-EDT SM-SREP-CONT-EDT ; 
  5 SM-SREP-CONT-TDT SM-SREP-CONT-TDT ; 
  5 SM-SREP-EMPL-ID SM-SREP-EMPL-ID ; 
  5 ZZ-SDT ZZ-SDT ; 
  5 ZZ-CHNG-DT ZZ-CHNG-DT ; 
end // end SM0LW05

// confirm flag for merging reps
DataItem SM0LW-CONFIRM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0l curr date ccyymmdd
DataItem SM0LW-CURR-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0LW-CURR-DTL char(271)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-CURR-HDR char(4)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// sm0l curr time hhmm
DataItem SM0LW-CURR-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0l curr time hhmmss
DataItem SM0LW-CURR-HHMMSS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Display errors found switch
DataItem SM0LW-DISP-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0LW-EDIT-CCYYMMDD-CENTURY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-CCYYMMDD-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-CCYYMMDD-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-CCYYMMDD-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-MMDDYY-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-MMDDYY-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-MMDDYY-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-MMDDYY-DISPLAY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-MMDDYY-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-EDIT-MMDDYY-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0L error flag
DataItem SM0LW-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work fax number
DataItem SM0LW-FAX char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-FAX-AREA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-FAX-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-FAX-PRE char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// merge/update okay flag
DataItem SM0LW-MERGED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// more rep-agency assignment fl
DataItem SM0LW-MORE-VRAGCY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work phone number
DataItem SM0LW-PHONE char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-PHONE-AREA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-PHONE-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-PHONE-PRE char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-PREV-DTL char(271)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0LW-PREV-HDR char(4)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Process type indicator
DataItem SM0LW-PROC-TYP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0l work index pointer
DataItem SM0LW-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// refresh sm0lm001 map fl
DataItem SM0LW-REFRESH-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SREP_ID
DataItem SM0LW-SM-NXT-REP-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_PAY_CD
DataItem SM0LW-SM-SREP-CONT-EDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_PAY_CD
DataItem SM0LW-SM-SREP-CONT-TDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work rep id
DataItem SM0LW-SM-SREP-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Rep found flag
DataItem SM0LW-VRAGCY01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VRAGCY01
DataItem SM0LW-VRAGCY01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Rep found flag
DataItem SM0LW-VREPS001-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VREPS001
DataItem SM0LW-VREPS001-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0l work date
DataItem SM0LW-WORK-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0l work date
DataItem SM0LW-WORK-CHAR-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0l work date
DataItem SM0LW-WORK-CHAR-DATE-BLANK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0l work date
DataItem SM0LW-WORK-CHAR-DATE-MM-DD-YY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0l work date
DataItem SM0LW-WORK-CHAR-DATE-MMDDYY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// zip code
DataItem SM0LW-XXXAZIP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// phone area code
DataItem SM0LW-XXXPHNA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// phone number - last 4 digits
DataItem SM0LW-XXXPHNN char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// phone prefix
DataItem SM0LW-XXXPHNP char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// zip code
DataItem SM0LW-XXXZIP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

