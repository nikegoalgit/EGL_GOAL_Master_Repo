package sm0a;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import sm.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=SM0A ****
// SM0A displays AGENCY information. It allows an authorized
// userid to modify an agency's info or add a new agency.
// 
// ************************************************************
// *                    MAINTENANCE HISTORY                   *
// ************************************************************
// 
// Log #    Date     Name   Description
// -----  --------  ------  -----------------------------------
// 
//   001   1/15/93  RCORON  Created application.
//         1/23/93  GCALKI  Changes to the map.
//         1/26/93  GCALKI  Change uneeded updates to vsagcy.
//         5/26/93  RCORON  Added PF20 key for agency search.
//        11/09/93  RPATTE  DB2 CHG. RESIZED XXX-ADDR(N) 30-38.
//        03/01/94  RPATTE  DB2 CHG. XXX-ADDR MORE GAMES.
//        09/08/95  mmcgol  changed zip to one 10 byte field
//                          for Canadian project-affected sgrps
//                          are sm0as-agcy-to-pdtl, sm0as-get-
//                          dtl-desc, sm0as-map-to-cdtl, sm0as-
//                          pdtl-to-map, sm0as-reset-map, sm0as
//                          -set-agy-data; affected records are
//                          sm0aw04, sm0aw05; affected map is
//                          sm0am001
// 
// *********************
Program SM0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SM00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  SM0AW01 SM0AW01; // record
  SM0AW02 SM0AW02; // record
  SM0AW03 SM0AW03; // record
  SM0AW04 SM0AW04; // record
  SM0AW05 SM0AW05; // record
  SM0AW06 SM0AW06; // record
  SM1REC SM1REC; // record
  SM5REC SM5REC; // record
  SMWREC SMWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VAGYED01 VAGYED01; // record
  VSMAUD01 VSMAUD01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSSTBL; // table
  use XSTTBL; // table
  use XSOTBL; // table
  use YGRTBL; // table
  use SM0AM.SM0AM001,  // forms
      SM0AM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SM0A-00000: SM0A-00000();
    goto SM0A-10000;
    SM0A-10000: SM0A-10000();
    /* ***********************************************************************/
    /* Flow to SM0A-10000 which will display the map.                       **/
    /* ***********************************************************************/

    goto SM0A-10000; /* converse the map*/

  end // end main
end // end SM0A

// Initial Processing
Function SM0A-00000()
  /* ***********************************************************************/
  /* *  MODULE: INITIAL PROCESSING                                        **/
  /* * PURPOSE: Check security, set segmented transaction id and do       **/
  /* *          application initialization.                               **/
  /* ***********************************************************************/

  XSENTRY(); /* check goal security*/

  XSSEGTR(); /* set segmented transaction id*/

  SM0AS-INITIALIZE(); /* initialize*/

end // end SM0A-00000

// Converse SM0A map
Function SM0A-10000()
   /*  */
   /* CONVERSE SM0AM001 MAP*/
   /*  */

  SM0AM001.SM0AM-CURR-DATE = VGVar.currentShortGregorianDate;

  converse SM0AM001 ;

  SM0AS-RESET-MAP(); /* reset map attributes*/
  SM0AW-ERR-FL = "N"; /* reset error flag*/
  SM0AM001.CAMSG = " "; /* reset alt msg area*/

  SM0AS-MAP-TO-CHDR(); /* move header fields to workarea*/
  SM0AS-MAP-TO-CDTL(); /* move detail fields to workarea*/


  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    SM0AS-PROC-ENTER();
  else
    if (converseVar.eventKey is pf12 /* EDIT-ONLY key was pressed and allowed*/
     && SM0AW-PROC-TYP-IND != "I")  
      SM0AS-PROC-ENTER();
    else
      if (converseVar.eventKey is pa2) /* CANCEL key was pressed*/
        SM0AS-PROC-PA2();
      else
        if (converseVar.eventKey is pf1 /* Other valid PFkeys pressed*/
         || converseVar.eventKey is pf3 
         || converseVar.eventKey is pf4 
         || converseVar.eventKey is pf5 
         || converseVar.eventKey is pf13
         || converseVar.eventKey is pf20)
          SM0AS-PROC-PFKEYS();
        else
          if (converseVar.eventKey is pf21) /* prompt for pop-up key was pressed*/
            SM0AS-PROC-POPUP();
          else
            converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
            SM0AW-ERR-FL = "Y"; /* error*/
          end
        end
      end
    end
  end


end // end SM0A-10000

// Add Agency cost center proc
Function SM0AS-ADD-AED-PROC()
   /* **********************************************************************/
   /* Add cost center row*/
   /* **********************************************************************/

  SM0AS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VAGYED01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0AW-VAGYED01-LENGTH;

  SM0AS-SET-AED-DATA(); /* setup VAGYED01 record*/
  SM0AS-ADD-VAGYED(); /* Add VAGYED01*/

  VSMAUD01.SM-AUDIT-TYP-CD = "A";
  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = VAGYED01.VAGYED01-GROUP;

  SM0AS-ADD-VSMAUD(); /* Add VSMAUD01*/

end // end SM0AS-ADD-AED-PROC

// Call IO0680 insert vagyed01
Function SM0AS-ADD-VAGYED()
   /* **********************************************************************/
   /* SM0AS-ADD-VAGYED*/
   /* This routine calls IO0680 to insert a cost center row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0680" ("A ", SQLCA, VAGYED01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* db2 error*/
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VAGYED01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0680"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-ADD-VAGYED

// Call IO0050 to add vsagcy01
Function SM0AS-ADD-VSAGCY()
   /* **********************************************************************/
   /* SM0AS-ADD-VSAGCY*/
   /* This routine calls IO0050 to insert an agency row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0050" ("A ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != -803) /* not record already exists*/
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0050"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-ADD-VSAGCY

// Call IO0480 add vsmaud01
Function SM0AS-ADD-VSMAUD()
   /* **********************************************************************/
   /* SM0AS-ADD-VSMAUD*/
   /* This routine calls IO0480 to insert an SM audit record.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0480" ("A ", SQLCA, VSMAUD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSMAUD01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-ADD-VSMAUD

// Move VSAGCY01 to PREV-DTL
Function SM0AS-AGCY-TO-PDTL()
   /* **********************************************************************/
   /* move VSAGCY01 to PREV-DTL*/
   /* **********************************************************************/

  SM0AW05.SM-SAGCY-NM = SM1REC.SM1AGYNM;
  SM0AW05.XXXADDR1 = SM1REC.XXXADDR1;
  SM0AW05.XXXADDR2 = SM1REC.XXXADDR2;
  SM0AW05.XXX-CITY = SM1REC.XXXCITY;
  SM0AW05.XST-ST-CD = SM1REC.XSTCD;


    /* zip changed to one field for Canadian project 9/95*/

  SM0AW05.XXX-ZIP = SM1REC.XXXZIP;

  if (SM1REC.XXXPHN == "0000000000")
    SM0AW01.SM0AW-PHONE = " ";
  else
    SM0AW01.SM0AW-PHONE = SM1REC.XXXPHN;
  end
  SM0AW05.SM0AW-XXXPHNA = SM0AW01.SM0AW-PHONE-AREA;
  SM0AW05.SM0AW-XXXPHNP = SM0AW01.SM0AW-PHONE-PRE;
  SM0AW05.SM0AW-XXXPHNN = SM0AW01.SM0AW-PHONE-NBR;

  SM0AW01.SM0AW-FAX = SM1REC.XXXFAX;
  SM0AW05.SM0AW-FAX-AREA = SM0AW01.SM0AW-FAX-AREA;
  SM0AW05.SM0AW-FAX-PRE = SM0AW01.SM0AW-FAX-PRE;
  SM0AW05.SM0AW-FAX-NBR = SM0AW01.SM0AW-FAX-NBR;

  SM0AW05.SM-SAGCY-PAY-CD = SM1REC.SM1PAYCD;
  SM0AW05.CU-CO-ID = SM1REC.KUCCOID;
  SM0AW05.YGR-SLS-GRP-CD = SM1REC.YGRCD;
  SM0AW05.XSS-SAGCY-ASSN-TYP = SM1REC.XSSCD;
  SM0AW05.SM-SAGCY-STAT = SM1REC.SM1STAT;
  SM0AW05.XSO-SLS-OFC-ID = SM1REC.XSOCD;

  SM0AW05.SM-SAGCY-CONT-EDT = SM1REC.SM1CTEDT;
  SM0AW05.SM0AW-SM-SAGCY-CONT-EDT = " ";
  SM0AW05.SM-SAGCY-CONT-TDT = SM1REC.SM1CTTDT;
  SM0AW05.SM0AW-SM-SAGCY-CONT-TDT = " ";

   /* reformat edt & xdt to mm-dd-yy format from ccyymmdd*/

  if (SM0AW05.SM-SAGCY-CONT-EDT > 0)
    SM0AW01.SM0AW-EDIT-CCYYMMDD = SM0AW05.SM-SAGCY-CONT-EDT;
    SM0AW01.SM0AW-EDIT-MMDDYY-MONTH = SM0AW01.SM0AW-EDIT-CCYYMMDD-MONTH;
    SM0AW01.SM0AW-EDIT-MMDDYY-DASH1 = "-";
    SM0AW01.SM0AW-EDIT-MMDDYY-DAY = SM0AW01.SM0AW-EDIT-CCYYMMDD-DAY;
    SM0AW01.SM0AW-EDIT-MMDDYY-DASH2 = "-";
    SM0AW01.SM0AW-EDIT-MMDDYY-YEAR = SM0AW01.SM0AW-EDIT-CCYYMMDD-YEAR;
    SM0AW05.SM0AW-SM-SAGCY-CONT-EDT = SM0AW01.SM0AW-EDIT-MMDDYY-DISPLAY;
  end

  if (SM0AW05.SM-SAGCY-CONT-TDT > 0
   && SM0AW05.SM-SAGCY-CONT-TDT < 999999999)
    SM0AW01.SM0AW-EDIT-CCYYMMDD = SM0AW05.SM-SAGCY-CONT-TDT;
    SM0AW01.SM0AW-EDIT-MMDDYY-MONTH = SM0AW01.SM0AW-EDIT-CCYYMMDD-MONTH;
    SM0AW01.SM0AW-EDIT-MMDDYY-DASH1 = "-";
    SM0AW01.SM0AW-EDIT-MMDDYY-DAY = SM0AW01.SM0AW-EDIT-CCYYMMDD-DAY;
    SM0AW01.SM0AW-EDIT-MMDDYY-DASH2 = "-";
    SM0AW01.SM0AW-EDIT-MMDDYY-YEAR = SM0AW01.SM0AW-EDIT-CCYYMMDD-YEAR;
    SM0AW05.SM0AW-SM-SAGCY-CONT-TDT = SM0AW01.SM0AW-EDIT-MMDDYY-DISPLAY;
  end

   /* **********************************************************************/
   /* save read-only fields from VSAGCY01 to PREV-DTL*/
   /* **********************************************************************/

  SM0AW05.ZZ-SDT = SM1REC.ZZZSDT;
  SM0AW05.ZZ-CHNG-DT = SM1REC.ZZZCHGDT;

   /* **********************************************************************/
   /* retrieve cost center id from VAGYED01 and move to PREV-DTL*/
   /* **********************************************************************/

  set VAGYED01 empty;
  VAGYED01.SM-SAGCY-ID = SM0AW03.SM-SAGCY-ID;

  SM0AS-FIND2-VAGYED(); /* Call IO0680 read agency*/

  if (SQLCA.VAGen_SQLCODE == 0) /* cost center row found*/
    SM0AW05.GL-RSP-CTR-ID = VAGYED01.GL-RSP-CTR-ID;
    SM0AW05.GL-ENTITY-ID = VAGYED01.GL-ENTITY-ID;
  else /* cost center row not found*/
    SM0AW05.GL-RSP-CTR-ID = " ";
    SM0AW05.GL-ENTITY-ID = " ";
  end


end // end SM0AS-AGCY-TO-PDTL

// Change Agency cost center proc
Function SM0AS-CHG-AED-PROC()
   /* **********************************************************************/
   /* Delete cost center row and add a new one*/
   /* **********************************************************************/

  SM0AS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VAGYED01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0AW-VAGYED01-LENGTH;

  VSMAUD01.SM-AUDIT-TYP-CD = "D";
  VSMAUD01.SM-BFR-AFT-IND = "B";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = VAGYED01.VAGYED01-GROUP;

  if (SM0AW04.GL-RSP-CTR-ID != " "
   && SM0AW04.GL-ENTITY-ID != " ")
    SM0AS-ADD-VSMAUD(); /* Add VsmAUD01*/
  end

   /* the key used to delete was already set when VAGYED01 was read*/
  SM0AS-DEL-VAGYED(); /* Delete VAGYED01*/

  if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0073); /* rec was updated by another*/
    return;
  end

  SM0AS-SET-AED-DATA(); /* setup VAGYED01 record*/
  SM0AS-ADD-VAGYED(); /* Add VAGYED01*/

  VSMAUD01.SM-AUDIT-TYP-CD = "A";
  VSMAUD01.SM-BFR-AFT-IND = "A";
  VSMAUD01.SM-AUDIT-FILLER-TEXT = VAGYED01.VAGYED01-GROUP;

  SM0AS-ADD-VSMAUD(); /* Add VSMAUD01*/

end // end SM0AS-CHG-AED-PROC

Function SM0AS-CLOS-VRAGCY()
   /* **********************************************************************/
   /* SM0LS-CLOS-VRAGCY*/
   /* This routine calls IO0160 to close a Rep-Agency assignment cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("C2", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "C2      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-CLOS-VRAGCY

// Clear SM0AM001 disp-only desc
Function SM0AS-CLR-DTL-DESC()
   /* **********************************************************************/
   /* Clear SM0AM001 detail descriptions*/
   /* **********************************************************************/

  SM0AM001.XSS-SAGCY-TYP-DESC = " ";
  SM0AM001.SM0AM-PAY-CODE-DESC = " ";
  SM0AM001.YGR-SLS-GRP-DESC = " ";
  SM0AM001.SM0AM-SAGCY-STAT-DESC = " ";
  SM0AM001.XSO-SLS-OFC-NM-SHT = " ";
  SM0AM001.CU-CO-NM = " ";

end // end SM0AS-CLR-DTL-DESC

// Call IO0680 delete vagyed01
Function SM0AS-DEL-VAGYED()
   /* **********************************************************************/
   /* SM0AS-DEL-VAGYED*/
   /* This routine calls IO0680 to delete a cost center row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0680" ("D ", SQLCA, VAGYED01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* db2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VAGYED01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "D       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0680"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-DEL-VAGYED

// Edit Agency ctrct effective dt
Function SM0AS-EDIT-CEDT()
   /* **********************************************************************/
   /* Edit Agency contract effective date*/
   /* **********************************************************************/

   /* Validate date format*/

  SM0AW04.SM-SAGCY-CONT-EDT = 0;

  if (SM0AW04.SM0AW-SM-SAGCY-CONT-EDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    SM0AW01.SM0AW-WORK-CHAR-DATE = SM0AW04.SM0AW-SM-SAGCY-CONT-EDT;
    SM0AS-VAL-DT-FMT(); /* validate date format*/
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      SM0AW04.SM-SAGCY-CONT-EDT = TA2REC.TA2GRGGN;
      SM0AW04.SM0AW-SM-SAGCY-CONT-EDT = TA2REC.TA2GRGB;
      SM0AM001.SM0AM-SM-SAGCY-CONT-EDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* invalid eff date*/
      set SM0AM001.SM0AM-SM-SAGCY-CONT-EDT cursor, bold;
      return;
    end
  else
    if (SM0AW-PROC-TYP-IND == "A" /* processing an add*/
     || SM0AW05.SM0AW-SM-SAGCY-CONT-EDT != " ") /* previous edt existed*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0094); /* effective date required*/
      set SM0AM001.SM0AM-SM-SAGCY-CONT-EDT cursor, bold;
      return;
    end
  end

   /* Effective date must not be after terminate date if both are*/
   /* entered.*/

  if (SM0AW04.SM-SAGCY-CONT-EDT != 0
   && SM0AW04.SM-SAGCY-CONT-TDT != 0
   && SM0AW04.SM-SAGCY-CONT-EDT > SM0AW04.SM-SAGCY-CONT-TDT)
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0075); /* eff dt must be bfr exp dt*/
    set SM0AM001.SM0AM-SM-SAGCY-CONT-EDT cursor, bold;
    set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT bold;
  end


end // end SM0AS-EDIT-CEDT

// Edit Agency ctrct terminate dt
Function SM0AS-EDIT-CTDT()
   /* **********************************************************************/
   /* Edit Agency contract termination date*/
   /* **********************************************************************/

   /* Validate date format*/

  SM0AW04.SM-SAGCY-CONT-TDT = 0;

  if (SM0AW04.SM0AW-SM-SAGCY-CONT-TDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    SM0AW01.SM0AW-WORK-CHAR-DATE = SM0AW04.SM0AW-SM-SAGCY-CONT-TDT;
    SM0AS-VAL-DT-FMT(); /* validate date format*/
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      SM0AW04.SM-SAGCY-CONT-TDT = TA2REC.TA2GRGGN;
      SM0AW04.SM0AW-SM-SAGCY-CONT-TDT = TA2REC.TA2GRGB;
      SM0AM001.SM0AM-SM-SAGCY-CONT-TDT = TA2REC.TA2GRGB;
      if (SM0AW04.SM-SAGCY-STAT == "A") /* agency is active*/
        SM0AS-GET-TM-STAMP(); /* get date for compare*/
        if (SM0AW04.SM-SAGCY-CONT-TDT < SM0AW01.SM0AW-CURR-CCYYMMDD)
          SM0AW-ERR-FL = "Y";
          converseLib.validationFailed(0095); /* end datemust be >= current date*/
          set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT cursor, bold;
        end
      end
    else /* invalid format*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* invalid end date*/
      set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT cursor, bold;
    end
  else /* term date not entered*/
    if (SM0AW04.SM-SAGCY-STAT == "I") /* agency was deactivated*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0015); /* tdt required for inact st*/
      set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT cursor, bold;
    end
  end


end // end SM0AS-EDIT-CTDT

// Edit Agency fax number
Function SM0AS-EDIT-FAX()
   /* **********************************************************************/
   /* Edit Agency fax number*/
   /* **********************************************************************/

   /* Set up char to num conversion parms*/

  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = "0";

  if (SM0AW04.SM0AW-FAX-NBR != " ") /* fax suffix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 4;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.SM0AW-FAX-NBR;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* fax number must be numeric*/
      set SM0AM001.SM0AM-FAX-NBR cursor, bold;
    else
      SM0AW04.SM0AW-FAX-NBR = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.SM0AM-FAX-NBR = SM0AW04.SM0AW-FAX-NBR;
    end
  else
    if (SM0AW04.SM0AW-FAX-AREA != " " /* fax area code is filled*/
     || SM0AW04.SM0AW-FAX-PRE != " ") /* fax prefix is filled*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0027); /* fax number must be filled*/
      set SM0AM001.SM0AM-FAX-NBR cursor, bold;
    end
  end

  if (SM0AW04.SM0AW-FAX-PRE != " ") /* fax prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.SM0AW-FAX-PRE;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* fax number must be numeric*/
      set SM0AM001.SM0AM-FAX-PRE cursor, bold;
    else
      SM0AW04.SM0AW-FAX-PRE = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.SM0AM-FAX-PRE = SM0AW04.SM0AW-FAX-PRE;
    end
  else
    if (SM0AW04.SM0AW-FAX-AREA != " " /* fax area code is filled*/
     || SM0AW04.SM0AW-FAX-NBR != " ") /* fax suffix is filled*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0027); /* fax number must be filled*/
      set SM0AM001.SM0AM-FAX-PRE cursor, bold;
    end
  end

  if (SM0AW04.SM0AW-FAX-AREA != " ") /* fax prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.SM0AW-FAX-AREA;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* fax number must be numeric*/
      set SM0AM001.SM0AM-FAX-AREA cursor, bold;
    else
      SM0AW04.SM0AW-FAX-AREA = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.SM0AM-FAX-AREA = SM0AW04.SM0AW-FAX-AREA;
    end
  else
    if (SM0AW04.SM0AW-FAX-PRE != " " /* fax prefix is filled*/
     || SM0AW04.SM0AW-FAX-NBR != " ") /* fax suffix is filled*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0027); /* fax number must be filled*/
      set SM0AM001.SM0AM-FAX-AREA cursor, bold;
    end
  end


end // end SM0AS-EDIT-FAX

// Edit Agency pay code
Function SM0AS-EDIT-PAYCD()
   /* **********************************************************************/
   /* PROCESS AGENCY PAY CODE*/
   /* **********************************************************************/
  if (SM0AW04.SM-SAGCY-PAY-CD == "PY")
    SM0AM001.SM0AM-PAY-CODE-DESC = "PAY";
  else
    if (SM0AW04.SM-SAGCY-PAY-CD == "NP")
      SM0AM001.SM0AM-PAY-CODE-DESC = "NO PAY";
    else
      SM0AM001.SM0AM-PAY-CODE-DESC = "UNKNOWN";
      if (SM0AW-DISP-ERR-FL == "Y")
        if (SM0AW-PROC-TYP-IND == "A" /* if adding agency*/
         || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
          SM0AW-ERR-FL = "Y";
          converseLib.validationFailed(0019); /* pay code must be NP or PY*/
          SM0AM001.SM0AM-PAY-CODE-DESC = " ";
          set SM0AM001.SM-SAGCY-PAY-CD cursor, bold;
        end
      end
    end
  end


end // end SM0AS-EDIT-PAYCD

// Edit Agency phone number
Function SM0AS-EDIT-PHONE()
   /* **********************************************************************/
   /* Edit Agency phone number*/
   /* **********************************************************************/

   /* Set up char to num conversion parms*/

  SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
  SMWREC.SMW-NUM-CHK-PAD = "0";

  if (SM0AW04.SM0AW-XXXPHNN != " ") /* phone suffix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 4;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.SM0AW-XXXPHNN;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0028); /* phone number must be numeric*/
      set SM0AM001.SM0AM-XXXPHNN cursor, bold;
    else
      SM0AW04.SM0AW-XXXPHNN = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.SM0AM-XXXPHNN = SM0AW04.SM0AW-XXXPHNN;
    end
  else
    if (SM0AW04.SM0AW-XXXPHNA != " " /* phone area code is filled*/
     || SM0AW04.SM0AW-XXXPHNP != " ") /* phone prefix is filled*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0029); /* phone number must be filled*/
      set SM0AM001.SM0AM-XXXPHNN cursor, bold;
    end
  end

  if (SM0AW04.SM0AW-XXXPHNP != " ") /* phone prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.SM0AW-XXXPHNP;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0028); /* phone number must be numeric*/
      set SM0AM001.SM0AM-XXXPHNP cursor, bold;
    else
      SM0AW04.SM0AW-XXXPHNP = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.SM0AM-XXXPHNP = SM0AW04.SM0AW-XXXPHNP;
    end
  else
    if (SM0AW04.SM0AW-XXXPHNA != " " /* phone area code is filled*/
     || SM0AW04.SM0AW-XXXPHNN != " ") /* phone suffix is filled*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0029); /* phone number must be filled*/
      set SM0AM001.SM0AM-XXXPHNP cursor, bold;
    end
  end

  if (SM0AW04.SM0AW-XXXPHNA != " ") /* phone prefix is filled*/
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.SM0AW-XXXPHNA;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0028); /* phone number must be numeric*/
      set SM0AM001.SM0AM-XXXPHNA cursor, bold;
    else
      SM0AW04.SM0AW-XXXPHNA = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.SM0AM-XXXPHNA = SM0AW04.SM0AW-XXXPHNA;
    end
  else
    if (SM0AW04.SM0AW-XXXPHNP != " " /* phone prefix is filled*/
     || SM0AW04.SM0AW-XXXPHNN != " ") /* phone suffix is filled*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0029); /* phone number must be filled*/
      set SM0AM001.SM0AM-XXXPHNA cursor, bold;
    end
  end


end // end SM0AS-EDIT-PHONE

// Edit Agency rebooking account
Function SM0AS-EDIT-RBK-ACT()
   /* **********************************************************************/
   /* PROCESS RE-BOOKING ACCOUNT*/
   /* **********************************************************************/
  set KUCREC empty;
  KUCREC.KUCCOID = SM0AW04.CU-CO-ID;

  SM0AS-FIND-VCMPNY(); /* read company row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    SM0AM001.CU-CO-NM = KUCREC.KUCCONM;
  else /* record not found*/
    SM0AM001.CU-CO-NM = "UNKNOWN";
    if (SM0AW-DISP-ERR-FL == "Y" /* if validating*/
     && SM0AW05.CU-CO-ID == 0)   /* not previously filled*/
      if (SM0AW-PROC-TYP-IND == "A" /* if adding an agency record*/
       || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
        SM0AW-ERR-FL = "Y";
        converseLib.validationFailed(0016); /* Invalid re-booking acct*/
        SM0AM001.CU-CO-NM = " ";
        set SM0AM001.SM0AM-CU-CO-ID cursor, bold;
      end
    end
  end


end // end SM0AS-EDIT-RBK-ACT

// Edit Agency cost center
Function SM0AS-EDIT-RSP-CTR()
   /* **********************************************************************/
   /* PROCESS AGENCY COST CENTER*/
   /* **********************************************************************/
   /* not required if agency is not nike owned*/
   /* **********************************************************************/
  if (SM0AW04.GL-RSP-CTR-ID == " "
   && SM0AW04.GL-ENTITY-ID == " "
   && SM0AW04.XSS-SAGCY-ASSN-TYP != "NO") /* not nike owned*/
    return;
  end
   /* **********************************************************************/
   /* must not be assigned to another agency*/
   /* **********************************************************************/
  /* SET VAGYED01 EMPTY;*/
  /* MOVE SM0AW04.GL-RSP-CTR-ID TO VAGYED01.GL-RSP-CTR-ID;*/
  /* MOVE SM0AW04.GL-ENTITY-ID TO VAGYED01.GL-ENTITY-ID;*/

  /* SM0AS-FIND1-VAGYED;                   /* Call IO0680 read cost ctr*/

  /* IF SQLCA.SQLCODE EQ 0;                  /* record found*/
     /* previously assigned -- check if assigned to same agency*/
  /* IF SM0AW03.SM-SAGCY-ID EQ VAGYED01.SM-SAGCY-ID;*/
       /* assigned to current agency -- okay*/
  /* ELSE;*/
       /* assigned to another agency -- error*/
  /* MOVE 'Y' TO SM0AW-ERR-FL;*/
  /* MOVE 0071 TO EZEMNO;          /* Already assigned to another agency*/
  /* SET SM0AM001.GL-RSP-CTR-ID BRIGHT;*/
  /* SET SM0AM001.GL-ENTITY-ID CURSOR,BRIGHT;*/
  /* EZERTN;*/
  /* END;*/
  /* ELSE;                                   /* record not found*/
     /* not previously assigned -- okay*/
  /* END;*/
   /* **********************************************************************/
   /* responsibility center id must not be blanks and must be a non-zero*/
   /* numeric field*/
   /* **********************************************************************/
  if (SM0AW04.GL-RSP-CTR-ID == " ")
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0057); /* Enter responsibility center*/
    set SM0AM001.GL-RSP-CTR-ID cursor, bold;
  else
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = "0";
    SMWREC.SMW-NUM-CHK-LEN = 4;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.GL-RSP-CTR-ID;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y"
     || SMWREC.SMW-NUM-CHK-WORD == "000000000")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0076); /* cost center must be numeric*/
      set SM0AM001.GL-RSP-CTR-ID cursor, bold;
    else
      SM0AW04.GL-RSP-CTR-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.GL-RSP-CTR-ID = SM0AW04.GL-RSP-CTR-ID;
    end
  end
   /* **********************************************************************/
   /* entity id must not be blanks and must be a non-zero numeric field*/
   /* **********************************************************************/
  if (SM0AW04.GL-ENTITY-ID == " ")
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0057); /* Enter responsibility center*/
    set SM0AM001.GL-ENTITY-ID cursor, bold;
  else
    SMWREC.SMW-NUM-CHK-FUNC = "CHRTONUM";
    SMWREC.SMW-NUM-CHK-PAD = "0";
    SMWREC.SMW-NUM-CHK-LEN = 3;
    SMWREC.SMW-NUM-CHK-WORD = SM0AW04.GL-ENTITY-ID;
    XSSMS-NUM-CHK();
    if (SMW-NUM-CHK-ERR == "Y"
     || SMWREC.SMW-NUM-CHK-WORD == "000000000")
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0076); /* cost center must be numeric*/
      set SM0AM001.GL-ENTITY-ID cursor, bold;
    else
      SM0AW04.GL-ENTITY-ID = SMWREC.SMW-NUM-CHK-WORD;
      SM0AM001.GL-ENTITY-ID = SM0AW04.GL-ENTITY-ID;
    end
  end


end // end SM0AS-EDIT-RSP-CTR

// Edit Agency status code
Function SM0AS-EDIT-STATUS()
   /* **********************************************************************/
   /* PROCESS AGENCY STATUS INDICATOR*/
   /* This process gets the description for the status code on the map.*/
   /* If the userid cannot change this code on the map, skip any error*/
   /* messages put out during edit mode.*/
   /* **********************************************************************/
  if (SM0AW04.SM-SAGCY-STAT == "A")
    SM0AM001.SM0AM-SAGCY-STAT-DESC = "ACTIVE";
  else
    if (SM0AW04.SM-SAGCY-STAT == "I")
      SM0AM001.SM0AM-SAGCY-STAT-DESC = "INACTIVE";
      if (SM0AW-DISP-ERR-FL == "Y")
        if (SM0AW-PROC-TYP-IND == "A") /* adding a record*/
          SM0AW-ERR-FL = "Y";
          converseLib.validationFailed(0018); /* Status must be A when adding*/
          set SM0AM001.SM-SAGCY-STAT cursor, bold;
        else /* updating a record*/
          if (COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
            SM5REC.SM1AGYID = SM0AW02.SM-SAGCY-ID;
            SM0AS-OPEN-VRAGCY(); /* Open ragcy cursor*/
            SM0AS-SCAN-VRAGCY(); /* Scan first ragcy row*/
            SM0AS-CLOS-VRAGCY(); /* Close ragcy cursor*/
            if (SM5REC.XXXSTAT == "A")
              SM0AW-ERR-FL = "Y";
              converseLib.validationFailed(0093); /* cannot change - active reps*/
              set SM0AM001.SM-SAGCY-STAT cursor, bold;
            end
          end
        end
      end
    else /* status code is not A not I*/
      SM0AM001.SM0AM-SAGCY-STAT-DESC = "UNKNOWN";
      if (SM0AW-DISP-ERR-FL == "Y") /* if validating code*/
        if (SM0AW-PROC-TYP-IND == "A") /* if adding an agency record*/
          SM0AW-ERR-FL = "Y";
          converseLib.validationFailed(0018); /* Status must be A when adding*/
          SM0AM001.SM0AM-SAGCY-STAT-DESC = " ";
          set SM0AM001.SM-SAGCY-STAT cursor, bold;
        else /* if changing or querying*/
          if (COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
            SM0AW-ERR-FL = "Y";
            converseLib.validationFailed(0017); /* Status must be A or I*/
            SM0AM001.SM0AM-SAGCY-STAT-DESC = " ";
            set SM0AM001.SM-SAGCY-STAT cursor, bold;
          end
        end
      end
    end
  end


end // end SM0AS-EDIT-STATUS

// Edit sales office ID
Function SM0AS-EDIT-XSO-ID()
   /* **********************************************************************/
   /* proces sales office id*/
   /* **********************************************************************/
  if (SM0AW04.XSO-SLS-OFC-ID in XSOTBL.XSOCD
   && XSOTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    SM0AM001.XSO-SLS-OFC-NM-SHT = XSOTBL.XSOSNM[sysVar.arrayIndex];
  else
    SM0AM001.XSO-SLS-OFC-NM-SHT = "UNKNOWN";
    if (SM0AW-DISP-ERR-FL == "Y")
      if (SM0AW-PROC-TYP-IND == "A" /* if adding agency*/
       || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
        SM0AW-ERR-FL = "Y";
        converseLib.validationFailed(0092); /* invalid sales group cd*/
        SM0AM001.XSO-SLS-OFC-NM-SHT = " ";
        set SM0AM001.XSO-SLS-OFC-ID cursor, bold;
      end
    end
  end


end // end SM0AS-EDIT-XSO-ID

// Edit Agency association type
Function SM0AS-EDIT-XSSCD()
   /* **********************************************************************/
   /* PROCESS ASSOCIATION TYPE*/
   /* **********************************************************************/
  if (SM0AW04.XSS-SAGCY-ASSN-TYP in XSSTBL.XSSCD
   && XSSTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    SM0AM001.XSS-SAGCY-TYP-DESC = XSSTBL.XSSDESC[sysVar.arrayIndex];
  else
    SM0AM001.XSS-SAGCY-TYP-DESC = "UNKNOWN";
    if (SM0AW-DISP-ERR-FL == "Y")
      if (SM0AW-PROC-TYP-IND == "A" /* if adding agency*/
       || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
        SM0AW-ERR-FL = "Y";
        converseLib.validationFailed(0021); /* invalid assc type code*/
        SM0AM001.XSS-SAGCY-TYP-DESC = " ";
        set SM0AM001.XSS-SAGCY-ASSN-TYP cursor, bold;
      end
    end
  end


end // end SM0AS-EDIT-XSSCD

// Edit Agency sales group code
Function SM0AS-EDIT-YGRCD()
   /* **********************************************************************/
   /* PROCESS SALES GROUP CODE*/
   /* **********************************************************************/
  if (SM0AW04.YGR-SLS-GRP-CD in YGRTBL.YGRCD
   && YGRTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    SM0AM001.YGR-SLS-GRP-DESC = YGRTBL.YGRDESC[sysVar.arrayIndex];
  else
    SM0AM001.YGR-SLS-GRP-DESC = "UNKNOWN";
    if (SM0AW-DISP-ERR-FL == "Y")
      if (SM0AW-PROC-TYP-IND == "A" /* if adding agency*/
       || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
        SM0AW-ERR-FL = "Y";
        converseLib.validationFailed(0020); /* invalid sales group cd*/
        SM0AM001.YGR-SLS-GRP-DESC = " ";
        set SM0AM001.YGR-SLS-GRP-CD cursor, bold;
      end
    end
  end


end // end SM0AS-EDIT-YGRCD

// Call IO0240 read company row
Function SM0AS-FIND-VCMPNY()
   /* **********************************************************************/
   /* SM0AS-FIND-VCMPNY*/
   /* This routine calls IO0240 to read a unique customer company id.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0240"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-FIND-VCMPNY

// Call IO0050 to read vsagcy01
Function SM0AS-FIND-VSAGCY()
   /* **********************************************************************/
   /* SM0AS-FIND-VSAGCY*/
   /* This routine calls IO0050 to read a unique agency record.*/
   /* If found, the adjustment found fl is set to 'Y' else, 'N'.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    SM0AW-VSAGCY01-FOUND-FL = "Y";
  else
    SM0AW-VSAGCY01-FOUND-FL = "N";
    if (SQLCA.VAGen_SQLCODE != 100) /* DB2 error*/
      SM0AW-ERR-FL = "Y";
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0050"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0AS-FIND-VSAGCY

// Call IO0680 to read vagyed01
Function SM0AS-FIND2-VAGYED()
   /* **********************************************************************/
   /* SM0AS-FIND2-VAGYED*/
   /* This routine calls IO0680 to read a unique cost center row using*/
   /* the agency id as key.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0680" ("SA", SQLCA, VAGYED01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VAGYED01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "SA      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0680"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-FIND2-VAGYED

// Get dtl desc / Edit dtl codes
Function SM0AS-GET-DTL-DESC()
   /* **********************************************************************/
   /* Get SM0AM001 detail descriptions*/
   /* This routine gets the descriptions for the agency data fields.*/
   /* This also doubles up as the edit routine for the agency details*/
   /* if the SM0AW-DISP-ERR-FL is set to 'Y'.*/
   /* NOTE: This routine picks up the key fields from CURR-DTL for*/
   /* entered fields and from SM0AM001 for output only fields.*/
   /* **********************************************************************/
   /* PROCESS CONTRACT EXPIRATION DATE*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y")
    if (SM0AW-PROC-TYP-IND == "A" /* if adding an agency record*/
     || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
      SM0AS-EDIT-CTDT(); /* edit agency contract exp dt*/
    end
  end
   /* **********************************************************************/
   /* PROCESS CONTRACT EFFECTIVE DATE*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y")
    if (SM0AW-PROC-TYP-IND == "A" /* if adding an agency record*/
     || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
      SM0AS-EDIT-CEDT(); /* edit agency contract eff dt*/
    end
  end
   /* **********************************************************************/
   /* PROCESS RE-BOOKING ACCOUNT*/
   /* **********************************************************************/
  if (SM0AW04.CU-CO-ID == 0) /* not entered*/
    SM0AM001.CU-CO-NM = " ";
  else /* re-booking account entered*/
    SM0AS-EDIT-RBK-ACT(); /* edit agency re-booking acct*/
  end
   /* **********************************************************************/
   /* PROCESS SALES OFFICE ID*/
   /* **********************************************************************/
  SM0AS-EDIT-XSO-ID(); /* edit sales office*/
   /* **********************************************************************/
   /* PROCESS AGENCY STATUS INDICATOR*/
   /* **********************************************************************/
  SM0AS-EDIT-STATUS(); /* edit agency status*/
   /* **********************************************************************/
   /* PROCESS SALES GROUP CODE*/
   /* **********************************************************************/
  SM0AS-EDIT-YGRCD(); /* edit sales group code*/
   /* **********************************************************************/
   /* PROCESS AGENCY PAY CODE*/
   /* **********************************************************************/
  SM0AS-EDIT-PAYCD(); /* edit agency pay code*/
   /* **********************************************************************/
   /* PROCESS AGENCY COST CENTER*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y")
    if (SM0AW-PROC-TYP-IND == "A" /* if adding an agency record*/
     || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
      SM0AS-EDIT-RSP-CTR(); /* edit cost center*/
    end
  end
   /* **********************************************************************/
   /* PROCESS ASSOCIATION TYPE*/
   /* **********************************************************************/
  SM0AS-EDIT-XSSCD(); /* edit agency association type*/
   /* **********************************************************************/
   /* PROCESS ZIP CODE*/
   /* **********************************************************************/


     /* zip code edit changed to required to be entered only for*/
     /* Canadian project    9/95*/

  if (SM0AW-DISP-ERR-FL == "Y")
    if (SM0AW-PROC-TYP-IND == "A" /* if adding an agency record*/
     || COMMAREA.CACLVL[1] == "Y") /* userid has special chg auth*/
      if (SM0AM001.XXX-ZIP == " ") /* edit zip code*/
        SM0AW-ERR-FL = "Y";
        converseLib.validationFailed(0022); /* invalid postal code*/
        set SM0AM001.XXX-ZIP cursor, bold;
      end
    end
  end
   /* **********************************************************************/
   /* PROCESS STATE CODE*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y")
    if (SM0AW04.XST-ST-CD in XSTTBL.XSTCD
     && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    else
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0023); /* invalid state code*/
      set SM0AM001.XST-ST-CD cursor, bold;
    end
  end
   /* **********************************************************************/
   /* PROCESS CITY*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y"
   && SM0AW04.XXX-CITY == " ")
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0024); /* city must be present*/
    set SM0AM001.XXX-CITY cursor, bold;
  end
   /* **********************************************************************/
   /* ADDRESS LINE 1*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y"
   && SM0AW04.XXXADDR1 == " ")
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0025); /* address line required*/
    set SM0AM001.XXXADDR1 cursor, bold;
  end
   /* **********************************************************************/
   /* PROCESS FAX NBR*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y")
    SM0AS-EDIT-FAX(); /* edit fax number*/
  end
   /* **********************************************************************/
   /* PROCESS PHONE NBR*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y")
    SM0AS-EDIT-PHONE(); /* edit telephone number*/
  end
   /* **********************************************************************/
   /* PROCESS AGENCY NAME*/
   /* **********************************************************************/
  if (SM0AW-DISP-ERR-FL == "Y"
   && SM0AW04.SM-SAGCY-NM == " ")
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0030); /* agency name required*/
    set SM0AM001.SM-SAGCY-NM cursor, bold;
  end


end // end SM0AS-GET-DTL-DESC

// Get date and time for updates
Function SM0AS-GET-TM-STAMP()
   /* **********************************************************************/
   /* Get current date and time*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "GETDATE";

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SM0AW01.SM0AW-CURR-CCYYMMDD = TA2REC.TA2GRGGN;
    SM0AW01.SM0AW-CURR-HHMMSS = TA2REC.TA2TIMEN;
    SM0AW01.SM0AW-CURR-HHMM = TA2REC.TA2TIMHM;
  else
    SM0AW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET-DATE FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GET DATE";
    TA1REC.TA1MAP = "SM0AM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    XSPF4(); /* return to goal*/
    exit program;
  end

end // end SM0AS-GET-TM-STAMP

// Initialize screen fields
Function SM0AS-INIT-SCRN()
  set SM0AW02 empty; /* initialize current map header record*/
  set SM0AW03 empty; /* initialize previous map header record*/
  set SM0AW04 empty; /* initialize map data*/
  set SM0AW05 empty; /* initialize map data*/

  set SM0AM001 initial; /* init map*/

  SM0AS-RESET-MAP(); /* reset map attributes*/

end // end SM0AS-INIT-SCRN

// Initialize
Function SM0AS-INITIALIZE()
  set SMWREC empty; /* subsystem record*/
  set SM0AW01 empty; /* sm0a workarea*/
  set SM0AW02 empty; /* sm0a curr-hdr*/
  set SM0AW03 empty; /* sm0a prev-hdr*/
  set SM0AW04 empty; /* sm0a curr-dtl*/
  set SM0AW05 empty; /* sm0a prev-dtl*/
  set SM0AW06 empty; /* sm0a literal area*/

  SM0AW01.SM0AW-VSAGCY01-LENGTH = 350; /* vsagcy01 record length*/
  SM0AW01.SM0AW-VAGYED01-LENGTH = 023; /* vagyed01 record length*/
  sysVar.errorCode = "00000000";
  converseVar.commitOnConverse = 1; /* commit on converse*/

  SM0AS-INIT-SCRN(); /* initialise screen fields*/

  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* from same system*/
    SMWREC.SMW-SUBSYSTEM-RECORD = COMMAREA.CAUSERA;
  end

  /* ***********************************************************************/
  /* * Check to see if we are being fastpathed into. if so, load the      **/
  /* * agency id to the map and current header record.                    **/
  /* ***********************************************************************/

  if (COMMAREA.CAITEM != " ")
    SM0AM001.SM-SAGCY-ID = COMMAREA.CAITEM; /* move to map*/
    SM0AW02.SM-SAGCY-ID = SM0AM001.SM-SAGCY-ID; /* curr map hdr rec*/
    SM0AS-NEW-AGENCY();
  else

  /* ***********************************************************************/
  /* * Check to see if we are being PF keyed into. if so, load the        **/
  /* * rep id    to the map and current header record.                    **/
  /* ***********************************************************************/

    if (SMWREC.SM-SAGCY-ID != " ")
      SM0AM001.SM-SAGCY-ID = SMWREC.SM-SAGCY-ID; /* move to map*/
      SM0AW02.SM-SAGCY-ID = SMWREC.SM-SAGCY-ID; /* curr map hdr rec*/
      SM0AS-NEW-AGENCY();
    end

  end

end // end SM0AS-INITIALIZE

// Load map for ADD
Function SM0AS-LD-MAP-ADD()
   /* **********************************************************************/
   /* Set SM0AM001 and load for add*/
   /* **********************************************************************/

  SM0AW-DISP-ERR-FL = "Y"; /* highlight errors if found*/
  SM0AW-PROC-TYP-IND = "A"; /* process type is add adjusment*/
  SM0AM001.SM0AM-SUBTITLE = "        SALES AGENCY ADD        ";
                                          /* change subtitle message*/

   /* if the previous screen was blanks, then accept the just entered*/
   /* screen detail.  Otherwise, clear the detail area and prompt for*/
   /* new detail information.*/

  if (SM0AW03.SM-SAGCY-ID == " "
   && SM0AW05.SM0AW-PREV-DTL == SM0AW06.SM0AW-INIT-DTL)

    SM0AW03.SM0AW-PREV-HDR = SM0AW02.SM0AW-CURR-HDR; /* save entered Header key*/

    SM0AS-PROC-DETAIL(); /* Process the agency detail*/

  else

    SM0AW03.SM0AW-PREV-HDR = SM0AW02.SM0AW-CURR-HDR; /* save entered Header key*/

    set SM0AW05 empty; /* initialize PREV-DTL*/
    SM0AS-PDTL-TO-MAP(); /* initialize SM0AM001 dtl*/
    SM0AW04.SM0AW-CURR-DTL = SM0AW05.SM0AW-PREV-DTL; /* initialize CURR-DTL*/
    SM0AW04.SM-SAGCY-CONT-EDT = SM0AW05.SM-SAGCY-CONT-EDT;
    SM0AW04.SM-SAGCY-CONT-TDT = SM0AW05.SM-SAGCY-CONT-TDT;
    SM0AS-CLR-DTL-DESC(); /* clear SM0AM001 detail desc*/
    SM0AS-RESET-MAP(); /* reset SM0AM001 attributes*/
  /* MOVE 0030 TO EZEMNO;                /* agency name must be entered*/
  /* MOVE 'Y' TO SM0AW-ERR-FL;*/
  /* SET SM0AM001.SM-SAGCY-NM CURSOR;*/
    SM0AS-PROC-DETAIL(); /* Process the agency detail*/

  end

end // end SM0AS-LD-MAP-ADD

// Load map for UPDATE/INQUIRY
Function SM0AS-LD-MAP-CHG()
   /* **********************************************************************/
   /* Set SM0AM001 and load for inquiry or update*/
   /* **********************************************************************/

  SM0AW-DISP-ERR-FL = "N"; /* do not highlight errors*/

  if (COMMAREA.CACHGFL == "Y" /* has change authority*/
   || COMMAREA.CACLVL[1] == "Y")
    SM0AW-PROC-TYP-IND = "U";
    SM0AM001.SM0AM-SUBTITLE = "    SALES AGENCY MAINTENANCE    ";
  else
    SM0AW-PROC-TYP-IND = "I";
  end

  SM0AW03.SM0AW-PREV-HDR = SM0AW02.SM0AW-CURR-HDR; /* save entered Header key*/
  SM0AS-AGCY-TO-PDTL(); /* save VSAGCY01 info to prev dtl*/
  SM0AS-PDTL-TO-MAP(); /* move save adj info to SM0AM001*/
  SM0AW04.SM0AW-CURR-DTL = SM0AW05.SM0AW-PREV-DTL; /* move saved dtl to curr dtl*/
  SM0AW04.SM-SAGCY-CONT-EDT = SM0AW05.SM-SAGCY-CONT-EDT;
  SM0AW04.SM-SAGCY-CONT-TDT = SM0AW05.SM-SAGCY-CONT-TDT;

  SM0AS-GET-DTL-DESC(); /* get sm0aM001 detail desc*/

  SM0AS-RESET-MAP(); /* reset map based on new data*/

end // end SM0AS-LD-MAP-CHG

// Move SM0AM001 to CURR-DTL
Function SM0AS-MAP-TO-CDTL()
   /* **********************************************************************/
   /* move SM0AM001 to CURR-DTL*/
   /* **********************************************************************/

  SM0AW04.SM-SAGCY-NM = SM0AM001.SM-SAGCY-NM;
  SM0AW04.XXXADDR1 = SM0AM001.XXXADDR1;
  SM0AW04.XXXADDR2 = SM0AM001.XXXADDR2;
  SM0AW04.XXX-CITY = SM0AM001.XXX-CITY;
  SM0AW04.XST-ST-CD = SM0AM001.XST-ST-CD;

   /* zip changed to one field - Canadian project 9/95*/

  SM0AW04.XXX-ZIP = SM0AM001.XXX-ZIP;

  SM0AW04.SM0AW-XXXPHNA = SM0AM001.SM0AM-XXXPHNA;
  SM0AW04.SM0AW-XXXPHNP = SM0AM001.SM0AM-XXXPHNP;
  SM0AW04.SM0AW-XXXPHNN = SM0AM001.SM0AM-XXXPHNN;

  SM0AW04.SM0AW-FAX-AREA = SM0AM001.SM0AM-FAX-AREA;
  SM0AW04.SM0AW-FAX-PRE = SM0AM001.SM0AM-FAX-PRE;
  SM0AW04.SM0AW-FAX-NBR = SM0AM001.SM0AM-FAX-NBR;

  SM0AW04.SM-SAGCY-PAY-CD = SM0AM001.SM-SAGCY-PAY-CD;
  SM0AW04.CU-CO-ID = SM0AM001.SM0AM-CU-CO-ID;
  SM0AW04.YGR-SLS-GRP-CD = SM0AM001.YGR-SLS-GRP-CD;
  SM0AW04.XSS-SAGCY-ASSN-TYP = SM0AM001.XSS-SAGCY-ASSN-TYP;
  SM0AW04.SM-SAGCY-STAT = SM0AM001.SM-SAGCY-STAT;
  SM0AW04.XSO-SLS-OFC-ID = SM0AM001.XSO-SLS-OFC-ID;

  SM0AW04.SM0AW-SM-SAGCY-CONT-EDT = SM0AM001.SM0AM-SM-SAGCY-CONT-EDT;
  SM0AW04.SM0AW-SM-SAGCY-CONT-TDT = SM0AM001.SM0AM-SM-SAGCY-CONT-TDT;

  SM0AW04.GL-RSP-CTR-ID = SM0AM001.GL-RSP-CTR-ID;
  SM0AW04.GL-ENTITY-ID = SM0AM001.GL-ENTITY-ID;


end // end SM0AS-MAP-TO-CDTL

// Move SM0AM001 to CURR-HDR
Function SM0AS-MAP-TO-CHDR()
   /* **********************************************************************/
   /* move SM0AM001 to CURR-HDR*/
   /* **********************************************************************/

  SM0AW02.SM-SAGCY-ID = SM0AM001.SM-SAGCY-ID;


end // end SM0AS-MAP-TO-CHDR

// Get new agency record
Function SM0AS-NEW-AGENCY()
   /* **********************************************************************/
   /* Get new agency record*/
   /* This routine reads the vsagcy01 table.  If the agency was not*/
   /* found, then assume ADD process and prep the map for add if userid*/
   /* has add authority.   If found, then load the data on the map and*/
   /* prompt for changes if userid has change authority.*/
   /* **********************************************************************/

  SM1REC.SM1AGYID = SM0AW02.SM-SAGCY-ID;

  SM0AS-FIND-VSAGCY(); /* call io0050 to read the agency table*/

  if (SM0AW-ERR-FL == "Y") /* errors found*/
    return;
  end

  if (SM0AW-VSAGCY01-FOUND-FL == "N") /* agency rec was not found*/
    if (COMMAREA.CAADDFL == "N") /* user id has no add authority*/
      set SM0AM001.SM-SAGCY-ID bold, cursor;
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(031); /* agency id not found*/
    else /* user id has add authority*/
      SM0AS-LD-MAP-ADD(); /* load SM0AM001 for add*/
    end
  else /* agency rec was found*/
    SM0AS-LD-MAP-CHG(); /* load SM0AM001 for inquiry or change*/
  end

end // end SM0AS-NEW-AGENCY

Function SM0AS-OPEN-VRAGCY()
   /* **********************************************************************/
   /* SM0LA-OPEN-VRAGCY*/
   /* This routine calls IO0160 to open a Rep-Agency assignment cursor*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("S2", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S2      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-OPEN-VRAGCY

// Move PREV-DTL to SM0AM001
Function SM0AS-PDTL-TO-MAP()
   /* **********************************************************************/
   /* move PREV-DTL to SM0AM001*/
   /* **********************************************************************/

  SM0AM001.SM-SAGCY-NM = SM0AW05.SM-SAGCY-NM;
  SM0AM001.XXXADDR1 = SM0AW05.XXXADDR1;
  SM0AM001.XXXADDR2 = SM0AW05.XXXADDR2;
  SM0AM001.XXX-CITY = SM0AW05.XXX-CITY;
  SM0AM001.XST-ST-CD = SM0AW05.XST-ST-CD;


    /* zip changed to one field for Canadian project 9/95*/

  SM0AM001.XXX-ZIP = SM0AW05.XXX-ZIP;

  SM0AM001.SM0AM-XXXPHNA = SM0AW05.SM0AW-XXXPHNA;
  SM0AM001.SM0AM-XXXPHNP = SM0AW05.SM0AW-XXXPHNP;
  SM0AM001.SM0AM-XXXPHNN = SM0AW05.SM0AW-XXXPHNN;

  SM0AM001.SM0AM-FAX-AREA = SM0AW05.SM0AW-FAX-AREA;
  SM0AM001.SM0AM-FAX-PRE = SM0AW05.SM0AW-FAX-PRE;
  SM0AM001.SM0AM-FAX-NBR = SM0AW05.SM0AW-FAX-NBR;

  SM0AM001.SM-SAGCY-PAY-CD = SM0AW05.SM-SAGCY-PAY-CD;
  SM0AM001.SM0AM-CU-CO-ID = SM0AW05.CU-CO-ID;
  SM0AM001.YGR-SLS-GRP-CD = SM0AW05.YGR-SLS-GRP-CD;
  SM0AM001.XSS-SAGCY-ASSN-TYP = SM0AW05.XSS-SAGCY-ASSN-TYP;
  SM0AM001.SM-SAGCY-STAT = SM0AW05.SM-SAGCY-STAT;
  SM0AM001.XSO-SLS-OFC-ID = SM0AW05.XSO-SLS-OFC-ID;

  SM0AM001.SM0AM-SM-SAGCY-CONT-EDT = SM0AW05.SM0AW-SM-SAGCY-CONT-EDT;
  SM0AM001.SM0AM-SM-SAGCY-CONT-TDT = SM0AW05.SM0AW-SM-SAGCY-CONT-TDT;

  SM0AM001.GL-RSP-CTR-ID = SM0AW05.GL-RSP-CTR-ID;
  SM0AM001.GL-ENTITY-ID = SM0AW05.GL-ENTITY-ID;

   /* **********************************************************************/
   /* move saved read-only fields in PREV-DTL to SM0AM001*/
   /* **********************************************************************/

  SM0AM001.SM0AM-ZZ-SDT = SM0AW05.ZZ-SDT;
  SM0AM001.SM0AM-ZZ-CHNG-DT = SM0AW05.ZZ-CHNG-DT;

end // end SM0AS-PDTL-TO-MAP

// Pop-up for xsocd
Function SM0AS-POPUP-XSO()
   /* *******************************************************************/
   /* popup xsocd sales office code*/
   /* *******************************************************************/

  XPXX001(); /* initialize*/

  SM0AW-PROMPT-ENTERED-FL = "Y"; /* pop-up exists for field*/
  set SM0AM001.XSO-SLS-OFC-ID cursor;
  XX0XW02.XX0XWHDR = "              SALES OFFICE";

  while (XX0XW02.XX0XWEND == "N") /* not end of process*/
    XPXSO01(); /* popup xsocd window*/
  end

  if (XX0XW02.XX0XWPIX > 0 /* selection was made*/
   && SM0AW01.SM0AW-RETURN-PROMPT-FL == "Y") /* return the pop-up code*/
    SM0AM001.XSO-SLS-OFC-ID = XSOTBL.XSOCD[XX0XWPIX];
    SM0AM001.XSO-SLS-OFC-NM-SHT = XSOTBL.XSOSNM[XX0XWPIX];
    converseLib.validationFailed(010); /* press enter again to validate changes*/
  end

end // end SM0AS-POPUP-XSO

// Pop-up for xsscd
Function SM0AS-POPUP-XSS()
   /* *******************************************************************/
   /* popup xsscd agency association code*/
   /* *******************************************************************/

  XPXX001(); /* initialize*/

  SM0AW-PROMPT-ENTERED-FL = "Y"; /* pop-up exists for field*/
  set SM0AM001.XSS-SAGCY-ASSN-TYP cursor;
  XX0XW02.XX0XWHDR = "        AGENCY ASSOCIATION TYPE";

  while (XX0XW02.XX0XWEND == "N") /* not end of process*/
    XPXSS01(); /* popup xsscd window*/
  end

  if (XX0XW02.XX0XWPIX > 0 /* selection was made*/
   && SM0AW01.SM0AW-RETURN-PROMPT-FL == "Y") /* return the pop-up code*/
    SM0AM001.XSS-SAGCY-ASSN-TYP = XSSTBL.XSSCD[XX0XWPIX];
    SM0AM001.XSS-SAGCY-TYP-DESC = XSSTBL.XSSDESC[XX0XWPIX];
    converseLib.validationFailed(010); /* press enter again to validate changes*/
  end

end // end SM0AS-POPUP-XSS

// Pop-up for ygrcd
Function SM0AS-POPUP-YGR()
   /* *******************************************************************/
   /* popup ygrcd sales group code*/
   /* *******************************************************************/

  XPXX001(); /* initialize*/

  SM0AW-PROMPT-ENTERED-FL = "Y"; /* pop-up exists for field*/
  set SM0AM001.YGR-SLS-GRP-CD cursor;
  XX0XW02.XX0XWHDR = "              SALES GROUP";

  while (XX0XW02.XX0XWEND == "N") /* not end of process*/
    XPYGR01(); /* popup ygrcd window*/
  end

  if (XX0XW02.XX0XWPIX > 0 /* selection was made*/
   && SM0AW01.SM0AW-RETURN-PROMPT-FL == "Y") /* return the pop-up code*/
    SM0AM001.YGR-SLS-GRP-CD = YGRTBL.YGRCD[XX0XWPIX];
    SM0AM001.YGR-SLS-GRP-DESC = YGRTBL.YGRDESC[XX0XWPIX];
    converseLib.validationFailed(010); /* press enter again to validate changes*/
  end

end // end SM0AS-POPUP-YGR

// Process agency details
Function SM0AS-PROC-DETAIL()
   /* **********************************************************************/
   /* Process SM0AM001 details*/
   /* **********************************************************************/

  SM0AW-DISP-ERR-FL = "Y"; /* highlight errors if found*/

  SM0AS-GET-DTL-DESC(); /* get SM0AM001 dtl desc w/ edits*/

  if (SM0AW-ERR-FL != "Y") /* no errors found editing detail*/
    if (converseVar.eventKey is pf12) /* edit only*/

      converseLib.validationFailed(0013); /* Press enter again to accept*/

    else /* Enter was pressed*/

      SM0AS-UPD-TBL-PROC(); /* Update tables process*/

    end /* end PF12 or ENTER pressed*/
  end /* end no errors from edit detail*/

end // end SM0AS-PROC-DETAIL

// ENTER key was pressed
Function SM0AS-PROC-ENTER()
   /* **********************************************************************/
   /* Process ENTER*/
   /* **********************************************************************/

  if (SM0AM001.CATOAP != " ") /* Fast path was filled*/
    SM0AS-PROC-FPATH(); /* process fastpath*/
    if (SM0AW-ERR-FL == "Y")
      return;
    end
  else
    if (SM0AM001.CAITEM != " ") /* Fast path item was filled*/
      SM0AM001.CAITEM = " ";
    end
  end


  if (SM0AW02.SM-SAGCY-ID == " ") /* HDR blanks*/

    set SM0AM001 initial;
    set SM0AW03 empty;
    set SM0AW05 empty;
    SM0AS-RESET-MAP();
    set SM0AM001.SM-SAGCY-ID cursor, bold;
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(0032); /* Enter agency id*/
    return;

  end


  if (SM0AW02.SM-SAGCY-ID != SM0AW03.SM-SAGCY-ID) /* HDR changed*/
    SM0AS-NEW-AGENCY(); /* Retrive entered agency*/

  else /* no HDR change*/
    if (SM0AW04.SM0AW-CURR-DTL != SM0AW05.SM0AW-PREV-DTL) /* DTL changed*/
      SM0AS-PROC-DETAIL(); /* Process agency detail info*/

    else /* no DTL change*/
      SM0AS-NEW-AGENCY(); /* Refresh current screen*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0012); /* No changes made*/

    end
  end


end // end SM0AS-PROC-ENTER

// Process fastpath
Function SM0AS-PROC-FPATH()
   /* **********************************************************************/
   /* Process Fast Path for SM0AM001*/
   /* **********************************************************************/

  if (SM0AW02.SM0AW-CURR-HDR 
   != SM0AW03.SM0AW-PREV-HDR /* header key changed*/
   || SM0AW04.SM0AW-CURR-DTL 
   != SM0AW05.SM0AW-PREV-DTL) /* detail changed*/

    set SM0AM001.CATOAP cursor, bold;
    set SM0AM001.CAITEM bold;
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(69); /* cannot fpath changes*/

  else /* nothing on the screen changed*/
    if (converseVar.eventKey is pf12) /* edit only key was pressed*/
      converseLib.validationFailed(0004); /* Can't fastpath w/ pfkey*/
      SM0AW-ERR-FL = "Y";
      set SM0AM001.CATOAP cursor, bold;
      set SM0AM001.CAITEM bold;
    else /* enter was pressed*/
      COMMAREA.CATOAP = SM0AM001.CATOAP; /* move to commarea*/
      COMMAREA.CAITEM = SM0AM001.CAITEM;
      COMMAREA.CAUSERA = " "; /* clear user area*/

      if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* transfer in SM system*/
        SM0AS-SET-CAUSERA(); /* set subsystem rec & causera*/
      end
      XSEXIT(); /* transfer control*/

      SM0AS-NEW-AGENCY(); /* reload agency data*/

      set SM0AM001.CATOAP cursor, bold;
      set SM0AM001.CAITEM bold;
      SM0AW-ERR-FL = "Y";
      SM0AM001.CAMSG = COMMAREA.CAMSG; /* transfer failed*/

    end
  end


end // end SM0AS-PROC-FPATH

// CANCEL key pressed
Function SM0AS-PROC-PA2()
   /* **********************************************************************/
   /* Process CANCEL key*/
   /* **********************************************************************/

  if (SM0AW02.SM0AW-CURR-HDR == SM0AW03.SM0AW-PREV-HDR /* no hdr change*/
   && SM0AW04.SM0AW-CURR-DTL == SM0AW05.SM0AW-PREV-DTL) /* no dtl change*/

    set SM0AM001 initial; /* init map*/
    set SM0AW02 empty; /* init CURR-HDR*/
    set SM0AW03 empty; /* init PREV-HDR*/
    set SM0AW04 empty; /* init CURR-DTL*/
    set SM0AW05 empty; /* init PREV-DTL*/
    SM0AS-RESET-MAP(); /* reset map attibutes*/

  else

    SM0AW02.SM0AW-CURR-HDR = SM0AW03.SM0AW-PREV-HDR; /* reset to old key*/
    set SM0AW04 empty; /* init CURR-DTL*/
    set SM0AW05 empty; /* init PREV-DTL*/
    converseLib.validationFailed(0040); /* Updates cancelled*/
    SM0AS-NEW-AGENCY(); /* refresh agency info from the database*/

  end

end // end SM0AS-PROC-PA2

// Valid PFkey was pressed
Function SM0AS-PROC-PFKEYS()
   /* **********************************************************************/
   /* Process valid PFkey was pressed*/
   /* PF1, PF3, PF4, PF5, or PF13*/
   /* **********************************************************************/

  if (SM0AW02.SM0AW-CURR-HDR == SM0AW03.SM0AW-PREV-HDR /* no HDR chng*/
   && SM0AW04.SM0AW-CURR-DTL == SM0AW05.SM0AW-PREV-DTL) /* no DTL chng*/
    if (SM0AM001.CATOAP != " ") /* Fast path was filled*/
      converseLib.validationFailed(0004); /* Can't Fastpath & PFkey*/
      SM0AW-ERR-FL = "Y";
      set SM0AM001.CATOAP cursor, bold;
      return;
    else
      if (SM0AM001.CAITEM != " ") /* Fast path item was filled*/
        SM0AM001.CAITEM = " ";
      end
    end
  else /* sm0aM001 changed*/
    if (SM0AW04.SM0AW-CURR-DTL != SM0AW05.SM0AW-PREV-DTL) /* DTL chng*/
      converseLib.validationFailed(0068); /* Can't PFkey w/ changes*/
      SM0AW-ERR-FL = "Y";
      return;
    else /* HDR chng*/
      if (converseVar.eventKey is pf1 /* HELP key is pressed*/
       || converseVar.eventKey is pf3 /* RETURN key is pressed*/
       || converseVar.eventKey is pf4 /* Goal main menu*/
       || converseVar.eventKey is pf20) /* Agency search*/
      else
        converseLib.validationFailed(0068); /* Can't PFkey w/ changes*/
        SM0AW-ERR-FL = "Y";
        return;
      end
    end
  end


  if (converseVar.eventKey is pf1) /* HELP key is pressed*/
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help screen*/
    SM0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0AW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf3) /* RETURN key is pressed*/
    COMMAREA.CATOAP = "SM0H";
    COMMAREA.CAITEM = " ";
    SM0AS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0AW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf4) /* RETURN key is pressed*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to GOAL menu*/
    SM0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0AW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf5) /* Go to SLS MGRS FOR AN AGENCY*/
    COMMAREA.CATOAP = "SM0C";
    COMMAREA.CAITEM = " ";
    SM0AS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0AW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf13) /* Go to SLS REPS FOR AN AGENCY*/
    COMMAREA.CATOAP = "SM0D";
    COMMAREA.CAITEM = " ";
    SM0AS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0AW-ERR-FL = "Y";
  end

  if (converseVar.eventKey is pf20) /* Go to AGENCY ID SEARCH*/
    COMMAREA.CATOAP = "SM0S";
    COMMAREA.CAITEM = " ";
    SM0AS-SET-CAUSERA(); /* set subsystem rec & causera*/
    XSEXIT(); /* transfer module*/
    SM0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    SM0AW-ERR-FL = "Y";
  end


end // end SM0AS-PROC-PFKEYS

// Process popup
Function SM0AS-PROC-POPUP()
   /* ******************************************************************/
   /* * module:    SM0AS-PROC-POPUP*/
   /* * purpose:   pop up window for select fields*/
   /* ******************************************************************/

  SM0AW01.SM0AW-PROMPT-ENTERED-FL = "N"; /* reset chk for prompt*/
  SM0AW01.SM0AW-RETURN-PROMPT-FL = "N"; /* do not retrieve data*/
  if (COMMAREA.CACLVL[1] == "Y")
    SM0AW01.SM0AW-RETURN-PROMPT-FL = "Y"; /* move sel data to map*/
  else
    if (COMMAREA.CAADDFL == "Y"
     && SM0AW05.SM0AW-PREV-DTL == 
    SM0AW06.SM0AW-INIT-DTL) /* adding an agency row - prev dtl is empty*/
      SM0AW01.SM0AW-RETURN-PROMPT-FL = "Y"; /* move sel data to map*/
    end
  end

  if (SM0AM001.XSS-SAGCY-ASSN-TYP is cursor)
    SM0AS-POPUP-XSS();
  end

  if (SM0AW-PROMPT-ENTERED-FL == "N")
    if (SM0AM001.YGR-SLS-GRP-CD is cursor)
      SM0AS-POPUP-YGR();
    end
  end

  if (SM0AW-PROMPT-ENTERED-FL == "N")
    if (SM0AM001.XSO-SLS-OFC-ID is cursor)
      SM0AS-POPUP-XSO();
    end
  end

  converseLib.clearScreen();

  if (SM0AW01.SM0AW-PROMPT-ENTERED-FL == "N")
    SM0AW-ERR-FL = "Y";
    converseLib.validationFailed(050); /* no prompt or help for this field*/
  end


end // end SM0AS-PROC-POPUP

// Reset map attributes
Function SM0AS-RESET-MAP()
  /* ************************************************************************/
  /* Reset map attributes depending on the userid authorization level*/
  /* ************************************************************************/

  /* Reset map items to normal*/

  set SM0AM001.SM-SAGCY-ID cursor, initialAttributes;
  set SM0AM001.SM-SAGCY-NM initialAttributes;
  set SM0AM001.SM0AM-XXXPHNA initialAttributes;
  set SM0AM001.SM0AM-XXXPHNP initialAttributes;
  set SM0AM001.SM0AM-XXXPHNN initialAttributes;
  set SM0AM001.SM0AM-FAX-AREA initialAttributes;
  set SM0AM001.SM0AM-FAX-PRE initialAttributes;
  set SM0AM001.SM0AM-FAX-NBR initialAttributes;
  set SM0AM001.XXXADDR1 initialAttributes;
  set SM0AM001.XXXADDR2 initialAttributes;
  set SM0AM001.XXX-CITY initialAttributes;
  set SM0AM001.XST-ST-CD initialAttributes;
    /* zip changed to one field for Canadian project 9/95*/
  set SM0AM001.XXX-ZIP initialAttributes;
  set SM0AM001.XSS-SAGCY-ASSN-TYP initialAttributes;
  set SM0AM001.GL-ENTITY-ID initialAttributes;
  set SM0AM001.GL-RSP-CTR-ID initialAttributes;
  set SM0AM001.SM-SAGCY-PAY-CD initialAttributes;
  set SM0AM001.YGR-SLS-GRP-CD initialAttributes;
  set SM0AM001.SM-SAGCY-STAT initialAttributes;
  set SM0AM001.XSO-SLS-OFC-ID initialAttributes;
  set SM0AM001.SM0AM-CU-CO-ID initialAttributes;
  set SM0AM001.SM0AM-SM-SAGCY-CONT-EDT initialAttributes;
  set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT initialAttributes;
  set SM0AM001.CATOAP initialAttributes;
  set SM0AM001.CAITEM initialAttributes;
  set SM0AM001.SM0AM-PF12-LIT initialAttributes;

  /* Protect map items depending on access level*/

  if (COMMAREA.CACLVL[1] == "Y") /* userid can mod restricted items*/
     /* leave all map items unprotected.*/
     /* note however, that the re-booking account cannot be*/
     /* modified once (keyed in) assigned to agency record.*/
    if (SM0AW05.CU-CO-ID != 0)
      set SM0AM001.SM0AM-CU-CO-ID skip;
    end
    return;
  end

  if (COMMAREA.CAADDFL == "Y") /* userid allowed to add agency*/
     /* unprotect all if adding. if changing, allow changing phone,*/
     /* fax, name, and address only if allowed.*/
    if (SM0AW05.SM0AW-PREV-DTL == 
    SM0AW06.SM0AW-INIT-DTL) /* adding an agency row -- prev dtl is empty*/
       /* leave all map items unprotected*/
      return;
    end
  end

  if (COMMAREA.CACHGFL == "Y") /* userid allowed to modify name*/
     /* allow changing phone, fax, name and address only.*/
    set SM0AM001.XSS-SAGCY-ASSN-TYP skip;
    set SM0AM001.GL-ENTITY-ID skip;
    set SM0AM001.GL-RSP-CTR-ID skip;
    set SM0AM001.SM-SAGCY-PAY-CD skip;
    set SM0AM001.YGR-SLS-GRP-CD skip;
    set SM0AM001.SM-SAGCY-STAT skip;
    set SM0AM001.XSO-SLS-OFC-ID skip;
    set SM0AM001.SM0AM-CU-CO-ID skip;
    set SM0AM001.SM0AM-SM-SAGCY-CONT-EDT skip;
    set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT skip;
  else /* userid can browse only*/
    set SM0AM001.SM-SAGCY-NM skip;
    set SM0AM001.SM0AM-XXXPHNA skip;
    set SM0AM001.SM0AM-XXXPHNP skip;
    set SM0AM001.SM0AM-XXXPHNN skip;
    set SM0AM001.SM0AM-FAX-AREA skip;
    set SM0AM001.SM0AM-FAX-PRE skip;
    set SM0AM001.SM0AM-FAX-NBR skip;
    set SM0AM001.XXXADDR1 skip;
    set SM0AM001.XXXADDR2 skip;
    set SM0AM001.XXX-CITY skip;
    set SM0AM001.XST-ST-CD skip;
    set SM0AM001.XXX-ZIP skip;
    set SM0AM001.XSS-SAGCY-ASSN-TYP skip;
    set SM0AM001.GL-ENTITY-ID skip;
    set SM0AM001.GL-RSP-CTR-ID skip;
    set SM0AM001.SM-SAGCY-PAY-CD skip;
    set SM0AM001.YGR-SLS-GRP-CD skip;
    set SM0AM001.SM-SAGCY-STAT skip;
    set SM0AM001.XSO-SLS-OFC-ID skip;
    set SM0AM001.SM0AM-CU-CO-ID skip;
    set SM0AM001.SM0AM-SM-SAGCY-CONT-EDT skip;
    set SM0AM001.SM0AM-SM-SAGCY-CONT-TDT skip;
    set SM0AM001.SM0AM-PF12-LIT invisible, skip;
  end

end // end SM0AS-RESET-MAP

Function SM0AS-SCAN-VRAGCY()
   /* **********************************************************************/
   /* SM0AS-SCAN-VRAGCY*/
   /* This routine calls IO0160 to fetch the next Rep-Agency row*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0160" ("N2", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* end of cursor*/
    SM5REC.XXXSTAT = "I";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "N2      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0160"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* pass to goal menu*/
      exit program;
    end
  end

end // end SM0AS-SCAN-VRAGCY

// Setup cost center record
Function SM0AS-SET-AED-DATA()
   /* **********************************************************************/
   /* Setup VAGYED01 fields in the record layout*/
   /* **********************************************************************/

  set VAGYED01 empty;

  VAGYED01.GL-ENTITY-ID = SM0AW04.GL-ENTITY-ID;
  VAGYED01.GL-RSP-CTR-ID = SM0AW04.GL-RSP-CTR-ID;
  VAGYED01.SM-SAGCY-ID = SM0AW03.SM-SAGCY-ID;
  VAGYED01.ZZ-SDT = SM0AW01.SM0AW-CURR-CCYYMMDD;
  VAGYED01.ZZ-CHNG-DT = SM0AW01.SM0AW-CURR-CCYYMMDD;
  VAGYED01.ZZ-CHNG-HHMM = SM0AW01.SM0AW-CURR-HHMM;


end // end SM0AS-SET-AED-DATA

// Move CURR-DTL to VSAGCY01
Function SM0AS-SET-AGY-DATA()
   /* **********************************************************************/
   /* move CURR-DTL to VSAGCY01*/
   /* **********************************************************************/

  SM1REC.SM1AGYNM = SM0AW04.SM-SAGCY-NM;
  SM1REC.XXXADDR1 = SM0AW04.XXXADDR1;
  SM1REC.XXXADDR2 = SM0AW04.XXXADDR2;
  SM1REC.XXXCITY = SM0AW04.XXX-CITY;
  SM1REC.XSTCD = SM0AW04.XST-ST-CD;

   /* zip changed to one field for Canadian project 9/95*/

  SM1REC.XXXZIP = SM0AW04.XXX-ZIP;

  if (SM0AW04.SM0AW-XXXPHNA == " ")
    SM1REC.XXXPHN = "0000000000";
  else
    SM0AW01.SM0AW-PHONE-AREA = SM0AW04.SM0AW-XXXPHNA;
    SM0AW01.SM0AW-PHONE-PRE = SM0AW04.SM0AW-XXXPHNP;
    SM0AW01.SM0AW-PHONE-NBR = SM0AW04.SM0AW-XXXPHNN;
    SM1REC.XXXPHN = SM0AW01.SM0AW-PHONE;
  end

  SM0AW01.SM0AW-FAX-AREA = SM0AW04.SM0AW-FAX-AREA;
  SM0AW01.SM0AW-FAX-PRE = SM0AW04.SM0AW-FAX-PRE;
  SM0AW01.SM0AW-FAX-NBR = SM0AW04.SM0AW-FAX-NBR;
  SM1REC.XXXFAX = SM0AW01.SM0AW-FAX;

  SM1REC.XSSCD = SM0AW04.XSS-SAGCY-ASSN-TYP;
  SM1REC.SM1PAYCD = SM0AW04.SM-SAGCY-PAY-CD;
  SM1REC.YGRCD = SM0AW04.YGR-SLS-GRP-CD;
  SM1REC.SM1STAT = SM0AW04.SM-SAGCY-STAT;
  SM1REC.XSOCD = SM0AW04.XSO-SLS-OFC-ID;
  SM1REC.KUCCOID = SM0AW04.CU-CO-ID;
  SM1REC.SM1CTEDT = SM0AW04.SM-SAGCY-CONT-EDT;
  SM1REC.SM1CTTDT = SM0AW04.SM-SAGCY-CONT-TDT;

   /* **********************************************************************/
   /* modify change date and time (change count is handled by IOMOD)*/
   /* **********************************************************************/

  SM1REC.ZZZCHGDT = SM0AW01.SM0AW-CURR-CCYYMMDD;
  SM1REC.ZZZCHGTM = SM0AW01.SM0AW-CURR-HHMM;

end // end SM0AS-SET-AGY-DATA

// Set initial VSAGCY01 value
Function SM0AS-SET-AGY-REC()
   /* **********************************************************************/
   /* Set initial value of VSAGCY01 for insert*/
   /* **********************************************************************/

  set SM1REC empty;

  SM1REC.SM1AGYID = SM0AW02.SM-SAGCY-ID;
  SM1REC.ZZZSDT = SM0AW01.SM0AW-CURR-CCYYMMDD;


end // end SM0AS-SET-AGY-REC

// Set default SM aud row fields
Function SM0AS-SET-AUD-REC()
   /* **********************************************************************/
   /* Setup common fields in the SM audit record*/
   /* **********************************************************************/

  set VSMAUD01 empty;

  VSMAUD01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSMAUD01.ZZ-SDT = SM0AW01.SM0AW-CURR-CCYYMMDD;
  VSMAUD01.ZZ-SETUP-HHMMSS = SM0AW01.SM0AW-CURR-HHMMSS;

  VSMAUD01.SM-SAGCY-ID = SM0AW02.SM-SAGCY-ID;

end // end SM0AS-SET-AUD-REC

// Set subsystem rec & causera
Function SM0AS-SET-CAUSERA()
  /* ************************************************************************/
  /* This statement group moves the last valid Agency id to the subsystem*/
  /* record so the next application will have a valid key to start with.*/
  /* if the agency id is diffenrent from the one passed to this*/
  /* application, then the rep id in the subsystem record is initialized.*/
  /* The subsystem record is then moved as a group to the causera field*/
  /* of the common data area.*/
  /* ************************************************************************/

  if (SM0AW02.SM-SAGCY-ID != SMWREC.SM-SAGCY-ID)
    SMWREC.SM-SAGCY-ID = SM0AW02.SM-SAGCY-ID;
    SMWREC.SM-SREP-ID = 0;
  end

  COMMAREA.CAUSERA = SMWREC.SMW-SUBSYSTEM-RECORD;

end // end SM0AS-SET-CAUSERA

// Update Agency cost ctr process
Function SM0AS-UPD-AED-PROC()
   /* **********************************************************************/
   /* Update Agency cost center table process*/
   /* Note: cost center is required for all agency if records.*/
   /* **********************************************************************/


   /* **********************************************************************/
   /* retrieve cost center row using Agency id*/
   /* **********************************************************************/

  set VAGYED01 empty;
  VAGYED01.SM-SAGCY-ID = SM0AW03.SM-SAGCY-ID;

  SM0AS-FIND2-VAGYED(); /* Call IO0680 read agency*/

   /* **********************************************************************/
   /* if found, delete and add new cost center for agency.  if not found,*/
   /* insert a new cost center row.*/
   /* **********************************************************************/

  if (SQLCA.VAGen_SQLCODE == 0) /* cost center row found*/
     /* delete cost center assigned to agency and add a new one*/
    SM0AS-CHG-AED-PROC(); /* CHANGE cost center id*/
  else /* cost center row not found*/
     /* add a new cost center row assigned to the agency*/
    if (SM0AW04.GL-RSP-CTR-ID != " " /* cost center not equal*/
     && SM0AW04.GL-ENTITY-ID != " ") /* to spaces*/
      SM0AS-ADD-AED-PROC(); /* ADD cost center id*/
    end
  end


end // end SM0AS-UPD-AED-PROC

// Update Agency table process
Function SM0AS-UPD-AGY-PROC()
   /* **********************************************************************/
   /* Update Agency id table process*/
   /* **********************************************************************/

  SM0AS-SET-AUD-REC(); /* init audit record*/
  VSMAUD01.XXX-TBL-NM = "VSAGCY01"; /* set table nm in the audit rec*/
  VSMAUD01.SM-AUDIT-FILLER-LEN = SM0AW-VSAGCY01-LENGTH;

  if (SM0AW-PROC-TYP-IND == "U") /* update agency row*/

    VSMAUD01.SM-AUDIT-TYP-CD = "C";
    VSMAUD01.SM-BFR-AFT-IND = "B";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM1REC.VSAGCY01-GROUP;
    SM0AS-ADD-VSMAUD(); /* Add VsmAUD01*/

    SM0AS-SET-AGY-DATA(); /* move changed data to VSAGCY01*/
    SM0AS-UPDT-VSAGCY(); /* Update VSAGCY01*/

    if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0073); /* rec was updated by another*/
    end

    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM1REC.VSAGCY01-GROUP;

  else /* add agency row*/

    SM0AS-SET-AGY-REC(); /* set VSAGCY01 to initial value*/
    SM0AS-SET-AGY-DATA(); /* move changed data to VSAGCY01*/
    SM0AS-ADD-VSAGCY(); /* Add VSAGCY01*/

    if (SQLCA.VAGen_SQLCODE == -803) /* record to add exists*/
      SM0AW-ERR-FL = "Y";
      converseLib.validationFailed(0073); /* rec was added by another*/
    end

    VSMAUD01.SM-AUDIT-TYP-CD = "A";
    VSMAUD01.SM-BFR-AFT-IND = "A";
    VSMAUD01.SM-AUDIT-FILLER-TEXT = SM1REC.VSAGCY01-GROUP;

  end


  if (SM0AW-ERR-FL != "Y") /* no DB2 errors*/

    SM0AS-ADD-VSMAUD(); /* Add VSMAUD01*/

  end

end // end SM0AS-UPD-AGY-PROC

// Update tables process
Function SM0AS-UPD-TBL-PROC()
   /* **********************************************************************/
   /* Update tables process*/
   /* **********************************************************************/

  SM0AS-GET-TM-STAMP(); /* get dt & tm stamp for update*/

  if (SM0AW-CURR-SAGCY-DTL != SM0AW-PREV-SAGCY-DTL)
    if (SM0AW-ERR-FL != "Y") /* no errors from date routine*/
      SM0AS-UPD-AGY-PROC(); /* update/add VSAGCY01 process*/
    end
  end

  if (SM0AW-CURR-AGYED-DTL != SM0AW-PREV-AGYED-DTL)
    if (SM0AW-ERR-FL != "Y") /* no errors found while updating*/
      SM0AS-UPD-AED-PROC(); /* update VAGYED01 process*/
    end
  end

  if (SM0AW-ERR-FL != "Y") /* no errors found while updating*/
    SM0AS-LD-MAP-CHG(); /* Reload map*/
    converseLib.validationFailed(0074); /* Updates accepted*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* Rollback any updates done*/
  end

end // end SM0AS-UPD-TBL-PROC

// Call IO0050 to update vsagcy01
Function SM0AS-UPDT-VSAGCY()
   /* **********************************************************************/
   /* SM0AS-UPDT-VSAGCY*/
   /* This routine calls IO0050 to update an agency row.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0050" ("U ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != 100) /* not record not found*/
    SM0AW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0050"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    exit program;
  end

end // end SM0AS-UPDT-VSAGCY

// Validate date format
Function SM0AS-VAL-DT-FMT()
   /* **********************************************************************/
   /* Validate Date format*/
   /* must be valid MMDDYY or MM/DD/YY format ('/' must be valid delimiter*/
   /* **********************************************************************/

  if (SM0AW-WORK-CHAR-DATE-BLANK == " ") /* mmddyy format*/
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = SM0AW-WORK-CHAR-DATE-MMDDYY;
  else /* mm/dd/yy format*/
    SM0AW01.SM0AW-EDIT-MMDDYY-DISPLAY = SM0AW-WORK-CHAR-DATE-MM-DD-YY;
    if (SM0AW-EDIT-MMDDYY-DASH1 != "/"
     && SM0AW-EDIT-MMDDYY-DASH1 != "."
     && SM0AW-EDIT-MMDDYY-DASH1 != "-"
     && SM0AW-EDIT-MMDDYY-DASH1 != " "
     && SM0AW-EDIT-MMDDYY-DASH1 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    if (SM0AW-EDIT-MMDDYY-DASH2 != "/"
     && SM0AW-EDIT-MMDDYY-DASH2 != "."
     && SM0AW-EDIT-MMDDYY-DASH2 != "-"
     && SM0AW-EDIT-MMDDYY-DASH2 != " "
     && SM0AW-EDIT-MMDDYY-DASH2 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    TA2REC.TA2GRTYP = "B";
    TA2REC.TA2GRGB = SM0AW-WORK-CHAR-DATE-MM-DD-YY;
  end

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0
   && TA2REC.TA2RTNCD != 222)
    SM0AW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 VALIDATE DATE FORMAT FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "SM0AM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    exit program;
  end

end // end SM0AS-VAL-DT-FMT

// converse xsstbl pop-up window
Function XPXSS01()
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XSSTBL.XSSCD[XX0XWCT1] != "99") /* Or end of data*/
        if (XSSTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XSSTBL.XSSCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XSSTBL.XSSDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (XSSTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XSSTBL.XSSCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XSSTBL.XSSDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XSSTBL.XSSCD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end
end // end XPXSS01

//*** RECORD=SM0AW01 ****
// Working storage record for application SM0A.
// 
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    2/15/93  RCORON    Created record.
//  001    6/01/93  RCORON    Added flag for prompt pfkey.
// 
// ***********************
Record SM0AW01 type basicRecord
  10 * char(10) ; 
    15 SM0AW-ERR-FL SM0AW-ERR-FL ; 
    15 SM0AW-PROTECT-ATTR-FL SM0AW-PROTECT-ATTR-FL ; 
    15 SM0AW-VSAGCY01-FOUND-FL SM0AW-VSAGCY01-FOUND-FL ; 
    15 SM0AW-DISP-ERR-FL SM0AW-DISP-ERR-FL ; 
    15 SM0AW-PROC-TYP-IND SM0AW-PROC-TYP-IND ; 
    15 SM0AW-REQUIRED-FL SM0AW-REQUIRED-FL ; 
    15 SM0AW-PROMPT-ENTERED-FL SM0AW-PROMPT-ENTERED-FL ; 
    15 SM0AW-RETURN-PROMPT-FL SM0AW-RETURN-PROMPT-FL ; 
    15 SM0AW-PTR SM0AW-PTR ; 
  10 * char(4) ; 
    15 SM0AW-VSAGCY01-LENGTH SM0AW-VSAGCY01-LENGTH ; 
    15 SM0AW-VAGYED01-LENGTH SM0AW-VAGYED01-LENGTH ; 
  10 * char(24) ; 
    15 SM0AW-EDIT-CCYYMMDD SM0AW-EDIT-CCYYMMDD ; 
      20 SM0AW-EDIT-CCYYMMDD-CENTURY SM0AW-EDIT-CCYYMMDD-CENTURY ; 
      20 SM0AW-EDIT-CCYYMMDD-YEAR SM0AW-EDIT-CCYYMMDD-YEAR ; 
      20 SM0AW-EDIT-CCYYMMDD-MONTH SM0AW-EDIT-CCYYMMDD-MONTH ; 
      20 SM0AW-EDIT-CCYYMMDD-DAY SM0AW-EDIT-CCYYMMDD-DAY ; 
    15 SM0AW-EDIT-MMDDYY-DISPLAY SM0AW-EDIT-MMDDYY-DISPLAY ; 
      20 SM0AW-EDIT-MMDDYY-MONTH SM0AW-EDIT-MMDDYY-MONTH ; 
      20 SM0AW-EDIT-MMDDYY-DASH1 SM0AW-EDIT-MMDDYY-DASH1 ; 
      20 SM0AW-EDIT-MMDDYY-DAY SM0AW-EDIT-MMDDYY-DAY ; 
      20 SM0AW-EDIT-MMDDYY-DASH2 SM0AW-EDIT-MMDDYY-DASH2 ; 
      20 SM0AW-EDIT-MMDDYY-YEAR SM0AW-EDIT-MMDDYY-YEAR ; 
    15 SM0AW-WORK-CHAR-DATE SM0AW-WORK-CHAR-DATE ; 
      20 SM0AW-WORK-CHAR-DATE-MM-DD-YY SM0AW-WORK-CHAR-DATE-MM-DD-YY ; 
        25 SM0AW-WORK-CHAR-DATE-MMDDYY SM0AW-WORK-CHAR-DATE-MMDDYY ; 
        25 SM0AW-WORK-CHAR-DATE-BLANK SM0AW-WORK-CHAR-DATE-BLANK ; 
  10 * char(14) ; 
    15 SM0AW-WORK-CCYYMMDD SM0AW-WORK-CCYYMMDD ; 
    15 SM0AW-CURR-CCYYMMDD SM0AW-CURR-CCYYMMDD ; 
    15 SM0AW-CURR-HHMMSS SM0AW-CURR-HHMMSS ; 
    15 SM0AW-CURR-HHMM SM0AW-CURR-HHMM ; 
  10 * char(25) ; 
    15 SM0AW-FAX SM0AW-FAX ; 
      20 SM0AW-FAX-AREA SM0AW-FAX-AREA ; 
      20 SM0AW-FAX-PRE SM0AW-FAX-PRE ; 
      20 SM0AW-FAX-NBR SM0AW-FAX-NBR ; 
      20 * char(5) ; 
    15 SM0AW-PHONE SM0AW-PHONE ; 
      20 SM0AW-PHONE-AREA SM0AW-PHONE-AREA ; 
      20 SM0AW-PHONE-PRE SM0AW-PHONE-PRE ; 
      20 SM0AW-PHONE-NBR SM0AW-PHONE-NBR ; 
end // end SM0AW01

//*** RECORD=SM0AW02 ****
// Working storage record for application SM0A to hold current
// Agency id.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    2/18/93  RCORON    Created record.
// 
// ***********************
Record SM0AW02 type basicRecord
  10 SM0AW-CURR-HDR SM0AW-CURR-HDR ; 
    15 SM-SAGCY-ID SM-SAGCY-ID ; 
end // end SM0AW02

//*** RECORD=SM0AW03 ****
// Working storage record for application SM0A to hold previous
// Agency id.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    2/18/93  RCORON    Created record.
// 
// ***********************
Record SM0AW03 type basicRecord
  10 SM0AW-PREV-HDR SM0AW-PREV-HDR ; 
    15 SM-SAGCY-ID SM-SAGCY-ID ; 
end // end SM0AW03

//*** RECORD=SM0AW04 ****
// Working storage record for application SM0A to hold current
// Agency details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    2/18/93  RCORON    Created record.
//  002    4/26/93  GCALKI    Grouped the sagcy & agyed detail
//                            under their own levels.
//  003    3/01/94  RPATTE    DB2 CHANGES. XXX-ADDR,XXXADDR.
// ***********************
Record SM0AW04 type basicRecord
  5 SM0AW-CURR-DTL SM0AW-CURR-DTL ; 
    10 SM0AW-CURR-SAGCY-DTL SM0AW-CURR-SAGCY-DTL ; 
      15 SM-SAGCY-NM SM-SAGCY-NM ; 
      15 XXXADDR1 XXXADDR1 ; 
      15 XXXADDR2 XXXADDR2 ; 
      15 XXX-CITY XXX-CITY ; 
      15 XST-ST-CD XST-ST-CD ; 
      15 XXX-ZIP XXX-ZIP ; 
      15 SM0AW-XXXPHNA SM0AW-XXXPHNA ; 
      15 SM0AW-XXXPHNP SM0AW-XXXPHNP ; 
      15 SM0AW-XXXPHNN SM0AW-XXXPHNN ; 
      15 SM0AW-FAX-AREA SM0AW-FAX-AREA ; 
      15 SM0AW-FAX-PRE SM0AW-FAX-PRE ; 
      15 SM0AW-FAX-NBR SM0AW-FAX-NBR ; 
      15 SM-SAGCY-PAY-CD SM-SAGCY-PAY-CD ; 
      15 SM0AW-SM-SAGCY-CONT-EDT SM0AW-SM-SAGCY-CONT-EDT ; 
      15 SM0AW-SM-SAGCY-CONT-TDT SM0AW-SM-SAGCY-CONT-TDT ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 YGR-SLS-GRP-CD YGR-SLS-GRP-CD ; 
      15 XSS-SAGCY-ASSN-TYP XSS-SAGCY-ASSN-TYP ; 
      15 SM-SAGCY-STAT SM-SAGCY-STAT ; 
      15 XSO-SLS-OFC-ID XSO-SLS-OFC-ID ; 
    10 SM0AW-CURR-AGYED-DTL SM0AW-CURR-AGYED-DTL ; 
      15 GL-RSP-CTR-ID GL-RSP-CTR-ID ; 
      15 GL-ENTITY-ID GL-ENTITY-ID ; 
  5 SM-SAGCY-CONT-EDT SM-SAGCY-CONT-EDT ; 
  5 SM-SAGCY-CONT-TDT SM-SAGCY-CONT-TDT ; 
end // end SM0AW04

//*** RECORD=SM0AW05 ****
// Working storage record for application SM0A to hold previous
// Agency details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    2/18/93  RCORON    Created record.
//  002    4/26/93  GCALKI    Grouped the sagcy & agyed detail
//                            under their own levels.
//  003    3/01/94  RPATTE    DB2 TBLCHGS.  XXX-ADDR, XXXADDR.
// ***********************
Record SM0AW05 type basicRecord
  5 SM0AW-PREV-DTL SM0AW-PREV-DTL ; 
    10 SM0AW-PREV-SAGCY-DTL SM0AW-PREV-SAGCY-DTL ; 
      15 SM-SAGCY-NM SM-SAGCY-NM ; 
      15 XXXADDR1 XXXADDR1 ; 
      15 XXXADDR2 XXXADDR2 ; 
      15 XXX-CITY XXX-CITY ; 
      15 XST-ST-CD XST-ST-CD ; 
      15 XXX-ZIP XXX-ZIP ; 
      15 SM0AW-XXXPHNA SM0AW-XXXPHNA ; 
      15 SM0AW-XXXPHNP SM0AW-XXXPHNP ; 
      15 SM0AW-XXXPHNN SM0AW-XXXPHNN ; 
      15 SM0AW-FAX-AREA SM0AW-FAX-AREA ; 
      15 SM0AW-FAX-PRE SM0AW-FAX-PRE ; 
      15 SM0AW-FAX-NBR SM0AW-FAX-NBR ; 
      15 SM-SAGCY-PAY-CD SM-SAGCY-PAY-CD ; 
      15 SM0AW-SM-SAGCY-CONT-EDT SM0AW-SM-SAGCY-CONT-EDT ; 
      15 SM0AW-SM-SAGCY-CONT-TDT SM0AW-SM-SAGCY-CONT-TDT ; 
      15 CU-CO-ID CU-CO-ID ; 
      15 YGR-SLS-GRP-CD YGR-SLS-GRP-CD ; 
      15 XSS-SAGCY-ASSN-TYP XSS-SAGCY-ASSN-TYP ; 
      15 SM-SAGCY-STAT SM-SAGCY-STAT ; 
      15 XSO-SLS-OFC-ID XSO-SLS-OFC-ID ; 
    10 SM0AW-PREV-AGYED-DTL SM0AW-PREV-AGYED-DTL ; 
      15 GL-RSP-CTR-ID GL-RSP-CTR-ID ; 
      15 GL-ENTITY-ID GL-ENTITY-ID ; 
  5 SM-SAGCY-CONT-EDT SM-SAGCY-CONT-EDT ; 
  5 SM-SAGCY-CONT-TDT SM-SAGCY-CONT-TDT ; 
  5 SM0AW-PREV-DTL-READ-ONLY SM0AW-PREV-DTL-READ-ONLY ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
end // end SM0AW05

//*** RECORD=SM0AW06 ****
// Working storage record for application SM0A to hold the
// initialized (empty) value of the agency detail
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    2/18/93  RCORON    Created record.
// 
// ***********************
Record SM0AW06 type basicRecord
  5 SM0AW-INIT-DTL SM0AW-INIT-DTL ; 
    10 SM-SAGCY-NM SM-SAGCY-NM ; 
    10 XXX-ADDR1 XXX-ADDR1 ; 
    10 XXX-ADDR2 XXX-ADDR2 ; 
    10 XXX-CITY XXX-CITY ; 
    10 XST-ST-CD XST-ST-CD ; 
    10 SM0AW-XXXZIP1 SM0AW-XXXZIP1 ; 
    10 SM0AW-XXXZIP2 SM0AW-XXXZIP2 ; 
    10 SM0AW-XXXPHNA SM0AW-XXXPHNA ; 
    10 SM0AW-XXXPHNP SM0AW-XXXPHNP ; 
    10 SM0AW-XXXPHNN SM0AW-XXXPHNN ; 
    10 SM0AW-FAX-AREA SM0AW-FAX-AREA ; 
    10 SM0AW-FAX-PRE SM0AW-FAX-PRE ; 
    10 SM0AW-FAX-NBR SM0AW-FAX-NBR ; 
    10 SM-SAGCY-PAY-CD SM-SAGCY-PAY-CD ; 
    10 SM0AW-SM-SAGCY-CONT-EDT SM0AW-SM-SAGCY-CONT-EDT ; 
    10 SM0AW-SM-SAGCY-CONT-TDT SM0AW-SM-SAGCY-CONT-TDT ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 YGR-SLS-GRP-CD YGR-SLS-GRP-CD ; 
    10 XSS-SAGCY-ASSN-TYP XSS-SAGCY-ASSN-TYP ; 
    10 SM-SAGCY-STAT SM-SAGCY-STAT ; 
    10 XSO-SLS-OFC-ID XSO-SLS-OFC-ID ; 
    10 GL-RSP-CTR-ID GL-RSP-CTR-ID ; 
    10 GL-ENTITY-ID GL-ENTITY-ID ; 
end // end SM0AW06

//*** RECORD=VAGYED01 ****
// ************************************************************
// *                                                          *
// *  This is the Agency / Employee department translation    *
// *  table.  It includes one row for each unique sales       *
// *  agency ID.                                              *
// *                                                          *
// *  DB2 Table:   DSLSMN.VAGYED01                            *
// *  I/O MOD:     IO0680                                     *
// *  DCLGEN:      DCL01085                                   *
// *                                                          *
// *  Table key:   SM-SAGCY-ID  or HR-EMPL-DEPT-ID            *
// *                                                          *
// ************************************************************
// *                    MAINTENANCE                           *
// ************************************************************
// *                                                          *
// * Log #    Date    Init  Description                       *
// * -----  --------  ----  --------------------------------- *
// *                                                          *
// *  001   08/27/92   JAB  Created new record                *
// *                                                          *
// ************************
Record VAGYED01 type basicRecord
  5 VAGYED01-GROUP VAGYED01-GROUP ; 
    10 GL-ENTITY-ID GL-ENTITY-ID ; 
    10 GL-RSP-CTR-ID GL-RSP-CTR-ID ; 
    10 SM-SAGCY-ID SM-SAGCY-ID ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VAGYED01

// SM_SAGCY_PAY_CD
DataItem SM-SAGCY-PAY-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-CURR-AGYED-DTL char(7)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a curr date ccyymmdd
DataItem SM0AW-CURR-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0AW-CURR-DTL char(183)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-CURR-HDR char(4)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a curr time hhmm
DataItem SM0AW-CURR-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a curr time hhmmss
DataItem SM0AW-CURR-HHMMSS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0AW-CURR-SAGCY-DTL char(176)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Display errors found switch
DataItem SM0AW-DISP-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SM0AW-EDIT-CCYYMMDD-CENTURY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-CCYYMMDD-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-CCYYMMDD-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-CCYYMMDD-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-MMDDYY-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-MMDDYY-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-MMDDYY-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-MMDDYY-DISPLAY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-MMDDYY-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-EDIT-MMDDYY-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a error flag
DataItem SM0AW-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-FAX char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-FAX-AREA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-FAX-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-FAX-PRE char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-INIT-DTL char(198)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-PHONE char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-PHONE-AREA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-PHONE-NBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-PHONE-PRE char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-PREV-AGYED-DTL char(7)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-PREV-DTL char(183)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-PREV-DTL-READ-ONLY char(8)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-PREV-HDR char(4)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SM0AW-PREV-SAGCY-DTL char(176)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment process indicator
DataItem SM0AW-PROC-TYP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// next key is required flag
DataItem SM0AW-PROMPT-ENTERED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// protect map fields flag
DataItem SM0AW-PROTECT-ATTR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work index pointer
DataItem SM0AW-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// next key is required flag
DataItem SM0AW-REQUIRED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// next key is required flag
DataItem SM0AW-RETURN-PROMPT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_PAY_CD
DataItem SM0AW-SM-SAGCY-CONT-EDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_PAY_CD
DataItem SM0AW-SM-SAGCY-CONT-TDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VKOCOM01
DataItem SM0AW-VAGYED01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem SM0AW-VSAGCY01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VSNADJ01
DataItem SM0AW-VSAGCY01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-WORK-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-WORK-CHAR-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-WORK-CHAR-DATE-BLANK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-WORK-CHAR-DATE-MM-DD-YY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sm0a work date
DataItem SM0AW-WORK-CHAR-DATE-MMDDYY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// phone area code
DataItem SM0AW-XXXPHNA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// phone number - last 4 digits
DataItem SM0AW-XXXPHNN char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// phone prefix
DataItem SM0AW-XXXPHNP char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fisrt half of zip code
DataItem SM0AW-XXXZIP1 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second half of zip code
DataItem SM0AW-XXXZIP2 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dslsmn.vagyed01 group level
DataItem VAGYED01-GROUP char(23)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSS_SAGCY_ASSN_TYP
DataItem XSS-SAGCY-ASSN-TYP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YGR_SLS_GRP_CD
DataItem YGR-SLS-GRP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

