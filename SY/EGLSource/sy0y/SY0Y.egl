package sy0y;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=SY0Y ****
// ************************************************************
// *
// *   SY0Y - Catalog Table Maintenance Program
// *
// *   This application will maintain the catalog information
// *   (DPROD.VCATLG01).
// *
// ************************************************************
// * Maintenance History
// *Rev #    Date    Who     Remarks
// *-----  --------  ------  ----------------------------------
// *        1-05-89  MHALST  Program Creation
// *        2-11-91  MHALST  DB2 changes, SY2REC
// *PF151   2-05-92  MHALST  Add new screen M005
// *       12-05-97  NGANGO  Y2K MODIFICATION. Regenerated to
// *                         pickup XX0XS01 changes.
// *
// ************************************************************
// *********************
Program SY0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  SY0YW01 SY0YW01; // record
  SY0YW02 SY0YW02; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SYNREC SYNREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYRTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use SY0YM.SY0YM001,  // forms
      SY0YM.SY0YM005
   {
    validationBypassKeys = [pf3, pf4],
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0Y000: SY0Y000();

     /* Program should NEVER get here, but in case of some*/
     /* weird logic error, we'll do an EZECLOS just in case.*/

    exit program;
    SY0Y001: SY0Y001();
    SY0Y050: SY0Y050();
    SY0Y100: SY0Y100();
    SY0Y105: SY0Y105();
    SY0Y150: SY0Y150();
    SY0Y200: SY0Y200();
    SY0Y250: SY0Y250();
    SY0Y500: SY0Y500();
    SY0Y525: SY0Y525();
    SY0Y550: SY0Y550();
    SY0Y575: SY0Y575();
  end // end main
end // end SY0Y

// Process Main Logic
Function SY0Y000()
   /* *************************************************************/
   /* *                                                          **/
   /* *  SY0Y Main Logic*/
   /* *                                                          **/
   /* *************************************************************/

  SY0Y001(); /* init program*/

  SY0YW01.SY0YWEOA = "N";
  while (SY0YW01.SY0YWEOA == "N")
    SY0Y050(); /* converse control procedure*/
  end

end // end SY0Y000

// Initialize Program
Function SY0Y001()

   /* Initialize program*/

  XSENTRY(); /* check security*/
  XSSEGTR(); /* set tran id*/

   /* clear working storage and screen records*/

  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  set SYWREC empty;
  set SY0YW01 empty;
  set SY0YW02 empty;
  set SY1REC empty;
  set SY2REC empty;
  set SYNREC empty;
  set SY0YM001 initial;
  set SY0YM005 initial;
  SY0YW01.SY0YWMAP = 001; /* set to show map 001*/
  SY0YW01.SY0YWTBF = "T"; /* and show 'top' of map*/
  SY0YW01.SY0YWREV = "02"; /* Program revision number*/
  SY0YW01.SY0YWMAX = 9; /* lines of data on screen*/
  SY0YW01.SY0YWBLD = "N"; /* No build screen*/

   /* now check commarea to see what mode we're in*/

  if (COMMAREA.CAADDFL == "Y" /* ok to add*/
   || COMMAREA.CACHGFL == "Y") /* ok to change*/
    SY0YW01.SY0YWMOD = "A"; /* default to add*/
  else /* user can only inquiry*/
    SY0YW01.SY0YWMOD = "I"; /* so set flag*/
  end

   /* now get current date for screen*/

  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SYWREC.SYWTODAY = TA2REC.TA2GRGGN;
  end

   /* now see if we have GPC*/

  if (COMMAREA.CAFROMAP == "SY0N") /* came from menu*/
    SYWREC.SYWTRANF = COMMAREA.CAUSERA;
  end
  if (SYWREC.XGPCD == "  ") /* no gpc code*/
    if (COMMAREA.XGPCD != "  ") /* have commarea gpc*/
      SYWREC.XGPCD = COMMAREA.XGPCD;
    end
  end
  if (SYWREC.XGPCD in XGPTBL.XGPCD)
    SY0YW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end

end // end SY0Y001

// Screen Converse Procedure
Function SY0Y050()
   /* *************************************************************/
   /* *                                                          **/
   /* *  SY0Y Screen Control                                     **/
   /* *       This procedure will decide what screen to          **/
   /* *       converse to the user. It will then perform         **/
   /* *       the appropriate procedure.                         **/
   /* *                                                          **/
   /* *************************************************************/

  if (SY0YW01.SY0YWMAP == 001) /* converse map 1*/
    if (SY0YW01.SY0YWTBF == "T") /* converse top half*/
      SY0Y100();
    else
      SY0Y150(); /* converse bottom*/
    end
  else
    if (SY0YW01.SY0YWMAP == 005) /* converse map 5*/
      SY0Y500();
    end
  end

end // end SY0Y050

// Converse Screen SY0YM001
Function SY0Y100()

  SY0YM001.SYMPRONM = "SY0Y100"; /* process name*/
  if (SY0YW01.SY0YWMOD == "I") /* inquiry mode*/
    SY0YM001.SY0YMMOD = "Inquiry";
  else /* in change mode*/
    SY0YM001.SY0YMMOD = "Change";
  end
  SY0YM001.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY0YM001.SYMREV = SY0YW01.SY0YWREV; /* revision number*/
  if (SY0YM001.XGPCD == " ") /* no gpc code*/
    SY0YM001.XGPCD = SYWREC.XGPCD;
    SY0YM001.XGPDESC = SY0YW01.XGPDESC;
  end

  if (converseVar.validationMsgNum == 0  /* no errors*/
   || converseVar.validationMsgNum == 11 /* or file update successfull*/
   || converseVar.validationMsgNum == 57) /* or no changes made (PA2)*/
    set SY0YM001.XGPCD initialAttributes;
    set SY0YM001.SY1STNBR initialAttributes;
    if (SY0YM001.XGPCD == " ")
      set SY0YM001.XGPCD cursor;
    else
      set SY0YM001.SY1STNBR cursor;
    end
    set SY0YM001.SY2CLRID initialAttributes;
    set SY0YM001.XDMCD initialAttributes;
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= SY0YW01.SY0YWMAX)
      set SY0YM001.SY0YMACT[SYWINDXA] skip;
      set SY0YM001.SYRCATID[SYWINDXA] skip;
      set SY0YM001.SYNCTPGN[SYWINDXA] skip;
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
  end

  converse SY0YM001 ;

  SY0YS01(); /* reset fields*/

  SY0YS02(); /* check PF keys (May exit)*/

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY0YW01.SY0YWMAP != 001)          /* user changing maps*/
    return; /* get out*/
  end

  SY0Y105(); /* validate logic*/

  if (converseVar.validationMsgNum == 0 /* successful validation*/
   && SY0YW01.SY0YWMOD != "I")          /* and not inquiry mode*/
    SY0YW01.SY0YWTBF = "B"; /* set flag to display bottom*/
  end

end // end SY0Y100

// Build Screen Array
Function SY0Y105()

   /* Validate GPC, Style, Color, & Dim and get catalog info*/

  if (SY0YM001.XGPCD in XGPTBL.XGPCD) /* is gpc good*/
    SY0YM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    if (SY0YM001.XGPCD != SYWREC.XGPCD)
      SYWREC.XGPCD = SY0YM001.XGPCD;
      SY0YW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    end
  else
    SY0YM001.XGPDESC = " ";
    set SY0YM001.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
  end

  if (SY0YM001.XDMCD == " ") /* dimension is blank*/
    SY0YM001.XDMCD = "00"; /* so default*/
  end
  if (SY0YM001.XDMCD in XDMTBL.XDMCD) /* is dimension good*/
    SY0YM001.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  else
    SY0YM001.XDMDESC = " ";
    set SY0YM001.XDMCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
  end

  if (converseVar.validationMsgNum != 0) /* can't continue if error*/
    return;
  end

  if (SY0YM001.SY1STNBR == " ") /* style is blank*/
    converseLib.validationFailed(32); /* please enter style*/
    set SY0YM001.SY1STNBR cursor, bold;
    return;
  end

  SY1REC.XGPCD = SY0YM001.XGPCD;
  SY1REC.SY1STNBR = SY0YM001.SY1STNBR;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY0YM001.SY1STYNM = SY1REC.SY1STYNM; /* move in name*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* style not found*/
      SY0YM001.SY1STYNM = " ";
      converseLib.validationFailed(5); /* style does not exist*/
      set SY0YM001.SY1STNBR cursor, bold;
    else
      TA1REC.TA1LOCAT[1] = "SY0Y105";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1TBLKE = SY1REC.SY1KEY;
      SY0YS99(); /* report error*/
      converseLib.validationFailed(20); /* style table error*/
      set SY0YM001.SY1STNBR cursor, bold;
    end
    return;
  end

  if (SY0YM001.SY2CLRID == " ") /* color is spaces*/
    SY0YS34(); /* try and locate one*/
    if (SY0YM001.SY2CLRID == " ") /* could not file one*/
      converseLib.validationFailed(190); /* No catalog data for style*/
      set SY0YM001.SY1STNBR cursor, bold;
      return;
    end
  end

  SY2REC.XGPCD = SY0YM001.XGPCD;
  SY2REC.SY1STNBR = SY0YM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0YM001.SY2CLRID;
  SY2REC.XDMCD = SY0YM001.XDMCD;
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY0YM001.SY2CLRDS = SY2REC.SY2CLRDS; /* move in name*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* style not found*/
      SY0YM001.SY2CLRDS = " ";
      converseLib.validationFailed(7); /* color/dim does not exist*/
      set SY0YM001.SY2CLRID cursor, bold;
      set SY0YM001.XDMCD bold;
    else
      TA1REC.TA1LOCAT[1] = "SY0Y105";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY0YS99(); /* report error*/
      converseLib.validationFailed(21); /* color table error*/
      set SY0YM001.SY2CLRID cursor, bold;
      set SY0YM001.XDMCD bold;
    end
    return;
  end

  SYNREC.XGPCD = SY0YM001.XGPCD;
  SYNREC.SY1STNBR = SY0YM001.SY1STNBR;
  SYNREC.SY2CLRID = SY0YM001.SY2CLRID;
  SYNREC.XDMCD = SY0YM001.XDMCD;
  call "IO4880" ("S1", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0Y105";
    TA1REC.TA1LOCAT[2] = "OPEN";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99(); /* report error*/
    converseLib.validationFailed(21); /* color table error*/
    set SY0YM001.SY2CLRID cursor, bold;
    set SY0YM001.XDMCD bold;
    return;
  end

  SY0YW01.SY0YWEOD = "N"; /* set end of data flag*/
  SYWREC.SYWINDXA = 1; /* init index*/
  while (SYWREC.SYWINDXA <= SY0YW01.SY0YWMAX)
    if (SY0YW01.SY0YWEOD == "N") /* not end of data yet*/
      call "IO4880" ("N1", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 100) /* end of data*/
        SY0YW01.SY0YWEOD = "Y"; /* set for no more data*/
      else
        if (SQLCA.VAGen_SQLCODE != 0) /* we have DB2 trouble*/
          TA1REC.TA1LOCAT[1] = "SY0Y105";
          TA1REC.TA1LOCAT[2] = "FETCH";
          TA1REC.TA1TBLVU = "VCATLG01";
          TA1REC.TA1TBLKE = SY2REC.SY2KEY;
          SY0YS99(); /* report error*/
          converseLib.validationFailed(21); /* color table error*/
          set SY0YM001.SY2CLRID cursor, bold;
          set SY0YM001.XDMCD bold;
          return;
        end
      end
    end
    if (SY0YW01.SY0YWEOD == "N") /* still have data*/
      SY0YM001.SY0YMACT[SYWINDXA] = " ";
      SY0YW01.SYRCATID[SYWINDXA] = SYNREC.SYRCATID;
      SY0YM001.SYRCATID[SYWINDXA] = SYNREC.SYRCATID;
      if (SYNREC.SYRCATID in SYRTBL.SYRCATID)
        SY0YM001.SYRDESC[SYWINDXA] = SYRTBL.SYRDESC[sysVar.arrayIndex];
      else
        SY0YM001.SYRDESC[SYWINDXA] = " ";
      end
      SY0YM001.SYNCTPGN[SYWINDXA] = SYNREC.SYNCTPGN;
      SY0YW01.SYNCTPGN[SYWINDXA] = SYNREC.SYNCTPGN;
      SY0YW01.ZZZCHGCT[SYWINDXA] = SYNREC.ZZZCHGCT;
    else /* no data, clear array elements*/
      SY0YM001.SY0YMACT[SYWINDXA] = " ";
      SY0YW01.SYRCATID[SYWINDXA] = " ";
      SY0YM001.SYRCATID[SYWINDXA] = " ";
      SY0YM001.SYRDESC[SYWINDXA] = " ";
      SY0YM001.SYNCTPGN[SYWINDXA] = 0;
      SY0YW01.SYNCTPGN[SYWINDXA] = 0;
      SY0YW01.ZZZCHGCT[SYWINDXA] = 0;
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

  call "IO4880" ("C1", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0Y105";
    TA1REC.TA1LOCAT[2] = "CLOSE";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99(); /* report error*/
    converseLib.validationFailed(21); /* color table error*/
    set SY0YM001.SY2CLRID cursor, bold;
    set SY0YM001.XDMCD bold;
    return;
  end

end // end SY0Y105

// Converse Screen SY0YM001
Function SY0Y150()

  SY0YM001.SYMPRONM = "SY0Y150"; /* process name*/
  SY0YM001.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY0YM001.SYMREV = SY0YW01.SY0YWREV; /* revision number*/
  if (converseVar.validationMsgNum == 0) /* if no errors*/
    set SY0YM001.XGPCD skip; /* set-up screen*/
    set SY0YM001.SY1STNBR skip;
    set SY0YM001.SY2CLRID skip;
    set SY0YM001.XDMCD skip;
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= SY0YW01.SY0YWMAX)
      set SY0YM001.SY0YMACT[SYWINDXA] initialAttributes;
      set SY0YM001.SYRCATID[SYWINDXA] initialAttributes;
      set SY0YM001.SYNCTPGN[SYWINDXA] initialAttributes;
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
    set SY0YM001.SY0YMACT[1] cursor;
  end

  converse SY0YM001 ;

  SY0YS01(); /* reset screen fields*/

  SY0YS02(); /* check PF keys (May exit)*/

  if (converseVar.eventKey is pa2) /* user requesting restart*/
    converseLib.validationFailed(57); /* no changes made*/
    set SY0YM001 initial;
    SY0YW01.SY0YWTBF = "T";
    return;
  end

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY0YW01.SY0YWMAP != 001)          /* or user changing maps*/
    return; /* get out*/
  end

  SY0Y200(); /* validate/update logic*/

  if (converseVar.validationMsgNum == 0) /* successful update*/
    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(131); /* all edits passed*/
      return;
    end
    SY0Y250(); /* update data base*/
    if (converseVar.validationMsgNum == 0) /* successfull update*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
      set SY0YM001 initial; /* clear screen*/
      SY0YW01.SY0YWTBF = "T"; /* go to top half*/
      if (SY0YW01.SY0YWSCF == "Y") /* something changed*/
        converseLib.validationFailed(11); /* file update successful*/
      end
    else /* problems in update*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* restore data base*/
    end
  end

end // end SY0Y150

// Validate/Update Screen Data
Function SY0Y200()

  SY0YW01.SY0YWUPD = "N"; /* set update flag no*/

  SYWREC.SYWINDXA = 1; /* init index*/
  while (SYWREC.SYWINDXA <= SY0YW01.SY0YWMAX)
    SY0YS21(); /* do validation*/
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

end // end SY0Y200

// Insert/Update Catalog rows
Function SY0Y250()

   /* Update/Insert logic*/

  TA2REC.TA2DTOPT = "GETDATE"; /* first get date for zz stuff*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0) /* good return*/
    SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  else
    TA1REC.TA1LOCAT[1] = "SY0Y250";
    TA1REC.TA1LOCAT[2] = "TA0040";
    TA1REC.TA1LOCAT[3] = TA2REC.TA2RTNCD;
    SY0YS99();
  end

  SY0YW01.SY0YWSCF = "N"; /* Nothing's changed yet*/
  set SQLCA empty;
  SYWREC.SYWINDXA = 1;
  while (SYWREC.SYWINDXA <= SY0YW01.SY0YWMAX
   && SQLCA.VAGen_SQLCODE == 0)
    if (SY0YM001.SY0YMACT[SYWINDXA] == "A") /* add record*/
      SY0YW01.SY0YWSCF = "Y"; /* Something changed*/
      SY0YS31();
    end
    if (SY0YM001.SY0YMACT[SYWINDXA] == "C") /* change*/
      SY0YW01.SY0YWSCF = "Y"; /* Something changed*/
      if (SY0YM001.SYRCATID[SYWINDXA] != SY0YW01.SYRCATID[SYWINDXA])
        SY0YS33(); /* delete old record*/
        SY0YS31(); /* and add new record*/
      else /* key not changing, just update*/
        SY0YS32();
      end
    end
    if (SY0YM001.SY0YMACT[SYWINDXA] == "D") /* delete*/
      SY0YW01.SY0YWSCF = "Y"; /* Something changed*/
      SY0YS33();
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

end // end SY0Y250

// Screen Converse Procedure
Function SY0Y500()
   /* *************************************************************/
   /* *                                                          **/
   /* *  SY0Y Screen Control - Map M005                          **/
   /* *       This procedure will decide what screen to          **/
   /* *       converse to the user. It will then perform         **/
   /* *       the appropriate procedure.                         **/
   /* *                                                          **/
   /* *************************************************************/

  if (SY0YW01.SY0YWMOD == "C" /* user requests change*/
   || SY0YW01.SY0YWMOD == "I") /* or inquiry*/
    if (SY0YW01.SY0YWTBF == "T") /* converse top half*/
      SY0Y525();
    else
      SY0Y550(); /* converse bottom*/
    end
  else /* User requesting Add mode*/
    SY0Y575();
  end

end // end SY0Y500

// Converse Screen SY0YM005
Function SY0Y525()

  SY0YM005.SYMPRONM = "SY0Y525"; /* process name*/
  if (SY0YW01.SY0YWMOD == "I") /* inquiry mode*/
    SY0YM005.SY0YMMOD = "Inquiry";
    SY0YM005.SY0YMFUN = " "; /* Remove PF13 key*/
    set SY0YM005.SY0YMCP1 skip, invisible; /* Remove Change Prompts*/
    set SY0YM005.SY0YMCP2 skip, invisible;
    set SY0YM005.SY0YMCP3 skip, invisible;
  else /* in change mode*/
    SY0YM005.SY0YMMOD = "Change";
    SY0YM005.SY0YMFUN = "13=Add "; /* Enable PF13*/
    set SY0YM005.SY0YMCP1 initialAttributes; /* Show Change Prompts*/
    set SY0YM005.SY0YMCP2 initialAttributes;
    set SY0YM005.SY0YMCP3 initialAttributes;
  end
  set SY0YM005.SY0YMLEP skip, invisible; /* Remove Last Entry*/
  set SY0YM005.SY0YMLGP skip, invisible;
  set SY0YM005.SY0YMLSY skip, invisible;
  set SY0YM005.SY0YMLCL skip, invisible;
  set SY0YM005.SY0YMLDM skip, invisible;
  SYWREC.SYWINDXA = 1; /* Protest lower half of screen*/
  while (SYWREC.SYWINDXA <= 10)
    set SY0YM005.SY1STNBR[SYWINDXA] skip;
    set SY0YM005.SY2CLRID[SYWINDXA] skip;
    set SY0YM005.XDMCD[SYWINDXA] skip;
    if (SY0YW01.SY0YWMOD == "I") /* inquiry mode, set dark*/
      set SY0YM005.SY0YMCAT[SYWINDXA] skip, invisible;
      set SY0YM005.SY0YMPGE[SYWINDXA] skip, invisible;
      set SY0YM005.SY0YMDFL[SYWINDXA] skip, invisible;
    else /* change mode*/
      set SY0YM005.SY0YMCAT[SYWINDXA] skip;
      set SY0YM005.SY0YMPGE[SYWINDXA] skip;
      set SY0YM005.SY0YMDFL[SYWINDXA] skip;
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end
  SY0YM005.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY0YM005.SYMREV = SY0YW01.SY0YWREV; /* revision number*/
  if (SY0YM005.XGPCD == " ") /* no gpc code*/
    SY0YM005.XGPCD = SYWREC.XGPCD;
    SY0YM005.XGPABRV = SYWREC.XGPABRV;
  end

  if (converseVar.validationMsgNum == 0
   && SY0YM005.SYRCATID == " ")
    set SY0YM005.SYRCATID cursor;
  end

  converse SY0YM005 ;

  SY0YS51(); /* reset fields*/

  SY0YS52(); /* check PF keys (May exit)*/

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY0YW01.SY0YWMAP != 005)          /* or change maps*/
    return; /* get out*/
  end

  if (converseVar.eventKey is pf13 /* changing modes*/
   && SY0YW01.SY0YWMOD != "I")     /* and not inquiry*/
    SY0YW01.SY0YWMOD = "A"; /* change to Add mode*/
    set SY0YM005 initial; /* reset map*/
    return; /* get out*/
  end

  if (SY0YW01.SY0YWMOD == "I" /* Inquiry user*/
   && SY0YW02.SY0YW-CURR-LINE != 0
   && SY0YM005.SYRCATID == SY0YW02.SYRCATID
   && SY0YM005.SYNCTPGN == SY0YW02.SYNCTPGN)
    if (converseVar.eventKey is pf7)
      if (SY0YW02.SY0YW-CURR-LINE == 1)
        converseLib.validationFailed(69); /* At Beginning*/
      else
        SY0YW02.SY0YW-CURR-LINE = SY0YW02.SY0YW-CURR-LINE - 10;
        if (SY0YW02.SY0YW-CURR-LINE < 1)
          SY0YW02.SY0YW-CURR-LINE = 1;
        end
        SY0YS5S(); /* Rebuild screen*/
      end
      return;
    end
    if (converseVar.eventKey is pf8)
      SYWREC.SYWINDXB = SY0YW02.SY0YW-CURR-LINE + 10;
      if (SYWREC.SYWINDXB > SY0YW02.SY0YW-NBR-ROWS)
        converseLib.validationFailed(70); /* At End*/
      else
        SY0YW02.SY0YW-CURR-LINE = SY0YW02.SY0YW-CURR-LINE + 10;
        SY0YS5S(); /* Rebuild screen*/
      end
      return;
    end
  else
    if (converseVar.eventKey is enter) /* ENTER is OK*/
       /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(19); /* Invalid PF Key*/
    end
  end

  SY0Y530(); /* validate logic*/

  if (converseVar.validationMsgNum == 0 /* successful validation*/
   && SY0YW01.SY0YWMOD != "I")          /* and not inquiry mode*/
    SY0YW01.SY0YWTBF = "B"; /* set flag to display bottom*/
  end

end // end SY0Y525

// Build Screen Array
Function SY0Y530()

   /* Validate GPC, catalog id, and page. Load array*/

  if (SY0YM005.XGPCD in XGPTBL.XGPCD) /* is gpc good*/
    SY0YM005.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    if (SY0YM005.XGPCD != SYWREC.XGPCD)
      SYWREC.XGPCD = SY0YM005.XGPCD;
      SY0YW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    end
  else
    SY0YM005.XGPABRV = " ";
    set SY0YM005.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
  end

  if (SY0YM005.SYRCATID in SYRTBL.SYRCATID) /* is catid ok*/
    SY0YM005.SYRDESC = SYRTBL.SYRDESC[sysVar.arrayIndex];
  else
    SY0YM005.SYRDESC = " ";
    set SY0YM005.SYRCATID cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
  end

  if (SY0YM005.SYNCTPGN <= 0) /* page nbr > zero*/
    set SY0YM005.SYNCTPGN cursor, bold;
    converseLib.validationFailed(40); /* required field*/
  end

  if (converseVar.validationMsgNum != 0) /* can't continue if error*/
    return;
  end

  set SY0YW02 empty;
  SYNREC.SYRCATID = SY0YM005.SYRCATID;
  SY0YW02.SYRCATID = SY0YM005.SYRCATID;
  SYNREC.SYNCTPGN = SY0YM005.SYNCTPGN;
  SY0YW02.SYNCTPGN = SY0YM005.SYNCTPGN;
  call "IO4880" ("S2", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0Y530";
    TA1REC.TA1LOCAT[2] = "OPEN";
    TA1REC.TA1TBLVU = "VCATLG01";
    SY0YS99(); /* report error*/
    converseLib.validationFailed(23); /* table error*/
    set SY0YM005.SYRCATID cursor, bold;
    set SY0YM005.SYNCTPGN cursor, bold;
    return;
  end

  SY0YW01.SY0YWEOD = "N"; /* set end of data flag*/
  SYWREC.SYWINDXA = 0; /* init index*/
  while (SY0YW01.SY0YWEOD == "N")
    call "IO4880" ("N2", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 100) /* end of data*/
      SY0YW01.SY0YWEOD = "Y"; /* set for no more data*/
    else
      if (SQLCA.VAGen_SQLCODE != 0) /* we have DB2 trouble*/
        TA1REC.TA1LOCAT[1] = "SY0Y105";
        TA1REC.TA1LOCAT[2] = "FETCH";
        TA1REC.TA1TBLVU = "VCATLG01";
        SY0YS99(); /* report error*/
        converseLib.validationFailed(21); /* color table error*/
        return;
      else
        if (SYNREC.XGPCD == SY0YM005.XGPCD)
          SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
          if (SYWREC.SYWINDXA > 200) /* table overflow*/
            TA1REC.TA1LOCAT[1] = "SY0Y530";
            TA1REC.TA1LOCAT[2] = "TABLE";
            TA1REC.TA1TBLVU = "VCATLG01";
            SY0YS99(); /* report error*/
            converseLib.validationFailed(20); /* table error*/
            return;
          end
          SY0YW02.XGPCD[SYWINDXA] = SYNREC.XGPCD;
          SY0YW02.SY1STNBR[SYWINDXA] = SYNREC.SY1STNBR;
          SY0YW02.SY2CLRID[SYWINDXA] = SYNREC.SY2CLRID;
          SY0YW02.XDMCD[SYWINDXA] = SYNREC.XDMCD;
          SY0YW02.ZZZCHGCT[SYWINDXA] = SYNREC.ZZZCHGCT;
          SY0YS5L(); /* load descriptions into table*/
        end
      end
    end
  end

  call "IO4880" ("C2", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0Y530";
    TA1REC.TA1LOCAT[2] = "CLOSE";
    TA1REC.TA1TBLVU = "VCATLG01";
    SY0YS99(); /* report error*/
    converseLib.validationFailed(21); /* color table error*/
    return;
  end

  SY0YW02.SY0YW-NBR-ROWS = SYWREC.SYWINDXA;
  if (SY0YW02.SY0YW-NBR-ROWS == 0) /* No data found*/
    converseLib.validationFailed(189); /* Tell User*/
    set SY0YM005.SYNCTPGN cursor, bold;
  end

  SY0YW02.SY0YW-CURR-LINE = 1;
  SYWREC.SYWINDXA = 1; /* init index*/
  while (SYWREC.SYWINDXA <= 10)
    if (SYWREC.SYWINDXA > SY0YW02.SY0YW-NBR-ROWS)
      SY0YM005.SY1STNBR[SYWINDXA] = " ";
      SY0YM005.SY2CLRID[SYWINDXA] = " ";
      SY0YM005.XDMCD[SYWINDXA] = " ";
      SY0YM005.SY1SSTNM[SYWINDXA] = " ";
      SY0YM005.SY2CLRAB[SYWINDXA] = " ";
    else
      SY0YM005.SY1STNBR[SYWINDXA] = SY0YW02.SY1STNBR[SYWINDXA];
      SY0YM005.SY2CLRID[SYWINDXA] = SY0YW02.SY2CLRID[SYWINDXA];
      SY0YM005.XDMCD[SYWINDXA] = SY0YW02.XDMCD[SYWINDXA];
      SY0YM005.SY1SSTNM[SYWINDXA] = SY0YW02.SY1SSTNM[SYWINDXA];
      SY0YM005.SY2CLRAB[SYWINDXA] = SY0YW02.SY2CLRAB[SYWINDXA];
    end
    SY0YM005.SY0YMCAT[SYWINDXA] = " ";
    SY0YM005.SY0YMPGE[SYWINDXA] = 0;
    SY0YM005.SY0YMDFL[SYWINDXA] = " ";
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

end // end SY0Y530

// Converse Screen SY0YM005
Function SY0Y550()

  SY0YM005.SYMPRONM = "SY0Y550"; /* process name*/
  SY0YM005.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY0YM005.SYMREV = SY0YW01.SY0YWREV; /* revision number*/
  set SY0YM005.XGPCD protect;
  set SY0YM005.SYRCATID protect;
  set SY0YM005.SYNCTPGN protect;
  if (converseVar.validationMsgNum == 0)
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= 10)
      set SY0YM005.SY1STNBR[SYWINDXA] protect;
      set SY0YM005.SY2CLRID[SYWINDXA] protect;
      set SY0YM005.XDMCD[SYWINDXA] protect;
      if (SY0YM005.SY1STNBR[SYWINDXA] == " ") /* No data on line*/
        set SY0YM005.SY0YMCAT[SYWINDXA] protect;
        set SY0YM005.SY0YMPGE[SYWINDXA] protect;
        set SY0YM005.SY0YMDFL[SYWINDXA] protect;
      else
        set SY0YM005.SY0YMCAT[SYWINDXA] initialAttributes;
        set SY0YM005.SY0YMPGE[SYWINDXA] initialAttributes;
        set SY0YM005.SY0YMDFL[SYWINDXA] initialAttributes;
      end
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
  end

  if (converseVar.validationMsgNum == 0
   || converseVar.validationMsgNum == 151)
    set SY0YM005.SY0YMCAT[1] cursor;
  end

  converse SY0YM005 ;

  SY0YS51(); /* reset screen fields*/

  SY0YS52(); /* check PF keys (May exit)*/

  if (converseVar.eventKey is pa2) /* user requesting restart*/
    converseLib.validationFailed(57); /* no changes made*/
    set SY0YM005 initial;
    SY0YW01.SY0YWTBF = "T";
    return;
  end

  if (converseVar.eventKey is pf7)
    if (SY0YW02.SY0YW-CURR-LINE == 1)
      converseLib.validationFailed(69); /* At Beginning*/
    else
      SY0YW02.SY0YW-CURR-LINE = SY0YW02.SY0YW-CURR-LINE - 10;
      if (SY0YW02.SY0YW-CURR-LINE < 1)
        SY0YW02.SY0YW-CURR-LINE = 1;
      end
      SY0YS5S(); /* Rebuild screen*/
    end
    return;
  end

  if (converseVar.eventKey is pf8)
    SYWREC.SYWINDXB = SY0YW02.SY0YW-CURR-LINE + 10;
    if (SYWREC.SYWINDXB > SY0YW02.SY0YW-NBR-ROWS)
      converseLib.validationFailed(70); /* At End*/
    else
      SY0YW02.SY0YW-CURR-LINE = SY0YW02.SY0YW-CURR-LINE + 10;
      SY0YS5S(); /* Rebuild screen*/
    end
    return;
  end

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY0YW01.SY0YWMAP != 005)          /* or screen change*/
    return; /* get out*/
  end

  if (converseVar.eventKey is pf13 /* mode change*/
   && SY0YW01.SY0YWMOD != "I")     /* and not inquiry*/
    SY0YW01.SY0YWMOD = "A"; /* change to add mode*/
    set SY0YM005 initial; /* reset map*/
    return; /* get out*/
  end

  SY0Y600(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful update*/
    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(131); /* all edits passed*/
      return;
    end
    SY0Y650(); /* update data base*/
    if (converseVar.validationMsgNum == 0) /* successfull update*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
      SY0YW01.SY0YWTBF = "T";
      set SY0YM005 initial; /* clear map*/
      SY0YM005.SYRCATID = SY0YW02.SYRCATID;
      set SY0YM005.SYNCTPGN cursor;
      if (SY0YW01.SY0YWSCF == "Y") /* something was changed*/
        converseLib.validationFailed(11); /* file update successful*/
      else
        converseLib.validationFailed(57); /* no changes were made*/
      end
    else /* problems in update*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* restore data base*/
    end
  end

end // end SY0Y550

// Converse Screen SY0YM005
Function SY0Y575()

  SY0YM005.SYMPRONM = "SY0Y575"; /* process name*/
  SY0YM005.SY0YMMOD = "Add";
  SY0YM005.SY0YMFUN = "13=Change"; /* Enable PF13*/
  SY0YM005.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY0YM005.SYMREV = SY0YW01.SY0YWREV; /* revision number*/
  if (SY0YM005.XGPCD == " ") /* no gpc code*/
    SY0YM005.XGPCD = SYWREC.XGPCD;
    SY0YM005.XGPABRV = SYWREC.XGPABRV;
  end

  set SY0YM005.SY0YMCP1 skip, invisible;
  set SY0YM005.SY0YMCP2 skip, invisible;
  set SY0YM005.SY0YMCP3 skip, invisible;
  set SY0YM005.SY0YMLEP initialAttributes;
  set SY0YM005.SY0YMLGP initialAttributes;
  set SY0YM005.SY0YMLSY initialAttributes;
  set SY0YM005.SY0YMLCL initialAttributes;
  set SY0YM005.SY0YMLDM initialAttributes;
  SYWREC.SYWINDXA = 1; /* Protect Change prompts*/
  while (SYWREC.SYWINDXA <= 10)
    set SY0YM005.SY0YMCAT[SYWINDXA] skip, invisible;
    set SY0YM005.SY0YMPGE[SYWINDXA] skip, invisible;
    set SY0YM005.SY0YMDFL[SYWINDXA] skip, invisible;
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

  if (converseVar.validationMsgNum == 0
   && SY0YM005.SYRCATID == " ")
    set SY0YM005.SYRCATID cursor;
  end

  converse SY0YM005 ;

  SY0YS51(); /* reset fields*/

  SY0YS52(); /* check PF keys (May exit)*/

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY0YW01.SY0YWMAP != 005)          /* or map change*/
    return; /* get out*/
  end

  if (converseVar.eventKey is pf13) /* changing modes*/
    SY0YW01.SY0YWMOD = "C"; /* set change mode*/
    SY0YW01.SY0YWTBF = "T"; /* set for top of screen*/
    set SY0YM005 initial; /* clear screen*/
    return; /* get out*/
  end

  SY0Y580(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful validation*/
    if (converseVar.eventKey is enter) /* and user pressed enter*/
      SY0Y700(); /* go and add to data base*/
      if (converseVar.validationMsgNum == 0)
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.commit();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        if (SY0YW01.SY0YWSCF == "Y")
          converseLib.validationFailed(11); /* file update successfull*/
        else
          converseLib.validationFailed(57); /* no changes were made*/
        end
      else /* we had problems in updates*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* roll back changes*/
      end
    else
      if (converseVar.eventKey is pf12) /* user wants edit*/
        converseLib.validationFailed(131); /* All edits Passed*/
      end
    end
  end

end // end SY0Y575

// Validate Add Screen
Function SY0Y580()

   /* Validate GPC, catalog id, page, and line items*/

  if (SY0YM005.XGPCD in XGPTBL.XGPCD) /* is gpc good*/
    SY0YM005.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    if (SY0YM005.XGPCD != SYWREC.XGPCD)
      SYWREC.XGPCD = SY0YM005.XGPCD;
      SY0YW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    end
  else
    SY0YM005.XGPABRV = " ";
    set SY0YM005.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
  end

  if (SY0YM005.SYRCATID in SYRTBL.SYRCATID) /* is catid ok*/
    SY0YM005.SYRDESC = SYRTBL.SYRDESC[sysVar.arrayIndex];
  else
    SY0YM005.SYRDESC = " ";
    set SY0YM005.SYRCATID cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
  end

  if (SY0YM005.SYNCTPGN <= 0) /* page nbr > zero*/
    set SY0YM005.SYNCTPGN cursor, bold;
    converseLib.validationFailed(40); /* required field*/
  end

  if (converseVar.validationMsgNum != 0) /* can't continue if error*/
    return;
  end

   /* Check if we need to pull-down style from prev line*/
  SYWREC.SYWINDXA = 2; /* init index*/
  while (SYWREC.SYWINDXA <= 10)
    if (SY0YM005.SY1STNBR[SYWINDXA] == " "
     && SY0YM005.SY2CLRID[SYWINDXA] != " ")
      SYWREC.SYWINDXB = SYWREC.SYWINDXA - 1;
      if (SY0YM005.SY1STNBR[SYWINDXB] != " ")
        SY0YM005.SY1STNBR[SYWINDXA] = SY0YM005.SY1STNBR[SYWINDXB];
      end
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

  SYWREC.SYWINDXA = 10; /* init index*/
  while (SYWREC.SYWINDXA >= 1)
    if (SY0YM005.SY1STNBR[SYWINDXA] == " "
     && SY0YM005.SY2CLRID[SYWINDXA] == " "
     && SY0YM005.XDMCD[SYWINDXA] == " ")
      SY0YM005.SY1SSTNM[SYWINDXA] = " ";
      SY0YM005.SY2CLRAB[SYWINDXA] = " ";
    else
      SY0YS5A(); /* validate this line*/
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
  end

end // end SY0Y580

// Validate Change lines
Function SY0Y600()

  SYWREC.SYWINDXA = 10; /* init index*/
  while (SYWREC.SYWINDXA >= 1)
    if (SY0YM005.SY1STNBR[SYWINDXA] == " "
     && SY0YM005.SY2CLRID[SYWINDXA] == " "
     && SY0YM005.XDMCD[SYWINDXA] == " ")
      SY0YM005.SY1SSTNM[SYWINDXA] = " ";
      SY0YM005.SY2CLRAB[SYWINDXA] = " ";
    else
      SY0YS5V(); /* Validate line item*/
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
  end

end // end SY0Y600

// Change Catalog Tble
Function SY0Y650()

  TA2REC.TA2DTOPT = "GETDATE"; /* first get date for zz stuff*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0) /* good return*/
    SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  else
    TA1REC.TA1LOCAT[1] = "SY0Y650";
    TA1REC.TA1LOCAT[2] = "TA0040";
    TA1REC.TA1LOCAT[3] = TA2REC.TA2RTNCD;
    SY0YS99();
  end

  SY0YW01.SY0YWSCF = "N"; /* set something changed to no*/
  SQLCA.VAGen_SQLCODE = 0;
  SYWREC.SYWINDXA = 10; /* init index*/
  while (SYWREC.SYWINDXA >= 1
   && SQLCA.VAGen_SQLCODE == 0)
    if (SY0YM005.SY0YMCAT[SYWINDXA] == " "
     && SY0YM005.SY0YMPGE[SYWINDXA] == 0)
      if (SY0YM005.SY0YMDFL[SYWINDXA] == "Y")
        SY0YW01.SY0YWSCF = "Y"; /* something changed*/
        SY0YS5D(); /* Delete the Row*/
      end
    else
      set SYNREC empty;
      SYNREC.SYRCATID = SY0YM005.SYRCATID;
      SYNREC.SYNCTPGN = SY0YM005.SYNCTPGN;
      SYNREC.XGPCD = SY0YM005.XGPCD;
      SYNREC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
      SYNREC.SY2CLRID = SY0YM005.SY2CLRID[SYWINDXA];
      SYNREC.XDMCD = SY0YM005.XDMCD[SYWINDXA];
      call "IO4880" ("S ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE != 0)
        TA1REC.TA1LOCAT[1] = "SY0Y650";
        TA1REC.TA1TBLVU = "VCATLG01";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY;
        SY0YS99();
        converseLib.validationFailed(20);
        return;
      end
      if (SYNREC.ZZZCHGCT != SY0YW02.ZZZCHGCT[SYWINDXA])
        converseLib.validationFailed(104); /* Data Modified*/
        set SY0YM005.SY0YMCAT[SYWINDXA] cursor, bold;
      else
        SY0YW01.SY0YWSCF = "Y"; /* something changed*/
        if (SY0YM005.SY0YMCAT[SYWINDXA] != " "
         && SY0YM005.SY0YMCAT[SYWINDXA] != SYNREC.SYRCATID)
          SY0YS5R(); /* Need to do Delete & Add*/
        else
          SY0YS5U(); /* Can just do Update*/
        end
      end
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
  end

end // end SY0Y650

// Insert into Catalog Tble
Function SY0Y700()

  TA2REC.TA2DTOPT = "GETDATE"; /* first get date for zz stuff*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0) /* good return*/
    SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  else
    TA1REC.TA1LOCAT[1] = "SY0Y700";
    TA1REC.TA1LOCAT[2] = "TA0040";
    TA1REC.TA1LOCAT[3] = TA2REC.TA2RTNCD;
    SY0YS99();
  end

  SY0YW01.SY0YWSCF = "N"; /* nothings changed yet*/
  SQLCA.VAGen_SQLCODE = 0;
  SYWREC.SYWINDXA = 10; /* init index*/
  while (SYWREC.SYWINDXA >= 1
   && SQLCA.VAGen_SQLCODE == 0)
    if (SY0YM005.SY1STNBR[SYWINDXA] == " "
     && SY0YM005.SY2CLRID[SYWINDXA] == " "
     && SY0YM005.XDMCD[SYWINDXA] == " ")
      /* NEXT SENTENCE*/
    else
      set SYNREC empty;
      SYNREC.SYRCATID = SY0YM005.SYRCATID;
      SYNREC.SYNCTPGN = SY0YM005.SYNCTPGN;
      SYNREC.XGPCD = SY0YM005.XGPCD;
      SYNREC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
      SYNREC.SY2CLRID = SY0YM005.SY2CLRID[SYWINDXA];
      SYNREC.XDMCD = SY0YM005.XDMCD[SYWINDXA];
      SYNREC.ZZZSDT = SYWREC.ZZZSDT;
      SYNREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
      SYNREC.ZZZCHGTM = SYWREC.ZZZCHGTM;
      call "IO4880" ("A ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE != 0)
        TA1REC.TA1LOCAT[1] = "SY0Y650";
        TA1REC.TA1TBLVU = "VCATLG01";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY;
        SY0YS99();
        converseLib.validationFailed(20);
      end
      SY0YW01.SY0YWSCF = "Y"; /* somethings changed*/
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
  end

   /* Clear screen and set-up Last Entry*/
  SY0YM005.SY0YMLGP = " ";
  SY0YM005.SY0YMLSY = " ";
  SY0YM005.SY0YMLCL = " ";
  SY0YM005.SY0YMLDM = " ";
  SYWREC.SYWINDXA = 10; /* init index*/
  while (SYWREC.SYWINDXA >= 1)
    if (SY0YM005.SY1STNBR[SYWINDXA] == " "
     && SY0YM005.SY2CLRID[SYWINDXA] == " "
     && SY0YM005.XDMCD[SYWINDXA] == " ")
      /* NEXT SENTENCE*/
    else
      if (SY0YM005.SY0YMLSY == " ")
        SY0YM005.SY0YMLGP = SY0YM005.XGPCD;
        SY0YM005.SY0YMLSY = SY0YM005.SY1STNBR[SYWINDXA];
        SY0YM005.SY0YMLCL = SY0YM005.SY2CLRID[SYWINDXA];
        SY0YM005.SY0YMLDM = SY0YM005.XDMCD[SYWINDXA];
      end
      SY0YM005.SY1STNBR[SYWINDXA] = " ";
      SY0YM005.SY2CLRID[SYWINDXA] = " ";
      SY0YM005.XDMCD[SYWINDXA] = " ";
      SY0YM005.SY1SSTNM[SYWINDXA] = " ";
      SY0YM005.SY2CLRAB[SYWINDXA] = " ";
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
  end

  set SY0YM005.SY1STNBR[1] cursor;

end // end SY0Y700

// Reset Screen Attributes
Function SY0YS01()

   /* Reset screen attributes to defined*/

  if (SY0YW01.SY0YWTBF == "T") /* working with top half*/
    set SY0YM001.XGPCD initialAttributes;
    set SY0YM001.SY1STNBR initialAttributes;
    set SY0YM001.SY2CLRID initialAttributes;
    set SY0YM001.XDMCD initialAttributes;
  else /* working with bottom half*/
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= SY0YW01.SY0YWMAX)
      set SY0YM001.SY0YMACT[SYWINDXA] initialAttributes;
      set SY0YM001.SYRCATID[SYWINDXA] initialAttributes;
      set SY0YM001.SYNCTPGN[SYWINDXA] initialAttributes;
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
  end
  SY0YM001.SYMSCMSG = " ";
  set SY0YM001.CATOAP initialAttributes;
  set SY0YM001.CAITEM initialAttributes;

end // end SY0YS01

// Check PF keys
Function SY0YS02()

   /* Check PF key entered by user*/

  if (converseVar.eventKey is enter)
    if (SY0YM001.CATOAP != " ")
      COMMAREA.CATOAP = SY0YM001.CATOAP;
      COMMAREA.CAITEM = SY0YM001.CAITEM;
      XSEXIT();
      set SY0YM001.CATOAP cursor, bold;
      SY0YM001.SYMSCMSG = COMMAREA.CAMSG;
      converseLib.validationFailed(1);
    end
    return;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY0YM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "SY0N";
    XSEXIT();
    SY0YM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY0YM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf5) /* change screens*/
    SY0YW01.SY0YWMAP = 005;
    SY0YW01.SY0YWTBF = "T";
    set SY0YM005 initial;
    set SY0YW02 empty;
    return;
  end

  if (converseVar.eventKey is pf12) /* validate*/
    return;
  end

  if (converseVar.eventKey is pa2)
    converseLib.clearScreen();
    
    converseLib.validationFailed(1);
    SY0YM001.SYMSCMSG = "Screen Refreshed - Please Continue";
    return;
  end

  converseLib.validationFailed(19); /* invalid PF key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    SY0YM001.SYMSCMSG = "WARNING - PA Key causes loss of Data";
  end

end // end SY0YS02

// Validate Screen Table
Function SY0YS21()

   /* This module will validate each line on the screen table*/

  if (SY0YM001.SY0YMACT[SYWINDXA] == "A" /* Add*/
   || SY0YM001.SY0YMACT[SYWINDXA] == "C" /* Change*/
   || SY0YM001.SY0YMACT[SYWINDXA] == "D" /* Delete*/
   || SY0YM001.SY0YMACT[SYWINDXA] == " ") /* No Action*/
    /* next sentence (these values ok)*/
  else
    converseLib.validationFailed(154); /* valid values are A,C,D or Blank*/
    set SY0YM001.SY0YMACT[SYWINDXA] cursor, bold;
    return; /* cannot continue validations*/
  end

  if (SY0YM001.SY0YMACT[SYWINDXA] == "A") /* Trying to Add*/
    if (SY0YW01.SYRCATID[SYWINDXA] != " ") /* existing catalog*/
      converseLib.validationFailed(155); /* must use add on blank line*/
      SY0YM001.SYRCATID[SYWINDXA] = SY0YW01.SYRCATID[SYWINDXA];
      SY0YM001.SYNCTPGN[SYWINDXA] = SY0YW01.SYNCTPGN[SYWINDXA];
      set SY0YM001.SY0YMACT[SYWINDXA] cursor, bold;
      return;
    end
    if (SY0YM001.SYNCTPGN[SYWINDXA] == 0) /* page is zero*/
      converseLib.validationFailed(156); /* page must be non-zero*/
      set SY0YM001.SYNCTPGN[SYWINDXA] cursor, bold;
    end
    if (SY0YM001.SYRCATID[SYWINDXA] in SYRTBL.SYRCATID)
      SY0YM001.SYRDESC[SYWINDXA] = SYRTBL.SYRDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(3); /* invalid code*/
      set SY0YM001.SYRCATID[SYWINDXA] cursor, bold;
    end
  end

  if (SY0YM001.SY0YMACT[SYWINDXA] == "C") /* Trying to Change*/
    if (SY0YW01.SYRCATID[SYWINDXA] == " ") /* no existing data*/
      converseLib.validationFailed(157); /* must have existing data to chg*/
      set SY0YM001.SY0YMACT[SYWINDXA] cursor, bold;
      return;
    end
    if (SY0YM001.SYNCTPGN[SYWINDXA] == 0) /* page is zero*/
      converseLib.validationFailed(156); /* page must be non-zero*/
      set SY0YM001.SYNCTPGN[SYWINDXA] cursor, bold;
    end
    if (SY0YM001.SYRCATID[SYWINDXA] in SYRTBL.SYRCATID)
      SY0YM001.SYRDESC[SYWINDXA] = SYRTBL.SYRDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(3); /* invalid code*/
      set SY0YM001.SYRCATID[SYWINDXA] cursor, bold;
    end
    if (SY0YM001.SYRCATID[SYWINDXA] == SY0YW01.SYRCATID[SYWINDXA]
     && SY0YM001.SYNCTPGN[SYWINDXA] == SY0YW01.SYNCTPGN[SYWINDXA])
      converseLib.validationFailed(73); /* please enter data for update*/
      set SY0YM001.SYNCTPGN[SYWINDXA] bold;
      set SY0YM001.SYRCATID[SYWINDXA] cursor, bold;
    end
  end

  if (SY0YM001.SY0YMACT[SYWINDXA] == "D") /* Trying to Delete*/
    if (SY0YM001.SYRCATID[SYWINDXA] != SY0YW01.SYRCATID[SYWINDXA]
     || SY0YM001.SYNCTPGN[SYWINDXA] != SY0YW01.SYNCTPGN[SYWINDXA])
      converseLib.validationFailed(158); /* cannot change data with delete*/
      SY0YM001.SYRCATID[SYWINDXA] = SY0YW01.SYRCATID[SYWINDXA];
      SY0YM001.SYNCTPGN[SYWINDXA] = SY0YW01.SYNCTPGN[SYWINDXA];
      set SY0YM001.SY0YMACT[SYWINDXA] cursor, bold;
    end
    if (SY0YW01.SYRCATID[SYWINDXA] == " ") /* no data on line*/
      converseLib.validationFailed(157); /* delete must be used on existing line*/
      set SY0YM001.SY0YMACT[SYWINDXA] cursor, bold;
    end
  end

  if (SY0YM001.SY0YMACT[SYWINDXA] == " ") /* No action*/
    if (SY0YM001.SYRCATID[SYWINDXA] != SY0YW01.SYRCATID[SYWINDXA]
     || SY0YM001.SYNCTPGN[SYWINDXA] != SY0YW01.SYNCTPGN[SYWINDXA])
      converseLib.validationFailed(159); /* must enter action code if changes*/
      set SY0YM001.SY0YMACT[SYWINDXA] cursor, bold;
    end
  end

  if (converseVar.validationMsgNum != 0) /* we have errors*/
    return; /* so don't continue*/
  end

   /* Now on an add or change make sure the catalog id doesn't*/
   /* exist allready.*/
  if (SY0YM001.SY0YMACT[SYWINDXA] == "A"
   || SY0YM001.SY0YMACT[SYWINDXA] == "C")
    SYWREC.SYWINDXB = 1;
    while (SYWREC.SYWINDXB <= SY0YW01.SY0YWMAX)
      if (SY0YM001.SYRCATID[SYWINDXA] == SY0YM001.SYRCATID[SYWINDXB]
       && SYWREC.SYWINDXA != SYWREC.SYWINDXB)
        converseLib.validationFailed(160); /* duplicate catalog ids*/
        set SY0YM001.SYRCATID[SYWINDXA] cursor, bold;
        SYWREC.SYWINDXB = SY0YW01.SY0YWMAX;
      end
      SYWREC.SYWINDXB = SYWREC.SYWINDXB + 1;
    end
  end

end // end SY0YS21

// Add Catalog Row
Function SY0YS31()

   /* This statement group will add records to the catalog*/
   /* table.*/

  set SYNREC empty;
  SYNREC.XGPCD = SY0YM001.XGPCD;
  SYNREC.SY1STNBR = SY0YM001.SY1STNBR;
  SYNREC.SY2CLRID = SY0YM001.SY2CLRID;
  SYNREC.XDMCD = SY0YM001.XDMCD;
  SYNREC.SYRCATID = SY0YM001.SYRCATID[SYWINDXA];
  SYNREC.SYNCTPGN = SY0YM001.SYNCTPGN[SYWINDXA];
  SYNREC.ZZZSDT = SYWREC.ZZZSDT;
  SYNREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SYNREC.ZZZCHGTM = SYWREC.ZZZCHGTM;
  call "IO4880" ("A ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS31";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

end // end SY0YS31

// Update Catalog Row
Function SY0YS32()

   /* This statement group will update records to the catalog*/
   /* table.*/

  set SYNREC empty;
  SYNREC.XGPCD = SY0YM001.XGPCD;
  SYNREC.SY1STNBR = SY0YM001.SY1STNBR;
  SYNREC.SY2CLRID = SY0YM001.SY2CLRID;
  SYNREC.XDMCD = SY0YM001.XDMCD;
  SYNREC.SYRCATID = SY0YM001.SYRCATID[SYWINDXA];
  call "IO4880" ("S ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100) /* someone deleted it*/
    converseLib.validationFailed(104); /* data modified*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1LOCAT[1] = "SY0YS32";
      TA1REC.TA1TBLVU = "VCATLG01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY0YS99();
      converseLib.validationFailed(20);
      return;
    end
  end
   /* check if someone else changed it*/
  if (SYNREC.ZZZCHGCT != SY0YW01.ZZZCHGCT[SYWINDXA])
    converseLib.validationFailed(104); /* data modified*/
    return;
  end
  SYNREC.SYNCTPGN = SY0YM001.SYNCTPGN[SYWINDXA];
  SYNREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SYNREC.ZZZCHGTM = SYWREC.ZZZCHGTM;
  call "IO4880" ("U ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS32";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

end // end SY0YS32

// Delete Catalog Row
Function SY0YS33()

   /* This statement group will delete rows in the catalog*/
   /* table.*/

  set SYNREC empty;
  SYNREC.XGPCD = SY0YM001.XGPCD;
  SYNREC.SY1STNBR = SY0YM001.SY1STNBR;
  SYNREC.SY2CLRID = SY0YM001.SY2CLRID;
  SYNREC.XDMCD = SY0YM001.XDMCD;
   /* NOTE: If the catalog id changes we have to delete the*/
   /* old record and add the new one. so check for change.*/
  if (SY0YM001.SY0YMACT[SYWINDXA] == "C") /* in change mode*/
    SYNREC.SYRCATID = SY0YW01.SYRCATID[SYWINDXA]; /* old record*/
  else /* user requesting delete, use catalog*/
                                   /* id on screen*/
    SYNREC.SYRCATID = SY0YM001.SYRCATID[SYWINDXA];
  end
  call "IO4880" ("S ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100) /* someone deleted it*/
    converseLib.validationFailed(104); /* data modified*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1LOCAT[1] = "SY0YS33";
      TA1REC.TA1LOCAT[2] = "FETCH";
      TA1REC.TA1TBLVU = "VCATLG01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY0YS99();
      converseLib.validationFailed(20);
      return;
    end
  end
   /* check if someone else changed it*/
  if (SYNREC.ZZZCHGCT != SY0YW01.ZZZCHGCT[SYWINDXA])
    converseLib.validationFailed(104); /* data modified*/
    return;
  end
  call "IO4880" ("D ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS33";
    TA1REC.TA1LOCAT[2] = "DELETE";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

end // end SY0YS33

// Get first Color in Catalog
Function SY0YS34()

  SYNREC.XGPCD = SY0YM001.XGPCD;
  SYNREC.SY1STNBR = SY0YM001.SY1STNBR;
  SYNREC.SY2CLRID = "*";
  SYNREC.XDMCD = "*";
  call "IO4880" ("S1", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS34";
    TA1REC.TA1LOCAT[2] = "OPEN";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99(); /* report error*/
    converseLib.validationFailed(21); /* color table error*/
    set SY0YM001.SY2CLRID cursor, bold;
    set SY0YM001.XDMCD bold;
    return;
  end

  call "IO4880" ("N1", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0) /* found data*/
    SY0YM001.SY2CLRID = SYNREC.SY2CLRID;
    SY0YM001.XDMCD = SYNREC.XDMCD;
  else
    if (SQLCA.VAGen_SQLCODE != 100) /* we have DB2 trouble*/
      TA1REC.TA1LOCAT[1] = "SY0YS34";
      TA1REC.TA1LOCAT[2] = "FETCH";
      TA1REC.TA1TBLVU = "VCATLG01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY0YS99(); /* report error*/
      converseLib.validationFailed(21); /* color table error*/
      set SY0YM001.SY2CLRID cursor, bold;
      set SY0YM001.XDMCD bold;
      return;
    end
  end

  call "IO4880" ("C1", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0Y105";
    TA1REC.TA1LOCAT[2] = "CLOSE";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99(); /* report error*/
    converseLib.validationFailed(21); /* color table error*/
    set SY0YM001.SY2CLRID cursor, bold;
    set SY0YM001.XDMCD bold;
    return;
  end

end // end SY0YS34

// Reset Screen Attributes
Function SY0YS51()

   /* Reset screen attributes to defined*/

  set SY0YM005.XGPCD initialAttributes;
  set SY0YM005.SYRCATID initialAttributes;
  set SY0YM005.SYNCTPGN initialAttributes;
  SYWREC.SYWINDXA = 1;
  while (SYWREC.SYWINDXA <= 10)
    if (SY0YW01.SY0YWMOD == "A")
      set SY0YM005.SY1STNBR[SYWINDXA] initialAttributes;
      set SY0YM005.SY2CLRID[SYWINDXA] initialAttributes;
      set SY0YM005.XDMCD[SYWINDXA] initialAttributes;
    end
    if (SY0YW01.SY0YWMOD == "C")
      set SY0YM005.SY0YMCAT[SYWINDXA] initialAttributes;
      set SY0YM005.SY0YMPGE[SYWINDXA] initialAttributes;
      set SY0YM005.SY0YMDFL[SYWINDXA] initialAttributes;
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end
  SY0YM005.SYMSCMSG = " ";
  set SY0YM005.CATOAP initialAttributes;
  set SY0YM005.CAITEM initialAttributes;

end // end SY0YS51

// Check PF keys
Function SY0YS52()

   /* Check PF key entered by user*/

  if (converseVar.eventKey is enter)
    if (SY0YM005.CATOAP != " ")
      COMMAREA.CATOAP = SY0YM005.CATOAP;
      COMMAREA.CAITEM = SY0YM005.CAITEM;
      XSEXIT();
      set SY0YM005.CATOAP cursor, bold;
      SY0YM005.SYMSCMSG = COMMAREA.CAMSG;
      converseLib.validationFailed(1);
    end
    return;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY0YM005.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "SY0N";
    XSEXIT();
    SY0YM005.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY0YM005.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf5) /* change screens*/
    SY0YW01.SY0YWMAP = 001;
    SY0YW01.SY0YWTBF = "T";
    set SY0YM001 initial;
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= 9)
      SY0YW01.SYRCATID[SYWINDXA] = " ";
      SY0YW01.SYNCTPGN[SYWINDXA] = 0;
      SY0YW01.ZZZCHGCT[SYWINDXA] = 0;
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
    return;
  end

  if (converseVar.eventKey is pf7 /* scroll forward*/
   || converseVar.eventKey is pf8) /* scroll backward*/
    if (SY0YW01.SY0YWMOD == "C" /* only valid in change mode*/
     || SY0YW01.SY0YWMOD == "I") /* or inquiry mode*/
      return;
    end
  end

  if (converseVar.eventKey is pf12) /* validate*/
    return;
  end

  if (converseVar.eventKey is pf13 /* Change modes*/
   && SY0YW01.SY0YWMOD != "I")     /* and not inquiry*/
    return;
  end

  if (converseVar.eventKey is pa2)
    converseLib.clearScreen();
    
    converseLib.validationFailed(1);
    SY0YM005.SYMSCMSG = "Screen Refreshed - Please Continue";
    return;
  end

  converseLib.validationFailed(19); /* invalid PF key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    SY0YM005.SYMSCMSG = "WARNING - PA Key causes loss of Data";
  end

end // end SY0YS52

// Load Array Line
Function SY0YS5A()

   /* First check style number*/

  SY1REC.XGPCD = SY0YM005.XGPCD;
  SY1REC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY0YM005.SY1SSTNM[SYWINDXA] = SY1REC.SY1SSTNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style does not exist*/
      set SY0YM005.SY1STNBR[SYWINDXA] cursor, bold;
      return;
    else
      TA1REC.TA1LOCAT[1] = "SY0YS5A";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1TBLKE = SY1REC.SY1KEY;
      SY0YS99(); /* report error*/
      converseLib.validationFailed(20); /* style table error*/
      return;
    end
  end

   /* Now validate color/dim codes*/

  if (SY0YM005.XDMCD[SYWINDXA] == " ")
    SY0YM005.XDMCD[SYWINDXA] = "00";
  end
  SY2REC.XGPCD = SY0YM005.XGPCD;
  SY2REC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
  SY2REC.SY2CLRID = SY0YM005.SY2CLRID[SYWINDXA];
  SY2REC.XDMCD = SY0YM005.XDMCD[SYWINDXA];
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY0YM005.SY2CLRAB[SYWINDXA] = SY2REC.SY2CLRAB;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(7); /* color does not exist*/
      set SY0YM005.SY2CLRID[SYWINDXA] cursor, bold;
      return;
    else
      TA1REC.TA1LOCAT[1] = "SY0YS5A";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY0YS99(); /* report error*/
      converseLib.validationFailed(21); /* color table error*/
      return;
    end
  end

   /* Now check for duplicate page numbers*/

  SYNREC.SYRCATID = SY0YM005.SYRCATID;
  SYNREC.XGPCD = SY0YM005.XGPCD;
  SYNREC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
  SYNREC.SY2CLRID = SY0YM005.SY2CLRID[SYWINDXA];
  SYNREC.XDMCD = SY0YM005.XDMCD[SYWINDXA];
  call "IO4880" ("S ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(160); /* duplicate catalog*/
    set SY0YM005.SY1STNBR[SYWINDXA] cursor, bold;
    set SY0YM005.SY2CLRID[SYWINDXA] bold;
    set SY0YM005.XDMCD[SYWINDXA] bold;
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[1] = "SY0YS5A";
      TA1REC.TA1TBLVU = "VCATLG01";
      SY0YS99(); /* report error*/
      converseLib.validationFailed(23); /* table error*/
      return;
    end
  end

end // end SY0YS5A

// Delete Catalog Row
Function SY0YS5D()

   /* This statement group will delete rows in the catalog*/
   /* table.*/

  SYNREC.SYRCATID = SY0YM005.SYRCATID;
  SYNREC.XGPCD = SY0YM005.XGPCD;
  SYNREC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
  SYNREC.SY2CLRID = SY0YM005.SY2CLRID[SYWINDXA];
  SYNREC.XDMCD = SY0YM005.XDMCD[SYWINDXA];
  call "IO4880" ("D ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[1] = "SY0YS5D";
    TA1REC.TA1LOCAT[2] = "DELETE";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

end // end SY0YS5D

// Load Array Line
Function SY0YS5L()

  SY1REC.XGPCD = SYNREC.XGPCD;
  SY1REC.SY1STNBR = SYNREC.SY1STNBR;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY0YW02.SY1SSTNM[SYWINDXA] = SY1REC.SY1SSTNM;
  else
    TA1REC.TA1LOCAT[1] = "SY0YS5L";
    TA1REC.TA1TBLVU = "VSTYLE01";
    TA1REC.TA1TBLKE = SY1REC.SY1KEY;
    SY0YS99(); /* report error*/
    converseLib.validationFailed(20); /* style table error*/
    return;
  end

  SY2REC.XGPCD = SYNREC.XGPCD;
  SY2REC.SY1STNBR = SYNREC.SY1STNBR;
  SY2REC.SY2CLRID = SYNREC.SY2CLRID;
  SY2REC.XDMCD = SYNREC.XDMCD;
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY0YW02.SY2CLRAB[SYWINDXA] = SY2REC.SY2CLRAB;
  else
    TA1REC.TA1LOCAT[1] = "SY0YS5L";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99(); /* report error*/
    converseLib.validationFailed(21); /* color table error*/
    return;
  end

end // end SY0YS5L

// Delete & Insert Catalog Row
Function SY0YS5R()

   /* This statement group will delete rows in the catalog*/
   /* table.*/

  call "IO4880" ("D ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS5R";
    TA1REC.TA1LOCAT[2] = "DELETE";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

   /* This statement group will add records to the catalog*/
   /* table.*/

  SYNREC.SYRCATID = SY0YM005.SY0YMCAT[SYWINDXA];
  SYNREC.SYNCTPGN = SY0YM005.SY0YMPGE[SYWINDXA];
  SYNREC.ZZZSDT = SYWREC.ZZZSDT;
  SYNREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SYNREC.ZZZCHGTM = SYWREC.ZZZCHGTM;
  call "IO4880" ("A ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS5R";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

end // end SY0YS5R

// Rebuild Map M005 Lower
Function SY0YS5S()
  SYWREC.SYWINDXA = 1; /* init index*/
  SYWREC.SYWINDXB = SY0YW02.SY0YW-CURR-LINE;
  while (SYWREC.SYWINDXA <= 10)
    if (SYWREC.SYWINDXB > SY0YW02.SY0YW-NBR-ROWS)
      SY0YM005.SY1STNBR[SYWINDXA] = " ";
      SY0YM005.SY2CLRID[SYWINDXA] = " ";
      SY0YM005.XDMCD[SYWINDXA] = " ";
      SY0YM005.SY1SSTNM[SYWINDXA] = " ";
      SY0YM005.SY2CLRAB[SYWINDXA] = " ";
    else
      SY0YM005.SY1STNBR[SYWINDXA] = SY0YW02.SY1STNBR[SYWINDXB];
      SY0YM005.SY2CLRID[SYWINDXA] = SY0YW02.SY2CLRID[SYWINDXB];
      SY0YM005.XDMCD[SYWINDXA] = SY0YW02.XDMCD[SYWINDXB];
      SY0YM005.SY1SSTNM[SYWINDXA] = SY0YW02.SY1SSTNM[SYWINDXB];
      SY0YM005.SY2CLRAB[SYWINDXA] = SY0YW02.SY2CLRAB[SYWINDXB];
    end
    SY0YM005.SY0YMCAT[SYWINDXA] = " ";
    SY0YM005.SY0YMPGE[SYWINDXA] = 0;
    SY0YM005.SY0YMDFL[SYWINDXA] = " ";
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    SYWREC.SYWINDXB = SYWREC.SYWINDXB + 1;
  end

end // end SY0YS5S

// Update Catalog Row
Function SY0YS5U()

   /* This statement group will update records to the catalog*/
   /* table.*/

  SYNREC.SYNCTPGN = SY0YM005.SY0YMPGE[SYWINDXA];
  SYNREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SYNREC.ZZZCHGTM = SYWREC.ZZZCHGTM;
  call "IO4880" ("U ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0YS5U";
    TA1REC.TA1TBLVU = "VCATLG01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY0YS99();
    converseLib.validationFailed(20);
  end

end // end SY0YS5U

// Validate Change data
Function SY0YS5V()


  if (SY0YM005.SY0YMCAT[SYWINDXA] == " " /* If no catalog entered*/
   && SY0YM005.SY0YMPGE[SYWINDXA] == 0   /* and no page number*/
   && SY0YM005.SY0YMDFL[SYWINDXA] == " ") /* and no del fl*/
    return; /* no changes so get out*/
  end

  if (SY0YM005.SY0YMDFL[SYWINDXA] == "Y") /* If requesting delete*/
    if (SY0YM005.SY0YMCAT[SYWINDXA] != " " /* If entry here*/
     || SY0YM005.SY0YMPGE[SYWINDXA] != 0)  /* or here*/
      converseLib.validationFailed(158); /* Cannot modify with delete*/
      set SY0YM005.SY0YMDFL[SYWINDXA] cursor, bold;
    end
  else
    if (SY0YM005.SY0YMDFL[SYWINDXA] == "N"
     || SY0YM005.SY0YMDFL[SYWINDXA] == " ")
       /* NEXT SENTENCE (Values OK)*/
    else
      converseLib.validationFailed(36); /* Value must be Y or N*/
      set SY0YM005.SY0YMDFL[SYWINDXA] cursor, bold;
    end
  end

  if (SY0YM005.SY0YMCAT[SYWINDXA] != " ") /* If catalog entered*/
    if (SY0YM005.SY0YMCAT[SYWINDXA] in SYRTBL.SYRCATID) /* OK?*/
      /* NEXT SENTENCE*/
    else
      set SY0YM005.SY0YMCAT[SYWINDXA] cursor, bold;
      converseLib.validationFailed(3); /* invalid code*/
      return;
    end
  end

  if (SY0YM005.SY0YMCAT[SYWINDXA] != " " /* If catalog entered*/
   && SY0YM005.SY0YMPGE[SYWINDXA] <= 0)  /* page nbr > zero*/
    set SY0YM005.SY0YMPGE[SYWINDXA] cursor, bold;
    converseLib.validationFailed(40); /* required field*/
  end

   /* Now check that product is not allready in catalog*/

  if (SY0YM005.SY0YMCAT[SYWINDXA] != " ") /* If catalog entered*/
    SYNREC.XGPCD = SY0YM005.XGPCD;
    SYNREC.SY1STNBR = SY0YM005.SY1STNBR[SYWINDXA];
    SYNREC.SY2CLRID = SY0YM005.SY2CLRID[SYWINDXA];
    SYNREC.XDMCD = SY0YM005.XDMCD[SYWINDXA];
    SYNREC.SYRCATID = SY0YM005.SY0YMCAT[SYWINDXA];
    call "IO4880" ("S ", SQLCA, SYNREC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      converseLib.validationFailed(160); /* Product is in this catalog*/
      set SY0YM005.SY0YMCAT[SYWINDXA] cursor, bold;
    else
      if (SQLCA.VAGen_SQLCODE != 100)
        TA1REC.TA1LOCAT[1] = "SY0YS5V";
        TA1REC.TA1TBLVU = "VCATLG01";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY;
        SY0YS99(); /* report error*/
        converseLib.validationFailed(23); /* Table error*/
        return;
      end
    end
  end

end // end SY0YS5V

// DB2 Abend Routine
Function SY0YS99()

   /* This routine will call TA0020*/

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "SY0Y";
  TA1REC.TA1MAP = "SY0YM001";
  TA1REC.TA1DBASE = "DPROD";
  move SQLCA to ERRSQLCA withV60Compat;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};

end // end SY0YS99

//*** RECORD=SY0YW01 ****
// *
// *  Working Storage Record for SY0Y
// *
// ***********************
Record SY0YW01 type basicRecord
  10 SY0YWEOA SY0YWEOA ; 
  10 SY0YWMOD SY0YWMOD ; 
  10 SY0YWREV SY0YWREV ; 
  10 SY0YWMAP SY0YWMAP ; 
  10 SY0YWTBF SY0YWTBF ; 
  10 SY0YWBLD SY0YWBLD ; 
  10 SY0YWEOD SY0YWEOD ; 
  10 SY0YWUPD SY0YWUPD ; 
  10 SY0YWSCF SY0YWSCF ; 
  10 SY0YWMAX SY0YWMAX ; 
  10 XGPDESC XGPDESC ; 
  10 SY0YWARY SY0YWARY [9] ; 
    15 SYRCATID SYRCATID ; 
    15 SYNCTPGN SYNCTPGN ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end SY0YW01

//*** RECORD=SY0YW02 ****
// *
// *  Working Storage Record for SY0Y
// *
// ***********************
Record SY0YW02 type basicRecord
  10 SYRCATID SYRCATID ; 
  10 SYNCTPGN SYNCTPGN ; 
  10 SY0YW-NBR-ROWS SY0YW-NBR-ROWS ; 
  10 SY0YW-CURR-LINE SY0YW-CURR-LINE ; 
  10 SY0YW-CAT-ARRAY SY0YW-CAT-ARRAY [200] ; 
    15 XGPCD XGPCD ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 XDMCD XDMCD ; 
    15 SY1SSTNM SY1SSTNM ; 
    15 SY2CLRAB SY2CLRAB ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end SY0YW02

// Array of Products for Catalog
DataItem SY0YW-CAT-ARRAY char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current row on top of Screen
DataItem SY0YW-CURR-LINE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Nbr of rows in array
DataItem SY0YW-NBR-ROWS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Array of Catalog info
DataItem SY0YWARY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Build Screen Array (Y/N)
DataItem SY0YWBLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Application Y/N
DataItem SY0YWEOA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Data Flag (Y/N)
DataItem SY0YWEOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Control what map to display
DataItem SY0YWMAP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Maximum lines on screen
DataItem SY0YWMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Processing mode (A/C/I)
DataItem SY0YWMOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Program Revision Number
DataItem SY0YWREV char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Has something Changed (Y/N)
DataItem SY0YWSCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Top/Bottom Flag
DataItem SY0YWTBF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Do Update/Add logic (Y/N)
DataItem SY0YWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

