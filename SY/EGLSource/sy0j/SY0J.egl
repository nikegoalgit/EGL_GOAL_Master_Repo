package sy0j;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY0J ****
// ************************************************************
// *
// *       Product Cost Inquiry
// *
// ************************************************************
// *Maintenance History:
// *Req#   Who     When      Remarks
// *-----  ------  --------  ----------------------------------
// *P0104  MHALST  03-28-89  Remove use of XTVCD.
// *       VCowan  04-17-89  added XSSEGTR logic.
// -spl-   jwood   04-17-89  added noncsp option logic...
// *       MHALST  11-13-89  Data base changes
// *       MHALST  04-02-90  Data base changes, remove XTV
// *       MHALST  02-11-91  Data base changes
// *       MHALST  09-16-91  Change code to display price by
// *                         color row if present.
// *       MHALST  02-08-94  Change screen to match SY0K.
// *       MHALST  10-02-95  Add calls to SY1550 & MN0V.
// *       MHALST  11-01-95  Relax country/currency checks.
// *       NGANGO  11-19-97  Y2K MODIFICATION .
// *                     Regenerated to pickup XX0XS01 changes.
// *       MHALST  12-04-97  Recompile to fix defaulting.
// *       JNARAS 02-17-99 Removed  the $ symbol from the map
// *                       SY0JM001 in the 1st quality costing
// *                       and the second quality costing amt.
// *                       fields.
// ************************************************************
// *********************
Program SY0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  SY0JWREC SY0JWREC; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY5REC SY5REC; // record
  SY6REC SY6REC; // record
  SY8REC SY8REC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VZFC0001 VZFC0001; // record
  WSY1550 WSY1550; // record
  XP0GW01 XP0GW01; // record
  XP0GW02 XP0GW02; // record
  XX0XW02 XX0XW02; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYRGTBL {deleteAfterUse = yes}; // table
  use XCOTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use SY0JM.SY0JM001,  // forms
      SY0JM.SY0JM002, 
      SY0JM.XP0GM001, 
      SY0JM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0J001: SY0J001();


    goto SY0J005;


    SY0J005: SY0J005();


    if (converseVar.eventKey is enter)
      if (SYWREC.SYWMSGFL == "N")
        goto SY0J010;
      else
        goto SY0J005;
      end
    end

    if (converseVar.eventKey is pa2)
      goto SY0J001;
    end

    goto SY0J005;

    SY0J010: SY0J010();


    if (SYWREC.SYWMSGFL == "Y")
      goto SY0J010;
    end

    if (converseVar.eventKey is enter)
      if (SY0JM001.SY1STNBR is modified
       || SY0JM001.SY2CLRID is modified
       || SY0JM001.XGPCD is modified
       || SY0JM001.XDMCD is modified
       || SY0JM001.XCOCD is modified
       || SY0JM001.XCTCD is modified
       || SY0JM001.ZFC-CRCY-CD is modified)
        goto SY0J010;
      end
      if (SY0JM001.SY0JM-DH-FG1 == "Y")
        goto SY0J020;
      end
      if (SY0JM001.SY0JM-DH-FG2 == "Y")
        goto SY0J020;
      end
    end


    if (converseVar.eventKey is pa2)
      goto SY0J001;
    end

    goto SY0J005;



    SY0J020: SY0J020();




    if (SYWREC.SYWMSGFL == "Y")
      goto SY0J020;
    end


    if (converseVar.eventKey is pf7)
      if (SY0JWREC.SY0JWFIN <= 1)
        converseLib.validationFailed(69); /* CANNOT SCROLL BACK*/
        SYWREC.SYWMSGFL = "Y";
        goto SY0J020;
      else
        SY0JWREC.SY0JWFIN = SY0JWREC.SY0JWFIN - 10;
        SY0JWREC.SY0JWLIN = SY0JWREC.SY0JWFIN;
        goto SY0J025;
      end
    end


    if (converseVar.eventKey is pf8)
      if (SY0JWREC.SY0JWLIN < SY0JWREC.SY0JWCNT)
        goto SY0J025;
      else
        converseLib.validationFailed(70); /* CANNOT SCROLL FORWARD*/
        SYWREC.SYWMSGFL = "Y";
        goto SY0J020;
      end
    end

    if (converseVar.eventKey is pa2)
      goto SY0J001;
    end

    if (converseVar.eventKey is pf3
     || converseVar.eventKey is enter)
      goto SY0J010;
    end

    goto SY0J005;



    SY0J025: SY0J025();




    if (SYWREC.SYWMSGFL == "Y")
      goto SY0J025;
    end


    if (converseVar.eventKey is pf7)
      if (SY0JWREC.SY0JWFIN == 1)
        converseLib.validationFailed(69); /* CANNOT SCROLL BACK*/
        SYWREC.SYWMSGFL = "Y";
        goto SY0J025;
      else
        SY0JWREC.SY0JWFIN = SY0JWREC.SY0JWFIN - 10;
        SY0JWREC.SY0JWLIN = SY0JWREC.SY0JWFIN;
        goto SY0J025;
      end
    end


    if (converseVar.eventKey is pf8)
      if (SY0JWREC.SY0JWLIN < SY0JWREC.SY0JWCNT)
        goto SY0J025;
      else
        converseLib.validationFailed(70); /* CANNOT SCROLL FORWARD*/
        SYWREC.SYWMSGFL = "Y";
        goto SY0J025;
      end
    end

    if (converseVar.eventKey is pa2)
      goto SY0J001;
    end

    if (converseVar.eventKey is pf3
     || converseVar.eventKey is enter)
      goto SY0J010;
    end

    goto SY0J005;



  end // end main
end // end SY0J

// init. application
Function SY0J001()


       /* *****************************************/
       /* * 1. init. application.                **/
       /* *                                      **/
       /* *****************************************/

  XSENTRY(); /* security logic*/

  XSSEGTR(); /* set segemented transaction id*/

  set SY1REC empty;
  set SY2REC empty;
  set SY5REC empty;
  set SY6REC empty;
  set SY8REC empty;
  set SYWREC empty;
  set XP0GW01 empty;
  set XP0GW02 empty;
  set XX0XW02 empty;
  set ZFCWREC empty;
  set SY0JWREC empty;

   /* Now, find out what region user is and set-up table of*/
   /* valid country/currenties the user can enter.*/
  set WSY1550 empty;
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE > 0)
    if (SYWREC.SYW-ALL-REGIONS-FL == "Y")
      SY0JWREC.XCTCD = "USA";
      SY0JWREC.ZFC-CRCY-CD = "USD";
    else
      XPSY009(); /* Get countries for region*/
      if (WSY1550-RETURN-CODE == 00
       && WSY1550-TABLE-SIZE == 1)
        SY0JWREC.XCTCD = WSY1550.XCT-CTRY-CD[1];
        SY0JWREC.ZFC-CRCY-CD = WSY1550.ZFC-CRCY-CD[1];
      end
    end
  else /* No region for user, tell them*/
    SY0JWREC.XCTCD = "USA";
    SY0JWREC.ZFC-CRCY-CD = "USD";
  end
  if (SY0JM001.XCTCD != " ")
    if (SY0JM001.XCTCD in XCTTBL.XCTCD)
      SY0JWREC.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
    SY0JS-GET-ZFC();
    SY0JWREC.ZFC-CRCY-DESC = SY0JM001.ZFC-CRCY-DESC;
  else
    set SY0JM001.XCTCD cursor;
  end


  SY0JS-CLR-MAP1();
  set SY0JM002 initial;

  SYWREC.SYWMSGFL = "N";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  SYWREC.SYWTODAY = TA2REC.TA2GRGGN;

end // end SY0J001

// init product cost inquiry map
Function SY0J005()


       /* *****************************************/
       /* * 1. set map to clear                  **/
       /* * 2. if the commarea.xgpcd is diff.    **/
       /* *    than the sywrec.xgpcd use the     **/
       /* *    sywrec.xgpcd because the user     **/
       /* *    must have transfered into this    **/
       /* *    application with the sywrec.xgpcd **/
       /* * 3. validate the gpc code.            **/
       /* *                                      **/
       /* *****************************************/



  if (SYWREC.SYWMSGFL == "N")
    SY0JS-CLR-MAP1();
    set SY0JM001.SY1STNBR cursor;

    if (SY0JM001.XGPCD == " ")
      if (SYWREC.XGPCD == " ")
        SY0JM001.XGPCD = COMMAREA.XGPCD;
      else
        if (SYWREC.XGPCD == COMMAREA.XGPCD)
          SY0JM001.XGPCD = COMMAREA.XGPCD;
        else
          SY0JM001.XGPCD = SYWREC.XGPCD;
        end
      end
    end
  end

  SY0JS1A(); /* validate gpc code*/

   /* ***********************************************************/
  converse SY0JM001 ;
   /* ***********************************************************/


  SYWREC.SYWMSGFL = "N";
  converseLib.validationFailed(0);
  SY0JM001.VAGen_EZEMSG = " ";
  SY0JM001.SYMSCMSG = " ";

       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY0JS1B();


end // end SY0J005

// get product data for inquiry
Function SY0J010()


  SY0JM001.SYMPRONM = "SY0J010";

  if (SYWREC.SYWMSGFL == "N")
    set SY0JM001.SY1STNBR cursor;
    SY0JS-POPUPS(); /* pop up window check*/
    SY0JS2A(); /* edit fields*/
    if (SYWREC.SYWMSGFL == "N")
      SY0JS2B(); /* get product data*/
    end
  end


  converse SY0JM001 ;



  converseLib.validationFailed(0);
  SY0JM001.VAGen_EZEMSG = " ";
  SY0JM001.SYMSCMSG = " ";
  SYWREC.SYWMSGFL = "N";

  SY0JS1B(); /* check pf keys*/





end // end SY0J010

// display cost history
Function SY0J020()




  if (SYWREC.SYWMSGFL == "N")
    set SY0JM002 empty;
    SY0JM002.SYMPRONM = "SY0J020";
    SY0JM002.SYMRVNBR = "00";
    SY0JM002.SYMCURDT = VGVar.currentShortGregorianDate;
    SY0JS3B(); /* move map1 key data*/
    SY0JS3C(); /* get cost history data*/
    SY0JS3F(); /* move cost history data to map*/

    if (SY0JWREC.SY0JWLIN < SY0JWREC.SY0JWCNT)
      converseLib.validationFailed(51);
    end
  end



  converse SY0JM002 ;


  SYWREC.SYWMSGFL = "N";
  converseLib.validationFailed(0);
  SY0JM002.VAGen_EZEMSG = " ";
  SY0JM002.SYMSCMSG = " ";


  SY0JS3A(); /* check pf keys*/




end // end SY0J020

// display cost history- scroll
Function SY0J025()



  SY0JM002.SYMPRONM = "SY0J025";

  if (SYWREC.SYWMSGFL == "N")
    SY0JS3F(); /* move cost history data to map*/

    if (SY0JWREC.SY0JWLIN < SY0JWREC.SY0JWCNT)
      converseLib.validationFailed(51);
    end
  end



  converse SY0JM002 ;


  SYWREC.SYWMSGFL = "N";
  converseLib.validationFailed(0);
  SY0JM002.VAGen_EZEMSG = " ";
  SY0JM002.SYMSCMSG = " ";


  SY0JS3A(); /* check pf keys*/




end // end SY0J025

// Clear and reset Map 001
Function SY0JS-CLR-MAP1()


       /* ******************************************/
       /* *  CLEAR AND RESET SY0JM001             **/
       /* ******************************************/

  set SY0JM001 initial;
  SY0JM001.SYMRVNBR = "02";
  SY0JM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0JM001.XGPCD = SYWREC.XGPCD;
  SY0JM001.XGPDESC = SY0JWREC.XGPDESC;
  SY0JM001.XCTCD = SY0JWREC.XCTCD;
  SY0JM001.XCTDESC = SY0JWREC.XCTDESC;
  SY0JM001.ZFC-CRCY-CD = SY0JWREC.ZFC-CRCY-CD;
  SY0JM001.ZFC-CRCY-DESC = SY0JWREC.ZFC-CRCY-DESC;
  SY0JM001.SY0JMVPP = "Style:";
  SY0JM001.SY0JM-HEADING1 = "1st Quality Costing";
  SY0JM001.SY0JM-HEADING2 = "2nd Quality Costing";
  SY0JM001.SY0JM-DH-PROMPT1 = "Display History?";
  SY0JM001.SY0JM-DH-PROMPT2 = "Display History?";
  SY0JM001.SY0JM-MNT-LABEL1 = "Date Last Maint:";
  SY0JM001.SY0JM-MNT-LABEL2 = "Date Last Maint:";


end // end SY0JS-CLR-MAP1

// get currency DB2 row
Function SY0JS-GET-ZFC()


       /* ******************************************/
       /* *     GET CURRENCY DESCRIPTION          **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  SY0JM001.ZFC-CRCY-DESC = " ";

  VZFC0001.ZFC-CRCY-CD = SY0JM001.ZFC-CRCY-CD;

  call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JM001.ZFC-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0JM001.VAGen_EZEMSG = "INVALID CURRENCY CODE";
      set SY0JM001.ZFC-CRCY-CD cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "SY0JS-   ";
      TA1REC.TA1LOCAT[2] = "GET-ZFC  ";
      TA1REC.TA1LOCAT[3] = "DC0060   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "CORP";
      TA1REC.TA1TBLVU = "VZFC0001";
      TA1TBLKE = VZFC0001.ZFC-CRCY-CD;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(23); /* corp table error....*/
      set SY0JM001.ZFC-CRCY-CD cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    end
  end

end // end SY0JS-GET-ZFC

// Check for & Display popups
Function SY0JS-POPUPS()

   /* Examine screen and display any pop-up requests to user*/

  XP0GW01.XP0GW-SEL-COLR-CD = SY0JM001.SY2CLRID;
  if (XP0GW01.XP0GW-SEL-COLR-CD1 == "?" /* We want pop-up*/
   || XP0GW01.XP0GW-SEL-COLR-CD2 == "?" 
   || XP0GW01.XP0GW-SEL-COLR-CD3 == "?")
    XP0GW01.XGPCD = SY0JM001.XGPCD;
    XP0GW01.SY1STNBR = SY0JM001.SY1STNBR;
    XP0G001(); /* so do it*/
    if (XP0GW02.XP0GWERR == "Y") /* we have an error*/
      SYWREC.SYWMSGFL = "Y";
      if (XP0GW02.XP0GWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (XP0GW02.XP0GWENR == 1) /* No colors found*/
        converseLib.validationFailed(7);
      end
      if (XP0GW02.XP0GWENR == 2) /* DB2 Error*/
        converseLib.validationFailed(21);
      end
    else
      if (XP0GW02.XP0GWPIX != 0) /* and user selected*/
        SY0JM001.SY2CLRID = XP0GW01.SY2CLRID[XP0GWPIX];
        SY0JM001.XDMCD = XP0GW01.XDMCD[XP0GWPIX];
      else
        SYWREC.SYWMSGFL = "Y";
        converseLib.validationFailed(59); /* No colors selected*/
      end
    end
  end


  if (SY0JM001.XCTCD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Country Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0JM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

  if (SY0JM001.ZFC-CRCY-CD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Currency Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPZFC-POP(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0JM001.ZFC-CRCY-CD = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
    end
  end

  converseLib.clearScreen();
   /* Refresh map*/

end // end SY0JS-POPUPS

// validate gpc code
Function SY0JS1A()


       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY0JM001.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY0JM001.XGPCD cursor, bold;
    SY0JM001.XGPDESC = "INVALID";
    SYWREC.SYWMSGFL = "Y";
  else
    if (SY0JM001.XGPCD in XGPTBL.XGPCD)
      SY0JM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      SY0JWREC.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    else
      set SY0JM001.XGPCD cursor, bold;
      converseLib.validationFailed(3); /* invalid code*/
      SY0JM001.XGPDESC = "INVALID";
      SYWREC.SYWMSGFL = "Y";
    end
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/



  if (converseVar.validationMsgNum == 0)
    if (SY0JM001.XGPCD == "02"
     && COMMAREA.CAILVL[2] == "N")
      set SY0JM001.XGPCD cursor, bold;
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      SY0JM001.XGPDESC = "INVALID";
      SYWREC.SYWMSGFL = "Y";
    else
      if (SY0JM001.XGPCD == "03"
       && COMMAREA.CAILVL[3] == "N")
        set SY0JM001.XGPCD cursor, bold;
        SY0JM001.XGPDESC = "INVALID CODE";
        converseLib.validationFailed(35); /* not authorized to access gpc*/
        SYWREC.SYWMSGFL = "Y";
      end
    end
  end



end // end SY0JS1A

// check pf keys & transfer
Function SY0JS1B()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/


  if (SY0JM001.CATOAP != " ")
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = SY0JM001.CATOAP;
      COMMAREA.CAITEM = " ";
      XSEXIT();
      SY0JM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      set SY0JM001.CATOAP cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    else
      converseLib.validationFailed(19);
      SYWREC.SYWMSGFL = "Y";
    end
  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pa2)
     /* NEXT SENTENCE*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "SY0I";
      XSEXIT();
      SY0JM001.SYMSCMSG = COMMAREA.CAMSG;
      SYWREC.SYWMSGFL = "Y";
    else
      if (converseVar.eventKey is pf4)
        XSPF4();
        SY0JM001.SYMSCMSG = COMMAREA.CAMSG;
        SYWREC.SYWMSGFL = "Y";
      else
        if (converseVar.eventKey is pf1)
          XSPF1();
          SY0JM001.SYMSCMSG = COMMAREA.CAMSG;
          SYWREC.SYWMSGFL = "Y";
        else
          converseLib.validationFailed(19); /* invalid pf key*/
          SYWREC.SYWMSGFL = "Y";
        end
      end
    end
  end


end // end SY0JS1B

// edit product key fields
Function SY0JS2A()

  set SY0JM001.ZFC-CRCY-CD normal;
  SY0JM001.ZFC-CRCY-DESC = " ";
  if (SY0JM001.ZFC-CRCY-CD != " ")
    SY0JS-GET-ZFC(); /* Validate code entered*/
  else
    SY0JM001.VAGen_EZEMSG = "PLEASE ENTER CURRENCY CODE";
    set SY0JM001.ZFC-CRCY-CD cursor, bold;
    SYWREC.SYWMSGFL = "Y";
  end

  set SY0JM001.XCTCD normal;
  SY0JM001.XCTDESC = " ";
  if (SY0JM001.XCTCD != " ")
    if (SY0JM001.XCTCD in XCTTBL.XCTCD)
      SY0JM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    else
      SY0JM001.VAGen_EZEMSG = "INVALID COST TYPE";
      set SY0JM001.XCTCD cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    end
  else
    set SY0JM001.XCTCD cursor, bold;
    SY0JM001.VAGen_EZEMSG = "PLEASE ENTER COUNTRY CODE";
    SYWREC.SYWMSGFL = "Y";
  end

   /* Now check that country/currency is valid for region*/
  if (SYWREC.SYWMSGFL == "N" /* If no errors*/
   && SYWREC.SYW-ALL-REGIONS-FL == "N"
   && WSY1550-TABLE-SIZE > 0)
    WSY1550-IDX = 1;
    SYWREC.SYW-XCT-ZFC-FL = "N";
    while (WSY1550-IDX <= WSY1550-TABLE-SIZE
     && SYWREC.SYW-XCT-ZFC-FL == "N")
      if (SY0JM001.XCTCD == WSY1550.XCT-CTRY-CD[WSY1550-IDX]
       && SY0JM001.ZFC-CRCY-CD == WSY1550.ZFC-CRCY-CD[WSY1550-IDX])
        SYWREC.SYW-XCT-ZFC-FL = "Y";
      else
        WSY1550-IDX = WSY1550-IDX + 1;
      end
    end
    if (SYWREC.SYW-XCT-ZFC-FL == "N") /* Not found in table*/
      SYWREC.SYWMSGFL = "Y";
      converseLib.validationFailed(127); /* so not allowed to use*/
      set SY0JM001.XCTCD cursor, bold;
      set SY0JM001.ZFC-CRCY-CD bold;
    end
  end

  set SY0JM001.XCOCD normal;
  SY0JM001.XCODESC = " ";

  if (SY0JM001.XCOCD == " ")
    SY0JM001.XCOCD = "01";
  end
  if (SY0JM001.XCOCD in XCOTBL.XCOCD)
    if (XCOTBL.XXXSTAT == "A")
      SY0JM001.XCODESC = XCOTBL.XCODESC[sysVar.arrayIndex];
    else
      SY0JM001.XCODESC = XCOTBL.XCODESC[sysVar.arrayIndex];
    end
  else
    SY0JM001.VAGen_EZEMSG = "INVALID COST TYPE";
    set SY0JM001.XCOCD cursor, bold;
    SYWREC.SYWMSGFL = "Y";
  end

  set SY0JM001.XDMCD normal;
  SY0JM001.XDMDESC = " ";

  if (SY0JM001.XDMCD == " ")
    SY0JM001.XDMCD = "00";
  end
  if (SY0JM001.XDMCD in XDMTBL.XDMCD)
    if (XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY0JM001.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    else
      SY0JM001.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    end
  else
    SY0JM001.VAGen_EZEMSG = "INVALID DIMENSION CODE";
    set SY0JM001.XDMCD cursor, bold;
    SYWREC.SYWMSGFL = "Y";
  end

  set SY0JM001.SY2CLRID normal;
  SY0JM001.SY2CLRDS = " ";

  if (SY0JM001.SY2CLRID == " ")
    SY0JM001.VAGen_EZEMSG = "ENTER A VALID COLOR CODE";
    set SY0JM001.SY2CLRID cursor, bold;
    SYWREC.SYWMSGFL = "Y";
  end

  set SY0JM001.XGPCD normal;
  SY0JM001.XGPDESC = " ";

  if (SY0JM001.XGPCD != " ")
    SY0JS1A(); /* edit genl prod class*/
  else
    SY0JM001.VAGen_EZEMSG = "ENTER A VALID GENERAL PRODUCT CLASS";
    set SY0JM001.XGPCD cursor, bold;
    SYWREC.SYWMSGFL = "Y";
  end

  set SY0JM001.SY1STNBR normal;
  SY0JM001.SY1STYNM = " ";

  if (SY0JM001.SY1STNBR == " ")
    converseLib.validationFailed(32); /* ENTER A VALID STYLE NUMBER*/
    set SY0JM001.SY1STNBR cursor, bold;
    SYWREC.SYWMSGFL = "Y";
  end



end // end SY0JS2A

// get product data
Function SY0JS2B()



  SY0JS2C(); /* get style table data*/


  if (SYWREC.SYWMSGFL == "N")
    SY0JS2D(); /* get color table data*/
  end


  if (SYWREC.SYWMSGFL == "N")
    SY0JS2P(); /* get corp table descriptions*/
  end


  if (SYWREC.SYWMSGFL == "N")
    SY0JS2E(); /* get price table data*/
  end


  if (SYWREC.SYWMSGFL == "N")
    SY0JS2F(); /* get cost table data*/
  end



end // end SY0JS2B

// get product style db2 row
Function SY0JS2C()


       /* ******************************************/
       /* *     GET  STYLE DATA                   **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY1REC empty;

  SY1REC.SY1STNBR = SY0JM001.SY1STNBR;
  SY1REC.XGPCD = SY0JM001.XGPCD;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JM001.XUMCD = SY1REC.XUMCD;
    SY0JM001.SY1STYNM = SY1REC.SY1STYNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY0JM001.SY1STNBR cursor, bold;
      set SY0JM001.XGPCD bold;
      SYWREC.SYWMSGFL = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0JS2C  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(20); /* style table error....*/
      set SY0JM001.SY1STNBR cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    end
  end

end // end SY0JS2C

// get product color db2 row
Function SY0JS2D()


       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY2REC empty;

  SY2REC.XGPCD = SY0JM001.XGPCD;
  SY2REC.SY1STNBR = SY0JM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0JM001.SY2CLRID;
  SY2REC.XDMCD = SY0JM001.XDMCD;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JM001.SY2CLRDS = SY2REC.SY2CLRDS;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(7);
      set SY0JM001.SY2CLRID cursor, bold;
      set SY0JM001.XDMCD bold;
      SYWREC.SYWMSGFL = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0JS2D ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      set SY0JM001.SY1STNBR cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    end
  end


end // end SY0JS2D

// get product price db2 row
Function SY0JS2E()


       /* ******************************************/
       /* *  GET product price db2 row            **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY5REC empty;

  SY5REC.XGPCD = SY0JM001.XGPCD;
  SY5REC.SY1STNBR = SY0JM001.SY1STNBR;
  if (SY1REC.SY1PRCZS == "S")
    SY0JM001.SY0JMVPP = "Style:";
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
  else
    SY0JM001.SY0JMVPP = "Color:";
    SY5REC.SY2CLRID = SY0JM001.SY2CLRID;
    SY5REC.XDMCD = SY0JM001.XDMCD;
  end
  SY5REC.SY5SZID = 0;
  SY5REC.XPYCD = "01";
  SY5REC.XQACD = "01";
  SY5REC.XCT-CTRY-CD = SY0JM001.XCTCD;
  SY5REC.ZFC-CRCY-CD = SY0JM001.ZFC-CRCY-CD;


  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JS2G(); /* determine current price*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      if (SY1REC.SY1PRCZS == "S")
        SY0JM001.SY0JMVPP = "Style:";
        SY0JM001.SY5PCEDT = 0;
        SY0JM001.SY5PRCUN = 0;
        return;
      end
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0JS2E ";
      TA1REC.TA1LOCAT[3] = "IO0380  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(38);
      set SY0JM001.SY5PRCUN cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    end
  end

  SY0JM001.SY0JMVPP = "Style:";
  SY5REC.SY2CLRID = "***";
  SY5REC.XDMCD = "**";
  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JS2G(); /* determine current price*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0JM001.SY5PCEDT = 0;
      SY0JM001.SY5PRCUN = 0;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0JS2E ";
      TA1REC.TA1LOCAT[3] = "IO0380  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(38);
      set SY0JM001.SY5PRCUN cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    end
  end


end // end SY0JS2E

// get product cost db2 row(s)
Function SY0JS2F()




       /* ******************************************/
       /* *  GET cost row for selected cost type  **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY6REC empty;

  SYWREC.SYWINDXA = 1;
  while (SYWREC.SYWINDXA < 7)
    SY0JM001.SY0JM-CURR-MARK1[SYWINDXA] = " ";
    SY0JM001.SY0JM-CURR-MARK2[SYWINDXA] = " ";
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

  SY6REC.XGPCD = SY0JM001.XGPCD;
  SY6REC.SY1STNBR = SY0JM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0JM001.SY2CLRID;
  SY6REC.XDMCD = SY0JM001.XDMCD;
  SY6REC.XCOCD = SY0JM001.XCOCD;
  SY6REC.XQACD = "01";
  SY6REC.XCT-CTRY-CD = SY0JM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0JM001.ZFC-CRCY-CD;


  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JS2I(); /* Determine current cost*/
    if (SYWREC.SYWINDXB != 0)
      SY0JM001.SY0JM-CURR-MARK1[SYWINDXB] = "*";
    end
    SY0JM001.SY0JM-DH-FG1 = " ";
    SY0JM001.SY0JM-LAST-MNT1 = SY6REC.ZZZCHGDT;
    set SY0JM001.SY0JM-MNT-LABEL1 initialAttributes;
    if (SY6REC.SY6HSTSW == "Y")
      set SY0JM001.SY0JM-DH-PROMPT1 initialAttributes;
      set SY0JM001.SY0JM-DH-FG1 initialAttributes;
    else
      set SY0JM001.SY0JM-DH-PROMPT1 skip, invisible;
      set SY0JM001.SY0JM-DH-FG1 skip, invisible;
    end
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA < 7)
      if (SY6REC.SY6CSEDT[SYWINDXA] != 0)
        set SY0JM001.SY0JM-UNIT-CST1[SYWINDXA] initialAttributes;
        set SY0JM001.SY0JM-CAT1[SYWINDXA] initialAttributes;
        set SY0JM001.SY0JM-EFF-DT1[SYWINDXA] initialAttributes;
        SY0JM001.SY0JM-EFF-DT1[SYWINDXA] = SY6REC.SY6CSEDT[SYWINDXA];
        SY0JM001.SY0JM-UNIT-CST1[SYWINDXA] = SY6REC.SY6CSTUN[SYWINDXA];
        SY0JM001.SY0JM-CAT1[SYWINDXA] = SY6REC.SY6SCTCD[SYWINDXA];
      else
        set SY0JM001.SY0JM-UNIT-CST1[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-CAT1[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-EFF-DT1[SYWINDXA] skip, invisible;
      end
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0JM001.SY0JM-DH-FG1 = " ";
      set SY0JM001.SY0JM-MNT-LABEL1 skip, invisible;
      set SY0JM001.SY0JM-DH-PROMPT1 skip, invisible;
      set SY0JM001.SY0JM-DH-FG1 skip, invisible;
      SYWREC.SYWINDXA = 1;
      while (SYWREC.SYWINDXA < 7)
        set SY0JM001.SY0JM-UNIT-CST1[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-CAT1[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-EFF-DT1[SYWINDXA] skip, invisible;
        SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
      end
      SY0JM001.VAGen_EZEMSG = "QUALITY 1 FOR COST TYPE DOES NOT EXIST";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0JS2J ";
      TA1REC.TA1LOCAT[3] = "IO0360  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VDCOST01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      SY0JM001.VAGen_EZEMSG = "COLOR TABLE ERROR";
      SYWREC.SYWMSGFL = "Y";
    end
  end



  set SQLCA empty;
  set SY6REC empty;

  SY6REC.XGPCD = SY0JM001.XGPCD;
  SY6REC.SY1STNBR = SY0JM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0JM001.SY2CLRID;
  SY6REC.XDMCD = SY0JM001.XDMCD;
  SY6REC.XCOCD = SY0JM001.XCOCD;
  SY6REC.XQACD = "02";
  SY6REC.XCT-CTRY-CD = SY0JM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0JM001.ZFC-CRCY-CD;


  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JS2I(); /* Determine current cost*/
    if (SYWREC.SYWINDXB != 0)
      SY0JM001.SY0JM-CURR-MARK2[SYWINDXB] = "*";
    end
    SY0JM001.SY0JM-DH-FG2 = " ";
    SY0JM001.SY0JM-LAST-MNT2 = SY6REC.ZZZCHGDT;
    set SY0JM001.SY0JM-MNT-LABEL2 initialAttributes;
    if (SY6REC.SY6HSTSW == "Y")
      set SY0JM001.SY0JM-DH-PROMPT2 initialAttributes;
      set SY0JM001.SY0JM-DH-FG2 initialAttributes;
    else
      set SY0JM001.SY0JM-DH-PROMPT2 skip, invisible;
      set SY0JM001.SY0JM-DH-FG2 skip, invisible;
    end
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA < 7)
      if (SY6REC.SY6CSEDT[SYWINDXA] != 0)
        set SY0JM001.SY0JM-UNIT-CST2[SYWINDXA] initialAttributes;
        set SY0JM001.SY0JM-CAT2[SYWINDXA] initialAttributes;
        set SY0JM001.SY0JM-EFF-DT2[SYWINDXA] initialAttributes;
        SY0JM001.SY0JM-EFF-DT2[SYWINDXA] = SY6REC.SY6CSEDT[SYWINDXA];
        SY0JM001.SY0JM-UNIT-CST2[SYWINDXA] = SY6REC.SY6CSTUN[SYWINDXA];
        SY0JM001.SY0JM-CAT2[SYWINDXA] = SY6REC.SY6SCTCD[SYWINDXA];
      else
        set SY0JM001.SY0JM-UNIT-CST2[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-CAT2[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-EFF-DT2[SYWINDXA] skip, invisible;
      end
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0JM001.SY0JM-DH-FG2 = " ";
      set SY0JM001.SY0JM-MNT-LABEL2 skip, invisible;
      set SY0JM001.SY0JM-DH-PROMPT2 skip, invisible;
      set SY0JM001.SY0JM-DH-FG2 skip, invisible;
      SYWREC.SYWINDXA = 1;
      while (SYWREC.SYWINDXA < 7)
        set SY0JM001.SY0JM-UNIT-CST2[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-CAT2[SYWINDXA] skip, invisible;
        set SY0JM001.SY0JM-EFF-DT2[SYWINDXA] skip, invisible;
        SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
      end
      if (SY0JM001.VAGen_EZEMSG != " ")
        converseLib.validationFailed(24);
      else
        SY0JM001.VAGen_EZEMSG = "QUALITY 2 FOR COST TYPE DOES NOT EXIST";
      end
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0JS2J ";
      TA1REC.TA1LOCAT[3] = "IO0360  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VDCOST01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      SY0JM001.VAGen_EZEMSG = "COLOR TABLE ERROR";
      SYWREC.SYWMSGFL = "Y";
    end
  end



end // end SY0JS2F

// determine current price
Function SY0JS2G()



  SY0JM001.SY5PCEDT = 0;
  SY0JM001.SY5PRCUN = 0;
  SYWREC.SYWINDEX = 1;

  while (SYWREC.SYWINDEX <= 6
   && SY0JM001.SY5PCEDT == 0)
    if (SY5REC.SY5PCEDT[SYWINDEX] <= SYWREC.SYWTODAY)
      SY0JM001.SY5PCEDT = SY5REC.SY5PCEDT[SYWINDEX];
      SY0JM001.SY5PRCUN = SY5REC.SY5PRCUN[SYWINDEX];
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end


end // end SY0JS2G

// determine current life cycle
Function SY0JS2H()

  if (SY2REC.SY2CEDT1 <= SYWREC.SYWTODAY)
    SY0JM001.XLCCD = SY2REC.XLCCD1;
  else

    if (SY2REC.SY2CEDT2 <= SYWREC.SYWTODAY)
      SY0JM001.XLCCD = SY2REC.XLCCD2;
    else

      if (SY2REC.SY2CEDT3 <= SYWREC.SYWTODAY)
        SY0JM001.XLCCD = SY2REC.XLCCD3;
      else

        if (SY2REC.SY2CEDT4 <= SYWREC.SYWTODAY)
          SY0JM001.XLCCD = SY2REC.XLCCD4;
        else

          SY0JM001.XLCCD = " ";
          SY0JM001.XLCDESC = "UNKNOWN";
          return;
        end
      end
    end
  end

  if (SY0JM001.XLCCD in XLCTBL.XLCCD)
    SY0JM001.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    SY0JM001.XLCDESC = "UNKNOWN";
  end

end // end SY0JS2H

// determine current cost
Function SY0JS2I()

  SYWREC.SYWINDXA = 1;
  SYWREC.SYWINDXB = 0;

  while (SYWREC.SYWINDXA <= 6
   && SYWREC.SYWINDXB == 0)
    if (SY6REC.SY6CSEDT[SYWINDXA] <= SYWREC.SYWTODAY
     && SY6REC.SY6CSEDT[SYWINDXA] != 0)
      SYWREC.SYWINDXB = SYWREC.SYWINDXA;
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

end // end SY0JS2I

// get corp table descriptions
Function SY0JS2P()

  SY0JM001.XUMDESC = " ";

  if (SY0JM001.XUMCD != " ")
    if (SY0JM001.XUMCD in XUMTBL.XUMCD)
      SY0JM001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
    end
  end

  SY0JS2H(); /* get life cycle description*/

end // end SY0JS2P

// check pf keys & transfer
Function SY0JS3A()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/


  if (SY0JM002.CATOAP != " ")
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = SY0JM002.CATOAP;
      COMMAREA.CAITEM = " ";
      XSEXIT();
      SY0JM002.VAGen_EZEMSG = COMMAREA.CAMSG;
      set SY0JM002.CATOAP cursor, bold;
      SYWREC.SYWMSGFL = "Y";
    else
      converseLib.validationFailed(19);
      SYWREC.SYWMSGFL = "Y";
    end
  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pa2
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
     /* NEXT SENTENCE*/
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      SY0JM002.SYMSCMSG = COMMAREA.CAMSG;
      SYWREC.SYWMSGFL = "Y";
    else
      if (converseVar.eventKey is pf4)
        XSPF4();
        SY0JM002.SYMSCMSG = COMMAREA.CAMSG;
        SYWREC.SYWMSGFL = "Y";
      else
        converseLib.validationFailed(19); /* invalid pf key*/
        SYWREC.SYWMSGFL = "Y";
      end
    end
  end


end // end SY0JS3A

// move key data to sy0jm002
Function SY0JS3B()



  SY0JM002.SY1STNBR = SY1REC.SY1STNBR;
  SY0JM002.SY1SSTNM = SY1REC.SY1SSTNM;

  SY0JM002.XGPCD = SY1REC.XGPCD;
  if (SY0JM002.XGPCD != " ")
    if (SY0JM002.XGPCD in XGPTBL.XGPCD)
      SY0JM002.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    end
  end

  SY0JM002.SY2CLRID = SY2REC.SY2CLRID;
  SY0JM002.SY2CLRAB = SY2REC.SY2CLRAB;

  SY0JM002.XDMCD = SY2REC.XDMCD;
  if (SY0JM002.XDMCD != " ")
    if (SY0JM002.XDMCD in XDMTBL.XDMCD)
      SY0JM002.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    end
  end

  SY0JM002.XUMCD = SY1REC.XUMCD;
  if (SY0JM002.XUMCD != " ")
    if (SY0JM002.XUMCD in XUMTBL.XUMCD)
      SY0JM002.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
    end
  end


end // end SY0JS3B

// get cost history data set - ss
Function SY0JS3C()



       /* ******************************************/
       /* *  GET  COst history row(s)             **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY0JWREC empty;
  set SY8REC empty;

  SY8REC.XGPCD = SY0JM002.XGPCD;
  SY8REC.SY1STNBR = SY0JM002.SY1STNBR;
  SY8REC.SY2CLRID = SY0JM002.SY2CLRID;
  SY8REC.XDMCD = SY0JM002.XDMCD;
  SY8REC.XCT-CTRY-CD = SY0JM002.XCTCD;
  SY8REC.ZFC-CRCY-CD = SY0JM002.ZFC-CRCY-CD;

  call "IO0410" ("SS", SQLCA, SY8REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0JS3D(); /* build cost history array*/
    SY0JS3J(); /* cost selected set*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(50);
      SYWREC.SYWMSGFL = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0J   ";
      TA1REC.TA1LOCAT[1] = "SS      ";
      TA1REC.TA1LOCAT[2] = "SY0JS3C ";
      TA1REC.TA1LOCAT[3] = "IO0410  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0JM002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOSTH01";
      TA1TBLKE = SY8REC.SY8KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(39); /* cost history table error*/
      SYWREC.SYWMSGFL = "Y";
    end
  end



end // end SY0JS3C

// get cost history data row - sn
Function SY0JS3D()


  SYWREC.SYWINDEX = 0;

  while (SQLCA.VAGen_SQLCODE != 100
   && SYWREC.SYWINDEX < 50)

    call "IO0410" ("SN", SQLCA, SY8REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
      if (SY8REC.XCOCD == SY6REC.XCOCD)
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
        SY0JS3E(); /* move cost history to array*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        /* NEXT SENTENCE*/
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY0J   ";
        TA1REC.TA1LOCAT[1] = "SN      ";
        TA1REC.TA1LOCAT[2] = "SY0JS3D ";
        TA1REC.TA1LOCAT[3] = "IO0410  ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY0JM002";
        TA1REC.TA1DBASE = "DPROD.";
        TA1REC.TA1TBLVU = "VCOSTH01";
        TA1TBLKE = SY8REC.SY8KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
        converseLib.validationFailed(39); /* cost history table error*/
        SYWREC.SYWMSGFL = "Y";
      end
    end
  end


end // end SY0JS3D

// move cost history to ws array
Function SY0JS3E()



  SY0JWREC.XCOCD[SYWINDEX] = SY8REC.XCOCD;
  SY0JWREC.XQACD[SYWINDEX] = SY8REC.XQACD;
  SY0JWREC.SY6CSTUN[SYWINDEX] = SY8REC.SY6CSTUN;
  SY0JWREC.SY6CSEDT[SYWINDEX] = SY8REC.SY6CSEDT;
  SY0JWREC.SY6SCTCD[SYWINDEX] = SY8REC.SY6SCTCD;
  SY0JWREC.ZZZSDT[SYWINDEX] = SY8REC.ZZZSDT;

  SY0JWREC.SY0JWCNT = SY0JWREC.SY0JWCNT + 1;


end // end SY0JS3E

// move cost history data to map
Function SY0JS3F()

  SYWREC.SYWINDEX = 1; /* set map index*/
  SY0JWREC.SY0JWFIN = SY0JWREC.SY0JWLIN + 1; /* set first in index*/

  while (SYWREC.SYWINDEX < 10)
    if (SY0JWREC.SY0JWLIN < SY0JWREC.SY0JWCNT
     && SY0JWREC.SY0JWCNT != 0)
      SY0JWREC.SY0JWLIN = SY0JWREC.SY0JWLIN + 1; /* increment array index*/
      SY0JS3G(); /* move array row to map row*/
    else
      SY0JS3H(); /* move blanks to map row*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end



end // end SY0JS3F

// move hst ws array row to map
Function SY0JS3G()




  SY0JM002.XCOCD[SYWINDEX] = SY0JWREC.XCOCD[SY0JWLIN];
  SY0JM002.XQACD[SYWINDEX] = SY0JWREC.XQACD[SY0JWLIN];
  SY0JM002.SY6CSTUN[SYWINDEX] = SY0JWREC.SY6CSTUN[SY0JWLIN];
  SY0JM002.SY6CSEDT[SYWINDEX] = SY0JWREC.SY6CSEDT[SY0JWLIN];
  SY0JM002.SY6SCTCD[SYWINDEX] = SY0JWREC.SY6SCTCD[SY0JWLIN];
  SY0JM002.ZZZSDT[SYWINDEX] = SY0JWREC.ZZZSDT[SY0JWLIN];



end // end SY0JS3G

// move blanks to map rows
Function SY0JS3H()




  SY0JM002.XCOCD[SYWINDEX] = " ";
  SY0JM002.XQACD[SYWINDEX] = " ";
  SY0JM002.SY6CSTUN[SYWINDEX] = 0;
  SY0JM002.SY6CSEDT[SYWINDEX] = 0;
  SY0JM002.SY6SCTCD[SYWINDEX] = " ";
  SY0JM002.ZZZSDT[SYWINDEX] = 0;



end // end SY0JS3H

// close selected color set
Function SY0JS3J()


       /* ******************************************/
       /* *  close color/dim selected set         **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;

  call "IO0410" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0J   ";
    TA1REC.TA1LOCAT[1] = "CS      ";
    TA1REC.TA1LOCAT[2] = "SY0JS3J ";
    TA1REC.TA1LOCAT[3] = "IO0410  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0JM002";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VCOSTH01";
    TA1TBLKE = SY8REC.SY8KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(39); /* cost history table error*/
  end


end // end SY0JS3J

//*** RECORD=SY0JWREC ****
//       working storage record used by sy0j for the cost
//       history data on the second map (sy0jm002). record
//       is used to control scrolling of data . record is
//       filled by doing a select set on the cost history
//       db2 table.
// ************************
Record SY0JWREC type basicRecord
  5 SY0JWFIN SY0JWFIN ; 
  5 SY0JWLIN SY0JWLIN ; 
  5 SY0JWCNT SY0JWCNT ; 
  5 XCTCD XCTCD ; 
  5 XCTDESC XCTDESC ; 
  5 ZFC-CRCY-CD ZFC-CRCY-CD ; 
  5 ZFC-CRCY-DESC ZFC-CRCY-DESC ; 
  5 XGPDESC XGPDESC ; 
  5 SY0JWGRP SY0JWGRP [50] ; 
    10 XCOCD XCOCD ; 
    10 XQACD XQACD ; 
    10 SY6CSEDT SY6CSEDT ; 
    10 SY6CSTUN SY6CSTUN ; 
    10 SY6SCTCD SY6SCTCD ; 
    10 ZZZSDT ZZZSDT ; 
end // end SY0JWREC

// record count
DataItem SY0JWCNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first in index
DataItem SY0JWFIN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level
DataItem SY0JWGRP char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last in index
DataItem SY0JWLIN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

