package sy0e;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY0E ****
// this application changes and deletes costs occurrances from
// the cost table. the general flow of processes is as follows:
//    sy0e010(execute)  - general initialization
//    sy0e020(converse) - display screen for input and edit
//    sy0e030(execute)  - obtain table data
//    sy0e040(converse) - display table data and edit
//    sy0e050(execute)  - update cost table
// ************************************************************
// maintenance:
// revision
//  number       who          when               why
// --------   ---------    ----------   ----------------------
//    00      j.brady       06-23-86    created application
//    01      mhalst        09/01/86    allow zero cost entry
//    02      mbuhit        07/14/88    add cost type 01 edits.
//    03      mbuhit        11/22/88    remove cost type 01
//       edit which forces dates to last day of month.
//    --      VCowan        04/17/89    added XSSEGTR logic
//    --      jwood         04/17/89    added noncsp opt logic
//            MHALST        11/13/89    Data base changes and
//                                      add SYZTBL.
//            MHALST        10/08/90    DB2 changes and SYAREC
//            MHALST        02/11/91    Data base changes
//            JRAMOS        02/24/93    Flag given color as
//                                      erroneous if the Nike
//                                      Dept Id = 'EAO ' and
//                                      color product region
//                                      not = '02'
//            MHALST        02/28/94    Data base changes
//            MHALST        10/02/95    Add SY1550 and MN0V
//            NGANGO        10/30/97    Y2K MODIFICATION .
//            JNARAS        02/25/99   Changed the process
//                                     SY0E020 to accept -1 & 1
//                                     for the SY0EMRND field.
//            JNARAS        03/02/99   Modified the logic in
//                                     SY0E040 process to vali-
//                                     date for SY0EMRND field
//                                     whenever entered/changed
// Modified Working storage SY0EW01 and Statement Groups
// SY0ES61, SY0ES62 AND SY0ES66 .
//      MHALST 12/20/01 Do not allow user to change a future
//                      date to a date in the past.
// ************************************************************
// io modules used       table view name
// ---------------       ---------------
//      io0120           dprod.vstyle01
//      io0130           dprod.vcolor01
//      io0360           dprod.vdcost01
//      io0530           dprod.vsyaud01
//      io0520           dprod.vsytag01
// ************************************************************
// *********************
Program SY0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  SY0EW01 SY0EW01; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY6REC SY6REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA9REC TA9REC; // record
  TAEREC TAEREC; // record
  VZFC0001 VZFC0001; // record
  WSY1550 WSY1550; // record
  XCOREC XCOREC; // record
  XDMREC XDMREC; // record
  XGPREC XGPREC; // record
  XP0GW01 XP0GW01; // record
  XP0GW02 XP0GW02; // record
  XUMREC XUMREC; // record
  XX0XW02 XX0XW02; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use SYRGTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XCOTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use SY0EM.SY0EM001,  // forms
      SY0EM.XP0GM001, 
      SY0EM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0E010: SY0E010();
     /* *****************************************************/
     /* *  this begins the flow stage for process sy0e010  **/
     /* *****************************************************/


    goto SY0E020;


     /* *****************************************************/
     /* *  this ends the flow stage for process sy0e010    **/
     /* *****************************************************/
    SY0E020: SY0E020();
     /* *****************************************************/
     /* *  this begins the flow stage for process sy0e020  **/
     /* *****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0E020;
    else
      if (converseVar.eventKey is pf12
       || converseVar.eventKey is enter)
        goto SY0E030;
      else
        goto SY0E010;
      end
    end


     /* *****************************************************/
     /* *  this ends the flow stage for process sy0e020    **/
     /* *****************************************************/
    SY0E030: SY0E030();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0e030  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0E020;
    else
      goto SY0E040;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0e030    **/
     /* ****************************************************/
    SY0E040: SY0E040();
     /* *****************************************************/
     /* *  this begins the flow stage for process sy0e040  **/
     /* *****************************************************/


    if (converseVar.validationMsgNum != 0
     || converseVar.eventKey is pf12)
      if (SY0EM001.SY0EM1CO is modified)
        set SY0EM001.SY0EM1CO modified;
      end
      if (SY0EM001.SY0EM2CO is modified)
        set SY0EM001.SY0EM2CO modified;
      end
      goto SY0E040;
    else
      if (converseVar.eventKey is enter)
        goto SY0E050;
      else
        goto SY0E010;
      end
    end


     /* *****************************************************/
     /* *  this ends the flow stage for process sy0e040    **/
     /* *****************************************************/
    SY0E050: SY0E050();
     /* *****************************************************/
     /* *  this begins the flow stage for process sy0e050  **/
     /* *****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0E040;
    else
      converseLib.validationFailed(11);
      set SY0EM001.SY1STNBR cursor;
      goto SY0E020;
    end


     /* *****************************************************/
     /* *  this ends the flow stage for process sy0e050    **/
     /* *****************************************************/
  end // end main
end // end SY0E

// general initialization
Function SY0E010()


   /* ********************************************************/
   /* *  processing in this option includes:                **/
   /* *    1) test security clearance for the application   **/
   /* *    2) initialize fields                             **/
   /* *    3) set up the map screen                         **/
   /* ********************************************************/


  XSENTRY(); /* security check*/

  XSSEGTR(); /* set segemented transaction logic*/

  set SY0EM001 initial;
  set SY0EW01 empty;
  set SY1REC empty;
  set SY2REC empty;
  set SY6REC empty;
  set SY9REC empty;
  set SYAREC empty;
  set SYWREC empty;
  set VZFC0001 empty;
  set ZFCWREC empty;
  set XP0GW01 empty;
  set XP0GW02 empty;

  SY0EM001.XDMCD = "00";

   /* Set-up defaults for country & currency*/
  set WSY1550 empty;
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE > 0)
    if (SYWREC.SYW-ALL-REGIONS-FL == "Y")
      SY0EM001.XCTCD = "USA";
      SY0EM001.ZFC-CRCY-CD = "USD";
    else
      XPSY009(); /* Get countries for region*/
      if (WSY1550-RETURN-CODE == 00
       && WSY1550-TABLE-SIZE == 1)
        SY0EM001.XCTCD = WSY1550.XCT-CTRY-CD[1];
        SY0EM001.ZFC-CRCY-CD = WSY1550.ZFC-CRCY-CD[1];
      end
    end
  else /* No region for user, tell them*/
    converseLib.validationFailed(124); /* User Id not authorized*/
  end
  if (SY0EM001.XCTCD != " ")
    if (SY0EM001.XCTCD in XCTTBL.XCTCD)
      SY0EM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
    SY0ES-GET-ZFC();
  else
    set SY0EM001.XCTCD cursor;
  end


  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGEN = VGVar.currentShortGregorianDate;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SY0EW01.SY0EWDTE = TA2REC.TA2GRGGN;
  else
    converseLib.validationFailed(42); /* internal date error - call systems*/
                                   /* development*/
    exit stack;
  end


  SY0EM001.XGPCD = COMMAREA.XGPCD;
  if (SY0EM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized to use this gpc*/
      set SY0EM001.XGPCD cursor, bold;
      exit stack;
    else
      if (SY0EM001.XGPCD in XGPTBL.XGPCD)
        SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0EM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  else
    if (SY0EM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized to use this gpc*/
        set SY0EM001.XGPCD cursor, bold;
        exit stack;
      else
        if (SY0EM001.XGPCD in XGPTBL.XGPCD)
          SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc code entered*/
          set SY0EM001.XGPCD cursor, bold;
          exit stack;
        end
      end
    else
      if (SY0EM001.XGPCD in XGPTBL.XGPCD)
        SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0EM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  end


end // end SY0E010

// display input screen
Function SY0E020()


   /* *******************************************************/
     /* processing in the 'before' stage includes:        **/
       /* 1) protect screen fields                        **/
       /* 2) move application title name to screen area   **/
   /* *******************************************************/


  SY0EM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0EM001.SYMRVNBR = "03";
  SY0EM001.SYMTTLNM = "      PRODUCT COST - CORRECTION       ";


  SY0EM001.SY0EMENM[1] = 1;
  SY0EM001.SY0EMENM[2] = 2;
  SY0EM001.SY0EMENM[3] = 3;
  SY0EM001.SY0EMENM[4] = 4;
  SY0EM001.SY0EMENM[5] = 5;
  SY0EM001.SY0EMENM[6] = 6;


  set SY0EM001.SY0EMNUM protect;
  set SY0EM001.SY0EM1CO protect;
  set SY0EM001.SY0EM2CO protect;
  set SY0EM001.SY0EM1DT protect;
  set SY0EM001.SY0EM2DT protect;
  set SY0EM001.SY0EM1SC protect;
  set SY0EM001.SY0EM2SC protect;
  set SY0EM001.SY0EM1DL protect;
  set SY0EM001.SY0EM2DL protect;

  SY0EM001.SYMPRONM = "SY0E020";

  converseVar.segmentedMode = 1;


  converse SY0EM001 ;


   /* *******************************************************/
     /* processing in the 'after'  stage includes:        **/
       /* 1) check for fast path option                   **/
       /* 2) check pfkeys                                 **/
       /* 3) reset screen attributes                      **/
       /* 4) perform screen edits                         **/
       /* 5)*/
   /* *******************************************************/


  SY0ES01(); /* check fast path option*/

  SY0ES02(); /* check pfkeys*/

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  else
    SY0EM001.SYMSCMSG = " ";
    set SY0EM001.XCTCD initialAttributes;
    set SY0EM001.ZFC-CRCY-CD initialAttributes;
    set SY0EM001.XGPCD initialAttributes;
    set SY0EM001.SY1STNBR initialAttributes;
    set SY0EM001.SY2CLRID initialAttributes;
    set SY0EM001.XDMCD initialAttributes;
    set SY0EM001.XCOCD initialAttributes;
    set SY0EM001.SY0EMCAL initialAttributes;
    set SY0EM001.SY0EMPCT initialAttributes;
    set SY0EM001.SY0EMCNT initialAttributes;
    set SY0EM001.SY0EMRND initialAttributes;
    set SY0EM001.SY0EMNUM initialAttributes;
    set SY0EM001.SY0EM1CO initialAttributes;
    set SY0EM001.SY0EM2CO initialAttributes;
    set SY0EM001.SY0EM1DT initialAttributes;
    set SY0EM001.SY0EM2DT initialAttributes;
    set SY0EM001.SY0EM1SC initialAttributes;
    set SY0EM001.SY0EM2SC initialAttributes;
    set SY0EM001.SY0EM1DL initialAttributes;
    set SY0EM001.SY0EM2DL initialAttributes;
    set SY0EM001.SY0EMENM initialAttributes;
  end

  if (SY0EM001.SY0EMRND != 0
   && SY0EM001.SY0EMRND != .25
   && SY0EM001.SY0EMRND != .50
   && SY0EM001.SY0EMRND != 1.00
   && SY0EM001.SY0EMRND != -.25
   && SY0EM001.SY0EMRND != -.50
   && SY0EM001.SY0EMRND != -1.00)
    converseLib.validationFailed(46); /* a rnding value must be .25,.50,1,-.25,-.50,-1*/
    set SY0EM001.SY0EMRND cursor, bold;
  end


  if (SY0EM001.SY0EMCAL == "Y")
    if (SY0EM001.SY0EMPCT == 0)
      converseLib.validationFailed(40); /* required field - please enter a valid value*/
      set SY0EM001.SY0EMPCT cursor, bold;
    end
  end


  if (SY0EM001.SY0EMCAL != "Y"
   && SY0EM001.SY0EMCAL != "N")
    converseLib.validationFailed(36); /* value must be 'y' or 'n'*/
    set SY0EM001.SY0EMCAL cursor, bold;
  end


  if (SY0EM001.XCOCD == "  ")
    converseLib.validationFailed(40); /* required field  - please enter a valid value*/
    set SY0EM001.XCOCD cursor, bold;
  end


  if (SY0EM001.XDMCD == "  ")
    converseLib.validationFailed(40); /* required field  - please enter a valid value*/
    set SY0EM001.XDMCD cursor, bold;
  end


  if (SY0EM001.SY2CLRID == "   ")
    converseLib.validationFailed(40); /* required field  - please enter a valid value*/
    set SY0EM001.SY2CLRID cursor, bold;
  end


  if (SY0EM001.SY1STNBR == "   ")
    converseLib.validationFailed(40); /* required field  - please enter a valid value*/
    set SY0EM001.SY1STNBR cursor, bold;
  end


  if (SY0EM001.ZFC-CRCY-CD == " ")
    converseLib.validationFailed(40); /* required field  - please enter a valid value*/
    set SY0EM001.ZFC-CRCY-CD cursor, bold;
  end


  if (SY0EM001.XCTCD == " ")
    converseLib.validationFailed(40); /* required field  - please enter a valid value*/
    set SY0EM001.XCTCD cursor, bold;
  end


  if (SY0EM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized for this gpc*/
      set SY0EM001.XGPCD cursor, bold;
    else
      if (SY0EM001.XGPCD in XGPTBL.XGPCD)
        SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0EM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  else
    if (SY0EM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized for this gpc*/
        set SY0EM001.XGPCD cursor, bold;
      else
        if (SY0EM001.XGPCD in XGPTBL.XGPCD)
          SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc code entered*/
          set SY0EM001.XGPCD cursor, bold;
          exit stack;
        end
      end
    else
      if (SY0EM001.XGPCD in XGPTBL.XGPCD)
        SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0EM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  end


end // end SY0E020

// obtain table data
Function SY0E030()

   /* *******************************/
   /* obtain style record*/
   /* *******************************/

  SY1REC.XGPCD = SY0EM001.XGPCD;
  SY1REC.SY1STNBR = SY0EM001.SY1STNBR;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    SY0EM001.SY1SSTNM = " ";
    converseLib.validationFailed(5); /* style record does not exist*/
    set SY0EM001.SY1STNBR cursor, bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(20); /* style table error - contact sys.*/
                                   /* development*/
      SY0EM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      set SY0EM001.SY1STNBR cursor, bold;
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0E030  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY1REC";
      TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    else
      SY0EM001.SY1SSTNM = SY1REC.SY1SSTNM;
    end
  end

   /* ***********************/
   /* obtain uom description*/
   /* ***********************/

  if (SY1REC.XUMCD in XUMTBL.XUMCD)
    XUMREC.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0)
    SY0EM001.XUMDESC = " ";
  else
    SY0EM001.XUMDESC = XUMREC.XUMDESC;
  end


   /* ************************/
   /* obtain style color row*/
   /* ************************/

  SY2REC.XGPCD = SY0EM001.XGPCD;
  SY2REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY2REC.XDMCD = SY0EM001.XDMCD;
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    SY0EM001.SY2CLRAB = " ";
    converseLib.validationFailed(7);
    set SY0EM001.SY2CLRID cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0EM001.SY1STNBR cursor, bold;
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
      SY0EM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0E030  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    else
      SY0EM001.SY2CLRAB = SY2REC.SY2CLRAB; /* OK, Color valid*/
    end
  end

   /* *****************************/
   /* obtain country/currency data*/
   /* *****************************/

  SY0ES-POPUPS(); /* check for pop-ups*/
  converseLib.clearScreen();

  SY0EM001.ZFC-CRCY-DESC = " ";
  SY0ES-GET-ZFC();

  SY0EM001.XCTDESC = " ";
  if (SY0EM001.XCTCD in XCTTBL.XCTCD)
    SY0EM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    if (XCTTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      converseLib.validationFailed(33); /* status is not active for this code*/
      set SY0EM001.XCTCD cursor, bold;
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY0EM001.XCTCD cursor, bold;
  end

   /* Now check that country/currency is valid for region*/
  if (converseVar.validationMsgNum == 0 /* If no errors*/
   && SYWREC.SYW-ALL-REGIONS-FL == "N")
    WSY1550-IDX = 1;
    SYWREC.SYW-XCT-ZFC-FL = "N";
    while (WSY1550-IDX <= WSY1550-TABLE-SIZE
     && SYWREC.SYW-XCT-ZFC-FL == "N")
      if (SY0EM001.XCTCD == WSY1550.XCT-CTRY-CD[WSY1550-IDX]
       && SY0EM001.ZFC-CRCY-CD == WSY1550.ZFC-CRCY-CD[WSY1550-IDX])
        SYWREC.SYW-XCT-ZFC-FL = "Y";
      else
        WSY1550-IDX = WSY1550-IDX + 1;
      end
    end
    if (SYWREC.SYW-XCT-ZFC-FL == "N") /* Not found in table*/
      converseLib.validationFailed(127); /* so not allowed to use*/
      set SY0EM001.XCTCD cursor, bold;
      set SY0EM001.ZFC-CRCY-CD bold;
    end
  end

   /* ***********************/
   /* obtain cost type data*/
   /* ***********************/

  if (SY0EM001.XCOCD in XCOTBL.XCOCD)
    XCOREC.XCODESC = XCOTBL.XCODESC[sysVar.arrayIndex];
  end

  SY0EM001.XCODESC = " ";

  if (sysVar.arrayIndex == 0)
    converseLib.validationFailed(3); /* invalid code*/
    set SY0EM001.XCOCD cursor, bold;
  else
    if (XCOTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      converseLib.validationFailed(33); /* status is not active for this code*/
      set SY0EM001.XCOCD cursor, bold;
    else
      SY0EM001.XCODESC = XCOREC.XCODESC;
    end
  end

   /* ***********************/
   /* obtain dim code desc.*/
   /* ***********************/

  SY0EM001.XDMDESC = " ";

  if (SY0EM001.XDMCD in XDMTBL.XDMCD)
    XDMREC.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end
  if (sysVar.arrayIndex == 0)
    converseLib.validationFailed(3); /* invalid code*/
    set SY0EM001.XDMCD cursor, bold;
  else
    SY0EM001.XDMDESC = XDMREC.XDMDESC;
  end

   /* ***********************/
   /* obtain gpc abbreviation*/
   /* ***********************/

  SY0EM001.XGPABRV = " ";

  if (SY0EM001.XGPCD in XGPTBL.XGPCD)
    SY0EM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end
  if (sysVar.arrayIndex == 0)
    converseLib.validationFailed(31); /* invalid gpc code entered*/
    set SY0EM001.XGPCD cursor, bold;
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  SY0EW01.SY0EWSW2 = "N";

   /* ***************************************************/
   /* * read cost table for first quality              **/
   /* ***************************************************/

  SY0ES71();


   /* ***************************************************/
   /* * read cost table for second quality             **/
   /* ***************************************************/

  SY0ES72();


end // end SY0E030

// display input screen
Function SY0E040()


   /* *******************************************************/
     /* processing in the 'before' stage includes:        **/
       /* 1) protect screen fields                        **/
       /* 2) move application title name to screen area   **/
   /* *******************************************************/


  set SY0EM001.XGPCD protect;
  set SY0EM001.SY1STNBR protect;
  set SY0EM001.SY2CLRID protect;
  set SY0EM001.XDMCD protect;
  set SY0EM001.XCOCD protect;
  if (SY0EM001.SY0EMCAL == "Y")
    set SY0EM001.SY0EM2CO protect;
  end

  if (converseVar.validationMsgNum == 0)
    set SY0EM001.SY0EMNUM cursor;
  end

  SY0EM001.SYMPRONM = "SY0E040";

  converseVar.segmentedMode = 1;


  converse SY0EM001 ;


   /* *******************************************************/
     /* processing in the 'after'  stage includes:        **/
       /* 1) check for fast path option                   **/
       /* 2) check pfkeys                                 **/
       /* 3) reset screen attributes                      **/
       /* 4) perform screen edits                         **/
       /* 5)*/
   /* *******************************************************/


  SY0ES01(); /* check fast path option*/

  SY0ES02(); /* check pfkeys*/

  if (SY0EM001.SY0EM1CO is modified) /* is something there?*/
    SY0EW01.SY0EW1MD = "Y"; /* set flag to say modified*/
    if (SY0EM001.SY0EM1CO is blanks)
      SY0ESM1();
    end /* is it nulls?*/
  else
    SY0EW01.SY0EW1MD = "N"; /* nothing entered*/
  end

  if (SY0EM001.SY0EM2CO is modified) /* is something there?*/
    SY0EW01.SY0EW2MD = "Y"; /* set flag to say modified*/
    if (SY0EM001.SY0EM2CO is blanks)
      SY0ESM2();
    end /* is it nulls?*/
  else
    SY0EW01.SY0EW2MD = "N"; /* nothing entered*/
  end

   /* TCS CHANGE BEGINS 03/03/99*/
  if (SY0EM001.SY0EMRND != 0
   && SY0EM001.SY0EMRND != .25
   && SY0EM001.SY0EMRND != .50
   && SY0EM001.SY0EMRND != 1.00
   && SY0EM001.SY0EMRND != -.25
   && SY0EM001.SY0EMRND != -.50
   && SY0EM001.SY0EMRND != -1.00)
    converseLib.validationFailed(46); /* a rnding value must be .25,.50,1,-.25,-.50,-1*/
    set SY0EM001.SY0EMRND cursor, bold;
  end
   /* TCS CHANGE ENDS   03/03/99*/

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  else
    SY0EM001.SYMSCMSG = " ";
    set SY0EM001.XGPCD initialAttributes;
    set SY0EM001.SY1STNBR initialAttributes;
    set SY0EM001.SY2CLRID initialAttributes;
    set SY0EM001.XDMCD initialAttributes;
    set SY0EM001.XCOCD initialAttributes;
    set SY0EM001.SY0EMCAL initialAttributes;
    set SY0EM001.SY0EMPCT initialAttributes;
    set SY0EM001.SY0EMCNT initialAttributes;
    set SY0EM001.SY0EMRND initialAttributes;
    set SY0EM001.SY0EMNUM initialAttributes;
    set SY0EM001.SY0EM1CO initialAttributes;
    set SY0EM001.SY0EM2CO initialAttributes;
    set SY0EM001.SY0EM1DT initialAttributes;
    set SY0EM001.SY0EM2DT initialAttributes;
    set SY0EM001.SY0EM1SC initialAttributes;
    set SY0EM001.SY0EM2SC initialAttributes;
    set SY0EM001.SY0EM1DL initialAttributes;
    set SY0EM001.SY0EM2DL initialAttributes;
  end

  if (SY0EM001.SY0EMNUM != 1
   && SY0EM001.SY0EMNUM != 2
   && SY0EM001.SY0EMNUM != 3
   && SY0EM001.SY0EMNUM != 4
   && SY0EM001.SY0EMNUM != 5
   && SY0EM001.SY0EMNUM != 6)
    converseLib.validationFailed(40); /* required field*/
    set SY0EM001.SY0EMNUM cursor, bold;
    exit stack;
  end

  if (SY0EM001.SY0EME1D[SY0EMNUM] == 0
   && SY0EM001.SY0EME2D[SY0EMNUM] == 0)
    converseLib.validationFailed(76); /* enter existing cost occurrence*/
    set SY0EM001.SY0EMNUM cursor, bold;
  end

  if (SY0EM001.SY0EM1DL != " ")
    if (SY0EM001.SY0EM1DL != "D")
      converseLib.validationFailed(3); /* invalid code*/
      set SY0EM001.SY0EM1DL cursor, bold;
      exit stack;
    end
  end

  if (SY0EM001.SY0EM2DL != " ")
    if (SY0EM001.SY0EM2DL != "D")
      converseLib.validationFailed(3); /* invalid code*/
      set SY0EM001.SY0EM2DL cursor, bold;
      exit stack;
    end
  end

  if (SY0EM001.SY0EM1DL != "D")
    if (SY0EM001.SY0EMCAL == "Y")
      if (SY0EM001.SY0EM1CO == 0)
        converseLib.validationFailed(40);
        set SY0EM001.SY0EM1CO cursor, bold;
      end
    end
  end



   /* *******************************************************/
   /* are entered dates valid dates?                      **/
   /* *******************************************************/

  SY0ES61();


   /* *******************************************************/
   /* do not allow changes to past or current costs       **/
   /* when cost type = 01 and quality = 01                **/
   /* *******************************************************/

  if (SY0EM001.XCOCD == "01")
    SY0ES62();
  end


   /* *******************************************************/
   /* do not allow changes to past or current costs       **/
   /* when cost type = 01 and quality = 02                **/
   /* *******************************************************/

  if (SY0EM001.XCOCD == "01")
    SY0ES66();
  end


   /* *******************************************************/
   /* does either entered date equal an existing date?    **/
   /* *******************************************************/

  SY0ES64();


  if (SY0EM001.SY0EM1DL != "D")
    if (SY0EM001.SY0EM2DL != "D"
     && SY0EW01.SY0EW1MD == "N"
     && SY0EM1DT == 0
     && SY0EM1SC == "  "
     && SY0EM1DL == " "
     && SY0EW01.SY0EW2MD == "N"
     && SY0EM2DT == 0
     && SY0EM2SC == "  "
     && SY0EM2DL == " ")
      converseLib.validationFailed(73); /* please enter data for change*/
      set SY0EM001.SY0EM1CO cursor, bold;
      set SY0EM001.SY0EM1DT bold;
      set SY0EM001.SY0EM1SC bold;
      set SY0EM001.SY0EM1DL bold;
      set SY0EM001.SY0EM2CO bold;
      set SY0EM001.SY0EM2DT bold;
      set SY0EM001.SY0EM2SC bold;
      set SY0EM001.SY0EM2DL bold;
      exit stack;
    end
  end

   /* now check for valid zero cost entry*/
   /* (only valid if gpc not = 02 or 03)*/
  if (SY0EW01.SY0EW1MD == "Y" /* they are changing 1st qual cost*/
   && SY0EM001.SY0EM1CO == 0)
    if (SY0EM001.XGPCD == "02"
     || SY0EM001.XGPCD == "03")
      converseLib.validationFailed(85); /* zero price invalid for this gpc*/
      exit stack;
    end
  end

  if (SY0EW01.SY0EW2MD == "Y" /* they are changing 2nd qual cost*/
   && SY0EM001.SY0EM2CO == 0)
    if (SY0EM001.XGPCD == "02"
     || SY0EM001.XGPCD == "03")
      converseLib.validationFailed(85); /* zero price invalid for this gpc*/
      exit stack;
    end
  end

  if (SY0EM1DL == "D")
    if (SY0EME1D[SY0EMNUM] == 0)
      converseLib.validationFailed(79); /* no existing cost to delete on this line*/
      set SY0EM001.SY0EMNUM cursor, bold;
      exit stack;
    end
  end

  if (SY0EM2DL == "D")
    if (SY0EME2D[SY0EMNUM] == 0)
      converseLib.validationFailed(79); /* no existing cost to delete on this line*/
      set SY0EM001.SY0EMNUM cursor, bold;
      exit stack;
    end
  end



   /* *******************************************************/
   /* does either entered date equal an existing date?    **/
   /* *******************************************************/

  SY0ES65();



  if (SY0EM001.SY0EM1DL != "D"
   && SY0EM001.SY0EM2DL != "D")
    if (SY0EM001.SY0EMCAL == "Y")
      if (SY0EM001.SY0EME2C[SY0EMNUM] == 0)
        set SY0EM001.SY0EMCAL cursor, bold;
        converseLib.validationFailed(75); /* must have existing 2nd qlty cost to calc.*/
        exit stack;
      else
        SY0ES10(); /* calculate 2nd quality cost*/
      end
    end
  end

end // end SY0E040

// update cost table
Function SY0E050()
   /* **********************************************/
   /* *  this process:                            **/
   /* *    1)  formats the cost table output area **/
   /* *    2)  updates the cost table             **/
   /* *    3)  re-initializes data areas          **/
   /* **********************************************/


  if (SY0EM001.SY0EM1DL == "D")
    SY0ES15(); /* delete cost 1st quality*/
  else
    if (SY0EW01.SY0EW1MD == "Y"
     || SY0EM001.SY0EM1DT != 0
     || SY0EM001.SY0EM1SC != "  ")
      SY0ES20(); /* change cost 1st quality*/
    end
  end

  if (converseVar.validationMsgNum == 0)
    set SY6REC empty;
    if (SY0EM001.SY0EM2DL == "D")
      SY0ES25(); /* delete cost 2nd quality*/
    else
      if (SY0EW01.SY0EW2MD == "Y"
       || SY0EM001.SY0EM2DT != 0
       || SY0EM001.SY0EM2SC != "  ")
        SY0ES30(); /* change cost 2nd quality*/
      end
    end
  end


  if (converseVar.validationMsgNum == 0)
    set SY1REC empty;
    set SY6REC empty;
    set SY9REC empty;
    set SYAREC empty;

      /* we save these map items so that we can*/
      /* clear the entire screen*/

    SY0EW01.XGPCD = SY0EM001.XGPCD;
    SY0EW01.XGPABRV = SY0EM001.XGPABRV;
    SY0EW01.XCTCD = SY0EM001.XCTCD;
    SY0EW01.XCTDESC = SY0EM001.XCTDESC;
    SY0EW01.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
    SY0EW01.ZFC-CRCY-DESC = SY0EM001.ZFC-CRCY-DESC;
    SY0EW01.SY1STNBR = SY0EM001.SY1STNBR;
    SY0EW01.SY1SSTNM = SY0EM001.SY1SSTNM;
    SY0EW01.SY2CLRID = SY0EM001.SY2CLRID;
    SY0EW01.SY2CLRAB = SY0EM001.SY2CLRAB;
    SY0EW01.XDMCD = SY0EM001.XDMCD;
    SY0EW01.XDMDESC = SY0EM001.XDMDESC;
    SY0EW01.XCOCD = SY0EM001.XCOCD;
    SY0EW01.XCODESC = SY0EM001.XCODESC;
    SY0EW01.SY0EWCAL = SY0EM001.SY0EMCAL;
    if (SY0EM001.SY0EMPCT != 0)
      SY0EW01.SY0EWPCT = SY0EM001.SY0EMPCT;
    end
    if (SY0EM001.SY0EMCNT != 0)
      SY0EW01.SY0EWCNT = SY0EM001.SY0EMCNT;
    end
    if (SY0EM001.SY0EMRND != 0)
      SY0EW01.SY0EWRND = SY0EM001.SY0EMRND;
    end
    set SY0EM001 initial;
    SY0EM001.XGPCD = SY0EW01.XGPCD;
    SY0EM001.XGPABRV = SY0EW01.XGPABRV;
    SY0EM001.XCTCD = SY0EW01.XCTCD;
    SY0EM001.XCTDESC = SY0EW01.XCTDESC;
    SY0EM001.ZFC-CRCY-CD = SY0EW01.ZFC-CRCY-CD;
    SY0EM001.ZFC-CRCY-DESC = SY0EW01.ZFC-CRCY-DESC;
    SY0EM001.SY1STNBR = SY0EW01.SY1STNBR;
    SY0EM001.SY1SSTNM = SY0EW01.SY1SSTNM;
    SY0EM001.SY2CLRID = SY0EW01.SY2CLRID;
    SY0EM001.SY2CLRAB = SY0EW01.SY2CLRAB;
    SY0EM001.XDMCD = SY0EW01.XDMCD;
    SY0EM001.XDMDESC = SY0EW01.XDMDESC;
    SY0EM001.XCOCD = SY0EW01.XCOCD;
    SY0EM001.XCODESC = SY0EW01.XCODESC;
    SY0EM001.SY0EMCAL = SY0EW01.SY0EWCAL;
    if (SY0EW01.SY0EWPCT != 0)
      SY0EM001.SY0EMPCT = SY0EW01.SY0EWPCT;
    end
    if (SY0EW01.SY0EWCNT != 0)
      SY0EM001.SY0EMCNT = SY0EW01.SY0EWCNT;
    end
    if (SY0EW01.SY0EWRND != 0)
      SY0EM001.SY0EMRND = SY0EW01.SY0EWRND;
    end
    SY0EW01.SY0EWSW1 = " ";
    SY0EW01.SY0EWSCT = " ";
    SY0EW01.SY0EWZTM = " ";
    SY0EW01.SY0EW1DT = 0;
    SY0EW01.SY0EW2DT = 0;
    SY0EW01.SY0EWEDT = 0;
    SY0EW01.SY0EWCST = 0;
    SY0EW01.SY0EWWTM = 0;
    SY0EW01.SY0EWCT1 = 1;
    while (SY0EWCT1 <= 6)
      SY0EW01.SY0EWE1D[SY0EWCT1] = 0;
      SY0EW01.SY0EWE2D[SY0EWCT1] = 0;
      SY0EWCT1 = SY0EWCT1 + 1;
    end
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
  end


end // end SY0E050

// get currency DB2 row
Function SY0ES-GET-ZFC()


       /* ******************************************/
       /* *     GET CURRENCY DESCRIPTION          **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  SY0EM001.ZFC-CRCY-DESC = " ";

  VZFC0001.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;

  call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0EM001.ZFC-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0EM001.VAGen_EZEMSG = "INVALID CURRENCY CODE";
      set SY0EM001.ZFC-CRCY-CD cursor, bold;
      converseLib.validationFailed(1);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "SY0ES-   ";
      TA1REC.TA1LOCAT[2] = "GET-ZFC  ";
      TA1REC.TA1LOCAT[3] = "DC0060   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "CORP";
      TA1REC.TA1TBLVU = "VZFC0001";
      TA1TBLKE = VZFC0001.ZFC-CRCY-CD;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(23); /* corp table error....*/
      set SY0EM001.ZFC-CRCY-CD cursor, bold;
    end
  end

end // end SY0ES-GET-ZFC

// Check for & Display popups
Function SY0ES-POPUPS()

   /* Examine screen and display any pop-up requests to user*/

  XP0GW01.XP0GW-SEL-COLR-CD = SY0EM001.SY2CLRID;
  if (XP0GW01.XP0GW-SEL-COLR-CD1 == "?" /* We want pop-up*/
   || XP0GW01.XP0GW-SEL-COLR-CD2 == "?" 
   || XP0GW01.XP0GW-SEL-COLR-CD3 == "?")
    XP0GW01.XGPCD = SY0EM001.XGPCD;
    XP0GW01.SY1STNBR = SY0EM001.SY1STNBR;
    XP0G001(); /* so do it*/
    if (XP0GW02.XP0GWERR == "Y") /* we have an error*/
      if (XP0GW02.XP0GWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (XP0GW02.XP0GWENR == 1) /* No colors found*/
        converseLib.validationFailed(7);
      end
      if (XP0GW02.XP0GWENR == 2) /* DB2 Error*/
        converseLib.validationFailed(21);
      end
    else
      if (XP0GW02.XP0GWPIX != 0) /* and user selected*/
        SY0EM001.SY2CLRID = XP0GW01.SY2CLRID[XP0GWPIX];
        SY0EM001.XDMCD = XP0GW01.XDMCD[XP0GWPIX];
      else
        converseLib.validationFailed(59); /* No colors selected*/
      end
    end
  end


  if (SY0EM001.XCTCD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Country Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0EM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

  if (SY0EM001.ZFC-CRCY-CD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Currency Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPZFC-POP(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0EM001.ZFC-CRCY-CD = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
    end
  end

  converseLib.clearScreen();
   /* Refresh map*/

end // end SY0ES-POPUPS

// check for fast path
Function SY0ES01()


   /* *****************************************/
   /* *  let's check for fast path request   **/
   /* *****************************************/


  if (converseVar.eventKey is enter
   && SY0EM001.CATOAP != "  ")
    move SY0EM001 to COMMAREA withV60Compat;
    XSEXIT();
    SY0EM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0EM001 alarm;
    set SY0EM001.CATOAP cursor, bold;
    converseLib.validationFailed(1); /* reserved message area*/
  end

  return;


end // end SY0ES01

// check pfkeys
Function SY0ES02()


   /* *****************************************************/
     /* let's check the pfkey entered by the operator   **/
   /* *****************************************************/


  if (converseVar.eventKey is pf1)
    XSPF1();
  else
    if (converseVar.eventKey is pf4)
      XSPF4();
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CATOAP = "SY0N";
        XSEXIT();
      else
        if (converseVar.eventKey is pf12
         || converseVar.eventKey is enter
         || converseVar.eventKey is pa2)
          return;
        else
          converseLib.validationFailed(19); /* invalid pf key*/
        end
      end
    end
  end


end // end SY0ES02

// calculate 2nd quality
Function SY0ES10()


   /* *************************************************************/
   /* *  this little routine calculates the 2nd quality costs.   **/
   /* *************************************************************/


  if (SY0EM001.SY0EM1CO == 0)
    SY0EM001.SY0EM2CO = 0;
    SY0EW01.SY0EW2MD = "Y"; /* set update 2nd qual flag yes*/
    return;
  else
    SY0EW01.SY0EWAAA = SY0EM001.SY0EM1CO;
  end

  SY0EW01.SY0EWAAA = SY0EW01.SY0EWAAA * SY0EM001.SY0EMPCT * .01;
  SY0EW01.SY0EWAAA = SY0EW01.SY0EWAAA + SY0EM001.SY0EMCNT;

  if (SY0EM001.SY0EMRND != 0)
    SY0EW01.SY0EWBBB = SY0EW01.SY0EWAAA / SY0EM001.SY0EMRND;
    SY0EW01.SY0EWDDD = SY0EW01.SY0EWBBB;
    if (SY0EW01.SY0EWDDD == 0)
      SY0EM001.SY0EM2CO = SY0EW01.SY0EWAAA;
    else
      while (SY0EW01.SY0EWDDD != 0)
        if (SY0EM001.SY0EMRND > 0)
          SY0EW01.SY0EWAAA = SY0EW01.SY0EWAAA + .01;
        else
          SY0EW01.SY0EWAAA = SY0EW01.SY0EWAAA - .01;
        end
        SY0EW01.SY0EWBBB = SY0EW01.SY0EWAAA / SY0EM001.SY0EMRND;
        SY0EW01.SY0EWDDD = SY0EW01.SY0EWBBB;
        if (SY0EW01.SY0EWDDD == 0)
          SY0EM001.SY0EM2CO = SY0EW01.SY0EWAAA;
        end
      end
    end
  else
    SY0EM001.SY0EM2CO = SY0EW01.SY0EWAAA;
  end
  SY0EW01.SY0EW2MD = "Y"; /* set update 2nd qual flag to yes*/

end // end SY0ES10

// delete 1st qlty cost
Function SY0ES15()
   /* ******************************************************/
   /* *  this statement group deletes a 1st quality cost  **/
   /* *  occurance from a cost row. we first obtain the   **/
   /* *  cost row,then make our changes and replace the   **/
   /* *  row.                                             **/
   /* ******************************************************/


  SY6REC.XGPCD = SY0EM001.XGPCD;
  SY6REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY6REC.XDMCD = SY0EM001.XDMCD;
  SY6REC.XCOCD = SY0EM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0EM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
  SY6REC.XQACD = "01";
  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(24); /* no cost record*/
    set SY0EM001.SY0EMNUM cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != +0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0ES15  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end
  end

  if (SY0EM001.SY0EMNUM == 1)
    if (SY0EM001.SY0EME1C[2] == 0)
      converseLib.validationFailed(77);
      set SY0EM001.SY0EM1DL cursor, bold;
    end
  else
    if (SY6REC.SY6CSEDT[1] <= SY0EW01.SY0EWDTE)
      if (SY6REC.SY6CSTUN[2] == 0)
        converseLib.validationFailed(77);
        set SY0EM001.SY0EM1DL cursor, bold;
      end
    else
      if (SY6REC.SY6CSEDT[2] <= SY0EW01.SY0EWDTE)
        if (SY6REC.SY6CSTUN[3] == 0)
          converseLib.validationFailed(77);
          set SY0EM001.SY0EM1DL cursor, bold;
        end
      else
        if (SY6REC.SY6CSEDT[3] <= SY0EW01.SY0EWDTE)
          if (SY6REC.SY6CSTUN[4] == 0)
            converseLib.validationFailed(77);
            set SY0EM001.SY0EM1DL cursor, bold;
          end
        else
          if (SY6REC.SY6CSEDT[4] <= SY0EW01.SY0EWDTE)
            if (SY6REC.SY6CSTUN[5] == 0)
              converseLib.validationFailed(77);
              set SY0EM001.SY0EM1DL cursor, bold;
            end
          else
            if (SY6REC.SY6CSEDT[5] <= SY0EW01.SY0EWDTE)
              if (SY6REC.SY6CSTUN[6] == 0)
                converseLib.validationFailed(77);
                set SY0EM001.SY0EM1DL cursor, bold;
              end
            else
              if (SY6REC.SY6CSEDT[6] <= SY0EW01.SY0EWDTE)
                converseLib.validationFailed(77);
                set SY0EM001.SY0EM1DL cursor, bold;
              end
            end
          end
        end
      end
    end
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  SYAREC.SYABFR = SY6REC.SY6DATA;

  SY0ES35(); /* format output area for delete*/

  SY0ES40(); /* update cost table*/


end // end SY0ES15

// 1st qlty change cost update
Function SY0ES20()
   /* ******************************************************/
   /* *  this statement group changes a 1st quality cost  **/
   /* *  occurance. we first obtain the cost row,then     **/
   /* *  make our changes and replace the row.            **/
   /* ******************************************************/


  SY6REC.XGPCD = SY0EM001.XGPCD;
  SY6REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY6REC.XDMCD = SY0EM001.XDMCD;
  SY6REC.XCOCD = SY0EM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0EM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
  SY6REC.XQACD = "01";
  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(24); /* no cost record*/
    set SY0EM001.SY0EMNUM cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != +0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0ES20  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  if (SY0EM001.SY0EM1CO == SY6REC.SY6CSTUN[SY0EMNUM]
   && SY0EM001.SY0EM1DT == SY6REC.SY6CSEDT[SY0EMNUM]
   && SY0EM001.SY0EM1SC == SY6REC.SY6SCTCD[SY0EMNUM])
    return;
  end

  SYAREC.SYABFR = SY6REC.SY6DATA;

  if (SY0EW01.SY0EW1MD == "Y") /* user wants to change it*/
    SY6REC.SY6CSTUN[SY0EMNUM] = SY0EM001.SY0EM1CO;
  end
  if (SY0EM001.SY0EM1DT != 0)
    SY6REC.SY6CSEDT[SY0EMNUM] = SY0EW01.SY0EW1DT;
  end
  if (SY0EM001.SY0EM1SC != " ")
    if (SY0EM001.SY0EM1SC == "**")
      SY6REC.SY6SCTCD[SY0EMNUM] = "  ";
    else
      SY6REC.SY6SCTCD[SY0EMNUM] = SY0EM001.SY0EM1SC;
    end
  end

  SY0ES45(); /* verify effective date order*/

  SY0ES40(); /* update cost table*/


end // end SY0ES20

// delete 2nd qlty cost
Function SY0ES25()
   /* ******************************************************/
   /* *  this statement group deletes a 2nd quality cost  **/
   /* *  occurance from a cost row. we first obtain the   **/
   /* *  cost row,then make our changes and replace the   **/
   /* *  row.                                             **/
   /* ******************************************************/


  SY6REC.XGPCD = SY0EM001.XGPCD;
  SY6REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY6REC.XDMCD = SY0EM001.XDMCD;
  SY6REC.XCOCD = SY0EM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0EM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
  SY6REC.XQACD = "02";
  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(24); /* no cost record*/
    set SY0EM001.SY0EMNUM cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != +0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0ES25  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end
  end

  if (SY0EM001.SY0EMNUM == 1)
    if (SY0EM001.SY0EME2C[2] == 0)
      converseLib.validationFailed(77);
      set SY0EM001.SY0EM2DL cursor, bold;
    end
  else
    if (SY6REC.SY6CSEDT[1] <= SY0EW01.SY0EWDTE)
      if (SY6REC.SY6CSTUN[2] == 0)
        converseLib.validationFailed(77);
        set SY0EM001.SY0EM2DL cursor, bold;
      end
    else
      if (SY6REC.SY6CSEDT[2] <= SY0EW01.SY0EWDTE)
        if (SY6REC.SY6CSTUN[3] == 0)
          converseLib.validationFailed(77);
          set SY0EM001.SY0EM2DL cursor, bold;
        end
      else
        if (SY6REC.SY6CSEDT[3] <= SY0EW01.SY0EWDTE)
          if (SY6REC.SY6CSTUN[4] == 0)
            converseLib.validationFailed(77);
            set SY0EM001.SY0EM2DL cursor, bold;
          end
        else
          if (SY6REC.SY6CSEDT[4] <= SY0EW01.SY0EWDTE)
            if (SY6REC.SY6CSTUN[5] == 0)
              converseLib.validationFailed(77);
              set SY0EM001.SY0EM2DL cursor, bold;
            end
          else
            if (SY6REC.SY6CSEDT[5] <= SY0EW01.SY0EWDTE)
              if (SY6REC.SY6CSTUN[6] == 0)
                converseLib.validationFailed(77);
                set SY0EM001.SY0EM2DL cursor, bold;
              end
            else
              if (SY6REC.SY6CSEDT[6] <= SY0EW01.SY0EWDTE)
                converseLib.validationFailed(77);
                set SY0EM001.SY0EM2DL cursor, bold;
              end
            end
          end
        end
      end
    end
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  SYAREC.SYABFR = SY6REC.SY6DATA;

  SY0ES35(); /* format output area for a delete*/

  SY0ES40(); /* update cost table*/


end // end SY0ES25

// change 2nd qlty cost row
Function SY0ES30()
   /* ******************************************************/
   /* *  this statement group changes a 2nd quality cost  **/
   /* *  occurance. we first obtain the cost row,then     **/
   /* *  make our changes and replace the row.            **/
   /* ******************************************************/


  SY6REC.XGPCD = SY0EM001.XGPCD;
  SY6REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY6REC.XDMCD = SY0EM001.XDMCD;
  SY6REC.XCOCD = SY0EM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0EM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
  SY6REC.XQACD = "02";
  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(24); /* no cost record*/
    set SY0EM001.SY0EMNUM cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != +0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0ES30  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  if (SY0EM001.SY0EM2CO == SY6REC.SY6CSTUN[SY0EMNUM]
   && SY0EM001.SY0EM2DT == SY6REC.SY6CSEDT[SY0EMNUM]
   && SY0EM001.SY0EM2SC == SY6REC.SY6SCTCD[SY0EMNUM])
    return;
  end

  SYAREC.SYABFR = SY6REC.SY6DATA;

  if (SY0EW01.SY0EW2MD == "Y") /* user wants to change it*/
    SY6REC.SY6CSTUN[SY0EMNUM] = SY0EM001.SY0EM2CO;
  end
  if (SY0EM001.SY0EM2DT != 0)
    SY6REC.SY6CSEDT[SY0EMNUM] = SY0EW01.SY0EW2DT;
  end
  if (SY0EM001.SY0EM2SC != " ")
    if (SY0EM001.SY0EM2SC == "**")
      SY6REC.SY6SCTCD[SY0EMNUM] = "  ";
    else
      SY6REC.SY6SCTCD[SY0EMNUM] = SY0EM001.SY0EM2SC;
    end
  end

  SY0ES45(); /* verify effective date order*/

  SY0ES40(); /* update cost table*/


end // end SY0ES30

// format moves for delete
Function SY0ES35()
   /* ******************************************************/
   /* *  this statement group formats the output area     **/
   /* *  for the delete of a cost occurance.              **/
   /* ******************************************************/


  if (SY0EM001.SY0EMNUM == 1)
    SY6REC.SY6CSEDT[1] = SY6REC.SY6CSEDT[2];
    SY6REC.SY6CSTUN[1] = SY6REC.SY6CSTUN[2];
    SY6REC.SY6SCTCD[1] = SY6REC.SY6SCTCD[2];
    SY6REC.SY6CSEDT[2] = SY6REC.SY6CSEDT[3];
    SY6REC.SY6CSTUN[2] = SY6REC.SY6CSTUN[3];
    SY6REC.SY6SCTCD[2] = SY6REC.SY6SCTCD[3];
    SY6REC.SY6CSEDT[3] = SY6REC.SY6CSEDT[4];
    SY6REC.SY6CSTUN[3] = SY6REC.SY6CSTUN[4];
    SY6REC.SY6SCTCD[3] = SY6REC.SY6SCTCD[4];
    SY6REC.SY6CSEDT[4] = SY6REC.SY6CSEDT[5];
    SY6REC.SY6CSTUN[4] = SY6REC.SY6CSTUN[5];
    SY6REC.SY6SCTCD[4] = SY6REC.SY6SCTCD[5];
    SY6REC.SY6CSEDT[5] = SY6REC.SY6CSEDT[6];
    SY6REC.SY6CSTUN[5] = SY6REC.SY6CSTUN[6];
    SY6REC.SY6SCTCD[5] = SY6REC.SY6SCTCD[6];
    SY6REC.SY6CSEDT[6] = 0;
    SY6REC.SY6CSTUN[6] = 0;
    SY6REC.SY6SCTCD[6] = " ";
  else
    if (SY0EM001.SY0EMNUM == 2)
      SY6REC.SY6CSEDT[2] = SY6REC.SY6CSEDT[3];
      SY6REC.SY6CSTUN[2] = SY6REC.SY6CSTUN[3];
      SY6REC.SY6SCTCD[2] = SY6REC.SY6SCTCD[3];
      SY6REC.SY6CSEDT[3] = SY6REC.SY6CSEDT[4];
      SY6REC.SY6CSTUN[3] = SY6REC.SY6CSTUN[4];
      SY6REC.SY6SCTCD[3] = SY6REC.SY6SCTCD[4];
      SY6REC.SY6CSEDT[4] = SY6REC.SY6CSEDT[5];
      SY6REC.SY6CSTUN[4] = SY6REC.SY6CSTUN[5];
      SY6REC.SY6SCTCD[4] = SY6REC.SY6SCTCD[5];
      SY6REC.SY6CSEDT[5] = SY6REC.SY6CSEDT[6];
      SY6REC.SY6CSTUN[5] = SY6REC.SY6CSTUN[6];
      SY6REC.SY6SCTCD[5] = SY6REC.SY6SCTCD[6];
      SY6REC.SY6CSEDT[6] = 0;
      SY6REC.SY6CSTUN[6] = 0;
      SY6REC.SY6SCTCD[6] = " ";
    else
      if (SY0EM001.SY0EMNUM == 3)
        SY6REC.SY6CSEDT[3] = SY6REC.SY6CSEDT[4];
        SY6REC.SY6CSTUN[3] = SY6REC.SY6CSTUN[4];
        SY6REC.SY6SCTCD[3] = SY6REC.SY6SCTCD[4];
        SY6REC.SY6CSEDT[4] = SY6REC.SY6CSEDT[5];
        SY6REC.SY6CSTUN[4] = SY6REC.SY6CSTUN[5];
        SY6REC.SY6SCTCD[4] = SY6REC.SY6SCTCD[5];
        SY6REC.SY6CSEDT[5] = SY6REC.SY6CSEDT[6];
        SY6REC.SY6CSTUN[5] = SY6REC.SY6CSTUN[6];
        SY6REC.SY6SCTCD[5] = SY6REC.SY6SCTCD[6];
        SY6REC.SY6CSEDT[6] = 0;
        SY6REC.SY6CSTUN[6] = 0;
        SY6REC.SY6SCTCD[6] = " ";
      else
        if (SY0EM001.SY0EMNUM == 4)
          SY6REC.SY6CSEDT[4] = SY6REC.SY6CSEDT[5];
          SY6REC.SY6CSTUN[4] = SY6REC.SY6CSTUN[5];
          SY6REC.SY6SCTCD[4] = SY6REC.SY6SCTCD[5];
          SY6REC.SY6CSEDT[5] = SY6REC.SY6CSEDT[6];
          SY6REC.SY6CSTUN[5] = SY6REC.SY6CSTUN[6];
          SY6REC.SY6SCTCD[5] = SY6REC.SY6SCTCD[6];
          SY6REC.SY6CSEDT[6] = 0;
          SY6REC.SY6CSTUN[6] = 0;
          SY6REC.SY6SCTCD[6] = " ";
        else
          if (SY0EM001.SY0EMNUM == 5)
            SY6REC.SY6CSEDT[5] = SY6REC.SY6CSEDT[6];
            SY6REC.SY6CSTUN[5] = SY6REC.SY6CSTUN[6];
            SY6REC.SY6SCTCD[5] = SY6REC.SY6SCTCD[6];
            SY6REC.SY6CSEDT[6] = 0;
            SY6REC.SY6CSTUN[6] = 0;
            SY6REC.SY6SCTCD[6] = " ";
          else
            if (SY0EM001.SY0EMNUM == 6)
              SY6REC.SY6CSEDT[6] = 0;
              SY6REC.SY6CSTUN[6] = 0;
              SY6REC.SY6SCTCD[6] = " ";
            end
          end
        end
      end
    end
  end


end // end SY0ES35

// update cost table
Function SY0ES40()
   /* ******************************************************/
   /* *  this statement group performs the update to      **/
   /* *  cost table including audit and tag processing.   **/
   /* ******************************************************/


  SY0EW01.SY0EWZTM = VGVar.currentFormattedTime;
  SY0EW01.SY0EWWHR = SY0EW01.SY0EWZHR;
  SY0EW01.SY0EWWMN = SY0EW01.SY0EWZMN;
  SY6REC.ZZZCHGDT = SY0EW01.SY0EWDTE;
  SY6REC.ZZZCHGTM = SY0EW01.SY0EWWTM;

  call "IO0360" ("U ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
    set SY0EM001.SY1STNBR cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != +0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0ES40  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    else
      SY0ES50(); /* audit processing*/
      if (converseVar.validationMsgNum == 0)
        SY0ES55(); /* tag processing*/
      end
    end
  end


end // end SY0ES40

// sort effective dates
Function SY0ES45()
   /* ********************************************************/
   /* *  this statment group makes sure that the effective  **/
   /* *  dates remain in order.                             **/
   /* ********************************************************/


  SY0EW01.SY0EWSW1 = "Y";
  while (SY0EW01.SY0EWSW1 == "Y")
    SY0EW01.SY0EWSW1 = "N";
    SY0EWCT1 = 1;
    SY0EWCT2 = 2;
    if (SY6REC.SY6CSEDT[SY0EWCT2] > SY6REC.SY6CSEDT[SY0EWCT1])
      SY0EW01.SY0EWEDT = SY6REC.SY6CSEDT[SY0EWCT2];
      SY6REC.SY6CSEDT[SY0EWCT2] = SY6REC.SY6CSEDT[SY0EWCT1];
      SY6REC.SY6CSEDT[SY0EWCT1] = SY0EW01.SY0EWEDT;
      SY0EW01.SY0EWCST = SY6REC.SY6CSTUN[SY0EWCT2];
      SY6REC.SY6CSTUN[SY0EWCT2] = SY6REC.SY6CSTUN[SY0EWCT1];
      SY6REC.SY6CSTUN[SY0EWCT1] = SY0EW01.SY0EWCST;
      SY0EW01.SY0EWSCT = SY6REC.SY6SCTCD[SY0EWCT2];
      SY6REC.SY6SCTCD[SY0EWCT2] = SY6REC.SY6SCTCD[SY0EWCT1];
      SY6REC.SY6SCTCD[SY0EWCT1] = SY0EW01.SY0EWSCT;
      SY0EW01.SY0EWSW1 = "Y";
    end
    SY0EWCT1 = SY0EWCT1 + 1;
    SY0EWCT2 = SY0EWCT2 + 1;
  end


end // end SY0ES45

// cost table audit processing
Function SY0ES50()


   /* *****************************************************/
   /* *  this statement group formats the audit record   **/
   /* *  and performs the add call to db2 for dim/cost   **/
   /* *****************************************************/


  SYAREC.SYAUDTYP = "C";
  SYAREC.XXXTBLNM = "VDCOST01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0E   ";
    TA1REC.TA1LOCAT[1] = "SY0ES50  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VDCOST01 ";
    TA1REC.TA1MAP = "SY0EM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = SY6REC.XGPCD;
  SYAREC.SY1STNBR = SY6REC.SY1STNBR;
  SYAREC.SY2CLRID = SY6REC.SY2CLRID;
  SYAREC.XDMCD = SY6REC.XDMCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = SY6REC.XCOCD;
  SYAREC.XQACD = SY6REC.XQACD;

  SYAREC.ZZZSDT = SY0EW01.SY0EWDTE;
  SYAREC.ZZZSTM = SY0EW01.SY0EWWTM;
  SYAREC.SYAAFT = SY6REC.SY6DATA;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update -try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0ES50  ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SYAREC";
      TA1REC.TA1TBLVU = "DPROD.VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0ES50

// cost table tag processing
Function SY0ES55()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* *  for dim / cost updates.                        **/
   /* ****************************************************/


  SY9REC.SY9TGTYP = "C";
  SY9REC.XGPCD = SY6REC.XGPCD;
  SY9REC.SY1STNBR = SY6REC.SY1STNBR;
  SY9REC.SY2CLRID = SY6REC.SY2CLRID;
  SY9REC.XDMCD = SY6REC.XDMCD;

  SY9REC.ZZZSDT = SY0EW01.SY0EWDTE;
  SY9REC.ZZZSTM = SY0EW01.SY0EWWTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0E   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0ES55  ";
      TA1REC.TA1LOCAT[3] = "IO0520   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0EM001";
      TA1REC.TA1DBASE = "SY9REC";
      TA1REC.TA1TBLVU = "DPROD.VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0ES55

// validate entered dates
Function SY0ES61()


   /* *******************************************************/
   /* are entered dates valid dates?                      **/
   /* *******************************************************/

  if (SY0EM001.SY0EM1DT != 0)
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "A";
    SY0EW01.SY0EWMAP-MMDDYY = SY0EM001.SY0EM1DT;
    if (SY0EW01.SY0EWMAP-YY > 60)
      TA2CENT = 19;
    else
      TA2CENT = 20;
    end
    TA2REC.TA2GRGAN = SY0EM001.SY0EM1DT;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      if (TA2REC.TA2GRGGN < SY0EW01.SY0EWDTE)
        converseLib.validationFailed(134); /* Data in the past cannot be changed*/
        set SY0EM001.SY0EM1DT cursor, bold;
        exit stack;
      else
        SY0EW01.SY0EW1DT = TA2REC.TA2GRGGN;
      end
    else
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY0EM001.SY0EM1DT cursor, bold;
      exit stack;
    end
  else
    SY0EW01.SY0EW1DT = 0;
  end


  if (SY0EM001.SY0EM2DT != 0)
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "A";
    SY0EW01.SY0EWMAP-MMDDYY = SY0EM001.SY0EM1DT;
    if (SY0EW01.SY0EWMAP-YY > 60)
      TA2CENT = 19;
    else
      TA2CENT = 20;
    end
    TA2REC.TA2GRGAN = SY0EM001.SY0EM2DT;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      if (TA2REC.TA2GRGGN < SY0EW01.SY0EWDTE)
        converseLib.validationFailed(134); /* Data in the past cannot be changed*/
        set SY0EM001.SY0EM2DT cursor, bold;
        exit stack;
      else
        SY0EW01.SY0EW2DT = TA2REC.TA2GRGGN;
      end
    else
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY0EM001.SY0EM2DT cursor, bold;
      exit stack;
    end
  else
    SY0EW01.SY0EW2DT = 0;
  end

end // end SY0ES61

// cost type 01 qual 01 date edit
Function SY0ES62()



   /* *******************************************************/
   /* when cost type = 01 and quality = 01:               **/
   /* if initial cost and not older than current day -1   **/
   /* allow changes to amount (but not to date),  else    **/
   /* do not allow changes to past or current costs       **/
   /* *******************************************************/

  if (SY0EM001.SY0EM1CO == 0
   && SY0EM001.SY0EM1DT == 0)
     /* next sentence*/
  else
    if (SY0EM001.SY0EMNUM > 0)
      if (SY0EM001.SY0EMNUM < 6)
        SY0EWCT1 = SY0EM001.SY0EMNUM + 1; /* (index cannot be > 6)*/
        if (SY0EM001.SY0EME1C[SY0EWCT1] == 0) /* no prior cost*/
          set TA9REC empty;
          TA9REC.TA9BEGDT = SY0EM001.SY0EME1D[SY0EMNUM];
  /*  */
  /* ------------------ y2k in  begin ------------------------*/
  /*  */
          if (TA9REC.TA9BEGYY > 60)
            TA9REC.TA9BEGCC = 19;
          else
            TA9REC.TA9BEGCC = 20;
          end
  /*  */
  /* ------------------ y2k in  end --------------------------*/
  /*  */
  /*  */
  /* ------------------ y2k out begin ------------------------*/
  /*  */
  /* MOVE 19 TO TA9REC.TA9BEGCC;*/
  /*  */
  /* ------------------ y2k out end --------------------------*/
  /*  */
          TA9REC.TA9ENDDT = 0;
          TA9REC.TA9OFSET = +1;
          call "TA0290" (TA9REC) {isNoRefresh = yes, isExternal = yes};
          if (TA9REC.TA9RTNFL != 0)
            converseLib.validationFailed(30); /* invalid date*/
            set SY0EM001.SY0EME1D[SY0EMNUM] cursor, bold;
            exit stack;
          else
            if (SY0EW01.SY0EWDTE > TA9REC.TA9RTNDT)
              converseLib.validationFailed(135); /* CANNOT CHG inital cst > 1 day old*/
              set SY0EM001.SY0EMNUM cursor, bold;
              exit stack;
            else
              SY0EM001.SY0EM1DT = 0; /* cannot chg initial date*/
              return;
            end
          end
        end
      end



      set TA2REC empty;
      TA2REC.TA2GRGEN = SY0EM001.SY0EME1D[SY0EMNUM];
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(30); /* invalid date*/
        set SY0EM001.SY0EME1D[SY0EMNUM] cursor, bold;
        exit stack;
      else
        if (SY0EW01.SY0EWDTE >= TA2REC.TA2GRGGN)
          converseLib.validationFailed(134); /* CANNOT CHG PAST OR CUR CSTYP 01*/
          set SY0EM001.SY0EMNUM cursor, bold;
          exit stack;
        end
      end
    end
  end



end // end SY0ES62

// check for duplicate dates
Function SY0ES64()



   /* *******************************************************/
   /* does either entered date equal an existing date?    **/
   /* *******************************************************/

  SY0EWCT1 = 1;
  while (SY0EWCT1 <= 6)
    if (SY0EM001.SY0EM1DT != 0)
      if (SY0EM001.SY0EM1DT == SY0EW01.SY0EWE1D[SY0EWCT1])
        converseLib.validationFailed(16); /* effective date already exists*/
        set SY0EM001.SY0EM1DT cursor, bold;
        exit stack;
      end
    end
    if (SY0EM001.SY0EM2DT != 0)
      if (SY0EM001.SY0EM2DT == SY0EW01.SY0EWE2D[SY0EWCT1])
        converseLib.validationFailed(16); /* effective date already exists*/
        set SY0EM001.SY0EM2DT cursor, bold;
        exit stack;
      end
    end
    SY0EWCT1 = SY0EWCT1 + 1;
  end



end // end SY0ES64

// check for duplicate dates
Function SY0ES65()



   /* *******************************************************/
   /* does either entered date equal an existing date?    **/
   /* *******************************************************/

  if (SY0EW01.SY0EW1DT != 0)
    SY0EW01.SY0EWCT1 = 1;
    while (SY0EWCT1 <= 6)
      if (SY0EW01.SY0EW1DT == SY0EW01.SY0EWE1D[SY0EWCT1])
        SY0EWCT1 = 6;
        converseLib.validationFailed(16);
        set SY0EM001.SY0EM1DT cursor, bold;
        exit stack;
      end
      SY0EWCT1 = SY0EWCT1 + 1;
    end
  end

  if (SY0EW01.SY0EW2DT != 0)
    SY0EW01.SY0EWCT1 = 1;
    while (SY0EWCT1 <= 6)
      if (SY0EW01.SY0EW2DT == SY0EW01.SY0EWE2D[SY0EWCT1])
        SY0EWCT1 = 6;
        converseLib.validationFailed(16);
        set SY0EM001.SY0EM2DT cursor, bold;
        exit stack;
      end
      SY0EWCT1 = SY0EWCT1 + 1;
    end
  end



end // end SY0ES65

// cost type 01 qual 02 date edit
Function SY0ES66()



   /* *******************************************************/
   /* when cost type = 01 and quality = 02:               **/
   /* if initial cost and not older than current day -1   **/
   /* allow changes to amount (but not to date),  else    **/
   /* do not allow changes to past or current costs       **/
   /* *******************************************************/

  if (SY0EM001.SY0EM2CO == 0
   && SY0EM001.SY0EM2DT == 0)
     /* next sentence*/
  else
    if (SY0EM001.SY0EMNUM > 0)
      if (SY0EM001.SY0EMNUM < 6)
        SY0EWCT1 = SY0EM001.SY0EMNUM + 1; /* (index cannot be > 6)*/
        if (SY0EM001.SY0EME2C[SY0EWCT1] == 0) /* no prior cost*/
          set TA9REC empty;
          TA9REC.TA9BEGDT = SY0EM001.SY0EME2D[SY0EMNUM];
  /*  */
  /* -------------- y2k in  begin ----------*/
  /*  */
          if (TA9REC.TA9BEGYY > 60)
            TA9REC.TA9BEGCC = 19;
          else
            TA9REC.TA9BEGCC = 20;
          end
  /*  */
  /* -------------- y2k in end  ------------*/
  /*  */
  /*  */
  /* -------------- y2k out begin ----------*/
  /*  */
  /* MOVE 19 TO TA9REC.TA9BEGCC;*/
  /*  */
  /* -------------- y2k out end ------------*/
  /*  */
          TA9REC.TA9ENDDT = 0;
          TA9REC.TA9OFSET = +1;
          call "TA0290" (TA9REC) {isNoRefresh = yes, isExternal = yes};
          if (TA9REC.TA9RTNFL != 0)
            converseLib.validationFailed(30); /* invalid date*/
            set SY0EM001.SY0EME2D[SY0EMNUM] cursor, bold;
            exit stack;
          else
            if (SY0EW01.SY0EWDTE > TA9REC.TA9RTNDT)
              converseLib.validationFailed(135); /* CANNOT CHG inital cst > 1 day old*/
              set SY0EM001.SY0EMNUM cursor, bold;
              exit stack;
            else
              SY0EM001.SY0EM2DT = 0; /* cannot chg initial date*/
              return;
            end
          end
        end
      end



      set TA2REC empty;
      TA2REC.TA2GRGEN = SY0EM001.SY0EME2D[SY0EMNUM];
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "E";
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(30); /* invalid date*/
        set SY0EM001.SY0EME2D[SY0EMNUM] cursor, bold;
        exit stack;
      else
        if (SY0EW01.SY0EWDTE >= TA2REC.TA2GRGGN)
          converseLib.validationFailed(134); /* CANNOT CHG PAST OR CUR CSTYP 01*/
          set SY0EM001.SY0EMNUM cursor, bold;
          exit stack;
        end
      end
    end
  end



end // end SY0ES66

// read cost table for 1st qual
Function SY0ES71()


   /* ***************************************************/
   /* * read cost table for first quality              **/
   /* ***************************************************/

  SY6REC.XGPCD = SY0EM001.XGPCD;
  SY6REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY6REC.XDMCD = SY0EM001.XDMCD;
  SY6REC.XCOCD = SY0EM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0EM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
  SY6REC.XQACD = "01";
  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != +0
   && SQLCA.VAGen_SQLCODE != +100)
    converseLib.validationFailed(72); /* cost table error*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0E   ";
    TA1REC.TA1LOCAT[1] = "S        ";
    TA1REC.TA1LOCAT[2] = "SY0E030  ";
    TA1REC.TA1LOCAT[3] = "IO0360   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0EM001";
    TA1REC.TA1DBASE = "SY6REC";
    TA1REC.TA1TBLVU = "DPROD.VPRICE01";
    TA1TBLKE = SY6REC.SY6KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  else
    if (SQLCA.VAGen_SQLCODE == +0)
      SY0EW01.SY0EWSW2 = "Y";
    end
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0EWCT1 = 1;
    while (SY0EWCT1 <= 6)
      SY0EM001.SY0EME1C[SY0EWCT1] = SY6REC.SY6CSTUN[SY0EWCT1];
      SY0EM001.SY0EME1S[SY0EWCT1] = SY6REC.SY6SCTCD[SY0EWCT1];
      SY0EW01.SY0EWE1D[SY0EWCT1] = SY6REC.SY6CSEDT[SY0EWCT1];
      if (SY6REC.SY6CSEDT[SY0EWCT1] != 0)
        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "G";
        TA2REC.TA2GRGGN = SY6REC.SY6CSEDT[SY0EWCT1];
        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
        if (TA2REC.TA2RTNCD == 0)
          SY0EM001.SY0EME1D[SY0EWCT1] = TA2REC.TA2GRGEN;
        else
          converseLib.validationFailed(42); /* internal date error*/
          set SY0EM001.SY1STNBR cursor, bold;
        end
      else
        SY0EWCT1 = 6;
      end
      SY0EWCT1 = SY0EWCT1 + 1;
    end
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  set SY6REC empty;



end // end SY0ES71

// read cost table for 2nd qual
Function SY0ES72()



   /* ***************************************************/
   /* * read cost table for second quality             **/
   /* ***************************************************/

  SY6REC.XGPCD = SY0EM001.XGPCD;
  SY6REC.SY1STNBR = SY0EM001.SY1STNBR;
  SY6REC.SY2CLRID = SY0EM001.SY2CLRID;
  SY6REC.XDMCD = SY0EM001.XDMCD;
  SY6REC.XCOCD = SY0EM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0EM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0EM001.ZFC-CRCY-CD;
  SY6REC.XQACD = "02";
  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != +0
   && SQLCA.VAGen_SQLCODE != +100)
    converseLib.validationFailed(72); /* cost table error*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0E   ";
    TA1REC.TA1LOCAT[1] = "S        ";
    TA1REC.TA1LOCAT[2] = "SY0E030  ";
    TA1REC.TA1LOCAT[3] = "IO0360   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0EM001";
    TA1REC.TA1DBASE = "SY6REC";
    TA1REC.TA1TBLVU = "DPROD.VPRICE01";
    TA1TBLKE = SY6REC.SY6KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  else
    if (SQLCA.VAGen_SQLCODE == 0)
      SY0EW01.SY0EWSW2 = "Y";
    end
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0EWCT1 = 1;
    while (SY0EWCT1 <= 6)
      SY0EM001.SY0EME2C[SY0EWCT1] = SY6REC.SY6CSTUN[SY0EWCT1];
      SY0EM001.SY0EME2S[SY0EWCT1] = SY6REC.SY6SCTCD[SY0EWCT1];
      SY0EW01.SY0EWE2D[SY0EWCT1] = SY6REC.SY6CSEDT[SY0EWCT1];
      if (SY6REC.SY6CSEDT[SY0EWCT1] != 0)
        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "G";
        TA2REC.TA2GRGGN = SY6REC.SY6CSEDT[SY0EWCT1];
        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
        if (TA2REC.TA2RTNCD == 0)
          SY0EM001.SY0EME2D[SY0EWCT1] = TA2REC.TA2GRGEN;
        else
          converseLib.validationFailed(42); /* internal date error*/
          set SY0EM001.SY1STNBR cursor, bold;
        end
      else
        SY0EWCT1 = 6;
      end
      SY0EWCT1 = SY0EWCT1 + 1;
    end
  end

  if (SY0EW01.SY0EWSW2 == "N")
    converseLib.validationFailed(24); /* no cost record*/
    set SY0EM001.SY1STNBR cursor, bold;
    set SY0EM001.SY2CLRID bold;
    set SY0EM001.XDMCD bold;
    set SY0EM001.XCOCD bold;
  end


end // end SY0ES72

// set flag no if cost = nulls
Function SY0ESM1()
  SY0EW01.SY0EW1MD = "N"; /* field is null*/
end // end SY0ESM1

// set flag if cost = nulls
Function SY0ESM2()
  SY0EW01.SY0EW2MD = "N"; /* set flag no if nulls*/
end // end SY0ESM2

Record SY0EW01 type basicRecord
  5 SY0EWMAP-MMDDYY SY0EWMAP-MMDDYY ; 
    10 SY0EWMAP-MMDD SY0EWMAP-MMDD ; 
    10 SY0EWMAP-YY SY0EWMAP-YY ; 
  5 SY0EWDTE SY0EWDTE ; 
  5 SY0EWCT1 SY0EWCT1 ; 
  5 SY0EWCT2 SY0EWCT2 ; 
  5 SY0EWE1D SY0EWE1D [6] ; 
  5 SY0EWE2D SY0EWE2D [6] ; 
  5 SY0EW1DT SY0EW1DT ; 
  5 SY0EW2DT SY0EW2DT ; 
  5 SY0EWSW1 SY0EWSW1 ; 
  5 SY0EWSW2 SY0EWSW2 ; 
  5 SY0EWEDT SY0EWEDT ; 
  5 SY0EWCST SY0EWCST ; 
  5 SY0EWSCT SY0EWSCT ; 
  5 SY0EWZTM SY0EWZTM ; 
    10 SY0EWZHR SY0EWZHR ; 
    10 * char(1) ; 
    10 SY0EWZMN SY0EWZMN ; 
  5 SY0EWWTM SY0EWWTM ; 
    10 SY0EWWHR SY0EWWHR ; 
    10 SY0EWWMN SY0EWWMN ; 
  5 SY0EWAAA SY0EWAAA ; 
  5 SY0EWBBB SY0EWBBB ; 
  5 SY0EWCCC SY0EWCCC ; 
  5 SY0EWDDD SY0EWDDD ; 
  5 XGPCD XGPCD ; 
  5 XGPABRV XGPABRV ; 
  5 XCTCD XCTCD ; 
  5 XCTDESC XCTDESC ; 
  5 ZFC-CRCY-CD ZFC-CRCY-CD ; 
  5 ZFC-CRCY-DESC ZFC-CRCY-DESC ; 
  5 SY1STNBR SY1STNBR ; 
  5 SY1SSTNM SY1SSTNM ; 
  5 XUMDESC XUMDESC ; 
  5 SY2CLRID SY2CLRID ; 
  5 SY2CLRAB SY2CLRAB ; 
  5 XDMCD XDMCD ; 
  5 XDMDESC XDMDESC ; 
  5 XCOCD XCOCD ; 
  5 XCODESC XCODESC ; 
  5 SY0EWCAL SY0EWCAL ; 
  5 SY0EWPCT SY0EWPCT ; 
  5 SY0EWCNT SY0EWCNT ; 
  5 SY0EWRND SY0EWRND ; 
  5 SY0EW1MD SY0EW1MD ; 
  5 SY0EW2MD SY0EW2MD ; 
end // end SY0EW01

// expanded entered date
DataItem SY0EW1DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 1st qual cost chg(y/n)
DataItem SY0EW1MD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// expanded entered date
DataItem SY0EW2DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd qual cost chg(y/n)
DataItem SY0EW2MD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd cost calc
DataItem SY0EWAAA num(6,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd cost calc
DataItem SY0EWBBB num(18,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work calc indicator
DataItem SY0EWCAL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd cost calc
DataItem SY0EWCCC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work constant
DataItem SY0EWCNT num(8,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save db cost
DataItem SY0EWCST num(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0EWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0EWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd cost calc
DataItem SY0EWDDD num(9,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date
DataItem SY0EWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save existing date
DataItem SY0EWE1D num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save existing date
DataItem SY0EWE2D num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save db date
DataItem SY0EWEDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date-mmyy
DataItem SY0EWMAP-MMDD num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date-mmddyy from map
DataItem SY0EWMAP-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date-yy
DataItem SY0EWMAP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work percentage amount
DataItem SY0EWPCT num(6,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work rounding factor
DataItem SY0EWRND num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save db sub-cat
DataItem SY0EWSCT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0EWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0EWSW2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work hour
DataItem SY0EWWHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work minute
DataItem SY0EWWMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work time
DataItem SY0EWWTM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system hour
DataItem SY0EWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system minute
DataItem SY0EWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system time
DataItem SY0EWZTM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

