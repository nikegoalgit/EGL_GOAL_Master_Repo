package sy01;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import rd.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=SY01 ****
// THIS APPLICATION WILL CHANGE THE PRODUCT STYLE DB2 TABLES.
// THERE ARE TWO SCREENS FOR EACH STYLE ROW. A CHANGE IS
// DETERMINED BY COMPARING  THE RECORD  SY1REC to  SYDREC.
// THEREFORE ANY CHANGES MADE TO SY1REC MUST ALSO BE MADE TO
// SYDREC.  IF A TABLE ITEM HAS BECOME INACTIVE THE CODE WILL
// NOT EDIT EXISTING INACTIVE CODES.
// 
// 
// 
// ************************************************************
// MAINTENANCE:
// 
// Rev#   WHO      WHEN     WHY
// -----  ------  --------  -----------------------------------
//        JRICHA  06-24-86  CREATED APPLICATION
//  p090  mbuhit  01-13-88  p017-gender/gndr-age edit
//                          p018-body-type/silh. edit
// P0104  MHALST  03-28-89  Remove use of XTVCD.
// P0100  MHALST  04-13-89  Add blank style to screen.
// -spl-  jwood   04-17-89  Added xssegtr logic
// -spl-  jwood   04-17-89  Added noncsp option to calls
//        MHALST  11-13-89  Data base changes and add SYZTBL
//        MHALST  04-02-90  Add brand to screens, remove XTV
//        MHALST  10-04-90  DB2 Changes, add Forcaster
//        MHALST  02-14-91  DB2 Changes, remove XWHCDs
//        MHALST  06-11-91  DB2 Changes, add outsole/midsole
//        MHALST  07-02-91  Add seasonal data base
//        MHALST  12-10-91  Add transfer logic to allow user to
//                          transfer between this application
//                          and SY0B.
//        MHALST  01-24-92  Add fields to map M001
//        MHALST  04-14-92  Add Nbr of Airbags to M002
//        MHALST  06-09-92  DB2 Changes to XMLTBL
//        MHALST  10-12-92  DB2 Changes, add airbag nbrs
//        JRAMOS  03-01-93  Added code to flag the given style
//                          as invalid if any of its colors do
//                          not have a product region code '02'
//                          when the Nike Dept Id = 'EAO '.
//        MHALST  08-12-93  Add GPC check for XFM validation
//        MBUHIT  04-20-94  Update SYREG when forecaster chgs.
// GP-PH1 MHALST  05-11-95  Global Product phase 1; add the
//                          VTRDRV01 table for name chg review
//        MHALST  10-03-95  Add MN0V to get users region
//        MHALST  02-04-97  Correct edit on blank style
//        MHALST  02-28-97  Allow change to size scale only if
//                          global user and chg between 04/30.
//        MHALST  10-24-97  If ftwr PPS colors, protect fields
//        MHALST  08-07-98  If not on PPS, ' ' ok in mold/last
//        MHALST  08-07-98  Add scale 42 to allowable change
//        MHALST  01-10-00  Allow change to XFC codes for
//                          Europe (Spain ruling).
//        MHALST  01-09-01  Relax edit check on XQT fields
// TT#18943 PVENKA removing the DPROD.VSYSPF01 references from
//  the appln
// ************************************************************
// 
//  io modules    table
//  used          view name
// -----------    --------------
//  IO0040        dprod.vscale01
//  IO0120        dprod.vstyle01
//  IO0130        dprod.vcolor01
//  IO6640        dprod.vsyreg01
//  IO3150        dprod.vsygrp01
//  IO0530        dprod.vsyaud01
//  IO0520        dprod.vsytag01
// 
// 
// *********************
Program SY01 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  SY01W01 SY01W01; // record
  SY01W02 SY01W02; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY4REC SY4REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYBREC SYBREC; // record
  SYDREC SYDREC; // record
  SYVREC SYVREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VSTYXF01 VSTYXF01; // record
  VSYDVX02 VSYDVX02; // record
  VSYREG02 VSYREG02; // record
  VTRDRV01 VTRDRV01; // record
  XP0HW01 XP0HW01; // record
  XP0HW02 XP0HW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYRGTBL {deleteAfterUse = yes}; // table
  use SYZTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XBCTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XGATBL {deleteAfterUse = yes}; // table
  use XGCTBL {deleteAfterUse = yes}; // table
  use XCWTBL {deleteAfterUse = yes}; // table
  use XFMTBL {deleteAfterUse = yes}; // table
  use XBTTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use XSPTBL {deleteAfterUse = yes}; // table
  use XSUTBL {deleteAfterUse = yes}; // table
  use XRYTBL {deleteAfterUse = yes}; // table
  use XCNTBL {deleteAfterUse = yes}; // table
  use XQTTBL {deleteAfterUse = yes}; // table
  use XFCTBL {deleteAfterUse = yes}; // table
  use XMLTBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use SY01M.SY01M001,  // forms
      SY01M.SY01M002, 
      SY01M.XP0HM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY01001: SY01001();
     /* *****************************************/
     /* FLOW STAGE*/

    if (SYWREC.SYWPFOPT == "PF14 ")
      goto SY01015;
      SYWREC.SYWPFOPT = " ";
    else
      if (SY01W01.SYWPFOPT == "PF13B"
       && converseVar.validationMsgNum == 0)
        goto SY01010;
      else
        goto SY01005;
      end
    end
    SY01005: SY01005();

    if (converseVar.eventKey is pa2)
      goto SY01001;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY01005;
      else
        if (converseVar.eventKey is pf14)
          goto SY01020;
        else
          if (converseVar.eventKey is pf12
           || converseVar.eventKey is enter)
            goto SY01010;
          else
            converseLib.validationFailed(19);
            goto SY01005;
          end
        end
      end
    end
    SY01010: SY01010();

    if (converseVar.eventKey is pa2)
      goto SY01001;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY01010;
      else
        if (converseVar.eventKey is pf12)
          goto SY01010;
        else
          if (converseVar.eventKey is pf14)
            goto SY01025;
          else
            if (converseVar.eventKey is enter)
              goto SY01005;
            else
              converseLib.validationFailed(19);
              goto SY01010;
            end
          end
        end
      end
    end
    SY01015: SY01015();

         /* ***************************************/
         /* * go to next process.                **/
         /* ***************************************/

    goto SY01020;

    SY01020: SY01020();

    if (converseVar.eventKey is pa2)
      goto SY01001;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY01020;
      else
        if (converseVar.eventKey is pf13)
          goto SY01005;
        else
          if (converseVar.eventKey is pf12
           || converseVar.eventKey is enter)
            goto SY01025;
          else
            converseLib.validationFailed(19);
            goto SY01020;
          end
        end
      end
    end
    SY01025: SY01025();

    if (converseVar.eventKey is pa2)
      goto SY01001;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY01025;
      else
        if (converseVar.eventKey is pf12)
          goto SY01025;
        else
          if (converseVar.eventKey is pf13)
            goto SY01010;
          else
            if (converseVar.eventKey is enter)
              goto SY01020;
            else
              converseLib.validationFailed(19);
              goto SY01025;
            end
          end
        end
      end
    end
  end // end main
end // end SY01

// init. sy01m001 screen & appl.
Function SY01001()

       /* *****************************************/
       /* * 1. init. application.                **/
       /* * 2. set all rec & maps to empty       **/
       /* *    and clear.                        **/
       /* * 3. if the commarea.xgpcd is diff.    **/
       /* *    than the sywrec.xgpcd use the     **/
       /* *    sywrec.xgpcd because the user     **/
       /* *    must have transfered into this    **/
       /* *    application with the sywrec.xgpcd **/
       /* * 4. validate the gpc code.            **/
       /* *                                      **/
       /* *****************************************/
       /* **********************************************************/
       /* **/
       /* 03-01-93 JRAMOS Added stmt grp call to validate  **/
       /* colors for a given style         **/
       /* (re: EAO controls implementation)**/
       /* **/
       /* **********************************************************/

  XSENTRY();

  XSSEGTR(); /* set segmented transaction id*/

  set SYWREC empty;

  set SY1REC empty;
  set SY2REC empty;
  set VSYREG02 empty;
  set SY4REC empty;
  set SY9REC empty;
  set SYAREC empty;
  set SYVREC empty;
  set TA2REC empty;
  set TA1REC empty;
  TA1REC.TA1PGMNM = "SY01";
  TA1REC.TA1MAP = "SY01M001";
  set SY01M001 initial;
  set SY01M002 initial;
  SY01M001.SYMREV = "01";
  SY01M002.SYMREV = "01";

  SY01W01.SY01W-CLVF = "Y";

  SYWREC.SYWMSGFL = "N";
  SYWREC.SYWTRANF = COMMAREA.CAUSERA;

  if (SYWREC.XGPCD == " ")
    SY01M001.XGPCD = COMMAREA.XGPCD;
    SY01M002.XGPCD = COMMAREA.XGPCD;
  else
    if (SYWREC.XGPCD == COMMAREA.XGPCD)
      SY01M001.XGPCD = COMMAREA.XGPCD;
      SY01M002.XGPCD = COMMAREA.XGPCD;
    else
      SY01M001.XGPCD = SYWREC.XGPCD;
      SY01M002.XGPCD = SYWREC.XGPCD;
    end
  end

   /* Now, find out what region user is and set-up table of*/
   /* valid regions the user can access.*/
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE == 0)
    converseLib.validationFailed(124); /* User Id not authorized*/
  end

  if (COMMAREA.CAFROMAP == "SY0B" /* user came from B*/
   && SYWREC.SYWPFOPT == "PF13B") /* special transfer*/
    SY01W01.SYWPFOPT = SYWREC.SYWPFOPT;
    SYWREC.SYWPFOPT = "PF13 ";
    SY01M001.SY1STNBR = SYWREC.SY1STNBR;
    SY01M002.SY1STNBR = SYWREC.SY1STNBR;
    SY1REC.XGPCD = SY01M001.XGPCD;
    SY1REC.SY1STNBR = SYWREC.SY1STNBR;
    SY01SBF(); /* Set screen attributes - Map 001*/
    SY01SBM(); /* Set screen attributes - Map 002*/
    SY01SBC(); /* Get Style row*/
    SY01SBD(); /* Get code desc. for maps*/
    SYWREC.SYWMSGFL = "Y";
    if (SYWREC.SYW-ALL-REGIONS-FL == "N" /* Not global user*/
     || SY01M001.XGPCD == "02")          /* or footwear product*/
      SY01SVC(); /* then validate colors*/
    end
  else
    SY01W01.SYWPFOPT = " ";
  end

  if (SYWREC.SYWPFOPT == "PF14 ")
    exit stack;
  else
    SY01SAB(); /* validate gpc code*/
  end


end // end SY01001

// get style data for scr. 1
Function SY01005()

       /* ***************************************/
       /* *  1. display screen sy01m001 and    **/
       /* *  let user enter xgpcd and style    **/
       /* *  number.                           **/
       /* *                                    **/
       /* *  2. the process will validate      **/
       /* *     and retrieve all code descs.   **/
       /* *                                    **/
       /* *  3. the user can transfer to       **/
       /* *     any application from this      **/
       /* *     screen.                        **/
       /* *                                    **/
       /* *                                    **/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/
       /* ***********************************************************/
       /* **/
       /* 03-01-93 JRAMOS Added stmt grp to check colors   **/
       /* (re: EAO controls implementation)**/
       /* **/
       /* ***********************************************************/

  SY01M001.SYMTTLNM = "  PRODUCT STYLE - CHG 1 OF 2 ";
  SY01M001.SYMPRONM = "SY01005";
  SY01M001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY01M001.SYMREV = "01";
  SY01M001.SY01M-PPS-PROMPT = " ";
  /* MOVE 'APPLY CHANGES TO SEASON:' TO SY01M001.SY01MSPP;*/

  SY01SBT(); /* set non-key fields to protect*/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY01M001.SY1STNBR cursor;
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY01M001 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N";

       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY01SBA();

       /* ***************************************/
       /* *  set gpc and style fields to       **/
       /* *  normal.                           **/
       /* ***************************************/

  set SY01M001.SY1STNBR normal;
  set SY01M001.XGPCD normal;

       /* ***************************************/
       /* *  validate style and gpc codes      **/
       /* ***************************************/

  SY01SBB();


       /* ***************************************/
       /* *  set screens to normal             **/
       /* *  sy01sbf = screen sy01m001         **/
       /* *  sy01sbm = screen sy01m002         **/
       /* ***************************************/

  SY01SBF();
  SY01SBM();

       /* ***************************************/
       /* *  get existing style row            **/
       /* ***************************************/

  SY1REC.XGPCD = SY01M001.XGPCD;
  SY1REC.SY1STNBR = SY01M001.SY1STNBR;
  SY01SBC();

       /* ***************************************/
       /* *  check style colors                **/
       /* ***************************************/

  if (SYWREC.SYW-ALL-REGIONS-FL == "N" /* Not global user, so...*/
   || SY01M001.XGPCD == "02")          /* or footwear product*/
    SY01SVC(); /* check colors*/
    if (SY01W01.SY01W-CLVF == "N" /* Invalid color present*/
     && SY01W01.SY01W-XFC-ONLY-FL == "N") /* and not xfc only*/
      converseLib.validationFailed(193); /* then flag style as erroneous*/
      set SY01M001.SY1STNBR cursor, bold;
      exit stack;
    end
  end


       /* ***************************************/
       /* * get code description for screens   **/
       /* * sy0mm002 & sy0mm003                **/
       /* ***************************************/

  SY01SBD();
   /* IF EZEAID IS PF14;*/
   /* SY01SBE;*/
   /* LSE ;*/
   /* ;next sentence*/
   /* ND ;*/
  SYWREC.SYWMSGFL = "Y";


end // end SY01005

// update style data from scr. 1
Function SY01010()

       /* ***************************************/
       /* *  1. init. screen, protect certain  **/
       /* *     screen fields.                 **/
       /* *                                    **/
       /* *  2. display screen for user to     **/
       /* *     make changes to it. if there   **/
       /* *     are no changes then do not     **/
       /* *     update the style record.       **/
       /* *                                    **/
       /* *  3. enter will cause the user to   **/
       /* *     update and loop thru sy01m001. **/
       /* *                                    **/
       /* *  4. the other significant pf keys  **/
       /* *     will update and then transfer  **/
       /* *     the user to another application**/
       /* *                                    **/
       /* ***************************************/
       /* *********************************************************/
       /* **/
       /* 03-01-03 JRAMOS Added code to check the EAO     **/
       /* color validation flag.          **/
       /* *********************************************************/


  SY01M001.SYMTTLNM = "  PRODUCT STYLE - CHG 1 OF 2 ";
  SY01M001.SYMPRONM = "SY01010";
  SY01M001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY01M001.SYMREV = "01";
  /* MOVE 'APPLY CHANGES TO SEASON:' TO SY01M001.SY01MSPP;*/
  if (SYWREC.SYW-ON-PPS-FL == "Y")
    SY01M001.SY01M-PPS-PROMPT = "** PPS **";
    /* CODE COMMENTED OUT UNITL PPS SYNC-UP COMPLETED*/
    /* SY01S-PPS-PROT;            /* Protect PPS data items*/
  else
    SY01M001.SY01M-PPS-PROMPT = " ";
  end
  /* IF SY01M001.XGPCD NE '03';*/
  /*   SET SY01M001.SY01MSPP AUTOSKIP,DARK;*/
  /*   SET SY01M001.XSECD AUTOSKIP,DARK;*/
  /*   MOVE ' ' TO SY01M001.XSECD;*/
  /*   SET SY01M001.XSNYR AUTOSKIP,DARK;*/
  /*   MOVE 0 TO SY01M001.XSNYR;*/
  /* END;*/

  set SY01M001.XGPCD skip;
  set SY01M001.SY1STNBR skip;

  if (SY01M001.XGPCD == "03"
   && SYWREC.SYW-ALL-REGIONS-FL == "Y"
   && (SY1REC.SY4SZSCL == "04"
   || SY1REC.SY4SZSCL == "30"
   || SY1REC.SY4SZSCL == "42"))
    /* Next Sentence*/
  else
    set SY01M001.SY4SZSCL skip;
    set SY01M001.SY1DECSZ skip;
  end

  if (SY01W01.SY01W-XFC-ONLY-FL == "Y") /* XFC codes only*/
    SY01S-XFC-PROT(); /* Protect all other fields*/
  else
    if (COMMAREA.XNDCD == "EAO ") /* Nike Dept Id 'EAO ' ?*/
      if (SY01W01.SY01W-CLVF == "N") /* Erroneous EAO color found*/
        SY01SBT(); /* protect non-key fields*/
        converseLib.validationFailed(193); /* set error message*/
      end
    end
  end

  if (converseVar.validationMsgNum > 0)
    /* next sentence*/
  else
    /* CODE COMMENTED OUT UNITL PPS SYNC-UP COMPLETED*/
    /* IF SYWREC.SYW-ON-PPS-FL = 'N';*/
    set SY01M001.SY1STYNM cursor;
    /* ELSE;*/
    /* SET SY01M001.SY1SSTNM CURSOR;*/
    /* END;*/
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY01M001 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N"; /* set message flag to n*/
  SY01M002.SY1STYNM = SY01M001.SY1STYNM;
  SY01M002.XGPABRV = SY01M001.XGPABRV;
  SY01M002.XGPCD = SY01M001.XGPCD;

       /* ******************************************************/
       /* *     check for valid pf keys                       **/
       /* ******************************************************/

  SY01SCH();

       /* ******************************************************/
       /* *     CLEAR ANY LEFTOVER MESSAGE FIELDS             **/
       /* *     AND SET THE SCREEN ATTRIBUTES TO NORMAL.      **/
       /* ******************************************************/

  SY01SBF();

       /* ******************************************************/
       /* *     VALIDATE REQUIRED FIELDS FROM THE SCREEN      **/
       /* *     SY01M001.                                     **/
       /* ******************************************************/

  SY01SCB();

       /* ***************************************/
       /* *  IF CHANGES MADE UPDATE STYLE      **/
       /* *  OTHERWISE GO TO SY01005.          **/
       /* ***************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pf12)
      exit stack;
    else
      if (converseVar.eventKey is pf14)
        SYWREC.SYWMSGFL = "Y"; /* set message flag to n*/
        SY01SBE();
        exit stack;
      else
        SY01SCD();
      end
    end
  end

       /* ******************************************************/
       /* *     transfer to other applications if required    **/
       /* ******************************************************/

  SY01SCA();



  set SY01M001 empty;
  set SY01M002 empty;
  SY01M001.XGPCD = SYWREC.XGPCD;
  SY01M002.XGPCD = SYWREC.XGPCD;
  SY01M001.XGPABRV = SYWREC.XGPABRV;
  SY01M002.XGPABRV = SYWREC.XGPABRV;

  if (SY01M001.XGPCD == "03" /* If apparel*/
   && converseVar.validationMsgNum == 11) /* and file update successful*/
    SY01M001.SYMSCMSG = SY01W02.SY01W-CNT-MSG; /* move msg*/
  end

end // end SY01010

// init. sy01m002 screen & appl.
Function SY01015()

       /* ***************************************/
       /* * 1. initilize screen sy01m002.      **/
       /* *                                    **/
       /* * 2. validate gpc code.              **/
       /* * 3. if a user transfers into sy01   **/
       /* *    with a pf14 key. then they will **/
       /* *    begin processing at this point. **/
       /* *                                    **/
       /* ***************************************/


  SY01M002.XGPCD = COMMAREA.XGPCD;

  SYWREC.SYWTRANF = COMMAREA.CAUSERA;
  if (SYWREC.XGPCD == " ")
    SY01M001.XGPCD = COMMAREA.XGPCD;
    SY01M002.XGPCD = COMMAREA.XGPCD;
  else
    if (SYWREC.XGPCD == COMMAREA.XGPCD)
      SY01M001.XGPCD = COMMAREA.XGPCD;
      SY01M002.XGPCD = COMMAREA.XGPCD;
    else
      SY01M001.XGPCD = SYWREC.XGPCD;
      SY01M002.XGPCD = SYWREC.XGPCD;
    end
  end

  SY01SDA(); /* validate gpc code*/

  /* IF SY01M002.XGPCD EQ '03';        /* if apparel,*/
  /*   SET SY01M002.SY01MSPP DEFINED;  /* set-up season/year fields*/
  /*   SET SY01M002.XSECD NORMAL;*/
  /*   SET SY01M002.XSNYR NORMAL;*/
  /* ELSE;                                /* for all others, set data dark*/
  /*   SET SY01M002.SY01MSPP AUTOSKIP,DARK;*/
  /*   SET SY01M002.XSECD AUTOSKIP,DARK;*/
  /*   SET SY01M002.XSNYR AUTOSKIP,DARK;*/
  /*   MOVE ' ' TO SY01M002.XSECD;*/
  /*   MOVE ' ' TO SY01M002.XSEDESC;*/
  /*   MOVE 0 TO SY01M002.XSNYR;*/
  /* END;*/

  SYWREC.XGPCD = SY01M002.XGPCD;
  SYWREC.XGPABRV = SY01M002.XGPABRV;

  SYWREC.SYWPFOPT = " ";



end // end SY01015

// get style data for screen 2
Function SY01020()

       /* ***************************************/
       /* *  1. init. sy01m002 screen.         **/
       /* *  2. allow user to enter gpc code   **/
       /* *     and a style number.            **/
       /* *  3. validate style & gpc code.     **/
       /* *  4. retrieve style number and      **/
       /* *     get code descriptions.         **/
       /* *                                    **/
       /* ***************************************/

  SY01M002.SYMTTLNM = "  PRODUCT STYLE - CHG 2 OF 2 ";
  SY01M002.SYMPRONM = "SY01020";
  SY01M002.SYMCURDT = VGVar.currentShortGregorianDate;
  SY01M002.SYMREV = "01";
  SY01M002.SY01M-PPS-PROMPT = " ";
  /* MOVE 'APPLY CHANGES TO SEASON:' TO SY01M002.SY01MSPP;*/

  SY01SEU();

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY01M002.SY1STNBR cursor;
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY01M002 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N";

       /* ***************************************/
       /* *  check for valid pf keys           **/
       /* ***************************************/

  SY01SEA();

       /* ***************************************/
       /* *  set gpc and style fields to       **/
       /* *  normal.                           **/
       /* ***************************************/

  set SY01M002.SY1STNBR normal;
  set SY01M002.XGPCD normal;

       /* ***************************************/
       /* *  validate style and gpc codes      **/
       /* ***************************************/

  SY01SET();

       /* ***************************************/
       /* *  set screens to normal             **/
       /* *  sy01sbf = screen sy01m001         **/
       /* *  sy01sbm = screen sy01m002         **/
       /* ***************************************/

  SY01SBF();
  SY01SBM();

       /* ***************************************/
       /* *  get existing style row            **/
       /* ***************************************/

  SY1REC.XGPCD = SY01M002.XGPCD;
  SY1REC.SY1STNBR = SY01M002.SY1STNBR;
  SY01SEB();

       /* ***************************************/
       /* *  check colors per EAO controls     **/
       /* ***************************************/

  if (SYWREC.SYW-ALL-REGIONS-FL == "N" /* Not global access*/
   || SY01M002.XGPCD == "02")          /* or footwear*/
    SY01SVC(); /* check colors*/
    if (SY01W01.SY01W-CLVF == "N" /* Invalid color found*/
     && SY01W01.SY01W-XFC-ONLY-FL == "N") /* not xfc only set*/
      converseLib.validationFailed(193); /* then flag style as erroneous*/
      set SY01M002.SY1STNBR cursor, bold;
      exit stack;
    end
  end

       /* ***************************************/
       /* * get code description for screens   **/
       /* * sy01m001 & sy01m002                **/
       /* ***************************************/

  SY01SBE(); /* get code desc. for sy01m002*/

  if (converseVar.eventKey is pf13)
    SY01SBD(); /* get code desc. for sy01m001*/
  else
    /* next sentence*/
  end

  SYWREC.SYWMSGFL = "Y";



end // end SY01020

// update style data from scr. 2
Function SY01025()

       /* ***************************************/
       /* *  1. init. screen.                  **/
       /* *  2. allow user to make changes     **/
       /* *     and then validate and update   **/
       /* *     style record.                  **/
       /* *  3. updates will occure before     **/
       /* *     transfering the user to        **/
       /* *     another application.           **/
       /* *  4. if the user types in 'enter'   **/
       /* *     the process will update        **/
       /* *     loop until a significant pf    **/
       /* *     key is typed in.               **/
       /* *                                    **/
       /* ***************************************/

  SY01M002.SYMTTLNM = "  PRODUCT STYLE - CHG 2 OF 2 ";
  SY01M002.SYMPRONM = "SY01025";
  SY01M002.SYMCURDT = VGVar.currentShortGregorianDate;
  SY01M002.SYMREV = "01";
  /* MOVE 'APPLY CHANGES TO SEASON:' TO SY01M002.SY01MSPP;*/
  /* IF SY01M002.XGPCD NE '03';*/
  /*   SET SY01M002.SY01MSPP AUTOSKIP,DARK;*/
  /*   SET SY01M002.XSECD AUTOSKIP,DARK;*/
  /*   MOVE ' ' TO SY01M002.XSECD;*/
  /*   SET SY01M002.XSNYR AUTOSKIP,DARK;*/
  /*   MOVE 0 TO SY01M002.XSNYR;*/
  /* END;*/

  if (SYWREC.SYW-ON-PPS-FL == "Y") /* Colors on PPS*/
    SY01M002.SY01M-PPS-PROMPT = "** PPS **";
    /* CODE COMMENTED OUT UNTIL PPS SYNC-UP COMPLETED*/
    /* SY01S-PPS-PROT;               /* Set fields*/
  else
    SY01M002.SY01M-PPS-PROMPT = " ";
  end

  if (SY01W01.SY01W-XFC-ONLY-FL == "Y") /* xfc only*/
    SY01S-XFC-PROT();
  else
    if (COMMAREA.XNDCD == "EAO ") /* Nike Dept Id 'EAO '?*/
      if (SY01W01.SY01W-CLVF == "N") /* invalid EAO color found*/
        SY01SEU(); /* protect non-key fields*/
        converseLib.validationFailed(193); /* set error message*/
      end
    end
  end

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY01M002.SY1STNBR skip;
    set SY01M002.SY1STYNM skip;
    set SY01M002.XGPCD skip;
    if (SY01W01.SY01W-XFC-ONLY-FL == "Y") /* xfc only*/
      set SY01M002.XFCCD1 cursor;
    else
      /* CODE COMMENTED OUT UNTIL PPS SYNC-UP COMPLETED*/
      /* IF SYWREC.SYW-ON-PPS-FL = 'Y';  /* Colors on PPS*/
      /* SET SY01M002.XRYCD CURSOR;*/
      /* ELSE;*/
      set SY01M002.XFMCD cursor;
      /* END;*/
    end
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY01M002 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N"; /* init. message flag.*/

       /* ******************************************************/
       /* *     check for valid pf or action keys             **/
       /* ******************************************************/

  SY01SFB();

       /* ******************************************************/
       /* *     CLEAR ANY LEFTOVER MESSAGE FIELDS             **/
       /* *     AND SET THE SCREEN ATTRIBUTES TO NORMAL.      **/
       /* ******************************************************/

  SY01SBM();


       /* ******************************************************/
       /* *     VALIDATE REQUIRED FIELDS FROM THE SCREEN      **/
       /* *     SY01M002.                                     **/
       /* ******************************************************/

  SY01SFC();


       /* ***************************************/
       /* *  IF CHANGES MADE UPDATE STYLE      **/
       /* *  OTHERWISE GO TO SY01015.          **/
       /* ***************************************/

  if (converseVar.eventKey is pf12
   || converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is pf13)
      SYWREC.SYWMSGFL = "Y"; /* init. message flag.*/
      SY01SBD();
      exit stack;
    else
      SY01SCD();
    end
  end

       /* ******************************************************/
       /* *     process transfer to application keys          **/
       /* ******************************************************/

  SY01SFA();

       /* ***************************************/
       /* *  set-up fields to redisplay        **/
       /* *  next screen and handle get style. **/
       /* ***************************************/

  set SY01M001 empty;
  set SY01M002 empty;
  SY01M001.XGPCD = SYWREC.XGPCD;
  SY01M002.XGPCD = SYWREC.XGPCD;
  SY01M001.XGPABRV = SYWREC.XGPABRV;
  SY01M002.XGPABRV = SYWREC.XGPABRV;

  if (SY01M002.XGPCD == "03" /* If apparel*/
   && converseVar.validationMsgNum == 11) /* and file update successful*/
    SY01M002.SYMSCMSG = SY01W02.SY01W-CNT-MSG; /* move msg*/
  end
end // end SY01025

// Check VSYDVX02 to set PPS flag
Function SY01S-CHK-SYDVX()

   /* *******************************************************/
   /* Read the DPRODG.VSYDVX02 table to set flag to*/
   /* indicate if this color came from PPS system.*/
   /* *******************************************************/

  VSYDVX02.XGP-GPC-CD = SY2REC.XGPCD;
  VSYDVX02.SY-STY-NBR = SY2REC.SY1STNBR;
  VSYDVX02.SY-COLR-CD-ID = SY2REC.SY2CLRID;
  VSYDVX02.XDM-DIM-CD = SY2REC.XDMCD;

  call "VSYDVX02" ("SA", SQLCA, VSYDVX02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (VSYDVX02.RB-SG-COLR-ID != 0)
      SYWREC.SYW-ON-PPS-FL = "Y";
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(22); /* corp table error - contact sys dvl*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01";
      TA1REC.TA1LOCAT[1] = "S-CHK-SYDVX";
      TA1REC.TA1LOCAT[2] = "VSYDVX02 ";
      TA1REC.TA1LOCAT[3] = "SA";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY01M001";
      TA1REC.TA1DBASE = "DPRODG";
      TA1REC.TA1TBLVU = "VSYDVX02";
      TA1REC.TA1TBLKE = VSYDVX02.VSYDVX02-KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    end
  end

end // end SY01S-CHK-SYDVX

// Insert VTRDRV01 Row
Function SY01S-CHK-TRDRV()

   /* Insert TRDRV01 logic*/

   /* First, retrieve style id from xref table*/
  VSTYXF01.XGP-GPC-CD = SY1REC.XGPCD;
  VSTYXF01.SY-STY-NBR = SY1REC.SY1STNBR;

  call "VSTYXF01" ("SB", SQLCA, VSTYXF01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY01S-CHK-TRDRV";
    TA1REC.TA1LOCAT[2] = "SELECT         ";
    TA1REC.TA1LOCAT[3] = "               ";
    TA1REC.TA1LOCAT[4] = "               ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSTYXF01";
    TA1REC.TA1TBLKE = SY1REC.SY1KEY;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(20); /* Style table error*/
    return;
  end

   /* Now, check if tag is already there*/
  VTRDRV01.SY-STY-ID = VSTYXF01.SY-STY-ID;

  call "VTRDRV01" ("S ", SQLCA, VTRDRV01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* Tag is already in table*/
    return; /* so nothing else to do....*/
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[1] = "SY01S-CHK-TRDRV";
      TA1REC.TA1LOCAT[2] = "SELECT         ";
      TA1REC.TA1LOCAT[3] = "               ";
      TA1REC.TA1LOCAT[4] = "               ";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VTRDRV01";
      TA1REC.TA1TBLKE = SY1REC.SY1KEY;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* Style table error*/
      return;
    end
  end

   /* Tag is not there, so insert it into table*/
  VTRDRV01.SY-STY-ID = VSTYXF01.SY-STY-ID;
  VTRDRV01.ZZ-SDT = SYWREC.ZZZSDT;

  call "VTRDRV01" ("A ", SQLCA, VTRDRV01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY01S-CHK-TRDRV";
    TA1REC.TA1LOCAT[2] = "ADD            ";
    TA1REC.TA1LOCAT[3] = "               ";
    TA1REC.TA1LOCAT[4] = "               ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VTRDRV01";
    TA1REC.TA1TBLKE = SY1REC.SY1KEY;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(20); /* Style table error*/
    return;
  end

end // end SY01S-CHK-TRDRV

// Validate XDR region
Function SY01S-GET-XP0HM()

   /* Validate XDR Prod Region code*/

  XP0HW01.XP0HW-ONLY-SYREG-FL = "N";
  XP0HW01.XGPCD = SY01M001.XGPCD;
  XP0HW01.SY1STNBR = SY01M001.SY1STNBR;
  XP0HW01.SY2CLRID = " ";
  XP0HW01.XDMCD = " ";

  XP0H001(); /* so do it*/

  if (XP0HW02.XP0HWERR == "Y") /* we have an error*/
    if (XP0HW02.XP0HWENR == 0) /* Invalid function key*/
      converseLib.validationFailed(19);
    end
    if (XP0HW02.XP0HWENR == 1) /* No rows found*/
      converseLib.validationFailed(50);
    end
    if (XP0HW02.XP0HWENR == 2) /* Corp. Table Error*/
      converseLib.validationFailed(23);
    end
    return;
  else
    converseLib.clearScreen();
    
  end


end // end SY01S-GET-XP0HM

// Scan regions for current color
Function SY01S-SCN-SYREG()

   /* *******************************************************/
   /* Scan region rows for current style and selected*/
   /* regions.  Update forecaster code.*/
   /* *******************************************************/

  VSYREG02.XGP-GPC-CD = SY1REC.XGPCD;
  VSYREG02.SY-STY-NBR = SY1REC.SY1STNBR;

  XP0HWIX1 = 1;

  while (XP0HWIX1 <= 25)
    if (XP0HW01.XP0HWSEL[XP0HWIX1] == "S" /* user selected region*/
     && XP0HW01.XDR-PROD-REG-CD[XP0HWIX1] in SYWREC.XDR-PROD-REG-CD)
      VSYREG02.XDR-PROD-REG-CD = XP0HW01.XDR-PROD-REG-CD[XP0HWIX1];

      call "VSYREG02" ("S1", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};

      if (SQLCA.VAGen_SQLCODE != 0)
        converseLib.validationFailed(21); /* region table error - contact sys dvl*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY01";
        TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
        TA1REC.TA1LOCAT[2] = "VSYREG02   ";
        TA1REC.TA1LOCAT[3] = "S1 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY01M001";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VSYREG02";
        TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        exit stack;
      end

      while (SQLCA.VAGen_SQLCODE == 0
      )
        call "VSYREG02" ("N1", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};

        if (SQLCA.VAGen_SQLCODE == 0) /* found:*/
          TA1REC.TA1MAP = "SY01M001";
          TA1REC.TA1PGMNM = "SY01";
          TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
          SYAREC.SYABFR = VSYREG02.VSYREG02-GROUP;
          VSYREG02.PG-FCST-CD = SYDREC.PG1FCTCD;
          VSYREG02.ZZ-CHNG-DT = SYWREC.ZZZCHGDT;
          VSYREG02.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;
          XPSY004-UPD-SYREG(); /* update current syreg row*/
          if (SQLCA.VAGen_SQLCODE == 0)
            SYAREC.SYAUDTYP = "C";
            SYAREC.ZZZSDT = SYWREC.ZZZCHGDT;
            SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;
            XPSY005-AUD-SYREG();
            SY9REC.SY9TGTYP = "C";
            SY9REC.ZZZSDT = SYWREC.ZZZCHGDT;
            SY9REC.ZZZSTM = SYWREC.ZZZCHGTM;
            XPSY006-TAG-SYREG();
          end

        else
          if (SQLCA.VAGen_SQLCODE != 100) /* if not end of file, then bad error*/
            converseLib.validationFailed(21); /* region table error - contact sys dvl*/
            TA1REC.TA1TYPE = "DB2 ";
            TA1REC.TA1FUNC = "RETN";
            TA1REC.TA1PGMNM = "SY01";
            TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
            TA1REC.TA1LOCAT[2] = "VSYREG02   ";
            TA1REC.TA1LOCAT[3] = "N1 ";
            TA1REC.TA1LOCAT[4] = " ";
            TA1REC.TA1MAP = "SY01M001";
            TA1REC.TA1DBASE = "DPROD";
            TA1REC.TA1TBLVU = "VSYREG02";
            TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
            move SQLCA to ERRSQLCA withV60Compat;
            VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
            VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
            sysLib.rollback();
            VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
            
            call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
            exit stack;
          end
        end
      end

      call "VSYREG02" ("C1", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};

      if (SQLCA.VAGen_SQLCODE != 0)
        converseLib.validationFailed(21); /* region table error - contact sys dvl*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY01";
        TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
        TA1REC.TA1LOCAT[2] = "VSYREG02   ";
        TA1REC.TA1LOCAT[3] = "C1 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY01M001";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VSYREG02";
        TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        exit stack;
      end
    end
    XP0HWIX1 = XP0HWIX1 + 1;
  end


end // end SY01S-SCN-SYREG

// set map fields protect
Function SY01S-XFC-PROT()


       /* ******************************************/
       /* *  set SY01M001 screen attributes to    **/
       /* *  protect except special features.     **/
       /* ******************************************/

  set SY01M001.SY1STYNM protect;
  set SY01M001.SY1SSTNM protect;
  set SY01M001.SY1BSTNB protect;
  set SY01M001.SYBSTGNB protect;
  set SY01M001.SY4SZSCL protect;
  set SY01M001.SY1DECSZ protect;
  set SY01M001.XBCCD protect;
  set SY01M001.XUMCD protect;
  set SY01M001.XGACD protect;
  set SY01M001.XGCCD protect;
  set SY01M001.SY1FNSHG protect;
  set SY01M001.SY1DUTYS protect;
  set SY01M001.SY1TECHS protect;
  set SY01M001.XCWCD protect;
  set SY01M001.PG1FCTCD protect;
  set SY01M001.FY7MLDCD protect;
  set SY01M001.FY8LSTCD protect;

  set SY01M002.XFMCD protect;
  set SY01M002.XSPCD protect;
  set SY01M002.XBTCD protect;
  set SY01M002.XSUCD protect;
  set SY01M002.XRYCD protect;
  set SY01M002.XCNCD protect;
  set SY01M002.XQTCD1 protect;
  set SY01M002.XQTCD2 protect;
  set SY01M002.XMLCD[1] protect;
  set SY01M002.XMLCD[2] protect;
  set SY01M002.XMLCD[3] protect;
  set SY01M002.XMLCD[4] protect;
  set SY01M002.FK-NBR-AIRBAG-SHOE protect;
  set SY01M002.PG-AIRBAG-NBR1 protect;
  set SY01M002.PG-AIRBAG-NBR2 protect;
  set SY01M002.PG-AIRBAG-NBR3 protect;

end // end SY01S-XFC-PROT

// get todays date
Function SY01SAA()

       /* ***************************************/
       /* *   cobol date routine               **/
       /* *                                    **/
       /* ***************************************/

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0222)
    return;
  else
    if (TA2REC.TA2RTNCD != 0)
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01SAA";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC) {isExternal = yes};
      converseLib.validationFailed(30); /* invalid date entered*/
      exit stack;
    else
      /* next sentence*/
    end
  end

end // end SY01SAA

// validate gpc code
Function SY01SAB()

       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY01M001.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M001.XGPCD cursor, bold;
    SY01M001.XGPABRV = "INVALID";
    return;
  end

  if (SY01M001.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    else
      converseLib.validationFailed(65); /* status code is inactive*/
      set SY01M001.XGPCD cursor, bold;
      SY01M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      return;
    end
  else
    set SY01M001.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY01M001.XGPABRV = "INVALID";
    exit stack;
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/



  if (SY01M001.XGPCD == "02"
   && COMMAREA.CAALVL[2] == "N")
    set SY01M001.XGPCD cursor, bold;
    converseLib.validationFailed(35); /* not authorized to access gpc*/
    SY01M001.XGPABRV = "INVALID";
    exit stack;
  else
    if (SY01M001.XGPCD == "03"
     && COMMAREA.CAALVL[3] == "N")
      set SY01M001.XGPCD cursor, bold;
      SY01M001.XGPABRV = "INVALID CODE";
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      exit stack;
    else
      /* next sentence*/
    end
  end

end // end SY01SAB

// check function keys & transfer
Function SY01SBA()

       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      SY01M001.SYMSCMSG = COMMAREA.CAMSG;
      set SY01M001 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        SY01SBN(); /* transfer to sy0m application*/
        SY01M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY01M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf4)
          XSPF4();
          SY01M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY01M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf14)
            converseLib.validationFailed(0);
            exit stack; /* go to chg style screen #2*/
          else
            if (converseVar.eventKey is pf15)
              COMMAREA.CAUSERA = SYWREC.SYWTRANF;
              SY01SBP(); /* transfer to sy04 color menu application*/
              SY01M001.SYMSCMSG = COMMAREA.CAMSG;
              set SY01M001 alarm;
              converseLib.validationFailed(1);
              exit stack;
            else
              if (converseVar.eventKey is pf16)
                COMMAREA.CAUSERA = SYWREC.SYWTRANF;
                SY01SBQ(); /* transfer to sy02 chg. color application*/
                SY01M001.SYMSCMSG = COMMAREA.CAMSG;
                set SY01M001 alarm;
                converseLib.validationFailed(1);
                exit stack;
              else
                if (converseVar.eventKey is pf17)
                  COMMAREA.CAUSERA = SYWREC.SYWTRANF;
                  SY01SBR(); /* transfer to sy03 chg. size*/
                                   /* application*/
                  SY01M001.SYMSCMSG = COMMAREA.CAMSG;
                  set SY01M001 alarm;
                  converseLib.validationFailed(1);
                  exit stack;
                else
                  if (converseVar.eventKey is enter
                   || converseVar.eventKey is pf12)
                    return;
                  else
                    exit stack;
                  end
                end
              end
            end
          end
        end
      end
    end
  end


end // end SY01SBA

// gpc & style must be entered
Function SY01SBB()

       /* ***************************************/
       /* * gpc code and a style number must   **/
       /* * be valid before continuing.        **/
       /* ***************************************/

  if (SY01M001.SY1STNBR == " ")
    converseLib.validationFailed(32);
    set SY01M001.SY1STNBR cursor, bold;
  else
    /* next sentence*/
  end

  if (SY01M001.XGPCD == " ")
    converseLib.validationFailed(40);
    set SY01M001.XGPCD cursor, bold;
  else
    SY01SBS();
    SYWREC.XGPCD = SY01M001.XGPCD;
    SYWREC.XGPABRV = SY01M001.XGPABRV;
  end
end // end SY01SBB

// get style number
Function SY01SBC()


       /* ******************************************/
       /* *     GET  STYLE DATA                   **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;


  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    move SY1REC to SY01M001 withV60Compat;
    move SY1REC to SY01M002 withV60Compat;
    SYDREC.SY1DATA = SY1REC.SY1DATA;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY01M001.SY1STNBR cursor, bold;
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY01SBC  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY01M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error....*/
      set SY01M001.SY1STNBR cursor, bold;
      exit stack;
    end
  end


end // end SY01SBC

// get code desc. for style #1
Function SY01SBD()


       /* ******************************************/
       /* *   GET CODE DESC. FOR STYLE CHANGE     **/
       /* *   SCREEN SY01M001.                    **/
       /* *                                       **/
       /* ******************************************/


       /* ******************************************/
       /* *   GET BLANK STYLE DESC.               **/
       /* ******************************************/

  SY01SCC();


       /* ******************************************/
       /* *   GET STYLE GROUP DESC.               **/
       /* ******************************************/

  SY01SBV();

       /* ******************************************/
       /* *    GET FORCASTER CODE DESC.           **/
       /* ******************************************/

  SY01SBU();


       /* ******************************************/
       /* *    GET COST CATEGORY CODE DESC.       **/
       /* ******************************************/

  SY01SBH();


       /* ******************************************/
       /* *   GET GENDER CODE DESC.               **/
       /* ******************************************/


  SY01SBI();

       /* ******************************************/
       /* *   GET GENDER AGE CODE DESC.           **/
       /* ******************************************/

  SY01SBJ();

       /* ******************************************/
       /* *   GET UNIT OF MEASURE CODE DESC.      **/
       /* ******************************************/

  SY01SBK();

       /* ******************************************/
       /* *   GET BRAND DESC.                     **/
       /* ******************************************/

  SY01SCO();

       /* ******************************************/
       /* *    GET SIZE SCALE CODE DESC.          **/
       /* ******************************************/

  SY01SBL();

       /* ******************************************/
       /* *    GET SEASON CODE/YEAR DESC.         **/
       /* ******************************************/

  /* IF SY01M001.XSECD EQ ' '         /* If code is blank*/
  /*   AND SY01M001.XSNYR EQ 0;       /* and year is zero*/
  /*   MOVE ' ' TO SY01M002.XSECD;    /* blank out all data*/
  /*   MOVE 0 TO SY01M002.XSNYR;*/
  /*   MOVE ' ' TO SY01M001.XSEDESC;*/
  /*   MOVE ' ' TO SY01M002.XSEDESC;*/
  set SY01W02 empty;
  /* ELSE;*/
  /*   MOVE SY01M001.XSECD TO SY01W02.XSECD;*/
  /*   MOVE SY01M001.XSNYR TO SY01W02.XSNYR;*/
  /*   SY01SS1();*/
  /*   IF EZEMNO EQ 0;                /* no errors*/
  /*     MOVE SY01M001.XSECD TO SY01M002.XSECD;*/
  /*     MOVE SY01M001.XSNYR TO SY01M002.XSNYR;*/
  /*   END;*/
  /* END;*/

       /* ******************************************/
       /* *    GET FINISHED GOODS DESC.           **/
       /* ******************************************/

  if (SY01M001.SY1FNSHG == "1")
    SY01M001.SY01M-FNSHG-DESC = "FINISHED";
  else
    if (SY01M001.SY1FNSHG == "2")
      SY01M001.SY01M-FNSHG-DESC = "RAW MATL";
    else
      if (SY01M001.SY1FNSHG == "3")
        SY01M001.SY01M-FNSHG-DESC = "DUAL USE";
      else
        if (SY01M001.SY1FNSHG == "4")
          SY01M001.SY01M-FNSHG-DESC = "UNASSEMBLED";
        else
          if (SY01M001.SY1FNSHG == "0")
            SY01M001.SY01M-FNSHG-DESC = "N/A";
          else
            SY01M001.SY01M-FNSHG-DESC = " ";
          end
        end
      end
    end
  end

end // end SY01SBD

// get code desc. for style #2
Function SY01SBE()

       /* ******************************************/
       /* *   GET CODE DESC. FOR THE SECOND       **/
       /* *   STYLE CHANGE SCREEN. (SY01M002)     **/
       /* *                                       **/
       /* ******************************************/


       /* ******************************************/
       /* * GET MATERIAL LOWER CONTENT CODE DESC. **/
       /* ******************************************/

  SY01SED();

       /* ******************************************/
       /* *   GET SPECIAL FEATURE CODE DESC.      **/
       /* ******************************************/

  SY01SEE();

       /* ******************************************/
       /* *    GET QUOTA CATEGORY #2 CODE DESC.   **/
       /* ******************************************/

  SY01SEF();

       /* ******************************************/
       /* *    GET QUOTA CATEGORY #1 CODE DESC.   **/
       /* ******************************************/

  SY01SEG();

       /* ******************************************/
       /* *    GET CONSTRUCTION CODE DESC.        **/
       /* ******************************************/

  SY01SEH();

       /* ******************************************/
       /* *   GET ROYALRY CODE DESC.              **/
       /* ******************************************/

  SY01SEI();

       /* ******************************************/
       /* *    GET BODY TYPE CODE DESC.           **/
       /* ******************************************/

  SY01SEK();

       /* ******************************************/
       /* *   GET SILHOUETTE CODE DESC.           **/
       /* ******************************************/

  SY01SEJ();

       /* ******************************************/
       /* *     GET SPORT ACTIVITY CODE DESC.     **/
       /* ******************************************/

  SY01SEL();

       /* ******************************************/
       /* *     GET FAMILY CODE DESC.             **/
       /* ******************************************/

  SY01SEM();


end // end SY01SBE

// set scr. 1 attributes normal
Function SY01SBF()


       /* ******************************************/
       /* *  set sy0bm001 screen attributes to    **/
       /* *  normal                               **/
       /* ******************************************/

  /* IF SY01M001.XGPCD EQ '03';*/
  /*   SET SY01M001.XSECD NORMAL;*/
  /*   SET SY01M001.XSNYR NORMAL;*/
  /* END;*/
  set SY01M001.XGPCD normal;
  set SY01M001.SY1STNBR normal;
  set SY01M001.SY1STYNM normal;
  set SY01M001.SY1BSTNB normal;
  set SY01M001.SYBSTGNB normal;
  set SY01M001.SY1SSTNM normal;
  set SY01M001.SY4SZSCL normal;
  set SY01M001.XBCCD normal;
  set SY01M001.XUMCD normal;
  set SY01M001.XGACD normal;
  set SY01M001.XGCCD normal;
  set SY01M001.SY1FNSHG normal;
  set SY01M001.SY1DUTYS normal;
  set SY01M001.SY1DECSZ normal;
  set SY01M001.SY1TECHS normal;
  set SY01M001.XCWCD normal;
  set SY01M001.PG1FCTCD normal;
  set SY01M001.FY7MLDCD normal;
  set SY01M001.FY8LSTCD normal;

  SY01M001.SYMSCMSG = " ";

end // end SY01SBF

// get cost category code desc.
Function SY01SBH()

       /* ******************************************/
       /* * VERIFY COST CAT. CODE AND GET         **/
       /* * COST CAT. CODE DESC.                  **/
       /* ******************************************/


  if (SY01M001.XCWCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XCWTBL.XCWCD[SYWINDEX] != "999")
    if (SY01M001.XCWCD == XCWTBL.XCWCD[SYWINDEX]
     && SYWREC.XGPCD == XCWTBL.XGPCD[SYWINDEX])
      if (XCWTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M001.XCWDESC = XCWTBL.XCWDESC[SYWINDEX];
        return;
      else
        SY01M001.XCWDESC = XCWTBL.XCWDESC[SYWINDEX];
        set SY01M001.XCWCD cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M001.XCWCD cursor, bold;
  SY01M001.XCWDESC = "INVALID";


end // end SY01SBH

// get gender code desc.
Function SY01SBI()

       /* ******************************************/
       /* *  VERIFY GENDER CODE AND GET DESC.     **/
       /* ******************************************/

  if (SY01M001.XGCCD == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY01M001.XGCCD in XGCTBL.XGCCD)
    if (XGCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M001.XGCDESC = XGCTBL.XGCDESC[sysVar.arrayIndex];
    else
      SY01M001.XGCDESC = XGCTBL.XGCDESC[sysVar.arrayIndex];
      set SY01M001.XGCCD cursor, bold;
      converseLib.validationFailed(66); /* status code is inactive*/
    end
  else
    set SY01M001.XGCCD cursor, bold;
    SY01M001.XGCDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
  end

end // end SY01SBI

// get gender age code desc.
Function SY01SBJ()

        /* ******************************************/
        /* * VERIFY GENDER AGE CODE AND GET GENDER **/
        /* * AGE DESC.                             **/
        /* ******************************************/


  if (SY01M001.XGACD == " ")
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XGATBL.XGACD[SYWINDEX] != "99")
    if (SY01M001.XGACD == XGATBL.XGACD[SYWINDEX]
     && SYWREC.XGPCD == XGATBL.XGPCD[SYWINDEX])

      if (XGATBL.XXXSTAT[SYWINDEX] == "A")
        SY01M001.XGADESC = XGATBL.XGADESC[SYWINDEX];
      else
        SY01M001.XGADESC = XGATBL.XGADESC[SYWINDEX];
        set SY01M001.XGACD cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end

      if (SY01M001.XGCCD == XGATBL.XGCCD[SYWINDEX])
        return;
      else
        set SY01M001.XGACD cursor, bold;
        converseLib.validationFailed(139); /* gender-age invalid with gender-code*/
        return;
      end

    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M001.XGACD cursor, bold;
  SY01M001.XGADESC = "INVALID";


end // end SY01SBJ

// get uom code desc.
Function SY01SBK()

       /* ***************************************/
       /* *  verify uom code and get uom       **/
       /* *  description.                      **/
       /* ***************************************/

  if (SY01M001.XUMCD == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY01M001.XUMCD in XUMTBL.XUMCD)
    if (XUMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
    else
      SY01M001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
      set SY01M001.XUMCD cursor, bold;
      converseLib.validationFailed(66); /* status code is inactive*/
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    SY01M001.XUMDESC = "INVALID";
    set SY01M001.XUMCD cursor, bold;
  end
end // end SY01SBK

// get size scale code desc.
Function SY01SBL()

       /* ******************************************/
       /* * VERIFY SIZE SCALE CODE AND            **/
       /* * GET THE SIZE SCALE DESC.              **/
       /* ******************************************/

  if (SY01M001.SY4SZSCL == " ")
    set SY01M001.SY4SZSCL cursor, bold;
    converseLib.validationFailed(40); /* required field*/
    return;
  else
    /* next sentence*/
  end

  if (SY01M001.SY4SZSCL != SY1REC.SY4SZSCL)
    if (SY01M001.SY4SZSCL == "04"
     || SY01M001.SY4SZSCL == "30"
     || SY01M001.SY4SZSCL == "42")
      /* Next Sentence (these changes are ok)*/
    else
      set SY01M001.SY4SZSCL cursor, bold;
      converseLib.validationFailed(03); /* Invalid Code*/
      SY01M001.SYMSCMSG = "Only changes between scales 04,30, or 42 allowed";
      return;
    end
  else
    /* next sentence*/
  end

  SY4REC.SY4SZSCL = SY01M001.SY4SZSCL;
  set SQLCA empty;

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY01M001.SY4ZDESC = SY4REC.SY4ZDESC;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY01M001.SY4ZDESC = "INVALID";
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M001.SY4SZSCL cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY01SBL  ";
      TA1REC.TA1LOCAT[3] = "IO0040   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0BM002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSCALE01";
      TA1TBLKE = SY4REC.SY4SZSCL;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(53); /* size scale record error*/
      return;
    end
  end


end // end SY01SBL

// set scr. 2 attributes normal
Function SY01SBM()


       /* ******************************************/
       /* *  set sy0bm001 screen attributes to    **/
       /* *  normal                               **/
       /* ******************************************/

  /* IF SY01M002.XGPCD EQ '03';*/
  /*   SET SY01M002.XSECD NORMAL;*/
  /*   SET SY01M002.XSNYR NORMAL;*/
  /* END;*/
  set SY01M002.XGPCD normal;
  set SY01M002.SY1STNBR normal;
  set SY01M002.XFMCD normal;
  set SY01M002.XSPCD normal;
  set SY01M002.XBTCD normal;
  set SY01M002.XSUCD normal;
  set SY01M002.XRYCD normal;
  set SY01M002.XCNCD normal;
  set SY01M002.XQTCD1 normal;
  set SY01M002.XQTCD2 normal;
  set SY01M002.XFCCD1 normal;
  set SY01M002.XFCCD2 normal;
  set SY01M002.XFCCD3 normal;
  set SY01M002.XFCCD4 normal;
  set SY01M002.XFCCD5 normal;
  set SY01M002.XFCCD6 normal;
  set SY01M002.XMLCD[1] normal;
  set SY01M002.XMLCD[2] normal;
  set SY01M002.XMLCD[3] normal;
  set SY01M002.XMLCD[4] normal;
  set SY01M002.FK-NBR-AIRBAG-SHOE normal;
  set SY01M002.PG-AIRBAG-NBR1 normal;
  set SY01M002.PG-AIRBAG-NBR2 normal;
  set SY01M002.PG-AIRBAG-NBR3 normal;

  SY01M002.SYMSCMSG = " ";

end // end SY01SBM

// transfer to sy0m applicaion
Function SY01SBN()

       /* ***************************************/
       /* * transfer to produt style chg. sub. **/
       /* * menu.                              **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY0M";
  XSEXIT();


end // end SY01SBN

// transfer to sy04 application
Function SY01SBP()

       /* ***************************************/
       /* * transfer to produt style color     **/
       /* * menu application                   **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY04";
  XSEXIT();


end // end SY01SBP

// transfer to sy02 application
Function SY01SBQ()

       /* ***************************************/
       /* * transfer to produt change color    **/
       /* * application                        **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY02";
  XSEXIT();


end // end SY01SBQ

// transfer to sy03 application
Function SY01SBR()

       /* ***************************************/
       /* * transfer to produt change size     **/
       /* * application                        **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY03";
  XSEXIT();


end // end SY01SBR

// validate gpc code
Function SY01SBS()

       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY01M001.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M001.XGPCD cursor, bold;
    SY01M001.XGPABRV = "INVALID";
    return;
  end

  if (SY01M001.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    else
      converseLib.validationFailed(65); /* status code is inactive*/
      set SY01M001.XGPCD cursor, bold;
      SY01M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      return;
    end
  else
    set SY01M001.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY01M001.XGPABRV = "INVALID";
    exit stack;
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/



  if (SY01M001.XGPCD == "02"
   && COMMAREA.CAALVL[2] == "N")
    set SY01M001.XGPCD cursor, bold;
    converseLib.validationFailed(35); /* not authorized to access gpc*/
    SY01M001.XGPABRV = "INVALID";
    exit stack;
  else
    if (SY01M001.XGPCD == "03"
     && COMMAREA.CAALVL[3] == "N")
      set SY01M001.XGPCD cursor, bold;
      SY01M001.XGPABRV = "INVALID CODE";
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      exit stack;
    else
      /* next sentence*/
    end
  end

end // end SY01SBS

// set non-key fields protect
Function SY01SBT()



       /* ******************************************/
       /* *  set sy0bm001 screen attributes to    **/
       /* *  protect                              **/
       /* ******************************************/

  /* IF SY01M001.XGPCD NE '03';*/
  /*   SET SY01M001.SY01MSPP AUTOSKIP,DARK;*/
  /*   SET SY01M001.XSECD AUTOSKIP,DARK;*/
  /*   SET SY01M001.XSNYR AUTOSKIP,DARK;*/
  /*   MOVE ' ' TO SY01M001.XSEDESC;*/
  /* ELSE;*/
  /*   SET SY01M001.XSECD PROTECT;*/
  /*   SET SY01M001.XSNYR PROTECT;*/
  /* END;*/
  set SY01M001.SY1STYNM protect;
  set SY01M001.SY1BSTNB protect;
  set SY01M001.SYBSTGNB protect;
  set SY01M001.SY1SSTNM protect;
  set SY01M001.SY4SZSCL protect;
  set SY01M001.XBCCD protect;
  set SY01M001.XUMCD protect;
  set SY01M001.XGACD protect;
  set SY01M001.XGCCD protect;
  set SY01M001.SY1FNSHG protect;
  set SY01M001.SY1DUTYS protect;
  set SY01M001.SY1DECSZ protect;
  set SY01M001.SY1TECHS protect;
  set SY01M001.XCWCD protect;
  set SY01M001.PG1FCTCD protect;
  set SY01M001.FY7MLDCD protect;
  set SY01M001.FY8LSTCD protect;


end // end SY01SBT

// Get/Validate Forcaster Code
Function SY01SBU()

   /* Forcaster Code*/

  if (SY01M001.PG1FCTCD != "  ")
    PG1REC.XGPCD = SY01M001.XGPCD;
    PG1REC.PG1SC4CD = " ";
    PG1REC.PG1FCTCD = SY01M001.PG1FCTCD;
    call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (SY01M001.PG1FCTCD == "99") /* can never use this one*/
        converseLib.validationFailed(3); /* invalid code*/
        set SY01M001.PG1FCTCD cursor, modified, bold;
        SY01M001.XXXUSRID = " ";
      else
        SY01M001.XXXUSRID = PG1REC.XXXUSER;
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(143); /* scheduler code not found*/
        set SY01M001.PG1FCTCD cursor, modified, bold;
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY01";
        TA1REC.TA1LOCAT[1] = "S";
        TA1REC.TA1LOCAT[2] = "SY0BSBU";
        TA1REC.TA1MAP = "SY01M001";
        TA1REC.TA1DBASE = "DPRODG";
        TA1REC.TA1TBLVU = "VSUSER01";
        TA1REC.TA1TBLKE = PG1REC.PG1FCTCD;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(20);
        set SY01M001.PG1FCTCD cursor, bold;
        return;
      end
    end
  else
    SY01M001.XXXUSRID = " "; /* blank out name*/
  end

end // end SY01SBU

// get style group desc.
Function SY01SBV()


       /* ******************************************/
       /* *     GET  Style Group Description      **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M001.SYBSTGNB == " "
   && SY01M001.XGPCD != "02")
    SY01M001.SYBSTGNM = " "; /* clear desc.*/
    return;
  end

  set SQLCA empty;
  SYBREC.SYBSTGNB = SY01M001.SYBSTGNB;

  call "IO3150" ("S ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY01M001.SYBSTGNM = SYBREC.SYBSTGNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY01M001.SYBSTGNB cursor, bold;
      SY01M001.SYBSTGNM = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY01SBV  ";
      TA1REC.TA1LOCAT[3] = "IO3150   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY01M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYGRP01";
      TA1TBLKE = SYBREC.SYBSTGNB;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA);
      converseLib.validationFailed(141); /* style group error....*/
      set SY01M001.SYBSTGNB cursor, bold;
    end
  end

end // end SY01SBV

// check pf keys& transfer
Function SY01SCA()

   /* ******************************************/
   /* * CHECK FOR FUNCTION KEYS               **/
   /* ******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SY01W01.SYWPFOPT == "PF13B") /* came from B*/
      if (converseVar.validationMsgNum == 0  
       || converseVar.validationMsgNum == 11 /* Update successfull*/
       || converseVar.validationMsgNum == 57) /* No changes*/
        SYWREC.SYWPFOPT = SY01W01.SYWPFOPT;
        COMMAREA.CAUSERA = SYWREC.SYWTRANF;
        COMMAREA.CATOAP = "SY0B";
        XSEXIT();
        SY01M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY01M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      end
    else
      return;
    end
  end

  if (converseVar.eventKey is pf15)
    SYWREC.SYWPDATA = " ";
    SY01SBP(); /* transfer to sy04 color menu*/
                                   /* application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf16)
    SYWREC.SYWPDATA = " ";
    SY01SBQ(); /* transfer to sy02 chg. color*/
                                   /* application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf17)
    SYWREC.SYWPDATA = " ";
    SY01SBR(); /* transfer to sy03 chg. size*/
                                   /* application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  exit stack;


end // end SY01SCA

// validate sy01m001 screen field
Function SY01SCB()

       /* ******************************************/
       /* *  validate table code and get desc.    **/
       /* ******************************************/


       /* ******************************************/
       /* *    VALIDATE MOLD AND LAST             **/
       /* ******************************************/

  if (SY01M001.XGPCD == "02"
   && SYWREC.SYW-ON-PPS-FL == "Y") /* And on PPS*/
    if (SY01M001.FY8LSTCD == " ") /* Cannot be blank for footwear*/
      converseLib.validationFailed(40); /* Required field*/
      set SY01M001.FY8LSTCD cursor, bold;
    end
    if (SY01M001.FY7MLDCD == " ") /* Cannot be blank for footwear*/
      converseLib.validationFailed(40); /* Required field*/
      set SY01M001.FY7MLDCD cursor, bold;
    end
  end

       /* ******************************************/
       /* *    GET FORCASTER CODE DESC.           **/
       /* ******************************************/

  SY01SBU();


       /* ******************************************/
       /* *    GET COST CATEGORY CODE DESC.       **/
       /* ******************************************/

  SY01SCK();


       /* ******************************************/
       /* *   validate technical switch           **/
       /* ******************************************/

  if (SY01M001.SY1TECHS == "Y"
   || SY01M001.SY1TECHS == "N")
    /* next sentence*/
  else
    converseLib.validationFailed(36); /* enter a 'y' or 'n'*/
    set SY01M001.SY1TECHS cursor, bold;
  end

       /* ******************************************/
       /* *  validate duty switch                 **/
       /* ******************************************/


  if (SY01M001.SY1DUTYS == "Y"
   || SY01M001.SY1DUTYS == "N")
    /* next sentence*/
  else
    converseLib.validationFailed(36); /* please enter a 'y' or 'n'*/
    set SY01M001.SY1DUTYS cursor, bold;
  end

       /* ******************************************/
       /* * validate finshed goods                **/
       /* ******************************************/

  /* GET FNSHG*/
  if (SY01M001.SY1FNSHG == "1")
    SY01M001.SY01M-FNSHG-DESC = "FINISHED";
  else
    if (SY01M001.SY1FNSHG == "2")
      SY01M001.SY01M-FNSHG-DESC = "RAW MATL";
    else
      if (SY01M001.SY1FNSHG == "3")
        SY01M001.SY01M-FNSHG-DESC = "DUAL USE";
      else
        if (SY01M001.SY1FNSHG == "4")
          SY01M001.SY01M-FNSHG-DESC = "UNASSEMBLED";
        else
          if (SY01M001.SY1FNSHG == "0")
            SY01M001.SY01M-FNSHG-DESC = "N/A";
          else
            converseLib.validationFailed(3); /* invalid code*/
            SY01M001.SYMSCMSG = "**  0=N/A, 1=FINISHED, 2=RAW MATL, 3=DUAL USE, 4=UNASSENBLED";
            set SY01M001.SY1FNSHG cursor, bold;
            SY01M001.SY01M-FNSHG-DESC = " ";
          end
        end
      end
    end
  end



       /* ******************************************/
       /* *   GET GENDER CODE DESC.               **/
       /* ******************************************/


  SY01SCL();

       /* ******************************************/
       /* *   GET GENDER AGE CODE DESC.           **/
       /* ******************************************/

  SY01SCM();

       /* ******************************************/
       /* *   GET UNIT OF MEASURE CODE DESC.      **/
       /* ******************************************/

  SY01SCN();

       /* ******************************************/
       /* *   GET BRAND DESCRIPTION (Validate)    **/
       /* ******************************************/

  SY01SCP();

       /* ******************************************/
       /* *    GET SIZE SCALE CODE DESC.          **/
       /* ******************************************/

  SY01SBL();


       /* ******************************************/
       /* *    GET STYLE GROUP DESC.              **/
       /* ******************************************/

  SY01SBV();


       /* ******************************************/
       /* *    GET BLANK STYLE DESC.              **/
       /* ******************************************/

  SY01SCC();


       /* ******************************************/
       /* * STYLE DESCRIPTION AND SHORT STYLE     **/
       /* * DESCRIPTION CAN NOT BE BLANK          **/
       /* ******************************************/


  if (SY01M001.SY1SSTNM == " ")
    set SY01M001.SY1SSTNM cursor, bold;
    converseLib.validationFailed(40); /* required field*/
  end

  if (SY01M001.SY1STYNM == " ")
    set SY01M001.SY1STYNM cursor, bold;
    converseLib.validationFailed(40); /* required field*/
  end


       /* ******************************************/
       /* *    GET SEASON CODE/YEAR DESC.         **/
       /* ******************************************/

  /* IF SY01M001.XSECD EQ ' '         /* If code is blank*/
  /*   AND SY01M001.XSNYR EQ 0;       /* and year is zero*/
  /*   MOVE ' ' TO SY01M002.XSECD;    /* blank out all data*/
  /*   MOVE 0 TO SY01M002.XSNYR;*/
  /*   MOVE ' ' TO SY01M001.XSEDESC;*/
  /*   MOVE ' ' TO SY01M002.XSEDESC;*/
  set SY01W02 empty;
  /* ELSE;*/
  /*   MOVE SY01M001.XSECD TO SY01W02.XSECD;*/
  /*   MOVE SY01M001.XSNYR TO SY01W02.XSNYR;*/
  /*   SY01SS1();*/
  /*   IF EZEMNO EQ 0;                /* no errors*/
  /*     MOVE SY01M001.XSECD TO SY01M002.XSECD;*/
  /*     MOVE SY01M001.XSNYR TO SY01M002.XSNYR;*/
  /*   END;*/
  /* END;*/

end // end SY01SCB

// get blank style number
Function SY01SCC()


       /* ******************************************/
       /* *     GET  Blank Style Description      **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M001.SY1BSTNB == " ") /* ok if it's blank*/
    SY01M001.SY01MBSN = " "; /* clear desc.*/
    return;
  end

  SY01W01.SY1DATA = SY1REC.SY1DATA;
  SY01W01.SY01W-SCL-CD = SY1REC.SY4SZSCL;
  SY01W01.SY01W-BLNK-STY-NBR = SY1REC.SY1BSTNB;
  set SQLCA empty;
  SY1REC.XGPCD = SY01M001.XGPCD;
  SY1REC.SY1STNBR = SY01M001.SY1BSTNB;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY01M001.SY01MBSN = SY1REC.SY1STYNM;
    if (SY1REC.SY4SZSCL != SY01W01.SY01W-SCL-CD
     && SY01M001.SY1BSTNB != SY01W01.SY01W-BLNK-STY-NBR)
      converseLib.validationFailed(87); /* Scales don't match*/
      set SY01M001.SY1BSTNB cursor, bold;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY01M001.SY1BSTNB cursor, bold;
      SY01M001.SY01MBSN = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY01SCC  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY01M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA);
      converseLib.validationFailed(20); /* style table error....*/
      set SY01M001.SY1BSTNB cursor, bold;
    end
  end

  SY1REC.SY1DATA = SY01W01.SY1DATA;

end // end SY01SCC

// check for changes & update sy1
Function SY01SCD()


       /* ***************************************/
       /* *  check if changes made. if no      **/
       /* *  changes return, else update style.**/
       /* ***************************************/

  move SY01M001 to SYDREC withV60Compat;
  move SY01M002 to SYDREC withV60Compat;

  if (SYDREC.SY1DATA != SY1REC.SY1DATA)
    if (SYDREC.SY1STYNM != SY1REC.SY1STYNM) /* Name change*/
      SY01W01.SY01W-NM-CHG-FL = "Y";
    else
      SY01W01.SY01W-NM-CHG-FL = "N";
    end
  else
    converseLib.validationFailed(57);
    SYWREC.SYWMSGFL = "Y";
    return;
  end


       /* ******************************************/
       /* *   set up zzz family record for adds   **/
       /* *   zzzchgct is not updated because     **/
       /* *   the io module will take care of it. **/
       /* ******************************************/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  SY01SAA();
  SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;


       /* ******************************************/
       /* *   CREATE DATA TO SEASONAL TABLES      **/
       /* ******************************************/

  /* IF SY01M001.XGPCD EQ '03'        /* If apparel*/
  /*   AND SY01M001.XSECD NE ' ';     /* and season data entered*/
  /*   IF SYDREC.SY1STYNM NE SY1REC.SY1STYNM*/
  /*     OR SYDREC.SY1SSTNM NE SY1REC.SY1SSTNM*/
  /*     OR SYDREC.XSPCD NE SY1REC.XSPCD*/
  /*     OR SYDREC.XSUCD NE SY1REC.XSUCD*/
  /*     OR SYDREC.XFMCD NE SY1REC.XFMCD*/
  /*     OR SYDREC.XGCCD NE SY1REC.XGCCD*/
  /*     OR SYDREC.XGACD NE SY1REC.XGACD*/
  /*     OR SYDREC.XFCCD1 NE SY1REC.XFCCD1*/
  /*     OR SYDREC.XFCCD2 NE SY1REC.XFCCD2*/
  /*     OR SYDREC.XFCCD3 NE SY1REC.XFCCD3*/
  /*     OR SYDREC.XFCCD4 NE SY1REC.XFCCD4*/
  /*     OR SYDREC.XFCCD5 NE SY1REC.XFCCD5*/
  /*     OR SYDREC.XFCCD6 NE SY1REC.XFCCD6;*/
  /*     SY01SYV();                   /* write seasonal records*/
  /*   ELSE;*/
  /*     MOVE "   No Seasonal Data Fields Changed" TO SY01W02.SY01W-CNT-MSG;*/
  /*   END;*/
  /* ELSE;*/
  SY01W02.SY01W-CNT-MSG = " ";
  /* END;*/


       /* ******************************************/
       /* *   UPDATE FORECASTER ON REGION TABLE   **/
       /* ******************************************/

  if (SYDREC.PG1FCTCD != SY1REC.PG1FCTCD)
    SY01S-GET-XP0HM(); /* display region pop-up window*/
    SY01S-SCN-SYREG(); /* update rows for selected regions*/
  end


       /* ******************************************/
       /* *   ADD STYLE RECORD TO STYLE TABLE     **/
       /* ******************************************/

  SYAREC.SYABFR = SY1REC.SY1DATA; /* Save before image*/
  SY1REC.SY1DATA = SYDREC.SY1DATA;
  SY01SCE();


       /* ******************************************/
       /* *   commit style/color/size records     **/
       /* *   to their tables.                    **/
       /* ******************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

  converseLib.validationFailed(11);
  SYWREC.SYWMSGFL = "Y";

end // end SY01SCD

// update style row.
Function SY01SCE()


       /* ******************************************/
       /* *   ADD STYLE RECORD TO STYLE TABLE     **/
       /* *    1. SCREENS SY01M001 & SY01M002     **/
       /* *       ARE MOVED TO THE SY1REC AND     **/
       /* *       THEN ADDED TO THE STYLE TABLE.  **/
       /* *                                       **/
       /* *       IF THERE ARE ANY SQL ERRORS     **/
       /* *       THE RECORD IS NOT ADDED AND     **/
       /* *       THE TABLE IS ROLLED BACK TO     **/
       /* *       ITS BEFORE CONDITION.           **/
       /* *                                       **/
       /* *   we do not have to move sy01m001     **/
       /* *   and sy01m002 to sy1rec because      **/
       /* *   we moved them to sy1rec in sy01scd  **/
       /* *   statement group.                    **/
       /* *                                       **/
       /* ******************************************/



  if (converseVar.validationMsgNum > 0)
    exit stack;
  end

  set SQLCA empty;

   /* MOVE SY1HLREC.SY1DATA TO SY1REC.SY1DATA;*/
  SY1REC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SY1REC.ZZZCHGTM = SYWREC.ZZZCHGTM;


  call "IO0120" ("U ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY01SCF(); /* write audit file*/
    SY01SCG(); /* write tag file*/
    if (SY01W01.SY01W-NM-CHG-FL == "Y" /* Style name change*/
     && SY1REC.XGPCD == "03")         
      SY01S-CHK-TRDRV(); /* Check if legal tag*/
    end
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(37); /* style record  exists*/
      set SY01M001.SY1STNBR cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01   ";
      TA1REC.TA1LOCAT[1] = "C       ";
      TA1REC.TA1LOCAT[2] = "SY01SCE ";
      TA1REC.TA1LOCAT[3] = "IO0120  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY01M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error...*/
      set SY01M001.SY1STNBR cursor, bold;
      exit stack;

    end
  end


end // end SY01SCE

// write audit style record
Function SY01SCF()


       /* ******************************************/
       /* *   WRITE AUDIT RECORD FOR STYLE ADD.   **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set ERRSQLCA empty;

  SYAREC.SYAUDTYP = "C";
  SYAREC.XXXTBLNM = "VSTYLE01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY01   ";
    TA1REC.TA1LOCAT[1] = "SY01SCF  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VSTYLE01 ";
    TA1REC.TA1MAP = "SY01M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY1REC.XGPCD;
  SYAREC.SY1STNBR = SY1REC.SY1STNBR;
  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;
   /* NOTE:SYABFR moved in module SY01SCD*/
  SYAREC.SYAAFT = SY1REC.SY1DATA;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY01   ";
    TA1REC.TA1LOCAT[1] = "CHANGE   ";
    TA1REC.TA1LOCAT[2] = "SY01SCF  ";
    TA1REC.TA1LOCAT[3] = "IO0530   ";
    TA1REC.TA1LOCAT[4] = "STYLETBL";
    TA1REC.TA1MAP = "SY01M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = SYAREC.SYAKEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    set SY01M001.SY1STNBR cursor, bold;
    exit stack;
  end


end // end SY01SCF

// write tag style record
Function SY01SCG()


       /* ******************************************/
       /* *   WRITE TAG RECORD FOR STYLE ADD.     **/
       /* *                                       **/
       /* ******************************************/


  set SY9REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SY9REC.SY9TGTYP = "C";
  SYAREC.XXXTBLNM = "VSTYLE01";
  SY9REC.XGPCD = SY1REC.XGPCD;
  SY9REC.SY1STNBR = SY1REC.SY1STNBR;
  SY9REC.ZZZSDT = SYWREC.ZZZSDT;
  SY9REC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY01   ";
    TA1REC.TA1LOCAT[1] = "CHANGE  ";
    TA1REC.TA1LOCAT[2] = "SY01SCG ";
    TA1REC.TA1LOCAT[3] = "IO0520  ";
    TA1REC.TA1LOCAT[4] = "STYLETBL";
    TA1REC.TA1MAP = "SY01M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYTAG01";
    TA1TBLKE = SY9REC.SY9KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(45); /* tag table error...*/
    set SY01M001.SY1STNBR cursor, bold;
    exit stack;
  end


end // end SY01SCG

// check for valid pf keys
Function SY01SCH()

   /* ******************************************/
   /* * CHECK FOR FUNCTION KEYS               **/
   /* ******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      SY01M001.SYMSCMSG = COMMAREA.CAMSG;
      set SY01M001 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        SY01SBN(); /* transfer to sy0m application*/
        SY01M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY01M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf4)
          XSPF4();
          SY01M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY01M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is enter
           || converseVar.eventKey is pf12
           || converseVar.eventKey is pf14
           || converseVar.eventKey is pf15
           || converseVar.eventKey is pf16
           || converseVar.eventKey is pf17)
            return;
          else
            exit stack;
          end
        end
      end
    end
  end


end // end SY01SCH

// get cost category code desc.
Function SY01SCK()

       /* ******************************************/
       /* * VERIFY COST CAT. CODE AND GET         **/
       /* * COST CAT. CODE DESC.                  **/
       /* ******************************************/


  if (SY01M001.XCWCD == "  ")
    SY01M001.XCWDESC = " ";
    return;
  else
    if (SY01M001.XCWCD == "999")
      converseLib.validationFailed(3); /* invalid code*/
      SY01M001.XCWDESC = "INVALID ";
      set SY01M001.XCWCD cursor, bold;
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XCWTBL.XCWCD[SYWINDEX] != "999")
    if (SY01M001.XCWCD == XCWTBL.XCWCD[SYWINDEX]
     && SYWREC.XGPCD == XCWTBL.XGPCD[SYWINDEX])
      if (XCWTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M001.XCWDESC = XCWTBL.XCWDESC[SYWINDEX];
        return;
      else
        if (SY01M001.XCWCD == SYDREC.XCWCD)
          return;
        else
          SY01M001.XCWDESC = "INACTIVE";
          set SY01M001.XCWCD cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M001.XCWCD cursor, bold;
  SY01M001.XCWDESC = "INVALID";


end // end SY01SCK

// get gender code desc.
Function SY01SCL()

       /* ******************************************/
       /* *  VERIFY GENDER CODE AND GET DESC.     **/
       /* ******************************************/

  if (SY01M001.XGCCD == "99")
    SY01M001.XGCDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M001.XGCCD cursor, bold;
    return;
  end


  if (SY01M001.XGCCD in XGCTBL.XGCCD)
    if (XGCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M001.XGCDESC = XGCTBL.XGCDESC[sysVar.arrayIndex];
    else
      if (SY01M001.XGCCD == SYDREC.XGCCD)
        return;
      else
        converseLib.validationFailed(33); /* status code is inactive*/
        set SY01M001.XGCCD cursor, bold;
        SY01M001.XGCDESC = "INACTIVE";
      end
    end
  else
    set SY01M001.XGCCD cursor, bold;
    SY01M001.XGCDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
  end

end // end SY01SCL

// get gender age code desc.
Function SY01SCM()

        /* ******************************************/
        /* * VERIFY GENDER AGE CODE AND GET GENDER **/
        /* * AGE DESC.                             **/
        /* ******************************************/


  if (SY01M001.XGACD == "99")
    SY01M001.XGADESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M001.XGACD cursor, bold;
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XGATBL.XGACD[SYWINDEX] != "99")
    if (SY01M001.XGACD == XGATBL.XGACD[SYWINDEX]
     && SYWREC.XGPCD == XGATBL.XGPCD[SYWINDEX])
      if (XGATBL.XXXSTAT[SYWINDEX] == "A")
        SY01M001.XGADESC = XGATBL.XGADESC[SYWINDEX];
        if (SY01M001.XGCCD == XGATBL.XGCCD[SYWINDEX])
          return;
        else
          set SY01M001.XGACD cursor, bold;
          converseLib.validationFailed(139); /* gender-age invalid with gender*/
          return;
        end
      else
        if (SY01M001.XGACD == SYDREC.XGACD)
          return;
        else
          SY01M001.XGADESC = "INACTIVE";
          set SY01M001.XGACD cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M001.XGACD cursor, bold;
  SY01M001.XGADESC = "INVALID";


end // end SY01SCM

// get uom code desc.
Function SY01SCN()

       /* ***************************************/
       /* *  verify uom code and get uom       **/
       /* *  description.                      **/
       /* ***************************************/

  if (SY01M001.XUMCD == "99")
    SY01M001.XUMDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M001.XUMCD cursor, bold;
    return;
  end

  if (SY01M001.XUMCD in XUMTBL.XUMCD)
    if (XUMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
    else
      if (SY01M001.XUMCD == SYDREC.XUMCD)
        return;
      else
        converseLib.validationFailed(33); /* status code is inactive*/
        set SY01M001.XUMCD cursor, bold;
        SY01M001.XUMDESC = "INACTIVE";
      end
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    SY01M001.XUMDESC = "INVALID";
    set SY01M001.XUMCD cursor, bold;
  end
end // end SY01SCN

// get brand code
Function SY01SCO()

       /* ******************************************/
       /* *  GET brand description                **/
       /* ******************************************/

  if (SY01M001.XBCCD == " ")
    SY01M001.XBCDESC = " ";
    return;
  end

  if (SY01M001.XBCCD in XBCTBL.XBCCD)
    SY01M001.XBCDESC = XBCTBL.XBCDESC[sysVar.arrayIndex];
  else
    SY01M001.XBCDESC = "INVALID";
  end

end // end SY01SCO

// get brand code
Function SY01SCP()

       /* ******************************************/
       /* *  VALIDATE Brand Code                  **/
       /* ******************************************/

  if (SY01M001.XBCCD == SY1REC.XBCCD) /* code hasn't changed*/
    return; /* so get out*/
  end

  SY01M001.XBCDESC = " "; /* clear desc.*/
  if (SY01M001.XBCCD in XBCTBL.XBCCD)
    if (XBCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* code is active*/
      SY01M001.XBCDESC = XBCTBL.XBCDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(33); /* status is inactive*/
      set SY01M001.XBCCD cursor, bold;
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M001.XBCCD cursor, bold;
  end

end // end SY01SCP

// validate gpc code
Function SY01SDA()

       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY01M002.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XGPCD cursor, bold;
    SY01M002.XGPABRV = "INVALID";
    return;
  end

  if (SY01M002.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M002.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPABRV[sysVar.arrayIndex];
    else
      converseLib.validationFailed(33); /* status code is inactive*/
      set SY01M002.XGPCD cursor, bold;
      SY01M002.XGPABRV = "INACTIVE";
      return;
    end
  else
    set SY01M002.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY01M002.XGPABRV = "INVALID";
    exit stack;
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/



  if (SY01M002.XGPCD == "02"
   && COMMAREA.CAALVL[2] == "N")
    set SY01M002.XGPCD cursor, bold;
    converseLib.validationFailed(35); /* not authorized to access gpc*/
    SY01M002.XGPABRV = "INVALID";
    exit stack;
  else
    if (SY01M002.XGPCD == "03"
     && COMMAREA.CAALVL[3] == "N")
      set SY01M002.XGPCD cursor, bold;
      SY01M002.XGPABRV = "INVALID CODE";
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      exit stack;
    else
      /* next sentence*/
    end
  end

end // end SY01SDA

// check pf keys & transfer
Function SY01SEA()

       /* ******************************************/
       /* * CHECK FOR FUNCTION KEYS               **/
       /* ******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      SY01M001.SYMSCMSG = COMMAREA.CAMSG;
      set SY01M001 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        SY01SBN(); /* transfer to sy0m application*/
        SY01M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY01M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf4)
          XSPF4();
          SY01M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY01M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf13)
            converseLib.validationFailed(0);
            exit stack; /* go to  chg style  screen #1*/
          else
            if (converseVar.eventKey is pf15)
              SY01SBP(); /* transfer to sy04 color menu application*/
              SY01M001.SYMSCMSG = COMMAREA.CAMSG;
              set SY01M001 alarm;
              converseLib.validationFailed(1);
              exit stack;
            else
              if (converseVar.eventKey is pf16)
                SY01SBQ(); /* transfer to sy02 chg. color application*/
                SY01M001.SYMSCMSG = COMMAREA.CAMSG;
                set SY01M001 alarm;
                converseLib.validationFailed(1);
                exit stack;
              else
                if (converseVar.eventKey is pf17)
                  SY01SBR(); /* transfer to sy03 chg. size*/
                                   /* application*/
                  SY01M001.SYMSCMSG = COMMAREA.CAMSG;
                  set SY01M001 alarm;
                  converseLib.validationFailed(1);
                  exit stack;
                else
                  if (converseVar.eventKey is enter
                   || converseVar.eventKey is pf12)
                    return;
                  else
                    exit stack;
                  end
                end
              end
            end
          end
        end
      end
    end
  end


end // end SY01SEA

// get style row data for scr. 2
Function SY01SEB()


       /* ******************************************/
       /* *     GET  STYLE DATA                   **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;


  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    move SY1REC to SY01M001 withV60Compat;
    move SY1REC to SY01M002 withV60Compat;
    SYDREC.SY1DATA = SY1REC.SY1DATA;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY01M002.SY1STNBR cursor, bold;
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY01   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY01SEB  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY01M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error....*/
      set SY01M002.SY1STNBR cursor, bold;
      exit stack;
    end
  end


end // end SY01SEB

// get mat. lower content code
Function SY01SED()

       /* ******************************************/
       /* *  GET MATERIAL CONTENT LOWER CODE      **/
       /* *  AND THE DESCRIPTION.                 **/
       /* *  NOTE: These are now called outsole & **/
       /* *        midsole (primary & secondary). **/
       /* ******************************************/

  if (SY01M002.XMLCD[4] == " ")
    SY01M002.XMLCD[4] = "00";
  end

  if (SY01M002.XMLCD[4] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[4] cursor, bold;
    SY01M002.XMLDESC[4] = "INVALID  ";
  else
    SY01M002.XMLDESC[4] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[4] == " ")
      if (SY01M002.XMLCD[4] == XMLTBL.XMLCD[SYWINDEX])
        SY01M002.XMLDESC[4] = XMLTBL.XMLDESC[SYWINDEX];
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[4] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[4] cursor, bold;
      SY01M002.XMLDESC[4] = "INVALID";
    end
  end

  if (SY01M002.XMLCD[3] == " ")
    SY01M002.XMLCD[3] = "00";
  end

  if (SY01M002.XMLCD[3] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[3] cursor, bold;
    SY01M002.XMLDESC[3] = "INVALID  ";
  else
    SY01M002.XMLDESC[3] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[3] == " ")
      if (SY01M002.XMLCD[3] == XMLTBL.XMLCD[SYWINDEX])
        SY01M002.XMLDESC[3] = XMLTBL.XMLDESC[SYWINDEX];
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[3] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[3] cursor, bold;
      SY01M002.XMLDESC[3] = "INVALID";
    end
  end

  if (SY01M002.XMLCD[2] == " ")
    SY01M002.XMLCD[2] = "00";
  end

  if (SY01M002.XMLCD[2] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[2] cursor, bold;
    SY01M002.XMLDESC[2] = "INVALID  ";
  else
    SY01M002.XMLDESC[2] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[2] == " ")
      if (SY01M002.XMLCD[2] == XMLTBL.XMLCD[SYWINDEX])
        SY01M002.XMLDESC[2] = XMLTBL.XMLDESC[SYWINDEX];
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[2] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[2] cursor, bold;
      SY01M002.XMLDESC[2] = "INVALID";
    end
  end

  if (SY01M002.XMLCD[1] == " ")
    SY01M002.XMLCD[1] = "00";
  end

  if (SY01M002.XMLCD[1] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[1] cursor, bold;
    SY01M002.XMLDESC[1] = "INVALID  ";
  else
    SY01M002.XMLDESC[1] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[1] == " ")
      if (SY01M002.XMLCD[1] == XMLTBL.XMLCD[SYWINDEX])
        SY01M002.XMLDESC[1] = XMLTBL.XMLDESC[SYWINDEX];
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[1] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[1] cursor, bold;
      SY01M002.XMLDESC[1] = "INVALID";
    end
  end


end // end SY01SED

// get special feat. code & desc.
Function SY01SEE()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE ALL SPECIAL FEATURE CODES.  **/
       /* *                                       **/
       /* ******************************************/

   /* verify the 6th special feature code*/

  SY01SEN();

   /* verify the 5th special feature code*/

  SY01SEO();

   /* verify the 4th special feature code*/

  SY01SEP();

   /* verify the 3rd special feature code*/

  SY01SEQ();

   /* verify the 2nd special feature code*/

  SY01SER();

   /* verify the 1st special feature code*/

  SY01SES();
end // end SY01SEE

// get quota cat. #2 code & desc.
Function SY01SEF()
       /* ******************************************/
       /* *   VERIFY QUOTA CAT. #2 CODE AND GET   **/
       /* *   THE DESCRIPTION.                    **/
       /* *    sy01mqt2 = quota cat desc. field.  **/
       /* ******************************************/

  if (SY01M002.XQTCD2 == " ")
    SY01M002.SY01MQT2 = " ";
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XQTTBL.XQTCD[SYWINDEX] != "999")
    if (SY01M002.XQTCD2 == XQTTBL.XQTCD[SYWINDEX]
     && SYWREC.XGPCD == XQTTBL.XGPCD[SYWINDEX])
      SY01M002.SY01MQT2 = XQTTBL.XQTDESC1[SYWINDEX];
      return;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY01M002.SY01MQT2 = "UNKNOWN";

end // end SY01SEF

// get quota cat. #1 code & desc.
Function SY01SEG()

       /* ******************************************/
       /* *   VERIFY QUOTA CAT. #1 CODE AND GET   **/
       /* *   THE DESCRIPTION.                    **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XQTCD1 == " ")
    SY01M002.SY01MQT1 = " ";
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XQTTBL.XQTCD[SYWINDEX] != "999")
    if (SY01M002.XQTCD1 == XQTTBL.XQTCD[SYWINDEX]
     && SYWREC.XGPCD == XQTTBL.XGPCD[SYWINDEX])
      SY01M002.SY01MQT1 = XQTTBL.XQTDESC1[SYWINDEX];
      return;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY01M002.SY01MQT1 = "UNKNOWN";

end // end SY01SEG

// get con. code & desc.
Function SY01SEH()

       /* ******************************************/
       /* * VERIFY CONSTRUCTION CODE AND GET      **/
       /* * THE DESC.                             **/
       /* ******************************************/

  if (SY01M002.XCNCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XCNTBL.XCNCD[SYWINDEX] != "99")
    if (SY01M002.XCNCD == XCNTBL.XCNCD[SYWINDEX]
     && SYWREC.XGPCD == XCNTBL.XGPCD[SYWINDEX])
      if (XCNTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XCNDESC = XCNTBL.XCNDESC[SYWINDEX];
        return;
      else
        SY01M002.XCNDESC = XCNTBL.XCNDESC[SYWINDEX];
        set SY01M002.XCNCD cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XCNCD cursor, bold;
  SY01M002.XCNDESC = "INVALID";


end // end SY01SEH

// get royalty code & desc.
Function SY01SEI()

       /* ******************************************/
       /* * VERIFY ROYALTY CODE AND GET           **/
       /* * THE DESC.                             **/
       /* ******************************************/

  if (SY01M002.XRYCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XRYTBL.XRYCD[SYWINDEX] != "99")
    if (SY01M002.XRYCD == XRYTBL.XRYCD[SYWINDEX]
     && SY01M002.XGPCD == XRYTBL.XGPCD[SYWINDEX])
      if (XRYTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XRYDESC = XRYTBL.XRYDESC[SYWINDEX];
        return;
      else
        SY01M002.XRYDESC = XRYTBL.XRYDESC[SYWINDEX];
        set SY01M002.XRYCD cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XRYCD cursor, bold;
  SY01M002.XRYDESC = "INVALID";


end // end SY01SEI

// get silhouette code & desc.
Function SY01SEJ()

       /* ******************************************/
       /* * VERIFY SILHOUETTE CODE AND GET        **/
       /* * THE DESC.                             **/
       /* ******************************************/

  if (SY01M002.XSUCD == " ")
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XSUTBL.XSUCD[SYWINDEX] != "99")
    if (SY01M002.XSUCD == XSUTBL.XSUCD[SYWINDEX]
     && SYWREC.XGPCD == XSUTBL.XGPCD[SYWINDEX])

      if (XSUTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XSUDESC = XSUTBL.XSUDESC[SYWINDEX];
        if (XSUTBL.XGPCD[SYWINDEX] == "03") /* apparel*/
          if (SY01M002.XBTCD == XSUTBL.XBTCD[SYWINDEX])
            return;
          else
            set SY01M002.XSUCD cursor, bold;
            converseLib.validationFailed(140); /* silhouette invalid with body type*/
            return;
          end
        else
          return;
        end
      else
        SY01M002.XSUDESC = XSUTBL.XSUDESC[SYWINDEX];
        set SY01M002.XSUCD cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XSUCD cursor, bold;
  SY01M002.XSUDESC = "INVALID";


end // end SY01SEJ

// get body type code & desc.
Function SY01SEK()

       /* ******************************************/
       /* * VERIFY BODY TYPE CODE AND GET         **/
       /* * THE DESC.                             **/
       /* ******************************************/


  if (SY01M002.XBTCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XBTTBL.XBTCD[SYWINDEX] != "99")
    if (SY01M002.XBTCD == XBTTBL.XBTCD[SYWINDEX]
     && SYWREC.XGPCD == XBTTBL.XGPCD[SYWINDEX])
      if (XBTTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XBTDESC = XBTTBL.XBTDESC[SYWINDEX];
        return;
      else
        SY01M002.XBTDESC = XBTTBL.XBTDESC[SYWINDEX];
        set SY01M002.XBTCD cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XBTCD cursor, bold;
  SY01M002.XBTDESC = "INVALID";


end // end SY01SEK

// get sport act. code & desc.
Function SY01SEL()

       /* ******************************************/
       /* *  VERIFY SPORT ACTIVITY CODE AND       **/
       /* *  THE DESC.                            **/
       /* ******************************************/


  if (SY01M002.XSPCD == " ")
    return;
  else
    /* next sentence*/
  end


  if (SY01M002.XSPCD in XSPTBL.XSPCD)
    if (XSPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M002.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
    else
      SY01M002.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
      set SY01M002.XSPCD cursor, bold;
      converseLib.validationFailed(66); /* inactive status*/
    end
  else
    set SY01M002.XSPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY01M002.XSPDESC = "INVALID";
  end

end // end SY01SEL

// get family code & desc.
Function SY01SEM()

       /* ******************************************/
       /* *  VERIFY FAMILY CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY01M002.XFMCD == " "
   && SY1REC.XFMCD == " ")
    return;
  else
    /* next sentence*/
  end


  if (SY01M002.XFMCD in XFMTBL.XFMCD)
    SY01M002.XFMDESC = XFMTBL.XFMDESC[sysVar.arrayIndex];
    if (SY01M002.XFMCD != SY1REC.XFMCD)
      if (XFMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        if (XFMTBL.XGP-GPC-CD[sysVar.arrayIndex] == " "
         || XFMTBL.XGP-GPC-CD[sysVar.arrayIndex] == SY1REC.XGPCD)
          return;
        else
          set SY01M002.XFMCD cursor, bold;
          converseLib.validationFailed(3);
          SY01M002.SYMSCMSG = "    PRODUCTS GPC IS INVALID FOR THIS FAMILY CODE";
        end
      else
        set SY01M002.XFMCD cursor, bold;
        converseLib.validationFailed(66); /* inactive status*/
      end
    end
  else
    set SY01M002.XFMCD cursor, bold;
    SY01M002.XFMDESC = " ";
    SY01M002.XFMDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
  end

end // end SY01SEM

// get special feat. code #6
Function SY01SEN()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 6TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD6 == " ")
    SY01M002.XFCABRV6 = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD6 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV6 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        SY01M002.XFCABRV6 = XFCTBL.XFCABRV[SYWINDEX];
        set SY01M002.XFCCD6 cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD6 cursor, bold;
  SY01M002.XFCABRV6 = "INVALID";


end // end SY01SEN

// get special feat. code #5
Function SY01SEO()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 5TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD5 == " ")
    SY01M002.XFCABRV5 = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD5 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV5 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        SY01M002.XFCABRV5 = XFCTBL.XFCABRV[SYWINDEX];
        set SY01M002.XFCCD5 cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD5 cursor, bold;
  SY01M002.XFCABRV5 = "INVALID";


end // end SY01SEO

// get special feat. code #4
Function SY01SEP()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 4TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD4 == " ")
    SY01M002.XFCABRV4 = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD4 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV4 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        SY01M002.XFCABRV4 = XFCTBL.XFCABRV[SYWINDEX];
        set SY01M002.XFCCD4 cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD4 cursor, bold;
  SY01M002.XFCABRV4 = "INVALID";


end // end SY01SEP

// get special feat. code #3
Function SY01SEQ()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 3RD SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD3 == " ")
    SY01M002.XFCABRV3 = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD3 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV3 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        SY01M002.XFCABRV3 = XFCTBL.XFCABRV[SYWINDEX];
        set SY01M002.XFCCD3 cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD3 cursor, bold;
  SY01M002.XFCABRV3 = "INVALID";


end // end SY01SEQ

// get special feat. code #2
Function SY01SER()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 2nd SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD2 == " ")
    SY01M002.XFCABRV2 = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD2 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV2 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        SY01M002.XFCABRV2 = XFCTBL.XFCABRV[SYWINDEX];
        set SY01M002.XFCCD2 cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD2 cursor, bold;
  SY01M002.XFCABRV2 = "INVALID";



end // end SY01SER

// get special feat. code #1
Function SY01SES()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 1ST SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD1 == " ")
    SY01M002.XFCABRV1 = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD1 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV1 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        SY01M002.XFCABRV1 = XFCTBL.XFCABRV[SYWINDEX];
        set SY01M002.XFCCD1 cursor, bold;
        converseLib.validationFailed(66); /* status code is inactive*/
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD1 cursor, bold;
  SY01M002.XFCABRV1 = "INVALID";




end // end SY01SES

// validate style & gpc codes
Function SY01SET()

       /* ***************************************/
       /* * gpc code and a style number must   **/
       /* * be valid before continuing.        **/
       /* ***************************************/

  if (SY01M002.SY1STNBR == " ")
    converseLib.validationFailed(32);
    set SY01M002.SY1STNBR cursor, bold;
    exit stack;
  else
    /* next sentence*/
  end

  if (SY01M002.XGPCD == " ")
    converseLib.validationFailed(40);
    set SY01M002.XGPCD cursor, bold;
    exit stack;
  else
    SY01SDA();
    SYWREC.XGPCD = SY01M002.XGPCD;
    SYWREC.XGPABRV = SY01M002.XGPABRV;
  end
end // end SY01SET

// set non-key fields protect
Function SY01SEU()



       /* ******************************************/
       /* *  set sy01m002 screen attributes to    **/
       /* *  protect                              **/
       /* ******************************************/

  /* IF SY01M002.XGPCD NE '03';*/
  /*   SET SY01M002.SY01MSPP AUTOSKIP,DARK;*/
  /*   SET SY01M002.XSECD AUTOSKIP,DARK;*/
  /*   SET SY01M002.XSNYR AUTOSKIP,DARK;*/
  /*   MOVE ' ' TO SY01M002.XSEDESC;*/
  /* ELSE;*/
  /*   SET SY01M002.XSECD PROTECT;*/
  /*   SET SY01M002.XSNYR PROTECT;*/
  /* END;*/
  set SY01M002.XFMCD protect;
  set SY01M002.XSPCD protect;
  set SY01M002.XBTCD protect;
  set SY01M002.XSUCD protect;
  set SY01M002.XRYCD protect;
  set SY01M002.XCNCD protect;
  set SY01M002.XQTCD1 protect;
  set SY01M002.XQTCD2 protect;
  set SY01M002.XFCCD1 protect;
  set SY01M002.XFCCD2 protect;
  set SY01M002.XFCCD3 protect;
  set SY01M002.XFCCD4 protect;
  set SY01M002.XFCCD5 protect;
  set SY01M002.XFCCD6 protect;
  set SY01M002.XMLCD[1] protect;
  set SY01M002.XMLCD[2] protect;
  set SY01M002.XMLCD[3] protect;
  set SY01M002.XMLCD[4] protect;
  set SY01M002.FK-NBR-AIRBAG-SHOE protect;
  set SY01M002.PG-AIRBAG-NBR1 protect;
  set SY01M002.PG-AIRBAG-NBR2 protect;
  set SY01M002.PG-AIRBAG-NBR3 protect;


end // end SY01SEU

// check pf keys
Function SY01SFA()

       /* ******************************************/
       /* * CHECK FOR FUNCTION KEYS               **/
       /* ******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SY01W01.SYWPFOPT == "PF13B") /* came from SY0B*/
      if (converseVar.validationMsgNum == 0  
       || converseVar.validationMsgNum == 11 /* Update Successfull*/
       || converseVar.validationMsgNum == 57) /* No changes*/
        SYWREC.SYWPFOPT = SY01W01.SYWPFOPT;
        COMMAREA.CAUSERA = SYWREC.SYWTRANF;
        COMMAREA.CATOAP = "SY0B";
        XSEXIT();
        SY01M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY01M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      end
    else
      return;
    end
  end

  if (converseVar.eventKey is pf1)
    COMMAREA.CAUSERA = " ";
    XSPF1();
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf3)
    SYWREC.SYWPDATA = " ";
    SY01SBN(); /* transfer to sy0m application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf12
   || converseVar.eventKey is pf13)
    return;
  end

  if (converseVar.eventKey is pf15)
    SYWREC.SYWPDATA = " ";
    SY01SBP(); /* transfer to sy04 color menu*/
                                   /* application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf16)
    SYWREC.SYWPDATA = " ";
    SY01SBQ(); /* transfer to sy02 chg. color*/
                                   /* application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf17)
    SYWREC.SYWPDATA = " ";
    SY01SBR(); /* transfer to sy03 chg. size*/
                                   /* application*/
    SY01M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY01M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  exit stack;

end // end SY01SFA

// check for valid pf keys
Function SY01SFB()

       /* ******************************************/
       /* * CHECK FOR FUNCTION KEYS               **/
       /* ******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      SY01M001.SYMSCMSG = COMMAREA.CAMSG;
      set SY01M001 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        SY01SBN(); /* transfer to sy0m application*/
        SY01M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY01M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf4)
          XSPF4();
          SY01M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY01M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is enter
           || converseVar.eventKey is pf12
           || converseVar.eventKey is pf13
           || converseVar.eventKey is pf15
           || converseVar.eventKey is pf16
           || converseVar.eventKey is pf17)
            return;
          else
            exit stack;
          end
        end
      end
    end
  end


end // end SY01SFB

// get code desc. for style #2
Function SY01SFC()


       /* ******************************************/
       /* *   GET CODE DESC. FOR THE SECOND       **/
       /* *   STYLE CHANGE SCREEN. (SY01M002)     **/
       /* *                                       **/
       /* ******************************************/


       /* ******************************************/
       /* * GET MATERIAL LOWER CONTENT CODE DESC. **/
       /* ******************************************/

  SY01SFD();

       /* ******************************************/
       /* *   GET SPECIAL FEATURE CODE DESC.      **/
       /* ******************************************/

  SY01SFE();

       /* ******************************************/
       /* *    GET QUOTA CATEGORY #2 CODE DESC.   **/
       /* ******************************************/

  SY01SFL();

       /* ******************************************/
       /* *    GET QUOTA CATEGORY #1 CODE DESC.   **/
       /* ******************************************/

  SY01SFM();

       /* ******************************************/
       /* *    GET CONSTRUCTION CODE DESC.        **/
       /* ******************************************/

  SY01SFN();

       /* ******************************************/
       /* *   GET ROYALtY CODE DESC.              **/
       /* ******************************************/

  SY01SFO();

       /* ******************************************/
       /* *    GET BODY TYPE CODE DESC.           **/
       /* ******************************************/

  SY01SFQ();

       /* ******************************************/
       /* *   GET SILHOUETTE CODE DESC.           **/
       /* ******************************************/

  SY01SFP();

       /* ******************************************/
       /* *     GET SPORT ACTIVITY CODE DESC.     **/
       /* ******************************************/

  SY01SFR();


       /* ******************************************/
       /* *     GET FAMILY CODE DESC.             **/
       /* ******************************************/

  SY01SFS();


       /* ******************************************/
       /* *    GET SEASON CODE/YEAR DESC.         **/
       /* ******************************************/

  /* IF SY01M002.XSECD EQ ' '         /* If code is blank*/
  /*   AND SY01M002.XSNYR EQ 0;       /* and year is zero*/
  /*   MOVE ' ' TO SY01M001.XSECD;    /* blank out all data*/
  /*   MOVE 0 TO SY01M001.XSNYR;*/
  /*   MOVE ' ' TO SY01M001.XSEDESC;*/
  /*   MOVE ' ' TO SY01M002.XSEDESC;*/
  set SY01W02 empty;
  /* ELSE;*/
  /*   MOVE SY01M002.XSECD TO SY01W02.XSECD;*/
  /*   MOVE SY01M002.XSNYR TO SY01W02.XSNYR;*/
  /*   SY01SS2();*/
  /*   IF EZEMNO EQ 0;                /* no errors*/
  /*     MOVE SY01M002.XSECD TO SY01M001.XSECD;*/
  /*     MOVE SY01M002.XSNYR TO SY01M001.XSNYR;*/
  /*   END;*/
  /* END;*/

end // end SY01SFC

// get mat. lower content code
Function SY01SFD()

       /* ******************************************/
       /* *  GET MATERIAL CONTENT LOWER CODE      **/
       /* *  AND THE DESCRIPTION.                 **/
       /* *  NOTE: These are now called outsole & **/
       /* *        midsole (primary & secondary). **/
       /* ******************************************/

  if (SY01M002.XMLCD[4] == " ")
    SY01M002.XMLCD[4] = "00";
  end

  if (SY01M002.XMLCD[4] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[4] cursor, bold;
    SY01M002.XMLDESC[4] = "INVALID  ";
  else
    SY01M002.XMLDESC[4] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[4] == " ")
      if (SY01M002.XMLCD[4] == XMLTBL.XMLCD[SYWINDEX])
        if (XMLTBL.XXXSTAT[SYWINDEX] == "A")
          SY01M002.XMLDESC[4] = XMLTBL.XMLDESC[SYWINDEX];
        else
          if (SY01M002.XMLCD[4] == SYDREC.XMLCD[4])
            SY01M002.XMLDESC[4] = XMLTBL.XMLDESC[SYWINDEX];
          else
            SY01M002.XMLDESC[4] = "INACTIVE";
            set SY01M002.XMLCD[4] cursor, bold;
            converseLib.validationFailed(33); /* status code is inactive*/
          end
        end
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[4] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[4] cursor, bold;
      SY01M002.XMLDESC[4] = "INVALID";
    end
  end

  if (SY01M002.XMLCD[3] == " ")
    SY01M002.XMLCD[3] = "00";
  end

  if (SY01M002.XMLCD[3] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[3] cursor, bold;
    SY01M002.XMLDESC[3] = "INVALID  ";
  else
    SY01M002.XMLDESC[3] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[3] == " ")
      if (SY01M002.XMLCD[3] == XMLTBL.XMLCD[SYWINDEX])
        if (XMLTBL.XXXSTAT[SYWINDEX] == "A")
          SY01M002.XMLDESC[3] = XMLTBL.XMLDESC[SYWINDEX];
        else
          if (SY01M002.XMLCD[3] == SYDREC.XMLCD[3])
            SY01M002.XMLDESC[3] = XMLTBL.XMLDESC[SYWINDEX];
          else
            SY01M002.XMLDESC[3] = "INACTIVE";
            set SY01M002.XMLCD[3] cursor, bold;
            converseLib.validationFailed(33); /* status code is inactive*/
          end
        end
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[3] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[3] cursor, bold;
      SY01M002.XMLDESC[3] = "INVALID";
    end
  end

  if (SY01M002.XMLCD[2] == " ")
    SY01M002.XMLCD[2] = "00";
  end

  if (SY01M002.XMLCD[2] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[2] cursor, bold;
    SY01M002.XMLDESC[2] = "INVALID  ";
  else
    SY01M002.XMLDESC[2] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[2] == " ")
      if (SY01M002.XMLCD[2] == XMLTBL.XMLCD[SYWINDEX])
        if (XMLTBL.XXXSTAT[SYWINDEX] == "A")
          SY01M002.XMLDESC[2] = XMLTBL.XMLDESC[SYWINDEX];
        else
          if (SY01M002.XMLCD[2] == SYDREC.XMLCD[2])
            SY01M002.XMLDESC[2] = XMLTBL.XMLDESC[SYWINDEX];
          else
            SY01M002.XMLDESC[2] = "INACTIVE";
            set SY01M002.XMLCD[2] cursor, bold;
            converseLib.validationFailed(33); /* status code is inactive*/
          end
        end
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[2] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[2] cursor, bold;
      SY01M002.XMLDESC[2] = "INVALID";
    end
  end

  if (SY01M002.XMLCD[1] == " ")
    SY01M002.XMLCD[1] = "00";
  end

  if (SY01M002.XMLCD[1] == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XMLCD[1] cursor, bold;
    SY01M002.XMLDESC[1] = "INVALID  ";
  else
    SY01M002.XMLDESC[1] = " ";
    SYWREC.SYWINDEX = 1;
    while (XMLTBL.XMLCD[SYWINDEX] != "99"
     && SY01M002.XMLDESC[1] == " ")
      if (SY01M002.XMLCD[1] == XMLTBL.XMLCD[SYWINDEX])
        if (XMLTBL.XXXSTAT[SYWINDEX] == "A")
          SY01M002.XMLDESC[1] = XMLTBL.XMLDESC[SYWINDEX];
        else
          if (SY01M002.XMLCD[1] == SYDREC.XMLCD[1])
            SY01M002.XMLDESC[1] = XMLTBL.XMLDESC[SYWINDEX];
          else
            SY01M002.XMLDESC[1] = "INACTIVE";
            set SY01M002.XMLCD[1] cursor, bold;
            converseLib.validationFailed(33); /* status code is inactive*/
          end
        end
      end
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
    if (SY01M002.XMLDESC[1] == " ")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XMLCD[1] cursor, bold;
      SY01M002.XMLDESC[1] = "INVALID";
    end
  end


end // end SY01SFD

// get special feat. code & desc.
Function SY01SFE()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE ALL SPECIAL FEATURE CODES.  **/
       /* *                                       **/
       /* ******************************************/

   /* verify the 6th special feature code*/

  SY01SFF();

   /* verify the 5th special feature code*/

  SY01SFG();

   /* verify the 4th special feature code*/

  SY01SFH();

   /* verify the 3rd special feature code*/

  SY01SFI();

   /* verify the 2nd special feature code*/

  SY01SFJ();

   /* verify the 1st special feature code*/

  SY01SFK();
end // end SY01SFE

// get special feat. code #6
Function SY01SFF()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 6TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD6 == " ")
    SY01M002.XFCABRV6 = " ";
    return;
  else
    if (SY01M002.XFCCD6 == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFCCD6 cursor, bold;
      SY01M002.XFCABRV6 = "INVALID";
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD6 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV6 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        if (SY01M002.XFCCD6 == SYDREC.XFCCD6)
          return;
        else
          SY01M002.XFCABRV6 = "INACTIVE";
          set SY01M002.XFCCD6 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD6 cursor, bold;
  SY01M002.XFCABRV6 = "INVALID";


end // end SY01SFF

// get special feat. code #5
Function SY01SFG()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 5TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD5 == " ")
    SY01M002.XFCABRV5 = " ";
    return;
  else
    if (SY01M002.XFCCD5 == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFCCD5 cursor, bold;
      SY01M002.XFCABRV5 = "INVALID";
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD5 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV5 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        if (SY01M002.XFCCD5 == SYDREC.XFCCD5)
          return;
        else
          SY01M002.XFCABRV5 = "INACTIVE";
          set SY01M002.XFCCD5 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD5 cursor, bold;
  SY01M002.XFCABRV5 = "INVALID";


end // end SY01SFG

// get special feat. code #4
Function SY01SFH()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 4TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD4 == " ")
    SY01M002.XFCABRV4 = " ";
    return;
  else
    if (SY01M002.XFCCD4 == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFCCD4 cursor, bold;
      SY01M002.XFCABRV4 = "INVALID";
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD4 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV4 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        if (SY01M002.XFCCD4 == SYDREC.XFCCD4)
          return;
        else
          SY01M002.XFCABRV4 = "INACTIVE";
          set SY01M002.XFCCD4 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD4 cursor, bold;
  SY01M002.XFCABRV4 = "INVALID";


end // end SY01SFH

// get special feat. code #3
Function SY01SFI()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 3RD SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD3 == " ")
    SY01M002.XFCABRV3 = " ";
    return;
  else
    if (SY01M002.XFCCD3 == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFCCD3 cursor, bold;
      SY01M002.XFCABRV3 = "INVALID";
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD3 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV3 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        if (SY01M002.XFCCD3 == SYDREC.XFCCD3)
          return;
        else
          SY01M002.XFCABRV3 = "INACTIVE";
          set SY01M002.XFCCD3 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD3 cursor, bold;
  SY01M002.XFCABRV3 = "INVALID";


end // end SY01SFI

// get special feat. code #2
Function SY01SFJ()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 2nd SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD2 == " ")
    SY01M002.XFCABRV2 = " ";
    return;
  else
    if (SY01M002.XFCCD2 == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFCCD2 cursor, bold;
      SY01M002.XFCABRV2 = "INVALID";
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD2 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV2 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        if (SY01M002.XFCCD2 == SYDREC.XFCCD2)
          return;
        else
          SY01M002.XFCABRV2 = "INACTIVE";
          set SY01M002.XFCCD2 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD2 cursor, bold;
  SY01M002.XFCABRV2 = "INVALID";



end // end SY01SFJ

// get special feat. code #1
Function SY01SFK()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 1ST SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XFCCD1 == " ")
    SY01M002.XFCABRV1 = " ";
    return;
  else
    if (SY01M002.XFCCD1 == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFCCD1 cursor, bold;
      SY01M002.XFCABRV1 = "INVALID";
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY01M002.XFCCD1 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      if (XFCTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XFCABRV1 = XFCTBL.XFCABRV[SYWINDEX];
        return;
      else
        if (SY01M002.XFCCD1 == SYDREC.XFCCD1)
          return;
        else
          SY01M002.XFCABRV1 = "INACTIVE";
          set SY01M002.XFCCD1 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XFCCD1 cursor, bold;
  SY01M002.XFCABRV1 = "INVALID";




end // end SY01SFK

// get quota cat. #2 code & desc.
Function SY01SFL()
       /* ******************************************/
       /* *   VERIFY QUOTA CAT. #2 CODE AND GET   **/
       /* *   THE DESCRIPTION.                    **/
       /* *    sy01mqt2 = quota cat desc. field.  **/
       /* ******************************************/

  if (SY01M002.XQTCD2 == " ")
    SY01M002.SY01MQT2 = " ";
    return;
  else
    if (SY01M002.XQTCD2 == "999")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XQTCD2 cursor, bold;
      SY01M002.SY01MQT2 = "INVALID";
      return;
    else
      if (SY01M002.XQTCD2 == SY1REC.XQTCD2) /* code not changed*/
        return;
      end
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XQTTBL.XQTCD[SYWINDEX] != "999")
    if (SY01M002.XQTCD2 == XQTTBL.XQTCD[SYWINDEX]
     && SYWREC.XGPCD == XQTTBL.XGPCD[SYWINDEX])
      if (XQTTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.SY01MQT2 = XQTTBL.XQTDESC1[SYWINDEX];
        return;
      else
        if (SY01M002.XQTCD2 == SYDREC.XQTCD2)
          return;
        else
          SY01M002.SY01MQT2 = "INACTIVE";
          set SY01M002.XQTCD2 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XQTCD2 cursor, bold;
  SY01M002.SY01MQT2 = "INVALID";


end // end SY01SFL

// get quota cat. #1 code & desc.
Function SY01SFM()

       /* ******************************************/
       /* *   VERIFY QUOTA CAT. #1 CODE AND GET   **/
       /* *   THE DESCRIPTION.                    **/
       /* *                                       **/
       /* ******************************************/

  if (SY01M002.XQTCD1 == " ")
    SY01M002.SY01MQT1 = " ";
    return;
  else
    if (SY01M002.XQTCD1 == "999")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XQTCD1 cursor, bold;
      SY01M002.SY01MQT1 = "INVALID";
      return;
    else
      if (SY01M002.XQTCD1 == SY1REC.XQTCD1) /* code not changed*/
        return;
      end
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XQTTBL.XQTCD[SYWINDEX] != "999")
    if (SY01M002.XQTCD1 == XQTTBL.XQTCD[SYWINDEX]
     && SYWREC.XGPCD == XQTTBL.XGPCD[SYWINDEX])
      if (XQTTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.SY01MQT1 = XQTTBL.XQTDESC1[SYWINDEX];
        return;
      else
        if (SY01M002.XQTCD1 == SYDREC.XQTCD1)
          return;
        else
          SY01M002.SY01MQT1 = "INACTIVE";
          set SY01M002.XQTCD1 cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XQTCD1 cursor, bold;
  SY01M002.SY01MQT1 = "INVALID";

end // end SY01SFM

// get con. code & desc.
Function SY01SFN()

       /* ******************************************/
       /* * VERIFY CONSTRUCTION CODE AND GET      **/
       /* * THE DESC.                             **/
       /* ******************************************/


  if (SY01M002.XCNCD == "  ")
    SY01M002.XCNDESC = " ";
    return;
  else
    if (SY01M002.XCNCD == "99")
      converseLib.validationFailed(3); /* invalid code*/
      SY01M002.XCNDESC = "INVALID";
      set SY01M002.XCNCD cursor, bold;
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XCNTBL.XCNCD[SYWINDEX] != "99")
    if (SY01M002.XCNCD == XCNTBL.XCNCD[SYWINDEX]
     && SYWREC.XGPCD == XCNTBL.XGPCD[SYWINDEX])
      if (XCNTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XCNDESC = XCNTBL.XCNDESC[SYWINDEX];
        return;
      else
        if (SY01M002.XCNCD == SYDREC.XCNCD)
          return;
        else
          SY01M002.XCNDESC = "INACTIVE";
          set SY01M002.XCNCD cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XCNCD cursor, bold;
  SY01M002.XCNDESC = "INVALID";


end // end SY01SFN

// get royalty code & desc.
Function SY01SFO()

       /* ******************************************/
       /* * VERIFY ROYALTY CODE AND GET           **/
       /* * THE DESC.                             **/
       /* ******************************************/


  if (SY01M002.XRYCD == "  ")
    SY01M002.XRYDESC = " ";
    return;
  else
    if (SY01M002.XRYCD == "99")
      converseLib.validationFailed(3); /* invalid code*/
      SY01M002.XRYDESC = "INVALID";
      set SY01M002.XRYCD cursor, bold;
      return;
    else
      /* next sentence*/
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XRYTBL.XRYCD[SYWINDEX] != "99")
    if (SY01M002.XRYCD == XRYTBL.XRYCD[SYWINDEX]
     && SY01M002.XGPCD == XRYTBL.XGPCD[SYWINDEX])
      if (XRYTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XRYDESC = XRYTBL.XRYDESC[SYWINDEX];
        return;
      else
        if (SY01M002.XRYCD == SYDREC.XRYCD)
          return;
        else
          SY01M002.XRYDESC = "INACTIVE";
          set SY01M002.XRYCD cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XRYCD cursor, bold;
  SY01M002.XRYDESC = "INVALID";


end // end SY01SFO

// get silhouette code & desc.
Function SY01SFP()

       /* ******************************************/
       /* * VERIFY SILHOUETTE CODE AND GET        **/
       /* * THE DESC.                             **/
       /* ******************************************/


  if (SY01M002.XSUCD == "99")
    SY01M002.XSUDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
    set SY01M002.XSUCD cursor, bold;
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XSUTBL.XSUCD[SYWINDEX] != "99")
    if (SY01M002.XSUCD == XSUTBL.XSUCD[SYWINDEX]
     && SYWREC.XGPCD == XSUTBL.XGPCD[SYWINDEX])
      if (XSUTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XSUDESC = XSUTBL.XSUDESC[SYWINDEX];
        if (XSUTBL.XGPCD[SYWINDEX] == "03") /* apparel*/
          if (SY01M002.XBTCD == XSUTBL.XBTCD[SYWINDEX])
            return;
          else
            set SY01M002.XSUCD cursor, bold;
            converseLib.validationFailed(140); /* silhouette invalid with body type*/
            return;
          end
        else
          return;
        end
      else
        if (SY01M002.XSUCD == SYDREC.XSUCD)
          return;
        else
          SY01M002.XSUDESC = "INACTIVE";
          set SY01M002.XSUCD cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XSUCD cursor, bold;
  SY01M002.XSUDESC = "INVALID";


end // end SY01SFP

// get body type code & desc.
Function SY01SFQ()

       /* ******************************************/
       /* * VERIFY BODY TYPE CODE AND GET         **/
       /* * THE DESC.                             **/
       /* ******************************************/


  if (SY01M002.XBTCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    SY01M002.XBTDESC = "INVALID";
    set SY01M002.XBTCD cursor, bold;
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XBTTBL.XBTCD[SYWINDEX] != "99")
    if (SY01M002.XBTCD == XBTTBL.XBTCD[SYWINDEX]
     && SYWREC.XGPCD == XBTTBL.XGPCD[SYWINDEX])
      if (XBTTBL.XXXSTAT[SYWINDEX] == "A")
        SY01M002.XBTDESC = XBTTBL.XBTDESC[SYWINDEX];
        return;
      else
        if (SY01M002.XBTCD == SYDREC.XBTCD)
          return;
        else
          SY01M002.XBTDESC = "INACTIVE";
          set SY01M002.XBTCD cursor, bold;
          converseLib.validationFailed(33); /* status code is inactive*/
          return;
        end
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(3); /* invalid code*/
  set SY01M002.XBTCD cursor, bold;
  SY01M002.XBTDESC = "INVALID";


end // end SY01SFQ

// get sport act. code & desc.
Function SY01SFR()

       /* ******************************************/
       /* *  VERIFY SPORT ACTIVITY CODE AND       **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY01M002.XSPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    SY01M002.XSPDESC = "INVALID";
    set SY01M002.XSPCD cursor, bold;
    return;
  end


  if (SY01M002.XSPCD in XSPTBL.XSPCD)
    if (XSPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY01M002.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
    else
      if (SY01M002.XSPCD == SYDREC.XSPCD)
        return;
      else
        converseLib.validationFailed(33); /* status code is inactive*/
        set SY01M002.XSPCD cursor, bold;
        SY01M002.XSPDESC = "INACTIVE";
      end
    end
  else
    set SY01M002.XSPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY01M002.XSPDESC = "INVALID";
  end

end // end SY01SFR

// get family code & desc.
Function SY01SFS()

       /* ******************************************/
       /* *  VERIFY FAMILY CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY01M002.XFMCD == " "
   && SY1REC.XFMCD == " ")
    SY01M002.XFMDESC = " ";
    return;
  else
    if (SY01M002.XFMCD == "99")
      converseLib.validationFailed(3); /* invalid code*/
      set SY01M002.XFMCD cursor, bold;
      SY01M002.XFMDESC = "INVALID";
      return;
    end
  end

  if (SY01M002.XFMCD in XFMTBL.XFMCD)
    SY01M002.XFMDESC = XFMTBL.XFMDESC[sysVar.arrayIndex];
    if (SY01M002.XFMCD != SY1REC.XFMCD)
      if (XFMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        if (XFMTBL.XGP-GPC-CD[sysVar.arrayIndex] == " "
         || XFMTBL.XGP-GPC-CD[sysVar.arrayIndex] == SY1REC.XGPCD)
          return;
        else
          set SY01M002.XFMCD cursor, bold;
          converseLib.validationFailed(3);
          SY01M002.SYMSCMSG = "    PRODUCTS GPC IS INVALID FOR THIS FAMILY CODE";
        end
      else
        set SY01M002.XFMCD cursor, bold;
        converseLib.validationFailed(66); /* inactive status*/
      end
    end
  else
    set SY01M002.XFMCD cursor, bold;
    SY01M002.XFMDESC = " ";
    SY01M002.XFMDESC = "INVALID";
    converseLib.validationFailed(3); /* invalid code*/
  end

end // end SY01SFS

// Check colors for region
Function SY01SVC()

   /* *******************************************************/
   /* Scan color rows to check if a color exists with a*/
   /* region code the user is not authorized for.*/
   /* IF SO, THE STYLE IS INVALID.*/
   /* ALSO, for footwear, scan sydvx to see if any colors*/
   /* are in PPS system. If yes, set flag to protect fields.*/
   /* *******************************************************/

  SY01W01.SY01W-CLVF = "Y"; /* Reset color validation flag*/
  SY01W01.SY01W-CLRF = "Y"; /* Reset color read flag*/
  SYWREC.SYW-ON-PPS-FL = "N"; /* Reset on PPS flag*/

  SY2REC.XGPCD = SY1REC.XGPCD;
  SY2REC.SY1STNBR = SY1REC.SY1STNBR;

  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY01   ";
    TA1REC.TA1LOCAT[1] = "SY01EAO  ";
    TA1REC.TA1LOCAT[2] = "IO0130   ";
    TA1REC.TA1LOCAT[3] = "SS ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY01M001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end

  while (SY01W01.SY01W-CLRF == "Y")
    call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0) /* Good return?*/

      if (SYWREC.SYW-ALL-REGIONS-FL == "Y"
       || SY2REC.XDR-PROD-REG-CD in SYWREC.XDR-PROD-REG-CD)
        if (SY2REC.XGPCD == "02" /* If footwear*/
         && SYWREC.SYW-ON-PPS-FL == "N") /* and not on PPS*/
          SY01S-CHK-SYDVX(); /* check x-ref for PPS*/
        end
      else
        SY01W01.SY01W-CLVF = "N"; /* color invalid*/
        SY01W01.SY01W-CLRF = "N"; /* terminate loop*/
      end

    else
      if (SQLCA.VAGen_SQLCODE != 100) /* if not end of file, then bad error*/
        converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY01   ";
        TA1REC.TA1LOCAT[1] = "SY01EAO  ";
        TA1REC.TA1LOCAT[2] = "IO0130   ";
        TA1REC.TA1LOCAT[3] = "SN ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY01M001";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VCOLOR01";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        exit stack;
      else
        SY01W01.SY01W-CLRF = "N"; /* terminate loop, EOF reached*/
      end
    end
  end

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY01   ";
    TA1REC.TA1LOCAT[1] = "SY01EAO  ";
    TA1REC.TA1LOCAT[2] = "IO0130   ";
    TA1REC.TA1LOCAT[3] = "CS ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY01M001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end

   /* Now set the special feature only flag for Europe users*/
   /* who can have access to change special feature that*/
   /* controls Spain compliant products.*/
  SY01W01.SY01W-XFC-ONLY-FL = "N"; /* Assume No*/
  if (SYWREC.SYW-ALL-REGIONS-FL == "N") /* Not global user*/
    if (SYWREC.XDR-PROD-REG-CD[1] == "02" /* If Europe user*/
     || SYWREC.XDR-PROD-REG-CD[2] == "02")
      if (SY01W01.SY01W-CLVF == "N")
        SY01W01.SY01W-XFC-ONLY-FL = "Y"; /* Can only chg XFC*/
      end
    end
  end

end // end SY01SVC

//*** RECORD=SY01W01 ****
// ************************************************************
// *  SY01W01 - WORKING STORAGE RECORD
// ************************************************************
// ***********************
Record SY01W01 type basicRecord
  10 SY1DATA SY1DATA ; 
  10 SYWPFOPT SYWPFOPT ; 
  10 SY01W-CLVF SY01W-CLVF ; 
  10 SY01W-CLRF SY01W-CLRF ; 
  10 SY01W-NM-CHG-FL SY01W-NM-CHG-FL ; 
  10 SY01W-SCL-CD SY01W-SCL-CD ; 
  10 SY01W-BLNK-STY-NBR SY01W-BLNK-STY-NBR ; 
  10 SY01W-XFC-ONLY-FL SY01W-XFC-ONLY-FL ; 
end // end SY01W01

//*** RECORD=SY01W02 ****
// ************************************************************
// *                                                          *
// *   WORKING STORAGE RECORD FOR APPLICATION SY01            *
// *                                                          *
// ************************************************************
// ***********************
Record SY01W02 type basicRecord
  10 XSECD XSECD ; 
  10 XSNYR XSNYR ; 
  10 XSNABRV XSNABRV ; 
    15 SY01WSE SY01WSE ; 
    15 SY01WSN SY01WSN ; 
  10 SY01W-CNT-MSG SY01W-CNT-MSG ; 
    15 SY01W-MSG-1 SY01W-MSG-1 ; 
    15 SY01W-CNT-1 SY01W-CNT-1 ; 
    15 SY01W-MSG-2 SY01W-MSG-2 ; 
    15 SY01W-CNT-2 SY01W-CNT-2 ; 
end // end SY01W02

// SY-BLNK-STY-NBR
DataItem SY01W-BLNK-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EAO color read flag
DataItem SY01W-CLRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EAO color validation flag
DataItem SY01W-CLVF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Count of Colors Scaned
DataItem SY01W-CNT-1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Count of SYV's Inserted
DataItem SY01W-CNT-2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Scan/Insert Info. Message
DataItem SY01W-CNT-MSG char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Message text
DataItem SY01W-MSG-1 char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Message text
DataItem SY01W-MSG-2 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Has name changed? (Y/N)
DataItem SY01W-NM-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY-SZ-SCL-CD
DataItem SY01W-SCL-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Only edit special features
DataItem SY01W-XFC-ONLY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xse-sesn-cd
DataItem SY01WSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season year (YY)
DataItem SY01WSN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

