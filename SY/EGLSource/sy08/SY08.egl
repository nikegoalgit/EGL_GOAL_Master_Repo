package sy08;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY08 ****
// ************************************************************
// *
// *   SY08 - Regional Product Info. Maintenance Program
// *
// *   This application will maintain the regional product info
// *   table (DPROD.VSYREG01). This program will examine the
// *   the COMMAREA add/change flags to determine if the user
// *   can add/change or is inquiry only.
// *
// ************************************************************
// * NSC Implementation notes
// *   As each region is implemented in NSC, you will need to
//  add
// *   region codes into the following functions:
// *    SY08160 - On IF statement for 12/31/43 date default
// *    SY08350 - Close out life cycle to prop end date check
// *    SY08425 - Close out life cycle to prop end date check
// ************************************************************
// * SECURITY FLAGS:
// *   This application uses the following COMMAREA security
// *   flags:
// *
// *      CAADDFL      Master add flag. User must have this
// *                    flag 'Y' to add rows. Note, this flag
// *                    will also allow user to change rows!
// *      CAALVL(2)    User can add/change GPC 02 rows
// *      CAALVL(3)    User can add/change GPC 03 rows
// *
// *      CACHGFL      Master change flag. User must have this
// *                    flag 'Y' to change rows.
// *      CACLVL(1)    User is a scheduler/specialist,
// *                    restrict changes to only forecaster,
// *                    scheduler, and offer dates.
// *      CACLVL(2)    User can change GPC 02 rows
// *      CACLVL(3)    User can change GPC 03 rows
// *      CACLVL(4)    User is a restricted apparel specialist,
// *                    restrict changes to only forecaster and
// *                    scheduler.
// *
// ************************************************************
// * Maintenance History
// *Rev #    Date    Who     Remarks
// *-----  --------  ------  ----------------------------------
// *       02-22-93  MHALST  Program Creation
// *EAO    05-10-93  MHALST  Changes for Phase 2
// *       06-28-93  MHALST  Correct logic for inquiry access
// *       07-06-93  MHALST  Correct logic for setting of add
// *                         or change mode
// *       10-15-93  MHALST  Allow life cycle change when
// *                         corp XLC is '05'.
// *SY0211 04-20-94  MBUHIT  Allow SYREG deletes when LC=05,
// *                         corres SYCOLOR mods, req all flds.
// *SY0211 08-18-94  MHALST  Fcst & Sched optional
// *       08-31-94  MHALST  Change to VSYREG02. Add new fields
// *                         for Footwear Forecasting.
// *       10-03-94  MHALST  Fix NIL ending offer date default
// *       10-25-94  MHALST  Fix ending offer date extending
// *       12-09-94  MHALST  Fix scan when using all colors
// *       09-15-95  MHALST  Add XPSY008 support
// *       11-07-95  MHALST  Chng defaulting on add for ftwr.
// *       03-25-96  MHALST  Change VPRDRG01 to VPRDRG02.
// *                         Add PG-PLAN-FRST-PO-ID to map 010
// *       04-25-96  MHALST  Correct futr offer xdt calc.
// *       05-07-96  MHALST  Correct SY08400 region check.
// *       04-25-96  MHALST  Correct futr offer xdt calc.
// *       01-08-97  MHALST  Correct life cycle date edits.
// *       04-28-97  MHALST  Add logic in SY08150 to prevent
// *                         GPC 02, Region 01 row creation.
// *       09-08-97  MHALST  Enhanse life cycle checking for
// *                         GPC 02.
// *       11-06-97  NGANGO  Y2K MODIFICATIONS. Map SY08M010
// *                         changed to remove zero supression
// *                         from some date fields (yymm) and
// *                         Also change 3 Process/Stmt. Groups
// *                         SY08160, SY08S-VAL-XSE, SY08S-VAL-
// *                         FUTR, SY08-SET-NIL.
// *       02-04-98  MHALST  Add Change level 4 for more
// *                         restrictive apparel specialist.
// *       03-24-98  MHALST  Fix default logic on adds.
// *       10-19-98  MHALST  Add Japan to color select screen.
// *       03-05-99  MHALST  Comment out logic to update set
// *                         of syreg records.
// *       05-04-99  MHALST  Use XPSY010 for offer date calc
// *       09-29-00  MHALST  Allow Cole Haan to activate even
// *                         if color is still 05.
// *       07-23-01  MHALST  Change NIL date defaulting for
// *                         Apparel products.
// *   07-19-02  MHALST  For NSC, when close-out update prop
//  end
// *   date for footwear and equipment data.
// *   11-21-02 MHALST  NSC, add all other regions to prop end
//  date
// *   update for footwear/equipment. Also correct color
//  update logic to
// *   only update color live cycle to 20 if the color life
//  cycle is 10.
// *   01-04-08 MHALST Apr'08 Release; Allow EMEA to use the
//  hot
// *   model flag for footwear childrens shoes.
// ************************************************************
// *********************
Program SY08 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  SY08W01 SY08W01; // record
  SY08W02 SY08W02; // record
  SY08W03 SY08W03; // record
  SY08W04 SY08W04; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VPRDRG02 VPRDRG02; // record
  VPRDXF01 VPRDXF01; // record
  VSYREG02 VSYREG02; // record
  WEU0100 WEU0100; // record
  XP0GW01 XP0GW01; // record
  XP0GW02 XP0GW02; // record
  XP0HW01 XP0HW01; // record
  XP0HW02 XP0HW02; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use SYRGTBL {deleteAfterUse = yes}; // table
  use XPRTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use SY08M.SY08M001,  // forms
      SY08M.SY08M005, 
      SY08M.SY08M010, 
      SY08M.SY08M015, 
      SY08M.XP0GM001, 
      SY08M.XP0HM001, 
      SY08M.XX0XM001
   {
    validationBypassKeys = [pf3, pf4],
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY08000: SY08000();

     /* Program should NEVER get here, but in case of some*/
     /* weird logic error, we'll do an EZECLOS just in case.*/

    exit program;
    SY08001: SY08001();
    SY08100: SY08100();
    SY08150: SY08150();
    SY08200: SY08200();
    SY08205: SY08205();
    SY08210: SY08210();
    SY08225: SY08225();
    SY08250: SY08250();
    SY08275: SY08275();
    SY08280: SY08280();
    SY08285: SY08285();
    SY08290: SY08290();
    SY08295: SY08295();
    SY08300: SY08300();
    SY08325: SY08325();
    SY08350: SY08350();
  end // end main
end // end SY08

// Process Main Logic
Function SY08000()

   /* *************************************************************/
   /* *                                                          **/
   /* *  SY08 Main Logic*/
   /* *                                                          **/
   /* *************************************************************/

  SY08001(); /* init program*/

  SY08W01.SY08WEOA = "N";
  while (SY08W01.SY08WEOA == "N")
    SY08W01.SY08W-CLR-SEL-FL = "N";
    SY08100(); /* converse screen*/
    if (converseVar.validationMsgNum == 0) /* No errors*/
      if (SY08M001.SY2CLRID == " ") /* User requesting color select*/
        SY08M001.SYMPRONM = "SY08200";
        SY08W01.SY08W-CLR-SEL-FL = "Y";
        SY08200(); /* Color select processing*/
      else
        if (SY08W01.SY08WMOD != "I") /* If not inquiry mode*/
          SY08M001.SYMPRONM = "SY08275";
          SY08W01.SY08W-CURR-MAP = "SY08M010";
          SY08W01.SY08W-END-CHG-FL = "N";
          while (SY08W01.SY08W-END-CHG-FL == "N")
            SY08275();
          end
        end
      end
    end
  end

   /* Program should never reach this point, but just in case....*/
  XSPF4(); /* Transfer to main menu*/

end // end SY08000

// Initialize Program
Function SY08001()

   /* Initialize program*/

  XSENTRY(); /* check security*/
  XSSEGTR(); /* set tran id*/

   /* clear working storage and screen records*/

  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  set SYWREC empty;
  set XP0GW01 empty;
  set XP0HW01 empty;
  set SY08W01 empty;
  set SY1REC empty;
  set SY2REC empty;
  set SY9REC empty;
  set SYAREC empty;
  set VSYREG02 empty;
  set VPRDRG02 empty;
  set SY08M001 initial;
  set SY08M010 initial;
  set SY08M015 initial;
  SY08W01.SY08WREV = "05"; /* Program revision number*/
  SY08W01.SY08W-MSG-TXT1 = "  Total Colors Selected: ";
  SY08W01.SY08W-MSG-TXT2 = "   Total Colors Updated: ";
  SY08W01.SY08W-CURR-MAP = "SY08M010";

   /* now check commarea for passing data*/

  if (COMMAREA.CAFRMSYS == "SY") /* from product*/
    SYWREC.SYWTRANF = COMMAREA.CAUSERA;
  end
  if (SYWREC.XGPCD != "  ")
    SY08M001.XGPCD = SYWREC.XGPCD;
  else
    SY08M001.XGPCD = COMMAREA.XGPCD;
  end
  SY08S81(); /* get gpc desc*/

   /* Now, find out what region user is and set-up table of*/
   /* valid regions the user can maintenance.*/
  XPSY008(); /* Get users region*/
  SY08S82(); /* Default onto screen*/

   /* now get current date for screen*/

  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SYWREC.SYWTODAY = TA2REC.TA2GRGGN;
  end

end // end SY08001

// Converse Screen SY08M001
Function SY08100()

  SY08M001.SYMPRONM = "SY08100"; /* process name*/
  SY08M001.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY08M001.SYMRVNBR = SY08W01.SY08WREV;
  SY08M001.SY08M-PF13-TXT = " "; /* No PF13 here*/

  SY08S03(); /* set up screen*/
  if (SY08W01.SY08W-CURR-MAP == "SY08M015") /* Whse map*/
    SY08515();
  else
    SY08510(); /* set float to map 010*/
  end

  converse SY08M001 ;

  SY08W01.SY08W-DSP-M001 = "N";
  SY08W01.SY08W-POP-FL = "N"; /* reset popup flag*/
  SY08W01.SY08WMOD = SY08W01.SY08W-SCRTY-FL;

  SY08S01(); /* reset fields*/

  SY08S02(); /* check PF keys (May exit)*/

  if (converseVar.validationMsgNum != 0) /* errors*/
    return; /* get out*/
  end

  if (converseVar.eventKey is pa2) /* reset screen if PA2*/
    set SY08M001 initial;
    SY1REC.SY1STNBR = " "; /* clear style for key check*/
    SY2REC.SY2CLRID = " "; /* and color for same*/
    SY08M001.XGPCD = SYWREC.XGPCD;
    SY08M001.XGPABRV = SYWREC.XGPABRV;
    set SY08M001.SY1STNBR cursor;
    return;
  end

  if (converseVar.eventKey is pf7)
    if (SY08W01.SY08W-CURR-MAP == "SY08M010")
      converseLib.validationFailed(69); /* At beginning*/
    else
      SY08W01.SY08W-CURR-MAP = "SY08M010";
    end
    return;
  end

  if (converseVar.eventKey is pf8)
    if (SY08W01.SY08W-CURR-MAP == "SY08M015")
      converseLib.validationFailed(70); /* At end*/
    else
      SY08W01.SY08W-CURR-MAP = "SY08M015";
    end
    return;
  end

  SY08150(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful validate*/
    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(14); /* no errors*/
      set SY08M001.SY1STNBR cursor;
      return;
    end
    if (SY08W01.SY08WMOD == "I") /* inquiry only*/
      set SY08M001.SY1STNBR cursor;
      return;
    end
  end

end // end SY08100

// Validate Screen Data
Function SY08150()

   /* Validate*/

  set SY08M010 initial;
  set SY08M015 initial;
  SY08W01.SY08W-SYREG-FL = "N"; /* no record*/
  SY08W01.SY08W-DSP-M001 = "Y"; /* Redisplay M001*/

  if (SY08M001.XGPCD != SYWREC.XGPCD) /* user changed GPC*/
    SY08S81(); /* validate it*/
    if (converseVar.validationMsgNum != 0)
      return;
    end
  end

   /* Reset security to default based on COMMAREA and GPC*/
  SY08W01.SY08WMOD = SY08W01.SY08W-SCRTY-FL;

  SY08S83(); /* validate style*/
  if (converseVar.validationMsgNum != 0) /* can't continue if errors*/
    return;
  end

  if (SY08M001.SY2CLRID == " ") /* user wants color select*/
    SY08M001.SY08MMOD = "Color Select";
    SY08M001.SY2CLRDS = " ";
    SY08M001.XDMCD = " ";
    SY08M001.XDMDESC = " ";
    SY08M001.XDR-PROD-REG-CD = " ";
    SY08M001.XDR-PROD-REG-DESC = " ";
    return;
  else
    SY08S84(); /* validate color/dim*/
    if (converseVar.validationMsgNum != 0) /* can't continue if errors*/
      return;
    end
  end

  SY08S82(); /* validate XDR code*/

  if (converseVar.validationMsgNum != 0 /* can't continue if errors*/
   || SY08M001.SY2CLRID == "ALL")       /* or selecting all colors*/
    return;
  end

   /* now try and find the SYREG regional row*/

  VSYREG02.XGP-GPC-CD = SY08M001.XGPCD;
  VSYREG02.SY-STY-NBR = SY08M001.SY1STNBR;
  VSYREG02.SY-COLR-CD-ID = SY08M001.SY2CLRID;
  VSYREG02.XDM-DIM-CD = SY08M001.XDMCD;
  VSYREG02.XDR-PROD-REG-CD = SY08M001.XDR-PROD-REG-CD;
  SY08S85(); /* try for the record*/
  if (SQLCA.VAGen_SQLCODE == 100)
    SY08W01.SY08W-SYREG-FL = "N"; /* no record found*/
    if (SY08W01.SY08WMOD != "A" /* Does not have add security*/
     || (SY08M001.XGPCD == "02" /* or footwear and usa region*/
     && SY08M001.XDR-PROD-REG-CD == "01"))
      converseLib.validationFailed(192); /* No regional data exists*/
      set SY08M001.SY1STNBR cursor, bold;
      set SY08M001.SY2CLRID bold;
      set SY08M001.XDR-PROD-REG-CD bold;
    else
      if (SY08M001.XGPCD == "02" /* If footwear*/
       && (SY2REC.XLCCD1 == "15" /* and color canceled*/
       || SY2REC.XLCCD1 > "20")) /* or dormant*/
        converseLib.validationFailed(122); /* Cannot create info*/
        set SY08M001.SY1STNBR cursor, bold;
        set SY08M001.SY2CLRID bold;
      else
        SY08M001.SY08MMOD = "Add";
        set VSYREG02 empty;
        SY08160(); /* set-up field defaults*/
        return;
      end
    end
    return;
  else /* we have a row, fill in descriptions*/
    SY08W01.SY08W-SYREG-FL = "Y";
    if (SY08W01.SY08WMOD != "I")
      SY08M001.SY08MMOD = "Change";
      SY08S13(); /* Check if PF13 ok to enable*/
    else
      SY08M001.SY08MMOD = "Inquiry";
    end
  end

   /* Set-up lower half of screen.*/

  set PG1REC empty;
  PG1REC.XGPCD = SY08M001.XGPCD;
   /* Forecaster*/
  SY08M010.PG1FCTCD = VSYREG02.PG-FCST-CD;
  if (SY08M010.PG1FCTCD == " ")
    SY08M010.SY08M-FCT-ID = " ";
  else
    PG1REC.PG1FCTCD = SY08M010.PG1FCTCD;
    SY08S86();
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08M010.SY08M-FCT-ID = PG1REC.XXXUSER;
    else
      SY08M010.SY08M-FCT-ID = "??????";
    end
  end

   /* Schedular*/
  SY08M010.PG1SC4CD = VSYREG02.PG-SCHED-SPCLT-CD;
  if (SY08M010.PG1SC4CD == " ")
    SY08M010.SY08M-SCH-ID = " ";
  else
    PG1REC.PG1FCTCD = " ";
    PG1REC.PG1SC4CD = SY08M010.PG1SC4CD;
    SY08S86();
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08M010.SY08M-SCH-ID = PG1REC.XXXUSER;
    else
      SY08M010.SY08M-SCH-ID = "??????";
    end
  end

   /* Season Code & Year*/
  SY08M010.XSE-SESN-CD = VSYREG02.XSE-SESN-CD;
  SY08M010.XSN-SESN-YR-RNG = VSYREG02.XSN-SESN-YR-RNG;
  if (SY08M010.XSE-SESN-CD in XSETBL.XSECD)
    SY08M010.XSEDESC = XSETBL.XSEDESC[sysVar.arrayIndex];
  else
    SY08M010.XSEDESC = "UNKNOWN";
  end

   /* Prop Offer Dates*/
  SY08W01.SY-PROP-OFFER-BDT = VSYREG02.SY-PROP-OFFER-BDT;
  SY08W01.SY-PROP-OFFER-XDT = VSYREG02.SY-PROP-OFFER-XDT;
  SY08W01.SY08W-WORK-DATE = SY08W01.SY-PROP-OFFER-BDT;
  SY08S-MV-DATE();
  SY08M010.SY-PROP-OFFER-BDT = SY08W01.SY08W-DDATE-MDY;
  SY08W01.SY08W-WORK-DATE = SY08W01.SY-PROP-OFFER-XDT;
  SY08S-MV-DATE();
  SY08M010.SY-PROP-OFFER-XDT = SY08W01.SY08W-DDATE-MDY;

   /* Futures Offer Dates*/
  SY08W01.SY-FUTR-OFFER-BDT = VSYREG02.SY-FUTR-OFFER-BDT;
  SY08W01.SY-FUTR-OFFER-XDT = VSYREG02.SY-FUTR-OFFER-XDT;
  SY08W01.SY08W-WORK-DATE = SY08W01.SY-FUTR-OFFER-BDT;
  SY08S-MV-DATE();
  SY08M010.SY-FUTR-OFFER-BDT = SY08W01.SY08W-DDATE-MDY;
  SY08W01.SY08W-WORK-DATE = SY08W01.SY-FUTR-OFFER-XDT;
  SY08S-MV-DATE();
  SY08M010.SY-FUTR-OFFER-XDT = SY08W01.SY08W-DDATE-MDY;

   /* First sales month, Proj. closeout month, First PO Id*/
  SY08W01.SY-FRST-DOM-SLS-MO = VSYREG02.SY-FRST-DOM-SLS-MO;
  SY08W01.SY08W-MDATE-CCYYMM = VSYREG02.SY-FRST-DOM-SLS-MO;
  SY08M010.SY-FRST-DOM-SLS-MO = SY08W01.SY08W-MDATE-YYMM;
  SY08W01.SY-PROJ-DOM-CLS-MO = VSYREG02.SY-PROJ-DOM-CLS-MO;
  SY08W01.SY08W-MDATE-CCYYMM = VSYREG02.SY-PROJ-DOM-CLS-MO;
  SY08M010.SY-PROJ-DOM-CLS-MO = SY08W01.SY08W-MDATE-YYMM;
  SY08M010.PG-PLAN-FRST-PO-ID = VPRDRG02.PG-PLAN-FRST-PO-ID;
  SY08W01.PG-PLAN-FRST-PO-ID = VPRDRG02.PG-PLAN-FRST-PO-ID;

   /* Product type*/
  SY08M010.XPR-PROD-TYP-CD = VSYREG02.XPR-PROD-TYP-CD;
  if (SY08M010.XPR-PROD-TYP-CD in XPRTBL.XPRCD)
    SY08M010.XPR-PROD-TYP-DESC = XPRTBL.XPRDESC[sysVar.arrayIndex];
  else
    SY08M010.XPR-PROD-TYP-DESC = " ";
  end

   /* Flags and Indicators*/
  SY08M010.SY-ALW-NEW-ORD-FL = VSYREG02.SY-ALW-NEW-ORD-FL;
  SY08M010.OP-HMDL-HOT-FL = VSYREG02.OP-HMDL-HOT-FL;
  SY08M010.SY-SFTY-STKCLS-IND = VSYREG02.SY-SFTY-STKCLS-IND;
  SY08M010.SY-RSTR-XSO-IND = VPRDRG02.SY-RSTR-XSO-IND;
  SY08M010.SY-BO-SW = VPRDRG02.SY-BO-SW;
  SY08W01.SY-BO-SW-EDT = VPRDRG02.SY-BO-SW-EDT;
  SY08W01.SY08W-WORK-DATE = SY08W01.SY-BO-SW-EDT;
  SY08S-MV-DATE();
  SY08M010.SY-BO-SW-EDT = SY08W01.SY08W-DDATE-MDY;

   /* Life Cycles & Effective Dates*/
  SY08M010.SY08M-XLC-CD[1] = VSYREG02.XLC-LIFE-CYC-CD[1];
  SY08M010.SY08M-XLC-CD[2] = VSYREG02.XLC-LIFE-CYC-CD[2];
  SY08M010.SY08M-XLC-CD[3] = VSYREG02.XLC-LIFE-CYC-CD[3];
  SY08M010.SY08M-XLC-CD[4] = VSYREG02.XLC-LIFE-CYC-CD[4];
  SY08W01.SY-LIFE-CYC-EDT[1] = VSYREG02.SY-LIFE-CYC-EDT[1];
  SY08W01.SY-LIFE-CYC-EDT[2] = VSYREG02.SY-LIFE-CYC-EDT[2];
  SY08W01.SY-LIFE-CYC-EDT[3] = VSYREG02.SY-LIFE-CYC-EDT[3];
  SY08W01.SY-LIFE-CYC-EDT[4] = VSYREG02.SY-LIFE-CYC-EDT[4];
  SYWREC.SYWINDEX = 1;
  SY08W01.SY08WSW1 = "N";
  while (SYWREC.SYWINDEX <= 4)
    if (SY08M010.SY08M-XLC-CD[SYWINDEX] != " ")
      if (SY08M010.SY08M-XLC-CD[SYWINDEX] in XLCTBL.XLCCD)
        SY08M010.SY08M-XLC-DESC[SYWINDEX] = XLCTBL.XLCDESC[sysVar.arrayIndex];
      else
        SY08M010.SY08M-XLC-DESC[SYWINDEX] = "UNKNOWN";
      end
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-LIFE-CYC-EDT[SYWINDEX];
      SY08M010.SY08M-XLC-EDT[SYWINDEX] = SY08W01.SY08W-WDATE-YMD;
      if (SY08W01.SY08WSW1 == "N"
       && SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] <= SYWREC.SYWTODAY)
        SY08W01.SY08WSW1 = "Y"; /* Found current life cycle*/
        SY08M010.SY08M-XLC-LINE[SYWINDEX] = "*";
      else
        SY08M010.SY08M-XLC-LINE[SYWINDEX] = " ";
      end
    else
      SY08M010.SY08M-XLC-LINE[SYWINDEX] = " ";
      SY08M010.SY08M-XLC-DESC[SYWINDEX] = " ";
      SY08M010.SY08M-XLC-EDT[SYWINDEX] = 0;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

   /* Warehouse Codes*/
  SYWREC.SYWINDEX = 1;
  while (SYWREC.SYWINDEX <= 6)
    if (VPRDRG02.XWH-WHSE-CD[SYWINDEX] != " ")
      SY08M010.SY08M-MORE-PROMPT = "More";
      SY08M015.XWH-WHSE-CD[SYWINDEX] = VPRDRG02.XWH-WHSE-CD[SYWINDEX];
      if (SY08M015.XWH-WHSE-CD[SYWINDEX] in XWHTBL.XWHCD)
        SY08M015.XWH-WHSE-ABRV[SYWINDEX] = XWHTBL.XWHABRV[sysVar.arrayIndex];
      else
        SY08M015.XWH-WHSE-ABRV[SYWINDEX] = "UNKNOWN";
      end
    else
      SY08M015.XWH-WHSE-CD[SYWINDEX] = " ";
      SY08M015.XWH-WHSE-ABRV[SYWINDEX] = " ";
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

end // end SY08150

// Set-up field defaults
Function SY08160()

   /* This process will set-up the screen defaults when there is*/
   /* no SYREG on file. This is currently done with the fields on*/
   /* VCOLOR, but this may change with product globalization.*/

   /* Forecaster & Scheduler*/
  if (SY08M001.SY2CLRID != "ALL"
   && SY08M001.XDR-PROD-REG-CD == SY2REC.XDR-PROD-REG-CD)
    SY08M010.PG1FCTCD = SY1REC.PG1FCTCD;
    SY08M010.PG1SC4CD = SY2REC.PG1SC4CD;
  end

   /* Season Code & Year*/
  if (SY08M001.XGPCD == "03")
    SY08M010.XSE-SESN-CD = "  ";
    SY08M010.XSN-SESN-YR-RNG = 0;
  else
    SY08M010.XSE-SESN-CD = SY2REC.XSECD;
    SY08M010.XSN-SESN-YR-RNG = SY2REC.XSNYR;
    SY08S-VAL-XSE();
  end

   /* Offer Dates*/
  if (SY08M001.XGPCD == "03")
    SY08W01.SY-PROP-OFFER-BDT = 0;
    SY08W01.SY-PROP-OFFER-XDT = 0;
    SY08M010.SY-PROP-OFFER-BDT = 0;
    SY08M010.SY-PROP-OFFER-XDT = 0;
    SY08W01.SY-FUTR-OFFER-BDT = 0;
    SY08W01.SY-FUTR-OFFER-XDT = 0;
    SY08M010.SY-FUTR-OFFER-BDT = 0;
    SY08M010.SY-FUTR-OFFER-XDT = 0;
  else
     /* Default date to 20431231 if not on NSC*/
    if (SY08M001.XDR-PROD-REG-CD == "05" /* If Canada*/
     || SY08M001.XDR-PROD-REG-CD == "01" /* or USA*/
     || SY08M001.XDR-PROD-REG-CD == "02") /* or Europe*/
       /* CONTINUE (Don't use this default)*/
    else
      SY08M010.SY-PROP-OFFER-XDT = 123143;
    end
    SY08S-VAL-FUTR();
    SY08S-VAL-PROP();
  end

   /* Product type, flags, & Prod dates (for footwear)*/
  SY08M010.XPR-PROD-TYP-CD = SY2REC.XPRCD;
  SY08M010.SY-ALW-NEW-ORD-FL = "Y";
  SY08M010.OP-HMDL-HOT-FL = "N";
  VPRDRG02.SY-BO-SW = SY2REC.SY2BOSWI;
  SY08M010.SY-BO-SW = SY2REC.SY2BOSWI;
  VPRDRG02.SY-BO-SW-EDT = SY2REC.SY2BOEDT;
  SY08W01.SY-BO-SW-EDT = SY2REC.SY2BOEDT;
  SY08W01.SY08W-WORK-DATE = SY2REC.SY2BOEDT;
  SY08S-MV-DATE();
  SY08M010.SY-BO-SW-EDT = SY08W01.SY08W-DDATE-MDY;
  SY08M010.SY-RSTR-XSO-IND = SY2REC.SY2RPRDI;
  if (SY08M001.XGPCD == "02") /* If footwear*/
    SY08M010.SY-SFTY-STKCLS-IND = SY2REC.SY2SSCIN;
    SY08W01.SY-FRST-DOM-SLS-MO = SY2REC.SY2FDSMO;
    SY08W01.SY-PROJ-DOM-CLS-MO = SY2REC.SY2PDCMO;
    SY08W01.SY08W-MDATE-CCYYMM = SY08W01.SY-FRST-DOM-SLS-MO;
    SY08M010.SY-FRST-DOM-SLS-MO = SY08W01.SY08W-MDATE-YYMM;
    SY08W01.SY08W-MDATE-CCYYMM = SY08W01.SY-PROJ-DOM-CLS-MO;
    SY08M010.SY-PROJ-DOM-CLS-MO = SY08W01.SY08W-MDATE-YYMM;
    if (SY08M001.XDR-PROD-REG-CD == "02") /* If Europe*/
      SY08W01.PG-PLAN-FRST-PO-ID = SY2REC.PC3POIDT;
      SY08M010.PG-PLAN-FRST-PO-ID = SY2REC.PC3POIDT;
    else
      SY08W01.PG-PLAN-FRST-PO-ID = 0;
      SY08M010.PG-PLAN-FRST-PO-ID = 0;
    end
  else
    SY08M010.SY-SFTY-STKCLS-IND = " ";
    SY08W01.SY-FRST-DOM-SLS-MO = 0;
    SY08W01.SY-PROJ-DOM-CLS-MO = 0;
    SY08M010.SY-FRST-DOM-SLS-MO = 0;
    SY08M010.SY-PROJ-DOM-CLS-MO = 0;
    SY08W01.PG-PLAN-FRST-PO-ID = 0;
    SY08M010.PG-PLAN-FRST-PO-ID = 0;
  end

   /* Life Cycles & Effective Dates*/
  SY08M010.SY08M-XLC-CD[1] = "05";
  SY08M010.SY08M-XLC-CD[2] = "  ";
  SY08M010.SY08M-XLC-CD[3] = "  ";
  SY08M010.SY08M-XLC-CD[4] = "  ";
  SY08W01.SY-LIFE-CYC-EDT[1] = SY2REC.ZZZSDT;
  SY08W01.SY-LIFE-CYC-EDT[2] = 0;
  SY08W01.SY-LIFE-CYC-EDT[3] = 0;
  SY08W01.SY-LIFE-CYC-EDT[4] = 0;
  SYWREC.SYWINDEX = 1;
  SY08W01.SY08WSW1 = "N";
  while (SYWREC.SYWINDEX <= 4)
    if (SY08M010.SY08M-XLC-CD[SYWINDEX] != " ")
      if (SY08M010.SY08M-XLC-CD[SYWINDEX] in XLCTBL.XLCCD)
        SY08M010.SY08M-XLC-DESC[SYWINDEX] = XLCTBL.XLCDESC[sysVar.arrayIndex];
      else
        SY08M010.SY08M-XLC-DESC[SYWINDEX] = "UNKNOWN";
      end
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-LIFE-CYC-EDT[SYWINDEX];
      SY08M010.SY08M-XLC-EDT[SYWINDEX] = SY08W01.SY08W-WDATE-YMD;
      if (SY08W01.SY08WSW1 == "N"
       && SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] <= SYWREC.SYWTODAY)
        SY08W01.SY08WSW1 = "Y"; /* Found current life cycle*/
        SY08M010.SY08M-XLC-LINE[SYWINDEX] = "*";
      else
        SY08M010.SY08M-XLC-LINE[SYWINDEX] = " ";
      end
    else
      SY08M010.SY08M-XLC-LINE[SYWINDEX] = " ";
      SY08M010.SY08M-XLC-DESC[SYWINDEX] = " ";
      SY08M010.SY08M-XLC-EDT[SYWINDEX] = 0;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

   /* Warehouse codes*/
  SYWREC.SYWINDEX = 1;
  while (SYWREC.SYWINDEX <= 6)
    SY08M015.XWH-WHSE-CD[SYWINDEX] = " ";
    SY08M015.XWH-WHSE-ABRV[SYWINDEX] = " ";
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  converseLib.validationFailed(0); /* Reset to zero*/

end // end SY08160

// Color Select Control
Function SY08200()

   /* Control process for color select Map*/

  set SY08W02 empty;

  SY08205(); /* Load working storage table*/
  if (converseVar.validationMsgNum != 0) /* If we had problems*/
    return; /* Exit*/
  end

  SY08W02.SY08W-CURR-POS = 1;
  SY08W02.SY08W-END-SCREEN = "N";
  while (SY08W02.SY08W-END-SCREEN == "N")
    SY08225(); /* Converse color select screen*/
  end

  if (converseVar.eventKey is pf3 /* Wants out of color select*/
   || converseVar.validationMsgNum != 0) /* or some other problem*/
    return;
  end

   /* Now scan through table*/
  SY08W01.SY08W-MSG-CNT1 = 0;
  SY08W01.SY08W-MSG-CNT2 = 0;
  SY08W02.SY08W-CURR-POS = 1;
  while (SY08W02.SY08W-CURR-POS <= SY08W02.SY08W-NBR-ENTRIES)
    SY08M001.SY2CLRID = SY08W02.SY2CLRID[SY08W-CURR-POS];
    SY08M001.XDMCD = SY08W02.XDMCD[SY08W-CURR-POS];
    if (SY08W02.SY08W-XDR01-SEL[SY08W-CURR-POS] == "S")
      SY08W01.SY08W-MSG-CNT1 = SY08W01.SY08W-MSG-CNT1 + 1;
      SY08M001.XDR-PROD-REG-CD = "01";
      SY08250();
    end
    if (SY08W02.SY08W-XDR02-SEL[SY08W-CURR-POS] == "S")
      SY08W01.SY08W-MSG-CNT1 = SY08W01.SY08W-MSG-CNT1 + 1;
      SY08M001.XDR-PROD-REG-CD = "02";
      SY08250();
    end
    if (SY08W02.SY08W-XDR03-SEL[SY08W-CURR-POS] == "S")
      SY08W01.SY08W-MSG-CNT1 = SY08W01.SY08W-MSG-CNT1 + 1;
      SY08M001.XDR-PROD-REG-CD = "03";
      SY08250();
    end
    if (SY08W02.SY08W-XDR04-SEL[SY08W-CURR-POS] == "S")
      SY08W01.SY08W-MSG-CNT1 = SY08W01.SY08W-MSG-CNT1 + 1;
      SY08M001.XDR-PROD-REG-CD = "04";
      SY08250();
    end
    if (SY08W02.SY08W-XDR05-SEL[SY08W-CURR-POS] == "S")
      SY08W01.SY08W-MSG-CNT1 = SY08W01.SY08W-MSG-CNT1 + 1;
      SY08M001.XDR-PROD-REG-CD = "05";
      SY08250();
    end
    if (SY08W02.SY08W-XDR06-SEL[SY08W-CURR-POS] == "S")
      SY08W01.SY08W-MSG-CNT1 = SY08W01.SY08W-MSG-CNT1 + 1;
      SY08M001.XDR-PROD-REG-CD = "06";
      SY08250();
    end
    SY08W02.SY08W-CURR-POS = SY08W02.SY08W-CURR-POS + 1;
  end

  SY08M001.SY2CLRID = " ";
  SY08M001.XDMCD = " ";

  if (SY08W01.SY08W-MSG-CNT1 > 0) /* user selected*/
    if (SY08W01.SY08W-MSG-CNT2 > 0) /* user changed*/
      SY08M001.SYMSCMSG = SY08W01.SY08W-MSG;
    else
      SY08M001.SYMSCMSG = SY08W01.SY08W-MSG1;
    end
  else
    converseLib.validationFailed(59); /* Nothing Selected*/
  end

end // end SY08200

// Load W02 Table
Function SY08205()

   /* Load SY08W02 with color/region data*/

  set SY08W02 empty;
  SY2REC.XGPCD = SY08M001.XGPCD;
  SY2REC.SY1STNBR = SY08M001.SY1STNBR;

  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08205"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "SS";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
    SY08S99();
    converseLib.validationFailed(21); /* color table error*/
    return; /* Exit to display map*/
  end

  while (SQLCA.VAGen_SQLCODE == 0
   && SY08W02.SY08W-NBR-ENTRIES < 200)
    call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08W02.SY08W-NBR-ENTRIES = SY08W02.SY08W-NBR-ENTRIES + 1;
      SYWREC.SYWINDXA = SY08W02.SY08W-NBR-ENTRIES;
      SY08W02.SY2CLRID[SYWINDXA] = SY2REC.SY2CLRID;
      SY08W02.XDMCD[SYWINDXA] = SY2REC.XDMCD;
      SY08W02.SY2CLRAB[SYWINDXA] = SY2REC.SY2CLRAB;
      SY08W02.XDR-PROD-REG-CD[SYWINDXA] = SY2REC.XDR-PROD-REG-CD;
      if (SY2REC.XGPCD == "02"   /* If Footwear*/
       && (SY2REC.XLCCD1 == "15" /* and canceled*/
       || SY2REC.XLCCD1 > "20")) /* or dormant*/
        SY08W02.SY08W-CANCEL-FL[SYWINDXA] = "Y"; /* It's dead*/
      else
        SY08W02.SY08W-CANCEL-FL[SYWINDXA] = "N"; /* ok*/
      end
      SY08210(); /* Load region info*/
    else
      if (SQLCA.VAGen_SQLCODE != 100)
        TA1REC.TA1LOC = "SY08205"; /* Program number*/
        TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
        TA1REC.TA1LOCAT[2] = "SN";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
        SY08S99();
        converseLib.validationFailed(21); /* color table error*/
        return; /* Exit to display map*/
      end
    end
  end

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08205"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "C1";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
    SY08S99();
    converseLib.validationFailed(21); /* color table error*/
    return; /* Exit to display map*/
  end

end // end SY08205

// Load W02 Table (Region Data)
Function SY08210()

   /* Load SY08W02 with region data*/

  VSYREG02.XGP-GPC-CD = SY08M001.XGPCD;
  VSYREG02.SY-STY-NBR = SY08M001.SY1STNBR;
  VSYREG02.SY-COLR-CD-ID = SY2REC.SY2CLRID;
  VSYREG02.XDM-DIM-CD = SY2REC.XDMCD;

  call "VSYREG02" ("S2", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08210"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYREG02"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "SS";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY; /* key*/
    SY08S99();
    converseLib.validationFailed(23); /* Table error*/
    return; /* Exit to display map*/
  end

  while (SQLCA.VAGen_SQLCODE == 0)
    call "VSYREG02" ("N2", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08S-LOAD-SYREG(); /* Load region info*/
    else
      if (SQLCA.VAGen_SQLCODE != 100)
        TA1REC.TA1LOC = "SY08210"; /* Program number*/
        TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VSYREG02"; /* Table view name*/
        TA1REC.TA1LOCAT[2] = "N2";
        TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY; /* key*/
        SY08S99();
        converseLib.validationFailed(23); /* Table error*/
        return; /* Exit to display map*/
      end
    end
  end

  call "VSYREG02" ("C2", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08210"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYREG02"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "C2";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY; /* key*/
    SY08S99();
    converseLib.validationFailed(23); /* Table error*/
    return; /* Exit to display map*/
  end

end // end SY08210

// Converse Screen SY08M005
Function SY08225()

  if (converseVar.validationMsgNum == 0)
    set SY08M005 initial;
    SYWREC.SYWINDXA = SY08W02.SY08W-CURR-POS;
    SYWREC.SYWINDXB = 1;
    while (SYWREC.SYWINDXA <= SY08W02.SY08W-NBR-ENTRIES
     && SYWREC.SYWINDXB <= 10)
      SY08M005.SY2CLRID[SYWINDXB] = SY08W02.SY2CLRID[SYWINDXA];
      SY08M005.XDMCD[SYWINDXB] = SY08W02.XDMCD[SYWINDXA];
      SY08M005.SY2CLRAB[SYWINDXB] = SY08W02.SY2CLRAB[SYWINDXA];
      SY08M005.SY08M-XDR01-XLC[SYWINDXB] = SY08W02.SY08W-XDR01-XLC[SYWINDXA];
      SY08M005.SY08M-XDR02-XLC[SYWINDXB] = SY08W02.SY08W-XDR02-XLC[SYWINDXA];
      SY08M005.SY08M-XDR03-XLC[SYWINDXB] = SY08W02.SY08W-XDR03-XLC[SYWINDXA];
      SY08M005.SY08M-XDR04-XLC[SYWINDXB] = SY08W02.SY08W-XDR04-XLC[SYWINDXA];
      SY08M005.SY08M-XDR05-XLC[SYWINDXB] = SY08W02.SY08W-XDR05-XLC[SYWINDXA];
      SY08M005.SY08M-XDR06-XLC[SYWINDXB] = SY08W02.SY08W-XDR06-XLC[SYWINDXA];
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
      SYWREC.SYWINDXB = SYWREC.SYWINDXB + 1;
    end
  end

   /* Now protect fields where no data exists*/
   /* or if security flags say we should.*/
  SYWREC.SYWINDXA = SY08W02.SY08W-CURR-POS;
  SYWREC.SYWINDXA = SYWREC.SYWINDXA + 9;
  SYWREC.SYWINDXB = 10;
  while (SYWREC.SYWINDXB >= 1)
    if (SY08M005.SY2CLRID[SYWINDXB] == " "
     || SYWREC.SYWINDXA > SY08W02.SY08W-NBR-ENTRIES)
      set SY08M005.SY08M-XDR01-XLC[SYWINDXB] skip, invisible;
      set SY08M005.SY08M-XDR02-XLC[SYWINDXB] skip, invisible;
      set SY08M005.SY08M-XDR03-XLC[SYWINDXB] skip, invisible;
      set SY08M005.SY08M-XDR04-XLC[SYWINDXB] skip, invisible;
      set SY08M005.SY08M-XDR05-XLC[SYWINDXB] skip, invisible;
      set SY08M005.SY08M-XDR06-XLC[SYWINDXB] skip, invisible;
    else
      SY08S-PROT-M005(); /* Check security levels*/
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
    SYWREC.SYWINDXB = SYWREC.SYWINDXB - 1;
  end

  if (converseVar.validationMsgNum != 0 /* We have errors, refresh main map*/
   || SY08W01.SY08W-DSP-M001 == "Y")   
    SY08501();
  end

  converse SY08M005 ;

   /* Set fields defined*/
  SYWREC.SYWINDEX = 1;
  while (SYWREC.SYWINDEX <= 10)
    set SY08M005.SY08M-XDR01-XLC[SYWINDEX] initialAttributes;
    set SY08M005.SY08M-XDR02-XLC[SYWINDEX] initialAttributes;
    set SY08M005.SY08M-XDR03-XLC[SYWINDEX] initialAttributes;
    set SY08M005.SY08M-XDR04-XLC[SYWINDEX] initialAttributes;
    set SY08M005.SY08M-XDR05-XLC[SYWINDEX] initialAttributes;
    set SY08M005.SY08M-XDR06-XLC[SYWINDEX] initialAttributes;
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY08S05(); /* Check PF keys (may exit)*/

  if (converseVar.eventKey is pf3 /* user wants out*/
   || converseVar.validationMsgNum != 0) /* PF key errors*/
    return;
  end

   /* Edit selections and save back to array*/
  SYWREC.SYWINDXA = 1;
  SYWREC.SYWINDXB = SY08W02.SY08W-CURR-POS;
  while (SYWREC.SYWINDXA <= 10
   && SYWREC.SYWINDXB <= SY08W02.SY08W-NBR-ENTRIES)
    SY08W02.SY08W-XDR01-XLC[SYWINDXB] = SY08M005.SY08M-XDR01-XLC[SYWINDXA];
    if (SY08W02.SY08W-XDR01-XLC[SYWINDXB] == " ") /* user blanked*/
      SY08W02.SY08W-XDR01-XLC[SYWINDXB] = SY08W02.SY08W-XDR01-XLC-H[SYWINDXB]; /* so restore it*/
    end
    if (SY08W02.SY08W-XDR01-XLC[SYWINDXB] !=  /* user overtyped*/
    SY08W02.SY08W-XDR01-XLC-H[SYWINDXB])     
      if (SY08W02.SY08W-XDR01-SEL[SYWINDXB] != "S")
        converseLib.validationFailed(106); /* not valid*/
        set SY08M005.SY08M-XDR01-XLC[SYWINDXA] cursor, bold;
      end
    end
    SY08W02.SY08W-XDR02-XLC[SYWINDXB] = SY08M005.SY08M-XDR02-XLC[SYWINDXA];
    if (SY08W02.SY08W-XDR02-XLC[SYWINDXB] == " ") /* user blanked*/
      SY08W02.SY08W-XDR02-XLC[SYWINDXB] = SY08W02.SY08W-XDR02-XLC-H[SYWINDXB]; /* so restore it*/
    end
    if (SY08W02.SY08W-XDR02-XLC[SYWINDXB] !=  /* user overtyped*/
    SY08W02.SY08W-XDR02-XLC-H[SYWINDXB])     
      if (SY08W02.SY08W-XDR02-SEL[SYWINDXB] != "S")
        converseLib.validationFailed(106); /* not valid*/
        set SY08M005.SY08M-XDR02-XLC[SYWINDXA] cursor, bold;
      end
    end
    SY08W02.SY08W-XDR03-XLC[SYWINDXB] = SY08M005.SY08M-XDR03-XLC[SYWINDXA];
    if (SY08W02.SY08W-XDR03-XLC[SYWINDXB] == " ") /* user blanked*/
      SY08W02.SY08W-XDR03-XLC[SYWINDXB] = SY08W02.SY08W-XDR03-XLC-H[SYWINDXB]; /* so restore it*/
    end
    if (SY08W02.SY08W-XDR03-XLC[SYWINDXB] !=  /* user overtyped*/
    SY08W02.SY08W-XDR03-XLC-H[SYWINDXB])     
      if (SY08W02.SY08W-XDR03-SEL[SYWINDXB] != "S")
        converseLib.validationFailed(106); /* not valid*/
        set SY08M005.SY08M-XDR03-XLC[SYWINDXA] cursor, bold;
      end
    end
    SY08W02.SY08W-XDR04-XLC[SYWINDXB] = SY08M005.SY08M-XDR04-XLC[SYWINDXA];
    if (SY08W02.SY08W-XDR04-XLC[SYWINDXB] == " ") /* user blanked*/
      SY08W02.SY08W-XDR04-XLC[SYWINDXB] = SY08W02.SY08W-XDR04-XLC-H[SYWINDXB]; /* so restore it*/
    end
    if (SY08W02.SY08W-XDR04-XLC[SYWINDXB] !=  /* user overtyped*/
    SY08W02.SY08W-XDR04-XLC-H[SYWINDXB])     
      if (SY08W02.SY08W-XDR04-SEL[SYWINDXB] != "S")
        converseLib.validationFailed(106); /* not valid*/
        set SY08M005.SY08M-XDR04-XLC[SYWINDXA] cursor, bold;
      end
    end
    SY08W02.SY08W-XDR05-XLC[SYWINDXB] = SY08M005.SY08M-XDR05-XLC[SYWINDXA];
    if (SY08W02.SY08W-XDR05-XLC[SYWINDXB] == " ") /* user blanked*/
      SY08W02.SY08W-XDR05-XLC[SYWINDXB] = SY08W02.SY08W-XDR05-XLC-H[SYWINDXB]; /* so restore it*/
    end
    if (SY08W02.SY08W-XDR05-XLC[SYWINDXB] !=  /* user overtyped*/
    SY08W02.SY08W-XDR05-XLC-H[SYWINDXB])     
      if (SY08W02.SY08W-XDR05-SEL[SYWINDXB] != "S")
        converseLib.validationFailed(106); /* not valid*/
        set SY08M005.SY08M-XDR05-XLC[SYWINDXA] cursor, bold;
      end
    end
    SY08W02.SY08W-XDR06-XLC[SYWINDXB] = SY08M005.SY08M-XDR06-XLC[SYWINDXA];
    if (SY08W02.SY08W-XDR06-XLC[SYWINDXB] == " ") /* user blanked*/
      SY08W02.SY08W-XDR06-XLC[SYWINDXB] = SY08W02.SY08W-XDR06-XLC-H[SYWINDXB]; /* so restore it*/
    end
    if (SY08W02.SY08W-XDR06-XLC[SYWINDXB] !=  /* user overtyped*/
    SY08W02.SY08W-XDR06-XLC-H[SYWINDXB])     
      if (SY08W02.SY08W-XDR06-SEL[SYWINDXB] != "S")
        converseLib.validationFailed(106); /* not valid*/
        set SY08M005.SY08M-XDR06-XLC[SYWINDXA] cursor, bold;
      end
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    SYWREC.SYWINDXB = SYWREC.SYWINDXB + 1;
  end

  if (converseVar.validationMsgNum != 0) /* Edit problems*/
    return; /* return for redisplay*/
  else
    if (converseVar.eventKey is enter) /* User is done with screen*/
      SY08W02.SY08W-END-SCREEN = "Y";
      return;
    end
  end

  if (converseVar.eventKey is pf7)
    if (SY08W02.SY08W-CURR-POS == 1) /* at beginning of table*/
      converseLib.validationFailed(69); /* tell user*/
    else
      SY08W02.SY08W-CURR-POS = SY08W02.SY08W-CURR-POS - 10;
      if (SY08W02.SY08W-CURR-POS < 1)
        SY08W02.SY08W-CURR-POS = 1;
      end
    end
    return;
  end

  if (converseVar.eventKey is pf8)
    SYWREC.SYWINDEX = SY08W02.SY08W-CURR-POS + 10;
    if (SYWREC.SYWINDEX > SY08W02.SY08W-NBR-ENTRIES)
      converseLib.validationFailed(70); /* at end of table*/
    else
      SY08W02.SY08W-CURR-POS = SY08W02.SY08W-CURR-POS + 10;
    end
    return;
  end

end // end SY08225

// Validate Screen Data
Function SY08250()

   /* Converse Detail map for selected region*/

  SY08150(); /* Validate & load desc.*/

  SY08W01.SY08W-CURR-MAP = "SY08M010";
  SY08W01.SY08W-END-CHG-FL = "N";
  while (SY08W01.SY08W-END-CHG-FL == "N")
    SY08275();
  end

   /* If update ok or no changes message, clear ezemno*/
  if (converseVar.validationMsgNum == 11
   || converseVar.validationMsgNum == 57)
    converseLib.validationFailed(0);
  end

end // end SY08250

// Update Map Control
Function SY08275()

   /* Update Map control. This process will decide what detail map*/
   /* to display to the user and pass control to the proper*/
   /* converse process.*/

  while (SY08W01.SY08W-END-CHG-FL == "N")
    if (SY08W01.SY08W-CURR-MAP == "SY08M010")
      SY08280();
    else
      SY08290();
    end
  end

  if (converseVar.validationMsgNum == 0 /* successful validate*/
   && converseVar.eventKey is enter     /* and enter key pressed*/
   && SY08W01.SY08WMOD != "I")          /* and not inquiry mode*/
    SY08300(); /* update*/
    if (converseVar.validationMsgNum == 0 /* successfull update*/
     || converseVar.validationMsgNum == 57) /* or no changes made*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
      SY08S04(); /* reset screen*/
      if (converseVar.validationMsgNum == 0) /* successfull update*/
        converseLib.validationFailed(11); /* file update successful*/
      end
      if (SY08M001.SY2CLRID == "ALL"
       && SY08W01.SY08W-MSG-CNT2 != 0)
        SY08M001.SYMSCMSG = SY08W01.SY08W-MSG2;
      end
      SY1REC.SY1STNBR = " "; /* clear style for key check*/
      SY2REC.SY2CLRID = " "; /* and color for same*/
      set SY08M001.SY1STNBR cursor;
    else /* problems during updating*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* rollback changes*/
    end
  end

end // end SY08275

// Converse Screen SY08M010
Function SY08280()

  SY08S-PROT-M010(); /* Set field protections*/

  if (SY08M001.XDR-PROD-REG-CD == "02" /* If Europe region*/
   && SY08M001.XGPCD == "02"           /* and footwear GPC*/
   && SY1REC.SY4SZSCL == "02")         /* and footwear material with scale 02*/
    SY08M010.SY08M-EMEA-PROMPT = "EMEA Size:"; /* change prompt*/
    set SY08M010.SY08M-EMEA-PROMPT yellow; /* and highlight*/
  end

  if (converseVar.validationMsgNum == 0)
    set SY08M010.PG1SC4CD cursor; /* put cursor here*/
  end

  if (converseVar.validationMsgNum == 0 /* No errors*/
   && SY08W01.SY08WMOD == "A"           /* We are in add mode*/
   && SY08W01.SY08W-SYREG-FL == "N")    /* No region record on data base*/
    converseLib.validationFailed(13); /* Record does not exist, press ENTER to add*/
    SY08M001.SYMSCMSG = "To ABORT add to Regional Database, press PA2 or PF3";
  end

  if (converseVar.validationMsgNum != 0
   || SY08M001.SYMSCMSG != " "
   || SY08W01.SY08W-DSP-M001 == "Y")
    SY08501();
  end

  converse SY08M010 ;

  SY08S01(); /* reset fields*/

  SY08S02(); /* check PF keys (May exit)*/

  if (converseVar.eventKey is pa2) /* reset screen if PA2*/
    set SY08M001 initial;
    set SY08M010 initial;
    set SY08M015 initial;
    SY08W01.SY08W-END-CHG-FL = "Y";
    SY1REC.SY1STNBR = " "; /* clear style for key check*/
    SY2REC.SY2CLRID = " "; /* and color for same*/
    SY08M001.XGPCD = SYWREC.XGPCD;
    SY08M001.XGPABRV = SYWREC.XGPABRV;
    set SY08M001.SY1STNBR cursor;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY08W01.SY08W-END-CHG-FL == "Y")  /* or end change*/
    return; /* get out*/
  end

  if (converseVar.eventKey is enter /* If enter*/
   && SY08W01.SY08WMOD == "I")      /* and inquiry mode*/
    SY08W01.SY08W-END-CHG-FL = "Y"; /* end this screen*/
    return; /* and exit*/
  end

  SY08285(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful validate*/
    if (converseVar.eventKey is enter)
      SY08W01.SY08W-END-CHG-FL = "Y";
    end
    if (converseVar.eventKey is pf7)
      if (SY08W01.SY08W-CURR-MAP == "SY08M010")
        converseLib.validationFailed(69); /* At beginning*/
      else
        SY08W01.SY08W-CURR-MAP = "SY08M010";
      end
      return;
    end
    if (converseVar.eventKey is pf8)
      if (SY08W01.SY08W-CURR-MAP == "SY08M015")
        converseLib.validationFailed(70); /* At end*/
      else
        SY08W01.SY08W-CURR-MAP = "SY08M015";
      end
      return;
    end
    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(14); /* no errors*/
      set SY08M010.PG1SC4CD cursor;
      return;
    end
  end

end // end SY08280

// Validate Screen Data
Function SY08285()

   /* Validate*/

  if (SY08M001.SY2CLRID == "ALL")
    set SY2REC empty;
    SY2REC.XGPCD = SY08M001.XGPCD;
    SY2REC.SY1STNBR = SY08M001.SY1STNBR;
  else

    SY08S-VAL-XLC(); /* Validate Life Cycle Data*/

    SY08S-VAL-XSE(); /* Validate Season Code/Year*/

    SY08S-VAL-XPR(); /* Validate Product Type*/

    SY08S-VAL-BO(); /* Validate Back Order Data*/

    SY08S-VAL-FLAGS(); /* Validate Flag fields*/

    if (SY08M001.XGPCD == "02"           /* If footwear product*/
     || SY08M010.SY-FRST-DOM-SLS-MO != 0 /* or dates not zero*/
     || SY08M010.SY-PROJ-DOM-CLS-MO != 0)
      SY08S-VAL-MO-DATES(); /* Validate Month dates*/
    else /* No dates, zero out holding fields*/
      SY08W01.SY-FRST-DOM-SLS-MO = 0;
      SY08W01.SY-PROJ-DOM-CLS-MO = 0;
    end

    if ((SY08M001.XGPCD == "02"           /* If footwear product*/
     && SY08M001.XDR-PROD-REG-CD == "02") /* and Europe*/
     || SY08M010.PG-PLAN-FRST-PO-ID != 0) /* Or PO Id not zero*/
      SY08S-VAL-PO-ID(); /* Validate PO Id*/
    else /* No dates, zero out holding fields*/
      SY08W01.PG-PLAN-FRST-PO-ID = 0;
    end

    SY08S-VAL-FUTR(); /* Validate Futures Offer Dates*/

    SY08S-VAL-PROP(); /* Validate Prop Offer Dates*/

  end

   /* Validate Specialist & Forecaster*/
  set PG1REC empty;
  PG1REC.XGPCD = SY08M001.XGPCD;
  if (SY08M010.PG1FCTCD != " ")
    PG1REC.PG1FCTCD = SY08M010.PG1FCTCD;
    SY08S86();
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08M010.SY08M-FCT-ID = PG1REC.XXXUSER;
    else
      SY08M010.SY08M-FCT-ID = "??????";
      converseLib.validationFailed(3); /* Invalid code*/
      set SY08M010.PG1FCTCD cursor, bold;
    end
  else
    SY08M010.SY08M-FCT-ID = " ";
  end

  if (SY08M010.PG1SC4CD != " ")
    PG1REC.PG1FCTCD = " ";
    PG1REC.PG1SC4CD = SY08M010.PG1SC4CD;
    SY08S86();
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08M010.SY08M-SCH-ID = PG1REC.XXXUSER;
    else
      SY08M010.SY08M-SCH-ID = "??????";
      converseLib.validationFailed(3); /* Invalid code*/
      set SY08M010.PG1SC4CD cursor, bold;
    end
  else
    SY08M010.SY08M-SCH-ID = " ";
  end

end // end SY08285

// Converse Screen SY08M015
Function SY08290()

  SY08S-PROT-M015(); /* Set field protections*/

  if (converseVar.validationMsgNum == 0)
    set SY08M015.XWH-WHSE-CD[1] cursor; /* put cursor here*/
  end

  if (converseVar.validationMsgNum != 0
   || SY08M001.SYMSCMSG != " "
   || SY08W01.SY08W-DSP-M001 == "Y")
    SY08501();
  end

  converse SY08M015 ;

  SY08S01(); /* reset fields*/
  SY08W01.SY08W-POP-FL = "N";

  SY08S02(); /* check PF keys (May exit)*/

  if (converseVar.eventKey is pa2) /* reset screen if PA2*/
    set SY08M001 initial;
    set SY08M010 initial;
    set SY08M015 initial;
    SY08W01.SY08W-END-CHG-FL = "Y";
    SY1REC.SY1STNBR = " "; /* clear style for key check*/
    SY2REC.SY2CLRID = " "; /* and color for same*/
    SY08M001.XGPCD = SYWREC.XGPCD;
    SY08M001.XGPABRV = SYWREC.XGPABRV;
    converseLib.validationFailed(1);
    set SY08M001.SY1STNBR cursor;
    return;
  end

  if (converseVar.validationMsgNum != 0 /* errors*/
   || SY08W01.SY08W-END-CHG-FL == "Y")  /* or end change*/
    return; /* get out*/
  end

  if (converseVar.eventKey is enter /* If enter*/
   && SY08W01.SY08WMOD == "I")      /* and inquiry mode*/
    SY08W01.SY08W-END-CHG-FL = "Y"; /* end this screen*/
    return; /* and exit*/
  end

  SY08295(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful validate*/
    if (converseVar.eventKey is enter
     && SY08W01.SY08W-POP-FL == "N")
      SY08W01.SY08W-END-CHG-FL = "Y";
    end
    if (converseVar.eventKey is pf7)
      if (SY08W01.SY08W-CURR-MAP == "SY08M010")
        converseLib.validationFailed(69); /* At beginning*/
      else
        SY08W01.SY08W-CURR-MAP = "SY08M010";
      end
      return;
    end
    if (converseVar.eventKey is pf8)
      if (SY08W01.SY08W-CURR-MAP == "SY08M015")
        converseLib.validationFailed(70); /* At end*/
      else
        SY08W01.SY08W-CURR-MAP = "SY08M015";
      end
      return;
    end
    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(14); /* no errors*/
      set SY08M015.XWH-WHSE-CD[1] cursor;
      return;
    end
  end

end // end SY08290

// Validate Screen Data
Function SY08295()

   /* Validate*/

  SYWREC.SYWINDEX = 1;
  while (SYWREC.SYWINDEX <= 6)
    if (SY08M015.XWH-WHSE-CD[SYWINDEX] == " ")
      SY08M015.XWH-WHSE-ABRV[SYWINDEX] = " ";
    else
      SY08S-VAL-XWH(); /* Validate Warehouse codes*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

   /* Now, check to see if the 'More' prompt needs updating*/
  if (SY08M015.XWH-WHSE-CD[1] == " " /* No whse entries*/
   && SY08M015.XWH-WHSE-CD[2] == " " 
   && SY08M015.XWH-WHSE-CD[3] == " " 
   && SY08M015.XWH-WHSE-CD[4] == " " 
   && SY08M015.XWH-WHSE-CD[5] == " " 
   && SY08M015.XWH-WHSE-CD[6] == " ")
    SYWREC.SYWMSGFL = "N";
  else
    SYWREC.SYWMSGFL = "Y";
  end
  if (converseVar.validationMsgNum == 0)
    if (SY08M010.SY08M-MORE-PROMPT == " "
     && SYWREC.SYWMSGFL == "Y")
      SY08M010.SY08M-MORE-PROMPT = "More";
    else
      if (SY08M010.SY08M-MORE-PROMPT != " "
       && SYWREC.SYWMSGFL == "N")
        SY08M010.SY08M-MORE-PROMPT = " ";
      end
    end
  end

end // end SY08295

// Add/Update SYREG Row
Function SY08300()

   /* Update/Insert logic*/

  SY08W01.SY08W-CHANGED-FLAG = "N";
  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;

  if (SY08M001.SY2CLRID != "ALL")
    SY08350();
    return;
  end

   /* If we get here, user has requested updates to ALL colors.*/
   /* declare a cursor on color and read then, performing either*/
   /* inserts or updates as needed.*/

  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08300"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "SS";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
    SY08S99();
    converseLib.validationFailed(21); /* color table error*/
    return; /* Exit to display map*/
  end

  SY08W01.SY08W-END-CHG-FL = "N";
  SY08W01.SY08W-UPD-SY1-FL = "Y";
  SY08W01.SY08W-SY2-XDR = "02";
  SY08W01.SY08W-MSG-CNT2 = 0;
  while (SY08W01.SY08W-END-CHG-FL == "N")
    call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
    if (SQLCA.VAGen_SQLCODE == 0)
      SY08M001.SY2CLRID = SY2REC.SY2CLRID;
      SY08M001.XDMCD = SY2REC.XDMCD;
      SY08325();
      if (SYWREC.XDR-PROD-REG-CD[SYWREGX] != "01" /* User not USA*/
       && SY2REC.XDR-PROD-REG-CD == "01")         /* and USA colors*/
        SY08W01.SY08W-UPD-SY1-FL = "N";
      else
        if (SY2REC.XDR-PROD-REG-CD != "02")
          SY08W01.SY08W-SY2-XDR = SY2REC.XDR-PROD-REG-CD;
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE != 100)
        TA1REC.TA1LOC = "SY08300"; /* Program number*/
        TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
        TA1REC.TA1LOCAT[2] = "SN";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
        SY08S99();
        converseLib.validationFailed(21); /* color table error*/
        return; /* Exit to display map*/
      else
        SY08W01.SY08W-END-CHG-FL = "Y";
      end
    end
    if (converseVar.validationMsgNum != 0)
      SY08W01.SY08W-END-CHG-FL = "Y";
    end
  end

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08300"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "C1";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* Table key*/
    SY08S99();
    converseLib.validationFailed(21); /* color table error*/
    return; /* Exit to display map*/
  end

  SY08M001.SY2CLRID = "ALL"; /* Reset Color Id*/

   /* Now update Forecaster on the VSTYLE if needed*/
  if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == "01" /* USA User*/
   && SY08W01.SY08W-SY2-XDR == "02")          /* and only EAO colors*/
    SY08W01.SY08W-UPD-SY1-FL = "N";
  end

  if (SY08W01.SY08W-UPD-SY1-FL == "Y"
   && SY08M010.PG1FCTCD != " "
   && SY08M010.PG1FCTCD != SY1REC.PG1FCTCD)
    SY08W01.SY08W-CHANGED-FLAG = "Y";
    SY08W01.SY1DATA = SY1REC.SY1DATA;
    SY1REC.PG1FCTCD = SY08M010.PG1FCTCD;
    SY1REC.ZZZCHGDT = SYWREC.ZZZCHGDT;
    SY1REC.ZZZCHGTM = SYWREC.ZZZCHGTM;
    SY08S-UPD-STYLE();
  else
    if (SY08W01.SY08W-MSG-CNT2 == 0 /* Nothing got changed*/
     && SY08W01.SY08W-CHANGED-FLAG == "N")
      converseLib.validationFailed(57); /* Tell user*/
    end
  end

end // end SY08300

// Color scan regional updates
Function SY08325()

   /* now try and find the SYREG regional row*/

  VSYREG02.XGP-GPC-CD = SY08M001.XGPCD;
  VSYREG02.SY-STY-NBR = SY08M001.SY1STNBR;
  VSYREG02.SY-COLR-CD-ID = SY08M001.SY2CLRID;
  VSYREG02.XDM-DIM-CD = SY08M001.XDMCD;
  VSYREG02.XDR-PROD-REG-CD = SY08M001.XDR-PROD-REG-CD;
  SY08S85(); /* try for the record*/
  if (SQLCA.VAGen_SQLCODE == 100)
    SQLCA.VAGen_SQLCODE = 0; /* reset sqlcode*/
    return; /* and exit*/
  else
    SY08W01.SY08W-SYREG-FL = "Y";
  end

  SY08W01.VSYREG02-GROUP = VSYREG02.VSYREG02-GROUP;
  SY08W01.VPRDRG02-GROUP = VPRDRG02.VPRDRG02-GROUP;
  if (SY08M010.PG1FCTCD != " ")
    VSYREG02.PG-FCST-CD = SY08M010.PG1FCTCD;
  end
  if (SY08M010.PG1SC4CD != " ")
    VSYREG02.PG-SCHED-SPCLT-CD = SY08M010.PG1SC4CD;
    VPRDRG02.PG-SCHED-SPCLT-CD = SY08M010.PG1SC4CD;
  end

  if (SY08W01.VSYREG02-GROUP != VSYREG02.VSYREG02-GROUP)
    SY08W01.SY08W-CHANGED-FLAG = "Y";
    SY08W01.SY08W-MSG-CNT2 = SY08W01.SY08W-MSG-CNT2 + 1;
    VSYREG02.ZZ-CHNG-DT = SYWREC.ZZZCHGDT;
    VSYREG02.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;
    SY08S41(); /* update it*/
    if (converseVar.validationMsgNum == 0) /* no errors*/
      SY08S43(); /* Insert Audit*/
      SY08S44(); /* and Tag*/
    end
  end

  if (SY08W01.VPRDRG02-GROUP != VPRDRG02.VPRDRG02-GROUP)
    SY08W01.SY08W-CHANGED-FLAG = "Y";
    VPRDRG02.ZZ-CHNG-DT = SYWREC.ZZZCHGDT;
    VPRDRG02.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;
    SY08S-UPD-PRDRG(); /* update it*/
  end

  if (converseVar.validationMsgNum == 0 /* no errors*/
   && VSYREG02.XGP-GPC-CD == "03")      /* and Apparel*/
    SY08400(); /* Check others & color*/
  end

end // end SY08325

// Add/Update SYREG Row
Function SY08350()

   /* Update/Insert logic*/

  if (converseVar.eventKey is pf13) /* User requesting delete*/
    SY08S45(); /* So Delete it*/
    if (converseVar.validationMsgNum == 0) /* Delete ok*/
      SY08S43(); /* Insert Audit*/
      SY08S44(); /* And Tag*/
    end
    return; /* and exit*/
  else
    if (SY08W01.SY08W-SYREG-FL == "N") /* no VSYREG01*/
      set VSYREG02 empty;
      VSYREG02.XGP-GPC-CD = SY08M001.XGPCD;
      VSYREG02.SY-STY-NBR = SY08M001.SY1STNBR;
      VSYREG02.SY-COLR-CD-ID = SY08M001.SY2CLRID;
      VSYREG02.XDM-DIM-CD = SY08M001.XDMCD;
      VSYREG02.XDR-PROD-REG-CD = SY08M001.XDR-PROD-REG-CD;
      VSYREG02.ZZ-SDT = SYWREC.ZZZSDT;
    end
  end

  SY08W01.VSYREG02-GROUP = VSYREG02.VSYREG02-GROUP;
  VSYREG02.PG-FCST-CD = SY08M010.PG1FCTCD;
  VSYREG02.PG-SCHED-SPCLT-CD = SY08M010.PG1SC4CD;
  VSYREG02.XSE-SESN-CD = SY08M010.XSE-SESN-CD;
  VSYREG02.XSN-SESN-YR-RNG = SY08M010.XSN-SESN-YR-RNG;
  VSYREG02.XPR-PROD-TYP-CD = SY08M010.XPR-PROD-TYP-CD;
  VSYREG02.SY-ALW-NEW-ORD-FL = SY08M010.SY-ALW-NEW-ORD-FL;
  VSYREG02.OP-HMDL-HOT-FL = SY08M010.OP-HMDL-HOT-FL;
  VSYREG02.SY-SFTY-STKCLS-IND = SY08M010.SY-SFTY-STKCLS-IND;
  VSYREG02.SY-PROP-OFFER-BDT = SY08W01.SY-PROP-OFFER-BDT;
  VSYREG02.SY-PROP-OFFER-XDT = SY08W01.SY-PROP-OFFER-XDT;
  VSYREG02.SY-FUTR-OFFER-BDT = SY08W01.SY-FUTR-OFFER-BDT;
  VSYREG02.SY-FUTR-OFFER-XDT = SY08W01.SY-FUTR-OFFER-XDT;
  VSYREG02.SY-FRST-DOM-SLS-MO = SY08W01.SY-FRST-DOM-SLS-MO;
  VSYREG02.SY-PROJ-DOM-CLS-MO = SY08W01.SY-PROJ-DOM-CLS-MO;

  if (SY08M010.SY08M-XLC-CHG-NBR != 0
   || SY08M010.XLC-LIFE-CYC-CD != " "
   || SY08M010.SY-LIFE-CYC-EDT != 0
   || SY08M010.SY08M-XLC-DEL-FL == "Y")
    SY08S-FMT-XLC();
    if (converseVar.validationMsgNum != 0)
      return;
    end
  end
  VSYREG02.XLC-LIFE-CYC-CD[1] = SY08M010.SY08M-XLC-CD[1];
  VSYREG02.SY-LIFE-CYC-EDT[1] = SY08W01.SY-LIFE-CYC-EDT[1];
  VSYREG02.XLC-LIFE-CYC-CD[2] = SY08M010.SY08M-XLC-CD[2];
  VSYREG02.SY-LIFE-CYC-EDT[2] = SY08W01.SY-LIFE-CYC-EDT[2];
  VSYREG02.XLC-LIFE-CYC-CD[3] = SY08M010.SY08M-XLC-CD[3];
  VSYREG02.SY-LIFE-CYC-EDT[3] = SY08W01.SY-LIFE-CYC-EDT[3];
  VSYREG02.XLC-LIFE-CYC-CD[4] = SY08M010.SY08M-XLC-CD[4];
  VSYREG02.SY-LIFE-CYC-EDT[4] = SY08W01.SY-LIFE-CYC-EDT[4];

   /* For footwear and equipment, update the prop end date if close out life cycle change*/
  if (SY08M010.XLC-LIFE-CYC-CD == "20")
    if ((SY08M001.XGPCD != "03" || WEU0100-EQUIP-PROD-FL == "Y"))
      if (VSYREG02.SY-PROP-OFFER-XDT > VSYREG02.SY-LIFE-CYC-EDT[1]
       && VSYREG02.SY-LIFE-CYC-EDT[1] >= VSYREG02.SY-PROP-OFFER-BDT)
        VSYREG02.SY-PROP-OFFER-XDT = VSYREG02.SY-LIFE-CYC-EDT[1];
      end
    end
  end

  if (SY08W01.VSYREG02-GROUP != VSYREG02.VSYREG02-GROUP)
    SY08W01.SY08W-CHANGED-FLAG = "Y";
    SY08W01.SY08W-MSG-CNT2 = SY08W01.SY08W-MSG-CNT2 + 1;
    VSYREG02.ZZ-CHNG-DT = SYWREC.ZZZCHGDT;
    VSYREG02.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;
    if (SY08W01.SY08W-SYREG-FL == "Y") /* we have VSYREG01*/
      SY08S41(); /* update it*/
    else
      SY08S42(); /* insert it*/
    end
    if (converseVar.validationMsgNum == 0)
      SY08S43(); /* Insert Audit*/
      SY08S44(); /* Insert Tag*/
    else
      return;
    end
  end

  SY08610(); /* Check Global tables*/

  if (converseVar.validationMsgNum == 0)
    SY08400(); /* Check other SYREG rows*/
  end

  if (SY08W01.SY08W-CHANGED-FLAG == "N")
    converseLib.validationFailed(57); /* no changes made*/
  end

end // end SY08350

// Update SYREG Row Set
Function SY08400()

   /* This logic will determine if we want to carry an update*/
   /* onto other regional rows and also update the VCOLOR01 table.*/

  SY08W01.SY08WSW1 = "Y"; /* Switch for Update to VCOLOR*/
  set SY08W03 empty;
  set SY08W04 empty;
  SY08W03.XGP-GPC-CD = VSYREG02.XGP-GPC-CD;
  SY08W03.SY-STY-NBR = VSYREG02.SY-STY-NBR;
  SY08W03.SY-COLR-CD-ID = VSYREG02.SY-COLR-CD-ID;
  SY08W03.XDM-DIM-CD = VSYREG02.XDM-DIM-CD;

  call "VSYREG02" ("S2", SQLCA, SY08W03) {isNoRefresh = yes, isExternal = yes}; /* Open set*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08400"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYREG02"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "S2";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY; /* Table key*/
    SY08S99();
    converseLib.validationFailed(23); /* color table error*/
    return; /* Exit to display map*/
  end

  SY08S-NEXT-SYREG(); /* read first row*/
   /* Now load all the region rows into SY08W04 array*/
  while (SY08W03.XDR-PROD-REG-CD != "99")
    SY08W04-ROW-CNT = SY08W04-ROW-CNT + 1;
    move SY08W04-ROW-CNT to SY08W04-IDX withV60Compat;
    SY08W04.VSYREG02-GROUP[SY08W04-IDX] = SY08W03.VSYREG02-GROUP;
    SY08S-NEXT-SYREG();
  end

  call "VSYREG02" ("C2", SQLCA, SY08W03) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "SY08400"; /* Program number*/
    TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYREG02"; /* Table view name*/
    TA1REC.TA1LOCAT[2] = "C2";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY; /* Table key*/
    SY08S99();
    converseLib.validationFailed(23); /* color table error*/
  end

  SY08W04-IDX = 1; /* reset index*/
  if (VSYREG02.XGP-GPC-CD == "03") /* If Apparel*/
    SY08405();
  else
    SY08410();
  end

end // end SY08400

// Update SYREG Row Set
Function SY08405()

   /* This logic will determine if we want to carry an update*/
   /* onto other regional rows and also update the VCOLOR01 table.*/

   /* Now read the first record that is in an active live cycle*/
  while (SY08W04-IDX <= SY08W04-ROW-CNT
   && SY08W04.XLCCD1[SY08W04-IDX] > "10")
    SY08W04-IDX = SY08W04-IDX + 1;
  end
   /* If no data is active, get out.*/
  if (SY08W04-IDX > SY08W04-ROW-CNT)
    return;
  end

  if (SYWREC.XDR-PROD-REG-CD[1] == "01"
   && (SY2REC.XDR-PROD-REG-CD == "01"
   || SY2REC.XDR-PROD-REG-CD == "04"))
    if (SY08W04.XDR-PROD-REG-CD[SY08W04-IDX] == "02"
     || SY08W04.XDR-PROD-REG-CD[SY08W04-IDX] == "03"
     || SY08W04.XDR-PROD-REG-CD[SY08W04-IDX] == "05"
     || SY08W04.XDR-PROD-REG-CD[SY08W04-IDX] == "06")
      SY08W04-IDX = SY08W04-IDX + 1;
    end
    if (SY08W04.XDR-PROD-REG-CD[SY08W04-IDX]
     == VSYREG02.XDR-PROD-REG-CD)
      SY08W03.VSYREG02-GROUP = SY08W04.VSYREG02-GROUP[SY08W04-IDX];
   /* PERFORM SY08440;             /* Update SYREG set*/
    else
      SY08W01.SY08WSW1 = "N";
    end
  else
    if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == 
    SY2REC.XDR-PROD-REG-CD)
      if (SY08W04.XDR-PROD-REG-CD[SY08W04-IDX] == "01")
        SY08W01.SY08WSW1 = "N";
        SY08W04-IDX = SY08W04-IDX + 1;
      end
      if (SY08W04.XDR-PROD-REG-CD[SY08W04-IDX]
       == VSYREG02.XDR-PROD-REG-CD)
        if (SY08W01.SY08WSW1 == "Y")
          SY08W03.VSYREG02-GROUP = SY08W04.VSYREG02-GROUP[SY08W04-IDX];
        end
   /* PERFORM SY08440;*/
      else
        SY08W01.SY08WSW1 = "N";
      end
    end
  end

  SY08420(); /* Check update to VCOLOR01*/

end // end SY08405

// Update SYREG Row Set
Function SY08410()

   /* This logic will determine if we want to carry an update*/
   /* onto the VCOLOR01 table (Non-Apparel only).*/

  SY08W01.SY08W-SY2-XLC = "15";
  SY08W01.SY08W-SY2-XLC-EDT = SYWREC.ZZZCHGDT;

  if (SY08W04-IDX > SY08W04-ROW-CNT) /* No regional info*/
    return; /* So exit*/
  end

   /* Now scan through the syreg rows looking at life cycle*/
  while (SY08W04-IDX <= SY08W04-ROW-CNT
   && SY08W01.SY08WSW1 == "Y")
    if (SY08W04.XLCCD1[SY08W04-IDX] <= "10")
      SY08W01.SY08WSW1 = "N"; /* No update if active regions*/
    else
      if (SY08W04.XLCCD1[SY08W04-IDX] == "20") /* close-out*/
        SY08W01.SY08W-SY2-XLC = "20";
        if (SY08W04.SY2CEDT1[SY08W04-IDX] > SY08W01.SY08W-SY2-XLC-EDT)
          SY08W01.SY08W-SY2-XLC-EDT = SY08W04.SY2CEDT1[SY08W04-IDX];
        end
      end
    end
    SY08W04-IDX = SY08W04-IDX + 1;
  end

  if (SY08W01.SY08WSW1 == "Y")
    SY08425();
  end

end // end SY08410

// Update COLOR Row
Function SY08420()

   /* This logic will determine if we want to update VCOLOR01.*/

  SY08W01.SY2DATA = SY2REC.SY2DATA; /* Save before*/

  SY08S-SET-NIL();
  if (SY08W01.SY2NOFXD != 0
   && SY08W01.SY2NOFXD > SY2REC.SY2NOFXD
   && SY2REC.XLCCD1 <= "10")
    SY2REC.SY2NOFXD = SY08W01.SY2NOFXD;
  end

  if (SY08W01.SY08WSW1 == "Y") /* We want to carry to color*/
    SY2REC.PG1SC4CD = VSYREG02.PG-SCHED-SPCLT-CD;
    SY2REC.XSECD = VSYREG02.XSE-SESN-CD;
    SY2REC.XSNYR = VSYREG02.XSN-SESN-YR-RNG;
    SY2REC.XPRCD = VSYREG02.XPR-PROD-TYP-CD;
    SY2REC.SY2POFBD = VSYREG02.SY-PROP-OFFER-BDT;
    SY2REC.SY2POFXD = VSYREG02.SY-PROP-OFFER-XDT;
    SY2REC.SY2FOFBD = VSYREG02.SY-FUTR-OFFER-BDT;
    SY2REC.SY2FOFXD = VSYREG02.SY-FUTR-OFFER-XDT;
    SY2REC.SY2FDSMO = VSYREG02.SY-FRST-DOM-SLS-MO;
    SY2REC.SY2PDCMO = VSYREG02.SY-PROJ-DOM-CLS-MO;
    SY2REC.SY2ALNOR = VSYREG02.SY-ALW-NEW-ORD-FL;
    SY2REC.SY2SSCIN = VSYREG02.SY-SFTY-STKCLS-IND;
    if (SY08M010.SY-BO-SW != " ")
      SY2REC.SY2BOSWI = SY08M010.SY-BO-SW;
      SY2REC.SY2BOEDT = SY08W01.SY-BO-SW-EDT;
      SY2REC.SY2RPRDI = SY08M010.SY-RSTR-XSO-IND;
    end
  end

  if (SY2REC.SY2DATA != SY08W01.SY2DATA)
    SY08W01.SY08W-CHANGED-FLAG = "Y";
    SY2REC.ZZZCHGDT = SYWREC.ZZZCHGDT;
    SY2REC.ZZZCHGTM = SYWREC.ZZZCHGTM;
    SY08S-UPD-COLOR();
  end

end // end SY08420

// Update COLOR Row
Function SY08425()

   /* This logic will determine if we want to update VCOLOR01.*/

  SY08W01.SY2DATA = SY2REC.SY2DATA; /* Save before*/
  if (SY2REC.XGPCD == "02"
   && SY2REC.XDVCD == "02"
   && SY2REC.XLCCD1 == "10"
   && SY2REC.XLCCD1 != SY08W01.SY08W-SY2-XLC
   && SY2REC.SY2CEDT1 < SY08W01.SY08W-SY2-XLC-EDT
   && SY08W01.SY08W-SY2-XLC == "20")
    SY2REC.XLCCD4 = SY2REC.XLCCD3;
    SY2REC.XLCCD3 = SY2REC.XLCCD2;
    SY2REC.XLCCD2 = SY2REC.XLCCD1;
    SY2REC.XLCCD1 = SY08W01.SY08W-SY2-XLC;
    SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
    SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
    SY2REC.SY2CEDT2 = SY2REC.SY2CEDT1;
    SY2REC.SY2CEDT1 = SY08W01.SY08W-SY2-XLC-EDT;
    SY08W01.SY08W-CHANGED-FLAG = "Y";
     /* For footwear and equipment, update the prop end date if close out life cycle change*/
    if (SY2REC.SY2POFXD > SY2REC.SY2CEDT1
     && SY2REC.SY2CEDT1 >= SY2REC.SY2POFBD)
      SY2REC.SY2POFXD = SY2REC.SY2CEDT1;
    end
    SY2REC.ZZZCHGDT = SYWREC.ZZZCHGDT;
    SY2REC.ZZZCHGTM = SYWREC.ZZZCHGTM;
    SY08S-UPD-COLOR();
  end

end // end SY08425

// Display Map M001
Function SY08501()
    /* ******************************************************/
    /* *  Display Map M001                                 **/
    /* *                                                   **/
    /* *     NOTE: We leave the flag set 'Y' if we're      **/
    /* *           displaying an error so that we perform  **/
    /* *           this procedure again to clear the       **/
    /* *           messages from the screen.               **/
    /* ******************************************************/

  if (converseVar.validationMsgNum != 0 /* If we are displaying errors*/
   || SY08M001.SYMSCMSG != " ")        
    SY08W01.SY08W-DSP-M001 = "Y";
  else
    SY08W01.SY08W-DSP-M001 = "N"; /* Reset Flag*/
  end

  display SY08M001 ;

  SY08M001.VAGen_EZEMSG = " ";
  SY08M001.SYMSCMSG = " ";

end // end SY08501

// Display Map M010
Function SY08510()
    /* ******************************************************/
    /* *  Display Map M010                                 **/
    /* *                                                   **/
    /* *     NOTE: This will not really do anything until  **/
    /* *           the next map is conversed.              **/
    /* *                                                   **/
    /* ******************************************************/

  SY08W01.SY08W-CURR-MAP = "SY08M010";
  SY08W01.SY08W-EZEMNO = converseVar.validationMsgNum;

  display SY08M010 ;

  if (SY08W01.SY08W-EZEMNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SY08W01.SY08W-EZEMNO);
  end

end // end SY08510

// Display Map M015
Function SY08515()
    /* ******************************************************/
    /* *  Display Map M015                                 **/
    /* *                                                   **/
    /* *     NOTE: This will not really do anything until  **/
    /* *           the next map is conversed.              **/
    /* *                                                   **/
    /* ******************************************************/

  SY08W01.SY08W-CURR-MAP = "SY08M015";
  SY08W01.SY08W-EZEMNO = converseVar.validationMsgNum;

  display SY08M015 ;

  if (SY08W01.SY08W-EZEMNO == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(SY08W01.SY08W-EZEMNO);
  end

end // end SY08515

// converse pop up window
Function SY08599()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

      /* Special cloned version to support smaller map to fit*/
      /* into floating area in SY08 application.*/
   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "   PF7:Back   Select & Enter  PF8:Frwd";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XWHTBL.XWHCD[XX0XWCT1] != "99") /* Or end of data*/
        if (XWHTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XWHTBL.XWHCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XWHTBL.XWHNM[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (XWHTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XWHTBL.XWHCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XWHTBL.XWHNM[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XWHTBL.XWHCD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end SY08599

// Select Global Product Data
Function SY08600()
   /* This process will select the Global Product tables.*/
   /* As of 5/18/95 this includes VPRDXF01 & VPRDRG02.*/

  SY08S-SEL-PRDXF(); /* First, Get X-ref Row*/
  if (converseVar.validationMsgNum != 0) /* If we had problems*/
    return; /* Get out*/
  end

  VPRDRG02.SY-PROD-ID = VPRDXF01.SY-PROD-ID;
  VPRDRG02.REG-ID = SY08W01.REG-ID;
  SY08S-SEL-PRDRG(); /* Get the Row*/
  if (converseVar.validationMsgNum != 0) /* If we had problems*/
    return; /* Get out*/
  end

end // end SY08600

// Update Global Product Data
Function SY08610()

   /* This process will insert/update the Global Product tables.*/
   /* As of 5/18/95 this includes VPRDRG02.*/

   /* If needed, retrieve product x-ref row*/
  if (SY08W01.SY08W-SYREG-FL == "N") /* We're inserting*/
    if (VPRDXF01.XGP-GPC-CD != SY08M001.XGPCD
     || VPRDXF01.SY-STY-NBR != SY08M001.SY1STNBR
     || VPRDXF01.SY-COLR-CD-ID != SY08M001.SY2CLRID
     || VPRDXF01.XDM-DIM-CD != SY08M001.XDMCD)
      SY08S-SEL-PRDXF();
      if (converseVar.validationMsgNum != 0) /* We've got problems*/
        return; /* So get out*/
      end
    end
    set VPRDRG02 empty;
    VPRDRG02.SY-PROD-ID = VPRDXF01.SY-PROD-ID;
    VPRDRG02.REG-ID = SY08W01.REG-ID;
    VPRDRG02.SY-CURR-SESN-NBR = 1;
    VPRDRG02.ZZ-SDT = SYWREC.ZZZSDT;
  end

  SY08W01.VPRDRG02-GROUP = VPRDRG02.VPRDRG02-GROUP;
  VPRDRG02.SY-ALW-NEW-ORD-FL = SY08M010.SY-ALW-NEW-ORD-FL;
  VPRDRG02.OP-HMDL-HOT-FL = SY08M010.OP-HMDL-HOT-FL;
  VPRDRG02.SY-RSTR-XSO-IND = SY08M010.SY-RSTR-XSO-IND;
  VPRDRG02.SY-FRST-SLS-MO = SY08W01.SY-FRST-DOM-SLS-MO;
  VPRDRG02.SY-PROJ-CLS-MO-DT = SY08W01.SY-PROJ-DOM-CLS-MO;
  VPRDRG02.PG-PLAN-FRST-PO-ID = SY08W01.PG-PLAN-FRST-PO-ID;
  VPRDRG02.SY-BO-SW = SY08M010.SY-BO-SW;
  VPRDRG02.SY-BO-SW-EDT = SY08W01.SY-BO-SW-EDT;
  VPRDRG02.SY-SFTY-STKCLS-IND = SY08M010.SY-SFTY-STKCLS-IND;
  VPRDRG02.PG-SCHED-SPCLT-CD = SY08M010.PG1SC4CD;
  VPRDRG02.XWH-WHSE-CD[1] = SY08M015.XWH-WHSE-CD[1];
  VPRDRG02.XWH-WHSE-CD[2] = SY08M015.XWH-WHSE-CD[2];
  VPRDRG02.XWH-WHSE-CD[3] = SY08M015.XWH-WHSE-CD[3];
  VPRDRG02.XWH-WHSE-CD[4] = SY08M015.XWH-WHSE-CD[4];
  VPRDRG02.XWH-WHSE-CD[5] = SY08M015.XWH-WHSE-CD[5];
  VPRDRG02.XWH-WHSE-CD[6] = SY08M015.XWH-WHSE-CD[6];

  if (VPRDRG02.VPRDRG02-GROUP != SY08W01.VPRDRG02-GROUP)
    if (SY08W01.SY08W-CHANGED-FLAG == "N")
      SY08W01.SY08W-MSG-CNT2 = SY08W01.SY08W-MSG-CNT2 + 1;
    end
    SY08W01.SY08W-CHANGED-FLAG = "Y";
    VPRDRG02.ZZ-CHNG-DT = SYWREC.ZZZCHGDT;
    VPRDRG02.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;
    if (SY08W01.SY08W-SYREG-FL == "N")
      SY08S-INS-PRDRG();
    else
      SY08S-UPD-PRDRG();
    end
  end

end // end SY08610

// Update Global Product Data
Function SY08630()
   /* This process will delete the Global Product tables.*/
   /* As of 5/18/95 this includes VPRDRG01.*/

  SY08S-DEL-PRDRG();

end // end SY08630

// Check if equipment using EU010
Function SY08S-CHECK-EQUIP()
  /* **************************************************************/
  /* This function will use the EU0100 routine to check*/
  /* if the product is an equipment product.*/
  /* **************************************************************/
  set WEU0100 empty;
  WEU0100-TASK = "S ";
  WEU0100-CALLER-LOCATION = "SY08S-CHECK-EQUIP";
  WEU0100-CALLING-APPL = "SY08";
  WEU0100.XGPCD = SY2REC.XGPCD;
  WEU0100.SY1STNBR = SY2REC.SY1STNBR;
  WEU0100.SY2CLRID = SY2REC.SY2CLRID;
  WEU0100.XDMCD = SY2REC.XDMCD;
  call "EU0100" (WEU0100) {isNoRefresh = yes, isExternal = yes};
  if (WEU0100-RETURN-CODE != 0)
    TA1REC.TA1LOCAT[1] = "SY08S";
    TA1REC.TA1LOCAT[2] = "CHECK";
    TA1REC.TA1LOCAT[3] = "EQUIP";
    TA1REC.TA1LOCAT[4] = "EU0100";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY08S99();
    converseLib.validationFailed(21); /* color table error*/
  end

end // end SY08S-CHECK-EQUIP

// Delete VPRDRG02 Row
Function SY08S-DEL-PRDRG()

   /* Update PRDRG02*/

  call "VPRDRG02" ("D ", SQLCA, VPRDRG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY08S-DE";
    TA1REC.TA1LOCAT[2] = "L-PRDRG ";
    TA1REC.TA1LOCAT[3] = "DELETE  ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VPRDRG02";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY08S99();
    converseLib.validationFailed(21); /* Color table error*/
    return;
  end

   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* ****************************************************/

  SYAREC.XXXTBLNM = "VPRDRG02";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = 0;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY08   ";
    TA1REC.TA1LOCAT[1] = "SY08S-DEL";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VPRDRG02 ";
    TA1REC.TA1MAP = "SY08M001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = VPRDXF01.XGP-GPC-CD;
  SYAREC.SY1STNBR = VPRDXF01.SY-STY-NBR;
  SYAREC.SY2CLRID = VPRDXF01.SY-COLR-CD-ID;
  SYAREC.XDMCD = VPRDXF01.XDM-DIM-CD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  SYAREC.SYAUDTYP = "D";
  SYAREC.SYABFR = SY08W01.VPRDRG02-GROUP;
  SYAREC.SYAAFT = " ";

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S-DEL";
      TA1REC.TA1LOCAT[3] = "PRDRG    ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end SY08S-DEL-PRDRG

// VERIFY LIFE CYCLE DATA
Function SY08S-FMT-XLC()

       /* ******************************************/
       /* *  FORMAT LIFE CYCLE DATA.              **/
       /* ******************************************/


  if (SY08M010.SY08M-XLC-CHG-NBR == 0)
    SY08W01.SY-LIFE-CYC-EDT[4] = SY08W01.SY-LIFE-CYC-EDT[3];
    SY08W01.SY-LIFE-CYC-EDT[3] = SY08W01.SY-LIFE-CYC-EDT[2];
    SY08W01.SY-LIFE-CYC-EDT[2] = SY08W01.SY-LIFE-CYC-EDT[1];
    SY08W01.SY-LIFE-CYC-EDT[1] = SY08W01.SY08W-NEW-XLC-EDT;
    SY08M010.SY08M-XLC-CD[4] = SY08M010.SY08M-XLC-CD[3];
    SY08M010.SY08M-XLC-CD[3] = SY08M010.SY08M-XLC-CD[2];
    SY08M010.SY08M-XLC-CD[2] = SY08M010.SY08M-XLC-CD[1];
    SY08M010.SY08M-XLC-CD[1] = SY08M010.XLC-LIFE-CYC-CD;
  else
    SYWREC.SYWINDEX = SY08M010.SY08M-XLC-CHG-NBR;
    if (SY08M010.SY08M-XLC-DEL-FL == "Y")
      SY08M010.SY08M-XLC-CD[SYWINDEX] = " ";
      SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] = 0;
    else
      if (SY08M010.XLC-LIFE-CYC-CD != " ")
        SY08M010.SY08M-XLC-CD[SYWINDEX] = SY08M010.XLC-LIFE-CYC-CD;
      end
      if (SY08W01.SY08W-NEW-XLC-EDT != 0)
        SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] = SY08W01.SY08W-NEW-XLC-EDT;
      end
    end
  end

    /* let's check to make sure they are in order*/

  SY08W01.SY08WSW1 = "Y";
  while (SY08W01.SY08WSW1 == "Y")
    SY08W01.SY08WSW1 = "N";
    SYWREC.SYWINDXA = 1;
    SYWREC.SYWINDXB = 2;
    while (SYWINDXA <= 3)
      if (SY08W01.SY-LIFE-CYC-EDT[SYWINDXA] < 
      SY08W01.SY-LIFE-CYC-EDT[SYWINDXB])
        SY08W01.SY08WSW1 = "Y";
        SY08W01.SY08W-WORK-DATE = SY08W01.SY-LIFE-CYC-EDT[SYWINDXA];
        SY08W01.SY-LIFE-CYC-EDT[SYWINDXA] = SY08W01.SY-LIFE-CYC-EDT[SYWINDXB];
        SY08W01.SY-LIFE-CYC-EDT[SYWINDXB] = SY08W01.SY08W-WORK-DATE;
        SY08W01.SY08W-WRK-XLC-CD = SY08M010.SY08M-XLC-CD[SYWINDXA];
        SY08M010.SY08M-XLC-CD[SYWINDXA] = SY08M010.SY08M-XLC-CD[SYWINDXB];
        SY08M010.SY08M-XLC-CD[SYWINDXB] = SY08W01.SY08W-WRK-XLC-CD;
      end
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
      SYWREC.SYWINDXB = SYWREC.SYWINDXB + 1;
    end
  end

   /* now let's check for a current life cycle*/
   /* and also rebuild display dates.*/

  SYWREC.SYWINDEX = 1;
  SY08W01.SY08WSW1 = "N";
  while (SYWREC.SYWINDEX <= 4)
    if (SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] != 0
     && SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] <= SYWREC.SYWTODAY)
      SY08W01.SY08WSW1 = "Y"; /* We have current xlc*/
    end
    SY08W01.SY08W-WORK-DATE = SY08W01.SY-LIFE-CYC-EDT[SYWINDEX];
    SY08M010.SY08M-XLC-EDT[SYWINDEX] = SY08W01.SY08W-WDATE-YMD;
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end
  if (SY08W01.SY08WSW1 == "N") /* No current life cycle*/
    converseLib.validationFailed(86);
  end

end // end SY08S-FMT-XLC

// Insert VPRDRG02 Row
Function SY08S-INS-PRDRG()

   /* Update PRDRG02*/

  call "VPRDRG02" ("A ", SQLCA, VPRDRG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY08S-IN";
    TA1REC.TA1LOCAT[2] = "S-PRDRG ";
    TA1REC.TA1LOCAT[3] = "INSERT  ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VPRDRG02";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY08S99();
    converseLib.validationFailed(21); /* Color table error*/
    return;
  end

   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* ****************************************************/

  SYAREC.XXXTBLNM = "VPRDRG02";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = 0;
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY08   ";
    TA1REC.TA1LOCAT[1] = "SY08S-INS";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VPRDRG02 ";
    TA1REC.TA1MAP = "SY08M001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = VPRDXF01.XGP-GPC-CD;
  SYAREC.SY1STNBR = VPRDXF01.SY-STY-NBR;
  SYAREC.SY2CLRID = VPRDXF01.SY-COLR-CD-ID;
  SYAREC.XDMCD = VPRDXF01.XDM-DIM-CD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  SYAREC.SYAUDTYP = "A";
  SYAREC.SYABFR = " ";
  SYAREC.SYAAFT = VPRDRG02.VPRDRG02-GROUP;

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S-INS";
      TA1REC.TA1LOCAT[3] = "PRDRG    ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end SY08S-INS-PRDRG

// LOAD SYREG TO SY08W02
Function SY08S-LOAD-SYREG()

       /* ******************************************/
       /* *  LOAD SYREG TO SY08W02 ARRAY.         **/
       /* ******************************************/

   /* Determine current life cycle*/
  SY08W01.SY08W-WRK-XLC-CD = " ";
  SY08W01.SY08W-WRK-XLC-CD = VSYREG02.XLC-LIFE-CYC-CD[1];
  if (SY08W01.SY08W-WRK-XLC-CD == " ")
    SY08W01.SY08W-WRK-XLC-CD = "Y";
  end

  if (VSYREG02.XDR-PROD-REG-CD == "01")
    SY08W02.SY08W-XDR01-XLC[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
    SY08W02.SY08W-XDR01-XLC-H[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
  end
  if (VSYREG02.XDR-PROD-REG-CD == "02")
    SY08W02.SY08W-XDR02-XLC[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
    SY08W02.SY08W-XDR02-XLC-H[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
  end
  if (VSYREG02.XDR-PROD-REG-CD == "03")
    SY08W02.SY08W-XDR03-XLC[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
    SY08W02.SY08W-XDR03-XLC-H[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
  end
  if (VSYREG02.XDR-PROD-REG-CD == "04")
    SY08W02.SY08W-XDR04-XLC[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
    SY08W02.SY08W-XDR04-XLC-H[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
  end
  if (VSYREG02.XDR-PROD-REG-CD == "05")
    SY08W02.SY08W-XDR05-XLC[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
    SY08W02.SY08W-XDR05-XLC-H[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
  end
  if (VSYREG02.XDR-PROD-REG-CD == "06")
    SY08W02.SY08W-XDR06-XLC[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
    SY08W02.SY08W-XDR06-XLC-H[SYWINDXA] = SY08W01.SY08W-WRK-XLC-CD;
  end

end // end SY08S-LOAD-SYREG

// Move Work Date to Disp Date
Function SY08S-MV-DATE()

       /* ******************************************/
       /* *  MOVE YYMMDD TO MMDDYY DATE FORMAT    **/
       /* ******************************************/

  SY08W01.SY08W-DDATE-MONTH = SY08W01.SY08W-WDATE-MONTH;
  SY08W01.SY08W-DDATE-DAY = SY08W01.SY08W-WDATE-DAY;
  SY08W01.SY08W-DDATE-YEAR = SY08W01.SY08W-WDATE-YEAR;

end // end SY08S-MV-DATE

// Fetch next VSYREG
Function SY08S-NEXT-SYREG()

   /* Fetch SYREG01*/

  call "VSYREG02" ("N2", SQLCA, SY08W03) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    SY08W03.XDR-PROD-REG-CD = "99";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 Problems*/
      TA1REC.TA1LOCAT[1] = "SY08S";
      TA1REC.TA1LOCAT[2] = "NEXT";
      TA1REC.TA1TBLVU = "VSYREG02";
      TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
      SY08S99();
      converseLib.validationFailed(23); /* Table error*/
    end
  end

end // end SY08S-NEXT-SYREG

// Set field protection on M005
Function SY08S-PROT-M005()

   /* This group will examine the COMMAREA flags to determine what*/
   /* XDR data should be protected on the SY08M005 screen.*/
   /* SYWINDXA is index into SY08W02 table.*/
   /* SYWINDXB is index into SY08M005 screen.*/

  if (SY08M005.SY08M-XDR06-XLC[SYWINDXB] == " ")
    if ("06" in SYWREC.XDR-PROD-REG-CD
     && SY08W02.SY08W-CANCEL-FL[SYWINDXA] == "N"
     && SY08WMOD == "A")
      set SY08M005.SY08M-XDR06-XLC[SYWINDXB] cursor;
    else
      set SY08M005.SY08M-XDR06-XLC[SYWINDXB] skip;
    end
  else
    set SY08M005.SY08M-XDR06-XLC[SYWINDXB] cursor;
  end
  if (SY08M005.SY08M-XDR05-XLC[SYWINDXB] == " ")
    if ("05" in SYWREC.XDR-PROD-REG-CD
     && SY08W02.SY08W-CANCEL-FL[SYWINDXA] == "N"
     && SY08WMOD == "A")
      set SY08M005.SY08M-XDR05-XLC[SYWINDXB] cursor;
    else
      set SY08M005.SY08M-XDR05-XLC[SYWINDXB] skip;
    end
  else
    set SY08M005.SY08M-XDR05-XLC[SYWINDXB] cursor;
  end
  if (SY08M005.SY08M-XDR04-XLC[SYWINDXB] == " ")
    if ("04" in SYWREC.XDR-PROD-REG-CD
     && SY08W02.SY08W-CANCEL-FL[SYWINDXA] == "N"
     && SY08WMOD == "A")
      set SY08M005.SY08M-XDR04-XLC[SYWINDXB] cursor;
    else
      set SY08M005.SY08M-XDR04-XLC[SYWINDXB] skip;
    end
  else
    set SY08M005.SY08M-XDR04-XLC[SYWINDXB] cursor;
  end
  if (SY08M005.SY08M-XDR03-XLC[SYWINDXB] == " ")
    if ("03" in SYWREC.XDR-PROD-REG-CD
     && SY08W02.SY08W-CANCEL-FL[SYWINDXA] == "N"
     && SY08WMOD == "A")
      set SY08M005.SY08M-XDR03-XLC[SYWINDXB] cursor;
    else
      set SY08M005.SY08M-XDR03-XLC[SYWINDXB] skip;
    end
  else
    set SY08M005.SY08M-XDR03-XLC[SYWINDXB] cursor;
  end
  if (SY08M005.SY08M-XDR02-XLC[SYWINDXB] == " ")
    if ("02" in SYWREC.XDR-PROD-REG-CD
     && SY08W02.SY08W-CANCEL-FL[SYWINDXA] == "N"
     && SY08WMOD == "A")
      set SY08M005.SY08M-XDR02-XLC[SYWINDXB] cursor;
    else
      set SY08M005.SY08M-XDR02-XLC[SYWINDXB] skip;
    end
  else
    set SY08M005.SY08M-XDR02-XLC[SYWINDXB] cursor;
  end
  if (SY08M005.SY08M-XDR01-XLC[SYWINDXB] == " ")
    if ("01" in SYWREC.XDR-PROD-REG-CD
     && SY08M001.XGPCD != "02"
     && SY08W02.SY08W-CANCEL-FL[SYWINDXA] == "N"
     && SY08WMOD == "A")
      set SY08M005.SY08M-XDR01-XLC[SYWINDXB] cursor;
    else
      set SY08M005.SY08M-XDR01-XLC[SYWINDXB] skip;
    end
  else
    set SY08M005.SY08M-XDR01-XLC[SYWINDXB] cursor;
  end

end // end SY08S-PROT-M005

// Set field protection on M010
Function SY08S-PROT-M010()

   /* This group will examine the COMMAREA flags to determine what*/
   /* data should be protected on the SY08M010 screen. This will*/
   /* also decide if an error message should be displayed.*/

  if (COMMAREA.CACLVL[1] == "Y")
    if (SY08M001.XGPCD == "03")
      set SY08M010.XSE-SESN-CD skip;
      set SY08M010.XSN-SESN-YR-RNG skip;
    end
    set SY08M010.OP-HMDL-HOT-FL skip;
    set SY08M010.SY-BO-SW skip;
    set SY08M010.SY-BO-SW-EDT skip;
    set SY08M010.SY-RSTR-XSO-IND skip;
    set SY08M010.XPR-PROD-TYP-CD skip;
    set SY08M010.SY08M-XLC-CHG-NBR skip;
    set SY08M010.XLC-LIFE-CYC-CD skip;
    set SY08M010.SY-LIFE-CYC-EDT skip;
    set SY08M010.SY08M-XLC-DEL-FL skip;
    if (COMMAREA.CACLVL[4] == "Y" /* If restricted Specialist*/
     && SY08M001.XGPCD == "03")  
      set SY08M010.SY-PROP-OFFER-BDT skip;
      set SY08M010.SY-PROP-OFFER-XDT skip;
      set SY08M010.SY-FUTR-OFFER-BDT skip;
      set SY08M010.SY-FUTR-OFFER-XDT skip;
      set SY08M010.SY-ALW-NEW-ORD-FL skip;
    end
  end

  if (SY08W01.SY08WMOD == "I")
    set SY08M010.PG1FCTCD skip;
    set SY08M010.PG1SC4CD skip;
  end

  if (SY08W01.SY08WMOD == "I"
   || SY08M001.SY2CLRID == "ALL")
    set SY08M010.XSE-SESN-CD skip;
    set SY08M010.XSN-SESN-YR-RNG skip;
    set SY08M010.SY-PROP-OFFER-BDT skip;
    set SY08M010.SY-PROP-OFFER-XDT skip;
    set SY08M010.SY-FUTR-OFFER-BDT skip;
    set SY08M010.SY-FUTR-OFFER-XDT skip;
    set SY08M010.SY-FRST-DOM-SLS-MO skip;
    set SY08M010.SY-PROJ-DOM-CLS-MO skip;
    set SY08M010.PG-PLAN-FRST-PO-ID skip;
    set SY08M010.OP-HMDL-HOT-FL skip;
    set SY08M010.SY-BO-SW skip;
    set SY08M010.SY-BO-SW-EDT skip;
    set SY08M010.SY-RSTR-XSO-IND skip;
    set SY08M010.XPR-PROD-TYP-CD skip;
    set SY08M010.SY-ALW-NEW-ORD-FL skip;
    set SY08M010.SY-SFTY-STKCLS-IND skip;
    set SY08M010.SY08M-XLC-CHG-NBR skip;
    set SY08M010.XLC-LIFE-CYC-CD skip;
    set SY08M010.SY-LIFE-CYC-EDT skip;
    set SY08M010.SY08M-XLC-DEL-FL skip;
  end

  if (SY08M001.XGPCD != "02") /* If not footwear, skip these*/
    set SY08M010.SY-SFTY-STKCLS-IND skip;
    set SY08M010.SY-FRST-DOM-SLS-MO skip;
    set SY08M010.SY-PROJ-DOM-CLS-MO skip;
  end

  if (SY08M001.XGPCD != "02" /* If not footwear*/
   || SY08M001.XDR-PROD-REG-CD != "02") /* Not europe*/
    set SY08M010.PG-PLAN-FRST-PO-ID skip, invisible; /* set it dark*/
  end

end // end SY08S-PROT-M010

// Set field protection on M010
Function SY08S-PROT-M015()

   /* This group will examine the COMMAREA flags to determine what*/
   /* data should be protected on the SY08M010 screen. This will*/
   /* also decide if an error message should be displayed.*/

  if (SY08W01.SY08WMOD == "I"   /* Inquiry only*/
   || COMMAREA.CAALVL[1] == "Y" /* Sched/Spclt access*/
   || COMMAREA.CACLVL[1] == "Y")
    set SY08M015.XWH-WHSE-CD[1] skip;
    set SY08M015.XWH-WHSE-CD[2] skip;
    set SY08M015.XWH-WHSE-CD[3] skip;
    set SY08M015.XWH-WHSE-CD[4] skip;
    set SY08M015.XWH-WHSE-CD[5] skip;
    set SY08M015.XWH-WHSE-CD[6] skip;
  end

end // end SY08S-PROT-M015

// Select VPRDRG02 Row
Function SY08S-SEL-PRDRG()

   /* Select PRDRG02*/
   /* NOTE: While the VSYREG02 table exists, it is assumed that*/
   /* the VPRDRG02 table is kept in sync. This statement group is*/
   /* performed only if we already found an SYREG row, so not*/
   /* finding a matching VPRDRG02 row is considered an error!*/

  call "VPRDRG02" ("S ", SQLCA, VPRDRG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY08S-SE";
    TA1REC.TA1LOCAT[2] = "L-PRDRG ";
    TA1REC.TA1LOCAT[3] = "SELECT  ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VPRDRG02";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY08S99();
    converseLib.validationFailed(21); /* Color table error*/
  end

end // end SY08S-SEL-PRDRG

// Select VPRDXF01 Row
Function SY08S-SEL-PRDXF()

   /* Select PRDXF01*/

  VPRDXF01.XGP-GPC-CD = SY2REC.XGPCD;
  VPRDXF01.SY-STY-NBR = SY2REC.SY1STNBR;
  VPRDXF01.SY-COLR-CD-ID = SY2REC.SY2CLRID;
  VPRDXF01.XDM-DIM-CD = SY2REC.XDMCD;

  call "VPRDXF01" ("SB", SQLCA, VPRDXF01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY08S-SE";
    TA1REC.TA1LOCAT[2] = "L-PRDXF ";
    TA1REC.TA1LOCAT[3] = "SELECT  ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VPRDXF01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY08S99();
    converseLib.validationFailed(21); /* Color table error*/
  end

end // end SY08S-SEL-PRDXF

// SETUP NIL OFFER DATES
Function SY08S-SET-NIL()

       /* ******************************************/
       /* *  SETUP NIL ENDING OFFER DATE.         **/
       /* ******************************************/

  SY08W01.SY2NOFXD = 0; /* Zero date*/
  SY08W04-IDX = 1;
  while (SY08W04-IDX <= SY08W04-ROW-CNT)
    if (SY08W04.XLCCD1[SY08W04-IDX] <= "10"
     && SY08W04.SY-PROP-OFFER-XDT[SY08W04-IDX]
     > SY08W01.SY2NOFXD)
      SY08W01.SY2NOFXD = SY08W04.SY-PROP-OFFER-XDT[SY08W04-IDX];
    end
    SY08W04-IDX = SY08W04-IDX + 1;
  end

end // end SY08S-SET-NIL

// Update VCOLOR01 Row
Function SY08S-UPD-COLOR()

   /* Update COLOR01 logic*/

  call "IO0130" ("U ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(104); /* data modified*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 Problems*/
      TA1REC.TA1LOCAT[1] = "SY08S";
      TA1REC.TA1LOCAT[2] = "UPD-COL";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY08S99();
      converseLib.validationFailed(21); /* Color table error*/
      return;
    end
  end

   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* ****************************************************/

  SYAREC.XXXTBLNM = "VCOLOR01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY08   ";
    TA1REC.TA1LOCAT[1] = "SY08S    ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOLOR01 ";
    TA1REC.TA1MAP = "SY08M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = SY2REC.XGPCD;
  SYAREC.SY1STNBR = SY2REC.SY1STNBR;
  SYAREC.SY2CLRID = SY2REC.SY2CLRID;
  SYAREC.XDMCD = SY2REC.XDMCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  SYAREC.SYAUDTYP = "C";
  SYAREC.SYABFR = SY08W01.SY2DATA;
  SYAREC.SYAAFT = SY2REC.SY2DATA;

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S    ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end SY08S-UPD-COLOR

// Update VPRDRG02 Row
Function SY08S-UPD-PRDRG()

   /* Update PRDRG02*/

  call "VPRDRG02" ("U ", SQLCA, VPRDRG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY08S-UP";
    TA1REC.TA1LOCAT[2] = "D-PRDRG ";
    TA1REC.TA1LOCAT[3] = "UPDATE  ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VPRDRG02";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    SY08S99();
    converseLib.validationFailed(21); /* Color table error*/
    return;
  end

   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* ****************************************************/

  SYAREC.XXXTBLNM = "VPRDRG02";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY08   ";
    TA1REC.TA1LOCAT[1] = "SY08S-UPD";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VPRDRG02 ";
    TA1REC.TA1MAP = "SY08M001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = VPRDXF01.XGP-GPC-CD;
  SYAREC.SY1STNBR = VPRDXF01.SY-STY-NBR;
  SYAREC.SY2CLRID = VPRDXF01.SY-COLR-CD-ID;
  SYAREC.XDMCD = VPRDXF01.XDM-DIM-CD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  SYAREC.SYAUDTYP = "C";
  SYAREC.SYABFR = SY08W01.VPRDRG02-GROUP;
  SYAREC.SYAAFT = VPRDRG02.VPRDRG02-GROUP;

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S-UPD";
      TA1REC.TA1LOCAT[3] = "PRDRG    ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end SY08S-UPD-PRDRG

// Update VSTYLE01 Row
Function SY08S-UPD-STYLE()

   /* Update STYLE01 logic*/

  call "IO0120" ("U ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(104); /* data modified*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 Problems*/
      TA1REC.TA1LOCAT[1] = "SY08S";
      TA1REC.TA1LOCAT[2] = "UPD-STY";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1TBLKE = SY1REC.SY1KEY;
      SY08S99();
      converseLib.validationFailed(20); /* Color table error*/
      return;
    end
  end

   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* ****************************************************/

  SYAREC.XXXTBLNM = "VSTYLE01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY08   ";
    TA1REC.TA1LOCAT[1] = "SY08S    ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VSTYLE01 ";
    TA1REC.TA1MAP = "SY08M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = SY1REC.XGPCD;
  SYAREC.SY1STNBR = SY1REC.SY1STNBR;
  SYAREC.SY2CLRID = " ";
  SYAREC.XDMCD = " ";
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  SYAREC.SYAUDTYP = "C";
  SYAREC.SYABFR = SY08W01.SY1DATA;
  SYAREC.SYAAFT = SY1REC.SY1DATA;

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S    ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end SY08S-UPD-STYLE

// VERIFY PROP OFFER DATES
Function SY08S-VAL-BO()

       /* ******************************************/
       /* *  BACKORDER SWITCH AND EFF. DATE       **/
       /* ******************************************/

  set TA2REC empty;
  TA2REC.TA2GRGAN = SY08M010.SY-BO-SW-EDT;
  SY08S-VAL-DATE();
  if (TA2REC.TA2RTNCD == 222)
    converseLib.validationFailed(30); /* Invalid Date Entered*/
    set SY08M010.SY-BO-SW-EDT cursor, bold;
  else
    SY08W01.SY-BO-SW-EDT = TA2REC.TA2GRGGN;
  end

  if (SY08M010.SY-BO-SW == "Y"
   || SY08M010.SY-BO-SW == "N")
    /* Next Sentence*/
  else
    converseLib.validationFailed(3); /* Invalid Code*/
    set SY08M010.SY-BO-SW cursor, bold;
  end

   /* If flag or date was changed, the effective date cannot*/
   /* be less than the current system date.*/
  if (SY08M010.SY-BO-SW != VPRDRG02.SY-BO-SW
   || SY08W01.SY-BO-SW-EDT != VPRDRG02.SY-BO-SW-EDT)
    if (SY08W01.SY-BO-SW-EDT < SYWREC.SYWTODAY)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
      set SY08M010.SY-BO-SW-EDT cursor, bold;
    end
  end

end // end SY08S-VAL-BO

// VERIFY PROP OFFER DATES
Function SY08S-VAL-DATE()

       /* ******************************************/
       /* *  CALL TA0040 TO VALIDATE DATES        **/
       /* ******************************************/

  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0
   || TA2REC.TA2RTNCD == 222)
    return;
  end

   /* This routine will call TA0020*/

  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "SY08";
  TA1REC.TA1MAP = "SY08M001";
  TA1REC.TA1LOC = "VAL-DATE";
  TAEREC.TAEDESC1 = "BAD RETURN FROM TA0040";
  TAEREC.TAEDESC2 = TA2REC.TA2RTNCD;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  converseLib.validationFailed(116); /* Internal Date Error*/

end // end SY08S-VAL-DATE

// Validate Flag fields on Map
Function SY08S-VAL-FLAGS()

   /* Allow new Orders, Hot model flag, & Safety Stock ind,*/
   /* and restricted sales office ind.*/
  if (SY08M010.SY-ALW-NEW-ORD-FL == "Y"
   || SY08M010.SY-ALW-NEW-ORD-FL == "N")
    /* Next sentence*/
  else
    converseLib.validationFailed(3); /* Invalid code*/
    set SY08M010.SY-ALW-NEW-ORD-FL cursor, bold;
  end

  if (SY08M010.OP-HMDL-HOT-FL == "Y"
   || SY08M010.OP-HMDL-HOT-FL == "N"
   || SY08M010.OP-HMDL-HOT-FL == " ")
    /* Next sentence*/
  else
    converseLib.validationFailed(3); /* Invalid code*/
    set SY08M010.OP-HMDL-HOT-FL cursor, bold;
  end

  if (SY08M010.SY-SFTY-STKCLS-IND == " "
   || SY08M010.SY-SFTY-STKCLS-IND == "A"
   || SY08M010.SY-SFTY-STKCLS-IND == "B"
   || SY08M010.SY-SFTY-STKCLS-IND == "C"
   || SY08M010.SY-SFTY-STKCLS-IND == "D")
      /* Next sentence*/
  else
    converseLib.validationFailed(93); /* Valid values are A,B,C,D*/
    set SY08M010.SY-SFTY-STKCLS-IND cursor, bold;
  end

  if (SY08M010.SY-RSTR-XSO-IND == "N"
   || SY08M010.SY-RSTR-XSO-IND == "R"
   || SY08M010.SY-RSTR-XSO-IND == " ")
    /* Next sentence*/
  else
    converseLib.validationFailed(3); /* Invalid code*/
    SY08M001.SYMSCMSG = "Values are N, R, or spaces";
    set SY08M010.SY-RSTR-XSO-IND cursor, bold;
  end

end // end SY08S-VAL-FLAGS

// VERIFY FUTURES OFFER DATES
Function SY08S-VAL-FUTR()

       /* ******************************************/
       /* *  VERIFY FUTURES BEGINNING AND ENDING  **/
       /* *  OFFER DATES.                         **/
       /* ******************************************/

  if (SY08M001.SY2CLRID == "ALL"
   && SY08M010.SY-FUTR-OFFER-BDT == 0
   && SY08M010.SY-FUTR-OFFER-XDT == 0)
    SY08W01.SY-FUTR-OFFER-BDT = 0;
    SY08W01.SY-FUTR-OFFER-XDT = 0;
    return;
  end

   /* Ending Date*/
  if (SY08M010.SY-FUTR-OFFER-XDT != 0)
    set TA2REC empty;
    TA2REC.TA2GRGAN = SY08M010.SY-FUTR-OFFER-XDT;
    SY08S-VAL-DATE();
    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
      set SY08M010.SY-FUTR-OFFER-XDT cursor, bold;
    else
      SY08W01.SY-FUTR-OFFER-XDT = TA2REC.TA2GRGGN;
    end
  else
    if (SY08W01.SY08W-FND-YSN-FL == "Y")
      SY08W01.SY-FUTR-OFFER-XDT = SY08W01.XSN-SESN-XDT;
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-FUTR-OFFER-XDT;
      SY08S-MV-DATE();
      SY08M010.SY-FUTR-OFFER-XDT = SY08W01.SY08W-DDATE-MDY;
    else
      converseLib.validationFailed(130); /* Not on YSN table*/
      set SY08M010.SY-FUTR-OFFER-XDT cursor, bold;
    end
  end

   /* Now check to see if we need to try and extend the ending*/
   /* offer date because the user has changed the season.*/
  if (SY08W01.SY08W-SYREG-FL == "Y" /* If we have row*/
   && SY08W01.SY08WSSN != " "       /* and an extendable season*/
   && SY08W01.SY-FUTR-OFFER-XDT == VSYREG02.SY-FUTR-OFFER-XDT
   && (SY08M010.XSE-SESN-CD != VSYREG02.XSE-SESN-CD
   || SY08M010.XSN-SESN-YR-RNG != VSYREG02.XSN-SESN-YR-RNG))
    if (SY08W01.SY08W-FND-YSN-FL == "Y")
      SYWREC.SYW-FUTR-OFFER-XDT = SY08W01.XSN-SESN-XDT;
      SYWREC.SYW-FUTR-OFFER-XDR = SY08M001.XDR-PROD-REG-CD;
      XPSY010();
      SY08W01.SY-FUTR-OFFER-XDT = SYWREC.SYW-FUTR-OFFER-XDT;
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-FUTR-OFFER-XDT;
      SY08S-MV-DATE();
      SY08M010.SY-FUTR-OFFER-XDT = SY08W01.SY08W-DDATE-MDY;
    else
      converseLib.validationFailed(130); /* Not on YSN table*/
      set SY08M010.SY-FUTR-OFFER-XDT cursor, bold;
    end
  end

   /* Beginning Date*/
  if (SY08M010.SY-FUTR-OFFER-BDT != 0)
    set TA2REC empty;
    TA2REC.TA2GRGAN = SY08M010.SY-FUTR-OFFER-BDT;
    SY08S-VAL-DATE();
    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
      set SY08M010.SY-FUTR-OFFER-BDT cursor, bold;
    else
      SY08W01.SY-FUTR-OFFER-BDT = TA2REC.TA2GRGGN;
    end
  else
    if (SY08W01.SY08W-FND-YSN-FL == "Y")
      SY08W01.SY-FUTR-OFFER-BDT = SY08W01.XSN-SESN-BDT;
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-FUTR-OFFER-BDT;
      SY08S-MV-DATE();
      SY08M010.SY-FUTR-OFFER-BDT = SY08W01.SY08W-DDATE-MDY;
    else
      converseLib.validationFailed(130); /* Not on YSN table*/
      set SY08M010.SY-FUTR-OFFER-BDT cursor, bold;
    end
  end

  if (converseVar.validationMsgNum == 0)
    if (SY08W01.SY-FUTR-OFFER-BDT > SY08W01.SY-FUTR-OFFER-XDT)
      converseLib.validationFailed(132); /* Ending > Beginning*/
      set SY08M010.SY-FUTR-OFFER-BDT cursor, bold;
      set SY08M010.SY-FUTR-OFFER-XDT bold;
    end
  end

end // end SY08S-VAL-FUTR

// Validate Sales & Cls Months
Function SY08S-VAL-MO-DATES()

   /* First sales month*/
  if (SY08M010.SY-FRST-DOM-SLS-MO != 0)
    SY08W01.SY08W-MDATE-YYMM = SY08M010.SY-FRST-DOM-SLS-MO;
    if (SY08W01.SY08W-MDATE-YEAR < 70)
      SY08W01.SY08W-MDATE-CENT = 20;
    else
      SY08W01.SY08W-MDATE-CENT = 19;
    end
    if (SY08W01.SY08W-MDATE-MONTH < 01
     || SY08W01.SY08W-MDATE-MONTH > 12)
      converseLib.validationFailed(30); /* Invalid date entered*/
      set SY08M010.SY-FRST-DOM-SLS-MO cursor, bold;
    else
      SY08W01.SY-FRST-DOM-SLS-MO = SY08W01.SY08W-MDATE-CCYYMM;
    end
  else
    SY08W01.SY-FRST-DOM-SLS-MO = 0;
    if (SY08M001.XGPCD == "02")
      converseLib.validationFailed(40); /* Required field*/
      set SY08M010.SY-FRST-DOM-SLS-MO cursor, bold;
    end
  end

   /* Proj. close-out month*/
  if (SY08M010.SY-PROJ-DOM-CLS-MO != 0)
    SY08W01.SY08W-MDATE-YYMM = SY08M010.SY-PROJ-DOM-CLS-MO;
    if (SY08W01.SY08W-MDATE-YEAR < 70)
      SY08W01.SY08W-MDATE-CENT = 20;
    else
      SY08W01.SY08W-MDATE-CENT = 19;
    end
    if (SY08W01.SY08W-MDATE-MONTH < 01
     || SY08W01.SY08W-MDATE-MONTH > 12)
      converseLib.validationFailed(30); /* Invalid date entered*/
      set SY08M010.SY-PROJ-DOM-CLS-MO cursor, bold;
    else
      SY08W01.SY-PROJ-DOM-CLS-MO = SY08W01.SY08W-MDATE-CCYYMM;
    end
  else
    SY08W01.SY-PROJ-DOM-CLS-MO = 0;
    if (SY08M001.XGPCD == "02")
      converseLib.validationFailed(40); /* Required field*/
      set SY08M010.SY-PROJ-DOM-CLS-MO cursor, bold;
    end
  end

end // end SY08S-VAL-MO-DATES

// VERIFY FRST PO ID
Function SY08S-VAL-PO-ID()

       /* ******************************************/
       /* *  PLANNED FIRST PO ID                  **/
       /* ******************************************/

  set TA2REC empty;
  TA2REC.TA2GRGEN = SY08M010.PG-PLAN-FRST-PO-ID;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 222)
    converseLib.validationFailed(30); /* Invalid Date Entered*/
    set SY08M010.PG-PLAN-FRST-PO-ID cursor, bold;
    return;
  end

   /* Now, this is not really a date but instead is two months.*/
   /* The first is the production month, and the second is the*/
   /* delivery month(this is in the 'day' part of the date). So,*/
   /* check that the delivery month is not > 12.*/

  if (TA2REC.TA2GRGDD > 12) /* Delivery month invalid*/
    converseLib.validationFailed(30); /* Invalid Date Entered*/
    set SY08M010.PG-PLAN-FRST-PO-ID cursor, bold;
    return;
  end

  SY08W01.PG-PLAN-FRST-PO-ID = TA2REC.TA2GRGGN;

end // end SY08S-VAL-PO-ID

// VERIFY PROP OFFER DATES
Function SY08S-VAL-PROP()

       /* ******************************************/
       /* *  VERIFY PROP BEGINNING AND ENDING     **/
       /* *  OFFER DATES.                         **/
       /* ******************************************/

  if (SY08M001.SY2CLRID == "ALL"
   && SY08M010.SY-PROP-OFFER-BDT == 0
   && SY08M010.SY-PROP-OFFER-XDT == 0)
    SY08W01.SY-PROP-OFFER-BDT = 0;
    SY08W01.SY-PROP-OFFER-XDT = 0;
    return;
  end

   /* Ending Date*/
  if (SY08M010.SY-PROP-OFFER-XDT != 0)
    set TA2REC empty;
    TA2REC.TA2GRGAN = SY08M010.SY-PROP-OFFER-XDT;
    SY08S-VAL-DATE();
    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
      set SY08M010.SY-PROP-OFFER-XDT cursor, bold;
    else
      SY08W01.SY-PROP-OFFER-XDT = TA2REC.TA2GRGGN;
    end
  else
    if (SY08W01.SY08W-FND-YSN-FL == "Y")
      SY08W01.SY-PROP-OFFER-XDT = SY08W01.XSN-SESN-XDT;
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-PROP-OFFER-XDT;
      SY08S-MV-DATE();
      SY08M010.SY-PROP-OFFER-XDT = SY08W01.SY08W-DDATE-MDY;
    else
      converseLib.validationFailed(130); /* Not on YSN table*/
      set SY08M010.SY-PROP-OFFER-XDT cursor, bold;
    end
  end

   /* Now check to see if we need to try and extend the ending*/
   /* offer date because the user has changed the season.*/
  if (SY08W01.SY08W-SYREG-FL == "Y" /* If we have row*/
   && SY08W01.SY08WSSN != " "       /* and an extendable season*/
   && SY08W01.SY-PROP-OFFER-XDT == VSYREG02.SY-PROP-OFFER-XDT
   && (SY08M010.XSE-SESN-CD != VSYREG02.XSE-SESN-CD
   || SY08M010.XSN-SESN-YR-RNG != VSYREG02.XSN-SESN-YR-RNG))
    if (SY08W01.SY08W-FND-YSN-FL == "Y")
      SY08W01.SY08W-WORK-DATE = SY08W01.XSN-SESN-XDT;
      SY08W01.SY-PROP-OFFER-XDT = SY08W01.SY08W-WORK-DATE;
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-PROP-OFFER-XDT;
      SY08S-MV-DATE();
      SY08M010.SY-PROP-OFFER-XDT = SY08W01.SY08W-DDATE-MDY;
    else
      converseLib.validationFailed(130); /* Not on YSN table*/
      set SY08M010.SY-PROP-OFFER-XDT cursor, bold;
    end
  end

   /* Beginning Date*/
  if (SY08M010.SY-PROP-OFFER-BDT != 0)
    set TA2REC empty;
    TA2REC.TA2GRGAN = SY08M010.SY-PROP-OFFER-BDT;
    SY08S-VAL-DATE();
    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
      set SY08M010.SY-PROP-OFFER-BDT cursor, bold;
    else
      SY08W01.SY-PROP-OFFER-BDT = TA2REC.TA2GRGGN;
    end
  else
    if (SY08W01.SY08W-FND-YSN-FL == "Y")
      SY08W01.SY-PROP-OFFER-BDT = SY08W01.XSN-SESN-BDT;
      SY08W01.SY08W-WORK-DATE = SY08W01.SY-PROP-OFFER-BDT;
      SY08S-MV-DATE();
      SY08M010.SY-PROP-OFFER-BDT = SY08W01.SY08W-DDATE-MDY;
    else
      converseLib.validationFailed(130); /* Not on YSN table*/
      set SY08M010.SY-PROP-OFFER-BDT cursor, bold;
    end
  end

  if (converseVar.validationMsgNum == 0)
    if (SY08W01.SY-PROP-OFFER-BDT > SY08W01.SY-PROP-OFFER-XDT)
      converseLib.validationFailed(132); /* Ending > Beginning*/
      set SY08M010.SY-PROP-OFFER-BDT cursor, bold;
      set SY08M010.SY-PROP-OFFER-XDT bold;
    end
  end

end // end SY08S-VAL-PROP

// VERIFY LIFE CYCLE DATA
Function SY08S-VAL-XLC()

       /* ******************************************/
       /* *  VERIFY LIFE CYCLE DATA AND GET       **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY08M010.SY08M-XLC-DEL-FL == " ")
    SY08M010.SY08M-XLC-DEL-FL = "N";
  end

   /* Check to see if user wants any changes*/
  if (SY08M010.SY08M-XLC-DEL-FL == "N"
   && SY08M010.SY-LIFE-CYC-EDT == 0
   && SY08M010.XLC-LIFE-CYC-CD == " "
   && SY08M010.SY08M-XLC-CHG-NBR == 0)
    return;
  end

  if (SY08M010.SY08M-XLC-DEL-FL == "Y")
    if (SY08M010.XLC-LIFE-CYC-CD != " "
     || SY08M010.SY-LIFE-CYC-EDT != 0)
      converseLib.validationFailed(158); /* Cannot Modify & Delete*/
      set SY08M010.SY08M-XLC-DEL-FL cursor, bold;
      return;
    end
    if (SY08M010.SY08M-XLC-CHG-NBR == 0)
      converseLib.validationFailed(156); /* Number Must be non-zero*/
      set SY08M010.SY08M-XLC-CHG-NBR cursor, bold;
      return;
    end
    SYWREC.SYWINDEX = SY08M010.SY08M-XLC-CHG-NBR;
    if (SY08M010.SY08M-XLC-CD[SYWINDEX] == " ") /* No entry on line*/
      converseLib.validationFailed(63); /* Enter existing occurrence*/
      set SY08M010.SY08M-XLC-CHG-NBR cursor, bold;
      return;
    end
    if (SY08W01.SY-LIFE-CYC-EDT[SYWINDEX] <= SYWREC.SYWTODAY)
      converseLib.validationFailed(1);
      SY08M001.SYMSCMSG = "     Effective Date Must be in the Future to Delete";
      set SY08M010.SY08M-XLC-CHG-NBR cursor, bold;
      return;
    end
    return;
  else
    if (SY08M010.SY08M-XLC-DEL-FL != "N")
      converseLib.validationFailed(36); /* Value must by Y or N*/
      set SY08M010.SY08M-XLC-DEL-FL cursor, bold;
      return;
    end
  end

   /* Effective Date*/
  if (SY08M010.SY-LIFE-CYC-EDT != 0)
    set TA2REC empty;
    TA2REC.TA2GRGAN = SY08M010.SY-LIFE-CYC-EDT;
    SY08S-VAL-DATE();
    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
      set SY08M010.SY-LIFE-CYC-EDT cursor, bold;
    else
      SY08W01.SY08W-NEW-XLC-EDT = TA2REC.TA2GRGGN;
      if (SY08W01.SY08W-NEW-XLC-EDT == SY08W01.SY-LIFE-CYC-EDT[1]
       || SY08W01.SY08W-NEW-XLC-EDT == SY08W01.SY-LIFE-CYC-EDT[2]
       || SY08W01.SY08W-NEW-XLC-EDT == SY08W01.SY-LIFE-CYC-EDT[3]
       || SY08W01.SY08W-NEW-XLC-EDT == SY08W01.SY-LIFE-CYC-EDT[4])
        converseLib.validationFailed(16); /* Effective Date Allready Exists*/
        set SY08M010.SY-LIFE-CYC-EDT cursor, bold;
      else
        if (SY08W01.SY08W-NEW-XLC-EDT < SYWREC.SYWTODAY)
          converseLib.validationFailed(30); /* Effective Date < today*/
          SY08M001.SYMSCMSG = "     Effective Date Cannot be in the Past";
          set SY08M010.SY-LIFE-CYC-EDT cursor, bold;
        end
      end
    end
  else
    SY08W01.SY08W-NEW-XLC-EDT = 0;
  end

   /* Validate Life Cycle Code*/
  if (SY08M010.XLC-LIFE-CYC-CD == "99"
   || SY08M010.XLC-LIFE-CYC-CD == "98")
    converseLib.validationFailed(3); /* invalid code*/
    set SY08M010.XLC-LIFE-CYC-CD cursor, bold;
    SY08M010.XLC-LIFE-CYC-DESC = "INVALID";
    return;
  end
  if (SY08M010.XLC-LIFE-CYC-CD != " ")
    if (SY08M010.XLC-LIFE-CYC-CD in XLCTBL.XLCCD)
      SY08M010.XLC-LIFE-CYC-DESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
      if (XLCTBL.XXXSTAT[sysVar.arrayIndex] == "I")
        set SY08M010.XLC-LIFE-CYC-CD cursor, bold;
        converseLib.validationFailed(33); /* status code is inactive*/
      end
    else
      set SY08M010.XLC-LIFE-CYC-CD cursor, bold;
      SY08M010.XLC-LIFE-CYC-DESC = "INVALID ";
      converseLib.validationFailed(3); /* invalid code*/
      return;
    end
  end

   /* Validate change number*/
  if (SY08M010.SY08M-XLC-CHG-NBR > 0)
    SYWREC.SYWINDEX = SY08M010.SY08M-XLC-CHG-NBR;
    if (SY08M010.SY08M-XLC-CD[SYWINDEX] == "05")
      converseLib.validationFailed(149); /* Cannot modify 05 life cycle*/
      set SY08M010.SY08M-XLC-CHG-NBR cursor, bold;
    end
    if (SY08M010.SY08M-XLC-CD[SYWINDEX] == " ") /* No entry on line*/
      converseLib.validationFailed(63); /* Enter existing occurrence*/
      set SY08M010.SY08M-XLC-CHG-NBR cursor, bold;
    else
      if (SY08M010.XLC-LIFE-CYC-CD == " "
       && SY08M010.SY-LIFE-CYC-EDT == 0)
        converseLib.validationFailed(61); /* Enter code or date to change*/
        set SY08M010.XLC-LIFE-CYC-CD cursor, bold;
        set SY08M010.SY-LIFE-CYC-EDT bold;
      end
    end
  else
    if (SY08M010.SY-LIFE-CYC-EDT == 0)
      converseLib.validationFailed(62); /* Enter code & date to add*/
      set SY08M010.SY-LIFE-CYC-EDT cursor, bold;
    end
    if (SY08M010.XLC-LIFE-CYC-CD == " ")
      converseLib.validationFailed(62); /* Enter code & date to add*/
      set SY08M010.XLC-LIFE-CYC-CD cursor, bold;
    end
  end

   /* If no errors, only allow change to 10 if color*/
   /* life cycle is 10 for footwear products.*/
  if (converseVar.validationMsgNum == 0 /* No errors*/
   && SY08M001.XGPCD == "02"            /* Footwear*/
   && SY08M010.XLC-LIFE-CYC-CD == "10") /* and activating*/
    if (SY2REC.XLCCD1 == "10"
     || SY2REC.XLCCD1 == "20"
     || SY1REC.XBCCD == "08") /* Cole Haan is ok*/
       /* Next Sentence*/
    else
      converseLib.validationFailed(123); /* Cannot activate until color*/
      set SY08M010.XLC-LIFE-CYC-CD cursor, bold;
    end
  end

end // end SY08S-VAL-XLC

// Validate Product Type
Function SY08S-VAL-XPR()

   /* Product type*/
  if (SY08M010.XPR-PROD-TYP-CD in XPRTBL.XPRCD)
    SY08M010.XPR-PROD-TYP-DESC = XPRTBL.XPRDESC[sysVar.arrayIndex];
    if (XPRTBL.XXXSTAT[sysVar.arrayIndex] != "A"
     && SY08M010.XPR-PROD-TYP-CD != VSYREG02.XPR-PROD-TYP-CD)
      converseLib.validationFailed(33); /* Status is inactive*/
      set SY08M010.XPR-PROD-TYP-CD cursor, bold;
    end
  else
    SY08M010.XPR-PROD-TYP-DESC = "INVALID";
    converseLib.validationFailed(3); /* Invalid code*/
    set SY08M010.XPR-PROD-TYP-CD cursor, bold;
  end

end // end SY08S-VAL-XPR

// VERIFY SEASON CODE
Function SY08S-VAL-XSE()

       /* ******************************************/
       /* *  VERIFY SEASON CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  SY08W01.SY08W-FND-YSN-FL = "N";
  SY08W01.SY08WSSN = " ";
  SY08W01.XSN-SESN-BDT = 0; /* Reset dates*/
  SY08W01.XSN-SESN-XDT = 0;

  if (SY08M001.SY2CLRID == "ALL"
   && SY08M010.XSE-SESN-CD == " "
   && SY08M010.XSN-SESN-YR-RNG == 0)
    return;
  end

  if (SY08M010.XSN-SESN-YR-RNG != 0)
  /*  */
  /* ------------- y2k out begin ------------------*/
  /*  */
  /* IF SY08M010.XSN-SESN-YR-RNG > 2010*/
  /*  */
  /* ------------- y2k out end --------------------*/
  /*  */
  /*  */
  /* ------------- y2k in  begin-------------------*/
  /* Season year range extended from 2010 to 2050*/
    if (SY08M010.XSN-SESN-YR-RNG > 2050
     /**/
     /* ------------- y2k in  end*/
     /* --------------------*/
     /**/
     || SY08M010.XSN-SESN-YR-RNG < 1970)
      converseLib.validationFailed(30); /* Invalid Date Entered*/
  /*  */
  /* ------------- y2k out begin ------------------*/
  /*  */
  /* MOVE "Season Year Must be Zero or Between 1970 and 2010" TO*/
  /* SY08M001.SYMSCMSG;*/
  /*  */
  /* ------------- y2k out end  -------------------*/
  /*  */
  /*  */
  /* ------------- y2k in  begin ------------------*/
  /*  */
      SY08M001.SYMSCMSG = "Season Year Must be Zero or Between 1970 and 2050";
  /*  */
  /* ------------- y2k in  end  -------------------*/
  /*  */
      set SY08M010.XSN-SESN-YR-RNG cursor, bold;
    end
  end

  if (SY08M010.XSE-SESN-CD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY08M010.XSE-SESN-CD cursor, bold;
    SY08M010.XSEDESC = "INVALID";
    return;
  end

  if (SY08M010.XSE-SESN-CD in XSETBL.XSECD)
    SY08M010.XSEDESC = XSETBL.XSEDESC[sysVar.arrayIndex];
    if (XSETBL.XXXSTAT[sysVar.arrayIndex] == "I")
      set SY08M010.XSE-SESN-CD cursor, bold;
      converseLib.validationFailed(33); /* status code is inactive*/
    end
  else
    set SY08M010.XSE-SESN-CD cursor, bold;
    SY08M010.XSEDESC = "INVALID ";
    converseLib.validationFailed(3); /* invalid code*/
    return;
  end

  if (XSETBL.XSESETYP[sysVar.arrayIndex] == " ") /* no year validation*/
    return;
  else
    SY08W01.SY08WSSN = XSETBL.XSESETYP[sysVar.arrayIndex];
  end

  SYWREC.SYWINDEX = 1;
  while (YSNTBL.XGPCD[SYWINDEX] != "99"
   && SY08W01.SY08W-FND-YSN-FL == "N")
    if (YSNTBL.XGPCD[SYWINDEX] == SY08M001.XGPCD
     && YSNTBL.XDR-PROD-REG-CD[SYWINDEX] == SY08M001.XDR-PROD-REG-CD
     && YSNTBL.XSECD[SYWINDEX] == SY08W01.SY08WSSN
     && YSNTBL.XSNYR[SYWINDEX] == SY08M010.XSN-SESN-YR-RNG
     && YSNTBL.XXXSTAT[SYWINDEX] == "A")
      SY08W01.SY08W-FND-YSN-FL = "Y";
      SY08W01.XSN-SESN-BDT = YSNTBL.XSN-SESN-BDT[SYWINDEX];
      SY08W01.XSN-SESN-XDT = YSNTBL.XSN-SESN-XDT[SYWINDEX];
    else
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
  end

end // end SY08S-VAL-XSE

// Validate Warehouse Code
Function SY08S-VAL-XWH()

   /* Warehouse code*/
  if (SY08M015.XWH-WHSE-CD[SYWINDEX] == "?") /* Display pop-up*/
    SY08W01.SY08W-POP-FL = "Y";
    XPXX001();
    XX0XW02.XX0XWHDR = "Warehouse Codes";
    while (XX0XW02.XX0XWEND == "N")
      SY08599(); /* Clone of XPXWH01 pop-up*/
    end
    if (XX0XW02.XX0XWERR == "N"
     && XX0XW02.XX0XWPIX > 0)
      SY08M015.XWH-WHSE-CD[SYWINDEX] = XWHTBL.XWHCD[XX0XWPIX];
    end
  end

  if (SY08M015.XWH-WHSE-CD[SYWINDEX] in XWHTBL.XWHCD)
    SY08M015.XWH-WHSE-ABRV[SYWINDEX] = XWHTBL.XWHABRV[sysVar.arrayIndex];
    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] != "A"
     && SY08M015.XWH-WHSE-CD[SYWINDEX]
     != VPRDRG02.XWH-WHSE-CD[SYWINDEX])
      converseLib.validationFailed(33); /* Status is inactive*/
      set SY08M015.XWH-WHSE-CD[SYWINDEX] cursor, bold;
    end
  else
    SY08M015.XWH-WHSE-ABRV[SYWINDEX] = "INVALID";
    converseLib.validationFailed(3); /* Invalid code*/
    set SY08M015.XWH-WHSE-CD[SYWINDEX] cursor, bold;
  end

end // end SY08S-VAL-XWH

// Reset Screen Attributes
Function SY08S01()

   /* Reset screen attributes to defined*/

  set SY08M001.XGPCD initialAttributes;
  set SY08M001.SY1STNBR initialAttributes;
  set SY08M001.SY2CLRID initialAttributes;
  set SY08M001.XDMCD initialAttributes;
  set SY08M001.XDR-PROD-REG-CD initialAttributes;
  set SY08M010.PG1FCTCD initialAttributes;
  set SY08M010.PG1SC4CD initialAttributes;
  set SY08M010.XSE-SESN-CD initialAttributes;
  set SY08M010.XSN-SESN-YR-RNG initialAttributes;
  set SY08M010.SY-PROP-OFFER-BDT initialAttributes;
  set SY08M010.SY-PROP-OFFER-XDT initialAttributes;
  set SY08M010.SY-FUTR-OFFER-BDT initialAttributes;
  set SY08M010.SY-FUTR-OFFER-XDT initialAttributes;
  set SY08M010.SY-FRST-DOM-SLS-MO initialAttributes;
  set SY08M010.SY-PROJ-DOM-CLS-MO initialAttributes;
  set SY08M010.PG-PLAN-FRST-PO-ID initialAttributes;
  set SY08M010.SY-ALW-NEW-ORD-FL initialAttributes;
  set SY08M010.OP-HMDL-HOT-FL initialAttributes;
  set SY08M010.SY08M-EMEA-PROMPT initialAttributes;
  set SY08M010.SY-SFTY-STKCLS-IND initialAttributes;
  set SY08M010.SY-RSTR-XSO-IND initialAttributes;
  set SY08M010.SY-BO-SW initialAttributes;
  set SY08M010.SY-BO-SW-EDT initialAttributes;
  set SY08M010.XPR-PROD-TYP-CD initialAttributes;
  set SY08M010.SY08M-XLC-CHG-NBR initialAttributes;
  set SY08M010.XLC-LIFE-CYC-CD initialAttributes;
  set SY08M010.SY-LIFE-CYC-EDT initialAttributes;
  set SY08M010.SY08M-XLC-DEL-FL initialAttributes;
  set SY08M015.XWH-WHSE-CD[1] initialAttributes;
  set SY08M015.XWH-WHSE-CD[2] initialAttributes;
  set SY08M015.XWH-WHSE-CD[3] initialAttributes;
  set SY08M015.XWH-WHSE-CD[4] initialAttributes;
  set SY08M015.XWH-WHSE-CD[5] initialAttributes;
  set SY08M015.XWH-WHSE-CD[6] initialAttributes;
  set SY08M001.CATOAP initialAttributes;
  set SY08M001.CAITEM initialAttributes;
  converseLib.validationFailed(0);
  SY08W01.SY08W-EZEMNO = 0;
  SY08M001.VAGen_EZEMSG = " ";
  SY08M001.SYMSCMSG = " ";

end // end SY08S01

// Check PF keys
Function SY08S02()

   /* Check PF key entered by user*/

  if (converseVar.eventKey is enter)
    if (SY08M001.CATOAP != " ")
      COMMAREA.CATOAP = SY08M001.CATOAP;
      COMMAREA.CAITEM = SY08M001.CAITEM;
      XSEXIT();
      set SY08M001.CATOAP cursor, bold;
      SY08M001.SYMSCMSG = COMMAREA.CAMSG;
      converseLib.validationFailed(1);
    end
    return;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY08M001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3)
    SY08W01.SY08W-END-CHG-FL = "Y";
    if (SY08W01.SY08W-CLR-SEL-FL == "N") /* Not using color sel*/
      COMMAREA.CATOAP = "SY0N";
      if (COMMAREA.CAFROMAP == "SY0V")
        COMMAREA.CATOAP = "SY0V";
      end
      if (COMMAREA.CAFROMAP == "SY0I")
        COMMAREA.CATOAP = "SY0I";
      end
      XSEXIT();
      SY08M001.SYMSCMSG = COMMAREA.CAMSG;
      converseLib.validationFailed(1);
    else
      set SY08M010 initial;
    end
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY08M001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (SY08W01.SY08W-SYREG-FL == "Y" /* If we have a record*/
     || (SY08W01.SY08WMOD == "A"      /* or adding new record*/
     && SY08M001.SYMPRONM != "SY08100"))
      return; /* then these are ok*/
    else
      converseLib.validationFailed(19); /* invalid pf key*/
      return;
    end
  end

  if (converseVar.eventKey is pf12)
    if (SY08W01.SY08WMOD == "I") /* inquiry cannot use*/
      converseLib.validationFailed(19); /* invalid pf key*/
    end
    return;
  end

  if (converseVar.eventKey is pf13)
    if (SY08W01.SY08WMOD == "I" /* inquiry cannot use*/
     || SY08M001.SY08M-PF13-TXT == " ")
      converseLib.validationFailed(19); /* invalid pf key*/
    end
    return;
  end

  if (converseVar.eventKey is pa2)
    return;
  end

  converseLib.validationFailed(19); /* invalid PF key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    SY08M001.SYMSCMSG = "WARNING - PA Key causes loss of Data";
  end

end // end SY08S02

// Set-up screen fields
Function SY08S03()

   /* set fields based on processing mode*/

  if (SY08W01.SY08WMOD == "A") /* inquiry only*/
    SY08M001.SY08MMOD = "Add/Change";
  else
    if (SY08W01.SY08WMOD == "C") /* inquiry only*/
      SY08M001.SY08MMOD = "Change";
    else
      SY08M001.SY08MMOD = "Inquiry";
    end
  end

  SY08M001.SY08M-PF13-TXT = " ";

   /* Now check if we have the region code*/

  if (SY08M001.XDR-PROD-REG-CD == " "
   && SY08W01.XDR-PROD-REG-CD != " ")
    SY08M001.XDR-PROD-REG-CD = SY08W01.XDR-PROD-REG-CD;
    SY08M001.XDR-PROD-REG-DESC = SY08W01.XDR-PROD-REG-DESC;
  end

end // end SY08S03

// Clear Screen (Not key)
Function SY08S04()

   /* Reset screen attributes to defined*/
   /* Then restore key data items*/

  SYWREC.SY1STNBR = SY08M001.SY1STNBR;
  SYWREC.SY2CLRID = SY08M001.SY2CLRID;
  SYWREC.XDMCD = SY08M001.XDMCD;
  set SY08M001 initial;
  set SY08M010 initial;
  set SY08M015 initial;
  SY08W01.SY08W-CURR-MAP = "SY08M010";
  SY08M001.SYMPRONM = "SY08100";
  SY08M001.SYMCURDT = SYWREC.SYWTODAY;
  SY08M001.SYMRVNBR = SY08W01.SY08WREV;
  SY08M001.XGPCD = SYWREC.XGPCD;
  SY08M001.XGPABRV = SYWREC.XGPABRV;
  SY08M001.SY1STNBR = SYWREC.SY1STNBR;
  SY08M001.SY2CLRID = SYWREC.SY2CLRID;
  SY08M001.XDMCD = SYWREC.XDMCD;
  SY08M001.XDR-PROD-REG-CD = SY08W01.XDR-PROD-REG-CD;
  SY08M001.XDR-PROD-REG-DESC = SY08W01.XDR-PROD-REG-DESC;
  SY08W01.SY08W-SYREG-FL = "N";
  SY08W01.SY08W-DSP-M001 = "Y";

end // end SY08S04

// Check PF keys
Function SY08S05()

   /* Check PF key entered by user*/

  if (converseVar.eventKey is enter)
    return;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY08M001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3)
    SY08W02.SY08W-END-SCREEN = "Y";
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY08M001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    return;
  end

  converseLib.validationFailed(19); /* invalid PF key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    SY08M001.SYMSCMSG = "WARNING - PA Key causes loss of Data";
  end

end // end SY08S05

// Check if PF13 is ok
Function SY08S13()

   /* Check if ok to use PF13 on this row.*/
   /* If row set-up = today, delete is ok.*/

  if (VSYREG02.ZZ-SDT == SYWREC.SYWTODAY)
    SY08M001.SY08M-PF13-TXT = "13=Delete";
  end

end // end SY08S13

// Update VSYREG01 Row
Function SY08S41()

   /* Update SYREG01 logic*/

  call "VSYREG02" ("U ", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(104); /* data modified*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 Problems*/
      TA1REC.TA1LOCAT[1] = "SY08S41";
      TA1REC.TA1TBLVU = "VSYREG02";
      TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
      SY08S99();
      converseLib.validationFailed(23); /* Style table error*/
    end
  end

end // end SY08S41

// Insert VSYREG01 Row
Function SY08S42()

   /* Insert SYREG01 logic*/

  call "VSYREG02" ("A ", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 Problems*/
    TA1REC.TA1LOCAT[1] = "SY08S42";
    TA1REC.TA1TBLVU = "VSYREG01";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
    SY08S99();
    converseLib.validationFailed(23); /* Table error*/
  end

end // end SY08S42

// color table audit processing
Function SY08S43()


   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* *  and performs the add call to db2 for the       **/
   /* *  style/color table.*/
   /* ****************************************************/

  SYAREC.XXXTBLNM = "VSYREG02";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY08   ";
    TA1REC.TA1LOCAT[1] = "SY0DS43  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VSYREG02 ";
    TA1REC.TA1MAP = "SY08M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = VSYREG02.XGP-GPC-CD;
  SYAREC.SY1STNBR = VSYREG02.SY-STY-NBR;
  SYAREC.SY2CLRID = VSYREG02.SY-COLR-CD-ID;
  SYAREC.XDMCD = VSYREG02.XDM-DIM-CD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  if (converseVar.eventKey is pf13) /* User Deleted*/
    SYAREC.SYAUDTYP = "D";
    SYAREC.SYABFR = VSYREG02.VSYREG02-GROUP;
    SYAREC.SYAFTLN = 0;
    SYAREC.SYAAFT = " ";
  else /* User adding or changing*/
    SYAREC.SYAAFT = VSYREG02.VSYREG02-GROUP;
    if (SY08W01.SY08W-SYREG-FL == "Y") /* Existing row*/
      SYAREC.SYAUDTYP = "C";
      SYAREC.SYABFR = SY08W01.VSYREG02-GROUP;
    else
      SYAREC.SYAUDTYP = "A";
      SYAREC.SYABFLN = 0;
      SYAREC.SYABFR = " ";
    end
  end

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S43  ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end SY08S43

// color table tag processing
Function SY08S44()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* ****************************************************/


  SY9REC.SY9TGTYP = "C";
  SY9REC.XGPCD = VSYREG02.XGP-GPC-CD;
  SY9REC.SY1STNBR = VSYREG02.SY-STY-NBR;
  SY9REC.SY2CLRID = VSYREG02.SY-COLR-CD-ID;
  SY9REC.XDMCD = VSYREG02.XDM-DIM-CD;

  SY9REC.ZZZSDT = SYWREC.ZZZSDT;
  SY9REC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY08   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY08S44  ";
      TA1REC.TA1LOCAT[3] = "IO0520   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY08M001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY08S44

// Update VSYREG01 Row
Function SY08S45()

   /* Delete SYREG01 logic*/

  call "VSYREG02" ("D ", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(104); /* data modified*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* DB2 Problems*/
      TA1REC.TA1LOCAT[1] = "SY08S45";
      TA1REC.TA1TBLVU = "VSYREG01";
      TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
      SY08S99();
      converseLib.validationFailed(23); /* Corp. table error*/
    else
      SY08630(); /* Delete Global data*/
    end
  end

end // end SY08S45

// Validate GPC and Set Mode
Function SY08S81()

   /* Validate GPC Code*/

  if (SY08M001.XGPCD == " "
   && SY08M001.SY1STNBR == " ")
    set SY08M001.XGPCD cursor;
    return;
  end

  if (SY08M001.XGPCD in XGPTBL.XGPCD)
    SY08M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY08M001.XGPCD cursor, bold;
    return;
  end

   /* now set processing mode based on commarea flags and*/
   /* gpc being used.*/

  if (COMMAREA.CAADDFL != "Y" /* not add mode*/
   && COMMAREA.CACHGFL != "Y") /* or change mode*/
    SY08W01.SY08W-SCRTY-FL = "I"; /* so set inquiry*/
  else
    if (SY08M001.XGPCD == "03") /* apparel gpc*/
      if (COMMAREA.CAALVL[3] == "Y") /* can change apparel*/
        SY08W01.SY08W-SCRTY-FL = "A"; /* can add/change*/
      else
        if (COMMAREA.CACLVL[3] == "Y") /* can only change*/
          SY08W01.SY08W-SCRTY-FL = "C"; /* so change ok*/
        else
          SY08W01.SY08W-SCRTY-FL = "I"; /* cannot modify apparel*/
        end
      end
    else
      if (SY08M001.XGPCD == "02") /* footwear gpc*/
        if (COMMAREA.CAALVL[2] == "Y") /* can change footwear*/
          SY08W01.SY08W-SCRTY-FL = "A"; /* so add/change ok*/
        else
          if (COMMAREA.CACLVL[2] == "Y")
            SY08W01.SY08W-SCRTY-FL = "C"; /* so change ok*/
          else
            SY08W01.SY08W-SCRTY-FL = "I"; /* cannot modify footwear*/
          end
        end
      else
        SY08W01.SY08W-SCRTY-FL = "A"; /* can add/change*/
      end
    end
  end

  if (COMMAREA.CAFROMAP == "SY0I") /* Inquiry sub-menu*/
    SY08W01.SY08W-SCRTY-FL = "I"; /* so set inquiry*/
  end

  SY08W01.SY08WMOD = SY08W01.SY08W-SCRTY-FL;

end // end SY08S81

// Validate XDR region
Function SY08S82()

   /* Validate XDR Prod Region code*/

  if (SY08M001.XDR-PROD-REG-CD == "?") /* We want pop-up*/
    SY08W01.SY08W-CURR-MAP = "XP0HM001";
    SY08W01.SY08W-POP-FL = "Y";
    XP0HW01.XP0HW-ONLY-SYREG-FL = "N";
    XP0HW01.XP0HW-AUTO-SEL-FL = "N";
    XP0HW01.XGPCD = SY08M001.XGPCD;
    XP0HW01.SY1STNBR = SY08M001.SY1STNBR;
    if (SY08M001.SY2CLRID != "ALL")
      XP0HW01.SY2CLRID = SY08M001.SY2CLRID;
    else
      XP0HW01.SY2CLRID = " ";
    end
    XP0HW01.XDMCD = SY08M001.XDMCD;
    XP0H001(); /* so do it*/
    if (XP0HW02.XP0HWERR == "Y") /* we have an error*/
      if (XP0HW02.XP0HWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (XP0HW02.XP0HWENR == 1) /* No rows found*/
        converseLib.validationFailed(50);
      end
      if (XP0HW02.XP0HWENR == 2) /* Corp. Table Error*/
        converseLib.validationFailed(23);
      end
      return;
    else
      if (XP0HW02.XP0HWPIX != 0) /* and user selected*/
        SY08M001.XDR-PROD-REG-CD = XP0HW01.XDR-PROD-REG-CD[XP0HWPIX];
        /* Now check for multiple selection*/
        XP0HWPIX = XP0HWPIX + 1;
        while (XP0HW01.XDR-PROD-REG-CD[XP0HWPIX] != "99"
         && XP0HWPIX <= 25)
          if (XP0HW01.XP0HWSEL[XP0HWPIX] == "S")
            SY08M001.SYMSCMSG = "   Multiple Selections Not Valid - First Selection Taken";
          end
          XP0HWPIX = XP0HWPIX + 1;
        end
      else
        converseLib.validationFailed(59); /* No data selected*/
        return;
      end
    end
  end

  SY08M001.XDR-PROD-REG-DESC = " ";
  if (SY08M001.XDR-PROD-REG-CD == " ")
    SY08M001.XDR-PROD-REG-CD = SYWREC.XDR-PROD-REG-CD[1];
  end

  if (SY08M001.XDR-PROD-REG-CD in XDRTBL.XDR-PROD-REG-CD)
    SY08M001.XDR-PROD-REG-DESC = XDRTBL.XDR-PROD-REG-DESC[sysVar.arrayIndex];
    SY08W01.XDR-PROD-REG-DESC = XDRTBL.XDR-PROD-REG-DESC[sysVar.arrayIndex];
    SY08W01.XDR-PROD-REG-CD = SY08M001.XDR-PROD-REG-CD;
    if (SY08M001.XDR-PROD-REG-CD in SYRGTBL.XDR-PROD-REG-CD)
      SY08W01.REG-ID = SYRGTBL.REG-ID[sysVar.arrayIndex];
    else
      converseLib.validationFailed(23); /* Corp table error*/
      set SY08M001.XDR-PROD-REG-CD cursor, bold;
      return;
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY08M001.XDR-PROD-REG-CD cursor, bold;
    SY08M001.XDR-PROD-REG-DESC = "Invalid";
    return;
  end

   /* Now examine the regions in SYWREC. If the region the user*/
   /* has selected is not there, switch to inquiry only.*/

  if (SY08M001.XDR-PROD-REG-CD in SYWREC.XDR-PROD-REG-CD)
    /* User has access to this region*/
    SYWREC.SYWREGX = sysVar.arrayIndex; /* Save Index*/
  else
    SY08W01.SY08WMOD = "I"; /* can only inquire*/
  end

end // end SY08S82

// Validate/Retrieve Style Data
Function SY08S83()

  SY1REC.XGPCD = SY08M001.XGPCD;
  SY1REC.SY1STNBR = SY08M001.SY1STNBR;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY08M001.SY1STYNM = SY1REC.SY1STYNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* style not found*/
      converseLib.validationFailed(5); /* style does not exist*/
      set SY08M001.SY1STNBR cursor, bold;
    else /* we have DB2 problems*/
      TA1REC.TA1LOCAT[1] = "SY08S82";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1TBLKE = SY1REC.SY1KEY;
      SY08S99();
      converseLib.validationFailed(20); /* style table error*/
    end
  end

end // end SY08S83

// Validate Dimension Code
Function SY08S84()

   /* Validate Color/Dimension*/

  if (SY08M001.SY2CLRID == "ALL" /* we want all colors*/
   && SY08W01.SY08WMOD != "I")   /* and not inquiry mode*/
    SY08M001.SY2CLRDS = "*** All Colors ***";
    SY08M001.XDMCD = " ";
    SY08M001.XDMDESC = " ";
    return;
  end

  XP0GW01.XP0GW-SEL-COLR-CD = SY08M001.SY2CLRID;
  if (XP0GW01.XP0GW-SEL-COLR-CD1 == "?" /* We want pop-up*/
   || XP0GW01.XP0GW-SEL-COLR-CD2 == "?" 
   || XP0GW01.XP0GW-SEL-COLR-CD3 == "?")
    SY08W01.SY08W-POP-FL = "Y";
    SY08W01.SY08W-CURR-MAP = "XP0GM001";
    XP0GW01.XGPCD = SY08M001.XGPCD;
    XP0GW01.SY1STNBR = SY08M001.SY1STNBR;
    XP0G001(); /* so do it*/
    if (XP0GW02.XP0GWERR == "Y") /* we have an error*/
      if (XP0GW02.XP0GWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (XP0GW02.XP0GWENR == 1) /* No colors found*/
        converseLib.validationFailed(7);
      end
      if (XP0GW02.XP0GWENR == 2) /* DB2 Error*/
        converseLib.validationFailed(21);
      end
      return;
    else
      if (XP0GW02.XP0GWPIX != 0) /* and user selected*/
        SY08M001.SY2CLRID = XP0GW01.SY2CLRID[XP0GWPIX];
        SY08M001.XDMCD = XP0GW01.XDMCD[XP0GWPIX];
      else
        converseLib.validationFailed(59); /* No colors selected*/
        return;
      end
    end
  end

  if (SY08M001.XDMCD == " ")
    SY08M001.XDMCD = "00";
  end

  if (SY08M001.XDMCD in XDMTBL.XDMCD)
    SY08M001.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY08M001.XDMCD cursor, bold;
    return;
  end

  SY2REC.XGPCD = SY08M001.XGPCD;
  SY2REC.SY1STNBR = SY08M001.SY1STNBR;
  SY2REC.SY2CLRID = SY08M001.SY2CLRID;
  SY2REC.XDMCD = SY08M001.XDMCD;
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY08M001.SY2CLRDS = SY2REC.SY2CLRDS;
    SY08S-CHECK-EQUIP(); /* Check if equipment product*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* color not found*/
      converseLib.validationFailed(7); /* color does not exist*/
      set SY08M001.SY2CLRID cursor, bold;
      set SY08M001.XDMCD bold;
    else /* we have DB2 problems*/
      TA1REC.TA1LOCAT[1] = "SY08S83";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      SY08S99();
      converseLib.validationFailed(21); /* color table error*/
    end
  end

end // end SY08S84

// Validate SYREG regional Row
Function SY08S85()

   /* Validate SYREG Regional row*/


  call "VSYREG02" ("S ", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY08600(); /* Get GP Region Data*/
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[1] = "SY08S85";
      TA1REC.TA1TBLVU = "VSYREG02";
      TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
      SY08S99();
      converseLib.validationFailed(23); /* table error*/
    end
  end

end // end SY08S85

// Validate Dimension Code
Function SY08S86()

   /* Validate Forecaster/Scheduler Codes*/

  call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[1] = "SY08S86";
    TA1REC.TA1TBLVU = "VSUSER01";
    TA1REC.TA1TBLKE = PG1REC.PG1KEY;
    SY08S99();
    converseLib.validationFailed(23); /* corp. table error*/
  end

end // end SY08S86

// DB2 Abend Routine
Function SY08S99()

   /* This routine will call TA0020*/

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "SY08";
  TA1REC.TA1MAP = "SY08M001";
  move SQLCA to ERRSQLCA withV60Compat;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};

end // end SY08S99

//*** RECORD=SY08W01 ****
// *
// *  Working Storage Record for SY08
// *
// ***********************
Record SY08W01 type basicRecord
  3 SY08WEOA SY08WEOA ; 
  3 SY08WMOD SY08WMOD ; 
  3 SY08W-SCRTY-FL SY08W-SCRTY-FL ; 
  3 SY08W-CLR-SEL-FL SY08W-CLR-SEL-FL ; 
  3 SY08WREV SY08WREV ; 
  3 SY08WUPD SY08WUPD ; 
  3 SY08WSW1 SY08WSW1 ; 
  3 SY08W-CURR-MAP SY08W-CURR-MAP ; 
  3 SY08W-DSP-M001 SY08W-DSP-M001 ; 
  3 SY08W-EZEMNO SY08W-EZEMNO ; 
  3 SY08W-POP-FL SY08W-POP-FL ; 
  3 SY08W-SYREG-FL SY08W-SYREG-FL ; 
  3 SY08W-END-CHG-FL SY08W-END-CHG-FL ; 
  3 SY08W-UPD-SY1-FL SY08W-UPD-SY1-FL ; 
  3 SY08W-SY2-XDR SY08W-SY2-XDR ; 
  3 SY08W-SY2-XLC SY08W-SY2-XLC ; 
  3 SY08W-SY2-XLC-EDT SY08W-SY2-XLC-EDT ; 
  3 SY08W-CHANGED-FLAG SY08W-CHANGED-FLAG ; 
  3 SY08W-MSG SY08W-MSG ; 
    4 SY08W-MSG1 SY08W-MSG1 ; 
      5 SY08W-MSG-TXT1 SY08W-MSG-TXT1 ; 
      5 SY08W-MSG-CNT1 SY08W-MSG-CNT1 ; 
    4 * char(2) ; 
    4 SY08W-MSG2 SY08W-MSG2 ; 
      5 SY08W-MSG-TXT2 SY08W-MSG-TXT2 ; 
      5 SY08W-MSG-CNT2 SY08W-MSG-CNT2 ; 
  3 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
  3 XDR-PROD-REG-DESC XDR-PROD-REG-DESC ; 
  3 REG-ID REG-ID ; 
  3 SY-PROP-OFFER-BDT SY-PROP-OFFER-BDT ; 
  3 SY-PROP-OFFER-XDT SY-PROP-OFFER-XDT ; 
  3 SY-FUTR-OFFER-BDT SY-FUTR-OFFER-BDT ; 
  3 SY-FUTR-OFFER-XDT SY-FUTR-OFFER-XDT ; 
  3 SY-FRST-DOM-SLS-MO SY-FRST-DOM-SLS-MO ; 
  3 SY-PROJ-DOM-CLS-MO SY-PROJ-DOM-CLS-MO ; 
  3 PG-PLAN-FRST-PO-ID PG-PLAN-FRST-PO-ID ; 
  3 SY-LIFE-CYC-EDT SY-LIFE-CYC-EDT [4] ; 
  3 SY-BO-SW-EDT SY-BO-SW-EDT ; 
  3 SY08W-NEW-XLC-EDT SY08W-NEW-XLC-EDT ; 
  3 SY08W-WRK-XLC-CD SY08W-WRK-XLC-CD ; 
  3 SY08W-WORK-DATE SY08W-WORK-DATE ; 
    4 SY08W-WDATE-CENT SY08W-WDATE-CENT ; 
    4 SY08W-WDATE-YMD SY08W-WDATE-YMD ; 
      5 SY08W-WDATE-YEAR SY08W-WDATE-YEAR ; 
      5 SY08W-WDATE-MONTH SY08W-WDATE-MONTH ; 
      5 SY08W-WDATE-DAY SY08W-WDATE-DAY ; 
  3 SY08W-DISP-DATE SY08W-DISP-DATE ; 
    4 SY08W-DDATE-MDY SY08W-DDATE-MDY ; 
      5 SY08W-DDATE-MONTH SY08W-DDATE-MONTH ; 
      5 SY08W-DDATE-DAY SY08W-DDATE-DAY ; 
      5 SY08W-DDATE-YEAR SY08W-DDATE-YEAR ; 
  3 SY08W-MDATE-CCYYMM SY08W-MDATE-CCYYMM ; 
    4 SY08W-MDATE-CENT SY08W-MDATE-CENT ; 
    4 SY08W-MDATE-YYMM SY08W-MDATE-YYMM ; 
      5 SY08W-MDATE-YEAR SY08W-MDATE-YEAR ; 
      5 SY08W-MDATE-MONTH SY08W-MDATE-MONTH ; 
  3 SY08WSSN SY08WSSN ; 
  3 SY08W-FND-YSN-FL SY08W-FND-YSN-FL ; 
  3 XSN-SESN-BDT XSN-SESN-BDT ; 
  3 XSN-SESN-XDT XSN-SESN-XDT ; 
  3 SY2NOFXD SY2NOFXD ; 
  3 SY08W-NIL-XDR SY08W-NIL-XDR ; 
  3 SY08W-NIL-XSE SY08W-NIL-XSE ; 
  3 VSYREG02-GROUP VSYREG02-GROUP ; 
  3 VPRDRG02-GROUP VPRDRG02-GROUP ; 
  3 SY2DATA SY2DATA ; 
  3 SY1DATA SY1DATA ; 
end // end SY08W01

//*** RECORD=SY08W02 ****
// *
// *  Working Storage Record for SY08
// *
// *     This record is used to hold the color/region
// *     information to perform color select functions.
// *
// ***********************
Record SY08W02 type basicRecord
  5 SY08W-CLR-REG-ARRAY SY08W-CLR-REG-ARRAY ; 
    10 SY08W-END-SCREEN SY08W-END-SCREEN ; 
    10 SY08W-NBR-ENTRIES SY08W-NBR-ENTRIES ; 
    10 SY08W-CURR-POS SY08W-CURR-POS ; 
    10 SY08W-CLR-ENTRY SY08W-CLR-ENTRY [200] ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 SY2CLRAB SY2CLRAB ; 
      15 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
      15 SY08W-CANCEL-FL SY08W-CANCEL-FL ; 
      15 SY08W-XDR01-XLC-H SY08W-XDR01-XLC-H ; 
      15 SY08W-XDR01-XLC SY08W-XDR01-XLC ; 
        20 SY08W-XDR01-SEL SY08W-XDR01-SEL ; 
        20 * char(1) ; 
      15 SY08W-XDR02-XLC-H SY08W-XDR02-XLC-H ; 
      15 SY08W-XDR02-XLC SY08W-XDR02-XLC ; 
        20 SY08W-XDR02-SEL SY08W-XDR02-SEL ; 
        20 * char(1) ; 
      15 SY08W-XDR03-XLC-H SY08W-XDR03-XLC-H ; 
      15 SY08W-XDR03-XLC SY08W-XDR03-XLC ; 
        20 SY08W-XDR03-SEL SY08W-XDR03-SEL ; 
        20 * char(1) ; 
      15 SY08W-XDR04-XLC-H SY08W-XDR04-XLC-H ; 
      15 SY08W-XDR04-XLC SY08W-XDR04-XLC ; 
        20 SY08W-XDR04-SEL SY08W-XDR04-SEL ; 
        20 * char(1) ; 
      15 SY08W-XDR05-XLC-H SY08W-XDR05-XLC-H ; 
      15 SY08W-XDR05-XLC SY08W-XDR05-XLC ; 
        20 SY08W-XDR05-SEL SY08W-XDR05-SEL ; 
        20 * char(1) ; 
      15 SY08W-XDR06-XLC-H SY08W-XDR06-XLC-H ; 
      15 SY08W-XDR06-XLC SY08W-XDR06-XLC ; 
        20 SY08W-XDR06-SEL SY08W-XDR06-SEL ; 
        20 * char(1) ; 
end // end SY08W02

//*** RECORD=SY08W03 ****
// *******************  SY08W03  ******************************
// 
// THIS IS AN EXACT COPY OF THE VSYREG01 RECORD. IT MUST BE
// KEPT IN SYNC WITH THE DATA BASE. DO NOT ADD ANY FIELDS TO
// THIS TABLE THAT ARE NOT ADDED TO THE DPROD.VSYREG01 TABLE!
// 
// MAINTENANCE LOG:
// 
// DATE     INIT       COMMENTS
// -------- ------     -------------------------------------
// 08-10-94 MHALST     created csp record
// ************************************************************
// ***********************
Record SY08W03 type basicRecord
  5 VSYREG02-GROUP VSYREG02-GROUP ; 
    10 VSYREG02-KEY VSYREG02-KEY ; 
      15 XGP-GPC-CD XGP-GPC-CD ; 
      15 SY-STY-NBR SY-STY-NBR ; 
      15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
      15 XDM-DIM-CD XDM-DIM-CD ; 
      15 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
    10 PG-SCHED-SPCLT-CD PG-SCHED-SPCLT-CD ; 
    10 PG-FCST-CD PG-FCST-CD ; 
    10 XSE-SESN-CD XSE-SESN-CD ; 
    10 XSN-SESN-YR-RNG XSN-SESN-YR-RNG ; 
    10 SY-PROP-OFFER-BDT SY-PROP-OFFER-BDT ; 
    10 SY-PROP-OFFER-XDT SY-PROP-OFFER-XDT ; 
    10 SY-FUTR-OFFER-BDT SY-FUTR-OFFER-BDT ; 
    10 SY-FUTR-OFFER-XDT SY-FUTR-OFFER-XDT ; 
    10 XLC-LIFE-CYC-CD XLC-LIFE-CYC-CD [4] ; 
    10 SY-LIFE-CYC-EDT SY-LIFE-CYC-EDT [4] ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    10 XPR-PROD-TYP-CD XPR-PROD-TYP-CD ; 
    10 SY-FRST-DOM-SLS-MO SY-FRST-DOM-SLS-MO ; 
    10 SY-PROJ-DOM-CLS-MO SY-PROJ-DOM-CLS-MO ; 
    10 OP-HMDL-HOT-FL OP-HMDL-HOT-FL ; 
    10 SY-ALW-NEW-ORD-FL SY-ALW-NEW-ORD-FL ; 
    10 SY-SFTY-STKCLS-IND SY-SFTY-STKCLS-IND ; 
end // end SY08W03

//*** RECORD=SY08W04 ****
// *******************  SY08W03  ******************************
// 
// WORK ARRAY TO HOLD ALL THE REGIONAL RECORDS FOR THE PRODUCT
// 
// ************************************************************
// ***********************
Record SY08W04 type basicRecord
  5 SY08W04-ROW-CNT SY08W04-ROW-CNT ; 
  5 SY08W04-IDX SY08W04-IDX ; 
  5 VSYREG02-GROUP VSYREG02-GROUP [10] ; 
    10 VSYREG02-KEY VSYREG02-KEY ; 
      15 XGP-GPC-CD XGP-GPC-CD ; 
      15 SY-STY-NBR SY-STY-NBR ; 
      15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
      15 XDM-DIM-CD XDM-DIM-CD ; 
      15 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
    10 PG-SCHED-SPCLT-CD PG-SCHED-SPCLT-CD ; 
    10 PG-FCST-CD PG-FCST-CD ; 
    10 XSE-SESN-CD XSE-SESN-CD ; 
    10 XSN-SESN-YR-RNG XSN-SESN-YR-RNG ; 
    10 SY-PROP-OFFER-BDT SY-PROP-OFFER-BDT ; 
    10 SY-PROP-OFFER-XDT SY-PROP-OFFER-XDT ; 
    10 SY-FUTR-OFFER-BDT SY-FUTR-OFFER-BDT ; 
    10 SY-FUTR-OFFER-XDT SY-FUTR-OFFER-XDT ; 
    10 XLCCD1 XLCCD1 ; 
    10 XLCCD2 XLCCD2 ; 
    10 XLCCD3 XLCCD3 ; 
    10 XLCCD4 XLCCD4 ; 
    10 SY2CEDT1 SY2CEDT1 ; 
    10 SY2CEDT2 SY2CEDT2 ; 
    10 SY2CEDT3 SY2CEDT3 ; 
    10 SY2CEDT4 SY2CEDT4 ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    10 XPR-PROD-TYP-CD XPR-PROD-TYP-CD ; 
    10 SY-FRST-DOM-SLS-MO SY-FRST-DOM-SLS-MO ; 
    10 SY-PROJ-DOM-CLS-MO SY-PROJ-DOM-CLS-MO ; 
    10 OP-HMDL-HOT-FL OP-HMDL-HOT-FL ; 
    10 SY-ALW-NEW-ORD-FL SY-ALW-NEW-ORD-FL ; 
    10 SY-SFTY-STKCLS-IND SY-SFTY-STKCLS-IND ; 
end // end SY08W04

//*** RECORD=VPRDRG02 ****
// *******************  STYLE  TABLE  *************************
// 
// DB2 TABLE:           DPROD.VPRDRG02
// 
// COPYLIB MEMBER:      DPRDRG02
// IO MODULE:           VPRDRG02
// 
// KEY TO DB2 TABLE:    SY-PROD-ID
//                      REG-ID
// 
// DATE CREATED:        MAR 25, 1995
// 
// MAINTENANCE LOG:
// 
// DATE     INIT       COMMENTS
// -------- ------     -------------------------------------
// 03-25-96 MHALST     created csp record
// ************************************************************
// ************************
Record VPRDRG02 type basicRecord
  5 VPRDRG02-GROUP VPRDRG02-GROUP ; 
    10 VPRDRG02-KEY VPRDRG02-KEY ; 
      15 SY-PROD-ID SY-PROD-ID ; 
      15 REG-ID REG-ID ; 
    10 SY-CURR-SESN-NBR SY-CURR-SESN-NBR ; 
    10 SY-ALW-NEW-ORD-FL SY-ALW-NEW-ORD-FL ; 
    10 OP-HMDL-HOT-FL OP-HMDL-HOT-FL ; 
    10 SY-RSTR-XSO-IND SY-RSTR-XSO-IND ; 
    10 SY-FRST-SLS-MO SY-FRST-SLS-MO ; 
    10 SY-PROJ-CLS-MO-DT SY-PROJ-CLS-MO-DT ; 
    10 SY-BO-SW SY-BO-SW ; 
    10 SY-BO-SW-EDT SY-BO-SW-EDT ; 
    10 SY-SFTY-STKCLS-IND SY-SFTY-STKCLS-IND ; 
    10 SY-MKT-CAOV-FL SY-MKT-CAOV-FL ; 
    10 XWH-WHSE-CD XWH-WHSE-CD [6] ; 
    10 PG-SCHED-SPCLT-CD PG-SCHED-SPCLT-CD ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
    10 PG-PLAN-FRST-PO-ID PG-PLAN-FRST-PO-ID ; 
end // end VPRDRG02

// PG_PLAN_FRST_PO_ID
DataItem PG-PLAN-FRST-PO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Color is canceled(Y/N)
DataItem SY08W-CANCEL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Has any row changed (Y/N)
DataItem SY08W-CHANGED-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color/Region Entries
DataItem SY08W-CLR-ENTRY char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color/Region Selection Table
DataItem SY08W-CLR-REG-ARRAY char(9007)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// In Color Sel Mode (Y/N)
DataItem SY08W-CLR-SEL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current map in Floating Area
DataItem SY08W-CURR-MAP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current row on top of screen
DataItem SY08W-CURR-POS num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-DDATE-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Month/Day/Year
DataItem SY08W-DDATE-MDY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-DDATE-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-DDATE-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Date work area
DataItem SY08W-DISP-DATE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Redisplay map M001 (Y/N)
DataItem SY08W-DSP-M001 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// User done with changes (Y/N)
DataItem SY08W-END-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End screen converse(Y/N)
DataItem SY08W-END-SCREEN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold area for EZEMNO
DataItem SY08W-EZEMNO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Found row in YSNTBL(Y/N)
DataItem SY08W-FND-YSN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Date work area
DataItem SY08W-MDATE-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Century
DataItem SY08W-MDATE-CENT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-MDATE-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-MDATE-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-MDATE-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Colors changed message
DataItem SY08W-MSG char(62)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colors selected message count
DataItem SY08W-MSG-CNT1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Colors changed message count
DataItem SY08W-MSG-CNT2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Colors selected message text
DataItem SY08W-MSG-TXT1 char(27)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colors changed message text
DataItem SY08W-MSG-TXT2 char(27)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colors changed message
DataItem SY08W-MSG1 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colors changed message
DataItem SY08W-MSG2 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of entries in table
DataItem SY08W-NBR-ENTRIES num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-NEW-XLC-EDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XDR code used for NIL look-up
DataItem SY08W-NIL-XDR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSE code used for NIL look-up
DataItem SY08W-NIL-XSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Did we display pop-up (Y/N)
DataItem SY08W-POP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Security Mode (A/C/I)
DataItem SY08W-SCRTY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold XDR from scan of SY2REC
DataItem SY08W-SY2-XDR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold XLC for scan of SYREG
DataItem SY08W-SY2-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold XLC date for scan of SYRE
DataItem SY08W-SY2-XLC-EDT int {
  sign = none
}
end

// Found SYREG Row (Y/N)
DataItem SY08W-SYREG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update VSTYLE01 row (Y/N)
DataItem SY08W-UPD-SY1-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Century
DataItem SY08W-WDATE-CENT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-WDATE-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-WDATE-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-WDATE-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Year/Month/Day
DataItem SY08W-WDATE-YMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Date work area
DataItem SY08W-WORK-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY08W-WRK-XLC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this region
DataItem SY08W-XDR01-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current regional xlc
DataItem SY08W-XDR01-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold Current regional xlc
DataItem SY08W-XDR01-XLC-H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this region
DataItem SY08W-XDR02-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current regional xlc
DataItem SY08W-XDR02-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold Current regional xlc
DataItem SY08W-XDR02-XLC-H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this region
DataItem SY08W-XDR03-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current regional xlc
DataItem SY08W-XDR03-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold Current regional xlc
DataItem SY08W-XDR03-XLC-H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this region
DataItem SY08W-XDR04-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current regional xlc
DataItem SY08W-XDR04-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold Current regional xlc
DataItem SY08W-XDR04-XLC-H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this region
DataItem SY08W-XDR05-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current regional xlc
DataItem SY08W-XDR05-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold Current regional xlc
DataItem SY08W-XDR05-XLC-H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this region
DataItem SY08W-XDR06-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current regional xlc
DataItem SY08W-XDR06-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold Current regional xlc
DataItem SY08W-XDR06-XLC-H char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row index
DataItem SY08W04-IDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of rows in table
DataItem SY08W04-ROW-CNT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of Application Y/N
DataItem SY08WEOA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Processing mode (C/I)
DataItem SY08WMOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Program Revision Number
DataItem SY08WREV char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Season Code
DataItem SY08WSSN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Switch field
DataItem SY08WSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Updated flag (Y/N)
DataItem SY08WUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data group item entire row
DataItem VPRDRG02-GROUP char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key into Table
DataItem VPRDRG02-KEY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

