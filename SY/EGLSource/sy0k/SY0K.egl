package sy0k;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY0K ****
// this application performs the price and price history
// inquiry function for the product system. the general flow
// of processes is as follows:
//   sy0k010(execute)  - general initialization
//   sy0k020(converse) - display initial input screen
//   sy0k030(execute)  - obtain table data
//   sy0k040(converse) - display table data
//   sy0k050(execute)  - obtain price history data
//   sy0k060(execute)  - perform initail map moves
//   sy0k070(converse) - display price history data
// ************************************************************
// maintenance:
//  Rev.
//  Nbr.  Who    When     Why
//  ----- ------ -------- -------------------------------------
//   00   jbrady 07-02-86 created application
//   01   mbuhit 09-20-88 add 'nomaps' to calls
//        VCowan 04-17-89 added XSSEGTR logic
//   --   jwood  04-17-89 added noncsp logic
//        MHALST 11-13-89 DB2 Changes
//        MHALST 11-16-90 tighten checking of color/dim.
//                        add some warning msgs.
//        MHALST 02-11-91 DB2 Changes
//        MHALST 08-05-93 'Turn on' futures
//        MHALST 03-03-94 Add country/currency
//  SY222 MHALST 10-14-94 Add price type 62 which is really
//                        cost + 11%. Get cost, do calc, and
//                        display the results as a 'price'.
//        NGANGO 11-19-97 Y2K MODIFICATIONS .
//                 Regenerated to pickup XX0XS01 changes.
//        MHALST 12-04-97 Correct currency edit
//        JNARAS 02-17-99 Removed  the $ symbol from the map
//                        SY0JM001 in the 1st quality pricing
//                        and the second quality pricing amt.
//                        fields.
// ************************************************************
// io modules used        table view name
// ---------------        ---------------
//      io0120            dprod.vstyle01
//      io0130            dprod.vcolor01
//      io0380            dprod.vprice01
//      io0370            dprod.vprich01
//      io0360            dprod.vdcost01
// ************************************************************
// *********************
Program SY0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  SY0KW01 SY0KW01; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY5REC SY5REC; // record
  SY6REC SY6REC; // record
  SY7REC SY7REC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VZFC0001 VZFC0001; // record
  WSY1550 WSY1550; // record
  XP0GW01 XP0GW01; // record
  XP0GW02 XP0GW02; // record
  XX0XW02 XX0XW02; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYRGTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XPYTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XQATBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use SY0KM.SY0KM001,  // forms
      SY0KM.SY0KM002, 
      SY0KM.XP0GM001, 
      SY0KM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0K010: SY0K010();
     /* ****************************************************/
     /* *  this starts the flow stage of process sy0k010  **/
     /* ****************************************************/


    goto SY0K020;


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k010    **/
     /* ****************************************************/
    SY0K020: SY0K020();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0k020  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0K020;
    else
      if (converseVar.eventKey is enter)
        goto SY0K030;
      else
        goto SY0K010;
      end
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k020    **/
     /* ****************************************************/
    SY0K030: SY0K030();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0k030  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0K020;
    else
      goto SY0K040;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k030    **/
     /* ****************************************************/
    SY0K040: SY0K040();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0k040  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0K040;
    end


    if (SY0KW01.SY0KWSW2 == "CHANGED")
      goto SY0K030;
    end


    if (converseVar.eventKey is enter)
      if (SY0KM001.SY0KM-DH-FG1 == "Y"
       || SY0KM001.SY0KM-DH-FG2 == "Y")
        goto SY0K050;
      else
        goto SY0K040;
      end
    else
      goto SY0K010;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k040    **/
     /* ****************************************************/
    SY0K050: SY0K050();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0k050  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0K040;
    else
      SY0KWCT2 = 1;
      goto SY0K060;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k050    **/
     /* ****************************************************/
    SY0K060: SY0K060();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0k060  **/
     /* ****************************************************/


    goto SY0K070;


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k060    **/
     /* ****************************************************/
    SY0K070: SY0K070();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0k070  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0K070;
    end


    if (converseVar.eventKey is enter)
      goto SY0K040;
    else
      if (converseVar.eventKey is pf7)
        if (SY0KWCT1 <= 11)
          converseLib.validationFailed(69); /* cannot scroll back*/
          goto SY0K070;
        else
          if (SY0KWCT2 <= 11)
            converseLib.validationFailed(69); /* cannot scroll back*/
            goto SY0K070;
          else
            if (SY0KWCT1 <= 22)
              SY0KWCT2 = 1;
              goto SY0K060;
            else
              SY0KWCT2 = 12;
              goto SY0K060;
            end
          end
        end
      else
        if (converseVar.eventKey is pf8)
          if (SY0KWCT1 <= 11)
            converseLib.validationFailed(70); /* cannot scroll forward*/
            goto SY0K070;
          else
            if (SY0KWCT1 <= 22)
              if (SY0KWCT2 >= 12)
                converseLib.validationFailed(70); /* cannot scroll forward*/
                goto SY0K070;
              else
                SY0KWCT2 = 12;
                goto SY0K060;
              end
            else
              if (SY0KWCT2 >= 23)
                converseLib.validationFailed(70); /* cannot scroll forward*/
                goto SY0K070;
              else
                if (SY0KWCT2 <= 11)
                  SY0KWCT2 = 12;
                  goto SY0K060;
                else
                  SY0KWCT2 = 23;
                end
              end
            end
          end
        else
          if (converseVar.eventKey is pf3)
            goto SY0K040;
          else
            goto SY0K010;
          end
        end
      end
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0k070    **/
     /* ****************************************************/
  end // end main
end // end SY0K

// general initialization
Function SY0K010()


   /* ********************************************************/
   /* *  processing in this option includes:                **/
   /* *    1) test security clearance for the application   **/
   /* *    2) initialize fields                             **/
   /* *    3) set up the map screen                         **/
   /* ********************************************************/


  XSENTRY(); /* security check*/

  XSSEGTR(); /* set security transaction id*/

  set SY0KM001 initial;
  set SY0KM002 initial;
  set SY0KW01 empty;
  set SYWREC empty;
  set SY1REC empty;
  set SY2REC empty;
  set SY5REC empty;
  set SY6REC empty;
  set SY7REC empty;
  set XP0GW01 empty;
  set XP0GW02 empty;
  set XX0XW02 empty;
  set ZFCWREC empty;
  set VZFC0001 empty;
  set TAEREC empty;

  SY0KM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0KM001.SYMRVNBR = "01";

  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGEN = VGVar.currentShortGregorianDate;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SY0KW01.SY0KWDTE = TA2REC.TA2GRGGN;
  else
    converseLib.validationFailed(42); /* internal date error*/
    exit stack;
  end

   /* Now, find out what region user is and see if we can*/
   /* default a valid country/currency for them.*/
  set WSY1550 empty;
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE > 0)
    if (SYWREC.SYW-ALL-REGIONS-FL == "Y")
      SY0KM001.XCTCD = "USA";
      SY0KM001.ZFC-CRCY-CD = "USD";
    else
      XPSY009(); /* Get countries for region*/
      if (WSY1550-RETURN-CODE == 00
       && WSY1550-TABLE-SIZE == 1)
        SY0KM001.XCTCD = WSY1550.XCT-CTRY-CD[1];
        SY0KM001.ZFC-CRCY-CD = WSY1550.ZFC-CRCY-CD[1];
      end
    end
  else /* No region for user, default to USA*/
    SY0KM001.XCTCD = "USA";
    SY0KM001.ZFC-CRCY-CD = "USD";
  end
  if (SY0KM001.XCTCD != " ")
    if (SY0KM001.XCTCD in XCTTBL.XCTCD)
      SY0KM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
    SY0KS-GET-ZFC();
  else
    set SY0KM001.XCTCD cursor;
  end


  SY0KM001.XGPCD = COMMAREA.XGPCD;
  if (SY0KM001.XGPCD == "02")
    if (COMMAREA.CAILVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized*/
      set SY0KM001.XGPCD cursor, bold;
    else
      /* next sentence*/
    end
  else
    if (SY0KM001.XGPCD == "03")
      if (COMMAREA.CAILVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized*/
        set SY0KM001.XGPCD cursor, bold;
      end
    end
  end


  if (SY0KM001.XGPCD in XGPTBL.XGPCD)
    SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  else
    converseLib.validationFailed(31); /* invalid gpc code entered*/
    set SY0KM001.XGPCD cursor, bold;
    exit stack;
  end

  if (SY0KM001.XGPCD != "02")
    SY0KM001.XPYCD = "01";
    if (SY0KM001.XPYCD in XPYTBL.XPYCD)
      SY0KM001.XPYDESC = XPYTBL.XPYDESC[sysVar.arrayIndex];
    end
  else /* Default Prop & Futures Display*/
    SY0KM001.XPYDESC = "Futures & Prop";
    SY0KM001.XQADESC = "First Quality";
  end

end // end SY0K010

// display prod price inq screen
Function SY0K020()
   /* *************************************************/
   /* *  processing in the 'before' stage includes:  **/
   /* *    1) protect map fields                     **/
   /* *    2) initialize map fields                  **/
   /* *    3) set cursor position                    **/
   /* *************************************************/

  set SY0KM001.SY0KM-DH-PROMPT1 skip, invisible;
  set SY0KM001.SY0KM-DH-FG1 skip, invisible;
  set SY0KM001.SY0KM-DH-PROMPT2 skip, invisible;
  set SY0KM001.SY0KM-DH-FG2 skip, invisible;

  SY0KM001.SYMPRONM = "SY0K020";

  if (SY0KM001.XGPCD == "02" /* If Footwear*/
   && SY0KM001.XPYCD == " ")
    SY0KW01.SY0KW-DSP-FUT-FG = "Y";
    SY0KM001.SY0KM-HEADING1 = "Futures Pricing";
    SY0KM001.SY0KM-DATE-HEAD1 = "Need Date";
    SY0KM001.SY0KM-HEADING2 = "Prop. Pricing";
  else
    SY0KW01.SY0KW-DSP-FUT-FG = "N";
    SY0KM001.SY0KM-HEADING1 = "1st Quality Pricing";
    SY0KM001.SY0KM-DATE-HEAD1 = "Eff. Date";
    SY0KM001.SY0KM-HEADING2 = "2nd Quality Pricing";
  end

  if (converseVar.validationMsgNum == 0)
    set SY0KM001.SY1STNBR cursor;
  end

  converseVar.segmentedMode = 1;

  converse SY0KM001 ;
   /* *************************************************/
   /* *  processing in the 'after' stage includes:   **/
   /* *    1) check for fast path option             **/
   /* *    2) check pfkeys                           **/
   /* *    3) edit fields                            **/
   /* *************************************************/

  SY0KS01(); /* check for fast path option*/

  SY0KS02(); /* check pfkeys*/

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  else
    SY0KM001.SYMSCMSG = " ";
    set SY0KM001.XGPCD initialAttributes;
    set SY0KM001.SY1STNBR initialAttributes;
    set SY0KM001.SY2CLRID initialAttributes;
    set SY0KM001.XDMCD initialAttributes;
    set SY0KM001.XPYCD initialAttributes;
    set SY0KM001.XCTCD initialAttributes;
    set SY0KM001.ZFC-CRCY-CD initialAttributes;
  end

  if (SY0KM001.SY1STNBR == "      ")
    converseLib.validationFailed(40); /* required field*/
    set SY0KM001.SY1STNBR cursor, bold;
  end

  if (SY0KM001.XGPCD == "02")
    if (COMMAREA.CAILVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized*/
      set SY0KM001.XGPCD cursor, bold;
      SY0KM001.XGPDESC = " ";
    else
      if (SY0KM001.XGPCD in XGPTBL.XGPCD)
        SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc*/
        set SY0KM001.XGPCD cursor, bold;
        SY0KM001.XGPDESC = " ";
      end
    end
  else
    if (SY0KM001.XGPCD == "03")
      if (COMMAREA.CAILVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized*/
        set SY0KM001.XGPCD cursor, bold;
        SY0KM001.XGPDESC = " ";
      else
        if (SY0KM001.XGPCD in XGPTBL.XGPCD)
          SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc*/
          set SY0KM001.XGPCD cursor, bold;
          SY0KM001.XGPDESC = " ";
        end
      end
    else
      if (SY0KM001.XGPCD in XGPTBL.XGPCD)
        SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc*/
        set SY0KM001.XGPCD cursor, bold;
        SY0KM001.XGPDESC = " ";
      end
    end
  end


end // end SY0K020

// obtain table data
Function SY0K030()
   /* **********************************************************/
   /* *  this process performs the following:                 **/
   /* *    1) obtain style data,color data and corporate      **/
   /* *       table data.*/
   /* **********************************************************/

  SY0KS-POPUPS(); /* Display pop-ups*/
  if (converseVar.validationMsgNum != 0) /* Don't want to continue*/
    exit stack;
  end

  if (SY0KM001.XCTCD in XCTTBL.XCTCD)
    SY0KM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
  else
    converseLib.validationFailed(3); /* invalid code*/
    SY0KM001.XCTDESC = "INVALID";
    set SY0KM001.XCTCD cursor, bold;
    exit stack;
  end

  SY0KS-GET-ZFC(); /* validate zfc & get desc*/
  if (converseVar.validationMsgNum != 0) /* Had errors*/
    exit stack; /* Get out*/
  end

   /* *******************************/
   /* obtain style record*/
   /* *******************************/

  SY1REC.XGPCD = SY0KM001.XGPCD;
  SY1REC.SY1STNBR = SY0KM001.SY1STNBR;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(5); /* style record does not exist*/
    set SY0KM001.SY1STNBR cursor, bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(20); /* style table error - contact sys.*/
                                   /* development*/
      SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      set SY0KM001.SY1STNBR cursor, bold;
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0K030  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "SY1REC";
      TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      exit stack;
    else
      SY0KM001.SY1STYNM = SY1REC.SY1STYNM;
      SY0KM001.XUMCD = SY1REC.XUMCD;
      SY0KM001.SY1PRCZS = SY1REC.SY1PRCZS;
    end
  end

   /* obtain price by and UOM descriptions*/

  if (SY1REC.SY1PRCZS == "S")
    SY0KM001.SY0KM-PRCZS-DESC = "Style";
  else
    if (SY1REC.SY1PRCZS == "C")
      SY0KM001.SY0KM-PRCZS-DESC = "Color";
    else
      SY0KM001.SY0KM-PRCZS-DESC = " ";
    end
  end

  if (SY1REC.XUMCD in XUMTBL.XUMCD)
    SY0KM001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  else
    SY0KM001.XUMDESC = " ";
  end

   /* ************************/
   /* obtain style color row*/
   /* ************************/

  if (SY0KM001.SY2CLRID == " "
   && SY0KM001.XDMCD == " ")
    SY0KM001.SY2CLRDS = " ";
    SY0KM001.XDMDESC = " ";
  else
    SY0KS09(); /* try to get sy2rec*/
  end

   /* *****************************/
   /* obtain price code description*/
   /* *****************************/

  if (SY0KM001.XPYCD != " ")
    if (SY0KM001.XPYCD in XPYTBL.XPYCD)
      SY0KM001.XPYDESC = XPYTBL.XPYDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(3); /* invalid code*/
      SY0KM001.XPYDESC = "INVALID";
      set SY0KM001.XPYCD cursor, bold;
      exit stack;
    end
  else
    SY0KM001.XPYDESC = " ";
    if (SY0KM001.XGPCD != "02")
      converseLib.validationFailed(40); /* Required field*/
      set SY0KM001.XPYCD cursor, bold;
      exit stack;
    else
      SY0KM001.XPYDESC = "Futures & Prop";
    end
  end

   /* If price type 62, the following rules are in force:*/
   /* Color must be entered*/
   /* Country/currency must be USA/USD*/
  if (SY0KM001.XPYCD == "62")
    if (SY0KM001.SY2CLRID == " ")
      converseLib.validationFailed(197); /* Need valid color/dim*/
      set SY0KM001.SY2CLRID cursor, bold;
      set SY0KM001.XPYCD bold;
      exit stack;
    end
    if (SY0KM001.XCTCD != "USA"
     || SY0KM001.ZFC-CRCY-CD != "USD")
      converseLib.validationFailed(3); /* Invalid code*/
      SY0KM001.SYMSCMSG = "   Only Country USA, Currency USD are Valid for Price Type 62";
      set SY0KM001.XCTCD cursor, bold;
      set SY0KM001.ZFC-CRCY-CD bold;
      exit stack;
    end
  end

   /* *****************************/
   /* now set-up display for*/
   /* prop/futures*/
   /* first/second quality*/
   /* *****************************/

  if (SY0KM001.XGPCD == "02" /* If Footwear*/
   && SY0KM001.XPYCD == " ")
    SY0KW01.SY0KW-DSP-FUT-FG = "Y";
    SY0KM001.XQADESC = "First Quality ";
    SY0KM001.SY0KM-HEADING1 = "Futures Pricing";
    SY0KM001.SY0KM-DATE-HEAD1 = "Need Date";
    SY0KM001.SY0KM-HEADING2 = "Prop. Pricing";
  else
    SY0KW01.SY0KW-DSP-FUT-FG = "N";
    SY0KM001.XQADESC = " ";
    SY0KM001.SY0KM-HEADING1 = "1st Quality Pricing";
    SY0KM001.SY0KM-DATE-HEAD1 = "Eff. Date";
    SY0KM001.SY0KM-HEADING2 = "2nd Quality Pricing";
  end


   /* *****************************/
   /* obtain price table row data*/
   /* *****************************/

  SY5REC.XGPCD = SY0KM001.XGPCD;
  SY5REC.SY1STNBR = SY0KM001.SY1STNBR;
  if (SY0KM001.SY2CLRID == "   ")
    SY5REC.SY2CLRID = "***";
  else
    SY5REC.SY2CLRID = SY0KM001.SY2CLRID;
  end

  if (SY0KM001.XDMCD == "   ")
    SY5REC.XDMCD = "**";
  else
    SY5REC.XDMCD = SY0KM001.XDMCD;
  end

  SY5REC.SY5SZID = 0;
  SY5REC.XCT-CTRY-CD = SY0KM001.XCTCD;
  SY5REC.ZFC-CRCY-CD = SY0KM001.ZFC-CRCY-CD;

  if (SY0KW01.SY0KW-DSP-FUT-FG == "Y")
    SY5REC.XQACD = "01";
  else
    SY5REC.XPYCD = SY0KM001.XPYCD;
  end

  SY0KW01.SY0KWSW1 = "NO ROW";

  if (SY0KM001.XPYCD == "62") /* If cost + 11% 'price' type*/
    SY0KS12(); /* get cost and adjust it*/
  else
    SY0KS10(); /* get price info*/
  end

  if (SY0KW01.SY0KWSW1 == "NO ROW"
   && SY0KM001.SY2CLRID != " "
   && SY0KM001.XPYCD != "62")
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY0KS10();
    if (SY0KW01.SY0KWSW1 == " ") /* found it*/
      SY0KM001.SYMSCMSG = "Price Data Displayed is at STYLE Level";
    end
  end

  if (SY0KW01.SY0KWSW1 == "NO ROW")
    converseLib.validationFailed(18);
    set SY0KM001.SY1STNBR cursor, bold;
    set SY0KM001.SY2CLRID bold;
    set SY0KM001.XDMCD bold;
    set SY0KM001.XPYCD bold;
  else
    SY0KW01.XGPCD = SY0KM001.XGPCD;
    SY0KW01.SY1STNBR = SY0KM001.SY1STNBR;
    SY0KW01.SY2CLRID = SY0KM001.SY2CLRID;
    SY0KW01.XDMCD = SY0KM001.XDMCD;
    SY0KW01.XPYCD = SY0KM001.XPYCD;
    SY0KW01.XCTCD = SY0KM001.XCTCD;
    SY0KW01.ZFC-CRCY-CD = SY0KM001.ZFC-CRCY-CD;
    if (SY1REC.SY1PRCZS == "C" /* price at color*/
     && SY0KM001.SY2CLRID == " ") /* and user looking at style*/
      SY0KM001.SYMSCMSG = "Color/Dimension Prices Exist for this Style";
    end
  end


end // end SY0K030

// display price data
Function SY0K040()
   /* ***********************************************/
   /* *  processing in the before stage includes:  **/
   /* *    1) set cursor position                  **/
   /* *    2) move process name to screen          **/
   /* ***********************************************/


  if (converseVar.validationMsgNum == 0)
    set SY0KM001.SY1STNBR cursor;
  end


  SY0KM001.SYMPRONM = "SY0K040";


  converseVar.segmentedMode = 1;


  converse SY0KM001 ;
   /* **********************************************/
   /* *  processing in the after stage includes:  **/
   /* *    1) check for fast path option          **/
   /* *    2) check pfkey used                    **/
   /* *    3) edit input                          **/
   /* *    4) check for changed key data          **/
   /* **********************************************/

  SY0KS01(); /* check for fast path*/

  SY0KS02(); /* check pfkeys*/

  if (SY0KM001.SY1STNBR == "      ")
    converseLib.validationFailed(40); /* required field*/
    set SY0KM001.SY1STNBR cursor, bold;
  end

  if (SY0KM001.XGPCD == "02")
    if (COMMAREA.CAILVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized*/
      set SY0KM001.XGPCD cursor, bold;
      SY0KM001.XGPDESC = " ";
    else
      if (SY0KM001.XGPCD in XGPTBL.XGPCD)
        SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      else
        converseLib.validationFailed(31); /* invalid gpc*/
        set SY0KM001.XGPCD cursor, bold;
        SY0KM001.XGPDESC = " ";
      end
    end
  else
    if (SY0KM001.XGPCD == "03")
      if (COMMAREA.CAILVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized*/
        set SY0KM001.XGPCD cursor, bold;
        SY0KM001.XGPDESC = " ";
      else
        if (SY0KM001.XGPCD in XGPTBL.XGPCD)
          SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        else
          converseLib.validationFailed(31); /* invalid gpc*/
          set SY0KM001.XGPCD cursor, bold;
          SY0KM001.XGPDESC = " ";
        end
      end
    else
      if (SY0KM001.XGPCD in XGPTBL.XGPCD)
        SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      else
        converseLib.validationFailed(31); /* invalid gpc*/
        set SY0KM001.XGPCD cursor, bold;
        SY0KM001.XGPDESC = " ";
      end
    end
  end

  SY0KW01.SY0KWSW2 = " ";
  if (SY0KM001.XGPCD != SY0KW01.XGPCD
   || SY0KM001.SY1STNBR != SY0KW01.SY1STNBR
   || SY0KM001.SY2CLRID != SY0KW01.SY2CLRID
   || SY0KM001.XDMCD != SY0KW01.XDMCD
   || SY0KM001.XPYCD != SY0KW01.XPYCD
   || SY0KM001.XCTCD != SY0KW01.XCTCD
   || SY0KM001.ZFC-CRCY-CD != SY0KW01.ZFC-CRCY-CD)
    SY0KW01.SY0KWSW2 = "CHANGED";
    SY0KS08(); /* clear lower portion of screen*/
    exit stack;
  end


end // end SY0K040

// obtain price history data
Function SY0K050()
   /* *************************************************/
    /* this process obtains the price history rows  **/
    /* and puts the needed data in working storage  **/
   /* *************************************************/


  SY0KW01.SY0KWCT1 = 1;
  while (SY0KWCT1 <= 30)
    SY0KW01.SY0KWPTP = " ";
    SY0KW01.SY0KWQLY = " ";
    SY0KW01.SY0KWMDN = " ";
    SY0KW01.SY0KWUPR = 0;
    SY0KW01.SY0KWEDT = 0;
    SY0KW01.SY0KWSUD = 0;
    SY0KWCT1 = SY0KWCT1 + 1;
  end


  SY7REC.XGPCD = SY0KM001.XGPCD;
  SY7REC.SY1STNBR = SY0KM001.SY1STNBR;
  if (SY0KM001.SY2CLRID == "   ")
    SY7REC.SY2CLRID = "***";
  else
    SY7REC.SY2CLRID = SY0KM001.SY2CLRID;
  end


  if (SY0KM001.XDMCD == "   ")
    SY7REC.XDMCD = "**";
  else
    SY7REC.XDMCD = SY0KM001.XDMCD;
  end

  SY7REC.XCT-CTRY-CD = SY0KM001.XCTCD;
  SY7REC.ZFC-CRCY-CD = SY0KM001.ZFC-CRCY-CD;

  call "IO0370" ("SS", SQLCA, SY7REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    set SY0KM001.SY1STNBR cursor, bold;
    set SY0KM001.SY2CLRID bold;
    set SY0KM001.XDMCD bold;
    converseLib.validationFailed(39); /* history table error - contact systems dvlpmnt*/
    SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0K   ";
    TA1REC.TA1LOCAT[1] = "SS       ";
    TA1REC.TA1LOCAT[2] = "SY0K050  ";
    TA1REC.TA1LOCAT[3] = "IO0370   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0KM001";
    TA1REC.TA1DBASE = "SY7REC";
    TA1REC.TA1TBLVU = "DPROD.VPRICH01";
    TA1TBLKE = SY7REC.SY7KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    exit stack;
  else
    SY0KWCT1 = 1;
    while (SQLCA.VAGen_SQLCODE == 0
     && converseVar.validationMsgNum == 0)
      SY0KS05(); /* obtain price history rows*/
    end
  end


  if (SY0KWCT1 == 1)
    converseLib.validationFailed(50);
  else
    SY0KWCT1 = SY0KWCT1 - 1;
  end


  call "IO0370" ("CS", SQLCA, SY7REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    set SY0KM001.SY1STNBR cursor, bold;
    set SY0KM001.SY2CLRID bold;
    set SY0KM001.XDMCD bold;
    converseLib.validationFailed(39); /* history table error - contact systems dvlpmnt*/
    SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0K   ";
    TA1REC.TA1LOCAT[1] = "CS       ";
    TA1REC.TA1LOCAT[2] = "SY0K050  ";
    TA1REC.TA1LOCAT[3] = "IO0370   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0KM001";
    TA1REC.TA1DBASE = "SY7REC";
    TA1REC.TA1TBLVU = "DPROD.VPRICH01";
    TA1TBLKE = SY7REC.SY7KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
    exit stack;
  end

  SY0KM001.SY0KM-DH-FG1 = " "; /* Clear flag*/
  SY0KM001.SY0KM-DH-FG2 = " "; /* Clear flag*/

end // end SY0K050

// perform initial map moves
Function SY0K060()
   /* **************************************************/
   /* *  this process performs the moves to format    **/
   /* *  the sy0km002 map.                            **/
   /* **************************************************/


  set SY0KM002 initial;


  SY0KM002.XGPCD = SY0KM001.XGPCD;
  SY0KM002.XGPDESC = SY0KM001.XGPDESC;
  SY0KM002.SY1STNBR = SY0KM001.SY1STNBR;
  SY0KM002.SY1SSTNM = SY1REC.SY1SSTNM;
  SY0KM002.SY2CLRID = SY0KM001.SY2CLRID;
  SY0KM002.SY2CLRAB = SY2REC.SY2CLRAB;
  SY0KM002.XDMCD = SY0KM001.XDMCD;
  SY0KM002.XDMDESC = SY0KM001.XDMDESC;
  SY0KM002.XUMCD = SY0KM001.XUMCD;
  SY0KM002.XUMDESC = SY0KM001.XUMDESC;
  SY0KM002.XCTCD = SY0KM001.XCTCD;
  SY0KM002.ZFC-CRCY-CD = SY0KM001.ZFC-CRCY-CD;


  SY0KWCT3 = 1;
  while (SY0KWCT3 <= 11
   && SY0KWCT2 <= SY0KWCT1)
    SY0KM002.SY0KMPTP[SY0KWCT3] = SY0KW01.SY0KWPTP[SY0KWCT2];
    SY0KM002.SY0KMQLY[SY0KWCT3] = SY0KW01.SY0KWQLY[SY0KWCT2];
    SY0KM002.SY0KMUPR[SY0KWCT3] = SY0KW01.SY0KWUPR[SY0KWCT2];
    SY0KM002.SY0KMMDN[SY0KWCT3] = SY0KW01.SY0KWMDN[SY0KWCT2];
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGGN = SY0KW01.SY0KWEDT[SY0KWCT2];
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

    if (TA2REC.TA2RTNCD == 0)
      SY0KM002.SY0KMEDT[SY0KWCT3] = TA2REC.TA2GRGEN;
    else
      converseLib.validationFailed(42); /* internal date error - call systems development*/
      exit stack;
    end
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGGN = SY0KW01.SY0KWSUD[SY0KWCT2];
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

    if (TA2REC.TA2RTNCD == 0)
      SY0KM002.SY0KMSUD[SY0KWCT3] = TA2REC.TA2GRGEN;
    else
      converseLib.validationFailed(42); /* internal date error - call systems development*/
      exit stack;
    end

    SY0KWCT2 = SY0KWCT2 + 1;
    SY0KWCT3 = SY0KWCT3 + 1;
  end

  SY0KWCT2 = SY0KWCT2 - 1;


end // end SY0K060

// display price history data
Function SY0K070()
   /* ********************************************************/
   /* *  processing in this option includes:                **/
   /* *    1) move heading data to map sy0km002             **/
   /* *    2) check for fast path option                    **/
   /* *    3) check for pfkeys                              **/
   /* ********************************************************/


  SY0KM002.SYMPRONM = "SY0K070";
  SY0KM002.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0KM002.SYMRVNBR = "01";
  SY0KM002.SYMTTLNM = "    PRODUCT PRICE HISTORY - INQUIRY   ";


  converseVar.segmentedMode = 1;


  converse SY0KM002 ;
  SY0KS03(); /* check for fast path*/


  SY0KS04(); /* check pfkeys*/


end // end SY0K070

// Get Currency code Desc.
Function SY0KS-GET-ZFC()


       /* ******************************************/
       /* *     GET CURRENCY DESCRIPTION          **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  SY0KM001.ZFC-CRCY-DESC = " ";

  VZFC0001.ZFC-CRCY-CD = SY0KM001.ZFC-CRCY-CD;

  call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0KM001.ZFC-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0KM001.VAGen_EZEMSG = "INVALID CURRENCY CODE";
      set SY0KM001.ZFC-CRCY-CD cursor, bold;
      converseLib.validationFailed(3);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "SY0KS-   ";
      TA1REC.TA1LOCAT[2] = "GET-ZFC  ";
      TA1REC.TA1LOCAT[3] = "DC0060   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "CORP";
      TA1REC.TA1TBLVU = "VZFC0001";
      TA1TBLKE = VZFC0001.ZFC-CRCY-CD;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(23); /* corp table error....*/
      set SY0KM001.ZFC-CRCY-CD cursor, bold;
    end
  end

end // end SY0KS-GET-ZFC

// Check for & Display popups
Function SY0KS-POPUPS()

   /* Examine screen and display any pop-up requests to user*/

  XP0GW01.XP0GW-SEL-COLR-CD = SY0KM001.SY2CLRID;
  if (XP0GW01.XP0GW-SEL-COLR-CD1 == "?" /* We want pop-up*/
   || XP0GW01.XP0GW-SEL-COLR-CD2 == "?" 
   || XP0GW01.XP0GW-SEL-COLR-CD3 == "?")
    XP0GW01.XGPCD = SY0KM001.XGPCD;
    XP0GW01.SY1STNBR = SY0KM001.SY1STNBR;
    XP0G001(); /* so do it*/
    if (XP0GW02.XP0GWERR == "Y") /* we have an error*/
      if (XP0GW02.XP0GWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (XP0GW02.XP0GWENR == 1) /* No colors found*/
        converseLib.validationFailed(7);
      end
      if (XP0GW02.XP0GWENR == 2) /* DB2 Error*/
        converseLib.validationFailed(21);
      end
    else
      if (XP0GW02.XP0GWPIX != 0) /* and user selected*/
        SY0KM001.SY2CLRID = XP0GW01.SY2CLRID[XP0GWPIX];
        SY0KM001.XDMCD = XP0GW01.XDMCD[XP0GWPIX];
      else
        converseLib.validationFailed(59); /* No colors selected*/
      end
    end
  end


  if (SY0KM001.XCTCD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Country Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0KM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

  if (SY0KM001.ZFC-CRCY-CD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Currency Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPZFC-POP(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0KM001.ZFC-CRCY-CD = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
    end
  end

  converseLib.clearScreen();
   /* Refresh map*/

end // end SY0KS-POPUPS

// check fast path option
Function SY0KS01()
   /* *****************************************/
   /* *  let's check for fast path request   **/
   /* *****************************************/


  if (converseVar.eventKey is enter
   && SY0KM001.CATOAP != "  ")
    move SY0KM001 to COMMAREA withV60Compat;
    XSEXIT();
    SY0KM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0KM001 alarm;
    set SY0KM001.CATOAP cursor, bold;
    converseLib.validationFailed(1); /* reserved message area*/
  end

  return;


end // end SY0KS01

// check pfkeys
Function SY0KS02()
   /* *****************************************************/
     /* let's check the pfkey entered by the operator   **/
   /* *****************************************************/


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "HELP";
    XSEXIT();
  else
    if (converseVar.eventKey is pf4)
      XSPF4();
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CATOAP = "SY0I";
        XSEXIT();
      else
        if (converseVar.eventKey is enter
         || converseVar.eventKey is pa2)
          return;
        else
          converseLib.validationFailed(19); /* invalid pf key*/
        end
      end
    end
  end


end // end SY0KS02

// check for fast path option
Function SY0KS03()
   /* ********************************************************/
   /* *  this statement group processes a fast path option  **/
   /* *  issued by the user from map sy0km002.              **/
   /* ********************************************************/


   /* *****************************************/
   /* *  let's check for fast path request   **/
   /* *****************************************/


  if (converseVar.eventKey is enter
   && SY0KM002.CATOAP != "  ")
    move SY0KM002 to COMMAREA withV60Compat;
    XSEXIT();
    SY0KM002.SYMSCMSG = COMMAREA.CAMSG;
    set SY0KM002 alarm;
    set SY0KM002.CATOAP cursor, bold;
    converseLib.validationFailed(1); /* reserved message area*/
  end

  return;


end // end SY0KS03

// check pfkeys for sy0km002
Function SY0KS04()
   /* *****************************************************/
     /* let's check the pfkey entered by the operator   **/
   /* *****************************************************/


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "HELP";
    XSEXIT();
  else
    if (converseVar.eventKey is pf4)
      XSPF4();
    else
      if (converseVar.eventKey is enter
       || converseVar.eventKey is pa2
       || converseVar.eventKey is pf7
       || converseVar.eventKey is pf8
       || converseVar.eventKey is pf3)
        return;
      else
        converseLib.validationFailed(19); /* invalid pf key*/
      end
    end
  end


end // end SY0KS04

// convert and move price dates
Function SY0KS05()
   /* **********************************************************/
   /* *  this statement group performs individual 'sn' calls  **/
   /* *  to the price history table.                          **/
   /* **********************************************************/


  call "IO0370" ("SN", SQLCA, SY7REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0KM001.SY1STNBR cursor;
      converseLib.validationFailed(39); /* history table error - contact systems dvlpmnt*/
      SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "SN       ";
      TA1REC.TA1LOCAT[2] = "SY0KS05  ";
      TA1REC.TA1LOCAT[3] = "IO0370   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "SY7REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICH01";
      TA1TBLKE = SY7REC.SY7KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      exit stack;
    else
      SY0KS11(); /* Check to see if we really want it*/
    end
  end


end // end SY0KS05

// Moves to screen - Left
Function SY0KS06()
   /* **********************************************************/
   /* *  this statement group performs the moves from the     **/
   /* *  working storage area to the screen area.             **/
   /* **********************************************************/


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = SY5REC.ZZZCHGDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    set SY0KM001.SY0KM-MNT-LABEL1 initialAttributes;
    set SY0KM001.SY0KM-LAST-MNT1 initialAttributes;
    SY0KM001.SY0KM-LAST-MNT1 = TA2REC.TA2GRGEN;
  else
    converseLib.validationFailed(42); /* internal date error*/
    exit stack;
  end

  if (SY5REC.SY5HSTSW == "Y") /* We have History*/
    set SY0KM001.SY0KM-DH-PROMPT1 initialAttributes;
    set SY0KM001.SY0KM-DH-FG1 initialAttributes;
    SY0KM001.SY0KM-DH-FG1 = " ";
  else /* No history, set fields autoskip dark*/
    set SY0KM001.SY0KM-DH-PROMPT1 skip, invisible;
    set SY0KM001.SY0KM-DH-FG1 skip, invisible;
    SY0KM001.SY0KM-DH-FG1 = " ";
  end

  SY0KWCT1 = 1;
  SY0KW01.SY0KW-FND-CUR-FG = "N";
  while (SY0KWCT1 <= 6)
    if (SY5REC.SY5PCEDT[SY0KWCT1] != 0)
      set SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1] initialAttributes;
      set SY0KM001.SY0KM-IND1[SY0KWCT1] initialAttributes;
      set SY0KM001.SY0KM-EFF-DT1[SY0KWCT1] initialAttributes;
      SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1] = SY5REC.SY5PRCUN[SY0KWCT1];
      SY0KM001.SY0KM-IND1[SY0KWCT1] = SY5REC.SY5PSIND[SY0KWCT1];
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "G";
      TA2REC.TA2GRGGN = SY5REC.SY5PCEDT[SY0KWCT1];
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD == 0)
        SY0KM001.SY0KM-EFF-DT1[SY0KWCT1] = TA2REC.TA2GRGEN;
      else
        converseLib.validationFailed(42); /* internal date error*/
        exit stack;
      end
      if (SY5REC.SY5PCEDT[SY0KWCT1] <= SY0KW01.SY0KWDTE
       && SY0KW01.SY0KW-FND-CUR-FG == "N")
        SY0KW01.SY0KW-FND-CUR-FG = "Y";
        SY0KM001.SY0KM-CURR-MARK1[SY0KWCT1] = "*";
      end
    else
      set SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1] invisible, skip;
      set SY0KM001.SY0KM-IND1[SY0KWCT1] invisible, skip;
      set SY0KM001.SY0KM-EFF-DT1[SY0KWCT1] invisible, skip;
    end
    SY0KWCT1 = SY0KWCT1 + 1;
  end


end // end SY0KS06

// Moves to screen - Right
Function SY0KS07()
   /* **********************************************************/
   /* *  this statement group performs the moves from the     **/
   /* *  working storage area to the screen area.             **/
   /* **********************************************************/

  set SY0KM001.SY0KM-HEADING2 initialAttributes;
  set SY0KM001.SY0KM-SUB-HEAD2 initialAttributes;

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = SY5REC.ZZZCHGDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    set SY0KM001.SY0KM-MNT-LABEL2 initialAttributes;
    set SY0KM001.SY0KM-LAST-MNT2 initialAttributes;
    SY0KM001.SY0KM-LAST-MNT2 = TA2REC.TA2GRGEN;
  else
    converseLib.validationFailed(42); /* internal date error*/
    exit stack;
  end

  if (SY5REC.SY5HSTSW == "Y") /* We have History*/
    set SY0KM001.SY0KM-DH-PROMPT2 initialAttributes;
    set SY0KM001.SY0KM-DH-FG2 initialAttributes;
    SY0KM001.SY0KM-DH-FG2 = " ";
  else /* No history, set fields autoskip dark*/
    set SY0KM001.SY0KM-DH-PROMPT2 skip, invisible;
    set SY0KM001.SY0KM-DH-FG2 skip, invisible;
    SY0KM001.SY0KM-DH-FG2 = " ";
  end

  SY0KWCT1 = 1;
  SY0KW01.SY0KW-FND-CUR-FG = "N";
  while (SY0KWCT1 <= 6)
    if (SY5REC.SY5PCEDT[SY0KWCT1] != 0)
      set SY0KM001.SY0KM-UNIT-PRC2[SY0KWCT1] initialAttributes;
      set SY0KM001.SY0KM-IND2[SY0KWCT1] initialAttributes;
      set SY0KM001.SY0KM-EFF-DT2[SY0KWCT1] initialAttributes;
      SY0KM001.SY0KM-UNIT-PRC2[SY0KWCT1] = SY5REC.SY5PRCUN[SY0KWCT1];
      SY0KM001.SY0KM-IND2[SY0KWCT1] = SY5REC.SY5PSIND[SY0KWCT1];
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "G";
      TA2REC.TA2GRGGN = SY5REC.SY5PCEDT[SY0KWCT1];
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD == 0)
        SY0KM001.SY0KM-EFF-DT2[SY0KWCT1] = TA2REC.TA2GRGEN;
      else
        converseLib.validationFailed(42); /* internal date error*/
        exit stack;
      end
      if (SY5REC.SY5PCEDT[SY0KWCT1] <= SY0KW01.SY0KWDTE
       && SY0KW01.SY0KW-FND-CUR-FG == "N")
        SY0KW01.SY0KW-FND-CUR-FG = "Y";
        SY0KM001.SY0KM-CURR-MARK2[SY0KWCT1] = "*";
      end
    else
      set SY0KM001.SY0KM-UNIT-PRC2[SY0KWCT1] invisible, skip;
      set SY0KM001.SY0KM-IND2[SY0KWCT1] invisible, skip;
      set SY0KM001.SY0KM-EFF-DT2[SY0KWCT1] invisible, skip;
    end
    SY0KWCT1 = SY0KWCT1 + 1;
  end


end // end SY0KS07

// clear bottom portion of map
Function SY0KS08()
   /* ********************************************************/
   /* *  this statement group clears the map and then puts  **/
   /* *  back the top portion of data.                      **/
   /* ********************************************************/


  SY0KW01.XGPCD = SY0KM001.XGPCD;
  SY0KW01.SY1STNBR = SY0KM001.SY1STNBR;
  SY0KW01.SY2CLRID = SY0KM001.SY2CLRID;
  SY0KW01.XDMCD = SY0KM001.XDMCD;
  SY0KW01.XPYCD = SY0KM001.XPYCD;
  SY0KW01.XCTCD = SY0KM001.XCTCD;
  SY0KW01.XCTDESC = SY0KM001.XCTDESC;
  SY0KW01.ZFC-CRCY-CD = SY0KM001.ZFC-CRCY-CD;
  SY0KW01.ZFC-CRCY-DESC = SY0KM001.ZFC-CRCY-DESC;

  set SY0KM001 initial;

  SY0KM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0KM001.SYMRVNBR = "01";

  SY0KM001.XGPCD = SY0KW01.XGPCD;
  if (SY0KM001.XGPCD in XGPTBL.XGPCD)
    SY0KM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  end
  SY0KM001.SY1STNBR = SY0KW01.SY1STNBR;
  SY0KM001.SY2CLRID = SY0KW01.SY2CLRID;
  SY0KM001.XDMCD = SY0KW01.XDMCD;
  SY0KM001.XPYCD = SY0KW01.XPYCD;
  SY0KM001.XCTCD = SY0KW01.XCTCD;
  SY0KM001.XCTDESC = SY0KW01.XCTDESC;
  SY0KM001.ZFC-CRCY-CD = SY0KW01.ZFC-CRCY-CD;
  SY0KM001.ZFC-CRCY-DESC = SY0KW01.ZFC-CRCY-DESC;


end // end SY0KS08

// Validate Color/Dim Data
Function SY0KS09()

   /* **********************************************************/
   /* *  this process performs the following:                 **/
   /* *    1) obtain dimension and color data                 **/
   /* **********************************************************/


  if (SY0KM001.XDMCD == " ")
    SY0KM001.XDMCD = "00";
  end
  if (SY0KM001.XDMCD in XDMTBL.XDMCD)
    SY0KM001.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  else
    SY0KM001.XDMDESC = " ";
    converseLib.validationFailed(3); /* invalid code*/
    set SY0KM001.XDMCD cursor, bold;
    exit stack;
  end

  SY2REC.XGPCD = SY0KM001.XGPCD;
  SY2REC.SY1STNBR = SY0KM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0KM001.SY2CLRID;
  SY2REC.XDMCD = SY0KM001.XDMCD;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    SY0KM001.SY2CLRDS = " ";
    converseLib.validationFailed(7); /* color/dim does not exist*/
    set SY0KM001.SY2CLRID cursor, bold;
    set SY0KM001.XDMCD bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0KM001.SY2CLRID cursor, bold;
      set SY0KM001.XDMCD bold;
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
      SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0K030  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      exit stack;
    else
      SY0KM001.SY2CLRDS = SY2REC.SY2CLRDS;
    end
  end

end // end SY0KS09

// Get Price Row
Function SY0KS10()

  if (SY0KW01.SY0KW-DSP-FUT-FG == "Y")
    SY5REC.XPYCD = "08";
  else
    SY5REC.XQACD = "01";
  end

  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +0)
    SY0KW01.SY0KWSW1 = " ";
    SY0KS06(); /* moves to the screen*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* no row found*/
      SY0KM001.SY0KM-DH-FG1 = " ";
      set SY0KM001.SY0KM-DH-PROMPT1 skip, invisible;
      set SY0KM001.SY0KM-DH-FG1 skip, invisible;
      set SY0KM001.SY0KM-MNT-LABEL1 skip, invisible;
    else
      set SY0KM001.SY2CLRID cursor, bold;
      set SY0KM001.XDMCD bold;
      converseLib.validationFailed(38); /* price table error*/
      SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0KS10  ";
      TA1REC.TA1LOCAT[3] = "IO0380   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "SY5REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      exit stack;
    end
  end


  if (SY0KW01.SY0KW-DSP-FUT-FG == "Y")
    SY5REC.XPYCD = "01";
  else
    SY5REC.XQACD = "02";
  end

  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +0)
    SY0KW01.SY0KWSW1 = " ";
    SY0KS07(); /* moves to the screen*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* no row found*/
      SY0KM001.SY0KM-DH-FG2 = " ";
      set SY0KM001.SY0KM-HEADING2 skip, invisible;
      set SY0KM001.SY0KM-SUB-HEAD2 skip, invisible;
      set SY0KM001.SY0KM-DH-PROMPT2 skip, invisible;
      set SY0KM001.SY0KM-DH-FG2 skip, invisible;
      set SY0KM001.SY0KM-MNT-LABEL2 skip, invisible;
    else
      set SY0KM001.SY2CLRID cursor, bold;
      set SY0KM001.XDMCD bold;
      converseLib.validationFailed(38); /* price table error*/
      SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0KS10  ";
      TA1REC.TA1LOCAT[3] = "IO0380   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "SY5REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      exit stack;
    end
  end

end // end SY0KS10

// convert and move price dates
Function SY0KS11()
   /* **********************************************************/
   /* *  this statement examines the price type, quality, and **/
   /* *  the display history flags to decide what rows we     **/
   /* *  should display on the history screen.                **/
   /* **********************************************************/

  SY0KW01.SY0KW-WANT-IT = "N";

  if (SY0KM001.SY0KM-DH-FG1 == "Y")
    if (SY0KM001.XPYCD == " ")
      if (SY7REC.XPYCD == "08")
        SY0KW01.SY0KW-WANT-IT = "Y";
      end
    else
      if (SY7REC.XQACD == "01"
       && SY7REC.XPYCD == SY0KM001.XPYCD)
        SY0KW01.SY0KW-WANT-IT = "Y";
      end
    end
  end

  if (SY0KM001.SY0KM-DH-FG2 == "Y")
    if (SY0KM001.XPYCD == " ")
      if (SY7REC.XPYCD == "01")
        SY0KW01.SY0KW-WANT-IT = "Y";
      end
    else
      if (SY7REC.XQACD == "02"
       && SY7REC.XPYCD == SY0KM001.XPYCD)
        SY0KW01.SY0KW-WANT-IT = "Y";
      end
    end
  end

  if (SY0KW01.SY0KW-WANT-IT == "Y")
    SY0KW01.SY0KWPTP[SY0KWCT1] = SY7REC.XPYCD;
    SY0KW01.SY0KWQLY[SY0KWCT1] = SY7REC.XQACD;
    SY0KW01.SY0KWUPR[SY0KWCT1] = SY7REC.SY5PRCUN;
    SY0KW01.SY0KWEDT[SY0KWCT1] = SY7REC.SY5PCEDT;
    SY0KW01.SY0KWMDN[SY0KWCT1] = SY7REC.SY5PSIND;
    SY0KW01.SY0KWSUD[SY0KWCT1] = SY7REC.ZZZSDT;
    SY0KWCT1 = SY0KWCT1 + 1;
  end

end // end SY0KS11

// Get Price Row
Function SY0KS12()

  SY6REC.XGPCD = SY5REC.XGPCD;
  SY6REC.SY1STNBR = SY5REC.SY1STNBR;
  SY6REC.SY2CLRID = SY5REC.SY2CLRID;
  SY6REC.XDMCD = SY5REC.XDMCD;
  SY6REC.XCOCD = "01";
  SY6REC.XQACD = "01";
  SY6REC.XCT-CTRY-CD = SY5REC.XCT-CTRY-CD;
  SY6REC.ZFC-CRCY-CD = SY5REC.ZFC-CRCY-CD;

  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +0)
    SY0KW01.SY0KWSW1 = " ";
    SY0KS13(); /* moves to the screen*/
  else
    if (SQLCA.VAGen_SQLCODE != +100) /* no row found*/
      set SY0KM001.SY2CLRID cursor, bold;
      set SY0KM001.XDMCD bold;
      converseLib.validationFailed(38); /* price table error*/
      SY0KM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0K   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0KS12  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0KM001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VDCOST01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      exit stack;
    end
  end

  SY0KM001.SY0KM-DH-FG2 = " ";
  set SY0KM001.SY0KM-HEADING2 skip, invisible;
  set SY0KM001.SY0KM-SUB-HEAD2 skip, invisible;
  set SY0KM001.SY0KM-DH-PROMPT2 skip, invisible;
  set SY0KM001.SY0KM-DH-FG2 skip, invisible;
  set SY0KM001.SY0KM-MNT-LABEL2 skip, invisible;

end // end SY0KS12

// Moves to screen - Left
Function SY0KS13()
   /* **********************************************************/
   /* *  this statement group performs the moves from the     **/
   /* *  working storage area to the screen area.             **/
   /* *  NOTE: This uses the cost row, multiplies the amount  **/
   /* *        by 1.11, and move that to the screen.          **/
   /* **********************************************************/


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = SY6REC.ZZZCHGDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    set SY0KM001.SY0KM-MNT-LABEL1 initialAttributes;
    set SY0KM001.SY0KM-LAST-MNT1 initialAttributes;
    SY0KM001.SY0KM-LAST-MNT1 = TA2REC.TA2GRGEN;
  else
    converseLib.validationFailed(42); /* internal date error*/
    exit stack;
  end

   /* No history is allowed, set fields autoskip dark*/
  set SY0KM001.SY0KM-DH-PROMPT1 skip, invisible;
  set SY0KM001.SY0KM-DH-FG1 skip, invisible;
  SY0KM001.SY0KM-DH-FG1 = " ";

  SY0KWCT1 = 1;
  SY0KW01.SY0KW-FND-CUR-FG = "N";
  while (SY0KWCT1 <= 6)
    if (SY6REC.SY6CSEDT[SY0KWCT1] != 0)
      set SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1] initialAttributes;
      set SY0KM001.SY0KM-IND1[SY0KWCT1] initialAttributes;
      set SY0KM001.SY0KM-EFF-DT1[SY0KWCT1] initialAttributes;
      SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1] = mathLib.round(SY6REC.SY6CSTUN[SY0KWCT1] * 1.11, -mathLib.decimals(SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1]));
      SY0KM001.SY0KM-IND1[SY0KWCT1] = " ";
      set TA2REC empty;
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "G";
      TA2REC.TA2GRGGN = SY6REC.SY6CSEDT[SY0KWCT1];
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD == 0)
        SY0KM001.SY0KM-EFF-DT1[SY0KWCT1] = TA2REC.TA2GRGEN;
      else
        converseLib.validationFailed(42); /* internal date error*/
        exit stack;
      end
      if (SY6REC.SY6CSEDT[SY0KWCT1] <= SY0KW01.SY0KWDTE
       && SY0KW01.SY0KW-FND-CUR-FG == "N")
        SY0KW01.SY0KW-FND-CUR-FG = "Y";
        SY0KM001.SY0KM-CURR-MARK1[SY0KWCT1] = "*";
      end
    else
      set SY0KM001.SY0KM-UNIT-PRC1[SY0KWCT1] invisible, skip;
      set SY0KM001.SY0KM-IND1[SY0KWCT1] invisible, skip;
      set SY0KM001.SY0KM-EFF-DT1[SY0KWCT1] invisible, skip;
    end
    SY0KWCT1 = SY0KWCT1 + 1;
  end


end // end SY0KS13

Record SY0KW01 type basicRecord
  5 SY0KWDTE SY0KWDTE ; 
  5 SY0KWSW1 SY0KWSW1 ; 
  5 SY0KWSW2 SY0KWSW2 ; 
  5 SY0KW-FND-CUR-FG SY0KW-FND-CUR-FG ; 
  5 SY0KW-DSP-FUT-FG SY0KW-DSP-FUT-FG ; 
  5 SY0KW-WANT-IT SY0KW-WANT-IT ; 
  5 SY0KWCT1 SY0KWCT1 ; 
  5 SY0KWCT2 SY0KWCT2 ; 
  5 SY0KWCT3 SY0KWCT3 ; 
  5 XGPCD XGPCD ; 
  5 SY1STNBR SY1STNBR ; 
  5 SY2CLRID SY2CLRID ; 
  5 XDMCD XDMCD ; 
  5 XPYCD XPYCD ; 
  5 XCTCD XCTCD ; 
  5 XCTDESC XCTDESC ; 
  5 ZFC-CRCY-CD ZFC-CRCY-CD ; 
  5 ZFC-CRCY-DESC ZFC-CRCY-DESC ; 
  5 SY0KWPTP SY0KWPTP [30] ; 
  5 SY0KWQLY SY0KWQLY [30] ; 
  5 SY0KWUPR SY0KWUPR [30] ; 
  5 SY0KWEDT SY0KWEDT [30] ; 
  5 SY0KWMDN SY0KWMDN [30] ; 
  5 SY0KWSUD SY0KWSUD [30] ; 
end // end SY0KW01

// Display is Prop/Fut. Mode
DataItem SY0KW-DSP-FUT-FG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Found Current Price Flag
DataItem SY0KW-FND-CUR-FG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Want history row
DataItem SY0KW-WANT-IT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total price rows
DataItem SY0KWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// step thru price rows
DataItem SY0KWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// rows on screen
DataItem SY0KWCT3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem SY0KWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work eff. date
DataItem SY0KWEDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work mark down
DataItem SY0KWMDN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work price type
DataItem SY0KWPTP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work quality
DataItem SY0KWQLY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work set up date
DataItem SY0KWSUD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// price work switch
DataItem SY0KWSW1 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change work switch
DataItem SY0KWSW2 char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work unit price
DataItem SY0KWUPR num(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

