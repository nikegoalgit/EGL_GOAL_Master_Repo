package sy0c;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pk.common.*;
import sl.common.*;
import sw.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=SY0C ****
// application sy0c, add/chg distribution data, function is to
// add average weight and units per case to existing style
// table rows, sy1rec.  this data is input at various warehouse
// cites, primarily memphis, after goods have arrived to
// insure accurate data.  the application allows users to input
// multiple style numbers onto a single screen.  the module
// then verifies that the style numbers are valid and displays
// the existing weight and units per case if they exist.
// users then add new data or modify the displayed data.
// the module then updates the style table rows and creates
// audit and tag records.
// 
// ************************************************************
// maintenance:
// 
// project
// number   programmer    date       reason for change
// ------   ----------  --------     -----------------
//           dyoung     06-09-86     initial creation
//           mbuhit     09-20-88     fast path to gpc code
// P090      mbuhit     01-13-89     add phase IV fields
//           VCowan     04-14-89     added XSSEGTR logic
// -spl-     jwood      04-17-89     added noncsp opt to calls
//           MHALST     11-13-89     DB2 Changes and SYZTBL
//           MHALST     10-08-90     DB2 Changes and SYAREC
// 
// P088      MHALST     11-14-90     Add new Screen for Mult.
//                                   units/case and palet data
//           MHALST     01-10-91     Don't allow dup styles to
//                                   be entered on map M001
//           MHALST     02-11-91     DB2 Changes and SY2REC
//           MHALST     10-11-91     DB2 Changes to SWPREC
//           MHALST     10-15-91     Correct update logic for
//                                   row 4.
// PF167     MHALST     11-01-91     Rework screens and logic
//                                   to use entire UCASE table
// PF167     MHALST     12-03-91     Remove required edit for
//                                   warehouse 07.
//           MHALST     12-12-91     Correct update of style
//           MHALST     06-22-92     Data Base Changes to UCASE
// PF186     MHALST     07-07-92     Changes for Cole Haan
// sl357     kande1     04-29-93     Changes for Wilsonville
//                                   Receiving
// sl00      kande1     05-06-93     fixed update logic to
//                                   recognize and update a row
//                                   when size range only is
//                                   changed
// sl405     RYONKE     11-22-93     Added code to allow 8
//                                   units per case for gpc 03.
// SL00      OVAZQU     07-08-97     Insert a row to Dstloc.
//                                   Vsllog01 everytime there
//                                   is any updates to Dstloc.
//                                   Vucase01 table.
// SL00      OVAZQU     07-25-97     More of the same.
// TT#14997  SVENKA     01-03-02     Changes to SY0C205 so that
//                                   the application displays
//                                   the correct sizes when the
//                                   scale codes are different.
// TT#17157   BMAHAL     To fix Warehouse default problem
// *********************
Program SY0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PKLREC PKLREC; // record
  PKNREC PKNREC; // record
  SL10REC SL10REC; // record
  SLQREC SLQREC; // record
  SQLCA SQLCA; // record
  SWPREC SWPREC; // record
  SY0CW01 SY0CW01; // record
  SY0CW02 SY0CW02; // record
  SY0CW03 SY0CW03; // record
  SY0CW04 SY0CW04; // record
  SY0CW05 SY0CW05; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY4REC SY4REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYDREC SYDREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use XBCTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use SY0CM.SY0CM001,  // forms
      SY0CM.SY0CM005, 
      SY0CM.SY0CM010
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0C001: SY0C001();


    goto SY0C005;


    SY0C005: SY0C005();


    if (converseVar.eventKey is pa2) /* reinitialize map*/
      goto SY0C001;
    end
    if (converseVar.validationMsgNum > 0) /* if errors*/
      goto SY0C005; /* redisplay map with errors*/
    end
    if (converseVar.eventKey is pf12
     || converseVar.eventKey is enter)
      goto SY0C010; /* validate style numbers*/
    end
    converseLib.validationFailed(19); /* invalid pf key*/
    set SY0CM001.SY1STNBR[1] cursor;
    goto SY0C005; /* redisplay map with errors*/

    SY0C010: SY0C010();


    if (converseVar.validationMsgNum > 0)
      goto SY0C005; /* accept correct style numbers*/
    else
      goto SY0C015; /* accept avg wt - units per case input*/
    end


    SY0C015: SY0C015();

    if (converseVar.eventKey is pa2) /* reinitialize map*/
      set SY0CM001 initial; /* clear map*/
      SY0CM001.SYMCURDT = SY0CW01.SYMCURDT;
      SY0CM001.XGPCD = SY0CW01.XGPCD;
      SY0CM001.XGPABRV = SY0CW01.XGPABRV;
      goto SY0C005;
    end
    if (converseVar.validationMsgNum > 0) /* if errors*/
      goto SY0C015; /* redisplay map with errors*/
    end
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf12)
      goto SY0C020; /* validate style numbers*/
    end
    converseLib.validationFailed(19); /* invalid pf key*/
    goto SY0C015; /* redisplay map with errors*/

    SY0C020: SY0C020();


    if (converseVar.validationMsgNum > 0)
      goto SY0C015; /* redisplay map with errors*/
    else
      if (converseVar.eventKey is enter) /* file update successful*/
        goto SY0C025;
      else
        goto SY0C015;
      end
    end


    SY0C025: SY0C025();

    if (converseVar.validationMsgNum > 0)
      goto SY0C015; /* redisplay map with errors*/
    else
      if (SY0CW01.SY0CWSUF == "Y") /* something updated*/
        converseLib.validationFailed(11); /* file update successful*/
      else
        converseLib.validationFailed(57); /* no changes made*/
      end
      if (SY0CW01.SY0CWSW1 == "Y")
        goto SY0C015;
      else
        set SY0CM001 initial; /* reset map*/
        SY0CM001.SYMCURDT = VGVar.currentShortGregorianDate;
        SY0CM001.XGPCD = SY0CW01.XGPCD;
        SY0CM001.XGPABRV = SY0CW01.XGPABRV;
        SY0CM001.XBCCD = SY0CW01.XBCCD;
        SY0CM001.XBCDESC = SY0CW01.XBCDESC;
        goto SY0C005;
      end
    end


  end // end main
end // end SY0C

// verify application entry
Function SY0C001()

  XSENTRY(); /* check security*/

  XSSEGTR(); /* set segmented transaction id*/

  converseLib.clearScreen();
  set SY0CM001 initial; /* clear map*/
  set SY0CM005 initial; /* clear map*/
  set SY0CM010 initial; /* clear map*/
  set SY0CW01 empty;
  set SY0CW02 empty;
  set SY0CW03 empty;
  set SY0CW04 empty;
  SY0CW01.SY0CWML1 = 13; /* set maximum lines map 1*/
  SY0CW01.SY0CWML2 = 9; /* set maximum lines map 5*/

  SY0CM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0CM005.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0CM010.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0CM001.XGPCD = COMMAREA.XGPCD; /* save default prod class*/

  if (SY0CM001.XGPCD == "  ")
    converseLib.validationFailed(102); /* please enter gpc code*/
    set SY0CM001.XGPCD cursor, bold;
  end

  if (SY0CM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized*/
      set SY0CM001.XGPCD cursor, bold;
    end
  else
    if (SY0CM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized*/
        set SY0CM001.XGPCD cursor, bold;
      end
    end
  end

  if (SY0CM001.XGPCD in XGPTBL.XGPCD)
    SY0CM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end
  SY0CW01.XGPABRV = SY0CM001.XGPABRV;

  set SY1REC empty; /* clear records*/
  set SY2REC empty;
  set SY4REC empty;
  set SYAREC empty;
  set SY9REC empty;
  set SYDREC empty;
  set SWPREC empty;
  set PKLREC empty;
  set PKNREC empty;
  set TA1REC empty;
  set TA2REC empty;

  TA2REC.TA2DTOPT = "GETDATE";

  SY0CSAA(); /* call date routine*/

  SY0CW02.ZZZSDT = TA2REC.TA2GRGGN;
  SY0CW02.ZZZCHGDT = TA2REC.TA2GRGGN;
  SY0CW02.ZZZCHGTM = TA2REC.TA2TIMHM;


end // end SY0C001

// accept style numbers
Function SY0C005()

  SY0CM001.SYMPRONM = "SY0C005";

  SY0CSAK(); /* protect screen*/

  converse SY0CM001 ;


  SY0CW01.XGPCD = SY0CM001.XGPCD;

  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf12
   || converseVar.eventKey is enter)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "SY0N";
      XSEXIT();
    else
      exit stack;
    end
    exit stack;
  end

  SY0CSAB(); /* clear error messages/reset screen*/

  SY0CSAC(); /* check for fast path*/

  SY0CSAD(); /* validate pf keys*/

  SY0CSAE(); /* edit user input*/


end // end SY0C005

// verify style numbers
Function SY0C010()


  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWML1;

  while (SY0CW01.SY0CWCT1 > 0)
    SY0CSAF(); /* read style table*/
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 - 1;
  end

   /* now check for duplicate style numbers*/
  SY0CW01.SY0CWCT1 = 1;
  while (SY0CW01.SY0CWCT1 <= SY0CW01.SY0CWML1)
    if (SY0CM001.SY1STNBR[SY0CWCT1] != " ") /* not spaces*/
      SY0CW01.SY0CWCT2 = 1;
      while (SY0CW01.SY0CWCT2 <= SY0CW01.SY0CWML1)
        if (SY0CW01.SY0CWCT1 != SY0CW01.SY0CWCT2
         && SY0CM001.SY1STNBR[SY0CWCT1] == SY0CM001.SY1STNBR[SY0CWCT2])
          converseLib.validationFailed(4); /* style allready exists*/
          SY0CM001.SYMSCMSG = "   Please erase the duplicate Numbers";
          set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
        end
        SY0CW01.SY0CWCT2 = SY0CW01.SY0CWCT2 + 1;
      end
    end
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 + 1;
  end

  if (converseVar.validationMsgNum == 0)
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWML1;
    while (SY0CW01.SY0CWCT1 > 0)
      SY0CSAG(); /* reset map attributes*/
      SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 - 1;
    end
  end

end // end SY0C010

// accept avg wt/units per case
Function SY0C015()

  SY0CM001.SYMPRONM = "SY0C015";

  set SY0CM001.XGPCD skip;


  converse SY0CM001 ;


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf12)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "SY0N";
      XSEXIT();
    else
      exit stack;
    end
    exit stack;
  end

  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWML1;
  while (SY0CW01.SY0CWCT1 > 0)
    SY0CSAG(); /* reset field attributes*/
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 - 1;
  end
  SY0CM001.SYMSCMSG = " "; /* clear error messages/reset map*/
  set SY0CM001.CATOAP normal;

  SY0CSAH(); /* check for fast path*/

  SY0CSAI(); /* validate pf keys*/


end // end SY0C015

// Validate screen fields
Function SY0C020()

  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWML1;

  while (SY0CW01.SY0CWCT1 > 0)
    SY0CSAV(); /* validate line*/
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 - 1;
  end

   /* If user wants to select all, put S in all lines.*/

  if (converseVar.validationMsgNum == 0
   && SY0CM001.SY0CMSEL[1] == "A")
    SY0CW01.SY0CWCT1 = 1;
    while (SY0CW01.SY0CWCT1 <= SY0CW01.SY0CWML1)
      if (SY0CM001.SY1STNBR[SY0CWCT1] != " ")
        SY0CM001.SY0CMSEL[SY0CWCT1] = "S";
      end
      SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 + 1;
    end
  end

end // end SY0C020

// update style table
Function SY0C025()

  TA2REC.TA2DTOPT = "GETDATE";
  SY0CSAA();
  SY0CW02.ZZZSDT = TA2REC.TA2GRGGN;
  SY0CW02.ZZZCHGDT = TA2REC.TA2GRGGN;
  SY0CW02.ZZZCHGTM = TA2REC.TA2TIMHM;

  SY0CW01.SY0CWSW1 = "N";
  SY0CW01.SY0CWSUF = "N";
  SY0CW01.SY0CWCT1 = 1;

  while (SY0CW01.SY0CWCT1 <= SY0CW01.SY0CWML1)
    if (SY0CM001.SY0CMSEL[SY0CWCT1] == "S")
      SY0C100(); /* display detail screen*/
    end
    SY0CSAJ(); /* update style record*/
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 + 1;
  end


end // end SY0C025

// Controlling Process - Map M005
Function SY0C100()

   /* Control process for Map M005.*/

  SY0C105(); /* load temp storage*/
  SY0CW01.SY0CWTNO = 1; /* set to page 1 of temp storage*/
  SY0CW01.SY0CWEOS = "N";
  while (SY0CW01.SY0CWEOS == "N")
    SY0C120(); /* converse map*/
  end

  TA5REC.TA5FNCCD = "P"; /* purge temp storage*/
  SY0CS50();

end // end SY0C100

// Load Temp. Storage
Function SY0C105()

   /* Load Temp. Storage from SWPRECs*/

  if (SY0CW01.SY0CWSWP[SY0CWCT1] == "N") /* we have no records*/
    /* so set-up the style level default record to*/
    /* temp storage area*/
    set SY0CW03 empty;
    SY0CW03.SY0CWEFL[1] = "N";
    SY0CW03.SY0CMACT[1] = "A";
    SY0CW03.SY2CLRID[1] = "***";
    SY0CW03.XDMCD[1] = "**";
    SY0CW03.XWHCD[1] = "**";
    SY0CW03.SY2CLRAB[1] = "Style Default";
    SY0CW03.SY0CMUC1[1] = SY0CM001.SY1UNPCS[SY0CWCT1];
    TA5REC.TA5FNCCD = "N"; /* purge and add new*/
    SY0CS50();
    SY0CW01.SY0CWTNO = 1; /* set current page to 1*/
    SY0CW01.SY0CWTMX = 1; /* set max page to 1*/
    SY0CW01.SY0CWBLD = "Y"; /* set build screen to yes*/
    return; /* and exit*/
  end

  SWPREC.XGPCD = SY0CM001.XGPCD;
  SWPREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  call "IO0090" ("S1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "SY0CSBW  ";
    TA1REC.TA1LOCAT[2] = "IO0090   ";
    TA1REC.TA1LOCAT[3] = "S1       ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM005";
    TA1REC.TA1DBASE = "DSTLOC";
    TA1REC.TA1TBLVU = "VUCASE01";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    return;
  end

  TA5REC.TA5TSQIX = 0;
  TA5REC.TA5FNCCD = "P";
  set SY0CW03 empty;
  SY0CS50(); /* purge any existing temp.*/
  if (converseVar.validationMsgNum != 0) /* had problems*/
    return;
  end

  SY0CW01.SY1STNBR = " ";
  SY0CW01.SY2CLRID = " ";
  SY0CW01.XDMCD = " ";
  SY0CW01.XWHCD = " ";
  SY0CW01.SY0CWEOS = "N";
  SY0CW01.SY0CWTNO = 0;
  SY0CW01.SY0CWTMX = 0;
  SY0CW01.SY0CWCT2 = 0;
  while (SY0CW01.SY0CWEOS == "N")
    SY0CST1();
  end

  call "IO0090" ("C1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "SY0CSBW  ";
    TA1REC.TA1LOCAT[2] = "IO0090   ";
    TA1REC.TA1LOCAT[3] = "C1       ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM005";
    TA1REC.TA1DBASE = "DSTLOC";
    TA1REC.TA1TBLVU = "VUCASE01";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    return;
  end

  SY0CW01.SY0CWTNO = 1; /* set current page to 1*/
  SY0CW01.SY0CWBLD = "Y"; /* set build screen to yes*/

end // end SY0C105

// Converse Map M005
Function SY0C120()

  SY0CM005.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0CM005.SYMPRONM = "SY0C120";
  SY0CM005.XBCDESC = SY0CW01.XBCDESC;

  if (SY0CW01.SY0CWBLD == "Y") /* need to build screen*/
    SY0C121();
    SY0CW01.SY0CWBLD = "N";
  end

  converse SY0CM005 ;

  SY0CS5A(); /* reset screen*/

  SY0CS5B(); /* check fastpath & PF keys*/
  if (converseVar.validationMsgNum != 0 /* had problems*/
   || SY0CW01.SY0CWEOS == "Y")          /* or user wants exit*/
    return;
  end

  if (converseVar.eventKey is pa2) /* screen refresh*/
    SY0CW01.SY0CWBLD = "Y"; /* rebuild screen*/
    SY0CM005.SYMSCMSG = "Screen Refreshed, Please Continue";
    return;
  end

  SY0C125(); /* validate current screen*/

  if (converseVar.eventKey is pf7 /* scroll backward*/
   && converseVar.validationMsgNum == 0)
    if (SY0CW01.SY0CWTNO == 1) /* on first page*/
      converseLib.validationFailed(69); /* cannot scroll backward*/
    else
      SY0CW01.SY0CWTNO = SY0CW01.SY0CWTNO - 1;
      SY0CW01.SY0CWBLD = "Y"; /* set build screen yes*/
    end
  end

  if (converseVar.eventKey is pf8 /* scroll forward*/
   && converseVar.validationMsgNum == 0)
    SY0CSF8(); /* check it out*/
  end

  if (converseVar.eventKey is enter
   && converseVar.validationMsgNum == 0)
    SY0CW01.SY0CW-PF3-SW = "N";
    SY0CW01.SY0CWTNO = 1; /* start on page 1*/
    while (SY0CW01.SY0CWTNO <= SY0CW01.SY0CWTMX
     && converseVar.validationMsgNum == 0)
      SY0C200(); /* process action codes*/
      SY0CW01.SY0CWTNO = SY0CW01.SY0CWTNO + 1;
    end
    if (converseVar.validationMsgNum == 0) /* no problems in updates*/
      if (SY0CW01.SY0CW-PF3-SW == "Y") /* user PRESSED PF3*/
        SY0CW01.SY0CWTNO = 1; /* show first screen*/
        SY0CW01.SY0CWBLD = "Y";
      else
        SY0CW01.SY0CWEOS = "Y";
      end
    else /* we had problems*/
      SY0CW01.SY0CWTNO = SY0CW01.SY0CWTNO - 1;
      SY0CW01.SY0CWBLD = "Y";
    end
  end

  if (converseVar.eventKey is pf12
   && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(131); /* all edits passed*/
  end

end // end SY0C120

// Build Screen M005
Function SY0C121()

   /* Build Map M005 by reading Temp. Storage*/

  SY0CM005.XGPCD = SY0CM001.XGPCD;
  SY0CM005.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  SY0CM005.SY1STYNM = SY0CM001.SY1SSTNM[SY0CWCT1];
  SY0CM005.XUMDESC = SY0CM001.XUMDESC[SY0CWCT1];

  TA5REC.TA5TSQIX = SY0CW01.SY0CWTNO;
  TA5REC.TA5FNCCD = "R";
  set SY0CW03 empty;
  SY0CS50(); /* read temp storage*/
  if (converseVar.validationMsgNum != 0) /* had problems*/
    return;
  end

  move SY0CW03 to SY0CM005 withV60Compat;

   /* if we have data in this line, protect key*/
  SY0CW01.SY0CWCT2 = 1;
  while (SY0CW01.SY0CWCT2 <= SY0CW01.SY0CWML2)
    if (SY0CW03.SY0CWEFL[SY0CWCT2] == "Y") /* we have data*/
      set SY0CM005.SY2CLRID[SY0CWCT2] skip;
      set SY0CM005.XDMCD[SY0CWCT2] skip;
      set SY0CM005.XWHCD[SY0CWCT2] skip;
    else
      if (SY0CM005.SY0CMACT[SY0CWCT2] == "A"
       && SY0CM005.SY2CLRID[SY0CWCT2] == "***"
       && SY0CM005.XDMCD[SY0CWCT2] == "**"
       && SY0CM005.XWHCD[SY0CWCT2] == "**")
        set SY0CM005.SY0CMACT[SY0CWCT2] skip;
        set SY0CM005.SY2CLRID[SY0CWCT2] skip;
        set SY0CM005.XDMCD[SY0CWCT2] skip;
        set SY0CM005.XWHCD[SY0CWCT2] skip;
      else
        set SY0CM005.SY2CLRID[SY0CWCT2] normal;
        set SY0CM005.XDMCD[SY0CWCT2] normal;
        set SY0CM005.XWHCD[SY0CWCT2] normal;
      end
    end
    SY0CW01.SY0CWCT2 = SY0CW01.SY0CWCT2 + 1;
  end

  if (SY0CM005.SY0CMACT[1] == "A"
   && SY0CM005.SY2CLRID[1] == "***"
   && SY0CM005.XDMCD[1] == "**"
   && SY0CM005.XWHCD[1] == "**")
    set SY0CM005.SY0CMUC1[1] cursor;
  else
    set SY0CM005.SY0CMACT[1] cursor;
  end

end // end SY0C121

// Validate Screen M005
Function SY0C125()

  SY0CW01.SY0CWCT2 = SY0CW01.SY0CWML2;
  while (SY0CW01.SY0CWCT2 >= 1)
    SY0CS5C(); /* validate each line*/
    SY0CW01.SY0CWCT2 = SY0CW01.SY0CWCT2 - 1;
  end

  if (converseVar.validationMsgNum != 0 /* validation problems*/
   || converseVar.eventKey is pf12)     /* edit only*/
    return;
  end

   /* Move the screen back to the temp storage*/
   /* record and rewrite temp storage.*/

  move SY0CM005 to SY0CW03 withV60Compat;
  TA5REC.TA5TSQIX = SY0CW01.SY0CWTNO;
  TA5REC.TA5FNCCD = "U";
  SY0CS50();

end // end SY0C125

// Process action codes
Function SY0C200()

   /* If we get here, all validations have passed. So*/
   /* now we pull in the temp storage page and scan for*/
   /* the action codes. On adds and changes transfer to*/
   /* SY0CM010 so the user can add/change the detail data.*/

   /* Get record from temp storage*/
  TA5REC.TA5TSQIX = SY0CW01.SY0CWTNO;
  TA5REC.TA5FNCCD = "R";
  SY0CS50();
  if (converseVar.validationMsgNum != 0)
    return;
  end

  SY0CW01.SY0CWCT2 = 1;
  while (SY0CW01.SY0CWCT2 <= SY0CW01.SY0CWML2
   && converseVar.validationMsgNum == 0)
    if (SY0CW03.SY0CMACT[SY0CWCT2] == "A" /* Add Action*/
     || SY0CW03.SY0CMACT[SY0CWCT2] == "C" /* Change Action*/
     || SY0CW03.SY0CMACT[SY0CWCT2] == "S") /* Select Action*/
      SY0C205(); /* Load map M010*/
      SY0CW01.SY0CW-EOS-M010 = "N";
      while (SY0CW01.SY0CW-EOS-M010 == "N") /* While not end of screen*/
        SY0C230(); /* perform map 010*/
      end
      if (converseVar.validationMsgNum == 0 /* everything is ok*/
       && SY0CW01.SY0CW-EOS-M010 == "Y")   
        SY0CW03.SY0CMACT[SY0CWCT2] = " "; /* so blank action*/
        SY0CW03.SY0CMUC1[SY0CWCT2] = SY0CM010.SY1UNPCS[1];
        SY0CW03.SY0CMUC2[SY0CWCT2] = SY0CM010.SY1UNPCS[2];
        SY0CW03.SY0CMUC3[SY0CWCT2] = SY0CM010.SY1UNPCS[3];
        SY0CW03.SY0CMUC4[SY0CWCT2] = SY0CM010.SY1UNPCS[4];
        SY0CW03.SY0CMUC5[SY0CWCT2] = SY0CM010.SY1UNPCS[5];
        SY0CW03.SY0CMUC6[SY0CWCT2] = SY0CM010.SY1UNPCS[6];
        SY0CW03.SY0CMUC7[SY0CWCT2] = SY0CM010.SY1UNPCS[7];
        SY0CW03.SY0CMUC8[SY0CWCT2] = SY0CM010.SY1UNPCS[8];
      end
    else
      if (SY0CW03.SY0CMACT[SY0CWCT2] == "D") /* Delete*/
        SY0C251(); /* delete rows*/
        if (converseVar.validationMsgNum == 0) /* everything is ok*/
          SY0CW03.SY0CW3AY[SY0CWCT2] = " "; /* so blank array*/
          SY0CW03.SY0CMUC1[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC2[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC3[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC4[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC5[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC6[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC7[SY0CWCT2] = 0;
          SY0CW03.SY0CMUC8[SY0CWCT2] = 0;
        end
      end
    end
    SY0CW01.SY0CWCT2 = SY0CW01.SY0CWCT2 + 1;
  end

   /* Move the screen back to the temp storage*/
   /* record and rewrite temp storage.*/

  TA5REC.TA5TSQIX = SY0CW01.SY0CWTNO;
  TA5REC.TA5FNCCD = "U";
  SY0CS50();

end // end SY0C200

// Load data to Map M010
Function SY0C205()

   /* Build screen M010*/

  set SY0CW04 empty;

  set SY0CM010 initial;
  SY0CM010.XGPCD = SY0CM005.XGPCD;
  SY0CM010.XGPABRV = SY0CM005.XGPABRV;
  SY0CM010.SY1STNBR = SY0CM005.SY1STNBR;
  SY0CM010.SY1STYNM = SY0CM005.SY1STYNM;
  SY0CM010.XUMDESC = SY0CM005.XUMDESC;
  SY0CM010.SY2CLRID = SY0CW03.SY2CLRID[SY0CWCT2];
  SY0CM010.SY2CLRAB = SY0CW03.SY2CLRAB[SY0CWCT2];
  SY0CM010.XDMCD = SY0CW03.XDMCD[SY0CWCT2];
  SY0CM010.XWHCD = SY0CW03.XWHCD[SY0CWCT2];

  set SWPREC empty; /* Set-up SWPREC for IO Calls*/
  SWPREC.XGPCD = SY0CM010.XGPCD;
  SWPREC.SY1STNBR = SY0CM010.SY1STNBR;
  SWPREC.SY2CLRID = SY0CM010.SY2CLRID;
  SWPREC.XDMCD = SY0CM010.XDMCD;
  SWPREC.XWHCD = SY0CM010.XWHCD;

  if (SY0CM001.XBCCD == "  ")
   /* TT14997 changes begin*/
    SY1REC.XGPCD = SY0CM010.XGPCD;
    SY1REC.SY1STNBR = SY0CM010.SY1STNBR;
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes}; /* product style*/
   /* TT14997 changes end*/
    if (SY1REC.SY4SZSCL != SY4REC.SY4SZSCL)
      SY0CSY4();
    end
  else
    if (PKNREC.SY4SZSCL != SY4REC.SY4SZSCL) /* need to get scale*/
      SY0CSY4();
    end
  end

   /* Now set-up existance flags*/
  if (SY0CW01.SY0CWSWP[SY0CWCT1] == "N") /* no swp recs*/
    SY0CM010.SY1UNPCS[1] = SY0CM001.SY1UNPCS[SY0CWCT1];
    SY0CM010.SWPMNCP1[1] = SY0CM001.SWPMNCP[SY0CWCT1];
    SY0CM010.SWPMXCP1[1] = SY0CM001.SWPMXCP[SY0CWCT1];
    SY0CW04.SY0CW-EXISTS[1] = "N";
    SY0CW04.SY0CW-EXISTS[2] = "N";
    SY0CW04.SY0CW-EXISTS[3] = "N";
    SY0CW04.SY0CW-EXISTS[4] = "N";
    SY0CW04.SY0CW-EXISTS[5] = "N";
    SY0CW04.SY0CW-EXISTS[6] = "N";
    SY0CW04.SY0CW-EXISTS[7] = "N";
    SY0CW04.SY0CW-EXISTS[8] = "N";
  else
    if (SY0CW03.SY0CMUC1[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[1] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[1] = "N";
    end
    if (SY0CW03.SY0CMUC2[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[2] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[2] = "N";
    end
    if (SY0CW03.SY0CMUC3[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[3] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[3] = "N";
    end
    if (SY0CW03.SY0CMUC4[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[4] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[4] = "N";
    end
    if (SY0CW03.SY0CMUC5[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[5] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[5] = "N";
    end
    if (SY0CW03.SY0CMUC6[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[6] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[6] = "N";
    end
    if (SY0CW03.SY0CMUC7[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[7] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[7] = "N";
    end
    if (SY0CW03.SY0CMUC8[SY0CWCT2] != 0)
      SY0CW04.SY0CW-EXISTS[8] = "Y";
    else
      SY0CW04.SY0CW-EXISTS[8] = "N";
    end
  end

   /* Now that we have the flags set-up, we can process the*/
   /* rest of it in a WHILE loop.*/

  SY0CW01.SY0CWCT3 = 1;
  while (SY0CW01.SY0CWCT3 <= 8)
    if (SY0CW04.SY0CW-EXISTS[SY0CWCT3] == "Y")
      SWPREC.XXX-REC-SEQ-NBR = SY0CW01.SY0CWCT3;
      SY0CSWP(); /* go and get row*/
      SY0CW04.SWPDATA[SY0CWCT3] = SWPREC.SWPDATA;
      SY0CM010.SY1UNPCS[SY0CWCT3] = SWPREC.SY1UNPCS;
      if (SWPREC.SWPMNSZ != 0)
        SY0CW01.SY0CWCT4 = SWPREC.SWPMNSZ;
        SY0CM010.SY0CMFSZ[SY0CWCT3] = SY4REC.SY4IDDSC[SY0CWCT4];
        SY0CW04.SY0CW-FSZ-DESC[SY0CWCT3] = SY4REC.SY4IDDSC[SY0CWCT4];
      end
      if (SWPREC.SWPMXSZ != 0)
        SY0CW01.SY0CWCT4 = SWPREC.SWPMXSZ;
        SY0CM010.SY0CMTSZ[SY0CWCT3] = SY4REC.SY4IDDSC[SY0CWCT4];
        SY0CW04.SY0CW-TSZ-DESC[SY0CWCT3] = SY4REC.SY4IDDSC[SY0CWCT4];
      end
      SY0CM010.PKLCTNCD[SY0CWCT3] = SWPREC.PKLCTNCD;
      SY0CM010.SWPMNCP1[SY0CWCT3] = SWPREC.SWPMNCP[1];
      SY0CM010.SWPMXCP1[SY0CWCT3] = SWPREC.SWPMXCP[1];
      SY0CM010.SWPMNCP2[SY0CWCT3] = SWPREC.SWPMNCP[2];
      SY0CM010.SWPMXCP2[SY0CWCT3] = SWPREC.SWPMXCP[2];
      SY0CM010.SWPMNCP3[SY0CWCT3] = SWPREC.SWPMNCP[3];
      SY0CM010.SWPMXCP3[SY0CWCT3] = SWPREC.SWPMXCP[3];
      SY0CM010.SWPMNCP4[SY0CWCT3] = SWPREC.SWPMNCP[4];
      SY0CM010.SWPMXCP4[SY0CWCT3] = SWPREC.SWPMXCP[4];
    end
    SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
  end

end // end SY0C205

// Converse Map M010
Function SY0C230()

  SY0CM010.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0CM010.SYMPRONM = "SY0C130";
  SY0CM010.XBCDESC = SY0CW01.XBCDESC;
  if (SY0CW03.SY0CMACT[SY0CWCT2] == "A")
    SY0CM010.SY0CM-ADD-CHG = "Add";
  else
    SY0CM010.SY0CM-ADD-CHG = "Change";
  end

  converse SY0CM010 ;

  SY0CS-10A(); /* reset screen*/

  SY0CS-10B(); /* check fastpath & PF keys*/

  if (converseVar.validationMsgNum != 0 /* had problems*/
   || SY0CW01.SY0CW-EOS-M010 != "N")    /* or user wants out*/
    return;
  end

  if (converseVar.eventKey is pa2) /* screen refresh*/
    converseLib.clearScreen();
    
    return;
  end

  SY0C235(); /* validate current screen*/

  if (converseVar.validationMsgNum == 0) /* no validation errors*/
    if (converseVar.eventKey is pf12)
      converseLib.validationFailed(131); /* all edits passed*/
      set SY0CM010.SY1UNPCS[1] cursor;
    else
      SY0C250(); /* go update the data*/
      if (converseVar.validationMsgNum == 0) /* no update errors*/
        SY0CW01.SY0CW-EOS-M010 = "Y"; /* done with screen*/
      end
    end
  end

end // end SY0C230

// Validate Fields - Map M010
Function SY0C235()

   /* This screen will validate all fields on map M010*/

  SY0CW01.SY0CWCT3 = 8;
  while (SY0CW01.SY0CWCT3 >= 1)
    SY0CS-10V(); /* /Validate line item*/
    SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 - 1;
  end
  if (converseVar.validationMsgNum != 0) /* If errors in validation*/
    return; /* Cannot continue with edit below*/
  end

   /* Now validate that we have no overlapping size ranges.*/

  SY0CW01.SY0CWCT3 = 1;
  while (SY0CW01.SY0CWCT3 <= 8)
    if (SY0CW04.SWPMNSZ[SY0CWCT3] != 0
     && SY0CW04.SWPMXSZ[SY0CWCT3] != 0)
      SY0CW01.SY0CWCT4 = 1;
      while (SY0CW01.SY0CWCT4 <= 8)
        if (SY0CW04.SWPMNSZ[SY0CWCT4] != 0
         && SY0CW04.SWPMXSZ[SY0CWCT4] != 0)
          if (SY0CW04.SWPMNSZ[SY0CWCT4] == SY0CW04.SWPMNSZ[SY0CWCT3]
           && SY0CW04.SWPMXSZ[SY0CWCT4] == SY0CW04.SWPMXSZ[SY0CWCT3])
            /* (NEXT SENTENCE)*/
          else
            if (SY0CW04.SWPMNSZ[SY0CWCT3] >= SY0CW04.SWPMNSZ[SY0CWCT4]
             && SY0CW04.SWPMNSZ[SY0CWCT3] <= SY0CW04.SWPMXSZ[SY0CWCT4])
              converseLib.validationFailed(185); /* Size Range Overlap Detected*/
              set SY0CM010.SY0CMTSZ[SY0CWCT3] bold;
              set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
              return;
            end
            if (SY0CW04.SWPMXSZ[SY0CWCT3] >= SY0CW04.SWPMNSZ[SY0CWCT4]
             && SY0CW04.SWPMXSZ[SY0CWCT3] <= SY0CW04.SWPMXSZ[SY0CWCT4])
              converseLib.validationFailed(185); /* Size Range Overlap Detected*/
              set SY0CM010.SY0CMTSZ[SY0CWCT3] bold;
              set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
              return;
            end
          end
        end
        SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
      end
    end
    SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
  end

   /* No errors, sort and compress screen to top*/

  SY0CS-SORT();

   /* now check that user entered something*/
  if (SY0CM010.SY1UNPCS[1] == 0)
    converseLib.validationFailed(40); /* required field*/
    set SY0CM010.SY1UNPCS[1] cursor, bold;
  end

end // end SY0C235

// Update UCASE & VSTYLE Rows
Function SY0C250()

   /* Update UCASE and VSTYLE Rows*/

  SY0CW01.SY0CWCT3 = 1;
  while (SY0CW01.SY0CWCT3 <= 8
   && converseVar.validationMsgNum == 0)
    if (SY0CW03.SY0CMACT[SY0CWCT2] == "A" /* add record*/
     && SY0CM010.SY1UNPCS[SY0CWCT3] != 0)
      SY0CSUA();
      SY0CW01.SY0CWSUF = "Y";
    end
    if (SY0CW03.SY0CMACT[SY0CWCT2] == "C" /* change record*/
     || SY0CW03.SY0CMACT[SY0CWCT2] == "S")
      SY0CSUC();
    end
      /* check if this is the default style row, and update*/
      /* data to vstyle if needed*/
    if (SY0CW03.SY2CLRID[SY0CWCT2] == "***"
     && SY0CW03.XDMCD[SY0CWCT2] == "**"
     && SY0CW03.XWHCD[SY0CWCT2] == "**"
     && SY0CW01.SY0CWCT3 == 1
     && SY0CM001.XBCCD == " ")
      SY0CSBD(); /* get style record*/
      if (converseVar.validationMsgNum != 0)
        return;
      end
      if (SY1REC.SY1AVEWT != SY0CM001.SY1AVEWT[SY0CWCT1]
       || SY1REC.SY1UNPCS != SY0CM010.SY1UNPCS[SY0CWCT3])
        SY0CM001.SY1UNPCS[SY0CWCT1] = SY0CM010.SY1UNPCS[SY0CWCT3];
        SY0CSBE(); /* update vstyle row*/
        SY0CW01.SY0CWSUF = "Y";
      end
    end
    SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
  end

  if (SY0CW01.SY0CWSUF == "Y") /* We've updated something*/
    SY0CW01.SY0CWSWP[SY0CWCT1] = "M";
  end

end // end SY0C250

// Delete UCASE Rows
Function SY0C251()

   /* Process Deletes to UCASE Rows*/

  SY0CW01.SY0CWCT3 = 1;
  while (SY0CW01.SY0CWCT3 <= 8
   && converseVar.validationMsgNum == 0)
    SY0CSUD();
    SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
  end

  SY0CW01.SY0CWSUF = "Y";
  SY0CW03.SY0CWEFL[SY0CWCT3] = "N";
  SY0CM005.SY0CMACT[SY0CWCT3] = " ";
  SY0CM005.SY2CLRID[SY0CWCT3] = " ";
  SY0CM005.XDMCD[SY0CWCT3] = " ";
  SY0CM005.SY2CLRAB[SY0CWCT3] = " ";
  SY0CM005.XWHCD[SY0CWCT3] = " ";
  SY0CM005.SY0CMUC1[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC2[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC3[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC4[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC5[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC6[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC7[SY0CWCT3] = 0;
  SY0CM005.SY0CMUC8[SY0CWCT3] = 0;

end // end SY0C251

// Reset Screen Attrib. Map M010
Function SY0CS-10A()

   /* Reset screen attrib. Map SY0CM010*/

  SY0CW01.SY0CWCT3 = 1;
  while (SY0CW01.SY0CWCT3 <= 8)
    set SY0CM010.SY1UNPCS[SY0CWCT3] normal;
    set SY0CM010.SY0CMFSZ[SY0CWCT3] normal;
    set SY0CM010.SY0CMTSZ[SY0CWCT3] normal;
    set SY0CM010.PKLCTNCD[SY0CWCT3] normal;
    set SY0CM010.SWPMNCP1[SY0CWCT3] normal;
    set SY0CM010.SWPMXCP1[SY0CWCT3] normal;
    set SY0CM010.SWPMNCP2[SY0CWCT3] normal;
    set SY0CM010.SWPMXCP2[SY0CWCT3] normal;
    set SY0CM010.SWPMNCP3[SY0CWCT3] normal;
    set SY0CM010.SWPMXCP3[SY0CWCT3] normal;
    set SY0CM010.SWPMNCP4[SY0CWCT3] normal;
    set SY0CM010.SWPMXCP4[SY0CWCT3] normal;
    SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
  end

  set SY0CM010.CATOAP normal;
  set SY0CM010.CAITEM normal;

end // end SY0CS-10A

// Check Fastpath & PF Keys-M010
Function SY0CS-10B()

   /* Check Fastpath and PF Keys for Map SY0CM010*/

  if (converseVar.eventKey is enter)
    if (SY0CM010.CATOAP != " ")
      TA5REC.TA5FNCCD = "P"; /* purge temp. storage*/
      SY0CS50();
  /*    MOVE SY0CM010 TO COMMAREA;*/
      COMMAREA.CATOAP = SY0CM010.CATOAP;
      COMMAREA.CAITEM = SY0CM010.CAITEM;
      XSEXIT();
      SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
      set SY0CM010 alarm;
      set SY0CM010.CATOAP cursor, bold;
    end
    return;
  end

  if (converseVar.eventKey is pf1)
    TA5REC.TA5FNCCD = "P"; /* purge temp. storage*/
    SY0CS50();
    XSPF1(); /* transfer to help faciltiy*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf4)
    TA5REC.TA5FNCCD = "P"; /* purge temp. storage*/
    SY0CS50();
    XSPF4(); /* return to main menu*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3) /* exit screen*/
    SY0CW01.SY0CW-EOS-M010 = "C";
    SY0CW01.SY0CW-PF3-SW = "Y";
    return;
  end

  if (converseVar.eventKey is pf12
   || converseVar.eventKey is pa2)
    return;
  end

  converseLib.validationFailed(19); /* invalid PF Key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
  end

end // end SY0CS-10B

// Validate Units/Min/Max Data
Function SY0CS-10V()

  if (SY0CM010.SY1UNPCS[SY0CWCT3] == 0)
    if (SY0CM010.SWPMNCP4[SY0CWCT3] != 0
     || SY0CM010.SWPMXCP4[SY0CWCT3] != 0
     || SY0CM010.SWPMNCP3[SY0CWCT3] != 0
     || SY0CM010.SWPMXCP3[SY0CWCT3] != 0
     || SY0CM010.SWPMNCP2[SY0CWCT3] != 0
     || SY0CM010.SWPMXCP2[SY0CWCT3] != 0
     || SY0CM010.SWPMNCP1[SY0CWCT3] != 0
     || SY0CM010.SWPMXCP1[SY0CWCT3] != 0
     || SY0CM010.PKLCTNCD[SY0CWCT3] != " "
     || SY0CM010.SY0CMTSZ[SY0CWCT3] != " "
     || SY0CM010.SY0CMFSZ[SY0CWCT3] != " ")
      converseLib.validationFailed(40); /* required field*/
      set SY0CM010.SY1UNPCS[SY0CWCT3] cursor, bold;
    else
      return; /* No data on this line*/
    end
  else
    if (SY0CM010.SWPMNCP4[SY0CWCT3] > SY0CM010.SWPMXCP4[SY0CWCT3])
      converseLib.validationFailed(165); /* maximum < minumum*/
      set SY0CM010.SWPMXCP4[SY0CWCT3] bold;
      set SY0CM010.SWPMNCP4[SY0CWCT3] cursor, bold;
    else
      if (SY0CM010.SWPMNCP4[SY0CWCT3] == 0
       && SY0CM010.SWPMXCP4[SY0CWCT3] != 0)
        converseLib.validationFailed(156); /* Number must be non-zero*/
        set SY0CM010.SWPMNCP4[SY0CWCT3] cursor, bold;
      end
    end
    if (SY0CM010.SWPMNCP3[SY0CWCT3] > SY0CM010.SWPMXCP3[SY0CWCT3])
      converseLib.validationFailed(165); /* maximum < minumum*/
      set SY0CM010.SWPMXCP3[SY0CWCT3] bold;
      set SY0CM010.SWPMNCP3[SY0CWCT3] cursor, bold;
    else
      if (SY0CM010.SWPMNCP3[SY0CWCT3] == 0
       && SY0CM010.SWPMXCP3[SY0CWCT3] != 0)
        converseLib.validationFailed(156); /* Number must be non-zero*/
        set SY0CM010.SWPMNCP3[SY0CWCT3] cursor, bold;
      end
    end
    if (SY0CM010.SWPMNCP2[SY0CWCT3] > SY0CM010.SWPMXCP2[SY0CWCT3])
      converseLib.validationFailed(165); /* maximum < minumum*/
      set SY0CM010.SWPMXCP2[SY0CWCT3] bold;
      set SY0CM010.SWPMNCP2[SY0CWCT3] cursor, bold;
    else
      if (SY0CM010.SWPMNCP2[SY0CWCT3] == 0
       && SY0CM010.SWPMXCP2[SY0CWCT3] != 0)
        converseLib.validationFailed(156); /* Number must be non-zero*/
        set SY0CM010.SWPMNCP2[SY0CWCT3] cursor, bold;
      end
    end
    if (SY0CM010.SWPMNCP1[SY0CWCT3] > SY0CM010.SWPMXCP1[SY0CWCT3])
      converseLib.validationFailed(165); /* maximum < minumum*/
      set SY0CM010.SWPMXCP1[SY0CWCT3] bold;
      set SY0CM010.SWPMNCP1[SY0CWCT3] cursor, bold;
    else
      if (SY0CM010.SWPMNCP1[SY0CWCT3] == 0
       && SY0CM010.SWPMXCP1[SY0CWCT3] != 0)
        converseLib.validationFailed(156); /* Number must be non-zero*/
        set SY0CM010.SWPMNCP1[SY0CWCT3] cursor, bold;
      end
    end
  end

  if (SY0CM010.SY0CMTSZ[SY0CWCT3] == " "
   && SY0CM010.SY0CMFSZ[SY0CWCT3] != " ")
    converseLib.validationFailed(182); /* Must enter both from and to range*/
    set SY0CM010.SY0CMTSZ[SY0CWCT3] cursor, bold;
  else
    if (SY0CM010.SY0CMFSZ[SY0CWCT3] == " "
     && SY0CM010.SY0CMTSZ[SY0CWCT3] != " ")
      converseLib.validationFailed(182); /* Must enter both from and to range*/
      set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
    end
  end

   /* Carton Code required fieldfor footwear*/
  if (SY0CM010.SY2CLRID == "***" /* If default style rec*/
   && SY0CM010.XDMCD == "**"     
   && SY0CM010.XWHCD == "**")   
    if (SY0CM010.SY0CMFSZ[SY0CWCT3] != " " /* Size Range entered*/
     || SY0CM010.SY0CMTSZ[SY0CWCT3] != " ")
      if (SY0CM010.XGPCD != "03" /* If not apparel product*/
       && SY0CM010.PKLCTNCD[SY0CWCT3] == " ")
        converseLib.validationFailed(40); /* Required field*/
        set SY0CM010.PKLCTNCD[SY0CWCT3] cursor, bold;
        return;
      end
    else /* Size Range not entered*/
      if (SY0CM010.PKLCTNCD[SY0CWCT3] != " ")
        converseLib.validationFailed(187); /* Carton must be blank for zero size range*/
        set SY0CM010.PKLCTNCD[SY0CWCT3] cursor, bold;
        return;
      end
    end
  else
    if (SY0CM010.SY0CMFSZ[SY0CWCT3] == " " /* Size Range is invalid*/
     && SY0CM010.SY0CMTSZ[SY0CWCT3] == " ")
      converseLib.validationFailed(40); /* Size range is required*/
      set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
      set SY0CM010.SY0CMTSZ[SY0CWCT3] bold;
      return;
    else
      if (SY0CM010.XGPCD != "03" /* If not apparel product*/
       && SY0CM010.PKLCTNCD[SY0CWCT3] == " ")
        converseLib.validationFailed(40); /* Required field*/
        set SY0CM010.PKLCTNCD[SY0CWCT3] cursor, bold;
        return;
      end
    end
  end

   /* Validate Carton Code*/
  if (SY0CM010.PKLCTNCD[SY0CWCT3] != " ")
    PKLREC.PKLCTNCD = SY0CM010.PKLCTNCD[SY0CWCT3];
    PKLREC.XXXSTAT = "A";
    call "IO4730" ("S ", SQLCA, PKLREC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 100) /* Code not found*/
      converseLib.validationFailed(3); /* Invalid code*/
      set SY0CM010.PKLCTNCD[SY0CWCT3] cursor, bold;
    else
      if (SQLCA.VAGen_SQLCODE != 0) /* Table problems*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY0C   ";
        TA1REC.TA1LOCAT[1] = "SELECT   ";
        TA1REC.TA1LOCAT[2] = "SY0CS-V10";
        TA1REC.TA1LOCAT[3] = "IO4730   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY0CM010";
        TA1REC.TA1DBASE = "DPICK ";
        TA1REC.TA1TBLVU = "VCRTN001";
        TA1TBLKE = PKLREC.PKLKEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(23); /* table error*/
        set SY0CM010.PKLCTNCD[SY0CWCT3] cursor, bold;
        return;
      end
    end
  end

  SY0CS-VAL-SZ-RANGE(); /* go and validate range*/

end // end SY0CS-10V

// Validate Units/Min/Max Data
Function SY0CS-SORT()

   /* Sort screen*/

  set SY0CW05 empty;

   /* Load work table*/
  SY0CW01.SY0CWCT4 = 1;
  while (SY0CW01.SY0CWCT4 <= 8)
    if (SY0CM010.SY1UNPCS[SY0CWCT4] == 0) /* no data*/
      SY0CW05.SY0CW-W05-SZID[SY0CWCT4] = 99;
      SY0CW05.SY0CW-SEQ-NBR[SY0CWCT4] = 99;
    else
      SY0CW05.SY0CW-W05-SZID[SY0CWCT4] = SY0CW04.SWPMNSZ[SY0CWCT4];
      SY0CW05.SY0CW-SEQ-NBR[SY0CWCT4] = SY0CW01.SY0CWCT4;
    end
    SY0CW05.SY1UNPCS[SY0CWCT4] = SY0CM010.SY1UNPCS[SY0CWCT4];
    SY0CW05.SY0CW-FSZ-DESC[SY0CWCT4] = SY0CM010.SY0CMFSZ[SY0CWCT4];
    SY0CW05.SWPMNSZ[SY0CWCT4] = SY0CW04.SWPMNSZ[SY0CWCT4];
    SY0CW05.SY0CW-TSZ-DESC[SY0CWCT4] = SY0CM010.SY0CMTSZ[SY0CWCT4];
    SY0CW05.SWPMXSZ[SY0CWCT4] = SY0CW04.SWPMXSZ[SY0CWCT4];
    SY0CW05.PKLCTNCD[SY0CWCT4] = SY0CM010.PKLCTNCD[SY0CWCT4];
    SY0CW05.SWPMNCP1[SY0CWCT4] = SY0CM010.SWPMNCP1[SY0CWCT4];
    SY0CW05.SWPMXCP1[SY0CWCT4] = SY0CM010.SWPMXCP1[SY0CWCT4];
    SY0CW05.SWPMNCP2[SY0CWCT4] = SY0CM010.SWPMNCP2[SY0CWCT4];
    SY0CW05.SWPMXCP2[SY0CWCT4] = SY0CM010.SWPMXCP2[SY0CWCT4];
    SY0CW05.SWPMNCP3[SY0CWCT4] = SY0CM010.SWPMNCP3[SY0CWCT4];
    SY0CW05.SWPMXCP3[SY0CWCT4] = SY0CM010.SWPMXCP3[SY0CWCT4];
    SY0CW05.SWPMNCP4[SY0CWCT4] = SY0CM010.SWPMNCP4[SY0CWCT4];
    SY0CW05.SWPMXCP4[SY0CWCT4] = SY0CM010.SWPMXCP4[SY0CWCT4];
    SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
  end

   /* Now sort the table*/

  SY0CW01.SY0CWSSW = "N"; /* sort done switch*/
  while (SY0CW01.SY0CWSSW == "N")
    SY0CW01.SY0CWSSW = "Y";
    SY0CW01.SY0CWCT3 = 1;
    SY0CW01.SY0CWCT4 = 2;
    while (SY0CW01.SY0CWCT4 <= 8) /* scan for empty row*/
      if (SY0CW05.SY0CW-W05-KEY[SY0CWCT3] > 
      SY0CW05.SY0CW-W05-KEY[SY0CWCT4])
        SY0CW05.SY0CW-W05-ARRAY[9] = SY0CW05.SY0CW-W05-ARRAY[SY0CWCT4];
        SY0CW05.SY0CW-W05-ARRAY[SY0CWCT4] = SY0CW05.SY0CW-W05-ARRAY[SY0CWCT3];
        SY0CW05.SY0CW-W05-ARRAY[SY0CWCT3] = SY0CW05.SY0CW-W05-ARRAY[9];
        SY0CW01.SY0CWSSW = "N";
      end
      SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
      SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
    end
  end

   /* Now move the table back to the screen and W04 Records.*/

  SY0CW01.SY0CWCT4 = 1;
  while (SY0CW01.SY0CWCT4 <= 8)
    SY0CM010.SY1UNPCS[SY0CWCT4] = SY0CW05.SY1UNPCS[SY0CWCT4];
    SY0CM010.SY0CMFSZ[SY0CWCT4] = SY0CW05.SY0CW-FSZ-DESC[SY0CWCT4];
    SY0CW04.SY0CW-FSZ-DESC[SY0CWCT4] = SY0CW05.SY0CW-FSZ-DESC[SY0CWCT4];
    SY0CW04.SWPMNSZ[SY0CWCT4] = SY0CW05.SWPMNSZ[SY0CWCT4];
    SY0CM010.SY0CMTSZ[SY0CWCT4] = SY0CW05.SY0CW-TSZ-DESC[SY0CWCT4];
    SY0CW04.SY0CW-TSZ-DESC[SY0CWCT4] = SY0CW05.SY0CW-TSZ-DESC[SY0CWCT4];
    SY0CW04.SWPMXSZ[SY0CWCT4] = SY0CW05.SWPMXSZ[SY0CWCT4];
    SY0CM010.PKLCTNCD[SY0CWCT4] = SY0CW05.PKLCTNCD[SY0CWCT4];
    SY0CM010.SWPMNCP1[SY0CWCT4] = SY0CW05.SWPMNCP1[SY0CWCT4];
    SY0CM010.SWPMXCP1[SY0CWCT4] = SY0CW05.SWPMXCP1[SY0CWCT4];
    SY0CM010.SWPMNCP2[SY0CWCT4] = SY0CW05.SWPMNCP2[SY0CWCT4];
    SY0CM010.SWPMXCP2[SY0CWCT4] = SY0CW05.SWPMXCP2[SY0CWCT4];
    SY0CM010.SWPMNCP3[SY0CWCT4] = SY0CW05.SWPMNCP3[SY0CWCT4];
    SY0CM010.SWPMXCP3[SY0CWCT4] = SY0CW05.SWPMXCP3[SY0CWCT4];
    SY0CM010.SWPMNCP4[SY0CWCT4] = SY0CW05.SWPMNCP4[SY0CWCT4];
    SY0CM010.SWPMXCP4[SY0CWCT4] = SY0CW05.SWPMXCP4[SY0CWCT4];
    SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
  end

end // end SY0CS-SORT

// Validate From/To Size Range
Function SY0CS-VAL-SZ-RANGE()

  if (SY0CM010.SY0CMFSZ[SY0CWCT3] != " ") /* we have something*/
    SY0CW01.SY0CWCT4 = 1;
    SY0CW04.SY0CW-SZ-FOUND = "N";
    while (SY0CW01.SY0CWCT4 <= 40
     && SY0CW04.SY0CW-SZ-FOUND == "N")
      if (SY0CM010.SY0CMFSZ[SY0CWCT3] == SY4REC.SY4IDDSC[SY0CWCT4])
        SY0CW04.SY0CW-SZ-FOUND = "Y";
        SY0CW04.SWPMNSZ[SY0CWCT3] = SY0CW01.SY0CWCT4;
      else
        SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
      end
    end
    if (SY0CW04.SY0CW-SZ-FOUND == "N")
      converseLib.validationFailed(183); /* Size Entered is Invalid*/
      set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
    end
  else /* Size Desc blank, so zero size id*/
    SY0CW04.SWPMNSZ[SY0CWCT3] = 0;
  end

  if (SY0CM010.SY0CMTSZ[SY0CWCT3] != " ") /* we have something*/
    SY0CW01.SY0CWCT4 = 1;
    SY0CW04.SY0CW-SZ-FOUND = "N";
    while (SY0CW01.SY0CWCT4 <= 40
     && SY0CW04.SY0CW-SZ-FOUND == "N")
      if (SY0CM010.SY0CMTSZ[SY0CWCT3] == SY4REC.SY4IDDSC[SY0CWCT4])
        SY0CW04.SY0CW-SZ-FOUND = "Y";
        SY0CW04.SWPMXSZ[SY0CWCT3] = SY0CW01.SY0CWCT4;
      else
        SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
      end
    end
    if (SY0CW04.SY0CW-SZ-FOUND == "N")
      converseLib.validationFailed(183); /* Size Entered is Invalid*/
      set SY0CM010.SY0CMTSZ[SY0CWCT3] cursor, bold;
      return;
    end
  else /* Size Desc blank, so zero size id*/
    SY0CW04.SWPMXSZ[SY0CWCT3] = 0;
  end

  if (SY0CW04.SWPMXSZ[SY0CWCT3] < SY0CW04.SWPMNSZ[SY0CWCT3])
    converseLib.validationFailed(184); /* Maximum size < Minimum size*/
    set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
    set SY0CM010.SY0CMTSZ[SY0CWCT3] bold;
    return;
  end

   /* Now validate that we have no more than 4 occuranges of*/
   /* the same size range (this includes no size range rows).*/
   /* Also check for duplicate units per case for size range.*/

  SY0CW01.SY0CWCT4 = 1;
  SY0CW04.SY0CW-SZ-COUNT = 1;
  while (SY0CW01.SY0CWCT4 <= 8)
    /* Count size ranges*/
    if (SY0CW01.SY0CWCT4 != SY0CW01.SY0CWCT3
     && SY0CM010.SY1UNPCS[SY0CWCT4] != 0
     && SY0CM010.SY0CMFSZ[SY0CWCT4] == 
    SY0CM010.SY0CMFSZ[SY0CWCT3]
     && SY0CM010.SY0CMTSZ[SY0CWCT4] == 
    SY0CM010.SY0CMTSZ[SY0CWCT3])
      SY0CW04.SY0CW-SZ-COUNT = SY0CW04.SY0CW-SZ-COUNT + 1;
      if (SY0CM010.SY1UNPCS[SY0CWCT3] == SY0CM010.SY1UNPCS[SY0CWCT4])
        converseLib.validationFailed(188); /* Duplicate units per case*/
        set SY0CM010.SY1UNPCS[SY0CWCT3] cursor, bold;
      end
    end
    SY0CW01.SY0CWCT4 = SY0CW01.SY0CWCT4 + 1;
  end

   /* Now check the count and display message if needed*/
  if (SY0CM010.XGPCD != "03")
    if (SY0CW04.SY0CW-SZ-COUNT > 4)
      converseLib.validationFailed(186); /* Cannot have more than 4 ranges*/
      set SY0CM010.SY0CMTSZ[SY0CWCT3] bold;
      set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
      return;
    end
  else
    if (SY0CW04.SY0CW-SZ-COUNT > 8)
      converseLib.validationFailed(186); /* Cannot have more than 4 ranges*/
      set SY0CM010.SY0CMTSZ[SY0CWCT3] bold;
      set SY0CM010.SY0CMFSZ[SY0CWCT3] cursor, bold;
      return;
    end
  end

end // end SY0CS-VAL-SZ-RANGE

// Call TA0050 for Temp. Storage
Function SY0CS50()

  TA5REC.TA5APPID = "SY0C";
  TA5REC.TA5RTNCD = 0;
  SY0CW03.SY0CW3LN = 490; /* length of record*/
  call "TA0050" (SY0CW03, TA5REC) {isNoRefresh = yes, isExternal = yes};

  if (TA5REC.TA5RTNCD != 0)
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "SY0CS50  ";
    TA1REC.TA1LOCAT[2] = "TA0050   ";
    TA1REC.TA1LOCAT[3] = " ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM005";
    TAEREC.TAEDESC1 = "BAD RETURN FROM TA0050";
    TAEREC.TAEDESC2 = TA5REC.TA5DATA;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
  end
end // end SY0CS50

// Reset Screen Attrib. Map M005
Function SY0CS5A()

   /* Reset screen attrib. Map SY0CM005*/

  SY0CW01.SY0CWCT2 = 1;
  while (SY0CW01.SY0CWCT2 <= SY0CW01.SY0CWML2)
    set SY0CM005.SY0CMACT[SY0CWCT2] normal;
    if (SY0CW03.SY0CWEFL[SY0CWCT2] != "Y")
      set SY0CM005.SY2CLRID[SY0CWCT2] normal;
      set SY0CM005.XDMCD[SY0CWCT2] normal;
      set SY0CM005.XWHCD[SY0CWCT2] normal;
    end
    SY0CW01.SY0CWCT2 = SY0CW01.SY0CWCT2 + 1;
  end

  set SY0CM005.CATOAP normal;
  set SY0CM005.CAITEM normal;
  SY0CM005.SYMSCMSG = " ";

end // end SY0CS5A

// Check Fastpath & PF Keys-M005
Function SY0CS5B()

   /* Check Fastpath and PF Keys for Map SY0CM005*/

  if (converseVar.eventKey is enter)
    if (SY0CM005.CATOAP != " ")
      TA5REC.TA5FNCCD = "P"; /* purge temp. storage*/
      SY0CS50();
  /*    MOVE SY0CM005 TO COMMAREA;*/
      COMMAREA.CATOAP = SY0CM005.CATOAP;
      COMMAREA.CAITEM = SY0CM005.CAITEM;
      XSEXIT();
      SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
      set SY0CM005 alarm;
      set SY0CM005.CATOAP cursor, bold;
    end
    return;
  end

  if (converseVar.eventKey is pf1)
    TA5REC.TA5FNCCD = "P"; /* purge temp. storage*/
    SY0CS50();
    XSPF1(); /* transfer to help faciltiy*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf4)
    TA5REC.TA5FNCCD = "P"; /* purge temp. storage*/
    SY0CS50();
    XSPF4(); /* return to main menu*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3) /* exit screen*/
    SY0CW01.SY0CWEOS = "Y"; /* set end of screen yes*/
    return;
  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pa2)
    return;
  end

  converseLib.validationFailed(19); /* invalid PF Key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    SY0CM005.SYMSCMSG = "PA Keys Cause Loss of Keyed Data";
    converseLib.clearScreen();
    
  end

end // end SY0CS5B

// Validate Each Line on Map
Function SY0CS5C()

   /* Validate Action Code*/
  if (SY0CM005.SY0CMACT[SY0CWCT2] == "A")
    if (SY0CW03.SY0CWEFL[SY0CWCT2] == "Y") /* bucket in use*/
      converseLib.validationFailed(155);
      set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
    end
  else
    if (SY0CM005.SY0CMACT[SY0CWCT2] == "C"
     || SY0CM005.SY0CMACT[SY0CWCT2] == "S")
      if (SY0CW03.SY0CWEFL[SY0CWCT2] != "Y")
        converseLib.validationFailed(157);
        set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
      end
    else
      if (SY0CM005.SY0CMACT[SY0CWCT2] == "D")
        if (SY0CW03.SY0CWEFL[SY0CWCT2] != "Y")
          converseLib.validationFailed(157);
          set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
        else
          if (SY0CM005.SY2CLRID[SY0CWCT2] == "***"
           && SY0CM005.XDMCD[SY0CWCT2] == "**"
           && SY0CM005.XWHCD[SY0CWCT2] == "**")
            converseLib.validationFailed(166); /* cannot delete style default*/
            set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
          else
            SY0CS5H(); /* check for changes*/
            if (SY0CW01.SY0CWCHF == "Y") /* something changed*/
              converseLib.validationFailed(158);
              set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
            end
          end
        end
      else
        if (SY0CM005.SY0CMACT[SY0CWCT2] != " ")
          converseLib.validationFailed(154);
          set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
        else
          SY0CS5H(); /* check for changes*/
          if (SY0CW01.SY0CWCHF == "Y") /* something changed*/
            converseLib.validationFailed(159);
            set SY0CM005.SY0CMACT[SY0CWCT2] cursor, bold;
          end
        end
      end
    end
  end

  if (converseVar.validationMsgNum != 0  /* cannot continue if error*/
   || SY0CM005.SY0CMACT[SY0CWCT2] == " " /* no action*/
   || SY0CM005.SY0CMACT[SY0CWCT2] == "D") /* delete is ok*/
    return;
  end

  SY0CS5E(); /* validate whse*/
  SY0CS5D(); /* validate color/dim*/
  if (converseVar.validationMsgNum == 0) /* no errors*/
    SY0CS5F(); /* check if duplicate*/
  end

end // end SY0CS5C

// Validate Color/Dim Data
Function SY0CS5D()

   /* Validate Color/Dim Data on Map M005*/

  if (SY0CM005.XDMCD[SY0CWCT2] == " ") /* set-up dim defaulting*/
    if (SY0CM005.SY2CLRID[SY0CWCT2] == "***")
      SY0CM005.XDMCD[SY0CWCT2] = "**";
    else
      SY0CM005.XDMCD[SY0CWCT2] = "00";
    end
  else
    if (SY0CM005.XDMCD[SY0CWCT2] != "**")
      if (SY0CM005.XDMCD[SY0CWCT2] in XDMTBL.XDMCD)
        /* next sentence (Code is valid)*/
      else
        converseLib.validationFailed(3); /* invalid code*/
        set SY0CM005.XDMCD[SY0CWCT2] cursor, bold;
      end
    end
  end

  if (SY0CM005.SY2CLRID[SY0CWCT2] == "***")
    if (SY0CM005.XDMCD[SY0CWCT2] != "**")
      converseLib.validationFailed(167);
      SY0CM005.SYMSCMSG = "   Color/Dim Must Both be **";
    end
  else
    SY2REC.XGPCD = SY0CM005.XGPCD;
    SY2REC.SY1STNBR = SY0CM005.SY1STNBR;
    SY2REC.SY2CLRID = SY0CM005.SY2CLRID[SY0CWCT2];
    SY2REC.XDMCD = SY0CM005.XDMCD[SY0CWCT2];
    SY0CSY2();
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      converseLib.validationFailed(7); /* color/dim not found*/
      SY0CM005.SY2CLRAB[SY0CWCT2] = "Unknown";
      set SY0CM005.XDMCD[SY0CWCT2] bold;
      set SY0CM005.SY2CLRID[SY0CWCT2] cursor, bold;
    else
      SY0CM005.SY2CLRAB[SY0CWCT2] = SY2REC.SY2CLRAB;
    end
  end

  if (SY0CM005.SY2CLRID[SY0CWCT2] == "***")
    if (SY0CM005.XWHCD[SY0CWCT2] == "**")
      SY0CM005.SY2CLRAB[SY0CWCT2] = "Style Default";
    else
      SY0CM005.SY2CLRAB[SY0CWCT2] = "Whse Default";
    end
  end

end // end SY0CS5D

// Validate Warehouse Data
Function SY0CS5E()

  if (SY0CM005.XWHCD[SY0CWCT2] == "  ")
    SY0CM005.XWHCD[SY0CWCT2] = "**";
  end

  if (SY0CM005.XWHCD[SY0CWCT2] != "**")
    if (SY0CM005.XWHCD[SY0CWCT2] in XWHTBL.XWHCD)
      /* next sentence*/
    else
      converseLib.validationFailed(3); /* invalid code*/
      set SY0CM005.XWHCD[SY0CWCT2] cursor, bold;
    end
  end

end // end SY0CS5E

// Check for Duplicate Entry
Function SY0CS5F()

  SY0CW01.SY0CW3GP = SY0CW03.SY0CW3GP; /* save record*/
  SY0CW01.SY0CWTNW = 1; /* set pointer*/
  while (SY0CW01.SY0CWTNW <= SY0CW01.SY0CWTMX)
    TA5REC.TA5TSQIX = SY0CW01.SY0CWTNW;
    TA5REC.TA5FNCCD = "R";
    SY0CS50();
    if (TA5REC.TA5RTNCD != 0) /* problems*/
      return;
    end
    SY0CW01.SY0CWCT3 = 1;
    while (SY0CW01.SY0CWCT3 <= SY0CW01.SY0CWML2)
      if (SY0CW01.SY0CWTNW == SY0CW01.SY0CWTNO) /* use map for compare*/
        if (SY0CW01.SY0CWCT3 != SY0CW01.SY0CWCT2)
                                   /* not the one were checking*/
          if (SY0CM005.SY0CMACT[SY0CWCT3] != "D")
            if (SY0CM005.SY2CLRID[SY0CWCT3] == SY0CM005.SY2CLRID[SY0CWCT2]
             && SY0CM005.XDMCD[SY0CWCT3] == SY0CM005.XDMCD[SY0CWCT2]
             && SY0CM005.XWHCD[SY0CWCT3] == SY0CM005.XWHCD[SY0CWCT2])
              converseLib.validationFailed(168); /* duplicate*/
              set SY0CM005.XWHCD[SY0CWCT2] bold;
              set SY0CM005.XDMCD[SY0CWCT2] bold;
              set SY0CM005.SY2CLRID[SY0CWCT2] cursor, bold;
            end
          end
        end
      else /* not current map, use temp storage*/
        if (SY0CW03.SY0CMACT[SY0CWCT3] != "D")
          if (SY0CW03.SY2CLRID[SY0CWCT3] == SY0CM005.SY2CLRID[SY0CWCT2]
           && SY0CW03.XDMCD[SY0CWCT3] == SY0CM005.XDMCD[SY0CWCT2]
           && SY0CW03.XWHCD[SY0CWCT3] == SY0CM005.XWHCD[SY0CWCT2])
            converseLib.validationFailed(168); /* duplicate*/
            set SY0CM005.XWHCD[SY0CWCT2] bold;
            set SY0CM005.XDMCD[SY0CWCT2] bold;
            set SY0CM005.SY2CLRID[SY0CWCT2] cursor, bold;
          end
        end
      end
      SY0CW01.SY0CWCT3 = SY0CW01.SY0CWCT3 + 1;
    end
    SY0CW01.SY0CWTNW = SY0CW01.SY0CWTNW + 1;
  end

  SY0CW03.SY0CW3GP = SY0CW01.SY0CW3GP; /* restore record*/

end // end SY0CS5F

// Check for any changes on line
Function SY0CS5H()

  SY0CW01.SY0CWCHF = "N"; /* set flag no*/

  if (SY0CM005.SY2CLRID[SY0CWCT2] != SY0CW03.SY2CLRID[SY0CWCT2]
   || SY0CM005.XDMCD[SY0CWCT2] != SY0CW03.XDMCD[SY0CWCT2]
   || SY0CM005.XWHCD[SY0CWCT2] != SY0CW03.XWHCD[SY0CWCT2])
    SY0CW01.SY0CWCHF = "Y";
  end

   /* now check to see if user is just clearing out an add line*/
   /* they don't want. If so, reset change flag to N*/
  if (SY0CM005.SY0CMACT[SY0CWCT2] == " "
   && SY0CW03.SY0CWEFL[SY0CWCT2] != "Y" /* not in use*/
   && SY0CM005.SY2CLRID[SY0CWCT2] == " "
   && SY0CM005.XDMCD[SY0CWCT2] == " "   
   && SY0CM005.XWHCD[SY0CWCT2] == " "   
   && SY0CM005.SY0CMUC1[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC2[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC3[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC4[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC5[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC6[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC7[SY0CWCT2] == 0  
   && SY0CM005.SY0CMUC8[SY0CWCT2] == 0)
    SY0CW01.SY0CWCHF = "N";
    SY0CM005.SY2CLRAB[SY0CWCT2] = " ";
  end

end // end SY0CS5H

// call date routine
Function SY0CSAA()


  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0222)
    return;
  else
    if (TA2REC.TA2RTNCD != 0)
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0CSAA";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC) {isExternal = yes};
      converseLib.validationFailed(30); /* invalid date entered*/
      exit stack;
    end
  end


end // end SY0CSAA

// reset attributes/clear message
Function SY0CSAB()

  set SY0CM001.XGPCD normal; /* reset gpc map field*/
  set SY0CM001.XBCCD normal; /* reset brand*/

  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWML1;

  while (SY0CW01.SY0CWCT1 > 0)
    SY0CSBA(); /* reset style number map fields*/
  end

  set SY0CM001.CATOAP normal; /* reset option map field*/
  set SY0CM001.CAITEM normal; /* reset item map field*/

  SY0CM001.SYMSCMSG = " "; /* clear system error message*/
end // end SY0CSAB

// check for fast path
Function SY0CSAC()

  if (converseVar.eventKey is enter
   && SY0CM001.CATOAP != " ")
  /*  MOVE SY0CM001 TO COMMAREA;*/
    COMMAREA.CATOAP = SY0CM001.CATOAP;
    COMMAREA.CAITEM = SY0CM001.CAITEM;
    XSEXIT();
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0CM001 alarm;
    set SY0CM001.CATOAP cursor, bold;
    exit stack;
  end
end // end SY0CSAC

// validate pf keys
Function SY0CSAD()

  if (converseVar.eventKey is pf1)
    XSPF1(); /* transfer to help faciltiy*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf4)
    XSPF4(); /* return to main menu*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    exit stack;
  end
end // end SY0CSAD

// edit user input
Function SY0CSAE()

  SY0CW01.SY0CWCT1 = 1;
  SY0CW01.SY0CWSW1 = "N";

  while (SY0CW01.SY0CWCT1 <= SY0CW01.SY0CWML1
   && SY0CW01.SY0CWSW1 == "N")
    SY0CSBB(); /* check for one style number*/
  end

  if (SY0CW01.SY0CWSW1 == "N") /* no style numbers entered*/
    converseLib.validationFailed(40);
    set SY0CM001.SY1STNBR[1] cursor, bold;
  end

  if (SY0CM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized*/
      set SY0CM001.XGPCD cursor, bold;
    end
  else
    if (SY0CM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized*/
        set SY0CM001.XGPCD cursor, bold;
      end
    end
  end


  if (SY0CM001.XGPCD is modified)
    SY0CSBC(); /* validate gpc code*/
  end

   /* Now validate brand field. Currently, only brand 08 (Cole Haan)*/
   /* is allowed. Otherwise, brand should be left blank.*/

  SY0CW01.XBCCD = " ";
  SY0CW01.XBCDESC = " ";
  if (SY0CM001.XBCCD == "08")
    if (SY0CM001.XBCCD in XBCTBL.XBCCD)
      SY0CW01.XBCCD = SY0CM001.XBCCD;
      SY0CM001.XBCDESC = XBCTBL.XBCDESC[sysVar.arrayIndex];
      SY0CW01.XBCDESC = XBCTBL.XBCDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(3); /* Invalid Code*/
      set SY0CM001.XBCCD cursor, bold;
    end
  else
    if (SY0CM001.XBCCD == " ")
      SY0CM001.XBCDESC = " ";
    else
      converseLib.validationFailed(3); /* Invalid Code*/
      SY0CM001.SYMSCMSG = "Brand must be 08 or Blank";
      set SY0CM001.XBCCD cursor, bold;
    end
  end

end // end SY0CSAE

// read style table
Function SY0CSAF()

  if (SY0CM001.SY1STNBR[SY0CWCT1] == " ")
    set SY0CM001.SY1STNBR[SY0CWCT1] skip;
    SY0CW01.SY0CWSWP[SY0CWCT1] = " ";
    return;
  end

  set SQLCA empty;
  if (SY0CM001.XBCCD == " ")
    SY1REC.XGPCD = SY0CM001.XGPCD;
    SY1REC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes}; /* product style*/
  else
    PKNREC.XGPCD = SY0CM001.XGPCD;
    PKNREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
    call "IO1810" ("S1", SQLCA, PKNREC) {isNoRefresh = yes, isExternal = yes}; /* Picking style*/
    call "IO1810" ("N1", SQLCA, PKNREC) {isNoRefresh = yes, isExternal = yes}; /* Picking style*/
  end

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    if (SY0CM001.XBCCD == " ")
      SY0CM001.SY1SSTNM[SY0CWCT1] = SY1REC.SY1SSTNM;
      if (SY1REC.XUMCD in XUMTBL.XUMCD)
        SY0CM001.XUMDESC[SY0CWCT1] = XUMTBL.XUMDESC[sysVar.arrayIndex];
      end
      SY0CM001.SY1AVEWT[SY0CWCT1] = SY1REC.SY1AVEWT;
      SY0CM001.SY1UNPCS[SY0CWCT1] = SY1REC.SY1UNPCS;
    else
      SY0CM001.SY1SSTNM[SY0CWCT1] = PKNREC.SY1SSTNM;
      SY0CM001.XUMDESC[SY0CWCT1] = " ";
      SY0CM001.SY1AVEWT[SY0CWCT1] = 0;
      SY0CM001.SY1UNPCS[SY0CWCT1] = 0;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      converseLib.validationFailed(5); /* style record does not exist*/
      SY0CM001.SY1SSTNM[SY0CWCT1] = "NOT FOUND";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0CSAF ";
      if (SY0CM001.XBCCD == " ")
        TA1REC.TA1LOCAT[3] = "IO0120  ";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VSTYLE01";
      else
        TA1REC.TA1LOCAT[3] = "IO1810  ";
        TA1REC.TA1DBASE = "DPICK";
        TA1REC.TA1TBLVU = "VPKSTY01";
      end
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      return;
    end
  end

  set SWPREC empty;
  SWPREC.XGPCD = SY0CM001.XGPCD;
  SWPREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  SY0CSAL(); /* scan for ucase rows*/

end // end SY0CSAF

// reset map attributes
Function SY0CSAG()

  set SY0CM001.SY1STNBR[SY0CWCT1] skip;

  if (SY0CM001.SY1STNBR[SY0CWCT1] != " ")
    set SY0CM001.SY0CMSEL[SY0CWCT1] cursor, initialAttributes;
    if (SY0CM001.XBCCD != " ") /* Brand entered*/
      set SY0CM001.SY1AVEWT[SY0CWCT1] skip, invisible;
    else
      set SY0CM001.SY1AVEWT[SY0CWCT1] normal;
    end
    set SY0CM001.SY0CMYNP[SY0CWCT1] initialAttributes;
    if (SY0CM001.SY0CMYNP[SY0CWCT1] == "No")
      set SY0CM001.SY1UNPCS[SY0CWCT1] normal;
      set SY0CM001.SWPMNCP[SY0CWCT1] normal;
      set SY0CM001.SWPMXCP[SY0CWCT1] normal;
    else
      set SY0CM001.SY1UNPCS[SY0CWCT1] skip, invisible;
      set SY0CM001.SWPMNCP[SY0CWCT1] skip, invisible;
      set SY0CM001.SWPMXCP[SY0CWCT1] skip, invisible;
    end
  end

end // end SY0CSAG

// check for fast path
Function SY0CSAH()

  if (converseVar.eventKey is enter
   && SY0CM001.CATOAP != " ")
    COMMAREA.CATOAP = SY0CM001.CATOAP;
    COMMAREA.CAITEM = SY0CM001.CAITEM;
    XSEXIT();
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0CM001.CATOAP cursor, bold;
    exit stack;
  end
end // end SY0CSAH

// validate pf keys
Function SY0CSAI()

  if (converseVar.eventKey is pf1)
    XSPF1(); /* transfer to help faciltiy*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf4)
    XSPF4(); /* return to main menu*/
    SY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    exit stack;
  end

end // end SY0CSAI

// Check Update to Style/UCASE
Function SY0CSAJ()

  if (SY0CM001.SY1STNBR[SY0CWCT1] == " ")
    return;
  end

  if (SY0CM001.XBCCD == "  ")
    SY0CSBD(); /* read style record*/
    if (SY0CW01.SY0CWSWP[SY0CWCT1] == "M")
      if (SY1REC.SY1AVEWT != SY0CM001.SY1AVEWT[SY0CWCT1])
        SY0CSBE(); /* update style record*/
        SY0CW01.SY0CWSUF = "Y";
      end
      return;
    else
      if (SY1REC.SY1AVEWT != SY0CM001.SY1AVEWT[SY0CWCT1]
       || SY1REC.SY1UNPCS != SY0CM001.SY1UNPCS[SY0CWCT1])
        SY0CSBE(); /* update style record*/
        SY0CW01.SY0CWSUF = "Y";
      end
    end
  end

  if (SY0CW01.SY0CWSWP[SY0CWCT1] == "Y") /* we have one*/
    SY0CSBU(); /* read UCASE record*/
  end

  if (SY0CW01.SY0CWSWP[SY0CWCT1] == "N") /* no record*/
    if (SY0CM001.SY1UNPCS[SY0CWCT1] != 0
     || SY0CM001.SWPMNCP[SY0CWCT1] != 0
     || SY0CM001.SWPMXCP[SY0CWCT1] != 0)
      SY0CSBW(); /* we need to add it*/
      SY0CW01.SY0CWSUF = "Y";
    end
  else
    if (SY0CW01.SY0CWSWP[SY0CWCT1] == "Y") /* we have one*/
      if (SWPREC.SY1UNPCS != SY0CM001.SY1UNPCS[SY0CWCT1]
       || SWPREC.SWPMNCP[1] != SY0CM001.SWPMNCP[SY0CWCT1]
       || SWPREC.SWPMXCP[1] != SY0CM001.SWPMXCP[SY0CWCT1])
        SY0CSBV(); /* update UCASE record*/
        SY0CW01.SY0CWSUF = "Y";
      end
    end
  end

end // end SY0CSAJ

// Set Screen Fields Protect
Function SY0CSAK()

  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWML1;
  while (SY0CW01.SY0CWCT1 >= 1)
    set SY0CM001.SY0CMSEL[SY0CWCT1] skip;
    set SY0CM001.SY1AVEWT[SY0CWCT1] skip;
    set SY0CM001.SY1UNPCS[SY0CWCT1] skip;
    set SY0CM001.SWPMNCP[SY0CWCT1] skip;
    set SY0CM001.SWPMXCP[SY0CWCT1] skip;
    set SY0CM001.SY0CMYNP[SY0CWCT1] skip, invisible;
    SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 - 1;
  end

end // end SY0CSAK

// read ucase table
Function SY0CSAL()

  call "IO0090" ("S1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes}; /* call UCASE table*/
  if (SQLCA.VAGen_SQLCODE != 0) /* record found*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "SY0CSAL ";
    TA1REC.TA1LOCAT[2] = "IO0090  ";
    TA1REC.TA1LOCAT[3] = " ";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DSTLOC";
    TA1REC.TA1TBLVU = "VUCASE01";
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* style table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    return;
  end

  call "IO0090" ("N1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes}; /* call UCASE table*/

  if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
    SY0CW01.SY0CWSWP[SY0CWCT1] = "N";
    SY0CM001.SY0CMYNP[SY0CWCT1] = "No";
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* bad error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "SY0CSAL ";
      TA1REC.TA1LOCAT[2] = "IO0090  ";
      TA1REC.TA1LOCAT[3] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DSTLOC";
      TA1REC.TA1TBLVU = "VUCASE01";
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* style table error*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    else /* we found a record, now see what kind*/
      if (SWPREC.SY2CLRID == "***" /* if we have default style rec*/
       && SWPREC.XDMCD == "**"     
       && SWPREC.XWHCD == "**")   
        call "IO0090" ("N1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};
        if (SQLCA.VAGen_SQLCODE == 0)
          SY0CM001.SY0CMYNP[SY0CWCT1] = "Yes";
          SY0CW01.SY0CWSWP[SY0CWCT1] = "M"; /* many*/
        else
          SY0CW01.SY0CWSWP[SY0CWCT1] = "Y";
          SY0CM001.SY0CMYNP[SY0CWCT1] = "No"; /* no detail*/
          SY0CM001.SY1UNPCS[SY0CWCT1] = SWPREC.SY1UNPCS;
          SY0CM001.SWPMNCP[SY0CWCT1] = SWPREC.SWPMNCP[1];
          SY0CM001.SWPMXCP[SY0CWCT1] = SWPREC.SWPMXCP[1];
        end
      else
        SY0CM001.SY0CMYNP[SY0CWCT1] = "Yes";
        SY0CW01.SY0CWSWP[SY0CWCT1] = "M"; /* many SWP rows*/
      end
    end
  end

  call "IO0090" ("C1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes}; /* call UCASE table*/

end // end SY0CSAL

// Validate Screen Line
Function SY0CSAV()

  if (SY0CM001.SY1STNBR[SY0CWCT1] == " " /* line not used*/
   && SY0CM001.SY0CMSEL[SY0CWCT1] == " ")
    return;
  end

   /* Check that maximum is not less than minimum*/
  if (SY0CM001.SWPMXCP[SY0CWCT1] < SY0CM001.SWPMNCP[SY0CWCT1])
    converseLib.validationFailed(165); /* maximum cannot be < minimum*/
    set SY0CM001.SWPMXCP[SY0CWCT1] bold;
    set SY0CM001.SWPMNCP[SY0CWCT1] cursor, bold;
  else
    if (SY0CM001.SWPMNCP[SY0CWCT1] == 0
     && SY0CM001.SWPMXCP[SY0CWCT1] != 0)
      converseLib.validationFailed(156); /* Number must be non-zero*/
      set SY0CM001.SWPMNCP[SY0CWCT1] cursor, bold;
    end
  end

   /* Units per case must be entered if min/max entered*/
  if (SY0CM001.SY1UNPCS[SY0CWCT1] == 0)
    if (SY0CM001.SWPMXCP[SY0CWCT1] != 0
     || SY0CM001.SWPMNCP[SY0CWCT1] != 0)
      converseLib.validationFailed(40); /* required field*/
      set SY0CM001.SY1UNPCS[SY0CWCT1] cursor, bold;
    end
  end

   /* now check select flag*/
  if (SY0CM001.SY0CMSEL[SY0CWCT1] == " "
   || SY0CM001.SY0CMSEL[SY0CWCT1] == "S")
      /* next sentence*/
  else
    if (SY0CM001.SY0CMSEL[SY0CWCT1] == "A")
      if (SY0CW01.SY0CWCT1 != 1)
        converseLib.validationFailed(3);
        SY0CM001.SYMSCMSG = "Select All Must be on Line 1";
        set SY0CM001.SY0CMSEL[SY0CWCT1] cursor, bold;
      end
    else
      converseLib.validationFailed(108); /* Select should be S or blank*/
      set SY0CM001.SY0CMSEL[SY0CWCT1] cursor, bold;
    end
  end

end // end SY0CSAV

// reset style number attributes
Function SY0CSBA()

  set SY0CM001.SY1STNBR[SY0CWCT1] cursor, normal;

  if (SY0CM001.SY1STNBR[SY0CWCT1] == " ")
    SY0CM001.SY0CMSEL[SY0CWCT1] = " ";
    SY0CM001.SY1SSTNM[SY0CWCT1] = " ";
    SY0CM001.XUMDESC[SY0CWCT1] = " ";
    SY0CM001.SY1AVEWT[SY0CWCT1] = 0;
    SY0CM001.SY1UNPCS[SY0CWCT1] = 0;
    SY0CM001.SWPMNCP[SY0CWCT1] = 0;
    SY0CM001.SWPMXCP[SY0CWCT1] = 0;
    SY0CM001.SY0CMYNP[SY0CWCT1] = " ";
  end

  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 - 1;
end // end SY0CSBA

// look for style number input
Function SY0CSBB()

  if (SY0CM001.SY1STNBR[SY0CWCT1] != " ")
    SY0CW01.SY0CWSW1 = "Y";
  end

  SY0CW01.SY0CWCT1 = SY0CW01.SY0CWCT1 + 1;
end // end SY0CSBB

// verify gpc code
Function SY0CSBC()

  if (SY0CM001.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY0CM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SY0CW01.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    else
      converseLib.validationFailed(33); /* inactive code*/
      SY0CM001.XGPABRV = "INACT";
      set SY0CM001.XGPCD cursor, bold;
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    SY0CM001.XGPABRV = "INVAL";
    set SY0CM001.XGPCD cursor, bold;
  end
end // end SY0CSBC

// read style record
Function SY0CSBD()

  SY1REC.XGPCD = SY0CM001.XGPCD;
  SY1REC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  set SQLCA empty;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes}; /* call product style table*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    SYDREC.SY1DATA = SY1REC.SY1DATA;
    SY0CW02.ZZZCHGCT = SY1REC.ZZZCHGCT;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      converseLib.validationFailed(37); /* unable to process update*/
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0CSBD ";
      TA1REC.TA1LOCAT[3] = "IO0120  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSTYLE01";
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      converseLib.validationFailed(20); /* style table error*/
      exit stack;
    end
  end
end // end SY0CSBD

// update style record
Function SY0CSBE()

  set SYAREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SY1REC.XGPCD = SY0CM001.XGPCD;
  SY1REC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];

  SY1REC.SY1AVEWT = SY0CM001.SY1AVEWT[SY0CWCT1];
  SY1REC.SY1UNPCS = SY0CM001.SY1UNPCS[SY0CWCT1];

  SY1REC.ZZZCHGTM = SY0CW02.ZZZCHGTM;
  SY1REC.ZZZCHGDT = SY0CW02.ZZZCHGDT;
  SY1REC.ZZZCHGCT = SY0CW02.ZZZCHGCT;

  call "IO0120" ("U ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0CSCA(); /* write audit record*/
    SY0CSCB(); /* write tag record*/
    set SY0CM001.SY1AVEWT[SY0CWCT1] skip;
    set SY0CM001.SY1UNPCS[SY0CWCT1] skip;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(37); /* unable to process update*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      set SY0CM001.SY1AVEWT[SY0CWCT1] normal;
      set SY0CM001.SY1UNPCS[SY0CWCT1] normal;
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "UPDATE   ";
      TA1REC.TA1LOCAT[2] = "SY0CSBE  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      set SY0CM001.SY1AVEWT[SY0CWCT1] normal;
      set SY0CM001.SY1UNPCS[SY0CWCT1] normal;
      exit stack;
    end
  end
end // end SY0CSBE

// read UCASE record
Function SY0CSBU()

  set SWPREC empty;
  SWPREC.XGPCD = SY0CM001.XGPCD;
  SWPREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  SWPREC.SY2CLRID = "***";
  SWPREC.XDMCD = "**";
  SWPREC.XWHCD = "**";
  SWPREC.XXX-REC-SEQ-NBR = 1;
  set SQLCA empty;

  call "IO0090" ("S ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes}; /* call product style table*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    SY0CW02.ZZZCHGCT = SWPREC.ZZZCHGCT;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      converseLib.validationFailed(37); /* unable to process update*/
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0CSBU ";
      TA1REC.TA1LOCAT[3] = "IO0090  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DSTLOC";
      TA1REC.TA1TBLVU = "VUCASE01";
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      converseLib.validationFailed(23); /* table error*/
      exit stack;
    end
  end
end // end SY0CSBU

// update UCASE record
Function SY0CSBV()

  set SQLCA empty;
  set ERRSQLCA empty;

  SWPREC.SY1UNPCS = SY0CM001.SY1UNPCS[SY0CWCT1];
  SWPREC.SWPMNCP[1] = SY0CM001.SWPMNCP[SY0CWCT1];
  SWPREC.SWPMXCP[1] = SY0CM001.SWPMXCP[SY0CWCT1];

  SWPREC.ZZZCHGTM = SY0CW02.ZZZCHGTM;
  SWPREC.ZZZCHGDT = SY0CW02.ZZZCHGDT;
  SWPREC.ZZZCHGCT = SY0CW02.ZZZCHGCT;

  call "IO0090" ("U ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    set SY0CM001.SWPMNCP[SY0CWCT1] skip;
    set SY0CM001.SWPMXCP[SY0CWCT1] skip;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(37); /* unable to process update*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      set SY0CM001.SY1AVEWT[SY0CWCT1] normal;
      set SY0CM001.SY1UNPCS[SY0CWCT1] normal;
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "UPDATE   ";
      TA1REC.TA1LOCAT[2] = "SY0CSBV  ";
      TA1REC.TA1LOCAT[3] = "IO0090   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DSTLOC";
      TA1REC.TA1TBLVU = "VUCASE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      set SY0CM001.SWPMNCP[SY0CWCT1] normal;
      set SY0CM001.SWPMXCP[SY0CWCT1] normal;
      exit stack;
    end
  end

  set SLQREC empty;
  SLQREC.LTIOFNCTN = "C ";

  SY0CSLOG(); /* add row to sllog tbl*/

  if (SL10REC.SL10W-RTN-CODE != 0
   || SL10REC.SL10W-RTN-SQLCODE != 0)
    exit stack;
  end

end // end SY0CSBV

// Insert UCASE record
Function SY0CSBW()

  set SWPREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SWPREC.XGPCD = SY0CM001.XGPCD;
  SWPREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  SWPREC.SY2CLRID = "***";
  SWPREC.XDMCD = "**";
  SWPREC.XWHCD = "**";
  SWPREC.XXX-REC-SEQ-NBR = 1;
  SWPREC.XBCCD = SY0CM001.XBCCD;

  SWPREC.SY1UNPCS = SY0CM001.SY1UNPCS[SY0CWCT1];
  SWPREC.SWPMNCP[1] = SY0CM001.SWPMNCP[SY0CWCT1];
  SWPREC.SWPMXCP[1] = SY0CM001.SWPMXCP[SY0CWCT1];

  SWPREC.ZZZSDT = SY0CW02.ZZZCHGDT;
  SWPREC.ZZZCHGDT = SY0CW02.ZZZCHGDT;
  SWPREC.ZZZCHGTM = SY0CW02.ZZZCHGTM;

  call "IO0090" ("A ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "INSERT   ";
    TA1REC.TA1LOCAT[2] = "SY0CSBW  ";
    TA1REC.TA1LOCAT[3] = "IO0090   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DSTLOC";
    TA1REC.TA1TBLVU = "VUCASE01";
    TA1TBLKE = SY1REC.SY1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    set SY0CM001.SWPMNCP[SY0CWCT1] normal;
    set SY0CM001.SWPMXCP[SY0CWCT1] normal;
    exit stack;
  end

  set SLQREC empty;
  SLQREC.LTIOFNCTN = "A ";

  SY0CSLOG(); /* add row to sllog tbl*/

  if (SL10REC.SL10W-RTN-CODE != 0
   || SL10REC.SL10W-RTN-SQLCODE != 0)
    exit stack;
  end

end // end SY0CSBW

// write audit record
Function SY0CSCA()

  set SYAREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SYAREC.SYAUDTYP = "C";
  SYAREC.XXXTBLNM = "VSTYLE01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "SY0CSCA  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VSTYLE01 ";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY1REC.XGPCD;
  SYAREC.SY1STNBR = SY1REC.SY1STNBR;
  SYAREC.ZZZSDT = SY0CW02.ZZZCHGDT;
  SYAREC.ZZZSTM = SY0CW02.ZZZCHGTM;
  SYAREC.SYABFR = SYDREC.SY1DATA;
  SYAREC.SYAAFT = SY1REC.SY1DATA;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "ADD      ";
    TA1REC.TA1LOCAT[2] = "SY0CSCA  ";
    TA1REC.TA1LOCAT[3] = "IO0530   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = SYAREC.SYAKEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    exit stack;
  end
end // end SY0CSCA

// write tag record
Function SY0CSCB()

  set SY9REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SY9REC.SY9TGTYP = "C";
  SY9REC.XGPCD = SY1REC.XGPCD;
  SY9REC.SY1STNBR = SY1REC.SY1STNBR;
  SY9REC.ZZZSDT = SY0CW02.ZZZCHGDT;
  SY9REC.ZZZSTM = SY0CW02.ZZZCHGTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "UPDATE   ";
    TA1REC.TA1LOCAT[2] = "SY0CSCB  ";
    TA1REC.TA1LOCAT[3] = "IO0520   ";
    TA1REC.TA1LOCAT[4] = "STYLETBL";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYTAG01";
    TA1TBLKE = SY9REC.SY9KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(45); /* tag table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    exit stack;
  end
end // end SY0CSCB

// Perform PF8 scrolling, M005
Function SY0CSF8()

   /* Determine if PF8 Scroll is valid. This is slightly more*/
   /* tricky than PF7 scrolling because if we are on the last*/
   /* page and the user presses PF8, they probably want to add*/
   /* more color/whse detail. So in that case, we need to give*/
   /* them an empty screen so they can do so.*/

  if (SY0CW01.SY0CWTNO == SY0CW01.SY0CWTMX) /* at max*/
    if (SY0CM005.SY2CLRID[SY0CWML2] != " ") /* if bottom line used*/
      set SY0CW03 empty;
      TA5REC.TA5FNCCD = "A";
      SY0CS50(); /* create new page of temp storage*/
      if (TA5REC.TA5RTNCD == 0)
        SY0CW01.SY0CWTMX = SY0CW01.SY0CWTMX + 1;
        SY0CW01.SY0CWTNO = SY0CW01.SY0CWTNO + 1;
        SY0CW01.SY0CWBLD = "Y";
      end
    else
      converseLib.validationFailed(70); /* cannot scroll forward*/
    end
  else
    SY0CW01.SY0CWTNO = SY0CW01.SY0CWTNO + 1;
    SY0CW01.SY0CWBLD = "Y";
  end

end // end SY0CSF8

// add : prod loc asgmnt : 0
Function SY0CSLOG()
   /* ************************************************************/
   /* *** add unique row to:  SL log table                    ****/
   /* *** using the std module:  SL0010                       ****/
   /* *** note: use sl10rec to pass log data                  ****/
   /* *** return codes:                                       ****/
   /* ***      0 = successful                                 ****/
   /* ***   -803 = adding duplicate row                       ****/
   /* ***   -911 = deadlock - resource unavailable            ****/
   /* ***     <0 = db/severe error                            ****/
   /* ***          note: TA0020 will be executed              ****/
   /* ************************************************************/

  set SL10REC empty;

  if (SWPREC.XWHCD == "04"
   || SWPREC.XWHCD == "07"
   || SWPREC.XWHCD == "51"
   || SWPREC.XWHCD == "**")
    /* next sentence*/
  else
    return;
  end

  SLQREC.XWHCD = SWPREC.XWHCD;
  SLQREC.ZZZCHGDT = SY0CW02.ZZZCHGDT;
  SLQREC.ZZZCHGTM = SY0CW02.ZZZCHGTM;
  SLQREC.XXXTBLNM = "VUCASE01";
  SLQREC.XXXUSRID = COMMAREA.CAUSERID;
  SLQREC.XXXPGMNB = "SY0C";
  SLQREC.XGPCD = SWPREC.XGPCD;
  SLQREC.SY1STNBR = SWPREC.SY1STNBR;
  SLQREC.SY2CLRID = SWPREC.SY2CLRID;
  SLQREC.XDMCD = SWPREC.XDMCD;

  SL10REC.SL10W-DSLLOG01 = SLQREC.SLQDATA;
  SL10REC.LTIOFNCTN = "A ";
  SL10REC.XXXPGMNB = "SY0C";

  call "SL0010" (SL10REC) {isNoRefresh = yes, isExternal = yes};

  if (SL10REC.SL10W-RTN-SQLCODE == 0)
    if (SL10REC.SL10W-RTN-CODE == 0)
      return;
    else
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1PGMNM = "SL0010 ";
      TA1REC.TA1LOC = SL10REC.SL10W-RTN-MSG;
      TA1REC.TA1DBASE = "DSTLOC  ";
      TA1REC.TA1TBLVU = "VSSLOG01";
      TA1REC.TA1TBLKE = SLQREC.SLQKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23);
    end
  else
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1LOCAT[1] = "SL0010 ";
    TA1REC.TA1LOCAT[3] = "ADD     ";
    TA1REC.TA1LOCAT[4] = "ROW     ";
    TA1REC.TA1DBASE = "DSTLOC  ";
    TA1REC.TA1TBLVU = "VSSLOG01";
    TA1REC.TA1TBLKE = SLQREC.SLQKEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23);
  end

   /* ************************************************************/
   /* *** end of STATEMENT GROUP                              ****/
   /* ************************************************************/


end // end SY0CSLOG

// Load Temp. Storage from UCASE
Function SY0CST1()

  set SQLCA empty;
  call "IO0090" ("N1", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* at end of table*/
    SY0CW01.SY0CWEOS = "Y";
    if (SY0CW01.SY0CWCT2 > 0) /* we have one more record*/
      SY0CW01.SY0CWTMX = SY0CW01.SY0CWTMX + 1;
      TA5REC.TA5FNCCD = "A";
      SY0CS50();
    end
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "SY0CST1  ";
      TA1REC.TA1LOCAT[2] = "IO0090   ";
      TA1REC.TA1LOCAT[3] = "N1       ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM005";
      TA1REC.TA1DBASE = "DSTLOC";
      TA1REC.TA1TBLVU = "VUCASE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error*/
      set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
      return;
    end
  end

  if (SWPREC.XGPCD != SY0CW01.XGPCD
   || SWPREC.SY1STNBR != SY0CW01.SY1STNBR
   || SWPREC.SY2CLRID != SY0CW01.SY2CLRID
   || SWPREC.XDMCD != SY0CW01.XDMCD
   || SWPREC.XWHCD != SY0CW01.XWHCD)
    SY0CW01.SY0CWCT2 = SY0CW01.SY0CWCT2 + 1;
    SY0CW01.XGPCD = SWPREC.XGPCD;
    SY0CW01.SY1STNBR = SWPREC.SY1STNBR;
    SY0CW01.SY2CLRID = SWPREC.SY2CLRID;
    SY0CW01.XDMCD = SWPREC.XDMCD;
    SY0CW01.XWHCD = SWPREC.XWHCD;
  end

  if (SY0CW01.SY0CWCT2 > 9) /* temp record full*/
    TA5REC.TA5FNCCD = "A";
    SY0CS50();
    if (converseVar.validationMsgNum != 0) /* problems*/
      SY0CW01.SY0CWEOS = "Y"; /* stop scan*/
      return;
    else
      set SY0CW03 empty;
      SY0CW01.SY0CWTMX = SY0CW01.SY0CWTMX + 1;
      SY0CW01.SY0CWCT2 = 1;
    end
  end

  SY0CW03.SY0CWEFL[SY0CWCT2] = "Y";
  SY0CW03.SY2CLRID[SY0CWCT2] = SWPREC.SY2CLRID;
  SY0CW03.XDMCD[SY0CWCT2] = SWPREC.XDMCD;
  SY0CW03.XWHCD[SY0CWCT2] = SWPREC.XWHCD;
  if (SWPREC.XXX-REC-SEQ-NBR == 1)
    SY0CW03.SY0CMUC1[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 2)
    SY0CW03.SY0CMUC2[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 3)
    SY0CW03.SY0CMUC3[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 4)
    SY0CW03.SY0CMUC4[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 5)
    SY0CW03.SY0CMUC5[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 6)
    SY0CW03.SY0CMUC6[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 7)
    SY0CW03.SY0CMUC7[SY0CWCT2] = SWPREC.SY1UNPCS;
  end
  if (SWPREC.XXX-REC-SEQ-NBR == 8)
    SY0CW03.SY0CMUC8[SY0CWCT2] = SWPREC.SY1UNPCS;
  end

  if (SY0CW03.SY2CLRID[SY0CWCT2] != "***")
    SY2REC.XGPCD = SY0CM001.XGPCD;
    SY2REC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
    SY2REC.SY2CLRID = SWPREC.SY2CLRID;
    SY2REC.XDMCD = SWPREC.XDMCD;
    SY0CSY2(); /* get sy2rec*/
    if (SQLCA.VAGen_SQLCODE == 0)
      SY0CW03.SY2CLRAB[SY0CWCT2] = SY2REC.SY2CLRAB;
    else
      SY0CW03.SY2CLRAB[SY0CWCT2] = "*Unknown*";
    end
  else
    if (SY0CW03.XWHCD[SY0CWCT2] == "**")
      SY0CW03.SY2CLRAB[SY0CWCT2] = "Style Default";
    else
      SY0CW03.SY2CLRAB[SY0CWCT2] = "Whse Default";
    end
  end

end // end SY0CST1

// Insert UCASE record
Function SY0CSUA()

  set SQLCA empty;
  set ERRSQLCA empty;
  set SWPREC empty;
  SWPREC.XGPCD = SY0CM001.XGPCD;
  SWPREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  SWPREC.SY2CLRID = SY0CM010.SY2CLRID;
  SWPREC.XDMCD = SY0CM010.XDMCD;
  SWPREC.XWHCD = SY0CM010.XWHCD;
  SWPREC.XBCCD = SY0CW01.XBCCD;
  SWPREC.XXX-REC-SEQ-NBR = SY0CW01.SY0CWCT3;
  SWPREC.SWPMNSZ = SY0CW04.SWPMNSZ[SY0CWCT3];
  SWPREC.SWPMXSZ = SY0CW04.SWPMXSZ[SY0CWCT3];
  SWPREC.PKLCTNCD = SY0CM010.PKLCTNCD[SY0CWCT3];
  SWPREC.SY1UNPCS = SY0CM010.SY1UNPCS[SY0CWCT3];
  SWPREC.SWPMNCP[1] = SY0CM010.SWPMNCP1[SY0CWCT3];
  SWPREC.SWPMXCP[1] = SY0CM010.SWPMXCP1[SY0CWCT3];
  SWPREC.SWPMNCP[2] = SY0CM010.SWPMNCP2[SY0CWCT3];
  SWPREC.SWPMXCP[2] = SY0CM010.SWPMXCP2[SY0CWCT3];
  SWPREC.SWPMNCP[3] = SY0CM010.SWPMNCP3[SY0CWCT3];
  SWPREC.SWPMXCP[3] = SY0CM010.SWPMXCP3[SY0CWCT3];
  SWPREC.SWPMNCP[4] = SY0CM010.SWPMNCP4[SY0CWCT3];
  SWPREC.SWPMXCP[4] = SY0CM010.SWPMXCP4[SY0CWCT3];
  SWPREC.ZZZSDT = SY0CW02.ZZZCHGDT;
  SWPREC.ZZZCHGDT = SY0CW02.ZZZCHGDT;
  SWPREC.ZZZCHGTM = SY0CW02.ZZZCHGTM;

  call "IO0090" ("A ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "UPDATE   ";
    TA1REC.TA1LOCAT[2] = "SY0CSUA  ";
    TA1REC.TA1LOCAT[3] = "IO0090   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DSTLOC";
    TA1REC.TA1TBLVU = "VUCASE01";
    TA1TBLKE = SY1REC.SY1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    return;
  end

  set SLQREC empty;
  SLQREC.LTIOFNCTN = "A ";

  SY0CSLOG(); /* add row to sllog tbl*/

  if (SL10REC.SL10W-RTN-CODE != 0
   || SL10REC.SL10W-RTN-SQLCODE != 0)
    return;
  end

end // end SY0CSUA

// update UCASE record
Function SY0CSUC()

   /* First check to see if line changed*/
  set SWPREC empty;
  if (SY0CW04.SY0CW-EXISTS[SY0CWCT3] == "Y") /* Row currently exists*/
    SWPREC.XGPCD = SY0CM010.XGPCD;
    SWPREC.SY1STNBR = SY0CM010.SY1STNBR;
    SWPREC.SY2CLRID = SY0CM010.SY2CLRID;
    SWPREC.XDMCD = SY0CM010.XDMCD;
    SWPREC.XWHCD = SY0CM010.XWHCD;
    SWPREC.XXX-REC-SEQ-NBR = SY0CW01.SY0CWCT3;
    call "IO0090" ("S ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes}; /* call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
      if (SY0CM010.SY1UNPCS[SY0CWCT3] == SWPREC.SY1UNPCS
       && SY0CW04.SWPMNSZ[SY0CWCT3] == SWPREC.SWPMNSZ
       && SY0CW04.SWPMXSZ[SY0CWCT3] == SWPREC.SWPMXSZ
       && SY0CM010.PKLCTNCD[SY0CWCT3] == SWPREC.PKLCTNCD
       && SY0CM010.SWPMNCP1[SY0CWCT3] == SWPREC.SWPMNCP[1]
       && SY0CM010.SWPMXCP1[SY0CWCT3] == SWPREC.SWPMXCP[1]
       && SY0CM010.SWPMNCP2[SY0CWCT3] == SWPREC.SWPMNCP[2]
       && SY0CM010.SWPMXCP2[SY0CWCT3] == SWPREC.SWPMXCP[2]
       && SY0CM010.SWPMNCP3[SY0CWCT3] == SWPREC.SWPMNCP[3]
       && SY0CM010.SWPMXCP3[SY0CWCT3] == SWPREC.SWPMXCP[3]
       && SY0CM010.SWPMNCP4[SY0CWCT3] == SWPREC.SWPMNCP[4]
       && SY0CM010.SWPMXCP4[SY0CWCT3] == SWPREC.SWPMXCP[4])
        return; /* no change to this line*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
         /* (next sentence)*/
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY0C   ";
        TA1REC.TA1LOCAT[1] = "SELECT   ";
        TA1REC.TA1LOCAT[2] = "SY0CSUC  ";
        TA1REC.TA1LOCAT[3] = "IO0090   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY0CM001";
        TA1REC.TA1DBASE = "DSTLOC";
        TA1REC.TA1TBLVU = "VUCASE01";
        TA1TBLKE = SY1REC.SY1KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(23); /* table error*/
        return;
      end
    end
  end

  set SQLCA empty;
  set ERRSQLCA empty;

  SWPREC.XGPCD = SY0CM001.XGPCD;
  SWPREC.SY1STNBR = SY0CM001.SY1STNBR[SY0CWCT1];
  SWPREC.SY2CLRID = SY0CM010.SY2CLRID;
  SWPREC.XDMCD = SY0CM010.XDMCD;
  SWPREC.XWHCD = SY0CM010.XWHCD;
  SWPREC.XXX-REC-SEQ-NBR = SY0CW01.SY0CWCT3;
  SWPREC.XBCCD = SY0CW01.XBCCD;
  SWPREC.SWPMNSZ = SY0CW04.SWPMNSZ[SY0CWCT3];
  SWPREC.SWPMXSZ = SY0CW04.SWPMXSZ[SY0CWCT3];
  SWPREC.PKLCTNCD = SY0CM010.PKLCTNCD[SY0CWCT3];
  SWPREC.SY1UNPCS = SY0CM010.SY1UNPCS[SY0CWCT3];
  SWPREC.SWPMNCP[1] = SY0CM010.SWPMNCP1[SY0CWCT3];
  SWPREC.SWPMXCP[1] = SY0CM010.SWPMXCP1[SY0CWCT3];
  SWPREC.SWPMNCP[2] = SY0CM010.SWPMNCP2[SY0CWCT3];
  SWPREC.SWPMXCP[2] = SY0CM010.SWPMXCP2[SY0CWCT3];
  SWPREC.SWPMNCP[3] = SY0CM010.SWPMNCP3[SY0CWCT3];
  SWPREC.SWPMXCP[3] = SY0CM010.SWPMXCP3[SY0CWCT3];
  SWPREC.SWPMNCP[4] = SY0CM010.SWPMNCP4[SY0CWCT3];
  SWPREC.SWPMXCP[4] = SY0CM010.SWPMXCP4[SY0CWCT3];
  SWPREC.ZZZCHGTM = SY0CW02.ZZZCHGTM;
  SWPREC.ZZZCHGDT = SY0CW02.ZZZCHGDT;

  set SLQREC empty;

  if (SY0CW04.SY0CW-EXISTS[SY0CWCT3] == "Y")
    if (SWPREC.SY1UNPCS != 0)
      call "IO0090" ("U ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};
      SLQREC.LTIOFNCTN = "C ";
    else
      call "IO0090" ("D ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};
      SLQREC.LTIOFNCTN = "D ";
    end
    SY0CW01.SY0CWSUF = "Y"; /* something was updated*/
  else
    if (SWPREC.SY1UNPCS != 0)
      SWPREC.ZZZSDT = SY0CW02.ZZZSDT;
      call "IO0090" ("A ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};
      SLQREC.LTIOFNCTN = "A ";
      SY0CW01.SY0CWSUF = "Y"; /* something was updated*/
    end
  end

  if (SQLCA.VAGen_SQLCODE == 0)
    if (SLQREC.LTIOFNCTN > " ")
      SY0CSLOG(); /* add row to sllog tbl*/
      if (SL10REC.SL10W-RTN-CODE != 0
       || SL10REC.SL10W-RTN-SQLCODE != 0)
        return;
      end
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(37); /* unable to process update*/
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "UPDATE   ";
      TA1REC.TA1LOCAT[2] = "SY0CSUC  ";
      TA1REC.TA1LOCAT[3] = "IO0090   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DSTLOC";
      TA1REC.TA1TBLVU = "VUCASE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error*/
      return;
    end
  end

end // end SY0CSUC

// Delete UCASE record
Function SY0CSUD()

  set SQLCA empty;
  set ERRSQLCA empty;

  SWPREC.XGPCD = SY0CM005.XGPCD;
  SWPREC.SY1STNBR = SY0CM005.SY1STNBR;
  SWPREC.SY2CLRID = SY0CW03.SY2CLRID[SY0CWCT2];
  SWPREC.XDMCD = SY0CW03.XDMCD[SY0CWCT2];
  SWPREC.XWHCD = SY0CW03.XWHCD[SY0CWCT2];
  SWPREC.XXX-REC-SEQ-NBR = SY0CW01.SY0CWCT3;

  call "IO0090" ("D ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "DELETE   ";
    TA1REC.TA1LOCAT[2] = "SY0CSUD  ";
    TA1REC.TA1LOCAT[3] = "IO0090   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM001";
    TA1REC.TA1DBASE = "DSTLOC";
    TA1REC.TA1TBLVU = "VUCASE01";
    TA1TBLKE = SY1REC.SY1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    return;
  end


  if (SQLCA.VAGen_SQLCODE == 0)
    set SLQREC empty;
    SLQREC.LTIOFNCTN = "D ";

    SY0CSLOG(); /* add row to sllog tbl*/

    if (SL10REC.SL10W-RTN-CODE != 0
     || SL10REC.SL10W-RTN-SQLCODE != 0)
      return;
    end
  end

end // end SY0CSUD

// read UCASE record
Function SY0CSWP()

  set SQLCA empty;

  call "IO0090" ("S ", SQLCA, SWPREC) {isNoRefresh = yes, isExternal = yes}; /* call*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    /* (NEXT SENTENCE)*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      converseLib.validationFailed(37); /* unable to process update*/
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0C   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0CSWP ";
      TA1REC.TA1LOCAT[3] = "IO0090  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0CM001";
      TA1REC.TA1DBASE = "DSTLOC";
      TA1REC.TA1TBLVU = "VUCASE01";
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error*/
      exit stack;
    end
  end
end // end SY0CSWP

// Get SY2REC
Function SY0CSY2()

   /* This module will now get data from either product (VCOLOR01)*/
   /* or picking (VPKSTY01). I determines which to use by looking*/
   /* at the brand code in SY0CW01.*/

  set SQLCA empty;
  set ERRSQLCA empty;

  if (SY0CW01.XBCCD == " ") /* No brand, use Product*/
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  else /* Brand entered, use picking.*/
    PKNREC.XGPCD = SY2REC.XGPCD;
    PKNREC.SY1STNBR = SY2REC.SY1STNBR;
    PKNREC.SY2CLRID = SY2REC.SY2CLRID;
    PKNREC.XDMCD = SY2REC.XDMCD;
    call "IO1810" ("S ", SQLCA, PKNREC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      move PKNREC to SY2REC withV60Compat;
    end
  end

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "SY0CSY2  ";
    TA1REC.TA1LOCAT[2] = "SELECT   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM005";
    if (SY0CM005.XBCDESC == " ")
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VCOLOR01";
    else
      TA1REC.TA1LOCAT[3] = "IO1810   ";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VPKSTY01";
    end
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* table error*/
    set SY0CM001.SY1STNBR[SY0CWCT1] cursor, bold;
    return;
  end
end // end SY0CSY2

// Read SCALE row
Function SY0CSY4()

  set SY4REC empty;
  if (SY0CM001.XBCCD == " ")
    SY4REC.SY4SZSCL = SY1REC.SY4SZSCL;
  else
    SY4REC.SY4SZSCL = PKNREC.SY4SZSCL;
  end
  set SQLCA empty;

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes}; /* call scale table*/

  if (SQLCA.VAGen_SQLCODE != 0) /* problems*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0C   ";
    TA1REC.TA1LOCAT[1] = "S       ";
    TA1REC.TA1LOCAT[2] = "SY0CSY4 ";
    TA1REC.TA1LOCAT[3] = "IO0090  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0CM010";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSCALE01";
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    exit stack;
  end
end // end SY0CSY4

//*** RECORD=SY0CW01 ****
//      General Purpose Working Storage for SY0C
// ***********************
Record SY0CW01 type basicRecord
  5 SYMCURDT SYMCURDT ; 
  5 XGPCD XGPCD ; 
  5 XGPABRV XGPABRV ; 
  5 XBCCD XBCCD ; 
  5 XBCDESC XBCDESC ; 
  5 SY1STNBR SY1STNBR ; 
  5 SY2CLRID SY2CLRID ; 
  5 XDMCD XDMCD ; 
  5 XWHCD XWHCD ; 
  5 SY0CWSW1 SY0CWSW1 ; 
  5 SY0CWSUF SY0CWSUF ; 
  5 SY0CWCHF SY0CWCHF ; 
  5 SY0CWSWP SY0CWSWP [13] ; 
  5 SY0CWCT1 SY0CWCT1 ; 
  5 SY0CWCT2 SY0CWCT2 ; 
  5 SY0CWCT3 SY0CWCT3 ; 
  5 SY0CWCT4 SY0CWCT4 ; 
  5 SY0CWML1 SY0CWML1 ; 
  5 SY0CWML2 SY0CWML2 ; 
  5 ZZZCHGCT ZZZCHGCT ; 
  5 SY0CWEOS SY0CWEOS ; 
  5 SY0CW-EOS-M010 SY0CW-EOS-M010 ; 
  5 SY0CW-PF3-SW SY0CW-PF3-SW ; 
  5 SY0CWTNO SY0CWTNO ; 
  5 SY0CWTMX SY0CWTMX ; 
  5 SY0CWTNW SY0CWTNW ; 
  5 SY0CWUFL SY0CWUFL ; 
  5 SY0CWBLD SY0CWBLD ; 
  5 SY0CWSSW SY0CWSSW ; 
  5 SY0CW3GP SY0CW3GP ; 
end // end SY0CW01

//*** RECORD=SY0CW02 ****
// this will set-up one area for adding zzz-stuff to each
// db2 table.
// ***********************
Record SY0CW02 type basicRecord
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end SY0CW02

//*** RECORD=SY0CW03 ****
// ************ SY0C Working Storage Record *******************
// 
//      This record is used to store 'screens' of information
//      onto temp storage using TA0050. Do NOT add data items
//      to this screen unless you are also changing map M005.
// 
//      NOTE: This record uses SWPMNCP and SWPMXCP but
//            because CSP cannot support 2 dimensional
//            arrays, the fields must be defined with
//            a suffix of 1,2,3 and 4.
// ************************************************************
// ***********************
Record SY0CW03 type basicRecord
  5 SY0CW3GP SY0CW3GP ; 
    10 SY0CW3LN SY0CW3LN ; 
    10 SY0CW3AY SY0CW3AY [9] ; 
      15 SY0CWEFL SY0CWEFL ; 
      15 SY0CMACT SY0CMACT ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 SY2CLRAB SY2CLRAB ; 
      15 XWHCD XWHCD ; 
      15 SY0CMUC1 SY0CMUC1 ; 
      15 SY0CMUC2 SY0CMUC2 ; 
      15 SY0CMUC3 SY0CMUC3 ; 
      15 SY0CMUC4 SY0CMUC4 ; 
      15 SY0CMUC5 SY0CMUC5 ; 
      15 SY0CMUC6 SY0CMUC6 ; 
      15 SY0CMUC7 SY0CMUC7 ; 
      15 SY0CMUC8 SY0CMUC8 ; 
end // end SY0CW03

//*** RECORD=SY0CW04 ****
//      General Purpose Working Storage for SY0C
// 
//      This record is used to hold up to 8 SWPREC images
//      that will be used by the SY0CM010 map.
// 
// ***********************
Record SY0CW04 type basicRecord
  5 SY0CW-SZ-FOUND SY0CW-SZ-FOUND ; 
  5 SY0CW-SZ-COUNT SY0CW-SZ-COUNT ; 
  5 SY0CW-M010-ARRAY SY0CW-M010-ARRAY [8] ; 
    10 SY0CW-EXISTS SY0CW-EXISTS ; 
    10 SWPDATA SWPDATA ; 
    10 SY0CW-FSZ-DESC SY0CW-FSZ-DESC ; 
    10 SY0CW-TSZ-DESC SY0CW-TSZ-DESC ; 
    10 SWPMNSZ SWPMNSZ ; 
    10 SWPMXSZ SWPMXSZ ; 
end // end SY0CW04

//*** RECORD=SY0CW05 ****
//      General Purpose Working Storage for SY0C
// 
//      This record is used to sort screen M010 plus data held
//      in SY0CW04. Row 9 is used as the holding area during
//      the sort.
// 
// ***********************
Record SY0CW05 type basicRecord
  5 SY0CW-W05-ARRAY SY0CW-W05-ARRAY [9] ; 
    10 SY0CW-W05-KEY SY0CW-W05-KEY ; 
      15 SY0CW-W05-SZID SY0CW-W05-SZID ; 
      15 SY0CW-SEQ-NBR SY0CW-SEQ-NBR ; 
    10 SY1UNPCS SY1UNPCS ; 
    10 SY0CW-FSZ-DESC SY0CW-FSZ-DESC ; 
    10 SWPMNSZ SWPMNSZ ; 
    10 SY0CW-TSZ-DESC SY0CW-TSZ-DESC ; 
    10 SWPMXSZ SWPMXSZ ; 
    10 PKLCTNCD PKLCTNCD ; 
    10 SWPMNCP1 SWPMNCP1 ; 
    10 SWPMXCP1 SWPMXCP1 ; 
    10 SWPMNCP2 SWPMNCP2 ; 
    10 SWPMXCP2 SWPMXCP2 ; 
    10 SWPMNCP3 SWPMNCP3 ; 
    10 SWPMXCP3 SWPMXCP3 ; 
    10 SWPMNCP4 SWPMNCP4 ; 
    10 SWPMXCP4 SWPMXCP4 ; 
end // end SY0CW05

// SL_MIN_CASE_PLT1
DataItem SWPMNCP1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MIN_CASE_PLT2
DataItem SWPMNCP2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MIN_CASE_PLT3
DataItem SWPMNCP3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MIN_CASE_PLT4
DataItem SWPMNCP4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MAX_CASE_PLT1
DataItem SWPMXCP1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MAX_CASE_PLT2
DataItem SWPMXCP2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MAX_CASE_PLT3
DataItem SWPMXCP3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SL_MAX_CASE_PLT4
DataItem SWPMXCP4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Line Action Code (A,C,D)
DataItem SY0CMACT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// units per case 1
DataItem SY0CMUC1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 2
DataItem SY0CMUC2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 3
DataItem SY0CMUC3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 4
DataItem SY0CMUC4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 5
DataItem SY0CMUC5 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 6
DataItem SY0CMUC6 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 7
DataItem SY0CMUC7 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// units per case 8
DataItem SY0CMUC8 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// End of Screen - Map M010
DataItem SY0CW-EOS-M010 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row exists in UCASE (Y/N)
DataItem SY0CW-EXISTS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// From Size Desc.
DataItem SY0CW-FSZ-DESC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row array for UCASE data
DataItem SY0CW-M010-ARRAY char(71)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// User pressed PF3 (Y/N)
DataItem SY0CW-PF3-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX-REC-SEQ-NBR
DataItem SY0CW-SEQ-NBR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Count of size ranges on screen
DataItem SY0CW-SZ-COUNT decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Size found in SY4REC (Y/N)
DataItem SY0CW-SZ-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// To Size Desc.
DataItem SY0CW-TSZ-DESC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row array for UCASE data
DataItem SY0CW-W05-ARRAY char(55)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key items used by sort
DataItem SY0CW-W05-KEY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// From Size Id.
DataItem SY0CW-W05-SZID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Array for Screen Lines
DataItem SY0CW3AY char(54)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group Data Item
DataItem SY0CW3GP char(490)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Length of Record
DataItem SY0CW3LN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Build Screen (Y/N)
DataItem SY0CWBLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Anything Changed?(Y/N)
DataItem SY0CWCHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript counter
DataItem SY0CWCT1 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript counter
DataItem SY0CWCT2 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript counter
DataItem SY0CWCT3 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Subscript
DataItem SY0CWCT4 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Bucket Currently in Use
DataItem SY0CWEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Screen/Scan Flag
DataItem SY0CWEOS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Maximum Lines - Screen 1
DataItem SY0CWML1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Maximum lines - Screen 2
DataItem SY0CWML2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Sort Switch
DataItem SY0CWSSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Something Updated?
DataItem SY0CWSUF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0CWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// We have SWP Data?(Y/N)
DataItem SY0CWSWP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Max. Page of Temp Storage
DataItem SY0CWTMX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Curr. Page of Temp Storage
DataItem SY0CWTNO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Temp Storage work field
DataItem SY0CWTNW num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update UCASE (Y/N)
DataItem SY0CWUFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

