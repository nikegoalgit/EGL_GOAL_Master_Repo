package sy0f;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY0F ****
// this application adds cost rows to the cost table. the
// general flow of processes in the application is as follows:
//    sy0f010(execute)  - general initialization
//    sy0f020(converse) - edit upper half of screen
//    sy0f030(execute)  - obtain corporate table data
//    sy0f040(execute)  - obtain style data
//    sy0f045(execute)  - next screen moves
//    sy0f050(converse) - display style data
//    sy0f060(execute)  - obtain style data
//    sy0f070(converse) - display cost data
//    sy0f080(execute)  - update detail cost rows.
// ************************************************************
// maintenance:
//  project
//  number         who           when              why
// --------   -------------   ----------   -------------------
//              j.brady        06-23-86    created application
//              m.buhite       05-19-87    sy0fs11: increased
//                  size of syarec.syabfln & syarec.syaftln.
//              m.buhite       11-20-87    sy0fs11: increased
//                  size of syarec.syabfln & syarec.syaftln.
//              m.buhite       03-18-88    sy0fs11: increased
//                  size of syarec.syabfln & syarec.syaftln.
//              m.buhite       07-13-88    sy0fs41: costtype 01
//                  effective date defaults to last monthday.
//              m.buhite       11-22-88    sy0fs41: remove
//                  last monthday routine.
//  p090        m.buhite       01-13-89    sy0fs11 & syofs12:
//        increased size of syarec.syabfln & syarec.syaftln.
//              VCowan         04-17-89    added XSSEGTR logic
//  -spl-       jwood          04-17-89    added noncsp opt log
//          MHALST  05-16-89  Audit changes for VCOLOR01.
//          MHALST  09-25-89  Correct code to default cost eff.
//                            date to today if adding cost rec.
//          MHALST  11-13-89  Data base changes and add SYZTBL
//          MHALST  04-02-90  Data base changes, remove XTV
//          MHALST  10-08-90  Data base changes, change SYAREC
//          MHALST  02-11-91  Data base changes, SY2REC
//          JRAMOS  02-24-93  Bypass color if the Nike Dept Id
//                            = 'EAO ' and the color product
//                            region code not = '02'
//          MHALST  04-26-93  Change to use XPSY002 to check
//                            for prices on XLC change
//          MHALST  03-01-94  Data base changes, XCT & ZFC
//  SY0211  MBUHIT  04-20-94  Add marketing region logic.
//  SY0211  MHALST  08-23-94  Supress region upd if not active
//          MHALST  10-02-95  Add SY1550 and MN0V calls
//         JNARAS   02-25-99  Changed the processes SY0F020 ,
//                            SY0F050 and SY0F070  to accept
//                            -1 and +1 for the SY0FMRND field.
// ************************************************************
//          ngango  11-03-97  Y2K MODIFICATION. Working Storage
//               changed SY0EW01, Processes SY0F020,SY0F050
//                  and SY0F070.
// MHALST 3/29/05 Recompile for changes to xpsy0002.
// ************************************************************
// io modules used         table view name
// ---------------         ---------------
//     io0120              dprod.vstyle01
//     io0130              dprod.vcolor01
//     io6640              dprod.vsyreg01
//     io0380              dprod.vprice01
//     io0360              dprod.vdcost01
//     io0410              dprod.vcosth01
//     io0530              dprod.vsyaud01
//     io0520              dprod.vsytag01
// 
// 
// ************************************************************
// C2CIM SSUNNA 7/2/2008 - GOAL price/lifecycle changes
// *********************
Program SY0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  SY0FW01 SY0FW01; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY5REC SY5REC; // record
  SY6REC SY6REC; // record
  SY8REC SY8REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VSYREG02 VSYREG02; // record
  VZFC0001 VZFC0001; // record
  WSY1550 WSY1550; // record
  XCOREC XCOREC; // record
  XGPREC XGPREC; // record
  XLCREC XLCREC; // record
  XP0HW01 XP0HW01; // record
  XP0HW02 XP0HW02; // record
  XX0XW02 XX0XW02; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use SYRGTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XCOTBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use SY0FM.SY0FM001,  // forms
      SY0FM.XP0HM001, 
      SY0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0F010: SY0F010();


     /* *******************************************/
     /* *  flow for process sy0f010 starts here  **/
     /* *******************************************/


    goto SY0F020;


     /* *******************************************/
     /* *  flow for process sy0f010 ends here    **/
     /* *******************************************/
    SY0F020: SY0F020();


     /* *****************************************************/
     /* *  this begins the flow stage for process sy0f020  **/
     /* *****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0F020;
    else
      if (converseVar.eventKey is pf12
       || converseVar.eventKey is enter)
        goto SY0F030;
      else
        goto SY0F010;
      end
    end


     /* ***************************************************/
     /* *  this ends the flow stage for process sy0f020  **/
     /* ***************************************************/
    SY0F030: SY0F030();


     /* ****************************************************/
     /* *  this begins the flow stage of process sy0f030  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0F020;
    else
      if (SY0FM001.SY0FMSTY == "  ")
        SY0FW01.SY0FWSW3 = "N";
        goto SY0F050;
      else
        SY0FW01.SY0FWSW3 = "Y";
        goto SY0F040;
      end
    end


     /* **************************************************/
     /* *  this ends the flow stage of process sy0f030  **/
     /* **************************************************/
    SY0F040: SY0F040();


     /* *****************************************************/
     /* *  this begins the flow stage for process sy0f040  **/
     /* *****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0F020;
    else
      SY0FWCT4 = 1;
      goto SY0F045;
    end


     /* ***************************************************/
     /* *  this ends the flow stage for process sy0f040  **/
     /* ***************************************************/
    SY0F045: SY0F045();


     /* *****************************************************/
     /* *   this begins the flow stage of process sy0f045  **/
     /* *****************************************************/


    goto SY0F070;


     /* ***************************************************/
     /* *   this ends the flow stage of process sy0f045  **/
     /* ***************************************************/
    SY0F050: SY0F050();


     /* ****************************************************/
     /* *  this begins the flow stage of process sy0f050  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0F050;
    else
      if (converseVar.eventKey is pf12
       || converseVar.eventKey is enter)
        goto SY0F060;
      else
        goto SY0F010;
      end
    end


     /* **************************************************/
     /* *  this ends the flow stage of process sy0f050  **/
     /* **************************************************/
    SY0F060: SY0F060();


     /* ****************************************************/
     /* *  this begins the flow stage of process sy0f060  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0F050;
    else
      goto SY0F070;
    end


     /* **************************************************/
     /* *  this ends the flow stage of process sy0f060  **/
     /* **************************************************/
    SY0F070: SY0F070();


     /* ****************************************************/
     /* *  this begins the flow stage of process sy0f070  **/
     /* ****************************************************/

    if (converseVar.validationMsgNum != 0 /* set costs modified if errors*/
     || converseVar.eventKey is pf12)    
      SY0FWIDX = 1;
      while (SY0FWIDX <= 9)
        if (SY0FM001.SY0FM1CO[SY0FWIDX] is modified)
          set SY0FM001.SY0FM1CO[SY0FWIDX] modified;
        end
        if (SY0FM001.SY0FM2CO[SY0FWIDX] is modified)
          set SY0FM001.SY0FM2CO[SY0FWIDX] modified;
        end
        SY0FWIDX = SY0FWIDX + 1;
      end
    end

    if (converseVar.validationMsgNum != 0
     || converseVar.eventKey is pf12)
      goto SY0F070;
    else
      if (converseVar.eventKey is enter)
        goto SY0F080;
      else
        goto SY0F010;
      end
    end


     /* **************************************************/
     /* *  this ends the flow stage of process sy0f070  **/
     /* **************************************************/
    SY0F080: SY0F080();


     /* ****************************************************/
     /* *  this begins the flow stage of process sy0f080  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum == 0)
      if (SY0FW01.SY0FWSW1 == "Y") /* was there an update?*/
        converseLib.validationFailed(11);
      else
        SY0FW01.SY0FWSW1 = "N";
      end
      if (SY0FWSW3 == "Y")
        if (SY0FWCT4 <= SY0FWCT3)
          goto SY0F045;
        else
          set SY0FW01 empty;
          SY0FWCT2 = 1;
          while (SY0FWCT2 <= 9)
            SY0FM001.SY1STNBR[SY0FWCT2] = " ";
            SY0FM001.SY1SSTNM[SY0FWCT2] = " ";
            SY0FWCT2 = SY0FWCT2 + 1;
          end
          set SY0FM001.SY0FMSTY cursor;
          goto SY0F020;
        end
      else
        set SY0FW01 empty;
        set SY0FM001.SY0FMSTY cursor;
        goto SY0F020;
      end
    else
      goto SY0F070;
    end


     /* **************************************************/
     /* *  this ends the flow stage of process sy0f080  **/
     /* **************************************************/
  end // end main
end // end SY0F

// security and initialization
Function SY0F010()


   /* ********************************************************/
   /* *  processing in this option includes:                **/
   /* *    1) test security clearance for the application   **/
   /* *    2) initialize fields                             **/
   /* *    3) set up the map screen                         **/
   /* ********************************************************/


  XSENTRY(); /* security check*/

  XSSEGTR(); /* set segemented transaction id*/

  set SY0FM001 initial;
  set SY0FW01 empty;
  set SYWREC empty;
  set SY1REC empty;
  set SY2REC empty;
  set VSYREG02 empty;
  set SY5REC empty;
  set SY6REC empty;
  set SY8REC empty;
  set SY9REC empty;
  set SYAREC empty;
  set VZFC0001 empty;
  set ZFCWREC empty;

  SY0FM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0FM001.SYMRVNBR = "00";
  SY0FM001.SYMTTLNM = "         PRODUCT COST - ADD           ";

  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGEN = VGVar.currentShortGregorianDate;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SY0FM001.SY6CSEDT = TA2REC.TA2GRGAN;
    SY0FW01.SY0FWDTE = TA2REC.TA2GRGGN;
  else
    converseLib.validationFailed(42); /* internal date error - call systems*/
                                   /* development*/
    exit stack;
  end

   /* Now, find out what region user is and set-up table of*/
   /* valid country/currenties the user can enter.*/
  set WSY1550 empty;
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE > 0)
    if (SYWREC.SYW-ALL-REGIONS-FL == "Y")
      SY0FM001.XCTCD = "USA";
      SY0FM001.ZFC-CRCY-CD = "USD";
    else
      XPSY009(); /* Get countries for region*/
      if (WSY1550-RETURN-CODE == 00
       && WSY1550-TABLE-SIZE == 1)
        SY0FM001.XCTCD = WSY1550.XCT-CTRY-CD[1];
        SY0FM001.ZFC-CRCY-CD = WSY1550.ZFC-CRCY-CD[1];
      end
    end
  else /* No region for user, tell them*/
    converseLib.validationFailed(124); /* User Id not authorized*/
  end
  if (SY0FM001.XCTCD != " ")
    if (SY0FM001.XCTCD in XCTTBL.XCTCD)
      SY0FM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
    SY0FS-GET-ZFC();
  else
    set SY0FM001.XCTCD cursor;
  end

  SY0FM001.XGPCD = COMMAREA.XGPCD;
  if (SY0FM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized to use this gpc*/
      set SY0FM001.XGPCD cursor, bold;
      exit stack;
    else
      if (SY0FM001.XGPCD in XGPTBL.XGPCD)
        SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0FM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  else
    if (SY0FM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized to use this gpc*/
        set SY0FM001.XGPCD cursor, bold;
        exit stack;
      else
        if (SY0FM001.XGPCD in XGPTBL.XGPCD)
          SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc code entered*/
          set SY0FM001.XGPCD cursor, bold;
          exit stack;
        end
      end
    else
      if (SY0FM001.XGPCD in XGPTBL.XGPCD)
        SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0FM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  end


end // end SY0F010

// display cost by color add
Function SY0F020()



   /* *******************************************************/
     /* processing in the 'before' stage includes:        **/
       /* 1) obtain work dates from system date           **/
       /* 2) protect screen fields                        **/
       /* 3) move application title name to screen area   **/
       /* 4) move program revision number to screen area  **/
   /* *******************************************************/


  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGEN = VGVar.currentShortGregorianDate;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SY0FW01.SY0FWDTE = TA2REC.TA2GRGGN;
  else
    converseLib.validationFailed(42); /* internal date error - call systems*/
                                   /* development*/
    exit stack;
  end

  SY0FWCT1 = 1;
  while (SY0FWCT1 <= 9)
    set SY0FM001.SY1STNBR[SY0FWCT1] protect;
    set SY0FM001.SY2CLRID[SY0FWCT1] protect;
    set SY0FM001.XDMCD[SY0FWCT1] protect;
    set SY0FM001.XLCCD[SY0FWCT1] protect;
    set SY0FM001.SY6SCTCD[SY0FWCT1] protect;
    set SY0FM001.SY0FM1CO[SY0FWCT1] protect;
    set SY0FM001.SY0FM2CO[SY0FWCT1] protect;
    SY0FWCT1 = SY0FWCT1 + 1;
  end

  SY0FM001.SYMPRONM = "SY0F020";
  SY0FM001.SYMRVNBR = "05"; /* program revision number!!!!!*/

  converseVar.segmentedMode = 1;


  converse SY0FM001 ;


   /* *******************************************************/
     /* processing in the 'after'  stage includes:        **/
       /* 1) check for fast path option                   **/
       /* 2) check pfkeys                                 **/
       /* 3) reset screen attributes                      **/
       /* 4) perform screen edits                         **/
       /* 5)*/
   /* *******************************************************/


  SY0FS01(); /* check fast path option*/

  SY0FS02(); /* check pfkeys*/

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  else
    SY0FM001.SYMSCMSG = " ";
    set SY0FM001.XGPCD initialAttributes;
    set SY0FM001.XCTCD initialAttributes;
    set SY0FM001.ZFC-CRCY-CD initialAttributes;
    set SY0FM001.XCOCD initialAttributes;
    set SY0FM001.SY6CSEDT initialAttributes;
    set SY0FM001.SY0FMSTY initialAttributes;
    set SY0FM001.SY0FMLCY initialAttributes;
    set SY0FM001.SY0FMCAL initialAttributes;
    set SY0FM001.SY0FMPCT initialAttributes;
    set SY0FM001.SY0FMCNT initialAttributes;
    set SY0FM001.SY0FMRND initialAttributes;
    SY0FWCT1 = 1;
    while (SY0FWCT1 <= 9)
      set SY0FM001.SY1STNBR[SY0FWCT1] initialAttributes;
      set SY0FM001.SY2CLRID[SY0FWCT1] initialAttributes;
      set SY0FM001.XDMCD[SY0FWCT1] initialAttributes;
      set SY0FM001.XLCCD[SY0FWCT1] initialAttributes;
      set SY0FM001.SY6SCTCD[SY0FWCT1] initialAttributes;
      set SY0FM001.SY0FM1CO[SY0FWCT1] initialAttributes;
      set SY0FM001.SY0FM2CO[SY0FWCT1] initialAttributes;
      SY0FWCT1 = SY0FWCT1 + 1;
    end
  end

  if (SY0FM001.SY0FMRND != 0
   && SY0FM001.SY0FMRND != .25
   && SY0FM001.SY0FMRND != .50
   && SY0FM001.SY0FMRND != 1.00
   && SY0FM001.SY0FMRND != -.25
   && SY0FM001.SY0FMRND != -.50
   && SY0FM001.SY0FMRND != -1.00)
    converseLib.validationFailed(46); /* a rnding value must be*/
                                   /* .25,.50,1,-.25,-.50,-1*/
    set SY0FM001.SY0FMRND cursor, bold;
  end


  if (SY0FM001.SY0FMCAL == "Y")
    if (SY0FM001.SY0FMPCT == 0)
      converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* value*/
      set SY0FM001.SY0FMPCT cursor, bold;
    end
  end


  if (SY0FM001.SY0FMCAL != "Y"
   && SY0FM001.SY0FMCAL != "N")
    converseLib.validationFailed(36); /* value must be 'y' or 'n'*/
    set SY0FM001.SY0FMCAL cursor, bold;
  end


  if (SY0FM001.SY0FMLCY != "  ")
    if (SY0FM001.SY0FMSTY == "      ")
      converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* value*/
      set SY0FM001.SY0FMSTY cursor, bold;
    end
  end


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  /*  */
  /* ---------------- y2k out begin -----------------*/
  /*  */
  /* MOVE 19 TO TA2REC.TA2CENT;*/
  /*  */
  /* ---------------- y2k out end -------------------*/
  /*  */
  /*  */
  /* ---------------- y2k in begin ------------------*/
  /*  */
  SY0FW01.SY0FW-CSEDT-MMDDYY = SY0FM001.SY6CSEDT;
  if (SY0FW01.SY0FW-CSEDT-YY > 60)
    TA2REC.TA2CENT = 19;
  else
    TA2REC.TA2CENT = 20;
  end
  /*  */
  /* ---------------- y2k in end --------------------*/
  /*  */
  TA2REC.TA2GRGAN = SY0FM001.SY6CSEDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0)
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY0FM001.SY6CSEDT cursor, bold;
    exit stack;
  else
    if (TA2REC.TA2GRGGN < SY0FW01.SY0FWDTE)
  /*    MOVE 30 TO EZEMNO;           /* invalid date entered*/
      converseLib.validationFailed(246); /*  Eff. date  is less than current date*/
      set SY0FM001.SY6CSEDT cursor, bold;
    end
  end


  if (SY0FM001.XCOCD == "  ")
    converseLib.validationFailed(40); /* required field  - please enter a*/
                                   /* valid value*/
    set SY0FM001.XCOCD cursor, bold;
  end


  if (SY0FM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* invalid gpc code entered*/
      set SY0FM001.XGPCD cursor, bold;
    else
      if (SY0FM001.XGPCD in XGPTBL.XGPCD)
        SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31);
        set SY0FM001.XGPCD cursor, bold;
      end
    end
  else
    if (SY0FM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* invalid gpc code entered*/
        set SY0FM001.XGPCD cursor, bold;
      end
    else
      if (SY0FM001.XGPCD in XGPTBL.XGPCD)
        SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31);
        set SY0FM001.XGPCD cursor, bold;
      end
    end
  end


end // end SY0F020

// read corporate tables
Function SY0F030()


   /* **********************************************************/
   /* *  this process obtains the data necessary for screen   **/
   /* *  display.                                             **/
   /* **********************************************************/

   /* ***********************/
   /* obtain gpc abbreviation*/
   /* ***********************/

  if (SY0FM001.XGPCD in XGPTBL.XGPCD)
    SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end
  if (sysVar.arrayIndex == 0)
    converseLib.validationFailed(31); /* invalid gpc code entered*/
    set SY0FM001.XGPCD cursor, bold;
  end

   /* ************************/
   /* obtain country/currency*/
   /* ************************/

  SY0FS-POPUPS(); /* Check for pop up requests*/

  SY0FS-GET-ZFC(); /* validate currency code*/

  SY0FM001.XCTDESC = " ";
  if (SY0FM001.XCTCD in XCTTBL.XCTCD)
    SY0FM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    if (XCTTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      converseLib.validationFailed(33);
      set SY0FM001.XCTCD cursor, bold;
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY0FM001.XCTCD cursor, bold;
  end

   /* Now check that country/currency is valid for region*/
  if (converseVar.validationMsgNum == 0 /* If no errors*/
   && SYWREC.SYW-ALL-REGIONS-FL == "N")
    WSY1550-IDX = 1;
    SYWREC.SYW-XCT-ZFC-FL = "N";
    while (WSY1550-IDX <= WSY1550-TABLE-SIZE
     && SYWREC.SYW-XCT-ZFC-FL == "N")
      if (SY0FM001.XCTCD == WSY1550.XCT-CTRY-CD[WSY1550-IDX]
       && SY0FM001.ZFC-CRCY-CD == WSY1550.ZFC-CRCY-CD[WSY1550-IDX])
        SYWREC.SYW-XCT-ZFC-FL = "Y";
      else
        WSY1550-IDX = WSY1550-IDX + 1;
      end
    end
    if (SYWREC.SYW-XCT-ZFC-FL == "N") /* Not found in table*/
      converseLib.validationFailed(127); /* so not allowed to use*/
      set SY0FM001.XCTCD cursor, bold;
      set SY0FM001.ZFC-CRCY-CD bold;
    end
  end

   /* ***********************/
   /* obtain life cycle data*/
   /* ***********************/

  if (SY0FM001.SY0FMLCY != "  ")
    if (SY0FM001.SY0FMLCY in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      converseLib.validationFailed(3); /* invalid code*/
      set SY0FM001.SY0FMLCY cursor, bold;
    else
      SY0FM001.XLCDESC = XLCREC.XLCDESC;
    end
  else
    SY0FM001.XLCDESC = " ";
  end

   /* ***********************/
   /* obtain cost type data*/
   /* ***********************/

  if (SY0FM001.XCOCD in XCOTBL.XCOCD)
    XCOREC.XCODESC = XCOTBL.XCODESC[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0)
    converseLib.validationFailed(3); /* invalid code*/
    set SY0FM001.XCOCD cursor, bold;
  else
    if (XCOTBL.XXXSTAT[sysVar.arrayIndex] != "A")
      converseLib.validationFailed(33);
    else
      SY0FM001.XCODESC = XCOREC.XCODESC;
    end
  end


end // end SY0F030

// verify style number
Function SY0F040()


   /* **********************************************************/
   /* *  this process obtains the style data necessary for    **/
   /* *  uom code,cost category code, and royalty code        **/
   /* **********************************************************/

   /* *******************************/
   /* obtain style record*/
   /* *******************************/

  SY1REC.XGPCD = SY0FM001.XGPCD;
  SY1REC.SY1STNBR = SY0FM001.SY0FMSTY;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(5); /* style record does not exist*/
    set SY0FM001.SY0FMSTY cursor, bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(20); /* style table error - contact sys. development*/
      SY0FM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      set SY0FM001.SY0FMSTY cursor, bold;
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0F040  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY1REC";
      TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    else
      SY0FM001.SY1STNBR[1] = SY1REC.SY1STNBR;
      SY0FM001.SY1SSTNM[1] = SY1REC.SY1SSTNM;
      SY0FM001.XCWCD[1] = SY1REC.XCWCD;
      SY0FW01.SY1DATA = SY1REC.SY1DATA;
    end
  end

   /* ************************/
   /* obtain style color rows*/
   /* ************************/

  SY2REC.XGPCD = SY0FM001.XGPCD;
  SY2REC.SY1STNBR = SY0FM001.SY0FMSTY;
  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    set SY0FM001.SY1STNBR cursor, bold;
    converseLib.validationFailed(21); /* color table error - contact systems dvlpmnt*/
    SY0FM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0F   ";
    TA1REC.TA1LOCAT[1] = "SS       ";
    TA1REC.TA1LOCAT[2] = "SY0F040  ";
    TA1REC.TA1LOCAT[3] = "IO0130   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0FM001";
    TA1REC.TA1DBASE = "SY2REC";
    TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  else
    SY0FWCT3 = 1;
    while (SQLCA.VAGen_SQLCODE == 0
     && converseVar.validationMsgNum == 0)
      SY0FS03(); /* obtain color rows for a style*/
    end
  end

  if (SY0FWCT3 == 1)
    SY0FM001.SY1STNBR[1] = " ";
    SY0FM001.SY1SSTNM[1] = " ";
    SY0FM001.XCWCD[1] = " ";
    converseLib.validationFailed(59);
    set SY0FM001.SY0FMSTY cursor, bold;
  else
    SY0FWCT3 = SY0FWCT3 - 1;
  end

  if (SY0FWCT3 > 9)
    SY0FW01.SY0FWNUM = SY0FWCT3;
    SY0FW01.SY0FWRST = " COLORS SELECTED";
    SY0FM001.SYMSCMSG = SY0FW01.SY0FWMES;
  end

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* develpment*/
    SY0FM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0F   ";
    TA1REC.TA1LOCAT[1] = "CS       ";
    TA1REC.TA1LOCAT[2] = "SY0F040  ";
    TA1REC.TA1LOCAT[3] = "IO0130   ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0FM001";
    TA1REC.TA1DBASE = "SY2REC";
    TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end

   /* now reset warning array*/
  SY0FW01.SY0FWARN[1] = "N";
  SY0FW01.SY0FWARN[2] = "N";
  SY0FW01.SY0FWARN[3] = "N";
  SY0FW01.SY0FWARN[4] = "N";
  SY0FW01.SY0FWARN[5] = "N";
  SY0FW01.SY0FWARN[6] = "N";
  SY0FW01.SY0FWARN[7] = "N";
  SY0FW01.SY0FWARN[8] = "N";
  SY0FW01.SY0FWARN[9] = "N";
  SY0FW01.SY0FWARN[10] = "N";

end // end SY0F040

// next screen moves
Function SY0F045()


   /* ******************************************************/
   /* *  this process displays cost by color/dimension    **/
   /* *  data.                                            **/
   /* ******************************************************/


  SY0FWCT2 = 1;
  while (SY0FWCT2 <= 9)
    SY0FM001.SY2CLRID[SY0FWCT2] = SY0FW01.SY0FWCLR[SY0FWCT4];
    SY0FM001.XDMCD[SY0FWCT2] = SY0FW01.SY0FWDIM[SY0FWCT4];
    SY0FM001.XLCCD[SY0FWCT2] = SY0FW01.SY0FWLCY[SY0FWCT4];
    SY0FW01.SY0FWSLC[SY0FWCT2] = SY0FW01.SY0FWLCY[SY0FWCT4];
    SY0FW01.SY0FW-PROT-XLC[SY0FWCT2] = SY0FW01.SY0FW-NO-UPD[SY0FWCT4];
    SY0FWCT2 = SY0FWCT2 + 1;
    SY0FWCT4 = SY0FWCT4 + 1;
  end

end // end SY0F045

// display cost by color/dim
Function SY0F050()


   /* ********************************************************/
   /* *  processing in the 'before' stage includes:         **/
   /* *    1) protect required fields                       **/
   /* *    2) set cursor if necessary                       **/
   /* ********************************************************/


  set SY0FM001.XCOCD protect;
  set SY0FM001.SY0FMSTY protect;
  set SY0FM001.SY0FMLCY protect;
  SY0FWCT1 = 1;
  while (SY0FWCT1 <= 9)
    if (SY0FM001.XDMCD[SY0FWCT1] == "  ")
      SY0FM001.XDMCD[SY0FWCT1] = "00";
    end
    set SY0FM001.XLCCD[SY0FWCT1] protect;
    set SY0FM001.SY6SCTCD[SY0FWCT1] protect;
    set SY0FM001.SY0FM1CO[SY0FWCT1] protect;
    set SY0FM001.SY0FM2CO[SY0FWCT1] protect;
    SY0FWCT1 = SY0FWCT1 + 1;
  end

  if (converseVar.validationMsgNum == 0)
    SY0FWCT1 = 1;
    while (SY0FWCT1 <= 9)
      if (SY0FM001.SY1STNBR[SY0FWCT1] != "      ")
        set SY0FM001.SY1STNBR[SY0FWCT1] cursor;
        SY0FWCT1 = 10;
      else
        set SY0FM001.SY1STNBR[1] cursor;
      end
      SY0FWCT1 = SY0FWCT1 + 1;
    end
  end

  SY0FM001.SYMPRONM = "SY0F050";

  converse SY0FM001 ;
   /* ********************************************************/
   /* *  processing in the 'after' stage includes:          **/
   /* *    1) check fast path and pf keys                   **/
   /* *    2) reset field attributes                        **/
   /* *    3) edit screen input                             **/
   /* ********************************************************/


  SY0FS01(); /* check fast path exit*/

  SY0FS02(); /* check pf keys*/

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  else
    set SY0FM001.XGPCD initialAttributes;
    set SY0FM001.XCTCD initialAttributes;
    set SY0FM001.ZFC-CRCY-CD initialAttributes;
    set SY0FM001.XCOCD initialAttributes;
    set SY0FM001.SY0FMSTY initialAttributes;
    set SY0FM001.SY0FMLCY initialAttributes;
    set SY0FM001.SY6CSEDT initialAttributes;
    set SY0FM001.SY0FMCAL initialAttributes;
    set SY0FM001.SY0FMPCT initialAttributes;
    set SY0FM001.SY0FMCNT initialAttributes;
    set SY0FM001.SY0FMRND initialAttributes;
    SY0FWCT2 = 1;
    while (SY0FWCT2 <= 9)
      set SY0FM001.SY1STNBR[SY0FWCT2] initialAttributes;
      set SY0FM001.SY2CLRID[SY0FWCT2] initialAttributes;
      set SY0FM001.XDMCD[SY0FWCT2] initialAttributes;
      set SY0FM001.XLCCD[SY0FWCT2] initialAttributes;
      set SY0FM001.SY6SCTCD[SY0FWCT2] initialAttributes;
      set SY0FM001.SY0FM1CO[SY0FWCT2] initialAttributes;
      set SY0FM001.SY0FM2CO[SY0FWCT2] initialAttributes;
      SY0FWCT2 = SY0FWCT2 + 1;
    end
  end

  SY0FWCT2 = 1;
  while (SY0FWCT2 <= 9)
    if (SY0FM001.SY1STNBR[SY0FWCT2] != "      ")
      SY0FW01.SY0FWSW4 = "Y";
                                   /* yes a style has been entered*/
      if (SY0FM001.XDMCD[SY0FWCT2] == "  ")
        converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* name*/
        set SY0FM001.XDMCD[SY0FWCT2] cursor, bold;
      end
      if (SY0FM001.SY2CLRID[SY0FWCT2] == "   ")
        converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* name*/
        set SY0FM001.SY2CLRID[SY0FWCT2] cursor, bold;
      end
    end
    SY0FWCT2 = SY0FWCT2 + 1;
  end

  if (SY0FW01.SY0FWSW4 != "Y")
    converseLib.validationFailed(32); /* please enter style number*/
    set SY0FM001.SY1STNBR[1] cursor, bold;
  else
    SY0FW01.SY0FWSW4 = "N";
  end

  if (SY0FM001.SY0FMRND != 0
   && SY0FM001.SY0FMRND != -.25
   && SY0FM001.SY0FMRND != -.50
   && SY0FM001.SY0FMRND != -1.00
   && SY0FM001.SY0FMRND != +.25
   && SY0FM001.SY0FMRND != +.50
   && SY0FM001.SY0FMRND != +1.00)
    converseLib.validationFailed(46); /* a rnding value must be*/
                                   /* .25,.50,1,-.25,-.50,-1*/
    set SY0FM001.SY0FMRND cursor, bold;
  end


  if (SY0FM001.SY0FMCAL == "Y")
    if (SY0FM001.SY0FMPCT == 0)
      converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* value*/
      set SY0FM001.SY0FMPCT cursor, bold;
    end
  end


  if (SY0FM001.SY0FMCAL != "Y")
    if (SY0FM001.SY0FMCAL != "N")
      converseLib.validationFailed(36); /* value must be 'y' or 'n'*/
      set SY0FM001.SY0FMCAL cursor, bold;
    end
  end


  if (SY0FM001.SY0FMLCY != " ")
    if (SY0FM001.SY0FMLCY in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      converseLib.validationFailed(3);
      set SY0FM001.SY0FMLCY cursor, bold;
    else
      SY0FM001.XLCDESC = XLCREC.XLCDESC;
    end
  else
    SY0FM001.XLCDESC = " ";
  end


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  /*  */
  /* ------------------ y2k out begin ------------------*/
  /*  */
  /* MOVE 19 TO TA2REC.TA2CENT;*/
  /*  */
  /* ------------------ y2k out end --------------------*/
  /*  */
  /*  */
  /* ------------------ y2k in  begin ------------------*/
  /*  */
  SY0FW01.SY0FW-CSEDT-MMDDYY = SY0FM001.SY6CSEDT;
  if (SY0FW01.SY0FW-CSEDT-YY > 60)
    TA2REC.TA2CENT = 19;
  else
    TA2REC.TA2CENT = 20;
  end
  /*  */
  /* ------------------ y2k in  end --------------------*/
  /*  */
  TA2REC.TA2GRGAN = SY0FM001.SY6CSEDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0)
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY0FM001.SY6CSEDT cursor, bold;
    exit stack;
  else
    if (TA2REC.TA2GRGGN < SY0FW01.SY0FWDTE)
  /*    MOVE 30 TO EZEMNO;           /* invalid date entered*/
      converseLib.validationFailed(246); /* eff. date must be greater than or equal to  current date*/
      set SY0FM001.SY6CSEDT cursor, bold;
    end
  end


  if (SY0FM001.XGPCD != COMMAREA.XGPCD)
    if (SY0FM001.XGPCD == "02")
      if (COMMAREA.CAALVL[2] == "N")
        converseLib.validationFailed(35);
        set SY0FM001.XGPCD cursor, bold;
      else
        if (SY0FM001.XGPCD in XGPTBL.XGPCD)
          SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31);
          set SY0FM001.XGPCD cursor, bold;
        end
      end
    else
      if (SY0FM001.XGPCD == "03")
        if (COMMAREA.CAALVL[3] == "N")
          converseLib.validationFailed(35);
          set SY0FM001.XGPCD cursor, bold;
        else
          if (SY0FM001.XGPCD in XGPTBL.XGPCD)
            SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
          end
          if (sysVar.arrayIndex == 0)
            converseLib.validationFailed(31);
            set SY0FM001.XGPCD cursor, bold;
          end
        end
      else
        if (SY0FM001.XGPCD in XGPTBL.XGPCD)
          SY0FM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31);
          set SY0FM001.XGPCD cursor, bold;
        end
      end
    end
  end


end // end SY0F050

// read and verify style data
Function SY0F060()


   /* **********************************************************/
   /* *  this process obtains the style data necessary for    **/
   /* *  uom code,cost category code, and royalty code        **/
   /* **********************************************************/


  SY0FWCT2 = 9;
  while (SY0FWCT2 >= 1)
    SY0FS27(); /* obtain style data*/
    SY0FWCT2 = SY0FWCT2 - 1;
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  SY0FWCT2 = 9;
  while (SY0FWCT2 >= 1)
    SY0FS28(); /* obtain color data*/
    SY0FWCT2 = SY0FWCT2 - 1;
  end

  if (converseVar.validationMsgNum == 0)
    SY0FW01.SY0FWARN[1] = "N"; /* set flag to no*/
    SY0FW01.SY0FWARN[2] = "N";
    SY0FW01.SY0FWARN[3] = "N";
    SY0FW01.SY0FWARN[4] = "N";
    SY0FW01.SY0FWARN[5] = "N";
    SY0FW01.SY0FWARN[6] = "N";
    SY0FW01.SY0FWARN[7] = "N";
    SY0FW01.SY0FWARN[8] = "N";
    SY0FW01.SY0FWARN[9] = "N";
    SY0FW01.SY0FWARN[10] = "N";
  end

end // end SY0F060

// display cost by color
Function SY0F070()


   /* ******************************************************/
   /* *  processing in the 'before' stage includes:       **/
   /* *    1) protect map fields                          **/
   /* *    2) move process name to map area               **/
   /* *    3) convert system time                         **/
   /* ******************************************************/


  SY0FWCT1 = 1;
  while (SY0FWCT1 <= 9)
    if (SY0FM001.SY0FMCAL == "Y")
      set SY0FM001.SY0FM2CO[SY0FWCT1] protect;
    end
    SY0FWCT1 = SY0FWCT1 + 1;
  end

  SY0FWCT1 = 1;
  while (SY0FWCT1 <= 9)
    if (SY0FW01.SY0FWARN[SY0FWCT1] == "Y")
      set SY0FM001.SY1STNBR[SY0FWCT1] protect, bold;
      set SY0FM001.SY2CLRID[SY0FWCT1] protect, bold;
      set SY0FM001.XDMCD[SY0FWCT1] protect, bold;
    else
      set SY0FM001.SY1STNBR[SY0FWCT1] protect;
      set SY0FM001.SY2CLRID[SY0FWCT1] protect;
      set SY0FM001.XDMCD[SY0FWCT1] protect;
    end
    if (SY0FW01.SY0FW-PROT-XLC[SY0FWCT1] == "Y")
      set SY0FM001.XLCCD[SY0FWCT1] protect;
    end
    SY0FWCT1 = SY0FWCT1 + 1;
  end

  set SY0FM001.XGPCD protect;
  set SY0FM001.XCOCD protect;
  set SY0FM001.SY0FMSTY protect;
  set SY0FM001.SY0FMLCY protect;

  if (converseVar.validationMsgNum == 0)
    if (SY0FW01.SY0FW-PROT-XLC[1] == "Y")
      set SY0FM001.SY0FM1CO[1] cursor;
    else
      set SY0FM001.XLCCD[1] cursor;
    end
  end

  SY0FS19(); /* convert system time*/

  SY0FM001.SYMPRONM = "SY0F070";

  converse SY0FM001 ;


   /* ******************************************************/
   /* *  processing in the 'after' stage includes:       **/
   /* *    1) check fast path and pfkeys                  **/
   /* *    2) reset screen attributes                     **/
   /* *    3) edit input fields                           **/
   /* ******************************************************/


  SY0FS01(); /* check fast path exit*/

  SY0FS02(); /* check pf keys*/

  if (SY0FM001.SY6CSEDT is modified)
    SY0FW01.SY0FWEDT = SY0FM001.SY6CSEDT;
  /*  EZEFLO;*/
  end

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  else
    SY0FM001.SYMSCMSG = " ";
    set SY0FM001.XGPCD initialAttributes;
    set SY0FM001.XCTCD initialAttributes;
    set SY0FM001.ZFC-CRCY-CD initialAttributes;
    set SY0FM001.XCOCD initialAttributes;
    set SY0FM001.SY0FMSTY initialAttributes;
    set SY0FM001.SY0FMLCY initialAttributes;
    set SY0FM001.SY6CSEDT initialAttributes;
    set SY0FM001.SY0FMCAL initialAttributes;
    set SY0FM001.SY0FMPCT initialAttributes;
    set SY0FM001.SY0FMCNT initialAttributes;
    set SY0FM001.SY0FMRND initialAttributes;
    SY0FWCT2 = 1;
    while (SY0FWCT2 <= 9)
      set SY0FM001.SY1STNBR[SY0FWCT2] initialAttributes;
      set SY0FM001.SY2CLRID[SY0FWCT2] initialAttributes;
      set SY0FM001.XDMCD[SY0FWCT2] initialAttributes;
      set SY0FM001.XLCCD[SY0FWCT2] initialAttributes;
      set SY0FM001.SY6SCTCD[SY0FWCT2] initialAttributes;
      set SY0FM001.SY0FM1CO[SY0FWCT2] initialAttributes;
      set SY0FM001.SY0FM2CO[SY0FWCT2] initialAttributes;
      SY0FWCT2 = SY0FWCT2 + 1;
    end
  end

  SY0FSSM(); /* determine what lines have costs*/

  SY0FWCT2 = 9;
  while (SY0FWCT2 >= 1)
    if (SY0FM001.XLCCD[SY0FWCT2] != SY0FW01.SY0FWSLC[SY0FWCT2]
     && SY0FW01.SY0FWSLC[SY0FWCT2] != "05")
      converseLib.validationFailed(68); /* life cycle must be '05'*/
      set SY0FM001.XLCCD[SY0FWCT2] cursor, bold;
      exit stack;
    end
    if (SY0FM001.XLCCD[SY0FWCT2] != SY0FW01.SY0FWSLC[SY0FWCT2]
     && SY0FM001.XLCCD[SY0FWCT2] != "10")
      converseLib.validationFailed(56); /* NEW LIFE CYCLE CAN ONLY BE '10',*/
                                   /* ACTIVE*/
      set SY0FM001.XLCCD[SY0FWCT2] cursor, bold;
      exit stack;
    end
    if (SY0FM001.XLCCD[SY0FWCT2] != SY0FW01.SY0FWSLC[SY0FWCT2])
      if (SY0FM001.XLCCD[SY0FWCT2] == "10")
        if (SY0FW01.SY0FW1MD[SY0FWCT2] == "N")
          converseLib.validationFailed(40); /* required field - enter a valid value*/
          set SY0FM001.SY0FM1CO[SY0FWCT2] cursor, bold;
          exit stack;
        end
      end
    end
    if (SY0FM001.SY2CLRID[SY0FWCT2] != "   ")
      if (SY0FM001.XGPCD == "02"
       || SY0FM001.XGPCD == "03")
        if (SY0FW01.SY0FW1MD[SY0FWCT2] == "Y"
         && SY0FM001.SY0FM1CO[SY0FWCT2] == 0)
          converseLib.validationFailed(85); /* zero cost invalid for gpc*/
          set SY0FM001.SY0FM1CO[SY0FWCT2] cursor, bold;
          exit stack;
        end
        if (SY0FW01.SY0FW2MD[SY0FWCT2] == "Y"
         && SY0FM001.SY0FM2CO[SY0FWCT2] == 0)
          converseLib.validationFailed(85); /* zero cost invalid for gpc*/
          set SY0FM001.SY0FM2CO[SY0FWCT2] cursor, bold;
          exit stack;
        end
      end
    end
    SY0FWCT2 = SY0FWCT2 - 1;
  end

  if (SY0FM001.SY0FMRND != 0
   && SY0FM001.SY0FMRND != -.25
   && SY0FM001.SY0FMRND != -.50
   && SY0FM001.SY0FMRND != -1.00
   && SY0FM001.SY0FMRND != +.25
   && SY0FM001.SY0FMRND != +.50
   && SY0FM001.SY0FMRND != +1.00)
    converseLib.validationFailed(46); /* invalid rounding value*/
    set SY0FM001.SY0FMRND cursor, bold;
  end


  if (SY0FM001.SY0FMCAL == "Y")
    if (SY0FM001.SY0FMPCT == 0)
      converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* value*/
      set SY0FM001.SY0FMPCT cursor, bold;
    end
  end


  if (SY0FM001.SY0FMCAL != "Y")
    if (SY0FM001.SY0FMCAL != "N")
      converseLib.validationFailed(36); /* value must be 'y' or 'n'*/
      set SY0FM001.SY0FMCAL cursor, bold;
    end
  end


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  /*  */
  /* ------------------ y2k out begin -----------------*/
  /*  */
  /* MOVE 19 TO TA2REC.TA2CENT;*/
  /*  */
  /* ------------------ y2k out end -------------------*/
  /*  */
  /*  */
  /* ------------------ y2k in begin ------------------*/
  /*  */
  SY0FW01.SY0FW-CSEDT-MMDDYY = SY0FM001.SY6CSEDT;
  if (SY0FW-CSEDT-YY > 60)
    TA2REC.TA2CENT = 19;
  else
    TA2REC.TA2CENT = 20;
  end
  /*  */
  /* ------------------ y2k in  end -------------------*/
  /*  */
  TA2REC.TA2GRGAN = SY0FM001.SY6CSEDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0)
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY0FM001.SY6CSEDT cursor, bold;
    exit stack;
  else
    if (TA2REC.TA2GRGGN < SY0FW01.SY0FWDTE)
  /*    MOVE 30 TO EZEMNO;           /* invalid date entered*/
      converseLib.validationFailed(246); /* Eff. date is less than current date*/
      set SY0FM001.SY6CSEDT cursor, bold;
    end
  end

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

  if (SY0FM001.SY0FMCAL == "Y")
    SY0FWCT2 = 1;
    while (SY0FWCT2 <= 9)
      SY0FS04(); /* calculate 2nd quality*/
      SY0FWCT2 = SY0FWCT2 + 1;
    end
  end


end // end SY0F070

// update detail cost rows
Function SY0F080()


   /* *************************************************/
   /* *  if any xlccd modified,                      **/
   /* *  user may select regions to reflect change   **/
   /* *************************************************/

  if (SY0FM001.XLCCD[1] != SY0FW01.SY0FWSLC[1]
   || SY0FM001.XLCCD[2] != SY0FW01.SY0FWSLC[2]
   || SY0FM001.XLCCD[3] != SY0FW01.SY0FWSLC[3]
   || SY0FM001.XLCCD[4] != SY0FW01.SY0FWSLC[4]
   || SY0FM001.XLCCD[5] != SY0FW01.SY0FWSLC[5]
   || SY0FM001.XLCCD[6] != SY0FW01.SY0FWSLC[6]
   || SY0FM001.XLCCD[7] != SY0FW01.SY0FWSLC[7]
   || SY0FM001.XLCCD[8] != SY0FW01.SY0FWSLC[8]
   || SY0FM001.XLCCD[9] != SY0FW01.SY0FWSLC[9])
    SY0FS-GET-XP0HM(); /* region select popup window*/
  end

   /* *************************************************/
   /* *  this process updates the cost detail lines  **/
   /* *************************************************/


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  TA2REC.TA2GRGAN = SY0FM001.SY6CSEDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SY0FW01.SY0FWEDT = TA2REC.TA2GRGGN;
  else
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY0FM001.SY6CSEDT cursor, bold;
    exit stack;
  end

  SY0FWCT2 = 1;
  while (SY0FWCT2 <= 9
   && converseVar.validationMsgNum == 0)
    SY0FS15(); /* update each row on the screen*/
    SY0FWCT2 = SY0FWCT2 + 1;
  end

   /* NOTE: SY0FWARN(10) is being used as a flag to indicate that*/
        /* the other flags have allready been looked at. There*/
        /* are NOT 10 lines of data on the screen, only 9.*/

  if (SY0FW01.SY0FWARN[10] == "N")
    if (SY0FW01.SY0FWARN[1] == "Y"
     || SY0FW01.SY0FWARN[2] == "Y"
     || SY0FW01.SY0FWARN[3] == "Y"
     || SY0FW01.SY0FWARN[4] == "Y"
     || SY0FW01.SY0FWARN[5] == "Y"
     || SY0FW01.SY0FWARN[6] == "Y"
     || SY0FW01.SY0FWARN[7] == "Y"
     || SY0FW01.SY0FWARN[8] == "Y"
     || SY0FW01.SY0FWARN[9] == "Y")
      converseLib.validationFailed(150); /* cost eff. date override*/
      SY0FW01.SY0FWARN[10] = "Y";
      SY0FWIDX = 1;
      while (SY0FWIDX <= 9)
        if (SY0FM001.SY0FM1CO[SY0FWIDX] is modified)
          set SY0FM001.SY0FM1CO[SY0FWIDX] modified;
        end
        if (SY0FM001.SY0FM2CO[SY0FWIDX] is modified)
          set SY0FM001.SY0FM2CO[SY0FWIDX] modified;
        end
        SY0FWIDX = SY0FWIDX + 1;
      end
    end
  end

  if (converseVar.validationMsgNum == 0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    set SY0FM001.SY1STNBR[1] cursor;
    set SY1REC empty;
    set SY2REC empty;
    set VSYREG02 empty;
    set SY5REC empty;
    set SY6REC empty;
    set SY8REC empty;
    set SY9REC empty;
    set SYAREC empty;
    SY0FW01.SY0FWAAA = 0;
    SY0FW01.SY0FWSW2 = " ";
    SY0FWCT2 = 1;
    while (SY0FWCT2 <= 9)
      if (SY0FW01.SY0FWSW3 == "Y")
        SY0FM001.SY2CLRID[SY0FWCT2] = " ";
        SY0FM001.XDMCD[SY0FWCT2] = " ";
        SY0FM001.XLCCD[SY0FWCT2] = " ";
        SY0FM001.XCWCD[SY0FWCT2] = " ";
        SY0FM001.SY6SCTCD[SY0FWCT2] = " ";
        SY0FM001.SY0FM1CO[SY0FWCT2] = 0;
        SY0FM001.SY0FM2CO[SY0FWCT2] = 0;
      else
        SY0FM001.SY1STNBR[SY0FWCT2] = " ";
        SY0FM001.SY1SSTNM[SY0FWCT2] = " ";
        SY0FM001.SY2CLRID[SY0FWCT2] = " ";
        SY0FM001.XDMCD[SY0FWCT2] = " ";
        SY0FM001.XLCCD[SY0FWCT2] = " ";
        SY0FM001.XCWCD[SY0FWCT2] = " ";
        SY0FM001.SY6SCTCD[SY0FWCT2] = " ";
        SY0FW01.SY0FWSLC[SY0FWCT2] = " ";
        SY0FM001.SY0FM1CO[SY0FWCT2] = 0;
        SY0FM001.SY0FM2CO[SY0FWCT2] = 0;
      end
      SY0FWCT2 = SY0FWCT2 + 1;
    end
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
  end


end // end SY0F080

// Process SYREG regional Row
Function SY0FS-GET-SYREG()

   /* Process SYREG Regional row*/

  XP0HWIX1 = 1;

  while (XP0HWIX1 <= 25)
    if (XP0HW01.XP0HWSEL[XP0HWIX1] == "S" /* user selected region*/
     && XP0HW01.XDR-PROD-REG-CD[XP0HWIX1] 
     in SYWREC.XDR-PROD-REG-CD)           /* User has authority*/
      VSYREG02.XDR-PROD-REG-CD = XP0HW01.XDR-PROD-REG-CD[XP0HWIX1];
      TA1REC.TA1PGMNM = "SY0F";
      TA1REC.TA1MAP = "SY0FM001";
      XPSY003-VAL-SYREG(); /* validate syreg row*/

      if (SQLCA.VAGen_SQLCODE == 0
       && VSYREG02.XLC-LIFE-CYC-CD[1] <= "10")
        SYAREC.SYABFR = VSYREG02.VSYREG02-GROUP;
        VSYREG02.XLC-LIFE-CYC-CD[1] = SY2REC.XLCCD1;
        VSYREG02.XLC-LIFE-CYC-CD[2] = SY2REC.XLCCD2;
        VSYREG02.XLC-LIFE-CYC-CD[3] = SY2REC.XLCCD3;
        VSYREG02.XLC-LIFE-CYC-CD[4] = SY2REC.XLCCD4;
        VSYREG02.SY-LIFE-CYC-EDT[1] = SY2REC.SY2CEDT1;
        VSYREG02.SY-LIFE-CYC-EDT[2] = SY2REC.SY2CEDT2;
        VSYREG02.SY-LIFE-CYC-EDT[3] = SY2REC.SY2CEDT3;
        VSYREG02.SY-LIFE-CYC-EDT[4] = SY2REC.SY2CEDT4;
        VSYREG02.ZZ-CHNG-DT = SY0FW01.SY0FWDTE;
        VSYREG02.ZZ-CHNG-HHMM = SY0FW01.SY0FWWTM;
        XPSY004-UPD-SYREG(); /* update syreg row*/

        if (converseVar.validationMsgNum == 0)
          SYAREC.SYAUDTYP = "C";
          SYAREC.ZZZSDT = SY0FW01.SY0FWDTE;
          SYAREC.ZZZSTM = SY0FW01.SY0FWWTM;
          XPSY005-AUD-SYREG(); /* syreg audit insert*/

          SY9REC.SY9TGTYP = "C";
          SY9REC.ZZZSDT = SY0FW01.SY0FWDTE;
          SY9REC.ZZZSTM = SY0FW01.SY0FWWTM;
          XPSY006-TAG-SYREG(); /* syreg tag insert*/
        end
      end
    end
    XP0HWIX1 = XP0HWIX1 + 1;
  end


end // end SY0FS-GET-SYREG

// Validate XDR region
Function SY0FS-GET-XP0HM()

   /* Validate XDR Prod Region code*/

  XP0HW01.XP0HW-ONLY-SYREG-FL = "N";
  XP0HW01.XGPCD = SY0FM001.XGPCD;
  XP0HW01.SY1STNBR = SY0FM001.SY1STNBR;
  XP0HW01.SY2CLRID = " ";
  XP0HW01.XDMCD = " ";

  XP0H001(); /* so do it*/

  if (XP0HW02.XP0HWERR == "Y") /* we have an error*/
    if (XP0HW02.XP0HWENR == 0) /* Invalid function key*/
      converseLib.validationFailed(19);
    end
    if (XP0HW02.XP0HWENR == 1) /* No rows found*/
      converseLib.validationFailed(50);
    end
    if (XP0HW02.XP0HWENR == 2) /* Corp. Table Error*/
      converseLib.validationFailed(23);
    end
    return;
  else
    converseLib.clearScreen();
    
  end


end // end SY0FS-GET-XP0HM

Function SY0FS-GET-ZFC()


       /* ******************************************/
       /* *     GET CURRENCY DESCRIPTION          **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  SY0FM001.ZFC-CRCY-DESC = " ";

  VZFC0001.ZFC-CRCY-CD = SY0FM001.ZFC-CRCY-CD;

  call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0FM001.ZFC-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0FM001.VAGen_EZEMSG = "INVALID CURRENCY CODE";
      set SY0FM001.ZFC-CRCY-CD cursor, bold;
      converseLib.validationFailed(3);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "SY0FS-   ";
      TA1REC.TA1LOCAT[2] = "GET-ZFC  ";
      TA1REC.TA1LOCAT[3] = "DC0060   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "CORP";
      TA1REC.TA1TBLVU = "VZFC0001";
      TA1TBLKE = VZFC0001.ZFC-CRCY-CD;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(23); /* corp table error....*/
      set SY0FM001.ZFC-CRCY-CD cursor, bold;
    end
  end

end // end SY0FS-GET-ZFC

Function SY0FS-POPUPS()

   /* Examine screen and display any pop-up requests to user*/

  if (SY0FM001.XCTCD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Country Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0FM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

  if (SY0FM001.ZFC-CRCY-CD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Currency Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPZFC-POP(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0FM001.ZFC-CRCY-CD = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
    end
  end

  converseLib.clearScreen();
   /* Refresh map*/

end // end SY0FS-POPUPS

// check for fast path request
Function SY0FS01()


   /* *****************************************/
   /* *  let's check for fast path request   **/
   /* *****************************************/


  if (converseVar.eventKey is enter
   && SY0FM001.CATOAP != "  ")
    move SY0FM001 to COMMAREA withV60Compat;
    XSEXIT();
    SY0FM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0FM001 alarm;
    set SY0FM001.CATOAP cursor, bold;
    converseLib.validationFailed(1); /* reserved message area*/
  end

  return;


end // end SY0FS01

// check pf key entered
Function SY0FS02()


   /* *****************************************************/
     /* let's check the pfkey entered by the operator   **/
   /* *****************************************************/


  if (converseVar.eventKey is pf1)
    XSPF1();
  else
    if (converseVar.eventKey is pf4)
      XSPF4();
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CATOAP = "SY0N";
        XSEXIT();
      else
        if (converseVar.eventKey is pf12
         || converseVar.eventKey is enter
         || converseVar.eventKey is pa2)
          return;
        else
          converseLib.validationFailed(19); /* invalid pf key*/
        end
      end
    end
  end


end // end SY0FS02

// obtain color rows for a style
Function SY0FS03()


   /* ***********************************************************/
   /* *  this routine obtains the color rows for a particular  **/
   /* *  style and moves color id and dimension data to a      **/
   /* *  work area.                                            **/
   /* ***********************************************************/


  call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +100)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(21);
      SY0FM001.SYMSCMSG = "PRESS PA2 TO START NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "SN       ";
      TA1REC.TA1LOCAT[2] = "SY0FS03  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    else
      if (SY0FWCT3 > 200)
        converseLib.validationFailed(43); /* color row count exceeded - contact*/
                                   /* sys dev.*/
        return;
      end
    end
  end

  if (SYWREC.SYW-ALL-REGIONS-FL == "N") /* Not global access*/
    if (SY2REC.XDR-PROD-REG-CD /* Is this region ok for user*/
     in SYWREC.XDR-PROD-REG-CD)
      SY0FW01.SY0FWSFL = "N"; /* OK, no xlc protection*/
    else
      SY0FW01.SY0FWSFL = "Y"; /* protect xlc*/
    end
  else
    SY0FW01.SY0FWSFL = "N"; /* OK, no xlc protection*/
  end

  if (SY0FM001.SY0FMLCY != "  ")
    if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT1)
      if (SY0FM001.SY0FMLCY == SY2REC.XLCCD1)
        SY0FW01.SY0FWCLR[SY0FWCT3] = SY2REC.SY2CLRID;
        SY0FW01.SY0FWDIM[SY0FWCT3] = SY2REC.XDMCD;
        SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD1;
        SY0FW01.SY0FW-NO-UPD[SY0FWCT3] = SY0FW01.SY0FWSFL;
      end
    else
      if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT2)
        if (SY0FM001.SY0FMLCY == SY2REC.XLCCD2)
          SY0FW01.SY0FWCLR[SY0FWCT3] = SY2REC.SY2CLRID;
          SY0FW01.SY0FWDIM[SY0FWCT3] = SY2REC.XDMCD;
          SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD2;
          SY0FW01.SY0FW-NO-UPD[SY0FWCT3] = SY0FW01.SY0FWSFL;
        end
      else
        if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT3)
          if (SY0FM001.SY0FMLCY == SY2REC.XLCCD3)
            SY0FW01.SY0FWCLR[SY0FWCT3] = SY2REC.SY2CLRID;
            SY0FW01.SY0FWDIM[SY0FWCT3] = SY2REC.XDMCD;
            SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD3;
            SY0FW01.SY0FW-NO-UPD[SY0FWCT3] = SY0FW01.SY0FWSFL;
          end
        else
          if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT4)
            if (SY0FM001.SY0FMLCY == SY2REC.XLCCD4)
              SY0FW01.SY0FWCLR[SY0FWCT3] = SY2REC.SY2CLRID;
              SY0FW01.SY0FWDIM[SY0FWCT3] = SY2REC.XDMCD;
              SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD4;
              SY0FW01.SY0FW-NO-UPD[SY0FWCT3] = SY0FW01.SY0FWSFL;
            end
          end
        end
      end
    end
  else
    SY0FW01.SY0FWCLR[SY0FWCT3] = SY2REC.SY2CLRID;
    SY0FW01.SY0FWDIM[SY0FWCT3] = SY2REC.XDMCD;
    SY0FW01.SY0FW-NO-UPD[SY0FWCT3] = SY0FW01.SY0FWSFL;
    if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT1)
      SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD1;
    else
      if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT2)
        SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD2;
      else
        if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT3)
          SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD3;
        else
          if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT4)
            SY0FW01.SY0FWLCY[SY0FWCT3] = SY2REC.XLCCD4;
          end
        end
      end
    end
  end

  if (SY0FW01.SY0FWCLR[SY0FWCT3] != "   ")
    SY0FW01.SY0FWCT3 = SY0FW01.SY0FWCT3 + 1;
  end

end // end SY0FS03

// calculate 2nd quality cost
Function SY0FS04()


   /* *************************************************************/
   /* *  this little routine calculates the 2nd quality costs.   **/
   /* *************************************************************/

  if (SY0FW01.SY0FW1MD[SY0FWCT2] == "Y") /* 1st qual price entered*/
    SY0FW01.SY0FW2MD[SY0FWCT2] = "Y"; /* then set 2nd too*/
  end

  if (SY0FM001.SY0FM1CO[SY0FWCT2] == 0)
    SY0FM001.SY0FM2CO[SY0FWCT2] = 0;
    return;
  else
    SY0FW01.SY0FWAAA = SY0FM001.SY0FM1CO[SY0FWCT2];
  end

  SY0FW01.SY0FWAAA = SY0FW01.SY0FWAAA * SY0FM001.SY0FMPCT * .01;
  SY0FW01.SY0FWAAA = SY0FW01.SY0FWAAA + SY0FM001.SY0FMCNT;

  if (SY0FM001.SY0FMRND != 0)
    SY0FW01.SY0FWBBB = SY0FW01.SY0FWAAA / SY0FM001.SY0FMRND;
    SY0FW01.SY0FWDDD = SY0FW01.SY0FWBBB;
    if (SY0FW01.SY0FWDDD == 0)
      SY0FM001.SY0FM2CO[SY0FWCT2] = SY0FW01.SY0FWAAA;
    else
      while (SY0FW01.SY0FWDDD != 0)
        if (SY0FM001.SY0FMRND > 0)
          SY0FW01.SY0FWAAA = SY0FW01.SY0FWAAA + .01;
        else
          SY0FW01.SY0FWAAA = SY0FW01.SY0FWAAA - .01;
        end
        SY0FW01.SY0FWBBB = SY0FW01.SY0FWAAA / SY0FM001.SY0FMRND;
        SY0FW01.SY0FWDDD = SY0FW01.SY0FWBBB;
        if (SY0FW01.SY0FWDDD == 0)
          SY0FM001.SY0FM2CO[SY0FWCT2] = SY0FW01.SY0FWAAA;
        end
      end
    end
  else
    SY0FM001.SY0FM2CO[SY0FWCT2] = SY0FW01.SY0FWAAA;
  end


  return;
end // end SY0FS04

// cost table audit processing
Function SY0FS10()


   /* *****************************************************/
   /* *  this statement group formats the audit record   **/
   /* *  and performs the add call to db2 for dim/cost   **/
   /* *****************************************************/


  SYAREC.XXXTBLNM = "VDCOST01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0F   ";
    TA1REC.TA1LOCAT[1] = "SY0FS10  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VDCOST01 ";
    TA1REC.TA1MAP = "SY0FM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY6REC.XGPCD;
  SYAREC.SY1STNBR = SY6REC.SY1STNBR;
  SYAREC.SY2CLRID = SY6REC.SY2CLRID;
  SYAREC.XDMCD = SY6REC.XDMCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = SY6REC.XCOCD;
  SYAREC.XQACD = SY6REC.XQACD;

  SYAREC.ZZZSDT = SY0FW01.SY0FWDTE;
  SYAREC.ZZZSTM = SY0FW01.SY0FWWTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update -try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0FS10  ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SYAREC";
      TA1REC.TA1TBLVU = "DPROD.VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0FS10

// color table audit processing
Function SY0FS11()


   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* *  and performs the add call to db2 for the       **/
   /* *  style/color table.*/
   /* ****************************************************/


  SYAREC.XXXTBLNM = "VCOLOR01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0F   ";
    TA1REC.TA1LOCAT[1] = "SY0FS11  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOLOR01 ";
    TA1REC.TA1MAP = "SY0FM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY2REC.XGPCD;
  SYAREC.SY1STNBR = SY2REC.SY1STNBR;
  SYAREC.SY2CLRID = SY2REC.SY2CLRID;
  SYAREC.XDMCD = SY2REC.XDMCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";

  SYAREC.ZZZSDT = SY0FW01.SY0FWDTE;
  SYAREC.ZZZSTM = SY0FW01.SY0FWWTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0FS11  ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SYAREC";
      TA1REC.TA1TBLVU = "DPROD.VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0FS11

// update cost and color tables
Function SY0FS15()


   /* **********************************************************/
   /* *  this module updates the dim/cost table, verifies the **/
   /* *  price / size if life cycle is being changed, and     **/
   /* *  updates the style / color table.                     **/
   /* **********************************************************/


  set SY6REC empty;
  SY6REC.XGPCD = SY0FM001.XGPCD;
  if (SY0FM001.SY0FMSTY == "      ")
    if (SY0FM001.SY1STNBR[SY0FWCT2] != "      ")
      SY6REC.SY1STNBR = SY0FM001.SY1STNBR[SY0FWCT2];
    else
      return;
    end
  else
    SY6REC.SY1STNBR = SY0FM001.SY0FMSTY;
  end
  SY6REC.SY2CLRID = SY0FM001.SY2CLRID[SY0FWCT2];
  SY6REC.XDMCD = SY0FM001.XDMCD[SY0FWCT2];
  SY6REC.XCOCD = SY0FM001.XCOCD;
  SY6REC.XCT-CTRY-CD = SY0FM001.XCTCD;
  SY6REC.ZFC-CRCY-CD = SY0FM001.ZFC-CRCY-CD;
  if (SY0FW01.SY0FW1MD[SY0FWCT2] == "N")
    if (SY0FW01.SY0FW2MD[SY0FWCT2] == "Y")
      SY6REC.XQACD = "02";
      SY0FW01.SY0FWCST = SY0FM001.SY0FM2CO[SY0FWCT2];
      SY0FS16(); /* update dim/cost table*/
    else
      /* next sentence*/
    end
  else
    if (SY0FW01.SY0FW2MD[SY0FWCT2] == "N")
      SY6REC.XQACD = "01";
      SY0FW01.SY0FWCST = SY0FM001.SY0FM1CO[SY0FWCT2];
      SY0FS16(); /* update dim/cost table*/
    else
      SY6REC.XQACD = "01";
      SY0FW01.SY0FWCST = SY0FM001.SY0FM1CO[SY0FWCT2];
      SY0FS16(); /* update dim/cost table*/
      if (converseVar.validationMsgNum != 0)
        return;
      else
        set SY6REC empty;
        SY6REC.XGPCD = SY0FM001.XGPCD;
        if (SY0FM001.SY0FMSTY == "      ")
          if (SY0FM001.SY1STNBR[SY0FWCT2] != "      ")
            SY6REC.SY1STNBR = SY0FM001.SY1STNBR[SY0FWCT2];
          else
            return;
          end
        else
          SY6REC.SY1STNBR = SY0FM001.SY0FMSTY;
        end
        SY6REC.SY2CLRID = SY0FM001.SY2CLRID[SY0FWCT2];
        SY6REC.XDMCD = SY0FM001.XDMCD[SY0FWCT2];
        SY6REC.XCOCD = SY0FM001.XCOCD;
        SY6REC.XCT-CTRY-CD = SY0FM001.XCTCD;
        SY6REC.ZFC-CRCY-CD = SY0FM001.ZFC-CRCY-CD;
        SY6REC.XQACD = "02";
        SY0FW01.SY0FWCST = SY0FM001.SY0FM2CO[SY0FWCT2];
        SY0FS16(); /* update dim/cost table*/
      end
    end
  end

   /* Now create 'dummy' 999.99 rows for EAO products*/
  if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == "02"
   && SY0FM001.XCOCD == "04"
   && SY0FM001.XCTCD == "NETH")
    if (SY0FW01.SY0FW1MD[SY0FWCT2] == "Y")
      SY6REC.XQACD = "01";
      SY0FS15-EAO();
    end
    if (SY0FW01.SY0FW2MD[SY0FWCT2] == "Y")
      SY6REC.XQACD = "02";
      SY0FS15-EAO();
    end
  end

  if (converseVar.validationMsgNum == 0)
    if (SY0FM001.XLCCD[SY0FWCT2] != "  ")
      if (SY0FM001.XLCCD[SY0FWCT2] != SY0FW01.SY0FWSLC[SY0FWCT2])
        SY0FS26(); /* verify price rows exist*/
        if (converseVar.validationMsgNum == 0)
          SY0FS24(); /* update style color table*/
        end
      end
    end
  end

end // end SY0FS15

// obtain color/dim data
Function SY0FS15-EAO()
   /* **************************/
   /* determine if we need to create 999.99 dummy cost rows*/
   /* for eao products.*/
   /* **************************/

  if (SY6REC.XGPCD != SY2REC.XGPCD
   || SY6REC.SY1STNBR != SY2REC.SY1STNBR
   || SY6REC.SY2CLRID != SY2REC.SY2CLRID
   || SY6REC.XDMCD != SY2REC.XDMCD)
    SY2REC.XGPCD = SY6REC.XGPCD;
    SY2REC.SY1STNBR = SY6REC.SY1STNBR;
    SY2REC.SY2CLRID = SY6REC.SY2CLRID;
    SY2REC.XDMCD = SY6REC.XDMCD;
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0FM001.SY2CLRID[SY0FWCT2] cursor, bold;
      set SY0FM001.XDMCD[SY0FWCT2] bold;
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
      SY0FM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "SS       ";
      TA1REC.TA1LOCAT[2] = "SY0FS15  ";
      TA1REC.TA1LOCAT[3] = "(EAO)    ";
      TA1REC.TA1LOCAT[4] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  if (SY2REC.XDR-PROD-REG-CD == "02") /* Color Product Regn '02'?*/
    SY0FW01.SY0FWCST = 999.99;
    SY6REC.XCOCD = "01";
    SY6REC.XCT-CTRY-CD = "USA";
    SY6REC.ZFC-CRCY-CD = "USD";
    SY0FS16();
  end

end // end SY0FS15-EAO

// replace or add cost row
Function SY0FS16()


   /* ************************************************************/
   /* *  this is the statement group that actually makes        **/
   /* *  the call to the dim/cost table and then decides if     **/
   /* *  this is going to be a replace or an add.               **/
   /* ************************************************************/


  SY0FW01.SY0FWSW1 = "Y";

  call "IO0360" ("S ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    if (SY0FW01.SY0FWCST != 999.99) /* and not dummy cost*/
      SYAREC.SYABFR = SY6REC.SY6DATA;
      SY0FS17(); /* replace a row*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      SY0FS18(); /* add a row*/
    else
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0FS16  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VDCOST01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  return;


end // end SY0FS16

// format and replace cost row
Function SY0FS17()


   /* *************************************************************/
   /* *  this statement group :                                  **/
   /* *   1) verify effective date and price                     **/
   /* *   2) rolls the price data in the dim/cost table and      **/
   /* *      does the actual replace                             **/
   /* *************************************************************/

  SY0FS20(); /* check for a duplicate date*/


  if (converseVar.validationMsgNum != 0)
    SY0FW01.SY0FWSW1 = "N";
    exit stack;
  end


  SY6REC.ZZZCHGDT = SY0FW01.SY0FWDTE;
  SY6REC.ZZZCHGTM = SY0FW01.SY0FWWTM;

  if (SY6REC.SY6CSEDT[1] != 0)
    if (SY6REC.SY6CSEDT[2] != 0)
      if (SY6REC.SY6CSEDT[3] != 0)
        if (SY6REC.SY6CSEDT[4] != 0)
          if (SY6REC.SY6CSEDT[5] != 0)
            if (SY6REC.SY6CSEDT[6] != 0)
              SY0FS21(); /* history table processing*/
              SY0FWCT5 = 5;
              SY0FWCT6 = 6;
              SY6REC.SY6HSTSW = "Y";
              while (SY0FWCT5 >= 1)
                SY0FS22(); /* moves for dim cost update*/
                SY0FWCT5 = SY0FWCT5 - 1;
                SY0FWCT6 = SY0FWCT6 - 1;
              end
            else
              SY0FWCT5 = 5;
              SY0FWCT6 = 6;
              while (SY0FWCT5 >= 1)
                SY0FS22(); /* moves for dim cost update*/
                SY0FWCT5 = SY0FWCT5 - 1;
                SY0FWCT6 = SY0FWCT6 - 1;
              end
            end
          else
            SY0FWCT5 = 4;
            SY0FWCT6 = 5;
            while (SY0FWCT5 >= 1)
              SY0FS22(); /* moves for size price update*/
              SY0FWCT5 = SY0FWCT5 - 1;
              SY0FWCT6 = SY0FWCT6 - 1;
            end
          end
        else
          SY0FWCT5 = 3;
          SY0FWCT6 = 4;
          while (SY0FWCT5 >= 1)
            SY0FS22(); /* moves for dim cost update*/
            SY0FWCT5 = SY0FWCT5 - 1;
            SY0FWCT6 = SY0FWCT6 - 1;
          end
        end
      else
        SY0FWCT5 = 2;
        SY0FWCT6 = 3;
        while (SY0FWCT5 >= 1)
          SY0FS22(); /* moves for dim cost update*/
          SY0FWCT5 = SY0FWCT5 - 1;
          SY0FWCT6 = SY0FWCT6 - 1;
        end
      end
    else
      SY0FWCT5 = 1;
      SY0FWCT6 = 2;
      while (SY0FWCT5 >= 1)
        SY0FS22(); /* moves for dim cost update*/
        SY0FWCT5 = SY0FWCT5 - 1;
        SY0FWCT6 = SY0FWCT6 - 1;
      end
    end
  else
    SY6REC.SY6CSEDT[1] = SY0FW01.SY0FWEDT;
    SY6REC.SY6CSTUN[1] = SY0FW01.SY0FWCST;
    SY6REC.SY6SCTCD[1] = SY0FM001.SY6SCTCD[SY0FWCT2];
  end

  call "IO0360" ("U ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "U        ";
      TA1REC.TA1LOCAT[2] = "SY0FS17  ";
      TA1REC.TA1LOCAT[3] = "IO0380   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VDCOST01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    else
      SYAREC.SYAUDTYP = "A";
      SYAREC.SYAAFT = SY6REC.SY6DATA;
      SY0FS10(); /* cost table audit processing*/
      if (converseVar.validationMsgNum == 0)
        SY9REC.SY9TGTYP = "A";
        SY0FS30(); /* cost table tag processing*/
      end
    end
  end

  return;


end // end SY0FS17

// add a cost row
Function SY0FS18()


   /* ***********************************************************/
   /* *  this statement group :                                **/
   /* *   1) formats the output record area                    **/
   /* *   2) performs the call to the dim/cost table to add    **/
   /* *      a row to the table                                **/
   /* ***********************************************************/


  SY6REC.ZZZSDT = SY0FW01.SY0FWDTE;
  SY6REC.ZZZCHGDT = SY0FW01.SY0FWDTE;
  SY6REC.ZZZCHGTM = SY0FW01.SY0FWWTM;
  SY6REC.ZZZCHGCT = 0;

  SY6REC.SY6HSTSW = "N";
  if (SY0FW01.SY0FWEDT > SY6REC.ZZZSDT) /* date greater than today*/
    SY6REC.SY6CSEDT[1] = SY6REC.ZZZSDT; /* move current date*/
    SY0FW01.SY0FWARN[SY0FWCT2] = "Y"; /* now warned*/
  else
    SY6REC.SY6CSEDT[1] = SY0FW01.SY0FWEDT;
  end

  SY6REC.SY6SCTCD[1] = SY0FM001.SY6SCTCD[SY0FWCT2];
  SY6REC.SY6CSTUN[1] = SY0FW01.SY0FWCST;

  call "IO0360" ("A ", SQLCA, SY6REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(72); /* cost table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0FS18  ";
      TA1REC.TA1LOCAT[3] = "IO0360   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY6REC";
      TA1REC.TA1TBLVU = "DPROD.VDCOST01";
      TA1TBLKE = SY6REC.SY6KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    else
      SYAREC.SYAUDTYP = "A";
      SYAREC.SYABFR = " ";
      SYAREC.SYAAFT = SY6REC.SY6DATA;
      SY0FS10();
      if (converseVar.validationMsgNum == 0) /* cost table audit processing*/
        SY9REC.SY9TGTYP = "C";
        SY0FS30(); /* cost table tag processing*/
      end
    end
  end

  return;

end // end SY0FS18

// convert system time
Function SY0FS19()


   /* *********************************************************/
   /* *  this routine converts ezetim to a number that       **/
   /* *  we can use to put out to the tables on an update    **/
   /* *********************************************************/


  SY0FW01.SY0FWZTM = VGVar.currentFormattedTime;
  SY0FW01.SY0FWWHR = SY0FW01.SY0FWZHR;
  SY0FW01.SY0FWWMN = SY0FW01.SY0FWZMN;


end // end SY0FS19

// check for duplicate dates
Function SY0FS20()


   /* **********************************************************/
   /* *  this statement group loops through the effective     **/
   /* *  dates and cost of the dim/cost table to insure       **/
   /* *  the date entered does not match an existing date.    **/
   /* **********************************************************/

  SY0FWCT5 = 1;

  while (SY0FWCT5 <= 6
   && SY6REC.SY6CSEDT[SY0FWCT5] != 0
   && converseVar.validationMsgNum == 0)
    if (SY6REC.SY6CSEDT[SY0FWCT5] == SY0FW01.SY0FWEDT)
      converseLib.validationFailed(16); /* effective date already exists*/
      set SY0FM001.SY6CSEDT cursor, bold;
      return;
    else
      SY0FWCT5 = SY0FWCT5 + 1;
    end
  end

end // end SY0FS20

// add a row to the history table
Function SY0FS21()


   /* ***********************************************************/
     /* this statement group adds a row to the history table  **/
     /* after the dim/cost table has at least 6 occurrences   **/
     /* of data in the effective date and cost fields.        **/
   /* ***********************************************************/


  set SY8REC empty;

  SY8REC.XGPCD = SY6REC.XGPCD;
  SY8REC.SY1STNBR = SY6REC.SY1STNBR;
  SY8REC.SY2CLRID = SY6REC.SY2CLRID;
  SY8REC.XDMCD = SY6REC.XDMCD;
  SY8REC.XCOCD = SY6REC.XCOCD;
  SY8REC.XQACD = SY6REC.XQACD;
  SY8REC.XCT-CTRY-CD = SY6REC.XCT-CTRY-CD;
  SY8REC.ZFC-CRCY-CD = SY6REC.ZFC-CRCY-CD;
  SY8REC.SY6CSEDT = SY6REC.SY6CSEDT[6];
  SY8REC.SY6CSTUN = SY6REC.SY6CSTUN[6];
  SY8REC.SY6SCTCD = SY6REC.SY6SCTCD[6];

  SY8REC.ZZZSDT = SY0FW01.SY0FWDTE;
  SY8REC.ZZZSTM = SY0FW01.SY0FWWTM;

  call "IO0410" ("A ", SQLCA, SY8REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(39); /* history table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0FS21  ";
      TA1REC.TA1LOCAT[3] = "IO0410   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY8REC";
      TA1REC.TA1TBLVU = "DPROD.VCOSTH01";
      TA1TBLKE = SY8REC.SY8KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  return;


end // end SY0FS21

// format cost record for update
Function SY0FS22()


   /* *************************************************************/
   /* *  this statement group performs the moves necessary to    **/
   /* *  set up the dim/cost record for an update.               **/
   /* *************************************************************/


  if (SY6REC.SY6CSEDT[SY0FWCT5] < SY0FW01.SY0FWEDT)
    SY6REC.SY6CSEDT[SY0FWCT6] = SY6REC.SY6CSEDT[SY0FWCT5];
    SY6REC.SY6CSTUN[SY0FWCT6] = SY6REC.SY6CSTUN[SY0FWCT5];
    SY6REC.SY6SCTCD[SY0FWCT6] = SY6REC.SY6SCTCD[SY0FWCT5];
    if (SY0FWCT5 == 1)
      SY6REC.SY6CSEDT[1] = SY0FW01.SY0FWEDT;
      SY6REC.SY6CSTUN[1] = SY0FW01.SY0FWCST;
      SY6REC.SY6SCTCD[1] = SY0FM001.SY6SCTCD[SY0FWCT2];
    else
      return;
    end
  else
    SY6REC.SY6CSEDT[SY0FWCT6] = SY0FW01.SY0FWEDT;
    SY6REC.SY6CSTUN[SY0FWCT6] = SY0FW01.SY0FWCST;
    SY6REC.SY6SCTCD[SY0FWCT6] = SY0FM001.SY6SCTCD[SY0FWCT2];
    SY0FWCT5 = 1;
  end


end // end SY0FS22

// update style/color table
Function SY0FS24()


   /* ***********************************************************/
   /* *  this statement group performs the actual updating of  **/
   /* *  a style color row for a particular style and color    **/
   /* ***********************************************************/


  SY2REC.XGPCD = SY0FM001.XGPCD;
  if (SY0FM001.SY0FMSTY == "      ")
    if (SY0FM001.SY1STNBR[SY0FWCT2] != "      ")
      SY2REC.SY1STNBR = SY0FM001.SY1STNBR[SY0FWCT2];
    else
      return;
    end
  else
    SY2REC.SY1STNBR = SY0FM001.SY0FMSTY;
  end
  SY2REC.SY2CLRID = SY0FM001.SY2CLRID[SY0FWCT2];

  SY2REC.XDMCD = SY0FM001.XDMCD[SY0FWCT2];

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0FS24  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  if (SY2REC.SY2CEDT1 <= SY0FW01.SY0FWDTE)
    if (SY2REC.XLCCD1 != SY0FM001.XLCCD[SY0FWCT2])
      SY0FW01.SY0FWSW2 = "Y";
    end
  else
    if (SY2REC.SY2CEDT2 <= SY0FW01.SY0FWDTE)
      if (SY2REC.XLCCD1 != SY0FM001.XLCCD[SY0FWCT2])
        SY0FW01.SY0FWSW2 = "Y";
      end
    else
      if (SY2REC.SY2CEDT3 <= SY0FW01.SY0FWDTE)
        if (SY2REC.XLCCD1 != SY0FM001.XLCCD[SY0FWCT2])
          SY0FW01.SY0FWSW2 = "Y";
        end
      else
        if (SY2REC.SY2CEDT3 <= SY0FW01.SY0FWDTE)
          if (SY2REC.XLCCD1 != SY0FM001.XLCCD[SY0FWCT2])
            SY0FW01.SY0FWSW2 = "Y";
          end
        end
      end
    end
  end

  if (SY0FW01.SY0FWSW2 == "Y")
    SYAREC.SYABFR = SY2REC.SY2DATA;
     /* MOVE 'N' TO SY2REC.SY2BOSWI ;*****removed on 8/12/86 msh **/
    if (SY2REC.SY2CEDT3 >= SY0FW01.SY0FWEDT)
      SY2REC.XLCCD4 = SY0FM001.XLCCD[SY0FWCT2];
      SY2REC.SY2CEDT4 = SY0FW01.SY0FWEDT;
    else
      if (SY2REC.SY2CEDT2 >= SY0FW01.SY0FWEDT)
        SY2REC.XLCCD4 = SY2REC.XLCCD3;
        SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
        SY2REC.XLCCD3 = SY0FM001.XLCCD[SY0FWCT2];
        SY2REC.SY2CEDT3 = SY0FW01.SY0FWEDT;
      else
        if (SY2REC.SY2CEDT1 >= SY0FW01.SY0FWEDT)
          SY2REC.XLCCD4 = SY2REC.XLCCD3;
          SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
          SY2REC.XLCCD3 = SY2REC.XLCCD2;
          SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
          SY2REC.XLCCD2 = SY0FM001.XLCCD[SY0FWCT2];
          SY2REC.SY2CEDT2 = SY0FW01.SY0FWEDT;
        else
          SY2REC.XLCCD4 = SY2REC.XLCCD3;
          SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
          SY2REC.XLCCD3 = SY2REC.XLCCD2;
          SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
          SY2REC.XLCCD2 = SY2REC.XLCCD1;
          SY2REC.SY2CEDT2 = SY2REC.SY2CEDT1;
          SY2REC.XLCCD1 = SY0FM001.XLCCD[SY0FWCT2];
          SY2REC.SY2CEDT1 = SY0FW01.SY0FWEDT;
        end
      end
    end
  end

  if (SY0FW01.SY0FWSW2 == "Y")
    SY0FW01.SY0FWSW1 = "Y";
    SY2REC.ZZZCHGDT = SY0FW01.SY0FWDTE;
    SY2REC.ZZZCHGTM = SY0FW01.SY0FWWTM;
    call "IO0130" ("U ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
      return;
    else
      if (SQLCA.VAGen_SQLCODE != 0)
        converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY0F   ";
        TA1REC.TA1LOCAT[1] = "U        ";
        TA1REC.TA1LOCAT[2] = "SY0FS24  ";
        TA1REC.TA1LOCAT[3] = "IO0130   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY0FM001";
        TA1REC.TA1DBASE = "SY2REC";
        TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
        TA1TBLKE = SY2REC.SY2KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        return;
      else
        SYAREC.SYAUDTYP = "C";
        SYAREC.SYAAFT = SY2REC.SY2DATA;
        SY0FS11(); /* color table audit processing*/
        SY0FS31(); /* color table tag processing*/
        SY0FS-GET-SYREG(); /* process selected regions*/
      end
    end
  end

  SY0FW01.SY0FWSW2 = " ";


end // end SY0FS24

// verify price rows exist
Function SY0FS26()


   /* ***************************************************/
   /* * verify all pricing for xlc change              **/
   /* ***************************************************/

  TA1REC.TA1PGMNM = "SY0F";
  TA1REC.TA1LOCAT[1] = "SY0FS26";
  TA1REC.TA1MAP = "SY0FM001";

  SY2REC.XGPCD = SY0FM001.XGPCD;
  if (SY0FM001.SY0FMSTY == "      ")
    if (SY0FM001.SY1STNBR[SY0FWCT2] == "      ")
      converseLib.validationFailed(32); /* please enter style number*/
      set SY0FM001.SY1STNBR[SY0FWCT2] cursor, bold;
      return;
    else
      SY2REC.SY1STNBR = SY0FM001.SY1STNBR[SY0FWCT2];
    end
  else
    SY2REC.SY1STNBR = SY0FM001.SY0FMSTY;
  end
  SY2REC.SY2CLRID = SY0FM001.SY2CLRID[SY0FWCT2];
  SY2REC.XDMCD = SY0FM001.XDMCD[SY0FWCT2];

  XPSY002(); /* check all pricing*/

end // end SY0FS26

// obtain style data
Function SY0FS27()
   /* *******************************/
   /* obtain style record*/
   /* *******************************/

  SY1REC.XGPCD = SY0FM001.XGPCD;
  if (SY0FM001.SY1STNBR[SY0FWCT2] == "      ")
    return;
  else
    SY1REC.SY1STNBR = SY0FM001.SY1STNBR[SY0FWCT2];
  end

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(5); /* style record does not exist*/
    set SY0FM001.SY1STNBR[SY0FWCT2] cursor, bold;
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0FM001.SY1STNBR[SY0FWCT2] cursor, bold;
      converseLib.validationFailed(20); /* style table error - contact systems dvlpmnt*/
      SY0FM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0FS27  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY1REC";
      TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    else
      SY0FM001.SY1SSTNM[SY0FWCT2] = SY1REC.SY1SSTNM;
      SY0FM001.XCWCD[SY0FWCT2] = SY1REC.XCWCD;
      SY0FW01.SY1DATA = SY1REC.SY1DATA;
    end
  end

end // end SY0FS27

// obtain color/dim data
Function SY0FS28()
   /* **************************/
   /* obtain style color/dim row*/
   /* **************************/

  if (SY0FM001.SY1STNBR[SY0FWCT2] == "      ")
    return;
  end

  SY2REC.XGPCD = SY0FM001.XGPCD;
  SY2REC.SY1STNBR = SY0FM001.SY1STNBR[SY0FWCT2];
  SY2REC.SY2CLRID = SY0FM001.SY2CLRID[SY0FWCT2];
  SY2REC.XDMCD = SY0FM001.XDMCD[SY0FWCT2];
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(7); /* color/dimension record does not exist*/
    set SY0FM001.SY2CLRID[SY0FWCT2] cursor, bold;
    set SY0FM001.XDMCD[SY0FWCT2] bold;
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0FM001.SY2CLRID[SY0FWCT2] cursor, bold;
      set SY0FM001.XDMCD[SY0FWCT2] bold;
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
      SY0FM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "SS       ";
      TA1REC.TA1LOCAT[2] = "SY0FS28  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


  if (COMMAREA.XNDCD == "EAO ") /* Nike Dept Id 'EAO '?*/
    if (SY2REC.XDR-PROD-REG-CD == "02") /* Color Product Regn '02'?*/
      SY0FW01.SY0FW-PROT-XLC[SY0FWCT2] = "N";
    else
      SY0FW01.SY0FW-PROT-XLC[SY0FWCT2] = "Y";
    end
  else
    SY0FW01.SY0FW-PROT-XLC[SY0FWCT2] = "N";
  end


  if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT1)
    SY0FM001.XLCCD[SY0FWCT2] = SY2REC.XLCCD1;
    SY0FW01.SY0FWSLC[SY0FWCT2] = SY2REC.XLCCD1;
  else
    if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT2)
      SY0FM001.XLCCD[SY0FWCT2] = SY2REC.XLCCD2;
      SY0FW01.SY0FWSLC[SY0FWCT2] = SY2REC.XLCCD2;
    else
      if (SY0FW01.SY0FWDTE >= SY2REC.SY2CEDT3)
        SY0FM001.XLCCD[SY0FWCT2] = SY2REC.XLCCD3;
        SY0FW01.SY0FWSLC[SY0FWCT2] = SY2REC.XLCCD3;
      else
        SY0FM001.XLCCD[SY0FWCT2] = SY2REC.XLCCD4;
        SY0FW01.SY0FWSLC[SY0FWCT2] = SY2REC.XLCCD4;
      end
    end
  end


end // end SY0FS28

// cost table tag processing
Function SY0FS30()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* *  for dim / cost updates.                        **/
   /* ****************************************************/


  SY9REC.XGPCD = SY6REC.XGPCD;
  SY9REC.SY1STNBR = SY6REC.SY1STNBR;
  SY9REC.SY2CLRID = SY6REC.SY2CLRID;
  SY9REC.XDMCD = SY6REC.XDMCD;

  SY9REC.ZZZSDT = SY0FW01.SY0FWDTE;
  SY9REC.ZZZSTM = SY0FW01.SY0FWWTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0FS30  ";
      TA1REC.TA1LOCAT[3] = "IO0520   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY9REC";
      TA1REC.TA1TBLVU = "DPROD.VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0FS30

// style table tag processing
Function SY0FS31()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* ****************************************************/


  SY9REC.XGPCD = SY2REC.XGPCD;
  SY9REC.SY1STNBR = SY2REC.SY1STNBR;
  SY9REC.SY2CLRID = SY2REC.SY2CLRID;
  SY9REC.XDMCD = SY2REC.XDMCD;

  SY9REC.ZZZSDT = SY0FW01.SY0FWDTE;
  SY9REC.ZZZSTM = SY0FW01.SY0FWWTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0F   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0FS31  ";
      TA1REC.TA1LOCAT[3] = "IO0520   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0FM001";
      TA1REC.TA1DBASE = "SY9REC";
      TA1REC.TA1TBLVU = "DPROD.VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0FS31

// test for nulls in 1st cost
Function SY0FSM1()

   /* this statement group is used in a test nulls statement*/
   /* to check a modified field for nulls. if test is true*/
   /* the user has not really entered anything in the field*/
   /* and we will set the modified flag to no.*/

  SY0FW01.SY0FW1MD[SY0FWIDX] = "N";
end // end SY0FSM1

// test for nulls in 2nd cost
Function SY0FSM2()

   /* this statement group is used in a test nulls statement*/
   /* to check a modified field for nulls. if test is true*/
   /* the user has not really entered anything in the field*/
   /* and we will set the modified flag to no.*/

  SY0FW01.SY0FW2MD[SY0FWIDX] = "N";
end // end SY0FSM2

// set costs modified
Function SY0FSSM()
  SY0FWIDX = 1;
  while (SY0FWIDX <= 9)
    if (SY0FM001.SY0FM1CO[SY0FWIDX] is modified)
      SY0FW01.SY0FW1MD[SY0FWIDX] = "Y";
      if (SY0FM001.SY0FM1CO[SY0FWIDX] is blanks)
        SY0FSM1();
      end
    else
      SY0FW01.SY0FW1MD[SY0FWIDX] = "N";
    end
    if (SY0FM001.SY0FM2CO[SY0FWIDX] is modified)
      SY0FW01.SY0FW2MD[SY0FWIDX] = "Y";
      if (SY0FM001.SY0FM2CO[SY0FWIDX] is blanks)
        SY0FSM2();
      end
    else
      SY0FW01.SY0FW2MD[SY0FWIDX] = "N";
    end
    SY0FWIDX = SY0FWIDX + 1;
  end
end // end SY0FSSM

//*** RECORD=SY0FW01 ****
// /***********************************************************
// /*         02-24-93 JRAMOS Added SY0FWSFL (Color Store Flag)
// /*                         This flag indicates if a color
// /*                         is to be stored (and processed)
// /*                         or bypassed ('Y' or 'N')
// /***********************************************************
// ***********************
Record SY0FW01 type basicRecord
  5 SY0FW-CSEDT-MMDDYY SY0FW-CSEDT-MMDDYY ; 
    10 SY0FW-CSEDT-MMDD SY0FW-CSEDT-MMDD ; 
    10 SY0FW-CSEDT-YY SY0FW-CSEDT-YY ; 
  5 SY0FWCLD SY0FWCLD [200] ; 
    10 SY0FWCLR SY0FWCLR ; 
    10 SY0FWDIM SY0FWDIM ; 
    10 SY0FWLCY SY0FWLCY ; 
    10 SY0FW-NO-UPD SY0FW-NO-UPD ; 
  5 SY0FWCST SY0FWCST ; 
  5 SY0FWCT1 SY0FWCT1 ; 
  5 SY0FWCT2 SY0FWCT2 ; 
  5 SY0FWCT3 SY0FWCT3 ; 
  5 SY0FWCT4 SY0FWCT4 ; 
  5 SY0FWCT5 SY0FWCT5 ; 
  5 SY0FWCT6 SY0FWCT6 ; 
  5 SY0FWDTE SY0FWDTE ; 
  5 SY0FWAAA SY0FWAAA ; 
  5 SY0FWBBB SY0FWBBB ; 
  5 SY0FWCCC SY0FWCCC ; 
  5 SY0FWDDD SY0FWDDD ; 
  5 SY0FWZTM SY0FWZTM ; 
    10 SY0FWZHR SY0FWZHR ; 
    10 * char(1) ; 
    10 SY0FWZMN SY0FWZMN ; 
  5 SY0FWWTM SY0FWWTM ; 
    10 SY0FWWHR SY0FWWHR ; 
    10 SY0FWWMN SY0FWWMN ; 
  5 SY0FWSW1 SY0FWSW1 ; 
  5 SY0FWSW2 SY0FWSW2 ; 
  5 SY0FWSW3 SY0FWSW3 ; 
  5 SY0FWSW4 SY0FWSW4 ; 
  5 SY0FWSW5 SY0FWSW5 ; 
  5 SY0FWSW6 SY0FWSW6 ; 
  5 SY0FWEDT SY0FWEDT ; 
  5 SY0FWSLC SY0FWSLC [9] ; 
  5 SY0FW-PROT-XLC SY0FW-PROT-XLC [9] ; 
  5 SY0FWMES SY0FWMES ; 
    10 SY0FWNUM SY0FWNUM ; 
    10 SY0FWRST SY0FWRST ; 
  5 SY1DATA SY1DATA ; 
  5 SY0FWARN SY0FWARN [10] ; 
  5 SY0FWIDX SY0FWIDX ; 
  5 SY0FWMDT SY0FWMDT [9] ; 
    10 SY0FW1MD SY0FW1MD ; 
    10 SY0FW2MD SY0FW2MD ; 
  5 SY0FWSFL SY0FWSFL ; 
end // end SY0FW01

// w.s. for sy6csedt-mmdd
DataItem SY0FW-CSEDT-MMDD num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. for sy6csedt
DataItem SY0FW-CSEDT-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. for sy6csedt-yy
DataItem SY0FW-CSEDT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cannot upd color flag
DataItem SY0FW-NO-UPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Protect XLC on screen (Y/N)
DataItem SY0FW-PROT-XLC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1st qual cost entered(y/n)
DataItem SY0FW1MD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd qual cost entered(y/n)
DataItem SY0FW2MD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd cost calc
DataItem SY0FWAAA num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Have we warned user (Y/N)
DataItem SY0FWARN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd cost calc
DataItem SY0FWBBB num(18,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd cost calc
DataItem SY0FWCCC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// color/dim/life cycle
DataItem SY0FWCLD char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work color
DataItem SY0FWCLR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work cost
DataItem SY0FWCST num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0FWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0FWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0FWCT3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0FWCT4 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0FWCT5 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work subscript
DataItem SY0FWCT6 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd cost calc
DataItem SY0FWDDD num(9,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work dimension
DataItem SY0FWDIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work current date
DataItem SY0FWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work effective date
DataItem SY0FWEDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for tables
DataItem SY0FWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work life cycle
DataItem SY0FWLCY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for flags
DataItem SY0FWMDT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save message area
DataItem SY0FWMES char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// numeric portion
DataItem SY0FWNUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// rest of the area
DataItem SY0FWRST char(76)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// color store flag
DataItem SY0FWSFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save life cycles
DataItem SY0FWSLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0FWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0FWSW2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0FWSW3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0FWSW4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0FWSW5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0FWSW6 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record hour
DataItem SY0FWWHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record minute
DataItem SY0FWWMN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record time
DataItem SY0FWWTM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system hour
DataItem SY0FWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system minute
DataItem SY0FWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system time
DataItem SY0FWZTM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

