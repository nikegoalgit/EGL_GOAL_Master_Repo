package sy0d;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=SY0D ****
// this application adds or changes product life cycle data
// on the color table. the general flow of processes is as
// follows:
//    sy0d010(execute)  - general initialization
//    sy0d020(converse) - display screen for input
//    sy0d030(execute)  - obtain style & color data
//    sy0d040(converse) - display existing life cycle data
//    sy0d050(execute)  - update life cycle data
// ************************************************************
// maintenance:
//  project
//  number         who          when             why
// --------    ----------    ----------   --------------------
//              j.brady       06-23-86    created application
//              m.buhite      05-19-87    sy0ds35: increased
//                  size of syarec.syabfr & syarec.syaaft.
//              m.buhite      11-20-87    sy0ds35: increased
//                  size of syarec.syabfr & syarec.syaaft.
//              m.buhite      02-22-88    added season and year
//                to screen, updates to offering dates.
//              m.buhite      03-01-88    p066 - add century to
//                season-year when updating.
//              m.buhite      03-18-88    sy0ds35: increased
//                  size of syarec.syabfr & syarec.syaaft.
//  P090        m.buhite      01-13-89    sy0ds35: increased
//                  size of syarec.syabfr & syarec.syaaft,
//                  changed sy2sesny to xsnyr.
//              v.cowan       04-17-89    added XSSEGTR logic
//  -spl-       jwood         04-17-89    added noncsp opt logi
//        MHALST  05-16-89  Audit changes for VCOLOR01.
//        MHALST  09-18-89  Correct NIL offering date extend.
//        MHALST  09-25-89  Don't allow change to l/c 05.
//        MHALST  11-13-89  Data base changes and add SYZTBL
//        MHALST  10-08-90  Data base changes and SYAREC
// P148   MHALST  11-06-90  Correct edits for Season/Year
//        MHALST  02-11-91  Data base changes to SY2REC
//        MHALST  06-26-91  Add support for seasonal file
// P158   MHALST  01-21-92  Check prices when adding XLC 20.
//        MHALST  01-13-93  Add logic to extend offer dates for
//                          Holiday and Carry-over Holiday
//        JRAMOS  02-24-93  Flag a given color as erroneous
//                          if the Nike Dept Id = 'EAO ' and
//                          color product region code not =
//                          '02'
//        MHALST  03-26-93  change logic for apparel futures
//                          ending offer date calc.
//        MHALST  04-26-93  change logic to use XPSY002
// SY0211 MBUHIT  04-20-94  Added region table logic.
//        MHALST  12-01-94  Don't validate YSN unless changed.
//        MHALST  12-08-94  Patch logic for region updates.
//        MHALST  10-03-95  Add call to MN0V for region.
//        MHALST  04-25-96  Correct for apparel futr offer dt
//        MHALST  11-05-96  Correct for Europe futr offer xdt
//        MHALST  09-03-97  Change syreg processing for ftwr.
//        MHALST  09-18-97  Allow closeout if not USA product
//        NGANGO  11-11-97  Y2K MODIFICATIONS.
//        Changed map sy0dm001 to remove leading zero suppress-
//        ion, Changed W.S. SY0DW01, and Stmt. Group/Process
//        SY0D040, SY0DSCM, SY0DS20.
//        MHALST  05-04-99  Use XPSY010 for offer date calc.
// NSC    MHALST  10-26-01  When close-out, check prop end dt
// TT#18943  PVENKA  Removed references to DPROD.VSYSPF01
// MHALST 3/29/05 Recompile for chages to xpsy0002.
// ************************************************************
// io modules used         table view name
// ---------------         ---------------
//     io0120              dprod.vstyle01
//     io0130              dprod.vcolor01
//     io6640              dprod.vsyreg01
//     io0380              dprod.vprice01
//     io0360              dprod.vdcost01
//     io0530              dprod.vsyaud01
//     io0520              dprod.vsytag01
// 
// ************************************************************
// C2CIM  SSUNNA 7/2/08 - goal PRICE/LIFECYCLE update changes
// *********************
Program SY0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  SY0DW01 SY0DW01; // record
  SY0DW02 SY0DW02; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY5REC SY5REC; // record
  SY6REC SY6REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYVREC SYVREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VSYREG02 VSYREG02; // record
  XDMREC XDMREC; // record
  XGPREC XGPREC; // record
  XLCREC XLCREC; // record
  XP0HW01 XP0HW01; // record
  XP0HW02 XP0HW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use SYRGTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use SY0DM.SY0DM001,  // forms
      SY0DM.XP0HM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0D010: SY0D010();
     /* ***************************************************/
     /* *  this begin the flow stage of process sy0d010  **/
     /* ***************************************************/


    goto SY0D020;


     /* ***************************************************/
     /* *  this ends the flow stage of process sy0d010   **/
     /* ***************************************************/
    SY0D020: SY0D020();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0d020  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0D020;
    else
      if (converseVar.eventKey is pf12
       || converseVar.eventKey is enter)
        goto SY0D030;
      else
        goto SY0D010;
      end
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0d020    **/
     /* ****************************************************/
    SY0D030: SY0D030();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0d030  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0D020;
    else
      goto SY0D040;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0d030    **/
     /* ****************************************************/
    SY0D040: SY0D040();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0d040  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0
     || converseVar.eventKey is pf12)
      goto SY0D040;
    else
      if (converseVar.eventKey is enter)
        if (SY0DM001.SY0DMLCY == "10"
         || SY0DM001.SY0DMLCY == "20")
          goto SY0D050;
        else
          goto SY0D060;
        end
      else
        goto SY0D010;
      end
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0d040    **/
     /* ****************************************************/
    SY0D050: SY0D050();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0d050  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum != 0)
      goto SY0D040;
    else
      goto SY0D060;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0d050    **/
     /* ****************************************************/
    SY0D060: SY0D060();
     /* ****************************************************/
     /* *  this begins the flow stage of process sy0d060  **/
     /* ****************************************************/


    if (converseVar.validationMsgNum == 0)
      set SY0DM001.SY1STNBR cursor;
      converseLib.validationFailed(11); /* file update successful*/
      goto SY0D020;
    else
      goto SY0D040;
    end


     /* ****************************************************/
     /* *  this ends the flow stage of process sy0d060    **/
     /* ****************************************************/
  end // end main
end // end SY0D

// product life cycle add/chg
Function SY0D010()


   /* ********************************************************/
   /* *  processing in this option includes:                **/
   /* *    1) test security clearance for the application   **/
   /* *    2) initialize fields                             **/
   /* *    3) set up the map screen                         **/
   /* ********************************************************/


  XSENTRY(); /* security check*/

  XSSEGTR(); /* set segemented transaction id*/

  set SY0DM001 initial;
  set SY0DW01 empty;
  set SY1REC empty;
  set SY2REC empty;
  set VSYREG02 empty;
  set SY5REC empty;
  set SY6REC empty;
  set SY9REC empty;
  set SYAREC empty;
  set SYWREC empty;

  SY0DM001.XDMCD = "00";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SY0DW01.SY0DWDTE = TA2REC.TA2GRGGN;
    SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  else
    converseLib.validationFailed(42); /* internal date error*/
  end

   /* Now, find out what region user is and set-up table of*/
   /* valid regions the user can enter.*/
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE == 0) /* User has no valid regions*/
    converseLib.validationFailed(124); /* User Id not authorized*/
  end

  SY0DM001.XGPCD = COMMAREA.XGPCD;
  if (SY0DM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized to use this gpc*/
      set SY0DM001.XGPCD cursor, bold;
      exit stack;
    else
      if (SY0DM001.XGPCD in XGPTBL.XGPCD)
        SY0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0DM001.XGPCD cursor, bold;
        exit stack;
      else
        SY0DW01.SY0DWGPC = SY0DM001.XGPCD;
      end
    end
  else
    if (SY0DM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized to use this gpc*/
        set SY0DM001.XGPCD cursor, bold;
        exit stack;
      else
        if (SY0DM001.XGPCD in XGPTBL.XGPCD)
          SY0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc code entered*/
          set SY0DM001.XGPCD cursor, bold;
          exit stack;
        else
          SY0DW01.SY0DWGPC = SY0DM001.XGPCD;
        end
      end
    else
      if (SY0DM001.XGPCD in XGPTBL.XGPCD)
        SY0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0DM001.XGPCD cursor, bold;
        exit stack;
      else
        SY0DW01.SY0DWGPC = SY0DM001.XGPCD;
      end
    end
  end

  /* IF SY0DM001.XGPCD EQ '03';*/
  /*   MOVE 'Y' TO SY0DM001.SY0DMSPF;*/
  /* ELSE;*/
  /*   MOVE 'N' TO SY0DM001.SY0DMSPF;*/
  /* END;*/

end // end SY0D010

// product life cycle add/chg
Function SY0D020()


   /* *******************************************************/
     /* processing in the 'before' stage includes:        **/
       /* 1) set up screen                                **/
       /* 2) protect screen fields                        **/
       /* 3) move application title name to screen area   **/
   /* *******************************************************/


  SY0DM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0DM001.SYMRVNBR = "04"; /* program revision number!!!!!!!!!*/
  SY0DM001.SYMTTLNM = "    PRODUCT LIFE CYCLE - ADD/CHG      ";

  SY0DM001.XGPCD = SY0DW01.SY0DWGPC;

  SY0DM001.SY0DMNBR[1] = 1;
  SY0DM001.SY0DMNBR[2] = 2;
  SY0DM001.SY0DMNBR[3] = 3;
  SY0DM001.SY0DMNBR[4] = 4;


  set SY0DM001.SY0DMLCS protect;
  set SY0DM001.SY0DMLCY protect;
  set SY0DM001.SY0DMEDT protect;
  set SY0DM001.XSECD protect;
  set SY0DM001.XSNYR protect;
  /* IF SY0DM001.XGPCD EQ '03';*/
  /*   SET SY0DM001.SY0DMSPP DEFINED;*/
  /*   SET SY0DM001.SY0DMSPF NORMAL;*/
  /*   SET SY0DM001.SY0DMSPF AUTOSKIP;*/
  /*   IF SY0DM001.SY0DMSPF EQ ' ';*/
  /*     MOVE 'Y' TO SY0DM001.SY0DMSPF;*/
  /*   END;*/
  /* ELSE;*/
  /*   SET SY0DM001.SY0DMSPP AUTOSKIP,DARK;*/
  /*   SET SY0DM001.SY0DMSPF AUTOSKIP,DARK;*/
  /*   MOVE 'N' TO SY0DM001.SY0DMSPF;*/
  /* END;*/

  SY0DM001.SYMPRONM = "SY0D020";

  converseVar.segmentedMode = 1;


  converse SY0DM001 ;
   /* *******************************************************/
     /* processing in the 'after' stage includes:         **/
       /* 1) check for fast path option                   **/
       /* 2) check pfkeys                                 **/
       /* 3) validate screen fields                       **/
   /* *******************************************************/



  SY0DS01(); /* check for fast path option*/

  SY0DS02(); /* check pfkeys*/

  if (converseVar.eventKey is pa2
   || converseVar.validationMsgNum != 0)
    exit stack;
  else
    SY0DM001.SYMSCMSG = " ";
    set SY0DM001.XGPCD initialAttributes;
    set SY0DM001.SY1STNBR initialAttributes;
    set SY0DM001.SY2CLRID initialAttributes;
    set SY0DM001.XDMCD initialAttributes;
    set SY0DM001.SY0DMLCS initialAttributes;
    set SY0DM001.SY0DMLCY initialAttributes;
    set SY0DM001.SY0DMEDT initialAttributes;
    set SY0DM001.XSECD initialAttributes;
    set SY0DM001.XSNYR initialAttributes;
  /*  IF SY0DM001.XGPCD EQ '03';*/
  /*    SET SY0DM001.SY0DMSPP DEFINED;*/
  /*    SET SY0DM001.SY0DMSPF DEFINED;*/
  /*  END;*/
  end

  if (SY0DM001.XDMCD == "  ")
    SY0DM001.XDMCD = "00";
  end

  if (SY0DM001.SY2CLRID == "  ")
    converseLib.validationFailed(40); /* required field - please enter valid*/
                                   /* value*/
    set SY0DM001.SY2CLRID cursor, bold;
  end

  if (SY0DM001.SY1STNBR == "  ")
    converseLib.validationFailed(40); /* required field - please enter valid*/
                                   /* value*/
    set SY0DM001.SY2CLRID cursor, bold;
  end

  if (SY0DM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized for this gpc*/
      set SY0DM001.XGPCD cursor, bold;
    else
      if (SY0DM001.XGPCD in XGPTBL.XGPCD)
        SY0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0DM001.XGPCD cursor, bold;
      else
        SY0DW01.SY0DWGPC = SY0DM001.XGPCD;
      end
    end
  else
    if (SY0DM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized for this gpc*/
        set SY0DM001.XGPCD cursor, bold;
      else
        if (SY0DM001.XGPCD in XGPTBL.XGPCD)
          SY0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc code entered*/
          set SY0DM001.XGPCD cursor, bold;
        else
          SY0DW01.SY0DWGPC = SY0DM001.XGPCD;
        end
      end
    else
      if (SY0DM001.XGPCD in XGPTBL.XGPCD)
        SY0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0DM001.XGPCD cursor, bold;
      else
        SY0DW01.SY0DWGPC = SY0DM001.XGPCD;
      end
    end
  end

end // end SY0D020

// life cycle add/chg
Function SY0D030()

   /* **********************************************************/
   /* *  this process obtains the style data,color data       **/
   /* *  dimension code description,and life cycle data.      **/
   /* *  It also loads the table of regional data.            **/
   /* **********************************************************/

   /* *******************************/
   /* obtain style record*/
   /* *******************************/

  SY1REC.XGPCD = SY0DM001.XGPCD;
  SY1REC.SY1STNBR = SY0DM001.SY1STNBR;
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(5); /* style record does not exist*/
    set SY0DM001.SY1STNBR cursor, bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(20); /* style table error - contact sys.*/
                                   /* development*/
      SY0DM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      set SY0DM001.SY1STNBR cursor, bold;
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0D   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0D030  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0DM001";
      TA1REC.TA1DBASE = "SY1REC";
      TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    else
      SY0DM001.SY1SSTNM = SY1REC.SY1SSTNM;
    end
  end


   /* ***************************/
   /* obtain style color/dim row*/
   /* ***************************/

  SY2REC.XGPCD = SY0DM001.XGPCD;
  SY2REC.SY1STNBR = SY0DM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0DM001.SY2CLRID;
  SY2REC.XDMCD = SY0DM001.XDMCD;
  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(7); /* color/dimension record does not exist*/
    set SY0DM001.SY2CLRID cursor, bold;
    set SY0DM001.XDMCD bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      set SY0DM001.SY2CLRID cursor, bold;
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
      SY0DM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0D   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0D030  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0DM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    else

      if (SY2REC.XDR-PROD-REG-CD /* Is user ok for region?*/
       in SYWREC.XDR-PROD-REG-CD)
        /* OK, color is valid*/
      else
        converseLib.validationFailed(193); /* Color invalid, flag as error*/
        set SY0DM001.SY2CLRID cursor, bold;
        exit stack;
      end

      move SY2REC to SY0DM001 withV60Compat;
      SY0DM001.SY2CLRDS = SY2REC.SY2CLRDS;
      SYAREC.SYABFR = SY2REC.SY2DATA;
    end
  end

   /* ********************************/
   /* *  load table of regional data*/
   /* ********************************/

  SY0D100(); /* Load regions into SY0DW02*/
  if (converseVar.validationMsgNum != 0) /* Had problems with load*/
    exit stack; /* So exit*/
  end

   /* ********************************/
   /* *  obtain dimension description*/
   /* ********************************/

  if (SY0DM001.XDMCD in XDMTBL.XDMCD)
    XDMREC.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0)
    SY0DM001.XDMDESC = " ";
  else
    SY0DM001.XDMDESC = XDMREC.XDMDESC;
  end


   /* **********************************/
   /* *  obtain season description*/
   /* **********************************/

  SY0DSBS();

   /* **********************************/
   /* *  obtain life cycle descriptions*/
   /* **********************************/


   /* First count-up how many life cycles we have*/
  if (SY2REC.XLCCD4 != "  ")
    SY0DW01.SY0DW-MAX-XLC = 4;
  else
    if (SY2REC.XLCCD3 != "  ")
      SY0DW01.SY0DW-MAX-XLC = 3;
    else
      if (SY2REC.XLCCD2 != "  ")
        SY0DW01.SY0DW-MAX-XLC = 2;
      else
        SY0DW01.SY0DW-MAX-XLC = 1;
      end
    end
  end
   /*  */
  if (SY2REC.XLCCD1 != "  ")
    SY0DW01.SY0DWEFF[1] = SY2REC.SY2CEDT1;
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGGN = SY2REC.SY2CEDT1;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      SY0DM001.SY5PCEDT[1] = TA2REC.TA2GRGEN;
    else
      converseLib.validationFailed(42); /* internal date error - call sys.*/
                                   /* dvlpmnt.*/
      exit stack;
    end
    SY0DM001.XLCCD[1] = SY2REC.XLCCD1;
    if (SY2REC.XLCCD1 in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      SY0DM001.XLCDESC[1] = " ";
    else
      SY0DM001.XLCDESC[1] = XLCREC.XLCDESC;
    end
  end

  if (SY2REC.XLCCD2 != "  ")
    SY0DW01.SY0DWEFF[2] = SY2REC.SY2CEDT2;
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGGN = SY2REC.SY2CEDT2;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      SY0DM001.SY5PCEDT[2] = TA2REC.TA2GRGEN;
    else
      converseLib.validationFailed(42); /* internal date error - call sys.*/
                                   /* dvlpmnt.*/
      exit stack;
    end
    SY0DM001.XLCCD[2] = SY2REC.XLCCD2;
    if (SY2REC.XLCCD2 in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      SY0DM001.XLCDESC[2] = " ";
    else
      SY0DM001.XLCDESC[2] = XLCREC.XLCDESC;
    end
  end

  if (SY2REC.XLCCD3 != "  ")
    SY0DW01.SY0DWEFF[3] = SY2REC.SY2CEDT3;
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGGN = SY2REC.SY2CEDT3;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      SY0DM001.SY5PCEDT[3] = TA2REC.TA2GRGEN;
    else
      converseLib.validationFailed(42); /* internal date error - call sys.*/
                                   /* dvlpmnt.*/
      exit stack;
    end
    SY0DM001.XLCCD[3] = SY2REC.XLCCD3;
    if (SY2REC.XLCCD3 in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      SY0DM001.XLCDESC[3] = " ";
    else
      SY0DM001.XLCDESC[3] = XLCREC.XLCDESC;
    end
  end

  if (SY2REC.XLCCD4 != "  ")
    SY0DW01.SY0DWEFF[4] = SY2REC.SY2CEDT4;
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGGN = SY2REC.SY2CEDT4;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      SY0DM001.SY5PCEDT[4] = TA2REC.TA2GRGEN;
    else
      converseLib.validationFailed(42); /* internal date error - call sys.*/
                                   /* dvlpmnt.*/
      exit stack;
    end
    SY0DM001.XLCCD[4] = SY2REC.XLCCD4;
    if (SY2REC.XLCCD4 in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      SY0DM001.XLCDESC[4] = " ";
    else
      SY0DM001.XLCDESC[4] = XLCREC.XLCDESC;
    end
  end


   /* **********************************/
   /* *  determine effective date*/
   /* **********************************/

  if (SY2REC.SY2CEDT1 <= SY0DW01.SY0DWDTE)
    set SY0DM001.SY0DMNBR[1] skip, bold;
    SY0DW01.SY0DWSED = SY2REC.SY2CEDT1;
  else
    if (SY2REC.SY2CEDT2 <= SY0DW01.SY0DWDTE)
      set SY0DM001.SY0DMNBR[2] skip, bold;
      SY0DW01.SY0DWSED = SY2REC.SY2CEDT2;
    else
      if (SY2REC.SY2CEDT3 <= SY0DW01.SY0DWDTE)
        set SY0DM001.SY0DMNBR[3] skip, bold;
        SY0DW01.SY0DWSED = SY2REC.SY2CEDT3;
      else
        set SY0DM001.SY0DMNBR[4] skip, bold;
        SY0DW01.SY0DWSED = SY2REC.SY2CEDT4;
      end
    end
  end


end // end SY0D030

// life cycle add/chg
Function SY0D040()


   /* *******************************************************/
     /* processing in the 'before' stage includes:        **/
       /* 1) protect screen fields                        **/
       /* 2) move application title name to screen area   **/
   /* *******************************************************/


  set SY0DM001.XGPCD protect;
  set SY0DM001.SY1STNBR protect;
  set SY0DM001.SY2CLRID protect;
  set SY0DM001.XDMCD protect;

  SY0DM001.SYMPRONM = "SY0D040";

  if (converseVar.validationMsgNum == 0)
    set SY0DM001.SY0DMLCS cursor;
  end

  converseVar.segmentedMode = 1;


  converse SY0DM001 ;
   /* *******************************************************/
     /* processing in the 'after' stage includes:         **/
       /* 1) reset attributes                             **/
       /* 2) edit life cycle and effective date fields    **/
       /* 3) edit life cycle and effective date fields    **/
       /* 4) obtain life cycle description                **/
       /* 4) edit season and get description              **/
   /* *******************************************************/


  SY0DS01(); /* check for fast path option*/

  SY0DS02(); /* check pfkeys*/

  if (converseVar.eventKey is pa2
   || converseVar.validationMsgNum != 0)
    exit stack;
  else
    SY0DM001.SYMSCMSG = " ";
    set SY0DM001.XGPCD initialAttributes;
    set SY0DM001.SY1STNBR initialAttributes;
    set SY0DM001.SY2CLRID initialAttributes;
    set SY0DM001.XDMCD initialAttributes;
    set SY0DM001.SY0DMLCS initialAttributes;
    set SY0DM001.SY0DMLCY initialAttributes;
    set SY0DM001.SY0DMEDT initialAttributes;
    set SY0DM001.SY0DMNBR initialAttributes;
    set SY0DM001.XSECD initialAttributes;
    set SY0DM001.XSNYR initialAttributes;
  /*  IF SY0DM001.XGPCD EQ '03';*/
  /*    SET SY0DM001.SY0DMSPF DEFINED;*/
  /*  END;*/
  end

  if (SY0DM001.SY0DMLCY == "  ")
    SY0DM001.SY0DMLCD = " ";
  end

  if (SY0DM001.SY0DMLCS != 0
   && SY0DM001.SY0DMLCS != 1
   && SY0DM001.SY0DMLCS != 2
   && SY0DM001.SY0DMLCS != 3
   && SY0DM001.SY0DMLCS != 4)
    converseLib.validationFailed(63); /* enter existing l/c occurance*/
    set SY0DM001.SY0DMLCS cursor, bold;
    exit stack;
  end

  if (SY0DM001.SY0DMLCS != 0)
    if (SY0DMLCS >= 1)
      if (SY0DMLCS <= 4)
        if (SY0DM001.XLCCD[SY0DMLCS] == "  ")
          converseLib.validationFailed(63); /* enter existing l/c occurance*/
          set SY0DM001.SY0DMLCS cursor, bold;
          exit stack;
        else
          if (SY0DM001.XLCCD[SY0DMLCS] == "05" /* in development*/
           && SY0DM001.SY0DMLCS == SY0DW01.SY0DW-MAX-XLC)
            converseLib.validationFailed(149); /* cannot modify this l/c*/
            set SY0DM001.SY0DMLCS cursor, bold;
            exit stack;
          end
        end
      end
    end
  end

  if (SY0DM001.SY0DMEDT != 0)
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "A";
  /*  */
  /* ------------------ Y2K OUT BEGIN ----------------*/
  /*  */
  /* MOVE 19 TO TA2CENT;*/
  /*  */
  /* ------------------ Y2K OUT END ------------------*/
  /*  */
  /*  */
  /* ------------------ Y2K IN BEGIN ----------------*/
  /*  */
    SY0DW01.SY0DWMEDT-MMDDYY = SY0DM001.SY0DMEDT;
    if (SY0DW01.SY0DWMEDT-YY > 60)
      TA2CENT = 19;
    else
      TA2CENT = 20;
    end
  /*  */
  /* ------------------ Y2K IN END ------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY0DM001.SY0DMEDT;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      SY0DW01.SY0DWEDT = TA2REC.TA2GRGGN;
    else
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY0DM001.SY0DMEDT cursor, bold;
      exit stack;
    end
  else
    SY0DW01.SY0DWEDT = 0;
  end

  if (SY0DW01.SY0DWEDT != 0)
    if (SY0DW01.SY0DWEDT == SY2REC.SY2CEDT1
     || SY0DW01.SY0DWEDT == SY2REC.SY2CEDT2
     || SY0DW01.SY0DWEDT == SY2REC.SY2CEDT3
     || SY0DW01.SY0DWEDT == SY2REC.SY2CEDT4)
      converseLib.validationFailed(16); /* effective date already exists*/
      set SY0DM001.SY0DMEDT cursor, bold;
    end
  end


  if (SY0DM001.SY0DMLCS != 0)
    if (SY0DM001.SY0DMLCY == "  "
     && SY0DM001.SY0DMEDT == 0)
      converseLib.validationFailed(61); /* please enter l/c code or eff. dt for*/
                                   /* chg*/
      set SY0DM001.SY0DMLCY cursor, bold;
      exit stack;
    end
  else
    if (SY0DM001.SY0DMLCY == "  ")
      converseLib.validationFailed(62); /* enter l/c code and eff dt for this*/
                                   /* add*/
      set SY0DM001.SY0DMLCY cursor, bold;
      exit stack;
    end
    if (SY0DM001.SY0DMEDT == 0)
      converseLib.validationFailed(62); /* enter l/c code and eff dt for this*/
                                   /* add*/
      set SY0DM001.SY0DMEDT cursor, bold;
      exit stack;
    end
  end

  if (SY0DM001.SY0DMLCS != 0)
    if (SY0DW01.SY0DWEDT != 0)
      if (SY0DW01.SY0DWEDT == SY0DW01.SY0DWEFF[SY0DMLCS])
        if (SY0DM001.SY0DMLCY == "  ")
          converseLib.validationFailed(64); /* enter l/c code for existing eff dt*/
          set SY0DM001.SY0DMLCY cursor, bold;
          exit stack;
        end
      end
    end
  end

  if (SY0DM001.SY0DMLCY == "  ")
    SY0DM001.SY0DMLCD = " ";
  else
    if (SY0DM001.SY0DMLCY in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      converseLib.validationFailed(3); /* invalid code*/
      set SY0DM001.SY0DMLCY cursor, bold;
      SY0DM001.SY0DMLCD = " ";
    else
      SY0DM001.SY0DMLCD = XLCREC.XLCDESC;
    end
  end

  /****************************************************/
  /* * VERIFY EFFECTIVE DATE                   **/
  /****************************************************/

  if (SY0DMLCS == 0)
    if (SY0DW01.SY0DWEDT < SY0DW01.SY0DWDTE)
      converseLib.validationFailed(246); /* new eff. dt. must be on or after*/
                                   /* current date*/
      set SY0DM001.SY0DMEDT cursor, bold;
    end
  end

   /* ***********************************************/
   /* * verify season code and get description     **/
   /* ***********************************************/

  SY0DSCM();

   /* ***********************************************/
   /* * verify seasonal flag                       **/
   /* ***********************************************/

  /* IF SY0DM001.XGPCD EQ '03';*/
  /*   IF SY0DM001.SY0DMSPF NE 'Y'*/
  /*     AND SY0DM001.SY0DMSPF NE 'N';*/
  /*     MOVE 36 TO EZEMNO;           /* value must be Y or N*/
  /*     SET SY0DM001.SY0DMSPF CURSOR,BRIGHT;*/
  /*   END;*/
  /* END;*/

   /* ***********************************************/
   /* * If no errors, get regions to update        **/
   /* ***********************************************/

  if (converseVar.validationMsgNum == 0 /* No errors*/
   && converseVar.eventKey is enter)    /* and requesting Update*/
    SY0DS-GET-XP0HM(); /* pop-up for regions*/
  end

end // end SY0D040

// life cycle add/chg
Function SY0D050()


   /* ***************************************************/
   /* * verify defualt pricing on XLC change           **/
   /* ***************************************************/

  TA1REC.TA1PGMNM = "SY0D";
  TA1REC.TA1LOCAT[1] = "SY0D050";
  TA1REC.TA1MAP = "SY0DM001";

  SY2REC.XGPCD = SY0DM001.XGPCD;
  SY2REC.SY1STNBR = SY0DM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0DM001.SY2CLRID;
  SY2REC.XDMCD = SY0DM001.XDMCD;

  if (SY0DM001.XGPCD == "02"        /* If footwear*/
   && SY2REC.XDR-PROD-REG-CD > "01" /* Not developed here*/
   && SY2REC.XDVCD == "02"          /* Not sold here*/
   && SY0DM001.SY0DMLCY == "20")    /* changing to close-out*/
    /* NEXT SENTENCE (Don't need to check pricing)*/
  else
    XPSY002(); /* Go and check pricing*/
  end

end // end SY0D050

// life cycle add/chg
Function SY0D060()
   /* ***********************************************/
   /* *  this process:                             **/
   /* *    1) verifies the effective date entered  **/
   /* *    2) formats the color/dim output area    **/
   /* *    3) updates the color/dim table          **/
   /* ***********************************************/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)
    SY0DW01.SY0DWDTE = TA2REC.TA2GRGGN;
    SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  else
    converseLib.validationFailed(42); /* internal date error*/
  end

  if (converseVar.validationMsgNum == 0)
  /*  IF SY0DM001.XGPCD EQ '03'*/
  /*    AND SY0DM001.SY0DMSPF = 'Y';*/
  /*    SY0DSPF();                     /* add seasonal record*/
  /*  END;*/
    SY0DS20(); /* format output record*/
    if (converseVar.validationMsgNum != 0)
      exit stack;
    else
      SY0DS30(); /* perform color table update*/
    end
  end

  if (converseVar.validationMsgNum == 0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    set SY0DM001 initial;
    SY0DM001.SY1STNBR = SY2REC.SY1STNBR;
    SY0DM001.SY2CLRID = SY2REC.SY2CLRID;
    set SY1REC empty;
    set SY2REC empty;
    set SY5REC empty;
    set SY6REC empty;
    set SY9REC empty;
    set SYAREC empty;
    SY0DW01.SY0DWEFF[1] = 0;
    SY0DW01.SY0DWEFF[2] = 0;
    SY0DW01.SY0DWEFF[3] = 0;
    SY0DW01.SY0DWEFF[4] = 0;
    SY0DW01.SY0DWCT1 = 0;
    SY0DW01.SY0DWZTM = " ";
    SY0DW01.SY0DWWTM = 0;
    SY0DW01.SY0DWSED = 0;
    SY0DW01.SY0DWSW1 = " ";
    SY0DW01.SY0DWLCY = " ";
    SY0DM001.XDMCD = "00";
  /*  IF COMMAREA.XGPCD EQ '03';*/
  /*    MOVE 'Y' TO SY0DM001.SY0DMSPF;*/
  /*    IF SYWREC.SYWMSGFL EQ 'Y';*/
  /*      MOVE 'N' TO SYWREC.SYWMSGFL;*/
  /*      MOVE "   Seasonal Record Allready Created" TO SY0DM001.SYMSCMSG;*/
  /*    END;*/
  /*  ELSE;*/
  /*    MOVE 'N' TO SY0DM001.SY0DMSPF;*/
  /*  END;*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
  end


end // end SY0D060

// Load regions into table
Function SY0D100()

   /* Load all SYREG Regional rows into working storage*/

  VSYREG02.XGP-GPC-CD = SY2REC.XGPCD;
  VSYREG02.SY-STY-NBR = SY2REC.SY1STNBR;
  VSYREG02.SY-COLR-CD-ID = SY2REC.SY2CLRID;
  VSYREG02.XDM-DIM-CD = SY2REC.XDMCD;

  call "VSYREG02" ("S2", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "S2      ";
    TA1REC.TA1LOCAT[2] = "SY0D100 ";
    TA1REC.TA1LOCAT[3] = "VSYREG02";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYREG02";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    return;
  end

  SY0DW02.SY0DW-REG-CNT = 00;
  while (SQLCA.VAGen_SQLCODE == 0)
    SY0DS-LOAD-SYREG();
  end

  call "VSYREG02" ("C2", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "C2      ";
    TA1REC.TA1LOCAT[2] = "SY0D100 ";
    TA1REC.TA1LOCAT[3] = "VSYREG02";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYREG02";
    TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error*/
    return;
  end

end // end SY0D100

// Process SYREG regional Row
Function SY0DS-GET-SYREG()

   /* Process SYREG Regional rows*/

  XP0HWIX1 = 1;

  while (XP0HWIX1 <= 25)
    if (XP0HW01.XP0HWSEL[XP0HWIX1] == "S"       /* user selected region*/
     && XP0HW01.XP0HW-SYREG-FL[XP0HWIX1] == "Y" /* color/region exists*/
     && XP0HW01.XDR-PROD-REG-CD[XP0HWIX1] in SYWREC.XDR-PROD-REG-CD)
      VSYREG02.XDR-PROD-REG-CD = XP0HW01.XDR-PROD-REG-CD[XP0HWIX1];
      TA1REC.TA1PGMNM = "SY0D";
      TA1REC.TA1MAP = "SY0DM001";
      XPSY003-VAL-SYREG(); /* validate syreg row*/

      if (SQLCA.VAGen_SQLCODE == 0)
        SYAREC.SYABFR = VSYREG02.VSYREG02-GROUP;
        VSYREG02.XLC-LIFE-CYC-CD[1] = SY2REC.XLCCD1;
        VSYREG02.XLC-LIFE-CYC-CD[2] = SY2REC.XLCCD2;
        VSYREG02.XLC-LIFE-CYC-CD[3] = SY2REC.XLCCD3;
        VSYREG02.XLC-LIFE-CYC-CD[4] = SY2REC.XLCCD4;
        VSYREG02.SY-LIFE-CYC-EDT[1] = SY2REC.SY2CEDT1;
        VSYREG02.SY-LIFE-CYC-EDT[2] = SY2REC.SY2CEDT2;
        VSYREG02.SY-LIFE-CYC-EDT[3] = SY2REC.SY2CEDT3;
        VSYREG02.SY-LIFE-CYC-EDT[4] = SY2REC.SY2CEDT4;
        if (SY0DW01.SY0DW-SESN-CHG == "Y")
          VSYREG02.XSE-SESN-CD = SY2REC.XSECD;
          VSYREG02.XSN-SESN-YR-RNG = SY2REC.XSNYR;
          SY0DS-REG-DATES(); /* Set ending offer dates for region*/
        end
        VSYREG02.ZZ-CHNG-DT = SY0DW01.SY0DWDTE;
        VSYREG02.ZZ-CHNG-HHMM = SY0DW01.SY0DWWTM;
        XPSY004-UPD-SYREG(); /* update syreg row*/

        if (converseVar.validationMsgNum == 0)
          SYAREC.SYAUDTYP = "C";
          SYAREC.ZZZSDT = SY0DW01.SY0DWDTE;
          SYAREC.ZZZSTM = SY0DW01.SY0DWWTM;
          XPSY005-AUD-SYREG(); /* syreg audit insert*/

          SY9REC.SY9TGTYP = "C";
          SY9REC.ZZZSDT = SY0DW01.SY0DWDTE;
          SY9REC.ZZZSTM = SY0DW01.SY0DWWTM;
          XPSY006-TAG-SYREG(); /* syreg tag insert*/
        end
      end
    end
    XP0HWIX1 = XP0HWIX1 + 1;
  end

end // end SY0DS-GET-SYREG

// Validate XDR region
Function SY0DS-GET-XP0HM()

   /* Validate XDR Prod Region code*/

  XP0HW01.XP0HW-ONLY-SYREG-FL = "N";
  XP0HW01.XP0HW-AUTO-SEL-FL = "N";
  XP0HW01.XGPCD = SY0DM001.XGPCD;
  XP0HW01.SY1STNBR = SY0DM001.SY1STNBR;
  XP0HW01.SY2CLRID = SY0DM001.SY2CLRID;
  XP0HW01.XDMCD = SY0DM001.XDMCD;

  XP0H001(); /* so do it*/

  if (XP0HW02.XP0HWERR == "Y") /* we have an error*/
    if (XP0HW02.XP0HWENR == 0) /* Invalid function key*/
      converseLib.validationFailed(19);
    end
    if (XP0HW02.XP0HWENR == 1) /* No rows found*/
      converseLib.validationFailed(50);
    end
    if (XP0HW02.XP0HWENR == 2) /* Corp. Table Error*/
      converseLib.validationFailed(23);
    end
    return;
  else
    converseLib.clearScreen();
    
  end


end // end SY0DS-GET-XP0HM

// GET ROW FROM YSNTBL
Function SY0DS-GET-YSN()

       /* ******************************************/
       /* *  GET PROPER ROW FROM YSNTBL.          **/
       /* ******************************************/

  SY0DW01.SY0DW-FND-YSN = "N";
  SYWREC.SYWINDEX = 1;
  while (YSNTBL.XGPCD[SYWINDEX] != "99"
   && SY0DW01.SY0DW-FND-YSN == "N")
    if (YSNTBL.XGPCD[SYWINDEX] == SY0DM001.XGPCD
     && YSNTBL.XDR-PROD-REG-CD[SYWINDEX] == SY0DW01.XDR-PROD-REG-CD
     && YSNTBL.XSECD[SYWINDEX] == SY0DW01.XSE-SESN-CD
     && YSNTBL.XSNYR[SYWINDEX] == SY0DW01.SY0DW-XSN-SESN-YR
     && YSNTBL.XXXSTAT[SYWINDEX] == "A")
      SY0DW01.SY0DW-FND-YSN = "Y";
    else
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
  end

end // end SY0DS-GET-YSN

// Load SYREG into table
Function SY0DS-LOAD-SYREG()

   /* Load SYREG Regional row into working storage*/

  call "VSYREG02" ("N2", SQLCA, VSYREG02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0DW02.SY0DW-REG-CNT = SY0DW02.SY0DW-REG-CNT + 1;
    SY0DW02.XDR-PROD-REG-CD[SY0DW-REG-CNT] = VSYREG02.XDR-PROD-REG-CD;
    SY0DW02.XLC-LIFE-CYC-CD[SY0DW-REG-CNT] = VSYREG02.XLC-LIFE-CYC-CD[1];
    SY0DW02.SY-LIFE-CYC-EDT[SY0DW-REG-CNT] = VSYREG02.SY-LIFE-CYC-EDT[1];
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* End of Data*/
      return;
    else
      TA1REC.TA1LOCAT[1] = "N2      ";
      TA1REC.TA1LOCAT[2] = "SY0D100 ";
      TA1REC.TA1LOCAT[3] = "VSYREG02";
      TA1REC.TA1LOCAT[4] = "        ";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYREG02";
      TA1REC.TA1TBLKE = VSYREG02.VSYREG02-KEY;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error*/
      return;
    end
  end

end // end SY0DS-LOAD-SYREG

// modify offering ending dates
Function SY0DS-REG-DATES()

       /* ******************************************/
       /* *  modify offering ending dates         **/
       /* *  on the syreg row                     **/
       /* ******************************************/


  if (SYWREC.XDR-PROD-REG-CD[1] != "02") /* Not Europe*/
    if (VSYREG02.XDR-PROD-REG-CD == "01")
      if (SY0DW01.SY2POFXD > VSYREG02.SY-PROP-OFFER-XDT)
        VSYREG02.SY-PROP-OFFER-XDT = SY0DW01.SY2POFXD;
      end
      if (SY0DW01.SY2FOFXD > VSYREG02.SY-FUTR-OFFER-XDT)
        VSYREG02.SY-FUTR-OFFER-XDT = SY0DW01.SY2FOFXD;
      end
    else /* Use the NIL offer end date here*/
      if (SY0DW01.SY2NOFXD > VSYREG02.SY-PROP-OFFER-XDT)
        VSYREG02.SY-PROP-OFFER-XDT = SY0DW01.SY2NOFXD;
      end
      if (SY0DW01.SY2NOFXD > VSYREG02.SY-FUTR-OFFER-XDT)
        VSYREG02.SY-FUTR-OFFER-XDT = SY0DW01.SY2NOFXD;
      end
    end
  else /* This is a Europe user*/
    if (VSYREG02.XDR-PROD-REG-CD == "02")
      if (SY0DW01.SY2POFXD > VSYREG02.SY-PROP-OFFER-XDT)
        VSYREG02.SY-PROP-OFFER-XDT = SY0DW01.SY2POFXD;
      end
      if (SY0DW01.SY2FOFXD > VSYREG02.SY-FUTR-OFFER-XDT)
        VSYREG02.SY-FUTR-OFFER-XDT = SY0DW01.SY2FOFXD;
      end
    else /* Use the NIL offer end date here*/
      if (SY0DW01.SY2NOFXD > VSYREG02.SY-PROP-OFFER-XDT)
        VSYREG02.SY-PROP-OFFER-XDT = SY0DW01.SY2NOFXD;
      end
      if (SY0DW01.SY2NOFXD > VSYREG02.SY-FUTR-OFFER-XDT)
        VSYREG02.SY-FUTR-OFFER-XDT = SY0DW01.SY2NOFXD;
      end
    end
  end

end // end SY0DS-REG-DATES

// check for fast path option
Function SY0DS01()


   /* *****************************************/
   /* *  let's check for fast path request   **/
   /* *****************************************/


  if (converseVar.eventKey is enter
   && SY0DM001.CATOAP != "  ")
    move SY0DM001 to COMMAREA withV60Compat;
    XSEXIT();
    SY0DM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0DM001 alarm;
    set SY0DM001.CATOAP cursor, bold;
    converseLib.validationFailed(1); /* reserved message area*/
  end

  return;


end // end SY0DS01

// check pfkeys
Function SY0DS02()


   /* *****************************************************/
     /* let's check the pfkey entered by the operator   **/
   /* *****************************************************/


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "HELP";
    XSEXIT();
  else
    if (converseVar.eventKey is pf4)
      XSPF4();
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CATOAP = "SY0N";
        XSEXIT();
      else
        if (converseVar.eventKey is pf12
         || converseVar.eventKey is enter
         || converseVar.eventKey is pa2)
          return;
        else
          converseLib.validationFailed(19); /* invalid pf key*/
        end
      end
    end
  end


end // end SY0DS02

// format color record for output
Function SY0DS20()
   /* *********************************************************/
   /* *  this statement group formats the output record for  **/
   /* *  the color table update. we will also check to make  **/
   /* *  sure that we have a current life cycle.             **/
   /* *********************************************************/

  SY0DSGA(); /* modify ending offering dates*/

  SY2REC.XSECD = SY0DM001.XSECD;
  SY2REC.XSNYR = SY0DM001.XSNYR;
  if (SY2REC.XSNYR > 60)
    SY2REC.XSNYR = SY2REC.XSNYR + 1900;
  else
  /*  */
  /* -------------------- Y2K OUT BEGIN -------------*/
  /*  */
  /* IF SY2REC.XSNYR NE 0;*/
  /* SY2REC.XSNYR = SY2REC.XSNYR + 2000;*/
  /* END;*/
  /*  */
  /* -------------------- Y2K OUT END ---------------*/
  /*  */
  /*  */
  /* -------------------- Y2K IN BEGIN -------------*/
  /*  */
    SY2REC.XSNYR = SY2REC.XSNYR + 2000;
  /*  */
  /* -------------------- Y2K IN END ---------------*/
  /*  */
  end

  if (SY0DM001.SY0DMLCS == 0)
    SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
    SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
    SY2REC.SY2CEDT2 = SY2REC.SY2CEDT1;
    SY2REC.SY2CEDT1 = SY0DW01.SY0DWEDT;
    SY2REC.XLCCD4 = SY2REC.XLCCD3;
    SY2REC.XLCCD3 = SY2REC.XLCCD2;
    SY2REC.XLCCD2 = SY2REC.XLCCD1;
    SY2REC.XLCCD1 = SY0DM001.SY0DMLCY;
  end

  if (SY0DM001.SY0DMLCS == 1)
    if (SY0DM001.SY0DMEDT != 0)
      SY2REC.SY2CEDT1 = SY0DW01.SY0DWEDT;
    end
    if (SY0DM001.SY0DMLCY != "  ")
      SY2REC.XLCCD1 = SY0DM001.SY0DMLCY;
    end
  end

  if (SY0DM001.SY0DMLCS == 2)
    if (SY0DM001.SY0DMEDT != 0)
      SY2REC.SY2CEDT2 = SY0DW01.SY0DWEDT;
    end
    if (SY0DM001.SY0DMLCY != "  ")
      SY2REC.XLCCD2 = SY0DM001.SY0DMLCY;
    end
  end

  if (SY0DM001.SY0DMLCS == 3)
    if (SY0DM001.SY0DMEDT != 0)
      SY2REC.SY2CEDT3 = SY0DW01.SY0DWEDT;
    end
    if (SY0DM001.SY0DMLCY != "  ")
      SY2REC.XLCCD3 = SY0DM001.SY0DMLCY;
    end
  end

  if (SY0DM001.SY0DMLCS == 4)
    if (SY0DM001.SY0DMEDT != 0)
      SY2REC.SY2CEDT4 = SY0DW01.SY0DWEDT;
    end
    if (SY0DM001.SY0DMLCY != "  ")
      SY2REC.XLCCD4 = SY0DM001.SY0DMLCY;
    end
  end

    /* let's check to make sure they are in order*/

  SY0DW01.SY0DWSW1 = "Y";
  while (SY0DW01.SY0DWSW1 == "Y")
    SY0DW01.SY0DWSW1 = "N";
    if (SY2REC.SY2CEDT2 > SY2REC.SY2CEDT1)
      SY0DW01.SY0DWEDT = SY2REC.SY2CEDT2;
      SY2REC.SY2CEDT2 = SY2REC.SY2CEDT1;
      SY2REC.SY2CEDT1 = SY0DW01.SY0DWEDT;
      SY0DW01.SY0DWLCY = SY2REC.XLCCD2;
      SY2REC.XLCCD2 = SY2REC.XLCCD1;
      SY2REC.XLCCD1 = SY0DW01.SY0DWLCY;
      SY0DW01.SY0DWSW1 = "Y";
    end
    if (SY2REC.SY2CEDT3 > SY2REC.SY2CEDT2)
      SY0DW01.SY0DWEDT = SY2REC.SY2CEDT3;
      SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
      SY2REC.SY2CEDT2 = SY0DW01.SY0DWEDT;
      SY0DW01.SY0DWLCY = SY2REC.XLCCD3;
      SY2REC.XLCCD3 = SY2REC.XLCCD2;
      SY2REC.XLCCD2 = SY0DW01.SY0DWLCY;
      SY0DW01.SY0DWSW1 = "Y";
    end
    if (SY2REC.SY2CEDT4 > SY2REC.SY2CEDT3)
      SY0DW01.SY0DWEDT = SY2REC.SY2CEDT4;
      SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
      SY2REC.SY2CEDT3 = SY0DW01.SY0DWEDT;
      SY0DW01.SY0DWLCY = SY2REC.XLCCD4;
      SY2REC.XLCCD4 = SY2REC.XLCCD3;
      SY2REC.XLCCD3 = SY0DW01.SY0DWLCY;
      SY0DW01.SY0DWSW1 = "Y";
    end
  end

   /* now let's check for a current life cycle*/

  if (SY2REC.SY2CEDT1 != 0
   && SY2REC.SY2CEDT1 <= SY0DWDTE)
    /* next sentence (we have a current date)*/
  else
    if (SY2REC.SY2CEDT2 != 0
     && SY2REC.SY2CEDT2 <= SY0DWDTE)
      /* next sentence (we have a current date)*/
    else
      if (SY2REC.SY2CEDT3 != 0
       && SY2REC.SY2CEDT3 <= SY0DWDTE)
        /* next sentence (we have a current date)*/
      else
        if (SY2REC.SY2CEDT4 != 0
         && SY2REC.SY2CEDT4 <= SY0DWDTE)
          /* next sentence (we have a current date)*/
        else /* we have no current life cycle *error**/
          converseLib.validationFailed(86); /* no current life cycle*/
          return;
        end
      end
    end
  end

  if (SY2REC.XLCCD1 == "20")
    SY2REC.SY2BOSWI = "N";
    SY2REC.SY2BOEDT = SY2REC.SY2CEDT1;
    if (SY2REC.XGPCD != "03"  /* If footwear/equip*/
     && SY2REC.XLCCD1 == "20" /* close out life cycle*/
     && SY2REC.SY2CEDT1 < SY2REC.SY2POFXD
     && SY2REC.SY2CEDT1 >= SY2REC.SY2POFBD)
      SY2REC.SY2POFXD = SY2REC.SY2CEDT1;
    end
  else
    if (SY2REC.XLCCD1 == "10")
      SY2REC.SY2BOSWI = "Y";
      SY2REC.SY2BOEDT = SY2REC.SY2CEDT1;
    end
  end

end // end SY0DS20

// update style color/dim row
Function SY0DS30()
   /* ***************************/
   /* update style color/dim row*/
   /* **************************/

  SY0DW01.SY0DWZTM = VGVar.currentFormattedTime;
  SY0DW01.SY0DWWHR = SY0DW01.SY0DWZHR;
  SY0DW01.SY0DWWMN = SY0DW01.SY0DWZMN;
  SY2REC.ZZZCHGDT = SY0DW01.SY0DWDTE;
  SY2REC.ZZZCHGTM = SY0DW01.SY0DWWTM;

  SY2REC.XGPCD = SY0DM001.XGPCD;
  SY2REC.SY1STNBR = SY0DM001.SY1STNBR;
  SY2REC.SY2CLRID = SY0DM001.SY2CLRID;
  SY2REC.XDMCD = SY0DM001.XDMCD;
  call "IO0130" ("U ", SQLCA, SY2REC) {isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    converseLib.validationFailed(7); /* color/dimension record does not exist*/
    set SY0DM001.SY2CLRID cursor, bold;
    set SY0DM001.XDMCD bold;
    exit stack;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
      SY0DM001.SYMSCMSG = "PRESS PA2 TO START A NEW TRANSACTION";
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0D   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY0DS30  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0DM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    else
      SY0DS35(); /* color table audit processing*/
      SY0DS40(); /* color table tag processing*/
      SY0DS-GET-SYREG(); /* corresponding region table mods*/
    end
  end


end // end SY0DS30

// color table audit processing
Function SY0DS35()


   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* *  and performs the add call to db2 for the       **/
   /* *  style/color table.*/
   /* ****************************************************/


  SYAREC.SYAUDTYP = "C";
  SYAREC.XXXTBLNM = "VCOLOR01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0D   ";
    TA1REC.TA1LOCAT[1] = "SY0DS35  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOLOR01 ";
    TA1REC.TA1MAP = "SY0DM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XGPCD = SY2REC.XGPCD;
  SYAREC.SY1STNBR = SY2REC.SY1STNBR;
  SYAREC.SY2CLRID = SY2REC.SY2CLRID;
  SYAREC.XDMCD = SY2REC.XDMCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  SYAREC.SYAAFT = SY2REC.SY2DATA;

  SYAREC.ZZZSDT = SY0DW01.SY0DWDTE;
  SYAREC.ZZZSTM = SY0DW01.SY0DWWTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0D   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0DS35  ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0DM001";
      TA1REC.TA1DBASE = "SYAREC";
      TA1REC.TA1TBLVU = "DPROD.VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0DS35

// color table tag processing
Function SY0DS40()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* ****************************************************/


  SY9REC.SY9TGTYP = "C";
  SY9REC.XGPCD = SY2REC.XGPCD;
  SY9REC.SY1STNBR = SY2REC.SY1STNBR;
  SY9REC.SY2CLRID = SY2REC.SY2CLRID;
  SY9REC.XDMCD = SY2REC.XDMCD;

  SY9REC.ZZZSDT = SY0DW01.SY0DWDTE;
  SY9REC.ZZZSTM = SY0DW01.SY0DWWTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0D   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "SY0DS40  ";
      TA1REC.TA1LOCAT[3] = "IO0520   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0DM001";
      TA1REC.TA1DBASE = "SY9REC";
      TA1REC.TA1TBLVU = "DPROD.VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0DS40

// VERIFY SEASON CODE
Function SY0DSBS()

       /* ******************************************/
       /* *  VERIFY SEASON CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/


  if (SY0DM001.XSECD in XSETBL.XSECD)
    if (XSETBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY0DM001.XSEDESC = XSETBL.XSEDESC[sysVar.arrayIndex];
    else
      SY0DM001.XSEDESC = XSETBL.XSEDESC[sysVar.arrayIndex];
      set SY0DM001.XSECD bold;
      converseLib.validationFailed(66); /* status code is inactive*/
    end
  else
    set SY0DM001.XSECD cursor, bold;
    SY0DM001.XSEDESC = "INVALID ";
    converseLib.validationFailed(3); /* invalid code*/
  end


end // end SY0DSBS

// VERIFY SEASON CODE
Function SY0DSCM()

       /* ******************************************/
       /* *  VERIFY SEASON CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  SY0DW01.SY0DW-XSN-SESN-YR = SY2REC.XSNYR;
  if (SY0DM001.XSECD == SY2REC.XSECD /* If Code the same*/
   && SY0DM001.XSNYR == SY0DW01.SY0DW-XSN-SESN-YR-YY)
    SY0DW01.SY0DW-SESN-CHG = "N";
    return; /* Don't mess with Offer Dates*/
  else
    SY0DW01.SY0DW-SESN-CHG = "Y";
  end

  if (SY0DM001.XSECD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY0DM001.XSECD cursor, bold;
    SY0DM001.XSEDESC = "INVALID";
    return;
  end

  if (SY0DM001.XSECD in XSETBL.XSECD)
    SY0DM001.XSEDESC = XSETBL.XSEDESC[sysVar.arrayIndex];
    if (XSETBL.XXXSTAT[sysVar.arrayIndex] == "I" /* staus is inactive*/
     && SY0DM001.XSECD != SY2REC.XSECD)          /* and user changed code*/
      set SY0DM001.XSECD cursor, bold;
      converseLib.validationFailed(33); /* status code is inactive*/
      return;
    end
  else
    set SY0DM001.XSECD cursor, bold;
    SY0DM001.XSEDESC = "INVALID ";
    converseLib.validationFailed(3); /* invalid code*/
    return;
  end

  if (XSETBL.XSESETYP[sysVar.arrayIndex] == " ") /* NO ENTRY IN XSN*/
  /*  */
  /* --------------- Y2K OUT BEGIN ------------*/
  /*  */
  /* MOVE 019991231 TO SY0DW01.SY2POFXD;*/
  /* MOVE 019991231 TO SY0DW01.SY2FOFXD;*/
  /* MOVE 019991231 TO SY0DW01.SY2NOFXD;*/
  /*  */
  /* --------------- Y2K OUT END --------------*/
  /*  */
  /*  */
  /* --------------- Y2K IN  BEGIN ------------*/
  /* Default date is changed from 19991231 to 20431231*/
    SY0DW01.SY2POFXD = 020431231;
    SY0DW01.SY2FOFXD = 020431231;
    SY0DW01.SY2NOFXD = 020431231;
  /*  */
  /* --------------- Y2K IN  END --------------*/
  /*  */
    return;
  end

  SY0DW01.XSE-SESN-CD = XSETBL.XSESETYP[sysVar.arrayIndex];
  SY0DW01.SY0DW-XSN-SESN-YR-YY = SY0DM001.XSNYR;
  if (SY0DW01.SY0DW-XSN-SESN-YR-YY > 70)
    SY0DW01.SY0DW-XSN-SESN-YR-CC = 19;
  else
    SY0DW01.SY0DW-XSN-SESN-YR-CC = 20;
  end
  if (SYWREC.XDR-PROD-REG-CD[1] == "02")
    SY0DW01.XDR-PROD-REG-CD = "02";
  else
    SY0DW01.XDR-PROD-REG-CD = "01";
  end

  SY0DS-GET-YSN();

  if (SY0DW01.SY0DW-FND-YSN == "Y")
    if (SY2REC.XGPCD == "02")
      SY0DW01.SY2POFXD = YSNTBL.XSN-SESN-XDT[SYWINDEX];
      SY0DW01.SY2FOFXD = YSNTBL.XSN-SESN-XDT[SYWINDEX];
    else
      SY0DW01.SY2POFXD = YSNTBL.XSN-SESN-XDT[SYWINDEX];

      SYWREC.SYW-FUTR-OFFER-XDT = YSNTBL.XSN-SESN-XDT[SYWINDEX];
      SYWREC.SYW-FUTR-OFFER-XDR = SY0DW01.XDR-PROD-REG-CD;
      XPSY010();
      SY0DW01.SY0DW-FUTR-OFFER-XDT = SYWREC.SYW-FUTR-OFFER-XDT;
      SY0DW01.SY2FOFXD = SYWREC.SYW-FUTR-OFFER-XDT;
    end
  else
    converseLib.validationFailed(130); /* Season not on YSN table*/
    set SY0DM001.XSECD cursor, bold;
    set SY0DM001.XSNYR bold;
    return;
  end

  if (SY0DM001.XGPCD == "03")
    SY0DW01.XDR-PROD-REG-CD = "03";
    if (SY0DW01.XSE-SESN-CD == "CL"
     || SY0DW01.XSE-SESN-CD == "LS")
      SY0DW01.XSE-SESN-CD = "SP";
    end
  else
    SY0DW01.XDR-PROD-REG-CD = "02";
  end

  SY0DS-GET-YSN();

  if (SY0DW01.SY0DW-FND-YSN == "Y")
    SY0DW01.SY2NOFXD = YSNTBL.XSN-SESN-XDT[SYWINDEX];
  else
    converseLib.validationFailed(130); /* Season not on YSN table*/
    set SY0DM001.XSECD cursor, bold;
    set SY0DM001.XSNYR bold;
  end

end // end SY0DSCM

// modify offering ending dates
Function SY0DSGA()

       /* ******************************************/
       /* *  modify offering ending dates         **/
       /* ******************************************/


  SY0DW01.SY0DW-XSN-SESN-YR = SY2REC.XSNYR;
  if (SY0DM001.XSECD == SY2REC.XSECD /* If Code the same*/
   && SY0DM001.XSNYR == SY0DW01.SY0DW-XSN-SESN-YR-YY)
    return; /* Don't mess with Offer Dates*/
  end

  if (SY0DW01.SY2POFXD > SY2REC.SY2POFXD)
    SY2REC.SY2POFXD = SY0DW01.SY2POFXD;
  end
  if (SY0DW01.SY2FOFXD > SY2REC.SY2FOFXD)
    SY2REC.SY2FOFXD = SY0DW01.SY2FOFXD;
  end
  if (SY0DW01.SY2NOFXD > SY2REC.SY2NOFXD)
    SY2REC.SY2NOFXD = SY0DW01.SY2NOFXD;
  end

end // end SY0DSGA

Record SY0DW01 type basicRecord
  5 SY0DWMEDT-MMDDYY SY0DWMEDT-MMDDYY ; 
    10 SY0DWMEDT-MMDD SY0DWMEDT-MMDD ; 
    10 SY0DWMEDT-YY SY0DWMEDT-YY ; 
  5 SY0DWEFF SY0DWEFF [4] ; 
  5 SY0DWCT1 SY0DWCT1 ; 
  5 SY0DWDTE SY0DWDTE ; 
  5 SY0DWZTM SY0DWZTM ; 
    10 SY0DWZHR SY0DWZHR ; 
    10 * char(1) ; 
    10 SY0DWZMN SY0DWZMN ; 
  5 SY0DWWTM SY0DWWTM ; 
    10 SY0DWWHR SY0DWWHR ; 
    10 SY0DWWMN SY0DWWMN ; 
  5 SY0DWEDT SY0DWEDT ; 
  5 SY0DWSED SY0DWSED ; 
  5 SY0DWSW1 SY0DWSW1 ; 
  5 SY0DWLCY SY0DWLCY ; 
  5 SY0DWGPC SY0DWGPC ; 
  5 SY0DW-MAX-XLC SY0DW-MAX-XLC ; 
  5 SY0DW-FUTR-OFFER-XDT SY0DW-FUTR-OFFER-XDT ; 
    10 SY0DW-FUTR-OFFER-YY SY0DW-FUTR-OFFER-YY ; 
    10 SY0DW-FUTR-OFFER-MM SY0DW-FUTR-OFFER-MM ; 
    10 SY0DW-FUTR-OFFER-DD SY0DW-FUTR-OFFER-DD ; 
  5 SY2POFXD SY2POFXD ; 
  5 SY2FOFXD SY2FOFXD ; 
  5 SY2NOFXD SY2NOFXD ; 
  5 SY0DW-SESN-CHG SY0DW-SESN-CHG ; 
  5 SY0DW-YSN-DATA SY0DW-YSN-DATA ; 
    10 SY0DW-FND-YSN SY0DW-FND-YSN ; 
    10 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
    10 XSE-SESN-CD XSE-SESN-CD ; 
    10 SY0DW-XSN-SESN-YR SY0DW-XSN-SESN-YR ; 
      15 SY0DW-XSN-SESN-YR-CC SY0DW-XSN-SESN-YR-CC ; 
      15 SY0DW-XSN-SESN-YR-YY SY0DW-XSN-SESN-YR-YY ; 
end // end SY0DW01

Record SY0DW02 type basicRecord
  10 SY0DW-REG-CNT SY0DW-REG-CNT ; 
  10 SY0DW-REG-DATA SY0DW-REG-DATA [10] ; 
    15 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
    15 XLC-LIFE-CYC-CD XLC-LIFE-CYC-CD ; 
    15 SY-LIFE-CYC-EDT SY-LIFE-CYC-EDT ; 
end // end SY0DW02

// Found YSN row (Y/N)
DataItem SY0DW-FND-YSN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY0DW-FUTR-OFFER-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY0DW-FUTR-OFFER-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work field for date recalc
DataItem SY0DW-FUTR-OFFER-XDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY0DW-FUTR-OFFER-YY num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Max. life cycles on VCOLOR
DataItem SY0DW-MAX-XLC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of Region Rows
DataItem SY0DW-REG-CNT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Region Data Group Item
DataItem SY0DW-REG-DATA char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Has user changed season (Y/N)
DataItem SY0DW-SESN-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSN_SESN_YR_RNG
DataItem SY0DW-XSN-SESN-YR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY0DW-XSN-SESN-YR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY0DW-XSN-SESN-YR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data for YSN table look-up
DataItem SY0DW-YSN-DATA char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work subscript
DataItem SY0DWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work current date
DataItem SY0DWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work effective date
DataItem SY0DWEDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// eff. dates save area
DataItem SY0DWEFF num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// save gpc area
DataItem SY0DWGPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save l/c area
DataItem SY0DWLCY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map date sy0dmedt-mm-dd-yy
DataItem SY0DWMEDT-MMDD num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map date sy0dmedt-mm-dd-yy
DataItem SY0DWMEDT-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map date sy0dmedt-mm-dd-yy
DataItem SY0DWMEDT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// effective date from db
DataItem SY0DWSED num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work switch
DataItem SY0DWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work recod hour
DataItem SY0DWWHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work recod minute
DataItem SY0DWWMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record time
DataItem SY0DWWTM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system hour
DataItem SY0DWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system minute
DataItem SY0DWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system time
DataItem SY0DWZTM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

