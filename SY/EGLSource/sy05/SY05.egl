package sy05;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import rd.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=SY05 ****
// 
//         product style/color/size inquriy application.
// 
// this is an inquiry application which access the style,color
// and size tables.
// if the user selects just a style then the style will be
// displayed and the color,size screens will be blank.
//  if the user selects the style/color/dim fields
// then each row from a  table will be displayed on
// the corresponding screen. (ex: style table on style screens)
// 
// the color menu mode will loop thru all the colors that
// were selected by the user. the color menu logic will work
// only work from the color screen.
// while in the color menu mode the user may view the style
// or size screens for that color. to continue with the next
// color the user must return to the color menu screen.
// 
// 
// ************************************************************
// maintenance:
// 
// project
// number    who       when        why
// ------   --------   --------    ----------------------------
//          jricha     06-26-86    created application
//          mbuhit     10-06-87    add prod-category to color.
//          mbuhit     11-25-87    add package flag  to color.
//          mbuhit     12-21-87    add second color/dim screen.
//          mbuhit     03-18-88    Change some fieldnames to
//                      correspond with revised sy2rec.
//          mbuhit     03-30-88    add 3 overlay matl ctnt flds
//  p090    mbuhit     01-13-89    change sy2sesny to xsnyr.
//  p090    mbuhit     02-01-89    add goal phase iv fields.
//  P0104   MHALST     03-28-89    Remove use of XTVCD.
//  P0100   MHALST     04-14-89    Add blank style number to
//                                 map M006.
//  -spl-   jwood      04-17-89    Added xssegtr logic
//  -spl-   jwood      04-17-89    Added noncsp option to calls
//          MHALST     07-01-89    Add map M007 for display of
//                                 UPC data by size
//  P107    MHALST     08-30-89    Add matl content %'s
//          MHALST     11-13-89    DB2 Changes
//  P0124   MHALST     11-22-89    Add duty rate and add on
//                                 amount to SY05M002
//          MHALST     02-05-90    Add collections code and fix
//                                 units per case display.
//          MHALST     04-02-90    Add brand code
//          MHALST     07-03-90    Correct defaulting on map 7
//          MHALST     07-27-90    Change edit for XCL codes
//          MHALST     10-05-90    DB2 Changes
//          MHALST     01-11-91    DB2 Changes
//          MHALST     04-15-91    Enhance code to accept label
//                                 counts and submit UPC label
//                                 print job to print labels on
//                                 zebra printers.
//          MHALST     06-10-91    DB2 Changes, change matl.
//                                 content lower to outsole &
//                                 midsole primary & secondary
//          MHALST     06-25-91    Change order of XCL codes.
//          MHALST     01-29-92    Add new value for finished
//                                 goods flag.
//          MHALST     03-09-92    Remove SY2PRDES
//  PF180   MHALST     03-31-92    Add function to inquiry by
//                                 style development number.
//          MHALST     04-13-92    Enhanse above to display
//                                 variable selection line.
//          MHALST     08-19-92    Fix Style & Color names
//          MHALST     10-12-92    DB Changes - XDR & AIRBAGS
//          MHALST     10-06-93    Add XGP to look-up of XPL
//          MHALST     11-13-95    Change to VSYDVX02
//          MHALST     06-11-97    Change to new tooling tbls
//          MHALST     01-08-98    Add msg if UPC's in history
//          MHALST     04-09-98    Add msg colors exceed 200
//          JNARAS     12-16-98    Expand the year  (XSNYR)
//                          field  the map SY05M004,SY05M006
//          JKENNE     01-19-99    Add Sugg Rtl field to map007
//                                 for requesting UPC label
//                                 with Suggested Retail Price
//          MHALST     06-08-00    Expand color tble to 600
//          BPARAN     08-30-00    Pop-up window for selecting
//                                 price, added the following
//                                 process , statement groups
//                                 and working storages
//                                 to accomplish the Pop-up
//                                 window procedure
//                                 SY05S-POPUPS
//                                 SY05300 (Popup Converse)
//                                 SY05310
//                                 SY05320
//                                 SY05SKC
//                                 SY05W03
//                                 SY05W04
//          MHALST     10-19-01    Remove zero suppression
//          MHALST     08-26-04    GTIN changes. Expand 12
//  digit UPC into
//                              14 digit GTIN number.
// ************************************************************
// 
//   io modules      table
//   used            view name
//   ----------      ----------------
//   IO0040          DPROD.VSCALE01
//   IO0120          DPROD.VSTYLE01
//   IO0130          DPROD.VCOLOR01
//   IO0140          DPROD.VSIZE001
//   SY1280          DPROD.VSYUPC01
//   IO0490          DPRODG.VSYDVX01
// 
// 
// 
// *********************
Program SY05 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  SY05W01 SY05W01; // record
  SY05W02 SY05W02; // record
  SY05W03 SY05W03; // record
  SY05W04 SY05W04; // record
  SY05WCOL SY05WCOL; // record
  SY05WREC SY05WREC; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY3REC SY3REC; // record
  SY4REC SY4REC; // record
  SY5REC SY5REC; // record
  SYBREC SYBREC; // record
  SYDREC SYDREC; // record
  SYEREC SYEREC; // record
  SYUREC SYUREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  VSYDVX02 VSYDVX02; // record
  VTLCMP01 VTLCMP01; // record
  VTLINV01 VTLINV01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SY05T01 {deleteAfterUse = yes}; // table
  use SY05T02 {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XGATBL {deleteAfterUse = yes}; // table
  use XGCTBL {deleteAfterUse = yes}; // table
  use XCWTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use XFMTBL {deleteAfterUse = yes}; // table
  use XBTTBL {deleteAfterUse = yes}; // table
  use XSPTBL {deleteAfterUse = yes}; // table
  use XSUTBL {deleteAfterUse = yes}; // table
  use XRYTBL {deleteAfterUse = yes}; // table
  use XBCTBL {deleteAfterUse = yes}; // table
  use XCNTBL {deleteAfterUse = yes}; // table
  use XQTTBL {deleteAfterUse = yes}; // table
  use XQATBL {deleteAfterUse = yes}; // table
  use XFCTBL {deleteAfterUse = yes}; // table
  use XMLTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XDVTBL {deleteAfterUse = yes}; // table
  use XPRTBL {deleteAfterUse = yes}; // table
  use XPLTBL {deleteAfterUse = yes}; // table
  use XCLTBL {deleteAfterUse = yes}; // table
  use XOGTBL {deleteAfterUse = yes}; // table
  use XMCTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use YCQTBL {deleteAfterUse = yes}; // table
  use SY05M.SY05M001,  // forms
      SY05M.SY05M002, 
      SY05M.SY05M003, 
      SY05M.SY05M004, 
      SY05M.SY05M005, 
      SY05M.SY05M006, 
      SY05M.SY05M007, 
      SY05M.SY05M008, 
      SY05M.SY05M009, 
      SY05M.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY05001: SY05001();


    if (SYWREC.SYWPFOPT == "PF13 ")
      goto SY05005; /* style screen 1*/
    else
      if (SYWREC.SYWPFOPT == "PF14 ")
        goto SY05010; /* style screen 2*/
      else
        if (SYWREC.SYWPFOPT == "PF15 ")
          goto SY05015; /* go to color menu*/
        else
          if (SYWREC.SYWPFOPT == "PF16 ")
            goto SY05030; /* go to color screen 1*/
          else
            if (SYWREC.SYWPFOPT == "PF17 ")
              goto SY05040; /* go to color screen 2*/
            else
              if (SYWREC.SYWPFOPT == "PF18 ")
                goto SY05035; /* go to size screen*/
              else
                goto SY05005;
              end
            end
          end
        end
      end
    end




    SY05005: SY05005();


    if (converseVar.validationMsgNum > 0)
      goto SY05005;
    else
      if (converseVar.eventKey is pf14)
        SYWREC.SYWPFOPT = "PF14 ";
        goto SY05010;
      else
        if (converseVar.eventKey is pf15)
          SYWREC.SYWPFOPT = "PF15 ";
          goto SY05015;
        else
          if (converseVar.eventKey is pf16)
            SYWREC.SYWPFOPT = "PF16 ";
            goto SY05030;
          else
            if (converseVar.eventKey is pf17)
              SYWREC.SYWPFOPT = "PF17 ";
              goto SY05040;
            else
              if (converseVar.eventKey is pf18)
                SYWREC.SYWPFOPT = "PF18 ";
                goto SY05035;
              else
                if (converseVar.eventKey is enter)
                  goto SY05005;
                else
                  converseLib.validationFailed(19);
                  goto SY05005;
                end
              end
            end
          end
        end
      end
    end


    SY05010: SY05010();


    if (converseVar.validationMsgNum > 0)
      goto SY05010;
    else
      if (converseVar.eventKey is pf13)
        SYWREC.SYWPFOPT = "PF13 ";
        goto SY05005;
      else
        if (converseVar.eventKey is pf15)
          SYWREC.SYWPFOPT = "PF15 ";
          goto SY05015;
        else
          if (converseVar.eventKey is pf16)
            SYWREC.SYWPFOPT = "PF16 ";
            goto SY05030;
          else
            if (converseVar.eventKey is pf17)
              SYWREC.SYWPFOPT = "PF17 ";
              goto SY05040;
            else
              if (converseVar.eventKey is pf18)
                SYWREC.SYWPFOPT = "PF18 ";
                goto SY05035;
              else
                if (converseVar.eventKey is enter)
                  goto SY05010;
                else
                  converseLib.validationFailed(19);
                  goto SY05010;
                end
              end
            end
          end
        end
      end
    end




    SY05015: SY05015();


    if (converseVar.eventKey is pa2)
      goto SY05015;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY05015;
      else
        if (converseVar.eventKey is pf13)
          SYWREC.SYWPFOPT = "PF13 ";
          goto SY05005;
        else
          if (converseVar.eventKey is pf14)
            SYWREC.SYWPFOPT = "PF14 ";
            goto SY05010;
          else
            if (converseVar.eventKey is pf16)
              SYWREC.SYWPFOPT = "PF16 ";
              goto SY05030;
            else
              if (converseVar.eventKey is pf17)
                SYWREC.SYWPFOPT = "PF17 ";
                goto SY05040;
              else
                if (converseVar.eventKey is pf18)
                  SYWREC.SYWPFOPT = "PF18 ";
                  goto SY05035;
                else
                  if (converseVar.eventKey is enter)
                    goto SY05020;
                  else
                    converseLib.validationFailed(19);
                    goto SY05015;
                  end
                end
              end
            end
          end
        end
      end
    end




    SY05020: SY05020();


    if (converseVar.eventKey is pa2)
      goto SY05015;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY05020;
      else
        if (converseVar.eventKey is pf7
         || converseVar.eventKey is pf8)
          goto SY05020;
        else
          if (converseVar.eventKey is pf13)
            SYWREC.SYWPFOPT = "PF13 ";
            goto SY05005;
          else
            if (converseVar.eventKey is pf14)
              SYWREC.SYWPFOPT = "PF14 ";
              goto SY05010;
            else
              if (converseVar.eventKey is pf16)
                SYWREC.SYWPFOPT = "PF16 ";
                goto SY05030;
              else
                if (converseVar.eventKey is pf17)
                  SYWREC.SYWPFOPT = "PF17 ";
                  goto SY05040;
                else
                  if (converseVar.eventKey is pf18)
                    SYWREC.SYWPFOPT = "PF18 ";
                    goto SY05035;
                  else
                    if (converseVar.eventKey is enter)
                      goto SY05025;
                    else
                      converseLib.validationFailed(19);
                      goto SY05020;
                    end
                  end
                end
              end
            end
          end
        end
      end
    end




    SY05025: SY05025();


    if (converseVar.eventKey is pa2)
      goto SY05001;
    else
      if (converseVar.validationMsgNum > 0)
        goto SY05015;
      else
        if (converseVar.eventKey is enter)
          goto SY05030;
        else
          converseLib.validationFailed(19);
          goto SY05020;
        end
      end
    end




    SY05030: SY05030();


    if (converseVar.validationMsgNum > 0)
      goto SY05030;
    else
      if (converseVar.eventKey is pf3
       && SY05WREC.SY05WMEN == "Y")
        goto SY05020;
      else
        if (SY05WREC.SY05WMEN == "Y"
         && converseVar.eventKey is enter)
          goto SY05040;
        else
          if (converseVar.eventKey is pf13)
            SYWREC.SYWPFOPT = "PF13 ";
            goto SY05005;
          else
            if (converseVar.eventKey is pf14)
              SYWREC.SYWPFOPT = "PF14 ";
              goto SY05010;
            else
              if (converseVar.eventKey is pf15)
                SYWREC.SYWPFOPT = "PF15 ";
                goto SY05015;
              else
                if (converseVar.eventKey is pf17)
                  SYWREC.SYWPFOPT = "PF17 ";
                  goto SY05040;
                else
                  if (converseVar.eventKey is pf18)
                    SYWREC.SYWPFOPT = "PF18 ";
                    goto SY05035;
                  else
                    if (converseVar.eventKey is enter)
                      goto SY05030;
                    else
                      converseLib.validationFailed(19);
                      goto SY05030;
                    end
                  end
                end
              end
            end
          end
        end
      end
    end


    SY05035: SY05035();


    if (converseVar.validationMsgNum > 0)
      goto SY05035;
    end
    if (converseVar.eventKey is pf13)
      SYWREC.SYWPFOPT = "PF13 ";
      goto SY05005;
    end
    if (converseVar.eventKey is pf14)
      SYWREC.SYWPFOPT = "PF14 ";
      goto SY05010;
    end
    if (converseVar.eventKey is pf15)
      SYWREC.SYWPFOPT = "PF15 ";
      goto SY05015;
    end
    if (converseVar.eventKey is pf16)
      SYWREC.SYWPFOPT = "PF16 ";
      goto SY05030;
    end
    if (converseVar.eventKey is pf17)
      SYWREC.SYWPFOPT = "PF17 ";
      goto SY05040;
    end
    if (converseVar.eventKey is pf18)
      SYWREC.SYWPFOPT = "PF18 ";
      goto SY05045;
    end
    if (converseVar.eventKey is enter)
      if (SY05M005.SY05MUPF == "Y")
        goto SY05045;
      else
        goto SY05035;
      end
    end

    converseLib.validationFailed(19);
    goto SY05035;


    SY05040: SY05040();
    if (converseVar.validationMsgNum > 0)
      goto SY05040;
    else
      if (converseVar.eventKey is pf3
       && SY05WREC.SY05WMEN == "Y")
        goto SY05020;
      else
        if (SY05WREC.SY05WMEN == "Y"
         && converseVar.eventKey is enter)
          SY05WCOL.SY05WSEL[SY05WCDX] = " ";
          goto SY05025;
        else
          if (converseVar.eventKey is pf13)
            SYWREC.SYWPFOPT = "PF13 ";
            goto SY05005;
          else
            if (converseVar.eventKey is pf14)
              SYWREC.SYWPFOPT = "PF14 ";
              goto SY05010;
            else
              if (converseVar.eventKey is pf15)
                SYWREC.SYWPFOPT = "PF15 ";
                goto SY05015;
              else
                if (converseVar.eventKey is pf16)
                  SYWREC.SYWPFOPT = "PF16 ";
                  goto SY05030;
                else
                  if (converseVar.eventKey is pf18)
                    SYWREC.SYWPFOPT = "PF18 ";
                    goto SY05035;
                  else
                    if (converseVar.eventKey is enter)
                      goto SY05040;
                    else
                      converseLib.validationFailed(19);
                      goto SY05040;
                    end
                  end
                end
              end
            end
          end
        end
      end
    end


    SY05045: SY05045();

    if (converseVar.validationMsgNum > 0)
      goto SY05045;
    end
    if (converseVar.eventKey is pf13)
      SYWREC.SYWPFOPT = "PF13 ";
      goto SY05005;
    end
    if (converseVar.eventKey is pf14)
      SYWREC.SYWPFOPT = "PF14 ";
      goto SY05010;
    end
    if (converseVar.eventKey is pf15)
      SYWREC.SYWPFOPT = "PF15 ";
      goto SY05015;
    end
    if (converseVar.eventKey is pf16)
      SYWREC.SYWPFOPT = "PF16 ";
      goto SY05030;
    end
    if (converseVar.eventKey is pf17)
      SYWREC.SYWPFOPT = "PF17 ";
      goto SY05040;
    end
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf19
     || converseVar.eventKey is pa2)
      goto SY05045;
    end

    converseLib.validationFailed(19);
    goto SY05045;

  end // end main
end // end SY05

// init. application
Function SY05001()



       /* *****************************************/
       /* * 1. init. application.                **/
       /* * 2. set all rec & maps to empty       **/
       /* *    and clear.                        **/
       /* * 3. if the commarea.xgpcd is diff.    **/
       /* *    than the sywrec.xgpcd use the     **/
       /* *    sywrec.xgpcd because the user     **/
       /* *    must have transfered into this    **/
       /* *    application with the sywrec.xgpcd **/
       /* * 4. validate the gpc code.            **/
       /* *                                      **/
       /* *                                      **/
       /* *****************************************/

  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/
  set SYWREC empty;
  set SY05WCOL empty;
  set SY05WREC empty;
  set SY05W01 empty;
  set SY05W02 empty;
  set SYUREC empty;

  set SY1REC empty;
  set SY2REC empty;
  SY2REC.XDMCD = "00"; /* set default dim to 00*/
  set SY4REC empty;
  set SY3REC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA6REC empty;
  TA6REC.TA6SUBSW = "Y";
  TA6REC.TA6MSGSW = "N";
  TA6REC.XURCOPY = 1;

  set SY05M001 initial;
  set SY05M002 initial;
  set SY05M003 initial;
  set SY05M004 initial;
  set SY05M005 initial;
  set SY05M006 initial;
  set SY05M007 initial;

  SYWREC.SYWMSGFL = "N";
  SY05WREC.SY05WMEN = "N"; /* set menu color flag off*/

  SYWREC.SYWTRANF = COMMAREA.CAUSERA;

  if (SYWREC.XGPCD == " ")
    SY05WREC.XGPCD = COMMAREA.XGPCD;
  else
    if (SYWREC.XGPCD == COMMAREA.XGPCD)
      SY05WREC.XGPCD = COMMAREA.XGPCD;
    else
      SY05WREC.XGPCD = SYWREC.XGPCD;
    end
  end


  SY05SAA(); /* get valid gpc code*/

       /* *** get todays date*/
  TA2REC.TA2DTOPT = "GETDATE";

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05001";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC) {isExternal = yes};
    converseLib.validationFailed(30); /* invalid date entered*/
    exit stack;
  else
    /* next sentence*/
  end

  SYWREC.SYWTODAY = TA2REC.TA2GRGGN;


end // end SY05001

// display style 1 inq. screen
Function SY05005()


       /* ***************************************/
       /* *  1. display screen sy05m001 and    **/
       /* *  let user enter style key info.    **/
       /* *                                    **/
       /* *  2. the process will retrieve      **/
       /* *     all code descs.                **/
       /* *                                    **/
       /* ***************************************/

  SY05M001.SYMTTLNM = " PRODUCT STYLE INQUIRY - 1 OF 2";
  SY05M001.SYMPRONM = "SY05001";
  SY05M001.SYMREV = "05"; /* program revision number!!!!!!*/
  SY05M001.SYMCURDT = VGVar.currentShortGregorianDate;

  if (converseVar.validationMsgNum > 0)
     /* AND SYWREC.SYWMSGFL EQ 'N';*/
    /* next sentence*/
  else
    set SY05M001.SY1STNBR cursor;
    SY05M001.XDMCD = SY2REC.XDMCD;
    if (SY05WREC.SY05WMEN == "Y")
      SY05M001.SYMSCMSG = "  COLOR SELECT FUNCTION ON    ";
    else
      /* next sentence*/
    end
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M001 ;
   /* ***********************************************************/

  SY05M001.SYMSCMSG = " ";

  SY05SBX(); /* check pf keys*/

  if (converseVar.eventKey is enter)
    SY05WREC.SY05WMEN = "N";
    SY05SBB(); /* check for required screen fields*/
    SY05SBA(); /* check if screen key data has changed.*/
  else
    /* next sentence*/
  end




end // end SY05005

// display style 2 inq. screen
Function SY05010()

       /* ***************************************/
       /* *  1. display screen sy05m001 and    **/
       /* *  let user enter style key info.    **/
       /* *                                    **/
       /* *  2. the process will retrieve      **/
       /* *     all code descs.                **/
       /* *                                    **/
       /* ***************************************/

  SY05M002.SYMTTLNM = " PRODUCT STYLE INQUIRY - 2 OF 2";
  SY05M002.SYMPRONM = "SY05002";
  SY05M002.SYMREV = "05"; /* program revision number!!!!!!!*/
  SY05M002.SYMCURDT = VGVar.currentShortGregorianDate;

  if (converseVar.validationMsgNum > 0)
     /* AND SYWREC.SYWMSGFL EQ 'N';*/
    /* next sentence*/
  else
    set SY05M002.SY1STNBR cursor;
    SY05M002.XDMCD = SY2REC.XDMCD;
    if (SY05WREC.SY05WMEN == "Y")
      SY05M002.SYMSCMSG = "  COLOR SELECT FUNCTION ON     ";
    else
      /* next sentence*/
    end
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M002 ;
   /* ***********************************************************/

  SY05SCX(); /* check pf keys*/

  SY05M002.SYMSCMSG = " ";

  if (converseVar.eventKey is enter)
    SY05WREC.SY05WMEN = "N";
    SY05SCB(); /* check for required screen fields*/
    SY05SCA(); /* check if screen key data has changed.*/
  else
    /* next sentence*/
  end




end // end SY05010

// display color menu screen
Function SY05015()

       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/

  if (converseVar.validationMsgNum > 0)
     /* AND SYWREC.SYWMSGFL EQ 'N';*/
    /* next sentence*/
  else
    SY05WREC.SY2CLRID = " ";
    SY05SBW(); /* set all screens clear*/
    set SY05M003.SY1STNBR cursor;
  end

  SY05M003.SYMPRONM = "SY05015";
  SY05M003.SYMREV = "06"; /* program revision number!!!!!*/
  SY05M003.SYMCURDT = VGVar.currentShortGregorianDate;

  SY05WCOL.SY05W-HEAD-A = "SEL      COLOR            DIMENSION";
  SY05WCOL.SY05W-HEAD-B = "   LIFE CYCLE                     ";
  SY05M003.SY05M-HEADING[1] = SY05WCOL.SY05M-HEADING;
  SY05WCOL.SY05W-HEAD-A = "~~~   ~~~~~~~~~~~~~~~~~   ~~~~~~~~~";
  SY05WCOL.SY05W-HEAD-B = "   ~~~~~~~~~~~                    ";
  SY05M003.SY05M-HEADING[2] = SY05WCOL.SY05M-HEADING;

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M003 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N";
  SY05WCOL.SY05MXLC = SY05M003.SY05MXLC;
  SY05SDA(); /* check pf keys*/


  SY05SDB(); /* validate required screen fields*/


       /* ***************************************/
       /* *   select all the colors and build  **/
       /* *  working storage section for color.**/
       /* ***************************************/

  if (SY05M003.SY1STNBR != " ") /* Build using Style Number*/
    SY05WREC.PG4STNBR = " ";
    SY05SDD();
  else
    SY05WREC.PG4STNBR = SY05M003.PG4STNBR;
    SY05SDO(); /* Build using Dev. Code*/
  end

       /* ***************************************/
       /* *   build the color select screen    **/
       /* ***************************************/

  SY05SDE();




  if (SY05WCOL.SY05WCCT > 0)
    SY05WCOL.SY05WMS8 = "          **  ";
    SY05WCOL.SY05WMS2 = " COLORS SELECTED ";
    SY05WCOL.SY05WMS7 = "AFTER SELECTION, PRESS \"ENTER\" ";
    SY05WCOL.SY05WMS1 = SY05WCOL.SY05WCCT;
    SY05M003.SYMSCMSG = SY05WCOL.SY05WMSG;
    converseLib.validationFailed(71);
    SYWREC.SYWMSGFL = "Y";
  else
    SY05WCOL.SY05WMS8 = "          **  ";
    SY05WCOL.SY05WMS2 = " COLORS SELECTED ";
    SY05WCOL.SY05WMS7 = " ";
    SY05WCOL.SY05WMS1 = SY05WCOL.SY05WCCT;
    SY05M003.SYMSCMSG = SY05WCOL.SY05WMSG;
    converseLib.validationFailed(32);
  end



end // end SY05015

// display retrieved color menu
Function SY05020()

       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/

  SY05M003.SYMPRONM = "SY05020";
  SY05M003.SYMREV = "06"; /* program revision number!!!!!!*/
  SY05M003.SYMCURDT = VGVar.currentShortGregorianDate;

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY05M003.SY05MSEL[1] cursor;
    set SY05M003.SY1STNBR skip;
    set SY05M003.XGPCD skip;
    set SY05M003.SY05MXLC skip;
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M003 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N";
  SY05M003.SYMSCMSG = " ";
  SY05WREC.SY1STNBR = SY05M003.SY1STNBR;
  SY05WREC.XGPCD = SY05M003.XGPCD;

       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY05SEA();

       /* ***************************************/
       /* *  if ezeaid = pf7 scroll backward   **/
       /* *                                    **/
       /* ***************************************/

  if (converseVar.eventKey is pf7)
    SY05SEB();
  else
    /* next sentence*/
  end


       /* ***************************************/
       /* *  if ezeaid = pf8 scroll forward    **/
       /* *                                    **/
       /* ***************************************/

  if (converseVar.eventKey is pf8)
    SY05SEC();
  else
    /* next sentence*/
  end

       /* ***************************************/
       /* *  if ezeaid = enter check screen    **/
       /* *  and continue.                     **/
       /* ***************************************/


  if (converseVar.eventKey is enter)
    SY05SED();
    SY05WCOL.SY05WUPD = 0; /* set total colors updated to zero*/
    SY05WCOL.SY05WCDX = 1;
    SY05WREC.SY05WMEN = "Y"; /* sets the color menu flag to on.*/
  else
    /* next sentence*/
  end

end // end SY05020

// retrieve selected colors
Function SY05025()


       /* ***************************************/
       /* *  1. use the selected colors from   **/
       /* *  working storage to retrieve the   **/
       /* *  next color id from the color      **/
       /* *  table.                            **/
       /* *                                    **/
       /* *  2. the process will validate      **/
       /* *     and retrieve all code descs.   **/
       /* *                                    **/
       /* ***************************************/

  SYWREC.SYWMSGFL = "N";

  if (SY05WCOL.SY05WSEL[1] == "A")
    SY05SFA(); /* process all color records*/
  else
    SY05SFB(); /* process only select color records*/
  end

  set SY05M004 initial;
  set SY05M006 initial;
  SY05M004.XGPCD = SYWREC.XGPCD;
  SY05M006.XGPCD = SYWREC.XGPCD;
  SY05M004.XGPABRV = SYWREC.XGPABRV;
  SY05M006.XGPABRV = SYWREC.XGPABRV;


       /* ***************************************/
       /* * get color id row  for              **/
       /* * sy05m004 & sy05m006                **/
       /* ***************************************/

  SY05SBC();

  SYWMSGFL = "Y";




end // end SY05025

// display color inq. 1 screen
Function SY05030()

       /* ***************************************/
       /* *  1. display screen sy05m004 and    **/
       /* *  let user enter xgpcd, style number**/
       /* *  color id and dimension codes.     **/
       /* *                                    **/
       /* *  2. the process will validate      **/
       /* *     and retrieve all code descs.   **/
       /* *                                    **/
       /* ***************************************/


  if (SY05WREC.SY05WMEN == "Y") /* color menu flag is on*/
    SY05M004.SYMTTLNM = "PRODUCT MULTIPLE COLOR/DIM INQ - 1 0F 2";
    SY05M004.SYMSCMSG = "  COLOR SELECT FUNCTION ON     ";
  else
    SY05M004.SYMTTLNM = "PRODUCT COLOR/DIMENSION INQ - 1 OF 2";
  end
  SY05M004.SYMPRONM = "SY05004";
  SY05M004.SYMCURDT = VGVar.currentShortGregorianDate;
  SY05M004.SYMREV = "05"; /* program revision number*/

  if (SY05M004.XGPCD == "02") /* change xcl order*/
    SY05M004.SY05MCP1 = "     LOGO:";
    SY05M004.SY05MCP2 = "SECONDARY:";
    SY05M004.SY05MCP3 = " TERTIARY:";
  else
    SY05M004.SY05MCP1 = "SECONDARY:";
    SY05M004.SY05MCP2 = " TERTIARY:";
    SY05M004.SY05MCP3 = "     LOGO:";
  end

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY05M004.SY1STNBR cursor;
    SY05M004.XDMCD = SY2REC.XDMCD;
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M004 ;
   /* ***********************************************************/

  SY05SGX(); /* check pf keys*/

  SY05M004.SYMSCMSG = " ";

  if (SY05WREC.SY05WMEN == "Y" /* color menu flag is on*/
   && converseVar.eventKey is enter)
    if (SY05M004.XGPCD != SY05WREC.XGPCD
     || SY05M004.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M004.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M004.XDMCD != SY05WREC.XDMCD)
      /* next sentence*/
    else
      exit stack;
    end
  else
    if (SY05WREC.SY05WMEN == "Y" /* color menu flag is on*/
     && converseVar.eventKey is pf3)
      if (SY05WCOL.SY05WSEL[1] == "A")
        SY05WCOL.SY05WSEL[1] = " ";
      else
        /* next sentence*/
      end
      SY05SDE();
      exit stack;
    else
      /* next sentence*/
    end
  end


  if (converseVar.eventKey is enter)
    SY05WREC.SY05WMEN = "N"; /* sets color menu flag off*/
    SY05SGB(); /* check for required screen fields*/
    SY05SGA(); /* check if screen key data has changed.*/
  else
    /* next sentence*/
  end



end // end SY05030

// display size inq. screen
Function SY05035()

       /* ***************************************/
       /* *  1. display screen sy03m001 and    **/
       /* *  let user enter xgpcd, style number**/
       /* *  color id and dimension codes.     **/
       /* *                                    **/
       /* *  2. the user can transfer to       **/
       /* *     any application from this      **/
       /* *     screen.                        **/
       /* *                                    **/
       /* *                                    **/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/


  SY05M005.SYMTTLNM = " PRODUCT SIZE - INQ ";
  SY05M005.SYMPRONM = "SY05035";
  SY05M005.SYMCURDT = VGVar.currentShortGregorianDate;
  SY05M005.SYMREV = "05"; /* program revision number!!!!*/


  SY05SHA(); /* set screen fields to protect.*/

  if (SY2REC.SY2UPCFL != "N") /* we have upc data*/
    SY05M005.SY05MUPF = "N";
    SY05W01.SY05WBLD = "Y";
    set SY05M005.SY05MUPP initialAttributes;
    set SY05M005.SY05MUPF initialAttributes;
  else /* no upc data, set fields dark autoskip*/
    SY05M005.SY05MUPF = "N";
    set SY05M005.SY05MUPP skip, invisible;
    set SY05M005.SY05MUPF skip, invisible;
  end

  if (converseVar.validationMsgNum > 0)
     /* AND SYWREC.SYWMSGFL EQ 'N';*/
    /* next sentence*/
  else
    set SY05M005.SY1STNBR cursor;
    SY05M005.XDMCD = SY2REC.XDMCD;
    if (SY05WREC.SY05WMEN == "Y")
      SY05M005.SYMSCMSG = "  COLOR SELECT FUNCTION ON     ";
    else
      /* next sentence*/
    end
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M005 ;
   /* ***********************************************************/

  SY05M005.SYMSCMSG = " ";

  SY05SHX(); /* check pf keys*/

  if (converseVar.eventKey is enter)
    SY05WREC.SY05WMEN = "N";
    SY05SHB(); /* check for required screen fields*/
    SY05SHC(); /* check if screen key data has changed.*/
  else
    /* next sentence*/
  end




end // end SY05035

// display color inq. 2 screen
Function SY05040()

       /* ***************************************/
       /* *  1. display screen sy05m006 and    **/
       /* *  let user enter xgpcd, style number**/
       /* *  color id and dimension codes.     **/
       /* *                                    **/
       /* *  2. the process will validate      **/
       /* *     and retrieve all code descs.   **/
       /* *                                    **/
       /* ***************************************/


  if (SY05WREC.SY05WMEN == "Y") /* color menu flag is on*/
    SY05M006.SYMTTLNM = "PRODUCT MULTIPLE COLOR/DIM INQ - 2 OF 2";
    SY05M006.SYMSCMSG = "  COLOR SELECT FUNCTION ON     ";
  else
    SY05M006.SYMTTLNM = "PRODUCT COLOR/DIMENSION INQ - 2 OF 2";
  end
  SY05M006.SYMPRONM = "SY05006";
  SY05M006.SYMCURDT = VGVar.currentShortGregorianDate;

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY05M006.SY1STNBR cursor;
    SY05M006.XDMCD = SY2REC.XDMCD;
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M006 ;
   /* ***********************************************************/

  SY05SJX(); /* check pf keys*/

  SY05M006.SYMSCMSG = " ";

  if (SY05WREC.SY05WMEN == "Y" /* color menu flag is on*/
   && converseVar.eventKey is enter)
    if (SY05M006.XGPCD != SY05WREC.XGPCD
     || SY05M006.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M006.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M006.XDMCD != SY05WREC.XDMCD)
      /* next sentence*/
    else
      exit stack;
    end
  else
    if (SY05WREC.SY05WMEN == "Y" /* color menu flag is on*/
     && converseVar.eventKey is pf3)
      if (SY05WCOL.SY05WSEL[1] == "A")
        SY05WCOL.SY05WSEL[1] = " ";
      else
        /* next sentence*/
      end
      SY05SDE();
      exit stack;
    else
      /* next sentence*/
    end
  end


  if (converseVar.eventKey is enter)
    SY05WREC.SY05WMEN = "N"; /* sets color menu flag off*/
    SY05SJB(); /* check for required screen fields*/
    SY05SJA(); /* check if screen key data has changed.*/
  else
    /* next sentence*/
  end



end // end SY05040

// display UPC for sizes screen
Function SY05045()

  SY05M007.SYMTTLNM = " PRODUCT SIZE - UPC INQ ";
  SY05M007.SYMPRONM = "SY05045";
  SY05M007.SYMCURDT = VGVar.currentShortGregorianDate;
  SY05M007.SYMREV = "05"; /* program revision number!!!!*/
  if (SY05M007.XDMCD == " ") /* demension is blank*/
    SY05M007.XDMCD = "00"; /* default to 00*/
  end
  if (SY05M007.XQACD == " ") /* quality is blank*/
    SY05M007.XQACD = "01"; /* default to 01*/
  end
  /* IF SYWREC.SYWPFOPT EQ 'PF18 '*/
  if (SY05M007.SUGGREQ == " ") /* sugg retail prnt request is blank*/
    SY05M007.SUGGREQ = "N"; /* default to n*/
  end
  if (SY05M007.COOREQ == " ") /* Country of origin request is blank*/
    SY05M007.COOREQ = "N"; /* default to n*/
  end

  if (SY05M007.SETREQ == " ") /* SET request is blank*/
    SY05M007.SETREQ = "N"; /* default to n*/
  end

  SY05W01.SY05WSX = 1; /* set index*/
  if (COMMAREA.CAILVL[1] == "Y") /* user can submit label jobs*/
    set SY05M007.SY05MLP1 initialAttributes;
    set SY05M007.SY05MLP2 initialAttributes;
    set SY05M007.SUGGREQ initialAttributes;
    set SY05M007.SUGGHDR initialAttributes;
    set SY05M007.COOREQ initialAttributes;
    set SY05M007.COOHDR initialAttributes;
    set SY05M007.SETREQ initialAttributes;
    set SY05M007.SETHDR initialAttributes;

    while (SY05W01.SY05WSX <= 20)
      set SY05M007.SY05MLBQ[SY05WSX] initialAttributes;
      SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
    end
  else /* user cannot submit, protect fields*/
    set SY05M007.SY05MLP1 skip, invisible;
    set SY05M007.SY05MLP2 skip, invisible;
    set SY05M007.SUGGREQ skip, invisible;
    set SY05M007.SUGGHDR skip, invisible;
    set SY05M007.COOREQ skip, invisible;
    set SY05M007.COOHDR skip, invisible;
    set SY05M007.SETREQ skip, invisible;
    set SY05M007.SETHDR skip, invisible;
    while (SY05W01.SY05WSX <= 20)
      set SY05M007.SY05MLBQ[SY05WSX] skip, invisible;
      SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
    end
  end

  SY05W01.SY05LBFL = "N";
  SY05W01.SY05WSX = 1; /* set screen index to 1*/
  while (SY05W01.SY05WSX <= 20)
    if (SY05M007.SY05MLBQ[SY05WSX] != 0
     && SY05M007.SUGGREQ not modified)
      SY05W01.SY05LBFL = "Y";
      SY05W01.SY05WSX = 20;
    end
    SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
  end
  if (SY05M007.SUGGREQ == "Y"
   && converseVar.eventKey is enter
   && converseVar.validationMsgNum == 0
   && SY05W01.SY05LBFL == "N"
   && SY05M007.SYMSCMSG == " ")
    SY05W01.SY05DATE = VGVar.currentGregorianDate;
    SY05W01.SY05SUGG = 0; /* Inititialize Price to Zero*/
    SY05SKA-PRICE(); /* Get the Price*/
    if (SY05W01.SY05LVL != "NONE ") /* No Price Found*/
      SY05S-POPUPS();
      SY05W01.SY05SUGG = SY05M007.SUGGPRIC;
    else
      converseLib.validationFailed(232);
      set SY05M007.SUGGREQ cursor, bold;
    end
  end

  if (SY05M007.SUGGREQ == "N")
    SY05M007.SUGGPRIC = 0;
    SY05M007.SUGGPRICDT = 0;
  end

  SY05W01.SY05-COO-LBFL = "N";
  SY05W01.SY05WSX = 1; /* set screen index to 1*/
  while (SY05W01.SY05WSX <= 20)
    if (SY05M007.SY05MLBQ[SY05WSX] != 0
     && SY05M007.COOREQ not modified)
      SY05W01.SY05-COO-LBFL = "Y";
      SY05W01.SY05WSX = 20;
    end
    SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
  end
  if (SY05M007.COOREQ == "Y"
   && converseVar.eventKey is enter
   && converseVar.validationMsgNum == 0
   && SY05W01.SY05-COO-LBFL == "N"
   && SY05M007.SYMSCMSG == " ")
    if (SY05M007.SUGGREQ == "Y"
     && converseVar.eventKey is enter
     && converseVar.validationMsgNum == 0
     && SY05W01.SY05LBFL == "N"
     && SY05M007.SYMSCMSG == " ")
      SY05045-FOR-POPUP();
    end

    SY05S-POPUP-COO();
    SY05W01.SY05SCOO = SY05M007.SUGGCOO;
  else
    if (SY05M007.COOREQ == "N")
      SY05M007.SUGGCOO = " ";
    end
  end

  if (converseVar.validationMsgNum > 0
   || SY05M007.SY1STNBR == " ") /* no style number yet*/
    /* next sentence*/
  else
    set SY05M007.SY1STNBR cursor;
    if (SY05W01.SY05WBLD != "N") /* need to build array*/
      SY05200(); /* do it*/
    end

    /* now move data from table to screen*/

    if (SY05W01.SY05W12S == "1")
      SY05W01.SY05WIDX = 1;
    else
      SY05W01.SY05WIDX = 21;
    end
    SY05W01.SY05WSX = 1; /* set screen index to 1*/
    while (SY05W01.SY05WSX <= 20)
      if (SY05W01.SY05WIDX <= SY05W01.SY05WMAX) /* have data*/
        SY05M007.SY4IDDSC[SY05WSX] = SY05W01.SY4IDDSC[SY05WIDX];
        SY05M007.SY3FRGUT[SY05WSX] = SY05W01.SY3FRGUT[SY05WIDX];
        SY05M007.XDVCD[SY05WSX] = SY05W01.XDVCD[SY05WIDX];
        SY05M007.SY05MUPC[SY05WSX] = SY05W01.SY05WUPC[SY05WIDX];
        SY05M007.SY05MLBQ[SY05WSX] = SY05W01.SY05WLBQ[SY05WIDX];
        if (SY05W01.SY05WUF[SY05WIDX] == "Y")
          set SY05M007.SY05MUPC[SY05WSX] skip, bold;
        else
          set SY05M007.SY05MUPC[SY05WSX] initialAttributes;
        end
        if (SY05W01.SY05WPCF[SY05WIDX] == "Y" /* parm created*/
         || SY05W01.SY05WUPC[SY05WIDX] == " ") /* no upc code*/
          set SY05M007.SY05MLBQ[SY05WSX] skip;
        end
        SY05W01.SY05WIDX = SY05W01.SY05WIDX + 1;
      else /* no data so clear screen item*/
        SY05M007.SY4IDDSC[SY05WSX] = " ";
        SY05M007.SY3FRGUT[SY05WSX] = " ";
        SY05M007.XDVCD[SY05WSX] = " ";
        SY05M007.SY05MUPC[SY05WSX] = " ";
        set SY05M007.SY05MUPC[SY05WSX] initialAttributes;
        SY05M007.SY05MLBQ[SY05WSX] = 0;
        if (COMMAREA.CAILVL[1] == "Y")
          set SY05M007.SY05MLBQ[SY05WSX] skip, invisible;
        end
      end
      SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
    end

    if (SY05WREC.SY05WMEN == "Y")
      SY05M007.SYMSCMSG = "  COLOR SELECT FUNCTION ON     ";
    end
  end

  SY05SKA();
  if (SY05W02.SY05WJM > 0 /* we have parm data*/
   && converseVar.validationMsgNum == 0)
    if (SY05W01.SY05LVL == "STYLE") /* Price is at Style Level*/
      SY05M007.SYMSCMSG = "** Price is at Style Level ** - Press PF19 to Submit Labels";
    else
      SY05M007.SYMSCMSG = "  Press PF19 when Ready to Submit Labels";
    end
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY05M007 ;
   /* ***********************************************************/

  SY05M007.SYMSCMSG = " ";

   /* now move data from screen to table*/

  if (SY05W01.SY05W12S == "1")
    SY05W01.SY05WIDX = 1;
  else
    SY05W01.SY05WIDX = 21;
  end
  SY05W01.SY05WSX = 1; /* set screen index to 1*/
  while (SY05W01.SY05WSX <= 20)
    if (SY05W01.SY05WIDX <= SY05W01.SY05WMAX) /* have data*/
      SY05W01.SY05WLBQ[SY05WIDX] = SY05M007.SY05MLBQ[SY05WSX];
      SY05W01.SY05WIDX = SY05W01.SY05WIDX + 1;
    end
    SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
  end

  SY05SHP(); /* check pf keys*/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf19)
    SY05WREC.SY05WMEN = "N";
    SY05SHQ(); /* check for required screen fields*/
    SY05SHR(); /* check if screen key data has changed.*/
    SY05CHK();
    if (converseVar.validationMsgNum > 0) /* errors*/
      if (converseVar.eventKey is pf19) /* we want to submit*/
        SY05M007.SYMSCMSG = "SKU DATA  ACCIDENTALLY KEYED ....PLS CHECK BEFORE SUBMITTING";
      end
    end
  /*  IF EZEMNO EQ 0                 /* no errors*/
  /*    AND COMMAREA.CAILVL[1] EQ 'Y' /* can create labels*/
  /*     AND SY05W01.SY05WBLD NE 'Y'; /* no key changes*/
  /*     SY05SKA();                   /* check for parms*/
  /*   END;*/
    if (converseVar.validationMsgNum == 0) /* no errors*/
      if (converseVar.eventKey is pf19) /* we want to submit*/
        if (SY05W02.SY05WJM == 0) /* nothing to submit*/
          converseLib.validationFailed(175); /* enter label quantities*/
        else
          SY05SKB(); /* go and do it*/
        end
      end
    end
  end


end // end SY05045

// display UPC for sizes screen
Function SY05045-FOR-POPUP()

  SY05M007.SYMTTLNM = " PRODUCT SIZE - UPC INQ ";
  SY05M007.SYMPRONM = "SY05045";
  SY05M007.SYMCURDT = VGVar.currentShortGregorianDate;
  SY05M007.SYMREV = "05"; /* program revision number!!!!*/
  if (SY05M007.XDMCD == " ") /* demension is blank*/
    SY05M007.XDMCD = "00"; /* default to 00*/
  end
  if (SY05M007.XQACD == " ") /* quality is blank*/
    SY05M007.XQACD = "01"; /* default to 01*/
  end
  /* IF SYWREC.SYWPFOPT EQ 'PF18 '*/
  if (SY05M007.SUGGREQ == " ") /* sugg retail prnt request is blank*/
    SY05M007.SUGGREQ = "N"; /* default to n*/
  end
  if (SY05M007.COOREQ == " ") /* Country of origin request is blank*/
    SY05M007.COOREQ = "N"; /* default to n*/
  end

  if (SY05M007.SETREQ == " ") /* SET request is blank*/
    SY05M007.SETREQ = "N"; /* default to n*/
  end

  SY05W01.SY05WSX = 1; /* set index*/
  if (COMMAREA.CAILVL[1] == "Y") /* user can submit label jobs*/
    set SY05M007.SY05MLP1 initialAttributes;
    set SY05M007.SY05MLP2 initialAttributes;
    set SY05M007.SUGGREQ initialAttributes;
    set SY05M007.SUGGHDR initialAttributes;
    set SY05M007.COOREQ initialAttributes;
    set SY05M007.COOHDR initialAttributes;
    set SY05M007.SETREQ initialAttributes;
    set SY05M007.SETHDR initialAttributes;

    while (SY05W01.SY05WSX <= 20)
      set SY05M007.SY05MLBQ[SY05WSX] initialAttributes;
      SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
    end
  else /* user cannot submit, protect fields*/
    set SY05M007.SY05MLP1 skip, invisible;
    set SY05M007.SY05MLP2 skip, invisible;
    set SY05M007.SUGGREQ skip, invisible;
    set SY05M007.SUGGHDR skip, invisible;
    set SY05M007.COOREQ skip, invisible;
    set SY05M007.COOHDR skip, invisible;
    set SY05M007.SETREQ skip, invisible;
    set SY05M007.SETHDR skip, invisible;

    while (SY05W01.SY05WSX <= 20)
      set SY05M007.SY05MLBQ[SY05WSX] skip, invisible;
      SY05W01.SY05WSX = SY05W01.SY05WSX + 1;
    end
  end

  SY05M007.SYMSCMSG = "  Press Enter again to select COO";

   /* ***********************************************************/
  converse SY05M007 ;
   /* ***********************************************************/
  if (converseVar.eventKey is enter)
    SY05M007.SYMSCMSG = "   ";
    return;
  end

end // end SY05045-FOR-POPUP

// Load Footwear Tooling
Function SY05100()

   /* Load mold & last from VSTYLE01 in case nothing is in*/
   /* the tooling tables (will be true for old styles).*/
  SY05M002.TOOL-CMPNT-TYP-CD[1] = "M=";
  SY05M002.TOOL-CMPNT-NAME[1] = SY1REC.FY7MLDCD;
  SY05M002.TOOL-CMPNT-TYP-CD[2] = "L=";
  SY05M002.TOOL-CMPNT-NAME[2] = SY1REC.FY8LSTCD;
  SY05M002.TOOL-CMPNT-TYP-CD[3] = " ";
  SY05M002.TOOL-CMPNT-NAME[3] = " ";

   /* Open cursor on VTLINV01 table*/
  VTLINV01.TOOL-GRP-REF-ID = SY1REC.FY7MLDCD;
  call "VTLINV01" ("S1", SQLCA, VTLINV01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* Error on Open*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05";
    TA1REC.TA1LOCAT[1] = "SY05100  ";
    TA1REC.TA1LOCAT[2] = "VTLINV01 ";
    TA1REC.TA1LOCAT[3] = "S1       ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY05M002";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VTLINV01";
    TA1TBLKE = SY1REC.SY1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error....*/
    exit stack;
  end

   /* Load tooling rows to array on screen*/
  SYWREC.SYWINDEX = 1;
  while (SYWREC.SYWINDEX <= 3)
    SY05S-LOAD-TOOLING();
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end


   /* Close cursor on VTLINV01 table*/
  VTLINV01.TOOL-GRP-REF-ID = SY1REC.FY7MLDCD;
  call "VTLINV01" ("C1", SQLCA, VTLINV01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* Error on Open*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05";
    TA1REC.TA1LOCAT[1] = "SY05100  ";
    TA1REC.TA1LOCAT[2] = "VTLINV01 ";
    TA1REC.TA1LOCAT[3] = "C1       ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY05M002";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VTLINV01";
    TA1TBLKE = SY1REC.SY1KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(23); /* table error....*/
    exit stack;
  end

end // end SY05100

// Load UPC data to table/screen
Function SY05200()

  set SY05W01 empty;
  SY05W01.SY05WBLD = "N"; /* screen/table now built*/

  SY05M007.SY1STNBR = SY05M005.SY1STNBR;
  SY05M007.SY1STYNM = SY05M005.SY1STYNM;
  SY05M007.SY2CLRID = SY05M005.SY2CLRID;
  SY05M007.SY2CLRDS = SY05M005.SY2CLRDS;
  SY05M007.XGPCD = SY05M005.XGPCD;
  SY05M007.XGPABRV = SY05M005.XGPABRV;
  SY05M007.XDMCD = SY05M005.XDMCD;
  SY05M007.XDMDESC = SY05M005.XDMDESC;
  if (SY05M007.XQACD == " ") /* no data*/
    if (SYUREC.XQACD != " ")
      SY05M007.XQACD = SYUREC.XQACD;
    else
      SY05M007.XQACD = "01";
    end
  end

  if (SY05M007.XQACD in XQATBL.XQACD)
    SY05M007.XQAABRV = XQATBL.XQAABRV[sysVar.arrayIndex];
  else
    SY05M007.XQAABRV = "UNKNOWN";
  end

  if (SYUREC.SYUPCSZB == 0
   || SY05M007.SY1STNBR != SYUREC.SY1STNBR
   || SY05M007.SY2CLRID != SYUREC.SY2CLRID
   || SY05M007.XGPCD != SYUREC.XGPCD
   || SY05M007.XDMCD != SYUREC.XDMCD
   || SY05M007.XQACD != SYUREC.XQACD)
    set SYUREC empty;
    SYUREC.SY1STNBR = SY05M007.SY1STNBR;
    SYUREC.SY2CLRID = SY05M007.SY2CLRID;
    SYUREC.XGPCD = SY05M007.XGPCD;
    SYUREC.XDMCD = SY05M007.XDMCD;
    SYUREC.XQACD = SY05M007.XQACD;
    SYUREC.SYUPCFCD = "D"; /* display option*/
    SYUREC.SYUPCDFN = "K"; /* search by key*/
    call "SY1280" (SYUREC) {isNoRefresh = yes, isExternal = yes};
    if (SYUREC.SYUPCRCD == 01) /* no upc data found*/
      converseLib.validationFailed(146); /* no upc data*/
    end
    if (SYUREC.SYUPCRCD == 03) /* bad key data*/
      converseLib.validationFailed(3); /* invalid code*/
      exit stack;
    end
    if (SYUREC.SYUPCRCD == 04) /* UPC's in History*/
      converseLib.validationFailed(94); /* Display message*/
    end
    if (SYUREC.SYUPCRCD > 50) /* bad errors*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY05200  ";
      TA1REC.TA1LOCAT[3] = "SY1280   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M008";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSYUPC01";
      TA1TBLKE = SY1REC.SY1KEY;
      SQLCA.SQLCAREC = SYUREC.SQLCAREC;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error....*/
      exit stack;
    end
  end

   /* now load work table from SY3, SY4, and SYU RECs*/

  SY05W01.SY05W12S = 1; /* set to display screen 1*/
  SY05W01.SY05WIDX = 1;
  while (SY05W01.SY05WIDX <= 40)
    if (SY3REC.XDVCD[SY05WIDX] != "  ") /* we have something*/
      SY05W01.SY05WMAX = SY05W01.SY05WMAX + 1; /* add to max entries*/
      SY05W01.SY4IDDSC[SY05WMAX] = SY4REC.SY4IDDSC[SY05WIDX];
      SY05W01.SY3FRGUT[SY05WMAX] = SY3REC.SY3FRGUT[SY05WIDX];
      SY05W01.XDVCD[SY05WMAX] = SY3REC.XDVCD[SY05WIDX];
      if (SYUREC.SYUPCMID[SY05WIDX] != 0) /* we have upc data*/
        SY05W01.SY05WU1[SY05WMAX] = SYUREC.SYUPCSNB[SY05WIDX];
        SY05W01.SY05WU2[SY05WMAX] = SYUREC.SYUPCMID[SY05WIDX];
        SY05W01.SY05WU3[SY05WMAX] = SYUREC.SYUPCIMN[SY05WIDX];
        SY05W01.SY05WU4[SY05WMAX] = SYUREC.SYUPCCKD[SY05WIDX];
        if (SY05W01.SY05WIDX == SYUREC.SYUPCSZB)
          SY05W01.SY05WUF[SY05WMAX] = "Y";
          if (SY05W01.SY05WMAX > 20)
            SY05W01.SY05W12S = 2;
          end
        else
          SY05W01.SY05WUF[SY05WMAX] = " ";
        end
      else /* no data, move blanks*/
        SY05W01.SY05WUPC[SY05WMAX] = " ";
        SY05W01.SY05WUF[SY05WMAX] = " ";
      end
    end
    SY05W01.SY05WIDX = SY05W01.SY05WIDX + 1;
  end

  SY05W01.SY05WIDX = 1;
  SY05M007.SYUPCSNB = 0;
  SY05M007.SYUPCMID = 0;
  SY05M007.SYUPCIMN = 0;
  SY05M007.SYUPCCKD = 0;

end // end SY05200

// converse price
Function SY05300()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR price*/

      /* 1) Converse the map.*/
      /* 2) Reset selection fields to normal after converse.*/
      /* 3) Check for PFkey and scroll errors.*/
      /* 4) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

   /* SET SY05M008 CLEAR;              /* Clear map output area*/
  SY05M008.SY05MHDR = SY05W03.SY05WHDR; /* Place heading on map*/
  SY05M008.SY05MTR1 = "             Select & Enter          ";
  SY05W04.SY05WCT2 = 1;
  while (SY05W04.SY05WCT2 <= 08) /* Set all fields with data to normal*/
    if (SY05M008.SY05M-UNIT-PRC1[SY05WCT2] == 0)
      set SY05M008.SY05MSEL[SY05WCT2] skip, bold;
    end
    SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
  end

  converse SY05M008 ;
  SY05W04.SY05WERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  SY05W04.SY05WCT2 = 1; /* Screen index*/
  while (SY05W04.SY05WCT2 <= 06 /* Set all fields with data to normal*/
   && SY05M008.SY05M-UNIT-PRC1[SY05WCT2] != 0)
    set SY05M008.SY05MSEL[SY05WCT2] normal;
    SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8) /* If PF8 pressed*/
    SY05M008.SY05MTR2 = "   At End of Table";
  else
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      SY05M008.SY05MTR2 = "   At Beginning of Table";
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        SY05W04.SY05WEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        SY05W04.SY05WCT2 = 1; /* Screen index*/
        while (SY05W04.SY05WCT2 <= 06) /* Until end of screen data*/
          if (SY05M008.SY05MSEL[SY05WCT2] == "S") /* Check for selection*/
            SY05W04.SY05WPIX = SY05W04.SY05WCT2;
            SY05W04.SY05WCT2 = 07; /* End loop*/
            SY05W03.SY1MTRFL = "N";
          end
          SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
        end
        SY05W04.SY05WCT2 = 1; /* Screen index*/
        SY05W03.SY1SELCT = 0; /* Screen index*/
        while (SY05W04.SY05WCT2 <= 06) /* Until end of screen data*/
          if (SY05M008.SY05MSEL[SY05WCT2] == "S") /* Check for selection*/
            SY05W03.SY1SELCT = SY05W03.SY1SELCT + 1;
          end
          SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
        end
        if (SY05W03.SY1SELCT > 1)
          SY05W03.SY1SELFL = "Y"; /* Set flag for message*/
          SY05W04.SY05WEND = "N"; /* Reset end flag*/
        else
          SY05W03.SY1SELFL = "N";
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          SY05W04.SY05WERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end SY05300

// get valid colors for a product
Function SY05310()
   /* *************************************************************/
    /* ***  THE FOLLOWING MUST BE ADDED TO THE HOST APPLICATION*/
    /* ***  FOR THIS MODULE TO EXECUTE SUCCESSFULLY*/
           /* ADD TO RECORDS LIST:*/
               /* SY5REC*/
               /* SY05W03*/
               /* SY05W04*/
           /* ADD TO MAP GROUP:*/
               /* SY05M008*/
   /* *************************************************************/

    /* PROCESS SYNOPSIS:*/
    /* 1. select and load table with price at color or style level*/
    /* 2. move table values to popup window map and converse*/
       /* popup window map.*/
   /* ------------------------------------------------------------*/

  SY05320(); /* popup window initialization*/

  SY05W03.SY05WHDR = "    Price/unit           Eff-date";
   /* IF SY05W03.SY1MTRFL = 'Y';*/
   /* MOVE "  No Prices Selected " TO SY05M008.SY05MTR2;*/
   /* END;*/

  if (SY05W03.SY1SELFL == "Y")
    SY05M008.SY05MTR2 = "Only Select One Price please";
  end

  SY05SKC(); /* Load the table*/

  while (SY05W04.SY05WEND == "N") /* until end of request*/
    SY05300(); /* display table values on popup map*/
  end

end // end SY05310

// Initialization - pop up window
Function SY05320()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set SY05M008 initial; /* Clear the map area*/
  set SY05W04 empty; /* clear working storage*/
  SY05W04.SY05WCT1 = 1; /* Table index*/
  SY05W04.SY05WCT2 = 1; /* Screen index*/
  SY05W04.SY05WPIX = 0; /* Initialize pass index to zero*/
  SY05W04.SY05WFFL = "Y"; /* first time thru flag*/
  SY05W04.SY05WEND = "N"; /* End of pop up window session flag*/

end // end SY05320

// converse price
Function SY05400()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR price*/

      /* 1) Converse the map.*/
      /* 2) Reset selection fields to normal after converse.*/
      /* 3) Check for PFkey and scroll errors.*/
      /* 4) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

   /* SET SY05M008 CLEAR;              /* Clear map output area*/
  SY05M009.SY05MHDR = "     COUNTRY OF ORIGIN   "; /* Place heading on map*/
  SY05M009.SY05MTR1 = "             Select & Enter          ";
  SY05W04.SY05WCT2 = 1;
  while (SY05W04.SY05WCT2 <= 08) /* Set all fields with data to normal*/
    if (SY05M009.SY05M-SUGG-COO[SY05WCT2] == "  ")
      set SY05M009.SY05MSEL[SY05WCT2] skip, bold;
    end
    SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
  end

  converse SY05M009 ;
  SY05W04.SY05WERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  SY05W04.SY05WCT2 = 1; /* Screen index*/
  while (SY05W04.SY05WCT2 <= 06 /* Set all fields with data to normal*/
   && SY05M009.SY05M-SUGG-COO[SY05WCT2] != "  ")
    set SY05M009.SY05MSEL[SY05WCT2] normal;
    SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8) /* If PF8 pressed*/
    SY05M009.SY05MTR2 = "   At End of Table";
  else
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      SY05M009.SY05MTR2 = "   At Beginning of Table";
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        SY05W04.SY05WEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        SY05W04.SY05WCT2 = 1; /* Screen index*/
        while (SY05W04.SY05WCT2 <= 06) /* Until end of screen data*/
          if (SY05M009.SY05MSEL[SY05WCT2] == "S") /* Check for selection*/
            SY05W04.SY05WPIX = SY05W04.SY05WCT2;
            SY05W04.SY05WCT2 = 07; /* End loop*/
            SY05W03.SY1MTRFL = "N";
          end
          SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
        end
        SY05W04.SY05WCT2 = 1; /* Screen index*/
        SY05W03.SY1SELCT = 0; /* Screen index*/
        while (SY05W04.SY05WCT2 <= 06) /* Until end of screen data*/
          if (SY05M009.SY05MSEL[SY05WCT2] == "S") /* Check for selection*/
            SY05W03.SY1SELCT = SY05W03.SY1SELCT + 1;
          end
          SY05W04.SY05WCT2 = SY05W04.SY05WCT2 + 1;
        end
        if (SY05W03.SY1SELCT > 1)
          SY05W03.SY1SELFL = "Y"; /* Set flag for message*/
          SY05W04.SY05WEND = "N"; /* Reset end flag*/
        else
          SY05W03.SY1SELFL = "N";
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          SY05W04.SY05WERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end SY05400

// Initialization - pop up window
Function SY05410()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set SY05M009 initial; /* Clear the map area*/
  set SY05W04 empty; /* clear working storage*/
  SY05W04.SY05WCT1 = 1; /* Table index*/
  SY05W04.SY05WCT2 = 1; /* Screen index*/
  SY05W04.SY05WPIX = 0; /* Initialize pass index to zero*/
  SY05W04.SY05WFFL = "Y"; /* first time thru flag*/
  SY05W04.SY05WEND = "N"; /* End of pop up window session flag*/

  if (SY05W03.SY1SELFL == "Y")
    SY05M008.SY05MTR2 = "Only Select One Price please";
  end
  SY05M009.SY05MHDR = "      COUNTRY  OF  ORIGIN";
  SY05M009.SY05M-SUGG-COO[1] = "CHINA";
  SY05M009.SY05M-SUGG-COO[2] = "PAKISTAN";
  SY05M009.SY05M-SUGG-COO[3] = "PHILIPPINES";
  SY05M009.SY05M-SUGG-COO[4] = "THAILAND";

  SY05W03.SY05WIX1 = 1;
  while (SY05WIX1 <= 8) /* init table fields*/
    SY05M009.SY05M-SPACE-COO[SY05WIX1] = " ";
    SY05WIX1 = SY05WIX1 + 1; /* increment index*/
  end

  while (SY05W04.SY05WEND == "N") /* until end of request*/
    SY05400(); /* display table values on popup map*/
  end

end // end SY05410

// retrieve style data
Function SY05CHK()


       /* ***************************************/
       /* *  CHECK ON THE SKU DATA **/
       /* *                                    **/
       /* ***************************************/

  if (converseVar.validationMsgNum == 0)
    SY1REC.SY1STNBR = SY05WREC.SY1STNBR;
    SY1REC.XGPCD = SY05WREC.XGPCD;

    set SQLCA empty;

    call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(5); /* style record does not exists*/
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY05   ";
        TA1REC.TA1LOCAT[1] = "S        ";
        TA1REC.TA1LOCAT[2] = "SY05SBD  ";
        TA1REC.TA1LOCAT[3] = "IO0120   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY05M001";
        TA1REC.TA1DBASE = "DPROD.";
        TA1REC.TA1TBLVU = "VSTYLE01";
        TA1TBLKE = SY1REC.SY1KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(20); /* style table error....*/
        set SY05M001.SY1STNBR cursor, bold;
      end
    end
  end




  if (converseVar.validationMsgNum == 0) /**/
    SY2REC.XGPCD = SY05WREC.XGPCD;
    SY2REC.SY1STNBR = SY05WREC.SY1STNBR;
    SY2REC.SY2CLRID = SY05WREC.SY2CLRID;
    SY2REC.XDMCD = SY05WREC.XDMCD;

    set SQLCA empty;

    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(7);
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY05   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY05SAD ";
        TA1REC.TA1LOCAT[3] = "IO0130  ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY05M004";
        TA1REC.TA1DBASE = "DPROD.";
        TA1REC.TA1TBLVU = "VCOLOR01";
        TA1TBLKE = SY2REC.SY2KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(21); /* color table error*/
      end
    end
  end




  if (converseVar.validationMsgNum == 0)
    SY3REC.XGPCD = SY05WREC.XGPCD;
    SY3REC.SY1STNBR = SY05WREC.SY1STNBR;
    SY3REC.SY2CLRID = SY05WREC.SY2CLRID;
    SY3REC.XDMCD = SY05WREC.XDMCD;
    set SQLCA empty;


    call "IO0140" ("S ", SQLCA, SY3REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
    /**/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(8); /* size record does not exists*/
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY05   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY05SAE ";
        TA1REC.TA1LOCAT[3] = "IO0140  ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY03M001";
        TA1REC.TA1DBASE = "DPROD.";
        TA1REC.TA1TBLVU = "VSIZE001";
        TA1TBLKE = SY3REC.SY3KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(22); /* size table error*/
      end
    end
  end


end // end SY05CHK

// retrieve tooling data
Function SY05S-LOAD-TOOLING()


       /* ***************************************/
       /* *  retrieve footwear tooling data    **/
       /* ***************************************/

   /* Fetch next row from VTLINV01*/
  call "VTLINV01" ("N1", SQLCA, VTLINV01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* If at end of fetches*/
    SYWREC.SYWINDEX = 9; /* set index to stop looping*/
    return; /* and exit*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05";
      TA1REC.TA1LOCAT[1] = "SY05S-LOA";
      TA1REC.TA1LOCAT[2] = "D-TOOLING";
      TA1REC.TA1LOCAT[3] = " ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M002";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VTLINV01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error....*/
      exit stack;
    end
  end


  VTLCMP01.TOOL-CMPNT-TYP-CD = VTLINV01.TOOL-CMPNT-TYP-CD;
  VTLCMP01.TOOL-CMPNT-ID = VTLINV01.TOOL-CMPNT-ID;

  set SQLCA empty;

  call "VTLCMP01" ("S ", SQLCA, VTLCMP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M002.TOOL-CMPNT-TYP-CD[SYWINDEX] = VTLCMP01.TOOL-CMPNT-TYP-CD;
    SY05M002.TOOL-CMPNT-NAME[SYWINDEX] = VTLCMP01.TOOL-CMPNT-NAME;
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      SY05M002.TOOL-CMPNT-TYP-CD[SYWINDEX] = "??";
      SY05M002.TOOL-CMPNT-NAME[SYWINDEX] = VTLINV01.TOOL-GRP-REF-ID;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05";
      TA1REC.TA1LOCAT[1] = "SY05S-LOA";
      TA1REC.TA1LOCAT[2] = "D-TOOLING";
      TA1REC.TA1LOCAT[3] = " ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M002";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VTLCMP01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error....*/
      exit stack;
    end
  end


end // end SY05S-LOAD-TOOLING

Function SY05S-POPUP-COO()

  SY05410();
  if (SY05W04.SY05WERR == "Y") /* we have an error*/
    if (SY05W04.SY05WENR == 0) /* Invalid function key*/
      converseLib.validationFailed(19);
    end
  else
    if (SY05W04.SY05WPIX != 0) /* and user selected*/
      SY05M007.SUGGCOO = SY05M009.SY05M-SUGG-COO[SY05WPIX];
    else
      SY05M007.VAGen_EZEMSG = " NO COO SELECTED "; /* No prices selected*/
      set SY05M007.SUGGCOO cursor, bold;
      SY05M007.SUGGCOO = "   ";
    end
  end

  converseLib.clearScreen();

end // end SY05S-POPUP-COO

// Check for & Display popups
Function SY05S-POPUPS()

  SY05310();
  if (SY05W04.SY05WERR == "Y") /* we have an error*/
    if (SY05W04.SY05WENR == 0) /* Invalid function key*/
      converseLib.validationFailed(19);
    end
  else
    if (SY05W04.SY05WPIX != 0) /* and user selected*/
      SY05M007.SUGGPRIC = SY05W03.SY1PRIUN[SY05WPIX];
      SY05M007.SUGGPRICDT = SY05W03.SY1EFFDT[SY05WPIX];
    else
      converseLib.validationFailed(239); /* No prices selected*/
      set SY05M007.SUGGREQ cursor, bold;
      SY05M007.SUGGPRIC = 0;
      SY05M007.SUGGPRICDT = 0;
      /* MOVE 'Y' TO SY05W03.SY1MTRFL;*/
      /* SY05S-POPUPS;*/
    end
  end

  converseLib.clearScreen();

end // end SY05S-POPUPS

// verify development region
Function SY05S-XDR()

       /* ******************************************/
       /* *  VERIFY DEVELOPMENT REGION CODE AND   **/
       /* *  GET DESCRIPTION.                     **/
       /* ******************************************/

  if (SY05M006.XDR-PROD-REG-CD == "  ")
    SY05M006.XDR-PROD-REG-SDESC = " ";
  else
    if (SY05M006.XDR-PROD-REG-CD in XDRTBL.XDR-PROD-REG-CD)
      SY05M006.XDR-PROD-REG-SDESC = XDRTBL.XDR-PROD-REG-SDESC[sysVar.arrayIndex];
    else
      SY05M006.XDR-PROD-REG-SDESC = "INVALID";
    end
  end

end // end SY05S-XDR

// get valid gpc code
Function SY05SAA()


       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY05WREC.XGPCD == "99")
    set SY05M001.XGPCD bold;
    set SY05M002.XGPCD bold;
    set SY05M003.XGPCD bold;
    set SY05M004.XGPCD bold;
    set SY05M005.XGPCD bold;
    set SY05M006.XGPCD bold;
    set SY05M007.XGPCD bold;
    SY05M001.XGPABRV = "INVALID";
    SY05M002.XGPABRV = "INVALID";
    SY05M003.XGPABRV = "INVALID";
    SY05M004.XGPABRV = "INVALID";
    SY05M005.XGPABRV = "INVALID";
    SY05M006.XGPABRV = "INVALID";
    SY05M007.XGPABRV = "INVALID";
    return;
  end

  if (SY05WREC.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
      COMMAREA.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    else
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    end
  else
    set SY05M001.XGPCD bold;
    set SY05M002.XGPCD bold;
    set SY05M003.XGPCD bold;
    set SY05M004.XGPCD bold;
    set SY05M005.XGPCD bold;
    set SY05M006.XGPCD bold;
    set SY05M007.XGPCD bold;
    SYWREC.XGPABRV = "INVALID";
  end


  SY05M001.XGPCD = SYWREC.XGPCD;
  SY05M002.XGPCD = SYWREC.XGPCD;
  SY05M003.XGPCD = SYWREC.XGPCD;
  SY05M004.XGPCD = SYWREC.XGPCD;
  SY05M005.XGPCD = SYWREC.XGPCD;
  SY05M006.XGPCD = SYWREC.XGPCD;
  SY05M007.XGPCD = SYWREC.XGPCD;
  SY05M001.XGPABRV = SYWREC.XGPABRV;
  SY05M002.XGPABRV = SYWREC.XGPABRV;
  SY05M003.XGPABRV = SYWREC.XGPABRV;
  SY05M004.XGPABRV = SYWREC.XGPABRV;
  SY05M005.XGPABRV = SYWREC.XGPABRV;
  SY05M006.XGPABRV = SYWREC.XGPABRV;
  SY05M007.XGPABRV = SYWREC.XGPABRV;



end // end SY05SAA

// retrieve color data
Function SY05SAD()


       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* ******************************************/

  set SQLCA empty;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05SAX(); /* retreive blank color description*/
    SY05SAY(); /* retreive scheduler userid*/
    SY05SAT(); /* retreive root style desc*/
    move SY2REC to SY05M004 withV60Compat;
    if (SY2REC.XGPCD == "02") /* footwear, change xcl codes*/
      SY05M004.XCLCD[1] = SY2REC.XCLCD1;
      SY05M004.XCLCD[2] = SY2REC.XCLCD4;
      SY05M004.XCLCD[3] = SY2REC.XCLCD2;
      SY05M004.XCLCD[4] = SY2REC.XCLCD3;
    else /* display codes in 'normal' order*/
      SY05M004.XCLCD[1] = SY2REC.XCLCD1;
      SY05M004.XCLCD[2] = SY2REC.XCLCD2;
      SY05M004.XCLCD[3] = SY2REC.XCLCD3;
      SY05M004.XCLCD[4] = SY2REC.XCLCD4;
    end
    move SY2REC to SY05M006 withV60Compat;
    SY05M001.SY2CLRID = SY2REC.SY2CLRID;
    SY05M002.SY2CLRID = SY2REC.SY2CLRID;
    SY05M004.SY2CLRID = SY2REC.SY2CLRID;
    SY05M005.SY2CLRID = SY2REC.SY2CLRID;
    SY05M006.SY2CLRID = SY2REC.SY2CLRID;
    SY05M001.XDMCD = SY2REC.XDMCD;
    SY05M002.XDMCD = SY2REC.XDMCD;
    SY05M004.XDMCD = SY2REC.XDMCD;
    SY05M005.XDMCD = SY2REC.XDMCD;
    SY05M006.XDMCD = SY2REC.XDMCD;
    SY05M007.XDMCD = SY2REC.XDMCD;
    SY05M005.SY2CLRDS = SY2REC.SY2CLRDS;
    SYWREC.SYWCHGTM = SY2REC.ZZZCHGTM;
    SY05WREC.SY05WCHH = SYWREC.SYWCHGHH;
    SY05WREC.SY05WCMM = SYWREC.SYWCHGMM;
    SY05WREC.SY05WFIL = ":";
    SY05M004.SY05MTIM = SY05WREC.SY05WTIM;
    SY05SGG();
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set SY05M001.SY2CLRID cursor, bold;
      set SY05M001.XDMCD cursor, bold;
      set SY05M002.SY2CLRID cursor, bold;
      set SY05M002.XDMCD cursor, bold;
      set SY05M004.SY2CLRID cursor, bold;
      set SY05M004.XDMCD cursor, bold;
      set SY05M005.SY2CLRID cursor, bold;
      set SY05M005.XDMCD cursor, bold;
      set SY05M006.SY2CLRID cursor, bold;
      set SY05M006.XDMCD cursor, bold;
      converseLib.validationFailed(7);
                                   /* color/dimension record does not exist*/
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAD ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M004";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      exit stack;
    end
  end




end // end SY05SAD

// retrieve size data
Function SY05SAE()


       /* ********************************************/
       /* *   VERIFY IF SIZES EXISTS.               **/
       /* ********************************************/


  set SQLCA empty;


  call "IO0140" ("S ", SQLCA, SY3REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    move SY4REC to SY05M005 withV60Compat;
    move SY3REC to SY05M005 withV60Compat;
    SYWREC.SYWCHGTM = SY3REC.ZZZCHGTM;
    SY05WREC.SY05WCHH = SYWREC.SYWCHGHH;
    SY05WREC.SY05WCMM = SYWREC.SYWCHGMM;
    SY05WREC.SY05WFIL = ":";
    SY05M005.SY05MTIM = SY05WREC.SY05WTIM;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(8); /* size record does not exists*/
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAE ";
      TA1REC.TA1LOCAT[3] = "IO0140  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY03M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSIZE001";
      TA1TBLKE = SY3REC.SY3KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(22); /* size table error*/
      exit stack;
    end
  end


end // end SY05SAE

// retrieve blank style desc.
Function SY05SAR()


       /* ******************************************/
       /* *  GET  style row                       **/
       /* *  FOR BLANK-style DESCRIPTION          **/
       /* ******************************************/

  if (SY1REC.SY1BSTNB == " ")
    return;
  end

  SYDREC.XGPCD = SY1REC.XGPCD;
  SYDREC.SY1STNBR = SY1REC.SY1BSTNB;

  set SQLCA empty;

  call "IO0120" ("S ", SQLCA, SYDREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M002.SY05MBSN = SYDREC.SY1STYNM;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY05M002.SY05MBSN = "INVALID";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAR ";
      TA1REC.TA1LOCAT[3] = "IO0120  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SYDREC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error*/
      exit stack;
    end
  end



end // end SY05SAR

// retrieve style-group desc.
Function SY05SAS()


       /* ******************************************/
       /* *  get  style-group desc. from sybrec   **/
       /* ******************************************/

  if (SY1REC.SYBSTGNB == "  ")
    return;
  end

  SYBREC.SYBSTGNB = SY1REC.SYBSTGNB;

  set SQLCA empty;

  call "IO3150" ("S ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M002.SYBSTGNM = SYBREC.SYBSTGNM;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY05M002.SYBSTGNM = "INVALID";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAS ";
      TA1REC.TA1LOCAT[3] = "IO3150  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSYGRP01";
      TA1TBLKE = SYBREC.SYBSTGNB;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(141); /* style group table error*/
      exit stack;
    end
  end



end // end SY05SAS

// retrieve root style desc.
Function SY05SAT()


       /* ******************************************/
       /* *  for apparel only, read style table   **/
       /* *  for root-style description.          **/
       /* ******************************************/

  if (SY2REC.SY2RSTNB == " "
   || SY1REC.XGPCD != "03")
    SY05M006.SY05MRSN = " ";
    return;
  end

  SYDREC.XGPCD = SY1REC.XGPCD;
  SYDREC.SY1STNBR = SY2REC.SY2RSTNB;

  set SQLCA empty;

  call "IO0120" ("S ", SQLCA, SYDREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M006.SY05MRSN = SYDREC.SY1STYNM;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY05M006.SY05MRSN = "INVALID";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAT ";
      TA1REC.TA1LOCAT[3] = "IO0120  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SYDREC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA);
      converseLib.validationFailed(20); /* style table error*/
      exit stack;
    end
  end



end // end SY05SAT

// retrieve blank color desc.
Function SY05SAX()


       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* *  FOR BLANK-COLOR DESCRIPTION          **/
       /* ******************************************/

  if (SY2REC.SY2BCLCD == "   ")
    return;
  end

  SYEREC.XGPCD = SY2REC.XGPCD;
  SYEREC.SY1STNBR = SY1REC.SY1BSTNB;
  SYEREC.SY2CLRID = SY2REC.SY2BCLCD;
  SYEREC.XDMCD = SY2REC.XDMCD;

  set SQLCA empty;

  call "IO0130" ("S ", SQLCA, SYEREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M006.SY05MBCN = SYEREC.SY2CLRDS;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY05M006.SY05MBCN = "INVALID";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAX ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M006";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SYEREC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      exit stack;
    end
  end



end // end SY05SAX

// retrieve scheduler userid.
Function SY05SAY()


       /* ******************************************/
       /* *  get  scheduler userid from pg1rec    **/
       /* ******************************************/

  if (SY2REC.PG1SC4CD == "  ")
    return;
  end

  PG1REC.XGPCD = SY2REC.XGPCD;
  PG1REC.PG1SC4CD = SY2REC.PG1SC4CD;
  PG1REC.PG1FCTCD = "  ";

  set SQLCA empty;

  call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M006.XXXUSER = PG1REC.XXXUSER;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY05M006.XXXUSER = "INVALID";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY05SAY ";
      TA1REC.TA1LOCAT[3] = "IO1200  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M006";
      TA1REC.TA1DBASE = "DPRODG.";
      TA1REC.TA1TBLVU = "VSUSER01";
      TA1TBLKE = PG1REC.PG1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(142); /* scheduler table error*/
      exit stack;
    end
  end



end // end SY05SAY

// check if style key changed
Function SY05SBA()


       /* ***************************************/
       /* *  if screen key changed get all     **/
       /* *  product records that are needed.  **/
       /* ***************************************/


  if (SY05M001.SY1STNBR != SY05WREC.SY1STNBR
   || SY05M001.XGPCD != SY05WREC.XGPCD)
    SY05WREC.XGPCD = SY05M001.XGPCD;
    SY05WREC.SY1STNBR = SY05M001.SY1STNBR;
    SY05SAA(); /* Retrieve GPC Desc*/
    if (SY05M001.SY2CLRID == " ")
      SY05WREC.SY2CLRID = SY05M001.SY2CLRID;
      SY05WREC.XDMCD = SY05M001.XDMCD;
      SY05SBW(); /* clear all screens*/
      SY05SBD(); /* retrieve just style data*/
    else
      SY05WREC.SY2CLRID = SY05M001.SY2CLRID;
      SY05WREC.XDMCD = SY05M001.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    end
  else
    if (SY05M001.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M001.XGPCD != SY05WREC.XGPCD
     || SY05M001.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M001.XDMCD != SY05WREC.XDMCD)
      SY05WREC.SY1STNBR = SY05M001.SY1STNBR;
      SY05WREC.XGPCD = SY05M001.XGPCD;
      SY05WREC.SY2CLRID = SY05M001.SY2CLRID;
      SY05WREC.XDMCD = SY05M001.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    else
      /* next sentence,  nothing has changed*/
    end
  end



end // end SY05SBA

// validate screen fields.
Function SY05SBB()


       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/


  if (SY05M001.SY1STNBR == " ")
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M001.XGPCD == " ")
    set SY05M001.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M001.XDMCD == " ")
    if (SY05M001.SY2CLRID != " ")
      set SY05M001.XDMCD cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  else
    /* next sentence*/
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end


end // end SY05SBB

// retrieve style/color/size data
Function SY05SBC()


  SY05SBW(); /* clear all screens*/

       /* ***************************************/
       /* *  retrieve  style data              **/
       /* ***************************************/

  SY1REC.XGPCD = SY05WREC.XGPCD;
  SY1REC.SY1STNBR = SY05WREC.SY1STNBR;

  SY05SBD();

       /* ***************************************/
       /* *  retrieve  color data              **/
       /* ***************************************/

  SY2REC.XGPCD = SY05WREC.XGPCD;
  SY2REC.SY1STNBR = SY05WREC.SY1STNBR;
  SY2REC.SY2CLRID = SY05WREC.SY2CLRID;
  SY2REC.XDMCD = SY05WREC.XDMCD;

  SY05SAD();


       /* ***************************************/
       /* *  retrieve  size data               **/
       /* ***************************************/

  SY3REC.XGPCD = SY05WREC.XGPCD;
  SY3REC.SY1STNBR = SY05WREC.SY1STNBR;
  SY3REC.SY2CLRID = SY05WREC.SY2CLRID;
  SY3REC.XDMCD = SY05WREC.XDMCD;

  SY05SAE();



end // end SY05SBC

// retrieve style data
Function SY05SBD()


       /* ***************************************/
       /* *  retrieve just the style data      **/
       /* *                                    **/
       /* ***************************************/

  SY1REC.SY1STNBR = SY05WREC.SY1STNBR;
  SY1REC.XGPCD = SY05WREC.XGPCD;

  set SQLCA empty;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    move SY1REC to SY05M001 withV60Compat;
    SY05SBE(); /* retrieve inq. for screen 1*/
    move SY1REC to SY05M002 withV60Compat;
    SY05SBF(); /* retrieve inq. for screen 2*/
    SY05SAA(); /* validate gpc code*/
    SY05M003.SY1STYNM = SY1REC.SY1STYNM;
    SY05M004.SY1STYNM = SY1REC.SY1STYNM;
    SY05M005.SY1STYNM = SY1REC.SY1STYNM;
    SY05M006.SY1STYNM = SY1REC.SY1STYNM;
    SY05M006.SY1BSTNB = SY1REC.SY1BSTNB;
    SYWREC.SYWCHGTM = SY1REC.ZZZCHGTM;
    SY05WREC.SY05WCHH = SYWREC.SYWCHGHH;
    SY05WREC.SY05WCMM = SYWREC.SYWCHGMM;
    SY05WREC.SY05WFIL = ":";
    SY05M001.SY05MTIM = SY05WREC.SY05WTIM;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY05M001.SY1STNBR cursor, bold;
      set SY05M002.SY1STNBR cursor, bold;
      set SY05M003.SY1STNBR cursor, bold;
      set SY05M004.SY1STNBR cursor, bold;
      set SY05M005.SY1STNBR cursor, bold;
      set SY05M006.SY1STNBR cursor, bold;
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY05SBD  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error....*/
      set SY05M001.SY1STNBR cursor, bold;
      exit stack;
    end
  end


end // end SY05SBD

// retrieve style codes screen 1
Function SY05SBE()



       /* ******************************************/
       /* *   GET CODE DESC. FOR STYLE INQUIRY    **/
       /* *   SCREEN SY05M001.                    **/
       /* *                                       **/
       /* ******************************************/

       /* ******************************************/
       /* *  retrieve finished goods desc.        **/
       /* ******************************************/

  if (SY05M001.SY1FNSHG == "1")
    SY05M001.SY05M-FNSHG-DESC = "FINISHED";
  else
    if (SY05M001.SY1FNSHG == "2")
      SY05M001.SY05M-FNSHG-DESC = "RAW MATL";
    else
      if (SY05M001.SY1FNSHG == "3")
        SY05M001.SY05M-FNSHG-DESC = "DUAL USE";
      else
        if (SY05M001.SY1FNSHG == "4")
          SY05M001.SY05M-FNSHG-DESC = "UNASSEMBLED";
        else
          if (SY05M001.SY1FNSHG == "0")
            SY05M001.SY05M-FNSHG-DESC = "N/A";
          else
            SY05M001.SY05M-FNSHG-DESC = " ";
          end
        end
      end
    end
  end

       /* ******************************************/
       /* *  retrieve construction code desc.     **/
       /* ******************************************/

  SY05SCL();


       /* ******************************************/
       /* *  retrieve special feature code desc.  **/
       /* ******************************************/

  SY05SBH();


       /* ******************************************/
       /* *  retrieve silhouette code desc.       **/
       /* ******************************************/


  SY05SBO();

       /* ******************************************/
       /* *  retrieve sport activity code desc.   **/
       /* ******************************************/

  SY05SBP();

       /* ******************************************/
       /* *  retrieve body type code desc.        **/
       /* ******************************************/

  SY05SBQ();

       /* ******************************************/
       /* *  retrieve family code desc.           **/
       /* ******************************************/

  SY05SBR();


       /* ******************************************/
       /* *  retrieve gender code desc.           **/
       /* ******************************************/

  SY05SBS();


       /* ******************************************/
       /* *  retrieve gender age code desc.       **/
       /* ******************************************/

  SY05SBT();

       /* ******************************************/
       /* *  retrieve uom age code desc.          **/
       /* ******************************************/

  SY05SBU();

       /* ******************************************/
       /* *  retrieve brand code desc.            **/
       /* ******************************************/

  SY05SCN();

end // end SY05SBE

// retrieve style codes screen 2
Function SY05SBF()



       /* ******************************************/
       /* *   GET CODE DESC. FOR STYLE INQUIRY    **/
       /* *   SCREEN SY05M002.                    **/
       /* *                                       **/
       /* ******************************************/


       /* ******************************************/
       /* *   retrieve material conetent lower cd.**/
       /* ******************************************/

  SY05SCG();

       /* ******************************************/
       /* *  retrieve quota category #2 code desc.**/
       /* ******************************************/

  SY05SCH();

       /* ******************************************/
       /* *  retrieve quota category #1 code desc.**/
       /* ******************************************/

  SY05SCI();

       /* ******************************************/
       /* *  retrieve forcaster description       **/
       /* ******************************************/

  SY05SCC();

       /* ******************************************/
       /* *  retrieve style-group description     **/
       /* ******************************************/

  SY05SAS();

       /* ******************************************/
       /* *  retrieve blank-style description     **/
       /* ******************************************/

  SY05SAR();

       /* ******************************************/
       /* *  retrieve size scale control desc.    **/
       /* ******************************************/

  SY05SCJ();

       /* ******************************************/
       /* *  retrieve cost category code desc.    **/
       /* ******************************************/

  SY05SCK();

       /* ******************************************/
       /* *  retrieve royalty code desc.          **/
       /* ******************************************/

  SY05SCM();

       /* ******************************************/
       /* *  retrieve footwear tooling data       **/
       /* ******************************************/

  if (SY05M002.XGPCD == "02") /* If footwear*/
    SY05100(); /* Load tooling*/
  else /* Blank out screen fields*/
    SY05M002.TOOL-CMPNT-TYP-CD[1] = " ";
    SY05M002.TOOL-CMPNT-TYP-CD[2] = " ";
    SY05M002.TOOL-CMPNT-TYP-CD[3] = " ";
    SY05M002.TOOL-CMPNT-NAME[1] = " ";
    SY05M002.TOOL-CMPNT-NAME[2] = " ";
    SY05M002.TOOL-CMPNT-NAME[3] = " ";
  end

end // end SY05SBF

// get warehouse code desc.
Function SY05SBG()

       /* ******************************************/
       /* *   GET ALL SIX WAREHOUSE CODES         **/
       /* ******************************************/


  SYWREC.SYWINDEX = 1;

  while (SYWREC.SYWINDEX <= 6)
    if (SY05M006.XWHCD[SYWINDEX] == " ")
      SY05M006.XWHSABRV[SYWINDEX] = " ";
    else
      if (SY05M006.XWHCD[SYWINDEX] in XWHTBL.XWHCD)
        SY05M006.XWHSABRV[SYWINDEX] = XWHTBL.XWHSABRV[sysVar.arrayIndex];
      else
        SY05M006.XWHSABRV[SYWINDEX] = "INVALD";
      end
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end
end // end SY05SBG

// get special feat. code & desc.
Function SY05SBH()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE ALL SPECIAL FEATURE CODES.  **/
       /* *                                       **/
       /* ******************************************/

   /* verify the 6th special feature code*/

  SY05SBI();

   /* verify the 5th special feature code*/

  SY05SBJ();

   /* verify the 4th special feature code*/

  SY05SBK();

   /* verify the 3rd special feature code*/

  SY05SBL();

   /* verify the 2nd special feature code*/

  SY05SBM();

   /* verify the 1st special feature code*/

  SY05SBN();
end // end SY05SBH

// get special feat. code #6
Function SY05SBI()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 6TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY05M001.XFCCD6 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY05M001.XFCCD6 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      SY05M001.SY05MFC6 = XFCTBL.XFCDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.SY05MFC6 = "INVALID";


end // end SY05SBI

// get special feat. code #5
Function SY05SBJ()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 5TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY05M001.XFCCD5 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY05M001.XFCCD5 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      SY05M001.SY05MFC5 = XFCTBL.XFCDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.SY05MFC5 = "INVALID";




end // end SY05SBJ

// get special feat. code #4
Function SY05SBK()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 4TH SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/


  if (SY05M001.XFCCD4 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY05M001.XFCCD4 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      SY05M001.SY05MFC4 = XFCTBL.XFCDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.SY05MFC4 = "INVALID";



end // end SY05SBK

// get special feat. code #3
Function SY05SBL()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 3RD SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/


  if (SY05M001.XFCCD3 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY05M001.XFCCD3 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      SY05M001.SY05MFC3 = XFCTBL.XFCDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.SY05MFC3 = "INVALID";




end // end SY05SBL

// get special feat. code #2
Function SY05SBM()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 2nd SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY05M001.XFCCD2 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY05M001.XFCCD2 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      SY05M001.SY05MFC2 = XFCTBL.XFCDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.SY05MFC2 = "INVALID";





end // end SY05SBM

// get special feat. code #1
Function SY05SBN()

       /* ******************************************/
       /* *   VERIFY CODE AND GET DESCRIPTION     **/
       /* *   FOR THE 1ST SPECIAL FEATURE CODE.   **/
       /* *                                       **/
       /* ******************************************/

  if (SY05M001.XFCCD1 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XFCTBL.XFCCD[SYWINDEX] != "99")
    if (SY05M001.XFCCD1 == XFCTBL.XFCCD[SYWINDEX]
     && SYWREC.XGPCD == XFCTBL.XGPCD[SYWINDEX])
      SY05M001.SY05MFC1 = XFCTBL.XFCDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.SY05MFC1 = "INVALID";


end // end SY05SBN

// get silhouette code & desc.
Function SY05SBO()

       /* ******************************************/
       /* * VERIFY SILHOUETTE CODE AND GET        **/
       /* * THE DESC.                             **/
       /* ******************************************/

  if (SY05M001.XSUCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XSUTBL.XSUCD[SYWINDEX] != "99")
    if (SY05M001.XSUCD == XSUTBL.XSUCD[SYWINDEX]
     && SYWREC.XGPCD == XSUTBL.XGPCD[SYWINDEX])
      if (XSUTBL.XXXSTAT[SYWINDEX] == "A")
        SY05M001.XSUDESC = XSUTBL.XSUDESC[SYWINDEX];
        return;
      else
        SY05M001.XSUDESC = XSUTBL.XSUDESC[SYWINDEX];
        return;
      end
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.XSUDESC = "INVALID";


end // end SY05SBO

// get sport act. code & desc.
Function SY05SBP()

       /* ******************************************/
       /* *  VERIFY SPORT ACTIVITY CODE AND       **/
       /* *  THE DESC.                            **/
       /* ******************************************/


  if (SY05M001.XSPCD == " ")
    return;
  else
    /* next sentence*/
  end


  if (SY05M001.XSPCD in XSPTBL.XSPCD)
    if (XSPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY05M001.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
    else
      SY05M001.XSPDESC = XSPTBL.XSPDESC[sysVar.arrayIndex];
    end
  else
    SY05M001.XSPDESC = "INVALID";
  end

end // end SY05SBP

// get body type code & desc.
Function SY05SBQ()

       /* ******************************************/
       /* * VERIFY BODY TYPE CODE AND GET         **/
       /* * THE DESC.                             **/
       /* ******************************************/


  if (SY05M001.XBTCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XBTTBL.XBTCD[SYWINDEX] != "99")
    if (SY05M001.XBTCD == XBTTBL.XBTCD[SYWINDEX]
     && SYWREC.XGPCD == XBTTBL.XGPCD[SYWINDEX])
      SY05M001.XBTDESC = XBTTBL.XBTDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.XBTDESC = "INVALID";


end // end SY05SBQ

// get family code & desc.
Function SY05SBR()

       /* ******************************************/
       /* *  VERIFY FAMILY CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY05M001.XFMCD == " ")
    return;
  else
    /* next sentence*/
  end


  if (SY05M001.XFMCD in XFMTBL.XFMCD)
    SY05M001.XFMDESC = XFMTBL.XFMDESC[sysVar.arrayIndex];
  else
    SY05M001.XFMDESC = "INVALID";
  end

end // end SY05SBR

// get gender code desc.
Function SY05SBS()

       /* ******************************************/
       /* *  VERIFY GENDER CODE AND GET DESC.     **/
       /* ******************************************/

  if (SY05M001.XGCCD == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY05M001.XGCCD in XGCTBL.XGCCD)
    SY05M001.XGCDESC = XGCTBL.XGCDESC[sysVar.arrayIndex];
  else
    SY05M001.XGCDESC = "INVALID";
  end

end // end SY05SBS

// get gender age code desc.
Function SY05SBT()

        /* ******************************************/
        /* * VERIFY GENDER AGE CODE AND GET GENDER **/
        /* * AGE DESC.                             **/
        /* ******************************************/


  if (SY05M001.XGACD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XGATBL.XGACD[SYWINDEX] != "99")
    if (SY05M001.XGACD == XGATBL.XGACD[SYWINDEX]
     && SYWREC.XGPCD == XGATBL.XGPCD[SYWINDEX])
      SY05M001.XGADESC = XGATBL.XGADESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.XGADESC = "INVALID";


end // end SY05SBT

// get uom code desc.
Function SY05SBU()

       /* ***************************************/
       /* *  verify uom code and get uom       **/
       /* *  description.                      **/
       /* ***************************************/

  if (SY05M001.XUMCD == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY05M001.XUMCD in XUMTBL.XUMCD)
    SY05M001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  else
    SY05M001.XUMDESC = "INVALID";
  end
end // end SY05SBU

// set all screens to clear
Function SY05SBW()


       /* ***************************************/
       /* *   set all screens to clear         **/
       /* ***************************************/


  set SY05M001 initial;
  set SY05M002 initial;
  set SY05M003 initial;
  set SY05M004 initial;
  set SY05M005 initial;
  set SY05M006 initial;
  set SY05M007 initial;


  SY05M001.XGPCD = SY05WREC.XGPCD;
  SY05M002.XGPCD = SY05WREC.XGPCD;
  SY05M003.XGPCD = SY05WREC.XGPCD;
  SY05M004.XGPCD = SY05WREC.XGPCD;
  SY05M005.XGPCD = SY05WREC.XGPCD;
  SY05M006.XGPCD = SY05WREC.XGPCD;
  SY05M007.XGPCD = SY05WREC.XGPCD;

  SY05M001.SY1STNBR = SY05WREC.SY1STNBR;
  SY05M002.SY1STNBR = SY05WREC.SY1STNBR;
  SY05M003.SY1STNBR = SY05WREC.SY1STNBR;
  SY05M004.SY1STNBR = SY05WREC.SY1STNBR;
  SY05M005.SY1STNBR = SY05WREC.SY1STNBR;
  SY05M006.SY1STNBR = SY05WREC.SY1STNBR;
  SY05M007.SY1STNBR = SY05WREC.SY1STNBR;

  SY05M001.SY2CLRID = SY05WREC.SY2CLRID;
  SY05M002.SY2CLRID = SY05WREC.SY2CLRID;
  SY05M004.SY2CLRID = SY05WREC.SY2CLRID;
  SY05M005.SY2CLRID = SY05WREC.SY2CLRID;
  SY05M006.SY2CLRID = SY05WREC.SY2CLRID;
  SY05M007.SY2CLRID = SY05WREC.SY2CLRID;

  SY05M001.XDMCD = SY05WREC.XDMCD;
  SY05M002.XDMCD = SY05WREC.XDMCD;
  SY05M004.XDMCD = SY05WREC.XDMCD;
  SY05M005.XDMCD = SY05WREC.XDMCD;
  SY05M006.XDMCD = SY05WREC.XDMCD;
  SY05M007.XDMCD = SY05WREC.XDMCD;

  if (SY05WREC.SY05WSUGGREQ == " ")
    SY05WREC.SY05WSUGGREQ = "N";
  end

  SY05M007.SUGGREQ = SY05WREC.SY05WSUGGREQ;

  if (SY05WREC.SY05WCOOREQ == " ")
    SY05WREC.SY05WCOOREQ = "N";
  end

  SY05M007.COOREQ = SY05WREC.SY05WCOOREQ;

  if (SY05WREC.SY05WSETREQ == " ")
    SY05WREC.SY05WSETREQ = "N";
  end

  SY05M007.SETREQ = SY05WREC.SY05WSETREQ;

  SY05M003.SY05MXLC = SY05WCOL.SY05MXLC;



end // end SY05SBW

// check pf keys
Function SY05SBX()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is enter
     && SY05M001.CATOAP != " ")
      COMMAREA.CATOAP = SY05M001.CATOAP;
      COMMAREA.CAITEM = SY05M001.CAITEM;
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      SY05M001.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M001 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        COMMAREA.CAUSERA = " ";
        XSPF1();
        SY05M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3)
          COMMAREA.CAUSERA = " ";
          SY05SEG(); /* transfer to sy0i application*/
          SY05M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            COMMAREA.CAUSERA = " ";
            XSPF4(); /* transfer to main menu*/
            SY05M001.SYMSCMSG = COMMAREA.CAMSG;
            set SY05M001 alarm;
            converseLib.validationFailed(1);
            exit stack;
          else
            if (converseVar.eventKey is enter
             || converseVar.eventKey is pf14
             || converseVar.eventKey is pf15
             || converseVar.eventKey is pf16
             || converseVar.eventKey is pf17
             || converseVar.eventKey is pf18)
              return;
            else
              converseLib.validationFailed(19);
              exit stack;
            end
          end
        end
      end
    end
  end




end // end SY05SBX

// check if key data has changed
Function SY05SCA()


       /* ***************************************/
       /* *  if screen key changed get all     **/
       /* *  product records that are needed.  **/
       /* ***************************************/


  if (SY05M002.SY1STNBR != SY05WREC.SY1STNBR
   || SY05M002.XGPCD != SY05WREC.XGPCD)
    SY05WREC.XGPCD = SY05M002.XGPCD;
    SY05WREC.SY1STNBR = SY05M002.SY1STNBR;
    SY05SAA(); /* Get GPC Desc*/
    if (SY05M002.SY2CLRID == " ")
      SY05WREC.SY2CLRID = SY05M002.SY2CLRID;
      SY05WREC.XDMCD = SY05M002.XDMCD;
      SY05SBW(); /* clear all screens*/
      SY05SBD(); /* retrieve just style data*/
    else
      SY05WREC.SY2CLRID = SY05M002.SY2CLRID;
      SY05WREC.XDMCD = SY05M002.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    end
  else
    if (SY05M002.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M002.XGPCD != SY05WREC.XGPCD
     || SY05M002.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M002.XDMCD != SY05WREC.XDMCD)
      SY05WREC.SY1STNBR = SY05M002.SY1STNBR;
      SY05WREC.XGPCD = SY05M002.XGPCD;
      SY05WREC.SY2CLRID = SY05M002.SY2CLRID;
      SY05WREC.XDMCD = SY05M002.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    else
      /* next sentence,  nothing has changed*/
    end
  end



end // end SY05SCA

// validata required screen field
Function SY05SCB()


       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/


  if (SY05M002.SY1STNBR == " ")
    set SY05M002.SY1STNBR cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M002.XGPCD == " ")
    set SY05M002.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M002.XDMCD == " ")
    if (SY05M002.SY2CLRID != " ")
      set SY05M002.XDMCD cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  else
    /* next sentence*/
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end


end // end SY05SCB

// Get Forcaster Code
Function SY05SCC()

   /* Forcaster Code*/

  if (SY05M002.PG1FCTCD != "  ")
    PG1REC.XGPCD = SY05M002.XGPCD;
    PG1REC.PG1SC4CD = " ";
    PG1REC.PG1FCTCD = SY05M002.PG1FCTCD;
    call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY05M002.SY05MFNM = PG1REC.XXXUSER;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        SY05M002.SY05MFNM = "UNKNOWN";
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY05";
        TA1REC.TA1LOCAT[1] = "S";
        TA1REC.TA1LOCAT[2] = "SY0BSCC";
        TA1REC.TA1MAP = "SY05M002";
        TA1REC.TA1DBASE = "DPRODG";
        TA1REC.TA1TBLVU = "VSUSER01";
        TA1REC.TA1TBLKE = PG1REC.PG1FCTCD;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(20);
        SY05M002.SY05MFNM = "UNKNOWN";
      end
    end
  else
    SY05M002.SY05MFNM = " ";
  end

end // end SY05SCC

// get mat. lower content code
Function SY05SCG()

       /* ******************************************/
       /* *  GET MATERIAL CONTENT LOWER CODE      **/
       /* *  AND THE DESCRIPTION.                 **/
       /* *  NOTE: This are now called OUTSOLE &  **/
       /* *        MIDSOLE. There are 4 codes.    **/
       /* ******************************************/

  if (SY05M002.XMLCD[1] == " ")
    SY05M002.XMLDESC[1] = " ";
  else
    if (SY05M002.XMLCD[1] in XMLTBL.XMLCD)
      SY05M002.XMLDESC[1] = XMLTBL.XMLDESC[sysVar.arrayIndex];
    else
      SY05M002.XMLDESC[1] = "INVALID";
    end
  end

  if (SY05M002.XMLCD[2] == " ")
    SY05M002.XMLDESC[2] = " ";
  else
    if (SY05M002.XMLCD[2] in XMLTBL.XMLCD)
      SY05M002.XMLDESC[2] = XMLTBL.XMLDESC[sysVar.arrayIndex];
    else
      SY05M002.XMLDESC[2] = "INVALID";
    end
  end

  if (SY05M002.XMLCD[3] == " ")
    SY05M002.XMLDESC[3] = " ";
  else
    if (SY05M002.XMLCD[3] in XMLTBL.XMLCD)
      SY05M002.XMLDESC[3] = XMLTBL.XMLDESC[sysVar.arrayIndex];
    else
      SY05M002.XMLDESC[3] = "INVALID";
    end
  end

  if (SY05M002.XMLCD[4] == " ")
    SY05M002.XMLDESC[4] = " ";
  else
    if (SY05M002.XMLCD[4] in XMLTBL.XMLCD)
      SY05M002.XMLDESC[4] = XMLTBL.XMLDESC[sysVar.arrayIndex];
    else
      SY05M002.XMLDESC[4] = "INVALID";
    end
  end

end // end SY05SCG

// get quota cat. #2 code & desc.
Function SY05SCH()
       /* ******************************************/
       /* *   VERIFY QUOTA CAT. #2 CODE AND GET   **/
       /* *   THE DESCRIPTION.                    **/
       /* *    sy01mqt2 = quota cat desc. field.  **/
       /* ******************************************/

  if (SY05M002.XQTCD2 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XQTTBL.XQTCD[SYWINDEX] != "999")
    if (SY05M002.XQTCD2 == XQTTBL.XQTCD[SYWINDEX]
     && SYWREC.XGPCD == XQTTBL.XGPCD[SYWINDEX])
      SY05M002.SY05MQT2[1] = XQTTBL.XQTDESC1[SYWINDEX];
      SY05M002.SY05MQT2[2] = XQTTBL.XQTDESC2[SYWINDEX];
      return;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M002.SY05MQT2[1] = "INVALID";
  SY05M002.SY05MQT2[2] = " ";


end // end SY05SCH

// get quota cat. #1 code & desc.
Function SY05SCI()

       /* ******************************************/
       /* *   VERIFY QUOTA CAT. #1 CODE AND GET   **/
       /* *   THE DESCRIPTION.                    **/
       /* *    sy01mqt2 = quota cat desc. field.  **/
       /* ******************************************/

  if (SY05M002.XQTCD1 == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XQTTBL.XQTCD[SYWINDEX] != "999")
    if (SY05M002.XQTCD1 == XQTTBL.XQTCD[SYWINDEX]
     && SYWREC.XGPCD == XQTTBL.XGPCD[SYWINDEX])
      SY05M002.SY05MQT1[1] = XQTTBL.XQTDESC1[SYWINDEX];
      SY05M002.SY05MQT1[2] = XQTTBL.XQTDESC2[SYWINDEX];
      return;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M002.SY05MQT1[1] = "INVALID";
  SY05M002.SY05MQT1[2] = " ";

end // end SY05SCI

// get size scale code desc.
Function SY05SCJ()

       /* ******************************************/
       /* * VERIFY SIZE SCALE CODE AND            **/
       /* * GET THE SIZE SCALE DESC.              **/
       /* ******************************************/

  if (SY05M002.SY4SZSCL == " ")
    set SY05M002.SY4SZSCL cursor, bold;
    converseLib.validationFailed(40); /* required field*/
    return;
  else
    /* next sentence*/
  end


  SY4REC.SY4SZSCL = SY05M002.SY4SZSCL;
  set SQLCA empty;

  call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M002.SY4ZDESC = SY4REC.SY4ZDESC;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY05M002.SY4ZDESC = "INVALID";
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY05SCJ  ";
      TA1REC.TA1LOCAT[3] = "IO0040   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M005";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSCALE01";
      TA1TBLKE = SY4REC.SY4SZSCL;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(53); /* size scale record error*/
      return;
    end
  end


end // end SY05SCJ

// get cost category code desc.
Function SY05SCK()

       /* ******************************************/
       /* * VERIFY COST CAT. CODE AND GET         **/
       /* * COST CAT. CODE DESC.                  **/
       /* ******************************************/


  if (SY05M002.XCWCD == " ")
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XCWTBL.XCWCD[SYWINDEX] != "999")
    if (SY05M002.XCWCD == XCWTBL.XCWCD[SYWINDEX]
     && SYWREC.XGPCD == XCWTBL.XGPCD[SYWINDEX])
      SY05M002.XCWABRV = XCWTBL.XCWABRV[SYWINDEX];
      return;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M002.XCWABRV = "INVALID";


end // end SY05SCK

// get con. code & desc.
Function SY05SCL()

       /* ******************************************/
       /* * VERIFY CONSTRUCTION CODE AND GET      **/
       /* * THE DESC.                             **/
       /* ******************************************/

  if (SY05M001.XCNCD == " ")
    SY05M001.XCNDESC = " ";
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XCNTBL.XCNCD[SYWINDEX] != "99")
    if (SY05M001.XCNCD == XCNTBL.XCNCD[SYWINDEX]
     && SYWREC.XGPCD == XCNTBL.XGPCD[SYWINDEX])
      SY05M001.XCNDESC = XCNTBL.XCNDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M001.XCNDESC = "INVALID";


end // end SY05SCL

// get royalty code & desc.
Function SY05SCM()

       /* ******************************************/
       /* * VERIFY ROYALTY CODE AND GET           **/
       /* * THE DESC.                             **/
       /* ******************************************/

  if (SY05M002.XRYCD == " ")
    return;
  else
    /* next sentence*/
  end

  SYWREC.SYWINDEX = 1;

  while (XRYTBL.XRYCD[SYWINDEX] != "99")
    if (SY05M002.XRYCD == XRYTBL.XRYCD[SYWINDEX]
     && SYWREC.XGPCD == XRYTBL.XGPCD[SYWINDEX])
      SY05M002.XRYDESC = XRYTBL.XRYDESC[SYWINDEX];
      return;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY05M002.XRYDESC = "INVALID";


end // end SY05SCM

// get brand code
Function SY05SCN()

       /* ******************************************/
       /* *  GET brand description                **/
       /* ******************************************/

  if (SY05M001.XBCCD == " ")
    SY05M001.XBCDESC = " ";
    return;
  end

  if (SY05M001.XBCCD in XBCTBL.XBCCD)
    SY05M001.XBCDESC = XBCTBL.XBCDESC[sysVar.arrayIndex];
  else
    SY05M001.XBCDESC = "INVALID";
  end

end // end SY05SCN

// check pf keys
Function SY05SCX()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is enter
     && SY05M002.CATOAP != " ")
      COMMAREA.CATOAP = SY05M002.CATOAP;
      COMMAREA.CAITEM = SY05M002.CAITEM;
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      SY05M002.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M002 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        COMMAREA.CAUSERA = " ";
        XSPF1();
        SY05M002.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M002 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3)
          COMMAREA.CAUSERA = " ";
          SY05SEG(); /* transfer to sy0i application*/
          SY05M002.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M002 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            COMMAREA.CAUSERA = " ";
            XSPF4(); /* transfer to main menu*/
            SY05M002.SYMSCMSG = COMMAREA.CAMSG;
            set SY05M002 alarm;
            converseLib.validationFailed(1);
            exit stack;
          else
            if (converseVar.eventKey is enter
             || converseVar.eventKey is pf13
             || converseVar.eventKey is pf15
             || converseVar.eventKey is pf16
             || converseVar.eventKey is pf17
             || converseVar.eventKey is pf18)
              return;
            else
              exit stack;
            end
          end
        end
      end
    end
  end




end // end SY05SCX

// check pf keys
Function SY05SDA()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pf1)
      COMMAREA.CAUSERA = " ";
      XSPF1();
      SY05M003.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M003 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CAUSERA = " ";
        SY05SEG(); /* transfer to sy0i application*/
        SY05M003.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M003 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf4)
          COMMAREA.CAUSERA = " ";
          XSPF4(); /* transfer to main menu*/
          SY05M003.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M003 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is enter)
            return;
          else
            exit stack;
          end
        end
      end
    end
  end




end // end SY05SDA

// validate screen fields
Function SY05SDB()



       /* ***************************************/
       /* *  validate screen fields            **/
       /* *                                    **/
       /* ***************************************/

  if (SY05M003.XGPCD == " ")
    set SY05M003.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    set SY05M003.XGPCD normal;
  end


  if (SY05M003.SY05MXLC == " ")
    SY05M003.SY05MXLD = " ";
  else
    if (SY05M003.SY05MXLC in XLCTBL.XLCCD)
      SY05M003.SY05MXLD = XLCTBL.XLCDESC[sysVar.arrayIndex];
    else
      SY05M003.SY05MXLD = " ";
      converseLib.validationFailed(3); /* Invalid Code*/
      set SY05M003.SY05MXLC cursor, bold;
    end
  end


  if (SY05M003.SY1STNBR == " "
   && SY05M003.PG4STNBR == " ")
    set SY05M003.SY1STNBR cursor, bold;
    converseLib.validationFailed(40);
  else
    set SY05M003.SY1STNBR normal;
  end


  if (SY05M003.SY1STNBR != " "
   && SY05M003.PG4STNBR != " ")
    set SY05M003.SY1STNBR cursor, bold;
    set SY05M003.PG4STNBR bold;
    converseLib.validationFailed(173);
  else
    set SY05M003.SY1STNBR normal;
  end


  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end



end // end SY05SDB

// retrieve all colors
Function SY05SDD()


  SY05WREC.XGPCD = SY05M003.XGPCD;
  SY05WREC.SY1STNBR = SY05M003.SY1STNBR;
  SY05WREC.SY2CLRID = " ";
  SY05WREC.XDMCD = "00";
  SY05SBW(); /* clear all screens*/
  SY05SAA(); /* validate gpc code*/
  SY05SBD(); /* check if style exists.*/

       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY2REC empty;
  set SY05WCOL empty;

  SY2REC.XGPCD = SY05M003.XGPCD;
  SY2REC.SY1STNBR = SY05M003.SY1STNBR;


  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05WCOL.SY05WCDX = 1;
    while (SQLCA.VAGen_SQLCODE == 0
     && converseVar.validationMsgNum == 0)
      SY05SDF(); /* select the next color record*/
    end
    SY05SDG(); /* close selected set*/
    SY05WCOL.SY05WCCT = SY05WCOL.SY05WCDX;
    SY05WCOL.SY05WCCT = SY05WCOL.SY05WCCT - 1;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05   ";
    TA1REC.TA1LOCAT[1] = "SS      ";
    TA1REC.TA1LOCAT[2] = "SY05SDD ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY05M003";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY05M003.SY1STNBR cursor, bold;
    exit stack;
  end





end // end SY05SDD

// build the color select screen
Function SY05SDE()


       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/

  SY05WCOL.SY05WCDX = 1; /* reset index to 1*/
  SY05WCOL.SY05WSDX = 1;
  SY05WCOL.SY05WTOP = 1;

  while (SY05WCOL.SY05WSDX <= 12
   && SY05WCOL.SY2CLRID[SY05WCDX] != " ")
    if (SY05M003.PG4STNBR != " ")
      SY05SDM(); /* build dev. line*/
    else
      SY05SDN(); /* build style line*/
    end
    SY05WCOL.SY05WSDX = SY05WCOL.SY05WSDX + 1;
    SY05WCOL.SY05WTOP = SY05WCOL.SY05WTOP + 1;
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end


end // end SY05SDE

// select the next color record
Function SY05SDF()

       /* ******************************************/
       /* *  select the next color record.        **/
       /* ******************************************/


  call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05SDH(); /* move sy2rec to working storage field*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "SN      ";
      TA1REC.TA1LOCAT[2] = "SY05SDF ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M003";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      SY05SDG(); /* close selected set*/
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      set SY05M003.SY1STNBR cursor, bold;
      return;
    end
  end


end // end SY05SDF

// close selected color set
Function SY05SDG()


       /* ******************************************/
       /* *  close color/dim selected set         **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05   ";
    TA1REC.TA1LOCAT[1] = "CS      ";
    TA1REC.TA1LOCAT[2] = "SY04SDG ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY05M003";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY05M003.SY1STNBR cursor, bold;
    exit stack;
  end


end // end SY05SDG

// move sy2rec to working storage
Function SY05SDH()


       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/


  if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT1)
    SY05SDI(); /* move to work instorage*/
  else
    if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT2)
      SY05SDJ(); /* move to work instorage*/
    else
      if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT3)
        SY05SDK(); /* move to work instorage*/
      else
        if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT4)
          SY05SDL(); /* move to work instorage*/
        else
          return;
        end
      end
    end
  end


end // end SY05SDH

// move xlccd1 to working storage
Function SY05SDI()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY05M003.SY05MXLC == " "
   || SY05M003.SY05MXLC == SY2REC.XLCCD1)
    SY05WCOL.SY2CLRID[SY05WCDX] = SY2REC.SY2CLRID;
    SY05WCOL.SY2CLRAB[SY05WCDX] = SY2REC.SY2CLRAB;
    SY05WCOL.XDMCD[SY05WCDX] = SY2REC.XDMCD;
    SY05WCOL.XLCCD[SY05WCDX] = SY2REC.XLCCD1;
    if (SY05M003.PG4STNBR != " ")
      SY05WCOL.SY1STNBR[SY05WCDX] = SY2REC.SY1STNBR;
      SY05WCOL.PG9CLRNB[SY05WCDX] = VSYDVX02.PG-STYDV-COLR-NBR;
    else
      SY05WCOL.SY1STNBR[SY05WCDX] = " ";
      SY05WCOL.PG9CLRNB[SY05WCDX] = 0;
    end
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end
end // end SY05SDI

// move xlccd2 to working storage
Function SY05SDJ()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY05M003.SY05MXLC == " "
   || SY05M003.SY05MXLC == SY2REC.XLCCD2)
    SY05WCOL.SY2CLRID[SY05WCDX] = SY2REC.SY2CLRID;
    SY05WCOL.SY2CLRAB[SY05WCDX] = SY2REC.SY2CLRAB;
    SY05WCOL.XDMCD[SY05WCDX] = SY2REC.XDMCD;
    SY05WCOL.XLCCD[SY05WCDX] = SY2REC.XLCCD2;
    if (SY05M003.PG4STNBR != " ")
      SY05WCOL.SY1STNBR[SY05WCDX] = SY2REC.SY1STNBR;
      SY05WCOL.PG9CLRNB[SY05WCDX] = VSYDVX02.PG-STYDV-COLR-NBR;
    else
      SY05WCOL.SY1STNBR[SY05WCDX] = " ";
      SY05WCOL.PG9CLRNB[SY05WCDX] = 0;
    end
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end
end // end SY05SDJ

// move xlccd3 to working storage
Function SY05SDK()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY05M003.SY05MXLC == " "
   || SY05M003.SY05MXLC == SY2REC.XLCCD3)
    SY05WCOL.SY2CLRID[SY05WCDX] = SY2REC.SY2CLRID;
    SY05WCOL.SY2CLRAB[SY05WCDX] = SY2REC.SY2CLRAB;
    SY05WCOL.XDMCD[SY05WCDX] = SY2REC.XDMCD;
    SY05WCOL.XLCCD[SY05WCDX] = SY2REC.XLCCD3;
    if (SY05M003.PG4STNBR != " ")
      SY05WCOL.SY1STNBR[SY05WCDX] = SY2REC.SY1STNBR;
      SY05WCOL.PG9CLRNB[SY05WCDX] = VSYDVX02.PG-STYDV-COLR-NBR;
    else
      SY05WCOL.SY1STNBR[SY05WCDX] = " ";
      SY05WCOL.PG9CLRNB[SY05WCDX] = 0;
    end
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end
end // end SY05SDK

// move xlccd4 to working storage
Function SY05SDL()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY05M003.SY05MXLC == " "
   || SY05M003.SY05MXLC == SY2REC.XLCCD4)
    SY05WCOL.SY2CLRID[SY05WCDX] = SY2REC.SY2CLRID;
    SY05WCOL.SY2CLRAB[SY05WCDX] = SY2REC.SY2CLRAB;
    SY05WCOL.XDMCD[SY05WCDX] = SY2REC.XDMCD;
    SY05WCOL.XLCCD[SY05WCDX] = SY2REC.XLCCD4;
    if (SY05M003.PG4STNBR != " ")
      SY05WCOL.SY1STNBR[SY05WCDX] = SY2REC.SY1STNBR;
      SY05WCOL.PG9CLRNB[SY05WCDX] = VSYDVX02.PG-STYDV-COLR-NBR;
    else
      SY05WCOL.SY1STNBR[SY05WCDX] = " ";
      SY05WCOL.PG9CLRNB[SY05WCDX] = 0;
    end
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end
end // end SY05SDL

// Format Data line
Function SY05SDM()

       /* ***************************************/
       /* * Build display line for screen.     **/
       /* ***************************************/

  SY05WCOL.SY05W-HEAD-A = "SEL   STYLE      COLOR             ";
  SY05WCOL.SY05W-HEAD-B = "DIMENSION   VAR   LIFE CYCLE      ";
  SY05M003.SY05M-HEADING[1] = SY05WCOL.SY05M-HEADING;
  SY05WCOL.SY05W-HEAD-A = "~~~   ~~~~~~   ~~~~~~~~~~~~~~~~~   ";
  SY05WCOL.SY05W-HEAD-B = "~~~~~~~~~   ~~~   ~~~~~~~~~~      ";
  SY05M003.SY05M-HEADING[2] = SY05WCOL.SY05M-HEADING;
  SY05M003.SY05MSEL[SY05WSDX] = SY05WCOL.SY05WSEL[SY05WCDX];
  SY05WCOL.SY05W-FORMAT-2 = " ";
  SY05WCOL.SY05W-F2-STNBR = SY05WCOL.SY1STNBR[SY05WCDX];
  SY05WCOL.SY05W-F2-CLRID = SY05WCOL.SY2CLRID[SY05WCDX];
  SY05WCOL.SY05W-F2-CLRAB = SY05WCOL.SY2CLRAB[SY05WCDX];
  SY05WCOL.SY05W-F2-XDM = SY05WCOL.XDMCD[SY05WCDX];
  if (SY05WCOL.XDMCD[SY05WCDX] in XDMTBL.XDMCD)
    SY05WCOL.SY05W-F2-XDMABRV = XDMTBL.XDMABRV[sysVar.arrayIndex];
  else
    SY05WCOL.SY05W-F2-XDMABRV = " ";
  end
  SY05WCOL.SY05W-F2-CLRNB = SY05WCOL.PG9CLRNB[SY05WCDX];
  if (SY05WCOL.SY05W-F2-CLRNB-X[1] == "0"
   && SY05WCOL.SY05W-F2-CLRNB-X[2] == "0")
    SY05WCOL.SY05W-F2-CLRNB-X[1] = " ";
    SY05WCOL.SY05W-F2-CLRNB-X[2] = " ";
  else
    if (SY05WCOL.SY05W-F2-CLRNB-X[1] == "0")
      SY05WCOL.SY05W-F2-CLRNB-X[1] = " ";
    end
  end
  SY05WCOL.SY05W-F2-XLC = SY05WCOL.XLCCD[SY05WCDX];
  if (SY05WCOL.XLCCD[SY05WCDX] in XLCTBL.XLCCD)
    SY05WCOL.SY05W-F2-XLCABRV = XLCTBL.XLCABRV[sysVar.arrayIndex];
  else
    SY05WCOL.SY05W-F2-XLCABRV = " ";
  end
  SY05M003.SY05M-DATA[SY05WSDX] = SY05WCOL.SY05W-FORMAT-2;


end // end SY05SDM

// Format Data line
Function SY05SDN()

       /* ***************************************/
       /* * Build Display line for Screen      **/
       /* ***************************************/

  SY05WCOL.SY05W-HEAD-A = "SEL      COLOR            DIMENSION";
  SY05WCOL.SY05W-HEAD-B = "   LIFE CYCLE                     ";
  SY05M003.SY05M-HEADING[1] = SY05WCOL.SY05M-HEADING;
  SY05WCOL.SY05W-HEAD-A = "~~~   ~~~~~~~~~~~~~~~~~   ~~~~~~~~~";
  SY05WCOL.SY05W-HEAD-B = "   ~~~~~~~~~~~                    ";
  SY05M003.SY05M-HEADING[2] = SY05WCOL.SY05M-HEADING;
  SY05M003.SY05MSEL[SY05WSDX] = SY05WCOL.SY05WSEL[SY05WCDX];
  SY05WCOL.SY05W-FORMAT-1 = " ";
  SY05WCOL.SY05W-F1-CLRID = SY05WCOL.SY2CLRID[SY05WCDX];
  SY05WCOL.SY05W-F1-CLRAB = SY05WCOL.SY2CLRAB[SY05WCDX];
  SY05WCOL.SY05W-F1-XDM = SY05WCOL.XDMCD[SY05WCDX];
  if (SY05WCOL.XDMCD[SY05WCDX] in XDMTBL.XDMCD)
    SY05WCOL.SY05W-F1-XDMABRV = XDMTBL.XDMABRV[sysVar.arrayIndex];
  else
    SY05WCOL.SY05W-F1-XDMABRV = " ";
  end
  SY05WCOL.SY05W-F1-XLC = SY05WCOL.XLCCD[SY05WCDX];
  if (SY05WCOL.XLCCD[SY05WCDX] in XLCTBL.XLCCD)
    SY05WCOL.SY05W-F1-XLCABRV = XLCTBL.XLCABRV[sysVar.arrayIndex];
  else
    SY05WCOL.SY05W-F1-XLCABRV = " ";
  end
  SY05M003.SY05M-DATA[SY05WSDX] = SY05WCOL.SY05W-FORMAT-1;


end // end SY05SDN

// retrieve all colors
Function SY05SDO()


  SY05WREC.XGPCD = SY05M003.XGPCD;
  VSYDVX02.PG-STYDV-NBR = SY05M003.PG4STNBR;
  SY05WREC.SY1STNBR = " ";
  SY05WREC.SY2CLRID = " ";
  SY05WREC.XDMCD = " ";
  SY05SBW(); /* clear all screens*/

       /* ******************************************/
       /* *  GET STYLE DEV XREF RECORDS           **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  set SY2REC empty;
  set SY05WCOL empty;

  SY05SAA(); /* validate gpc code*/

  call "VSYDVX02" ("SS", SQLCA, VSYDVX02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY05M003.PG4STNBR = VSYDVX02.PG-STYDV-NBR;
    SY05WCOL.SY05WCDX = 1;
    while (SQLCA.VAGen_SQLCODE == 0
     && converseVar.validationMsgNum == 0)
      SY05SDP(); /* select the next color record*/
    end
    SY05SDQ(); /* close selected set*/
    SY05WCOL.SY05WCCT = SY05WCOL.SY05WCDX;
    SY05WCOL.SY05WCCT = SY05WCOL.SY05WCCT - 1;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05   ";
    TA1REC.TA1LOCAT[1] = "SS      ";
    TA1REC.TA1LOCAT[2] = "SY05SDO ";
    TA1REC.TA1LOCAT[3] = "VSYDVX02";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY05M003";
    TA1REC.TA1DBASE = "DPRODG";
    TA1REC.TA1TBLVU = "VSYDVX02";
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY05M003.PG4STNBR cursor, bold;
    exit stack;
  end

end // end SY05SDO

// select the next color record
Function SY05SDP()

       /* ******************************************/
       /* *  select the next XREF record.         **/
       /* ******************************************/


  call "VSYDVX02" ("SN", SQLCA, VSYDVX02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY2REC.XGPCD = VSYDVX02.XGP-GPC-CD;
    SY2REC.SY1STNBR = VSYDVX02.SY-STY-NBR;
    SY2REC.SY2CLRID = VSYDVX02.SY-COLR-CD-ID;
    SY2REC.XDMCD = VSYDVX02.XDM-DIM-CD;
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY05SDH(); /* move sy2rec to working storage field*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        SQLCA.VAGen_SQLCODE = 0; /* reset SQLCODE so we continue*/
        return;
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY05   ";
        TA1REC.TA1LOCAT[1] = "N1      ";
        TA1REC.TA1LOCAT[2] = "SY05SDP ";
        TA1REC.TA1LOCAT[3] = "IO0130  ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY05M003";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VCOLOR01";
        move SQLCA to ERRSQLCA withV60Compat;
        SY05SDQ(); /* close selected set*/
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(21); /* color table error*/
        set SY05M003.SY1STNBR cursor, bold;
        return;
      end
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05   ";
      TA1REC.TA1LOCAT[1] = "N1      ";
      TA1REC.TA1LOCAT[2] = "SY05SDP ";
      TA1REC.TA1LOCAT[3] = "VSYDVX02";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M003";
      TA1REC.TA1DBASE = "DPRODG";
      TA1REC.TA1TBLVU = "VSYDVX02";
      move SQLCA to ERRSQLCA withV60Compat;
      SY05SDQ(); /* close selected set*/
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      set SY05M003.SY1STNBR cursor, bold;
      return;
    end
  end


end // end SY05SDP

// close selected color set
Function SY05SDQ()


       /* ******************************************/
       /* *  close xref selected set              **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;

  call "VSYDVX02" ("CS", SQLCA, VSYDVX02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY05   ";
    TA1REC.TA1LOCAT[1] = "CS      ";
    TA1REC.TA1LOCAT[2] = "SY04SDQ ";
    TA1REC.TA1LOCAT[3] = "VSYDVX02";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY05M003";
    TA1REC.TA1DBASE = "DPRODG";
    TA1REC.TA1TBLVU = "VSYDVX02";
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY05M003.PG4STNBR cursor, bold;
    exit stack;
  end


end // end SY05SDQ

// check pf keys
Function SY05SEA()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is pf1)
      COMMAREA.CAUSERA = " ";
      XSPF1();
      SY05M003.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M003 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CAUSERA = " ";
        SY05SEG(); /* transfer to sy0i application*/
        SY05M003.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M003 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf4)
          COMMAREA.CAUSERA = " ";
          XSPF4(); /* transfer to main menu*/
          SY05M003.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M003 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is enter
           || converseVar.eventKey is pf7
           || converseVar.eventKey is pf8)
            return;
          else
            exit stack;
          end
        end
      end
    end
  end




end // end SY05SEA

// process pf7
Function SY05SEB()


       /* ***************************************/
       /* * check to see if the user selected  **/
       /* * a color record                     **/
       /* ***************************************/

  if (SY05WCOL.SY05WCDX < 13)
    converseLib.validationFailed(69);
                                   /* you are at the beginning for scolling*/
    exit stack;
  else
    /* next sentence*/
  end


  SY05SEE(); /* move selected item  to working*/
                                   /* storage*/
  SY05SEF(); /* clear screen contents*/

       /* ***************************************/
       /* *  pf7 scroll backwards from the top **/
       /* *  of the screen.                    **/
       /* ***************************************/

  if (SY05WCOL.SY05WTOP < 12)
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX - SY05WCOL.SY05WTOP;
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX - 11;
  else
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX - 24;
  end

  if (SY05WCOL.SY05WCDX <= 12)
    SY05WCOL.SY05WCDX = 1;
  else
    /* next sentence*/
  end

  SY05WCOL.SY05WSDX = 1;
  SY05WCOL.SY05WTOP = 1;

  while (SY05WCOL.SY05WSDX <= 12
   && SY05WCOL.SY2CLRID[SY05WCDX] != " ")
    if (SY05M003.PG4STNBR != " ")
      SY05SDM(); /* build dev screen*/
    else
      SY05SDN(); /* build style screen*/
    end
    SY05WCOL.SY05WSDX = SY05WCOL.SY05WSDX + 1;
    SY05WCOL.SY05WTOP = SY05WCOL.SY05WTOP + 1;
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end

  if (SY05WCOL.SY05WCDX == 13)
    SY05WCOL.SY05WTOP = SY05WCOL.SY05WTOP - 1;
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX - 1;
  else
    /* next sentence*/
  end

  exit stack;

end // end SY05SEB

// process pf8
Function SY05SEC()


       /* ***************************************/
       /* * check to see if the user selected  **/
       /* * a color record                     **/
       /* ***************************************/

  if (SY05WCOL.SY05WCDX > SY05WCOL.SY05WCCT) /* no more records avail.*/
    converseLib.validationFailed(70); /* you are at the end for scrolling*/
    exit stack;
  else
    /* next sentence*/
  end

  SY05SEE(); /* move selected item  to working*/
                                   /* storage*/
  SY05SEF(); /* clear lower half of screen*/


       /* ***************************************/
       /* * scroll forward                     **/
       /* *                                    **/
       /* ***************************************/


  SY05WCOL.SY05WSDX = 1;
  SY05WCOL.SY05WTOP = 1;

  while (SY05WCOL.SY05WSDX <= 12
   && SY05WCOL.SY2CLRID[SY05WCDX] != " ")
    if (SY05M003.PG4STNBR != " ")
      SY05SDM(); /* build dev. screen*/
    else
      SY05SDN(); /* build style screen*/
    end
    SY05WCOL.SY05WSDX = SY05WCOL.SY05WSDX + 1;
    SY05WCOL.SY05WTOP = SY05WCOL.SY05WTOP + 1;
    SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
  end

  exit stack;

end // end SY05SEC

// process enter
Function SY05SED()


       /* ***************************************/
       /* *  check screen to see if the user   **/
       /* *  wants to select all the colors    **/
       /* *  or only a few before processing   **/
       /* *  change colors.                    **/
       /* ***************************************/

  if (SY05WCOL.SY05WSEL[1] == "A")
    return;
  else
    SY05SEE();
  end


end // end SY05SED

// check for selected color
Function SY05SEE()

       /* ***************************************/
       /* * check to see if the user selected  **/
       /* * a color record                     **/
       /* ***************************************/

  SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX - SY05WCOL.SY05WTOP;
  SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;


  SY05WCOL.SY05WSDX = 1;

  while (SY05WCOL.SY05WSDX <= 12
   && SY05WCOL.SY2CLRID[SY05WCDX] != " ")
    if (SY05M003.SY05MSEL[SY05WSDX] == " ")
      SY05WCOL.SY05WSEL[SY05WCDX] = " ";
      SY05WCOL.SY05WSDX = SY05WCOL.SY05WSDX + 1;
      SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
    else
      SY05WCOL.SY05WSEL[SY05WCDX] = SY05M003.SY05MSEL[SY05WSDX];
      SY05WCOL.SY05WSDX = SY05WCOL.SY05WSDX + 1;
      SY05WCOL.SY05WCDX = SY05WCOL.SY05WCDX + 1;
    end
  end



end // end SY05SEE

// clear sy05m003 lower half
Function SY05SEF()

       /* ***************************************/
       /* *  clear sy05m003 lower screen       **/
       /* *  cleared.                          **/
       /* ***************************************/

  SY05WCOL.SY05WSDX = 1;

  while (SY05WCOL.SY05WSDX <= 12)
    SY05M003.SY05MSEL[SY05WSDX] = " ";
    SY05M003.SY05M-DATA[SY05WSDX] = " ";
    SY05WCOL.SY05WSDX = SY05WCOL.SY05WSDX + 1;
  end


end // end SY05SEF

// transfer to sy0i application
Function SY05SEG()


       /* ***************************************/
       /* * transfer to produt sub menu        **/
       /* * inquiry application                **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY0I";
  XSEXIT();


end // end SY05SEG

// process all color records
Function SY05SFA()



       /* ***************************************/
       /* * read seq. thru working storage     **/
       /* * and process all color records      **/
       /* ***************************************/


  if (SY05WCOL.SY05WSEL[1] == "A")
    /* next sentence*/
  else
    SY05WCOL.SY05WSEL[SY05WCDX] = " ";
  end


  if (SY05WCOL.SY1STNBR[SY05WCDX] != " ")
    SY05WREC.SY1STNBR = SY05WCOL.SY1STNBR[SY05WCDX];
  end
  SY05WREC.SY2CLRID = SY05WCOL.SY2CLRID[SY05WCDX];
  SY05WREC.XDMCD = SY05WCOL.XDMCD[SY05WCDX];


       /* ***************************************/
       /* * compare working storage colors to  **/
       /* * total colors. if at end of working **/
       /* * storage colors ezeflo, you are done**/
       /* * processing colors.                 **/
       /* ***************************************/

  if (SY05WCOL.SY05WCDX > SY05WCOL.SY05WCCT)
    SY05SEF(); /* clear lower half of screen.*/
    converseLib.validationFailed(78); /* throug processing color records*/
    SY05WREC.SY2CLRID = " ";
    SY05WREC.XDMCD = " ";
    SY05WREC.SY05WMEN = "N"; /* set menu color flag off*/
    if (SY05WREC.PG4STNBR != " ")
      SY05WREC.SY1STNBR = " ";
      SY05SBW(); /* clear all screens*/
    else
      SY05SBW(); /* clear all screens*/
      SY05WREC.SY1STNBR = " ";
    end
    exit stack;
  else
    /* next sentence*/
  end

  SY05WCOL.SY05WCDX = SY05WCDX + 1;


end // end SY05SFA

// process selected color rec.
Function SY05SFB()


       /* ***************************************/
       /* * process only the selected color    **/
       /* * records                            **/
       /* ***************************************/

  SY05WCOL.SY05WCDX = 1;

  while (SY05WCOL.SY05WSEL[SY05WCDX] == " "
   && SY05WCOL.SY05WCDX <= 250
   && SY05WCOL.SY2CLRID[SY05WCDX] != " ")
    SY05WCOL.SY05WCDX = SY05WCDX + 1;
  end


       /* ***************************************/
       /* * compare working storage colors to  **/
       /* * total colors. if at end of working **/
       /* * storage colors ezeflo, you are done**/
       /* * processing colors.                 **/
       /* ***************************************/

  if (SY05WCOL.SY05WCDX > SY05WCOL.SY05WCCT)
    SY05SEF();
    converseLib.validationFailed(78); /* you have finished processing color*/
                                   /* records*/
    SY05WREC.SY2CLRID = " ";
    SY05WREC.XDMCD = " ";
    SY05WREC.SY05WMEN = "N"; /* set color menu flag off*/
    if (SY05WREC.PG4STNBR != " ")
      SY05WREC.SY1STNBR = " ";
      SY05SBW(); /* clear all screens*/
    else
      SY05SBW(); /* clear all screens*/
      SY05WREC.SY1STNBR = " ";
    end
    exit stack;
  else
    /* next sentence*/
  end


  if (SY05WCOL.SY1STNBR[SY05WCDX] != " ")
    SY05WREC.SY1STNBR = SY05WCOL.SY1STNBR[SY05WCDX];
  end
  SY05WREC.SY2CLRID = SY05WCOL.SY2CLRID[SY05WCDX];
  SY05WREC.XDMCD = SY05WCOL.XDMCD[SY05WCDX];


end // end SY05SFB

// check if key data has changed
Function SY05SGA()



       /* ***************************************/
       /* *  if screen key changed get all     **/
       /* *  product records that are needed.  **/
       /* ***************************************/


  if (SY05M004.SY1STNBR != SY05WREC.SY1STNBR
   || SY05M004.XGPCD != SY05WREC.XGPCD)
    SY05WREC.XGPCD = SY05M004.XGPCD;
    SY05WREC.SY1STNBR = SY05M004.SY1STNBR;
    SY05SAA(); /* Get GPC desc.*/
    if (SY05M004.SY2CLRID == " ")
      SY05SBW(); /* clear all screens*/
      SY05SBD(); /* retrieve just style data*/
    else
      SY05WREC.SY2CLRID = SY05M004.SY2CLRID;
      SY05WREC.XDMCD = SY05M004.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    end
  else
    if (SY05M004.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M004.XGPCD != SY05WREC.XGPCD
     || SY05M004.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M004.XDMCD != SY05WREC.XDMCD)
      SY05WREC.SY1STNBR = SY05M004.SY1STNBR;
      SY05WREC.XGPCD = SY05M004.XGPCD;
      SY05WREC.SY2CLRID = SY05M004.SY2CLRID;
      SY05WREC.XDMCD = SY05M004.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    else
      /* next sentence,  nothing has changed*/
    end
  end



end // end SY05SGA

// validate required screen field
Function SY05SGB()



       /* ***************************************/
       /* *        validate style number       **/
       /* *                                    **/
       /* ***************************************/


  if (SY05M004.SY1STNBR == " ")
    set SY05M004.SY1STNBR cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M004.XGPCD == " ")
    set SY05M004.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M004.SY2CLRID == " ")
    if (SY05M004.XDMCD != " ")
      set SY05M004.SY2CLRID cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  else
    if (SY05M004.XDMCD == " ")
      set SY05M004.XDMCD cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end


end // end SY05SGB

// get color code desc.
Function SY05SGG()

       /* ********************************************/
       /* *   GET THE CODE DESC. FOR THE COLOR      **/
       /* *   SCREENs (SY05M004 & sy05m006).        **/
       /* ********************************************/

       /* ********************************************/
       /* * GET Warehouse code desc.            .   **/
       /* ********************************************/

  SY05SBG();


       /* ********************************************/
       /* * GET life cycle code desc.           .   **/
       /* ********************************************/

  SY05SGQ();


       /* ********************************************/
       /* * GET MATERIAL CONTENT UPPER CODE DESC.   **/
       /* ********************************************/

  SY05SGH();

       /* ********************************************/
       /* *    GET OPTIONAL GROUP CODE DESC.        **/
       /* ********************************************/

  SY05SGI();

       /* ********************************************/
       /* *    GET DEVELOPMENT REGION DESC.         **/
       /* ********************************************/

  SY05S-XDR();

       /* ********************************************/
       /* *   GET LOGO COLOR CODE DESC.             **/
       /* ********************************************/

  SY05SGY();


       /* ********************************************/
       /* *   GET TERTIARY COLOR CODE DESC.         **/
       /* ********************************************/

  SY05SGJ();

       /* ********************************************/
       /* *   GET SECONDARY COLOR CODE DESC.        **/
       /* ********************************************/
  SY05SGK();

       /* ********************************************/
       /* *    GET PRIMARY COLOR CODE DESC.         **/
       /* ********************************************/

  SY05SGL();

       /* ********************************************/
       /* *   GET PRODUCT TYPE CODE DESC.           **/
       /* ********************************************/

  SY05SGM();

       /* ********************************************/
       /* *    GET DIVISION CODE DESC.              **/
       /* ********************************************/

  SY05SGN();

       /* ********************************************/
       /* *    GET SEASON CODE DESC.                **/
       /* ********************************************/

  SY05SGO();

       /* ********************************************/
       /* *    GET DIMENSION CODE AND DESC.         **/
       /* ********************************************/

  SY05SGP();


       /* ********************************************/
       /* *    GET product category code and desc.  **/
       /* ********************************************/

  SY05SGV();


       /* ********************************************/
       /* *    GET product collection desc.         **/
       /* ********************************************/

  SY05SGW();


end // end SY05SGG

// verify mat. content upper cd.
Function SY05SGH()


       /* ******************************************/
       /* *  VERIFY four material content codes   **/
       /* *  and get the descriptions             **/
       /* ******************************************/

  if (SY05M004.XMCCD1 != "  ")
    if (SY05M004.XMCCD1 in XMCTBL.XMCCD)
      SY05M004.XMCSDESC[1] = XMCTBL.XMCSDESC[sysVar.arrayIndex];
    else
      SY05M004.XMCSDESC[1] = "INVALID";
    end
  end


  if (SY05M004.XMCCD2 != "  ")
    if (SY05M004.XMCCD2 in XMCTBL.XMCCD)
      SY05M004.XMCSDESC[2] = XMCTBL.XMCSDESC[sysVar.arrayIndex];
    else
      SY05M004.XMCSDESC[2] = "INVALID";
    end
  end


  if (SY05M004.XMCCD3 != "  ")
    if (SY05M004.XMCCD3 in XMCTBL.XMCCD)
      SY05M004.XMCSDESC[3] = XMCTBL.XMCSDESC[sysVar.arrayIndex];
    else
      SY05M004.XMCSDESC[3] = "INVALID";
    end
  end


  if (SY05M004.XMCCD4 != "  ")
    if (SY05M004.XMCCD4 in XMCTBL.XMCCD)
      SY05M004.XMCSDESC[4] = XMCTBL.XMCSDESC[sysVar.arrayIndex];
    else
      SY05M004.XMCSDESC[4] = "INVALID";
    end
  end


end // end SY05SGH

// verify optional group code
Function SY05SGI()

       /* ******************************************/
       /* *  VERIFY OPTIONAL GROUP CODE AND GET   **/
       /* *  THE DESCRIPTION.                     **/
       /* ******************************************/

  if (SY05M004.XOGCD == "  ")
    return;
  else
    /* next sentence*/
  end

  if (SY05M004.XOGCD in XOGTBL.XOGCD)
    SY05M004.XOGDESC = XOGTBL.XOGDESC[sysVar.arrayIndex];
  else
    SY05M004.XOGDESC = "INVALID";
  end


end // end SY05SGI

// verify tertiary color code
Function SY05SGJ()

       /* ******************************************/
       /* *  VERIFY COLOR CODE 3 AND              **/
       /* *  GET THE DESCRIPTION.                 **/
       /* ******************************************/

  if (SY05M004.XCLCD[3] == "  ")
    SY05M004.XCLDESC[3] = " ";
  else
    if (SY05M004.XCLCD[3] in XCLTBL.XCLCD)
      SY05M004.XCLDESC[3] = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      SY05M004.XCLDESC[3] = "INVALID";
    end
  end

end // end SY05SGJ

// VERIFY SECONDARY COLOR CODE
Function SY05SGK()

       /* ******************************************/
       /* *  VERIFY COLOR CODE 2 AND GET          **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY05M004.XCLCD[2] == "  ")
    SY05M004.XCLDESC[2] = " ";
  else
    if (SY05M004.XCLCD[2] in XCLTBL.XCLCD)
      SY05M004.XCLDESC[2] = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      SY05M004.XCLDESC[2] = "INVALID";
    end
  end

end // end SY05SGK

// verify primary color code
Function SY05SGL()


       /* ******************************************/
       /* *  verify color code 1 and              **/
       /* *  get the description.                 **/
       /* ******************************************/

  if (SY05M004.XCLCD[1] == "  ")
    SY05M004.XCLDESC[1] = " ";
  else
    if (SY05M004.XCLCD[1] in XCLTBL.XCLCD)
      SY05M004.XCLDESC[1] = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      SY05M004.XCLDESC[1] = "INVALID";
    end
  end

end // end SY05SGL

// VERIFY PRODUCT TYPE CODE
Function SY05SGM()

       /* ******************************************/
       /* *  VERIFY PRODUCT TYPE CODE AND GET     **/
       /* *  THE DESCRIPTION.                     **/
       /* ******************************************/

  if (SY05M004.XPRCD == " ")
    return;
  end

  if (SY05M004.XPRCD in XPRTBL.XPRCD)
    SY05M004.XPRDESC = XPRTBL.XPRDESC[sysVar.arrayIndex];
  else
    SY05M004.XPRDESC = "INVALID";
  end


end // end SY05SGM

// VERIFY DIVISION CODE
Function SY05SGN()

       /* ******************************************/
       /* *  VERIFY DIVISION CODE AND GET         **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY05M004.XDVCD == "  ")
    return;
  else
    /* next sentence*/
  end

  if (SY05M004.XDVCD in XDVTBL.XDVCD)
    SY05M004.XDVDESC = XDVTBL.XDVDESC[sysVar.arrayIndex];
  else
    SY05M004.XDVDESC = "INVALID ";
  end


end // end SY05SGN

// VERIFY SEASON CODE
Function SY05SGO()

       /* ******************************************/
       /* *  VERIFY SEASON CODE AND GET           **/
       /* *  THE DESC.                            **/
       /* ******************************************/

  if (SY05M004.XSECD == "  "
   && SY05M004.XSECD == "  ")
    return;
  else
    /* next sentence*/
  end


  if (SY05M004.XSECD in XSETBL.XSECD
   || SY05M006.XSECD in XSETBL.XSECD)
    SY05M004.XSEDESC = XSETBL.XSEDESC[sysVar.arrayIndex];
  else
    SY05M004.XSEDESC = "INVALID ";
  end


end // end SY05SGO

// verify dimension code
Function SY05SGP()

       /* ******************************************/
       /* *  VERIFY DIMENSION CODE AND GET        **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY2REC.XDMCD in XDMTBL.XDMCD)
    SY05M004.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    SY05M005.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    SY05M006.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    SY05M007.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

end // end SY05SGP

// retrieve life cycle codes
Function SY05SGQ()


       /* ***************************************/
       /* *  retrieve the life cycle desc for  **/
       /* *  each code.                        **/
       /* ***************************************/


  if (SY05M004.XLCCD1 == " ")
    /* next sentence*/
  else
    SY05SGR(); /* retrieve life cycle # 1 desc.*/
  end

  if (SY05M004.XLCCD2 == " ")
    /* next sentence*/
  else
    SY05SGS(); /* retrieve life cycle # 2 desc.*/
  end

  if (SY05M004.XLCCD3 == " ")
    /* next sentence*/
  else
    SY05SGT(); /* retrieve life cycle # 3 desc.*/
  end

  if (SY05M004.XLCCD4 == " ")
    /* next sentence*/
  else
    SY05SGU(); /* retrieve life cycle # 4 desc.*/
  end


  if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT1)
    SY05M004.SYMLIFE1 = "*";
    set SY05M004.SYMLIFE1 skip, bold;
  else
    if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT2)
      SY05M004.SYMLIFE2 = "*";
      set SY05M004.SYMLIFE2 skip, bold;
    else
      if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT3)
        SY05M004.SYMLIFE3 = "*";
        set SY05M004.SYMLIFE3 skip, bold;
      else
        if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT4)
          SY05M004.SYMLIFE4 = "*";
          set SY05M004.SYMLIFE4 skip, bold;
        else
          return;
        end
      end
    end
  end


end // end SY05SGQ

// retrieve life cycle #1 desc.
Function SY05SGR()


       /* ******************************************/
       /* *  retrieve life cycle desc.            **/
       /* ******************************************/


  if (SY05M004.XLCCD1 in XLCTBL.XLCCD)
    SY05M004.SYMXLCD1 = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    SY05M004.SYMXLCD1 = "INVALID ";
  end

end // end SY05SGR

// retrieve life cycle #2 desc.
Function SY05SGS()


       /* ******************************************/
       /* *  retrieve life cycle desc. #2         **/
       /* ******************************************/


  if (SY05M004.XLCCD2 in XLCTBL.XLCCD)
    SY05M004.SYMXLCD2 = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    SY05M004.SYMXLCD2 = "INVALID ";
  end

end // end SY05SGS

// retrieve life cycle #3 desc.
Function SY05SGT()


       /* ******************************************/
       /* *  retrieve life cycle desc. #2         **/
       /* ******************************************/


  if (SY05M004.XLCCD3 in XLCTBL.XLCCD)
    SY05M004.SYMXLCD3 = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    SY05M004.SYMXLCD3 = "INVALID ";
  end

end // end SY05SGT

// retrieve life cycle #4 desc.
Function SY05SGU()


       /* ******************************************/
       /* *  retrieve life cycle desc. #4         **/
       /* ******************************************/


  if (SY05M004.XLCCD4 in XLCTBL.XLCCD)
    SY05M004.SYMXLCD4 = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    SY05M004.SYMXLCD4 = "INVALID ";
  end

end // end SY05SGU

// verify product category code
Function SY05SGV()

       /* ******************************************/
       /* *  VERIFY product-line     code and     **/
       /* *         product-category code and     **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY05M004.XPLCD != " ")
    SYWREC.SYWINDEX = 1;
    SY05M004.XPLSDESC = "INVALID ";
    while (XPLTBL.XPLCD[SYWINDEX] != "99"
     && SY05M004.XPLSDESC == "INVALID")
      if (SY05M004.XPLCD == XPLTBL.XPLCD[SYWINDEX]
       && SYWREC.XGPCD == XPLTBL.XGPCD[SYWINDEX])
        SY05M004.XPLSDESC = XPLTBL.XPLSDESC[SYWINDEX];
      else
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
      end
    end
  else
    SY05M004.XPLSDESC = " ";
  end


  SYWREC.SYWINDEX = 1;
  SY05M004.XPCDESC = "INVALID ";
  SY05M006.XPCDESC = "INVALID ";

  while (XPCTBL.XPCCD[SYWINDEX] != "99")
    if (SYWREC.XGPCD == XPCTBL.XGPCD[SYWINDEX])
      if (SY05M004.XPCCD == XPCTBL.XPCCD[SYWINDEX]
       || SY05M006.XPCCD == XPCTBL.XPCCD[SYWINDEX])
        SY05M004.XPCDESC = XPCTBL.XPCDESC[SYWINDEX];
        SY05M006.XPCDESC = XPCTBL.XPCDESC[SYWINDEX];
        return;
      else
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
      end
    else
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
  end

end // end SY05SGV

// retrieve collection desc.
Function SY05SGW()


       /* ******************************************/
       /* *  retrieve collection desc.            **/
       /* ******************************************/


  if (SY05M004.YCQCD in YCQTBL.YCQCD)
    SY05M004.YCQABRV = YCQTBL.YCQABRV[sysVar.arrayIndex];
  else
    SY05M004.YCQABRV = "????";
  end

end // end SY05SGW

// check pf keys
Function SY05SGX()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is enter
     && SY05M004.CATOAP != " ")
      COMMAREA.CATOAP = SY05M004.CATOAP;
      COMMAREA.CAITEM = SY05M004.CAITEM;
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      SY05M004.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M004 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        COMMAREA.CAUSERA = " ";
        XSPF1();
        SY05M004.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M004 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3
         && SY05WREC.SY05WMEN == "N")
          SY05SEG(); /* transfer to sy0i application*/
          COMMAREA.CAUSERA = " ";
          SY05M004.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M004 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            COMMAREA.CAUSERA = " ";
            XSPF4(); /* transfer to main menu*/
            SY05M004.SYMSCMSG = COMMAREA.CAMSG;
            set SY05M004 alarm;
            converseLib.validationFailed(1);
            exit stack;
          else
            if (converseVar.eventKey is enter
             || converseVar.eventKey is pf3
             || converseVar.eventKey is pf13
             || converseVar.eventKey is pf14
             || converseVar.eventKey is pf15
             || converseVar.eventKey is pf17
             || converseVar.eventKey is pf18)
              return;
            else
              exit stack;
            end
          end
        end
      end
    end
  end




end // end SY05SGX

// verify logo color code
Function SY05SGY()

       /* ******************************************/
       /* *  VERIFY COLOR CODE 4 AND              **/
       /* *  GET THE DESCRIPTION.                 **/
       /* ******************************************/

  if (SY05M004.XCLCD[4] == "  ")
    SY05M004.XCLDESC[4] = " ";
  else
    if (SY05M004.XCLCD[4] in XCLTBL.XCLCD)
      SY05M004.XCLDESC[4] = XCLTBL.XCLDESC[sysVar.arrayIndex];
    else
      SY05M004.XCLDESC[4] = "INVALID";
    end
  end

end // end SY05SGY

// set size fields to blank
Function SY05SHA()


       /* *************************************/
       /* *  set empty size scale desc.      **/
       /* *  to dark and autoskip            **/
       /* *                                  **/
       /* *************************************/


  SYWREC.SYWINDEX = 40;

  while (SYWREC.SYWINDEX > 0)
    if (SY3REC.SY3FRGUT[SYWINDEX] == " ")
      set SY05M005.SY3FRGUT[SYWINDEX] skip, invisible;
      set SY05M005.XDVCD[SYWINDEX] skip, invisible;
      set SY05M005.SY4IDDSC[SYWINDEX] skip, invisible;
    else
      /* next sentence*/
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX - 1;
  end

end // end SY05SHA

// validate required fields
Function SY05SHB()


       /* ***************************************/
       /* *                                    **/
       /* *                                    **/
       /* ***************************************/


  if (SY05M005.SY1STNBR == " ")
    set SY05M005.SY1STNBR cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M005.XGPCD == " ")
    set SY05M005.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M005.SY2CLRID == " ")
    if (SY05M005.XDMCD != " ")
      set SY05M005.SY2CLRID cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  else
    if (SY05M005.XDMCD == " ")
      set SY05M005.XDMCD cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end


end // end SY05SHB

// check for key data change
Function SY05SHC()


       /* ***************************************/
       /* *  if screen key changed get all     **/
       /* *  product records that are needed.  **/
       /* ***************************************/


  if (SY05M005.SY1STNBR != SY05WREC.SY1STNBR
   || SY05M005.XGPCD != SY05WREC.XGPCD)
    SY05WREC.XGPCD = SY05M005.XGPCD;
    SY05WREC.SY1STNBR = SY05M005.SY1STNBR;
    SY05SAA(); /* Get GPC Desc.*/
    if (SY05M005.SY2CLRID == " ")
      SY05SBW(); /* clear all screens*/
      SY05SBD(); /* retrieve just style data*/
    else
      SY05WREC.SY2CLRID = SY05M005.SY2CLRID;
      SY05WREC.XDMCD = SY05M005.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    end
  else
    if (SY05M005.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M005.XGPCD != SY05WREC.XGPCD
     || SY05M005.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M005.XDMCD != SY05WREC.XDMCD)
      SY05WREC.SY1STNBR = SY05M005.SY1STNBR;
      SY05WREC.XGPCD = SY05M005.XGPCD;
      SY05WREC.SY2CLRID = SY05M005.SY2CLRID;
      SY05WREC.XDMCD = SY05M005.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    else
      /* next sentence,  nothing has changed*/
    end
  end



end // end SY05SHC

// check pf keys
Function SY05SHP()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  end

  if (converseVar.eventKey is enter
   && SY05M007.CATOAP != " ")
    COMMAREA.CATOAP = SY05M007.CATOAP;
    COMMAREA.CAITEM = SY05M007.CAITEM;
    COMMAREA.CAUSERA = " ";
    XSEXIT();
    SY05M007.SYMSCMSG = COMMAREA.CAMSG;
    set SY05M007 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf1)
    COMMAREA.CAUSERA = " ";
    XSPF1();
    SY05M007.SYMSCMSG = COMMAREA.CAMSG;
    set SY05M007 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CAUSERA = " ";
    SY05SEG(); /* transfer to sy0i application*/
    SY05M007.SYMSCMSG = COMMAREA.CAMSG;
    set SY05M007 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf4)
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to main menu*/
    SY05M007.SYMSCMSG = COMMAREA.CAMSG;
    set SY05M007 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf7)
    if (SY05W01.SY05W12S == "1") /* allready on 1st screen*/
      converseLib.validationFailed(69); /* at top of data*/
    else
      SY05W01.SY05W12S = "1"; /* set for 1st screen*/
    end
    return;
  end

  if (converseVar.eventKey is pf8)
    if (SY05W01.SY05W12S == "2" /* allready on 2nd screen*/
     || SY05W01.SY05WMAX <= 20) /* no data for 2nd screen*/
      converseLib.validationFailed(70); /* at bottom of data*/
    else
      SY05W01.SY05W12S = "2"; /* set for 1st screen*/
    end
    return;
  end

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17)
    return;
  end

  if (converseVar.eventKey is pf19)
    if (COMMAREA.CAILVL[1] == "Y") /* user can do labels*/
      if (SY05W02.SY05WJM == 0) /* no labels requested yet*/
        converseLib.validationFailed(175); /* enter label qty*/
      else
        return;
      end
    else
      converseLib.validationFailed(19); /* invalid pf key*/
    end
  end

  exit stack;



end // end SY05SHP

// validate required fields
Function SY05SHQ()

  if (SY05M007.SYUPCMID != 0 /* if these are non-zero,*/
   || SY05M007.SYUPCIMN != 0) /* search by upc*/
    SY05M007.XGPCD = " ";
    SY05M007.SY1STNBR = "******";
    SY05M007.SY2CLRID = " ";
    SY05M007.XDMCD = " ";
    SY05M007.XQACD = " ";
    return;
  end

  if (SY05M007.SY1STNBR == " ")
    set SY05M007.SY1STNBR cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M007.XGPCD == " ")
    set SY05M007.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M007.SY2CLRID == " ")
    if (SY05M007.XDMCD != " ")
      set SY05M007.SY2CLRID cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  else
    if (SY05M007.XDMCD == " ")
      set SY05M007.XDMCD cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  end

  if (SY05M007.SUGGREQ != "Y")
    if (SY05M007.SUGGREQ != "N")
      set SY05M007.SUGGREQ cursor, bold;
      converseLib.validationFailed(231);
    end
  end

  if (SY05M007.COOREQ != "Y")
    if (SY05M007.COOREQ != "N")
      set SY05M007.COOREQ cursor, bold;
      converseLib.validationFailed(36);
    end
  end

  if (SY05M007.SETREQ != "Y")
    if (SY05M007.SETREQ != "N")
      set SY05M007.SETREQ cursor, bold;
      converseLib.validationFailed(36);
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end


end // end SY05SHQ

// check for key data change
Function SY05SHR()


       /* ***************************************/
       /* *  if screen key changed get all     **/
       /* *  product records that are needed.  **/
       /* ***************************************/


  if (SY05M007.SUGGREQ != SY05WREC.SY05WSUGGREQ
   && SY05M007.SUGGREQ != " ")
    SY05WREC.SY05WSUGGREQ = SY05M007.SUGGREQ;
  end

  if (SY05M007.COOREQ != SY05WREC.SY05WCOOREQ
   && SY05M007.COOREQ != " ")
    SY05WREC.SY05WCOOREQ = SY05M007.COOREQ;
  end

  if (SY05M007.SETREQ != SY05WREC.SY05WSETREQ
   && SY05M007.SETREQ != " ")
    SY05WREC.SY05WSETREQ = SY05M007.SETREQ;
  end

  if (SY05M007.SYUPCMID != 0
   || SY05M007.SYUPCIMN != 0)
    if (SY05M007.SY1STNBR == "******")
      SY05M007.SY1STNBR = " ";
    end
    SY05W01.SY05WBLD = "Y"; /* build upc screen*/
    set SYUREC empty;
    SYUREC.SYUPCSNB[1] = SY05M007.SYUPCSNB;
    SYUREC.SYUPCMID[1] = SY05M007.SYUPCMID;
    SYUREC.SYUPCIMN[1] = SY05M007.SYUPCIMN;
    SYUREC.SYUPCCKD[1] = SY05M007.SYUPCCKD;
    SYUREC.SYUPCFCD = "D";
    SYUREC.SYUPCDFN = "U";
    call "SY1280" (SYUREC) {isNoRefresh = yes, isExternal = yes};
    if (SYUREC.SYUPCRCD == 0)
      SY05M007.XGPCD = SYUREC.XGPCD;
      SY05M007.SY1STNBR = SYUREC.SY1STNBR;
      SY05M007.SY2CLRID = SYUREC.SY2CLRID;
      SY05M007.XDMCD = SYUREC.XDMCD;
      SY05M007.XQACD = SYUREC.XQACD;
      SY05WREC.SY1STNBR = SY05M007.SY1STNBR;
      SY05WREC.XGPCD = SY05M007.XGPCD;
      SY05WREC.SY2CLRID = SY05M007.SY2CLRID;
      SY05WREC.XDMCD = SY05M007.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
      return;
    else
      if (SYUREC.SYUPCRCD == 01) /* this upc not on file*/
        converseLib.validationFailed(3); /* invalid code*/
        set SY05M007.SYUPCSNB cursor, bold;
        set SY05M007.SYUPCMID bold;
        set SY05M007.SYUPCIMN bold;
        set SY05M007.SYUPCCKD bold;
        return;
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY05   ";
        TA1REC.TA1LOCAT[1] = "S        ";
        TA1REC.TA1LOCAT[2] = "SY05SHR  ";
        TA1REC.TA1LOCAT[3] = "SY1280   ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY05M001";
        TA1REC.TA1DBASE = "DPROD.";
        TA1REC.TA1TBLVU = "VSYUPC01";
        TA1TBLKE = SY1REC.SY1KEY;
        SQLCA.SQLCAREC = SYUREC.SQLCAREC;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(23); /* table error....*/
        exit stack;
      end
    end
  end

  if (SY05M007.SY1STNBR != SY05WREC.SY1STNBR
   || SY05M007.XGPCD != SY05WREC.XGPCD
   || SY05M007.SY2CLRID != SY05WREC.SY2CLRID
   || SY05M007.XDMCD != SY05WREC.XDMCD)
    SY05W01.SY05WBLD = "Y"; /* would need to build upc screen*/
    set SYUREC empty;
    SY05WREC.SY1STNBR = SY05M007.SY1STNBR;
    SY05WREC.XGPCD = SY05M007.XGPCD;
    SY05WREC.SY2CLRID = SY05M007.SY2CLRID;
    SY05WREC.XDMCD = SY05M007.XDMCD;
    SY05SAA(); /* Get GPC Desc.*/
    SY05SBC(); /* retrieve style/color/size data.*/
  else
    if (SY05M007.XQACD != SYUREC.XQACD)
      SY05W01.SY05WBLD = "Y"; /* would need to build upc screen*/
    end
  end


end // end SY05SHR

// check pf keys
Function SY05SHX()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is enter
     && SY05M005.CATOAP != " ")
      COMMAREA.CATOAP = SY05M005.CATOAP;
      COMMAREA.CAITEM = SY05M005.CAITEM;
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      SY05M005.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M005 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        COMMAREA.CAUSERA = " ";
        XSPF1();
        SY05M005.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M005 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3)
          COMMAREA.CAUSERA = " ";
          SY05SEG(); /* transfer to sy0i application*/
          SY05M005.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M005 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            COMMAREA.CAUSERA = " ";
            XSPF4(); /* transfer to main menu*/
            SY05M005.SYMSCMSG = COMMAREA.CAMSG;
            set SY05M005 alarm;
            converseLib.validationFailed(1);
            exit stack;
          else
            if (converseVar.eventKey is enter
             || converseVar.eventKey is pf13
             || converseVar.eventKey is pf14
             || converseVar.eventKey is pf15
             || converseVar.eventKey is pf16
             || converseVar.eventKey is pf17
             || converseVar.eventKey is pf18)
              return;
            else
              exit stack;
            end
          end
        end
      end
    end
  end




end // end SY05SHX

// check if key data has changed
Function SY05SJA()



       /* ***************************************/
       /* *  if screen key changed get all     **/
       /* *  product records that are needed.  **/
       /* ***************************************/


  if (SY05M006.SY1STNBR != SY05WREC.SY1STNBR
   || SY05M006.XGPCD != SY05WREC.XGPCD)
    SY05WREC.XGPCD = SY05M006.XGPCD;
    SY05WREC.SY1STNBR = SY05M006.SY1STNBR;
    SY05SAA(); /* Get GPC Desc.*/
    if (SY05M006.SY2CLRID == " ")
      SY05SBW(); /* clear all screens*/
      SY05SBD(); /* retrieve just style data*/
    else
      SY05WREC.SY2CLRID = SY05M006.SY2CLRID;
      SY05WREC.XDMCD = SY05M006.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    end
  else
    if (SY05M006.SY1STNBR != SY05WREC.SY1STNBR
     || SY05M006.XGPCD != SY05WREC.XGPCD
     || SY05M006.SY2CLRID != SY05WREC.SY2CLRID
     || SY05M006.XDMCD != SY05WREC.XDMCD)
      SY05WREC.SY1STNBR = SY05M006.SY1STNBR;
      SY05WREC.XGPCD = SY05M006.XGPCD;
      SY05WREC.SY2CLRID = SY05M006.SY2CLRID;
      SY05WREC.XDMCD = SY05M006.XDMCD;
      SY05SBC(); /* retrieve style/color/size data.*/
    else
      /* next sentence,  nothing has changed*/
    end
  end



end // end SY05SJA

// validate required screen field
Function SY05SJB()



       /* ***************************************/
       /* *        validate style number       **/
       /* *                                    **/
       /* ***************************************/


  if (SY05M006.SY1STNBR == " ")
    set SY05M006.SY1STNBR cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M006.XGPCD == " ")
    set SY05M006.XGPCD cursor, bold;
    converseLib.validationFailed(40);
  else
    /* next sentence*/
  end

  if (SY05M006.SY2CLRID == " ")
    if (SY05M006.XDMCD != " ")
      set SY05M006.SY2CLRID cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  else
    if (SY05M006.XDMCD == " ")
      set SY05M006.XDMCD cursor, bold;
      converseLib.validationFailed(40);
    else
      /* next sentence*/
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    /* next sentence*/
  end


end // end SY05SJB

// check pf keys
Function SY05SJX()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is enter
     && SY05M006.CATOAP != " ")
      COMMAREA.CATOAP = SY05M006.CATOAP;
      COMMAREA.CAITEM = SY05M006.CAITEM;
      COMMAREA.CAUSERA = " ";
      XSEXIT();
      SY05M006.SYMSCMSG = COMMAREA.CAMSG;
      set SY05M006 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        COMMAREA.CAUSERA = " ";
        XSPF1();
        SY05M006.SYMSCMSG = COMMAREA.CAMSG;
        set SY05M006 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3
         && SY05WREC.SY05WMEN == "N")
          SY05SEG(); /* transfer to sy0i application*/
          COMMAREA.CAUSERA = " ";
          SY05M004.SYMSCMSG = COMMAREA.CAMSG;
          set SY05M006 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            COMMAREA.CAUSERA = " ";
            XSPF4(); /* transfer to main menu*/
            SY05M006.SYMSCMSG = COMMAREA.CAMSG;
            set SY05M006 alarm;
            converseLib.validationFailed(1);
            exit stack;
          else
            if (converseVar.eventKey is enter
             || converseVar.eventKey is pf3
             || converseVar.eventKey is pf13
             || converseVar.eventKey is pf14
             || converseVar.eventKey is pf15
             || converseVar.eventKey is pf16
             || converseVar.eventKey is pf18)
              return;
            else
              exit stack;
            end
          end
        end
      end
    end
  end




end // end SY05SJX

// Add lines to Parm Array
Function SY05SKA()

   /* This statement group will check for label quantities*/
   /* entered by user. If any are found, rows will be*/
   /* created into SY05W02 for label job PK4241*/

   /* IF SY05M007.SUGGREQ = 'Y';       /* Price Print Requested*/
   /*   MOVE EZEDTEL TO SY05W01.SY05DATE;*/
   /*   MOVE 0 TO SY05W01.SY05SUGG;    /* Inititialize Price to Zero*/
   /*   SY05SKA-PRICE();               /* Get the Price*/
   /*   IF SY05W01.SY05LVL EQ 'NONE '; /* No Price Found*/
   /*     MOVE 232 TO EZEMNO;*/
   /*     SET SY05M007.SUGGREQ CURSOR,BRIGHT;*/
   /*     /* MOVE 0 TO SY05W02.SY05WJM;*/
   /*     EZERTN();*/
   /*   END;*/
   /* END;*/

   /* IF SY05M007.SUGGREQ = 'Y'*/
   /* AND EZEAID IS ENTER*/
   /* AND SY05W01.SY05LVL NE 'NONE ';*/
   /* SY05S-POPUPS;*/
   /* MOVE SY05M007.SUGGPRIC TO SY05W01.SY05SUGG;*/
   /* END;*/

  SY05W01.SY05WIDX = 1;
  while (SY05W01.SY05WIDX <= 40)
    if (SY05W01.SY05WPCF[SY05WIDX] != "Y" /* we have not created parm*/
     && SY05W01.SY05WLBQ[SY05WIDX] > 0)   /* and have qty*/
   /*     AND SY05M007.SUGGREQ NOT MODIFIED;*/
      if (SY05W02.SY05WJM == 350) /* out of space in table*/
        converseLib.validationFailed(174); /* submit table full*/
        return;
      else
        SY05W01.SY05SUGG = SY05M007.SUGGPRIC;
        SY05W01.SY05SCOO = SY05M007.SUGGCOO;
        SY05W02.SY05WJM = SY05W02.SY05WJM + 1;
        SY05W02.SY05WJX = SY05W02.SY05WJM;
        SY05W02.XGPCD[SY05WJX] = SY1REC.XGPCD;
        SY05W02.SY1STNBR[SY05WJX] = SY1REC.SY1STNBR;
        SY05W02.SY2CLRID[SY05WJX] = SY2REC.SY2CLRID;
        SY05W02.XDMCD[SY05WJX] = SY2REC.XDMCD;
        SY05W02.XGACD[SY05WJX] = SY1REC.XGACD;
        SY05W02.SY4IDDSC[SY05WJX] = SY05W01.SY4IDDSC[SY05WIDX];
        SY05W02.SY05WU1[SY05WJX] = SY05W01.SY05WU1[SY05WIDX];
        SY05W02.SY05WU2[SY05WJX] = SY05W01.SY05WU2[SY05WIDX];
        SY05W02.SY05WU3[SY05WJX] = SY05W01.SY05WU3[SY05WIDX];
        SY05W02.SY05WU4[SY05WJX] = SY05W01.SY05WU4[SY05WIDX];
        SY05W02.SY05WLBQ[SY05WJX] = SY05W01.SY05WLBQ[SY05WIDX];
        SY05W01.SY05WPCF[SY05WIDX] = "Y"; /* parm created*/
        SY05W02.SY05REQ[SY05WJX] = SY05M007.SUGGREQ;
        SY05W02.SY05SUGG[SY05WJX] = SY05W01.SY05SUGG;
        SY05W02.SY05SCOO[SY05WJX] = SY05W01.SY05SCOO;
        SY05W02.SY05-COO-REQ[SY05WJX] = SY05M007.COOREQ;
        SY05W02.SY05SET[SY05WJX] = SY05M007.SETREQ;
        set SY05M007.SY05MLBQ[SY05WIDX] skip;
      end
    end
    SY05W01.SY05WIDX = SY05W01.SY05WIDX + 1;
  end

end // end SY05SKA

// get prices for products
Function SY05SKA-PRICE()



   /* ************************************************************/
   /* *   GET SUGGESTED RETAIL PRICE ON DPROD.VPRICE01 TABLE*/
   /* ************************************************************/


  set SY5REC empty;
  set SQLCA empty;
  SY05W01.SY05LVL = "NONE "; /* Initialize Price Level to None*/

  SY5REC.XGPCD = SY05M007.XGPCD;
  SY5REC.SY1STNBR = SY05M007.SY1STNBR;
  SY5REC.SY2CLRID = SY05M007.SY2CLRID;
  SY5REC.XDMCD = SY05M007.XDMCD;
  SY5REC.XQACD = SY05M007.XQACD;
  SY5REC.SY5SZID = 0;
  SY5REC.XPYCD = "02"; /* Sugg Rtl Price Type*/

  SY5REC.XCT-CTRY-CD = "USA ";
  SY5REC.ZFC-CRCY-CD = "USD";

  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes}; /* DPROD.VPRICE01*/

  if (SQLCA.VAGen_SQLCODE == +0)
    SY05W01.SY05WSB1 = 1;
    while (SY05W01.SY05WSB1 < 7)
      if (SY5REC.SY5PCEDT[SY05WSB1] <= SY05W01.SY05DATE /* Enddt =< Today*/
       && SY5REC.SY5PCEDT[SY05WSB1] != 0)              
        SY05W01.SY05SUGG = SY5REC.SY5PRCUN[SY05WSB1]; /* Price found*/
        SY05W01.SY05LVL = "COLOR"; /* Color Level Price found*/
        SY05W01.SY05WSB1 = 99;
      else
        SY05W01.SY05WSB1 = SY05W01.SY05WSB1 + 1;
      end
    end
  else
    if (SQLCA.VAGen_SQLCODE != +100) /* Unexpected error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05";
      TA1REC.TA1LOCAT[1] = "SY05SKA- ";
      TA1REC.TA1LOCAT[2] = "PRICE    ";
      TA1REC.TA1LOCAT[3] = "1";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M007";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error....*/
      SY05W02.SY05WJM = 0;
      exit stack;
    end
  end

  if (SY05W01.SY05SUGG > 0 /* Price Per Unit.*/
   && SY05W01.SY05LVL == "COLOR") /* Color Level Price*/
    return;
  end

    /* using '***' for style & '**' for dim will give*/
         /* product level pricing*/

  set SY5REC empty;
  set SQLCA empty;
  SY5REC.XGPCD = SY05M007.XGPCD;
  SY5REC.SY1STNBR = SY05M007.SY1STNBR;
  SY5REC.SY2CLRID = "***"; /* Style Level*/
  SY5REC.XDMCD = "**";
  SY5REC.XQACD = SY05M007.XQACD;
  SY5REC.SY5SZID = 0;
  SY5REC.XPYCD = "02"; /* Sugg Rtl Price*/
  SY5REC.XCT-CTRY-CD = "USA ";
  SY5REC.ZFC-CRCY-CD = "USD";

  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0)
    SY05W01.SY05WSB1 = 1;
    while (SY05W01.SY05WSB1 < 7)
      if (SY5REC.SY5PCEDT[SY05WSB1] <= SY05W01.SY05DATE
       && SY5REC.SY5PCEDT[SY05WSB1] != 0)
        SY05W01.SY05SUGG = SY5REC.SY5PRCUN[SY05WSB1];
    /* MOVE 'NONE ' TO SY05W01.SY05LVL;    /* test test test test test*/
        SY05W01.SY05LVL = "STYLE"; /* Price found at Style Level*/
        SY05W01.SY05WSB1 = 99;
      else
        SY05W01.SY05WSB1 = SY05W01.SY05WSB1 + 1;
      end
    end
    return;
  else
    if (SQLCA.VAGen_SQLCODE != +100) /* Unexpected error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY05";
      TA1REC.TA1LOCAT[1] = "SY05SKA- ";
      TA1REC.TA1LOCAT[2] = "PRICE    ";
      TA1REC.TA1LOCAT[3] = "2";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY05M007";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(23); /* table error....*/
      SY05W02.SY05WJM = 0;
      exit stack;
    end
  end

end // end SY05SKA-PRICE

// Submit JCL using TA0P
Function SY05SKB()

   /* This statement group will build the TA6REC and perform*/
   /* XPTA0P to submit the job.*/

   /* Clear JCL part of TA6REC*/
  TA6REC.TA6INDEX = 1;
  while (TA6REC.TA6INDEX <= 400)
    TA6REC.TA6ROW[TA6INDEX] = " ";
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
  end

  TA6REC.TA6INDEX = 1;
  SYWREC.SYWINDEX = 1;
  if (COMMAREA.CAUSERID != "DEMO") /* not test userid*/
    while (SY05T01.TARTYPE[SYWINDEX] != "E")
      if (SY05T01.TARTYPE[SYWINDEX] == "P")
        SY05W02.SY05WJX = 1;
        while (SY05W02.SY05WJX <= SY05W02.SY05WJM)
          TA6REC.TARJCL[TA6INDEX] = SY05W02.SY05WJCL[SY05WJX];
          TA6REC.TARTYPE[TA6INDEX] = " ";
          SY05W02.SY05WJX = SY05W02.SY05WJX + 1;
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
        end
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
      else
        TA6REC.TARJCL[TA6INDEX] = SY05T01.TARJCL[SYWINDEX];
        TA6REC.TARTYPE[TA6INDEX] = SY05T01.TARTYPE[SYWINDEX];
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
      end
    end
  else /* user is demo, use test JCL*/
    while (SY05T02.TARTYPE[SYWINDEX] != "E")
      if (SY05T02.TARTYPE[SYWINDEX] == "P")
        SY05W02.SY05WJX = 1;
        while (SY05W02.SY05WJX <= SY05W02.SY05WJM)
          TA6REC.TARJCL[TA6INDEX] = SY05W02.SY05WJCL[SY05WJX];
          TA6REC.TARTYPE[TA6INDEX] = " ";
          SY05W02.SY05WJX = SY05W02.SY05WJX + 1;
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
        end
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
      else
        TA6REC.TARJCL[TA6INDEX] = SY05T02.TARJCL[SYWINDEX];
        TA6REC.TARTYPE[TA6INDEX] = SY05T02.TARTYPE[SYWINDEX];
        SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
      end
    end
  end

  XPTA0P();
  converseLib.clearScreen();

  if (sysVar.errorCode == "00000000") /* good call*/
    if (TA6REC.TA6RTNCD < "2") /* and call is ok*/
      set SY05W02 empty; /* clear record*/
      SY05W01.SY05WIDX = 1;
      while (SY05W01.SY05WIDX <= 40)
        SY05W01.SY05WPCF[SY05WIDX] = " ";
        SY05W01.SY05WPCF[SY05WIDX] = 0;
        SY05W01.SY05WIDX = SY05W01.SY05WIDX + 1;
      end
      SY05W01.SY05WBLD = "Y";
      if (TA6REC.TA6RTNCD == "0") /* submit successfull*/
        SY05M007.SYMSCMSG = "Job has been Successfully Submitted";
      else /* user has cancelled request*/
        SY05M007.SYMSCMSG = "Job Cancelled by User Request";
      end
    else
      converseLib.validationFailed(176); /* error in submit*/
    end
  else
    converseLib.validationFailed(176); /* error in submit*/
  end

end // end SY05SKB

// select & load valid colors
Function SY05SKC()
   /* ------------------------------------------------------------*/
    /* 1. initialize work table*/
    /* 2. load Price/unit and Effective dates to table*/
   /* ------------------------------------------------------------*/

  SY05W03.SY05WIX1 = 1; /* init table index*/
  while (SY05WIX1 <= 6) /* init table fields*/
    SY05W03.SY1PRIUN[SY05WIX1] = 0;
    SY05W03.SY1EFFDT[SY05WIX1] = 0;
    SY05WIX1 = SY05WIX1 + 1; /* increment index*/
  end

  SY05W03.SY05WIX1 = 1; /* init subscript*/

  while (SY05WIX1 <= 6) /* load temp table*/

         /* move Price per unit to work table*/

    SY05W03.SY1PRIUN[SY05WIX1] = SY5REC.SY5PRCUN[SY05WIX1];
    SY05W03.SY1EFFDT[SY05WIX1] = SY5REC.SY5PCEDT[SY05WIX1];

    SY05WIX1 = SY05WIX1 + 1; /* increment table index*/
  end

  SY05W03.SY05WIX1 = 1; /* init subscript*/

  while (SY05WIX1 <= 6) /* load MAP*/

         /* move Price per unit to Map*/

    if (SY05W03.SY1PRIUN[SY05WIX1] != 0)
      SY05M008.SY05M-UNIT-PRC1[SY05WIX1] = SY05W03.SY1PRIUN[SY05WIX1];
      SY05M008.SY05M-SPACE[SY05WIX1] = " ";
      SY05M008.SY05M-EFF-DT1[SY05WIX1] = SY05W03.SY1EFFDT[SY05WIX1];
    end

    SY05WIX1 = SY05WIX1 + 1; /* increment table index*/
  end


end // end SY05SKC

Record SY05W01 type basicRecord
  3 SY05WBLD SY05WBLD ; 
  3 SY05W12S SY05W12S ; 
  3 SY05WARN SY05WARN ; 
  3 SY05WIDX SY05WIDX ; 
  3 SY05WSX SY05WSX ; 
  3 SY05WMAX SY05WMAX ; 
  3 SY05WARY SY05WARY [40] ; 
    4 SY4IDDSC SY4IDDSC ; 
    4 SY3FRGUT SY3FRGUT ; 
    4 XDVCD XDVCD ; 
    4 SY05WUF SY05WUF ; 
    4 SY05WLBQ SY05WLBQ ; 
    4 SY05WPCF SY05WPCF ; 
    4 SY05WUPC SY05WUPC ; 
      5 SY05WU1 SY05WU1 ; 
      5 * char(1) ; 
      5 SY05WU2 SY05WU2 ; 
      5 * char(1) ; 
      5 SY05WU3 SY05WU3 ; 
      5 * char(1) ; 
      5 SY05WU4 SY05WU4 ; 
  3 SY05WSB1 SY05WSB1 ; 
  3 SY05LVL SY05LVL ; 
  3 SY05DATE SY05DATE ; 
  3 SY05SUGG SY05SUGG ; 
  3 SY05LBFL SY05LBFL ; 
  3 SY05-COO-LBFL SY05-COO-LBFL ; 
  3 SY05SCOO SY05SCOO ; 
end // end SY05W01

//*** RECORD=SY05W02 ****
// ************************************************************
// *     SY05W02 - Working Storage Record                     *
// *     This record is used to hold the array of product     *
// *     information that will be sent to PK4241 when the     *
// *     requests that the job be submitted.                  *
// ************************************************************
// ***********************
Record SY05W02 type basicRecord
  3 SY05WJX SY05WJX ; 
  3 SY05WJM SY05WJM ; 
  3 SY05WJCL SY05WJCL [350] ; 
    4 XGPCD XGPCD ; 
    4 SY1STNBR SY1STNBR ; 
    4 SY2CLRID SY2CLRID ; 
    4 XDMCD XDMCD ; 
    4 XGACD XGACD ; 
    4 SY4IDDSC SY4IDDSC ; 
    4 SY05WU1 SY05WU1 ; 
    4 SY05WU2 SY05WU2 ; 
    4 SY05WU3 SY05WU3 ; 
    4 SY05WU4 SY05WU4 ; 
    4 SY05WLBQ SY05WLBQ ; 
    4 SY05SUGG SY05SUGG ; 
    4 SY05REQ SY05REQ ; 
    4 SY05SCOO SY05SCOO ; 
    4 SY05-COO-REQ SY05-COO-REQ ; 
    4 SY05SET SY05SET ; 
end // end SY05W02

//*** RECORD=SY05W03 ****
// OVERVIEW:
// 
// 
//        This record is the working record used by the
//        Price pop-up window process(SY05300).
// 
// MAINTENANCE HISTORY:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          08/30/00  BPARAN  CREATED
// 
// ***********************
Record SY05W03 type basicRecord
  10 SY05WGRP SY05WGRP ; 
    15 XGPCD XGPCD ; 
    15 SY1STNBR SY1STNBR ; 
  10 SY05WHDR SY05WHDR ; 
    15 SY05WHD1 SY05WHD1 ; 
    15 SY05WHD2 SY05WHD2 ; 
  10 SY05WIX1 SY05WIX1 ; 
  10 SY05WTB SY05WTB [6] ; 
    15 SY1PRIUN SY1PRIUN ; 
    15 SY1EFFDT SY1EFFDT ; 
  10 SY1MTRFL SY1MTRFL ; 
  10 SY1SELCT SY1SELCT ; 
  10 SY1SELFL SY1SELFL ; 
end // end SY05W03

//*** RECORD=SY05W04 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - SY05300
// 
// Special Considerations:
// 
//            The field SY05WENR is used in conjunction with
//            the SY05WERR field to indicate the type of error.
//            When the error flag is 'Y'es, the error number
//            will contain the following values:
//                 0 = Invalid function key pressed
//                 1 = Empty table (no rows found for GPC and
//                     style entered).
//                 2 = Unexpected DB2 error loading Prices.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          08/30/00  BPARAN  Created
// ************************************************************
// ***********************
Record SY05W04 type basicRecord
  10 SY05WCT1 SY05WCT1 ; 
  10 SY05WCT2 SY05WCT2 ; 
  10 SY05WSIX SY05WSIX ; 
  10 SY05WPIX SY05WPIX ; 
  10 SY05WINX SY05WINX [10] ; 
  10 SY05WEND SY05WEND ; 
  10 SY05WFFL SY05WFFL ; 
  10 SY05WERR SY05WERR ; 
  10 SY05WENR SY05WENR ; 
  10 SY05WHDR SY05WHDR ; 
  10 SY05W-SEL-ROW-FL SY05W-SEL-ROW-FL ; 
end // end SY05W04

Record SY05WCOL type basicRecord
  10 SY05WDAT SY05WDAT [600] ; 
    15 SY05WSEL SY05WSEL ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 SY2CLRAB SY2CLRAB ; 
    15 XDMCD XDMCD ; 
    15 PG9CLRNB PG9CLRNB ; 
    15 XLCCD XLCCD ; 
  10 SY05M-HEADING SY05M-HEADING ; 
    15 SY05W-HEAD-A SY05W-HEAD-A ; 
    15 SY05W-HEAD-B SY05W-HEAD-B ; 
  10 SY05W-FORMAT-1 SY05W-FORMAT-1 ; 
    15 SY05W-F1-CLRID SY05W-F1-CLRID ; 
    15 * char(1) ; 
    15 SY05W-F1-CLRAB SY05W-F1-CLRAB ; 
    15 * char(3) ; 
    15 SY05W-F1-XDM SY05W-F1-XDM ; 
    15 * char(1) ; 
    15 SY05W-F1-XDMABRV SY05W-F1-XDMABRV ; 
    15 * char(3) ; 
    15 SY05W-F1-XLC SY05W-F1-XLC ; 
    15 * char(1) ; 
    15 SY05W-F1-XLCABRV SY05W-F1-XLCABRV ; 
  10 SY05W-FORMAT-2 SY05W-FORMAT-2 ; 
    15 SY05W-F2-STNBR SY05W-F2-STNBR ; 
    15 * char(3) ; 
    15 SY05W-F2-CLRID SY05W-F2-CLRID ; 
    15 * char(1) ; 
    15 SY05W-F2-CLRAB SY05W-F2-CLRAB ; 
    15 * char(3) ; 
    15 SY05W-F2-XDM SY05W-F2-XDM ; 
    15 * char(1) ; 
    15 SY05W-F2-XDMABRV SY05W-F2-XDMABRV ; 
    15 * char(3) ; 
    15 SY05W-F2-CLRNB SY05W-F2-CLRNB ; 
      20 SY05W-F2-CLRNB-X SY05W-F2-CLRNB-X [3] ; 
    15 * char(3) ; 
    15 SY05W-F2-XLC SY05W-F2-XLC ; 
    15 * char(1) ; 
    15 SY05W-F2-XLCABRV SY05W-F2-XLCABRV ; 
  10 SY05WUPD SY05WUPD ; 
  10 SY05WCCT SY05WCCT ; 
  10 SY05WSDX SY05WSDX ; 
  10 SY05WTOP SY05WTOP ; 
  10 SY05MXLC SY05MXLC ; 
  10 SY05WCDX SY05WCDX ; 
  10 SY05WMSG SY05WMSG ; 
    15 SY05WMS8 SY05WMS8 ; 
    15 SY05WMS1 SY05WMS1 ; 
    15 SY05WMS2 SY05WMS2 ; 
    15 SY05WMS7 SY05WMS7 ; 
  10 SY05WMSU SY05WMSU ; 
    15 SY05WMS9 SY05WMS9 ; 
    15 SY05WMS4 SY05WMS4 ; 
    15 SY05WMS3 SY05WMS3 ; 
end // end SY05WCOL

Record SY05WREC type basicRecord
  3 XGPCD XGPCD ; 
  3 SY1STNBR SY1STNBR ; 
  3 SY2CLRID SY2CLRID ; 
  3 XDMCD XDMCD ; 
  3 SY05WTIM SY05WTIM ; 
    4 SY05WCHH SY05WCHH ; 
    4 SY05WFIL SY05WFIL ; 
    4 SY05WCMM SY05WCMM ; 
  3 SY05WMEN SY05WMEN ; 
  3 PG4STNBR PG4STNBR ; 
  3 SY05WSUGGREQ SY05WSUGGREQ ; 
  3 SY05WCOOREQ SY05WCOOREQ ; 
  3 SY05WSETREQ SY05WSETREQ ; 
end // end SY05WREC

DataItem SY05-COO-LBFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05-COO-REQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY05LBFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05LVL char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen Column Headings
DataItem SY05M-HEADING char(69)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sy0mm004 life cycle code
DataItem SY05MXLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05REQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05SCOO char(15)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05SET char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05SUGG num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Color Abrv.
DataItem SY05W-F1-CLRAB char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color Id
DataItem SY05W-F1-CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dimension
DataItem SY05W-F1-XDM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dimension Abrv
DataItem SY05W-F1-XDMABRV char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Life Cycle
DataItem SY05W-F1-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Life Cycle Abrv.
DataItem SY05W-F1-XLCABRV char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color Abrv.
DataItem SY05W-F2-CLRAB char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Color Id
DataItem SY05W-F2-CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Variation Number
DataItem SY05W-F2-CLRNB num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Variation Number Alpha
DataItem SY05W-F2-CLRNB-X char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Style Number
DataItem SY05W-F2-STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dimension
DataItem SY05W-F2-XDM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dimension Abrv.
DataItem SY05W-F2-XDMABRV char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Life Cycle
DataItem SY05W-F2-XLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Life Cycle Abrv.
DataItem SY05W-F2-XLCABRV char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen Data Line Format 1
DataItem SY05W-FORMAT-1 char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen data line format 2
DataItem SY05W-FORMAT-2 char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05W-HEAD-A char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05W-HEAD-B char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Select this Color Row (Y/N)
DataItem SY05W-SEL-ROW-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// On 1st or 2ond screen
DataItem SY05W12S char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// User has been Warned (Y/N)
DataItem SY05WARN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Array of Size/UPC data
DataItem SY05WARY char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Build Array (Y/N)
DataItem SY05WBLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tot. # of colors selected
DataItem SY05WCCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage index
DataItem SY05WCDX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change time hour
DataItem SY05WCHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change time minitue
DataItem SY05WCMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY05WCOOREQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table counter
DataItem SY05WCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen counter
DataItem SY05WCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05WDAT char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag
DataItem SY05WEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error number
DataItem SY05WENR num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// DB2 error flag
DataItem SY05WERR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem SY05WFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fill character ':'
DataItem SY05WFIL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record key
DataItem SY05WGRP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map header part 1
DataItem SY05WHD1 char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map header part 2
DataItem SY05WHD2 char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pop-up map header
DataItem SY05WHDR char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for Array
DataItem SY05WIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem SY05WINX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// table index
DataItem SY05WIX1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// job control language stmt
DataItem SY05WJCL char(62)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Max elements in Array
DataItem SY05WJM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for Array
DataItem SY05WJX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Number of Labels to Print
DataItem SY05WLBQ num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Max elements in Array
DataItem SY05WMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// color menu flag y=on n=off
DataItem SY05WMEN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// # of colors selected
DataItem SY05WMS1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msg. for colors selected
DataItem SY05WMS2 char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// # of colors updated
DataItem SY05WMS3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msg. for colors updated
DataItem SY05WMS4 char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg. for colors selected
DataItem SY05WMS7 char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg. for colors selected
DataItem SY05WMS8 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg. for colors selected
DataItem SY05WMS9 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total colors selected msg
DataItem SY05WMSG char(68)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total colors updated msg
DataItem SY05WMSU char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Parm Created Flag (Y/N)
DataItem SY05WPCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// passed index table location
DataItem SY05WPIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05WSB1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen index
DataItem SY05WSDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy04m001 select field
DataItem SY05WSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05WSETREQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem SY05WSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY05WSUGGREQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for Screen
DataItem SY05WSX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temporary table desc area
DataItem SY05WTB char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen sy05m time
DataItem SY05WTIM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last screen entry
DataItem SY05WTOP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// number system character
DataItem SY05WU1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// Manufacturer identification
DataItem SY05WU2 num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// Nike item number
DataItem SY05WU3 num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// Check digit
DataItem SY05WU4 num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// UPC found by search flag
DataItem SY05WUF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Universal Product Code
DataItem SY05WUPC char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// # of colors updated
DataItem SY05WUPD num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XDM_DIM_CD
DataItem SY1EFFDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY1MTRFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_COLR_CD_ID
DataItem SY1PRIUN decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY1SELCT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY1SELFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

