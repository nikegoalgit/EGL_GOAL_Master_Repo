package sy09;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import rd.common.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=SY09 ****
// this application will allow the user to select all the color
// records and then chose all the records or some of the record
// to process. the chosen records are then allowed to be
// changed.
// 
// ************************************************************
// maintenance:
// 
//  rev.
// number    who       when      why
// ------    -------   --------  ------------------------------
//  00       mbuhit    01-22-88  created application
//  01       mbuhit    03-18-88  sy09sfq - increased size of
//                  sy2rec audit before and after images.
//                  Changed some fieldnames to correspond with
//                  sy2rec.
// 02        mbuhit    05-28-88  correct season-year move from
//                               map to sy2rec.
// 03        mbuhit    11-28-88  p093 - change apparel default
//                               begin-offer-date to xsnofrdt.
// 04        mbuhit    12-07-88  p091 - add pf14 exit to sy0l.
//           mhalst    03-07-89  Phase IV screen changes
// P0104     MHALST    03-28-89  Remove use of XTVCD.
// P0100     MHALST    04-14-89  add blank style to map M002
// -spl-     jwood     04-17-89  added xssegtr logic
// -spl-     jwood     04-17-89  added noncsp option to calls
//           MHALST    05-16-89  Audit changes for VCOLOR01.
//           MHALST    09-15-89  Add field SY2PDCMO
//           MHALST    11-14-89  DB2 changes and add SYZTBL
// P0134     MHALST    04-11-90  Add code for forcasters, also
//                               change program to select what
//                               screen to display to user.
//           MHALST    04-23-90  Correct PF15 logic on map 002
//           MHALST    04-25-90  Correct logic for fastpath
// P0143     MHALST    06-28-90  Disallow Scheduler 99
//           MHALST    10-05-90  DB2 Changes, add new fields
// P148      MHALST    11-06-90  Correct edits for Season/Year
//           MHALST    02-11-91  DB2 changes
//           MHALST    09-20-91  Allow A thru E in Tech. Diff.
//           MHALST    05-19-92  Add life cycle and division to
//                               map M002.
//           MHALST    07-10-92  Allow season update for gpc 02
//           MHALST    11-30-92  Correct bug in fastpath
//           MHALST    01-20-93  Correct validation of XSN
// EAO005    MHALST    03-11-93  Correct validation of XSN
//           MHALST    07-07-93  Correct validation of Sched.
//           MHALST    10-20-93  Add 'F' value to Tech. Diff.
//           MHALST    12-10-93  Add 'G' value to Tech. Diff.
// SY0211    MBUHIT    04-20-93  Mods mult. mktg regions/color
//           MHALST    10-03-95  Add MN0V to get users region
//           MHALST    11-09-95  Add H&I to tech difclt ind
//           MHALST    06-28-96  Protect fields if on PPS
//           MHALST    12-16-96  Change Tech Difclt edit
//           MHALST    05-02-97  Change to show blank style for
//                               apparel products, and style
//                               group for footwear products.
//           MHALST    05-23-97  Correct logic when bad sched
//           NGANGO    11-06-97  Y2K MODIFICATIONS. Modified
//                             W.S. SY09W01, Processes SY09SFF,
//                             SY09SHB, SY09SHD, SY09SHF,
//                          SY09Sgd, SY09Sfd ,
//                          SY09SGG, SY09SHG and Map SY09M002
//                          modifieed to remove leading zero
//                          suppression for some fields (yymm).
//      MHALST    05-05-98  Correct YYMM date edits.
//      MHALST    10-15-01  NSC Build Domestic close-out month
//                          from prop offer end date.
// ************************************************************
// 
// 
// io modules    table
// used          view name
// ----------    --------------
//  IO0120       dprod.vstyle01
//  IO3150       dprod.vsygrp01
//  IO0130       dprod.vcolor01
//  IO6640       dprod.vsyreg01
//  IO0530       dprod.vsyaud01
//  IO0520       dprod.vsytag01
//  VSYDVX02     DPRODG.VSYDVX02
// 
// *********************
Program SY09 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  PG1REC PG1REC; // record
  SQLCA SQLCA; // record
  SY09W01 SY09W01; // record
  SY09WCOL SY09WCOL; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYBREC SYBREC; // record
  SYEREC SYEREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VSYDVX02 VSYDVX02; // record
  VSYREG01 VSYREG01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYRGTBL {deleteAfterUse = yes}; // table
  use SYZTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XDVTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSETBL {deleteAfterUse = yes}; // table
  use XSNTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use SY09M.SY09M001,  // forms
      SY09M.SY09M002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY09001: SY09001();


    if (SYWREC.SYWPFOPT == "PF15") /* color select screen*/
      goto SY09005;
    else
      goto SY09025; /* change color screen*/
    end

    SY09005: SY09005();


    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2)
      converseLib.clearScreen();
      
      goto SY09001;
    end
    if (converseVar.validationMsgNum > 0
     && SYWREC.SYWMSGFL == "N")
      goto SY09005;
    end
    if (converseVar.eventKey is pf12)
      goto SY09010;
    end
    if (converseVar.eventKey is pf16)
      goto SY09025;
    end
    if (converseVar.eventKey is enter)
      goto SY09010;
    end

    converseLib.validationFailed(19);
    goto SY09005;

    SY09010: SY09010();


    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2)
      converseLib.clearScreen();
      
      goto SY09001;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY09005;
      else
        if (converseVar.eventKey is pf12)
          goto SY09015;
        else
          if (converseVar.eventKey is enter)
            goto SY09015;
          else
            converseLib.validationFailed(19);
            goto SY09005;
          end
        end
      end
    end


    SY09015: SY09015();


    if (converseVar.eventKey is pa2)
      goto SY09001;
    end
    if (converseVar.validationMsgNum > 0)
      goto SY09015;
    end
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
      goto SY09015;
    end
    if (converseVar.eventKey is pf12)
      goto SY09020;
    end
    if (converseVar.eventKey is pf16)
      goto SY09025;
    end
    if (converseVar.eventKey is enter)
      goto SY09020;
    end

    converseLib.validationFailed(19);
    goto SY09015;

    SY09020: SY09020();

    if (converseVar.validationMsgNum > 0
     && SYWMSGFL == "N")
      goto SY09005;
    else
      goto SY09030;
    end


    SY09025: SY09025();


    if (converseVar.eventKey is pa2)
      goto SY09001;
    else
      if (converseVar.validationMsgNum > 0
       && SYWREC.SYWMSGFL == "N")
        goto SY09025;
      else
        if (converseVar.eventKey is pf12)
          goto SY09025;
        else
          if (converseVar.eventKey is enter)
            goto SY09030;
          else
            converseLib.validationFailed(19);
            goto SY09025;
          end
        end
      end
    end



    SY09030: SY09030();

    if (converseVar.eventKey is pa2)
      goto SY09001;
    end

    if (converseVar.eventKey is pf3
     && SYWREC.SYWPFOPT == "PF15")
      goto SY09015;
    end

    if (converseVar.eventKey is pf15)
      goto SY09005;
    end

    if (converseVar.validationMsgNum > 0
     && SYWREC.SYWMSGFL == "N")
      goto SY09030;
    end

    if (converseVar.eventKey is pf12)
      goto SY09030;
    end

    if (converseVar.eventKey is enter)
      if (SYWREC.SYWPFOPT == "PF15")
        goto SY09020;
      else
        goto SY09025;
      end
    end

    converseLib.validationFailed(19);
    goto SY09030;

  end // end main
end // end SY09

// init. application
Function SY09001()


       /* *****************************************/
       /* * 1. init. application.                **/
       /* * 2. set all rec & maps to empty       **/
       /* *    and clear.                        **/
       /* * 3. if the commarea.xgpcd is diff.    **/
       /* *    than the sywrec.xgpcd use the     **/
       /* *    sywrec.xgpcd because the user     **/
       /* *    must have transfered into this    **/
       /* *    application with the sywrec.xgpcd **/
       /* * 4. validate the gpc code.            **/
       /* * 5. determine what map to show user   **/
       /* *    based on option entered from V or **/
       /* *    gpc code in use.                  **/
       /* *****************************************/

  XSENTRY();
  XSSEGTR(); /* set segmented transaction id*/
  set SYWREC empty;

  set SY1REC empty;
  set SY2REC empty;
  set VSYREG01 empty;
  set SY9REC empty;
  set SYAREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set SY09M001 initial;
  set SY09M002 initial;

  SYWREC.SYWMSGFL = "N";

  if (COMMAREA.CAFROMAP == "SY0V") /* comming from sy appl*/
    SYWREC.SYWTRANF = COMMAREA.CAUSERA;
  end

  if (SYWREC.XGPCD == " ")
    SYWREC.XGPCD = COMMAREA.XGPCD;
  end

  if (SYWREC.XGPCD in XGPTBL.XGPCD)
    SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end

  SY09M001.XGPCD = SYWREC.XGPCD;
  SY09M001.XGPABRV = SYWREC.XGPABRV;
  SY09M002.XGPCD = SYWREC.XGPCD;
  SY09M002.XGPABRV = SYWREC.XGPABRV;

   /* now determine what screen to show user first*/

  if (SYWREC.SYWPFOPT == "PF15" /* user entered PF15 from V*/
   || SYWREC.SYWPFOPT == "PF16") /* or PF16*/
     /* next sentence (we know what to do)*/
  else
    if (SYWREC.XGPCD == "03") /* apparel*/
      SYWREC.SYWPFOPT = "PF15"; /* so use color sel screen*/
      SY09SBG(); /* set fields to normal*/
    else
      SYWREC.SYWPFOPT = "PF16"; /* use color chg screen*/
      if (SYWREC.XGPCD == " ") /* no gpc code*/
        set SY09M002.XGPCD cursor;
      end
    end
  end

       /* *** get todays date*/
  TA2REC.TA2DTOPT = "GETDATE";
  SY09SAB();
  SYWREC.SYWTODAY = TA2REC.TA2GRGGN;

  SYWREC.SYWMSGFL = "N";

   /* Now, find out what region user is and set-up table of*/
   /* valid regions the user can access.*/
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE == 0)
    converseLib.validationFailed(124); /* User Id not authorized*/
  end

end // end SY09001

// get style/life cycle selection
Function SY09005()


       /* ***************************************/
       /* *  get style/life cycle selection    **/
       /* ***************************************/

  SY09M001.SYMTTLNM = " COLOR/DIMENSION SELECT MENU - CHG ";
  SY09M001.SYMPRONM = "SY09005";
  SY09M001.SYMREV = "04"; /* program revision number!!!!!!!*/
  SY09M001.SYMCURDT = VGVar.currentShortGregorianDate;

  SY09SBG(); /* set fields protect*/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    set SY09M001.SY1STNBR cursor;
  end

  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY09M001 ;
   /* ***********************************************************/


  SYWREC.SYWMSGFL = "N";

       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY09SBB();


       /* ***************************************/
       /* *  validate style and gpc codes      **/
       /* ***************************************/

  SY09SAA();


       /* ***************************************/
       /* *  get existing style row            **/
       /* ***************************************/

  SY1REC.XGPCD = SY09M001.XGPCD;
  SY1REC.SY1STNBR = SY09M001.SY1STNBR;
  SY09SBE();


       /* ***************************************/
       /* *  validate life cycle code          **/
       /* ***************************************/

  SY09SGE();



end // end SY09005

// get selected color rows
Function SY09010()

  SYWREC.SYWMSGFL = "N";

       /* ******************************************/
       /* *  select all colors and build working  **/
       /* *  storage section for records.         **/
       /* ******************************************/

  SY09SCA();

       /* ******************************************/
       /* *  build the color menu screen.         **/
       /* *                                       **/
       /* ******************************************/

  SY09SCI();


  converseLib.validationFailed(71); /* enter 'a' or 's' to select all or some colors*/
  SYWREC.SYWMSGFL = "Y";
  SY09WCOL.SY09WMS8 = "          **  ";
  SY09WCOL.SY09WMS2 = " COLORS SELECTED ";
  SY09WCOL.SY09WMS7 = "AFTER SELECTION, PRESS \"ENTER\" ";
  SY09WCOL.SY09WMS1 = SY09WCOL.SY09WCCT;
  SY09M001.SYMSCMSG = SY09WCOL.SY09WMSG;

  SY09WCOL.SY09WUPD = 0; /* set # of colors updated to 0*/

end // end SY09010

// select color rows to process
Function SY09015()


       /* ***************************************/
       /* *  select color rows to process      **/
       /* ***************************************/

  SY09M001.SYMTTLNM = " COLOR/DIMENSION SELECT MENU - CHG ";
  SY09M001.SYMPRONM = "SY09015";
  SY09M001.SYMREV = "04"; /* program revision number!!!!!!!!*/
  SY09M001.SYMCURDT = VGVar.currentShortGregorianDate;

  set SY09M001.SY1STNBR skip;
  set SY09M001.XGPCD skip;
  set SY09M001.SY09MXLC skip;
  set SY09M001.SY09MSEL[1] cursor;

  converseVar.segmentedMode = 1;


   /* ***********************************************************/

  converse SY09M001 ;
   /* ***********************************************************/

  SYWREC.SYWMSGFL = "N";
  SY09M001.SYMSCMSG = " ";
       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY09SDA();

       /* ***************************************/
       /* *  if ezeaid = pf7 scroll backward   **/
       /* *                                    **/
       /* ***************************************/

  if (converseVar.eventKey is pf7)
    SY09SDB();
  end


       /* ***************************************/
       /* *  if ezeaid = pf8 scroll backward   **/
       /* *                                    **/
       /* ***************************************/

  if (converseVar.eventKey is pf8)
    SY09SDC();
  end

       /* ***************************************/
       /* *  if ezeaid = enter check screen    **/
       /* *  and continue.                     **/
       /* ***************************************/

  if (converseVar.eventKey is enter)

    SY09SDD(); /* process all or selected colors*/

    SY09WCOL.SY09WCDX = 1;
  end

end // end SY09015

// get the selected color row
Function SY09020()


       /* ***************************************/
       /* *  1. use the selected colors from   **/
       /* *  working storage to retrieve the   **/
       /* *  next color id from the color      **/
       /* *  table.                            **/
       /* *                                    **/
       /* *  2. the process will validate      **/
       /* *     and retrieve all code descs.   **/
       /* *                                    **/
       /* ***************************************/

  converseLib.clearScreen();
  set SY09M002 initial;
  SY09M002.XGPCD = SYWREC.XGPCD;
  SY09M002.XGPABRV = SYWREC.XGPABRV;
  SY09M002.SY1STYNM = SY1REC.SY1STYNM;

  SYWREC.SYWMSGFL = "N";

  if (SY09WCOL.SY09WSEL[1] == "A")
    SY09SEA(); /* process all color records*/
  else
    SY09SEB(); /* process only select color records*/
  end

       /* ***************************************/
       /* * get color id row  for              **/
       /* * sy09m001                           **/
       /* ***************************************/

  SY09SEC();

       /* ***************************************/
       /* * get code description for screens   **/
       /* * sy09m001 & sy09m002                **/
       /* ***************************************/

  SY09SED();

       /* ***************************************/
       /* * For footwear, check x-ref for to   **/
       /* * see if PPS color.                  **/
       /* ***************************************/

  if (SY09M001.XGPCD == "02")
    SY09S-CHK-SYDVX();
  else
    SY09W-ON-PPS = "N";
  end


       /* ***************************************/
       /* * get region codes and descriptions  **/
       /* * for screen sy09m002                **/
       /* ***************************************/

  SY09S-SCN-SYREG();

  SYWMSGFL = "Y";



end // end SY09020

// Get specific color row
Function SY09025()


       /* ***************************************/
       /* * Get specific color row             **/
       /* ***************************************/


  SY09M002.SYMTTLNM = " PRODUCT COLOR/DIMENSION - CHG ";
  SY09M002.SYMPRONM = "SY09025";
  SY09M002.SYMREV = "04"; /* program revison number!!!!!!!*/
  SY09M002.SYMCURDT = VGVar.currentShortGregorianDate;

  if (SY09M001.XGPCD == "02") /* If footwear*/
    SY09M002.SY09M-FLD-DESC1 = "STYLE GROUP:";
    SY09M002.SY09M-FLD-DESC2 = "STY GRP NAME:";
  else
    SY09M002.SY09M-FLD-DESC1 = "BLANK STYLE/COLR:";
    SY09M002.SY09M-FLD-DESC2 = "BLK CLR DESC:";
  end

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    SY09SIA(); /* set-up screen*/
    if (SY09M002.XGPCD == " ") /* no gpc code*/
      set SY09M002.XGPCD cursor; /* so put cursor there*/
    else
      set SY09M002.SY1STNBR cursor; /* put cursor on style*/
    end
  end


  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY09M002 ;
   /* ***********************************************************/


  SYWREC.SYWMSGFL = "N";

       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY09SIF();

       /* ***************************************/
       /* *  set sy09m002 screen to normal     **/
       /* ***************************************/

  SY09SFB();

       /* ***************************************/
       /* * Get Color data and load to screen  **/
       /* ***************************************/

  SY09SIB(); /* check gpc code*/
  SY09SIC(); /* check style number*/
  if (converseVar.validationMsgNum == 0) /* no errors*/
    SY09SID(); /* get color and load to screen*/
  end
  if (converseVar.validationMsgNum == 0) /* no errors*/
    SY09SED(); /* load code descs to screen*/

       /* ***************************************/
       /* * Get Region data and load to screen **/
       /* ***************************************/

    SY09S-SCN-SYREG(); /* get regions for this color*/

       /* ***************************************/
       /* * If Footwear, check for PPS product **/
       /* ***************************************/

    if (SY09M001.XGPCD == "02") /* If Footwear*/
      SY09S-CHK-SYDVX(); /* Check x-ref for PPS color*/
    else
      SY09W-ON-PPS = "N"; /* Set flag to No*/
    end
  end

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is pf12)
      converseLib.validationFailed(131);
      exit stack;
    end
  end

end // end SY09025

// update the selected color row
Function SY09030()


       /* ***************************************/
       /* * update selected color row          **/
       /* ***************************************/


  if (SYWREC.SYWPFOPT == "PF15") /* multiple color*/
    SY09M002.SYMTTLNM = " PRODUCT MULT COLOR/DIMENSION - CHG ";
  else /* user working with single color*/
    SY09M002.SYMTTLNM = " PRODUCT COLOR/DIMENSION - CHG ";
  end
  SY09M002.SYMPRONM = "SY09030";
  SY09M002.SYMREV = "04"; /* program revison number!!!!!!!*/
  SY09M002.SYMCURDT = VGVar.currentShortGregorianDate;

  if (SY09M001.XGPCD == "02")
    SY09M002.SY09M-FLD-DESC1 = "STYLE GROUP:";
    SY09M002.SY09M-FLD-DESC2 = "STY GRP NAME:";
  else
    SY09M002.SY09M-FLD-DESC1 = "BLANK STYLE/COLR:";
    SY09M002.SY09M-FLD-DESC2 = "BLK CLR DESC:";
  end
  set SY09M002.SY1STNBR protect;
  set SY09M002.XGPCD protect;
  set SY09M002.SY2CLRID protect;
  set SY09M002.XDMCD protect;
  if (SY09M002.XGPCD == "03")
    set SY09M002.XSECD skip;
    set SY09M002.XSNYR skip;
  end

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    /* next sentence*/
  else
    SY09SIE(); /* check field protects*/
    if (SY09M002.XGPCD == "02")
      set SY09M002.SY2SSCIN cursor;
    else
      set SY09M002.PG1SC4CD cursor;
    end
  end


  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY09M002 ;
   /* ***********************************************************/


  SYWREC.SYWMSGFL = "N";

       /* ***************************************/
       /* *  check pf keys and transfer to     **/
       /* *  other applications.               **/
       /* ***************************************/

  SY09SFA();

       /* ***************************************/
       /* *  set sy09m002 screen to normal     **/
       /* ***************************************/

  SY09SFB();

       /* ***************************************/
       /* * validate codes for sy09m002 screen **/
       /* ***************************************/

  SY09SFC();

       /* ***************************************/
       /* * check if any changes were made and **/
       /* * if so update the color row.        **/
       /* ***************************************/

  if (converseVar.validationMsgNum > 0)
    exit stack;
  else
    if (converseVar.eventKey is pf12)
      converseLib.validationFailed(131);
      exit stack;
    else
      if (converseVar.eventKey is pf3)
        SY09SDF();
        SY09SCI();
      else
        SY09SFD(); /* if changes, update color*/
        if (SY09WCOL.SY09WSEL[1] == "A"
         || SYWREC.SYWPFOPT == "PF16")
          set SY09M002 empty;
          SY09M002.XGPCD = SYWREC.XGPCD;
          SY09M002.XGPABRV = SYWREC.XGPABRV;
        else
          SY09WCOL.SY09WSEL[SY09WCDX] = " ";
        end
      end
    end
  end


       /* ***************************************/
       /* *  transfer to other applications.   **/
       /* ***************************************/

  SY09SFE();



end // end SY09030

// Check VSYDVX02 to set PPS flag
Function SY09S-CHK-SYDVX()

   /* *******************************************************/
   /* Read the DPRODG.VSYDVX02 table to set flag to*/
   /* indicate if this color came from PPS system.*/
   /* *******************************************************/

  VSYDVX02.XGP-GPC-CD = SY2REC.XGPCD;
  VSYDVX02.SY-STY-NBR = SY2REC.SY1STNBR;
  VSYDVX02.SY-COLR-CD-ID = SY2REC.SY2CLRID;
  VSYDVX02.XDM-DIM-CD = SY2REC.XDMCD;

  call "VSYDVX02" ("SA", SQLCA, VSYDVX02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (VSYDVX02.RB-SG-COLR-ID != 0)
      SY09W-ON-PPS = "Y";
    else
      SY09W-ON-PPS = "N";
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY09W-ON-PPS = "N";
    else
      converseLib.validationFailed(22); /* corp table error - contact sys dvl*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09";
      TA1REC.TA1LOCAT[1] = "S-CHK-SYDVX";
      TA1REC.TA1LOCAT[2] = "VSYDVX02 ";
      TA1REC.TA1LOCAT[3] = "S ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY09M002";
      TA1REC.TA1DBASE = "DPRODG";
      TA1REC.TA1TBLVU = "VSYDVX02";
      TA1REC.TA1TBLKE = VSYDVX02.VSYDVX02-KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      exit stack;
    end
  end

end // end SY09S-CHK-SYDVX

// get marketing region desc (6)
Function SY09S-DIS-XDR()

       /* ******************************************/
       /* * DISPLAY CURRENT MKTG REGION DESC.     **/
       /* ******************************************/


  if (VSYREG01.XDR-PROD-REG-CD in XDRTBL.XDR-PROD-REG-CD)
    if (XDRTBL.XXX-STAT[sysVar.arrayIndex] == "A")
      SY09M002.SY09M-MKT-REG[SY09WIDX] = VSYREG01.XDR-PROD-REG-CD;
      SY09M002.SY09M-MKT-SDESC[SY09WIDX] = XDRTBL.XDR-PROD-REG-SDESC[sysVar.arrayIndex];
      SY09WIDX = SY09WIDX + 1;
    else
      SY09M002.SY09M-MKT-REG[SY09WIDX] = " ";
      SY09M002.SY09M-MKT-SDESC[SY09WIDX] = " ";
    end
  else
    SY09M002.SY09M-MKT-REG[SY09WIDX] = " ";
    SY09M002.SY09M-MKT-SDESC[SY09WIDX] = " ";
  end
    /* note - do not increment screen index when bad region*/
end // end SY09S-DIS-XDR

// Get Style Group name
Function SY09S-GET-SYGRP()

   /* Get style group name*/

  SYBREC.SYBSTGNB = SY1REC.SYBSTGNB;
  call "IO3150" ("S ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    SY09M002.SY09M-FLD-VAL2 = SYBREC.SYBSTGNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY09M002.SY09M-FLD-VAL2 = "UNKNOWN";
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09";
      TA1REC.TA1LOCAT[1] = "S";
      TA1REC.TA1LOCAT[2] = "SY09S";
      TA1REC.TA1MAP = "SY09M002";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYGRP01";
      TA1REC.TA1TBLKE = SYBREC.SYBSTGNB;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20);
      exit stack;
    end
  end

end // end SY09S-GET-SYGRP

// Scan regions for current color
Function SY09S-SCN-SYREG()

   /* *******************************************************/
   /* Scan region rows for current color,*/
   /* save region codes.*/
   /* *******************************************************/

  SY09WIDX = 1;
  VSYREG01.XGP-GPC-CD = SY2REC.XGPCD;
  VSYREG01.SY-STY-NBR = SY2REC.SY1STNBR;
  VSYREG01.SY-COLR-CD-ID = SY2REC.SY2CLRID;
  VSYREG01.XDM-DIM-CD = SY2REC.XDMCD;

  call "IO6640" ("S2", SQLCA, VSYREG01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* region table error - contact sys dvl*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09";
    TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
    TA1REC.TA1LOCAT[2] = "IO6640   ";
    TA1REC.TA1LOCAT[3] = "S2 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYREG01";
    TA1REC.TA1TBLKE = VSYREG01.VSYREG01-KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end

  while (SQLCA.VAGen_SQLCODE == 0
   && SY09WIDX <= 6)

    call "IO6640" ("N2", SQLCA, VSYREG01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0) /* found:*/
      SY09M002.SY09M-MKT-REG[SY09WIDX] = VSYREG01.XDR-PROD-REG-CD;
      SY09S-DIS-XDR(); /* get region description*/
    else
      if (SQLCA.VAGen_SQLCODE != 100) /* if not end of file, then bad error*/
        converseLib.validationFailed(21); /* region table error - contact sys dvl*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09";
        TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
        TA1REC.TA1LOCAT[2] = "IO6640   ";
        TA1REC.TA1LOCAT[3] = "N2 ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VSYREG01";
        TA1REC.TA1TBLKE = VSYREG01.VSYREG01-KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        exit stack;
      end
    end
  end

  call "IO6640" ("C2", SQLCA, VSYREG01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* region table error - contact sys dvl*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09";
    TA1REC.TA1LOCAT[1] = "S-SCN-SYREG";
    TA1REC.TA1LOCAT[2] = "IO6640   ";
    TA1REC.TA1LOCAT[3] = "C2 ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYREG01";
    TA1REC.TA1TBLKE = VSYREG01.VSYREG01-KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end


end // end SY09S-SCN-SYREG

// get marketing region desc (6)
Function SY09S-VAL-XDR-6()

       /* ******************************************/
       /* *   GET ALL SIX MARKETING REGION CODES  **/
       /* ******************************************/

  SY09WIDX = 1;

  while (SY09WIDX <= 6)
    if (SY09M002.SY09M-MKT-REG[SY09WIDX] == "99")
      converseLib.validationFailed(3); /* invalid code*/
      SY09M002.SY09M-MKT-SDESC[SY09WIDX] = "INVALID";
      set SY09M002.SY09M-MKT-REG[SY09WIDX] cursor, bold;
    else
      if (SY09M002.SY09M-MKT-REG[SY09WIDX] == " ")
        SY09M002.SY09M-MKT-SDESC[SY09WIDX] = " ";
      else
        if (SY09M002.SY09M-MKT-REG[SY09WIDX] == "99")
          set SY09M002.SY09M-MKT-REG[SY09WIDX] cursor, bold;
          SY09M002.SY09M-MKT-SDESC[SY09WIDX] = "INVALID";
          converseLib.validationFailed(3); /* invalid*/
        else
          if (SY09M002.SY09M-MKT-REG[SY09WIDX] in XDRTBL.XDR-PROD-REG-CD)
            if (XDRTBL.XXX-STAT[sysVar.arrayIndex] == "A")
              SY09M002.SY09M-MKT-SDESC[SY09WIDX] = XDRTBL.XDR-PROD-REG-SDESC[sysVar.arrayIndex];
            else
              SY09M002.SY09M-MKT-SDESC[SY09WIDX] = "INACTIVE";
              set SY09M002.SY09M-MKT-REG[SY09WIDX] cursor, bold;
              converseLib.validationFailed(33); /* status is inactive*/
            end
          else
            set SY09M002.SY09M-MKT-REG[SY09WIDX] cursor, bold;
            SY09M002.SY09M-MKT-SDESC[SY09WIDX] = "INVALID";
            converseLib.validationFailed(3); /* invalid*/
          end
        end
      end
    end
    SY09WIDX = SY09WIDX + 1;
  end
end // end SY09S-VAL-XDR-6

// validate gpc code
Function SY09SAA()

       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY09M001.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY09M001.XGPCD cursor, bold;
    SY09M001.XGPABRV = "INVALID";
    return;
  end

  if (SY09M001.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY09M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    else
      converseLib.validationFailed(33); /* status code is inactive*/
      set SY09M001.XGPCD cursor, bold;
      SY09M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    end
  else
    set SY09M001.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY09M001.XGPABRV = "INVALID";
    exit stack;
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/



  if (SY09M001.XGPCD == "02"
   && COMMAREA.CACLVL[2] == "N")
    set SY09M001.XGPCD cursor, bold;
    converseLib.validationFailed(35); /* not authorized to access gpc*/
    SY09M001.XGPABRV = "INVALID";
    exit stack;
  else
    if (SY09M001.XGPCD == "03"
     && COMMAREA.CACLVL[3] == "N")
      set SY09M001.XGPCD cursor, bold;
      SY09M001.XGPABRV = "INVALID CODE";
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      exit stack;
    else
      COMMAREA.XGPCD = SY09M001.XGPCD;
    end
  end



end // end SY09SAA

// cobol date routine ta0040
Function SY09SAB()

  set ERRSQLCA empty;
  set SQLCA empty;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0222)
    return;
  else
    if (TA2REC.TA2RTNCD != 0)
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09SAB";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      converseLib.validationFailed(30); /* invalid date entered*/
      exit stack;
    else
      /* next sentence*/
    end
  end





end // end SY09SAB

// transfer to sy0v application
Function SY09SBA()


       /* ***************************************/
       /* * transfer to product sub menu       **/
       /* * application for production         **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY0V";
  XSEXIT();


end // end SY09SBA

// check pf keys & transfer
Function SY09SBB()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as necessary.     **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2)
      converseLib.clearScreen();
      
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        XSPF1();
        SY09M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY09M002 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3)
          SY09SBA(); /* transfer to sy0v application*/
          SY09M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY09M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            XSPF4();
            SY09M001.SYMSCMSG = COMMAREA.CAMSG;
            set SY09M001 alarm;
            converseLib.validationFailed(1);
            exit stack;
            set SY09M001 alarm;
          else
            if (converseVar.eventKey is pf14)
              SYWREC.SYWPFOPT = "     ";
              COMMAREA.CAUSERA = SYWREC.SYWTRANF;
              SY09SBJ(); /* transfer to sy0l style chg app.*/
              SY09M001.SYMSCMSG = COMMAREA.CAMSG;
              set SY09M001 alarm;
              converseLib.validationFailed(1);
              exit stack;
            else
              if (converseVar.eventKey is pf16)
                SYWREC.SYWPFOPT = "PF16";
                exit stack;
              else
                if (converseVar.eventKey is enter)
                  if (SY09M001.CATOAP != " ")
                    COMMAREA.CATOAP = SY09M001.CATOAP;
                    COMMAREA.CAITEM = SY09M001.CAITEM;
                    XSEXIT();
                    SY09M001.SYMSCMSG = COMMAREA.CAMSG;
                    set SY09M001 alarm;
                    converseLib.validationFailed(1);
                    exit stack;
                  else
                    return;
                  end
                else
                  exit stack;
                end
              end
            end
          end
        end
      end
    end
  end


end // end SY09SBB

// get style row data
Function SY09SBE()


       /* ******************************************/
       /* *     GET  STYLE DATA                   **/
       /* *                                       **/
       /* ******************************************/

  set ERRSQLCA empty;
  set SQLCA empty;
  SY1REC.SY1STNBR = SY09M001.SY1STNBR;
  SY1REC.XGPCD = SY09M001.XGPCD;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY09M001.SY1STYNM = SY1REC.SY1STYNM;
    SY09M002.SY1STYNM = SY1REC.SY1STYNM;
    if (SY1REC.XGPCD == "02")
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SYBSTGNB;
    else
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SY1BSTNB;
    end
    SYWREC.XGPCD = SY1REC.XGPCD;
    set SY09M001.SY1STNBR normal;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY09M001.SY1STNBR cursor, bold;
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY09SBE  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY09M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error....*/
      set SY09M001.SY1STNBR cursor, bold;
      exit stack;
    end
  end


end // end SY09SBE

// set fields to normal & protect
Function SY09SBG()


       /* ***************************************/
       /* *  set sy09m001 screen to normal     **/
       /* *  and to protect.                   **/
       /* ***************************************/

  SY09WCOL.SY09WSDX = 1;

  while (SY09WCOL.SY09WSDX <= 12)
    set SY09M001.SY2CLRID[SY09WSDX] protect;
    set SY09M001.SY2CLRAB[SY09WSDX] protect;
    set SY09M001.XDMCD[SY09WSDX] protect;
    set SY09M001.XDMABRV[SY09WSDX] protect;
    set SY09M001.XLCCD[SY09WSDX] protect;
    set SY09M001.XLCDESC[SY09WSDX] protect;
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
  end


end // end SY09SBG

// transfer to sy0l appl.
Function SY09SBJ()


       /* ***************************************/
       /* * transfer to product change         **/
       /* * style application for production   **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY0L";
  XSEXIT();


end // end SY09SBJ

// select color records
Function SY09SCA()


       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* *                                       **/
       /* ******************************************/

  set ERRSQLCA empty;
  set SQLCA empty;
  set SY2REC empty;
  set SY09WCOL empty;

  SY2REC.XGPCD = SY09M001.XGPCD;
  SY2REC.SY1STNBR = SY09M001.SY1STNBR;


  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY09WCOL.SY09WCDX = 1;
    while (SQLCA.VAGen_SQLCODE == 0
     && converseVar.validationMsgNum == 0)
      SY09SCB(); /* select the next color record*/
    end
    SY09SCC(); /* close selected set*/
    SY09WCOL.SY09WCCT = SY09WCOL.SY09WCDX;
    SY09WCOL.SY09WCCT = SY09WCOL.SY09WCCT - 1;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "SS      ";
    TA1REC.TA1LOCAT[2] = "SY09SCA ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY09M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY09M001.SY1STNBR cursor, bold;
    exit stack;
  end


end // end SY09SCA

// select the next color record
Function SY09SCB()


       /* ******************************************/
       /* *  select the next color record.        **/
       /* *                                       **/
       /* ******************************************/


  call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (SY2REC.XDR-PROD-REG-CD in SYWREC.XDR-PROD-REG-CD)
      SY09SCD(); /* move sy2rec to working storage*/
    else
        /* Next Sentence (EAO cannot select)*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09   ";
      TA1REC.TA1LOCAT[1] = "SN      ";
      TA1REC.TA1LOCAT[2] = "SY09SCB ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY09M001";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      SY09SCC(); /* close selected set*/
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      set SY09M001.SY1STNBR cursor, bold;
      return;
    end
  end


end // end SY09SCB

// close selected color set
Function SY09SCC()


       /* ******************************************/
       /* *  close color/dim selected set         **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "CS      ";
    TA1REC.TA1LOCAT[2] = "SY09SCC ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY09M001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY09M001.SY1STNBR cursor, bold;
    exit stack;
  end


end // end SY09SCC

// move sy2rec to work in-storage
Function SY09SCD()


       /* ***************************************/
       /* * move sy2rec to working storage     **/
       /* *                                    **/
       /* ***************************************/



  if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT1)
    SY09SCE(); /* move to work instorage*/
  else
    if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT2)
      SY09SCF(); /* move to work instorage*/
    else
      if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT3)
        SY09SCG(); /* move to work instorage*/
      else
        if (SYWREC.SYWTODAY >= SY2REC.SY2CEDT4)
          SY09SCH(); /* move to work instorage*/
        else
          return;
        end
      end
    end
  end


end // end SY09SCD

// move xlccd1 to work in-storage
Function SY09SCE()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY09M001.SY09MXLC == " ")
    SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD1;
    SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
    SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
    SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  else
    if (SY09M001.SY09MXLC == SY2REC.XLCCD1)
      SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD1;
      SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
      SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
      SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
      SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
    else
      return;
    end
  end
end // end SY09SCE

// move xlccd2 to work in-storage
Function SY09SCF()
   /* GET SY09SCE*/


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY09M001.SY09MXLC == " ")
    SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD2;
    SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
    SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
    SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  else
    if (SY09M001.SY09MXLC == SY2REC.XLCCD2)
      SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD2;
      SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
      SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
      SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
      SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
    else
      return;
    end
  end
end // end SY09SCF

// move xlccd3 to work in-storage
Function SY09SCG()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY09M001.SY09MXLC == " ")
    SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD3;
    SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
    SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
    SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  else
    if (SY09M001.SY09MXLC == SY2REC.XLCCD3)
      SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD3;
      SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
      SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
      SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
      SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
    else
      return;
    end
  end
end // end SY09SCG

// move xlccd4 to work in-storage
Function SY09SCH()


       /* ***************************************/
       /* *  if the user did not specify       **/
       /* *  a life cycle code to match aginst **/
       /* *  then bring back all current life  **/
       /* *  cycle code data.                  **/
       /* *  if life cycle code was specified  **/
       /* *  and the current life cycle code   **/
       /* *  matches then bring back the data  **/
       /* *  otherwise get another color record**/
       /* *                                    **/
       /* ***************************************/


  if (SY09M001.SY09MXLC == " ")
    SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD4;
    SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
    SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
    SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  else
    if (SY09M001.SY09MXLC == SY2REC.XLCCD4)
      SY09WCOL.XLCCD[SY09WCDX] = SY2REC.XLCCD4;
      SY09WCOL.SY2CLRID[SY09WCDX] = SY2REC.SY2CLRID;
      SY09WCOL.SY2CLRAB[SY09WCDX] = SY2REC.SY2CLRAB;
      SY09WCOL.XDMCD[SY09WCDX] = SY2REC.XDMCD;
      SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
    else
      return;
    end
  end
end // end SY09SCH

// build color screen menu
Function SY09SCI()


       /* ***************************************/
       /* *  build color screen menu           **/
       /* ***************************************/

  SY09WCOL.SY09WSDX = 1; /* reset index to 1*/

  while (SY09WCOL.SY09WSDX <= 12)
    set SY09M001.SY09MSEL[SY09WSDX] skip, invisible;
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
  end

  SY09WCOL.SY09WCDX = 1; /* reset index to 1*/
  SY09WCOL.SY09WSDX = 1;
  SY09WCOL.SY09WTOP = 1;

  while (SY09WCOL.SY09WSDX <= 12
   && SY09WCOL.SY2CLRID[SY09WCDX] != " ")
    SY09M001.SY09MSEL[SY09WSDX] = SY09WCOL.SY09WSEL[SY09WCDX];
    SY09M001.SY2CLRID[SY09WSDX] = SY09WCOL.SY2CLRID[SY09WCDX];
    SY09M001.SY2CLRAB[SY09WSDX] = SY09WCOL.SY2CLRAB[SY09WCDX];
    SY09M001.XDMCD[SY09WSDX] = SY09WCOL.XDMCD[SY09WCDX];
    SY09M001.XLCCD[SY09WSDX] = SY09WCOL.XLCCD[SY09WCDX];
    SY09SCJ(); /* retrieve dimension desc.*/
    SY09SCK(); /* retrieve life cycle desc.*/
    set SY09M001.SY09MSEL[SY09WSDX] normal;
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
    SY09WCOL.SY09WTOP = SY09WCOL.SY09WTOP + 1;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  end


end // end SY09SCI

// retrieve dimension desc.
Function SY09SCJ()


       /* ******************************************/
       /* *  VERIFY DIMENSION CODE AND GET        **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY09M001.XDMCD[SY09WSDX] == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY09M001.XDMCD[SY09WSDX] in XDMTBL.XDMCD)
    if (XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY09M001.XDMABRV[SY09WSDX] = XDMTBL.XDMABRV[sysVar.arrayIndex];
    else
      SY09M001.XDMABRV[SY09WSDX] = XDMTBL.XDMABRV[sysVar.arrayIndex];
    end
  else
    set SY09M001.XDMCD cursor, bold;
    SY09M001.XDMABRV[SY09WSDX] = "INVALID ";
  end

end // end SY09SCJ

// retrieve life cycle desc.
Function SY09SCK()


       /* ******************************************/
       /* *  VERIFY DIMENSION CODE AND GET        **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY09M001.XLCCD[SY09WSDX] == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY09M001.XLCCD[SY09WSDX] in XLCTBL.XLCCD)
    if (XLCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY09M001.XLCDESC[SY09WSDX] = XLCTBL.XLCDESC[sysVar.arrayIndex];
    else
      SY09M001.XLCDESC[SY09WSDX] = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
  else
    set SY09M001.XLCCD cursor, bold;
    SY09M001.XLCDESC[SY09WSDX] = "INVALID ";
  end

end // end SY09SCK

// check pf keys
Function SY09SDA()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as necessary.     **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  else
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2)
      converseLib.clearScreen();
      
      exit stack;
    else
      if (converseVar.eventKey is pf1)
        XSPF1();
        SY09M001.SYMSCMSG = COMMAREA.CAMSG;
        set SY09M001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      else
        if (converseVar.eventKey is pf3)
          SY09SBA(); /* transfer to sy0v application*/
          SY09M001.SYMSCMSG = COMMAREA.CAMSG;
          set SY09M001 alarm;
          converseLib.validationFailed(1);
          exit stack;
        else
          if (converseVar.eventKey is pf4)
            XSPF4();
            SY09M001.SYMSCMSG = COMMAREA.CAMSG;
            set SY09M001 alarm;
            converseLib.validationFailed(1);
            exit stack;
          else
            if (converseVar.eventKey is pf14)
              SYWREC.SYWPFOPT = " ";
              COMMAREA.CAUSERA = SYWREC.SYWTRANF;
              SY09SBJ(); /* transfer to sy0l chg style app.*/
              SY09M001.SYMSCMSG = COMMAREA.CAMSG;
              set SY09M001 alarm;
              converseLib.validationFailed(1);
              exit stack;
            else
              if (converseVar.eventKey is pf16)
                SYWREC.SYWPFOPT = "PF16";
                exit stack;
              else
                if (converseVar.eventKey is enter)
                  if (SY09M001.CATOAP != " ")
                    move SY09M001 to COMMAREA withV60Compat;
                    XSEXIT();
                    SY09M001.SYMSCMSG = COMMAREA.CAMSG;
                    set SY09M001 alarm;
                    converseLib.validationFailed(1);
                    exit stack;
                  else
                    return;
                  end
                else
                  if (converseVar.eventKey is pf7
                   || converseVar.eventKey is pf8)
                    return;
                  else
                    exit stack;
                  end
                end
              end
            end
          end
        end
      end
    end
  end




end // end SY09SDA

// process pf7
Function SY09SDB()


       /* ***************************************/
       /* * check to see if the user selected  **/
       /* * a color record                     **/
       /* ***************************************/

  if (SY09WCOL.SY09WCDX < 13)
    converseLib.validationFailed(69); /* you are at the beginning for*/
                                   /* scrolling*/
    exit stack;
  end


  SY09SDE(); /* move selected item  to working*/
                                   /* storage*/
  SY09SDF(); /* clear screen contents*/

       /* ***************************************/
       /* *  pf7 scroll backwards from the top **/
       /* *  of the screen.                    **/
       /* ***************************************/

  if (SY09WCOL.SY09WTOP < 12)
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX - SY09WCOL.SY09WTOP;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX - 11;
  else
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX - 24;
  end

  if (SY09WCOL.SY09WCDX <= 12)
    SY09WCOL.SY09WCDX = 1;
  else
    /* next sentence*/
  end

  SY09WCOL.SY09WSDX = 1;
  SY09WCOL.SY09WTOP = 1;

  while (SY09WCOL.SY09WSDX <= 12
   && SY09WCOL.SY2CLRID[SY09WCDX] != " ")
    SY09M001.SY09MSEL[SY09WSDX] = SY09WCOL.SY09WSEL[SY09WCDX];
    SY09M001.SY2CLRID[SY09WSDX] = SY09WCOL.SY2CLRID[SY09WCDX];
    SY09M001.SY2CLRAB[SY09WSDX] = SY09WCOL.SY2CLRAB[SY09WCDX];
    SY09M001.XDMCD[SY09WSDX] = SY09WCOL.XDMCD[SY09WCDX];
    SY09M001.XLCCD[SY09WSDX] = SY09WCOL.XLCCD[SY09WCDX];
    SY09SCJ(); /* retrieve dimension desc.*/
    SY09SCK(); /* retrieve life cycle desc.*/
    set SY09M001.SY09MSEL[SY09WSDX] normal;
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
    SY09WCOL.SY09WTOP = SY09WCOL.SY09WTOP + 1;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  end

  if (SY09WCOL.SY09WCDX == 13)
    SY09WCOL.SY09WTOP = SY09WCOL.SY09WTOP - 1;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX - 1;
  else
    /* next sentence*/
  end

  exit stack;

end // end SY09SDB

// process pf8
Function SY09SDC()


       /* ***************************************/
       /* * check to see if the user selected  **/
       /* * a color record                     **/
       /* ***************************************/

  if (SY09WCOL.SY09WCDX > SY09WCOL.SY09WCCT) /* no more records avail.*/
    converseLib.validationFailed(70); /* you are at the end for scrolling*/
    exit stack;
  else
    /* next sentence*/
  end

  SY09SDE(); /* move selected item  to working*/
                                   /* storage*/
  SY09SDF(); /* clear lower half of screen*/


       /* ***************************************/
       /* * scroll forward                     **/
       /* *                                    **/
       /* ***************************************/

  SY09WCOL.SY09WSDX = 1;

  while (SY09WCOL.SY09WSDX <= 12)
    set SY09M001.SY09MSEL[SY09WSDX] skip, invisible;
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
  end

  SY09WCOL.SY09WSDX = 1;
  SY09WCOL.SY09WTOP = 1;

  while (SY09WCOL.SY09WSDX <= 12
   && SY09WCOL.SY2CLRID[SY09WCDX] != " ")
    SY09M001.SY09MSEL[SY09WSDX] = SY09WCOL.SY09WSEL[SY09WCDX];
    SY09M001.SY2CLRID[SY09WSDX] = SY09WCOL.SY2CLRID[SY09WCDX];
    SY09M001.SY2CLRAB[SY09WSDX] = SY09WCOL.SY2CLRAB[SY09WCDX];
    SY09M001.XDMCD[SY09WSDX] = SY09WCOL.XDMCD[SY09WCDX];
    SY09M001.XLCCD[SY09WSDX] = SY09WCOL.XLCCD[SY09WCDX];
    SY09SCJ(); /* retrieve dimension desc.*/
    SY09SCK(); /* retrieve life cycle desc.*/
    set SY09M001.SY09MSEL[SY09WSDX] normal;
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
    SY09WCOL.SY09WTOP = SY09WCOL.SY09WTOP + 1;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  end

  exit stack;

end // end SY09SDC

// process enter
Function SY09SDD()


       /* ***************************************/
       /* *  check screen to see if the user   **/
       /* *  wants to select all the colors    **/
       /* *  or only a few before processing   **/
       /* *  change colors.                    **/
       /* ***************************************/

  if (SY09WCOL.SY09WSEL[1] == "A")
    exit stack;
  else
    SY09SDE();
  end


end // end SY09SDD

// check for selected color
Function SY09SDE()

       /* ***************************************/
       /* * check to see if the user selected  **/
       /* * a color record                     **/
       /* ***************************************/

  if (SY09WCOL.SY09WCDX > SY09WCOL.SY09WTOP)
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX - SY09WCOL.SY09WTOP;
    SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
  else
    SY09WCOL.SY09WCDX = 1;
  end

  SY09WCOL.SY09WSDX = 1;

  while (SY09WCOL.SY09WSDX <= 12
   && SY09WCOL.SY2CLRID[SY09WCDX] != " ")
    if (SY09M001.SY09MSEL[SY09WSDX] == " ")
      SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
      SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
    else
      SY09WCOL.SY09WSEL[SY09WCDX] = SY09M001.SY09MSEL[SY09WSDX];
      SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
      SY09WCOL.SY09WCDX = SY09WCOL.SY09WCDX + 1;
    end
  end



end // end SY09SDE

// clear sy09m001 lower half
Function SY09SDF()

       /* ***************************************/
       /* *  clear sy09m001 lower screen       **/
       /* *  cleared.                          **/
       /* ***************************************/

  SY09WCOL.SY09WSDX = 1;

  while (SY09WCOL.SY09WSDX <= 12)
    set SY09M001.SY09MSEL[SY09WSDX] skip, invisible;
    SY09M001.SY09MSEL[SY09WSDX] = " ";
    SY09M001.SY2CLRID[SY09WSDX] = " ";
    SY09M001.SY2CLRAB[SY09WSDX] = " ";
    SY09M001.XDMCD[SY09WSDX] = " ";
    SY09M001.XDMABRV[SY09WSDX] = " ";
    SY09M001.XLCCD[SY09WSDX] = " ";
    SY09M001.XLCDESC[SY09WSDX] = " ";
    SY09WCOL.SY09WSDX = SY09WCOL.SY09WSDX + 1;
  end


end // end SY09SDF

// process all color records
Function SY09SEA()



       /* ***************************************/
       /* * read seq. thru working storage     **/
       /* * and process all color records      **/
       /* ***************************************/


   /* IF SY09WCOL.SY09WSEL(1) EQ 'A';*/
    /* ;next sentence*/
   /* ELSE ;*/
    /* MOVE ' ' TO SY09WCOL.SY09WSEL(SY09WCDX);*/
   /* END ;*/

  SY2REC.SY2CLRID = SY09WCOL.SY2CLRID[SY09WCDX];
  SY2REC.XDMCD = SY09WCOL.XDMCD[SY09WCDX];
  SY2REC.SY1STNBR = SY09M001.SY1STNBR;
  SY2REC.XGPCD = SY09M001.XGPCD;




       /* ***************************************/
       /* * compare working storage colors to  **/
       /* * total colors. if at end of working **/
       /* * storage colors ezeflo, you are done**/
       /* * processing colors.                 **/
       /* ***************************************/

  if (SY09WCOL.SY09WCDX > SY09WCOL.SY09WCCT)
    SY09SDF(); /* clear lower half of screen.*/
    converseLib.validationFailed(11);
    SY09WCOL.SY09WMS3 = SY09WCOL.SY09WUPD; /* update color msg. area*/
    SY09WCOL.SY09WMS9 = "        **   ";
    SY09WCOL.SY09WMS4 = " TOTAL COLOR RECORDS UPDATED - ";
    SY09M001.SYMSCMSG = SY09WCOL.SY09WMSU;
    set SY09M001.SY1STNBR cursor, normal;
    set SY09M001.SY2CLRID normal;
    set SY09M001.XDMCD normal;
    set SY09M001.XGPCD normal;
    set SY09M001.SY09MXLC normal;
    exit stack;
  else
    /* next sentence*/
  end

  SY09WCOL.SY09WCDX = SY09WCDX + 1;


end // end SY09SEA

// process selected color rec.
Function SY09SEB()


       /* ***************************************/
       /* * process only the selected color    **/
       /* * records                            **/
       /* ***************************************/

  SY09WCOL.SY09WCDX = 1;

  while (SY09WCOL.SY09WSEL[SY09WCDX] == " "
   && SY09WCOL.SY09WCDX <= 200
   && SY09WCOL.SY2CLRID[SY09WCDX] != " ")
    SY09WCOL.SY09WCDX = SY09WCDX + 1;
  end


       /* ***************************************/
       /* * compare working storage colors to  **/
       /* * total colors. if at end of working **/
       /* * storage colors ezeflo, you are done**/
       /* * processing colors.                 **/
       /* ***************************************/

  if (SY09WCOL.SY09WCDX > SY09WCOL.SY09WCCT)
    SY09SDF();
    converseLib.validationFailed(11);
    SY09WCOL.SY09WMS3 = SY09WCOL.SY09WUPD; /* update color msg. area*/
    SY09WCOL.SY09WMS9 = "        ***  ";
    SY09WCOL.SY09WMS4 = "TOTAL COLOR RECORDS UPDATED -";
    SY09M001.SYMSCMSG = SY09WCOL.SY09WMSU;
    set SY09M001.SY1STNBR cursor, normal;
    set SY09M001.SY2CLRID normal;
    set SY09M001.XDMCD normal;
    set SY09M001.XGPCD normal;
    set SY09M001.SY09MXLC normal;
    exit stack;
  else
    /* next sentence*/
  end


   /* MOVE ' ' TO SY04WCOL.SY04WSEL(SY04WCDX);*/
  SY2REC.SY2CLRID = SY09WCOL.SY2CLRID[SY09WCDX];
  SY2REC.XDMCD = SY09WCOL.XDMCD[SY09WCDX];
  SY2REC.SY1STNBR = SY09M001.SY1STNBR;
  SY2REC.XGPCD = SY09M001.XGPCD;


end // end SY09SEB

// get color data
Function SY09SEC()


       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* *                                       **/
       /* ******************************************/

  set ERRSQLCA empty;
  set SQLCA empty;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    move SY2REC to SY09M002 withV60Compat;
    if (SY2REC.XGPCD == "02")
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SYBSTGNB;
      SY09M002.SY2BCLCD = " ";
    else
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SY1BSTNB;
    end
    SYEREC.SY2DATA = SY2REC.SY2DATA;
    SYWREC.XGPCD = SY2REC.XGPCD;

    SY09SGD(); /* move offering dates to screen*/

  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "S       ";
    TA1REC.TA1LOCAT[2] = "SY09SEC ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(21); /* color table error*/
    set SY09M002.SY2CLRID cursor, bold;
    exit stack;
  end


end // end SY09SEC

// retrieve color desc.
Function SY09SED()

       /* ********************************************/
       /* *    GET SCHEDULAR NAME.                  **/
       /* ********************************************/

  SY09SEE();

       /* ********************************************/
       /* *    GET BLANK COLOR DESC,                **/
       /* *        OR STYLE GROUP FOR FOOTWEAR      **/
       /* ********************************************/

  if (SY09M001.XGPCD == "02") /* If footwear*/
    SY09S-GET-SYGRP(); /* get style group*/
  else
    SY09SEF(); /* get blank style*/
  end

       /* ********************************************/
       /* *    GET DIMENSION CODE AND DESC.         **/
       /* ********************************************/

  SY09SEN();

       /* ********************************************/
       /* *   GET PRODUCT category code desc.       **/
       /* ********************************************/

  SY09SEO();

       /* ********************************************/
       /* *   GET Division code desc.               **/
       /* ********************************************/

  if (SY09M002.XDVCD in XDVTBL.XDVCD)
    SY09M002.XDVDESC = XDVTBL.XDVDESC[sysVar.arrayIndex];
  else
    SY09M002.XDVDESC = "UNKNOWN";
  end

       /* ********************************************/
       /* *   GET Current Life Cycle and Desc.      **/
       /* ********************************************/

   /* First determine current bucket*/
  if (SY2REC.SY2CEDT1 <= SYWREC.SYWTODAY)
    SY09M002.XLCCD = SY2REC.XLCCD1;
  else
    if (SY2REC.SY2CEDT2 <= SYWREC.SYWTODAY)
      SY09M002.XLCCD = SY2REC.XLCCD2;
    else
      if (SY2REC.SY2CEDT3 <= SYWREC.SYWTODAY)
        SY09M002.XLCCD = SY2REC.XLCCD3;
      else
        SY09M002.XLCCD = SY2REC.XLCCD4;
      end
    end
  end

   /* Now get life cycle desc.*/
  if (SY09M002.XLCCD in XLCTBL.XLCCD)
    SY09M002.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    SY09M002.XLCDESC = "UNKNOWN";
  end

end // end SY09SED

// Get Schedular Name
Function SY09SEE()

   /* Specialist/scheduler*/

  if (SY09M002.PG1SC4CD != "  "
   || SY09M002.XGPCD == "02")
    PG1REC.XGPCD = SY09M002.XGPCD;
    PG1REC.PG1SC4CD = SY09M002.PG1SC4CD;
    PG1REC.PG1FCTCD = " ";
    call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY09M002.XXXUSER = PG1REC.XXXUSER;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        SY09M002.XXXUSER = " ";
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09";
        TA1REC.TA1LOCAT[1] = "S";
        TA1REC.TA1LOCAT[2] = "SY09SEE";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1DBASE = "DPRODG";
        TA1REC.TA1TBLVU = "VSUSER01";
        TA1REC.TA1TBLKE = PG1REC.PG1SC4CD;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(20);
        set SY09M002.PG1SC4CD cursor, bold;
        exit stack;
      end
    end
  else
    SY09M002.XXXUSER = " ";
  end

end // end SY09SEE

// Get Blank Color
Function SY09SEF()

   /* blank color*/

  if (SY2REC.SY2BCLCD != " ")
    SY09W01.SY2DATA = SY2REC.SY2DATA;
    SY2REC.XGPCD = SY09M002.XGPCD;
    SY2REC.SY1STNBR = SY1REC.SY1BSTNB;
    SY2REC.SY2CLRID = SY2REC.SY2BCLCD;
    SY2REC.XDMCD = SY09M002.XDMCD;
    call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY09M002.SY09M-FLD-VAL2 = SY2REC.SY2CLRDS;
      SY2REC.SY2DATA = SY09W01.SY2DATA;
    else
      SY2REC.SY2DATA = SY09W01.SY2DATA;
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(7); /* color/dim does not exist*/
        set SY09M002.SY2BCLCD cursor, modified, bold;
        SY09M002.SY09M-FLD-VAL2 = " ";
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09";
        TA1REC.TA1LOCAT[1] = "S";
        TA1REC.TA1LOCAT[2] = "SY09SEF";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VCOLOR01";
        TA1REC.TA1TBLKE = SY1REC.SY1BSTNB;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(20);
        set SY09M002.SY2BCLCD cursor, bold;
        exit stack;
      end
    end
  else
    SY09M002.SY09M-FLD-VAL2 = " ";
  end

end // end SY09SEF

// Validate YYMM format dates
Function SY09SEG()

   /* This routine will validate dates in YYMM format.  The date*/
   /* is in the field sy09W01.sy09WDVF and the routine will set*/
   /* the flag sy09W01.sy09WDVF to N if the date is invalid and*/
   /* Y if the date is valid.*/

  SY09W01.SY09WDVF = "Y"; /* set flag to valid*/

   /* NOTE:  The year part of date cannot be checked because any*/
         /* numeric value is valid here.*/

  if (SY09W01.SY09WTMO < 1
   || SY09W01.SY09WTMO > 12)
    SY09W01.SY09WDVF = "N"; /* date not valid*/
    converseLib.validationFailed(30); /* invalid date entered*/
    return;
  end

end // end SY09SEG

// verify dimension code
Function SY09SEN()

       /* ******************************************/
       /* *  VERIFY DIMENSION CODE AND GET        **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY09M002.XDMCD == " ")
    return;
  else
    /* next sentence*/
  end

  if (SY09M002.XDMCD in XDMTBL.XDMCD)
    if (XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      /* next sentence*/
    else
      converseLib.validationFailed(3); /* invalid code*/
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
  end

end // end SY09SEN

// VERIFY PRODUCT category code
Function SY09SEO()

       /* ******************************************/
       /* *  VERIFY PRODUCT category code and get **/
       /* *  THE DESCRIPTION.                     **/
       /* ******************************************/

  if (SY09M002.XPCCD == "  ")
    return;
  end

  SYWREC.SYWINDEX = 1;

  while (XPCTBL.XPCCD[SYWINDEX] != "99")
    if (SYWREC.XGPCD == XPCTBL.XGPCD[SYWINDEX]
     && SY09M002.XPCCD == XPCTBL.XPCCD[SYWINDEX])
      if (XPCTBL.XXXSTAT[SYWINDEX] == "A")
        SY09M002.XPCDESC = XPCTBL.XPCDESC[SYWINDEX];
        return;
      else
        SY09M002.XPCDESC = "INACTIVE";
        return;
      end
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY09M002.XPCDESC = "INVALID";


end // end SY09SEO

// check pf keys & transfer
Function SY09SFA()

       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  end

  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa2)
    converseLib.clearScreen();
    
    exit stack;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY09M002.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M002 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf3
   && SYWREC.SYWPFOPT == "PF16")
    SY09SBA(); /* transfer to SY0V*/
    SY09M002.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M002 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY09M002.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M002 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is enter)
    if (SY09M002.CATOAP != " ")
      move SY09M002 to COMMAREA withV60Compat;
      XSEXIT();
      SY09M002.SYMSCMSG = COMMAREA.CAMSG;
      set SY09M002 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      return;
    end
  end

  if (converseVar.eventKey is pf3
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15)
    return;
  end

  exit stack;

end // end SY09SFA

// set screen att. normal or skip
Function SY09SFB()

       /* ******************************************/
       /* *  set sy09m002 screen attributes       **/
       /* ******************************************/


  set SY09M002.XGPCD initialAttributes;
  set SY09M002.SY1STNBR initialAttributes;
  set SY09M002.SY2CLRID initialAttributes;
  set SY09M002.XDMCD initialAttributes;
  set SY09M002.XSECD initialAttributes;
  set SY09M002.XSNYR initialAttributes;
  set SY09M002.SY2SSCIN initialAttributes;
  set SY09M002.PG4DMGRN initialAttributes;
  set SY09M002.PC3POIDT initialAttributes;
  set SY09M002.SY2FDSMO initialAttributes;
  set SY09M002.SY2FNSMO initialAttributes;
  set SY09M002.SY2PDCMO initialAttributes;
  set SY09M002.SY2PNCMO initialAttributes;

  if (COMMAREA.CACLVL[10] == "Y") /* restricted user*/
    set SY09M002.SY2TDIND skip;
    set SY09M002.PG1SC4CD skip;
    set SY09M002.PG4DMGRN skip;
    set SY09M002.SY2POFBD skip;
    set SY09M002.SY2POFXD skip;
    set SY09M002.SY2FOFBD skip;
    set SY09M002.SY2FOFXD skip;
    set SY09M002.SY2NOFBD skip;
    set SY09M002.SY2NOFXD skip;
    set SY09M002.SY2ALNOR skip;
  else
    set SY09M002.SY2TDIND initialAttributes;
    set SY09M002.PG1SC4CD initialAttributes;
    set SY09M002.PG4DMGRN initialAttributes;
    set SY09M002.SY2NOFBD initialAttributes;
    set SY09M002.SY2NOFXD initialAttributes;
    set SY09M002.SY2ALNOR initialAttributes;
    if (SY09M002.XGPCD == "03")
      set SY09M002.SY2POFBD skip;
      set SY09M002.SY2POFXD skip;
      set SY09M002.SY2FOFBD skip;
      set SY09M002.SY2FOFXD skip;
    else
      set SY09M002.SY2POFBD initialAttributes;
      set SY09M002.SY2POFXD initialAttributes;
      set SY09M002.SY2FOFBD initialAttributes;
      set SY09M002.SY2FOFXD initialAttributes;
    end
  end

  set SY09M002.SY09M-MKT-REG[1] skip;
  set SY09M002.SY09M-MKT-REG[2] skip;
  set SY09M002.SY09M-MKT-REG[3] skip;
  set SY09M002.SY09M-MKT-REG[4] skip;
  set SY09M002.SY09M-MKT-REG[5] skip;
  set SY09M002.SY09M-MKT-REG[6] skip;
  SY09M002.SYMSCMSG = " ";

end // end SY09SFB

// validate sy09m002 screen
Function SY09SFC()


       /* ******************************************/
       /* *  validate and retrieve the codes for  **/
       /* *  sy09m002 screen                      **/
       /* ******************************************/

  SY09SFF();

  if (SY09M002.SY2CLRDS == " ")
    converseLib.validationFailed(40); /* required field*/
    set SY09M002.SY2CLRDS cursor, bold;
  else
    /* next sentence*/
  end


end // end SY09SFC

// if changes update color
Function SY09SFD()


       /* ***************************************/
       /* *  check if changes made. if no      **/
       /* *  changes return, else update color.**/
       /* ***************************************/

  move SY09M002 to SY2REC withV60Compat;

       /* ***************************************/
       /* * reformat offering dates to ccyymmdd**/
       /* ***************************************/

  if (SY09M002.SY2POFBD > 0)
  /*  */
  /* ----------------- y2k in begin ------------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* ----------------- y2k in end --------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY09M002.SY2POFBD;

    SY09SGB();
                                   /* reformat offering dates to ccyymmdd*/

    SY2REC.SY2POFBD = TA2REC.TA2GRGGN;
  else
    SY2REC.SY2POFBD = 0;
  end


  if (SY09M002.SY2POFXD > 0)
  /*  */
  /* ----------------- y2k in begin ------------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* ----------------- y2k in end --------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY09M002.SY2POFXD;

    SY09SGB();
                                   /* reformat offering dates to ccyymmdd*/

    SY2REC.SY2POFXD = TA2REC.TA2GRGGN;
  else
    SY2REC.SY2POFXD = 0;
  end


  if (SY09M002.SY2FOFBD > 0)
  /*  */
  /* ----------------- y2k in begin ------------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* ----------------- y2k in end --------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY09M002.SY2FOFBD;

    SY09SGB();
                                   /* reformat offering dates to ccyymmdd*/

    SY2REC.SY2FOFBD = TA2REC.TA2GRGGN;
  else
    SY2REC.SY2FOFBD = 0;
  end


  if (SY09M002.SY2FOFXD > 0)
  /*  */
  /* ----------------- y2k in begin ------------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* ----------------- y2k in end --------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY09M002.SY2FOFXD;

    SY09SGB();
                                   /* reformat offering dates to ccyymmdd*/

    SY2REC.SY2FOFXD = TA2REC.TA2GRGGN;
  else
    SY2REC.SY2FOFXD = 0;
  end


  if (SY09M002.SY2NOFBD > 0)
  /*  */
  /* ----------------- y2k in begin ------------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* ----------------- y2k in end --------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY09M002.SY2NOFBD;

    SY09SGB();
                                   /* reformat offering dates to ccyymmdd*/

    SY2REC.SY2NOFBD = TA2REC.TA2GRGGN;
  else
    SY2REC.SY2NOFBD = 0;
  end


  if (SY09M002.SY2NOFXD > 0)
  /*  */
  /* ----------------- y2k in begin ------------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* ----------------- y2k in end --------------------*/
  /*  */
    TA2REC.TA2GRGAN = SY09M002.SY2NOFXD;

    SY09SGB();
                                   /* reformat offering dates to ccyymmdd*/

    SY2REC.SY2NOFXD = TA2REC.TA2GRGGN;
  else
    SY2REC.SY2NOFXD = 0;
  end

       /* ***************************************/
       /* * reformat YYMM dates to CCYYMM      **/
       /* ***************************************/

  if (SY2REC.PC3POIDT != 0) /* need to add century*/
    if (SY2REC.PC3POIDT < 500000) /* year < 50*/
      SY2REC.PC3POIDT = SY2REC.PC3POIDT + 20000000;
    else
      SY2REC.PC3POIDT = SY2REC.PC3POIDT + 19000000;
    end
  end

  if (SY2REC.SY2FDSMO != 0) /* need to add century*/
    if (SY2REC.SY2FDSMO < 6000) /* year < 60*/
      SY2REC.SY2FDSMO = SY2REC.SY2FDSMO + 200000; /* century 20*/
    else
      SY2REC.SY2FDSMO = SY2REC.SY2FDSMO + 190000; /* century 19*/
    end
  end

  if (SY2REC.SY2FNSMO != 0) /* need to add century*/
    if (SY2REC.SY2FNSMO < 6000) /* year < 60*/
      SY2REC.SY2FNSMO = SY2REC.SY2FNSMO + 200000; /* century 20*/
    else
      SY2REC.SY2FNSMO = SY2REC.SY2FNSMO + 190000; /* century 19*/
    end
  end

  if (SY2REC.SY2PDCMO != 0) /* need to add century*/
    if (SY2REC.SY2PDCMO < 6000) /* year < 60*/
      SY2REC.SY2PDCMO = SY2REC.SY2PDCMO + 200000; /* century 20*/
    else
      SY2REC.SY2PDCMO = SY2REC.SY2PDCMO + 190000; /* century 19*/
    end
  end

  if (SY2REC.SY2PNCMO != 0) /* need to add century*/
    if (SY2REC.SY2PNCMO < 6000) /* year < 60*/
      SY2REC.SY2PNCMO = SY2REC.SY2PNCMO + 200000; /* century 20*/
    else
      SY2REC.SY2PNCMO = SY2REC.SY2PNCMO + 190000; /* century 19*/
    end
  end


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  SY09SAB();

       /* ******************************************/
       /* *   set up zzz family record for adds   **/
       /* *   zzzchgct is not updated because     **/
       /* *   the io module will take care of it. **/
       /* ******************************************/

  SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;


       /* ***************************************/
       /* *    has data changed?               **/
       /* ***************************************/

  if (SYEREC.SY2DATA == SY2REC.SY2DATA)
    return;
  end

       /* ******************************************/
       /* *   ADD COLOR RECORD TO COLOR TABLE     **/
       /* ******************************************/

  SY09SFP();


       /* ******************************************/
       /* *   commit color/dim record             **/
       /* *   to the table.                       **/
       /* ******************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value


end // end SY09SFD

// transfer after updated
Function SY09SFE()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as nessary.       **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  end

  if (converseVar.eventKey is pf14)
    SYWREC.SYWPFOPT = " ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY09SBJ(); /* transfer to sy0l chg style app.*/
    SY09M001.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

  if (converseVar.eventKey is pf15)
    SYWREC.SYWPFOPT = "PF15 ";
    exit stack;
  end

  exit stack;

end // end SY09SFE

// validate sy09m002 codes
Function SY09SFF()

       /* ********************************************/
       /* *    GET DIMENSION CODE AND DESC.         **/
       /* ********************************************/

  SY09SFO();

       /* ********************************************/
       /* *   GET PRODUCT category code and desc.   **/
       /* ********************************************/

  SY09SFS();


       /* ********************************************/
       /* *   edit marketing region codes (6)       **/
       /* ********************************************/

  SY09S-VAL-XDR-6();


       /* ********************************************/
       /* *   edit prop beginning offering date     **/
       /* ********************************************/

  SY09SHA();


       /* ********************************************/
       /* *   edit prop ending offering date        **/
       /* ********************************************/

  SY09SHB();


       /* ********************************************/
       /* *  edit futures beginning offering date   **/
       /* ********************************************/

  SY09SHC();


       /* ********************************************/
       /* *  edit futures ending offering date      **/
       /* ********************************************/

  SY09SHD();


       /* ********************************************/
       /* *  edit n.i.l.  beginning offering date   **/
       /* ********************************************/

  SY09SHE();


       /* ********************************************/
       /* *  edit n.i.l.  ending offering date      **/
       /* ********************************************/

  SY09SHF();

  if (SY2REC.SY2POFXD < SY2REC.SY2POFBD)
    converseLib.validationFailed(132); /* end date < begin date*/
    set SY09M002.SY2POFXD cursor, bold;
  end

  if (SY2REC.SY2FOFXD < SY2REC.SY2FOFBD)
    converseLib.validationFailed(132); /* end date < begin date*/
    set SY09M002.SY2FOFXD cursor, bold;
  end


  if (SY2REC.SY2NOFXD < SY2REC.SY2NOFBD)
    converseLib.validationFailed(132); /* end date < begin date*/
    set SY09M002.SY2NOFXD cursor, bold;
  end


       /* ********************************************/
       /* *   edit allow new orders flag            **/
       /* ********************************************/

  SY09SHH();


       /* ********************************************/
       /* *   edit new phase IV data                **/
       /* ********************************************/

   /* Specialist/scheduler*/

  if (SY09M002.PG1SC4CD != "  "
   || SY09M001.XGPCD == "02")
    PG1REC.XGPCD = SY09M001.XGPCD;
    PG1REC.PG1SC4CD = SY09M002.PG1SC4CD;
    PG1REC.PG1FCTCD = " ";
    call "IO1200" ("S ", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY09M002.XXXUSER = PG1REC.XXXUSER;
      if (PG1REC.XXXSTAT == "I"
       && SY09M002.PG1SC4CD != SY2REC.PG1SC4CD)
        converseLib.validationFailed(33); /* Status is Inactive*/
        set SY09M002.PG1SC4CD cursor, modified, bold;
      end
    else
      SY09M002.XXXUSER = " ";
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(143); /* scheduler code not found*/
        set SY09M002.PG1SC4CD cursor, modified, bold;
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09";
        TA1REC.TA1LOCAT[1] = "S";
        TA1REC.TA1LOCAT[2] = "SY09SGE";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1DBASE = "DPRODG";
        TA1REC.TA1TBLVU = "VSUSER01";
        TA1REC.TA1TBLKE = PG1REC.PG1SC4CD;
        move SQLCA to ERRSQLCA withV60Compat;
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(20);
        set SY09M002.PG1SC4CD cursor, bold;
        exit stack;
      end
    end
  end

   /* projected NIL closeout month*/

  if (SY09M002.SY2PNCMO == 0)
    SY09M002.SY2PNCMO = 4312;
  else
    SY09W01.SY09WDTT = SY09M002.SY2PNCMO;
    SY09SEG();
    if (SY09W01.SY09WDVF == "N") /* date not valid*/
      set SY09M002.SY2PNCMO cursor, modified, bold;
    end
  end

   /* projected Domestic closeout month*/
   /* NSC Change; Field is protected on screen. Always make*/
   /* date equal to prop offer end date.*/

  if (converseVar.validationMsgNum == 0)
    SY09W01.SY09WTDT = SY2REC.SY2POFXD;
    SY09W01.SY09WDTT = SY09W01.SY09WYM;
    if (SY09W01.SY09WDTT != SY09M002.SY2PDCMO)
      SY09M002.SY2PDCMO = SY09W01.SY09WDTT;
    end
  end

   /* first NIL sales month*/

  if (SY09M002.SY2FNSMO != 0)
    /* OR SY09M001.XGPCD NE '03';*/
    SY09W01.SY09WDTT = SY09M002.SY2FNSMO;
    SY09SEG();
    if (SY09W01.SY09WDVF == "N") /* date not valid*/
      set SY09M002.SY2FNSMO cursor, modified, bold;
    end
  end

   /* first domestic sales month*/

  if (SY09M002.SY2FDSMO != 0)
    /* OR SY09M001.XGPCD NE '03';*/
    SY09W01.SY09WDTT = SY09M002.SY2FDSMO;
    SY09SEG();
    if (SY09W01.SY09WDVF == "N") /* date not valid*/
      set SY09M002.SY2FDSMO cursor, modified, bold;
    end
  end

   /* first PO Id*/

  if (SY09M002.PC3POIDT != 0)
    SY09SGG();
    if (SY09W01.SY09WDVF == "N") /* data not valid*/
      set SY09M002.PC3POIDT cursor, modified, bold;
    end
  end

   /* Tech. Difficulty*/

  if (SY09M002.SY2TDIND != " ")
    if (SY09M002.SY2TDIND < "A"
     || SY09M002.SY2TDIND > "Z")
      converseLib.validationFailed(3); /* Invalid code*/
      SY09M002.SYMSCMSG = "  Valid Values are A thru Z or Blank";
      set SY09M002.SY2TDIND cursor, modified, bold;
    end
  end

   /* safety stock class*/

  if (SY09M002.SY2SSCIN == "A"
   || SY09M002.SY2SSCIN == "B"
   || SY09M002.SY2SSCIN == "C"
   || SY09M002.SY2SSCIN == "D"
   || SY09M002.SY2SSCIN == " ")
    /* next sentence (valid values)*/
  else
    converseLib.validationFailed(93); /* valid values are A, B, C or D*/
    set SY09M002.SY2SSCIN cursor, modified, bold;
  end

       /* ********************************************/
       /* *   edit season code & year               **/
       /* ********************************************/

  if (SY09M002.XGPCD != "03")
    SY09SHG();
  end

end // end SY09SFF

// verify dimension code
Function SY09SFO()

       /* ******************************************/
       /* *  VERIFY DIMENSION CODE AND GET        **/
       /* *  GET THE DESC.                        **/
       /* ******************************************/

  if (SY09M002.XDMCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    return;
  end

  if (SY09M002.XDMCD in XDMTBL.XDMCD)
    if (XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      return;
    else
      converseLib.validationFailed(3); /* invalid code*/
    end
  end
  converseLib.validationFailed(3);

end // end SY09SFO

// write changed color record
Function SY09SFP()


       /* ******************************************/
       /* * UPDATE COLOR RECORD IN COLOR TABLE    **/
       /* *                                       **/
       /* *       IF THERE ARE ANY SQL ERRORS     **/
       /* *       THE RECORD IS NOT ADDED AND     **/
       /* *       THE TABLE IS ROLLED BACK.       **/
       /* *                                       **/
       /* ******************************************/



  set ERRSQLCA empty;
  set SQLCA empty;

  SY2REC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SY2REC.ZZZCHGTM = SYWREC.ZZZCHGTM;

  call "IO0130" ("U ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY09SFQ(); /* write audit*/
    SY09SFR(); /* write tag*/
    SY09WCOL.SY09WUPD = SY09WCOL.SY09WUPD + 1;
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(37); /* unable to process update try again.*/
      set SY09M002.SY2CLRID cursor, bold;
      SY09M002.SYMSCMSG = ".. PLEASE TRY AGAIN   ...  ";
      exit stack;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09   ";
      TA1REC.TA1LOCAT[1] = "U        ";
      TA1REC.TA1LOCAT[2] = "SY09SFP  ";
      TA1REC.TA1LOCAT[3] = "IO0130   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY09M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error....*/
      set SY09M002.SY2CLRID cursor, bold;
      exit stack;
    end
  end


end // end SY09SFP

// write color chg. audit record
Function SY09SFQ()


       /* ******************************************/
       /* *   WRITE AUDIT RECORD FOR COLOR UPDATE **/
       /* *                                       **/
       /* ******************************************/


  set SYAREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SYAREC.SYAUDTYP = "C";
  SYAREC.XXXTBLNM = "VCOLOR01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "SY09SFQ  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOLOR01 ";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY2REC.XGPCD;
  SYAREC.SY1STNBR = SY2REC.SY1STNBR;
  SYAREC.SY2CLRID = SY2REC.SY2CLRID;
  SYAREC.XDMCD = SY2REC.XDMCD;
  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;
  SYAREC.SYABFR = SYEREC.SY2DATA;
  SYAREC.SYAAFT = SY2REC.SY2DATA;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "CHANGE  ";
    TA1REC.TA1LOCAT[2] = "SY09SFQ ";
    TA1REC.TA1LOCAT[3] = "IO0530  ";
    TA1REC.TA1LOCAT[4] = "COLORTBL";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = SYAREC.SYAKEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    set SY09M002.SY1STNBR cursor, bold;
    exit stack;
  end

end // end SY09SFQ

// write color chg. tag  record
Function SY09SFR()


       /* ******************************************/
       /* *   WRITE TAG RECORD FOR COLOR UPDATE   **/
       /* *                                       **/
       /* ******************************************/


  set SY9REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  SY9REC.SY9TGTYP = "C";
  SY9REC.XGPCD = SY2REC.XGPCD;
  SY9REC.SY1STNBR = SY2REC.SY1STNBR;
  SY9REC.SY2CLRID = SY2REC.SY2CLRID;
  SY9REC.XDMCD = SY2REC.XDMCD;
  SY9REC.ZZZSDT = SYWREC.ZZZSDT;
  SY9REC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "CHANGE  ";
    TA1REC.TA1LOCAT[2] = "SY09SFR ";
    TA1REC.TA1LOCAT[3] = "IO0520  ";
    TA1REC.TA1LOCAT[4] = "COLORTBL";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYTAG01";
    TA1TBLKE = SY9REC.SY9KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(45); /* tag table error...*/
    set SY09M002.SY1STNBR cursor, bold;
    exit stack;
  end



end // end SY09SFR

// VERIFY PRODUCT category code
Function SY09SFS()

       /* ******************************************/
       /* *  VERIFY PRODUCT category code and get **/
       /* *  THE DESCRIPTION.                     **/
       /* ******************************************/

  if (SY09M002.XPCCD == " ")
    SY09M002.XPCDESC = " ";
    return;
  else
    if (SY09M002.XPCCD == "99")
      SY09M002.XPCDESC = "INVALID";
      return;
    end
  end

  SYWREC.SYWINDEX = 1;

  while (XPCTBL.XPCCD[SYWINDEX] != "99")
    if (SYWREC.XGPCD == XPCTBL.XGPCD[SYWINDEX]
     && SY09M002.XPCCD == XPCTBL.XPCCD[SYWINDEX])
      if (XPCTBL.XXXSTAT[SYWINDEX] == "A")
        SY09M002.XPCDESC = XPCTBL.XPCDESC[SYWINDEX];
        return;
      else
        SY09M002.XPCDESC = "INACTIVE";
        return;
      end
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

  SY09M002.XPCDESC = "INVALID";


end // end SY09SFS

// reformat off. dates to mmddyy
Function SY09SGA()


       /* ******************************************/
       /* *   reformat offering dates             **/
       /* *        from ccyymmdd to mmddyy        **/
       /* *        for sy09m002 screen display.   **/
       /* ******************************************/

  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2DTOPT = "GREGGREG";

  SY09SAB(); /* call date routine*/

  if (TA2REC.TA2RTNCD > 0)
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "S       ";
    TA1REC.TA1LOCAT[2] = "SY09SGA ";
    TA1REC.TA1LOCAT[3] = "TA0040  ";
    TA1REC.TA1LOCAT[4] = "GREGGREG";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "SY2REC";
    TA1REC.TA1TBLVU = "DATE ";
    TA1TBLKE = TA2REC.TA2GRGGN;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY09M002.SY2CLRID cursor, bold;
    exit stack;
  end


end // end SY09SGA

// reformat off dates to ccyymmdd
Function SY09SGB()


       /* ******************************************/
       /* *   reformat screen date                **/
       /* *        from mmddyy to ccyymmdd        **/
       /* *        for sy09m002 to sy2rec moves.  **/
       /* ******************************************/

  TA2REC.TA2GRTYP = "A";
  TA2REC.TA2DTOPT = "GREGGREG";

  SY09SAB(); /* call date routineta0040*/

  if (TA2REC.TA2RTNCD > 0)
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY09   ";
    TA1REC.TA1LOCAT[1] = "S       ";
    TA1REC.TA1LOCAT[2] = "SY09SGB ";
    TA1REC.TA1LOCAT[3] = "TA0040  ";
    TA1REC.TA1LOCAT[4] = "GREGGREG";
    TA1REC.TA1MAP = "SY09M002";
    TA1REC.TA1DBASE = "SY2REC";
    TA1REC.TA1TBLVU = "DATE ";
    TA1TBLKE = TA2REC.TA2GRGAN;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY09M002.SY2CLRID cursor, bold;
    exit stack;
  end


end // end SY09SGB

// move offering dates to screen
Function SY09SGD()


       /* ******************************************/
       /* *  move offering dates and flag to      **/
       /* *  sy09m002 screen.                     **/
       /* ******************************************/

  if (SY2REC.SY2POFBD > 0)
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* --------------- y2k in end ------------------*/
  /*  */
    TA2REC.TA2GRGGN = SY2REC.SY2POFBD;
    SY09SGA(); /* reformat offering dates*/
    SY09M002.SY2POFBD = TA2REC.TA2GRGAN;
  end

  if (SY2REC.SY2POFXD > 0)
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* --------------- y2k in end ------------------*/
  /*  */
    TA2REC.TA2GRGGN = SY2REC.SY2POFXD;
    SY09SGA(); /* reformat offering dates*/
    SY09M002.SY2POFXD = TA2REC.TA2GRGAN;
  end


  if (SY2REC.SY2FOFBD > 0)
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* --------------- y2k in end ------------------*/
  /*  */
    TA2REC.TA2GRGGN = SY2REC.SY2FOFBD;
    SY09SGA(); /* reformat offering dates*/
    SY09M002.SY2FOFBD = TA2REC.TA2GRGAN;
  end

  if (SY2REC.SY2FOFXD > 0)
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* --------------- y2k in end ------------------*/
  /*  */
    TA2REC.TA2GRGGN = SY2REC.SY2FOFXD;
    SY09SGA(); /* reformat offering dates*/
    SY09M002.SY2FOFXD = TA2REC.TA2GRGAN;
  end


  if (SY2REC.SY2NOFBD > 0)
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* --------------- y2k in end ------------------*/
  /*  */
    TA2REC.TA2GRGGN = SY2REC.SY2NOFBD;
    SY09SGA(); /* reformat offering dates*/
    SY09M002.SY2NOFBD = TA2REC.TA2GRGAN;
  end

  if (SY2REC.SY2NOFXD > 0)
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
    set TA2REC empty;
  /*  */
  /* --------------- y2k in end ------------------*/
  /*  */
    TA2REC.TA2GRGGN = SY2REC.SY2NOFXD;
    SY09SGA(); /* reformat offering dates*/
    SY09M002.SY2NOFXD = TA2REC.TA2GRGAN;
  end

end // end SY09SGD

// validate life cycle code
Function SY09SGE()

       /* ******************************************/
       /* *  Validate life cycle code             **/
       /* ******************************************/

  if (SY09M001.SY09MXLC == " ")
    SYWREC.SYWMSGFL = "Y";
    return;
  end

  if (SY09M001.SY09MXLC in XLCTBL.XLCCD)
    SYWREC.SYWMSGFL = "Y";
    set SY09M001.SY09MXLC normal;
    return;
  else
    converseLib.validationFailed(133);
    set SY09M001.SY09MXLC cursor, bold;
    exit stack;
  end

end // end SY09SGE

// Validate PO Id
Function SY09SGG()

   /* This routine will validate the po id field.*/

  SY09W01.SY09WDVF = "Y"; /* set flag to valid*/
  SY09W01.SY09WPO = SY09M002.PC3POIDT;

   /* NOTE:  The year part of date cannot be checked because any*/
         /* numeric value is valid here.*/

  if (SY09W01.SY09WPM1 < 1
   || SY09W01.SY09WPM1 > 12
   || SY09W01.SY09WPM2 < 1
   || SY09W01.SY09WPM2 > 12)
    SY09W01.SY09WDVF = "N"; /* date not valid*/
    converseLib.validationFailed(30); /* invalid date entered*/
    return;
  end

   /* now check that date not < current date*/

  /* This part is commented out as per M. Halstead. on 12/08/97*/
  /* --------------------- y2k out begin --------------*/
  /*  */
  /* IF SY09W01.SY09WPYR GE 50;*/
  /* IF SY09W01.SY09WPYR LT SY09W01.SY09WYY;*/
  /* MOVE 30 TO EZEMNO;           /* date not valid*/
  /* MOVE 'N' TO SY09W01.SY09WDVF;*/
  /* END;*/
  /* END;*/
  /*  */
  /* --------------------- y2k out end ----------------*/
  /*  */

end // end SY09SGG

// verify prop beg. offering date
Function SY09SHA()

       /* ******************************************/
       /* *  VERIFY prop beginning offering date  **/
       /* ******************************************/

  set TA2REC empty;

  if (SY09M002.SY2POFBD != 0)
    TA2REC.TA2GRGAN = SY09M002.SY2POFBD;
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2DTOPT = "GREGGREG";

    SY09SAB(); /* call ta0040*/

    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY09M002.SY2POFBD cursor, bold;
      return;
    else
      if (TA2REC.TA2RTNCD > 0)
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY09SHA ";
        TA1REC.TA1LOCAT[3] = "TA0040  ";
        TA1REC.TA1LOCAT[4] = "GREGGREG";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1TBLVU = "DATE ";
        TA1TBLKE = SY09M002.SY2POFBD;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY09M002.SY2POFBD cursor, bold;
        return;
      else
        SY2REC.SY2POFBD = TA2REC.TA2GRGGN;
        return;
      end
    end
  else
    if (SY09M002.XGPCD == "05")
      return;
    else
      if (SY09M002.XGPCD != "03")
        set SY09M002.SY2POFBD cursor, bold;
        converseLib.validationFailed(40); /* required field (for footwear)*/
        return;
      end
    end
  end


  if (SY09M002.XSECD == "PR")
    TA2REC.TA2DTOPT = "GETDATE";

    SY09SAB(); /* call ta0040*/

    SY2REC.SY2POFBD = TA2REC.TA2GRGGN;
    SY09M002.SY2POFBD = TA2REC.TA2GRGAN;
    return;
  else
    if (SY09M002.XSECD == "SP"
     || SY09M002.XSECD == "CS"
     || SY09M002.XSECD == "SU")
      SY09W01.SY09WSSN = "SP";
      SY09W01.SY09WSYR = SY09M002.XSNYR;
      if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
       && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        SY2REC.SY2POFBD = XSNTBL.XSNOFRDT[sysVar.arrayIndex];
        TA2REC.TA2GRGGN = XSNTBL.XSNOFRDT[sysVar.arrayIndex];

        SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

        SY09M002.SY2POFBD = TA2REC.TA2GRGAN;
        return;
      else
        set SY09M002.SY2POFBD cursor, bold;
        converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
        return;
      end
    else
      if (SY09M002.XSECD == "FA"
       || SY09M002.XSECD == "CF"
       || SY09M002.XSECD == "HO")
        SY09W01.SY09WSSN = "FA";
        SY09W01.SY09WSYR = SY09M002.XSNYR;
        if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
         && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          SY2REC.SY2POFBD = XSNTBL.XSNOFRDT[sysVar.arrayIndex];
          TA2REC.TA2GRGGN = XSNTBL.XSNOFRDT[sysVar.arrayIndex];

          SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

          SY09M002.SY2POFBD = TA2REC.TA2GRGAN;
          return;
        else
          set SY09M002.SY2POFBD cursor, bold;
          converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
          return;
        end
      end
    end
  end



end // end SY09SHA

// verify prop end. offering date
Function SY09SHB()

       /* ******************************************/
       /* *  VERIFY prop ending offering date     **/
       /* ******************************************/

  set TA2REC empty;

  if (SY09M002.SY2POFXD != 0)
    TA2REC.TA2GRGAN = SY09M002.SY2POFXD;
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2DTOPT = "GREGGREG";

    SY09SAB(); /* call ta0040*/

    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY09M002.SY2POFXD cursor, bold;
      return;
    else
      if (TA2REC.TA2RTNCD > 0)
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY09SHB ";
        TA1REC.TA1LOCAT[3] = "TA0040  ";
        TA1REC.TA1LOCAT[4] = "GREGGREG";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1TBLVU = "DATE ";
        TA1TBLKE = SY09M002.SY2POFXD;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY09M002.SY2POFXD cursor, bold;
        return;
      else
        SY2REC.SY2POFXD = TA2REC.TA2GRGGN;
        return;
      end
    end
  else
    if (SY09M002.XGPCD == "05")
      return;
    else
      if (SY09M002.XGPCD != "03")
  /*  */
  /* --------------- Y2K OUT BEGIN -------------------*/
  /*  */
  /* MOVE 019991231 TO SY2REC.SY2POFXD;*/
  /* MOVE 123199 TO SY09M002.SY2POFXD;*/
  /*  */
  /* --------------- Y2K OUT END ---------------------*/
  /*  */
  /*  */
  /* --------------- Y2K IN  BEGIN -------------------*/
  /* Default date is changed from 19991231 to 20431231*/
        SY2REC.SY2POFXD = 020431231;
        SY09M002.SY2POFXD = 123143;
  /*  */
  /* --------------- Y2K IN  END ---------------------*/
  /*  */
        return;
      end
    end
  end


  if (SY09M002.XSECD == "PR")
  /*  */
  /* --------------- Y2K OUT BEGIN -------------------*/
  /*  */
  /* MOVE 019991231 TO SY2REC.SY2POFXD;*/
  /* MOVE 123199 TO SY09M002.SY2POFXD;*/
  /*  */
  /* --------------- Y2K OUT END ---------------------*/
  /*  */
  /*  */
  /* --------------- Y2K IN  BEGIN -------------------*/
  /* Default date is changed from 19991231 to 20431231*/
    SY2REC.SY2POFXD = 020431231;
    SY09M002.SY2POFXD = 123143;
  /*  */
  /* --------------- Y2K IN  END ---------------------*/
  /*  */
    return;
  else
    if (SY09M002.XSECD == "SP"
     || SY09M002.XSECD == "CS"
     || SY09M002.XSECD == "SU")
      SY09W01.SY09WSSN = "SP";
      SY09W01.SY09WSYR = SY09M002.XSNYR;
      if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
       && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        SY2REC.SY2POFXD = XSNTBL.XSNXDT[sysVar.arrayIndex];
        TA2REC.TA2GRGGN = XSNTBL.XSNXDT[sysVar.arrayIndex];

        SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

        SY09M002.SY2POFXD = TA2REC.TA2GRGAN;
        return;
      else
        set SY09M002.SY2POFXD cursor, bold;
        converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
        return;
      end
    else
      if (SY09M002.XSECD == "FA"
       || SY09M002.XSECD == "CF"
       || SY09M002.XSECD == "HO")
        SY09W01.SY09WSSN = "FA";
        SY09W01.SY09WSYR = SY09M002.XSNYR;
        if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
         && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          SY2REC.SY2POFXD = XSNTBL.XSNXDT[sysVar.arrayIndex];
          TA2REC.TA2GRGGN = XSNTBL.XSNXDT[sysVar.arrayIndex];

          SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

          SY09M002.SY2POFXD = TA2REC.TA2GRGAN;
          return;
        else
          set SY09M002.SY2POFXD cursor, bold;
          converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
          return;
        end
      end
    end
  end



end // end SY09SHB

// verify fut. beg. offering date
Function SY09SHC()

       /* ******************************************/
       /* * verify futures beginning offering date**/
       /* ******************************************/

  set TA2REC empty;

  if (SY09M002.SY2FOFBD != 0)
    TA2REC.TA2GRGAN = SY09M002.SY2FOFBD;
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2DTOPT = "GREGGREG";

    SY09SAB(); /* call ta0040*/

    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY09M002.SY2FOFBD cursor, bold;
      return;
    else
      if (TA2REC.TA2RTNCD > 0)
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY09SHC ";
        TA1REC.TA1LOCAT[3] = "TA0040  ";
        TA1REC.TA1LOCAT[4] = "GREGGREG";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1TBLVU = "DATE ";
        TA1TBLKE = SY09M002.SY2FOFBD;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY09M002.SY2FOFBD cursor, bold;
        return;
      else
        SY2REC.SY2FOFBD = TA2REC.TA2GRGGN;
        return;
      end
    end
  else
    if (SY09M002.XGPCD == "05")
      return;
    else
      if (SY09M002.XGPCD != "03")
        set SY09M002.SY2FOFBD cursor, bold;
        converseLib.validationFailed(40); /* required field (for footwear)*/
        return;
      end
    end
  end


  if (SY09M002.XSECD == "PR")
    TA2REC.TA2DTOPT = "GETDATE";

    SY09SAB(); /* call ta0040*/

    SY2REC.SY2FOFBD = TA2REC.TA2GRGGN;
    SY09M002.SY2FOFBD = TA2REC.TA2GRGAN;
    return;
  else
    if (SY09M002.XSECD == "SP"
     || SY09M002.XSECD == "CS"
     || SY09M002.XSECD == "SU")
      SY09W01.SY09WSSN = "SP";
      SY09W01.SY09WSYR = SY09M002.XSNYR;
      if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
       && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        SY2REC.SY2FOFBD = XSNTBL.XSNOFRDT[sysVar.arrayIndex];
        TA2REC.TA2GRGGN = XSNTBL.XSNOFRDT[sysVar.arrayIndex];

        SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

        SY09M002.SY2FOFBD = TA2REC.TA2GRGAN;
        return;
      else
        set SY09M002.SY2FOFBD cursor, bold;
        converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
        return;
      end
    else
      if (SY09M002.XSECD == "FA"
       || SY09M002.XSECD == "CF"
       || SY09M002.XSECD == "HO")
        SY09W01.SY09WSSN = "FA";
        SY09W01.SY09WSYR = SY09M002.XSNYR;
        if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
         && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          SY2REC.SY2FOFBD = XSNTBL.XSNOFRDT[sysVar.arrayIndex];
          TA2REC.TA2GRGGN = XSNTBL.XSNOFRDT[sysVar.arrayIndex];

          SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

          SY09M002.SY2FOFBD = TA2REC.TA2GRGAN;
          return;
        else
          set SY09M002.SY2FOFBD cursor, bold;
          converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
          return;
        end
      end
    end
  end



end // end SY09SHC

// verify fut. end. offering date
Function SY09SHD()

       /* ******************************************/
       /* * verify futures ending offering date   **/
       /* ******************************************/

  set TA2REC empty;

  if (SY09M002.SY2FOFXD != 0)
    TA2REC.TA2GRGAN = SY09M002.SY2FOFXD;
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2DTOPT = "GREGGREG";

    SY09SAB(); /* call ta0040*/

    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY09M002.SY2FOFXD cursor, bold;
      return;
    else
      if (TA2REC.TA2RTNCD > 0)
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY09SHD ";
        TA1REC.TA1LOCAT[3] = "TA0040  ";
        TA1REC.TA1LOCAT[4] = "GREGGREG";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1TBLVU = "DATE ";
        TA1TBLKE = SY09M002.SY2FOFXD;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY09M002.SY2FOFXD cursor, bold;
        return;
      else
        SY2REC.SY2FOFXD = TA2REC.TA2GRGGN;
        return;
      end
    end
  else
    if (SY09M002.XGPCD == "05")
      return;
    else
      if (SY09M002.XGPCD != "03")
  /*  */
  /* ----------------- y2k out begin -------------------*/
  /*  */
  /* MOVE 019991231 TO SY2REC.SY2FOFXD;*/
  /* MOVE 123199 TO SY09M002.SY2FOFXD;*/
  /*  */
  /* ----------------- y2k out end  --------------------*/
  /*  */
  /*  */
  /* ----------------- y2k in  begin -------------------*/
  /* Default date is changed from 19991231 to 20431231*/
        SY2REC.SY2FOFXD = 020431231;
        SY09M002.SY2FOFXD = 123143;
  /*  */
  /* ----------------- y2k in  end  --------------------*/
  /*  */
        return;
      end
    end
  end


  if (SY09M002.XSECD == "PR")
  /*  */
  /* ----------------- y2k out begin --------------------*/
  /*  */
  /* MOVE 019991231 TO SY2REC.SY2FOFXD;*/
  /* MOVE 123199 TO SY09M002.SY2FOFXD;*/
  /*  */
  /* ----------------- y2k out end ----------------------*/
  /*  */
  /*  */
  /* ----------------- y2k in  begin --------------------*/
  /* Default date is changed from 19991231 to 20431231*/
    SY2REC.SY2FOFXD = 020431231;
    SY09M002.SY2FOFXD = 123143;
  /*  */
  /* ----------------- y2k in  end ----------------------*/
  /*  */
    return;
  else
    if (SY09M002.XSECD == "SP"
     || SY09M002.XSECD == "CS"
     || SY09M002.XSECD == "SU")
      SY09W01.SY09WSSN = "SP";
      SY09W01.SY09WSYR = SY09M002.XSNYR;
      if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
       && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        SY2REC.SY2FOFXD = XSNTBL.XSNXDT[sysVar.arrayIndex];
        TA2REC.TA2GRGGN = XSNTBL.XSNXDT[sysVar.arrayIndex];

        SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

        SY09M002.SY2FOFXD = TA2REC.TA2GRGAN;
        return;
      else
        set SY09M002.SY2FOFXD cursor, bold;
        converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
        return;
      end
    else
      if (SY09M002.XSECD == "FA"
       || SY09M002.XSECD == "CF"
       || SY09M002.XSECD == "HO")
        SY09W01.SY09WSSN = "FA";
        SY09W01.SY09WSYR = SY09M002.XSNYR;
        if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
         && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          SY2REC.SY2FOFXD = XSNTBL.XSNXDT[sysVar.arrayIndex];
          TA2REC.TA2GRGGN = XSNTBL.XSNXDT[sysVar.arrayIndex];

          SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

          SY09M002.SY2FOFXD = TA2REC.TA2GRGAN;
          return;
        else
          set SY09M002.SY2FOFXD cursor, bold;
          converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
          return;
        end
      end
    end
  end



end // end SY09SHD

// verify nil beg. offering date
Function SY09SHE()

       /* ******************************************/
       /* *  Verify nil  beginning offering date  **/
       /* ******************************************/

  set TA2REC empty;

  if (SY09M002.SY2NOFBD != 0)
    TA2REC.TA2GRGAN = SY09M002.SY2NOFBD;
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2DTOPT = "GREGGREG";

    SY09SAB(); /* call ta0040*/

    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY09M002.SY2NOFBD cursor, bold;
      return;
    else
      if (TA2REC.TA2RTNCD > 0)
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY09SHA ";
        TA1REC.TA1LOCAT[3] = "TA0040  ";
        TA1REC.TA1LOCAT[4] = "GREGGREG";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1TBLVU = "DATE ";
        TA1TBLKE = SY09M002.SY2POFBD;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY09M002.SY2NOFBD cursor, bold;
        return;
      else
        SY2REC.SY2NOFBD = TA2REC.TA2GRGGN;
        return;
      end
    end
  else
    if (SY09M002.XGPCD == "05")
      return;
    else
      if (SY09M002.XGPCD != "03")
        set SY09M002.SY2NOFBD cursor, bold;
        converseLib.validationFailed(40); /* required field (for footwear)*/
        return;
      end
    end
  end


  if (SY09M002.XSECD == "PR")
    TA2REC.TA2DTOPT = "GETDATE";

    SY09SAB(); /* call ta0040*/

    SY2REC.SY2NOFBD = TA2REC.TA2GRGGN;
    SY09M002.SY2NOFBD = TA2REC.TA2GRGAN;
    return;
  else
    if (SY09M002.XSECD == "SP"
     || SY09M002.XSECD == "CS"
     || SY09M002.XSECD == "SU")
      SY09W01.SY09WSSN = "SP";
      SY09W01.SY09WSYR = SY09M002.XSNYR;
      if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
       && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        SY2REC.SY2NOFBD = XSNTBL.XSNOFRDT[sysVar.arrayIndex];
        TA2REC.TA2GRGGN = XSNTBL.XSNOFRDT[sysVar.arrayIndex];

        SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

        SY09M002.SY2NOFBD = TA2REC.TA2GRGAN;
        return;
      else
        set SY09M002.SY2NOFBD cursor, bold;
        converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
        return;
      end
    else
      if (SY09M002.XSECD == "FA"
       || SY09M002.XSECD == "CF"
       || SY09M002.XSECD == "HO")
        SY09W01.SY09WSSN = "FA";
        SY09W01.SY09WSYR = SY09M002.XSNYR;
        if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
         && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          SY2REC.SY2NOFBD = XSNTBL.XSNOFRDT[sysVar.arrayIndex];
          TA2REC.TA2GRGGN = XSNTBL.XSNOFRDT[sysVar.arrayIndex];

          SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

          SY09M002.SY2NOFBD = TA2REC.TA2GRGAN;
          return;
        else
          set SY09M002.SY2NOFBD cursor, bold;
          converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
          return;
        end
      end
    end
  end



end // end SY09SHE

// verify nil end. offering date
Function SY09SHF()

       /* ******************************************/
       /* *  VERIFY nil  ending offering date     **/
       /* ******************************************/

  set TA2REC empty;

  if (SY09M002.SY2NOFXD != 0)
    TA2REC.TA2GRGAN = SY09M002.SY2NOFXD;
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2DTOPT = "GREGGREG";

    SY09SAB(); /* call ta0040*/

    if (TA2REC.TA2RTNCD == 222)
      converseLib.validationFailed(30); /* invalid date entered*/
      set SY09M002.SY2NOFXD cursor, bold;
      return;
    else
      if (TA2REC.TA2RTNCD > 0)
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY09   ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "SY09SHB ";
        TA1REC.TA1LOCAT[3] = "TA0040  ";
        TA1REC.TA1LOCAT[4] = "GREGGREG";
        TA1REC.TA1MAP = "SY09M002";
        TA1REC.TA1TBLVU = "DATE ";
        TA1TBLKE = SY09M002.SY2POFXD;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY09M002.SY2NOFXD cursor, bold;
        return;
      else
        SY2REC.SY2NOFXD = TA2REC.TA2GRGGN;
        return;
      end
    end
  else
    if (SY09M002.XGPCD == "05")
      return;
    else
      if (SY09M002.XGPCD != "03")
  /*  */
  /* --------------------- y2k out begin ---------------*/
  /*  */
  /* MOVE 019991231 TO SY2REC.SY2NOFXD;*/
  /* MOVE 123199 TO SY09M002.SY2NOFXD;*/
  /*  */
  /* --------------------- y2k out end -----------------*/
  /*  */
  /*  */
  /* --------------------- y2k in  begin ---------------*/
  /* Default date is changed from 19991231 to 20431231*/
        SY2REC.SY2NOFXD = 020431231;
        SY09M002.SY2NOFXD = 123143;
  /*  */
  /* --------------------- y2k in  end -----------------*/
  /*  */
        return;
      end
    end
  end


  if (SY09M002.XSECD == "PR")
  /*  */
  /* --------------------- y2k out begin ---------------*/
  /*  */
  /* MOVE 019991231 TO SY2REC.SY2NOFXD;*/
  /* MOVE 123199 TO SY09M002.SY2NOFXD;*/
  /*  */
  /* --------------------- y2k out end -----------------*/
  /*  */
  /*  */
  /* --------------------- y2k in  begin ---------------*/
  /* Default date is changed from 19991231 to 20431231*/
    SY2REC.SY2NOFXD = 020431231;
    SY09M002.SY2NOFXD = 123143;
  /*  */
  /* --------------------- y2k in end ------------------*/
  /*  */
    return;
  else
    if (SY09M002.XSECD == "SP"
     || SY09M002.XSECD == "CS"
     || SY09M002.XSECD == "SU")
      SY09W01.SY09WSSN = "SP";
      SY09W01.SY09WSYR = SY09M002.XSNYR;
      if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
       && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        SY2REC.SY2NOFXD = XSNTBL.XSNXDT[sysVar.arrayIndex];
        TA2REC.TA2GRGGN = XSNTBL.XSNXDT[sysVar.arrayIndex];

        SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

        SY09M002.SY2NOFXD = TA2REC.TA2GRGAN;
        return;
      else
        set SY09M002.SY2NOFXD cursor, bold;
        converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
        return;
      end
    else
      if (SY09M002.XSECD == "FA"
       || SY09M002.XSECD == "CF"
       || SY09M002.XSECD == "HO")
        SY09W01.SY09WSSN = "FA";
        SY09W01.SY09WSYR = SY09M002.XSNYR;
        if (SY09W01.SY09WSAB in XSNTBL.XSNABRV
         && XSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          SY2REC.SY2NOFXD = XSNTBL.XSNXDT[sysVar.arrayIndex];
          TA2REC.TA2GRGGN = XSNTBL.XSNXDT[sysVar.arrayIndex];

          SY09SGA(); /* convert date - ccyymmdd to mmddyy*/

          SY09M002.SY2NOFXD = TA2REC.TA2GRGAN;
          return;
        else
          set SY09M002.SY2NOFXD cursor, bold;
          converseLib.validationFailed(130); /* season-year not on xsntbl - enter date;*/
          return;
        end
      end
    end
  end



end // end SY09SHF

// validate season code & year
Function SY09SHG()

     /* *** validate season code and year*/

  if (SY09M002.XSECD in XSETBL.XSECD)
    if (XSETBL.XXXSTAT[sysVar.arrayIndex] == "A"
     || SY09M002.XSECD == SY2REC.XSECD)
        /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(33); /* STATUS IS INACTIVE*/
      set SY09M002.XSECD cursor, bold;
      return;
    end
  else
    converseLib.validationFailed(3); /* INVALID CODE*/
    set SY09M002.XSECD cursor, bold;
    return;
  end

  if (XSETBL.XSESETYP[sysVar.arrayIndex] == " ") /* no xsn validation*/
    if (SY09M002.XSNYR == 0)
      return;
    else
      if (SY09M002.XSNYR > 1970
       /**/
       /* ------------------ y2k out begin*/
       /* --------------*/
       /**/
       /* AND SY09M002.XSNYR LT 2020;*/
       /**/
       /* ------------------ y2k out end*/
       /* --------------*/
       /**/
       /**/
       /* ------------------ y2k in  begin*/
       /* --------------*/
       /* Season year range is extended from*/
       /* 2020 to 2050*/
       && SY09M002.XSNYR < 2050)
  /*  */
  /* ------------------ y2k in  end   --------------*/
  /*  */
        return;
      else
        converseLib.validationFailed(30); /* Invalid date*/
        set SY09M002.XSNYR cursor, bold;
        return;
      end
    end
  else
    if (SY09M002.XSECD == SY2REC.XSECD /* Don't need to validate if*/
     && SY09M002.XSNYR == SY2REC.XSNYR) /* fields not changed*/
      return;
    end
  end

  SY09W01.SY09WSSN = XSETBL.XSESETYP[sysVar.arrayIndex];
  SY09W01.SY09WSYR = SY09M002.XSNYR;
  if (SY09W01.SY09WSAB in XSNTBL.XSNABRV)
    /* NEXT SENTENCE*/
  else /* invalid season year*/
    converseLib.validationFailed(130); /* not on XSN table*/
    set SY09M002.XSECD cursor, bold;
    set SY09M002.XSNYR bold;
  end

end // end SY09SHG

// validate allow new orders flag
Function SY09SHH()


     /* *** validate allow-new-orders flag*/

  if (SY09M002.SY2ALNOR == "Y"
   || SY09M002.SY2ALNOR == "N")
    /* next sentence*/
  else
    converseLib.validationFailed(36); /* enter a 'y' or 'n'*/
    set SY09M002.SY2ALNOR cursor, bold;
  end


end // end SY09SHH

// set-up screen fields
Function SY09SIA()

       /* ******************************************/
       /* *  set sy09m002 screen attributes       **/
       /* ******************************************/


  set SY09M002.XGPCD normal;
  set SY09M002.SY1STNBR normal;
  set SY09M002.SY2CLRID normal;
  set SY09M002.XDMCD normal;
  set SY09M002.SY2SSCIN skip;
  set SY09M002.PG4DMGRN skip;
  set SY09M002.PC3POIDT skip;
  set SY09M002.SY2FDSMO skip;
  set SY09M002.SY2FNSMO skip;
  set SY09M002.SY2PDCMO skip;
  set SY09M002.SY2PNCMO skip;
  set SY09M002.SY2TDIND skip;
  set SY09M002.PG1SC4CD skip;
  set SY09M002.SY2POFBD skip;
  set SY09M002.SY2POFXD skip;
  set SY09M002.SY2FOFBD skip;
  set SY09M002.SY2FOFXD skip;
  set SY09M002.SY2NOFBD skip;
  set SY09M002.SY2NOFXD skip;
  set SY09M002.SY2ALNOR skip;
  set SY09M002.SY09M-MKT-REG[1] skip;
  set SY09M002.SY09M-MKT-REG[2] skip;
  set SY09M002.SY09M-MKT-REG[3] skip;
  set SY09M002.SY09M-MKT-REG[4] skip;
  set SY09M002.SY09M-MKT-REG[5] skip;
  set SY09M002.SY09M-MKT-REG[6] skip;

end // end SY09SIA

// validate gpc code
Function SY09SIB()

       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY09M002.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY09M002.XGPCD cursor, bold;
    SY09M002.XGPABRV = "INVALID";
    return;
  end

  if (SY09M002.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY09M002.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SY09M001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      SY09M001.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
      SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    else
      converseLib.validationFailed(33); /* status code is inactive*/
      set SY09M002.XGPCD cursor, bold;
      SY09M002.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    end
  else
    set SY09M002.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY09M002.XGPABRV = "INVALID";
    exit stack;
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/



  if (SY09M002.XGPCD == "02"
   && COMMAREA.CACLVL[2] == "N")
    set SY09M002.XGPCD cursor, bold;
    converseLib.validationFailed(35); /* not authorized to access gpc*/
    SY09M002.XGPABRV = "INVALID";
    exit stack;
  else
    if (SY09M002.XGPCD == "03"
     && COMMAREA.CACLVL[3] == "N")
      set SY09M002.XGPCD cursor, bold;
      SY09M002.XGPABRV = "INVALID";
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      exit stack;
    else
      COMMAREA.XGPCD = SY09M002.XGPCD;
    end
  end

end // end SY09SIB

// get style row data
Function SY09SIC()


       /* ******************************************/
       /* *     GET  STYLE DATA                   **/
       /* *                                       **/
       /* ******************************************/

  set ERRSQLCA empty;
  set SQLCA empty;
  SY1REC.SY1STNBR = SY09M002.SY1STNBR;
  SY1REC.XGPCD = SY09M002.XGPCD;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY09M001.SY1STYNM = SY1REC.SY1STYNM;
    SY09M002.SY1STYNM = SY1REC.SY1STYNM;
    if (SY1REC.XGPCD == "02")
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SYBSTGNB;
    else
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SY1BSTNB;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* style record does not exists*/
      set SY09M002.SY1STNBR cursor, bold;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09   ";
      TA1REC.TA1LOCAT[1] = "S        ";
      TA1REC.TA1LOCAT[2] = "SY09SIC  ";
      TA1REC.TA1LOCAT[3] = "IO0120   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY09M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1TBLKE = SY1REC.SY1KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(20); /* style table error....*/
      set SY09M002.SY1STNBR cursor, bold;
      exit stack;
    end
  end


end // end SY09SIC

// get color data
Function SY09SID()


       /* ******************************************/
       /* *  GET  COLOR/DIM RECORD                **/
       /* *                                       **/
       /* ******************************************/

  set ERRSQLCA empty;
  set SQLCA empty;
  SY2REC.XGPCD = SY09M002.XGPCD;
  SY2REC.SY1STNBR = SY09M002.SY1STNBR;
  SY2REC.SY2CLRID = SY09M002.SY2CLRID;
  if (SY09M002.XDMCD == " ") /* data not entered*/
    SY09M002.XDMCD = "00"; /* so default*/
  else
    if (SY09M002.XDMCD in XDMTBL.XDMCD) /* if in table*/
      /* next sentence (it's ok)*/
    else
      converseLib.validationFailed(3); /* invalid code*/
      set SY09M002.XDMCD cursor, bold;
      return;
    end
  end

  SY2REC.XDMCD = SY09M002.XDMCD;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (SY2REC.XDR-PROD-REG-CD in SYWREC.XDR-PROD-REG-CD)
      /* Next Sentence*/
    else
      converseLib.validationFailed(193); /* Department/Region Mis-match*/
      set SY09M002.SY2CLRID cursor, bold;
      return;
    end
    move SY2REC to SY09M002 withV60Compat;
    if (SY2REC.XGPCD == "02")
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SYBSTGNB;
      SY09M002.SY2BCLCD = " ";
    else
      SY09M002.SY09M-FLD-VAL1 = SY1REC.SY1BSTNB;
    end
    SYEREC.SY2DATA = SY2REC.SY2DATA;

    SY09SGD(); /* move offering dates to screen*/

  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      converseLib.validationFailed(7); /* color/dim does not exist*/
      set SY09M002.SY2CLRID cursor, bold;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY09   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY09SID ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY09M002";
      TA1REC.TA1DBASE = "DPROD.";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(21); /* color table error*/
      set SY09M002.SY2CLRID cursor, bold;
      exit stack;
    end
  end

end // end SY09SID

// set-up screen fields
Function SY09SIE()

       /* ******************************************/
       /* *  set sy09m002 screen attributes       **/
       /* ******************************************/


  set SY09M002.SY2SSCIN initialAttributes;
  set SY09M002.PC3POIDT initialAttributes;
  set SY09M002.SY2FDSMO initialAttributes;
  set SY09M002.SY2FNSMO initialAttributes;
  set SY09M002.SY2PDCMO initialAttributes;
  set SY09M002.SY2PNCMO initialAttributes;

  if (COMMAREA.CACLVL[10] == "Y") /* restricted user*/
    set SY09M002.SY2TDIND skip;
    set SY09M002.PG1SC4CD skip;
    set SY09M002.SY2POFBD skip;
    set SY09M002.SY2POFXD skip;
    set SY09M002.SY2FOFBD skip;
    set SY09M002.SY2FOFXD skip;
    set SY09M002.SY2NOFBD skip;
    set SY09M002.SY2NOFXD skip;
    set SY09M002.SY2ALNOR skip;
  else
    set SY09M002.SY2TDIND initialAttributes;
    set SY09M002.PG1SC4CD initialAttributes;
    set SY09M002.SY2NOFBD initialAttributes;
    set SY09M002.SY2NOFXD initialAttributes;
    set SY09M002.SY2ALNOR initialAttributes;

    if (SY09M002.XGPCD == "03")
      set SY09M002.SY2POFBD skip;
      set SY09M002.SY2POFXD skip;
      set SY09M002.SY2FOFBD skip;
      set SY09M002.SY2FOFXD skip;
    else
      set SY09M002.SY2POFBD initialAttributes;
      set SY09M002.SY2POFXD initialAttributes;
      set SY09M002.SY2FOFBD initialAttributes;
      set SY09M002.SY2FOFXD initialAttributes;
    end
  end

   /* If on PPS, we don't want these fields changed here*/
  if (SY09W-ON-PPS == "Y")
    set SY09M002.XSECD skip;
    set SY09M002.XSNYR skip;
    set SY09M002.SY2TDIND skip;
    set SY09M002.PG4DMGRN skip;
  end

  set SY09M002.SY09M-MKT-REG[1] skip;
  set SY09M002.SY09M-MKT-REG[2] skip;
  set SY09M002.SY09M-MKT-REG[3] skip;
  set SY09M002.SY09M-MKT-REG[4] skip;
  set SY09M002.SY09M-MKT-REG[5] skip;
  set SY09M002.SY09M-MKT-REG[6] skip;
  SY09M002.SYMSCMSG = " ";

end // end SY09SIE

// check pf keys & transfer
Function SY09SIF()


       /* *******************************************/
       /* *    check function keys and transfer to **/
       /* *    other application as necessary.     **/
       /* *******************************************/

  if (converseVar.validationMsgNum > 0
   && SYWREC.SYWMSGFL == "N")
    exit stack;
  end
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa2)
    converseLib.clearScreen();
    
    exit stack;
  end
  if (converseVar.eventKey is pf1)
    XSPF1();
    SY09M002.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M002 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf3)
    SY09SBA(); /* transfer to sy0v application*/
    SY09M002.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M002 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf4)
    XSPF4();
    SY09M002.SYMSCMSG = COMMAREA.CAMSG;
    set SY09M002 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is enter)
    if (SY09M002.CATOAP != " ")
      COMMAREA.CATOAP = SY09M002.CATOAP;
      COMMAREA.CAITEM = SY09M002.CAITEM;
      XSEXIT();
      SY09M002.SYMSCMSG = COMMAREA.CAMSG;
      set SY09M002 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      return;
    end
  end
  if (converseVar.eventKey is pf12
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15)
    return;
  end

  exit stack;

end // end SY09SIF

Record SY09W01 type basicRecord
  10 SY09WPYR-CMP-CCYY SY09WPYR-CMP-CCYY ; 
    15 SY09WPYR-CMP-CC SY09WPYR-CMP-CC ; 
    15 SY09WPYR-CMP-YY SY09WPYR-CMP-YY ; 
  10 SY09WYY-CMP-CCYY SY09WYY-CMP-CCYY ; 
    15 SY09WYY-CMP-CC SY09WYY-CMP-CC ; 
    15 SY09WYY-CMP-YY SY09WYY-CMP-YY ; 
  10 SY09WREC SY09WREC ; 
  10 SY09WIDX SY09WIDX ; 
  10 SY09WSAB SY09WSAB ; 
    15 SY09WSSN SY09WSSN ; 
    15 SY09WSYR SY09WSYR ; 
  10 SY2DATA SY2DATA ; 
  10 SY09WTDT SY09WTDT ; 
    15 SY09WTCC SY09WTCC ; 
    15 SY09WYM SY09WYM ; 
      20 SY09WYY SY09WYY ; 
      20 SY09WMM SY09WMM ; 
    15 * char(2) ; 
  10 SY09WDTT SY09WDTT ; 
    15 SY09WTYR SY09WTYR ; 
    15 SY09WTMO SY09WTMO ; 
  10 SY09WPO SY09WPO ; 
    15 SY09WPYR SY09WPYR ; 
    15 SY09WPM1 SY09WPM1 ; 
    15 SY09WPM2 SY09WPM2 ; 
  10 SY09WDVF SY09WDVF ; 
  10 SY09W-ON-PPS SY09W-ON-PPS ; 
end // end SY09W01

Record SY09WCOL type basicRecord
  10 SY09WDAT SY09WDAT [200] ; 
    15 SY09WSEL SY09WSEL ; 
    15 SY2CLRID SY2CLRID ; 
    15 SY2CLRAB SY2CLRAB ; 
    15 XDMCD XDMCD ; 
    15 XLCCD XLCCD ; 
  10 SY09WUPD SY09WUPD ; 
  10 SY09WCCT SY09WCCT ; 
  10 SY09WSDX SY09WSDX ; 
  10 SY09WTOP SY09WTOP ; 
  10 SY09WCDX SY09WCDX ; 
  10 SY09WMSG SY09WMSG ; 
    15 SY09WMS8 SY09WMS8 ; 
    15 SY09WMS1 SY09WMS1 ; 
    15 SY09WMS2 SY09WMS2 ; 
    15 SY09WMS7 SY09WMS7 ; 
  10 SY09WMSU SY09WMSU ; 
    15 SY09WMS9 SY09WMS9 ; 
    15 SY09WMS4 SY09WMS4 ; 
    15 SY09WMS3 SY09WMS3 ; 
end // end SY09WCOL

//*** RECORD=VSYREG01 ****
// *******************  STYLE  TABLE  *************************
// 
// DB2 TABLE:           DPROD.VSYREG01
// 
// COPYLIB MEMBER:      DCL01132
// IO MODULE:           IO6640
// 
// KEY TO DB2 TABLE:    XGP_GPC_CD
//                      SY_STY_NBR
//                      SY_COLR_CD_ID
//                      XDM_DIM_CD
//                      XDR_PROD_REG_CD
// 
// DATE CREATED:        FEB. 23, 1993
// 
// MAINTENANCE LOG:
// 
// DATE     INIT       COMMENTS
// -------- ------     -------------------------------------
// 2-23-93  MHALST     created csp record
// 4-14-93  MHALST     DB2 changes, added season code & year
//                         Prop & Futures Offer Dates
//                         Life Cycles & Eff. Dates
// ************************************************************
// ************************
Record VSYREG01 type basicRecord
  5 VSYREG01-GROUP VSYREG01-GROUP ; 
    10 VSYREG01-KEY VSYREG01-KEY ; 
      15 XGP-GPC-CD XGP-GPC-CD ; 
      15 SY-STY-NBR SY-STY-NBR ; 
      15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
      15 XDM-DIM-CD XDM-DIM-CD ; 
      15 XDR-PROD-REG-CD XDR-PROD-REG-CD ; 
    10 PG-SCHED-SPCLT-CD PG-SCHED-SPCLT-CD ; 
    10 PG-FCST-CD PG-FCST-CD ; 
    10 XSE-SESN-CD XSE-SESN-CD ; 
    10 XSN-SESN-YR-RNG XSN-SESN-YR-RNG ; 
    10 SY-PROP-OFFER-BDT SY-PROP-OFFER-BDT ; 
    10 SY-PROP-OFFER-XDT SY-PROP-OFFER-XDT ; 
    10 SY-FUTR-OFFER-BDT SY-FUTR-OFFER-BDT ; 
    10 SY-FUTR-OFFER-XDT SY-FUTR-OFFER-XDT ; 
    10 XLC-LIFE-CYC-CD XLC-LIFE-CYC-CD [4] ; 
    10 SY-LIFE-CYC-EDT SY-LIFE-CYC-EDT [4] ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VSYREG01

// Is product on PPS (Y/N)
DataItem SY09W-ON-PPS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tot. # of colors selected
DataItem SY09WCCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage index
DataItem SY09WCDX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY09WDAT char(21)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Test YYMM dates
DataItem SY09WDTT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Date Valid Flag (Y/N)
DataItem SY09WDVF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index used for table searchs
DataItem SY09WIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Todays Month
DataItem SY09WMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// # of colors selected
DataItem SY09WMS1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msg. for colors selected
DataItem SY09WMS2 char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// # of colors updated
DataItem SY09WMS3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msg. for colors updated
DataItem SY09WMS4 char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg. for colors selected
DataItem SY09WMS7 char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg. for colors selected
DataItem SY09WMS8 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg. for colors selected
DataItem SY09WMS9 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total colors selected msg
DataItem SY09WMSG char(68)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total colors updated msg
DataItem SY09WMSU char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PO Id Work Month 1
DataItem SY09WPM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO Id Work Month 2
DataItem SY09WPM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO Id Work Area
DataItem SY09WPO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PO Id Work Year
DataItem SY09WPYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy09wpyr-cc
DataItem SY09WPYR-CMP-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy09wpyr-ccyy for comparison
DataItem SY09WPYR-CMP-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy09wpyr-yy
DataItem SY09WPYR-CMP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage record
DataItem SY09WREC char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season and year - ssyy format
DataItem SY09WSAB char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen index
DataItem SY09WSDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy04m001 select field
DataItem SY09WSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season-code     - ss   format
DataItem SY09WSSN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season-year     -   yy format
DataItem SY09WSYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Todays Century
DataItem SY09WTCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Todays Date CCYYMMDD
DataItem SY09WTDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Test Month
DataItem SY09WTMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last screen entry
DataItem SY09WTOP num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Test Year
DataItem SY09WTYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// # of colors updated
DataItem SY09WUPD num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Todays Year & Month
DataItem SY09WYM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Todays Year
DataItem SY09WYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy09wpyr-cc
DataItem SY09WYY-CMP-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy09wpyr-ccyy for comparison
DataItem SY09WYY-CMP-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sy09wpyr-yy
DataItem SY09WYY-CMP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data group item entire row
DataItem VSYREG01-GROUP char(75)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key into Table
DataItem VSYREG01-KEY char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

