package sy06;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import os.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=SY06 ****
// OVERVIEW:
// 
// This application is the customer service UPC request screen.
// This application was written to allow users to enter
// parameter information and then automatically submitt
// JCL to produce a UPC report or flat file.  The
// applicatoin consists of a main menu and correspoding entry
// screen.
// 
// STATEMENT GROUP MEANINGS:
//    OS0TS-1000  = Code specific to booking requests
// 
// **  It is recommended when adding new options to this
//     program that you copy all the OPT1 statement groups
//     with the new OPT number and build from there.
// 
// IO MOD OVERVIEW:
// 
//    This application uses various SY subprograms to validate
//    data.  They are as follows:
// 
//       SYXXXX - DORDER.VORHDR01 modifier
//          Option 'MC' counts how many rows to be updated
//          Option 'U1' updates the bulk/draw code
//          Option 'U2' updates the xds and xwh codes
//          Option 'U3' updates the sales office id
//          Option 'U4' updates the change date
// 
// ********************************************************
// *           M A I N T E N A N C E     L O G            *
// ********************************************************
// 
//     DATE      user          DESCRIPTION OF CHANGE
//   --------   ------   ----------------------------------
//   03-16-95   pstroe   Created
//   09-26-96   MHALST   Add map M010 to allow entry of
//                       parameter file.
// 
//   06-09-99   NJANA    Change the Y2K date window
//                       for customer need dates
// *********************
Program SY06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  SQLCA SQLCA; // record
  SY06W00 SY06W00; // record
  SY06W01 SY06W01; // record
  SY06W02 SY06W02; // record
  SY06W03 SY06W03; // record
  SY06W04 SY06W04; // record
  SY06W05 SY06W05; // record
  SY06W06 SY06W06; // record
  SY06W07 SY06W07; // record
  SY06W08 SY06W08; // record
  SY06W09 SY06W09; // record
  SY06W99 SY06W99; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  UT2REC UT2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SY06T01 {deleteAfterUse = yes}; // table
  use SY06T02 {deleteAfterUse = yes}; // table
  use SY06T03 {deleteAfterUse = yes}; // table
  use SY06T04 {deleteAfterUse = yes}; // table
  use XSTTBL {deleteAfterUse = yes}; // table
  use SY06M.SY06M001,  // forms
      SY06M.SY06M005, 
      SY06M.SY06M010, 
      SY06M.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY060000: SY060000();
    goto SY061100;
    SY061100: SY061100();
    goto SY061000;
    SY061000: SY061000();

    /* process the selected option from the map*/

    if (converseVar.validationMsgNum == 0)
      if (SY06M001.SY06M-SELECTION == 1)
        goto SY062100; /* bookings request*/
      end
      if (SY06M001.SY06M-SELECTION == 2)
        goto SY063100; /* parameter request*/
      end
    end


    goto SY061000; /* flow back to the converse*/

    SY062100: SY062100();
    goto SY062000; /* flow to the option 1 converse*/
    SY062000: SY062000();


    if (converseVar.eventKey is pf3) /* user pressed pf3*/
      goto SY060000; /* go back to the main menu*/
    end

    if (converseVar.eventKey is pa2 /* user pressed pa2*/
     || SY06W-JOB-SUBMITTED-FLAG == "Y") /* or jcl written*/
      converseLib.validationFailed(213); /* UPC Request submitted*/
      goto SY062100; /* go back to the start of option 1*/
    end

    goto SY062000; /* continue making changes*/

    SY063100: SY063100();
    goto SY063000; /* flow to option 2 converse*/
    SY063000: SY063000();
    if (converseVar.eventKey is pf3)
      goto SY060000; /* go back to main menu*/
    end

    if (converseVar.eventKey is pa2
     || SY06W-JOB-SUBMITTED-FLAG == "Y")
      converseLib.validationFailed(213); /* UPC request submitted*/
      goto SY062100;
    end

    goto SY063000;

  end // end main
end // end SY06

// Main Execute Process
Function SY060000()
     /* Check csp and order batch security*/

  XSENTRY(); /* check security*/
  XSSEGTR(); /* set segmented trans id*/

     /* Initialize application*/

  SY06S-INIT-SY06();


end // end SY060000

// Converse Menu after Process
Function SY061000()

  converseVar.segmentedMode = 1; /* force segmented converse mode*/

  converse SY06M001 ;


  VAGen_EZEMSG = " ";

  /* Reset field attributes*/

  set SY06M001.SY06M-REQUESTOR initialAttributes;
  set SY06M001.XXXPHNA[1] initialAttributes;
  set SY06M001.XXXPHNP[1] initialAttributes;
  set SY06M001.XXXPHNN[1] initialAttributes;
  set SY06M001.SY06M-SELECTION initialAttributes;
  set SY06M001.SY06M-REPORT-IND initialAttributes;
  set SY06M001.SY06M-DISKETTE-IND initialAttributes;
  set SY06M001.KUCCONM initialAttributes;
  set SY06M001.SY06M-CONTACT-NM initialAttributes;
  set SY06M001.XXX-ADDR1 initialAttributes;
  set SY06M001.XXX-ADDR2 initialAttributes;
  set SY06M001.XXX-ADDR3 initialAttributes;
  set SY06M001.XXXCITY initialAttributes;
  set SY06M001.XSTCD initialAttributes;
  set SY06M001.XXXZIP initialAttributes;
  set SY06M001.XXXPHNA[2] initialAttributes;
  set SY06M001.XXXPHNP[2] initialAttributes;
  set SY06M001.XXXPHNN[2] initialAttributes;
  set SY06M001.SY06M-COMMENT initialAttributes;

  if (converseVar.eventKey is enter) /* user pressed enter*/
    SY06S-MENU-ENTER();
  else
    if (converseVar.eventKey is pf1 /* user presses a valid PF key*/
     || converseVar.eventKey is pf3 
     || converseVar.eventKey is pf4)
      SY06S-MENU-PF-KEYS();
    else
      converseLib.validationFailed(19); /* invalid pf key pressed*/
    end
  end


end // end SY061000

// Initialize Menu Processes
Function SY061100()

  SY06S-MENU-MAP-BLD();

end // end SY061100

// Converse Option 1 Map
Function SY062000()
  converse SY06M005 ;


  VAGen_EZEMSG = " ";

  /* Reset field attributes*/

  set SY06M005.KUCCOID initialAttributes;
  set SY06M005.KUCCONM initialAttributes;
  set SY06M005.SY06M-START-DT initialAttributes;
  set SY06M005.SY06M-END-DT initialAttributes;
  set SY06M005.XGPCD[1] initialAttributes;
  set SY06M005.XGPCD[2] initialAttributes;

  if (converseVar.eventKey is enter) /* user pressed enter*/
    SY06S-OPT1-ENTER();
  else
    if (converseVar.eventKey is pf3 /* user presses a valid PF key*/
     || converseVar.eventKey is pf4 
     || converseVar.eventKey is pa2)
      SY06S-OPT1-PF-KEYS(); /* process pf key pressed*/
    else
      converseLib.validationFailed(19); /* invalid PF key pressed*/
    end
  end


end // end SY062000

// Initialize Option 1 Processing
Function SY062100()

  set KUCREC empty; /* clean out the customer record*/
  set SY06M005 empty; /* clear the map*/

  SY06M005.SY06M-APPL-NM = "SY06";
  SY06W-ERR-FL = "N";
  SY06W-VALIDATED = "N";
  SY06W04.SY06M-REQUESTOR = SY06M001.SY06M-REQUESTOR;
  SY06W04.XXXPHNA = SY06M001.XXXPHNA[1];
  SY06W04.XXXPHNP = SY06M001.XXXPHNP[1];
  SY06W04.XXXPHNN = SY06M001.XXXPHNN[1];

  SY06M005.XXXCURDT = SY06W01.SY06W-YYMMDD; /* move date to map*/
  set SY06M005.KUCCOID cursor;
  set SY06M005.SY06M-CONFIRM-FLAG invisible, protect;


end // end SY062100

// Converse Option 2 Map
Function SY063000()
  converse SY06M010 ;


  VAGen_EZEMSG = " ";

  /* Reset field attributes*/

  set SY06M010.SY06M-PARM-FILE-NM initialAttributes;

  if (converseVar.eventKey is enter) /* user pressed enter*/
    SY06S-OPT2-ENTER();
  else
    if (converseVar.eventKey is pf3 /* user presses a valid PF key*/
     || converseVar.eventKey is pf4 
     || converseVar.eventKey is pa2)
      SY06S-OPT2-PF-KEYS(); /* process pf key pressed*/
    else
      converseLib.validationFailed(19); /* invalid PF key pressed*/
    end
  end


end // end SY063000

// Initialize Option 2 Processing
Function SY063100()

  set KUCREC empty; /* clean out the customer record*/
  set SY06M010 empty; /* clear the map*/

  SY06M010.SY06M-APPL-NM = "SY06";
  SY06M010.SY06M-PARM-FILE-NM = "TEST.PARMLIB(SY131110)";
  SY06W-ERR-FL = "N";
  SY06W-VALIDATED = "N";

  SY06M010.XXXCURDT = SY06W01.SY06W-YYMMDD; /* move date to map*/
  set SY06M010.SY06M-CONFIRM-FLAG invisible, protect;


end // end SY063100

// Get cics region info
Function SY06S-CICS-INFO()
  /* ***********************************************************************/
  /* *  MODULE: GET CICS INFORMATION                                      **/
  /* * PURPOSE: Get CICS information - determine if program is running on **/
  /* *          the production or development machine.                    **/
  /* ***********************************************************************/

  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN"; /* determine region*/

  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end /* get CICS info*/

  if (sysVar.errorCode != "00000000" /* call was not good*/
   || TA3REC.TA3RTNCD != 0)          /* or bad return code*/
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA3REC.TA3GROUP; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "POST"; /* post, no abend*/
    TA1REC.TA1LOCAT[1] = "CICS INF"; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0230  "; /* subroutine*/

    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/

    converseLib.validationFailed(215); /* set error message*/

  end

end // end SY06S-CICS-INFO

// Get KUCREC (Customer)
Function SY06S-EDT-KUCCOID()
   /* **********************************************************************/
   /* PROCESS CUSTOMER COMPANY ID*/
   /* **********************************************************************/
  set KUCREC empty;
  KUCREC.KUCCOID = SY06M005.KUCCOID;

  SY06S-FIND-VCMPNY(); /* read cust company row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    SY06M005.KUCCONM = KUCREC.KUCCONM;
  else /* record not found*/
    if (SQLCA.VAGen_SQLCODE == 100)
      SY06W-ERR-FL = "Y";
      converseLib.validationFailed(0212); /* Company does not exist*/
      set SY06M005.KUCCOID cursor, bold;
    else
      SY06M005.KUCCONM = "UNKNOWN";
    end
  end

end // end SY06S-EDT-KUCCOID

// Call IO0240 read vcmpny01
Function SY06S-FIND-VCMPNY()
   /* **********************************************************************/
   /* SY06S-FIND-VCMPNY*/
   /* This routine calls IO0240 to read a unique company id record.*/
   /* **********************************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    SY06W-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0240"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end

end // end SY06S-FIND-VCMPNY

// Initialize SY06 Application
Function SY06S-INIT-SY06()

  set KUCREC empty; /* Customer*/
  set SQLCA empty; /* return code from DB2*/
  set TA1REC empty; /* diagnostic record*/

  set SY06M001 empty; /* map*/

  SY06W01.SY06W-YYMMDD = VGVar.currentShortGregorianDate;
  SY06W01.SY06W-TIME = VGVar.currentFormattedTime;

  if (SY06W01.SY06W-YY <= 51)
    SY06W01.SY06W-DB2-DATE-CC = 20;
  else
    SY06W01.SY06W-DB2-DATE-CC = 19;
  end

  SY06W01.SY06W-DB2-DATE-YY = SY06W01.SY06W-YY; /* date reformat yy*/
  SY06W01.SY06W-DB2-DATE-MM = SY06W01.SY06W-MM; /* date reformat mm*/
  SY06W01.SY06W-DB2-DATE-DD = SY06W01.SY06W-DD; /* date reformat dd*/

  SY06W01.SY06W-DB2-TIME-HH = SY06W01.SY06W-TIME-HH;
                                                        /* time reformat hh*/
  SY06W01.SY06W-DB2-TIME-MM = SY06W01.SY06W-TIME-MM;
                                                        /* time reformat mm*/

  TA1REC.TA1MAP = "SY06M001"; /* map name for diags*/


end // end SY06S-INIT-SY06

// edit the menu map
Function SY06S-MENU-EDIT()

    /* *****/
    /* **** EDIT ALL MAP FIELDS FROM BOTTOM TO TOP*/
    /* *****/

    /* ****/
    /* *** edit zip code*/
    /* ****/

  if (SY06M001.XXXZIP == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.XXXZIP cursor, bold;
  end

    /* ****/
    /* *** edit state*/
    /* ****/

  if (SY06M001.XSTCD == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.XSTCD cursor, bold;
  end

  if (SY06M001.XSTCD in XSTTBL.XSTCD
   && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
  else
    converseLib.validationFailed(0210); /* invalid state code*/
    set SY06M001.XSTCD cursor, bold;
  end

    /* ****/
    /* *** edit city*/
    /* ****/

  if (SY06M001.XXXCITY == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.XXXCITY cursor, bold;
  end

    /* *** edit address line 1*/
    /* *** line 2 and 3 are not required*/
    /* ****/

  if (SY06M001.XXX-ADDR1 == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.XXX-ADDR1 cursor, bold;
  end

    /* ****/
    /* *** edit contact name*/
    /* ****/

  if (SY06M001.SY06M-CONTACT-NM == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.SY06M-CONTACT-NM cursor, bold;
  end

    /* ****/
    /* *** edit company name*/
    /* ****/

  if (SY06M001.KUCCONM == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.KUCCONM cursor, bold;
  end

    /* ****/
    /* *** edit report indicator and diskette indicator*/
    /* *** both cannot be selected at the same time*/
    /* ****/
  if (SY06M001.SY06M-REPORT-IND == "Y"
   && 
  SY06M001.SY06M-DISKETTE-IND == "Y")
    converseLib.validationFailed(216); /* cannot select both*/
    set SY06M001.SY06M-REPORT-IND cursor, bold;
    set SY06M001.SY06M-DISKETTE-IND bold;
  end


    /* ****/
    /* *** edit report indicator and diskette indicator*/
    /* *** at least one them must equal 'y'*/
    /* ****/
  if (SY06M001.SY06M-REPORT-IND == "N"
   && 
  SY06M001.SY06M-DISKETTE-IND == "N")
    converseLib.validationFailed(209); /* one must equal 'y'*/
    set SY06M001.SY06M-REPORT-IND cursor, bold;
    set SY06M001.SY06M-DISKETTE-IND bold;
  end

    /* ****/
    /* *** edit diskette indicator*/
    /* ****/

  if (SY06M001.SY06M-DISKETTE-IND == "N"
   || 
  SY06M001.SY06M-DISKETTE-IND == "Y")
     /* next sentence*/
  else
    converseLib.validationFailed(36); /* must be 'y'  or 'n'*/
    set SY06M001.SY06M-DISKETTE-IND cursor, bold;
  end


    /* ****/
    /* *** edit report indicator*/
    /* ****/

  if (SY06M001.SY06M-REPORT-IND == "N"
   || 
  SY06M001.SY06M-REPORT-IND == "Y")
     /* next sentence*/
  else
    converseLib.validationFailed(36); /* must be 'y'  or 'n'*/
    set SY06M001.SY06M-REPORT-IND cursor, bold;
  end
    /* ****/
    /* *** edit phone number*/
    /* ****/

  if (SY06M001.XXXPHNA == 0
   && SY06M001.XXXPHNP == 0
   && SY06M001.XXXPHNN == 0)
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.XXXPHNA cursor, bold;
  end


    /* ****/
    /* *** edit requestor*/
    /* ****/

  if (SY06M001.SY06M-REQUESTOR == " ")
    converseLib.validationFailed(40); /* field required*/
    set SY06M001.SY06M-REQUESTOR cursor, bold;
  end

end // end SY06S-MENU-EDIT

// process enter key on menu
Function SY06S-MENU-ENTER()
  if (SY06M001.CATOAP == " ") /* fastpath application and parms blank*/
    if (SY06M001.CAITEM == " ")
    /* next sentence*/
    else
      SY06M001.CAITEM = " "; /* parms entered without application*/
    end
  else
    COMMAREA.CATOAP = SY06M001.CATOAP; /* move to commarea*/
    COMMAREA.CAITEM = SY06M001.CAITEM;
    COMMAREA.CAUSERA = " "; /* clear user area*/

    XSEXIT(); /* transfer control*/

    set SY06M001.CATOAP cursor, bold;
    set SY06M001.CAITEM bold;
    SY06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/

    if (converseVar.validationMsgNum != 0) /* error occurred*/
      return;
    end
  end

  if (SY06M001.SY06M-SELECTION == 1) /* For option 1*/
    SY06S-MENU-EDIT(); /* Edit menu fields*/
  end

end // end SY06S-MENU-ENTER

// Build SY06 menu screen
Function SY06S-MENU-MAP-BLD()

     /* build map headings*/

  SY06M001.XXXCURDT = SY06W01.SY06W-YYMMDD; /* map date*/
  SY06M001.SY06M-APPL-NM = "SY06"; /* application name*/

  SY06M001.SY06M-SELECTION = "1"; /* select code*/
  SY06M001.SY06M-REPORT-IND = "N";
  SY06M001.SY06M-DISKETTE-IND = "N";

  set SY06M001.SY06M-REQUESTOR cursor;

  if (SY06W04.SY06M-REQUESTOR != " ")
    SY06M001.SY06M-REQUESTOR = SY06W04.SY06M-REQUESTOR;
    SY06M001.XXXPHNA[1] = SY06W04.XXXPHNA;
    SY06M001.XXXPHNP[1] = SY06W04.XXXPHNP;
    SY06M001.XXXPHNN[1] = SY06W04.XXXPHNN;
  end

end // end SY06S-MENU-MAP-BLD

// process pf keys on menu
Function SY06S-MENU-PF-KEYS()

  if (converseVar.validationMsgNum == 0) /* no errors*/
    if (converseVar.eventKey is pf1) /* help requested*/
      COMMAREA.CAUSERA = " ";
      XSPF1(); /* transfer to help system*/
      SY06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    end

    if (converseVar.eventKey is pf3) /* transfer to OP0M*/
      COMMAREA.CATOAP = "SY0I"; /* move to commarea*/
      COMMAREA.CAUSERA = " "; /* clear user area*/
      XSEXIT(); /* transfer control*/
      set SY06M001.CATOAP cursor, bold;
      set SY06M001.CAITEM bold;
      SY06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/
      if (converseVar.validationMsgNum != 0 /* error occurred*/
       || SY06M001.VAGen_EZEMSG != " ")    
        return;
      end
    end

    if (converseVar.eventKey is pf4) /* transfer to XXXX requested*/
      COMMAREA.CAUSERA = " ";
      XSPF4(); /* pass control*/
      SY06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    end
  end

end // end SY06S-MENU-PF-KEYS

// edit the map
Function SY06S-OPT1-EDIT()

    /* ****/
    /* *** edit confirm flag*/
    /* ****/

  if (SY06M005.SY06M-CONFIRM-FLAG == " "
   || 
  SY06M005.SY06M-CONFIRM-FLAG == "Y"
   || 
  SY06M005.SY06M-CONFIRM-FLAG == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(36); /* must be 'y'  or 'n'*/
    set SY06M005.SY06M-CONFIRM-FLAG cursor, bold;
  end

  if (SY06M005.XGPCD[1] == " "
   || 
  SY06M005.XGPCD[1] == "02"
   || 
  SY06M005.XGPCD[1] == "03")
     /* next sentence*/
  else
    converseLib.validationFailed(31); /* invalid gpc code*/
    set SY06M005.XGPCD[1] cursor, bold;
  end

    /* ****/
    /* *** edit gpc code*/
    /* ****/

  if (SY06M005.XGPCD[2] == " "
   || 
  SY06M005.XGPCD[2] == "02"
   || 
  SY06M005.XGPCD[2] == "03")
     /* next sentence*/
  else
    converseLib.validationFailed(31); /* invalid gpc code*/
    set SY06M005.XGPCD[2] cursor, bold;
  end

    /* ****/
    /* *** gpc code required*/
    /* ****/

  if (SY06M005.XGPCD[1] == " "
   && 
  SY06M005.XGPCD[1] == "  ")
    converseLib.validationFailed(40); /* required field*/
    set SY06M005.XGPCD[1] cursor, bold;
  end

    /* ****/
    /* *** EDIT CUSTOMER NEED START AND END DATES*/
    /* ****/

  if (SY06M005.SY06M-START-DT == 0)
    converseLib.validationFailed(40); /* field required*/
    set SY06M005.SY06M-START-DT cursor, bold;
  end

  if (SY06M005.SY06M-START-DT > 0
   && SY06M005.SY06M-END-DT > 0)
    SY06W01.SY06W-WK-YYMMDD = SY06M005.SY06M-START-DT;
    move SY06W-WK-MM to SY06W-MM-DT1 withV60Compat;
    move SY06W-WK-DD to SY06W-DD-DT1 withV60Compat;
    move SY06W-WK-YY to SY06W-YY-DT1 withV60Compat;
    /* TCS change begins-date 06/09/99*/
    if (SY06W-YY-DT1 < 90)
      SY06W-CC-DT1 = 20;
    else
      SY06W-CC-DT1 = 19;
    end
    SY06W-WK-YYMMDD = SY06M005.SY06M-END-DT;
    move SY06W-WK-MM to SY06W-MM-DT2 withV60Compat;
    move SY06W-WK-DD to SY06W-DD-DT2 withV60Compat;
    move SY06W-WK-YY to SY06W-YY-DT2 withV60Compat;
    if (SY06W-YY-DT2 < 90)
      SY06W-CC-DT2 = 20;
    else
      SY06W-CC-DT2 = 19;
    end
    /* TCS change ends  -date 06/09/99*/
    if (SY06W-DT2 < SY06W-DT1)
      converseLib.validationFailed(208); /* Start dt cannot be gt end dt*/
      set SY06M005.SY06M-START-DT cursor, bold;
    end
  end
    /* ****/
    /* *** Edit & Validate Customer number*/
    /* ****/
  SY06M005.KUCCONM = " ";
  if (SY06M005.KUCCOID != 0)
    SY06S-EDT-KUCCOID();
  else
    converseLib.validationFailed(211); /* customer number required*/
    set SY06M005.KUCCOID cursor, bold;
  end

    /* ****/
    /* *** If no errors display confirm msg*/
    /* ****/
  if (converseVar.validationMsgNum == 0)
    if (SY06M005.SY06M-CONFIRM-FLAG == " "
     || SY06M005.SY06M-CONFIRM-FLAG == "N")
      SY06M005.SY06M-CONFIRM-LIT1 = "SUBMIT REQUEST?";
      SY06M005.SY06M-CONFIRM-LIT2 = "(Y/N)";
      set SY06M005.SY06M-CONFIRM-LIT1 skip, bold;
      set SY06M005.SY06M-CONFIRM-LIT2 skip, bold;
      set SY06M005.SY06M-CONFIRM-FLAG cursor, normal;
    end
  end

end // end SY06S-OPT1-EDIT

// process enter
Function SY06S-OPT1-ENTER()

  if (SY06M005.CATOAP == " ") /* fastpath application and parms blank*/
    if (SY06M005.CAITEM == " ")
    /* next sentence*/
    else
      SY06M005.CAITEM = " "; /* parms entered without application*/
    end
  else
    COMMAREA.CATOAP = SY06M005.CATOAP; /* move to commarea*/
    COMMAREA.CAITEM = SY06M005.CAITEM;
    COMMAREA.CAUSERA = " "; /* clear user area*/

    XSEXIT(); /* transfer control*/

    set SY06M005.CATOAP cursor, bold;
    set SY06M005.CAITEM bold;
    SY06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/

    if (converseVar.validationMsgNum != 0 /* error occurred*/
     || SY06M005.VAGen_EZEMSG != " ")    
      return;
    end
  end

  SY06S-OPT1-EDIT(); /* edit the map*/

  if (SY06M005.SY06M-CONFIRM-FLAG == "Y")
    SY06S-CICS-INFO(); /* determine if prod or test environment*/
  end

  if (SY06M005.SY06M-CONFIRM-FLAG == "Y"
   && converseVar.validationMsgNum == 0)
    SY06S-SUBMIT-JCL(); /* submitt jcl to internal reader*/
  end


end // end SY06S-OPT1-ENTER

// Load parm into work records
Function SY06S-OPT1-LOAD()
     /*  */
     /* Format the batch program parameters.*/
     /* Submit the job control through the internal reader using TA06*/
     /* Indicate that the selected function is completed.*/
     /*  */

  set SY06W00 empty; /* Initialize variables work area*/
  set SY06W03 empty; /* Initialize parameters work area*/
  set SY06W04 empty; /* Initialize parameters work area*/
  set SY06W05 empty; /* Initialize parameters work area*/
  set SY06W06 empty; /* Initialize parameters work area*/
  set SY06W07 empty; /* Initialize parameters work area*/
  set SY06W08 empty; /* Initialize parameters work area*/
  set TA6REC empty; /* Initialize parameters work area*/

   /* move mailing instructions from map to parm record sy06w04*/

  SY06W04.SY06W-REQUEST-TYPE = "B1";
  SY06W04.SY06M-REQUESTOR = SY06M001.SY06M-REQUESTOR;
  SY06W04.XXXPHNA = SY06M001.XXXPHNA[1];
  SY06W04.XXXPHNP = SY06M001.XXXPHNP[1];
  SY06W04.XXXPHNN = SY06M001.XXXPHNN[1];
  SY06W04.SY06M-REPORT-IND = SY06M001.SY06M-REPORT-IND;
  SY06W04.SY06M-DISKETTE-IND = SY06M001.SY06M-DISKETTE-IND;
  SY06W04.KUCCONM = SY06M001.KUCCONM;

   /* move mailing instructions from map to parm record sy06w05*/

  SY06W05.SY06W-REQUEST-TYPE = "B2";
  SY06W05.SY06M-CONTACT-NM = SY06M001.SY06M-CONTACT-NM;
  SY06W05.XXX-ADDR1 = SY06M001.XXX-ADDR1;

   /* move mailing instructions from map to parm record sy06w06*/

  SY06W06.SY06W-REQUEST-TYPE = "B3";
  SY06W06.XXX-ADDR2 = SY06M001.XXX-ADDR2;
  SY06W06.XXX-ADDR3 = SY06M001.XXX-ADDR3;

   /* move mailing instructions from map to parm record sy06w07*/

  SY06W07.SY06W-REQUEST-TYPE = "B4";
  SY06W07.XXXCITY = SY06M001.XXXCITY;
  SY06W07.XSTCD = SY06M001.XSTCD;
  SY06W07.XXXZIP = SY06M001.XXXZIP;

   /* move mailing instructions from map to parm record sy06w08*/

  SY06W08.SY06W-REQUEST-TYPE = "B5";
  SY06W08.XXXPHNA = SY06M001.XXXPHNA[2];
  SY06W08.XXXPHNP = SY06M001.XXXPHNP[2];
  SY06W08.XXXPHNN = SY06M001.XXXPHNN[2];
  SY06W08.SY06M-COMMENT = SY06M001.SY06M-COMMENT;

   /* move detailed booking information to parm record sy06w03*/

  SY06W03.SY06W-REQUEST-TYPE = "B6";
  SY06W03.SY06W-KUCCOID = SY06M005.KUCCOID;
  SY06W03.SY06M-START-DT = SY06M005.SY06M-START-DT;
  SY06W03.SY06M-END-DT = SY06M005.SY06M-END-DT;
  SY06W03.XGPCD[1] = SY06M005.XGPCD[1];
  SY06W03.XGPCD[2] = SY06M005.XGPCD[2];

end // end SY06S-OPT1-LOAD

// process pf key pressed
Function SY06S-OPT1-PF-KEYS()

  if (converseVar.validationMsgNum == 0) /* no errors*/
    if (converseVar.eventKey is pf4) /* transfer to MN0M requested*/
      COMMAREA.CAUSERA = " ";
      XSPF4(); /* pass control*/
      SY06M005.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    end
  end

end // end SY06S-OPT1-PF-KEYS

// edit the map
Function SY06S-OPT2-EDIT()

    /* ****/
    /* *** edit confirm flag*/
    /* ****/

  if (SY06M010.SY06M-CONFIRM-FLAG == " "
   || 
  SY06M010.SY06M-CONFIRM-FLAG == "Y"
   || 
  SY06M010.SY06M-CONFIRM-FLAG == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(36); /* must be 'y'  or 'n'*/
    set SY06M010.SY06M-CONFIRM-FLAG cursor, bold;
  end

    /* ****/
    /* *** If no errors display confirm msg*/
    /* ****/
  if (converseVar.validationMsgNum == 0)
    if (SY06M010.SY06M-CONFIRM-FLAG == " "
     || SY06M010.SY06M-CONFIRM-FLAG == "N")
      SY06M010.SY06M-CONFIRM-LIT1 = "SUBMIT REQUEST?";
      SY06M010.SY06M-CONFIRM-LIT2 = "(Y/N)";
      set SY06M010.SY06M-CONFIRM-LIT1 skip, bold;
      set SY06M010.SY06M-CONFIRM-LIT2 skip, bold;
      set SY06M010.SY06M-CONFIRM-FLAG cursor, normal;
    end
  end

end // end SY06S-OPT2-EDIT

// process enter
Function SY06S-OPT2-ENTER()

  if (SY06M010.CATOAP == " ") /* fastpath application and parms blank*/
    if (SY06M010.CAITEM == " ")
    /* next sentence*/
    else
      SY06M010.CAITEM = " "; /* parms entered without application*/
    end
  else
    COMMAREA.CATOAP = SY06M010.CATOAP; /* move to commarea*/
    COMMAREA.CAITEM = SY06M010.CAITEM;
    COMMAREA.CAUSERA = " "; /* clear user area*/

    XSEXIT(); /* transfer control*/

    set SY06M010.CATOAP cursor, bold;
    set SY06M010.CAITEM bold;
    SY06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/

    if (converseVar.validationMsgNum != 0 /* error occurred*/
     || SY06M010.VAGen_EZEMSG != " ")    
      return;
    end
  end

  SY06S-OPT2-EDIT(); /* edit the map*/

  if (SY06M010.SY06M-CONFIRM-FLAG == "Y")
    SY06S-CICS-INFO(); /* determine if prod or test environment*/
  end

  if (SY06M010.SY06M-CONFIRM-FLAG == "Y"
   && converseVar.validationMsgNum == 0)
    SY06S-SUBMIT-JCL(); /* submitt jcl to internal reader*/
  end


end // end SY06S-OPT2-ENTER

// process pf key pressed
Function SY06S-OPT2-PF-KEYS()

  if (converseVar.validationMsgNum == 0) /* no errors*/
    if (converseVar.eventKey is pf4) /* transfer to MN0M requested*/
      COMMAREA.CAUSERA = " ";
      XSPF4(); /* pass control*/
      SY06M005.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
    end
  end

end // end SY06S-OPT2-PF-KEYS

// Sub prod jcl for bookings rqst
Function SY06S-PROD1-JCL()
     /*  */
     /* Format the batch program parameters.*/
     /* Submit the job control through the internal reader using TA06*/
     /* Indicate that the selected function is completed.*/
     /*  */

   /* load jcl work records from map fields*/

  SY06S-OPT1-LOAD();

  TA6REC.TA6INDEX = 1; /* Initialize parm index*/
  SY06W-TABLE-INDEX = 1; /* Initialize JCL table index*/
  SY06W01.SY06W-JOB-SUBMITTED-FLAG = "N";

  while (SY06W01.SY06W-TABLE-INDEX > 0)

    SY06W99.SY06W-JCL = SY06T03.SY06WJCL[SY06W-TABLE-INDEX]; /* JCL statement*/

    SY06W00.SY06W-RUN-TYPE = SY06T03.SY06T-STATEMENT-TYPE[SY06W-TABLE-INDEX]; /* Statement type*/

    if (SY06W00.SY06W-RUN-TYPE == "P") /* Parameters statement*/

      TA6REC.TARJCL[TA6INDEX] = SY06W04.SY06W-JCL; /* mailing instruction 1st rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W05.SY06W-JCL; /* mailing instruction 2ND rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W06.SY06W-JCL; /* mailing instruction 3RD rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W07.SY06W-JCL; /* mailing instruction 4th rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W08.SY06W-JCL; /* mailing instruction 5th rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W03.SY06W-JCL; /* booking request information*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

    end

    if (SY06W00.SY06W-RUN-TYPE == "E") /* EXEC statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "E";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == " ") /* non parm, jcl, or proc*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = " ";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == "J") /* JOB statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "J";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W99.SY06W-JCL == "/*EOF") /* End of file*/
      SY06W01.SY06W-TABLE-INDEX = 0;
    else
      SY06W01.SY06W-TABLE-INDEX = SY06W01.SY06W-TABLE-INDEX + 1;
    end
  end

end // end SY06S-PROD1-JCL

// Sub prod jcl for bookings rqst
Function SY06S-PROD2-JCL()
     /*  */
     /* Format the batch program parameters.*/
     /* Submit the job control through the internal reader using TA06*/
     /* Indicate that the selected function is completed.*/
     /*  */

   /* load jcl work records from map fields*/

  SY06S-OPT1-LOAD();

  TA6REC.TA6INDEX = 1; /* Initialize parm index*/
  SY06W-TABLE-INDEX = 1; /* Initialize JCL table index*/
  SY06W01.SY06W-JOB-SUBMITTED-FLAG = "N";

  while (SY06W01.SY06W-TABLE-INDEX > 0)

    SY06W99.SY06W-JCL = SY06T02.SY06WJCL[SY06W-TABLE-INDEX]; /* JCL statement*/

    SY06W00.SY06W-RUN-TYPE = SY06T02.SY06T-STATEMENT-TYPE[SY06W-TABLE-INDEX]; /* Statement type*/

    if (SY06W00.SY06W-RUN-TYPE == "P") /* Parameters statement*/

      TA6REC.TARJCL[TA6INDEX] = SY06W04.SY06W-JCL; /* mailing instruction 1st rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W05.SY06W-JCL; /* mailing instruction 2ND rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W06.SY06W-JCL; /* mailing instruction 3RD rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W07.SY06W-JCL; /* mailing instruction 4th rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W08.SY06W-JCL; /* mailing instruction 5th rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W03.SY06W-JCL; /* booking request information*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

    end

    if (SY06W00.SY06W-RUN-TYPE == "E") /* EXEC statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "E";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == " ") /* non parm, jcl, or proc*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = " ";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == "J") /* JOB statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "J";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W99.SY06W-JCL == "/*EOF") /* End of file*/
      SY06W01.SY06W-TABLE-INDEX = 0;
    else
      SY06W01.SY06W-TABLE-INDEX = SY06W01.SY06W-TABLE-INDEX + 1;
    end
  end

end // end SY06S-PROD2-JCL

// Sub prod jcl for parm file
Function SY06S-PROD3-JCL()
     /*  */
     /* Format the batch program parameters.*/
     /* Submit the job control through the internal reader using TA06*/
     /* Indicate that the selected function is completed.*/
     /*  */

   /* load jcl work records from map fields*/

  set SY06W09 empty;
  SY06W09.SY06W-PARM-FILE-DD = "//P0010.F1311IN DD  DSN="; /* DD override Line*/
  SY06W09.SY06W-PARM-FILE-NM = SY06M010.SY06M-PARM-FILE-NM; /* Parm file Name*/
  SY06W-TABLE-INDEX = 31; /* Initialize table index*/
  while (SY06W-TABLE-INDEX > 0
   && SY06W09.SY06W-PARM-FILE-CHAR[SY06W-TABLE-INDEX] == " ")
    SY06W-TABLE-INDEX = SY06W-TABLE-INDEX - 1;
  end
  SY06W-TABLE-INDEX = SY06W-TABLE-INDEX + 1;
  SY06W09.SY06W-PARM-FILE-CHAR[SY06W-TABLE-INDEX] = ",";

  TA6REC.TA6INDEX = 1; /* Initialize parm index*/
  SY06W-TABLE-INDEX = 1; /* Initialize JCL table index*/
  SY06W01.SY06W-JOB-SUBMITTED-FLAG = "N";

  while (SY06W01.SY06W-TABLE-INDEX > 0)

    SY06W99.SY06W-JCL = SY06T04.SY06WJCL[SY06W-TABLE-INDEX]; /* JCL statement*/

    SY06W00.SY06W-RUN-TYPE = SY06T04.SY06T-STATEMENT-TYPE[SY06W-TABLE-INDEX]; /* Statement type*/

    if (SY06W00.SY06W-RUN-TYPE == "P") /* Parameters statement*/

      TA6REC.TARJCL[TA6INDEX] = SY06W09.SY06W-JCL; /* parameter file rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

    end

    if (SY06W00.SY06W-RUN-TYPE == "E") /* EXEC statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "E";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == " ") /* non parm, jcl, or proc*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = " ";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == "J") /* JOB statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "J";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W99.SY06W-JCL == "/*EOF") /* End of file*/
      SY06W01.SY06W-TABLE-INDEX = 0;
    else
      SY06W01.SY06W-TABLE-INDEX = SY06W01.SY06W-TABLE-INDEX + 1;
    end
  end

end // end SY06S-PROD3-JCL

// Sub JCL for bookings request
Function SY06S-SUBMIT-JCL()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* One of three PROCS will be submitted;*/
   /* 1.  SY1317  - Produces both a UPC flat file (diskette) (SY06T03)*/
   /* SY06S-PROD1-JCL*/
   /* 2.  SY1316  - Produces UPC report only (SY06T02)*/
   /* SY06S-PROD2-JCL*/
   /* 3.  SY1311  - Produces both a UPC flat file (diskette) (SY06T04)*/
   /* SY06S-PROD3-JCL*/
   /* 4.  SY1316T - Produces UPC report and file in test (SY06T01)*/
   /* SY06S-TEST-JCL*/
   /* ------------------------------------------------------------*/

  set TA6REC empty;
  if (SY06M001.SY06M-SELECTION == 2) /* parameter file jcl*/
    SY06S-PROD3-JCL();
  else
    if (TA3REC.TA3RGNID == "03" /* load ta6rec table with prod jcl*/
     && SY06M001.SY06M-DISKETTE-IND == "Y")
                                   /* that produces a file for a diskette*/
      SY06S-PROD1-JCL();
    else
      if (TA3REC.TA3RGNID == "03" /* load ta6rec table with prod jcl,*/
       && SY06M001.SY06M-REPORT-IND == "Y")
                                   /* that produces a report*/
        SY06S-PROD2-JCL();
      else
        SY06S-TEST-JCL(); /* load ta6rec table with test jcl*/
      end
    end
  end

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* SEND messege to CICS terminal*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(213); /* Indicate job was submitted*/
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    converseLib.validationFailed(214); /* Indicate user cancelled*/
  else
    converseLib.validationFailed(176); /* Indicate system error*/
  end

  exit stack; /* Exit to display map*/



end // end SY06S-SUBMIT-JCL

// Sub test jcl for bookings rqst
Function SY06S-TEST-JCL()
     /*  */
     /* Format the batch program parameters.*/
     /* Submit the job control through the internal reader using TA06*/
     /* Indicate that the selected function is completed.*/
     /*  */

   /* load jcl work records from map fields*/

  SY06S-OPT1-LOAD();

  SY06W-TABLE-INDEX = 1; /* Initialize JCL table index*/
  SY06W01.SY06W-JOB-SUBMITTED-FLAG = "N";
  TA6REC.TA6INDEX = 1; /* Initialize parm index*/

  while (SY06W01.SY06W-TABLE-INDEX > 0)

    SY06W99.SY06W-JCL = SY06T01.SY06WJCL[SY06W-TABLE-INDEX]; /* JCL statement*/

    SY06W00.SY06W-RUN-TYPE = SY06T01.SY06T-STATEMENT-TYPE[SY06W-TABLE-INDEX]; /* Statement type*/

    if (SY06W00.SY06W-RUN-TYPE == "P") /* Parameters statement*/

      TA6REC.TARJCL[TA6INDEX] = SY06W04.SY06W-JCL; /* mailing instruction 1st rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W05.SY06W-JCL; /* mailing instruction 2ND rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W06.SY06W-JCL; /* mailing instruction 3RD rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W07.SY06W-JCL; /* mailing instruction 4th rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W08.SY06W-JCL; /* mailing instruction 5th rec*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

      TA6REC.TARJCL[TA6INDEX] = SY06W03.SY06W-JCL; /* booking request information*/
      TA6REC.TARTYPE[TA6INDEX] = "P";
      TA6INDEX = TA6INDEX + 1;

    end

    if (SY06W00.SY06W-RUN-TYPE == "E") /* EXEC statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "E";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == " ") /* non parm, jcl, or proc*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = " ";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W00.SY06W-RUN-TYPE == "J") /* JOB statement*/
      TA6REC.TARJCL[TA6INDEX] = SY06W99.SY06W-JCL;
      TA6REC.TARTYPE[TA6INDEX] = "J";
      TA6INDEX = TA6INDEX + 1;
    end

    if (SY06W99.SY06W-JCL == "/*EOF") /* End of file*/
      SY06W01.SY06W-TABLE-INDEX = 0;
    else
      SY06W01.SY06W-TABLE-INDEX = SY06W01.SY06W-TABLE-INDEX + 1;
    end
  end

end // end SY06S-TEST-JCL

//*** RECORD=SY06W00 ****
// JCL variable storage for PK0Y - PICKING On-Demand Cust Lbl
// ***********************
Record SY06W00 type basicRecord
  10 SY06W-PGM-NAME SY06W-PGM-NAME ; 
  10 SY06W-PROC-NAME SY06W-PROC-NAME ; 
  10 SY06WSYS SY06WSYS ; 
  10 SY06W-RUN-TYPE SY06W-RUN-TYPE ; 
  10 SY06MGEN SY06MGEN ; 
  10 SY06MCPY SY06MCPY ; 
  10 SY06W-FORMS-CD SY06W-FORMS-CD ; 
  10 SY06WCTP SY06WCTP ; 
  10 SY06WPRM SY06WPRM ; 
  10 SY06WJCL SY06WJCL ; 
end // end SY06W00

//*** RECORD=SY06W01 ****
//     Working Storage Record for OS0T.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   12-12-94   gcalki   initial creation
//   06-09-99   njana    Add the century field to the
//                       working storage SY06W-WK-YYMMDD
// ***********************
Record SY06W01 type basicRecord
  10 SY06W-ERR-FL SY06W-ERR-FL ; 
  10 SY06W-TABLE-INDEX SY06W-TABLE-INDEX ; 
  10 SY06W-JOB-SUBMITTED-FLAG SY06W-JOB-SUBMITTED-FLAG ; 
  10 SY06W-CUST-NBR-ENTERED SY06W-CUST-NBR-ENTERED ; 
  10 SY06W-YYMMDD SY06W-YYMMDD ; 
    15 SY06W-YY SY06W-YY ; 
    15 SY06W-MM SY06W-MM ; 
    15 SY06W-DD SY06W-DD ; 
  10 SY06W-WK-YYMMDD SY06W-WK-YYMMDD ; 
    15 SY06W-WK-CC SY06W-WK-CC ; 
    15 SY06W-WK-YY SY06W-WK-YY ; 
    15 SY06W-WK-MM SY06W-WK-MM ; 
    15 SY06W-WK-DD SY06W-WK-DD ; 
  10 SY06W-DT1 SY06W-DT1 ; 
    15 SY06W-CC-DT1 SY06W-CC-DT1 ; 
    15 SY06W-YY-DT1 SY06W-YY-DT1 ; 
    15 SY06W-MM-DT1 SY06W-MM-DT1 ; 
    15 SY06W-DD-DT1 SY06W-DD-DT1 ; 
  10 SY06W-DT2 SY06W-DT2 ; 
    15 SY06W-CC-DT2 SY06W-CC-DT2 ; 
    15 SY06W-YY-DT2 SY06W-YY-DT2 ; 
    15 SY06W-MM-DT2 SY06W-MM-DT2 ; 
    15 SY06W-DD-DT2 SY06W-DD-DT2 ; 
  10 SY06W-TIME SY06W-TIME ; 
    15 SY06W-TIME-HH SY06W-TIME-HH ; 
    15 SY06W-FILLER2 SY06W-FILLER2 ; 
    15 SY06W-TIME-MM SY06W-TIME-MM ; 
    15 SY06W-FILLER3 SY06W-FILLER3 ; 
    15 SY06W-TIME-SS SY06W-TIME-SS ; 
  10 SY06W-DB2-DATE SY06W-DB2-DATE ; 
    15 SY06W-DB2-DATE-CC SY06W-DB2-DATE-CC ; 
    15 SY06W-DB2-DATE-YY SY06W-DB2-DATE-YY ; 
    15 SY06W-DB2-DATE-MM SY06W-DB2-DATE-MM ; 
    15 SY06W-DB2-DATE-DD SY06W-DB2-DATE-DD ; 
  10 SY06W-DB2-TIME SY06W-DB2-TIME ; 
    15 SY06W-DB2-TIME-HH SY06W-DB2-TIME-HH ; 
    15 SY06W-DB2-TIME-MM SY06W-DB2-TIME-MM ; 
  10 SY06W-VALIDATED SY06W-VALIDATED ; 
  10 SY06W-UPDATED SY06W-UPDATED ; 
end // end SY06W01

//*** RECORD=SY06W02 ****
//     Working Storage Record for OS0t used to pass IO data
//     to the OS subprogram OS1040.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   12-09-94  gcalki  initial creation
// ***********************
Record SY06W02 type basicRecord
  10 OS0TW-IO-TASK OS0TW-IO-TASK ; 
  10 OS0TW-IO-MAX OS0TW-IO-MAX ; 
  10 OS0TW-IO-COUNT1 OS0TW-IO-COUNT1 ; 
  10 OS0TW-IO-COUNT2 OS0TW-IO-COUNT2 ; 
  10 OS0TW-IO-IND1 OS0TW-IO-IND1 ; 
  10 OS0TW-IO-IND2 OS0TW-IO-IND2 ; 
  10 OS0TW-IO-IND3 OS0TW-IO-IND3 ; 
end // end SY06W02

//*** RECORD=SY06W03 ****
//     Working Storage Record for OS0t used to pass IO data
//     to the OS subprogram OS1040.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   12-09-94  gcalki  initial creation
// ***********************
Record SY06W03 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-REQUEST-TYPE SY06W-REQUEST-TYPE ; 
    15 SY06W-KUCCOID SY06W-KUCCOID ; 
    15 SY06M-START-DT SY06M-START-DT ; 
    15 SY06M-END-DT SY06M-END-DT ; 
    15 XGPCD XGPCD [2] ; 
    15 * char(49) ; 
end // end SY06W03

//*** RECORD=SY06W04 ****
//     Working Storage Record for SY06 used to pass IO data
//     to a batch program.  This record contains mailing
//     instructions.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   03-20-95  pstroe  initial creation
// ***********************
Record SY06W04 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-REQUEST-TYPE SY06W-REQUEST-TYPE ; 
    15 SY06M-REQUESTOR SY06M-REQUESTOR ; 
    15 XXXPHNA XXXPHNA ; 
    15 XXXPHNP XXXPHNP ; 
    15 XXXPHNN XXXPHNN ; 
    15 SY06M-REPORT-IND SY06M-REPORT-IND ; 
    15 SY06M-DISKETTE-IND SY06M-DISKETTE-IND ; 
    15 KUCCONM KUCCONM ; 
    15 * char(15) ; 
end // end SY06W04

//*** RECORD=SY06W05 ****
//     Working Storage Record for SY06 used to pass IO data
//     to a batch program.  This record contains mailing
//     instructions.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   03-20-95  pstroe  initial creation
// ***********************
Record SY06W05 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-REQUEST-TYPE SY06W-REQUEST-TYPE ; 
    15 SY06M-CONTACT-NM SY06M-CONTACT-NM ; 
    15 XXX-ADDR1 XXX-ADDR1 ; 
    15 * char(10) ; 
end // end SY06W05

//*** RECORD=SY06W06 ****
//     Working Storage Record for SY06 used to pass IO data
//     to a batch program.  This record contains mailing
//     instructions.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   03-20-95  pstroe  initial creation
// ***********************
Record SY06W06 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-REQUEST-TYPE SY06W-REQUEST-TYPE ; 
    15 XXX-ADDR2 XXX-ADDR2 ; 
    15 XXX-ADDR3 XXX-ADDR3 ; 
    15 * char(2) ; 
end // end SY06W06

//*** RECORD=SY06W07 ****
//     Working Storage Record for SY06 used to pass IO data
//     to a batch program.  This record contains mailing
//     instructions.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   03-20-95  pstroe  initial creation
// ***********************
Record SY06W07 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-REQUEST-TYPE SY06W-REQUEST-TYPE ; 
    15 XXXCITY XXXCITY ; 
    15 XSTCD XSTCD ; 
    15 XXXZIP XXXZIP ; 
    15 * char(41) ; 
end // end SY06W07

//*** RECORD=SY06W08 ****
//     Working Storage Record for SY06 used to pass IO data
//     to a batch program.  This record contains mailing
//     instructions.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   03-20-95  pstroe  initial creation
// ***********************
Record SY06W08 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-REQUEST-TYPE SY06W-REQUEST-TYPE ; 
    15 XXXPHNA XXXPHNA ; 
    15 XXXPHNP XXXPHNP ; 
    15 XXXPHNN XXXPHNN ; 
    15 SY06M-COMMENT SY06M-COMMENT ; 
    15 * char(4) ; 
end // end SY06W08

//*** RECORD=SY06W09 ****
//     Working Storage Record for SY06 used to pass IO data
//     to a batch program.  This record contains parameter
//     file name (normally 'TEST.PARMLIB(SY131110)').
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   09-26-96  MHALST  initial creation
// ***********************
Record SY06W09 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
    15 SY06W-PARM-FILE-DD char(24) ; 
    15 SY06W-PARM-FILE-NM SY06W-PARM-FILE-NM ; 
      20 SY06W-PARM-FILE-CHAR SY06W-PARM-FILE-CHAR [31] ; 
    15 * char(25) ; 
end // end SY06W09

//*** RECORD=SY06W99 ****
// System internal reader queue (INTR) record definition.
// ***********************
Record SY06W99 type basicRecord
  10 SY06W-JCL SY06W-JCL ; 
end // end SY06W99

// special shipping comment
DataItem SY06M-COMMENT char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// contact name
DataItem SY06M-CONTACT-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// disk indicator
DataItem SY06M-DISKETTE-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY06M-END-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, dateFormat = "MM-dd-yy", inputRequired = no
}
end

// report indicator
DataItem SY06M-REPORT-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// user requesting report/disk
DataItem SY06M-REQUESTOR char(21)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY06M-START-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, dateFormat = "MM-dd-yy", inputRequired = no
}
end

// Number of copies to print
DataItem SY06MCPY num(1)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Print from generation number
DataItem SY06MGEN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current yy
DataItem SY06W-CC-DT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current yy
DataItem SY06W-CC-DT2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SY06W-CUST-NBR-ENTERED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current date ccyymmdd
DataItem SY06W-DB2-DATE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current cc
DataItem SY06W-DB2-DATE-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dd
DataItem SY06W-DB2-DATE-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem SY06W-DB2-DATE-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current yy
DataItem SY06W-DB2-DATE-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current time hhmm
DataItem SY06W-DB2-TIME num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current hh
DataItem SY06W-DB2-TIME-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem SY06W-DB2-TIME-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dd
DataItem SY06W-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dd
DataItem SY06W-DD-DT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dd
DataItem SY06W-DD-DT2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date mm-dd-yy
DataItem SY06W-DT1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current date mm-dd-yy
DataItem SY06W-DT2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage error flag
DataItem SY06W-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler ':'
DataItem SY06W-FILLER2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler ':'
DataItem SY06W-FILLER3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Forms code.
DataItem SY06W-FORMS-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY06W-JCL char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY06W-JOB-SUBMITTED-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_CO_ID
DataItem SY06W-KUCCOID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// current mm
DataItem SY06W-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem SY06W-MM-DT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem SY06W-MM-DT2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Parm File Name in Chars
DataItem SY06W-PARM-FILE-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Parameter File Name
DataItem SY06W-PARM-FILE-NM char(31)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// application name
DataItem SY06W-PGM-NAME char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EXEC procedure name
DataItem SY06W-PROC-NAME char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// io mod option selector
DataItem SY06W-REQUEST-TYPE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Type of picking run
DataItem SY06W-RUN-TYPE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY06W-TABLE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current time hh:mm:ss
DataItem SY06W-TIME char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current hh
DataItem SY06W-TIME-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem SY06W-TIME-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current ss
DataItem SY06W-TIME-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// updated order flag
DataItem SY06W-UPDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// validated order flag
DataItem SY06W-VALIDATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SY06W-WK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem SY06W-WK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current yy
DataItem SY06W-WK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dd
DataItem SY06W-WK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date mm-dd-yy
DataItem SY06W-WK-YYMMDD char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current yy
DataItem SY06W-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current yy
DataItem SY06W-YY-DT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current yy
DataItem SY06W-YY-DT2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date mm-dd-yy
DataItem SY06W-YYMMDD char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Case Type (full/repack)
DataItem SY06WCTP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parmlib (member name) variable
DataItem SY06WPRM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl - program id
DataItem SY06WSYS char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

