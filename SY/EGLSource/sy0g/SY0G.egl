package sy0g;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import mn.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ty.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY0G ****
// this application will add prices to the product price table.
// it will also update the life cycle data on the color/dim
// table for a particular style. the general flow of processes
// is as follows:
//    sy0g010(execute)-general initialization
//    sy0g020(converse)-edit upper half of screen
//    sy0g030(converse)-edit lower half of screen
//    sy0g040(execute)-obtain table data for screen display
//    sy0g050)execute)-perform update for each detail line.
// 
// ************************************************************
// 
// maintenance:
//  project
//  number       who          when                why
// _______   __________    __________     ____________________
//            j.brady       06-13-86      created application
//            m.buhite      05-19-87      sy0gs24: increased
//               length of syarec.syabfln & syarec.syaftln.
//            m.buhite      11-20-87      sy0gs24: increased
//               length of syarec.syabfln & syarec.syaftln.
//            m.buhite      03-18-88      sy0gs24: increased
//               length of syarec.syabfln & syarec.syaftln.
//  p090      m.buhite      01-13-89      sy0gs24: increased
//               length of syarec.syabfln & syarec.syaftln.
//            VCowan        04-17-89      added XSSEGTR logic
//  -spl-     jwood         04-17-89      added noncsp  logic
//            MHALST  05-16-89  Audit changes for VCOLOR01.
//            MHALST  09-25-89  Add code for NIL price types
//                              and default eff. date on add to
//                              current date if needed.
//            MHALST  10-10-89  Protect life cycle if NIL
//            MHALST  11-13-89  Data base change and add SYZTBL
//            MHALST  10-08-90  DB2 change and SYAREC
//            MHALST  02-11-91  DB2 change to SY5REC
//  PF174     MHALST  09-16-91  Allow NIL to enter future dates
//  EAO005    MHALST  03-11-93  Add logic for EAO
//            MHALST  04-26-93  Add S & E to Status Ind.
//            MBUHIT  09-14-93  Modified EAO price-type logic.
//            MBUHIT  09-21-93  Modified EAO price-type logic.
//  SY0211    MBUHIT  04-20-94  Add marketing region logic.
//  SY0211    MHALST  08-23-94  Supress upd to region if inact
//            MHALST  12-30-94  Correct size of amount W01 rec
//            MHALST  09-13-95  And XPSY008 & XPSY009
//            NGANGO  11-03-97  Y2K MODIFICATIONS .
//            Changed W.S. SY0GW01, and Stmt. Group SY0GS04 and
//            Process SY0G050 .
//            JNARAS  02-25-99 Changed the statment group
//                             SY0GS04 to accept -1 AND +1
//                             for the SY0GMRND field.
//            JNARAS  10-22-99 Changed the statment group
//                             SY0GS04 to accept 1 year less
//                             than the current date for curren
//                             -cy code 'EUR' and introduced
//                             the field SY0GWDT1 in SY0GW01.
//                             Changed SY0GS03 to use (R roundi
//                             ng function when rounding factor
//                             is not given.
//  SYEURO    MHALST  02-07-00 Allow program to maintain EUR
//                             row at same time as local row.
// ************************************************************
// 
// io modules used       table view name
// _______________       _______________
//     io0120            dprod.vstyle01
//     io0130            dprod.vcolor01
//     io6640            dprod.vsyreg01
//     io0380            dprod.vprice01
//     io0370            dprod.vprich01
//     io0530            dprod.vsyaud01
//     io0520            dprod.vsytag01
// 
// 
// ************************************************************
// *********************
Program SY0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  SY0GW01 SY0GW01; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY5REC SY5REC; // record
  SY7REC SY7REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VSYREG02 VSYREG02; // record
  VZFC0001 VZFC0001; // record
  WSY1550 WSY1550; // record
  XGPREC XGPREC; // record
  XLCREC XLCREC; // record
  XP0HW01 XP0HW01; // record
  XP0HW02 XP0HW02; // record
  XPYREC XPYREC; // record
  XUMREC XUMREC; // record
  XX0XW02 XX0XW02; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use SYRGTBL {deleteAfterUse = yes}; // table
  use SYEUTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XPYTBL {deleteAfterUse = yes}; // table
  use XDRTBL {deleteAfterUse = yes}; // table
  use SY0GM.SY0GM001,  // forms
      SY0GM.XP0HM001, 
      SY0GM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0G010: SY0G010();


     /* *****************************************************/
     /* *     this starts the flow for process sy0g010     **/
     /* *****************************************************/


    goto SY0G020;


     /* *****************************************************/
     /* *       this ends flow for process sy0g010         **/
     /* *****************************************************/
    SY0G020: SY0G020();
     /* *****************************************************/
     /* *      this starts the flow of process sy0g020     **/
     /* *****************************************************/


       /* let's check for an error first, then have a look at*/
       /* those  pfkeys. if everything is ok let's move on to*/
       /* the next process.*/


    if (converseVar.validationMsgNum != 0)
      goto SY0G020;
    else
      if (converseVar.eventKey is pf12
       || converseVar.eventKey is enter)
        goto SY0G030;
      else
        goto SY0G010;
      end
    end
     /* *****************************************************/
     /* *      this ends the flow of process sy0g020       **/
     /* *****************************************************/
    SY0G030: SY0G030();
     /* *****************************************************/
     /* *     this starts the flow of process sy0g030      **/
     /* *****************************************************/


    if (converseVar.validationMsgNum != 0
     || converseVar.eventKey is pf12)
      SY0GWIDX = 1;
      while (SY0GWIDX <= 9)
        if (SY0GM001.SY0GM1PR[SY0GWIDX] is modified)
          set SY0GM001.SY0GM1PR[SY0GWIDX] modified;
        end
        if (SY0GM001.SY0GM2PR[SY0GWIDX] is modified)
          set SY0GM001.SY0GM2PR[SY0GWIDX] modified;
        end
        if (SY0GM001.SY0GMRET[SY0GWIDX] is modified)
          set SY0GM001.SY0GMRET[SY0GWIDX] modified;
        end
        SY0GWIDX = SY0GWIDX + 1;
      end
      if (converseVar.validationMsgNum != 0)
        goto SY0G030;
      else
        goto SY0G040;
      end
    else
      if (converseVar.eventKey is enter)
        goto SY0G040;
      else
        goto SY0G010;
      end
    end


     /* *****************************************************/
     /* *     this ends the flow of process sy0g030        **/
     /* *****************************************************/
    SY0G040: SY0G040();
     /* *****************************************************/
     /* *      this starts the flow of process sy0g040     **/
     /* *****************************************************/


       /* if there are any errors let's show them,if not*/
       /* and pf12 was not requested let's go ahead and update*/

    if (converseVar.validationMsgNum != 0
     || converseVar.eventKey is pf12)
      goto SY0G030;
    else
      goto SY0G050;
    end


     /* *****************************************************/
     /* *      this ends the flow of process sy0g040       **/
     /* *****************************************************/
    SY0G050: SY0G050();
     /* *****************************************************/
     /* *      this starts the flow of process sy0g050     **/
     /* *****************************************************/


       /* we're all done!!!*/
       /* lets go back to sy0g020 and see if they want to have*/
       /* some more fun.*/


    if (converseVar.validationMsgNum == 0)
      converseLib.validationFailed(11);
      goto SY0G030;
    else
      set SY0GM001.XGPCD protect;
      set SY0GM001.XPYCD protect;
      set SY0GM001.XLCCD protect;
      goto SY0G030;
    end


     /* *****************************************************/
     /* *      this ends the flow of process sy0g050       **/
     /* *****************************************************/
  end // end main
end // end SY0G

Function SY0G010()


   /* *******************************************************/
   /* *  processing in this option includes:               **/
   /* *    1) test security clearance for the application  **/
   /* *    2) set up the map screen                        **/
   /* *******************************************************/


  XSENTRY(); /* security check*/

  XSSEGTR(); /* set segemented transaction id*/

  set SY0GM001 initial;
  set SY0GW01 empty;
  set SY1REC empty;
  set SY2REC empty;
  set VSYREG02 empty;
  set SY5REC empty;
  set SY7REC empty;
  set SY9REC empty;
  set SYAREC empty;
  set SYWREC empty;
  set VZFC0001 empty;
  set ZFCWREC empty;
  set XX0XW02 empty;

  SY0GM001.SYMCURDT = VGVar.currentShortGregorianDate;
  SY0GM001.SYMRVNBR = "00";
  SY0GM001.SYMTTLNM = "PRODUCT PRICE BY STYLE - ADD";

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGEN = VGVar.currentShortGregorianDate;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SY0GM001.SY5PCEDT = TA2REC.TA2GRGAN;
    SY0GW01.SY0GWDTE = TA2REC.TA2GRGGN;
  else
    converseLib.validationFailed(42); /* internal date error - contact systems*/
                                   /* dvlpmnt*/
    set SY0GM001.SY5PCEDT cursor, bold;
    exit stack;
  end

   /* Now, find out what region user is and set-up table of*/
   /* valid country/currenties the user can enter.*/
  set WSY1550 empty;
  XPSY008(); /* Get users region*/
  if (SYWREC.SYW-REG-TBL-SIZE > 0)
    if (SYWREC.SYW-ALL-REGIONS-FL == "Y")
      SY0GM001.XCTCD = "USA";
      SY0GM001.ZFC-CRCY-CD = "USD";
    else
      XPSY009(); /* Get countries for region*/
      if (WSY1550-RETURN-CODE == 00
       && WSY1550-TABLE-SIZE == 1)
        SY0GM001.XCTCD = WSY1550.XCT-CTRY-CD[1];
        SY0GM001.ZFC-CRCY-CD = WSY1550.ZFC-CRCY-CD[1];
      end
    end
  else /* No region for user, tell them*/
    converseLib.validationFailed(124); /* User Id not authorized*/
  end
  if (SY0GM001.XCTCD != " ")
    if (SY0GM001.XCTCD in XCTTBL.XCTCD)
      SY0GM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
    SY0GS-GET-ZFC();
  else
    set SY0GM001.XCTCD cursor;
  end

  SY0GM001.XGPCD = COMMAREA.XGPCD;
  if (SY0GM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized to use this gpc*/
      set SY0GM001.XGPCD cursor, bold;
      exit stack;
    else
      if (SY0GM001.XGPCD in XGPTBL.XGPCD)
        SY0GM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0GM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  else
    if (SY0GM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized to use this gpc*/
        set SY0GM001.XGPCD cursor, bold;
        exit stack;
      else
        if (SY0GM001.XGPCD in XGPTBL.XGPCD)
          SY0GM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
        end
        if (sysVar.arrayIndex == 0)
          converseLib.validationFailed(31); /* invalid gpc code entered*/
          set SY0GM001.XGPCD cursor, bold;
          exit stack;
        end
      end
    else
      if (SY0GM001.XGPCD in XGPTBL.XGPCD)
        SY0GM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
      end
      if (sysVar.arrayIndex == 0)
        converseLib.validationFailed(31); /* invalid gpc code entered*/
        set SY0GM001.XGPCD cursor, bold;
        exit stack;
      end
    end
  end

end // end SY0G010

// price by style add
Function SY0G020()



   /* ****************************************************/
   /* *  processing in the 'before' stage includes:     **/
   /* *    1) move  process name to the map area        **/
   /* *    2) protect map areas                         **/
   /* ****************************************************/


  SY0GM001.SYMPRONM = "SY0G020";
  SY0GM001.SYMRVNBR = "03"; /* program revision number!!!!!*/
  SY0GWCT1 = 1;
  while (SY0GWCT1 <= 9)
    set SY0GM001.SY1STNBR[SY0GWCT1] protect;
    set SY0GM001.SY5PSIND[SY0GWCT1] protect;
    set SY0GM001.SY0GMRET[SY0GWCT1] protect;
    set SY0GM001.SY0GM1PR[SY0GWCT1] protect;
    set SY0GM001.SY0GM2PR[SY0GWCT1] protect;
    SY0GWCT1 = SY0GWCT1 + 1;
  end

  if (COMMAREA.XDVCD == "02") /* NIL user*/
    set SY0GM001.XLCCD skip; /* NIL cannot change life cycle*/
  end


  converseVar.segmentedMode = 1;


  converse SY0GM001 ;


   /* ****************************************************/
   /* *  processing in the 'after' stage includes:      **/
   /* *    1) check for fast path option                **/
   /* *    2) check pfkeys                              **/
   /* *    3) validate upper half of screen             **/
   /* ****************************************************/


  SY0GS01(); /* check for fast path*/

  SY0GS02(); /* check pfkeys*/

  if (converseVar.eventKey is pa2
   || converseVar.validationMsgNum != 0)
    exit stack;
  else
    SY0GM001.SYMSCMSG = " ";
    set SY0GM001.XGPCD initialAttributes;
    set SY0GM001.XCTCD initialAttributes;
    set SY0GM001.ZFC-CRCY-CD initialAttributes;
    set SY0GM001.XPYCD initialAttributes;
    set SY0GM001.XLCCD initialAttributes;
    set SY0GM001.SY5PCEDT initialAttributes;
    set SY0GM001.SY0GMCAL initialAttributes;
    set SY0GM001.SY0GMPCT initialAttributes;
    set SY0GM001.SY0GMCNT initialAttributes;
    set SY0GM001.SY0GMRND initialAttributes;

    SY0GWCT1 = 1;
    while (SY0GWCT1 <= 9)
      set SY0GM001.SY1STNBR[SY0GWCT1] initialAttributes;
      set SY0GM001.SY5PSIND[SY0GWCT1] initialAttributes;
      set SY0GM001.SY0GMRET[SY0GWCT1] initialAttributes;
      set SY0GM001.SY0GM1PR[SY0GWCT1] initialAttributes;
      set SY0GM001.SY0GM2PR[SY0GWCT1] initialAttributes;
      SY0GWCT1 = SY0GWCT1 + 1;
    end
    SY0GS04(); /* validate the upper half of the screen*/
  end

  if (SY0GM001.XLCCD != "  " /* is lifecycle modified?*/
   && converseVar.validationMsgNum == 0) /**/
    SY0GS-GET-XP0HM(); /* popup window to select regions*/
  end

  if (converseVar.validationMsgNum == 0)
    SY0GW01.SY0GWARN[1] = "N";
    SY0GW01.SY0GWARN[2] = "N";
    SY0GW01.SY0GWARN[3] = "N";
    SY0GW01.SY0GWARN[4] = "N";
    SY0GW01.SY0GWARN[5] = "N";
    SY0GW01.SY0GWARN[6] = "N";
    SY0GW01.SY0GWARN[7] = "N";
    SY0GW01.SY0GWARN[8] = "N";
    SY0GW01.SY0GWARN[9] = "N";
    SY0GW01.SY0GWARN[10] = "N";
  end

end // end SY0G020

// product price by style add
Function SY0G030()



   /* ************************************************************/
   /* *  processing in the 'before' stage includes:             **/
   /* *    1) protect 2nd quality price and retail price fields **/
   /* *  processing in the 'after' stage includes:              **/
   /* *    1) check for fast path exit                          **/
   /* *    2) check pfkeys                                      **/
   /* *    3) verify user input                                 **/
   /* *    4) calculate 2nd quality prices                      **/
   /* ************************************************************/

  SY0GM001.SYMPRONM = "SY0G030";
  SY0GM001.SYMRVNBR = "03"; /* program revision number!!!!!!*/

  SY0GS12(); /* convert system time*/

  SY0GWCT1 = 9;
  while (SY0GWCT1 >= 1)
    if (SY0GM001.XPYCD == "02"
     || SY0GM001.XPYCD == "41")
      set SY0GM001.SY0GM1PR[SY0GWCT1] protect;
      set SY0GM001.SY0GM2PR[SY0GWCT1] protect;
    end
    if (SY0GM001.SY0GMCAL == "Y")
      set SY0GM001.SY0GM2PR[SY0GWCT1] protect;
    end
    if (SY0GM001.XPYCD == "03"
     || SY0GM001.XPYCD == "04"
     || COMMAREA.XDVCD == "02") /* or NIL user*/
      set SY0GM001.SY0GMRET[SY0GWCT1] protect;
    end
    if (SY0GW01.SY0GWARN[SY0GWCT1] == "Y")
      set SY0GM001.SY1STNBR[SY0GWCT1] bold;
    end
    SY0GWCT1 = SY0GWCT1 - 1;
  end

  if (converseVar.validationMsgNum == 0)
    set SY0GM001.SY1STNBR[1] cursor;
  end

  converseVar.segmentedMode = 1;

  converse SY0GM001 ;
     /* let's check those pfkeys ...*/

  SY0GS01(); /* fast path check*/
  SY0GS02(); /* pfkey check*/

  if (converseVar.validationMsgNum != 0
   || converseVar.eventKey is pa2)
    exit stack;
  end

  SY0GM001.SYMSCMSG = " ";
  set SY0GM001.XGPCD initialAttributes;
  set SY0GM001.XCTCD initialAttributes;
  set SY0GM001.ZFC-CRCY-CD initialAttributes;
  set SY0GM001.XPYCD initialAttributes;
  set SY0GM001.XLCCD initialAttributes;
  set SY0GM001.SY5PCEDT initialAttributes;
  set SY0GM001.SY0GMCAL initialAttributes;
  set SY0GM001.SY0GMPCT initialAttributes;
  set SY0GM001.SY0GMCNT initialAttributes;
  set SY0GM001.SY0GMRND initialAttributes;

  SY0GWCT1 = 1;
  while (SY0GWCT1 <= 9)
    set SY0GM001.SY1STNBR[SY0GWCT1] initialAttributes;
    set SY0GM001.SY5PSIND[SY0GWCT1] initialAttributes;
    set SY0GM001.SY0GMRET[SY0GWCT1] initialAttributes;
    set SY0GM001.SY0GM1PR[SY0GWCT1] initialAttributes;
    set SY0GM001.SY0GM2PR[SY0GWCT1] initialAttributes;
    SY0GWCT1 = SY0GWCT1 + 1;
  end



     /* ok...let's verify the screen*/

  SY0GSSM(); /* see what prices have data entered in them*/

  SY0GW01.SY0GWCT1 = 9;
  while (SY0GWCT1 >= 1)
    if (SY0GM001.SY1STNBR[SY0GWCT1] != "      ")
      SY0GW01.SY0GWSW2 = "Y"; /* yes have at least 1 style*/
      if (SY0GW01.SY0GWRMD[SY0GWCT1] == "N"
       && SY0GW01.SY0GW1MD[SY0GWCT1] == "N"
       && SY0GW01.SY0GW2MD[SY0GWCT1] == "N")
        converseLib.validationFailed(40); /* required field - please enter a valid value*/
        if (SY0GM001.XPYCD == "02"
         || SY0GM001.XPYCD == "41")
          set SY0GM001.SY0GMRET[SY0GWCT1] cursor, bold;
        else
          set SY0GM001.SY0GM1PR[SY0GWCT1] cursor, bold;
        end
      end
    end
    if (SY0GM001.SY5PSIND[SY0GWCT1] == "O"
     || SY0GM001.SY5PSIND[SY0GWCT1] == "M"
     || SY0GM001.SY5PSIND[SY0GWCT1] == "S"
     || SY0GM001.SY5PSIND[SY0GWCT1] == "E"
     || SY0GM001.SY5PSIND[SY0GWCT1] == " ")
      /* NEXT SENTENCE (CODE IS OK)*/
    else
      converseLib.validationFailed(3); /* invalid code*/
      set SY0GM001.SY5PSIND[SY0GWCT1] cursor, bold;
    end
    if (SY0GM001.XGPCD == "02" /* footware and apparel cannot have*/
     || SY0GM001.XGPCD == "03") /* zero prices, so let's check for it*/
      if (SY0GW01.SY0GW1MD[SY0GWCT1] == "Y"
       && SY0GM001.SY0GM1PR[SY0GWCT1] == 0)
        converseLib.validationFailed(84); /* zero price invalid for gpc*/
        set SY0GM001.SY0GM1PR[SY0GWCT1] cursor, bold;
      end
      if (SY0GW01.SY0GW2MD[SY0GWCT1] == "Y"
       && SY0GM001.SY0GM2PR[SY0GWCT1] == 0)
        converseLib.validationFailed(84); /* zero price invalid for gpc*/
        set SY0GM001.SY0GM2PR[SY0GWCT1] cursor, bold;
      end
      if (SY0GW01.SY0GWRMD[SY0GWCT1] == "Y"
       && SY0GM001.SY0GMRET[SY0GWCT1] == 0)
        converseLib.validationFailed(84); /* zero price invalid for gpc*/
        set SY0GM001.SY0GMRET[SY0GWCT1] cursor, bold;
      end
    end
    SY0GWCT1 = SY0GWCT1 - 1;
  end

  if (SY0GW01.SY0GWSW2 != "Y") /* was a style entered?*/
    converseLib.validationFailed(32); /* please enter style number*/
    set SY0GM001.SY1STNBR[1] cursor, bold;
  else
    SY0GW01.SY0GWSW2 = "N";
  end

  SY0GS04(); /* verify upper half of screen*/

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end

   /* next is the routine to calculate 2nd quality prices*/


  if (SY0GM001.SY0GMCAL == "Y")
    SY0GWCT1 = 1;
    while (SY0GWCT1 <= 9)
      SY0GS03(); /* second quality price calculation*/
      SY0GWCT1 = SY0GWCT1 + 1;
    end
  end

end // end SY0G030

Function SY0G040()


   /* ******************************************************/
   /* *  processing in this option includes:              **/
   /* *    1) make call to style table                    **/
   /* *    2) obtain uom description from uom table       **/
   /* *    3) protect upper fields                        **/
   /* ******************************************************/


  SY0GWCT1 = 9;
  while (SY0GWCT1 >= 1)
    if (SY0GM001.SY1STNBR[SY0GWCT1] != "      ")
      SY1REC.XGPCD = SY0GM001.XGPCD;
      SY1REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
      call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == +100)
        set SY0GM001.SY1STNBR[SY0GWCT1] cursor, bold;
        converseLib.validationFailed(5); /* style record does not exist*/
      else
        if (SQLCA.VAGen_SQLCODE != 0)
          TA1REC.TA1TYPE = "DB2 ";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "SY0G   ";
          TA1REC.TA1LOCAT[1] = "S       ";
          TA1REC.TA1LOCAT[2] = "SY0G040 ";
          TA1REC.TA1LOCAT[3] = "IO0120  ";
          TA1REC.TA1LOCAT[4] = " ";
          TA1REC.TA1MAP = "SY0GM001";
          TA1REC.TA1DBASE = "SY1REC";
          TA1REC.TA1TBLVU = "DPROD.VSTYLE01";
          TA1TBLKE = SY1REC.SY1KEY;
          move SQLCA to ERRSQLCA withV60Compat;
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
          
          call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
          converseLib.validationFailed(20); /* style table error*/
          exit stack;
        else
          if (COMMAREA.XNDCD == "EAO") /* userid assigned to EAO*/
            SY0GM001.SY5PSIND[SY0GWCT1] = "O";
          end
          SY0GM001.SY1SSTNM[SY0GWCT1] = SY1REC.SY1SSTNM;
          if (SY1REC.XUMCD in XUMTBL.XUMCD)
            XUMREC.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
          end
          if (sysVar.arrayIndex == 0)
            SY0GM001.XUMDESC[SY0GWCT1] = " ";
          else
            SY0GM001.XUMDESC[SY0GWCT1] = XUMREC.XUMDESC;
          end
        end
      end
    end
    SY0GWCT1 = SY0GWCT1 - 1;
  end

  if (converseVar.eventKey is pf12)
    set SY0GM001.XGPCD protect;
    set SY0GM001.XCTCD protect;
    set SY0GM001.ZFC-CRCY-CD protect;
    set SY0GM001.XPYCD protect;
    set SY0GM001.XLCCD protect;
  end


end // end SY0G040

Function SY0G050()


   /* ************************************************************/
   /* *  processing in this option includes:                    **/
   /* *    1) loop through all nine style lines from the screen**/
   /* *       and perform the appropriate updating              **/
   /* *    2) reset map data for the next transaction           **/
   /* ************************************************************/


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  /*  */
  /* --------------- y2k out begin ---------------*/
  /*  */
  /* MOVE 19 TO TA2REC.TA2CENT;*/
  /*  */
  /* --------------- y2k out end -----------------*/
  /*  */
  /*  */
  /* --------------- y2k in begin ----------------*/
  /*  */
  SY0GW01.SY0GW-PCEDT-MMDDYY = SY0GM001.SY5PCEDT;
  if (SY0GW01.SY0GW-PCEDT-YY > 60)
    TA2REC.TA2CENT = 19;
  else
    TA2REC.TA2CENT = 20;
  end
  /*  */
  /* --------------- y2k in end  -----------------*/
  /*  */
  TA2REC.TA2GRGAN = SY0GM001.SY5PCEDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SY0GW01.SY0GWEDT = TA2REC.TA2GRGGN;
  else
    set SY0GM001.SY5PCEDT cursor, bold;
    converseLib.validationFailed(30); /* invalid date entered*/
    exit stack;
  end

  SY0GWCT1 = 1;
  while (SY0GWCT1 <= 9
   && converseVar.validationMsgNum == 0)
    if (SY0GM001.SY1STNBR[SY0GWCT1] != "      ")
      SY0GS05(); /* update loop*/
      if (SY0GW01.SY0GW-SYEUTBL-FLAG == "Y"
       && converseVar.validationMsgNum == 0)
        SY0G100(); /* Update EUR/Local*/
      end
    end
    SY0GWCT1 = SY0GWCT1 + 1;
  end

   /* NOTE: SY0GWARN(10) is being used as a flag to indicate that*/
        /* the other flags have allready been looked at. There*/
        /* are NOT 10 lines of data on the screen, only 9.*/

  if (SY0GW01.SY0GWARN[10] == "N")
    if (SY0GW01.SY0GWARN[1] == "Y"
     || SY0GW01.SY0GWARN[2] == "Y"
     || SY0GW01.SY0GWARN[3] == "Y"
     || SY0GW01.SY0GWARN[4] == "Y"
     || SY0GW01.SY0GWARN[5] == "Y"
     || SY0GW01.SY0GWARN[6] == "Y"
     || SY0GW01.SY0GWARN[7] == "Y"
     || SY0GW01.SY0GWARN[8] == "Y"
     || SY0GW01.SY0GWARN[9] == "Y")
      converseLib.validationFailed(150); /* price eff. date override*/
      SY0GW01.SY0GWARN[10] = "Y";
      SY0GWIDX = 1;
      while (SY0GWIDX <= 9)
        if (SY0GM001.SY0GM1PR[SY0GWIDX] is modified)
          set SY0GM001.SY0GM1PR[SY0GWIDX] modified;
        end
        if (SY0GM001.SY0GM2PR[SY0GWIDX] is modified)
          set SY0GM001.SY0GM2PR[SY0GWIDX] modified;
        end
        if (SY0GM001.SY0GMRET[SY0GWIDX] is modified)
          set SY0GM001.SY0GMRET[SY0GWIDX] modified;
        end
        SY0GWIDX = SY0GWIDX + 1;
      end
    end
  end

  if (converseVar.validationMsgNum == 0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    SY0GS06(); /* reset bottom half of screen*/
    SY0GW01.SY0GWARN[1] = "N";
    SY0GW01.SY0GWARN[2] = "N";
    SY0GW01.SY0GWARN[3] = "N";
    SY0GW01.SY0GWARN[4] = "N";
    SY0GW01.SY0GWARN[5] = "N";
    SY0GW01.SY0GWARN[6] = "N";
    SY0GW01.SY0GWARN[7] = "N";
    SY0GW01.SY0GWARN[8] = "N";
    SY0GW01.SY0GWARN[9] = "N";
    SY0GW01.SY0GWARN[10] = "N";
    SY0GM001.SYMSCMSG = " ";
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
  end


end // end SY0G050

// Check for EUR/Local upd
Function SY0G100()

   /* **********************************************************/
   /* *  this process will update the EUR/Local matching      **/
   /* *  price row.                                           **/
   /* **********************************************************/

  set SY5REC empty;
  if (SY0GW01.SY0GWRMD[SY0GWCT1] == "Y")
    SY5REC.XGPCD = SY0GM001.XGPCD;
    SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY5REC.SY5SZID = 0;
    if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == "02" /* User is EAO*/
     && SY0GM001.XPYCD == "40")                
      SY5REC.XPYCD = "41"; /* price type 42 - EAO retail*/
    else
      SY5REC.XPYCD = "02"; /* price type 2 - retail*/
    end
    SY5REC.XQACD = "01"; /* first quality*/
    SY5REC.XCT-CTRY-CD = SY0GM001.XCTCD;
    if (SYEUTBL.SY-PMRY-CRCY-IND[SYWINDEX] == "L")
      SY5REC.ZFC-CRCY-CD = "EUR";
      if (SY0GM001.SY0GMRET[SY0GWCT1] == 0.01
       || (SY0GM001.SY0GMRET[SY0GWCT1] == 1.00
       && SY0GM001.ZFC-CRCY-CD == "ITL"))
        SY0GW01.SY0GWPRC = 0.01;
      else
        SY0GW01.SY0GWPRC = mathLib.round(SY0GM001.SY0GMRET[SY0GWCT1] /         SYEUTBL.TY-EURO-RATE-AMT[SYWINDEX], -mathLib.decimals(SY0GW01.SY0GWPRC));
      end
    else
      SY5REC.ZFC-CRCY-CD = SYEUTBL.ZFC-CRCY-CD[SYWINDEX];
      if (SY0GM001.SY0GMRET[SY0GWCT1] == 0.01)
        if (SY5REC.ZFC-CRCY-CD == "ITL")
          SY0GW01.SY0GWPRC = 1.00;
        else
          SY0GW01.SY0GWPRC = SY0GM001.SY0GMRET[SY0GWCT1];
        end
      else
        SY0GW01.SY0GWPRC = mathLib.round(SY0GM001.SY0GMRET[SY0GWCT1] *         SYEUTBL.TY-EURO-RATE-AMT[SYWINDEX], -mathLib.decimals(SY0GW01.SY0GWPRC));
      end
    end
    SY5REC.SY5HSTSW = "N";
    SY0GS09(); /* update size price table*/
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  set SY5REC empty;
  if (SY0GW01.SY0GW1MD[SY0GWCT1] == "Y")
    SY5REC.XGPCD = SY0GM001.XGPCD;
    SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY5REC.SY5SZID = 0;
    SY5REC.XPYCD = SY0GM001.XPYCD; /* entered price type*/
    SY5REC.XQACD = "01"; /* first quality*/
    SY5REC.XCT-CTRY-CD = SY0GM001.XCTCD;
    if (SYEUTBL.SY-PMRY-CRCY-IND[SYWINDEX] == "L")
      SY5REC.ZFC-CRCY-CD = "EUR";
      if (SY0GM001.SY0GM1PR[SY0GWCT1] == 0.01
       || (SY0GM001.SY0GM1PR[SY0GWCT1] == 1.00
       && SY0GM001.ZFC-CRCY-CD == "ITL"))
        SY0GW01.SY0GWPRC = 0.01;
      else
        SY0GW01.SY0GWPRC = mathLib.round(SY0GM001.SY0GM1PR[SY0GWCT1] /         SYEUTBL.TY-EURO-RATE-AMT[SYWINDEX], -mathLib.decimals(SY0GW01.SY0GWPRC));
      end
    else
      SY5REC.ZFC-CRCY-CD = SYEUTBL.ZFC-CRCY-CD[SYWINDEX];
      if (SY0GM001.SY0GM1PR[SY0GWCT1] == 0.01)
        if (SY5REC.ZFC-CRCY-CD == "ITL")
          SY0GW01.SY0GWPRC = 1.00;
        else
          SY0GW01.SY0GWPRC = SY0GM001.SY0GM1PR[SY0GWCT1];
        end
      else
        SY0GW01.SY0GWPRC = mathLib.round(SY0GM001.SY0GM1PR[SY0GWCT1] *         SYEUTBL.TY-EURO-RATE-AMT[SYWINDEX], -mathLib.decimals(SY0GW01.SY0GWPRC));
      end
    end
    SY5REC.SY5HSTSW = "N";
    SY0GS09(); /* update size price table*/
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  set SY5REC empty;
  if (SY0GW01.SY0GW2MD[SY0GWCT1] == "Y")
    SY5REC.XGPCD = SY0GM001.XGPCD;
    SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY5REC.SY5SZID = 0;
    SY5REC.XPYCD = SY0GM001.XPYCD; /* entered price type*/
    SY5REC.XQACD = "02"; /* second quality*/
    SY5REC.XCT-CTRY-CD = SY0GM001.XCTCD;
    if (SYEUTBL.SY-PMRY-CRCY-IND[SYWINDEX] == "L")
      SY5REC.ZFC-CRCY-CD = "EUR";
      if (SY0GM001.SY0GM2PR[SY0GWCT1] == 0.01
       || (SY0GM001.SY0GM2PR[SY0GWCT1] == 1.00
       && SY0GM001.ZFC-CRCY-CD == "ITL"))
        SY0GW01.SY0GWPRC = 0.01;
      else
        SY0GW01.SY0GWPRC = mathLib.round(SY0GM001.SY0GM2PR[SY0GWCT1] /         SYEUTBL.TY-EURO-RATE-AMT[SYWINDEX], -mathLib.decimals(SY0GW01.SY0GWPRC));
      end
    else
      SY5REC.ZFC-CRCY-CD = SYEUTBL.ZFC-CRCY-CD[SYWINDEX];
      if (SY0GM001.SY0GM2PR[SY0GWCT1] == 0.01)
        if (SY5REC.ZFC-CRCY-CD == "ITL")
          SY0GW01.SY0GWPRC = 1.00;
        else
          SY0GW01.SY0GWPRC = SY0GM001.SY0GM2PR[SY0GWCT1];
        end
      else
        SY0GW01.SY0GWPRC = mathLib.round(SY0GM001.SY0GM2PR[SY0GWCT1] *         SYEUTBL.TY-EURO-RATE-AMT[SYWINDEX], -mathLib.decimals(SY0GW01.SY0GWPRC));
      end
    end
    SY5REC.SY5HSTSW = "N";
    SY0GS09(); /* update size price table*/
  end

end // end SY0G100

// Process SYREG regional Row
Function SY0GS-GET-SYREG()

   /* Process SYREG Regional row*/

  XP0HWIX1 = 1;

  while (XP0HWIX1 <= 25)
    if (XP0HW01.XP0HWSEL[XP0HWIX1] == "S" /* user selected region*/
     && XP0HW01.XDR-PROD-REG-CD[XP0HWIX1] 
     in SYWREC.XDR-PROD-REG-CD)          
      VSYREG02.XDR-PROD-REG-CD = XP0HW01.XDR-PROD-REG-CD[XP0HWIX1];
      TA1REC.TA1PGMNM = "SY0G";
      TA1REC.TA1MAP = "SY0GM001";
      XPSY003-VAL-SYREG(); /* validate syreg row*/

      if (SQLCA.VAGen_SQLCODE == 0
       && VSYREG02.XLC-LIFE-CYC-CD[1] <= "10")
        SYAREC.SYABFR = VSYREG02.VSYREG02-GROUP;
        VSYREG02.XLC-LIFE-CYC-CD[1] = SY2REC.XLCCD1;
        VSYREG02.XLC-LIFE-CYC-CD[2] = SY2REC.XLCCD2;
        VSYREG02.XLC-LIFE-CYC-CD[3] = SY2REC.XLCCD3;
        VSYREG02.XLC-LIFE-CYC-CD[4] = SY2REC.XLCCD4;
        VSYREG02.SY-LIFE-CYC-EDT[1] = SY2REC.SY2CEDT1;
        VSYREG02.SY-LIFE-CYC-EDT[2] = SY2REC.SY2CEDT2;
        VSYREG02.SY-LIFE-CYC-EDT[3] = SY2REC.SY2CEDT3;
        VSYREG02.SY-LIFE-CYC-EDT[4] = SY2REC.SY2CEDT4;
        VSYREG02.ZZ-CHNG-DT = SY0GW01.SY0GWDTE;
        VSYREG02.ZZ-CHNG-HHMM = SY0GW01.SY0GWWTM;
        XPSY004-UPD-SYREG(); /* update syreg row*/

        if (converseVar.validationMsgNum == 0)
          SYAREC.SYAUDTYP = "C";
          SYAREC.ZZZSDT = SY0GW01.SY0GWDTE;
          SYAREC.ZZZSTM = SY0GW01.SY0GWWTM;
          XPSY005-AUD-SYREG(); /* syreg audit insert*/

          SY9REC.SY9TGTYP = "C";
          SY9REC.ZZZSDT = SY0GW01.SY0GWDTE;
          SY9REC.ZZZSTM = SY0GW01.SY0GWWTM;
          XPSY006-TAG-SYREG(); /* syreg tag insert*/
        end
      end
    end
    XP0HWIX1 = XP0HWIX1 + 1;
  end

  SQLCA.VAGen_SQLCODE = 0;


end // end SY0GS-GET-SYREG

// Validate XDR region
Function SY0GS-GET-XP0HM()

   /* Validate XDR Prod Region code*/

  XP0HW01.XP0HW-ONLY-SYREG-FL = "N";
  XP0HW01.XGPCD = SY0GM001.XGPCD;
  XP0HW01.SY1STNBR = " ";
  XP0HW01.SY2CLRID = " ";
  XP0HW01.XDMCD = " ";

  XP0H001(); /* so do it*/

  if (XP0HW02.XP0HWERR == "Y") /* we have an error*/
    if (XP0HW02.XP0HWENR == 0) /* Invalid function key*/
      converseLib.validationFailed(19);
    end
    if (XP0HW02.XP0HWENR == 1) /* No rows found*/
      converseLib.validationFailed(50);
    end
    if (XP0HW02.XP0HWENR == 2) /* Corp. Table Error*/
      converseLib.validationFailed(23);
    end
    return;
  else
    converseLib.clearScreen();
    
  end


end // end SY0GS-GET-XP0HM

Function SY0GS-GET-ZFC()


       /* ******************************************/
       /* *     GET CURRENCY DESCRIPTION          **/
       /* *                                       **/
       /* ******************************************/

  set SQLCA empty;
  SY0GM001.ZFC-CRCY-DESC = " ";

  VZFC0001.ZFC-CRCY-CD = SY0GM001.ZFC-CRCY-CD;

  call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    SY0GM001.ZFC-CRCY-DESC = VZFC0001.ZFC-CRCY-DESC;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      SY0GM001.VAGen_EZEMSG = "INVALID CURRENCY CODE";
      set SY0GM001.ZFC-CRCY-CD cursor, bold;
      converseLib.validationFailed(3);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "SY0GS-   ";
      TA1REC.TA1LOCAT[2] = "GET-ZFC  ";
      TA1REC.TA1LOCAT[3] = "DC0060   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "CORP";
      TA1REC.TA1TBLVU = "VZFC0001";
      TA1TBLKE = VZFC0001.ZFC-CRCY-CD;
      move SQLCA to ERRSQLCA withV60Compat;
      call "TA0020" (TA1REC, ERRSQLCA) {isNoRefresh = yes, isExternal = yes};
      converseLib.validationFailed(23); /* corp table error....*/
      set SY0GM001.ZFC-CRCY-CD cursor, bold;
    end
  end

end // end SY0GS-GET-ZFC

Function SY0GS-POPUPS()

   /* Examine screen and display any pop-up requests to user*/

  if (SY0GM001.XCTCD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Country Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0GM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

  if (SY0GM001.ZFC-CRCY-CD == "?") /* Show pop-up*/
    XPXX001(); /* init pop-up*/
    XX0XW02.XX0XWHDR = "    Currency Codes";
    while (XX0XW02.XX0XWEND == "N")
      XPZFC-POP(); /* show the window*/
    end
    if (XX0XW02.XX0XWERR == "N" /* no errors*/
     && XX0XW02.XX0XWPIX > 0)   /* user selected something*/
      SY0GM001.ZFC-CRCY-CD = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
    end
  end

  converseLib.clearScreen();
   /* Refresh map*/

end // end SY0GS-POPUPS

// fast path check
Function SY0GS01()

  SY0GM001.SYMSCMSG = " "; /* Clear message field*/

   /* **********************************************/
   /* *   let's check for fast path request       **/
   /* **********************************************/


  if (converseVar.eventKey is enter
   && SY0GM001.CATOAP != "  ")
    move SY0GM001 to COMMAREA withV60Compat;
    XSEXIT();
    SY0GM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0GM001 alarm;
    set SY0GM001.CATOAP cursor, bold;
    converseLib.validationFailed(1); /* reserved*/
  end

  return;



end // end SY0GS01

// pfkey check
Function SY0GS02()


   /* *****************************************************/
     /* let's check the pfkey entered by the operator   **/
   /* *****************************************************/


  if (converseVar.eventKey is pf1)
    XSPF1();
  else
    if (converseVar.eventKey is pf4)
      XSPF4();
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CATOAP = "SY0N";
        XSEXIT();
      else
        if (converseVar.eventKey is pf12
         || converseVar.eventKey is enter
         || converseVar.eventKey is pa2)
          return;
        else
          converseLib.validationFailed(19);
        end
      end
    end
  end



end // end SY0GS02

// 2nd quality calculation
Function SY0GS03()


   /* ************************************************************/
   /* *  this little routine calculates the 2nd quality prices. **/
   /* ************************************************************/

  if (SY0GW01.SY0GW1MD[SY0GWCT1] == "Y") /* if 1st qual entered*/
    SY0GW01.SY0GW2MD[SY0GWCT1] = "Y"; /* SET 2ND QUAL TOO*/
  end

  if (SY0GM001.SY0GM1PR[SY0GWCT1] == 0)
    SY0GM001.SY0GM2PR[SY0GWCT1] = 0;
    return;
  else
    SY0GW01.SY0GWAAA = SY0GM001.SY0GM1PR[SY0GWCT1];
  end


  if (SY0GM001.SY0GMRND != 0)
    SY0GW01.SY0GWAAA = SY0GW01.SY0GWAAA * SY0GM001.SY0GMPCT * .01;
    SY0GW01.SY0GWAAA = SY0GW01.SY0GWAAA + SY0GM001.SY0GMCNT;
    SY0GW01.SY0GWBBB = SY0GW01.SY0GWAAA / SY0GM001.SY0GMRND;
    SY0GW01.SY0GWDDD = SY0GW01.SY0GWBBB;
    if (SY0GW01.SY0GWDDD == 0)
      SY0GM001.SY0GM2PR[SY0GWCT1] = SY0GW01.SY0GWAAA;
    else
      while (SY0GW01.SY0GWDDD != 0)
        if (SY0GM001.SY0GMRND > 0)
          SY0GW01.SY0GWAAA = SY0GW01.SY0GWAAA + .01;
        else
          SY0GW01.SY0GWAAA = SY0GW01.SY0GWAAA - .01;
        end
        SY0GW01.SY0GWBBB = SY0GW01.SY0GWAAA / SY0GM001.SY0GMRND;
        SY0GW01.SY0GWDDD = SY0GW01.SY0GWBBB;
        if (SY0GW01.SY0GWDDD == 0)
          SY0GM001.SY0GM2PR[SY0GWCT1] = SY0GW01.SY0GWAAA;
        end
      end
    end
  else
   /* tcs changes begin  10/22/99*/
    SY0GW01.SY0GWAAA = mathLib.round(SY0GW01.SY0GWAAA * SY0GM001.SY0GMPCT * .01, -mathLib.decimals(SY0GW01.SY0GWAAA));
    SY0GW01.SY0GWAAA = SY0GW01.SY0GWAAA + SY0GM001.SY0GMCNT;
   /* tcs changes end    10/22/99*/
    SY0GM001.SY0GM2PR[SY0GWCT1] = SY0GW01.SY0GWAAA;
  end


  return;


end // end SY0GS03

// validate upper data
Function SY0GS04()


   /* ***********************************************************/
   /* *  this routine validates the data entered on the upper  **/
   /* *  half of the screen.                                   **/
   /* ***********************************************************/


  if (SY0GM001.SY0GMRND != 0
   && SY0GM001.SY0GMRND != .25
   && SY0GM001.SY0GMRND != .50
   && SY0GM001.SY0GMRND != 1.00
   && SY0GM001.SY0GMRND != -.25
   && SY0GM001.SY0GMRND != -.50
   && SY0GM001.SY0GMRND != -1.00)
    converseLib.validationFailed(46); /* a rnding value must be*/
                                   /* '.25','.50','1','-.25',or '-.50','-1'*/
    set SY0GM001.SY0GMRND cursor, bold;
  end


  if (SY0GM001.SY0GMCAL == "Y")
    if (SY0GM001.SY0GMPCT == 0)
      converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* value*/
      set SY0GM001.SY0GMPCT cursor, bold;
    end
  end


  if (SY0GM001.SY0GMCAL != "N")
    if (SY0GM001.SY0GMCAL != "Y")
      converseLib.validationFailed(36); /* value must be 'y'  or 'n'*/
      set SY0GM001.SY0GMCAL cursor, bold;
    end
  end


  if (SY0GM001.XPYCD == "02")
    if (SY0GM001.SY0GMCAL == "Y")
      converseLib.validationFailed(55);
                                   /* 2nd quality retail price not allowed*/
      set SY0GM001.SY0GMCAL cursor, bold;
      set SY0GM001.XPYCD bold;
    end
  end


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  /*  */
  /* ----------------- y2k out begin ---------------*/
  /*  */
  /* MOVE 19 TO TA2REC.TA2CENT;*/
  /*  */
  /* ----------------- y2k out end -----------------*/
  /*  */
  /*  */
  /* ----------------- y2k in begin ----------------*/
  /*  */
  SY0GW01.SY0GW-PCEDT-MMDDYY = SY0GM001.SY5PCEDT;
  if (SY0GW01.SY0GW-PCEDT-YY > 60)
    TA2REC.TA2CENT = 19;
  else
    TA2REC.TA2CENT = 20;
  end
  /*  */
  /* ----------------- y2k in end  -----------------*/
  /*  */
  TA2REC.TA2GRGAN = SY0GM001.SY5PCEDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    /* TCS CHANGE BEGINS 10/22/99*/
    if (SY0GM001.ZFC-CRCY-CD == "EUR")
      SY0GW01.SY0GWDT1 = SY0GW01.SY0GWDTE - 10000;
      if (TA2REC.TA2GRGGN < SY0GW01.SY0GWDT1)
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY0GM001.SY5PCEDT cursor, bold;
      end
    else
      /* TCS CHANGE ENDS   10/22/99*/
      if (TA2REC.TA2GRGGN < SY0GW01.SY0GWDTE)
        converseLib.validationFailed(30); /* invalid date entered*/
        set SY0GM001.SY5PCEDT cursor, bold;
      end
    end
  else
    converseLib.validationFailed(30); /* invalid date entered*/
    set SY0GM001.SY5PCEDT cursor, bold;
  end


  if (SY0GM001.XLCCD != "  ")
    if (SY0GM001.XLCCD != "20"
     && SY0GM001.XLCCD != "10")
      converseLib.validationFailed(54); /* new life cycle can only be '10' or*/
                                   /* '20'*/
      set SY0GM001.XLCCD cursor, bold;
    end
  end


  if (SY0GM001.XLCCD != "  ")
    if (SY0GM001.XLCCD in XLCTBL.XLCCD)
      XLCREC.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0)
      converseLib.validationFailed(3); /* invalid code*/
      set SY0GM001.XLCCD cursor, bold;
    else
      if (XLCTBL.XXXSTAT[sysVar.arrayIndex] == "I")
        converseLib.validationFailed(33); /* status is not active for this code*/
        set SY0GM001.XLCCD cursor, bold;
      else
        SY0GM001.XLCDESC = XLCREC.XLCDESC;
      end
    end
  else
    SY0GM001.XLCDESC = " ";
  end


  if (SY0GM001.XPYCD == "  ")
    converseLib.validationFailed(40); /* required field - please enter a valid*/
                                   /* value*/
    set SY0GM001.XPYCD cursor, bold;
  end

  SY0GM001.XPYDESC = " ";
  if (SY0GM001.XPYCD in XPYTBL.XPYCD)
    SY0GM001.XPYDESC = XPYTBL.XPYDESC[sysVar.arrayIndex];
    if (XPYTBL.XXXSTAT[sysVar.arrayIndex] == "I")
      converseLib.validationFailed(33); /* status is not active for this code*/
      set SY0GM001.XPYCD cursor, bold;
    else
      if (COMMAREA.XDVCD == "02" /* NIL user*/
       && COMMAREA.XDVCD != XPYTBL.XDVCD[sysVar.arrayIndex])
        converseLib.validationFailed(3); /* INVALID CODE*/
        set SY0GM001.XPYCD cursor, bold;
      end
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY0GM001.XPYCD cursor, bold;
  end

  SY0GS-POPUPS(); /* check for pop-ups*/

  SY0GS-GET-ZFC();

  SY0GM001.XCTDESC = " ";
  if (SY0GM001.XCTCD in XCTTBL.XCTCD)
    SY0GM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    if (XCTTBL.XXXSTAT[sysVar.arrayIndex] == "I")
      converseLib.validationFailed(33); /* status is not active for this code*/
      set SY0GM001.XCTCD cursor, bold;
    end
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY0GM001.XCTCD cursor, bold;
  end

   /* Now check that country/currency is valid for region*/
  if (converseVar.validationMsgNum == 0 /* If no errors*/
   && SYWREC.SYW-ALL-REGIONS-FL == "N")
    WSY1550-IDX = 1;
    SYWREC.SYW-XCT-ZFC-FL = "N";
    while (WSY1550-IDX <= WSY1550-TABLE-SIZE
     && SYWREC.SYW-XCT-ZFC-FL == "N")
      if (SY0GM001.XCTCD == WSY1550.XCT-CTRY-CD[WSY1550-IDX]
       && SY0GM001.ZFC-CRCY-CD == WSY1550.ZFC-CRCY-CD[WSY1550-IDX])
        SYWREC.SYW-XCT-ZFC-FL = "Y";
      else
        WSY1550-IDX = WSY1550-IDX + 1;
      end
    end
    if (SYWREC.SYW-XCT-ZFC-FL == "N") /* Not found in table*/
      converseLib.validationFailed(127); /* so not allowed to use*/
      set SY0GM001.XCTCD cursor, bold;
      set SY0GM001.ZFC-CRCY-CD bold;
    end
  end

  if (SY0GM001.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "N")
      converseLib.validationFailed(35); /* not authorized to access this gpc*/
    else
      /* next sentence*/
    end
  else
    if (SY0GM001.XGPCD == "03")
      if (COMMAREA.CAALVL[3] == "N")
        converseLib.validationFailed(35); /* not authorized to access this gpc*/
      end
    end
  end


  if (SY0GM001.XGPCD in XGPTBL.XGPCD)
    SY0GM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  end
  if (sysVar.arrayIndex == 0)
    converseLib.validationFailed(31); /* invalid gpc code entered*/
    set SY0GM001.XGPCD cursor, bold;
  end

  if (converseVar.validationMsgNum != 0) /* If we have errors*/
    return; /* don't process further*/
  end

   /* **********************************************************/
   /* *  Now check to see if this country/currency should     **/
   /* *  also update the matching EUR or Local row.           **/
   /* **********************************************************/
  SYWREC.SYWINDEX = 1;
  SY0GW01.SY0GW-SYEUTBL-FLAG = "N";
  while (SYEUTBL.XCT-CTRY-CD[SYWINDEX] != "9999"
   && SY0GW01.SY0GW-SYEUTBL-FLAG == "N")
    if (SY0GM001.XCTCD == SYEUTBL.XCT-CTRY-CD[SYWINDEX])
      if ((SYEUTBL.SY-PMRY-CRCY-IND[SYWINDEX] == "L"
       && SY0GM001.ZFC-CRCY-CD == SYEUTBL.ZFC-CRCY-CD[SYWINDEX])
       || (SYEUTBL.SY-PMRY-CRCY-IND[SYWINDEX] == "E"
       && SY0GM001.ZFC-CRCY-CD == "EUR"))
        SY0GW01.SY0GW-SYEUTBL-FLAG = "Y";
      else
        SY0GW01.SY0GW-SYEUTBL-FLAG = "E";
      end
    else
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    end
  end

   /* Now if the flag is E, we found the country but will not*/
   /* be updating a matching price row. We want to warn the*/
   /* user about this.*/
  if (SY0GW01.SY0GW-SYEUTBL-FLAG == "E")
    SY0GW01.SY0GW-SYEUTBL-FLAG = "N";
    if (SY0GM001.ZFC-CRCY-CD == "EUR")
      SY0GM001.SYMSCMSG = " Matching Local Price will NOT be Updated";
    else
      SY0GM001.SYMSCMSG = " Matching EUR Price will NOT be Updated";
    end
  end

end // end SY0GS04

// update loop
Function SY0GS05()


   /* **********************************************************/
   /* *  this statement group performs all updating for each  **/
   /* *  style line inputted by the user.                     **/
   /* **********************************************************/


  set SY5REC empty;
  if (SY0GW01.SY0GWRMD[SY0GWCT1] == "Y")
    SY5REC.XGPCD = SY0GM001.XGPCD;
    SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY5REC.SY5SZID = 0;
    if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == "02" /* User is EAO*/
     && SY0GM001.XPYCD == "40")                
      SY5REC.XPYCD = "41"; /* price type 42 - EAO retail*/
    else
      SY5REC.XPYCD = "02"; /* price type 2 - retail*/
    end
    SY5REC.XQACD = "01"; /* first quality*/
    SY5REC.XCT-CTRY-CD = SY0GM001.XCTCD;
    SY5REC.ZFC-CRCY-CD = SY0GM001.ZFC-CRCY-CD;
    SY5REC.SY5HSTSW = "N";
    SY0GW01.SY0GWPRC = SY0GM001.SY0GMRET[SY0GWCT1];
    SY0GS09(); /* update size price table*/
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  set SY5REC empty;
  if (SY0GW01.SY0GW1MD[SY0GWCT1] == "Y")
    SY5REC.XGPCD = SY0GM001.XGPCD;
    SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY5REC.SY5SZID = 0;
    SY5REC.XPYCD = SY0GM001.XPYCD; /* entered price type*/
    SY5REC.XQACD = "01"; /* first quality*/
    SY5REC.XCT-CTRY-CD = SY0GM001.XCTCD;
    SY5REC.ZFC-CRCY-CD = SY0GM001.ZFC-CRCY-CD;
    SY5REC.SY5HSTSW = "N";
    SY0GW01.SY0GWPRC = SY0GM001.SY0GM1PR[SY0GWCT1];
    SY0GS09(); /* update size price table*/
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  set SY5REC empty;
  if (SY0GW01.SY0GW2MD[SY0GWCT1] == "Y")
    SY5REC.XGPCD = SY0GM001.XGPCD;
    SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
    SY5REC.SY2CLRID = "***";
    SY5REC.XDMCD = "**";
    SY5REC.SY5SZID = 0;
    SY5REC.XPYCD = SY0GM001.XPYCD; /* entered price type*/
    SY5REC.XQACD = "02"; /* second quality*/
    SY5REC.XCT-CTRY-CD = SY0GM001.XCTCD;
    SY5REC.ZFC-CRCY-CD = SY0GM001.ZFC-CRCY-CD;
    SY5REC.SY5HSTSW = "N";
    SY0GW01.SY0GWPRC = SY0GM001.SY0GM2PR[SY0GWCT1];
    SY0GS09(); /* update size price table*/
  end

   /* **********************************************************/
   /* *  If this style has all EAO colors,also create         **/
   /* *  price type 01 1st & 2nd quality and type 02 1st      **/
   /* *  quality with price = 999.99       MBUHIT 09/93       **/
   /* **********************************************************/

  if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == "02") /* User is EAO*/
    SY0GSVC(); /* are all colors EAO?*/
    if (SY0GW01.SY0GW-CLVF == "Y") /* style has all EAO colors*/
      if (SY0GW01.SY0GW1MD[SY0GWCT1] == "Y" /* 1st quality modified*/
       || SY0GW01.SY0GW2MD[SY0GWCT1] == "Y" /* 2nd quality modified*/
       || SY0GW01.SY0GWRMD[SY0GWCT1] == "Y") /* retail modified*/

        set SY5REC empty;
        SY5REC.XGPCD = SY0GM001.XGPCD;
        SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
        SY5REC.SY2CLRID = "***";
        SY5REC.XDMCD = "**";
        SY5REC.SY5SZID = 0;
        SY5REC.XPYCD = "01"; /* domestic wholesale*/
        SY5REC.XQACD = "01"; /* first quality*/
        SY5REC.XCT-CTRY-CD = "USA";
        SY5REC.ZFC-CRCY-CD = "USD";
        SY5REC.SY5HSTSW = "N";
        SY0GW01.SY0GWPRC = 999.99;
        SY0GS09(); /* update size price table*/
      end

      if (converseVar.validationMsgNum != 0)
        return;
      end

      set SY5REC empty;
      SY5REC.XGPCD = SY0GM001.XGPCD;
      SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
      SY5REC.SY2CLRID = "***";
      SY5REC.XDMCD = "**";
      SY5REC.SY5SZID = 0;
      SY5REC.XPYCD = "01"; /* domestic wholesale*/
      SY5REC.XQACD = "02"; /* second quality*/
      SY5REC.XCT-CTRY-CD = "USA";
      SY5REC.ZFC-CRCY-CD = "USD";
      SY5REC.SY5HSTSW = "N";
      SY0GW01.SY0GWPRC = 999.99;
      SY0GS09(); /* update size price table*/

      if (converseVar.validationMsgNum != 0)
        return;
      end

      set SY5REC empty;
      SY5REC.XGPCD = SY0GM001.XGPCD;
      SY5REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
      SY5REC.SY2CLRID = "***";
      SY5REC.XDMCD = "**";
      SY5REC.SY5SZID = 0;
      SY5REC.XPYCD = "02"; /* domestic retail*/
      SY5REC.XQACD = "01"; /* first quality*/
      SY5REC.XCT-CTRY-CD = "USA";
      SY5REC.ZFC-CRCY-CD = "USD";
      SY5REC.SY5HSTSW = "N";
      SY0GW01.SY0GWPRC = 999.99;
      SY0GS09(); /* update size price table*/
    end
  end



  if (converseVar.validationMsgNum == 0)
    if (SY0GM001.XLCCD != "  ") /* new life cycle entered?*/
      SY0GS10(); /* update style color table*/
    end
  end
  return;
end // end SY0GS05

// reset bottom half of screen
Function SY0GS06()


   /* *******************************************************/
   /* *  this will protect the bottom half of the screen   **/
   /* *  while keeping the top half intact                 **/
   /* *******************************************************/


  set SY0GM001.SY1STNBR[1] cursor;
  set SY1REC empty;
  set SY2REC empty;
  set SY5REC empty;
  set SY7REC empty;
  set SY9REC empty;
  set SYAREC empty;
  SY0GW01.SY0GWAAA = 0;
  SY0GWCT1 = 1;
  SY0GM001.CAITEM = " ";
  while (SY0GWCT1 <= 9)
    SY0GW01.SY0GWARN[SY0GWCT1] = "N";
    SY0GM001.SY1STNBR[SY0GWCT1] = " ";
    SY0GM001.SY1SSTNM[SY0GWCT1] = " ";
    SY0GM001.XUMDESC[SY0GWCT1] = " ";
    SY0GM001.SY5PSIND[SY0GWCT1] = " ";
    SY0GM001.SY0GMRET[SY0GWCT1] = 0;
    SY0GM001.SY0GM1PR[SY0GWCT1] = 0;
    SY0GM001.SY0GM2PR[SY0GWCT1] = 0;
    SY0GWCT1 = SY0GWCT1 + 1;
  end
  SY0GW01.SY0GWARN[10] = "N";
  return;
end // end SY0GS06

// replace size price table
Function SY0GS07()


   /* *********************************************************/
   /* *  this statement group :                              **/
   /* *   1) converts system date and time and moves audit   **/
   /* *      data to the output record area                  **/
   /* *   2) rolls the price data in the size price table    **/
   /* *      and does the actual replace                     **/
   /* *********************************************************/


  SY0GWCT2 = 1;

  while (SY0GWCT2 <= 6
   && SY5REC.SY5PCEDT[SY0GWCT2] != 0
   && converseVar.validationMsgNum == 0)
    SY0GS16();
                                   /* verify effective date and price loop*/
    SY0GWCT2 = SY0GWCT2 + 1;
  end

  if (converseVar.validationMsgNum != 0)
    return;
  end

  SY5REC.ZZZCHGDT = SY0GW01.SY0GWDTE;
  SY5REC.ZZZCHGTM = SY0GW01.SY0GWWTM;

  if (SY5REC.SY5PCEDT[1] != 0)
    if (SY5REC.SY5PCEDT[2] != 0)
      if (SY5REC.SY5PCEDT[3] != 0)
        if (SY5REC.SY5PCEDT[4] != 0)
          if (SY5REC.SY5PCEDT[5] != 0)
            if (SY5REC.SY5PCEDT[6] != 0)
              SY0GS11(); /* history table processing*/
              SY0GWCT2 = 5;
              SY0GWCT3 = 6;
              SY5REC.SY5HSTSW = "Y";
              while (SY0GWCT2 >= 1)
                SY0GS17(); /* moves for size price update*/
                SY0GWCT2 = SY0GWCT2 - 1;
                SY0GWCT3 = SY0GWCT3 - 1;
              end
            else
              SY0GWCT2 = 5;
              SY0GWCT3 = 6;
              while (SY0GWCT2 >= 1)
                SY0GS17(); /* moves for size price update*/
                SY0GWCT2 = SY0GWCT2 - 1;
                SY0GWCT3 = SY0GWCT3 - 1;
              end
            end
          else
            SY0GWCT2 = 4;
            SY0GWCT3 = 5;
            while (SY0GWCT2 >= 1)
              SY0GS17(); /* moves for size price update*/
              SY0GWCT2 = SY0GWCT2 - 1;
              SY0GWCT3 = SY0GWCT3 - 1;
            end
          end
        else
          SY0GWCT2 = 3;
          SY0GWCT3 = 4;
          while (SY0GWCT2 >= 1)
            SY0GS17(); /* moves for size price update*/
            SY0GWCT2 = SY0GWCT2 - 1;
            SY0GWCT3 = SY0GWCT3 - 1;
          end
        end
      else
        SY0GWCT2 = 2;
        SY0GWCT3 = 3;
        while (SY0GWCT2 >= 1)
          SY0GS17(); /* moves for size price update*/
          SY0GWCT2 = SY0GWCT2 - 1;
          SY0GWCT3 = SY0GWCT3 - 1;
        end
      end
    else
      SY0GWCT2 = 1;
      SY0GWCT3 = 2;
      while (SY0GWCT2 >= 1)
        SY0GS17(); /* moves for size price update*/
        SY0GWCT2 = SY0GWCT2 - 1;
        SY0GWCT3 = SY0GWCT3 - 1;
      end
    end
  else
    SY5REC.SY5PCEDT[1] = SY0GW01.SY0GWEDT;
    SY5REC.SY5PRCUN[1] = SY0GWPRC;
    SY5REC.SY5PSIND[1] = SY0GM001.SY5PSIND[SY0GWCT1];
  end

  call "IO0380" ("U ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +100)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(38); /* price table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "U       ";
      TA1REC.TA1LOCAT[2] = "SY0GS07 ";
      TA1REC.TA1LOCAT[3] = "IO0380  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY5REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    else
      SYAREC.SYAUDTYP = "A";
      SYAREC.SYAAFT = SY5REC.SY5DATA;
      SY0GS22();
      if (converseVar.validationMsgNum == 0)
        SY9REC.SY9TGTYP = "A";
        SY0GS23();
      end
    end
  end

  return;


end // end SY0GS07

// add row to size price table
Function SY0GS08()


   /* *****************************************************/
   /* *  this statement group :                          **/
   /* *   1) formats the output record area              **/
   /* *   2) performs the call to the size price table   **/
   /* *      to add a row to the table                   **/
   /* *****************************************************/


  SY5REC.ZZZSDT = SY0GW01.SY0GWDTE;
  SY5REC.ZZZCHGDT = SY0GW01.SY0GWDTE;
  SY5REC.ZZZCHGTM = SY0GW01.SY0GWWTM;
  SY5REC.ZZZCHGCT = 0;

  if (SY0GW01.SY0GWEDT > SY5REC.ZZZSDT /* eff date > curr. date*/
   && COMMAREA.XDVCD != "02")          /* and not NIL user*/
    SY5REC.SY5PCEDT[1] = SY5REC.ZZZSDT; /* move curr.date*/
    SY0GW01.SY0GWARN[SY0GWCT1] = "Y";
  else
    SY5REC.SY5PCEDT[1] = SY0GW01.SY0GWEDT;
  end

  SY5REC.SY5PRCUN[1] = SY0GW01.SY0GWPRC;
  if (SY5REC.XQACD == "01"
   && SY5REC.XPYCD != "02")
    SY5REC.SY5PSIND[1] = SY0GM001.SY5PSIND[SY0GWCT1];
  else
    SY5REC.SY5PSIND[1] = " ";
  end

  call "IO0380" ("A ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(38); /* price table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SY0GS08 ";
      TA1REC.TA1LOCAT[3] = "IO0380  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY5REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    else
      SYAREC.SYAUDTYP = "A";
      SYAREC.SYABFR = " ";
      SYAREC.SYAAFT = SY5REC.SY5DATA;
      SY0GS22(); /* size/price audit processing*/
      if (converseVar.validationMsgNum == 0)
        SY9REC.SY9TGTYP = "C";
        SY0GS23(); /* size/price tag processing*/
      end
    end
  end

  return;
end // end SY0GS08

// update size price table
Function SY0GS09()


   /* ***********************************************************/
   /* *  this is the statement group that actually makes       **/
   /* *  the call to the size price table and then decides if  **/
   /* *  this is going to be a replace or an add.              **/
   /* ***********************************************************/


  call "IO0380" ("S ", SQLCA, SY5REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0) /* row found means a replace*/
    if (SY0GW01.SY0GWPRC == 999.99 /* overrride amount*/
     && SY5REC.SY5PRCUN[1] != 0)  
      return; /* do not do replace*/
    else
      SYAREC.SYABFR = SY5REC.SY5DATA;
      SY0GS07(); /* replace a row*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      SY0GS08(); /* add a row*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "SY0GS09 ";
      TA1REC.TA1LOCAT[3] = "IO0380  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY5REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICE01";
      TA1TBLKE = SY5REC.SY5KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      converseLib.validationFailed(38); /* price table error*/
      return;
    end
  end

  return;

end // end SY0GS09

// process style color table
Function SY0GS10()


   /* ************************************************************/
   /* *  this statement group proceses all color rows for a     **/
   /* *  particular style. this processing includes:            **/
   /* *   1) perform select set call to get to the first style  **/
   /* *      row                                                **/
   /* *   2) perform select next calls and update each style    **/
   /* *      color row                                          **/
   /* ************************************************************/


  SY2REC.XGPCD = SY0GM001.XGPCD;
  SY2REC.SY1STNBR = SY0GM001.SY1STNBR[SY0GWCT1];
  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* color table error - contact systems dvlpmnt*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0G   ";
    TA1REC.TA1LOCAT[1] = "SS      ";
    TA1REC.TA1LOCAT[2] = "SY0GS10 ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0GM001";
    TA1REC.TA1DBASE = "SY2REC";
    TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    return;
  end

  while (SQLCA.VAGen_SQLCODE == 0
   && converseVar.validationMsgNum == 0)
    SY0GS15(); /* select next call for style color loop processing*/
  end

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != -501) /* is it already closed?*/
    converseLib.validationFailed(21); /* color table error - contact systems development*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0G   ";
    TA1REC.TA1LOCAT[1] = "CS      ";
    TA1REC.TA1LOCAT[2] = "SY0GS10 ";
    TA1REC.TA1LOCAT[3] = "IO0130  ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0GM001";
    TA1REC.TA1DBASE = "SY2REC";
    TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
    TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    return;
  end


end // end SY0GS10

// process history table
Function SY0GS11()


   /* ***********************************************************/
   /* *  this statement group adds a row to the history table  **/
   /* *  after the size price table has at least 6 occurrences **/
   /* *  of data in the effective date and price fields.       **/
   /* ***********************************************************/


  set SY7REC empty;
  SY7REC.XGPCD = SY5REC.XGPCD;
  SY7REC.SY1STNBR = SY5REC.SY1STNBR;
  SY7REC.SY2CLRID = SY5REC.SY2CLRID;
  SY7REC.XDMCD = SY5REC.XDMCD;
  SY7REC.SY5SZID = SY5REC.SY5SZID;
  SY7REC.XPYCD = SY5REC.XPYCD;
  SY7REC.XQACD = SY5REC.XQACD;
  SY7REC.SY5PCEDT = SY5REC.SY5PCEDT[6];
  SY7REC.SY5PRCUN = SY5REC.SY5PRCUN[6];
  SY7REC.SY5PSIND = SY5REC.SY5PSIND[6];

  SY7REC.ZZZSDT = SY0GW01.SY0GWDTE;
  SY7REC.ZZZSTM = SY0GW01.SY0GWWTM;

  call "IO0370" ("A ", SQLCA, SY7REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == -803)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(39); /* history table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SY0GS11 ";
      TA1REC.TA1LOCAT[3] = "IO0370  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY7REC";
      TA1REC.TA1TBLVU = "DPROD.VPRICH01";
      TA1TBLKE = SY7REC.SY7KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  return;

end // end SY0GS11

// convert system date and time
Function SY0GS12()


   /* *******************************************************/
   /* *  this routine converts ezetim to a number that     **/
   /* *  we can use to put out to the tables on an update  **/
   /* *******************************************************/


  SY0GW01.SY0GWZTM = VGVar.currentFormattedTime;
  SY0GW01.SY0GWWHR = SY0GW01.SY0GWZHR;
  SY0GW01.SY0GWWMN = SY0GW01.SY0GWZMN;

end // end SY0GS12

// process style color loop
Function SY0GS15()


   /* ***********************************************************/
   /* *  this statement group performs the actual updating of  **/
   /* *  each style color row for a particular style           **/
   /* ***********************************************************/


  call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == +100)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "SN      ";
      TA1REC.TA1LOCAT[2] = "SY0GS15 ";
      TA1REC.TA1LOCAT[3] = "IO0130  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY2REC";
      TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
      TA1TBLKE = SY2REC.SY2KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  if (SYWREC.XDR-PROD-REG-CD[SYWREGX] == "02" /* EAO User*/
   && SY2REC.XDR-PROD-REG-CD != "02")         /* color not theirs*/
    return; /* then they can't change it*/
  end

  if (SY2REC.SY2CEDT1 == SY0GW01.SY0GWEDT
   || SY2REC.SY2CEDT2 == SY0GW01.SY0GWEDT
   || SY2REC.SY2CEDT3 == SY0GW01.SY0GWEDT
   || SY2REC.SY2CEDT4 == SY0GW01.SY0GWEDT)
    set SY0GM001.SY1STNBR[SY0GWCT1] cursor, bold;
    converseLib.validationFailed(34); /* effective date already exists for*/
                                   /* life cycle*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    return;
  end

  if (SY0GM001.XLCCD == "20")
    if (SY2REC.SY2CEDT1 <= SY0GW01.SY0GWDTE)
      if (SY2REC.XLCCD1 == "10")
        SY0GW01.SY0GWSW1 = "Y";
      end
    else
      if (SY2REC.SY2CEDT2 <= SY0GW01.SY0GWDTE)
        if (SY2REC.XLCCD2 == "10")
          SY0GW01.SY0GWSW1 = "Y";
        end
      else
        if (SY2REC.SY2CEDT3 <= SY0GW01.SY0GWDTE)
          if (SY2REC.XLCCD3 == "10")
            SY0GW01.SY0GWSW1 = "Y";
          end
        else
          if (SY2REC.SY2CEDT4 <= SY0GW01.SY0GWDTE)
            if (SY2REC.XLCCD4 == "10")
              SY0GW01.SY0GWSW1 = "Y";
            end
          end
        end
      end
    end
  else
    if (SY2REC.SY2CEDT1 <= SY0GW01.SY0GWDTE)
      if (SY2REC.XLCCD1 == "20")
        SY0GW01.SY0GWSW1 = "Y";
      end
    else
      if (SY2REC.SY2CEDT2 <= SY0GW01.SY0GWDTE)
        if (SY2REC.XLCCD2 == "20")
          SY0GW01.SY0GWSW1 = "Y";
        end
      else
        if (SY2REC.SY2CEDT3 <= SY0GW01.SY0GWDTE)
          if (SY2REC.XLCCD3 == "20")
            SY0GW01.SY0GWSW1 = "Y";
          end
        else
          if (SY2REC.SY2CEDT4 <= SY0GW01.SY0GWDTE)
            if (SY2REC.XLCCD4 == "20")
              SY0GW01.SY0GWSW1 = "Y";
            end
          end
        end
      end
    end
  end

  if (SY0GW01.SY0GWSW1 == "Y")
    SYAREC.SYABFR = SY2REC.SY2DATA;
    SY2REC.SY2BOEDT = SY0GW01.SY0GWDTE;
    if (SY0GM001.XLCCD == "10")
      SY2REC.SY2BOSWI = "Y";
    else
      SY2REC.SY2BOSWI = "N";
    end
    if (SY2REC.SY2CEDT3 > SY0GW01.SY0GWEDT)
      SY2REC.XLCCD4 = SY0GM001.XLCCD;
      SY2REC.SY2CEDT4 = SY0GW01.SY0GWEDT;
    else
      if (SY2REC.SY2CEDT2 > SY0GW01.SY0GWEDT)
        SY2REC.XLCCD4 = SY2REC.XLCCD3;
        SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
        SY2REC.XLCCD3 = SY0GM001.XLCCD;
        SY2REC.SY2CEDT3 = SY0GW01.SY0GWEDT;
      else
        if (SY2REC.SY2CEDT1 > SY0GW01.SY0GWEDT)
          SY2REC.XLCCD4 = SY2REC.XLCCD3;
          SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
          SY2REC.XLCCD3 = SY2REC.XLCCD2;
          SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
          SY2REC.XLCCD2 = SY0GM001.XLCCD;
          SY2REC.SY2CEDT2 = SY0GW01.SY0GWEDT;
        else
          SY2REC.XLCCD4 = SY2REC.XLCCD3;
          SY2REC.SY2CEDT4 = SY2REC.SY2CEDT3;
          SY2REC.XLCCD3 = SY2REC.XLCCD2;
          SY2REC.SY2CEDT3 = SY2REC.SY2CEDT2;
          SY2REC.XLCCD2 = SY2REC.XLCCD1;
          SY2REC.SY2CEDT2 = SY2REC.SY2CEDT1;
          SY2REC.XLCCD1 = SY0GM001.XLCCD;
          SY2REC.SY2CEDT1 = SY0GW01.SY0GWEDT;
        end
      end
    end
  end

  if (SY0GW01.SY0GWSW1 == "Y")
    SY2REC.ZZZCHGDT = SY0GW01.SY0GWDTE;
    SY2REC.ZZZCHGTM = SY0GW01.SY0GWWTM;
    call "IO0130" ("U ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      return;
    else
      if (SQLCA.VAGen_SQLCODE != 0)
        converseLib.validationFailed(21); /* color table error - contact sys.*/
                                   /* development*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY0G   ";
        TA1REC.TA1LOCAT[1] = "U       ";
        TA1REC.TA1LOCAT[2] = "SY0GS15 ";
        TA1REC.TA1LOCAT[3] = "IO0130  ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY0GM001";
        TA1REC.TA1DBASE = "SY2REC";
        TA1REC.TA1TBLVU = "DPROD.VCOLOR01";
        TA1TBLKE = SY2REC.SY2KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        return;
      else
        SYAREC.SYAUDTYP = "C";
        SYAREC.SYAAFT = SY2REC.SY2DATA;
        SY0GS24(); /* style/color audit processing*/
        if (converseVar.validationMsgNum == 0)
          SY9REC.SY9TGTYP = "C";
          SY0GS25(); /* style/color tag processing*/
          SY0GS-GET-SYREG(); /* corresponding region table mods*/
        end
      end
    end
  end

  SY0GW01.SY0GWSW1 = "N";


end // end SY0GS15

// verify eff. data and price
Function SY0GS16()


   /* **********************************************************/
   /* *  this statement group loops through the effective     **/
   /* *  dates and prices of the size price table,validating  **/
   /* *  user input.                                          **/
   /* **********************************************************/


  if (SY5REC.SY5PCEDT[SY0GWCT2] == SY0GW01.SY0GWEDT)
    converseLib.validationFailed(16); /* effective date already exists*/
    set SY0GM001.SY1STNBR[SY0GWCT1] cursor, bold;
    return;
  end

  return;
end // end SY0GS16

// moves for size price update
Function SY0GS17()


   /* *************************************************************/
   /* *  this statement group performs the moves necessary to    **/
   /* *  set up the size price record for an update.             **/
   /* *************************************************************/

  if (SY5REC.SY5PCEDT[SY0GWCT2] < SY0GW01.SY0GWEDT)
    SY5REC.SY5PCEDT[SY0GWCT3] = SY5REC.SY5PCEDT[SY0GWCT2];
    SY5REC.SY5PRCUN[SY0GWCT3] = SY5REC.SY5PRCUN[SY0GWCT2];
    SY5REC.SY5PSIND[SY0GWCT3] = SY5REC.SY5PSIND[SY0GWCT2];
    if (SY0GWCT2 == 1)
      SY5REC.SY5PCEDT[1] = SY0GW01.SY0GWEDT;
      SY5REC.SY5PRCUN[1] = SY0GW01.SY0GWPRC;
      if (SY5REC.XQACD == "01"
       && SY5REC.XPYCD != "02")
        SY5REC.SY5PSIND[1] = SY0GM001.SY5PSIND[SY0GWCT1];
      else
        SY5REC.SY5PSIND[1] = " ";
      end
    else
      return;
    end
  else
    SY5REC.SY5PCEDT[SY0GWCT3] = SY0GW01.SY0GWEDT;
    SY5REC.SY5PRCUN[SY0GWCT3] = SY0GW01.SY0GWPRC;
    if (SY5REC.XQACD == "01"
     && SY5REC.XPYCD != "02")
      SY5REC.SY5PSIND[SY0GWCT3] = SY0GM001.SY5PSIND[SY0GWCT1];
    else
      SY5REC.SY5PSIND[SY0GWCT3] = " ";
    end
    SY0GWCT2 = 1;
  end

end // end SY0GS17

// size/price audit processing
Function SY0GS22()


   /* *****************************************************/
   /* *  this statement group formats the audit record   **/
   /* *  and performs the add call to db2 for size/price **/
   /* *****************************************************/


  SYAREC.XXXTBLNM = "VPRICE01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0G   ";
    TA1REC.TA1LOCAT[1] = "SY0GS22  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VPRICE01 ";
    TA1REC.TA1MAP = "SY0GM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY5REC.XGPCD;
  SYAREC.SY1STNBR = SY5REC.SY1STNBR;
  SYAREC.SY2CLRID = SY5REC.SY2CLRID;
  SYAREC.XDMCD = SY5REC.XDMCD;
  SYAREC.SY5SZID = SY5REC.SY5SZID;
  SYAREC.SYATYPCD = SY5REC.XPYCD;
  SYAREC.XQACD = SY5REC.XQACD;

  SYAREC.ZZZSDT = SY0GW01.SY0GWDTE;
  SYAREC.ZZZSTM = SY0GW01.SY0GWWTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SY0GS22 ";
      TA1REC.TA1LOCAT[3] = "IO0530  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SYAREC";
      TA1REC.TA1TBLVU = "DPROD.VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0GS22

// tag file processing
Function SY0GS23()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* *  for size/price updates.                        **/
   /* ****************************************************/


  SY9REC.XGPCD = SY5REC.XGPCD;
  SY9REC.SY1STNBR = SY5REC.SY1STNBR;
  SY9REC.SY2CLRID = SY5REC.SY2CLRID;
  SY9REC.XDMCD = SY5REC.XDMCD;

  SY9REC.ZZZSDT = SY0GW01.SY0GWDTE;
  SY9REC.ZZZSTM = SY0GW01.SY0GWWTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SY0GS23 ";
      TA1REC.TA1LOCAT[3] = "IO0520  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY9REC";
      TA1REC.TA1TBLVU = "DPROD.VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0GS23

// style/color audit processing
Function SY0GS24()


   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* *  and performs the add call to db2 for the       **/
   /* *  style/color table.*/
   /* ****************************************************/


  SYAREC.XXXTBLNM = "VCOLOR01";
  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0G   ";
    TA1REC.TA1LOCAT[1] = "SY0GS24  ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = "VSTYLE01 ";
    TA1REC.TA1MAP = "SY0GM001";
    TA1REC.TA1DBASE = "DPROD.";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    exit stack;
  end
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XGPCD = SY2REC.XGPCD;
  SYAREC.SY1STNBR = SY2REC.SY1STNBR;
  SYAREC.SY2CLRID = SY2REC.SY2CLRID;
  SYAREC.XDMCD = SY2REC.XDMCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";

  SYAREC.ZZZSDT = SY0GW01.SY0GWDTE;
  SYAREC.ZZZSTM = SY0GW01.SY0GWWTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error - contact systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SY0GS24 ";
      TA1REC.TA1LOCAT[3] = "IO0530  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SYAREC";
      TA1REC.TA1TBLVU = "DPROD.VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0GS24

// style/color tag processing
Function SY0GS25()


   /* ****************************************************/
   /* *  this statement group formats the tag record    **/
   /* *  and performs the add call to the db2 tag file  **/
   /* ****************************************************/


  SY9REC.XGPCD = SY2REC.XGPCD;
  SY9REC.SY1STNBR = SY2REC.SY1STNBR;
  SY9REC.SY2CLRID = SY2REC.SY2CLRID;
  SY9REC.XDMCD = SY2REC.XDMCD;

  SY9REC.ZZZSDT = SY0GW01.SY0GWDTE;
  SY9REC.ZZZSTM = SY0GW01.SY0GWWTM;

  call "IO0520" ("A ", SQLCA, SY9REC) {isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(37);
                                   /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(45); /* tag table error - call systems development*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "SY0G   ";
      TA1REC.TA1LOCAT[1] = "A       ";
      TA1REC.TA1LOCAT[2] = "SY0GS25 ";
      TA1REC.TA1LOCAT[3] = "IO0520  ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "SY0GM001";
      TA1REC.TA1DBASE = "SY9REC";
      TA1REC.TA1TBLVU = "DPROD.VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end


end // end SY0GS25

// test for nulls in 1st cost
Function SY0GSM1()

   /* this statement group is used in a test nulls statement*/
   /* to check a modified field for nulls. if test is true*/
   /* the user has not really entered anything in the field*/
   /* and we will set the modified flag to no.*/

  SY0GW01.SY0GW1MD[SY0GWIDX] = "N";
end // end SY0GSM1

// test for nulls in 2nd cost
Function SY0GSM2()

   /* this statement group is used in a test nulls statement*/
   /* to check a modified field for nulls. if test is true*/
   /* the user has not really entered anything in the field*/
   /* and we will set the modified flag to no.*/

  SY0GW01.SY0GW2MD[SY0GWIDX] = "N";
end // end SY0GSM2

// test for nulls in 1st cost
Function SY0GSMR()

   /* this statement group is used in a test nulls statement*/
   /* to check a modified field for nulls. if test is true*/
   /* the user has not really entered anything in the field*/
   /* and we will set the modified flag to no.*/

  SY0GW01.SY0GWRMD[SY0GWIDX] = "N";
end // end SY0GSMR

// set costs modified
Function SY0GSSM()
  SY0GWIDX = 1;
  while (SY0GWIDX <= 9)
    if (SY0GM001.SY0GM1PR[SY0GWIDX] is modified)
      SY0GW01.SY0GW1MD[SY0GWIDX] = "Y";
      if (SY0GM001.SY0GM1PR[SY0GWIDX] is blanks)
        SY0GSM1();
      end
    else
      SY0GW01.SY0GW1MD[SY0GWIDX] = "N";
    end
    if (SY0GM001.SY0GM2PR[SY0GWIDX] is modified)
      SY0GW01.SY0GW2MD[SY0GWIDX] = "Y";
      if (SY0GM001.SY0GM2PR[SY0GWIDX] is blanks)
        SY0GSM2();
      end
    else
      SY0GW01.SY0GW2MD[SY0GWIDX] = "N";
    end
    if (SY0GM001.SY0GMRET[SY0GWIDX] is modified)
      SY0GW01.SY0GWRMD[SY0GWIDX] = "Y";
      if (SY0GM001.SY0GMRET[SY0GWIDX] is blanks)
        SY0GSMR();
      end
    else
      SY0GW01.SY0GWRMD[SY0GWIDX] = "N";
    end
    SY0GWIDX = SY0GWIDX + 1;
  end
end // end SY0GSSM

// Check colors per EAO controls
Function SY0GSVC()

   /* *******************************************************/
   /* SCAN COLOR ROWS TO CHECK IF A NON-EAO COLOR EXISTS.*/
   /* IF SO, THE STYLE IS A "TACK-ON" STYLE.*/
   /* *******************************************************/
   /* **/
   /* 03-01-93 JRAMOS Created.                     **/
   /* *******************************************************/

  SY0GW01.SY0GW-CLVF = "Y"; /* Reset color validation flag*/
  SY0GW01.SY0GW-CLRF = "Y"; /* Reset color read flag*/

  SY2REC.XGPCD = SY1REC.XGPCD;
  SY2REC.SY1STNBR = SY1REC.SY1STNBR;

  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0G   ";
    TA1REC.TA1LOCAT[1] = "SY0GSVC  ";
    TA1REC.TA1LOCAT[2] = "IO0130   ";
    TA1REC.TA1LOCAT[3] = "SS ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0GM001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end

  while (SY0GW01.SY0GW-CLRF == "Y")
    call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0) /* Good return?*/

      if (SY2REC.XDR-PROD-REG-CD == "02") /* Color product rgn cd '02'?*/
         /* OK, color is EAO only*/
      else
        SY0GW01.SY0GW-CLVF = "N"; /* color not EAO = "tack-on" style*/
        SY0GW01.SY0GW-CLRF = "N"; /* terminate loop*/
      end

    else
      if (SQLCA.VAGen_SQLCODE != 100) /* if not end of file, then bad error*/
        converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "SY0G   ";
        TA1REC.TA1LOCAT[1] = "SY0GSVC  ";
        TA1REC.TA1LOCAT[2] = "IO0130   ";
        TA1REC.TA1LOCAT[3] = "SN ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "SY0GM001";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VCOLOR01";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY;
        move SQLCA to ERRSQLCA withV60Compat;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        exit stack;
      else
        SY0GW01.SY0GW-CLRF = "N"; /* terminate loop, EOF reached*/
      end
    end
  end

  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    converseLib.validationFailed(21); /* color table error - contact systems*/
                                   /* dvlpmnt*/
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "SY0G   ";
    TA1REC.TA1LOCAT[1] = "SY0GSVC  ";
    TA1REC.TA1LOCAT[2] = "IO0130   ";
    TA1REC.TA1LOCAT[3] = "CS ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "SY0GM001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VCOLOR01";
    TA1REC.TA1TBLKE = SY2REC.SY2KEY;
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    exit stack;
  end


end // end SY0GSVC

Record SY0GW01 type basicRecord
  5 SY0GW-PCEDT-MMDDYY SY0GW-PCEDT-MMDDYY ; 
    10 SY0GW-PCEDT-MMDD SY0GW-PCEDT-MMDD ; 
    10 SY0GW-PCEDT-YY SY0GW-PCEDT-YY ; 
  5 SY0GWPRC SY0GWPRC ; 
  5 SY0GWSW1 SY0GWSW1 ; 
  5 SY0GWSW2 SY0GWSW2 ; 
  5 SY0GWCT1 SY0GWCT1 ; 
  5 SY0GWCT2 SY0GWCT2 ; 
  5 SY0GWCT3 SY0GWCT3 ; 
  5 SY0GWDTE SY0GWDTE ; 
  5 SY0GWDT1 SY0GWDT1 ; 
  5 SY0GWARN SY0GWARN [10] ; 
  5 SY0GWAAA SY0GWAAA ; 
  5 SY0GWBBB SY0GWBBB ; 
  5 SY0GWCCC SY0GWCCC ; 
  5 SY0GWDDD SY0GWDDD ; 
  5 SY0GWEDT SY0GWEDT ; 
  5 SY0GW-CLRF SY0GW-CLRF ; 
  5 SY0GW-CLVF SY0GW-CLVF ; 
  5 SY0GW-SYEUTBL-FLAG SY0GW-SYEUTBL-FLAG ; 
  5 SY0GWZTM SY0GWZTM ; 
    10 SY0GWZHR SY0GWZHR ; 
    10 * char(1) ; 
    10 SY0GWZMN SY0GWZMN ; 
  5 SY0GWWTM SY0GWWTM ; 
    10 SY0GWWHR SY0GWWHR ; 
    10 SY0GWWMN SY0GWWMN ; 
  5 SY0GWIDX SY0GWIDX ; 
  5 SY0GWMDT SY0GWMDT [9] ; 
    10 SY0GW1MD SY0GW1MD ; 
    10 SY0GW2MD SY0GW2MD ; 
    10 SY0GWRMD SY0GWRMD ; 
end // end SY0GW01

// EAO Validation Flag
DataItem SY0GW-CLRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EAO Validation Flag
DataItem SY0GW-CLVF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w.s. for pcedte-mmdd
DataItem SY0GW-PCEDT-MMDD num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// W.S. for pcedte-mmddyy
DataItem SY0GW-PCEDT-MMDDYY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w.s. for pcedte-yy
DataItem SY0GW-PCEDT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Found entry in SYEUTBL
DataItem SY0GW-SYEUTBL-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1st qual price modified
DataItem SY0GW1MD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd qual price modified
DataItem SY0GW2MD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd price calc
DataItem SY0GWAAA decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Warn flag for eff.date (Y/N)
DataItem SY0GWARN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2nd price calc
DataItem SY0GWBBB num(18,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd price calc
DataItem SY0GWCCC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript counter
DataItem SY0GWCT1 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript counter
DataItem SY0GWCT2 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript counter
DataItem SY0GWCT3 decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2nd price calc
DataItem SY0GWDDD num(9,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date - 1 year
DataItem SY0GWDT1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem SY0GWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 8 byte eff date
DataItem SY0GWEDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for modified flags
DataItem SY0GWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// field modified flags
DataItem SY0GWMDT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// price field
DataItem SY0GWPRC decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// retail price modified
DataItem SY0GWRMD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0GWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work switch
DataItem SY0GWSW2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record hour
DataItem SY0GWWHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record minute
DataItem SY0GWWMN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record time
DataItem SY0GWWTM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system hour
DataItem SY0GWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system minute
DataItem SY0GWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system time
DataItem SY0GWZTM char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

