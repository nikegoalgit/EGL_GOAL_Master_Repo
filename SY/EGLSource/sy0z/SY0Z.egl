package sy0z;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import sy.common.*;
import ta.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=SY0Z ****
//          NIKE Legal Trademarks
// Build a table of Trademark (restricted) words and phrases.
// This will be used in a batch program to edit National
// Language Style Names.  If the USA/English Style Name has
// a restricted word, then the National Language Style Name
// must contain the same restricted word.  There is an except'n
// of course - if the Country has a trademarked translation
// of the restricted word then either the translation or the
// USA/English word may appear in the translated Style Name.
// 
// SY0Z allows the Legal Dept. to review new or changed product
// Style names.  Each name is parsed into its component words
// (separated by space or '/').  SY0Z checks each word to see
// if it is already a restricted trademark word or phrase.
// 
// All the words in the style name are displayed with an
// indicator located below the word to show if it's already
// restricted.
// 
// Legal may mark un-restricted words as restricted.  The word
// will be added to the Trademark Word database.
// 
// The second screen shows the complete list of all restricted
// words - the words, the phrases, and the translated words.
// The only action on this screen is to delete a restriction.
// 
// ------------------------------------------------------------
// SY0Z is cloned from skeleton application DV0C that allows
//     a user to inquire and maintain rows in a DB2 table.
// 
//     There are two different screens that may be displayed:
//          First screen displayed to user allows specification
//       of the search criteria to be used to list the rows in
//       the table.  The list is displayed and the user may
//       page backwards and forwards to view the information.
//          When a line is selected on the screen, the second
//       screen is displayed, showing all information for that
//       table row.
// 
//       if the user has sufficient security to change the data
//       the modifiable fields remain unprotected.  Otherwise,
//       they are protected from modification by the user.
// 
//       If any data is modified, it is verified and, if
//       complete and correct, the table row is updated with
//       the changed data.
//       The screen is redisplayed to the user, indicating that
//       the update is completed.
// 
//       if more than one line was selected on the first scren,
//       the next selection is displayed when the user presses
//       the ENTER key without making any change to the
//       displayed data.
// 
//       When the user exits the second screen (either via PF3
//       key or after all selections have been viewed) the
//       first screen is redisplayed, indicating the selections
//       that were viewed.
// 
// -------  --------  ------ ----------------------------------
// CONTROL    DATE    USERID DESCRIPTION OF CHANGE
// -------  --------  ------ ----------------------------------
// NEW      04-10-95  MYoung of Adia Tech.  New application.
//          10-26-95  BCourt Fix insert/delete bugs.
//          12-19-95  BCourt Make style edit screen show 1st.
//                           Show map function keys for the PC
//                           eg, 'Alt7' instead of MVS PF7.
//          12-05-97  NGANGO Y2K MODIFICATION. Regenerated to
//                           pickup XX0XS01 changes.
//          01-07-99  MHALST Stop scan of VTRDRV01 after 1,000
// -------  --------  ------ ----------------------------------
// *********************
Program SY0Z type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  SY0ZW01 SY0ZW01; // record
  SY0ZW02 SY0ZW02; // record
  SY0ZW03 SY0ZW03; // record
  SY0ZW04 SY0ZW04; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VTRDRV01 VTRDRV01; // record
  VTRDTS01 VTRDTS01; // record
  WSY1460 WSY1460; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  use ZFLTBL {deleteAfterUse = yes}; // table
  use SY0ZM.SY0ZM001,  // forms
      SY0ZM.SY0ZM002
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0Z-00000: SY0Z-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set SY0ZM001 initial; /* M001 input/output to list tdmks*/
    set SY0ZM002 initial; /* M002 input/output to edit tdmks*/
    set SY0ZW01 empty; /* Working storage*/
    set SY0ZW02 empty; /* M001 display storage*/
    set SY0ZW03 empty; /* M002 display storage*/
    set SY0ZW04 empty; /* M002 display storage*/
    set WSY1460 empty; /* Trademark copy member*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    SY0ZW01.SY0ZW-TSQ-FL = "Y"; /* sy0zw02 TempStorageQueue flag*/

     /* E '1' TO SY0ZW01.XXX-MAP-DSP-CD;/* Map to be displayed=List, not Edit*/
    SY0ZW01.XXX-MAP-DSP-CD = "2"; /* Map to be displayed=Edit, not List*/

    SY0ZW01.XXX-INX-LMT-NBR = 12; /* Number of lines on a page*/

      /* length = true length - 4 bytes to hold the length value:*/
    SY0ZW01.SY0ZW-SY0ZW02-LNTH = 816; /* Temp storage length=SY0ZW02*/
    SY0ZW01.SY0ZW-SY0ZW03-LNTH = 43; /* Temp storage length=SY0ZW03*/

    SY0ZW01.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    SY0ZW01.SY0ZW-DATA-SRC = "TS"; /* Start with translation trademarks*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto SY0Z-00500; /* Converse the main process*/


    SY0Z-00500: SY0Z-00500();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto SY0Z-00500; /* Converse the main process*/


  end // end main
end // end SY0Z

// Application initialization
Function SY0Z-00000()
   /* ------------------------------------------------------------*/
   /* Ensure that the COMMAREA has been properly formatted.*/
   /* ------------------------------------------------------------*/

   /* XSENTRY;*/

   /* ------------------------------------------------------------*/
   /* Initialize the segmented transaction identification.*/
   /* ------------------------------------------------------------*/

  XSSEGTR(); /* Set transaction identification*/

   /* ------------------------------------------------------------*/
   /* Initialize CSP special function data items.*/
   /* ------------------------------------------------------------*/

  VGVar.handleHardIOErrors = 1; /* Return all file errors*/
  converseVar.commitOnConverse = 1; /* Commit on every converse*/


end // end SY0Z-00000

// Determine which map to display
Function SY0Z-00500()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-MAP-DSP-CD == "1") /* Map 1 was requested/List Tdmks*/

    SY0Z-10000(); /* Display map 1*/

    exit stack; /* Exit to display map*/

  end

  if (SY0ZW01.XXX-MAP-DSP-CD == "2") /* Map 2 was requested/Edit StyleName*/

    SY0Z-20000(); /* Display map 2*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Write the error to the Error Diagnosis Reporting Facility.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "INVALID MAP NUMBER REQUESTED"; /* Description*/
  TA1REC.TA1MAPNO = SY0ZW01.XXX-MAP-DSP-CD; /* Map requested*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

   /* ------------------------------------------------------------*/
   /* Exit to display the application system menu.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "SY0N"; /* System Menu*/

  XSEXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Abnormally terminate the transaction if the exit failed.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1FUNC = "ABND"; /* Termination function*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end SY0Z-00500

// Main process, display LIST map
Function SY0Z-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  SY0Z-11000(); /* Obtain the data to display*/

  SY0Z-12000(); /* Format and display the map*/

  SY0Z-13000(); /* Check attention identifier*/

  SY0Z-14000(); /* Verify the entered data*/

  SY0Z-15000(); /* Process valid input request*/


end // end SY0Z-10000

// Obtain the data to display
Function SY0Z-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  SY0ZS-TA0050-P(); /* Purge any temporary storage*/

  SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Decide the source for the LIST display.*/
   /* move the data into a common working-storage record SY0ZW01.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.SY0ZW-DATA-SRC == "TS") /* check data source*/
    SY0Z-11100(); /* from translation table*/
  else
    SY0Z-11200(); /* from word&phrase tables*/
  end

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    converseLib.validationFailed(218); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end SY0Z-11000

// Extract Tdmk Translation Data
Function SY0Z-11100()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* get all rows in Trademark Translation Table.*/
   /* ------------------------------------------------------------*/

  set VTRDTS01 empty; /* Clear row storage area*/

  SY0ZS-VTRDTS01-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Display line index*/

  SY0ZW01.SY0ZW-TDMK-EOF-FL = "N"; /* End of cursor flag*/

  while (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N") /* Until end of cursor*/

    SY0ZS-VTRDTS01-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N") /* Not end of cursor*/

      if (SY0ZW01.XXX-INX-FLD-NBR == 1)
        SY0ZW01.SY0ZW-XCT-CTRY-CD-PREV = VTRDTS01.XCT-CTRY-CD;
      end

      SY0ZW02.XCT-CTRY-CD[XXX-INX-FLD-NBR] = VTRDTS01.XCT-CTRY-CD;
      SY0ZW02.ZFL-LANG-CD[XXX-INX-FLD-NBR] = VTRDTS01.ZFL-LANG-CD;

      if (SY0ZW02.XCT-CTRY-CD[XXX-INX-FLD-NBR] != 
      SY0ZW01.SY0ZW-XCT-CTRY-CD-PREV)

        SY0ZS-TA0050-A(); /* Add page to temporary storage*/

        SY0ZW01.XXX-INX-FLD-NBR = 1; /* Display line index*/

        SY0ZW02.XCT-CTRY-CD[XXX-INX-FLD-NBR] = VTRDTS01.XCT-CTRY-CD;
        SY0ZW02.ZFL-LANG-CD[XXX-INX-FLD-NBR] = VTRDTS01.ZFL-LANG-CD;
        SY0ZW02.SY-TDMK-TXT[XXX-INX-FLD-NBR] = VTRDTS01.SY-TDMK-TXT;
        SY0ZW02.SY-TDMK-TRSL-TXT[XXX-INX-FLD-NBR] = VTRDTS01.SY-TDMK-TRSL-TXT;
        SY0ZW01.XXX-INX-FLD-NBR = 13;

      else
        SY0ZW02.SY-TDMK-TXT[XXX-INX-FLD-NBR] = VTRDTS01.SY-TDMK-TXT;
        SY0ZW02.SY-TDMK-TRSL-TXT[XXX-INX-FLD-NBR] = VTRDTS01.SY-TDMK-TRSL-TXT;

        SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/
      end

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (SY0ZW01.XXX-INX-FLD-NBR > SY0ZW01.XXX-INX-LMT-NBR) /* Page is full*/

      SY0ZS-TA0050-A(); /* Add page to temporary storage*/

      SY0ZW01.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    SY0ZS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  SY0ZS-VTRDTS01-CS(); /* Close selected set cursor*/

end // end SY0Z-11100

// Format/Converse SY0ZM001 Map
Function SY0Z-11200()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* Get all USA Words and Phrases sorted together.*/
   /* ------------------------------------------------------------*/

  set SY0ZW03 empty; /* Clear row storage area*/

  SY0ZS-SY1460-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Display line index*/

  SY0ZW01.SY0ZW-TDMK-EOF-FL = "N"; /* End of cursor flag*/

  while (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N") /* Until end of cursor*/

    SY0ZS-SY1460-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* If first line on subsequent page, save heading information.*/
      /* ------------------------------------------------------------*/

      if (SY0ZW01.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && SY0ZW01.XXX-INX-FLD-NBR == 1) /* and first line on page*/

        SY0ZW02.SY-TDMK-TXT = WSY1460.WSY1460-SY-STY-NM; /* USA style name*/
        SY0ZW02.XCT-CTRY-CD = "USA "; /* Country Code*/
        SY0ZW02.ZFL-LANG-CD = "EN"; /* Language Code*/

      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      SY0ZW02.SY-TDMK-TXT[XXX-INX-FLD-NBR] = WSY1460.WSY1460-SY-STY-NM; /* USA Style Name*/
      SY0ZW02.SY-TDMK-PHS-FL[XXX-INX-FLD-NBR] = WSY1460.WSY1460-SY-TDMK-PHS-FL; /* Phrase or Word*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (SY0ZW01.XXX-INX-FLD-NBR > SY0ZW01.XXX-INX-LMT-NBR) /* Page is full*/

      SY0ZS-TA0050-A(); /* Add page to temporary storage*/

      SY0ZW01.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    SY0ZS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  SY0ZS-SY1460-CS(); /* Close selected set cursor*/

end // end SY0Z-11200

// Format and converse LIST map
Function SY0Z-12000()
   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    SY0Z-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  SY0Z-12200(); /* Check Change Authorization*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")            /* or message text*/


    set SY0ZM001 alarm; /* Indicate sound alarm*/

  end

  converse SY0ZM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CAMSG = " "; /* Message text*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set SY0ZM001.XCT-CTRY-CD normal; /* Country code*/
  set SY0ZM001.XCT-CTRY-DESC normal; /* Country code description*/
  set SY0ZM001.ZFL-LANG-CD normal; /* Language code*/
  set SY0ZM001.ZFL-LANG-DESC normal; /* Language description*/

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && SY0ZM001.SY-TDMK-TXT[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/

    set SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end SY0Z-12000

// Format the data in the map
Function SY0Z-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set SY0ZM001 initial; /* M001 input/output area*/

  SY0ZW01.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (SY0ZW01.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (SY0ZW01.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        SY0ZS-TA0050-U(); /* Update temporary storage page*/

        SY0ZW01.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (SY0ZW01.XXX-CURR-PAGE-NBR > SY0ZW01.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      SY0ZS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    SY0ZM001.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    SY0ZM001.XXX-HI-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  if (SY0ZW01.SY0ZW-DATA-SRC == "TS") /* Processing Tdmk Translations*/
    SY0ZM001.XCT-CTRY-CD = SY0ZW02.XCT-CTRY-CD[XXX-INX-FLD-NBR];
    SY0ZM001.ZFL-LANG-CD = SY0ZW02.ZFL-LANG-CD[XXX-INX-FLD-NBR];

    if (SY0ZW02.XCT-CTRY-CD in XCTTBL.XCTCD)
      SY0ZM001.XCT-CTRY-DESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    else
      SY0ZM001.XCT-CTRY-DESC = "UNKNOWN COUNTRY DESCRIPTION   ";

    end

    if (SY0ZW02.ZFL-LANG-CD in ZFLTBL.ZFLCD)
                                   /* Ck for Lang Cd in ZFLTBL*/

      SY0ZM001.ZFL-LANG-DESC = ZFLTBL.ZFLDESC[sysVar.arrayIndex];
    else
      SY0ZM001.ZFL-LANG-DESC = "UNKNOWN LANG   ";

    end

  end

  if (SY0ZW01.SY0ZW-DATA-SRC != "TS") /* Processing Tdmk Word/Phrases*/

    SY0ZM001.XCT-CTRY-CD = "USA ";
    SY0ZM001.XCT-CTRY-DESC = "U.S.A.";
    SY0ZM001.ZFL-LANG-CD = "EN";
    SY0ZM001.ZFL-LANG-DESC = "ENGLISH";

  end

   /* ------------------------------------------------------------*/
   /* Move data from temp-storage-queue page to the Map.*/
   /* ------------------------------------------------------------*/
   /* note that xxx-inx-fld-nbr was init.= 1 about 30 lines above here.*/

  while (SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.XXX-INX-LMT-NBR)
                                   /* Until screen is full*/

    set SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = SY0ZW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    SY0ZM001.SY-TDMK-TXT[XXX-INX-FLD-NBR] = SY0ZW02.SY-TDMK-TXT[XXX-INX-FLD-NBR];

    if (SY0ZW01.SY0ZW-DATA-SRC == "TS") /* Processing Tdmk Translations*/

      SY0ZM001.SY-TDMK-TRSL-TXT[XXX-INX-FLD-NBR] = SY0ZW02.SY-TDMK-TRSL-TXT[XXX-INX-FLD-NBR];

    end

    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* This will determine the Cursor position on the Map.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.SY0ZW-DATA-SRC == "TS") /* Foreign Tdmk Text on Map*/
    set SY0ZM001.XXX-LN-SEL-IND[1] cursor, normal; /* Cursor at line 1 Action*/
    set SY0ZM001.SY0ZM-START-LTR skip; /* Block Starting Letter*/
    set SY0ZM001.SY0ZM-START-PAGE-NBR skip; /* Block Page Number*/
  else
    set SY0ZM001.SY0ZM-START-LTR cursor, normal; /* Cursor at Strt Ltr Fld*/
    set SY0ZM001.SY0ZM-START-PAGE-NBR normal; /* Open Page Number*/
  end

end // end SY0Z-12100

// Autoskip fields as needed
Function SY0Z-12200()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* Otherwise, protect Edit Action fields from user input.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-RQT-DATA-FL == "N" /* Requested data was found*/
   && COMMAREA.CACHGFL == "Y")       /* and user authorized to change*/

    return; /* Return to previous process*/

  end

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Initialize index*/

  while (SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.XXX-INX-LMT-NBR)

    set SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] skip;
    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;

  end


end // end SY0Z-12200

// Check PA/PF keys-Act on some
Function SY0Z-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (SY0ZW01.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set SY0ZW02 empty; /* M001 display storage*/
    end

    SY0ZW01.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Goal Documentation*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CATOAP = "SY0N"; /* Product System Menu*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Goal Master Menu*/
  end

  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4)

    SY0ZS-TA0050-P(); /* Purge any temporary storage*/

    XSEXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf9)  /* and PF9 was not pressed*/

    SY0ZW01.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(19); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end SY0Z-13000

// Verify more PA/PF keys
Function SY0Z-14000()
   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.SY0ZW-CNT-ACTION = 0; /* Any action (Delete) to do?*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8 /* Scroll forward request*/
   || converseVar.eventKey is enter) /* Scroll forward request*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    SY0Z-14100(); /* Verify scroll request*/

  else

    if (converseVar.eventKey is pf9)

      SY0ZW01.XXX-MAP-DSP-CD = "2"; /* show styles for review*/
      SY0ZW01.XXX-RQT-DATA-FL = "Y"; /* request data to show*/
      exit stack;

    end

  end

   /* ------------------------------------------------------------*/
   /* In any case, verify any modifiable data that was changed.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-LMT-NBR;
                               /* Last line number index*/

    while (SY0ZW01.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

      SY0Z-14200(); /* Verify data in the line*/

      SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR - 1;
                               /* Decrement line number*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 70 /* Skip 'end of data' message*/
   && SY0ZW01.SY0ZW-CNT-ACTION != 0)     /* when have 'delete' action to do.*/
    converseLib.validationFailed(0); /* Reset message to 'none'*/
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end SY0Z-14000

// Verify PF7, PF8 & ENTER
Function SY0Z-14100()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && SY0ZW01.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    SY0ZW01.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(69); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward requested*/
   && SY0ZW01.XXX-CURR-PAGE-NBR >= SY0ZW01.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/
    if (SY0ZW01.SY0ZW-DATA-SRC == "TS")

      SY0ZW01.SY0ZW-DATA-SRC = "  ";
      SY0ZW01.XXX-RQT-DATA-FL = "Y";
      exit stack;

    else

      if (SY0ZM001.SY0ZM-START-LTR == " "
       && SY0ZM001.SY0ZM-START-PAGE-NBR == 0) /* If no other scroll*/
                                  /* then show err mesg.*/
        SY0ZW01.XXX-MSG-LOC-ID = "14100"; /* Message location*/
        converseLib.validationFailed(70); /* No more pages to display*/
      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter /* Scroll forward requested*/
   && SY0ZW01.XXX-CURR-PAGE-NBR >= SY0ZW01.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/
    if (SY0ZW01.SY0ZW-DATA-SRC == "TS")

      SY0ZW01.SY0ZW-DATA-SRC = "  "; /* Done with translations*/
                                         /* so switch to USA source*/
      SY0ZW01.XXX-RQT-DATA-FL = "Y"; /* Request USA data*/
      exit stack;

    else

      if (SY0ZM001.SY0ZM-START-LTR == " "
       && SY0ZM001.SY0ZM-START-PAGE-NBR == 0) /* If no other scroll*/
                                  /* then show err mesg.*/
        SY0ZW01.XXX-MSG-LOC-ID = "14100"; /* Message location*/
        converseLib.validationFailed(70); /* No more pages to display*/
      end

    end

  end


end // end SY0Z-14100

// Verify line action = 'D'
Function SY0Z-14200()
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not a "D", indicate that*/
   /* only "D" may be entered to select a line.*/
   /* BCourt 10-16-95 Count actions to avoid mesg 70 "at end of list".*/
   /* ------------------------------------------------------------*/

  if (SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  SY0ZW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/
    if (SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "D")
                                   /* and is not a "D"*/

      SY0ZW01.XXX-MSG-LOC-ID = "14200"; /* Message location*/
      converseLib.validationFailed(219); /* Only "D" may be entered*/
      set SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    else
      SY0ZW01.SY0ZW-CNT-ACTION = SY0ZW01.SY0ZW-CNT-ACTION + 1;
    end

  end


end // end SY0Z-14200

// Act on PF & Enter keys
Function SY0Z-15000()
   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/
    if (SY0ZW01.XXX-CURR-PAGE-NBR > SY0ZW01.XXX-HI-PAGE-NBR)
      SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
    end /* Don't go over max*/

    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If ENTER (Scrl Frwd Alt) was requested;*/
   /* 1) Check if delete action was entered, if so, Delete Tdmk*/
   /* 2) Increment page number*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter) /* Scroll forward requested*/

    if (SY0ZW01.XXX-HI-PAGE-NBR > 0) /* If have data on map,*/

      SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-LMT-NBR;
                                 /* Set to last line number*/
      SY0ZW01.SY0ZW-TDMK-DEL-FL = "N";

      while (SY0ZW01.XXX-INX-FLD-NBR > 0)

        SY0Z-15100(); /* Check for Delete action*/

        SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR - 1;
                                  /* Decrement line number*/
      end

    end

    if (SY0ZW01.SY0ZW-TDMK-DEL-FL != "Y") /* If page has NO action,*/

      if (SY0ZM001.SY0ZM-START-PAGE-NBR > 0) /* Starting Page Nbr reqsted*/

        SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZM001.SY0ZM-START-PAGE-NBR;

      else

        if (SY0ZM001.SY0ZM-START-LTR != " ") /* Starting Letter reqsted*/

          SY0Z-15200(); /* Find correct tsq page #.*/

        else

          SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR + 1;
                                  /* Increment page number*/
          if (SY0ZW01.XXX-CURR-PAGE-NBR > SY0ZW01.XXX-HI-PAGE-NBR)
            SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
          end /* Don't go over max*/

        end

      end

      SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      return; /* Return to previous process*/

    end

  end


end // end SY0Z-15000

// Act on Delete Action request
Function SY0Z-15100()
   /* --------------------------------------------------------------*/
   /* If Action is 'D', delete Trademark from appropriate Table*/
   /* --------------------------------------------------------------*/

  if (SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  SY0ZW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* value changed*/
    if (SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "D")

      SY0ZW01.XXX-PAGE-UPD-FL = "Y"; /* force tsq page update*/
      SY0ZW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "D"; /* to reshow 'd'*/

      if (SY0ZW01.SY0ZW-DATA-SRC == "TS") /* translation database(not USA)*/

        set VTRDTS01 empty;

        VTRDTS01.SY-TDMK-TRSL-TXT = SY0ZW02.SY-TDMK-TRSL-TXT[XXX-INX-FLD-NBR];

        VTRDTS01.XCT-CTRY-CD = SY0ZM001.XCT-CTRY-CD;
        VTRDTS01.ZFL-LANG-CD = SY0ZM001.ZFL-LANG-CD;
                                   /* Language code key for VTRDTS01-D*/

        SY0ZS-VTRDTS01-D(); /* Delete the Trsl table row*/

      else

        set WSY1460 empty; /* USA databases*/

        WSY1460-SY-STY-NM = SY0ZW02.SY-TDMK-TXT[XXX-INX-FLD-NBR];
                                   /* Move Map Tdmk-Txt to WSY1460 Rec*/

        XX0XS01(); /* Obtain System Date & Time*/

        WSY1460.ZZZSDT = XX0XW01.XX0XWDAT;
        WSY1460.ZZZCHGTM = XX0XW01.XX0XWTIM;

        SY0ZW01.SY0ZW-TDMK-DEL-FL = "Y";

        /* 10-26-95 BCourt - no longer need two calls to SY1460*/
        /* since it now has single delete routine.*/

        SY0ZS-SY1460-DE(); /* Delete Word or Phrase*/

      end

    end

  end

   /* ------------------------------------------------------------------*/
   /* if any error was found, exit to display the map.*/
   /* ------------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0)
    exit stack;
  end


end // end SY0Z-15100

// Get TSQ Page # 4 Start'g Lettr
Function SY0Z-15200()
   /* --------------------------------------------------------------*/
   /* Start reading TSQ at page 1 and continue reading until*/
   /* reach the page containing the Starting Letter/s entered on Map.*/
   /* --------------------------------------------------------------*/

  SY0ZW01.XXX-CURR-PAGE-NBR = 1; /* Begin at page 1*/

  while (SY0ZW01.XXX-CURR-PAGE-NBR <= SY0ZW01.XXX-HI-PAGE-NBR)

    SY0ZS-TA0050-R(); /* Read temporary storage queue page*/

    if (SY0ZW02.SY-TDMK-TXT[12] >= SY0ZM001.SY0ZM-START-LTR) /* If beyond pt.*/
      return; /* Use current page*/
    end

    SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR + 1; /* Try next pg*/

  end


  SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
                                  /* Force to last page*/

end // end SY0Z-15200

// Main process, display EDIT map
Function SY0Z-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  SY0Z-21000(); /* Obtain the data to display*/

  SY0Z-22000(); /* Format and display the map*/

  SY0Z-23000(); /* Check attention identifier*/

  SY0Z-24000(); /* Verify the entered data*/

  SY0Z-25000(); /* Process valid input request*/


end // end SY0Z-20000

// Obtain the data to display
Function SY0Z-21000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Reset the page number to display.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  SY0ZW01.XXX-HI-PAGE-NBR = 0; /* Initialize high page number*/
  SY0ZW01.SY0ZW-TOT-STY-REV = 0; /* Init.total styles to review*/

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  SY0ZS-TA0050-STY-P(); /* Purge any temporary storage*/

  SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Select and Open the cursor for the set to be formatted.*/
   /* Get all Style Names needing review from Trademark Review Tbl.*/
   /* ------------------------------------------------------------*/

  SY0Z-21100();

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    converseLib.validationFailed(218); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end SY0Z-21000

// Select Style Names for Review
Function SY0Z-21100()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* get all rows in Trademark Review Table.*/
   /* ------------------------------------------------------------*/

  set SY0ZW03 empty; /* Clear Temp Storage area*/

  set SY0ZW04 empty; /* Clear Row storage area*/

  SY0ZS-SY1500-SS(); /* Select set and open cursor*/

   /* note- xxx-hi-page-nbr & sy0zw-tot-sty-rev zeroed in sy0z-21000*/
   /* ------------------------------------------------------------*/
   /* Fetch and Add Style Name record to Temp Storage Queue.*/
   /* ------------------------------------------------------------*/


  SY0ZW01.SY0ZW-TDMK-EOF-FL = "N"; /* End of cursor flag*/

  while (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N") /* Until end of cursor*/

    SY0ZS-SY1500-SN(); /* Fetch next row in cursor*/
    if (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N" /* Not end of cursor*/
     && SY0ZW01.XXX-HI-PAGE-NBR > 999)   /* More than 999 pages*/
      SY0ZW01.SY0ZW-TDMK-EOF-FL = "Y"; /* Set end of scan*/
    end

    /* ------------------------------------------------------------*/
    /* If not end of cursor, move and add record to Temp Storage.*/
    /* ------------------------------------------------------------*/

    if (SY0ZW01.SY0ZW-TDMK-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* Move the data from fetch into Temp Storage area.*/
      /* ------------------------------------------------------------*/

      SY0ZW03.SY-STY-ID = SY0ZW04.SY-STY-ID; /* Style ID*/
      SY0ZW03.XGP-GPC-CD = SY0ZW04.XGP-GPC-CD; /* GPC Code*/
      SY0ZW03.SY-STY-NBR = SY0ZW04.SY-STY-NBR; /* Style Number*/
      SY0ZW03.SY-STY-NM = SY0ZW04.SY-STY-NM; /* Style Name*/
      SY0ZW03.SY0ZW-STY-ACT-FL = "N"; /* Style Name Action Flag*/

      /* ------------------------------------------------------------*/
      /* Add Style Name Review record to Temp Storage Queue.*/
      /* ------------------------------------------------------------*/

      SY0ZW01.XXX-HI-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR + 1;
      SY0ZW01.SY0ZW-TOT-STY-REV = SY0ZW01.SY0ZW-TOT-STY-REV + 1;

      SY0ZS-TA0050-STY-A(); /* Add record to Temporary Storage*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  SY0ZS-SY1500-CS(); /* Close selected set cursor*/

end // end SY0Z-21100

// Format and converse EDIT map
Function SY0Z-22000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    SY0ZW01.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* Read Trademark Review record from Temp Storage Queue.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.SY0ZW-TSQ-FL == "Y") /* First time thru*/

    SY0ZW01.XXX-CURR-PAGE-NBR = 1; /* Set STQ to first Rec*/
    SY0ZW01.SY0ZW-TSQ-FL = "N"; /* Set flag NE first time*/

  end

  if (SY0ZW01.XXX-CURR-PAGE-NBR > SY0ZW01.XXX-HI-PAGE-NBR)

    SY0ZW01.XXX-MSG-LOC-ID = "22000"; /* Process Name*/
    converseLib.validationFailed(223); /* End of Style Name Review*/
  else
    SY0ZS-TA0050-STY-R(); /* Read sy0zw02 Temp Storage*/

  end

   /* ------------------------------------------------------------*/
   /* Review Style Name for Pre-existing Trademark restriction.*/
   /* ------------------------------------------------------------*/

  SY0ZS-SY1460-CK(); /* Check Style Name Restrictions*/

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in map sy0zm002.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    SY0Z-22100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  SY0Z-22200(); /* Check change authorization*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")   /* or message text*/

    if (SY0ZW01.XXX-MSG-NBR != 0) /* Message to display*/

      if (SY0ZW01.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(SY0ZW01.XXX-MSG-NBR);
      end /* Message number*/
    else
      SY0ZM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    set SY0ZM002 alarm; /* Indicate sound alarm*/

  end

  converse SY0ZM002 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.XXX-MSG-LOC-ID = " "; /* Message location*/
  SY0ZW01.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set SY0ZM002.XCT-CTRY-CD normal; /* Country Code*/
  set SY0ZM002.XCT-CTRY-DESC normal; /* Country Description*/
  set SY0ZM002.ZFL-LANG-CD normal; /* Language Code*/
  set SY0ZM002.ZFL-LANG-DESC normal; /* Language Desc*/
  set SY0ZM002.XGP-GPC-CD normal; /* GPC Code*/
  set SY0ZM002.SY-STY-NBR normal; /* Style Nbr*/
  set SY0ZM002.SY-STY-NM normal; /* Style Name*/

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex < 13)
    set SY0ZM002.SY0ZW-STY-WORD-ACT[sysVar.arrayIndex] normal; /* Word restricted*/
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

end // end SY0Z-22000

// Format the data into the map
Function SY0Z-22100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set SY0ZM002 initial; /* M002 input/output area*/

  SY0ZW01.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Default Country and Language to 'USA' and 'ENGLISH' on Map.*/
   /* ------------------------------------------------------------*/

  SY0ZM002.XCT-CTRY-CD = "USA ";
  SY0ZM002.XCT-CTRY-DESC = "USA";
  SY0ZM002.ZFL-LANG-CD = "EN";
  SY0ZM002.ZFL-LANG-DESC = "ENGLISH";
  SY0ZM002.XGP-GPC-CD = SY0ZW03.XGP-GPC-CD;
  SY0ZM002.SY-STY-NBR = SY0ZW03.SY-STY-NBR;
  SY0ZM002.SY-STY-NM = SY0ZW03.SY-STY-NM;
  if (SY0ZW03.SY0ZW-STY-ACT-FL == "Y")
    SY0ZM002.SY0ZM-STY-ACT-ACPT = "Action on this Style already accepted";
  else
    SY0ZM002.SY0ZM-STY-ACT-ACPT = " ";
    set SY0ZM002.SY0ZM-STY-ACT-ACPT invisible;
  end

   /* ------------------------------------------------------------*/
   /* Move appropriate page numbers/record numbers to Map.*/
   /* ------------------------------------------------------------*/
  SY0ZM002.XXX-HI-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
  SY0ZM002.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR;
  SY0ZM002.SY0ZW-TOT-STY-REV = SY0ZW01.SY0ZW-TOT-STY-REV;

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

   /* ------------------------------------------------------------*/
   /* Format unstrung Style Name into map Sy0zm002.*/
   /* ------------------------------------------------------------*/
  while (SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && WSY1460.WSY1460-STY-NM-WORD[XXX-INX-FLD-NBR] > " ")
                                   /* or end of parsed Sty Nm*/

    if (SY0ZW01.XXX-INX-FLD-NBR == 1) /* First word of Style Name*/

      set SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] cursor, normal;
    else
      set SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] normal;

    end

    SY0ZM002.SY0ZW-STY-WORD[XXX-INX-FLD-NBR] = WSY1460.WSY1460-STY-NM-WORD[XXX-INX-FLD-NBR];

    SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] = WSY1460.WSY1460-STY-NM-RSTR[XXX-INX-FLD-NBR];

    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end SY0Z-22100

// Check change auth.before map
Function SY0Z-22200()
   /* ------------------------------------------------------------*/
   /* If requested data was found and the user is authorized to*/
   /* change data on the screen, return to the previous process.*/
   /* Otherwise, protect Edit Action fields from user input.*/
   /* ------------------------------------------------------------*/

  if (SY0ZW01.XXX-RQT-DATA-FL == "N" /* Requested data found in -21000*/
   && COMMAREA.CACHGFL == "Y")       /* and user authorized to change*/

    return; /* Return to previous process*/

  end

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Initialize index*/

  while (SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.XXX-INX-LMT-NBR)

    set SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] skip;
    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1;

  end


end // end SY0Z-22200

// Check PF Keys & act on some
Function SY0Z-23000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (SY0ZW01.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set SY0ZW03 empty; /* M002 display storage*/
    end

    SY0ZW01.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Goal Documentation*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CATOAP = "SY0N"; /* Product Style Menu*/
  end

  if (converseVar.eventKey is pf4) /* or PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Goal Master Menu*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* PF3 was pressed*/
   || converseVar.eventKey is pf4) /* PF4 was pressed*/

    SY0ZS-TA0050-STY-P(); /* Purge any temporary storage*/

    XSEXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end
   /*  */
   /* ------------------------------------------------------------*/
   /* PF12 is used to accept the new words marked as 'restrict'*/
   /* or 'phrase'.  Must have update authority to use PF12.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* Scroll forward requested*/
    if (COMMAREA.CACHGFL == "Y") /* Security Update allowed*/

      return; /* Return to previous process*/

    else

      converseLib.validationFailed(225); /* not allowed to update*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid PF Key was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter /* ENTER was pressed*/
  )                                
    SY0ZW01.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(222); /* ENTER key not active at this time*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey not pf7 /* If PF7 was not pressed*/
   && converseVar.eventKey not pf8 /* and PF8 was not pressed*/
   && converseVar.eventKey not pf9 /* and PF9 was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/

    SY0ZW01.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(19); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end SY0Z-23000

// Verify data that was entered
Function SY0Z-24000()
   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    SY0Z-24200(); /* Verify scroll request*/

  end

   /* ------------------------------------------------------------*/
   /* List Trademarks Map processing requested, change Map code to'1'*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9 /* List Trademarks process requested*/
  )                              
    SY0ZW01.XXX-MAP-DSP-CD = "1"; /* Set to display sy0zm001 map*/
    SY0ZW01.XXX-RQT-DATA-FL = "Y"; /* Request Tdmk data be Built*/
    SY0ZW01.SY0ZW-DATA-SRC = "TS"; /* Start with Translation Tdmks*/
    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, verify any modifiable data that was changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12 /* Insert new Restriction requested*/
  )                               
    SY0Z-24300(); /* Edit restriction action & do action.*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end SY0Z-24000

// Verify scroll request
Function SY0Z-24200()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && SY0ZW01.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    SY0ZW01.XXX-MSG-LOC-ID = "24200"; /* Message location*/
    converseLib.validationFailed(69); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && SY0ZW01.XXX-CURR-PAGE-NBR >= SY0ZW01.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    SY0ZW01.XXX-MSG-LOC-ID = "24200"; /* Message location*/
    converseLib.validationFailed(223); /* End of Style Names to review*/

  end


end // end SY0Z-24200

// Verify line data/Insert Tdmks
Function SY0Z-24300()
   /* ------------------------------------------------------------*/
   /* If new Word Restriction entered, verify restriction(s) have*/
   /* been entered correctly prior to processing request.*/
   /* ------------------------------------------------------------*/

  SY0ZW01.SY0ZW-WORD-CNT = WSY1460.WSY1460-WORD-CNT;
  set WSY1460 empty;

  SY0ZW01.XXX-INX-FLD-NBR = 1; /* Initialize Map2 edit index*/
  sysVar.arrayIndex = 1; /* Initialize WSY1460 word index*/

  while (SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.XXX-INX-LMT-NBR
   && SY0ZW01.XXX-INX-FLD-NBR <= SY0ZW01.SY0ZW-WORD-CNT)

    if (SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] != " ")

      if (SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] == "R")
        SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] = "RESTRICT";
      end

      if (SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] == "RESTRICT")

        WSY1460.WSY1460-STY-NM-WORD[sysVar.arrayIndex] = SY0ZM002.SY0ZW-STY-WORD[XXX-INX-FLD-NBR];
        sysVar.arrayIndex = sysVar.arrayIndex + 1;

      else

        if (SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] == "P")
          SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] = "PHRASE";
        end

        if (SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] == "PHRASE  ")

          WSY1460.WSY1460-STY-NM-WORD[sysVar.arrayIndex] = SY0ZM002.SY0ZW-STY-WORD[XXX-INX-FLD-NBR];
          sysVar.arrayIndex = sysVar.arrayIndex + 1;

        else

          if (SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] != "PHR.DONE"
           && SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] != "DONE    ")

            SY0ZW01.XXX-MSG-LOC-ID = "24300"; /* Message location*/
            converseLib.validationFailed(224); /* Invalid Restriction Action*/
            set SY0ZM002.SY0ZW-STY-WORD-ACT[XXX-INX-FLD-NBR] cursor, bold;
            return;

          end

        end

      end

    end

    SY0ZW01.XXX-INX-FLD-NBR = SY0ZW01.XXX-INX-FLD-NBR + 1; /* Incr index*/

  end

  sysVar.arrayIndex = sysVar.arrayIndex - 1; /* Reduce Index to true word count*/

  if (sysVar.arrayIndex > 0) /* Restriction Action is Word or Phrase*/

    WSY1460.WSY1460-WORD-CNT = sysVar.arrayIndex; /* # Wrds*/

    XX0XS01(); /* Obtain System Date and Time*/

    WSY1460.ZZZSDT = XX0XW01.XX0XWDAT; /* Sys Dt to WSY1460 Dt*/
    WSY1460.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Sys Dt to WSY1460 Ch Dt*/
    WSY1460.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Sys Tm to WSY1460 Time*/

    SY0ZS-SY1460-IN(); /* Call SY1460 to insert Tdmk*/

  end

  SY0ZS-VTRDRV01-D(); /* Call VTRDRV01 to Delete Style Id*/


end // end SY0Z-24300

// Process PF7, PF8, PF12 request
Function SY0Z-25000()
   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If Restricted Word(s) or Phrase Trademark has been added,*/
   /* increment the page number to read next Style Name in Temp Stg.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* Scroll forward requested*/

    SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-CURR-PAGE-NBR + 1;
                                 /* Increment page number*/
    if (SY0ZW01.XXX-CURR-PAGE-NBR > SY0ZW01.XXX-HI-PAGE-NBR)
      SY0ZW01.XXX-CURR-PAGE-NBR = SY0ZW01.XXX-HI-PAGE-NBR;
    end

    SY0ZW01.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end


end // end SY0Z-25000

// Check Style Name Restriction
Function SY0ZS-SY1460-CK()
   /* ------------------------------------------------------------*/
   /* Send Full Style Name to sub-program so it will be parsed*/
   /* into individual words.  Then each word is checked and*/
   /* marked if the word or a phrase is already trademark restricted.*/
   /* ------------------------------------------------------------*/
  set WSY1460 empty;

  WSY1460.WSY1460-OPTION-CODE = "CK";

  WSY1460.WSY1460-SY-STY-NM = SY0ZW03.SY-STY-NM;

  call "SY1460" (WSY1460) {isNoRefresh = yes, isExternal = yes}; /* Check for Tdmk Restrictions*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 00 /* Sqlcode zero*/
   || WSY1460.WSY1460-RETURN-CODE == 02) /* Sqlcode=Notfound*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 98) /* Resource not available*/

    converseLib.validationFailed(101); /* Data in use by another appl.*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "ABND"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SY0ZS-SY1460-CK"; /* Description*/
  TA1REC.TA1DBASE = "NIKEBOTH"; /* Data base name*/
  TA1REC.TA1TBLVU = "SY1460CK"; /* Table view name*/
  TA1REC.TA1TBLKE = WSY1460.WSY1460-SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1460-CK

// Close Word/Phrase Tdmk Cursor
Function SY0ZS-SY1460-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/
  WSY1460.WSY1460-OPTION-CODE = "CS";

  try
    call "SY1460" (WSY1460) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 00) /* Normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "NIKEBOTH"; /* Data base name*/
  TA1REC.TA1TBLVU = "SY1460  "; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1460-CS

// Delete Tdmk Word or Phrase
Function SY0ZS-SY1460-DE()
   /* ------------------------------------------------------------*/
   /* Delete selected row from table.*/
   /* ------------------------------------------------------------*/

  WSY1460.WSY1460-OPTION-CODE = "DE"; /* SY1460 Delete Parm*/

  try
    call "SY1460" (WSY1460) {isNoRefresh = yes, isExternal = yes};
  end /* Delete Word or Phrase*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 00)

    return;

  end

   /* ------------------------------------------------------------*/
   /* If requested Word or Phrase to delete cannot be found,*/
   /* display map message.*/
   /* ------------------------------------------------------------*/
  if (WSY1460.WSY1460-RETURN-CODE == 02) /* Row not Found*/

    SY0ZW01.XXX-MSG-LOC-ID = "SY1460DE";
    converseLib.validationFailed(221); /* Cannot find Phrase/Word to delete*/
    set SY0ZM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
    return;

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE ROW IN TABLE"; /* Description*/
  TA1REC.TA1DBASE = "NIKEBOTH"; /* Data base name*/
  TA1REC.TA1TBLVU = "SY1460DE"; /* Table view name*/
  TA1REC.TA1TBLKE = WSY1460-SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1460-DE

// Insert Tdmk Word or Phrase
Function SY0ZS-SY1460-IN()
   /* ------------------------------------------------------------*/
   /* Insert new restriction into vtrdwd01 (Trademark Word Tbl)*/
   /* or vtrdph01 (Trademark Phrase Tbl)*/
   /* ------------------------------------------------------------*/

  WSY1460.WSY1460-OPTION-CODE = "IN";

  call "SY1460" (WSY1460) {isNoRefresh = yes, isExternal = yes}; /* Insert Tdmk Restrictions*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 00 /* Sqlcode zero*/
   || WSY1460.WSY1460-RETURN-CODE == 02) /* Sqlcode +100, not found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT TRADEMARK RESTRICTION"; /* Description*/
  TA1REC.TA1DBASE = "NIKEBOTH"; /* Data base name*/
  TA1REC.TA1TBLVU = "SY1460IN"; /* Table view name*/
  TA1REC.TA1TBLKE = WSY1460.WSY1460-SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1460-IN

// Fetch Next Word/Phrase Tdmk
Function SY0ZS-SY1460-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  WSY1460.WSY1460-OPTION-CODE = "SN"; /* Fetch Next Row*/

  try
    call "SY1460" (WSY1460) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch nextrow*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 00) /* Wsy1460 Good Return*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If end of the selected set, indicate end of cursor.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 01) /* End of Select Set*/

    SY0ZW01.SY0ZW-TDMK-EOF-FL = "Y"; /* End of cursor*/
    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "NIKEBOTH"; /* Data base name*/
  TA1REC.TA1TBLVU = "SY1460  "; /* Table view name*/
  TA1REC.TA1TBLKE = WSY1460-SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1460-SN

// Select Word/Phrase Tdmks
Function SY0ZS-SY1460-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  WSY1460.WSY1460-OPTION-CODE = "SS"; /* Declare Cursor SY1460*/

  call "SY1460" (WSY1460) {isNoRefresh = yes, isExternal = yes}; /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (WSY1460.WSY1460-RETURN-CODE == 00) /* Good Return SY1460*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "NIKEBOTH"; /* Data base name*/
  TA1REC.TA1TBLVU = "SY1460  "; /* Table view name*/
  TA1REC.TA1TBLKE = WSY1460-SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1460-SS

// Close Style Name Cursor
Function SY0ZS-SY1500-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  call "SY1500" ("CS", SQLCA, SY0ZW04) {isNoRefresh = yes, isExternal = yes}; /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDRV01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1500-CS

// Fetch Next Style Name
Function SY0ZS-SY1500-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "SY1500" ("SN", SQLCA, SY0ZW04) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    return; /* Return to previous process*/

  end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

    SY0ZW01.SY0ZW-TDMK-EOF-FL = "Y"; /* End of cursor*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDRV01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY0ZW04.SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1500-SN

// Declare Cursor for Style Names
Function SY0ZS-SY1500-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "SY1500" ("SS", SQLCA, SY0ZW04) {isNoRefresh = yes, isExternal = yes};
  end /* ;/* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDRV01"; /* Table view name*/
  TA1REC.TA1TBLKE = SY0ZW04.SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-SY1500-SS

// Add page to temporary storage
Function SY0ZS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  SY0ZW02.XXX-TEMP-STG-LNTH = SY0ZW01.SY0ZW-SY0ZW02-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (SY0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set SY0ZW02 empty; /* M001 display storage*/

    SY0ZW01.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD MAP 1 PAGE TO TEMP.STORAG"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-A

// Purge any temporary storage
Function SY0ZS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set SY0ZW02 empty; /* M001 display storage*/

  SY0ZW01.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  SY0ZW01.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (SY0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE MAP1 TEMP. STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-P

// Read temporary storage page
Function SY0ZS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  SY0ZW02.XXX-TEMP-STG-LNTH = SY0ZW01.SY0ZW-SY0ZW02-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = SY0ZW01.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (SY0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  SY0ZW01.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = SY0ZW01.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ MAP 1 TEMP.STORAG.PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-R

// Add page to Style Name TS Que
Function SY0ZS-TA0050-STY-A()
   /* ------------------------------------------------------------*/
   /* Add Style Name Review record to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  SY0ZW03.XXX-TEMP-STG-LNTH = SY0ZW01.SY0ZW-SY0ZW03-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (SY0ZW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add record*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set SY0ZW03 empty; /* M002 display storage*/

    SY0ZW01.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD MAP2 RECD TO TEMP. STORAGE"; /* Desc*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-STY-A

// Purge any temporary storage
Function SY0ZS-TA0050-STY-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set SY0ZW03 empty; /* M002 display storage*/

  SY0ZW01.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  SY0ZW01.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (SY0ZW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE MAP2 TEMPORARY STORAG"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-STY-P

// Read temporary storage page
Function SY0ZS-TA0050-STY-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  SY0ZW03.XXX-TEMP-STG-LNTH = SY0ZW01.SY0ZW-SY0ZW03-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = SY0ZW01.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (SY0ZW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  SY0ZW01.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = SY0ZW01.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ MAP 2 TEMP.STORAG.PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-STY-R

// Update Temp.Storage Page, Map2
Function SY0ZS-TA0050-STY-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (SY0ZW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  SY0ZW01.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = SY0ZW01.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE MAP2 TEMP.STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-STY-U

// Update temp.storage page, Map1
Function SY0ZS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (SY0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  SY0ZW01.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = SY0ZW01.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE MAP 1 TEMP.STORAG.PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-TA0050-U

// Delete Style from Review list
Function SY0ZS-VTRDRV01-D()
   /* ------------------------------------------------------------*/
   /* Delete the specified row in the table.*/
   /* ------------------------------------------------------------*/

  VTRDRV01.SY-STY-ID = SY0ZW03.SY-STY-ID;

  try
    call "VTRDRV01" ("D ", SQLCA, VTRDRV01) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    SY0ZW01.SY0ZW-TOT-STY-REV = SY0ZW01.SY0ZW-TOT-STY-REV - 1;
                                 /* Decrement 1 from Styles to be reviewed*/

    SY0ZW03.SY0ZW-STY-ACT-FL = "Y"; /* Set Flag that Style deleted*/
    SY0ZS-TA0050-STY-U(); /* Update temp.storage queue*/

    return; /* Return to previous process*/

  end
   /* ------------------------------------------------------------*/
   /* If the call was NOT successful, then delete was already done.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 100) /* Row Not Found return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  SY0ZW01.XXX-MSG-LOC-ID = "VTRDRV01D"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = SY0ZW01.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "DELETE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDRV01"; /* TABLE VIEW NAME*/
  TA1REC.TA1TBLKE = SY0ZW03.SY-STY-NM; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-VTRDRV01-D

// Close Tdmk Translation Cursor
Function SY0ZS-VTRDTS01-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "VTRDTS01" ("CS", SQLCA, VTRDTS01) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(217); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDTS01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-VTRDTS01-CS

// Delete Tdmk Translation Row
Function SY0ZS-VTRDTS01-D()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTRDTS01" ("D ", SQLCA, VTRDTS01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Call successful*/
  )                           
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE ROW FROM TABLE"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDTS01"; /* Table view name*/
  TA1REC.TA1TBLKE = VTRDTS01.VTRDTS01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-VTRDTS01-D

// Fetch Next Tdmk Translation
Function SY0ZS-VTRDTS01-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTRDTS01" ("SN", SQLCA, VTRDTS01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      SY0ZW01.SY0ZW-TDMK-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDTS01"; /* Table view name*/
  TA1REC.TA1TBLKE = VTRDTS01.VTRDTS01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-VTRDTS01-SN

// Select Tdmk Translations
Function SY0ZS-VTRDTS01-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VTRDTS01" ("SS", SQLCA, VTRDTS01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(101); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(217); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTRDTS01"; /* Table view name*/
  TA1REC.TA1TBLKE = VTRDTS01.VTRDTS01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end SY0ZS-VTRDTS01-SS

//*** RECORD=SY0ZW01 ****
// ------------------------------------------------------------
// Application working storage for items used in both maps.
// ------------------------------------------------------------
// 07-10-95  BCourt  Create record.
// 10-26-95  BCourt  Add cnt-actions.
// ***********************
Record SY0ZW01 type basicRecord
  5 SY0ZW01-GROUP char(45) ; // sy0zw01 group level
    10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
    10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
    10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
    10 SY0ZW-SY0ZW02-LNTH SY0ZW-SY0ZW02-LNTH ; 
    10 SY0ZW-SY0ZW03-LNTH SY0ZW-SY0ZW03-LNTH ; 
    10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
    10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
    10 SY0ZW-WORD-CNT SY0ZW-WORD-CNT ; 
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-MSG-NBR XXX-MSG-NBR ; 
    10 SY0ZW-TDMK-EOF-FL SY0ZW-TDMK-EOF-FL ; 
    10 SY0ZW-DATA-SRC SY0ZW-DATA-SRC ; 
    10 SY0ZW-TSQ-FL SY0ZW-TSQ-FL ; 
    10 SY0ZW-XCT-CTRY-CD-PREV SY0ZW-XCT-CTRY-CD-PREV ; 
    10 SY0ZW-TDMK-DEL-FL SY0ZW-TDMK-DEL-FL ; 
    10 SY0ZW-TOT-STY-REV SY0ZW-TOT-STY-REV ; 
    10 SY0ZW-CNT-ACTION SY0ZW-CNT-ACTION ; 
end // end SY0ZW01

//*** RECORD=SY0ZW02 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record SY0ZW02 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 * char(816) ; 
    10 XCT-CTRY-CD XCT-CTRY-CD [12] ; 
    10 ZFL-LANG-CD ZFL-LANG-CD [12] ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [12] ; 
    10 SY-TDMK-TXT SY-TDMK-TXT [12] ; 
    10 SY-TDMK-TRSL-TXT SY-TDMK-TRSL-TXT [12] ; 
    10 SY-TDMK-PHS-FL SY-TDMK-PHS-FL [12] ; 
end // end SY0ZW02

//*** RECORD=SY0ZW03 ****
// ------------------------------------------------------------
// Map 002 display storage.  Hold 12 occurences of style words
// and style word actions.  Also hold flag where Y = action
// already accepted via PF12.
// ------------------------------------------------------------
// 07-10-95 BCourt  Record created.
// ***********************
Record SY0ZW03 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 SY0ZW02-GROUP SY0ZW02-GROUP ; 
    10 SY-STY-ID SY-STY-ID ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 SY-STY-NBR SY-STY-NBR ; 
    10 SY-STY-NM SY-STY-NM ; 
    10 SY0ZW-STY-ACT-FL SY0ZW-STY-ACT-FL ; 
end // end SY0ZW03

//*** RECORD=SY0ZW04 ****
// Passing record to i/o mod sy1500
// 
// ------------------------------------------------------------
// Maintenance Log:
// 05-03-95 by BCourt  Created.
// ***********************
Record SY0ZW04 type basicRecord
  5 SY0ZW03-GROUP SY0ZW03-GROUP ; 
    10 SY-STY-ID SY-STY-ID ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 SY-STY-NBR SY-STY-NBR ; 
    10 SY-STY-NM SY-STY-NM ; 
end // end SY0ZW04

// trademark phrase flag
DataItem SY-TDMK-PHS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Count # of 'delete' actions
DataItem SY0ZW-CNT-ACTION smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data source: trans or USA
DataItem SY0ZW-DATA-SRC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// style action flag
DataItem SY0ZW-STY-ACT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem SY0ZW-SY0ZW02-LNTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// Temporary storage length
DataItem SY0ZW-SY0ZW03-LNTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// trademark delete flag
DataItem SY0ZW-TDMK-DEL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file flag
DataItem SY0ZW-TDMK-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total styles to be reviewed
DataItem SY0ZW-TOT-STY-REV smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage queue flag
DataItem SY0ZW-TSQ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// count # words in style or phrs
DataItem SY0ZW-WORD-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// previous country code
DataItem SY0ZW-XCT-CTRY-CD-PREV char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group length for sy0zw02
DataItem SY0ZW02-GROUP char(43)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group length for sy0zw03
DataItem SY0ZW03-GROUP char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

