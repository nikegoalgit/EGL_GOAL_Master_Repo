package sy0n;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=SY0N ****
// nike product database menu
// 
// overview: this application is the menu used for selecting
//           the applications within the product sub system
//           the application will transfer a user to the
//           requested application based upon their security
//           clearance.
// 
// date created: 04/23/86
//       author: scott russell
// 
// maintenance history:
// 
//  chg  date     by whom     overview of changes made
//  --- --------  ----------  ---------------------------------
//  01  09-17-87  M. BUHITE   ADD OPTION 13 FOR size weights.
//  02  11-25-87  M. BUHITE   add access via inquiry flags
//                            <formerly only via add flags).
//  03  12-21-87  m. Buhite   add option 14 for offering data.
//  04  12-07-88  m. Buhite   chg option 14 title (add style).
//      04-17-89  VCowan      added XSSEGTR logic
//  --  04-17-89  jwood       added noncsp option logic
//      11-29-89  MHALST      Add SY0X, Reformat Screen
//      01-22-90  MHALST      Add SY0W and SY0Y
//      11-29-90  MHALST      Clean-up fastpath processing.
//      05-06-93  MHALST      Add option for RY0C (Royalties)
//      06-28-95  MHALST      Remove flag checking for inquiry
//      03-09-96  BCourt      Add Options 19+20 for Languages.
//      11-19-97  NGANGO      y2k modifications.
//               Regenerated to pickup XX0XS01 changes .
//       09-11-02 PVENKA     Removed the reference to SY0N
//  from  the table SY0NTBL
//  --- --------  ----------  ---------------------------------
// *********************
Program SY0N type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SY0NWREC SY0NWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SY0NTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use SY0NM.SY0NM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0N001: SY0N001();
    SY0N005: SY0N005();


        /* ****************************************************/
        /* *             branch to converse                  **/
        /* ****************************************************/


    goto SY0N005; /* branch to converse*/



  end // end main
end // end SY0N

// program init
Function SY0N001()



     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* **********************************************************/


     /* **********************************************************/
     /* *               check entry security                    **/
     /* **********************************************************/

  XSENTRY(); /* security check*/

  XSSEGTR(); /* set segmented transaction id*/


     /* **********************************************************/
     /* *                    initialize map                     **/
     /* **********************************************************/

  SY0NM001.SY0NMDT = VGVar.currentShortGregorianDate;
  SY0NM001.XGPCD = COMMAREA.XGPCD;



end // end SY0N001

// converse map to select option
Function SY0N005()
      /* *********************************************************/
      /* * this process converses the map, edits the entered    **/
      /* * fields and if possible, xfer's to the requested      **/
      /* * application                                          **/
      /* *********************************************************/

      /* *********************************************************/
      /* Change Log:                                            **/
      /* 03-09-96  BCourt  Check Security when not the new      **/
      /* inquiry option number 19.            **/
      /* Pass Inquiry/Maint. option to SY0U.  **/
      /* *********************************************************/

      /* *********************************************************/
      /* *       force segmented converse execution mode        **/
      /* *********************************************************/

  converseVar.segmentedMode = 1; /* force segmented execution mode*/



  converse SY0NM001 ;


      /* *********************************************************/
      /* *              clear message fields                    **/
      /* *********************************************************/

  SY0NM001.VAGen_EZEMSG = " "; /* clear err msg*/
  SY0NM001.SY0NMMSG = " "; /* clear err msg*/


      /* *********************************************************/
      /* *       check and process valid aid key requests       **/
      /* *********************************************************/

      /* *********************************************************/
      /* *           enter - continue processing                **/
      /* * pa2 - restart application                            **/
      /* * pf1 - transfer to help application                   **/
      /* * pf3 - transfer to next level up application          **/
      /* * pf4 - transfer to master menu application            **/
      /* *********************************************************/

  if (converseVar.eventKey is enter)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pa2) /* check for system exit*/
      COMMAREA.CATOAP = "SY0N";
      XSEXIT();
    else
      if (converseVar.eventKey is pf1) /* check for system help*/
        XSPF1(); /* help facility*/
        SY0NM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
        COMMAREA.CATOAP = " "; /* clear app*/
        exit stack;
      else
        if (converseVar.eventKey is pf3) /* check for master menu level*/
          XSPF4(); /* invoke master menu request*/
          SY0NM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
          COMMAREA.CATOAP = " "; /* clear app*/
          exit stack;
        else
          if (converseVar.eventKey is pf4) /* check for master menu*/
            XSPF4(); /* invoke master menu request*/
            SY0NM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
            COMMAREA.CATOAP = " "; /* clear app*/
            exit stack;
          else
            SY0NM001.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY";
            exit stack;
          end
        end
      end
    end
  end


      /* *********************************************************/
      /* *                   reset map attributes              **/
      /* *********************************************************/

  set SY0NM001.SY0NMOPT initialAttributes;
  set SY0NM001.SY0NMXAP initialAttributes;


      /* *********************************************************/
      /* *             Process Fastpath if entered              **/
      /* *********************************************************/

  if (SY0NM001.SY0NMXAP != " ") /* fastpath entered*/
    if (SY0NM001.SY0NMOPT > 0) /* if both selected then tell user*/
      set SY0NM001.SY0NMOPT cursor, modified, bold; /* field error*/
      set SY0NM001.SY0NMXAP modified, bold; /* field error*/
      SY0NM001.VAGen_EZEMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
      SY0NM001.SY0NMMSG = "PLEASE ERASE ONE";
      COMMAREA.CATOAP = " "; /* clear appl*/
      exit stack; /* branch to flow*/
    else
      COMMAREA.CATOAP = SY0NM001.SY0NMXAP;
      COMMAREA.CAITEM = SY0NM001.SY0NMXIT; /* save reqstd item*/
      XSEXIT(); /* pass control to exit routine*/
      SY0NM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      set SY0NM001.SY0NMXAP cursor, modified, bold; /* set select*/
      exit stack;
    end
  end


      /* *********************************************************/
      /* *            process selected application              **/
      /* *********************************************************/

  if (SY0NM001.SY0NMOPT == 0) /* null?*/
    SY0NM001.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    set SY0NM001.SY0NMOPT cursor, bold; /* field error*/
    exit stack; /* branch to flow*/
  else
    if (SY0NM001.SY0NMOPT in SY0NTBL.SY0NTOPT)
      COMMAREA.CATOAP = SY0NTBL.SY0NTAPP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0) /* test for not found in table*/
      SY0NM001.VAGen_EZEMSG = "INVALID APPLICATION SELECTED - REENTER";
      set SY0NM001.SY0NMOPT cursor, bold; /* field error*/
      exit stack; /* branch to flow*/
    end
  end


      /* *********************************************************/
      /* *       if no general product class was input          **/
      /* *                  ask user to input                   **/
      /* *********************************************************/

  if (SY0NM001.XGPCD == " ") /* if no general product class input*/
    SY0NM001.VAGen_EZEMSG = "PLEASE ENTER YOUR GPC CODE  ";
    set SY0NM001.XGPCD cursor, bold;
    exit stack; /* branch to flow*/
  else
    if (SY0NM001.XGPCD in XGPTBL.XGPCD)
      SY0NWSTA = XGPTBL.XXXSTAT[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0) /* test for not found in table*/
      SY0NM001.VAGen_EZEMSG = "INVALID GENERAL PRODUCT CLASS - REENTER";
      set SY0NM001.XGPCD cursor, bold; /* field error*/
      exit stack; /* branch to flow*/
    else
      COMMAREA.XGPCD = SY0NM001.XGPCD; /* placecommarea*/
    end
  end


      /* *********************************************************/
      /* *       verify user is authorized for gpc              **/
      /* *                input  (footwear & apparel only)      **/
      /* *********************************************************/

  if (SY0NM001.SY0NMOPT != 12 /* is user accessing inquiry modules ?*/
   && SY0NM001.SY0NMOPT != 19) /* (if option 12 or 19 - skip this)*/
    if (SY0NM001.XGPCD == "02") /* if general product class input= foot*/
      if (COMMAREA.CAALVL[2] == "Y" /* check commarea authorization*/
       || COMMAREA.CAILVL[2] == "Y") /* check commarea authorization*/
            /* next sentence*/
      else
        converseLib.validationFailed(35); /* user not authorized for gpc*/
        COMMAREA.XGPCD = " "; /* blank commarea gpc*/
        set SY0NM001.XGPCD cursor, bold; /* highlight input gpc*/
        exit stack; /* branch to flow*/
      end
    end

    if (SY0NM001.XGPCD == "03") /* if general product class input= app*/
      if (COMMAREA.CAALVL[3] == "Y" /* check commarea authorization*/
       || COMMAREA.CAILVL[3] == "Y") /* check commarea authorization*/
            /* next sentence*/
      else
        converseLib.validationFailed(35); /* user not authorized for gpc*/
        COMMAREA.XGPCD = " "; /* blank commarea gpc*/
        set SY0NM001.XGPCD cursor, bold; /* highlight input gpc*/
        exit stack; /* branch to flow*/
      end
    end
  end

      /* *********************************************************/
      /* * all is good; set message flag for SY0U Languages     **/
      /* *********************************************************/

  if (SY0NM001.SY0NMOPT == 19) /* If option 19 or 20*/
    COMMAREA.CAUSERA = "I"; /* move in 'inquiry'*/
  else
    if (SY0NM001.SY0NMOPT == 20)
      COMMAREA.CAUSERA = "M"; /* or 'maintenance'*/
    end /* to show on SY0U screens.*/
  end

      /* *********************************************************/
      /* *         all is good; check for transfer              **/
      /* *********************************************************/

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP != " ") /* transfer to appl?*/

      XSEXIT(); /* pass control to exit routine*/
      SY0NM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      set SY0NM001.SY0NMOPT cursor, modified, bold; /* set select*/
      exit stack;
    end
  end

end // end SY0N005

Record SY0NWREC type basicRecord
  10 SY0NWSTA SY0NWSTA ; 
end // end SY0NWREC

DataItem SY0NWSTA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

