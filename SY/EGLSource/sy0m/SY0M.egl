package sy0m;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=SY0M ****
// this application is only a csp sub menu. it will assit the
// user to select which function they wish to execute the first
// time into the application. there are no call to db2.
// 
// ************************************************************
// maintenance:
// 
//   rev.
// number  who       when         why
// ------  -------   --------     -----------------------------
// 00      jricha    06-24-86     created application
//         VCowan    03-17-89     added XSSEGTR logic
// -spl-   jwood     04-17-89     added noncsp option logic
//         MHALST    04-02-90     DB2 changes, remove XTV
//         NGANGO    11-19-97     y2k modifications.
//                             Regenerated for XX0XS01 changes.
//         MHALST    03-24-99     Add PF18 option for 2nd qual
//                                UPC assignment (calls SY03)
// ************************************************************
// 
// *********************
Program SY0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SYWREC SYWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use SY0MM.SY0MM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0M001: SY0M001();

         /* ***************************************/
         /* *  go to the next process            **/
         /* *                                    **/
         /* ***************************************/

    goto SY0M005;
    SY0M005: SY0M005();

         /* ***************************************/
         /* *                                    **/
         /* *                                    **/
         /* ***************************************/

    if (converseVar.validationMsgNum > 0)
      goto SY0M005;
    else
      converseLib.validationFailed(19);
      goto SY0M005;
    end
  end // end main
end // end SY0M

// application initialization
Function SY0M001()

       /* *****************************************/
       /* * 1. init. application.                **/
       /* * 2. set all rec & maps to empty       **/
       /* *    and clear.                        **/
       /* * 3. if the commarea.xgpcd is diff.    **/
       /* *    than the sywrec.xgpcd use the     **/
       /* *    sywrec.xgpcd because the user     **/
       /* *    must have transfered into this    **/
       /* *    application with the sywrec.xgpcd **/
       /* * 4. validate the gpc code.            **/
       /* *                                      **/
       /* *****************************************/

  XSENTRY(); /* security check*/

  XSSEGTR(); /* set segemented transaction id*/

  set SYWREC empty;

  set SY0MM001 initial;

  SY0MM001.XGPCD = COMMAREA.XGPCD;
  SY0MM001.SYMREV = "00";

  SY0MSAB(); /* validate gpc code*/


end // end SY0M001

// display prod. sub. menu
Function SY0M005()

       /* ***************************************/
       /* * get style number and then retrieve **/
       /* * the style row.                     **/
       /* ***************************************/


  SY0MM001.SYMTTLNM = "  PRODUCT SUB-MENU - CHG    ";
  SY0MM001.SYMPRONM = "SY0M005";
  SY0MM001.SYMCURDT = VGVar.currentShortGregorianDate;


  converseVar.segmentedMode = 1;


   /* ***********************************************************/
  converse SY0MM001 ;
   /* ***********************************************************/



  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16
   || converseVar.eventKey is pf17
   || converseVar.eventKey is pf18
   || converseVar.eventKey is enter)
    /* next sentence*/
  else
    exit stack;
  end

       /* ***************************************/
       /* *   check pf keys                    **/
       /* ***************************************/

  SY0MSCA();
  SY0MSAB();

       /* ***************************************/
       /* *   check pfkeys control will be     **/
       /* *   passed to one of the following   **/
       /* *   applications.                    **/
       /* *                                    **/
       /* *    pf13 = sy01 chg. style scr. 1   **/
       /* *    pf14 = sy01 chg. style scr. 2   **/
       /* *    pf15 = sy04 chg. color menu     **/
       /* *    pf16 = sy02 chg. color scr.     **/
       /* *    pf17 = sy03 chg. size scr.      **/
       /* *    pf18 = sy03 chg. size scr.      **/
       /* *                                    **/
       /* ***************************************/

  SY0MSCB();

end // end SY0M005

// validate gpc code
Function SY0MSAB()

       /* ******************************************/
       /* *  VERIFY GENERAL PRODUCT CLASS CODE    **/
       /* ******************************************/

  if (SY0MM001.XGPCD == "99")
    converseLib.validationFailed(3); /* invalid code*/
    set SY0MM001.XGPCD cursor, bold;
    SY0MM001.XGPDESC = "INVALID";
    return;
  end

  if (SY0MM001.XGPCD in XGPTBL.XGPCD)
    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      SY0MM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(65); /* status code is inactive*/
      set SY0MM001.XGPCD cursor, bold;
      SY0MM001.XGPDESC = "INACTIVE";
      exit stack;
    end
  else
    set SY0MM001.XGPCD cursor, bold;
    converseLib.validationFailed(3); /* invalid code*/
    SY0MM001.XGPDESC = "INVALID";
    exit stack;
  end


       /* ******************************************/
       /* *  CHECK IF USER  IS AUTHORIZED         **/
       /* *  FOR THIS GPC CODE                    **/
       /* ******************************************/

  if (SY0MM001.XGPCD == "02"
   && COMMAREA.CAALVL[2] == "N")
    set SY0MM001.XGPCD cursor, bold;
    converseLib.validationFailed(35); /* not authorized to access gpc*/
    SY0MM001.XGPDESC = "INVALID";
    exit stack;
  else
    if (SY0MM001.XGPCD == "03"
     && COMMAREA.CAALVL[3] == "N")
      set SY0MM001.XGPCD cursor, bold;
      SY0MM001.XGPDESC = "INVALID CODE";
      converseLib.validationFailed(35); /* not authorized to access gpc*/
      exit stack;
    else
      /* next sentence*/
    end
  end

end // end SY0MSAB

// check for pf1 or pf4 keys
Function SY0MSCA()

   /* ******************************************/
   /* * CHECK FOR FUNCTION KEYS               **/
   /* ******************************************/

  if (converseVar.validationMsgNum > 0)
    return;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  else
    if (converseVar.eventKey is pf3)
      SY0MSCC(); /* transfer to sy0n application*/
      SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
      set SY0MM001 alarm;
      converseLib.validationFailed(1);
      exit stack;
    else
      if (converseVar.eventKey is pf4)
        XSPF4();
        SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
        set SY0MM001 alarm;
        converseLib.validationFailed(1);
        exit stack;
      end
    end
  end



end // end SY0MSCA

// transfer to chg. application
Function SY0MSCB()
       /* *********************************************/
       /* *  transfer to change application.         **/
       /* *********************************************/

  if (converseVar.validationMsgNum > 0)
    return;
  end

  SYWREC.XGPCD = SY0MM001.XGPCD;
  if (converseVar.eventKey is enter
   && SY0MM001.CATOAP != " ")
    move SY0MM001 to COMMAREA withV60Compat;
    XSEXIT();
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf13)
    SYWREC.SYWPFOPT = "PF13 ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY0MSCD(); /* transfer to sy01 chg style*/
                                   /* application screen #1*/
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf14)
    SYWREC.SYWPFOPT = "PF14 ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY0MSCD(); /* transfer to sy01 chg style*/
                                   /* application screen #2*/
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf15)
    SYWREC.SYWPFOPT = "PF15 ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY0MSCF(); /* transfer to sy04 color menu*/
                                   /* application*/
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf16)
    SYWREC.SYWPFOPT = "PF16 ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY0MSCG(); /* transfer to sy02 chg. color*/
                                   /* application*/
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf17)
    SYWREC.SYWPFOPT = "PF17 ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY0MSCH(); /* transfer to sy03 chg. size*/
                                   /* application*/
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end
  if (converseVar.eventKey is pf18)
    SYWREC.SYWPFOPT = "PF18 ";
    COMMAREA.CAUSERA = SYWREC.SYWTRANF;
    SY0MSCH(); /* transfer to sy03 chg. size*/
                                   /* application*/
    SY0MM001.SYMSCMSG = COMMAREA.CAMSG;
    set SY0MM001 alarm;
    converseLib.validationFailed(1);
    exit stack;
  end

end // end SY0MSCB

// transfer to product main menu
Function SY0MSCC()

       /* ***************************************/
       /* * transfer to produt main menu       **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY0N";
  XSEXIT();


end // end SY0MSCC

// transfer to sy01 scr. 1 appl.
Function SY0MSCD()

       /* *****************************************/
       /* * transfer to produt style chg. 1 of 1 **/
       /* * application                          **/
       /* *****************************************/

  COMMAREA.CATOAP = "SY01";
  XSEXIT();


end // end SY0MSCD

// transfer to sy04 appl.
Function SY0MSCF()


       /* ***************************************/
       /* * transfer to produt style color     **/
       /* * menu application                   **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY04";
  XSEXIT();



end // end SY0MSCF

// transfer to sy02 appl.
Function SY0MSCG()


       /* ***************************************/
       /* * transfer to produt color change    **/
       /* * application                        **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY02";
  XSEXIT();


end // end SY0MSCG

// transfer to sy03 appl.
Function SY0MSCH()

       /* ***************************************/
       /* * transfer to produt size  change    **/
       /* * application                        **/
       /* ***************************************/

  COMMAREA.CATOAP = "SY03";
  XSEXIT();


end // end SY0MSCH

