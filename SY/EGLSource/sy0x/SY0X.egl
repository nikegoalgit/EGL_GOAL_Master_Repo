package sy0x;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=SY0X ****
// ************************************************************
// *
// *   SY0X - Style Group Table Maintenance Program
// *
// *   This application will maintain the style group table
// *   (DPROD.VSYGRP01).  The records are displayed to the
// *   user in table form. Scrolling forward and number
// *   look-up functions are supported.  This program will
// *   examine the COMMAREA add/change flags to determine
// *   if the user can add/change or is inquiry only.
// *
// ************************************************************
// * Maintenance History
// *Rev #    Date    Who     Remarks
// *-----  --------  ------  ----------------------------------
// *       11-01-89  MHALST  Program Creation
// *       12-18-89  MHALST  Correct logic errors in validate
// *       01-25-90  MHALST  Add XSSEGTR to Init logic
// *       11-21-97  NGANGO  Y2K MODIFICATIONS.
// *                 Changed Map SY0XM001 to remove zero supp-
// *                 ression from Season Year and also Stmt.grp
// *                 SY0XS25, SY0XS31 and SY0XS35 to remove
// *                 non zero validation for Season Year.
// ************************************************************
// *********************
Program SY0X type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  SY0XW01 SY0XW01; // record
  SYBREC SYBREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XSETBL {deleteAfterUse = yes}; // table
  use XSNTBL {deleteAfterUse = yes}; // table
  use XTPTBL {deleteAfterUse = yes}; // table
  use SY0XM.SY0XM001 // form
   {
    validationBypassKeys = [pf3, pf4],
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SY0X000: SY0X000();

     /* Program should NEVER get here, but in case of some*/
     /* weird logic error, we'll do an EZECLOS just in case.*/

    exit program;
    SY0X001: SY0X001();
    SY0X100: SY0X100();
    SY0X105: SY0X105();
    SY0X200: SY0X200();
    SY0X250: SY0X250();
  end // end main
end // end SY0X

// Process Main Logic
Function SY0X000()
   /* *************************************************************/
   /* *                                                          **/
   /* *  SY0X Main Logic*/
   /* *                                                          **/
   /* *************************************************************/

  SY0X001(); /* init program*/

  SY0XW01.SY0XWEOA = "N";
  while (SY0XW01.SY0XWEOA == "N")
    SY0X100(); /* converse screen*/
  end

end // end SY0X000

// Initialize Program
Function SY0X001()

   /* Initialize program*/

  XSENTRY(); /* check security*/
  XSSEGTR(); /* set tran id*/

   /* clear working storage and screen records*/

  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  set SYWREC empty;
  set SY0XW01 empty;
  set SYBREC empty;
  set SY0XM001 initial;
  SY0XW01.SY0XWREV = "01"; /* Program revision number*/
  SY0XW01.SY0XWMAX = 13; /* lines of data on screen*/
  SY0XW01.SY0XWBLD = "Y"; /* Will need to build screen*/

   /* now check commarea to see what mode we're in*/

  if (COMMAREA.CAADDFL == "Y" /* ok to add*/
   || COMMAREA.CACHGFL == "Y") /* ok to change*/
    SY0XW01.SY0XWMOD = "A"; /* default to add*/
  else /* user can only inquiry*/
    SY0XW01.SY0XWMOD = "I"; /* so set flag*/
  end

   /* now get current date for screen*/

  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SYWREC.SYWTODAY = TA2REC.TA2GRGGN;
  end

end // end SY0X001

// Converse Screen SY0XM001
Function SY0X100()

  SY0XM001.SYMPRONM = "SY0X100"; /* process name*/
  SY0XM001.SYMCURDT = SYWREC.SYWTODAY; /* move date*/
  SY0XM001.SYMREV = SY0XW01.SY0XWREV; /* revision number*/

  if (converseVar.validationMsgNum == 0 /* no errors*/
   || converseVar.validationMsgNum == 11) /* or file update successfull*/
    SY0XS03(); /* set up screen*/
    if (SY0XW01.SY0XWBLD == "Y") /* need to build screen*/
      SY0X105(); /* do it*/
    end
  end

  converse SY0XM001 ;

  SY0XS01(); /* reset fields*/

  SY0XS02(); /* check PF keys (May exit)*/

  if (converseVar.validationMsgNum != 0 /* errors*/
   || converseVar.eventKey is pf8       /* or scrolling*/
   || converseVar.eventKey is pf13)     /* or mode change*/
    return; /* get out*/
  end

  if (SY0XW01.SY0XWMOD == "A") /* in add mode*/
    /* next sentence*/
  else
    if (SY0XM001.SY0XMSKE != " " /* search key entered*/
     || SY0XW01.SY0XWMOD == "I") /* or inquiry mode*/
      SY0XW01.SY0XWBLD = "Y";
      return;
    end
  end

  SY0X200(); /* validate/update logic*/

  if (converseVar.validationMsgNum == 0) /* successful update*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.commit();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* commit changes*/
    converseLib.validationFailed(11); /* file update successful*/
    if (SY0XW01.SY0XWMOD == "A") /* in add mode*/
      SY0XW01.SY0XWBLD = "Y"; /* build screen*/
    end
  end

end // end SY0X100

// Build Screen Array
Function SY0X105()

   /* build array and load to screen*/

  SY0XW01.SY0XWBLD = "N"; /* set flag to no build*/

   /* If we are in Add mode, 'building' the screen means clearing*/
   /* the old data off and moving to last style group entered*/
   /* to the 'last entry' field.*/
  if (SY0XW01.SY0XWMOD == "A") /* in add mode*/
    SY0XM001.SY0XMSKE = " ";
    set SY0XM001.SYBSTGNB[1] cursor;
    SYWREC.SYWINDXA = SY0XW01.SY0XWMAX;
    while (SYWREC.SYWINDXA >= 1)
      if (SY0XM001.SY0XMSKE == " "
       && converseVar.eventKey is enter)
        SY0XM001.SY0XMSKE = SY0XM001.SYBSTGNB[SYWINDXA];
      end
      SY0XM001.SYBSTGNB[SYWINDXA] = " ";
      SY0XM001.SYBSTGNM[SYWINDXA] = " ";
      SY0XM001.XSECD[SYWINDXA] = " ";
      SY0XM001.XSNYR[SYWINDXA] = 0;
      SY0XM001.XTPCD[SYWINDXA] = " ";
      SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
    end
    return; /* Don't need to do any more*/
  end

  if (SY0XM001.SY0XMSKE != " ") /* have search key*/
    SYBREC.SYBSTGNB = SY0XM001.SY0XMSKE;
    SY0XM001.SY0XMSKE = " "; /* clear key after use*/
  else
    SYBREC.SYBSTGNB = SY0XW01.SYBSTGNB[14];
    SY0XW01.SYBSTGNB[14] = " ";
  end

  call "IO3150" ("SS", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* we got problems*/
    TA1REC.TA1LOCAT[1] = "SY0X105";
    TA1REC.TA1LOCAT[2] = "OPEN";
    SY0XS99();
    return;
  end

  SY0XW01.SY0XWEOD = "N"; /* not end of data*/
  SYWREC.SYWINDXA = 1; /* start index*/
  while (SYWREC.SYWINDXA <= 14) /* start loop*/
    if (SY0XW01.SY0XWEOD == "N") /* not end of data*/
      call "IO3150" ("SN", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 100) /* end of data*/
        SY0XW01.SY0XWEOD = "Y"; /* set flag*/
        if (SYWREC.SYWINDXA == 1) /* nothing loaded*/
          converseLib.validationFailed(70); /* at end of data*/
        end
      else
        if (SQLCA.VAGen_SQLCODE != 0) /* bad stuff*/
          TA1REC.TA1LOCAT[1] = "SY0X105";
          TA1REC.TA1LOCAT[2] = "NEXT";
          SY0XS99();
          return;
        end
      end
    end
    if (SY0XW01.SY0XWEOD == "N") /* not end of data*/
      SY0XW01.SYBSTGNB[SYWINDXA] = SYBREC.SYBSTGNB;
      SY0XW01.SYBSTGNM[SYWINDXA] = SYBREC.SYBSTGNM;
      SY0XW01.XSECD[SYWINDXA] = SYBREC.XSECD;
      SY0XW01.XSNYR[SYWINDXA] = SYBREC.XSNYR;
      SY0XW01.XTPCD[SYWINDXA] = SYBREC.XTPCD;
      SY0XW01.ZZZCHGCT[SYWINDXA] = SYBREC.ZZZCHGCT;
    else
      SY0XW01.SYBSTGNB[SYWINDXA] = " ";
      SY0XW01.SYBSTGNM[SYWINDXA] = " ";
      SY0XW01.XSECD[SYWINDXA] = " ";
      SY0XW01.XSNYR[SYWINDXA] = 0;
      SY0XW01.XTPCD[SYWINDXA] = " ";
      SY0XW01.ZZZCHGCT[SYWINDXA] = 0;
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

  call "IO3150" ("CS", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* we got problems*/
    TA1REC.TA1LOCAT[1] = "SY0X105";
    TA1REC.TA1LOCAT[2] = "CLOSE";
    SY0XS99();
    return;
  end

   /* Now move table to screen*/

  SYWREC.SYWINDXA = 1; /* start index*/
  while (SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
    SY0XM001.SYBSTGNB[SYWINDXA] = SY0XW01.SYBSTGNB[SYWINDXA];
    SY0XM001.SYBSTGNM[SYWINDXA] = SY0XW01.SYBSTGNM[SYWINDXA];
    SY0XM001.XSECD[SYWINDXA] = SY0XW01.XSECD[SYWINDXA];
    SY0XM001.XSNYR[SYWINDXA] = SY0XW01.XSNYR[SYWINDXA];
    SY0XM001.XTPCD[SYWINDXA] = SY0XW01.XTPCD[SYWINDXA];
    if (SY0XM001.SYBSTGNB[SYWINDXA] == " "
     && SY0XM001.SYBSTGNM[SYWINDXA] == " ")
      set SY0XM001.SYBSTGNM[SYWINDXA] skip;
      set SY0XM001.XSECD[SYWINDXA] skip;
      set SY0XM001.XSNYR[SYWINDXA] skip;
      set SY0XM001.XTPCD[SYWINDXA] skip;
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

end // end SY0X105

// Validate/Update Screen Data
Function SY0X200()

   /* This routine will perform the following functions:*/
    /* 1. Validation*/
       /* Add Mode*/
           /* Check that the group style numbers do not currently*/
           /* exist on the style group data base.*/
       /* Change Mode*/
           /* Check that the user really changed something*/
    /* 2. Update/Insert the data base if validations pass*/


  SY0XW01.SY0XWUPD = "N"; /* set update flag no*/
  SYWREC.SYWINDXA = SY0XW01.SY0XWMAX; /* set index*/
  while (SYWREC.SYWINDXA >= 1) /* start loop*/
    if (SY0XW01.SY0XWMOD == "A") /* Add mode*/
      SY0XS21(); /* check add*/
    else /* must be change mode*/
      SY0XS31(); /* check change*/
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA - 1;
  end

  if (converseVar.validationMsgNum != 0) /* edits failed*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* roll back changes*/
  else /* no errors*/
    if (SY0XW01.SY0XWUPD == "Y") /* something to update*/
      SY0X250(); /* so update data base*/
    else /* no changes made*/
      converseLib.validationFailed(57); /* no changes made*/
    end
  end

end // end SY0X200

// Insert/Update style group rows
Function SY0X250()

   /* Update/Insert logic*/

  TA2REC.TA2DTOPT = "GETDATE"; /* first get date for zz stuff*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0) /* good return*/
    SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
    SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;
  else
    TA1REC.TA1LOCAT[1] = "SY0X250";
    TA1REC.TA1LOCAT[2] = "TA0040";
    TA1REC.TA1LOCAT[3] = TA2REC.TA2RTNCD;
    SY0XS99();
  end

  SYWREC.SYWINDXA = 1;
  while (converseVar.validationMsgNum == 0
   && SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
    if (SY0XW01.SY0XWMOD == "A") /* Add mode*/
      SY0XS25(); /* add style group*/
    else
      SY0XS35(); /* update style group*/
    end
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end

   /* Now rebuild internal table*/

  if (converseVar.validationMsgNum == 0 /* no errors*/
   && SY0XW01.SY0XWMOD == "C")          /* and change mode*/
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
      if (SY0XM001.SYBSTGNM[SYWINDXA] != SY0XW01.SYBSTGNM[SYWINDXA]
       || SY0XM001.XSECD[SYWINDXA] != SY0XW01.XSECD[SYWINDXA]
       || SY0XM001.XSNYR[SYWINDXA] != SY0XW01.XSNYR[SYWINDXA]
       || SY0XM001.XTPCD[SYWINDXA] != SY0XW01.XTPCD[SYWINDXA])
        SY0XW01.SYBSTGNM[SYWINDXA] = SY0XM001.SYBSTGNM[SYWINDXA];
        SY0XW01.XSECD[SYWINDXA] = SY0XM001.XSECD[SYWINDXA];
        SY0XW01.XSNYR[SYWINDXA] = SY0XM001.XSNYR[SYWINDXA];
        SY0XW01.XTPCD[SYWINDXA] = SY0XM001.XTPCD[SYWINDXA];
        SY0XW01.ZZZCHGCT[SYWINDXA] = SY0XW01.ZZZCHGCT[SYWINDXA] + 1;
      end
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
  end

end // end SY0X250

// Reset Screen Attributes
Function SY0XS01()

   /* Reset screen attributes to defined*/

  set SY0XM001.SY0XMSKE initialAttributes;
  SYWREC.SYWINDXA = 1;
  while (SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
    set SY0XM001.SYBSTGNB[SYWINDXA] initialAttributes;
    set SY0XM001.SYBSTGNM[SYWINDXA] initialAttributes;
    set SY0XM001.XSECD[SYWINDXA] initialAttributes;
    set SY0XM001.XSNYR[SYWINDXA] initialAttributes;
    set SY0XM001.XTPCD[SYWINDXA] initialAttributes;
    SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
  end
  SY0XM001.SYMSCMSG = " ";
  set SY0XM001.CATOAP initialAttributes;
  set SY0XM001.CAITEM initialAttributes;

end // end SY0XS01

// Check PF keys
Function SY0XS02()

   /* Check PF key entered by user*/

  if (converseVar.eventKey is enter)
    if (SY0XM001.CATOAP != " ")
      COMMAREA.CATOAP = SY0XM001.CATOAP;
      XSEXIT();
      set SY0XM001.CATOAP cursor, bold;
      SY0XM001.SYMSCMSG = COMMAREA.CAMSG;
      converseLib.validationFailed(1);
    end
    return;
  end

  if (converseVar.eventKey is pf1)
    XSPF1();
    SY0XM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "SY0N";
    XSEXIT();
    SY0XM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    SY0XM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf8
   && SY0XW01.SY0XWMOD != "A") /* pf8 not valid in add mode*/
    SY0XW01.SY0XWBLD = "Y"; /* build screen*/
    return;
  end

  if (converseVar.eventKey is pf13)
    if (SY0XW01.SY0XWMOD == "I") /* inquiry cannot use*/
      converseLib.validationFailed(19); /* invalid pf key*/
    end
    if (SY0XW01.SY0XWMOD == "A") /* in add mode*/
      SY0XW01.SY0XWMOD = "C"; /* set change*/
    else
      SY0XW01.SY0XWMOD = "A";
    end
    SY0XW01.SY0XWBLD = "Y"; /* build screen*/
    SY0XW01.SYBSTGNB[14] = " "; /* blank out key*/
    SY0XM001.SY0XMSKE = " "; /* and search key*/
    return;
  end

  if (converseVar.eventKey is pa2)
    converseLib.clearScreen();
    
    converseLib.validationFailed(1);
    SY0XM001.SYMSCMSG = "Screen Refreshed - Please Continue";
    return;
  end

  converseLib.validationFailed(19); /* invalid PF key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    SY0XM001.SYMSCMSG = "WARNING - PA Key causes loss of Data";
  end

end // end SY0XS02

// Set-up screen fields
Function SY0XS03()

   /* set fields based on processing mode*/

  if (SY0XW01.SY0XWMOD == "I") /* inquiry only*/
    SY0XM001.SY0XMOPT = "Inquiry";
    SY0XM001.SY0XMSPR = "Search Key:";
    set SY0XM001.SY0XMSPR initialAttributes;
    set SY0XM001.SY0XMSKE initialAttributes;
    set SY0XM001.SY0XMSKE cursor;
    SYWREC.SYWINDXA = 1;
    while (SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
      set SY0XM001.SYBSTGNB[SYWINDXA] skip;
      set SY0XM001.SYBSTGNM[SYWINDXA] skip;
      set SY0XM001.XSECD[SYWINDXA] skip;
      set SY0XM001.XSNYR[SYWINDXA] skip;
      set SY0XM001.XTPCD[SYWINDXA] skip;
      SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
    end
    SY0XM001.SY0XMFUN = " ";
  else
    if (SY0XW01.SY0XWMOD == "A") /* add mode*/
      SY0XM001.SY0XMOPT = "Add";
      SY0XM001.SY0XMSPR = "Last Entry:";
      set SY0XM001.SY0XMSPR initialAttributes;
      set SY0XM001.SY0XMSKE skip;
      SYWREC.SYWINDXA = 1;
      while (SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
        set SY0XM001.SYBSTGNB[SYWINDXA] initialAttributes;
        set SY0XM001.SYBSTGNM[SYWINDXA] initialAttributes;
        set SY0XM001.XSECD[SYWINDXA] initialAttributes;
        set SY0XM001.XSNYR[SYWINDXA] initialAttributes;
        set SY0XM001.XTPCD[SYWINDXA] initialAttributes;
        SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
      end
      SY0XM001.SY0XMFUN = "13=Change";
    else /* must be change mode*/
      SY0XM001.SY0XMOPT = "Change";
      SY0XM001.SY0XMSPR = "Search Key:";
      set SY0XM001.SY0XMSPR initialAttributes;
      set SY0XM001.SY0XMSKE initialAttributes;
      SYWREC.SYWINDXA = 1;
      while (SYWREC.SYWINDXA <= SY0XW01.SY0XWMAX)
        set SY0XM001.SYBSTGNB[SYWINDXA] skip;
        set SY0XM001.SYBSTGNM[SYWINDXA] initialAttributes;
        set SY0XM001.XSECD[SYWINDXA] initialAttributes;
        set SY0XM001.XSNYR[SYWINDXA] initialAttributes;
        set SY0XM001.XTPCD[SYWINDXA] initialAttributes;
        SYWREC.SYWINDXA = SYWREC.SYWINDXA + 1;
      end
      set SY0XM001.SYBSTGNM[1] cursor;
      SY0XM001.SY0XMFUN = "13=Add";
    end
  end

end // end SY0XS03

// Validate Style Group Add
Function SY0XS21()

   /* Validate the style group being added*/

  if (SY0XM001.SYBSTGNB[SYWINDXA] == " ") /* if number is blank*/
    if (SY0XM001.SYBSTGNM[SYWINDXA] == " ") /* and name is blank*/
      return; /* get out*/
    else
      converseLib.validationFailed(32); /* please enter style*/
      set SY0XM001.SYBSTGNB[SYWINDXA] cursor, bold;
      return; /* can't go further*/
    end
  else
    if (SY0XM001.SYBSTGNM[SYWINDXA] == " ") /* desc cannot be blank*/
      converseLib.validationFailed(40); /* required field*/
      set SY0XM001.SYBSTGNM[SYWINDXA] cursor, bold;
    else
      SY0XW01.SY0XWUPD = "Y"; /* we have something to add*/
    end
  end

   /* now check that style group is not on data base*/

  SYBREC.SYBSTGNB = SY0XM001.SYBSTGNB[SYWINDXA];
  call "IO3150" ("S ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0) /* number already on file*/
    converseLib.validationFailed(4); /* style already exists*/
    set SY0XM001.SYBSTGNB[SYWINDXA] cursor, bold;
  else
    if (SQLCA.VAGen_SQLCODE != 100) /* we got problems*/
      TA1REC.TA1LOCAT[1] = "SY0XS31";
      SY0XS99();
      return;
    end
  end

  SY0XS42(); /* validate xtpcd*/

  SY0XS41(); /* validate season code/YR*/

end // end SY0XS21

// Add Style Group to Table
Function SY0XS25()

  if (SY0XM001.SYBSTGNB[SYWINDXA] == " ") /* no data on line*/
    return;
  end

  set SYBREC empty;
  SYBREC.SYBSTGNB = SY0XM001.SYBSTGNB[SYWINDXA];
  SYBREC.SYBSTGNM = SY0XM001.SYBSTGNM[SYWINDXA];
  SYBREC.XSECD = SY0XM001.XSECD[SYWINDXA];
  SYBREC.XSNYR = SY0XM001.XSNYR[SYWINDXA];
  /*  */
  /* ----------------------- y2k out begin -------------------*/
  /*  */
  /* IF SYBREC.XSNYR NE 0;*/
  /* IF SYBREC.XSNYR LT 70;*/
  /* SYBREC.XSNYR = SYBREC.XSNYR + 2000;*/
  /* ELSE;*/
  /* SYBREC.XSNYR = SYBREC.XSNYR + 1900;*/
  /* END;*/
  /* END;*/
  /*  */
  /* ----------------------- y2k out end ---------------------*/
  /*  */
  /*  */
  /* ----------------------- y2k in begin -------------------*/
  /*  */
  if (SYBREC.XSNYR < 70)
    SYBREC.XSNYR = SYBREC.XSNYR + 2000;
  else
    SYBREC.XSNYR = SYBREC.XSNYR + 1900;
  end
  /*  */
  /* ----------------------- y2k in end ---------------------*/
  /*  */
  SYBREC.XTPCD = SY0XM001.XTPCD[SYWINDXA];
  SYBREC.ZZZSDT = SYWREC.ZZZSDT;
  SYBREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SYBREC.ZZZCHGTM = SYWREC.ZZZCHGTM;

  call "IO3150" ("A ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SY0XS35";
    SY0XS99();
  end

end // end SY0XS25

// Validate Style Group Change
Function SY0XS31()

   /* Validate the style group being changed*/

  /*  */
  /* --------------- y2k out begin -------------------------*/
  /*  */
  /* IF SY0XM001.SYBSTGNB(SYWINDXA) EQ ' '   /* bucket not used*/
  /* AND SY0XM001.XSECD(SYWINDXA) EQ ' '*/
  /* AND SY0XM001.XSNYR(SYWINDXA) EQ 0*/
  /* AND SY0XM001.XTPCD(SYWINDXA) EQ ' ';*/
  /* EZERTN;                        /* so nothing to validate*/
  /* END;*/
  /*  */
  /* --------------- y2k out end ---------------------------*/
  /*  */
  /*  */
  /* --------------- y2k in begin -------------------------*/
  /*  */
  if (SY0XM001.SYBSTGNB[SYWINDXA] == " " /* bucket not used*/
   && SY0XM001.XSECD[SYWINDXA] == " "    
   && SY0XM001.XTPCD[SYWINDXA] == " ")  
    return; /* so nothing to validate*/
  end
  /*  */
  /* --------------- y2k in end ---------------------------*/
  /*  */

  if (SY0XM001.SYBSTGNM[SYWINDXA] == " ") /* desc cannot be blank*/
    converseLib.validationFailed(40); /* required field*/
    SY0XM001.SYBSTGNM[SYWINDXA] = SY0XW01.SYBSTGNM[SYWINDXA];
    set SY0XM001.SYBSTGNM[SYWINDXA] cursor, bold;
  end

  SY0XS42(); /* xtpcd*/

  SY0XS41(); /* season code/yr*/

  if (SY0XM001.SYBSTGNM[SYWINDXA] != SY0XW01.SYBSTGNM[SYWINDXA]
   || SY0XM001.XSECD[SYWINDXA] != SY0XW01.XSECD[SYWINDXA]
   || SY0XM001.XSNYR[SYWINDXA] != SY0XW01.XSNYR[SYWINDXA]
   || SY0XM001.XTPCD[SYWINDXA] != SY0XW01.XTPCD[SYWINDXA])
    SY0XW01.SY0XWUPD = "Y"; /* have something to update*/
  end

end // end SY0XS31

// Change Style Group Row
Function SY0XS35()

  if (SY0XM001.SYBSTGNM[SYWINDXA] == SY0XW01.SYBSTGNM[SYWINDXA]
   && SY0XM001.XSECD[SYWINDXA] == SY0XW01.XSECD[SYWINDXA]
   && SY0XM001.XSNYR[SYWINDXA] == SY0XW01.XSNYR[SYWINDXA]
   && SY0XM001.XTPCD[SYWINDXA] == SY0XW01.XTPCD[SYWINDXA])
    return; /* user didn't change this line*/
  end

  SYBREC.SYBSTGNB = SY0XM001.SYBSTGNB[SYWINDXA];
  call "IO3150" ("S ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* we got problems*/
    TA1REC.TA1LOCAT[1] = "SY0XS31";
    TA1REC.TA1LOCAT[2] = "FETCH";
    SY0XS99();
    return;
  end

  if (SYBREC.ZZZCHGCT != SY0XW01.ZZZCHGCT[SYWINDXA])
    converseLib.validationFailed(104); /* record modified*/
    SY0XW01.SYBSTGNM[SYWINDXA] = SYBREC.SYBSTGNM;
    SY0XM001.SYBSTGNM[SYWINDXA] = SYBREC.SYBSTGNM;
    SY0XW01.ZZZCHGCT[SYWINDXA] = SYBREC.ZZZCHGCT;
    set SY0XM001.SYBSTGNM[SYWINDXA] cursor, bold;
    return;
  end

  SYBREC.SYBSTGNM = SY0XM001.SYBSTGNM[SYWINDXA];
  SYBREC.XSECD = SY0XM001.XSECD[SYWINDXA];
  SYBREC.XSNYR = SY0XM001.XSNYR[SYWINDXA];
  /*  */
  /* ------------------- y2k out begin ----------------------*/
  /*  */
  /* IF SYBREC.XSNYR NE 0;*/
  /* IF SYBREC.XSNYR LT 70;*/
  /* SYBREC.XSNYR = SYBREC.XSNYR + 2000;*/
  /* ELSE;*/
  /* SYBREC.XSNYR = SYBREC.XSNYR + 1900;*/
  /* END;*/
  /* END;*/
  /*  */
  /* ------------------- y2k out end ------------------------*/
  /*  */
  /*  */
  /* ------------------- y2k in begin ----------------------*/
  /*  */
  if (SYBREC.XSNYR < 70)
    SYBREC.XSNYR = SYBREC.XSNYR + 2000;
  else
    SYBREC.XSNYR = SYBREC.XSNYR + 1900;
  end
  /*  */
  /* ------------------- y2k in end ------------------------*/
  /*  */
  SYBREC.XTPCD = SY0XM001.XTPCD[SYWINDXA];
  SYBREC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SYBREC.ZZZCHGTM = SYWREC.ZZZCHGTM;

  call "IO3150" ("U ", SQLCA, SYBREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0) /* we got problems*/
    TA1REC.TA1LOCAT[1] = "SY0XS31";
    TA1REC.TA1LOCAT[2] = "UPDATE";
    SY0XS99();
    return;
  end

end // end SY0XS35

// Validate Season Code and Year
Function SY0XS41()

  if (SY0XM001.XSECD[SYWINDXA] in XSETBL.XSECD
   && XSETBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY0XM001.XSECD[SYWINDXA] cursor, bold;
    return;
  end

  if (SY0XM001.XSECD[SYWINDXA] == "FA"
   || SY0XM001.XSECD[SYWINDXA] == "LF"
   || SY0XM001.XSECD[SYWINDXA] == "SP"
   || SY0XM001.XSECD[SYWINDXA] == "LS")
    /* next sentence*/
  else /* cannot validate with xsn*/
    return;
  end

  SY0XW01.SY0XWXSE = SY0XM001.XSECD[SYWINDXA];
  SY0XW01.SY0XWXSN = SY0XM001.XSNYR[SYWINDXA];

  if (SY0XW01.XSNABRV in XSNTBL.XSNABRV)
    /* next sentence*/
  else
    converseLib.validationFailed(130); /* not on XSN table*/
    set SY0XM001.XSECD[SYWINDXA] cursor, bold;
    set SY0XM001.XSNYR[SYWINDXA] bold;
  end

end // end SY0XS41

// Validate Program Code (XTP)
Function SY0XS42()

  if (SY0XM001.XTPCD[SYWINDXA] in XTPTBL.XTPCD)
    /* next sentence*/
  else
    converseLib.validationFailed(3); /* invalid code*/
    set SY0XM001.XTPCD[SYWINDXA] cursor, bold;
  end

end // end SY0XS42

// DB2 Abend Routine
Function SY0XS99()

   /* This routine will call TA0020*/

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "SY0X";
  TA1REC.TA1MAP = "SY0XM001";
  TA1REC.TA1DBASE = "DPROD";
  TA1REC.TA1TBLVU = "VSYGRP01";
  TA1REC.TA1TBLKE = SYBREC.SYBSTGNB;
  move SQLCA to ERRSQLCA withV60Compat;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  converseLib.validationFailed(20); /* style tagle error*/

end // end SY0XS99

//*** RECORD=SY0XW01 ****
// *
// *  Working Storage Record for SY0X
// *
// ***********************
Record SY0XW01 type basicRecord
  10 SY0XWEOA SY0XWEOA ; 
  10 SY0XWMOD SY0XWMOD ; 
  10 SY0XWREV SY0XWREV ; 
  10 SY0XWBLD SY0XWBLD ; 
  10 SY0XWEOD SY0XWEOD ; 
  10 SY0XWUPD SY0XWUPD ; 
  10 SY0XWMAX SY0XWMAX ; 
  10 XSNABRV XSNABRV ; 
    15 SY0XWXSE SY0XWXSE ; 
    15 SY0XWXSN SY0XWXSN ; 
  10 SY0XWARY SY0XWARY [14] ; 
    15 SYBSTGNB SYBSTGNB ; 
    15 SYBSTGNM SYBSTGNM ; 
    15 XSECD XSECD ; 
    15 XSNYR XSNYR ; 
    15 XTPCD XTPCD ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end SY0XW01

// Array of Style Group Data
DataItem SY0XWARY char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Build Screen Array (Y/N)
DataItem SY0XWBLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Application Y/N
DataItem SY0XWEOA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Data Flag (Y/N)
DataItem SY0XWEOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Maximum lines on screen
DataItem SY0XWMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Processing mode (A/C/I)
DataItem SY0XWMOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Program Revision Number
DataItem SY0XWREV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Do Update/Add logic (Y/N)
DataItem SY0XWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season code
DataItem SY0XWXSE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season year
DataItem SY0XWXSN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

