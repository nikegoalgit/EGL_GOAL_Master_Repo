package kl00;

import corpcom1.CL00ENU;
import corpcom1.CLAREC;
import corpcom1.CLWREC;
import corpcom1.CLXREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPCL002;
import corpcom3.XPCL010;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XGPTBL;
import corpy2.YATTBL;
import corpy2.YDFTBL;
import kl.common.KL00T11;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VDEFGR01;
import vv.common.VUSRGR01;
//*** PROGRAM=KL00 ****
// ************************************************************
// 
//               KL00 - Update Claims Table
//               --------------------------
// 
// General program explanation and notes:
// 
// This program allows the user to perform add, change and
// delete rows in selected Claims Tables.
// ------------------------------------------------------------
// Maintenance History:
// --------------------
//   Date   Who    Remarks
// -------- ------ --------------------------------------------
// 05-14-97 HMACAL Application creation.
// 07-09-97 PMONAG Added Logic to verify Defect Group Name.
// *********************
Program KL00 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  CLAREC CLAREC; // record
  CLWREC CLWREC; // record
  CLXREC CLXREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KL00W01 KL00W01; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VDEFGR01 VDEFGR01; // record
  VUSRGR01 VUSRGR01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use CL00ENU {deleteAfterUse = yes}; // table
  use YDFTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use YATTBL {deleteAfterUse = yes}; // table
  use KL00T01 {deleteAfterUse = yes}; // table
  use KL00T11 {deleteAfterUse = yes}; // table
  use KL00M.KL00M100,  // forms
      KL00M.KL00M200, 
      KL00M.KL00M300
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KL00000: KL00000();
    exit program;
  end // end main
end // end KL00

// Main flow
Function KL00000()
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* *   perform initialization, set application revision nbrs,**/
   /* *   then do main perform until done with application      **/
   /* ************************************************************/

  CLXREC.CLXCPROC = "KL00000";

  if (COMMAREA.CAUSERID in KL00T11.XXXUSRID)
   /* IF COMMAREA.CAUSERID EQ 'HMACAL';*/
   /* /* Next Sentence- User is authorized to use this screen*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(784); /* User Not Authorized to use this application*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT(); /* Return to Previous Application*/
    KL00M100.VAGen_EZEMSG = COMMAREA.CAMSG;
  end

  KL00001(); /* initialize the application*/

  CLXREC.CLXEOAF = "N"; /* set end-of-application flag to 'no'*/

  while (CLXREC.CLXEOAF == "N") /* while not end-of-aplication*/
    KL00050(); /* process the application screen(s)*/
  end

  COMMAREA.CACURRAP = "KL00";
  XPCL002();
  exit program;
end // end KL00000

// Initialize application
Function KL00001()

  CLXREC.CLXCPROC = "KL00001";

  converseVar.commitOnConverse = 1; /* force db2 to commit on each screen*/
                                   /* converse*/
  VGVar.handleHardIOErrors = 1; /* return control to appl if hard db2*/
                                   /* error*/

  set KL00W01 empty; /* clear working storage rec1*/
  set SQLCA empty;

  XSENTRY(); /* appl entry security*/
  XSSEGTR(); /* set segmented transaction id*/

  set CLXREC empty; /* clear common working storage*/

  CLXERRF = "N";

   /* ***********************************/
   /* Initialize all potential records.*/
   /* ***********************************/
  set VUSRGR01 empty;
  set VDEFGR01 empty;

  CLXREC.CLXCSCRN = "KL00M100"; /* set first screen to display*/

end // end KL00001

// decide which map to display
Function KL00050()
   /* ************************************************************/
   /* *   control process the application screen(s)             **/
   /* *  note that this process is being performed in a         **/
   /* *  "while loop" until the end-of-application flag is set  **/
   /* *  to 'y'.                                                **/
   /* ************************************************************/
  CLXREC.CLXCPROC = "KL00050"; /* set current process name*/

  sysVar.arrayIndex = 0;
  CLXREC.CLXSCRNX = 0;

  if (CLXREC.CLXCSCRN in CLXREC.CLXSNAME) /* if current-screen-name is*/
    CLXREC.CLXSCRNX = sysVar.arrayIndex; /* in the screen-array, then set*/
  end /* the screen-index*/

  set TA1REC empty;
  TA1REC.TA1MAP = CLXREC.CLXCSCRN; /* prepare for abend*/

  CLXREC.CLXBLDSC = "Y"; /* set build screen flag to 'yes'*/
  CLXREC.CLXEOSF = "N"; /* set end-of-screen flag to 'no'*/
   /* MOVE 'N' TO CLXREC.CLXERRF;      /* clear error flag*/
  KL00W01.KL00WSMS = "N"; /* clear screen modified switch*/
  KL00W01.KL00W-DELETE-FLAG = "N"; /* delete row confirmation flag*/

  KL00100();

  if (KL00M100.KL00M-100-OPT == 1) /* DCLAIM.VUSRGR01*/
    while (CLXREC.CLXEOSF == "N")
      KL00200();
    end
  end

  if (KL00M100.KL00M-100-OPT == 2) /* DCLAIM.VDEFGR01*/
    while (CLXREC.CLXEOSF == "N")
      KL00300();
    end
  end


   /* at this point;*/
       /* if the end-of-application flag (CLXEOAF ) = 'n'*/
         /* the perform will return to the top of KL0%050...*/
       /* else*/
         /* the perform will auto return to KL0%000.*/

end // end KL00050

// Converse map KL00M100
Function KL00100()
   /* ************************************************************/
   /* *    process screen KL00M100                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from KL00050 until the end-of-screen   **/
   /* *     flag (CLXEOSFL) is set to 'y'.                      **/
   /* ************************************************************/
  CLXREC.CLXCPROC = "KL00100";

   /* IF CLXREC.CLXBLDSC EQ 'Y';*/
  if (CLXREC.CLXERRF == "N")
    KL00101(); /* Perform i/o, load map fields*/
    CLXREC.CLXBLDSC = "N";
  end

   /* ***********************************************************/
  converse KL00M100 ;
   /* ***********************************************************/

  VAGen_EZEMSG = " ";
  CLXREC.CLXERRF = "N"; /* Clear any previous error*/

  KL00110(); /* validate pfkeys*/

  if (CLXREC.CLXERRF == "N") /* No PF key error detected*/
    KL00120(); /* Examine keys or edit*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (CLXREC.CLXERRF == "N") /* No PF key error detected*/
    KL00130(); /* Determine next action*/
  end

   /* at this point;*/
     /* if the end-of-screen flag (CLXEOSFL) is 'N'*/
        /* we go back to top of process KL00100.*/
     /* if the end-of-screen flag (CLXEOSFL) is 'Y'*/
        /* we return to KL00050.*/
end // end KL00100

// Build screen
Function KL00101()
   /* **************************************/
   /* Build screen KL00M100*/
   /* **************************************/
  CLXREC.CLXCPROC = "KL00101";

  set KL00M100 empty; /* Clear screen*/

  KL00M100.KL00M-100-KL00MRDT = VGVar.currentShortGregorianDate; /* system date*/

  KL00W01.KL00W-TBL-CTR1 = 1;
  KL00W01.KL00W-MAP-CTR1 = 1;

   /* Temp only until CSP table has been defined in CICS*/
   /* then uncomment "WHILE" statement*/

   /* MOVE '   1. DCLAIM.VUSRGR01 - USERID/DEFECT GROUP TABLE'*/
   /* TO KL00M-100-TBL(1);*/
   /* MOVE '   2. DCLAIM.VDEFGR01 - DEFECT GROUP/CODE ASSIGNMENT TABLE'*/
   /* TO KL00M-100-TBL(2);*/


  while (KL00W01.KL00W-MAP-CTR1 <= 16
   && KL00T01.KL00W-TBL[KL00W-TBL-CTR1] != "99")
    KL00M-100-TBL[KL00W-MAP-CTR1] = KL00T01.KL00W-TBL[KL00W-TBL-CTR1];
    KL00W01.KL00W-TBL-CTR1 = KL00W01.KL00W-TBL-CTR1 + 1;
    KL00W01.KL00W-MAP-CTR1 = KL00W01.KL00W-MAP-CTR1 + 1;
  end


end // end KL00101

// Edit pfkeys
Function KL00110()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  CLXREC.CLXCPROC = "KL00110";

  if (converseVar.eventKey is pf3  /* return to KL0A*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf13 /* print VUSRGR01 Report*/
   || converseVar.eventKey is pf14 /* print VDEFGR01 Report*/
   || converseVar.eventKey is enter) /* accept entered option*/
    /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end

   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (KL00M100.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = KL00M100.CATOAP;
    COMMAREA.CAITEM = KL00M100.CAITEM;
    XPCL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "KL0A";
      COMMAREA.CAUSERA = " ";
      XPCL002();
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPCL002();
        return;
      end
    end
  end
end // end KL00110

// Edit KL00M100 fields
Function KL00120()
   /* **************************************/
   /* Edit KL00M100 entries*/
   /* **************************************/
  CLXREC.CLXCPROC = "KL00120";

  set KL00M100.KL00M-100-OPT normal;

  if (KL00M100.KL00M-100-OPT >= 1
   && KL00M100.KL00M-100-OPT <= 2)
   /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    set KL00M100.KL00M-100-OPT cursor, bold;
    converseLib.validationFailed(19); /* invalid option*/
  end

end // end KL00120

// Edit pfkeys/Next Action
Function KL00130()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  CLXREC.CLXCPROC = "KL00130";

  if (converseVar.eventKey is pf3 /* return to KL0A*/
   || converseVar.eventKey is pf4 /* return to MN0M*/
   || converseVar.eventKey is enter) /* accept entered option*/
    /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end

   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (KL00M100.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = KL00M100.CATOAP;
    COMMAREA.CAITEM = KL00M100.CAITEM;
    XPCL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "KL0A";
      COMMAREA.CAUSERA = " ";
      XPCL002();
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPCL002();
        return;
      end
    end
  end
end // end KL00130

// Converse map KL00M200
Function KL00200()
   /* ************************************************************/
   /* *    process screen KL00M200                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from KL00050 until the end-of-screen   **/
   /* *     flag (CLXeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  CLXREC.CLXCPROC = "KL00200";

  if (CLXREC.CLXERRF == "N"
   && KL00W01.KL00WPOP == "N")
    KL00201(); /* Perform i/o, load map fields*/
  end

   /* ***********************************************************/
  converse KL00M200 ;
   /* ***********************************************************/

  VAGen_EZEMSG = " ";
  CLXREC.CLXERRF = "N"; /* Clear any previous error*/
  KL00W01.KL00WPOP = "N";

  KL00210(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (CLXREC.CLXEOSF != "Y" /* Continue with map200*/
   && CLXREC.CLXERRF == "N") /* No PF key error detected*/
    KL00220(); /* Edit fields on map200*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (CLXREC.CLXERRF == "N") /* No PF key error detected*/
    KL00230(); /* Determine next action*/
  end

   /* at this point;*/
     /* if the end-of-screen flag (CLXeosfl) is 'n'*/
        /* we go back to top of process KL00200.*/
     /* if the end-of-screen flag (CLXeosfl) is 'y'*/
        /* we return to KL00050.*/
end // end KL00200

// Build screen
Function KL00201()
   /* **************************************/
   /* Initialize screen KL00M200*/
   /* **************************************/
  CLXREC.CLXCPROC = "KL00201";

  set KL00M200 empty; /* Clear screen*/

  KL00M200.KL00M-200-KL00MRDT = VGVar.currentShortGregorianDate; /* system date*/

  set KL00M200.KL00M-200-CLM-DEF-GRP-NM normal;
  set KL00M200.KL00M-200-XXX-USER-ID cursor, normal;

end // end KL00201

// Edit pfkeys
Function KL00210()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  CLXREC.CLXCPROC = "KL00210";

  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end

   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (KL00M200.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = KL00M200.CATOAP;
    COMMAREA.CAITEM = KL00M200.CAITEM;
    XPCL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      CLXREC.CLXEOSF = "Y"; /* return to map100*/
      CLXREC.CLXERRF = "N"; /* clear error message*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPCL002();
        return;
      end
    end
  end
end // end KL00210

// Edit KL00M200 fields
Function KL00220()
   /* **************************************/
   /* Edit KL00M200 entries*/
   /* **************************************/
  CLXREC.CLXCPROC = "KL00220";

  set KL00M200.KL00M-200-XXX-USER-ID cursor, normal;
  set KL00M200.KL00M-200-CLM-DEF-GRP-NM normal;

  if (converseVar.eventKey is pf5 || 
  converseVar.eventKey is pf6 || 
  converseVar.eventKey is pf9 || 
  converseVar.eventKey is pf12)

     /* **************************************/
     /* Validate DEFECT GROUP NAME*/
     /* **************************************/

    if (KL00M200.KL00M-200-CLM-DEF-GRP-NM == " ")
      CLXREC.CLXERRF = "Y";
      set KL00M200.KL00M-200-CLM-DEF-GRP-NM cursor, bold; /* highlight*/
      converseLib.validationFailed(782); /* Defect Group Name is required*/
    end
  end

   /* **************************************/
   /* Validate USER ID*/
   /* **************************************/

  if (KL00M200.KL00M-200-XXX-USER-ID == "  ")
    CLXREC.CLXERRF = "Y";
    set KL00M200.KL00M-200-XXX-USER-ID cursor, bold; /* highlight*/
    converseLib.validationFailed(781); /* UserId is required*/
  end

end // end KL00220

// Edit pfkeys/Next Action
Function KL00230()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  CLXREC.CLXCPROC = "KL00230";

  if (KL00W01.KL00WPOP == "Y")
    return;
  end

  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end

   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (KL00M200.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = KL00M200.CATOAP;
    COMMAREA.CAITEM = KL00M200.CAITEM;
    XPCL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map200*/
    if (CLXREC.CLXERRF == "Y")
      return;
    end
    set VUSRGR01 empty;
    KL00S-VUSRGR01-S(); /* DCLAIM.VUSRGR01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      KL00M200.KL00M-200-XXX-USER-ID = VUSRGR01.XXXUSRID;
      KL00M200.KL00M-200-CLM-DEF-GRP-NM = VUSRGR01.CLM-DEF-GRP-NM;
      CLXREC.CLXERRF = "Y"; /* show message on map200*/
      converseLib.validationFailed(772); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        KL00M200.KL00M-200-CLM-DEF-GRP-NM = " ";
        set KL00M200.KL00M-200-XXX-USER-ID cursor, bold;
        CLXREC.CLXERRF = "Y"; /* show message on map200*/
        converseLib.validationFailed(780); /* row not found matching the key*/
      end
    end

  else
    if (converseVar.eventKey is pf3)
      CLXREC.CLXEOSF = "Y"; /* return to map100*/
      CLXREC.CLXERRF = "N"; /* clear error message*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPCL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          set VUSRGR01 empty;
          KL00S-VUSRGR01-S(); /* DCLAIM.VUSRGR01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (KL00W01.KL00W-DELETE-FLAG == "N")
              CLXREC.CLXBLDSC = "Y";
              CLXREC.CLXERRF = "Y";
              KL00W01.KL00W-DELETE-FLAG = "Y";
              converseLib.validationFailed(776); /* confirm delete*/
              return;
            else
              if (KL00W01.KL00W-DELETE-FLAG == "Y")
                KL00S-VUSRGR01-D(); /* DCLAIM.VUSRGR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  CLXREC.CLXBLDSC = "Y";
                  CLXREC.CLXERRF = "Y";
                  KL00W01.KL00W-DELETE-FLAG = "N";
                  KL00M200.KL00M-200-XXX-USER-ID = " ";
                  KL00M200.KL00M-200-CLM-DEF-GRP-NM = " ";
                  converseLib.validationFailed(775); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    CLXREC.CLXBLDSC = "Y";
                    CLXREC.CLXERRF = "Y";
                    KL00W01.KL00W-DELETE-FLAG = "N";
                    set KL00M200.KL00M-200-XXX-USER-ID cursor, bold;
                    converseLib.validationFailed(779); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              CLXREC.CLXBLDSC = "Y";
              CLXREC.CLXERRF = "Y";
              KL00W01.KL00W-DELETE-FLAG = "N";
              set KL00M200.KL00M-200-XXX-USER-ID cursor, bold;
              converseLib.validationFailed(779); /* row not found for delete*/
            end
          end

        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            set VUSRGR01 empty;
            KL00S-VUSRGR01-S(); /* DCLAIM.VUSRGR01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              set VDEFGR01 empty;
              KL00S-VDEFGR01-S1();
              if (SQLCA.VAGen_SQLCODE == 0)
                KL00S-VDEFGR01-F1();
                if (SQLCA.VAGen_SQLCODE == 0)
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    converseLib.validationFailed(785); /* defective group name invalid*/
                    CLXREC.CLXBLDSC = "Y";
                    CLXREC.CLXERRF = "Y";
                    set KL00M200.KL00M-200-CLM-DEF-GRP-NM cursor, bold;
                    KL00S-VDEFGR01-C1();
                    return;
                  end
                end
              end
              KL00S-VDEFGR01-C1();
              KL00S-VUSRGR01-U(); /* DCLAIM.VUSRGR01*/
              if (SQLCA.VAGen_SQLCODE == 0)
                CLXREC.CLXBLDSC = "Y";
                CLXREC.CLXERRF = "Y";
                KL00M200.KL00M-200-XXX-USER-ID = " ";
                KL00M200.KL00M-200-CLM-DEF-GRP-NM = " ";
                converseLib.validationFailed(774); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                CLXREC.CLXBLDSC = "Y";
                CLXREC.CLXERRF = "Y";
                set KL00M200.KL00M-200-XXX-USER-ID cursor, bold;
                converseLib.validationFailed(777); /* row not found for Update*/
              end
            end

          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              set VUSRGR01 empty;
              KL00S-VUSRGR01-S(); /* DCLAIM.VUSRGR01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                KL00S-VUSRGR01-A(); /* DCLAIM.VUSRGR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  KL00M200.KL00M-200-XXX-USER-ID = " ";
                  KL00M200.KL00M-200-CLM-DEF-GRP-NM = " ";
                  CLXREC.CLXBLDSC = "Y";
                  CLXREC.CLXERRF = "Y";
                  converseLib.validationFailed(773); /* Insert successful*/
                end
              else
                CLXREC.CLXBLDSC = "Y";
                CLXREC.CLXERRF = "Y";
                set KL00M200.KL00M-200-XXX-USER-ID cursor, bold;
                converseLib.validationFailed(778); /* row already on data base*/
              end

            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (CLXREC.CLXERRF != "Y")
                  CLXREC.CLXBLDSC = "Y";
                  CLXREC.CLXERRF = "Y";
                  converseLib.validationFailed(772); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
end // end KL00230

// Converse map KL00M300
Function KL00300()
   /* ************************************************************/
   /* *    process screen KL00M300                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from KL00050 until the end-of-screen   **/
   /* *     flag (CLXeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  CLXREC.CLXCPROC = "KL00300";

  if (CLXREC.CLXERRF == "N")
    KL00301(); /* Perform i/o, load map fields*/
  end

   /* ***********************************************************/
  converse KL00M300 ;
   /* ***********************************************************/

  VAGen_EZEMSG = " ";
  CLXREC.CLXERRF = "N"; /* Clear any previous error*/

  KL00310(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (CLXREC.CLXEOSF != "Y" /* Continue with map300*/
   && CLXREC.CLXERRF == "N") /* No PF key error detected*/
    KL00320(); /* Edit fields on map300*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (CLXREC.CLXERRF == "N") /* No PF key error detected*/
    KL00330(); /* Determine next action*/
  end

   /* at this point;*/
     /* if the end-of-screen flag (CLXeosfl) is 'n'*/
        /* we go back to top of process KL00300.*/
     /* if the end-of-screen flag (CLXeosfl) is 'y'*/
        /* we return to KL00050.*/
end // end KL00300

// Build screen
Function KL00301()
   /* **************************************/
   /* Initialize screen KL00M300*/
   /* **************************************/
  CLXREC.CLXCPROC = "KL00301";

  set KL00M300 empty; /* Clear screen*/

  KL00M300.KL00M-300-KL00MRDT = VGVar.currentShortGregorianDate; /* system date*/

  set KL00M300.KL00M-300-CLM-DEF-GRP-FL normal;
  set KL00M300.KL00M-300-XGP-GPC-CD normal;
  set KL00M300.KL00M-300-YDF-DEF-CD normal;
  set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, normal;

end // end KL00301

// Edit pfkeys
Function KL00310()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  CLXREC.CLXCPROC = "KL00310";

  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end

   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (KL00M300.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = KL00M300.CATOAP;
    COMMAREA.CAITEM = KL00M300.CAITEM;
    XPCL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      CLXREC.CLXEOSF = "Y"; /* return to map100*/
      CLXREC.CLXERRF = "N"; /* clear error message*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPCL002();
        return;
      end
    end
  end
end // end KL00310

// Edit KL00M300 fields
Function KL00320()
   /* **************************************/
   /* Edit KL00M300 entries*/
   /* **************************************/
  CLXREC.CLXCPROC = "KL00320";

  set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, normal;
  set KL00M300.KL00M-300-YDF-DEF-CD normal;
  set KL00M300.KL00M-300-XGP-GPC-CD normal;
  set KL00M300.KL00M-300-CLM-DEF-GRP-FL normal;

  if (converseVar.eventKey is pf5
   || converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)

   /* **************************************/
   /* Validate Defect Code Flag*/
   /* **************************************/
    if (KL00M300.KL00M-300-CLM-DEF-GRP-FL == " ")
      CLXREC.CLXERRF = "Y";
      set KL00M300.KL00M-300-CLM-DEF-GRP-FL cursor, bold; /* highlight*/
      converseLib.validationFailed(307); /* incorrect item value*/
    else
      if (KL00M300.KL00M-300-CLM-DEF-GRP-FL == "Y" || 
      KL00M300.KL00M-300-CLM-DEF-GRP-FL == "N")
          /* next sentence*/
      else
        CLXREC.CLXERRF = "Y";
        set KL00M300.KL00M-300-CLM-DEF-GRP-FL cursor, bold; /* highlight*/
        converseLib.validationFailed(307); /* incorrect item value*/
      end
    end
  end

   /* **************************************/
   /* Validate general product class code*/
   /* **************************************/
  if (KL00M300.KL00M-300-XGP-GPC-CD == "  ")
    CLXREC.CLXERRF = "Y";
    set KL00M300.KL00M-300-XGP-GPC-CD cursor, bold; /* highlight*/
    converseLib.validationFailed(50); /* GPC is required*/
  else
    if (KL00M300.KL00M-300-XGP-GPC-CD > "  " /* GPC code*/
     && KL00M300.KL00M-300-XGP-GPC-CD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      /* next sentence*/
    else
      CLXREC.CLXERRF = "Y";
      set KL00M300.KL00M-300-XGP-GPC-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(86); /* GPC code is not valid*/
    end
  end

   /* **************************************/
   /* Validate Defect Code*/
   /* **************************************/
  if (KL00M300.KL00M-300-YDF-DEF-CD == "  ")
    CLXREC.CLXERRF = "Y";
    set KL00M300.KL00M-300-YDF-DEF-CD cursor, bold; /* highlight*/
    converseLib.validationFailed(783); /* Defect Code is required*/
  else
    if (KL00M300.KL00M-300-YDF-DEF-CD > "  " /* Defect Code*/
     && KL00M300.KL00M-300-YDF-DEF-CD in YDFTBL.YDFCD)
       /* next sentence*/
    else
      CLXREC.CLXERRF = "Y";
      set KL00M300.KL00M-300-YDF-DEF-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(410); /* Defect Code is not valid*/
    end
  end

   /* **************************************/
   /* Validate Defect Group Name*/
   /* **************************************/
  if (KL00M300.KL00M-300-CLM-DEF-GRP-NM == "  ")
    CLXREC.CLXERRF = "Y";
    set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, bold; /* highlight*/
    converseLib.validationFailed(782); /* Defect Group Name is required*/
  else
    if (KL00M300.KL00M-300-CLM-DEF-GRP-NM > "  ")
       /* next sentence*/
    end
  end


end // end KL00320

// Edit pfkeys/Next Action
Function KL00330()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  CLXREC.CLXCPROC = "KL00330";

  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    CLXREC.CLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end

   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (KL00M300.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = KL00M300.CATOAP;
    COMMAREA.CAITEM = KL00M300.CAITEM;
    XPCL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map300*/
    if (CLXREC.CLXERRF == "Y")
      return;
    end
    set VDEFGR01 empty;
    KL00S-VDEFGR01-S(); /* DCLAIM.VDEFGR01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      KL00M300.KL00M-300-CLM-DEF-GRP-NM = VDEFGR01.CLM-DEF-GRP-NM;
      KL00M300.KL00M-300-YDF-DEF-CD = VDEFGR01.YDFCD;
      KL00M300.KL00M-300-XGP-GPC-CD = VDEFGR01.XGPCD;
      KL00M300.KL00M-300-CLM-DEF-GRP-FL = VDEFGR01.CLM-DEF-GRP-FL;

      CLXREC.CLXERRF = "Y"; /* show message on map300*/
      converseLib.validationFailed(772); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set KL00M300.KL00M-300-XGP-GPC-CD bold;
        set KL00M300.KL00M-300-YDF-DEF-CD bold;
        set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, bold;
        KL00M300.KL00M-300-CLM-DEF-GRP-FL = "   ";
        CLXREC.CLXERRF = "Y"; /* show message on map300*/
        converseLib.validationFailed(780); /* row not found matching the key*/
      end
    end

  else
    if (converseVar.eventKey is pf3)
      CLXREC.CLXEOSF = "Y"; /* return to map100*/
      CLXREC.CLXERRF = "N"; /* clear error message*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPCL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          set VDEFGR01 empty;
          KL00S-VDEFGR01-S(); /* DCLAIM.VDEFGR01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (KL00W01.KL00W-DELETE-FLAG == "N")
              CLXREC.CLXBLDSC = "Y";
              CLXREC.CLXERRF = "Y";
              KL00W01.KL00W-DELETE-FLAG = "Y";
              converseLib.validationFailed(776); /* confirm delete*/
              return;
            else
              if (KL00W01.KL00W-DELETE-FLAG == "Y")
                KL00S-VDEFGR01-D(); /* DCLAIM.VDEFGR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  CLXREC.CLXBLDSC = "Y";
                  CLXREC.CLXERRF = "Y";
                  KL00W01.KL00W-DELETE-FLAG = "N";
                  converseLib.validationFailed(775); /* delete successful*/
                  KL00M300.KL00M-300-CLM-DEF-GRP-NM = " ";
                  KL00M300.KL00M-300-YDF-DEF-CD = " ";
                  KL00M300.KL00M-300-XGP-GPC-CD = " ";
                  KL00M300.KL00M-300-CLM-DEF-GRP-FL = " ";
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    set KL00M300.KL00M-300-XGP-GPC-CD bold;
                    set KL00M300.KL00M-300-YDF-DEF-CD bold;
                    set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, bold;
                    KL00M300.KL00M-300-CLM-DEF-GRP-FL = " ";
                    CLXREC.CLXBLDSC = "Y";
                    CLXREC.CLXERRF = "Y";
                    KL00W01.KL00W-DELETE-FLAG = "N";
                    converseLib.validationFailed(779); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              set KL00M300.KL00M-300-XGP-GPC-CD bold;
              set KL00M300.KL00M-300-YDF-DEF-CD bold;
              set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, bold;
              KL00M300.KL00M-300-CLM-DEF-GRP-FL = " ";
              CLXREC.CLXBLDSC = "Y";
              CLXREC.CLXERRF = "Y";
              KL00W01.KL00W-DELETE-FLAG = "N";
              converseLib.validationFailed(779); /* row not found for delete*/
            end
          end

        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            set VDEFGR01 empty;
            KL00S-VDEFGR01-S(); /* DCLAIM.VDEFGR01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              KL00S-VDEFGR01-U();
              if (SQLCA.VAGen_SQLCODE == 0)
                CLXREC.CLXBLDSC = "Y";
                CLXREC.CLXERRF = "Y";
                converseLib.validationFailed(774); /* Update successful*/
                KL00M300.KL00M-300-CLM-DEF-GRP-NM = " ";
                KL00M300.KL00M-300-YDF-DEF-CD = " ";
                KL00M300.KL00M-300-XGP-GPC-CD = " ";
                KL00M300.KL00M-300-CLM-DEF-GRP-FL = " ";
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                set KL00M300.KL00M-300-XGP-GPC-CD bold;
                set KL00M300.KL00M-300-YDF-DEF-CD bold;
                set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, bold;
                KL00M300.KL00M-300-CLM-DEF-GRP-FL = "   ";
                CLXREC.CLXBLDSC = "Y";
                CLXREC.CLXERRF = "Y";
                converseLib.validationFailed(777); /* row not found for Update*/
              end
            end

          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              set VDEFGR01 empty;
              KL00S-VDEFGR01-S(); /* DCLAIM.VDEFGR01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                KL00S-VDEFGR01-A(); /* DCLAIM.VDEFGR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  CLXREC.CLXBLDSC = "Y";
                  CLXREC.CLXERRF = "Y";
                  converseLib.validationFailed(773); /* Insert successful*/
                  KL00M300.KL00M-300-CLM-DEF-GRP-NM = " ";
                  KL00M300.KL00M-300-YDF-DEF-CD = " ";
                  KL00M300.KL00M-300-XGP-GPC-CD = " ";
                  KL00M300.KL00M-300-CLM-DEF-GRP-FL = " ";
                end
              else
                set KL00M300.KL00M-300-XGP-GPC-CD bold;
                set KL00M300.KL00M-300-YDF-DEF-CD bold;
                set KL00M300.KL00M-300-CLM-DEF-GRP-NM cursor, bold;
                CLXREC.CLXBLDSC = "Y";
                CLXREC.CLXERRF = "Y";
                converseLib.validationFailed(778); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (CLXREC.CLXERRF != "Y")
                  CLXREC.CLXBLDSC = "Y";
                  CLXREC.CLXERRF = "Y";
                  converseLib.validationFailed(772); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end




end // end KL00330

// Insert VDEFGR01 row
Function KL00S-VDEFGR01-A()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-A";

  VDEFGR01.CLM-DEF-GRP-NM = KL00M300.KL00M-300-CLM-DEF-GRP-NM;
  VDEFGR01.YDFCD = KL00M300.KL00M-300-YDF-DEF-CD;
  VDEFGR01.XGPCD = KL00M300.KL00M-300-XGP-GPC-CD;
  VDEFGR01.CLM-DEF-GRP-FL = KL00M300.KL00M-300-CLM-DEF-GRP-FL;

  XX0XS01(); /* get current system time and date*/

  VDEFGR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VDEFGR01.ZZZCHGDT = 0;
  VDEFGR01.ZZZCHGTM = 0;
  VDEFGR01.ZZZCHGCT = 0;

  call "VDEFGR01" ("A ", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01"; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-A

// Close VDEFGR01 row
Function KL00S-VDEFGR01-C1()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-C1";

  call "VDEFGR01" ("C1", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /* Close*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "C1     "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-C1

// Delete VDEFGR01 row
Function KL00S-VDEFGR01-D()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-D";

  VDEFGR01.CLM-DEF-GRP-NM = KL00M300.KL00M-300-CLM-DEF-GRP-NM;
  VDEFGR01.YDFCD = KL00M300.KL00M-300-YDF-DEF-CD;
  VDEFGR01.XGPCD = KL00M300.KL00M-300-XGP-GPC-CD;
  VDEFGR01.CLM-DEF-GRP-FL = KL00M300.KL00M-300-CLM-DEF-GRP-FL;

  call "VDEFGR01" ("D ", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01"; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-D

// Fetch VDEFGR01 row
Function KL00S-VDEFGR01-F1()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-F1";

  call "VDEFGR01" ("F1", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /* Fetch*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "F1     "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-F1

// Delete VDEFGR01 row
Function KL00S-VDEFGR01-S()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-S";

  VDEFGR01.CLM-DEF-GRP-NM = KL00M300.KL00M-300-CLM-DEF-GRP-NM;
  VDEFGR01.YDFCD = KL00M300.KL00M-300-YDF-DEF-CD;
  VDEFGR01.XGPCD = KL00M300.KL00M-300-XGP-GPC-CD;
  VDEFGR01.CLM-DEF-GRP-FL = KL00M300.KL00M-300-CLM-DEF-GRP-FL;

  call "VDEFGR01" ("S ", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /* Select*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-S

// Open VDEFGR01 row
Function KL00S-VDEFGR01-S1()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-S1";

  VDEFGR01.CLM-DEF-GRP-NM = KL00M200.KL00M-200-CLM-DEF-GRP-NM;

  call "VDEFGR01" ("S1", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /* Select*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S1     "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-S1

// Update VDEFGR01 row
Function KL00S-VDEFGR01-U()

  CLXREC.CLXCPROC = "KL00S-VDEFGR01-U";

  VDEFGR01.CLM-DEF-GRP-FL = KL00M300.KL00M-300-CLM-DEF-GRP-FL;

  XX0XS01(); /* get current system time and date*/

  VDEFGR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VDEFGR01.ZZZCHGTM = XX0XW01.XX0XWTIM;

  call "VDEFGR01" ("U ", SQLCA, VDEFGR01) {isNoRefresh = yes, isExternal = yes}; /**/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VDEFGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VDEFGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VDEFGR01-U

// Insert VUSRGR01 row
Function KL00S-VUSRGR01-A()

  CLXREC.CLXCPROC = "KL00S-VUSRGR01-A";

  VUSRGR01.XXXUSRID = KL00M200.KL00M-200-XXX-USER-ID;
  VUSRGR01.CLM-DEF-GRP-NM = KL00M200.KL00M-200-CLM-DEF-GRP-NM;

  XX0XS01(); /* get current system time and date*/

  VUSRGR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VUSRGR01.ZZZCHGDT = 0;
  VUSRGR01.ZZZCHGTM = 0;
  VUSRGR01.ZZZCHGCT = 0;

  call "VUSRGR01" ("A ", SQLCA, VUSRGR01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/

  if (SQLCA.VAGen_SQLCODE == -911)
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VUSRGR01 "; /* io module*/
      TA1REC.TA1DBASE = "CLAIM "; /* data base*/
      TA1REC.TA1TBLVU = "VUSRGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VUSRGR01-A

// Delete VUSRGR01 row
Function KL00S-VUSRGR01-D()

  CLXREC.CLXCPROC = "KL00S-VUSRGR01-D";

  VUSRGR01.XXXUSRID = KL00M200.KL00M-200-XXX-USER-ID;
  VUSRGR01.CLM-DEF-GRP-NM = KL00M200.KL00M-200-CLM-DEF-GRP-NM;

  call "VUSRGR01" ("D ", SQLCA, VUSRGR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VUSRGR01"; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VUSRGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VUSRGR01-D

// Select VUSRGR01 row
Function KL00S-VUSRGR01-S()

  CLXREC.CLXCPROC = "KL00S-VUSRGR01-S";

  VUSRGR01.XXXUSRID = KL00M200.KL00M-200-XXX-USER-ID;
  VUSRGR01.CLM-DEF-GRP-NM = KL00M200.KL00M-200-CLM-DEF-GRP-NM;

  call "VUSRGR01" ("S ", SQLCA, VUSRGR01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VUSRGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VUSRGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VUSRGR01-S

// Update VUSRGR01 row
Function KL00S-VUSRGR01-U()

  CLXREC.CLXCPROC = "KL00S-VUSRGR01-U";

  VUSRGR01.CLM-DEF-GRP-NM = KL00M200.KL00M-200-CLM-DEF-GRP-NM;

  XX0XS01(); /* get current system time and date*/

  VUSRGR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VUSRGR01.ZZZCHGTM = XX0XW01.XX0XWTIM;

  call "VUSRGR01" ("U ", SQLCA, VUSRGR01) {isNoRefresh = yes, isExternal = yes}; /* Update*/

  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VUSRGR01 "; /* io module*/
      TA1REC.TA1DBASE = "DCLAIM"; /* data base*/
      TA1REC.TA1TBLVU = "VUSRGR01"; /* table view*/
      XPCL010(); /* abend routine*/
    end
  end

end // end KL00S-VUSRGR01-U

//*** RECORD=KL00W01 ****
// This is the main working storage record for KL00.
// ***********************
Record KL00W01 type basicRecord
  5 KL00WSMS KL00WSMS ; 
  5 KL00WUCF KL00WUCF ; 
  5 KL00WERF KL00WERF ; 
  5 KL00WMGF KL00WMGF ; 
  5 KL00WONE KL00WONE ; 
  5 KL00WCKE KL00WCKE ; 
  5 KL00WPOP KL00WPOP ; 
  5 KL00W-TBL-CTR1 KL00W-TBL-CTR1 ; 
  5 KL00W-MAP-CTR1 KL00W-MAP-CTR1 ; 
  5 KL00W-DELETE-FLAG KL00W-DELETE-FLAG ; 
end // end KL00W01

DataItem KL00W-DELETE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map fill counter
DataItem KL00W-MAP-CTR1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table counter
DataItem KL00W-TBL-CTR1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nccrec display key
DataItem KL00WCKE char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error message flag
DataItem KL00WERF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display error flag
DataItem KL00WMGF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time flag
DataItem KL00WONE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KL00WPOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen Modified Switch
DataItem KL00WSMS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update completed flag - ncarec
DataItem KL00WUCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

