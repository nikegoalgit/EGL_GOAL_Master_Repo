package kl0a;

import corpcom1.CL0AW01;
import corpcom1.CLAREC;
import corpcom1.CLWREC;
import corpcom1.CLXREC;
import corpcom3.XPCL002;
import corpcom3.XPCL006;
import corpcom3.XPCL010;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpy2.YATTBL;
import corpy2.YCTTBL;
import corpy2.YMOTBL;
import corpy2.YUATBL;
import kl.common.KL00T11;
import ta.common.TA1REC;
//*** PROGRAM=KL0A ****
// ************************************************************
// *MAINTENANCE HISTORY:                                      *
// ************************************************************
// *  DATE    BY      WHY                                     *
// *--------  ------  ----------------------------------------*
// *01-31-89  JWOOD   ADDED NONCSP OPTION TO CALLS            *
// *01-31-89  JWOOD   ADDED XSSEGTR LOGIC                     *
// *05-19-89  bcourt  DB2 structure change CLAREC             *
// *10-25-90  gdecke  add menu options 15, 16, and 17 for     *
// *                  sales sample claims.                    *
// *#cl909  12-04-90  gdecke  add menu options 16,17 literals *
// *08-07-91  wjohns  changed application name and commmarea  *
// *                   reference names for renamed claims     *
// *                   applications.                          *
// *09-16-91  twatso  changed statement groups, procs from cl *
// *                   to kl names                            *
// *11-11-91  twatso  added code for 'osd' to be treated like *
// *                  'def'(offshore defectives)              *
// *01-13-92  sgorga  set ta1rec empty.                       *
// *03-11-94  BCourt  init sqlca empty in S03.                *
// *11-02-94  sgorga  Removed opt 20 (Consumer Defectives)    *
// *                  from menu & application.                *
// *05-07-97  HMACAL  Turn off Option 19 and recommend to use *
// *                  Option 9 instead.                       *
// *08-11-97  pperk1  added option 21 for new app kl07        *
// *03-02-98  GDECKE  SHOW MENU OPTION 21 LITERAL             *
// *03-24-98  HMACAL  Added Option 22 to go to EK0A           *
// *06-18-98  HMACAL  Added check on Inquire access for Opt 22*
// *09-03-98  HMACAL  Modified KL0A005 to allow Update access *
// *                  from EK0E or EK0F when transferring to  *
// *                  KL0E.                                   *
// *09-11-98  HMACAL  Modified KL0A005 to determine update    *
// *                  option to use in transferring to KL0E   *
// *                  from EK0E or EK0F, based on the claim   *
// *                  type. If update criteria is not met,    *
// *                  KL0E access will default to Inquire.    *
// *04-12-99  GDECKE  ADD MENU OPTION 23 TO GET TO KL08.      *
// ************************************************************
// *********************
Program KL0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  CL0AW01 CL0AW01; // record
  CLAREC CLAREC; // record
  CLWREC CLWREC; // record
  CLXREC CLXREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YATTBL {deleteAfterUse = yes}; // table
  use YCTTBL {deleteAfterUse = yes}; // table
  use YMOTBL {deleteAfterUse = yes}; // table
  use YUATBL {deleteAfterUse = yes}; // table
  use KL00T11 {deleteAfterUse = yes}; // table
  use KL0AM.KL0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KL0A001: KL0A001();
    ;
     /* ------------------- begin flow cl0a001 --------------*/
    ;
    goto KL0A005; /* to converse claim menu map*/
    ;
     /* ------------------- end flow cl0a001 ---------------*/
    ;
    KL0A005: KL0A005();
    ;
     /* --------------begin flow stage cl0a005--------------*/
    ;
    if (KL0AM001.VAGen_EZEMSG != " "
     || converseVar.validationMsgNum != 0)
      goto KL0A005; /* errors/msg's - display menu*/
    else
      CLWREC.CLAGROUP = CLAREC.CLAGROUP;
      COMMAREA.CAUSERA = CLWREC.CLAGROUP;
    end
    ;
     /* --------------end flow stage cl0a005-----------------*/
    ;
  end // end main
end // end KL0A

// init claims menu processing
Function KL0A001()
  ;
    /* -------------  execute process cl0a001  --------------*/
   /*  */
   /* 01-13-92  sgorga  Set ta1rec empty.*/
   /*  */
  ;
  set TA1REC empty;
  if (COMMAREA.CASYSINT != "CSP")
    set COMMAREA empty;
    COMMAREA.CASYSINT = "CSP";
    COMMAREA.CAUSERID = "DEMO  ";
    COMMAREA.CAFROMAP = "MN0M";
    COMMAREA.CACURRAP = "KL0A";
    COMMAREA.CAADD = "YYYYYYYYYYY";
    COMMAREA.CACHG = "YYYYYYYYYYY";
    COMMAREA.CADEL = "YYYYYYYYYYY";
    COMMAREA.CAINQ = "YYYYYYYYYYY";
  end
  XSENTRY(); /* appl entry security*/
  XSSEGTR(); /* SET SEGMENTED TRANSACTION ID*/
  ;
  converseVar.commitOnConverse = 1;
  VGVar.handleHardIOErrors = 1;
  ;
     /* set map id's, date*/
  ;
  set CLAREC empty;
   /* SET CLWREC EMPTY;*/
  set KL0AM001 initial;
  ;
  CLWREC.CLWGROUP = COMMAREA.CAUSERA;
   /* MOVE COMMAREA.CAFROMAP TO CLWREC.CLWMAPFM;*/
  if (COMMAREA.CAFRMSYS == "KL")
    if (CLWREC.CLWEZMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(CLWREC.CLWEZMNO);
    end
  end
  CLWREC.CLWSETBY = "M"; /* init set-by flag to memu*/
  ;
  KL0AM001.XXXRVNBR = "2";
  KL0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  ;
   /* -------------  end process cl0a001  --------------------*/
  ;
end // end KL0A001

// converse claim menu map
Function KL0A005()
   /* *******************************************************/
   /* maintenance log:*/
   /* 5-4-93 BCOURT add option 19.*/
   /* 11-02-94  sgorga  Removed all mention of Option 20.*/
   /* 05-07-97  HMACAL  Turn off Option 19; Prompt message 771.*/
   /* Also, added Option 20.*/
   /* 08-11-97  pperk1  add option 21.*/
   /* 03-24-98  HMACAL  add option 22.*/
   /* 05-29-98  GDECKE  HANDLE FASTPATH FROM EK0E TO KL0E.*/
   /* 06-18-98  HMACAL  Changed option 22 logic to check for Inquire access*/
   /* 09-03-98  HMACAL  Modified to allow UPDATE access to KL0E from*/
   /* EK0E or EK0F when User has update capability,*/
   /* otherwise, only INQUIRY access to KL0E will be*/
   /* allowed.*/
   /* 09-11-98  HMACAL  Modified to determine Update Option based on claim*/
   /* type to use to transfer to KL0E, when coming from*/
   /* EK0E or EK0F; Logic was based on KL0AS06;*/
   /* Inquire access to KL0E will result if the Update*/
   /* criteria is not met.*/
   /* 04-12-99  GDECKE  ADD OPTION 23 - GO TO KL08*/
   /* *******************************************************/
  ;
    /* -------------  before stage cl0a005  --------------*/
  ;
     /* no processing*/
  ;
  ;
  ;
   /* ----  check for fastpath transfer from ek0e. GO TO KL0E IF*/
   /* ----  FROM-APPL = EK0E AND CLAIM NUMBER SUPPLIED IN COMMAREA.*/
  ;
  if (COMMAREA.CAFRMSYS == "EK"
   && (COMMAREA.CAFRMAPP == "0E"
   || COMMAREA.CAFRMAPP == "0F"))
    if (COMMAREA.CAITEM != " ")
      set CLAREC empty;
      set CLWREC empty;
      COMMAREA.CATOAP = "KL0E";
      KL0AM001.CAITEM = COMMAREA.CAITEM;
      KL0AM001.CATOAP = COMMAREA.CATOAP;
      XPCL006(); /* check item for length and type*/
      if (CLXREC.CLXVITMF == "N") /* ITEM FIELD NOT VALID*/
        set KL0AM001.CATOAP cursor, modified, bold;
        set KL0AM001.CAITEM modified, bold;
        converseLib.validationFailed(285); /* ITEM FIELD or OPTION field invalid*/
        CLXREC.CLXERRF = "Y";
      else
        if (COMMAREA.CAITEM != " ")
          set CLAREC empty;
          CLAREC.CLACLMNB = CLWREC.CLWITM1N;
          ;
          call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes};
                                   /* get claim header*/
          if (SQLCA.VAGen_SQLCODE == 0)
            CLWREC.CLAGROUP = CLAREC.CLAGROUP;
            COMMAREA.CAUSERA = CLWREC.CLAGROUP;
            if (CACLVL[1] == "Y"       /* sales change*/
             || CACLVL[2] == "Y"       /* traffic change*/
             || CACLVL[3] == "Y"       /* credit change*/
             || ((CACLVL[4] == "Y"     /* co-op change*/
             || CACLVL[6] == "Y")      /* distribution change*/
             && (CLAREC.YCTCD == "ADJ" /* Adjustment*/
             || CLAREC.YCTCD == "DAA"  /* Dealer Advert Assist*/
             || CLAREC.YCTCD == "NBC"))) /* Nike Bank Claims*/
              ;
              CL0AW01.YCTCD = CLAREC.YCTCD;
              ;
              if (CLAREC.YCTCD == "ADJ" /* Adjustment*/
               || CLAREC.YCTCD == "DAA" /* Dealer Advert Assist*/
               || CLAREC.YCTCD == "NBC") /* Nike Bank Claims*/
                ;
                CL0AW01.CLWMNOPT = 5;
              else
                if (CLAREC.YCTCD == "DEF" /* Defective*/
                 || CLAREC.YCTCD == "RFL" /* Cust Refusal*/
                 || CLAREC.YCTCD == "RTS") /* Return to Stock*/
                  ;
                  CL0AW01.CLWMNOPT = 6;
                else
                  ;
                  CL0AW01.CLWMNOPT = 4;
                end
              end
              ;
              if (CL0AW01.CL0AWKEY in YMOTBL.YMOKEY)
                ;
                if (CLAREC.CLAWSENF == "N" /* not entered thru worksht*/
                 || CLAREC.CLAWSENF == " ") /* not entered thru worksht*/
                     /* allow Update Mode in KL0E*/
                  CLWREC.CLHSEQNB = 1;
                  CLWREC.CLWMNOPT = CL0AW01.CLWMNOPT;
                  CLWREC.CLWACTIV = "C";
                else /* will allow inquire only if from*/
                                   /* worksheet*/
                  CLWREC.CLHSEQNB = 1;
                  CLWREC.CLWMNOPT = 4;
                  CLWREC.CLWACTIV = "I";
                end
              else /* will allow inquire only if not in*/
                                   /* YMOTBL*/
                CLWREC.CLHSEQNB = 1;
                CLWREC.CLWMNOPT = 4;
                CLWREC.CLWACTIV = "I";
              end
            else /* will allow inquire only no Change*/
                                   /* access*/
              CLWREC.CLHSEQNB = 1;
              CLWREC.CLWMNOPT = 4;
              CLWREC.CLWACTIV = "I";
            end
            ;
            XPCL002(); /* check security/xfer*/
            ;
          else
            set KL0AM001.CATOAP cursor, modified, bold;
            set KL0AM001.CAITEM modified, bold;
            converseLib.validationFailed(285); /* ITEM OR OPTION FIELD INVALID*/
            CLXREC.CLXERRF = "Y";
          end
        end
      end
    end
  end
  ;
  ;
  converse KL0AM001 ;
   /* ------------------------- cl0a005 -----------------------*/
   /* **  after stage: check aid byte,validate menu options  ***/
   /* ---------------------------------------------------------*/
  ;
   /* ---------------- clear message flds ---------------------*/
  ;
  set CLAREC empty;
  set CLWREC empty;
  KL0AM001.VAGen_EZEMSG = " ";
  set KL0AM001.CLACLMNB normal;
  set KL0AM001.CLWMNOPT normal;
  ;
   /* --------------- check aid byte ---------------------*/
  ;
  KL0AS01(); /* check standard pf keys*/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "MN0M";
    XSEXIT();
    KL0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  end
  ;
  if (KL0AM001.VAGen_EZEMSG != " "
   || converseVar.validationMsgNum != 0)
    exit stack; /* errors/msg's - display menu*/
  end
  ;
  ;
   /* --------   check for fastpath  --------------*/
  ;
  if (converseVar.eventKey is enter) /* normal 'enter'*/
    if (KL0AM001.CATOAP != " ")
      COMMAREA.CATOAP = KL0AM001.CATOAP;
      COMMAREA.CAITEM = KL0AM001.CAITEM;
      XPCL006(); /* check item for length and type*/
      if (CLXREC.CLXVITMF == "N") /* ITEM FIELD NOT VALID*/
        set KL0AM001.CATOAP cursor, modified, bold;
        set KL0AM001.CAITEM modified, bold;
        converseLib.validationFailed(285); /* ITEM FIELD or OPTION field invalid*/
        CLXREC.CLXERRF = "Y";
        exit stack;
      else
        if (COMMAREA.CAITEM != " ")
          set CLAREC empty;
          CLAREC.CLACLMNB = CLWREC.CLWITM1N;
          call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes}; /* get claim header*/
        end
      end
      CLWREC.CLWMNOPT = 4;
      CLWREC.CLWACTIV = "I";
      XPCL002(); /* check security/xfer*/
      exit stack; /* transfer failed*/
    else
      if (KL0AM001.CAITEM != " ") /* fastpath request*/
        set KL0AM001.CATOAP cursor, modified, bold;
        converseLib.validationFailed(1); /* ITEM FIELD NOT VALID UNLESS OPTION IS*/
                                   /* ENTERED*/
        CLXREC.CLXERRF = "Y";
        CLXREC.CLXEDITF = "Y";
        exit stack;
      end
    end
  end
  ;
    /* validate map selection number*/
  ;
  if (KL0AM001.CLWMNOPT > 23
   || KL0AM001.CLWMNOPT < 1)
    set KL0AM001.CLWMNOPT cursor, bold;
    converseLib.validationFailed(8); /* INVALID SELECTION*/
    exit stack;
  end
  ;
   /* *********************************************************/
      /* validate option 1*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 1)
    if (CAALVL[1] == "Y" /* sales add*/
     || CAALVL[2] == "Y" /* traffic add*/
     || CAALVL[3] == "Y" /* credit add*/
     || CAALVL[4] == "Y" /* co-op add*/
     || CAALVL[6] == "Y") /* distribution add*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 2*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 2) /* not active in phase a*/
    if (CAALVL[1] == "Y" /* sales add*/
     || CAALVL[3] == "Y") /* credit add*/
      /* next sentence*/
    else
      converseLib.validationFailed(15); /* selection is not valid for user ID*/
      set KL0AM001.CLWMNOPT cursor, bold;
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 3*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 3) /* nil (international add*/
    if (CAALVL[5] == "Y")
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 4*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 4)
    if (COMMAREA.CAINQFL == "Y")
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 5*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 5)
    if (CACLVL[1] == "Y" /* sales change*/
     || CACLVL[2] == "Y" /* traffic change*/
     || CACLVL[3] == "Y" /* credit change*/
     || CACLVL[4] == "Y" /* co-op change*/
     || CACLVL[6] == "Y") /* distribution change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 6*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 6)
    if (CACLVL[1] == "Y" /* sales change*/
     || CACLVL[2] == "Y" /* traffic change*/
     || CACLVL[3] == "Y") /* credit change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15); /* not valid for user ID*/
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 7 or 16*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 7
   || KL0AM001.CLWMNOPT == 16)
    if (CAALVL[6] == "Y" /* distribution add*/
     || CACLVL[6] == "Y" /* distribution change*/
     || CACLVL[2] == "Y" /* traffic add*/
     || CACLVL[2] == "Y") /* traffic change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 8*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 8)
    if (CAALVL[6] == "Y" /* distribution add*/
     || CACLVL[6] == "Y") /* distribution change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 9 or 17 or 19*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 9
   || KL0AM001.CLWMNOPT == 17
   || KL0AM001.CLWMNOPT == 19) /* 5-4-93*/
    if (CAALVL[6] == "Y" /* distribution add*/
     || CACLVL[6] == "Y") /* distribution change*/
      /* next sentence*/
      if (KL0AM001.CLWMNOPT == 19) /* If Option 19, display error message*/
        set KL0AM001.CLWMNOPT cursor, bold;
        converseLib.validationFailed(771); /* Opt 19 unavailable; Use Opt 9*/
        exit stack;
      end
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 10*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 10)
    if (CAALVL[7] == "Y") /* data entry add*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate options 11 and 12*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 11
   || KL0AM001.CLWMNOPT == 12)
    if (CACLVL[7] == "Y") /* data entry change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 13*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 13)
    if (CACLVL[5] == "Y") /* nil change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 14*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 14)
    /* next sentence*/
  end
  ;
   /* *********************************************************/
      /* validate option 20 (Authorized Users Only)*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 20)
    if (COMMAREA.CAUSERID in KL00T11.XXXUSRID)
      COMMAREA.CATOAP = "KL00";
      XSEXIT();
      KL0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15); /* User not authorized for this menu*/
                                   /* option*/
      exit stack;
    end
  end
  ;
   /* *********************************************************/
      /* validate option 21*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 21)
    if (CACLVL[1] == "Y" /* sales change*/
     || CACLVL[2] == "Y" /* traffic change*/
     || CACLVL[3] == "Y" /* credit change*/
     || CACLVL[4] == "Y" /* co-op change*/
     || CACLVL[6] == "Y") /* distribution change*/
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
  ;
   /* *********************************************************/
      /* validate option 22*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 22)
    if (COMMAREA.CAINQFL == "Y")
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
  ;
   /* *********************************************************/
      /* validate option 23*/
   /* *********************************************************/
  ;
  if (KL0AM001.CLWMNOPT == 23)
    if (COMMAREA.CAINQFL == "Y")
      /* next sentence*/
    else
      set KL0AM001.CLWMNOPT cursor, bold;
      converseLib.validationFailed(15);
      exit stack;
    end
  end
  ;
  ;
  if (KL0AM001.CLACLMNB != 0)
    if (KL0AM001.CLWMNOPT == 1
     || KL0AM001.CLWMNOPT == 2
     || KL0AM001.CLWMNOPT == 3
     || KL0AM001.CLWMNOPT == 4
     || KL0AM001.CLWMNOPT == 7
     || KL0AM001.CLWMNOPT == 16
     || KL0AM001.CLWMNOPT == 10
     || KL0AM001.CLWMNOPT == 21
     || KL0AM001.CLWMNOPT == 23)
      set KL0AM001.CLACLMNB cursor, bold;
      set KL0AM001.CLWMNOPT bold;
      converseLib.validationFailed(235); /* CLAIM NUMBER NOT USED WITH THIS*/
                                   /* SELECTION*/
      exit stack;
    end
  else
    /* IF CL0AM001.CLWMNOPT EQ 5;*/
      /* OR CL0AM001.CLWMNOPT EQ 6;*/
    if (KL0AM001.CLWMNOPT == 8  
     || KL0AM001.CLWMNOPT == 9  
     || KL0AM001.CLWMNOPT == 17 
     || KL0AM001.CLWMNOPT == 19 /* 5-4-93*/
     || KL0AM001.CLWMNOPT == 11 
     || KL0AM001.CLWMNOPT == 12 
     || KL0AM001.CLWMNOPT == 13 
     || KL0AM001.CLWMNOPT == 14)
      set KL0AM001.CLACLMNB cursor, bold;
      set KL0AM001.CLWMNOPT bold;
      converseLib.validationFailed(236); /* CLAIM NUMBER REQUIRED WITH THIS*/
                                   /* SELECTION*/
      exit stack;
    end
  end
  ;
        /* transfer to selected option*/
  ;
  if (converseVar.eventKey is enter)
    CLWREC.CLWMNOPT = KL0AM001.CLWMNOPT;
    if (KL0AM001.CLWMNOPT == 1
     || KL0AM001.CLWMNOPT == 2
     || KL0AM001.CLWMNOPT == 3
     || KL0AM001.CLWMNOPT == 10)
      CLWREC.CLWACTIV = "A";
    else
      if (KL0AM001.CLWMNOPT == 4
       || KL0AM001.CLWMNOPT == 14
       || KL0AM001.CLWMNOPT == 23)
        CLWREC.CLWACTIV = "I";
      else
        if (KL0AM001.CLWMNOPT == 5  
         || KL0AM001.CLWMNOPT == 6  
         || KL0AM001.CLWMNOPT == 7  
         || KL0AM001.CLWMNOPT == 16 
         || KL0AM001.CLWMNOPT == 8  
         || KL0AM001.CLWMNOPT == 9  
         || KL0AM001.CLWMNOPT == 17 
         || KL0AM001.CLWMNOPT == 19 /* 5-4-93*/
         || KL0AM001.CLWMNOPT == 11 
         || KL0AM001.CLWMNOPT == 12 
         || KL0AM001.CLWMNOPT == 13 
         || KL0AM001.CLWMNOPT == 21)
          CLWREC.CLWACTIV = "C";
        end
      end
    end
    if (KL0AM001.CLWMNOPT == 1
     || KL0AM001.CLWMNOPT == 2
     || KL0AM001.CLWMNOPT == 3
     || KL0AM001.CLWMNOPT == 10)
      CLWREC.CLHSEQNB = 1;
      COMMAREA.CATOAP = "KL0E";
    else
      if (KL0AM001.CLWMNOPT == 4)
        CLWREC.CLHSEQNB = 1;
        COMMAREA.CATOAP = "KL0B";
      else
        if (KL0AM001.CLWMNOPT == 5
         || KL0AM001.CLWMNOPT == 6)
          CLAREC.CLACLMNB = KL0AM001.CLACLMNB;
          KL0AS06(); /* validate option 5 claim number*/
        else
          if (KL0AM001.CLWMNOPT == 7
           || KL0AM001.CLWMNOPT == 16)
            CLWREC.CLHSEQNB = 1;
            COMMAREA.CATOAP = "KL0T";
          else
            if (KL0AM001.CLWMNOPT == 8)
              CLAREC.CLACLMNB = KL0AM001.CLACLMNB;
              KL0AS02(); /* validate option 8 claim number*/
            else
              if (KL0AM001.CLWMNOPT == 9
               || KL0AM001.CLWMNOPT == 17
               || KL0AM001.CLWMNOPT == 19) /* 5-4-93*/
                CLAREC.CLACLMNB = KL0AM001.CLACLMNB;
                KL0AS03(); /* validate option 9 claim number*/
              else
                if (KL0AM001.CLWMNOPT == 11
                 || KL0AM001.CLWMNOPT == 12
                 || KL0AM001.CLWMNOPT == 13)
                  CLAREC.CLACLMNB = KL0AM001.CLACLMNB;
                  KL0AS04(); /* validate option 12 claim number*/
                else
                  if (KL0AM001.CLWMNOPT == 14)
                    CLAREC.CLACLMNB = KL0AM001.CLACLMNB;
                    KL0AS05(); /* validate option 14 claim number*/
                  else
                    if (KL0AM001.CLWMNOPT == 15)
                      CLWREC.CLHSEQNB = 1;
                      COMMAREA.CATOAP = "KL04";
                    else /* added 8-11-97*/
                      if (KL0AM001.CLWMNOPT == 21)
                        COMMAREA.CATOAP = "KL07";
                      else /* added 03-24-98*/
                        if (KL0AM001.CLWMNOPT == 22)
                          COMMAREA.CATOAP = "EK0A";
                        else /* added 03-24-98*/
                          if (KL0AM001.CLWMNOPT == 23)
                                  /* option 23 should act like inquiry*/
                                   /* mode if transfer done from kl08*/
                            /* to another claims application*/
                            CLWREC.CLWMNOPT = 4;
                            KL0AM001.CLWMNOPT = 4;
                            COMMAREA.CATOAP = "KL08";
                          else /* added 5-07-97*/
                            set KL0AM001.CLWMNOPT cursor, bold;
                            converseLib.validationFailed(19); /* INVALID OPTION*/
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
    if (KL0AM001.VAGen_EZEMSG == " "
     && converseVar.validationMsgNum == 0)
      XPCL002(); /* transfer*/
    end
    exit stack;
  else
    converseLib.validationFailed(2); /* pf key not valid*/
  end
  ;
end // end KL0A005

// check standard entry keys
Function KL0AS01()
  ;
  ;
    /* ---------- start stmt grp cl0as01 -----------------*/
  ;
    /* statement group cl0as01 - check valid entry key,*/
       /* do menu transfers if requested*/
  ;
   /* MOVE ' ' TO CL0AW01.CL0AWMSG;*/
  ;
  if (converseVar.eventKey is enter) /* enter - return to process*/
    return;
  else
    if (converseVar.eventKey is pa2) /* pa2 - exit application*/
      exit stack;
    else
      if (converseVar.eventKey is pf1) /* pf1 - help*/
        XSPF1();
        exit stack;
      else
        if (converseVar.eventKey is pf3) /* pf3 - return to prior menu*/
          return;
        else
          if (converseVar.eventKey is pf2) /* pf2 - go to 'iv0a'*/
            COMMAREA.CATOAP = "IV0A";
            XPCL002();
          else
            converseLib.validationFailed(2); /* invalid pf key*/
          end
        end
      end
    end
  end
  ;
  ;
    /* -----------   end of stmt grp cl0as01  ------------*/
  ;
end // end KL0AS01

// check standard entry keys
Function KL0AS02()
  ;
  ;
    /* ---------- start stmt grp cl0as02 -----------------*/
  ;
    /* statement group cl0as02 - validate claim number*/
  ;
  call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes}; /* inquire on claim hdr*/
  if (SQLCA.VAGen_SQLCODE == 0) /* if claim number found*/
    CL0AW01.CLWMNOPT = KL0AM001.CLWMNOPT;
    CL0AW01.YCTCD = CLAREC.YCTCD;
    if (CL0AW01.CL0AWKEY in YMOTBL.YMOKEY)
      if (KL0AM001.CLHSEQNB <= 1)
        CLWREC.CLHSEQNB = 1;
      else
        if (KL0AM001.CLHSEQNB <= CLAREC.CLACSQNB)
          CLWREC.CLHSEQNB = KL0AM001.CLHSEQNB; /* store seq.number*/
        else
          set KL0AM001.CLHSEQNB cursor, bold;
          converseLib.validationFailed(14); /* SEQUENCE NUMBER INVALID*/
          return;
        end
      end
      COMMAREA.CATOAP = "KL0W"; /* xfer to kl0w*/
    else
      converseLib.validationFailed(233); /* claim # invalid for menu option*/
      set KL0AM001.CLACLMNB cursor, bold;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* claim # not found*/
      set KL0AM001.CLACLMNB cursor, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(251); /* retry, dead lock condition*/
      else
        TA1REC.TA1PGMNM = "TA0040";
        TA1REC.TA1TBLKE = "GETTING CURRENT DATE";
        XPCL010();
      end
    end
  end
  ;
    /* -----------   end of stmt grp cl0as02  ------------*/
  ;
end // end KL0AS02

// validate claim nbr
Function KL0AS03()
    /* ---------- start stmt grp cl0as03 -----------------*/
  ;
    /* statement group cl0as03 - validate claim number*/
   /* *** Maintenance Log ***************************************/
   /* 03-11-94 BCourt init sql rec.*/
   /* ***********************************************************/
  ;
  set SQLCA empty; /* 3-11-94 add*/
  ;
  call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes}; /* inquire on claim hdr*/
  if (SQLCA.VAGen_SQLCODE == 0) /* if claim number found*/
    CL0AW01.CLWMNOPT = KL0AM001.CLWMNOPT;
    CL0AW01.YCTCD = CLAREC.YCTCD;
    if (CL0AW01.CL0AWKEY in YMOTBL.YMOKEY)
      if (KL0AM001.CLHSEQNB <= 1)
        CLWREC.CLHSEQNB = 1;
      else
        if (KL0AM001.CLHSEQNB <= CLAREC.CLACSQNB)
          CLWREC.CLHSEQNB = KL0AM001.CLHSEQNB; /* store seq.number*/
        else
          set KL0AM001.CLHSEQNB cursor, bold;
          converseLib.validationFailed(14); /* SEQUENCE NUMBER INVALID*/
          return;
        end
      end
      if (CLAREC.YCTCD == "CDR"
       || CLAREC.YCTCD == "DEF"
       || CLAREC.YCTCD == "OSD"
       || CLAREC.YCTCD == "RTS"
       || CLAREC.YCTCD == "RFL")
        COMMAREA.CATOAP = "KL02"; /* xfer to kl02 summary*/
      else
        converseLib.validationFailed(233); /* claim # invalid for menu option*/
        set KL0AM001.CLACLMNB cursor, bold;
      end
    else
      converseLib.validationFailed(233); /* claim # invalid for menu option*/
      set KL0AM001.CLACLMNB cursor, bold;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* claim # not found*/
      set KL0AM001.CLACLMNB cursor, bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        converseLib.validationFailed(251); /* retry, dead lock condition*/
      else
        XPCL010();
      end
    end
  end
  ;
    /* -----------   end of stmt grp cl0as03  ------------*/
  ;
end // end KL0AS03

// check standard entry keys
Function KL0AS04()
  ;
  ;
    /* ---------- start stmt grp cl0as04 -----------------*/
  ;
    /* statement group cl0as04 - validate claim number*/
  ;
  call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes}; /* inquire on claim hdr*/
  if (SQLCA.VAGen_SQLCODE == 0) /* if claim number found*/
    CL0AW01.CLWMNOPT = KL0AM001.CLWMNOPT;
    CL0AW01.YCTCD = CLAREC.YCTCD;
    if (CL0AW01.CL0AWKEY in YMOTBL.YMOKEY)
      ;
      if (CLAREC.CLAWSENF == "Y") /* entered thru worksheet*/
         /* next sentence*/
      else
        converseLib.validationFailed(233); /* claim # invalid for menu option*/
        set KL0AM001.CLACLMNB cursor, bold;
        return;
      end
      if (KL0AM001.CLHSEQNB <= 1)
        CLWREC.CLHSEQNB = 1;
      else
        if (KL0AM001.CLHSEQNB <= CLAREC.CLACSQNB)
          CLWREC.CLHSEQNB = KL0AM001.CLHSEQNB; /* store seq.number*/
        else
          set KL0AM001.CLHSEQNB cursor, bold;
          converseLib.validationFailed(14); /* SEQUENCE NUMBER INVALID*/
          return;
        end
      end
      COMMAREA.CATOAP = "KL0E"; /* xfer to kl0e*/
      ;
    else
      converseLib.validationFailed(233); /* claim # invalid for menu option*/
      set KL0AM001.CLACLMNB cursor, bold;
    end
  else
    converseLib.validationFailed(5); /* claim # invalid*/
    set KL0AM001.CLACLMNB cursor, bold;
  end
  ;
    /* -----------   end of stmt grp cl0as04  ------------*/
  ;
end // end KL0AS04

// check claim # for option 14
Function KL0AS05()
  ;
  ;
    /* ---------- start stmt grp cl0as05 -----------------*/
    /* statement group cl0as05 - validate claim number*/
  ;
    /* 4/89 add error mesgs for worksheet entered claim*/
                          /* or wrong claim type.*/
  ;
   /* 08/91 wjohns  change appl names for transferring*/
  ;
  ;
  call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes}; /* inquire on claim hdr*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if claim number found*/
    if (CLAREC.CLAWSENF == "N") /* not worksheet entry*/
      if (CLAREC.YCTCD in YCTTBL.YCTCD) /* test claim type:*/
        if (YCTTBL.YCTCDRF[sysVar.arrayIndex] == "Y" /* consumer defective*/
         || YCTTBL.YCTDEF[sysVar.arrayIndex] == "Y"  /* defective*/
         || YCTTBL.YCTRTSF[sysVar.arrayIndex] == "Y" /* return to stock*/
         || CLAREC.YCTCD == "RFL")                   /* refusal*/
          COMMAREA.CATOAP = "KL02"; /* xfer to kl02*/
        else
          set KL0AM001.CLACLMNB cursor, bold;
          converseLib.validationFailed(494); /* not correct claim type*/
        end
      else
        set KL0AM001.CLACLMNB cursor, bold;
        converseLib.validationFailed(494); /* not correct claim type*/
      end
    else
      converseLib.validationFailed(493); /* worksheet entered clm bad*/
      set KL0AM001.CLACLMNB cursor, bold;
    end
  else
    converseLib.validationFailed(5); /* claim # invalid*/
    set KL0AM001.CLACLMNB cursor, bold;
  end
  ;
    /* -----------   end of stmt grp cl0as05  ------------*/
  ;
end // end KL0AS05

// check menu option 5 and 6
Function KL0AS06()
  ;
  ;
    /* ---------- start stmt grp cl0as06 -----------------*/
  ;
    /* statement group cl0as06 - validate claim number*/
  ;
  if (KL0AM001.CLACLMNB == 0)
    CLWREC.CLHSEQNB = 1;
    COMMAREA.CATOAP = "KL0B"; /* xfer to kl0b*/
    return;
  end
  ;
  ;
  call "IO1160" ("S ", SQLCA, CLAREC) {isNoRefresh = yes, isExternal = yes}; /* inquire on claim hdr*/
  if (SQLCA.VAGen_SQLCODE == 0) /* if claim number found*/
    CL0AW01.CLWMNOPT = KL0AM001.CLWMNOPT;
    CL0AW01.YCTCD = CLAREC.YCTCD;
    if (CL0AW01.CL0AWKEY in YMOTBL.YMOKEY)
      ;
      if (CLAREC.CLAWSENF == "N" /* not entered thru worksheet*/
       || CLAREC.CLAWSENF == " ") /* not entered thru worksheet*/
         /* next sentence*/
      else
        converseLib.validationFailed(233); /* claim # invalid for menu option*/
        set KL0AM001.CLACLMNB cursor, bold;
        return;
      end
      if (KL0AM001.CLHSEQNB <= 1)
        CLWREC.CLHSEQNB = 1;
      else
        if (KL0AM001.CLHSEQNB <= CLAREC.CLACSQNB)
          CLWREC.CLHSEQNB = KL0AM001.CLHSEQNB; /* store seq.number*/
        else
          set KL0AM001.CLHSEQNB cursor, bold;
          converseLib.validationFailed(14); /* SEQUENCE NUMBER INVALID*/
          return;
        end
      end
      COMMAREA.CATOAP = "KL0E"; /* xfer to cl0e*/
      ;
    else
      converseLib.validationFailed(233); /* claim # invalid for menu option*/
      set KL0AM001.CLACLMNB cursor, bold;
    end
  else
    converseLib.validationFailed(5); /* claim # invalid*/
    set KL0AM001.CLACLMNB cursor, bold;
  end
  ;
    /* -----------   end of stmt grp cl0as06  ------------*/
  ;
end // end KL0AS06

