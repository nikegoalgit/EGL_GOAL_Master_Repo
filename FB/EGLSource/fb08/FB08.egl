package fb08;

import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import fb.common.*;
import ff.common.FF00ENU;
import ku.common.*;
import op.common.*;
import pa.common.*;
import pc.common.*;
import pg.common.*;
import pt.common.*;
import sy.common.*;
import ta.common.*;

//*** PROGRAM=FB08 ****
// This program is part of the Footwear Buy system.  The screen
// displays the overall result of the direct ship to pull from
// stock maintennce(FB02).  The main function of this screen is
// inquiry.  However, th ability to update the direct ship ac-
// cept flag is provided.
// The user may also exit to any allowed application by using
// fast path or PF keys
// 
//   date    name  description of change
// -------- ------ ----------------------------------------
// 11-15-89 LREIN  created
// 07-03-91 jalle1 added sales order to map.
// 01-28-93 jmclau pa-308 direct ship orders that aren't nil
//                 that have preadvises should be taken out of
//                 the stock quantity to buy calculation.
// 06-11-93 ldeluh fix loop
// 09-22-93 ldeluh Convert to csp v4.
// 10-29-93 ldeluh FB322 add divert check logic.
// 12-22-93 ldeluh FB324-Add musical size run indicator to
//                 map.
// 12-20-93 lrein  added sum code table to verify only using
//                 domestic whses for european centralised
//                 forecasting project
// 05-24-96 jliber Modified divert logic
// 10-22-96 rtran  Modified to bring the future orders into the
//                 current buy.
// 10-14-97 amand1 Application is regenerated due to the oct'97
//                 DB2 table changes.
// 11-14-97 RJOGIA FB1131-Bringing the current and future
//                 Indirect Direct shipment orders into the
//                 current buy.
// 12-23-97 RTRAN  FB1131-Correct display value for DRS code
//                 = 2 on the screen as 'BLD' and heading
//                 'PFS WH' to 'WH'.
// 01-08-97 oricha y2k modifications:  fb01m010 zero fill year;
//                 s11, w00, 100, 111, 1121, 121, 122, 123,
//                 130, 510, 632.
// 10-07-99 SKATHI INCLUDE BLANK XREF SO'S IN DISPLAY
// *********************
Program FB08 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FB08W00 FB08W00; // record
  FB08W01 FB08W01; // record
  FB08W02 FB08W02; // record
  FB08W03 FB08W03; // record
  FB08W04 FB08W04; // record
  FB08W05 FB08W05; // record
  FB8REC FB8REC; // record
  FB9REC FB9REC; // record
  FBEREC FBEREC; // record
  FBHREC FBHREC; // record
  FBIREC FBIREC; // record
  FBKREC FBKREC; // record
  FBLREC FBLREC; // record
  FBMREC FBMREC; // record
  FBOREC FBOREC; // record
  FBWREC FBWREC; // record
  FBXREC FBXREC; // record
  OP1REC OP1REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FB08TT1 {deleteAfterUse = yes}; // table
  use FB08TP1 {deleteAfterUse = yes}; // table
  use FB08M.FB08M010, // form
  		FB08M.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFB001: XPFB001();
     /* ------------------------------------------------------------*/
     /* initialise working storage and map areas*/
     /* ------------------------------------------------------------*/
    ;
    set FB08M010 initial; /* map area*/
    ;
    set FB08W00 empty; /* working storage*/
    set FB08W01 empty; /* display working storage for tsq*/
    set FB08W02 empty; /* for jcl stuff*/
    set FB08W03 empty; /* for vfblav01 stuff*/
    set FB08W04 empty; /* screen heading data*/
    set FBIREC empty; /* fb1510 iomod record*/
    set FBXREC empty; /* passed record*/
    set TAEREC empty; /* error record*/
    set TA5REC empty; /* error record*/
    set TA6REC empty; /* submit jcl record*/
    set SQLCA empty; /* io mod area*/
    set XX0XW01 empty; /* time date work area*/
    ;
    FB08W00.FB08WRDS = "N"; /* dont request data*/
    FB08W00.FB08WMCS = "N"; /* dont format map*/
    FB08W00.XXXTSLEN = 1052; /* temp storage queue length*/
    ;
    if (COMMAREA.CAFRMSYS == "FB") /* came from this system*/
      ;
      /* ------------------------------------------------------------*/
       /* if the from system is fb, and the application is not one of*/
       /* those below, a list of data from fbwrec is moved to fbxrec*/
      /* ------------------------------------------------------------*/
      ;
      if (COMMAREA.CAFROMAP != "FB0A"
       && COMMAREA.CAFROMAP != "FB0B"
       && COMMAREA.CAFROMAP != "FB0C"
       && COMMAREA.CAFROMAP != "FB0D"
       && COMMAREA.CAFROMAP != "FB0E"
       && COMMAREA.CAFROMAP != "FB0G"
       && COMMAREA.CAFROMAP != "FB0I"
       && COMMAREA.CAFROMAP != "FB0J"
       && COMMAREA.CAFROMAP != "FB0K"
       && COMMAREA.CAFROMAP != "FB0L"
       && COMMAREA.CAFROMAP != "FB0N"
       && COMMAREA.CAFROMAP != "FB0O"
       && COMMAREA.CAFROMAP != "FB0P")
        FBXREC.FBXGROUP = FBWREC.FBWFILL;
        if (FBXREC.SY1STNBR == " "
         || FBXREC.CAUSERID == " ")
          FB08W00.FB08WIFL = "Y"; /* invalid fastpath flag*/
          converseLib.validationFailed(303);
        end
      else
        FB08W00.FB08WIFL = "Y"; /* invalid fastpath flag*/
        converseLib.validationFailed(303);
      end
      ;
    else
      FB08W00.FB08WIFL = "Y"; /* invalid fastpath flag*/
      converseLib.validationFailed(303);
    end
     /* ------------------------------------------------------------*/
     /* if the key data is in the commarea, it is moved to the map,*/
     /* and the data request switch and map format switch are set*/
     /* to yes*/
     /* ------------------------------------------------------------*/
    ;
    if (FBXREC.SY1STNBR[1] != " ") /* style number in commarea*/
      FB08M010.SY1STNBR = FBXREC.SY1STNBR[1]; /* move to map*/
      FB08M010.SY2CLRID = FBXREC.SY2CLRID[1];
      FB08M010.XDMCD = FBXREC.XDMCD[1];
      FB08W04.SY1STNBR = FBXREC.SY1STNBR[1]; /* move to disp ws*/
      FB08W04.SY2CLRID = FBXREC.SY2CLRID[1];
      FB08W04.XDMCD = FBXREC.XDMCD[1];
      FB08W00.FB08WRDS = "Y"; /* request data*/
    end
    ;
    if (FBXREC.FB8BUYDT != 0) /* buy date in commarea*/
      FB08W00.FB08W-ORD-ADJ-BUY-DT = FBXREC.FB8BUYDT; /* ord ajd dt*/
      FB08W00.FB08WBDT = FBXREC.FB8BUYDT; /* separate*/
      FB08M010.FB08MBMO = FB08W00.FB08MBMO; /* yymm format*/
      FB08W04.FB08MBMO = FB08W00.FB08MBMO; /* yymm format*/
      FB08W00.FB08WRDS = "Y"; /* request data*/
    end
    ;
    ;
    ;
    FB08W00.FB08WAC = "Y"; /* Initialize product accept fl*/
    FB08001: FB08001();
     /* ------------------------------------------------------------*/
     /* flow to converse the main process*/
     /* ------------------------------------------------------------*/
    ;
    goto FB08001; /* converse the main process*/
  end // end main
end // end FB08

// main process drs cust det scrn
Function FB08001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) obtain the data to display*/
   /* 2) display appropriate map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FB08100(); /* Obtain data to display*/
  ;
  FB08200(); /* Format and display the map*/
  ;
  FB08300(); /* Check attention identifier*/
  ;
  FB08400(); /* Reset fields to normal intensity*/
  ;
  FB08500(); /* Verify the entered data*/
  ;
  FB08600(); /* Process valid input request*/
  ;
  ;
  ;
end // end FB08001

// obtain data to display
Function FB08100()
  ;
  if (FB08W00.FB08WRDS != "Y" /* no data requested*/
   || converseVar.validationMsgNum != 0) /* error found*/
    return; /* continue processing*/
  end
  ;
  FB08S21(); /* load sumcode array*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Get the Scheduler code*/
   /* ------------------------------------------------------------*/
  ;
  FB08170(); /* Get the Scheduler code*/
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Get the Scheduler Control table row*/
   /* ------------------------------------------------------------*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    FB08180(); /* Get the Scheduler cntrl row*/
  else
    ;
    converseLib.validationFailed(257);
  end
  ;
  ;
  ;
  FB08W00.FB08WSCS = "N"; /* cant scroll*/
  FB08S01(); /* purge temp storage*/
  FB08110(); /* process vdnord01*/
  FB08120(); /* process vfblav01*/
  FB08130(); /* process vfqtbs01*/
  ;
  if (FB08W00.FB08WIXM > 0) /* partial page*/
    FB08S02(); /* add page to temp storage*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* build key to get product desc, color abreviation.*/
   /* ------------------------------------------------------------*/
  ;
  set PG2REC empty;
  PG2REC.XGPCD = "02";
  PG2REC.SY1STNBR = FB08M010.SY1STNBR;
  PG2REC.SY2CLRID = FB08M010.SY2CLRID;
  PG2REC.XDMCD = FB08M010.XDMCD;
  ;
  XSPG202(); /* get prod desc, color abrv*/
  ;
   /* ------------------------------------------------------------*/
    /* if non normal rtn code, or product not found, set up error*/
   /* ------------------------------------------------------------*/
  ;
  if (TA1REC.TA1FUNC == "RETN") /* abend message sent to screen*/
    converseLib.clearScreen();
     /* reset screen*/
  end
  ;
  if (TA1REC.TA1FUNC == "POST") /* resource in use*/
    converseLib.validationFailed(47); /* set error message*/
    FB08M010.XXXMODID = "100"; /* process number*/
    FB08W00.FB08WRDS = "N"; /* dont request data*/
    exit stack; /* display map*/
  end
  ;
  if (TA1REC.TA1FUNC == "RETN" /* database error*/
   || SQLCA.VAGen_SQLCODE != 0) /* product not found*/
    FB08S03(); /* reset screen*/
    converseLib.validationFailed(167); /* invalid product*/
    set FB08M010.SY1STNBR cursor, bold;
    FB08M010.XXXMODID = "100"; /* process number*/
    FB08W00.FB08WBPS = "Y"; /* bad product*/
    FB08W00.FB08WRDS = "N"; /* dont request data*/
    exit stack; /* display map*/
  end
  ;
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  FB08W00.FB08WMCS = "Y"; /* format map*/
  FB08W00.FB08WSCS = "Y"; /* can scroll now*/
  ;
   /* ------------------------------------------------------------*/
   /* Save the key information in map display storage area.*/
   /* ------------------------------------------------------------*/
  ;
  FB08W04.SY1STNBR = FB08M010.SY1STNBR; /* style number*/
  FB08W04.SY2CLRID = FB08M010.SY2CLRID; /* color code*/
  FB08W04.XDMCD = FB08M010.XDMCD; /* dimension code*/
  FB08W04.FB08MBMO = FB08M010.FB08MBMO; /* buy month*/
  FB08W04.PT3YYMM = FB08W03.PT3YYMM[1]; /* bottom line month*/
  FB08W04.SY1SSTNM = PG2REC.SY1SSTNM; /* style short name*/
  FB08W04.SY2CLRAB = PG2REC.SY2CLRAB; /* color abbreviation*/
  FBXREC.SY1STNBR[1] = FB08M010.SY1STNBR; /* style number*/
  FBXREC.SY2CLRID[1] = FB08M010.SY2CLRID; /* color code*/
  FBXREC.XDMCD[1] = FB08M010.XDMCD; /* dimension code*/
  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* buy month*/
  FB08W00.FB08WBCC = 19; /* century*/

  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* move yymm to w*/
   /* -------- y2k out begin ---------*/
   /* MOVE 19 TO FB08W00.FB08WBCC;               /* century*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  if (FB08W00.FB08WBYY > 65)
    FB08W00.FB08WBCC = 19; /* century*/
  else
    FB08W00.FB08WBCC = 20; /* century*/
  end
   /* -------- y2k in end ------------*/

  FB08W00.FB08WBDD = 01; /* day*/
  FBXREC.FB8BUYDT = FB08W00.FB08WBDT; /* buy date ccyymmdd*/
  FB08W00.FB08WBPS = "N"; /* bad product sw*/
  FB08W00.XXXTSPAG = 1; /* get first tsq page*/
  ;
   /* ------------------------------------------------------------*/
   /* Obtain the tolerance quantity from the control record.*/
   /* ------------------------------------------------------------*/
  ;
  FB08S17();
  ;
end // end FB08100

// process VDNORD01
Function FB08110()
   /* ------------------------------------------------------------*/
    /* this process*/
     /* 1.  selects the set from dfbuy.vdnord01 (fbhrec)*/
     /* 2.  if no errors, fetches rows until end of cursor*/
     /* 3.  closes the cursor*/
   /* ------------------------------------------------------------*/
  ;
  FB08111(); /* select set*/
  FB08W00.FB08WCCT = 0; /* customer count*/
  FB08W00.FB08WIXM = 0; /* number of temp storage lines*/
  FB08W04.FB08MTDQ = 0; /* total drs quantity*/
  FB08W04.FB08MDBQ = 0; /* total drs bld quantity*/
  FB08W04.FBKSTQTB = 0; /* stock quantity*/
  FB08W00.PC2CUXID = " "; /* initialise save cu xref*/
  FB08W00.OP1CUOID = 0; /* cust order id*/
  FB08W00.OP1NORID = 0; /* nike order id*/
  FB08W00.XDSCD = " "; /* initialise save direct ship code*/
  FB08W00.XWHCD = " "; /* initialise save warehouse code*/
  FB08W00.FB08WBAS = "N"; /* dont allow build all*/
  FB08W00.FB08WBXF = "N"; /* blank xref flag*/
  FB08W00.FB08WEON = "N"; /* end of dnord rows*/
  FB08W00.FB08W-CHK-DTE = 0; /* initialize check date*/
  ;
  while (FB08W00.FB08WEON != "Y") /* until no more rows*/
    FB08112(); /* fetch next row*/
  end
  ;
  FB08113(); /* close cursor*/
  ;
  if (converseVar.validationMsgNum != 0) /* an error found*/
    FB08W00.FB08WRDS = "N"; /* dont request data*/
    exit stack; /* display the map*/
  end
end // end FB08110

// open VDNORD01 cursor
Function FB08111()
   /* ------------------------------------------------------------*/
   /* set the key, select a set of rows from dfbuy.vfblav01*/
   /* ------------------------------------------------------------*/
  ;
  set FBHREC empty; /* initialise record*/
  FBHREC.FBHDSAFL = "*";
  FBHREC.XWHCD = "*";
  FBHREC.XDSCD = "*";
  FBHREC.FB7BUYST = "Y"; /* Future buy*/
  ;
  FBHREC.SY1STNBR = FB08M010.SY1STNBR; /* style number*/
  FBHREC.SY2CLRID = FB08M010.SY2CLRID; /* color code*/
  FBHREC.XDMCD = FB08M010.XDMCD; /* dimension code*/
  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* move yymm to workarea*/
   /* -------- y2k out begin ---------*/
   /* MOVE 19 TO FB08W00.FB08WBCC;               /* century*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  if (FB08W00.FB08WBYY > 65)
    FB08W00.FB08WBCC = 19; /* century*/
  else
    FB08W00.FB08WBCC = 20; /* century*/
  end
   /* -------- y2k in end ------------*/
  FB08W00.FB08WBDD = 1; /* day*/
  FBHREC.FB8BUYDT = FB08W00.FB08WBDT; /* move to ccyymm01*/
  ;
  if (FBXREC.XQACD[1] != "  ") /* quality code not spaces*/
    FBHREC.XQACD = FBXREC.XQACD[1]; /* move to key*/
  else
    FBHREC.XQACD = "01"; /* move default*/
  end
  ;
  if (FBXREC.PC2INSEG[1] != "   ") /* spec code not spaces*/
    FBHREC.PC2INSEG = FBXREC.PC2INSEG[1]; /* move to key*/
  else
    FBHREC.PC2INSEG = "000"; /* move default*/
  end
  ;
  if (FBXREC.XPGCD[1] != "  ")
                                   /* package type code not spaces*/
    FBHREC.XPGCD = FBXREC.XPGCD[1]; /* move to key*/
  else
    FBHREC.XPGCD = "00"; /* move default*/
  end
  ;
  if (FBXREC.XUMCD[1] != "  ") /* unit of measure not spaces*/
    FBHREC.XUMCD = FBXREC.XUMCD[1]; /* move to key*/
  else
    FBHREC.XUMCD = "01"; /* move default*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Declare cursor for DFBUY.VDNORD01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4640" ("S5", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08111"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "111";
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack;
  ;
end // end FB08111

// fetch VDNORD01 row
Function FB08112()
   /* ------------------------------------------------------------*/
   /* If row not found return to previous process.  If found,*/
   /* process.  If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO4640" ("N5", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* fetch next row*/
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      FB08W00.FB08WEON = "Y"; /* end of rows*/
      return; /* return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      if (FB08W00.FB08W-CHK-DTE == 0) /* first row of this set*/
        FB081121(); /* convert buy dt into po id mo rng*/
      end
      ;
      if (FBHREC.XDVCD != "02") /* not division 02*/
        FB08W00.FB08WBAS = "Y"; /* build all allowed*/
        ;
        if (FBHREC.FBHDSAFL != "Y")
          FB08W00.FB08WAC = "N"; /* product accept fl set to 'n'*/
        end
        ;
        set FBIREC empty; /* init fb1510 iomod record*/
        FBIREC.SY1STNBR = FBHREC.SY1STNBR; /* style nbr*/
        FBIREC.SY2CLRID = FBHREC.SY2CLRID; /* color id*/
        FBIREC.XDMCD = FBHREC.XDMCD; /* dim code*/
        FBIREC.PA1BUYMO = FB08W00.FB08W-ORD-ADJ-BUY-MO; /* ord adj buy mo ccyymm*/
        FBIREC.XWHCD = FBHREC.XWHCD; /* whse code*/
        FBIREC.OP1PARTN = FBHREC.OP1PARTN; /* ord partition char*/
        FBIREC.OP1CUOID = FBHREC.OP1CUOID; /* cust ord id*/
        FBIREC.OP1NORID = FBHREC.OP1NORID; /* nike ord id*/
        ;
        FB08S18(); /* check for product preadvises*/
        ;
        if (FBIREC.FBI-COUNT == 0) /* No preadvises found*/
          set FBIREC empty; /* init fb1510 iomod record*/
          FB08W00.FB08W-DIVERT-COUNT = 0;
          FBIREC.SY1STNBR = FBHREC.SY1STNBR; /* style nbr*/
          FBIREC.SY2CLRID = FBHREC.SY2CLRID; /* color id*/
          FBIREC.XDMCD = FBHREC.XDMCD; /* dim code*/
          FBIREC.PA1BUYMO = FB08W00.FB08W-ORD-ADJ-BUY-MO; /* ord adj buy mo ccyymm*/
          FBIREC.XWHCD = FBHREC.XWHCD; /* whse code*/
          FBIREC.OP1PARTN = FBHREC.OP1PARTN; /* ord partition char*/
          FBIREC.OP1CUOID = FBHREC.OP1CUOID; /* cust ord id*/
          FBIREC.OP1NORID = FBHREC.OP1NORID; /* nike ord id*/
          FBIREC.PRDCUID = FBHREC.PC2CUXID; /* prdcu id*/
          FBIREC.PKGTYPCD = FBHREC.XPGCD; /* pck type code*/
          FBIREC.XQAQALCD = FBHREC.XQACD; /* qual code*/
          FBIREC.XUMUOMCD = FBHREC.XUMCD; /* uom code*/
          FBIREC.FBI-DLVRY-DT = FB08W00.FB08W-CHK-DTE; /* poid mo rng*/
          ;
          FB08S19(); /* check for diverts*/
          ;
          if (FB08W00.FB08W-DIVERT-COUNT == 0) /* No diverts found*/
            ;
            FB08S20(); /* check for musical size run*/
            ;
            FB08S04(); /* format temp storage line*/
            ;
            FB08S05(); /* accumulate heading totals*/
  /* IF FBHREC.PC2CUXID EQ ' ';*/
  /* MOVE 'Y' TO FB08W00.FB08WBXF;/* blank xref flag*/
  /* MOVE 349 TO FBXREC.XXXMSGNO;*/
  /* END;*/
          end
        end
      end
      ;
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08112"; /* Process name*/
  TA1REC.TA1LOC = "FETCH NEXT ROW          ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "112";
  exit stack;
  ;
end // end FB08112

// fetch VDNORD01 row
Function FB081121()
   /* ------------------------------------------------------------*/
   /* Convert the buy date from VDNOR01 table into po id mo rng*/
   /* needed for DPRODC.VPOITM01 table.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  FB08W00.FB08W-TMP-DT = FBHREC.FB8BUYDT; /* use buy dt to convert*/
  ;
  FB08W00.FB08W-CHK-CC = FB08W00.FB08W-TMP-CC; /* set century*/
  FB08W00.FB08W-CHK-YY = FB08W00.FB08W-TMP-YY; /* set year*/
  FB08W00.FB08W-CHK-DM = FB08W00.FB08W-TMP-MM; /* set dlv mnth*/
  FB08W00.FB08W-CHK-MM = FB08W00.FB08W-TMP-MM - 2;
  ;
   /* ----------- y2k out begin -----------*/
   /* IF FB08W00.FB08W-CHK-MM LT 0;*/
     /* MOVE 11 TO FB08W00.FB08W-CHK-MM;*/
     /* FB08W00.FB08W-CHK-YY = FB08W00.FB08W-CHK-YY - 1;*/
   /* ELSE;*/
     /* IF FB08W00.FB08W-CHK-MM EQ 0;*/
        /* MOVE 12 TO FB08W00.FB08W-CHK-MM;*/
        /* FB08W00.FB08W-CHK-YY = FB08W00.FB08W-CHK-YY - 1;*/
     /* END;*/
   /* END;*/
   /* ----------- y2k out end -------------*/
   /* ----------- y2k in  begin -----------*/
  if (FB08W00.FB08W-CHK-MM < 0)
    FB08W00.FB08W-CHK-MM = 11;
    FB08W00.FB08W-CHK-CY = FB08W00.FB08W-CHK-CY - 1;
  else
    if (FB08W00.FB08W-CHK-MM == 0)
      FB08W00.FB08W-CHK-MM = 12;
      FB08W00.FB08W-CHK-CY = FB08W00.FB08W-CHK-CY - 1;
    end
  end
   /* ----------- y2k in end --------------*/
  ;
  FB08W00.FB08W-CHK-DTE = FB08W00.FB08W-CHK-DT;
  ;
  ;
end // end FB081121

// close VDNORD01 cursor
Function FB08113()
   /* ------------------------------------------------------------*/
   /* close VDNORD01 cursor*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4640" ("C5", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB08M010.XXXMODID = "113"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB08W00.FB08WMCS = "N"; /* dont format map*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE CURSOR        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSRQTB01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBHREC.FBHGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08113

// process VFBLAV01
Function FB08120()
   /* ------------------------------------------------------------*/
    /* this process*/
     /* 1.  selects the set from dfbuy.vfblav01 (fblrec)*/
     /* 2.  if no errors, fetches rows until end of cursor*/
     /* 3.  if no rows, does error processing*/
     /* 4.  closes the cursor*/
   /* ------------------------------------------------------------*/
  ;
  FB08121(); /* select set*/
  FB08W00.FB08WFFI = "Y"; /* first fetch*/
  FB08W00.FB08WWIX = 1; /* initialise vfblav01 index*/
  set FB08W03 empty; /* initialise vfblav01 work area*/
  ;
  while (SQLCA.VAGen_SQLCODE != 100) /* until no more rows*/
    FB08122(); /* fetch next row*/
    ;
  end
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check for no frozen bottom line availability*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08W00.FB08WBLF == "N") /* no vfblav01 row found*/
    converseLib.validationFailed(305); /* hit pf18 to freeze b/l*/
    return;
  end
  ;
  ;
  ;
  if (FB08W00.FB08WFFI == "Y") /* no rows found*/
    FB08S03(); /* error processing*/
    converseLib.validationFailed(18); /* no data to display*/
    FB08M010.XXXMODID = "120"; /* process number*/
    FB08W00.FB08WBPS = "Y"; /* bad product*/
    set FB08M010.SY1STNBR cursor, bold;
  end
  ;
  FB08123(); /* close cursor*/
  ;
  if (converseVar.validationMsgNum != 0) /* an error found*/
    FB08W00.FB08WRDS = "N"; /* dont request data*/
    exit stack; /* display the map*/
  end
end // end FB08120

// select VFBLAV01 set
Function FB08121()
   /* ------------------------------------------------------------*/
   /* set the key, select a set of rows from dfbuy.vfblav01*/
   /* ------------------------------------------------------------*/
  ;
  set FBLREC empty; /* initialise record*/
  FBLREC.SY1STNBR = FB08M010.SY1STNBR; /* style number*/
  FBLREC.SY2CLRID = FB08M010.SY2CLRID; /* color code*/
  FBLREC.XDMCD = FB08M010.XDMCD; /* dimension code*/
  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* move yymm to workarea*/
   /* -------- y2k out begin ---------*/
   /* MOVE 19 TO FB08W00.FB08WBCC;               /* century*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  if (FB08W00.FB08WBYY > 65)
    FB08W00.FB08WBCC = 19; /* century*/
  else
    FB08W00.FB08WBCC = 20; /* century*/
  end
   /* -------- y2k in end ------------*/
  FB08W00.FB08WBDD = 1; /* day*/
  FBLREC.FB8BUYDT = FB08W00.FB08WBDT; /* move to ccyymm01*/
  ;
  if (FBXREC.XQACD[1] != "  ") /* quality code not spaces*/
    FBLREC.XQACD = FBXREC.XQACD[1]; /* move to key*/
  else
    FBLREC.XQACD = "01"; /* move default*/
  end
  ;
  if (FBXREC.PC2INSEG[1] != "   ") /* spec code not spaces*/
    FBLREC.PC2INSEG = FBXREC.PC2INSEG[1]; /* move to key*/
  else
    FBLREC.PC2INSEG = "000"; /* move default*/
  end
  ;
  if (FBXREC.XPGCD[1] != "  ")
                                   /* package type code not spaces*/
    FBLREC.XPGCD = FBXREC.XPGCD[1]; /* move to key*/
  else
    FBLREC.XPGCD = "00"; /* move default*/
  end
  ;
  if (FBXREC.XUMCD[1] != "  ") /* unit of measure not spaces*/
    FBLREC.XUMCD = FBXREC.XUMCD[1]; /* move to key*/
  else
    FBLREC.XUMCD = "01"; /* move default*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Select the set to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
   /* -------- y2k out begin ---------*/
   /* CALL IO4680 'S1',SQLCA,FBLREC (NOMAPS,NONCSP,REPLY;/* Select set*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  try
    call "VFBLAV02" ("S1", SQLCA, FBLREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
   /* -------- y2k in end ------------*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB08M010.XXXMODID = "121"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB08W00.FB08WMCS = "N"; /* dont format map*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBLAV02"; /* Table view name*/
  TA1REC.TA1TBLKE = FBLREC.FBLGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08121

// fetch next VFBLAV01 row
Function FB08122()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
   /* ---------- y2k out begin ----------*/
   /* CALL IO4680 'N1',SQLCA,FBLREC (NOMAPS,NONCSP,REPLY;/* Select row*/
   /* ---------- y2k out begin ----------*/
   /* ---------- y2k out begin ----------*/
  try
    call "VFBLAV02" ("N1", SQLCA, FBLREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
   /* ---------- y2k out begin ----------*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      ;
      if (FBLREC.XWHCD in FB08W00.XWH-WHSE-CD)
        FB08W03.FBLGROUP[FB08WWIX] = FBLREC.FBLGROUP;
        FB08W00.FB08WWIX = FB08W00.FB08WWIX + 1;
        FB08W00.FB08WFFI = "N"; /* not first fetch any more*/
      end
      ;
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      if (FB08W00.FB08WFFI == "N") /* not first fetch any more*/
        return; /* Return to previous process*/
      else
        ;
        ;
        FB08W00.FB08WBLF = "N"; /* no vfblav01 row found*/
        converseLib.validationFailed(305); /* hit pf18 to freeze b/l*/
        return; /* Return to previous process*/
      end
      ;
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB08M010.XXXMODID = "122"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB08W00.FB08WMCS = "N"; /* dont format map*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBLAV02"; /* Table view name*/
  TA1REC.TA1TBLKE = FBLREC.FBLGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08122

// close VFBLAV01 cursor
Function FB08123()
   /* ------------------------------------------------------------*/
   /* close cursor*/
   /* ------------------------------------------------------------*/
  ;
   /* ---------- y2k out begin --------*/
   /* CALL IO4680 'C1',SQLCA,FBLREC (NOMAPS,NONCSP,REPLY; /* Select set*/
   /* ---------- y2k out end ----------*/
   /* ---------- y2k in  begin --------*/
  try
    call "VFBLAV02" ("C1", SQLCA, FBLREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
   /* ---------- y2k in end -----------*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  FB08M010.XXXMODID = "123"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB08W00.FB08WMCS = "N"; /* dont format map*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before display*/
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE CURSOR        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBLAV02"; /* Table view name*/
  TA1REC.TA1TBLKE = FBLREC.FBLGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08123

// obtain VFQTBS01 row
Function FB08130()
   /* ------------------------------------------------------------*/
    /* build key for fbkrec*/
   /* ------------------------------------------------------------*/
  ;
  set FBKREC empty; /* initialise work area*/
  FBKREC.SY1STNBR = FB08M010.SY1STNBR; /* style number*/
  FBKREC.SY2CLRID = FB08M010.SY2CLRID; /* color code*/
  FBKREC.XDMCD = FB08M010.XDMCD; /* dimension code*/
  FBKREC.FB8RCTYP = "B"; /* record type*/
  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* yymm format*/
   /* -------- y2k out begin ---------*/
   /* MOVE 19 TO FB08W00.FB08WBCC;               /* century*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  if (FB08W00.FB08WBYY > 65)
    FB08W00.FB08WBCC = 19; /* century*/
  else
    FB08W00.FB08WBCC = 20; /* century*/
  end
   /* -------- y2k in end ------------*/
  FB08W00.FB08WBDD = 01; /* day*/
  FBKREC.FB8BUYDT = FB08W00.FB08WBDT; /* ccyymmdd format*/
  ;
  try
    call "IO4740" ("S ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      FB08W04.FBKSTQTB = FBKREC.FB8FTQTB;
      FB08W04.FB08MTFQ = FBKREC.FB8FTQTB;
      ;
      if (FBKREC.FBKFSAFL != "Y")
        FB08W00.FB08WAC = "N"; /* product accept fl set to 'n'*/
      end
      ;
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      FB08W04.FBKSTQTB = 0;
      return;
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08130"; /* Process name*/
  TA1REC.TA1LOC = "FETCH UNIQUE TABLE ROW  ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  FB08M010.XXXMODID = "130"; /* process number*/
  exit stack;
  ;
  ;
  ;
end // end FB08130

// Obtain scheduler code
Function FB08170()
  ;
  ;
  ;
   /* -------------------------------------------------*/
    /* Format key*/
   /* -------------------------------------------------*/
  ;
  set PG1REC empty;
  PG1REC.XXXUSER = FBXREC.CAUSERID;
  PG1REC.XGPCD = "02"; /* Footwear*/
  PG1REC.PG1SC4CD = "**"; /* Scheduler code*/
  PG1REC.PG1FCTCD = "**"; /* Forecast code*/
  ;
  try
    call "IO1200" ("SA", SQLCA, PG1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return;
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return code*/
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08170"; /* Process name*/
  TA1REC.TA1LOC = "FETCH SCHEDULER CODE    ";
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUSER01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "170";
  exit stack;
  ;
end // end FB08170

// Get scheduler row
Function FB08180()
  ;
  set FBMREC empty;
  FBMREC.PG1SC4CD = PG1REC.PG1SC4CD;
  ;
  try
    call "IO4670" ("S ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return;
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08180"; /* Process name*/
  TA1REC.TA1LOC = "FETCH UNIQUE ROW        ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "180";
  exit stack;
  ;
end // end FB08180

// format and display map
Function FB08200()
   /* ------------------------------------------------------------*/
   /* format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* a real error, not just info*/
    FBXREC.XXXMSGNO = converseVar.validationMsgNum; /* move it to working storage*/
  end
  ;
  if (FB08W00.FB08WMCS == "Y") /* map needs to be formatted*/
    FB08210(); /* format the map*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* set s.o fields dark if no s.o exists.*/
   /* ------------------------------------------------------------*/
  ;
  FB08W00.FB08WMIX = 4; /* set index*/
  ;
  while (FB08W00.FB08WMIX > 0)
    if (FB08M010.OP1CUOID[FB08WMIX] == 0
     && FB08M010.OP1NORID[FB08WMIX] == 0)
      set FB08M010.FB08MDPL[FB08WMIX] invisible;
      set FB08M010.OP1NORID[FB08WMIX] invisible;
    end
    ;
    FB08W00.FB08WMIX = FB08W00.FB08WMIX - 1;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* if message to display, set sound audible alarm.*/
   /* ------------------------------------------------------------*/
  ;
  if (FBXREC.XXXMSGNO != 0)
                                   /* error or informational message*/
    ;
    if (FBXREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FBXREC.XXXMSGNO);
    end /* move to map*/
    set FB08M010 alarm; /* indicate sound alarm*/
    ;
  end
  converse FB08M010 ;
   /* ------------------------------------------------------------*/
   /* clear the message fields and save fast path information*/
   /* ------------------------------------------------------------*/
  ;
  FBXREC.XXXMSGNO = 0; /* message number*/
  ;
  COMMAREA.CATOAP = FB08M010.CATOAP; /* to application*/
  COMMAREA.CAITEM = FB08M010.CAITEM; /* application data*/
end // end FB08200

// format map
Function FB08210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FB08M010 initial; /* Map input/output area*/
  FB08M010.XXXCURDT = VGVar.currentShortGregorianDate; /* current date*/
  FB08W00.FB08WMCS = "N"; /* reset map clear switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08W00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FB08W00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      /* ------------------------------------------------------------*/
       /* If the desired page number is greater than the highest page*/
       /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/
      ;
      if (FB08W00.XXXTSPAG > FB08W00.TA5TSQIX) /* Desired greater highest*/
        FB08W00.XXXTSPAG = FB08W00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FB08S06(); /* Obtain temporary storage page*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the header data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  FB08M010.SY1STNBR = FB08W04.SY1STNBR;
  FB08M010.SY2CLRID = FB08W04.SY2CLRID;
  FB08M010.XDMCD = FB08W04.XDMCD;
  FB08M010.SY1SSTNM = FB08W04.SY1SSTNM;
  FB08M010.SY2CLRAB = FB08W04.SY2CLRAB;
  FB08M010.PT3YYMM = FB08W03.PT3YYMM[1];
  FB08M010.FB08MBMO = FB08W04.FB08MBMO;
  FB08M010.FB08MTFQ = FB08W04.FB08MTFQ;
  FB08M010.FB08MTDQ = FB08W04.FB08MTDQ;
  FB08M010.FB08MDBQ = FB08W04.FB08MDBQ;
  FB08M010.FB08MAC = FB08W00.FB08WAC;
  ;
  FB08M010.FBKSTQTB = FB08W04.FBKSTQTB - FB08W04.FB08MDBQ;
  ;
   /* ------------------------------------------------------------*/
   /* Format the detail lines in the map from temp storage.*/
   /* ------------------------------------------------------------*/
  ;
  FB08211(); /* format detail lines*/
  ;
  ;
end // end FB08210

// format map detail lines
Function FB08211()
   /* ------------------------------------------------------------*/
   /* save key from first entry on first tsq page obtained*/
   /* ------------------------------------------------------------*/
  ;
  FB08W00.FB08WMIX = 1; /* first map detail line*/
  move 0 to FB08M010.FB08MRDQ[1] for all; /* initialise quantities*/
  ;
  while (FB08W00.FB08WMIX < 5
   /* AND FB08W01.PC2CUXID(FB08WMIX) NE ' '*/
   && FB08W01.FB08WQTG[FB08WMIX] != " ")
    ;
    FB08W00.PC2CUXID = FB08W01.PC2CUXID[FB08WMIX]; /* to save area*/
    FB08W00.OP1CUOID = FB08W01.OP1CUOID[FB08WMIX]; /* to save area*/
    FB08W00.OP1NORID = FB08W01.OP1NORID[FB08WMIX]; /* to save area*/
    FB08W00.XDSCD = FB08W01.XDSCD[FB08WMIX]; /* to save area*/
    FB08W00.XWHCD = FB08W01.XWHCD[FB08WMIX]; /* to save area*/
    FB08M010.PC2CUXID[FB08WMIX] = FB08W01.PC2CUXID[FB08WMIX];
    FB08M010.OP1CUOID[FB08WMIX] = FB08W01.OP1CUOID[FB08WMIX];
    FB08M010.OP1NORID[FB08WMIX] = FB08W01.OP1NORID[FB08WMIX];
    FB08M010.XDSCD[FB08WMIX] = FB08W01.XDSCD[FB08WMIX];
    FB08M010.XWHCD[FB08WMIX] = FB08W01.XWHCD[FB08WMIX];
    FB08M010.FB08M-MSR-IND[FB08WMIX] = FB08W01.FB08W-MSR-IND[FB08WMIX];
    FB08W00.FB08WQTG = FB08W01.FB08WQTG[FB08WMIX];
    FB08W00.FB08WGIX = 1;
    ;
    while (FB08W00.FB08WGIX < 41) /* for each size*/
      FB08W00.FB08WWK = FB08W00.FB08WQTY[FB08WGIX];
      FB08M010.FB08MRDQ[FB08WMIX] = FB08MRDQ[FB08WMIX] + FB08W00.FB08WWK;
      FB08W00.FB08WGIX = FB08W00.FB08WGIX + 1; /* next size*/
    end
    ;
    if (FB08W01.XDSCD[FB08WMIX] == "3")
      FB08M010.XWHCD[FB08WMIX] = FB08W01.XWHCD[FB08WMIX];
      FB08M010.FB08MWH2[FB08WMIX] = " ";
      FB08M010.FB08MPFS[FB08WMIX] = " ";
    end
    ;
    if (FB08W01.XDSCD[FB08WMIX] == "1"
     || FB08W01.XDSCD[FB08WMIX] == "2")
      FB08M010.FB08MWH2[FB08WMIX] = FB08W01.XWHCD[FB08WMIX];
      FB08M010.XWHCD[FB08WMIX] = " ";
      ;
      if (FB08W01.XWHCD[FB08WMIX] == " "
       || (FB08W01.XWHCD[FB08WMIX] != " " && 
      FB08W01.XDSCD[FB08WMIX] == "2"))
        FB08M010.FB08MPFS[FB08WMIX] = "BLD";
      else
        FB08M010.FB08MPFS[FB08WMIX] = "PFS";
      end
    end
    ;
    FB08W00.FB08WMIX = FB08W00.FB08WMIX + 1; /* next map detail line*/
    ;
  end
  ;
  ;
end // end FB08211

// check attention identifier
Function FB08300()
   /* ------------------------------------------------------------*/
   /* Check for invalid fastpath*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08WIFL == "Y") /* Invalid fastpath*/
    converseLib.validationFailed(303);
    if (converseVar.eventKey not pf1
     && converseVar.eventKey not pf3
     && converseVar.eventKey not pf4)
      exit stack;
    end
  end
  ;
  ;
  ;
  ;
   /* ------------------------------------------------------------*/
   /* Check for no frozen bottom line availability*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08W00.FB08WBLF == "N") /* no vfblav01 row found*/
    converseLib.validationFailed(305); /* hit pf18 to freeze b/l*/
    if (converseVar.eventKey not pf1
     && converseVar.eventKey not pf3
     && converseVar.eventKey not pf4
     && converseVar.eventKey not pf18)
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08M010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      set FBWREC empty;
      FBWREC.FBWFILL = FBXREC.FBXGROUP;
      FB08S01(); /* purge temp storage*/
      XSFBS01(); /* Exit to another application*/
      FB08M010.XXXMODID = "300"; /* Process name*/
      set FB08M010.CATOAP cursor, bold; /* Highlight (in case bad xfer)*/
    else
      converseLib.validationFailed(36); /* Indicate only enter with fastpath*/
      FB08M010.XXXMODID = "300"; /* Process name*/
    end
    ;
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf18
   || converseVar.eventKey is pa2)
    ;
    if (converseVar.eventKey is pa2) /* clear screen*/
      COMMAREA.CATOAP = "FB08"; /* display the blank map*/
    end
    ;
    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FB08M010"; /* for help*/
    end
    ;
    if (converseVar.eventKey is pf3) /* select products*/
      COMMAREA.CATOAP = "FB01";
    end
    ;
    if (converseVar.eventKey is pf14) /* b/l avail maint inq*/
      COMMAREA.CATOAP = "FB02";
    end
    ;
    if (converseVar.eventKey is pf18) /* b/l avail maint inq*/
      COMMAREA.CATOAP = "FB09";
    end
    ;
    set FBWREC empty;
    FBWREC.FBWFILL = FBXREC.FBXGROUP;
    FB08S01(); /* purge temp storage*/
    XSFBS01(); /* transfer to another application*/
    FB08W00.FB08WRDS = "N"; /* dont request data*/
    FB08W00.FB08WMCS = "Y"; /* format map*/
    exit stack; /* Exit to redisplay map*/
    ;
  end
  ;
  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf6  /* next product*/
   && converseVar.eventKey not pf7  /* scroll forward*/
   && converseVar.eventKey not pf8  /* scroll backward*/
   && converseVar.eventKey not pf15 /* print*/
   && converseVar.eventKey not pf16 /* accept*/
   && converseVar.eventKey not pf20) /* build all*/
    converseLib.validationFailed(3); /* invalid key*/
    FB08M010.XXXMODID = "300"; /* program name*/
    ;
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
       /* reset map*/
    end
    ;
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf20
   && FB08W00.FB08WBAS == "N") /* dont allow build all*/
    FB08M010.XXXMODID = 300; /* process numper*/
    converseLib.validationFailed(242); /* cant build all*/
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf7 /* scroll up*/
   || converseVar.eventKey is pf8) /* scroll down*/
    ;
    if (FB08W00.FB08WSCS == "N") /* scrolling not allowed (bad product)*/
      converseLib.validationFailed(167); /* invalid product*/
      FB08M010.XXXMODID = "300"; /* program name*/
      exit stack;
    end
    ;
  end
  ;
  if (converseVar.eventKey is pf8 /* scroll forward*/
   && FB08W00.XXXTSPAG == FB08W00.TA5TSQIX) /* already on last page*/
    FB08M010.XXXMODID = "300"; /* process number*/
    converseLib.validationFailed(7); /* no more pages to display*/
    exit stack; /* display the map*/
  end
  ;
  if (converseVar.eventKey is pf7 /* scroll backward*/
   && FB08W00.XXXTSPAG == 1)      /* already on first page*/
    FB08M010.XXXMODID = "300"; /* process number*/
    converseLib.validationFailed(6); /* no previous pages*/
    exit stack; /* display the map*/
  end
  ;
end // end FB08300

// reset highlighted fields
Function FB08400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/
  ;
  set FB08M010.SY1STNBR initialAttributes; /* style number*/
  set FB08M010.SY2CLRID initialAttributes; /* color code*/
  set FB08M010.FB08MBMO initialAttributes; /* buy date yymm*/
  set FB08M010.FB08MTFQ initialAttributes; /* total forecast qtb*/
  set FB08M010.FB08MDBQ initialAttributes; /* drs/bld qty*/
  ;
  FB08W00.FB08WMIX = 1; /* init map index*/
  ;
  while (FB08W00.FB08WMIX <= 4) /* for each map location*/
    set FB08M010.FB08MDPL[FB08WMIX] initialAttributes; /* decimal literal*/
    set FB08M010.OP1NORID[FB08WMIX] initialAttributes; /* nike order id*/
    FB08W00.FB08WMIX = FB08W00.FB08WMIX + 1;
  end
  ;
  set FB08M010.CATOAP initialAttributes; /* Commarea TO application*/
  set FB08M010.CAITEM initialAttributes; /* Commarea application data*/
  ;
end // end FB08400

// verify entered data
Function FB08500()
  ;
   /* ------------------------------------------------------------*/
   /* if there was a blank xref reference do not allow any*/
   /* processing.*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08W00.FB08WBXF == "Y")
    if (converseVar.eventKey is pf6)
       /* next sentence*/
    else
      converseLib.validationFailed(349);
      exit stack;
    end
  end
  ;
   /* ------------------------------------------------------------*/
   /* Edit for negative stock quantiity on pf16 accept all*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf16) /* accept*/
    FB08W00.FB9BTQTY = FB9REC.FB9BTQTY;
    FB08W00.FB9BTQTY = FB08W00.FB9BTQTY * -1;
    ;
    if (FB08M010.FBKSTQTB < 0) /* negative stock qtb*/
      if (FB08M010.FBKSTQTB < FB08W00.FB9BTQTY)
        converseLib.validationFailed(347); /* No update allowed*/
      end
    end
    ;
    if (FB08M010.FBKSTQTB < 0 /* negative stock qtb*/
     && FB08W00.FB08WPAC != "Y") /* Pending accept flag*/
      if (FB08M010.FBKSTQTB > FB08W00.FB9BTQTY)
        converseLib.validationFailed(348); /* confirm update for negative qty*/
        FB08W00.FB08WPAC = "Y"; /* Set flag for next time thru*/
      end
    end
  else
    FB08W00.FB08WPAC = "N"; /* Set apending accept flag off*/
  end
  ;
  ;
  ;
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  FB08W00.FB08WMCS = "N"; /* dont format map*/
  ;
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08M010.CAITEM > " ") /* Application data was entered*/
    FB08M010.XXXMODID = "500"; /* Module identification*/
    set FB08M010.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(2); /* Enter only with FAST PATH*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Check if new key was entered*/
   /* ------------------------------------------------------------*/
  ;
  if (FB08M010.SY1STNBR != FB08W04.SY1STNBR /* style number changed*/
   || FB08M010.FB08MBMO != FB08W04.FB08MBMO) /* buy month changed*/
    FB08W00.FB08WKCS = "Y"; /* key data changed*/
  else
    FB08W00.FB08WKCS = "N"; /* key data not changed*/
  end
  ;
  if (FB08W00.FB08WKCS == "Y" /* key changed*/
   || FB08W00.FB08WBPS == "Y") /* previous product bad*/
    FB08510(); /* edit key*/
  end
  ;
  FB08520(); /* edit aid*/
  ;
  ;
   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end
  ;
end // end FB08500

// edit key
Function FB08510()
  if (FB08M010.FB08MBMO != " "
   && FB08M010.FB08MBMO != 0)
    FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* to separate*/
    /* ------ y2k out begin ---------*/
    /* XX0XS01;*/
    /* XX0XW01.XX0XWYY = XX0XW01.XX0XWYY - 1;*/
    /* ------ y2k out end -----------*/
    /* ------ y2k in  begin ---------*/
    FB08W00.FB08WBYY1 = FB08W00.FB08WBYY;
    if (FB08W00.FB08WBYY1 > 65)
      FB08W00.FB08WBCC1 = 19;
    else
      FB08W00.FB08WBCC1 = 20;
    end
    FB08W00.FB08W-CUR-DT = VGVar.currentGregorianDate;
    FB08W00.FB08W-CUR-CY = FB08W00.FB08W-CUR-CY - 1;
    /* ------ y2k in end ------------*/
    ;
    /* ------ y2k out begin ---------*/
    /* IF FB08W00.FB08WBYY LT XX0XW01.XX0XWYY; /* year too old*/
    /* ------ y2k out end -----------*/
    /* ------ y2k in  begin ---------*/
    if (FB08W00.FB08WBCY1 < FB08W00.FB08W-CUR-CY) /* year too old*/
      /* ------ y2k in end ------------*/
      converseLib.validationFailed(151); /* date out of range*/
      FB08M010.XXXMODID = "510"; /* process number*/
      set FB08M010.FB08MBMO cursor, bold;
    end
    ;
    if (FB08W00.FB08WBMM < 1 /* month less than 1*/
     || FB08W00.FB08WBMM > 12) /* month greater than 12*/
      converseLib.validationFailed(151); /* date out of range*/
      FB08M010.XXXMODID = "510"; /* process number*/
      set FB08M010.FB08MBMO cursor, bold;
    end
    ;
  else
    converseLib.validationFailed(8);
    FB08M010.XXXMODID = "510";
    set FB08M010.FB08MBMO cursor, bold;
  end
  ;
   /* ------------------------------------------------------------*/
   /* move defaults*/
   /* ------------------------------------------------------------*/
  ;
  FB08M010.SY2CLRID = "00"; /* color code*/
  FB08M010.XDMCD = "00"; /* dimension code*/
  FBXREC.SY2CLRID[1] = "00"; /* color code*/
  FBXREC.XDMCD[1] = "00"; /* dimension code*/
  FBXREC.XQACD[1] = "01"; /* quality code*/
  FBXREC.PC2INSEG[1] = "000"; /* spec code*/
  FBXREC.XPGCD[1] = "00"; /* package type code*/
  FBXREC.XUMCD[1] = "01"; /* unit of measure code*/
  ;
  if (FB08M010.SY1STNBR != " ")
    ;
    /* ------------------------------------------------------------*/
     /* build key to get product desc, color abreviation.*/
    /* ------------------------------------------------------------*/
    ;
    set PG2REC empty;
    PG2REC.XGPCD = "02";
    PG2REC.SY1STNBR = FB08M010.SY1STNBR;
    PG2REC.SY2CLRID = FB08M010.SY2CLRID;
    PG2REC.XDMCD = FB08M010.XDMCD;
    ;
    XSPG202(); /* get prod desc, color abrv*/
    ;
    /* ------------------------------------------------------------*/
      /* if non normal rtn code, or product not found, set up error*/
    /* ------------------------------------------------------------*/
    ;
    if (TA1REC.TA1FUNC == "RETN") /* abend message sent to screen*/
      converseLib.clearScreen();
       /* reset screen*/
    end
    ;
    if (TA1REC.TA1FUNC == "POST") /* resource in use*/
      converseLib.validationFailed(47); /* set error message*/
      FB08M010.XXXMODID = "510"; /* process number*/
      FB08W00.FB08WRDS = "N"; /* dont request data*/
      exit stack; /* display map*/
    end
    ;
    if (TA1REC.TA1FUNC == "RETN" /* database error*/
     || SQLCA.VAGen_SQLCODE != 0) /* product not found*/
      FB08S03(); /* reset screen*/
      converseLib.validationFailed(167); /* invalid product*/
      set FB08M010.SY1STNBR cursor, bold;
      FB08M010.XXXMODID = "510"; /* process number*/
      FB08W00.FB08WBPS = "Y"; /* bad product*/
      FB08W00.FB08WRDS = "N"; /* dont request data*/
      exit stack; /* display map*/
    end
    ;
  end
  ;
  if (FB08M010.SY1STNBR == " ")
    converseLib.validationFailed(8);
    FB08M010.XXXMODID = "510";
    set FB08M010.SY1STNBR cursor, bold;
  end
end // end FB08510

// edit aid
Function FB08520()
  if (converseVar.eventKey is enter)
    ;
    if (FB08W00.FB08WKCS == "N") /* key not changed*/
      FB08W00.FB08WRDS = "Y"; /* request data*/
      FB08W00.FB08WMCS = "Y"; /* format map*/
      exit stack; /* display map*/
    end
    ;
  else /* not enter*/
    ;
    if (FB08W00.FB08WKCS == "Y") /* key changed*/
      ;
      if (converseVar.eventKey is pf15 /* print screen*/
       || converseVar.eventKey is pf17 /* accept*/
       || converseVar.eventKey is pf20) /* build all*/
        FB08M010.XXXMODID = "520"; /* Module identification*/
        converseLib.validationFailed(111); /* cannot change data and pf*/
      end
      ;
      if (converseVar.eventKey is pf7 /* scroll up*/
       || converseVar.eventKey is pf8) /* scroll down*/
        FB08M010.XXXMODID = "520"; /* Module identification*/
        converseLib.validationFailed(5); /* cannot change data and scroll*/
      end
      ;
    else /* key didnt change*/
      ;
      if (converseVar.eventKey is pf17
       && FB08M010.FB08MDBQ > FB08M010.FB08MTFQ)
        FB08M010.XXXMODID = "520";
        set FB08M010.FB08MDBQ bold;
        set FB08M010.FB08MTFQ bold;
        converseLib.validationFailed(295);
      end
      ;
    end
    ;
  end
  ;
end // end FB08520

// process valid request
Function FB08600()
  if (converseVar.eventKey is pf15) /* print screen*/
    FB08610(); /* process print request*/
  else
    ;
    if (converseVar.eventKey is pf16) /* accept the calc*/
      FB08620(); /* process accept the calc request*/
    else
      ;
      if (converseVar.eventKey is pf20) /* build all*/
        FB08630(); /* process build all request*/
      else
        ;
        if (converseVar.eventKey is pf7) /* scroll up*/
          FB08W00.XXXTSPAG = FB08W00.XXXTSPAG - 1; /* previous page*/
          FB08W00.FB08WMCS = "Y"; /* format map*/
        else
          ;
          if (converseVar.eventKey is pf8) /* scroll down*/
            FB08W00.XXXTSPAG = FB08W00.XXXTSPAG + 1; /* next page*/
            FB08W00.FB08WMCS = "Y"; /* format map*/
          else
            ;
            if (converseVar.eventKey is pf6) /* Next product*/
              FB08640(); /* Set up for next product*/
              FB08W00.FB08WRDS = "Y"; /* request data*/
            end
            ;
            ;
            if (converseVar.eventKey is enter) /* enter was hit*/
              ;
              if (FB08W00.FB08WKCS == "Y" /* key changed*/
               || FB08W00.FB08WBPS == "Y") /* previous product bad*/
                FB08W00.FB08WRDS = "Y"; /* request data*/
                FB08W00.FB08WMCS = "Y"; /* format map*/
              end
              ;
            end
            ;
          end
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
end // end FB08600

// process print request
Function FB08610()
  ;
   /* ------------------------------------------------------------*/
   /* Call sub-routine to find which environment*/
   /* the program is executing in, development*/
   /* or production.*/
   /* ------------------------------------------------------------*/
  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN ";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA3REC.TA3RTNCD == 0)          /* Good return code*/
    if (TA3REC.TA3RGNID == "03") /* if on production system*/
      FB08617(); /* format production jcl*/
    else
      FB08615(); /* format development jcl*/
    end
  else
    ;
    FB08M010.XXXMODID = "500"; /* module identification*/
    converseLib.validationFailed(87); /* Error encountered with print request*/
    exit stack;
  end
  ;
end // end FB08610

// format parms
Function FB08611()
   /* ------------------------------------------------------------*/
   /* format the parm card.  also format a comment card which*/
   /* looks like the parm card*/
   /* ------------------------------------------------------------*/
  ;
  FB08W02.FB08WCMT = "//*"; /* indicate a comment jcl card*/
  ;
  FB08W02.XGPCD = "02";
  FB08W02.SY1STNBR = FBXREC.SY1STNBR[1];
  FB08W02.SY2CLRID = FBXREC.SY2CLRID[1];
  FB08W02.XDMCD = FBXREC.XDMCD[1];
  FB08W02.XQACD = FBXREC.XQACD[1];
  FB08W02.PC2INSEG = FBXREC.PC2INSEG[1];
  FB08W02.XPGCD = FBXREC.XPGCD[1];
  FB08W02.XUMCD = FBXREC.XUMCD[1];
  FB08W02.FB08MBMO = FB08W04.FB08MBMO;
  ;
  if (FB08W02.XQACD == " ") /* no entry*/
    FB08W02.XQACD = "01"; /* move default*/
  end
  ;
  if (FB08W02.XPGCD == " ") /* no entry*/
    FB08W02.XPGCD = "00"; /* move default*/
  end
  ;
  if (FB08W02.XUMCD == " ") /* no entry*/
    FB08W02.XUMCD = "01"; /* move default*/
  end
  ;
  TA6REC.TARJCL[TA6INDEX] = FB08W02.FB08WPRM; /* jcl*/
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
  TA6REC.TARJCL[TA6INDEX] = FB08W02.FB08WPRR; /* JCL parm comment*/
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
  ;
end // end FB08611

// submit batch jcl
Function FB08612()
   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  ;
  TA6REC.TA6SUBSW = "Y"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* notify submitter*/
  ;
  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/
    converseLib.validationFailed(76);
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/
    ;
    converseLib.validationFailed(86); /* Indicate user cancelled*/
    FB08M010.XXXMODID = "612"; /* module identification*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    FB08M010.XXXMODID = "612"; /* module identification*/
    ;
  end
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08612

// development JCL
Function FB08615()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  FB08W00.FB08WTIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1;
                                   /* Initialize parameters index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FB08W00.FB08WTIX > 0) /* Until end of table*/
    ;
    if (FB08TT1.TARTYPE[FB08WTIX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format program parameters*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARTYPE[TA6INDEX] = FB08TT1.TARTYPE[FB08WTIX]; /* Type*/
      ;
      FB08611(); /* formats JCL*/
      ;
    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FB08TT1.TARJCL[FB08WTIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FB08TT1.TARTYPE[FB08WTIX]; /* Type*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FB08TT1.TARJCL[FB08WTIX] == "/*EOF") /* End of table*/
      ;
      FB08W00.FB08WTIX = 0; /* Indicate end of table*/
      ;
    else
      ;
      FB08W00.FB08WTIX = FB08W00.FB08WTIX + 1; /* Increment table index*/
      ;
    end
    ;
  end
  ;
  ;
  FB08612(); /* Submit the JCL*/
  FBXREC.XXXMSGNO = 16; /* Info msg, not err*/
  ;
  ;
end // end FB08615

// production  JCL
Function FB08617()
   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set TA6REC empty; /* Subroutine work area*/
  ;
  FB08W00.FB08WTIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1;
                                   /* Initialize parameters index*/
  ;
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  ;
  while (FB08W00.FB08WTIX > 0) /* Until end of table*/
    ;
    if (FB08TP1.TARTYPE[FB08WTIX] == "P") /* Parameters statement*/
      ;
      /* ------------------------------------------------------------*/
       /* Format program parameters*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARTYPE[TA6INDEX] = FB08TP1.TARTYPE[FB08WTIX]; /* Type*/
      ;
      FB08611(); /* formats JCL*/
      ;
    else
      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/
      ;
      TA6REC.TARJCL[TA6INDEX] = FB08TP1.TARJCL[FB08WTIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FB08TP1.TARTYPE[FB08WTIX]; /* Type*/
      ;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/
      ;
    end
    ;
    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    ;
    if (FB08TP1.TARJCL[FB08WTIX] == "/*EOF") /* End of table*/
      ;
      FB08W00.FB08WTIX = 0; /* Indicate end of table*/
      ;
    else
      ;
      FB08W00.FB08WTIX = FB08W00.FB08WTIX + 1; /* Increment table index*/
      ;
    end
    ;
  end
  ;
  ;
  FB08612(); /* Submit the JCL*/
  FBXREC.XXXMSGNO = 16; /* Info msg, not err*/
  ;
  ;
end // end FB08617

// process accept request
Function FB08620()
  ;
  FB08W00.XXXTSPAG = 1; /* first temp storage page*/
  ;
  while (FB08W00.XXXTSPAG <= FB08W00.TA5TSQIX)
                                   /* for each temp storage page*/
    set FB08W01 empty; /* initialise work area*/
    FB08S06(); /* get temp storage page*/
    FB08W00.FB08WMIX = 1; /* first temp storage line*/
    ;
    while (FB08W00.FB08WMIX <= 4) /* for each line on the page*/
      ;
      if (FB08W01.SY1STNBR[FB08WMIX] != " ") /* if line has data*/
        set FBHREC empty;
        FBHREC.FBHGROUP = FB08W01.FB08W1GP[FB08WMIX];
        FBHREC.FBHDSAFL = "Y"; /* direct ship flag*/
        FB08S07(); /* update vdnord01 row*/
      end
      ;
      FB08W00.FB08WMIX = FB08W00.FB08WMIX + 1; /* next temp storage line*/
    end
    ;
    FB08W00.XXXTSPAG = FB08W00.XXXTSPAG + 1; /* next temp storage page*/
  end
  ;
  FBKREC.FBKFSAFL = "Y"; /* forecast accept flag*/
  FB08S08(); /* update vfqtbs01 row*/
  FB08S09(); /* update vffqtb01 row*/
  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();
                                   /* all updtes ok, commit chgs*/
  FB08W00.FB08WRDS = "Y";
                                   /* req data disp updated scrn*/
  FB08W00.FB08WAC = "Y"; /* accept flag*/
  FB08W00.FB08WPAC = "N"; /* Pending accept flag*/
  FB08M010.XXXMODID = "620"; /* process number*/
  FBXREC.XXXMSGNO = 32; /* info msg update ok*/
end // end FB08620

// process build all request
Function FB08630()
  FB08W00.XXXTSPAG = 1; /* first temp storage page*/
  ;
  while (FB08W00.XXXTSPAG <= FB08W00.TA5TSQIX)
                                   /* for each temp storage page*/
    set FB08W01 empty; /* initialise work area*/
    FB08S06(); /* get temp storage page*/
    FB08W00.FB08WMIX = 1; /* first temp storage line*/
    ;
    while (FB08W00.FB08WMIX <= 4) /* for each line on the page*/
      ;
      if (FB08W01.SY1STNBR[FB08WMIX] != " ") /* for each line on the page*/
        set FBHREC empty;
        FBHREC.FBHGROUP = FB08W01.FB08W1GP[FB08WMIX];
        ;
        if (FBHREC.XWHCD != " "
         && FBHREC.XDSCD == "1")
          FB08631(); /* adjust vfblav01 row*/
          ;
          FBMREC.FBMCFFL = "N"; /* fb-calc-fnsh-fl*/
          FBKREC.FBKCAFL = "N"; /* fb-calc-acpt-fl*/
          FBMREC.FBMFINFL = "N"; /* fb-dirship-fnsh-fl*/
          ;
          FB08W00.FB08WIX1 = 1;
          ;
          while (FB08W00.FB08WIX1 <= 20)
            if (FBMREC.FBMPCD[FB08WIX1] == FBXREC.XPLCD) /* product line =*/
              FBMREC.FBMPAFL[FB08WIX1] = "N"; /* fb-prodln-acpt-fl*/
              FBMREC.FBMDSLNF[FB08WIX1] = "N"; /* fb-drsln-fnsh-fl*/
            end
            FB08W00.FB08WIX1 = FB08W00.FB08WIX1 + 1;
          end
          ;
          FB08S15(); /* build tag records*/
          FBHREC.XWHCD = " "; /* warehouse*/
          FBHREC.FBHDSAFL = "N"; /* dirship acpt fl*/
          FB08S07(); /* update vdnord01 row*/
          ;
          FB08S08(); /* update vfqtbs01 row*/
          FB08S14(); /* update vsctls01 row*/
        end
      end
      ;
      FB08W00.FB08WMIX = FB08W00.FB08WMIX + 1; /* next temp storage line*/
    end
    ;
    FB08W00.XXXTSPAG = FB08W00.XXXTSPAG + 1; /* next temp storage page*/
  end
  ;
  FB08W00.FB08WWIX = 1;
  ;
  while (FB08W00.FB08WWIX < 4)
    FB08632(); /* update vfblav01 row*/
    FB08W00.FB08WWIX = FB08W00.FB08WWIX + 1;
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();
                                   /* all updtes ok, commit chgs*/
  FB08M010.XXXMODID = "630"; /* process number*/
  FBXREC.XXXMSGNO = 32; /* info msg update ok*/
  FB08W00.FB08WRDS = "Y";
                                   /* req data disp updated scrn*/
end // end FB08630

// adjust VFBLAV01 values
Function FB08631()
  if (FBLREC.SY1STNBR == " ")
    return;
  end
  ;
  FB08W00.FB08WWIX = 1;
  ;
  while (FB08W03.XWHCD[FB08WWIX] != FBHREC.XWHCD
   && FB08W00.FB08WWIX < 4)
    FB08W00.FB08WWIX = FB08W00.FB08WWIX + 1;
  end
  ;
  FB08W05.FBLGROUP = FB08W03.FBLGROUP[FB08WWIX];
  FB08W00.FB08WGIX = 1;
  ;
  while (FB08W00.FB08WGIX < 41)
    FB08W00.FB08WWK = FBHREC.FB7QTB[FB08WGIX];
    FB08W00.FB08WWK2 = FB08W05.FBLDAQTY[FB08WGIX];
    FB08W05.FBLDAQTY[FB08WGIX] = FB08W00.FB08WWK2 + FB08W00.FB08WWK;
    FB08W00.FB08WGIX = FB08W00.FB08WGIX + 1;
  end
  ;
  FB08W03.FBLGROUP[FB08WWIX] = FB08W05.FBLGROUP;
end // end FB08631

// update VFBLAV01 row
Function FB08632()
  set FBLREC empty;
  FBLREC.FBLGROUP = FB08W03.FBLGROUP[FB08WWIX];
  ;
  if (FBLREC.SY1STNBR == " ") /* no entry for this whse*/
    return; /* return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* update the row which was just selected*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01();
  FBLREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBLREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
   /* ------------ y2k out begin -------*/
   /* CALL IO4680 'U ',SQLCA,FBLREC (NOMAPS,NONCSP,REPLY; /* Select row*/
   /* ------------ y2k out begin -------*/
   /* ------------ y2k out begin -------*/
  try
    call "VFBLAV02" ("U ", SQLCA, FBLREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
   /* ------------ y2k out begin -------*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      converseLib.validationFailed(20); /* updated since last access*/
      FB08M010.XXXMODID = "632"; /* module identification*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any prev changes*/
      exit stack; /* display map*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* nermal return code*/
      return; /* return to performing process*/
    end
    ;
    /* ------------------------------------------------------------*/
     /* If data not available, return an error message to the user.*/
     /* Otherwise, indicate that a system error has occurred.*/
    /* ------------------------------------------------------------*/
    ;
    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
    ;
    FB08M010.XXXMODID = "621"; /* Module identification*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911) /* and resource not available*/
      ;
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE != 0) /* not normal return code*/
      converseLib.validationFailed(01); /* Indicate system error*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any prev changes*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE              ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBLAV02"; /* Table view name*/
  TA1REC.TA1TBLKE = FBLREC.FBLGROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diag subroutine*/
  ;
  exit stack; /* Exit to display map*/
end // end FB08632

// Set up for next product
Function FB08640()
  ;
  ;
  ;
   /* ------------------------------------------------------*/
   /* Bubble up the array in FBXREC so that the next product*/
   /* is moved to the first level of the table and, and*/
   /* all subsequent products are shifted down one.*/
   /* The first product will be lost, as will the last one.*/
   /* ------------------------------------------------------*/
  ;
  FB08W00.FB08WIX1 = 2; /* Init work index*/
  FB08W00.FB08WIX2 = 1;
  ;
  while (FB08WIX1 <= 14
   && FBXREC.SY1STNBR[FB08WIX1] != " ")
    FBXREC.SY1STNBR[FB08WIX2] = FBXREC.SY1STNBR[FB08WIX1];
    FBXREC.SY2CLRID[FB08WIX2] = FBXREC.SY2CLRID[FB08WIX1];
    FBXREC.XDMCD[FB08WIX2] = FBXREC.XDMCD[FB08WIX1];
    FBXREC.XQACD[FB08WIX2] = FBXREC.XQACD[FB08WIX1];
    FBXREC.PC2INSEG[FB08WIX2] = FBXREC.PC2INSEG[FB08WIX1];
    FBXREC.XPGCD[FB08WIX2] = FBXREC.XPGCD[FB08WIX1];
    FBXREC.XUMCD[FB08WIX2] = FBXREC.XUMCD[FB08WIX1];
    FB08W00.FB08WIX1 = FB08W00.FB08WIX1 + 1;
    FB08W00.FB08WIX2 = FB08W00.FB08WIX2 + 1;
  end
  ;
   /* move spaces to the last field in the fbxrec product array*/
  ;
  FBXREC.SY1STNBR[FB08WIX2] = " ";
  FBXREC.SY2CLRID[FB08WIX2] = " ";
  FBXREC.XDMCD[FB08WIX2] = " ";
  FBXREC.XQACD[FB08WIX2] = " ";
  FBXREC.PC2INSEG[FB08WIX2] = " ";
  FBXREC.XPGCD[FB08WIX2] = " ";
  FBXREC.XUMCD[FB08WIX2] = " ";
  ;
  ;
   /* ------------------------------------------------------*/
   /* Initialize map and storage areas.*/
   /* ------------------------------------------------------*/
  ;
  set FB08M010 empty;
  set FB08W01 empty;
  set FB08W03 empty;
  set FB08W04 empty;
  set FB08W05 empty;
  ;
  FB08W00.XXXTSLEN = 1052; /* Temporary storage length*/
  ;
   /* ---------------------------------------------------------*/
   /* If more products have been passed than obtain the*/
   /* style and color description.*/
   /* ---------------------------------------------------------*/
  ;
  if (FBXREC.SY1STNBR[1] != " ") /* Data has been passed*/
    FB08W00.FB08WRDS = "Y"; /* Request for data flag*/
    FB08W01.SY1STNBR = FBXREC.SY1STNBR[1];
    FB08W00.SY1STNBR = FBXREC.SY1STNBR[1];
    FB08M010.SY1STNBR = FBXREC.SY1STNBR[1];
    FB08W01.SY2CLRID = FBXREC.SY2CLRID[1];
    FB08W00.SY2CLRID = FBXREC.SY2CLRID[1];
    FB08M010.SY2CLRID = FBXREC.SY2CLRID[1];
    FB08W01.XDMCD = FBXREC.XDMCD[1];
    FB08W00.XDMCD = FBXREC.XDMCD[1];
    FB08M010.XDMCD = FBXREC.XDMCD[1];
    FB08W00.FB08WBDT = FBXREC.FB8BUYDT;
    FB08M010.FB08MBMO = FB08W00.FB08MBMO;
    ;
    set PG2REC empty; /* Initialize style color record*/
    ;
    PG2REC.XGPCD = "02";
    PG2REC.SY1STNBR = FBXREC.SY1STNBR[1];
    PG2REC.SY2CLRID = FBXREC.SY2CLRID[1];
    PG2REC.XDMCD = FBXREC.XDMCD[1];
    ;
    XSPG202(); /* Obtain style color table row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      FB08M010.SY1SSTNM = PG2REC.SY1SSTNM;
      FB08M010.SY2CLRAB = PG2REC.SY2CLRAB;
    end
  else
    converseLib.validationFailed(356); /* No data to display*/
    FB08M010.XXXMODID = "640";
    exit stack;
    ;
    ;
  end
  ;
  ;
  ;
  ;
  FBWREC.FBWFILL = FBXREC.FBXGROUP;
  COMMAREA.CAUSERA = FBWREC.FBWGROUP;
  ;
end // end FB08640

// purge temporary storage
Function FB08S01()
   /* ------------------------------------------------------------*/
   /* If the last function was purge, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA5REC.TA5FNCCD == "P") /* Last function was purge*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FB08W01 empty; /* m010 display storage*/
  ;
  FB08W00.FB08WSWU = "N"; /* Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FB08W00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FB08W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FB08M010.XXXMODID = "S01"; /* Module identification*/
  converseLib.validationFailed(01); /* Indicate system error*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08S01

// add page to temporary storage
Function FB08S02()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FB08W01.XXXTSLEN = FB08W00.XXXTSLEN; /* Temporary storage length*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  if (FB08W00.TA5TSQIX == 0 /* No pages are formatted*/
   && TA5REC.TA5FNCCD == "P") /* and last function purge*/
    ;
    TA5REC.TA5FNCCD = "N"; /* Function code*/
  else
    TA5REC.TA5FNCCD = "A"; /* Function code*/
    ;
  end
  ;
  try
    call "TA0050" (FB08W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    set FB08W01 empty; /* map display storage*/
    ;
    FB08W00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    FB08W00.FB08WIXM = 0; /* Display line number*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FB08M010.XXXMODID = "S02"; /* Module identification*/
  converseLib.validationFailed(01); /* Indicate system error*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08S02

// reset map values
Function FB08S03()
  FB08W00.SY1STNBR = FB08M010.SY1STNBR; /* style number*/
  FB08W00.SY2CLRID = FB08M010.SY2CLRID; /* color code*/
  FB08W00.PT3YYMM = FB08M010.PT3YYMM; /* b/l date*/
  FB08W00.XDMCD = FB08M010.XDMCD; /* dimension code*/
  FB08W00.SY1SSTNM = FB08M010.SY1SSTNM; /* style short name*/
  FB08W00.SY2CLRAB = FB08M010.SY2CLRAB; /* color abbrev*/
  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* buy date yymm*/
  set FB08M010 initial; /* clear map*/
  ;
  FB08M010.SY1STNBR = FB08W00.SY1STNBR; /* restore style number*/
  FB08M010.SY2CLRID = FB08W00.SY2CLRID; /* restore color code*/
  FB08M010.PT3YYMM = FB08W00.PT3YYMM; /* restore b/l date*/
  FB08M010.XDMCD = FB08W00.XDMCD; /* restore dimension code*/
  FB08M010.FB08MBMO = FB08W00.FB08MBMO; /* restore buy date*/
  FB08M010.XXXCURDT = VGVar.currentShortGregorianDate;
  FB08W00.FB08WMCS = "N"; /* dont format map*/
end // end FB08S03

// format temp storage line
Function FB08S04()
   /* ---------------------------------------------------*/
   /* There can be a maximum of 4 customer xref/direct*/
   /* ship/warehouse lines on a map page and 4  records*/
   /* on a temp storage page.*/
   /* ---------------------------------------------------*/
  ;
  FB08W00.FB08WCCT = FB08W00.FB08WCCT + 1; /* Increment customer count*/
  FB08W00.PC2CUXID = FBHREC.PC2CUXID;
  FB08W00.OP1CUOID = FBHREC.OP1CUOID;
  FB08W00.OP1NORID = FBHREC.OP1NORID;
  FB08W00.XDSCD = FBHREC.XDSCD;
  FB08W00.XWHCD = FBHREC.XWHCD;
  ;
   /* --------------------------------------------------------*/
   /* Add page to temp storage if all lines on page have been*/
   /* filled or if 4 customer/xref and warehouses have been*/
   /* processed*/
   /* ---------------------------------------------------------*/
  ;
  if (FB08W00.FB08WIXM == 4) /* temp storage max*/
    FB08S02(); /* Add page to temp storage*/
    FB08W00.FB08WCCT = 0;
  end
  ;
  FB08W00.FB08WIXM = FB08W00.FB08WIXM + 1; /* temp storage line count*/
  ;
  FB08W01.FB08W1GP[FB08WIXM] = FBHREC.FBHGROUP;
  FB08W01.PC2CUXID[FB08WIXM] = FBHREC.PC2CUXID;
  FB08W01.OP1CUOID[FB08WIXM] = FBHREC.OP1CUOID;
  FB08W01.OP1NORID[FB08WIXM] = FBHREC.OP1NORID;
  FB08W01.XDSCD[FB08WIXM] = FBHREC.XDSCD;
  FB08W01.XWHCD[FB08WIXM] = FBHREC.XWHCD;
  ;
  if (OP1REC.XPACD == "MS")
    FB08W01.FB08W-MSR-IND[FB08WIXM] = "MSR";
  else
    FB08W01.FB08W-MSR-IND[FB08WIXM] = "   ";
  end
  ;
  ;
end // end FB08S04

// accumulate heading totals
Function FB08S05()
  if (FBHREC.XDSCD == "1"
   || FBHREC.XDSCD == "2"
   || FBHREC.XDSCD == "3")
    FB08W00.FB08WGIX = 1;
    ;
    while (FB08W00.FB08WGIX < 41)
      FB08W04.FB08MTDQ = FB08W04.FB08MTDQ + FBHREC.FB7QTB[FB08WGIX];
      FB08W00.FB08WGIX = FB08W00.FB08WGIX + 1;
    end
    ;
  end
  ;
  if ((FBHREC.XDSCD == "1" && FBHREC.XWHCD == " ") || 
  (FBHREC.XDSCD == "2" && FBHREC.XWHCD != " "))
    FB08W00.FB08WGIX = 1;
    ;
    while (FB08W00.FB08WGIX < 41)
      FB08W04.FB08MDBQ = FB08W04.FB08MDBQ + FBHREC.FB7QTB[FB08WGIX];
      FB08W00.FB08WGIX = FB08W00.FB08WGIX + 1;
    end
    ;
  end
  ;
  ;
end // end FB08S05

// fetch page from temp storage
Function FB08S06()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FB08W01.XXXTSLEN = FB08W00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FB08W00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FB08W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  FB08M010.XXXMODID = "S06"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08S06

// update VDNORD01 row
Function FB08S07()
  XX0XS01(); /* get date and time*/
  FBHREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBHREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  try
    call "IO4640" ("U ", SQLCA, FBHREC) {isNoRefresh = yes, isExternal = yes};
  end /* update row*/
  ;
   /* ------------------------------------------------------------*/
   /* If row not found return, msg updated since last. If found,*/
   /* process.  If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      FB08M010.XXXMODID = "S07"; /* process number*/
      converseLib.validationFailed(20); /* updated since displayed*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any changes*/
      exit stack; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S07"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE ROW              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNORD01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S07";
  exit stack;
  ;
end // end FB08S07

// update fbqtbs01
Function FB08S08()
  XX0XS01(); /* get date and time*/
  FBKREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBKREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  try
    call "IO4740" ("U ", SQLCA, FBKREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If row not found return, msg updated since last. If found,*/
   /* process.  If any other, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      ;
      return; /* return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      FB08M010.XXXMODID = "S08"; /* process number*/
      converseLib.validationFailed(20); /* updated since displayed*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any changes*/
      exit stack; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S08"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE ROW              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFQTBS01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S08";
  exit stack;
  ;
end // end FB08S08

// update vffqtb01
Function FB08S09()
  ;
  FB08S10(); /* Check in process flag*/
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0       /* Row found*/
   && FBEREC.FBEMDLPF == "N")       
    FB08S11(); /* select set vffqtb01*/
    ;
    while (SQLCA.VAGen_SQLCODE == 0) /* Good return code*/
      FB08S12(); /* Fetch next vffqtb01 row, updt fl*/
    end
    ;
    FB08S13(); /* close  set vffqtb01*/
  end
end // end FB08S09

// Check in process flag
Function FB08S10()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FBEREC empty;
  FBEREC.XXXPGMNB = "FL180D";
  try
    call "IO3440" ("S ", SQLCA, FBEREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      ;
      if (FBEREC.FBEMDLPF == "Y")
        FB08M010.XXXMODID = "S10";
        converseLib.validationFailed(72);
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* roll back any changes*/
        return;
      else
        return;
      end
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S10"; /* Process name*/
  TA1REC.TA1LOC = "SELECT                  ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFBPGM01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S10";
  exit stack;
  ;
end // end FB08S10

// select set vffqtb01
Function FB08S11()
   /* ------------------------------------------------------------*/
   /* Select set for update of sheduler approval flag*/
   /* ------------------------------------------------------------*/
  ;
  set FB8REC empty;
  ;
  FB8REC.FB8RECTP = "B";
  FB8REC.FB8SAPFL = "N";
  FB08W00.FB08MBMO = FB08M010.FB08MBMO; /* move yymm to workarea*/
   /* -------- y2k out begin ---------*/
   /* MOVE 19 TO FB08W00.FB08WBCC;               /* century*/
   /* -------- y2k out end -----------*/
   /* -------- y2k in  begin ---------*/
  if (FB08W00.FB08WBYY > 65)
    FB08W00.FB08WBCC = 19; /* century*/
  else
    FB08W00.FB08WBCC = 20; /* century*/
  end
   /* -------- y2k in end ------------*/
  FB08W00.FB08WBDD = 1; /* day*/
  FB8REC.FB8BUYDT = FB08W00.FB08WBDT; /* move to ccyymm01*/
  FB8REC.SY1STNBR = FB08M010.SY1STNBR; /* style number*/
  FB8REC.SY2CLRID = FB08M010.SY2CLRID; /* color code*/
  FB8REC.XDMCD = FB08M010.XDMCD; /* dimension code*/
  ;
  try
    call "IO3450" ("S2", SQLCA, FB8REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S11"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S11";
  exit stack;
  ;
end // end FB08S11

// fetch/update vffqtb01
Function FB08S12()
   /* ------------------------------------------------------------*/
   /* Fetch/update of sheduler approval flag*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3450" ("N2", SQLCA, FB8REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch row*/
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      return; /* return to calling process*/
    end
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      FB8REC.FB8SAPFL = "Y";
      XX0XS01(); /* get date and time*/
      FB8REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FB8REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      try
        call "IO3450" ("U ", SQLCA, FB8REC) {isNoRefresh = yes, isExternal = yes};
      end /* Update row*/
      if (sysVar.errorCode == "00000000") /* Successful call*/
        ;
        if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
          return; /* return to calling process*/
        end
        if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
          converseLib.validationFailed(20); /* Updated since last read*/
          VGVar.handleSysLibraryErrors = 0;
          sysLib.rollback(); /* roll back any changes*/
          return; /* return to calling process*/
        end
      end
    end
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* roll back any changes*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S12"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE                  ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S12";
  exit stack;
end // end FB08S12

// close set vffqtb01
Function FB08S13()
   /* ------------------------------------------------------------*/
   /* Close set for vffqtb01*/
   /* ------------------------------------------------------------*/
  ;
  ;
  try
    call "IO3450" ("C2", SQLCA, FB8REC) {isNoRefresh = yes, isExternal = yes};
  end /* close set*/
  ;
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S13"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE SET              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S13";
  exit stack;
  ;
end // end FB08S13

// update vfsctl01 row
Function FB08S14()
  ;
  ;
   /* ------------------------------------------------------------*/
   /* This module updates a table row.*/
   /* It will return and document system errors if unexpected*/
   /* return codes are found.*/
   /* ------------------------------------------------------------*/
  ;
  XX0XS01();
  FBMREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBMREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  ;
  ;
  try
    call "IO4670" ("U ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Update table row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      ;
         /* FBMREC.ZZZCHGCT = FBMREC.ZZZCHGCT + 1;*/
      return; /* Return to previous process*/
      ;
    end
  end
  ;
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return code*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S23 "; /* Process name*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S14"; /* Process name*/
  ;
  exit stack;
  ;
  ;
  ;
  ;
  ;
end // end FB08S14

// format VDNTAG01 row
Function FB08S15()
  set FBOREC empty;
  FBOREC.OP1PARTN = FBHREC.OP1PARTN;
  FBOREC.OP1CUOID = FBHREC.OP1CUOID;
  FBOREC.OP1NORID = FBHREC.OP1NORID;
  FBOREC.OP2LNINB = FBHREC.OP2LNINB;
  FBOREC.SY1STNBR = FBHREC.SY1STNBR;
  FBOREC.SY2CLRID = FBHREC.SY2CLRID;
  FBOREC.XDMCD = FBHREC.XDMCD;
  FBOREC.XQACD = FBHREC.XQACD;
  FBOREC.PC2INSEG = FBHREC.PC2INSEG;
  FBOREC.XPGCD = FBHREC.XPGCD;
  FBOREC.XUMCD = FBHREC.XUMCD;
  FBOREC.FB8BUYDT = FBHREC.FB8BUYDT;
  FBOREC.XWHCD = "  ";
  FBOREC.PC2CUXID = FBHREC.PC2CUXID;
  move "N" to FBOREC.FB8MPFL[1] for all;
  ;
  FB08W00.FB08WIX2 = 1;
  ;
  while (FB08W00.FB08WIX2 < 41)
    FBOREC.FBDQTB = FBOREC.FBDQTB + FBHREC.FB7QTB[FB08WIX2];
    FB08W00.FB08WIX2 = FB08W00.FB08WIX2 + 1;
  end
  ;
  XX0XS01();
  FBOREC.ZZZSDT = XX0XW01.XX0XWDAT;
  FBOREC.ZZZSTM = XX0XW01.XX0XWTIM;
  FBOREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBOREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FB08S16();
  ;
  ;
  FBOREC.FBDQTB = 0 - FBOREC.FBDQTB;
  ;
  FBOREC.XWHCD = FBHREC.XWHCD;
  FBOREC.PC2CUXID = " ";
  ;
  FB08S16();
end // end FB08S15

// add row to DFBUY.VDNTAG01 tbl
Function FB08S16()
  ;
  try
    call "IO4940" ("A ", SQLCA, FBOREC) {isNoRefresh = yes, isExternal = yes};
  end /* update row*/
  ;
   /* ------------------------------------------------------------*/
   /* If row found return to calling process.  If any other code,*/
   /* roll back any changes, indicate system error.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S16"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE ROW              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDNTAG01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S16";
  exit stack;
  ;
  ;
  ;
end // end FB08S16

// Obtain control row
Function FB08S17()
  ;
  ;
  set FB9REC empty;
  ;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Row found*/
    return;
  end
  ;
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return code*/
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S17"; /* Process name*/
  TA1REC.TA1LOC = "FETCH CONTROL RECORD    ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "FB08S17";
  exit stack;
  ;
  ;
  ;
  ;
end // end FB08S17

// check for preadvises
Function FB08S18()
   /* ------------------------------------------------------------*/
   /* Select count in join of DPRODA.VPAHDR01 and DPRODA.VPAWRK01*/
   /* for each style, color, dimension, and sales order*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  try
    call "FB1510" ("SE", SQLCA, FBIREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select count*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S18"; /* Process name*/
  TA1REC.TA1LOC = "JOIN OF VPAHDR01 AND VPAWRK01";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "        "; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "FB08S18";
  exit stack;
  ;
end // end FB08S18

// check for diverts
Function FB08S19()
   /* ------------------------------------------------------------*/
   /* Select count in join of DPRODA.VPAHDR01 and DPRODA.VPAitm01*/
   /* as well as DPRODC.VPOITM01 tables,*/
   /* for each style, color, dimension, and sales order*/
   /* ------------------------------------------------------------*/
  ;
  FB08W00.FB08W-OA-COUNT = 0;
  FB08S191(); /* determine oa count*/
  ;
  FB08W00.FB08W-PO-COUNT = 0;
  FB08S192(); /* determine po count*/
  ;
  if (FB08W00.FB08W-OA-COUNT > 0
   && FB08W00.FB08W-PO-COUNT > 0)
    FB08W00.FB08W-DIVERT-COUNT = 0;
  else
    if (FB08W00.FB08W-OA-COUNT > 0
     && FB08W00.FB08W-PO-COUNT == 0)
      FB08W00.FB08W-DIVERT-COUNT = 1;
    else
      if (FB08W00.FB08W-OA-COUNT == 0
       && FB08W00.FB08W-PO-COUNT > 0)
        FB08W00.FB08W-DIVERT-COUNT = 1;
      else
        if (FB08W00.FB08W-OA-COUNT == 0
         && FB08W00.FB08W-PO-COUNT == 0)
          FB08W00.FB08W-DIVERT-COUNT = 0;
        end
      end
    end
  end
  ;
  ;
end // end FB08S19

// diverts logic, get oa count
Function FB08S191()
   /* ------------------------------------------------------------*/
   /* Select count in join of DPRODA.VPAHDR01 and DPRODA.VPAitm01*/
   /* for each style, color, dimension, and sales order*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  try
    call "FB1510" ("SD", SQLCA, FBIREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select count*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    FB08W00.FB08W-OA-COUNT = FBIREC.FBI-COUNT;
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S191"; /* Process name*/
  TA1REC.TA1LOC = "JOIN OF VPAHDR01 AND VPAITM01";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "        "; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S19";
  exit stack;
  ;
  ;
end // end FB08S191

// diverts logic, get po count
Function FB08S192()
   /* ------------------------------------------------------------*/
   /* Select count in join of DPRODC.VPOITM01*/
   /* for each style, color, dimension, and sales order*/
   /* ------------------------------------------------------------*/
  ;
  ;
  ;
  try
    call "FB1510" ("SP", SQLCA, FBIREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select count*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    FB08W00.FB08W-PO-COUNT = FBIREC.FBI-COUNT;
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S192"; /* Process name*/
  TA1REC.TA1LOC = "JOIN OF VPAHDR01 AND VPAITM01";
  TA1REC.TA1DBASE = "DPRODA  "; /* Data base name*/
  TA1REC.TA1TBLVU = "        "; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S19";
  exit stack;
  ;
  ;
end // end FB08S192

// Check for musical size run
Function FB08S20()
   /* ------------------------------------------------------------*/
   /* Check to see if this drs sales order is requesting musical*/
   /* size runs.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  set OP1REC empty;
  OP1REC.OP1PARTN = FBHREC.OP1PARTN;
  OP1REC.OP1CUOID = FBHREC.OP1CUOID;
  OP1REC.OP1NORID = FBHREC.OP1NORID;
  ;
  try
    call "IO4140" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
  end /**/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == +100) /* row not found*/
      OP1REC.XPACD = " "; /* Default to 'no'*/
      return;
    end
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB08S20"; /* Process name*/
  TA1REC.TA1LOC = "CHECK FOR MUSICAL SIZE RUN";
  TA1REC.TA1DBASE = "DREADO  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VORHDRR1"; /* Table view name*/
  TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB08M010.XXXMODID = "S20";
  exit stack;
  ;
  ;
end // end FB08S20

// Load sum code array
Function FB08S21()
  set YSMREC empty; /* initialise record*/
  YSMREC.YSMTBLPF = "XWH";
  YSMREC.YSMSYSPF = "FB";
  YSMREC.YSMSUMID = 1;
  YSMREC.YSMSUMCD = "01";
  YSMSRCVL = "****";
  FB08S22(); /* declare cursor*/
  FB08W00.FB08WIX1 = 1; /* first row*/
  ;
  while (FB08W00.FB08WIX1 <= +10
   && SQLCA.VAGen_SQLCODE != 100)
    FB08S23(); /* fetch row*/
    FB08W00.FB08WIX1 = FB08W00.FB08WIX1 + 1; /* next row*/
  end
  ;
  if (FB08W00.FB08WIX1 <= 10)
    FB08S24(); /* close cursor*/
    return; /* return to calling process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  ;
  FB08M010.XXXMODID = "S21"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "MORE THAN 10 WAREHOUSES SUMCD01 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08S21

// Declare cursor DCORP.VSUMCD01
Function FB08S22()
   /* ------------------------------------------------------------*/
   /* Select the set to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("S1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB08M010.XXXMODID = "S22"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET          ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08S22

// Fetch row DCORP.VSUMCD01
Function FB08S23()
   /* ------------------------------------------------------------*/
   /* Fetch  the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("N1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful or not found,*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB08W00.XWH-WHSE-CD[FB08WIX1] = YSMREC.YSMSRCVL;
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode != "00000000" /* bad return*/
   || SQLCA.VAGen_SQLCODE != 0)      /* not normal sql code*/
    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
    ;
    FB08M010.XXXMODID = "S23"; /* Module identification*/
    ;
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
      ;
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
      ;
    else
      ;
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      ;
      converseLib.clearScreen();
       /* Clear screen before display*/
      ;
    end
    ;
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "SELECT NEXT ROW     ";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
    TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
    TA1REC.TA1TBLKE = YSMGRP; /* Table key*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    FB08W00.FB08WRDS = "N"; /* don't request data*/
    exit stack; /* Exit to display map*/
  end
  ;
end // end FB08S23

// Close cursor DCORP.VSUMCD01
Function FB08S24()
   /* ------------------------------------------------------------*/
   /* Close the cursor*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO2640" ("C1", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB08M010.XXXMODID = "S24"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SUMCD CURSOR  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB08M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSUMCD01"; /* Table view name*/
  TA1REC.TA1TBLKE = YSMGRP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB08W00.FB08WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB08S24

//*** RECORD=FB08W00 ****
// misc working storage for fb08
// ***********************
Record FB08W00 type basicRecord
  10 FB08WBDT FB08WBDT ; 
    15 FB08WBCC FB08WBCC ; 
    15 FB08MBMO FB08MBMO ; 
      20 FB08WBYY FB08WBYY ; 
      20 FB08WBMM FB08WBMM ; 
    15 FB08WBDD FB08WBDD ; 
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FB08WMCS FB08WMCS ; 
  10 FB08WRDS FB08WRDS ; 
  10 FB08WBLF FB08WBLF ; 
  10 FB08WBXF FB08WBXF ; 
  10 FB08WAC FB08WAC ; 
  10 FB08WPAC FB08WPAC ; 
  10 FB08WIFL FB08WIFL ; 
  10 FB08WKCS FB08WKCS ; 
  10 FB08WSCS FB08WSCS ; 
  10 FB08WBPS FB08WBPS ; 
  10 FB08WBAS FB08WBAS ; 
  10 FB08WEON FB08WEON ; 
  10 FB08WFFI FB08WFFI ; 
  10 FB08WSWU FB08WSWU ; 
  10 FB08WGIX FB08WGIX ; 
  10 FB08WLIX FB08WLIX ; 
  10 FB08WMIX FB08WMIX ; 
  10 FB08WIX1 FB08WIX1 ; 
  10 FB08WIX2 FB08WIX2 ; 
  10 FB08WTIX FB08WTIX ; 
  10 FB08WWIX FB08WWIX ; 
  10 FB08WCCT FB08WCCT ; 
  10 FB9BTQTY FB9BTQTY ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 FB08WIXM FB08WIXM ; 
  10 FB8BUYDT FB8BUYDT ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 PT3YYMM PT3YYMM ; 
  10 XDMCD XDMCD ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 PC2CUXID PC2CUXID ; 
  10 OP1CUOID OP1CUOID ; 
  10 OP1NORID OP1NORID ; 
  10 XDSCD XDSCD ; 
  10 XWHCD XWHCD ; 
  10 XWH-WHSE-CD XWH-WHSE-CD [10] ; 
  10 FB08WWK FB08WWK ; 
  10 FB08WWK2 FB08WWK2 ; 
  10 FB08WWK3 FB08WWK3 ; 
  10 FB08WQTG FB08WQTG ; 
    15 FB08WQTY FB08WQTY [40] ; 
  10 FB08W-ORD-ADJ-BUY-DT FB08W-ORD-ADJ-BUY-DT ; 
    15 FB08W-ORD-ADJ-BUY-MO FB08W-ORD-ADJ-BUY-MO ; 
    15 FB08W-ORD-ADJ-BUY-DD FB08W-ORD-ADJ-BUY-DD ; 
  10 FB08W-DIVERT-COUNT FB08W-DIVERT-COUNT ; 
  10 FB08W-OA-COUNT FB08W-OA-COUNT ; 
  10 FB08W-PO-COUNT FB08W-PO-COUNT ; 
  10 FB08W-TMP-DT FB08W-TMP-DT ; 
    15 FB08W-TMP-CC FB08W-TMP-CC ; 
    15 FB08W-TMP-YY FB08W-TMP-YY ; 
    15 FB08W-TMP-MM FB08W-TMP-MM ; 
    15 FB08W-TMP-DD FB08W-TMP-DD ; 
  10 FB08W-CHK-DT FB08W-CHK-DT ; 
    15 FB08W-CHK-CY FB08W-CHK-CY ; 
      20 FB08W-CHK-CC FB08W-CHK-CC ; 
      20 FB08W-CHK-YY FB08W-CHK-YY ; 
    15 FB08W-CHK-MM FB08W-CHK-MM ; 
    15 FB08W-CHK-DM FB08W-CHK-DM ; 
  10 FB08W-CHK-DTE FB08W-CHK-DTE ; 
  10 FB08W-CUR-DT FB08W-CUR-DT ; 
    15 FB08W-CUR-CY FB08W-CUR-CY ; 
      20 FB08W-CUR-CC FB08W-CUR-CC ; 
      20 FB08W-CUR-YY FB08W-CUR-YY ; 
    15 FB08W-CUR-MM FB08W-CUR-MM ; 
    15 FB08W-CUR-DD FB08W-CUR-DD ; 
  10 FB08WBCY1 FB08WBCY1 ; 
    15 FB08WBCC1 FB08WBCC1 ; 
    15 FB08WBYY1 FB08WBYY1 ; 
end // end FB08W00

//*** RECORD=FB08W01 ****
// copy of fbhrec for use as temp storage in fb08
// ***********************
Record FB08W01 type basicRecord
  3 XXXTSLEN XXXTSLEN ; 
  3 * char(1052) ; 
    5 FB08W-MSR-IND FB08W-MSR-IND [4] ; 
    5 FB08W1GP FB08W1GP [4] ; 
      10 OP1PARTN OP1PARTN ; 
      10 OP1CUOID OP1CUOID ; 
      10 OP1NORID OP1NORID ; 
      10 OP2LNINB OP2LNINB ; 
      10 PC2CUXID PC2CUXID ; 
      10 KUCCOID KUCCOID ; 
      10 KUMSTRID KUMSTRID ; 
      10 XNXCD XNXCD ; 
      10 SY1STNBR SY1STNBR ; 
      10 SY2CLRID SY2CLRID ; 
      10 XDMCD XDMCD ; 
      10 XQACD XQACD ; 
      10 PC2INSEG PC2INSEG ; 
      10 XPGCD XPGCD ; 
      10 XUMCD XUMCD ; 
      10 XPRCD XPRCD ; 
      10 XPLCD XPLCD ; 
      10 XPCCD XPCCD ; 
      10 PG1SC4CD PG1SC4CD ; 
      10 FBHDSAFL FBHDSAFL ; 
      10 XDSCD XDSCD ; 
      10 PA1OANBR PA1OANBR ; 
      10 XDVCD XDVCD ; 
      10 XSOCD XSOCD ; 
      10 XCTCD XCTCD ; 
      10 FB8BUYDT FB8BUYDT ; 
      10 FB7BUYST FB7BUYST ; 
      10 XWHCD XWHCD ; 
      10 OP1CUNDT OP1CUNDT ; 
      10 * char(11) ; 
      10 FB08WQTG FB08WQTG ; 
      10 * char(14) ; 
end // end FB08W01

//*** RECORD=FB08W02 ****
// working storage for print application for fb08
// ***********************
Record FB08W02 type basicRecord
  10 FB08WPRR FB08WPRR ; 
    15 FB08WCMT FB08WCMT ; 
    15 FB08WPRM FB08WPRM ; 
      20 XGPCD XGPCD ; 
      20 SY1STNBR SY1STNBR ; 
      20 SY2CLRID SY2CLRID ; 
      20 XDMCD XDMCD ; 
      20 XQACD XQACD ; 
      20 PC2INSEG PC2INSEG ; 
      20 XPGCD XPGCD ; 
      20 XUMCD XUMCD ; 
      20 FB08MBMO FB08MBMO ; 
end // end FB08W02

//*** RECORD=FB08W03 ****
// working storage copy of fblrec for fb08
// ***********************
Record FB08W03 type basicRecord
  5 FBLGROUP FBLGROUP [9] ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 PC2INSEG PC2INSEG ; 
    10 XPGCD XPGCD ; 
    10 XUMCD XUMCD ; 
    10 PT3YYMM PT3YYMM ; 
    10 FB8BUYDT FB8BUYDT ; 
    10 FB-FRZ-BTL-DT FB-FRZ-BTL-DT ; 
    10 FB-FRZ-BTL-HHMM FB-FRZ-BTL-HHMM ; 
    10 XWHCD XWHCD ; 
    10 FBKRDFL FBKRDFL ; 
    10 FB4RGPCT FB4RGPCT ; 
    10 * char(812) ; 
end // end FB08W03

Record FB08W04 type basicRecord
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 PT3YYMM PT3YYMM ; 
  10 FB08MBMO FB08MBMO ; 
  10 FB08MTFQ FB08MTFQ ; 
  10 FB08MTDQ FB08MTDQ ; 
  10 FB08MDBQ FB08MDBQ ; 
  10 FBKSTQTB FBKSTQTB ; 
end // end FB08W04

//*** RECORD=FB08W05 ****
// yet another copy of fblrec for an fb08 workarea
// ***********************
Record FB08W05 type basicRecord
  5 FBLGROUP FBLGROUP ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 PC2INSEG PC2INSEG ; 
    10 XPGCD XPGCD ; 
    10 XUMCD XUMCD ; 
    10 PT3YYMM PT3YYMM ; 
    10 FB8BUYDT FB8BUYDT ; 
    10 FB-FRZ-BTL-DT FB-FRZ-BTL-DT ; 
    10 FB-FRZ-BTL-HHMM FB-FRZ-BTL-HHMM ; 
    10 XWHCD XWHCD ; 
    10 FBKRDFL FBKRDFL ; 
    10 FB4RGPCT FB4RGPCT ; 
    10 PT3AVQT PT3AVQT [40] ; 
    10 FBLDAQTY FBLDAQTY [40] ; 
    10 FBLMAQTY FBLMAQTY [40] ; 
    10 FBLOAQTY FBLOAQTY [40] ; 
    10 FBLTAQTY FBLTAQTY [40] ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end FB08W05

// fb08 buy date yymm
DataItem FB08MBMO char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fb08 drs bld qty
DataItem FB08MDBQ num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// total drs quantity
DataItem FB08MTDQ num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// total forecast qty to buy
DataItem FB08MTFQ num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// converted date century portion
DataItem FB08W-CHK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CHK-CY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// converted date delivery mnth
DataItem FB08W-CHK-DM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// converted date field
DataItem FB08W-CHK-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// converted date in db format
DataItem FB08W-CHK-DTE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// converted date mnfcture mnth
DataItem FB08W-CHK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// converted date year portion
DataItem FB08W-CHK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CUR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CUR-CY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CUR-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CUR-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CUR-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB08W-CUR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Product divert count
DataItem FB08W-DIVERT-COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Musical size run indicator
DataItem FB08W-MSR-IND char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Product OA count(for diverts)
DataItem FB08W-OA-COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// order adjustment buy dd
DataItem FB08W-ORD-ADJ-BUY-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order adjustment buy dt
DataItem FB08W-ORD-ADJ-BUY-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// order adjustment buy mo ccyymm
DataItem FB08W-ORD-ADJ-BUY-MO num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Product PO count(for diverts)
DataItem FB08W-PO-COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tmp date century portion
DataItem FB08W-TMP-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tmp date day portion
DataItem FB08W-TMP-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tmp date for converting buy dt
DataItem FB08W-TMP-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tmp date month portion
DataItem FB08W-TMP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tmp date year portion
DataItem FB08W-TMP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// drs/nil order extract group
DataItem FB08W1GP char(260)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product accept fl
DataItem FB08WAC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// build all allowed flag
DataItem FB08WBAS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buy date century
DataItem FB08WBCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy century
DataItem FB08WBCC1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date ccyy
DataItem FB08WBCY1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date day
DataItem FB08WBDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date ccyymm01
DataItem FB08WBDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vfblav01 row found flag
DataItem FB08WBLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buy date mm
DataItem FB08WBMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// bad product switch
DataItem FB08WBPS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// blank xref found flag
DataItem FB08WBXF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buy date yy
DataItem FB08WBYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy year
DataItem FB08WBYY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// customer count for map
DataItem FB08WCCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comment, value //*
DataItem FB08WCMT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of dnord flag
DataItem FB08WEON char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first fetch indicator
DataItem FB08WFFI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group (size) index
DataItem FB08WGIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// invalid fastpath flag
DataItem FB08WIFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// General index
DataItem FB08WIX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// General index
DataItem FB08WIX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tsq index
DataItem FB08WIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// key changed switch
DataItem FB08WKCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line index
DataItem FB08WLIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// map format switch
DataItem FB08WMCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map index
DataItem FB08WMIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pending accectall flag
DataItem FB08WPAC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl parameter group level
DataItem FB08WPRM char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl comment group level
DataItem FB08WPRR char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// quantity group
DataItem FB08WQTG char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// quantity work areal
DataItem FB08WQTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// request data switch
DataItem FB08WRDS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll switch
DataItem FB08WSCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage update sw
DataItem FB08WSWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parm table index
DataItem FB08WTIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// warehouse index
DataItem FB08WWIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work area
DataItem FB08WWK int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work area
DataItem FB08WWK2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work area
DataItem FB08WWK3 decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// az_temp_adj_qty
DataItem FBLTAQTY int {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

