package fb0f;

import corpcom3.XPFB001;
import corpcom3.XPTA0P;
import corpcom4.XSEXIT;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import fb.common.FBWREC;
import fb.common.FBXREC;
import ff.common.FF00ENU;
import ta.common.TA1REC;
import ta.common.TA3REC;
import ta.common.TA5REC;
import ta.common.TA6REC;
import ta.common.TAEREC;
//*** PROGRAM=FB0F ****
// This application is the main menu for the footwear forcas-
// ting system. The user must enter a number that corresponds
// to a valid option on the map. The application will then
// transfer to the application chosen.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 03/23/88   J.brady  Created.
// 06/11/91   jalle1   add option 8 to print drs rpt.
// 06/11/91   jalle1   add option 9 to print tolerance rpt.
//                     set option 8 not available.
// 08/06/91   jalle1   activate option 8.
// 12/10/91   pmainw   change the sequence of options.
// 03/15/93   ldeluh   add rta maint by product option
// 07/21/93   ldeluh   Chg testrms to testenc.
// *********************
Program FB0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FB0FW00 FB0FW00; // record
  FBWREC FBWREC; // record
  FBXREC FBXREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FB0FT01 {deleteAfterUse = yes}; // table
  use FB0FTT1 {deleteAfterUse = yes}; // table
  use FB0FM.FB0FM001, // form
  		FB0FM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFB001: XPFB001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set FB0FM001 initial; /* Initialize map output area*/

    set FBWREC empty;
    set FBXREC empty;
    FBWREC.FBWFILL = FBXREC.FBXGROUP;
    COMMAREA.CAUSERA = FBWREC.FBWGROUP;
    COMMAREA.XGPCD = "02"; /* Hardcode Footwear GPC*/

    goto FB0F001; /* Converse Footwear Menu*/


    FB0F001: FB0F001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the footware forecasting main menu.*/
     /* ------------------------------------------------------------*/

    goto FB0F001; /* Converse footware forecasting menu*/


  end // end main
end // end FB0F

// footwear forecasting main menu
Function FB0F001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) display appropriate map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FB0F100(); /* Format and display the map*/

  FB0F200(); /* Check attention identifier*/

  FB0F300(); /* Reset fields to normal intensity*/

  FB0F400(); /* Verify the entered data*/

  FB0F500(); /* Process valid input request*/


end // end FB0F001

// Format and display the map
Function FB0F100()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0 /* Error message to display*/
   || FB0FM001.VAGen_EZEMSG != " ")     /* error message to display*/
    set FB0FM001 alarm; /* Indicate sound alarm*/

  else
    set FB0FM001 initial; /* Clear map output area*/
    FB0FM001.XXXCURDT = VGVar.currentShortGregorianDate; /* current date*/
    FB0FM001.XGPCD = COMMAREA.XGPCD; /* GPC*/
  end

  converse FB0FM001 ;

  FB0FM001.VAGen_EZEMSG = " ";

end // end FB0F100

// Check attention identifier
Function FB0F200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FB0FM001 initial; /* Clear the map fields*/

    exit stack; /* Exit to redisplay map*/

  end

  if (FB0FM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = FB0FM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FB0FM001.CAITEM; /* Application data*/

      XSEXIT(); /* Exit to another application*/
      set FB0FM001.CATOAP cursor, bold; /* highlight*/
      FB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* If bad transfer*/
      exit stack; /* Return to show error message*/

    else

      converseLib.validationFailed(3); /* Indicate PF key not valid*/

    end

    set FB0FM001.CATOAP cursor, modified, bold; /* Highlight*/

    FB0FM001.XXXMODID = "200"; /* Module Identifier*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    COMMAREA.CACURRAP = "FB0F";
    COMMAREA.CATOAP = "FY0M";
    XSEXIT();
    FB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* If bad transfer*/
    exit stack;

  end

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD00"; /* TO APPLICATION*/
    COMMAREA.CAITEM = "FB0FM001"; /* Application find code*/
    XSEXIT(); /* Exit to help menu*/

    FB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* If bad transfer*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf5) /* pf5 was pressed*/

    COMMAREA.CATOAP = "FY0M"; /* To application*/
    XSEXIT();
    FB0FM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* If bad transfer*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   
   && converseVar.eventKey not pf8) 

    FB0FM001.XXXMODID = "200"; /* Process name*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end FB0F200

// Reset highlighted fields
Function FB0F300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FB0FM001.FB0FMSEL initialAttributes; /* selection*/

  set FB0FM001.CATOAP initialAttributes; /* Commarea TO application*/
  set FB0FM001.CAITEM initialAttributes; /* Commarea application data*/


end // end FB0F300

// Verify the entered data
Function FB0F400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Validate the selection code entered and if any errors*/
   /* exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (FB0FM001.CAITEM > " ") /* Application data was entered*/

    set FB0FM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(40); /* Enter only with FAST PATH*/
    FB0FM001.XXXMODID = "400"; /* MOdule id name*/

  end

  if (FB0FM001.FB0FMSEL > 0 /* selection > 0*/
   && FB0FM001.FB0FMSEL <= 12) /* or <= 12*/

     /* next sentence*/

  else

    set FB0FM001.FB0FMSEL cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(10); /* not valid*/
    FB0FM001.XXXMODID = "400"; /* Module id name*/

  end

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end


end // end FB0F400

// Process valid input request
Function FB0F500()
  if (FB0FM001.FB0FMSEL == 5)
     /* or fb0fm001.fb0fmsel eq any other submitted job*/

    /* ------------------------------------------------------------*/
     /* Call sub-routine to find which environment*/
     /* the program is executing in, development*/
     /* or production.*/
    /* ------------------------------------------------------------*/

    set TA3REC empty;
    TA3REC.TA3OPTN = "ASSIGN ";
    try
      call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
    end

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && TA3REC.TA3RTNCD == 0)          /* Good return code*/

       /* next sentence*/

    else

      FB0FM001.XXXMODID = "600"; /* module identification*/
      converseLib.validationFailed(87); /* Error encountered with print request*/
      exit stack;
    end

    /* ------------------------------------------------------------*/
     /* submit the appropriate report according to the selection.*/
    /* ------------------------------------------------------------*/

    if (FB0FM001.FB0FMSEL == 5) /* fcty below tolerance rpt*/

      if (TA3REC.TA3RGNID == "03") /* if production region*/
        FB0F505(); /* submit prod job*/
      else
        FB0F510(); /* submit test job*/
      end

    end

    FB0FM001.FB0FMSEL = 0;

    return;

  end



   /* ------------------------------------------------------------*/
   /* transfer to the called application.*/
   /* ------------------------------------------------------------*/

  if (FB0FM001.FB0FMSEL > 0) /* menu selection entered*/

    if (FB0FM001.FB0FMSEL == 1) /* selection 1 entered*/
      COMMAREA.CATOAP = "FB0M"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 2) /* selection 2 entered*/
      COMMAREA.CATOAP = "FB09"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 3) /* selection 3 entered*/
      COMMAREA.CATOAP = "FB01"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 4) /* selection 4 entered*/
      COMMAREA.CATOAP = "FB0Q"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 6) /* selection 6 entered*/
      COMMAREA.CATOAP = "FB0U"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 7) /* selection 7 entered*/
      COMMAREA.CATOAP = "FB03"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 8) /* selection 8 entered*/
      COMMAREA.CATOAP = "FB05"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 9) /* selection 9 entered*/
      COMMAREA.CATOAP = "FB0V"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 10) /* selection 10 entered*/
      COMMAREA.CATOAP = "FB0X"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 11) /* selection 11 entered*/
      COMMAREA.CATOAP = "FB0Z"; /* TO application*/
    end

    if (FB0FM001.FB0FMSEL == 12) /* selection 12 entered*/
      COMMAREA.CATOAP = "FB0H"; /* TO application*/
    end

    XSEXIT(); /* Exit to another application*/
    COMMAREA.CAITEM = " ";

    if (COMMAREA.CASECRC == 3 /* Application not found*/
     || COMMAREA.CASECRC == 4) /* or transfer not allowed*/

      converseLib.validationFailed(25); /* Indicate not allowed*/
    else
      converseLib.validationFailed(1); /* Indicate system error*/

    end


  end



  if (converseVar.validationMsgNum != 0)
    exit stack;
  end


end // end FB0F500

// Process prod JCL
Function FB0F505()

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty;

  FB0FW00.FB0FWIXT = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (FB0FW00.FB0FWIXT > 0) /* Until end of table*/

    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = FB0FT01.TARJCL[FB0FWIXT]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = FB0FT01.TARTYPE[FB0FWIXT];

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FB0FT01.TARJCL[FB0FWIXT] == "/*EOF") /* End of table*/

      FB0FW00.FB0FWIXT = 0; /* Indicate end of table*/

    else

      FB0FW00.FB0FWIXT = FB0FW00.FB0FWIXT + 1; /* Increment table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* if this is the first report, get output destination,*/
   /* else just submit jcl with specified destination.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "Y"; /* format and submit jcl*/
  TA6REC.TA6MSGSW = "N"; /* set reply swt to yes*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(76); /* Return message*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(86); /* Indicate user cancelled*/
    FB0FM001.XXXMODID = "505"; /* module identification*/

  else
    converseLib.validationFailed(01); /* Indicate system error*/
    FB0FM001.XXXMODID = "505"; /* module identification*/

  end

  exit stack; /* Exit to display map*/



end // end FB0F505

// Process test JCL
Function FB0F510()

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty;

  FB0FW00.FB0FWIXT = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (FB0FW00.FB0FWIXT > 0) /* Until end of table*/

    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = FB0FTT1.TARJCL[FB0FWIXT]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = FB0FTT1.TARTYPE[FB0FWIXT];

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FB0FTT1.TARJCL[FB0FWIXT] == "/*EOF") /* End of table*/

      FB0FW00.FB0FWIXT = 0; /* Indicate end of table*/

    else

      FB0FW00.FB0FWIXT = FB0FW00.FB0FWIXT + 1; /* Increment table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* if this is the first report, get output destination,*/
   /* else just submit jcl with specified destination.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "Y"; /* format and submit jcl*/
  TA6REC.TA6MSGSW = "N"; /* set reply swt to yes*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(76); /* Return message*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(86); /* Indicate user cancelled*/
    FB0FM001.XXXMODID = "505"; /* module identification*/

  else
    converseLib.validationFailed(01); /* Indicate system error*/
    FB0FM001.XXXMODID = "505"; /* module identification*/

  end

  exit stack; /* Exit to display map*/



end // end FB0F510

//*** RECORD=FB0FW00 ****
// ---------------------------
// Application Working Storage
// ---------------------------
// ***********************
Record FB0FW00 type basicRecord
  10 FB0FWIXT FB0FWIXT ; 
end // end FB0FW00

// table index
DataItem FB0FWIXT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

