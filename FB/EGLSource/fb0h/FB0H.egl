package fb0h;

import corpcom1.CAUSERID;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFB001;
import corpcom4.XSFBS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XDMCD;
import corpx2.XWHCD;
import fb.common.FB7REC;
import fb.common.FB7RTADT;
import fb.common.FB9REC;
import fb.common.FBFREC;
import fb.common.FBWREC;
import fb.common.FBXREC;
import fb.common.FBZREC;
import ff.common.FF3REC;
import fy.common.FY1FCTYC;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import pc.common.PC2CUXID;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
//*** PROGRAM=FB0H ****
// maintenance history
// ----------------------------------------------------------
// FB-309  03/03/93 LDELUH  RTA maintenance by product.
//                          Cloned from NIL version FB05.
//         10/21/94 JJUDKI  BUG. RTA date allows too many days
//                          in a month. Added ta0040 to h510.
// ECF     01/27/95 JALLE1  Expand S.O. to 9.3 digits.
// ECF     02/10/95 JALLE1  Darken S.O. when = 0.
// YR2000  12/03/97 rgilli  Y2K MODIFICATIONS MADE TO:
//                          FB0HM010: Remove zero supression
//                          FB0H500:  Add century windowing
//                          FB0H510:  Add century windowing
//                          FB0H600:  Add century windowing
// *********************
Program FB0H type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FB0HW00 FB0HW00; // record
  FB0HW01 FB0HW01; // record
  FB0HW02 FB0HW02; // record
  FB7REC FB7REC; // record
  FB9REC FB9REC; // record
  FBFREC FBFREC; // record
  FBWREC FBWREC; // record
  FBXREC FBXREC; // record
  FBZREC FBZREC; // record
  FF3REC FF3REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FB0HM.FB0HM010 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFB001: XPFB001();
    ;
    FBXREC.FBXGROUP = FBWREC.FBWFILL;
    ;
     /* ------------------------------------------------------------*/
      /* initialise working storage and map areas*/
     /* ------------------------------------------------------------*/
    ;
    set FB0HW00 empty; /* working storage*/
    set FB0HW01 empty; /* screen display working storage*/
    set FB0HW02 empty; /* screen display tsq area*/
    set FB0HM010 initial; /* map area*/
    FB0HW00.FB0HWRDS = "N"; /* dont request data*/
    FB0HW00.FB0HWMCS = "N"; /* dont format map*/
    FB0HW00.FB0HWSAS = "N"; /* scrolling not allowed yet*/
    FB0HW00.FB0HWMSL = 15; /* maximum possible screen lines*/
    FB0HW00.XXXTSLEN = 435; /* temp storage queue length*/
    ;
     /* ------------------------------------------------------------*/
      /* see if key data is in commarea*/
     /* ------------------------------------------------------------*/
    ;
    if (FBXREC.SY1STNBR != " ") /* style number entered*/
      FB0HM010.SY1STNBR = FBXREC.SY1STNBR;
      FB0HW00.FB0HWRDS = "Y"; /* request data*/
      if (FBXREC.SY2CLRID == " ") /* COLOR*/
        FB0HM010.SY2CLRID = "00";
      else
        FB0HM010.SY2CLRID = FBXREC.SY2CLRID;
      end
      if (FBXREC.XDMCD == " ") /* DIMENSION*/
        FB0HM010.XDMCD = "00";
      else
        FB0HM010.XDMCD = FBXREC.XDMCD;
      end
    end
    ;
    FB0H001: FB0H001();
    goto FB0H001;
  end // end main
end // end FB0H

// DOM RTA Maint By Style
Function FB0H001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/
  ;
   /* 1) obtain data to display.*/
   /* 2) display appropriate map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/
  ;
   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/
  ;
  FB0H100(); /* obtain data to display*/
  ;
  FB0H200(); /* format and display map*/
  ;
  FB0H300(); /* Check attention identifier*/
  ;
  FB0H400(); /* Reset fields to normal intensity*/
  ;
  FB0H500(); /* Verify the entered data*/
  ;
  FB0H600(); /* Process valid input request*/
  ;
  ;
end // end FB0H001

// obtain data to display
Function FB0H100()
  ;
  FB0H110(); /* get buy date*/
  FB0HW00.FB0HWBDT = FB9REC.FB8BUYDT; /* buy date ccyymmdd*/
  FB0HW01.FB0HW-BUY-MO = FB0HW00.FB0HW-BUY-MO; /* buy date yymm*/
  FB0HM010.FB0HM-BUY-MO = FB0HW00.FB0HW-BUY-MO; /* map buy date*/
  ;
  if (FB0HW00.FB0HWRDS != "Y" /* data has not been requested*/
   || converseVar.validationMsgNum != 0)
    return; /* return to calling process*/
  end
  ;
  FB0HS01(); /* purge temp storage*/
  FB0HW00.FB0HWSAS = "N"; /* scroll allowed switch*/
  FB0HW00.FB0HWRDS = "N"; /* dont request data*/
  ;
  FB0H130(); /* process MFBUY rows*/
  FB0HW00.FB0HWMCS = "Y"; /* format map*/
  FB0HW00.FB0HWSAS = "Y"; /* scroll allowed switch*/
  ;
  if (FB0HW00.FB0HWIXM > 0) /* partial page has been formatted*/
    FB0HS02(); /* add page to temp storage*/
  end
  ;
  FB0H150(); /* get product description*/
  ;
   /* ------------------------------------------------------------*/
   /* save key data in display working storage*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW01.SY1STNBR = FB0HM010.SY1STNBR; /* style number*/
  FB0HW01.SY2CLRID = FB0HM010.SY2CLRID; /* color code*/
  FB0HW01.XDMCD = FB0HM010.XDMCD; /* dimension code*/
  FB0HW01.SY2CLRAB = FF3REC.SY2CLRAB; /* color abbreviation*/
  FB0HW01.SY1SSTNM = FF3REC.SY1SSTNM; /* style short name*/
  ;
  if (converseVar.validationMsgNum == 0)
    FB0HW00.XXXTSPAG = 1; /* desired page number*/
  end
end // end FB0H100

// get buy date
Function FB0H110()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  set FB9REC empty;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB9REC.FB9BTQTY = 2 * FB9REC.FB9BTQTY; /* double buy tolerance*/
      FB0H111(); /* get first possible rta date*/
      FB0H112(); /* get last possible rta date*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB0HM010.XXXMODID = "110"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0H110

// get first possible rta date
Function FB0H111()
  set TA2REC empty;
  TA2REC.TA2GRGGN = FB9REC.FB8BUYDT;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2DYAOD = -90;
  TA2REC.TA2GRTYP = "G";
  ;
   /* ------------------------------------------------------------*/
   /* get the earliest possible rta date*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* get date*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (TA2REC.TA2RTNCD == 0) /* Normal return code*/
      FB0HW00.FB0HWFRD = TA2REC.TA2GRGGN; /* first poss rta dt*/
      return; /* Return to previous process*/
    else
      ;
      if (TA2REC.TA2RTNCD < 888)
        converseLib.validationFailed(17); /* invalid date*/
        FB0HM010.XXXMODID = "111";
        set FB0HM010.FB0HM-BUY-MO cursor, bold;
        return; /* Return to previous process*/
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  ;
  FB0HM010.XXXMODID = "111"; /* Module identification*/
  ;
  converseLib.validationFailed(01); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  converseLib.clearScreen();
   /* Clear screen before display*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "GET DATE            ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0H111

// get last possible rta date
Function FB0H112()
  set TA2REC empty;
  TA2REC.TA2GRGGN = FB9REC.FB8BUYDT;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2DYAOD = 90;
  TA2REC.TA2GRTYP = "G";
  ;
   /* ------------------------------------------------------------*/
   /* get the earliest possible rta date*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* get date*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (TA2REC.TA2RTNCD == 0) /* Normal return code*/
      FB0HW00.FB0HWLRD = TA2REC.TA2GRGGN; /* last  poss rta dt*/
      return; /* Return to previous process*/
    else
      ;
      if (TA2REC.TA2RTNCD < 888)
        converseLib.validationFailed(17); /* invalid date*/
        FB0HM010.XXXMODID = "112";
        set FB0HM010.FB0HM-BUY-MO cursor, bold;
      end
      ;
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  ;
  FB0HM010.XXXMODID = "112"; /* Module identification*/
  ;
  converseLib.validationFailed(01); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  converseLib.clearScreen();
   /* Clear screen before display*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "GET DATE            ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0H112

// Process MFBUY rows
Function FB0H130()
  FB0H131(); /* select set vmfbuy01*/
  ;
  FB0HW00.FB0HWFFS = "Y"; /* first fetch*/
  ;
  while (SQLCA.VAGen_SQLCODE != 100) /* rows of data in table*/
    FB0H132(); /* fetch next row*/
    ;
    if (SQLCA.VAGen_SQLCODE != 100 /* found a row*/
     && FB7REC.XDVCD != "02")      /* & not NIL*/
      FB0H133(); /* save in display working storage*/
    end
    ;
  end
  ;
  FB0H134(); /* close cursor*/
end // end FB0H130

// select set from DFBUY.VMFBUY01
Function FB0H131()
   /* ------------------------------------------------------------*/
   /* set the key, select a set of rows from dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  set FB7REC empty; /* initialise record*/
  FB7REC.SY2CLRID = FB0HM010.SY2CLRID; /* color code*/
  FB7REC.XDMCD = FB0HM010.XDMCD; /* dimension code*/
  FB7REC.SY1STNBR = FB0HM010.SY1STNBR; /* style number*/
  FB7REC.FB8BUYDT = FB9REC.FB8BUYDT; /* buy date*/
  FB7REC.XWHCD = "*"; /* warehouse*/
  FB7REC.FB7RTADT = -1; /* rta date*/
  FB7REC.PC2CUXID = "*"; /* customer xref*/
  ;
   /* ------------------------------------------------------------*/
   /* Declare cursor for dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("S1", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H131"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "131";
  exit stack;
  ;
end // end FB0H131

// fetch row from DFBUY.VMFBUY01
Function FB0H132()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("N1", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB0HW00.FB0HWFFS = "N"; /* not first fetch any more*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      ;
      if (FB0HW00.FB0HWFFS == "Y") /* first fetch*/
        FB0HS04(); /* reset screen*/
        FB0HM010.XXXMODID = "132";
        converseLib.validationFailed(18); /* no data to display*/
        set FB0HM010.SY1STNBR cursor, bold;
        set FB0HM010.FB0HM-BUY-MO bold;
        set FB0HM010.SY2CLRID bold;
        set FB0HM010.XDMCD bold;
        exit stack; /* display map*/
      end
      ;
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB0HM010.XXXMODID = "132"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB0HW00.FB0HWMCS = "N"; /* dont format map*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB7REC.FB7GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB0HW00.FB0HWRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0H132

// save in display wking storage
Function FB0H133()
   /* --------------------------------------------------------*/
   /* Add page to temp storage if all lines on page have been*/
   /* filled.*/
   /* ---------------------------------------------------------*/
  ;
  if (FB0HW00.FB0HWIXM == FB0HW00.FB0HWMSL) /* temp storage max*/
    FB0HS02(); /* Add page to temp storage*/
  end
  ;
  FB0HW00.FB0HWIXM = FB0HW00.FB0HWIXM + 1; /* temp storage line count*/
  ;
  ;
  FB0HW02.XWHCD[FB0HWIXM] = FB7REC.XWHCD;
  FB0HW02.FB7RTADT[FB0HWIXM] = FB7REC.FB7RTADT;
  FB0HW02.PC2CUXID[FB0HWIXM] = FB7REC.PC2CUXID;
  FB0HW02.OP1PARTN[FB0HWIXM] = FB7REC.OP1PARTN; /* OP-ORD-PART-CHAR*/
  FB0HW02.OP1CUOID[FB0HWIXM] = FB7REC.OP1CUOID; /* OP-CUST-ORD-ID*/
  FB0HW02.OP1NORID[FB0HWIXM] = FB7REC.OP1NORID; /* OP-NIKE-ORD-ID*/
  FB0HW02.FY1FCTYC[FB0HWIXM] = FB7REC.FY1FCTYC;
  FB0HW00.FB0HWWK = 0; /* initialise accumulator*/
  FB0HW00.FB0HWGIX = 1; /* first size*/
  ;
  while (FB0HW00.FB0HWGIX < 41) /* for each size*/
    FB0HW00.FB0HWWK = FB0HW00.FB0HWWK + FB7REC.FB7QTB[FB0HWGIX];
    FB0HW00.FB0HWGIX = FB0HW00.FB0HWGIX + 1; /* next size*/
  end
  ;
  FB0HW02.FB0HMQTB[FB0HWIXM] = FB0HW00.FB0HWWK;
  ;
end // end FB0H133

// close cursor DFBUY.VMFBUY01
Function FB0H134()
  ;
   /* ------------------------------------------------------------*/
   /* close cursor for dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("C1", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H134"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE CURSOR            ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "134";
  exit stack;
  ;
end // end FB0H134

// get product description
Function FB0H150()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/
  ;
  FF3REC.SY1STNBR = FB7REC.SY1STNBR;
  FF3REC.SY2CLRID = FB7REC.SY2CLRID;
  FF3REC.XDMCD = FB7REC.XDMCD;
  ;
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3990" ("S ", SQLCA, FF3REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* If not found, move all * to the fields*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FF3REC.SY1SSTNM = "************";
      FF3REC.SY2CLRAB = "************";
      FB0HM010.SY1SSTNM = "************";
      FB0HM010.SY2CLRAB = "************";
      FB0HW00.SY1SSTNM = "************";
      FB0HW00.SY2CLRAB = "************";
      SQLCA.VAGen_SQLCODE = 0; /* reset return code*/
      return; /* display the map*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB0HM010.XXXMODID = "150"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFSTY01"; /* Table view name*/
  TA1REC.TA1TBLKE = FF3REC.FF3GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0H150

// format and display map
Function FB0H200()
   /* ------------------------------------------------------------*/
   /* format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/
  ;
  FB0HM010.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  if (converseVar.validationMsgNum != 0) /* a real error, not just info*/
    FBWREC.XXXMSGNO = converseVar.validationMsgNum; /* move it to working storage*/
  end
  ;
  if (FB0HW00.FB0HWMCS == "Y") /* map needs to be formatted*/
    FB0H210(); /* format the map*/
  end
  ;
  if (FBWREC.XXXMSGNO != 0)
                                   /* error or informational message*/
    ;
    if (FBWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FBWREC.XXXMSGNO);
    end /* move to map*/
    set FB0HM010 alarm; /* indicate sound alarm*/
    ;
  end
  ;
  FB0HW00.FB0HWMIX = FB0HW00.FB0HWMSL;
  ;
  while (FB0HW00.FB0HWMIX > 0)
    if (FB0HM010.XWHCD[FB0HWMIX] == " "
     && FB0HM010.PC2CUXID[FB0HWMIX] == " ")
      set FB0HM010.XWHCD[FB0HWMIX] skip, invisible;
      set FB0HM010.FB0HMRDT[FB0HWMIX] skip, invisible;
      set FB0HM010.PC2CUXID[FB0HWMIX] skip, invisible;
      set FB0HM010.OP1CUOID[FB0HWMIX] skip, invisible;
      set FB0HM010.FB0HMDOT[FB0HWMIX] skip, invisible;
      set FB0HM010.OP1NORID[FB0HWMIX] skip, invisible;
      set FB0HM010.FB0HMQTB[FB0HWMIX] skip, invisible;
      set FB0HM010.FY1FCTYC[FB0HWMIX] skip, invisible;
    else
      if (FB0HM010.OP1CUOID[FB0HWMIX] == 0
       && FB0HM010.OP1NORID[FB0HWMIX] == 0)
        set FB0HM010.OP1CUOID[FB0HWMIX] skip, invisible;
        set FB0HM010.FB0HMDOT[FB0HWMIX] skip, invisible;
        set FB0HM010.OP1NORID[FB0HWMIX] skip, invisible;
      end
    end
    FB0HW00.FB0HWMIX = FB0HW00.FB0HWMIX - 1;
  end
  ;
  converse FB0HM010 ;
   /* ----------------------------------------------------------*/
   /* clear the message fields and save fast path information*/
   /* ----------------------------------------------------------*/
  ;
  FBWREC.XXXMSGNO = 0; /* clear message number*/
  COMMAREA.CATOAP = FB0HM010.CATOAP; /* xfer to application*/
  COMMAREA.CAITEM = FB0HM010.CAITEM; /* xfer to appl date*/
end // end FB0H200

// format map
Function FB0H210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/
  ;
  set FB0HM010 initial; /* Map input/output area*/
  FB0HM010.XXXCURDT = VGVar.currentShortGregorianDate; /* current date*/
  FB0HW00.FB0HWMCS = "N"; /* reset format map switch*/
  ;
   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  if (FB0HW00.TA5TSQIX > 0) /* Pages were formatted*/
    ;
    if (FB0HW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/
      ;
      /* ------------------------------------------------------------*/
       /* If the desired page number is greater than the highest page*/
       /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/
      ;
      if (FB0HW00.XXXTSPAG > FB0HW00.TA5TSQIX) /* Desired greater highest*/
        FB0HW00.XXXTSPAG = FB0HW00.TA5TSQIX; /* Default to highest*/
      end
      ;
      FB0HS05(); /* Obtain temporary storage page*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Format the header data in the map from the display storage.*/
   /* ------------------------------------------------------------*/
  ;
  FB0HM010.FB0HM-BUY-MO = FB0HW01.FB0HW-BUY-MO;
  FB0HM010.SY1STNBR = FB0HW01.SY1STNBR;
  FB0HM010.SY2CLRID = FB0HW01.SY2CLRID;
  FB0HM010.XDMCD = FB0HW01.XDMCD;
  FB0HM010.SY2CLRAB = FB0HW01.SY2CLRAB;
  FB0HM010.SY1SSTNM = FB0HW01.SY1SSTNM;
  ;
   /* ------------------------------------------------------------*/
   /* Format the detail lines in the map from temp storage.*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW00.FB0HWMIX = 1; /* first screen line*/
  ;
  while (FB0HW00.FB0HWMIX <= FB0HW00.FB0HWMSL)
    if (FB0HW02.XWHCD[FB0HWMIX] != " "
     || FB0HW02.PC2CUXID[FB0HWMIX] != " ")
      FB0HW00.FB0HWDT2 = FB0HW02.FB7RTADT[FB0HWMIX]; /* yymmdd*/
      FB0HW00.FB0HWYY1 = FB0HW00.FB0HWYY2;
      FB0HW00.FB0HWMM1 = FB0HW00.FB0HWMM2;
      FB0HW00.FB0HWDD1 = FB0HW00.FB0HWDD2;
      FB0HM010.FB0HMRDT[FB0HWMIX] = FB0HW00.FB0HWDT1; /* mmddyy*/
      FB0HM010.XWHCD[FB0HWMIX] = FB0HW02.XWHCD[FB0HWMIX];
      FB0HM010.PC2CUXID[FB0HWMIX] = FB0HW02.PC2CUXID[FB0HWMIX];
      FB0HM010.OP1PARTN[FB0HWMIX] = FB0HW02.OP1PARTN[FB0HWMIX];
      FB0HM010.OP1CUOID[FB0HWMIX] = FB0HW02.OP1CUOID[FB0HWMIX];
      FB0HM010.OP1NORID[FB0HWMIX] = FB0HW02.OP1NORID[FB0HWMIX];
      FB0HM010.FB0HMQTB[FB0HWMIX] = FB0HW02.FB0HMQTB[FB0HWMIX];
      FB0HM010.FY1FCTYC[FB0HWMIX] = FB0HW02.FY1FCTYC[FB0HWMIX];
    end
    FB0HW00.FB0HWMIX = FB0HW00.FB0HWMIX + 1;
  end
  ;
  ;
end // end FB0H210

// validate attn identifier
Function FB0H300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/
  ;
  if (FB0HM010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      set FBWREC empty;
      FBXREC.SY1STNBR = FB0HM010.SY1STNBR;
      FBXREC.SY2CLRID = FB0HM010.SY2CLRID;
      FBXREC.XDMCD = FB0HM010.XDMCD;
      FBWREC.FBWFILL = FBXREC.FBXGROUP;
      FB0HS01(); /* purge temp storage*/
      XSFBS01(); /* Exit to another application*/
      FB0HM010.XXXMODID = "300"; /* Process name*/
      set FB0HM010.CATOAP cursor, bold; /* Highlight (in case bad xfer)*/
    else
      converseLib.validationFailed(36); /* Indicate only enter with fastpath*/
      FB0HM010.XXXMODID = "300"; /* Process name*/
    end
    ;
    FB0HW00.FB0HWRDS = "Y"; /* request data*/
    FB0HW00.FB0HWMCS = "Y"; /* format map*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey is pf1 /* help*/
   || converseVar.eventKey is pf3 /* buy menu*/
   || converseVar.eventKey is pf4 /* master menu*/
   || converseVar.eventKey is pa2) /* reset screen*/
    ;
    if (converseVar.eventKey is pa2) /* reset screen*/
      COMMAREA.CATOAP = "FB0H"; /* display the blank map*/
    end
    ;
    if (converseVar.eventKey is pf1) /* help*/
      COMMAREA.CAITEM = "FB0HM010"; /* for help*/
    end
    ;
    if (converseVar.eventKey is pf3) /* buy menu*/
      COMMAREA.CATOAP = "FB0F";
    end
    ;
    set FBWREC empty;
    FBXREC.SY1STNBR = FB0HM010.SY1STNBR;
    FBXREC.SY2CLRID = FB0HM010.SY2CLRID;
    FBXREC.XDMCD = FB0HM010.XDMCD;
    FBWREC.FBWFILL = FBXREC.FBXGROUP;
    FB0HS01(); /* purge temp storage*/
    XSFBS01(); /* transfer to another application*/
    FB0HW00.FB0HWRDS = "N"; /* dont request data*/
    FB0HW00.FB0HWMCS = "Y"; /* format map*/
    exit stack; /* Exit to redisplay map*/
  end
  ;
  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf7 /* scroll backward*/
   && converseVar.eventKey not pf8) /* scroll forward*/
    converseLib.validationFailed(3); /* invalid key*/
    FB0HM010.XXXMODID = "300"; /* program name*/
    ;
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
       /* reset map*/
    end
    ;
    exit stack;
  end
  ;
  if (converseVar.eventKey is pf7 /* scroll up*/
   || converseVar.eventKey is pf8) /* scroll down*/
    ;
    if (FB0HW00.FB0HWSAS == "N") /* scrolling not allowed (bad product)*/
      converseLib.validationFailed(167); /* invalid product*/
      FB0HM010.XXXMODID = "300"; /* program name*/
      exit stack;
    end
    ;
  end
  ;
  if (converseVar.eventKey is pf8 /* scroll forward*/
   && FB0HW00.XXXTSPAG >= FB0HW00.TA5TSQIX) /* already on last page*/
    FB0HM010.XXXMODID = "300"; /* process number*/
    converseLib.validationFailed(7); /* no more pages to display*/
    exit stack; /* display the map*/
  end
  ;
  if (converseVar.eventKey is pf7 /* scroll backward*/
   && FB0HW00.XXXTSPAG <= 2)      /* already on first page*/
    FB0HM010.XXXMODID = "300"; /* process number*/
    converseLib.validationFailed(6); /* no previous pages*/
    exit stack; /* display the map*/
  end
  ;
end // end FB0H300

// reset highlighted fields
Function FB0H400()
   /* ------------------------------------------------------------*/
   /* reset key fields*/
   /* ------------------------------------------------------------*/
  ;
  set FB0HM010.SY1STNBR initialAttributes; /* country code*/
  set FB0HM010.SY2CLRID initialAttributes; /* color code*/
  set FB0HM010.XDMCD initialAttributes; /* dimension code*/
  ;
   /* ------------------------------------------------------------*/
   /* reset detail line fields*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW00.FB0HWMIX = 1; /* first screen line*/
  ;
  while (FB0HW00.FB0HWMIX <= FB0HW00.FB0HWMSL) /* for each screen line*/
    set FB0HM010.FB0HMRDT[FB0HWMIX] initialAttributes;
    set FB0HM010.FB0HMQTB[FB0HWMIX] initialAttributes;
    set FB0HM010.OP1CUOID[FB0HWMIX] initialAttributes;
    set FB0HM010.FB0HMDOT[FB0HWMIX] initialAttributes;
    set FB0HM010.OP1NORID[FB0HWMIX] initialAttributes;
    set FB0HM010.OP1PARTN[FB0HWMIX] initialAttributes;
    FB0HW00.FB0HWMIX = FB0HW00.FB0HWMIX + 1; /* next line*/
  end
  ;
  ;
end // end FB0H400

// verify input data
Function FB0H500()
  FB0HW00.FB0HWDCS = "N"; /* data didnt change*/
  ;
   /* ------------------------------------------------------------*/
   /* check if key modified*/
   /* ------------------------------------------------------------*/
  ;
  if (FB0HM010.SY1STNBR != FB0HW01.SY1STNBR /* style number changed*/
   || FB0HM010.SY2CLRID != FB0HW01.SY2CLRID /* color changed*/
   || FB0HM010.XDMCD != FB0HW01.XDMCD)      /* dimension changed*/
    FB0HM010.SY1SSTNM = "            ";
    FB0HM010.SY2CLRAB = "            ";
  end
  ;
  if (FB0HM010.SY1STNBR != FB0HW01.SY1STNBR /* style number changed*/
   || FB0HM010.SY2CLRID != FB0HW01.SY2CLRID /* color changed*/
   || FB0HM010.XDMCD != FB0HW01.XDMCD)      /* dimension changed*/
    FB0HW00.FB0HWKCS = "Y"; /* key changed*/
    if (FB0HM010.SY2CLRID == "   ")
      FB0HM010.SY2CLRID = "00 ";
    end
    if (FB0HM010.XDMCD == "  ")
      FB0HM010.XDMCD = "00";
    end
  else
    FB0HW00.FB0HWKCS = "N"; /* key did not change*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* check the selection codes*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW00.FB0HWMIX = FB0HW00.FB0HWMSL; /* max poss lines per page*/
  ;
  while (FB0HW00.FB0HWMIX > 0) /* for each line on screen*/
    FB0HW00.FB0HWDT1 = FB0HM010.FB0HMRDT[FB0HWMIX]; /* mmddyy*/
    FB0HW00.FB0HWMM2 = FB0HW00.FB0HWMM1;
    FB0HW00.FB0HWDD2 = FB0HW00.FB0HWDD1;
    FB0HW00.FB0HWYY2 = FB0HW00.FB0HWYY1;
    /* --------------------- y2k out begin ------------------*/
    /* FB0HW00.FB7RTADT = 19000000 + FB0HW00.FB0HWDT2;/* YYMMDD*/
    /* --------------------- y2k out end   ------------------*/
    /* --------------------- y2k in begin  ------------------*/
    if (FB0HW00.FB0HWDT1 == 0)
      FB0HW00.FB7RTADT = 0;
    else
      if (FB0HW00.FB0HWYY2 > 60)
        FB0HW00.FB7RTADT = 19000000 + FB0HW00.FB0HWDT2; /* yymmdd*/
      else
        FB0HW00.FB7RTADT = 20000000 + FB0HW00.FB0HWDT2; /* yymmdd*/
      end
    end
    /* --------------------- y2k in end    ------------------*/

    ;
    if (FB0HW00.FB7RTADT != FB0HW02.FB7RTADT[FB0HWMIX])
      ;
      /* --------------------- y2k out begin ------------------*/
      /* IF FB0HW00.FB7RTADT EQ 19000000*/
       /* AND FB0HW02.FB7RTADT(FB0HWMIX) EQ 0;*/
      /* --------------------- y2k out end   ------------------*/
      /* --------------------- y2k in begin  ------------------*/
      if (FB0HW00.FB7RTADT == 0
       && FB0HW02.FB7RTADT[FB0HWMIX] == 0)
        /* --------------------- y2k in end    ------------------*/
         /* next sentence*/
      else
        FB0HW00.FB0HWDCS = "Y"; /* data changed*/
        FB0H510(); /* edit rta date*/
        ;
      end
      ;
    end
    ;
    FB0HW00.FB0HWMIX = FB0HW00.FB0HWMIX - 1;
  end
  ;
  if (FB0HW00.FB0HWKCS == "Y") /* key changed*/
    ;
    if (FB0HW00.FB0HWDCS == "Y") /* rta date changed*/
      FB0HM010.XXXMODID = "500"; /* process number*/
      converseLib.validationFailed(130); /* cant change key and data*/
    end
    ;
    if (FB0HM010.SY1STNBR == " ") /* style number not entered*/
      FB0HM010.XXXMODID = "500"; /* process number*/
      set FB0HM010.SY1STNBR cursor, bold; /* highlight*/
      converseLib.validationFailed(8); /* required field*/
    end
    ;
  end
  ;
  if (converseVar.validationMsgNum != 0) /* an err has been defective*/
    exit stack; /* display map*/
  end
  ;
  ;
end // end FB0H500

// edit rta date
Function FB0H510()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/
  ;
  set FB7REC empty; /* initialise record*/
  FB7REC.SY1STNBR = FB0HM010.SY1STNBR;
  FB7REC.SY2CLRID = FB0HM010.SY2CLRID;
  FB7REC.XDMCD = FB0HM010.XDMCD;
  FB7REC.FY1FCTYC = FB0HM010.FY1FCTYC[FB0HWMIX];
  FB7REC.PC2CUXID = FB0HM010.PC2CUXID[FB0HWMIX];
  FB7REC.OP1PARTN = FB0HM010.OP1PARTN[FB0HWMIX]; /* OP-ORD-PART-CHAR*/
  FB7REC.OP1CUOID = FB0HM010.OP1CUOID[FB0HWMIX]; /* OP-CUST-ORD-ID*/
  FB7REC.OP1NORID = FB0HM010.OP1NORID[FB0HWMIX]; /* OP-NIKE-ORD-ID*/
  FB0HW00.FB0HWDT1 = FB0HM010.FB0HMRDT[FB0HWMIX]; /* mmddyy*/
  FB0HW00.FB0HWMM2 = FB0HW00.FB0HWMM1;
  FB0HW00.FB0HWDD2 = FB0HW00.FB0HWDD1;
  FB0HW00.FB0HWYY2 = FB0HW00.FB0HWYY1;
   /* --------------------- y2k out begin ------------------*/
   /* FB7REC.FB7RTADT = 19000000 + FB0HW00.FB0HWDT2;/* yymmdd*/
   /* --------------------- y2k out end   ------------------*/
   /* --------------------- y2k in begin  ------------------*/
  if (FB0HW00.FB0HWYY2 > 60)
    FB7REC.FB7RTADT = 19000000 + FB0HW00.FB0HWDT2; /* yymmdd*/
  else
    FB7REC.FB7RTADT = 20000000 + FB0HW00.FB0HWDT2; /* yymmdd*/
  end
   /* --------------------- y2k in end    ------------------*/
  FB7REC.FB8BUYDT = FB9REC.FB8BUYDT;
  FB7REC.XWHCD = FB0HM010.XWHCD[FB0HWMIX];
  ;
  set TA2REC empty;
  TA2REC.TA2GRGGN = FB7REC.FB7RTADT;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
   /* ------------------------------------------------------------*/
   /* get the earliest possible rta date*/
   /* ------------------------------------------------------------*/
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* get date*/
  ;
  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA2RTNCD != "0000"             /* Date not valid*/
   || FB0HW00.FB0HWMM1 < 1           
   || FB0HW00.FB0HWMM1 > 12          
   || FB0HW00.FB0HWDD1 < 1           
   || FB0HW00.FB0HWDD1 > 31)        
    set FB0HM010.FB0HMRDT[FB0HWMIX] cursor, bold;
    FB0HM010.XXXMODID = "510";
    converseLib.validationFailed(151);
    exit stack;
  end
  ;
  if (FB7REC.FB7RTADT < FB0HW00.FB0HWFRD
   || FB7REC.FB7RTADT > FB0HW00.FB0HWLRD)
    set FB0HM010.FB0HMRDT[FB0HWMIX] cursor, bold;
    FB0HM010.XXXMODID = "510";
    converseLib.validationFailed(343);
    exit stack;
  end
  ;
   /* ------------------------------------------------------------*/
   /* select row in dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("SB", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return;
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      FB0HM010.XXXMODID = "510";
      set FB0HM010.FB0HMRDT[FB0HWMIX] cursor, bold;
      converseLib.validationFailed(323); /* duplicate rta dates*/
      exit stack;
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H510"; /* Process name*/
  TA1REC.TA1LOC = "SELECT UNIQUE           ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "510";
  exit stack;
  ;
  /* GET FB0H111*/
end // end FB0H510

// process valid request
Function FB0H600()
  if (converseVar.eventKey is pf7) /* scroll up*/
    FB0HW00.XXXTSPAG = FB0HW00.XXXTSPAG - 1; /* previous page*/
    FB0HW00.FB0HWMCS = "Y"; /* format map*/
    return;
  end
  ;
  if (converseVar.eventKey is pf8) /* scroll down*/
    FB0HW00.XXXTSPAG = FB0HW00.XXXTSPAG + 1; /* next page*/
    FB0HW00.FB0HWMCS = "Y"; /* format map*/
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* the program only gets here when enter is hit*/
   /* ------------------------------------------------------------*/
  ;
  if (FB0HW00.FB0HWKCS == "Y") /* key changed*/
    FB0HW00.FB0HWRDS = "Y"; /* request data*/
    set FB0HW01 empty;
    set FB0HW02 empty;
    return;
  end
  ;
   /* ------------------------------------------------------------*/
   /* this is now the update pass*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW00.FB0HWMIX = 1; /* first screen line*/
  ;
  while (FB0HW00.FB0HWMIX <= FB0HW00.FB0HWMSL) /* for each valid*/
    if (FB0HM010.XWHCD[FB0HWMIX] != " " /* data line*/
     || FB0HM010.PC2CUXID[FB0HWMIX] != " ")
      FB0HW00.FB0HWDT1 = FB0HM010.FB0HMRDT[FB0HWMIX]; /* mmddyy*/
      FB0HW00.FB0HWMM2 = FB0HW00.FB0HWMM1;
      FB0HW00.FB0HWDD2 = FB0HW00.FB0HWDD1;
      FB0HW00.FB0HWYY2 = FB0HW00.FB0HWYY1;
      /* --------------------- y2k out begin ------------------*/
      /* FB0HW00.FB7RTADT = 19000000 + FB0HW00.FB0HWDT2;/* yymmdd*/
      /* --------------------- y2k out end   ------------------*/
      /* --------------------- y2k in begin  ------------------*/
      if (FB0HW00.FB0HWDT1 == 0)
        FB0HW00.FB7RTADT = 0;
      else
        if (FB0HW00.FB0HWYY2 > 60)
          FB0HW00.FB7RTADT = 19000000 + FB0HW00.FB0HWDT2; /* yymmdd*/
        else
          FB0HW00.FB7RTADT = 20000000 + FB0HW00.FB0HWDT2; /* yymmdd*/
        end
      end
      /* --------------------- y2k in end    ------------------*/
      ;
      if (FB0HW00.FB7RTADT != FB0HW02.FB7RTADT[FB0HWMIX])
        FB0H605(); /* count MFBUY fctys for old rta*/
        FB0H610(); /* get old rta MFBUY*/
        FB0H620(); /* update rta on RTQTB*/
        FB0H630(); /* update rta on MFBUY*/
      end
      ;
    end
    ;
    FB0HW00.FB0HWMIX = FB0HW00.FB0HWMIX + 1; /* next line*/
  end
  ;
  FB0HW00.FB0HWRDS = "Y"; /* request data*/
  FBWREC.XXXMSGNO = 32; /* info msg update ok*/
  ;
  ;
end // end FB0H600

// Count MFBUY for old rta
Function FB0H605()
  ;
  FB0HS10(); /* select set vmfbuy01*/
  ;
  FB0HW00.FB0HW-MFBUY-COUNT = 0;
  ;
  while (SQLCA.VAGen_SQLCODE != 100) /* rows of data in table*/
    FB0HS12(); /* fetch next row*/
    ;
    if (SQLCA.VAGen_SQLCODE != 100 /* found a row*/
     && FB7REC.XDVCD != "02"       /* & not NIL*/
     && FB7REC.OP1PARTN == FB0HM010.OP1PARTN[FB0HWMIX]
     && FB7REC.OP1CUOID == FB0HM010.OP1CUOID[FB0HWMIX]
     && FB7REC.OP1NORID == FB0HM010.OP1NORID[FB0HWMIX])
      FB0HW00.FB0HW-MFBUY-COUNT = FB0HW00.FB0HW-MFBUY-COUNT + 1;
    end
    ;
  end
  ;
  FB0HS14(); /* close cursor*/
  ;
  ;
end // end FB0H605

// Get MFBUY for old rta dt
Function FB0H610()
  ;
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/
  ;
  set FB7REC empty; /* initialise record*/
  FB7REC.SY1STNBR = FB0HM010.SY1STNBR;
  FB7REC.SY2CLRID = FB0HM010.SY2CLRID;
  FB7REC.XDMCD = FB0HM010.XDMCD;
  FB7REC.FY1FCTYC = FB0HM010.FY1FCTYC[FB0HWMIX];
  FB7REC.PC2CUXID = FB0HM010.PC2CUXID[FB0HWMIX];
  FB7REC.OP1PARTN = FB0HM010.OP1PARTN[FB0HWMIX];
  FB7REC.OP1CUOID = FB0HM010.OP1CUOID[FB0HWMIX];
  FB7REC.OP1NORID = FB0HM010.OP1NORID[FB0HWMIX];
  FB7REC.FB7RTADT = FB0HW02.FB7RTADT[FB0HWMIX];
  FB7REC.FB8BUYDT = FB9REC.FB8BUYDT;
  FB7REC.XWHCD = FB0HM010.XWHCD[FB0HWMIX];
  ;
   /* ------------------------------------------------------------*/
   /* Select MFBUY row for old RTA date.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("SB", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      FB0HW00.FB0HWGIX = 1; /* first size*/
      while (FB0HW00.FB0HWGIX < 41) /* for each size*/
        FB0HW00.FB0HW-MFBUY-SZ-QTB[FB0HWGIX] = FB7REC.FB7QTB[FB0HWGIX];
        FB0HW00.FB0HWGIX = FB0HW00.FB0HWGIX + 1; /* next size*/
      end
      return; /* return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB0HM010.XXXMODID = "610";
      converseLib.validationFailed(21); /* deleted since last displayed*/
      set FB0HM010.FB0HMRDT[FB0HWMIX] cursor, bold;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end
    ;
  end
  ;
  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)
    ;
    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end
    ;
    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB0H610"; /* PROCESS NAME*/
    TA1REC.TA1LOC = "SELECT OLD RTA ROW      ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    FB0HM010.XXXMODID = "610";
    exit stack;
  end
  ;
  ;
end // end FB0H610

// Update Rta on RTQTB
Function FB0H620()
  ;
   /* ------------------------------------------------------------*/
   /* Select RTQTB row for old RTA date.*/
   /* ------------------------------------------------------------*/
  ;
  FB0H622(); /* Get old rta rtqtb*/
  ;
  if (FB0HW00.FB0HW-MFBUY-COUNT > 1)
    FB0H624(); /* Adjust old rta rtqtb*/
  else
    FB0H625(); /* Delt old rta rtqtb*/
  end
  ;
  FBFREC.FB7RTADT = FB0HW00.FB7RTADT; /* new rta dt*/
  ;
  try
    call "IO4620" ("S ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      FB0H626(); /* update new rta rtqtb*/
      return; /* return to calling process*/
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB0H628(); /* add new rta rtqtb*/
      return; /* return to calling process*/
    end
  end
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H620"; /* Process name*/
  TA1REC.TA1LOC = "SELECT NEW RTA ROW      ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "620";
  exit stack;
  ;
  ;
end // end FB0H620

// Get RTQTB for old rta dt
Function FB0H622()
  ;
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/
  ;
  set FBFREC empty; /* initialise record*/
  FBFREC.SY1STNBR = FB0HM010.SY1STNBR;
  FBFREC.SY2CLRID = FB0HM010.SY2CLRID;
  FBFREC.XDMCD = FB0HM010.XDMCD;
  FBFREC.PC2CUXID = FB0HM010.PC2CUXID[FB0HWMIX];
  FBFREC.OP1PARTN = FB0HM010.OP1PARTN[FB0HWMIX];
  FBFREC.OP1CUOID = FB0HM010.OP1CUOID[FB0HWMIX];
  FBFREC.OP1NORID = FB0HM010.OP1NORID[FB0HWMIX];
  FBFREC.FB7RTADT = FB0HW02.FB7RTADT[FB0HWMIX];
  FBFREC.FB8BUYDT = FB9REC.FB8BUYDT;
  FBFREC.XWHCD = FB0HM010.XWHCD[FB0HWMIX];
  ;
   /* ------------------------------------------------------------*/
   /* Select RTQTB row for old RTA date.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4620" ("S ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      return; /* return to previous process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)
    ;
    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end
    ;
    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB0H622"; /* PROCESS NAME*/
    TA1REC.TA1LOC = "SELECT OLD RTA ROW      ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    FB0HM010.XXXMODID = "622";
    exit stack;
  end
  ;
  ;
end // end FB0H622

// Adjust old rta RTQTB qtys
Function FB0H624()
  ;
  ;
  XX0XS01();
  FBFREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBFREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  FB0HW00.FB0HWGIX = 1; /* first size*/
  while (FB0HW00.FB0HWGIX < 41) /* for each size*/
    FBFREC.FB7QTB[FB0HWGIX] = FBFREC.FB7QTB[FB0HWGIX]     - FB0HW00.FB0HW-MFBUY-SZ-QTB[FB0HWGIX];
    FB0HW00.FB0HWGIX = FB0HW00.FB0HWGIX + 1; /* next size*/
  end
  ;
  try
    call "IO4620" ("U ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      return; /* Return to previous process*/
    end
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return code*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H624 "; /* Process name*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "624";
  ;
  exit stack;
  ;
  ;
end // end FB0H624

// Delt old rta RTQTB
Function FB0H625()
  ;
   /* ------------------------------------------------------------*/
   /* This module deletes a table row.*/
   /* It will return and document system errors if unexpected*/
   /* return codes are found.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO4620" ("D ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Delete table row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      return; /* Return to previous process*/
    end
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return code*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H625 "; /* Process name*/
  TA1REC.TA1LOC = "DELETE TABLE ROW";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "625";
  ;
  exit stack;
  ;
  ;
end // end FB0H625

// Updt new rta RTQTB qtys
Function FB0H626()
  ;
  ;
  XX0XS01();
  FBFREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBFREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  FB0HW00.FB0HWGIX = 1; /* first size*/
  while (FB0HW00.FB0HWGIX < 41) /* for each size*/
    FBFREC.FB7QTB[FB0HWGIX] = FBFREC.FB7QTB[FB0HWGIX]     + FB0HW00.FB0HW-MFBUY-SZ-QTB[FB0HWGIX];
    FB0HW00.FB0HWGIX = FB0HW00.FB0HWGIX + 1; /* next size*/
  end
  ;
  try
    call "IO4620" ("U ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      return; /* Return to previous process*/
    end
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return code*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H626 "; /* Process name*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "626";
  ;
  exit stack;
  ;
  ;
end // end FB0H626

// Add new rta RTQTB row
Function FB0H628()
  ;
  XX0XS01();
  ;
  FBFREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBFREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FBFREC.ZZZCHGCT = FBFREC.ZZZCHGCT + 1;
  ;
  FB0HW00.FB0HWGIX = 1; /* first size*/
  while (FB0HW00.FB0HWGIX < 41) /* for each size*/
    FBFREC.FB7QTB[FB0HWGIX] = FB0HW00.FB0HW-MFBUY-SZ-QTB[FB0HWGIX];
    FB0HW00.FB0HWGIX = FB0HW00.FB0HWGIX + 1; /* next size*/
  end
  ;
  try
    call "IO4620" ("A ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Row found*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(19); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Rollback if bad return*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H628"; /* Process name*/
  TA1REC.TA1LOC = "ADD QTY TO BUY ROW   ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "628";
  ;
  exit stack;
  ;
  ;
end // end FB0H628

// Update Rta on MFBUY
Function FB0H630()
  ;
   /* ------------------------------------------------------------*/
   /* Delete MFBUY row for old RTA date.*/
   /* ------------------------------------------------------------*/
  ;
  FB0H632(); /* Del old rta mfbuy*/
  ;
   /* ------------------------------------------------------------*/
   /* Select MFBUY row for new RTA date.*/
   /* ------------------------------------------------------------*/
  ;
  FB7REC.FB7RTADT = FB0HW00.FB7RTADT; /* new rta dt*/
  ;
  try
    call "IO3490" ("SB", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      FB0H634(); /* update mfbuy*/
      return; /* return to calling process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB0H636(); /* add mfbuy*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)
    ;
    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end
    ;
    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB0H630"; /* Process name*/
    TA1REC.TA1LOC = "SELECT NEW RTA ROW      ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    FB0HM010.XXXMODID = "630";
    exit stack;
  end
  ;
  ;
end // end FB0H630

// Delt MFBUY for old RTA dt
Function FB0H632()
  ;
   /* ------------------------------------------------------------*/
   /* Delete MFBUY row for old RTA date.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("D2", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      return; /* return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB0HM010.XXXMODID = "632";
      converseLib.validationFailed(21); /* deleted since last displayed*/
      set FB0HM010.FB0HMRDT[FB0HWMIX] cursor, bold;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end
    ;
  end
  ;
  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)
    ;
    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end
    ;
    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB0H632"; /* Process name*/
    TA1REC.TA1LOC = "DELETE OLD RTA ROW      ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
    ;
    FB0HM010.XXXMODID = "632";
    exit stack;
  end
  ;
  ;
end // end FB0H632

// Updt MFBUY for new rta
Function FB0H634()
  ;
  XX0XS01(); /* get date and time*/
  FB7REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FB7REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FB7REC.FB7RTADT = FB0HW00.FB7RTADT;
  ;
  FB0HW00.FB0HWGIX = 1; /* first size*/
  while (FB0HW00.FB0HWGIX < 41) /* for each size*/
    FB7REC.FB7QTB[FB0HWGIX] = FB7REC.FB7QTB[FB0HWGIX]     + FB0HW00.FB0HW-MFBUY-SZ-QTB[FB0HWGIX]; /* add sz qtys*/
    FB0HW00.FB0HWGIX = FB0HW00.FB0HWGIX + 1; /* next size*/
  end
  ;
  try
    call "IO3490" ("U2", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* updt row*/
  ;
   /* ------------------------------------------------------------*/
   /* If database in use, msg try again.  If any other, indicate*/
   /* system error.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H634"; /* Process name*/
  TA1REC.TA1LOC = "UPDT ROW FOR NEW RTA    ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "634";
  exit stack;
  ;
  ;
end // end FB0H634

// Add MFBUY for new rta
Function FB0H636()
  ;
  XX0XS01(); /* get date and time*/
  FB7REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FB7REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FB7REC.ZZZCHGCT = FB7REC.ZZZCHGCT + 1;
  FB7REC.FB7RTADT = FB0HW00.FB7RTADT;
  ;
  try
    call "IO3490" ("A ", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* add    row*/
  ;
   /* ------------------------------------------------------------*/
   /* If database in use, msg try again.  If any other, indicate*/
   /* system error.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Successful call*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end
    ;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0H636"; /* Process name*/
  TA1REC.TA1LOC = "ADD ROW FOR NEW RTA     ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "636";
  exit stack;
  ;
  ;
end // end FB0H636

// purge temp storage
Function FB0HS01()
   /* ------------------------------------------------------------*/
   /* If the last function was purge, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (TA5REC.TA5FNCCD == "P") /* Last function was purge*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/
  ;
  set FB0HW02 empty; /* m010 display storage*/
  ;
   /* MOVE 'N' TO fb0hW00.fb0hWSWU   ; Storage update switch*/
  ;
  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FB0HW00.TA5TSQIX = 0; /* Highest page number*/
  ;
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (FB0HW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  ;
  FB0HM010.XXXMODID = "S01"; /* Module identification*/
  converseLib.validationFailed(01); /* Indicate system error*/
  ;
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0HS01

// add page to temp storage
Function FB0HS02()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW02.XXXTSLEN = FB0HW00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  if (FB0HW00.TA5TSQIX == 0 /* No pages are formatted*/
   && TA5REC.TA5FNCCD == "P") /* and last function purge*/
    TA5REC.TA5FNCCD = "N"; /* Function code*/
  else
    TA5REC.TA5FNCCD = "A"; /* Function code*/
  end
  ;
  try
    call "TA0050" (FB0HW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    set FB0HW02 empty; /* map display storage*/
    FB0HW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    FB0HW00.FB0HWIXM = 0; /* Display line number*/
    return; /* Return to previous process*/
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  FB0HM010.XXXMODID = "S02"; /* Module identification*/
  converseLib.validationFailed(01); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0HS02

// reset screen
Function FB0HS04()
  FB0HW00.SY1STNBR = FB0HM010.SY1STNBR;
  FB0HW00.SY2CLRID = FB0HM010.SY2CLRID;
  FB0HW00.XDMCD = FB0HM010.XDMCD;
  FB0HW00.SY1SSTNM = FB0HM010.SY1SSTNM;
  FB0HW00.SY2CLRAB = FB0HM010.SY2CLRAB;
  FB0HW00.FB0HW-BUY-MO = FB0HM010.FB0HM-BUY-MO;
  set FB0HM010 initial;
  FB0HM010.SY1STNBR = FB0HW00.SY1STNBR;
  FB0HM010.SY2CLRID = FB0HW00.SY2CLRID;
  FB0HM010.XDMCD = FB0HW00.XDMCD;
  FB0HM010.SY1SSTNM = FB0HW00.SY1SSTNM;
  FB0HM010.SY2CLRAB = FB0HW00.SY2CLRAB;
  FB0HM010.FB0HM-BUY-MO = FB0HW00.FB0HW-BUY-MO;
end // end FB0HS04

// obtain temp storage page
Function FB0HS05()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/
  ;
  FB0HW02.XXXTSLEN = FB0HW00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FB0HW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (FB0HW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  FB0HM010.XXXMODID = "S05"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0HS05

// Select set from MFBUY
Function FB0HS10()
   /* ------------------------------------------------------------*/
   /* set the key, select a set of rows from dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  set FB7REC empty; /* initialise record*/
  FB7REC.SY2CLRID = FB0HM010.SY2CLRID; /* color code*/
  FB7REC.XDMCD = FB0HM010.XDMCD; /* dimension code*/
  FB7REC.SY1STNBR = FB0HM010.SY1STNBR; /* style number*/
  FB7REC.FB8BUYDT = FB9REC.FB8BUYDT; /* buy date*/
  FB7REC.XWHCD = FB0HM010.XWHCD[FB0HWMIX]; /* warehouse*/
  FB7REC.PC2CUXID = FB0HM010.PC2CUXID[FB0HWMIX]; /* cust xref*/
  FB7REC.FB7RTADT = FB0HW02.FB7RTADT[FB0HWMIX]; /* rta date*/
  ;
   /* ------------------------------------------------------------*/
   /* Declare cursor for dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("S1", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0HS10"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "S10";
  exit stack;
  ;
  ;
end // end FB0HS10

// Fetch MFBUY row
Function FB0HS12()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("N1", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000") /* Call successful*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  ;
  FB0HM010.XXXMODID = "S12"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB0HW00.FB0HWMCS = "N"; /* dont format map*/
    ;
  else
    ;
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
    converseLib.clearScreen();
     /* Clear screen before display*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB0HM010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB7REC.FB7GROUP; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB0HW00.FB0HWRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/
  ;
  ;
end // end FB0HS12

// Close MFBUY cursor
Function FB0HS14()
  ;
   /* ------------------------------------------------------------*/
   /* close cursor for dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/
  ;
  try
    call "IO3490" ("C1", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end
  ;
  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB0HS14"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE CURSOR            ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  FB0HM010.XXXMODID = "S14";
  exit stack;
  ;
  ;
end // end FB0HS14

//*** RECORD=FB0HW00 ****
// Miscellaneous working storage.
// ***********************
Record FB0HW00 type basicRecord
  10 FB0HWRDS FB0HWRDS ; 
  10 FB0HWMCS FB0HWMCS ; 
  10 FB0HWKCS FB0HWKCS ; 
  10 FB0HWDCS FB0HWDCS ; 
  10 FB0HWFFS FB0HWFFS ; 
  10 FB0HWSAS FB0HWSAS ; 
  10 FB0HWMSL FB0HWMSL ; 
  10 FB0HWIXM FB0HWIXM ; 
  10 FB0HWGIX FB0HWGIX ; 
  10 FB0HWMIX FB0HWMIX ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 FB7RTADT FB7RTADT ; 
  10 FB0HWFRD FB0HWFRD ; 
  10 FB0HWLRD FB0HWLRD ; 
  10 FB0HWBDT FB0HWBDT ; 
    15 FB0HWBCC FB0HWBCC ; 
    15 FB0HW-BUY-MO FB0HW-BUY-MO ; 
    15 FB0HWBDD FB0HWBDD ; 
  10 FB0HWDT1 FB0HWDT1 ; 
    15 FB0HWMM1 FB0HWMM1 ; 
    15 FB0HWDD1 FB0HWDD1 ; 
    15 FB0HWYY1 FB0HWYY1 ; 
  10 FB0HWDT2 FB0HWDT2 ; 
    15 FB0HWYY2 FB0HWYY2 ; 
    15 FB0HWMM2 FB0HWMM2 ; 
    15 FB0HWDD2 FB0HWDD2 ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 FB0HWWK FB0HWWK ; 
  10 FB0HW-MFBUY-SZ-QTB FB0HW-MFBUY-SZ-QTB [40] ; 
  10 FB0HW-MFBUY-COUNT FB0HW-MFBUY-COUNT ; 
end // end FB0HW00

//*** RECORD=FB0HW01 ****
// FB0H display working storage for map heading info
// ***********************
Record FB0HW01 type basicRecord
  10 CAUSERID CAUSERID ; 
  10 FB0HW-BUY-MO FB0HW-BUY-MO ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
end // end FB0HW01

//*** RECORD=FB0HW02 ****
// Display working storage for temp storage in FB0H
// ***********************
Record FB0HW02 type basicRecord
  3 XXXTSLEN XXXTSLEN ; 
  3 * char(435) ; 
    5 FB0HWGRP FB0HWGRP [15] ; 
      10 XWHCD XWHCD ; 
      10 FB7RTADT FB7RTADT ; 
      10 PC2CUXID PC2CUXID ; 
      10 OP1PARTN OP1PARTN ; 
      10 OP1CUOID OP1CUOID ; 
      10 OP1NORID OP1NORID ; 
      10 FB0HMQTB FB0HMQTB ; 
      10 FY1FCTYC FY1FCTYC ; 
end // end FB0HW02

// buy date century
DataItem FB0HW-BUY-MO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end
// nil quantity bought
DataItem FB0HMQTB num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// MFBUY counter
DataItem FB0HW-MFBUY-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MFBUY size qty to buy
DataItem FB0HW-MFBUY-SZ-QTB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date century
DataItem FB0HWBCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date day
DataItem FB0HWBDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date ccyymmdd format
DataItem FB0HWBDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// data changed switch
DataItem FB0HWDCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work day 1
DataItem FB0HWDD1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work day 2
DataItem FB0HWDD2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date mmddyy
DataItem FB0HWDT1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date yymmdd
DataItem FB0HWDT2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first fetch switch
DataItem FB0HWFFS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// earliest possible rta date
DataItem FB0HWFRD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// size bucket index
DataItem FB0HWGIX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB0HWGRP char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tsq map index
DataItem FB0HWIXM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// key changed switch
DataItem FB0HWKCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// latest possible rta date
DataItem FB0HWLRD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format map switch
DataItem FB0HWMCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map line index
DataItem FB0HWMIX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work month 1
DataItem FB0HWMM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work month 2
DataItem FB0HWMM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum screen lines
DataItem FB0HWMSL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// request data switch
DataItem FB0HWRDS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll allowed switch
DataItem FB0HWSAS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// misc work area
DataItem FB0HWWK int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year1
DataItem FB0HWYY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year 2
DataItem FB0HWYY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

