package fb05;

import corpcom1.CAUSERID;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFB001;
import corpcom4.XSFBS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import corpx1.XCTCD;
import corpx1.XDMCD;
import corpx2.XWHCD;
import fb.common.FB7REC;
import fb.common.FB7RTADT;
import fb.common.FB9REC;
import fb.common.FBFREC;
import fb.common.FBMREC;
import fb.common.FBWREC;
import fb.common.FBXREC;
import fb.common.FBZREC;
import ff.common.FF00ENU;
import fy.common.FY1FCTYC;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import pc.common.PC2CUXID;
import pc.common.PC2REC;
import pg.common.PG1REC;
import pg.common.PG2REC;
import sy.common.SY1SSTNM;
import sy.common.SY1STNBR;
import sy.common.SY2CLRAB;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
//*** PROGRAM=FB05 ****
// maintenance history
// ----------------------------------------------------------
// FB-257  03/03/92 pmainw  Support multiple S.O. for an xref
//         10/25/94 jjudki  Bug. RTA date allows too many days
//                          for a month.
//         12/03/93 pmainw  Handle twenty product lines on
//                          vfsctl01.
//         01-05-95 LREIN   Add whse code processing for the
//                          European Centralised Forecasting
//                          project
//         02-09-95 LREIN   Darken S.O. when cust ord id and
//                          Nike ord id are 0.
//         02-09-95 JALLE1  Remove tolerance split edit on
//                          whse orders.
//         03-03-95 LREIN   Temp add no hit for euro countries
//         04-10-95 JALLE1  Remove logic to determine euro recs
//                          from vsumcd01 values.
//                          Use dprodc.vprdcu01 instead.
// FB-341  11-10-95 PMAINW  IMPROVE THE EDIT FOR DUPLICATES.
// fb-873  05-08-97 CCAINT  product description from VSYCLR01
// FB1547  08-28-98 SSANKA  UPDATION OF RTA DATE FIX.
// YR2000  12-03-97 rgilli  Y2K MODIFICATIONS MADE TO:
//                          FB05M010: Remove zero supression
//                          FB05W00:  Add items fb05wbyy &
//                                    fb05wbmm.
//                          FB05131:  Add Century windowing
//                          FB05500:  Add Century windowing
//                          FB05510:  Add Century windowing
//                          FB05600:  Add Century windowing
//                          FB05630:  Add Century windowing
// *********************
Program FB05 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FB05W00 FB05W00; // record
  FB05W01 FB05W01; // record
  FB05W02 FB05W02; // record
  FB05W03 FB05W03; // record
  FB05W04 FB05W04; // record
  FB7REC FB7REC; // record
  FB9REC FB9REC; // record
  FBFREC FBFREC; // record
  FBMREC FBMREC; // record
  FBWREC FBWREC; // record
  FBXREC FBXREC; // record
  FBZREC FBZREC; // record
  PC2REC PC2REC; // record
  PG1REC PG1REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FB05M.FB05M010 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFB001: XPFB001();

    FBXREC.FBXGROUP = FBWREC.FBWFILL;

     /* ------------------------------------------------------------*/
      /* initialise working storage and map areas*/
     /* ------------------------------------------------------------*/

    set FB05W00 empty; /* working storage*/
    set FB05W01 empty; /* screen display working storage*/
    set FB05W02 empty; /* screen display tsq area*/
    set FB05W03 empty; /* 'from' record area*/
    set FB05W04 empty; /* 'to' record  area*/
    set FB05M010 initial; /* map area*/
    FB05W00.FB05WRDS = "N"; /* dont request data*/
    FB05W00.FB05WMCS = "N"; /* dont format map*/
    FB05W00.FB05WSAS = "N"; /* scrolling not allowed yet*/
    FB05W00.FB05WMSL = 15; /* maximum possible screen lines*/
    FB05W00.XXXTSLEN = 499; /* temp storage queue length*/

     /* ------------------------------------------------------------*/
      /* see if key data is in commarea*/
     /* ------------------------------------------------------------*/

    if (FBXREC.CAUSERID != " ") /* userid has been changed*/
      FB05M010.CAUSERID = FBXREC.CAUSERID;
      FB05W00.FB05WRDS = "Y"; /* request data*/
    else
      FB05M010.CAUSERID = COMMAREA.CAUSERID;
    end

    if (FBXREC.SY1STNBR != " ") /* style number entered*/
      FB05M010.SY1STNBR = FBXREC.SY1STNBR;
      FB05W00.FB05WRDS = "Y"; /* request data*/
      if (FBXREC.SY2CLRID == " ") /* COLOR*/
        FB05M010.SY2CLRID = "00";
      else
        FB05M010.SY2CLRID = FBXREC.SY2CLRID;
      end
      if (FBXREC.XDMCD == " ") /* DIMENSION*/
        FB05M010.XDMCD = "00";
      else
        FB05M010.XDMCD = FBXREC.XDMCD;
      end
    end

    FB05001: FB05001();
    goto FB05001;
  end // end main
end // end FB05

// nil rta maint by style
Function FB05001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) obtain data to display.*/
   /* 2) display appropriate map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FB05100(); /* obtain data to display*/

  FB05200(); /* format and display map*/

  FB05300(); /* Check attention identifier*/

  FB05400(); /* Reset fields to normal intensity*/

  FB05500(); /* Verify the entered data*/

  FB05600(); /* Process valid input request*/


end // end FB05001

// obtain data to display
Function FB05100()
  if (converseVar.validationMsgNum == 0)

    if (FB05M010.FB05MBMO != 0) /* buy date present on screen*/
      FB05W01.FB05MBMO = FB05M010.FB05MBMO;
    else
      FB05110(); /* get buy date*/
      FB05W00.FB05WBDT = FB9REC.FB8BUYDT; /* buy date ccyymmdd*/
      FB05W01.FB05MBMO = FB05W00.FB05MBMO; /* buy date yymm*/
      FB05M010.FB05MBMO = FB05W00.FB05MBMO; /* map buy date*/
    end

  end

  if (FB05W00.FB05WRDS != "Y" /* data has not been requested*/
   || converseVar.validationMsgNum != 0)
    return; /* return to calling process*/
  end

  FB05S01(); /* purge temp storage*/
  FB05W00.FB05WSAS = "N"; /* scroll allowed switch*/
  FB05W00.FB05WRDS = "N"; /* dont request data*/

   /* PERFORM FB05120                ; get scheduler code*/
  FB05140(); /* get all countries code(nil)*/
  FB05145(); /* get all countries code(eur)*/
  FB05130(); /* process product lines*/

  FB05W00.FB05WMCS = "Y"; /* format map*/
  FB05W00.FB05WSAS = "Y"; /* scroll allowed switch*/

  if (FB05W00.FB05WIXM > 0) /* partial page has been formatted*/
    FB05S02(); /* add page to temp storage*/
  end

  FB05150(); /* get product description*/

   /* ------------------------------------------------------------*/
   /* save key data in display working storage*/
   /* ------------------------------------------------------------*/

  FB05W01.CAUSERID = FB05M010.CAUSERID; /* user id*/
  FB05W01.SY1STNBR = FB05M010.SY1STNBR; /* style number*/
  FB05W01.SY2CLRID = FB05M010.SY2CLRID; /* color code*/
  FB05W01.XDMCD = FB05M010.XDMCD; /* dimension code*/
  FB05W01.FB05MBMO = FB05M010.FB05MBMO; /* buy date*/
  FB05W01.SY2CLRAB = PG2REC.SY2CLRAB; /* color abbreviation*/
  FB05W01.SY1SSTNM = PG2REC.SY1SSTNM; /* style short name*/

  if (converseVar.validationMsgNum == 0)
    FB05W00.XXXTSPAG = 1; /* desired page number*/
  end
end // end FB05100

// get buy date
Function FB05110()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  set FB9REC empty;
  try
    call "IO3650" ("S ", SQLCA, FB9REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB9REC.FB9BTQTY = 2 * FB9REC.FB9BTQTY; /* double buy tolerance*/
      FB05111(); /* get first possible rta date*/
      FB05112(); /* get last possible rta date*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FB05M010.XXXMODID = "110"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFMCTL01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end FB05110

// get first possible rta date
Function FB05111()
  set TA2REC empty;
  TA2REC.TA2GRGGN = FB9REC.FB8BUYDT;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2DYAOD = -90;
  TA2REC.TA2GRTYP = "G";

   /* ------------------------------------------------------------*/
   /* get the earliest possible rta date*/
   /* ------------------------------------------------------------*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* get date*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (TA2REC.TA2RTNCD == 0) /* Normal return code*/
      FB05W00.FB05WFRD = TA2REC.TA2GRGGN; /* first poss rta dt*/
      return; /* Return to previous process*/
    else

      if (TA2REC.TA2RTNCD < 888)
        converseLib.validationFailed(17); /* invalid date*/
        FB05M010.XXXMODID = "111";
        set FB05M010.FB05MBMO cursor, bold;
        return; /* Return to previous process*/
      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/

  FB05M010.XXXMODID = "111"; /* Module identification*/

  converseLib.validationFailed(01); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  converseLib.clearScreen();
   /* Clear screen before display*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "GET DATE            ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end FB05111

// get last possible rta date
Function FB05112()
  set TA2REC empty;
  TA2REC.TA2GRGGN = FB9REC.FB8BUYDT;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2DYAOD = 90;
  TA2REC.TA2GRTYP = "G";

   /* ------------------------------------------------------------*/
   /* get the earliest possible rta date*/
   /* ------------------------------------------------------------*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* get date*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (TA2REC.TA2RTNCD == 0) /* Normal return code*/
      FB05W00.FB05WLRD = TA2REC.TA2GRGGN; /* last  poss rta dt*/
      return; /* Return to previous process*/
    else

      if (TA2REC.TA2RTNCD < 888)
        converseLib.validationFailed(17); /* invalid date*/
        FB05M010.XXXMODID = "112";
        set FB05M010.FB05MBMO cursor, bold;
      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/

  FB05M010.XXXMODID = "112"; /* Module identification*/

  converseLib.validationFailed(01); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  converseLib.clearScreen();
   /* Clear screen before display*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "GET DATE            ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end FB05112

// process product lines
Function FB05130()
  FB05131(); /* select set vmfbuy01*/
  FB05W00.FB05WFFS = "Y"; /* first fetch*/

  while (SQLCA.VAGen_SQLCODE != 100) /* rows of data in table*/
    FB05132(); /* fetch next row*/

    if (SQLCA.VAGen_SQLCODE != 100) /* found a row*/
      FB05133(); /* save in display working storage*/
    end

  end

  FB05134(); /* close cursor*/
end // end FB05130

// select set from DFBUY.VMFBUY01
Function FB05131()
   /* ------------------------------------------------------------*/
   /* set the key, select a set of rows from dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/

  set FB7REC empty; /* initialise record*/
   /* MOVE PG1REC.PG1SC4CD TO FB7REC.PG1SC4CD;  scheduler code*/
  FB7REC.XDVCD = "02"; /* nil division code*/
  FB7REC.SY2CLRID = FB05M010.SY2CLRID; /* color code*/
  FB7REC.XDMCD = FB05M010.XDMCD; /* dimension code*/
  FB7REC.SY1STNBR = FB05M010.SY1STNBR; /* style number*/
  FB7REC.XCTCD = "*"; /* country code*/
  FB05W00.FB05MBMO = FB05W01.FB05MBMO; /* buy month*/
   /* ------------------------- y2k out begin ---------------------*/
   /* MOVE 19 TO FB05W00.FB05WBCC;*/
   /* ------------------------- y2k out end  ---------------------*/
   /* ------------------------- y2k in begin ---------------------*/
  if (FB05W00.FB05WBYY > 60) /* Century windowing*/
    FB05W00.FB05WBCC = 19;
  else
    FB05W00.FB05WBCC = 20;
  end
   /* ------------------------- y2k in end   ---------------------*/

  FB05W00.FB05WBDD = 01;
  FB7REC.FB8BUYDT = FB05W00.FB05WBDT; /* buy date*/

   /* ------------------------------------------------------------*/
   /* Declare cursor for dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("S3", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05131"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SET              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "131";
  exit stack;

end // end FB05131

// fetch row from DFBUY.VMFBUY01
Function FB05132()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("N3", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB05W00.FB05WFFS = "N"; /* not first fetch any more*/
      return; /* Return to previous process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/

      if (FB05W00.FB05WFFS == "Y") /* first fetch*/
        FB05S04(); /* reset screen*/
        FB05M010.XXXMODID = "132";
        converseLib.validationFailed(18); /* no data to display*/
        set FB05M010.SY1STNBR cursor, bold;
        set FB05M010.FB05MBMO bold;
        set FB05M010.SY2CLRID bold;
        set FB05M010.XDMCD bold;
        exit stack; /* display map*/
      end

      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FB05M010.XXXMODID = "132"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    FB05W00.FB05WMCS = "N"; /* dont format map*/

  else

    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT ROW     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/
  TA1REC.TA1TBLKE = FB7REC.FB7GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  FB05W00.FB05WRDS = "N"; /* dont request data*/
  exit stack; /* Exit to display map*/


end // end FB05132

// save in display wking storage
Function FB05133()
   /* --------------------------------------------------------*/
   /* Add page to temp storage if all lines on page have been*/
   /* filled.*/
   /* ---------------------------------------------------------*/

  if (FB05W00.FB05WIXM == FB05W00.FB05WMSL) /* temp storage max*/
    FB05S02(); /* Add page to temp storage*/
  end

  FB05W00.FB05WIXM = FB05W00.FB05WIXM + 1; /* temp storage line count*/


  FB05W01.FB05MACF = FB05W00.FB05MACF;
  FB05W01.FB05MACF-EUR = FB05W00.FB05MACF-EUR;
  FB05W02.XCTCD[FB05WIXM] = FB7REC.XCTCD;
  FB05W02.FB7RTADT[FB05WIXM] = FB7REC.FB7RTADT;
  FB05W02.PC2CUXID[FB05WIXM] = FB7REC.PC2CUXID;
  FB05W02.OP1PARTN[FB05WIXM] = FB7REC.OP1PARTN; /* OP-ORD-PART-CHAR*/
  FB05W02.OP1CUOID[FB05WIXM] = FB7REC.OP1CUOID; /* OP-CUST-ORD-ID*/
  FB05W02.OP1NORID[FB05WIXM] = FB7REC.OP1NORID; /* OP-NIKE-ORD-ID*/
  FB05W02.FY1FCTYC[FB05WIXM] = FB7REC.FY1FCTYC;
  FB05W02.XWHCD[FB05WIXM] = FB7REC.XWHCD;
  FB05W00.FB05WWK = 0; /* initialise accumulator*/
  FB05W00.FB05WGIX = 1; /* first size*/

  while (FB05W00.FB05WGIX < 41) /* for each size*/
    FB05W00.FB05WWK = FB05W00.FB05WWK + FB7REC.FB7QTB[FB05WGIX];
    FB05W00.FB05WGIX = FB05W00.FB05WGIX + 1; /* next size*/
  end

  FB05W02.FB05MQTB[FB05WIXM] = FB05W00.FB05WWK;

end // end FB05133

// close cursor DFBUY.VMFBUY01
Function FB05134()

   /* ------------------------------------------------------------*/
   /* close cursor for dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("C3", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    return;
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05134"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE CURSOR            ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "134";
  exit stack;

end // end FB05134

// get NIL '99' DFBUY.VFSCTL01
Function FB05140()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set FBMREC empty; /* clear the booger*/
  set FBZREC empty; /* clear the other booger*/
  FBMREC.PG1SC4CD = 99; /* NIL master scheduler code*/
  FBZREC.FBZFUNC = "S "; /* call function*/
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" (FBZREC, SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB05W00.FB05MACF = FBMREC.FBMALAFL;
      FB05W00.FB05W-FBMGROUP = FBMREC.FBMGROUP;
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FB05M010.XXXMODID = "140"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG1REC.PG1SC4CD; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end FB05140

// get EUR '98' DFBUY.VFSCTL01
Function FB05145()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set FBMREC empty; /* clear the booger*/
  set FBZREC empty; /* clear the other booger*/
  FBMREC.PG1SC4CD = 98; /* NIL master scheduler code*/
  FBZREC.FBZFUNC = "S "; /* call function*/
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" (FBZREC, SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      FB05W00.FB05MACF-EUR = FBMREC.FBMALAFL;
      FB05W00.FB05W-FBMGROUP-EUR = FBMREC.FBMGROUP;
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FB05M010.XXXMODID = "145"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG1REC.PG1SC4CD; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end FB05145

// get product description
Function FB05150()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set PG2REC empty;
  PG2REC.XGPCD = "02";
  PG2REC.SY1STNBR = FB7REC.SY1STNBR;
  PG2REC.SY2CLRID = FB7REC.SY2CLRID;
  PG2REC.XDMCD = FB7REC.XDMCD;

   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* If not found, move all * to the fields*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      PG2REC.SY1SSTNM = "************";
      PG2REC.SY2CLRAB = "************";
      FB05M010.SY1SSTNM = "************";
      FB05M010.SY2CLRAB = "************";
      FB05W00.SY1SSTNM = "************";
      FB05W00.SY2CLRAB = "************";
      SQLCA.VAGen_SQLCODE = 0; /* reset return code*/
      return; /* display the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FB05M010.XXXMODID = "150"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE       ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  exit stack; /* Exit to display map*/


end // end FB05150

// format and display map
Function FB05200()
   /* ------------------------------------------------------------*/
   /* format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  FB05M010.XXXCURDT = VGVar.currentShortGregorianDate;

  if (converseVar.validationMsgNum != 0) /* a real error, not just info*/
    FBWREC.XXXMSGNO = converseVar.validationMsgNum; /* move it to working storage*/
  end

  if (FB05W00.FB05WMCS == "Y") /* map needs to be formatted*/
    FB05210(); /* format the map*/
  end

  if (FBWREC.XXXMSGNO != 0)
                                   /* error or informational message*/

    if (FBWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FBWREC.XXXMSGNO);
    end /* move to map*/
    set FB05M010 alarm; /* indicate sound alarm*/

  end

  FB05W00.FB05WMIX = FB05W00.FB05WMSL;

  while (FB05W00.FB05WMIX > 0)
    if (FB05M010.XCTCD[FB05WMIX] == " ")
      set FB05M010.FB05MSCD[FB05WMIX] skip, invisible;
      set FB05M010.XCTCD[FB05WMIX] skip, invisible;
      set FB05M010.FB05MRDT[FB05WMIX] skip, invisible;
      set FB05M010.PC2CUXID[FB05WMIX] skip, invisible;
      set FB05M010.OP1CUOID[FB05WMIX] skip, invisible;
      set FB05M010.FB05MDOT[FB05WMIX] skip, invisible;
      set FB05M010.OP1NORID[FB05WMIX] skip, invisible;
      set FB05M010.FB05MQTB[FB05WMIX] skip, invisible;
      set FB05M010.FY1FCTYC[FB05WMIX] skip, invisible;
    else
      if (FB05M010.OP1CUOID[FB05WMIX] == 0
       && FB05M010.OP1NORID[FB05WMIX] == 0)
        set FB05M010.OP1CUOID[FB05WMIX] skip, invisible;
        set FB05M010.FB05MDOT[FB05WMIX] skip, invisible;
        set FB05M010.OP1NORID[FB05WMIX] skip, invisible;
      end
    end
    FB05W00.FB05WMIX = FB05W00.FB05WMIX - 1;
  end

  converse FB05M010 ;
   /* ----------------------------------------------------------*/
   /* clear the message fields and save fast path information*/
   /* ----------------------------------------------------------*/

  FBWREC.XXXMSGNO = 0; /* clear message number*/
  COMMAREA.CATOAP = FB05M010.CATOAP; /* xfer to application*/
  COMMAREA.CAITEM = FB05M010.CAITEM; /* xfer to appl date*/
end // end FB05200

// format map
Function FB05210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FB05M010 initial; /* Map input/output area*/
  FB05M010.XXXCURDT = VGVar.currentShortGregorianDate; /* current date*/
  FB05W00.FB05WMCS = "N"; /* reset format map switch*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (FB05W00.TA5TSQIX > 0) /* Pages were formatted*/

    if (FB05W00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

      /* ------------------------------------------------------------*/
       /* If the desired page number is greater than the highest page*/
       /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (FB05W00.XXXTSPAG > FB05W00.TA5TSQIX) /* Desired greater highest*/
        FB05W00.XXXTSPAG = FB05W00.TA5TSQIX; /* Default to highest*/
      end

      FB05S05(); /* Obtain temporary storage page*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the header data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  FB05M010.CAUSERID = FB05W01.CAUSERID;
  FB05M010.FB05MBMO = FB05W01.FB05MBMO;
  FB05M010.SY1STNBR = FB05W01.SY1STNBR;
  FB05M010.SY2CLRID = FB05W01.SY2CLRID;
  FB05M010.XDMCD = FB05W01.XDMCD;
  FB05M010.SY2CLRAB = FB05W01.SY2CLRAB;
  FB05M010.SY1SSTNM = FB05W01.SY1SSTNM;
  FB05M010.FB05MACF = FB05W01.FB05MACF;
  FB05M010.FB05MACF-EUR = FB05W01.FB05MACF-EUR;

   /* ------------------------------------------------------------*/
   /* Format the detail lines in the map from temp storage.*/
   /* ------------------------------------------------------------*/

  FB05W00.FB05WMIX = 1; /* first screen line*/

  while (FB05W00.FB05WMIX <= FB05W00.FB05WMSL
   && FB05W02.XCTCD[FB05WMIX] != " ")
    FB05W00.FB05WDT2 = FB05W02.FB7RTADT[FB05WMIX]; /* yymmdd*/
    FB05W00.FB05WYY1 = FB05W00.FB05WYY2;
    FB05W00.FB05WMM1 = FB05W00.FB05WMM2;
    FB05W00.FB05WDD1 = FB05W00.FB05WDD2;
    FB05M010.FB05MRDT[FB05WMIX] = FB05W00.FB05WDT1; /* mmddyy*/
    FB05M010.XCTCD[FB05WMIX] = FB05W02.XCTCD[FB05WMIX];
    FB05M010.PC2CUXID[FB05WMIX] = FB05W02.PC2CUXID[FB05WMIX];
    FB05M010.OP1PARTN[FB05WMIX] = FB05W02.OP1PARTN[FB05WMIX];
    FB05M010.OP1CUOID[FB05WMIX] = FB05W02.OP1CUOID[FB05WMIX];
    FB05M010.OP1NORID[FB05WMIX] = FB05W02.OP1NORID[FB05WMIX];
    FB05M010.FB05MQTB[FB05WMIX] = FB05W02.FB05MQTB[FB05WMIX];
    FB05M010.FY1FCTYC[FB05WMIX] = FB05W02.FY1FCTYC[FB05WMIX];

    FB05W00.FB05WMIX = FB05W00.FB05WMIX + 1;
  end

  set FB05M010.FB05MSCD[1] cursor;
end // end FB05210

// validate attn identifier
Function FB05300()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (FB05M010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      set FBWREC empty;
      FBXREC.CAUSERID = FB05M010.CAUSERID;
      FBXREC.SY1STNBR = FB05M010.SY1STNBR;
      FBXREC.SY2CLRID = FB05M010.SY2CLRID;
      FBXREC.XDMCD = FB05M010.XDMCD;
      FBWREC.FBWFILL = FBXREC.FBXGROUP;
      FB05S01(); /* purge temp storage*/
      XSFBS01(); /* Exit to another application*/
      FB05M010.XXXMODID = "300"; /* Process name*/
      set FB05M010.CATOAP cursor, bold; /* Highlight (in case bad xfer)*/
    else
      converseLib.validationFailed(36); /* Indicate only enter with fastpath*/
      FB05M010.XXXMODID = "300"; /* Process name*/
    end

    FB05W00.FB05WRDS = "Y"; /* request data*/
    FB05W00.FB05WMCS = "Y"; /* format map*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* help*/
   || converseVar.eventKey is pf3 /* buy menu*/
   || converseVar.eventKey is pf4 /* master menu*/
   || converseVar.eventKey is pa2) /* reset screen*/

    if (converseVar.eventKey is pa2) /* reset screen*/
      COMMAREA.CATOAP = "FB05"; /* display the blank map*/
    end

    if (converseVar.eventKey is pf1) /* help*/
      COMMAREA.CAITEM = "FB05M010"; /* for help*/
    end

    if (converseVar.eventKey is pf3) /* buy menu*/
      COMMAREA.CATOAP = "FB0F";
    end

    set FBWREC empty;
    FBXREC.CAUSERID = FB05M010.CAUSERID;
    FBXREC.SY1STNBR = FB05M010.SY1STNBR;
    FBXREC.SY2CLRID = FB05M010.SY2CLRID;
    FBXREC.XDMCD = FB05M010.XDMCD;
    FBWREC.FBWFILL = FBXREC.FBXGROUP;
    FB05S01(); /* purge temp storage*/
    XSFBS01(); /* transfer to another application*/
    FB05W00.FB05WRDS = "N"; /* dont request data*/
    FB05W00.FB05WMCS = "Y"; /* format map*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf7 /* scroll backward*/
   && converseVar.eventKey not pf8 /* scroll forward*/
   && converseVar.eventKey not pf14) /* size qty moves*/
    converseLib.validationFailed(3); /* invalid key*/
    FB05M010.XXXMODID = "300"; /* program name*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
       /* reset map*/
    end

    exit stack;
  end

  if (converseVar.eventKey is pf7 /* scroll up*/
   || converseVar.eventKey is pf8) /* scroll down*/

    if (FB05W00.FB05WSAS == "N") /* scrolling not allowed (bad product)*/
      converseLib.validationFailed(167); /* invalid product*/
      FB05M010.XXXMODID = "300"; /* program name*/
      exit stack;
    end

  end

  if (converseVar.eventKey is pf8 /* scroll forward*/
   && FB05W00.XXXTSPAG >= FB05W00.TA5TSQIX) /* already on last page*/
    FB05M010.XXXMODID = "300"; /* process number*/
    converseLib.validationFailed(7); /* no more pages to display*/
    exit stack; /* display the map*/
  end

  if (converseVar.eventKey is pf7 /* scroll backward*/
   && FB05W00.XXXTSPAG <= 2)      /* already on first page*/
    FB05M010.XXXMODID = "300"; /* process number*/
    converseLib.validationFailed(6); /* no previous pages*/
    exit stack; /* display the map*/
  end

end // end FB05300

// reset highlighted fields
Function FB05400()
   /* ------------------------------------------------------------*/
   /* reset key fields*/
   /* ------------------------------------------------------------*/

  set FB05M010.CAUSERID initialAttributes; /* user code*/
  set FB05M010.FB05MBMO initialAttributes; /* buy month*/
  set FB05M010.SY1STNBR initialAttributes; /* country code*/
  set FB05M010.SY2CLRID initialAttributes; /* color code*/
  set FB05M010.XDMCD initialAttributes; /* dimension code*/
  set FB05M010.FB05MACF initialAttributes; /* all countries flag*/
  set FB05M010.FB05MACF-EUR initialAttributes; /* all countries flag*/

   /* ------------------------------------------------------------*/
   /* reset detail line fields*/
   /* ------------------------------------------------------------*/

  FB05W00.FB05WMIX = 1; /* first screen line*/

  while (FB05W00.FB05WMIX <= FB05W00.FB05WMSL) /* for each screen line*/
    set FB05M010.FB05MSCD[FB05WMIX] initialAttributes; /* select code*/
    set FB05M010.FB05MRDT[FB05WMIX] initialAttributes; /* rta date*/
    set FB05M010.FB05MQTB[FB05WMIX] initialAttributes; /* rta date*/
    set FB05M010.OP1CUOID[FB05WMIX] initialAttributes; /* cust ord id*/
    set FB05M010.OP1NORID[FB05WMIX] initialAttributes; /* nike ord id*/
    set FB05M010.OP1PARTN[FB05WMIX] initialAttributes; /* order patr char*/
    set FB05M010.FB05MDOT[FB05WMIX] initialAttributes; /* dot*/
    FB05W00.FB05WMIX = FB05W00.FB05WMIX + 1; /* next line*/
  end


end // end FB05400

// verify input data
Function FB05500()
  FB05W00.FB05WDCS = "N"; /* data didnt change*/

   /* ------------------------------------------------------------*/
   /* check if key modified*/
   /* ------------------------------------------------------------*/

  if (FB05M010.SY1STNBR != FB05W01.SY1STNBR /* style number changed*/
   || FB05M010.SY2CLRID != FB05W01.SY2CLRID /* color changed*/
   || FB05M010.XDMCD != FB05W01.XDMCD)      /* dimension changed*/
    FB05M010.SY1SSTNM = "            ";
    FB05M010.SY2CLRAB = "            ";
  end

  if (FB05M010.CAUSERID != FB05W01.CAUSERID /* user id changed*/
   || FB05M010.SY1STNBR != FB05W01.SY1STNBR /* style number changed*/
   || FB05M010.SY2CLRID != FB05W01.SY2CLRID /* color changed*/
   || FB05M010.XDMCD != FB05W01.XDMCD       /* dimension changed*/
   || FB05M010.FB05MBMO != FB05W01.FB05MBMO) /* buy month*/
    FB05W00.FB05WKCS = "Y"; /* key changed*/
    if (FB05M010.SY2CLRID == "   ")
      FB05M010.SY2CLRID = "00 ";
    end
    if (FB05M010.XDMCD == "  ")
      FB05M010.XDMCD = "00";
    end
  else
    FB05W00.FB05WKCS = "N"; /* key did not change*/
  end

   /* ------------------------------------------------------------*/
   /* check the selection codes*/
   /* ------------------------------------------------------------*/

  FB05W00.FB05WMIX = FB05W00.FB05WMSL; /* max poss lines per page*/
  set FB05W03 empty; /* initialise hold area*/

  while (FB05W00.FB05WMIX > 0) /* for each line on screen*/
    FB05W00.FB05WDT1 = FB05M010.FB05MRDT[FB05WMIX]; /* mmddyy*/
    FB05W00.FB05WMM2 = FB05W00.FB05WMM1;
    FB05W00.FB05WDD2 = FB05W00.FB05WDD1;
    FB05W00.FB05WYY2 = FB05W00.FB05WYY1;
    /* --------------------- y2k out begin ------------------*/
    /* FB05W00.FB7RTADT = 19000000 + FB05W00.FB05WDT2;/* YYMMDD*/
    /* --------------------- y2k out end   ------------------*/
    /* --------------------- y2k in begin  ------------------*/
    if (FB05W00.FB05WDT1 == 0)
      FB05W00.FB7RTADT = 0;
    else
      if (FB05W00.FB05WYY2 > 60)
        FB05W00.FB7RTADT = 19000000 + FB05W00.FB05WDT2; /* yymmdd*/
      else
        FB05W00.FB7RTADT = 20000000 + FB05W00.FB05WDT2; /* yymmdd*/
      end
    end
    /* --------------------- y2k in end    ------------------*/

    if (FB05M010.FB05MSCD[FB05WMIX] != " " /* code entered*/
     && FB05M010.FB05MSCD[FB05WMIX] != "S") /* code not s*/
      set FB05M010.FB05MSCD[FB05WMIX] cursor, bold; /* highlight*/
      FB05M010.XXXMODID = "500"; /* process number*/
      converseLib.validationFailed(41); /* invalid select code*/
    end
    if (FB05M010.FB05MSCD[FB05WMIX] == "S") /* select code entered*/

      if (FB05W03.SY1STNBR != " ") /* select code all ready ent*/
        set FB05M010.FB05MSCD[FB05WMIX] cursor, bold; /* highlight*/
        FB05M010.XXXMODID = "500"; /* process number*/
        converseLib.validationFailed(136); /* only one select*/
      else /* save selected line*/
        FB05W03.SY1STNBR = FB05M010.SY1STNBR;
        FB05W03.SY2CLRID = FB05M010.SY2CLRID;
        FB05W03.XDMCD = FB05M010.XDMCD;
        FB05W03.FB7RTADT = FB05W00.FB7RTADT;
        FB05W03.XCTCD = FB05M010.XCTCD[FB05WMIX];
        FB05W03.PC2CUXID = FB05M010.PC2CUXID[FB05WMIX];
        FB05W03.OP1PARTN = FB05M010.OP1PARTN[FB05WMIX];
        FB05W03.OP1CUOID = FB05M010.OP1CUOID[FB05WMIX];
        FB05W03.OP1NORID = FB05M010.OP1NORID[FB05WMIX];
        FB05W03.FB05MQTB = FB05M010.FB05MQTB[FB05WMIX];
        FB05W03.FY1FCTYC = FB05M010.FY1FCTYC[FB05WMIX];
        FB05W03.XWHCD = FB05W02.XWHCD[FB05WMIX];
      end

      if (FB05M010.FB05MQTB[FB05WMIX] < FB9REC.FB9BTQTY
       && FB05W02.XWHCD[FB05WMIX] == " ") /* Msg not valid for whses*/
        set FB05M010.FB05MQTB[FB05WMIX] protect, bold;
        set FB05M010.FB05MSCD[FB05WMIX] cursor, bold;
        FB05M010.XXXMODID = "500";
        converseLib.validationFailed(342);
      end

      if (FB05W00.FB7RTADT != FB05W02.FB7RTADT[FB05WMIX])

        /* --------------------- y2k out begin ------------------*/
        /* IF FB05W00.FB7RTADT EQ 19000000*/
        /* --------------------- y2k out end   ------------------*/
        /* --------------------- y2k in begin  ------------------*/
        if (FB05W00.FB7RTADT == 0
         && FB05W02.FB7RTADT[FB05WMIX] == 0)
          /* --------------------- y2k in end    ------------------*/
           /* next sentence*/
        else
          set FB05M010.FB05MRDT[FB05WMIX] cursor, bold; /* highlight*/
          FB05M010.XXXMODID = "500"; /* process number*/
          converseLib.validationFailed(321); /* cant s and chg rta*/
        end

      end

    end

    if (FB05W00.FB7RTADT != FB05W02.FB7RTADT[FB05WMIX])

        /* --------------------- y2k out begin ------------------*/
        /* IF FB05W00.FB7RTADT EQ 19000000*/
        /* --------------------- y2k out end   ------------------*/
        /* --------------------- y2k in begin  ------------------*/
      if (FB05W00.FB7RTADT == 0
       && FB05W02.FB7RTADT[FB05WMIX] == 0)
        /* --------------------- y2k in end    ------------------*/
         /* next sentence*/
      else
        FB05W00.FB05WDCS = "Y"; /* data changed*/
          /* pmainw 11/10/95*/
        FB05W00.FB05WIX1 = 15; /* init index for duplicate check*/
        while (FB05W00.FB05WIX1 > 0) /* for each line on screen*/
          if (FB05W00.FB05WIX1 != FB05W00.FB05WMIX) /* not on current line*/
            if (FB05M010.FY1FCTYC[FB05WIX1] == 
            FB05M010.FY1FCTYC[FB05WMIX]
             && FB05M010.PC2CUXID[FB05WIX1] == 
            FB05M010.PC2CUXID[FB05WMIX]
             && FB05M010.OP1PARTN[FB05WIX1] == 
            FB05M010.OP1PARTN[FB05WMIX]
             && FB05M010.OP1CUOID[FB05WIX1] == 
            FB05M010.OP1CUOID[FB05WMIX]
             && FB05M010.OP1NORID[FB05WIX1] == 
            FB05M010.OP1NORID[FB05WMIX]
             && FB05M010.FB05MRDT[FB05WIX1] == 
            FB05M010.FB05MRDT[FB05WMIX])
              FB05M010.XXXMODID = "510";
              set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
              converseLib.validationFailed(323); /* duplicate rta dates*/
              exit stack;
            end
          end
          FB05W00.FB05WIX1 = FB05W00.FB05WIX1 - 1; /* decrement index*/
        end
          /* pmainw 11/10/95 - end*/
        FB05510(); /* edit rta date*/

        if (converseVar.validationMsgNum == 0 /* no rta date errors*/
        )                                    
          set PC2REC empty;
          PC2REC.XGPCD = "02";
          PC2REC.PC2CUXID = FB05M010.PC2CUXID[FB05WMIX];
          FB05S-01-IO3340-S(); /* Select dprodc.vprdcu01*/

          if (PC2REC.PC-PRDCU-APAO-FL == "E") /* European*/

            if (FB05W01.FB05MACF-EUR == "Y")
              converseLib.validationFailed(322); /* cant update*/
              set FB05M010.FB05MRDT[FB05WMIX] cursor, bold; /* highlight*/
            end

          else
            if (FB05W01.FB05MACF == "Y") /* all countries fl*/
              converseLib.validationFailed(322); /* cant update*/
              set FB05M010.FB05MRDT[FB05WMIX] cursor, bold; /* highlight*/
            end

          end

        end

      end

    end

    FB05W00.FB05WMIX = FB05W00.FB05WMIX - 1;
  end

  if (FB05W03.SY1STNBR == " " /* no selection*/
   && converseVar.eventKey is pf14) /* transfer to fb04*/
    converseLib.validationFailed(154); /* mistake - no selection*/
    FB05M010.XXXMODID = "500"; /* process number*/
  end

  if (FB05W00.FB05WKCS == "Y") /* key changed*/

    if (FB05W03.SY1STNBR != " " /* a select entered*/
     || FB05W00.FB05WDCS == "Y") /* rta date changed*/
      FB05M010.XXXMODID = "500"; /* process number*/
      converseLib.validationFailed(130); /* cant change key and data*/
    end

    if (FB05M010.SY1STNBR == " ") /* style number not entered*/
      FB05M010.XXXMODID = "500"; /* process number*/
      set FB05M010.SY1STNBR cursor, bold; /* highlight*/
      converseLib.validationFailed(8); /* required field*/
    end

  end

  if (FB05W03.SY1STNBR != " " /* a select entered*/
   && FB05W00.FB05WKCS != "Y" /* key not changed*/
   && converseVar.eventKey is enter) /* enter, not xfer*/
    FB05M010.XXXMODID = "500"; /* process number*/
    converseLib.validationFailed(337); /* must pf 14 with select*/
  end

  if (FB05M010.FB05MACF != FB05W01.FB05MACF
   || FB05M010.FB05MACF-EUR != FB05W01.FB05MACF-EUR)
    FB05520(); /* edit all cntries fl*/
  end

  if (converseVar.eventKey is pf14      /* transfer to fb04*/
   && converseVar.validationMsgNum == 0 /* no other errors*/
   && FB05W03.PC2CUXID != " ")          /* and a line selected*/

    set PC2REC empty;
    PC2REC.XGPCD = "02";
    PC2REC.PC2CUXID = FB05W03.PC2CUXID;
    FB05S-01-IO3340-S(); /* Select dprodc.vprdcu01*/

    if (PC2REC.PC-PRDCU-APAO-FL == "E" /* European*/
     && FB05M010.FB05MACF-EUR == "Y")  /* And approved for autoload*/
      set FB05M010.FB05MACF-EUR cursor, bold;
      FB05M010.XXXMODID = "500"; /* process number*/
      converseLib.validationFailed(331); /* cant xfer, all countries fl*/
    end

    if (PC2REC.PC-PRDCU-APAO-FL != "E" /* Not European*/
     && FB05M010.FB05MACF == "Y")      /* And approved for autoload*/
      set FB05M010.FB05MACF cursor, bold;
      FB05M010.XXXMODID = "500"; /* process number*/
      converseLib.validationFailed(331); /* cant xfer, all countries fl*/
    end
  end

  if (converseVar.validationMsgNum != 0) /* an err has been defective*/
    exit stack; /* display map*/
  end
end // end FB05500

// edit rta date
Function FB05510()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set FB7REC empty; /* initialise record*/
  FB7REC.SY1STNBR = FB05M010.SY1STNBR;
  FB7REC.SY2CLRID = FB05M010.SY2CLRID;
  FB7REC.XDMCD = FB05M010.XDMCD;
  FB7REC.FY1FCTYC = FB05M010.FY1FCTYC[FB05WMIX];
  FB7REC.PC2CUXID = FB05M010.PC2CUXID[FB05WMIX];
  FB7REC.OP1PARTN = FB05M010.OP1PARTN[FB05WMIX]; /* OP-ORD-PART-CHAR*/
  FB7REC.OP1CUOID = FB05M010.OP1CUOID[FB05WMIX]; /* OP-CUST-ORD-ID*/
  FB7REC.OP1NORID = FB05M010.OP1NORID[FB05WMIX]; /* OP-NIKE-ORD-ID*/
  FB05W00.FB05WDT1 = FB05M010.FB05MRDT[FB05WMIX]; /* mmddyy*/
  FB05W00.FB05WMM2 = FB05W00.FB05WMM1;
  FB05W00.FB05WDD2 = FB05W00.FB05WDD1;
  FB05W00.FB05WYY2 = FB05W00.FB05WYY1;
   /* --------------------- y2k out begin ------------------*/
   /* FB7REC.FB7RTADT = 19000000 + FB05W00.FB05WDT2;/* yymmdd*/
   /* --------------------- y2k out end   ------------------*/
   /* --------------------- y2k in begin  ------------------*/
  if (FB05W00.FB05WYY2 > 60)
    FB7REC.FB7RTADT = 19000000 + FB05W00.FB05WDT2; /* yymmdd*/
  else
    FB7REC.FB7RTADT = 20000000 + FB05W00.FB05WDT2; /* yymmdd*/
  end
   /* --------------------- y2k in end    ------------------*/
  FB05W00.FB05MBMO = FB05M010.FB05MBMO;
  FB05W00.FB05WBDD = 01;
   /* --------------------- y2k out begin ------------------*/
   /* MOVE 19 TO FB05W00.FB05WBCC;*/
   /* --------------------- y2k out end   ------------------*/
   /* --------------------- y2k in begin  ------------------*/
  if (FB05W00.FB05WBYY > 60)
    FB05W00.FB05WBCC = 19;
  else
    FB05W00.FB05WBCC = 20;
  end
   /* --------------------- y2k in end    ------------------*/
  FB7REC.FB8BUYDT = FB05W00.FB05WBDT;
  FB7REC.XWHCD = FB05W02.XWHCD[FB05WMIX];

    /* Validate rta date*/
  set TA2REC empty;
  TA2REC.TA2GRGGN = FB7REC.FB7RTADT;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "G";
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end
  if (TA2RTNCD != "0000")
    converseLib.validationFailed(151);
    FBWREC.XXXMSGNO = 151;
    FB05M010.XXXMODID = "510";
    set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
    exit stack;
  end


  if (FB05W00.FB05WMM1 < 1
   || FB05W00.FB05WMM1 > 12
   || FB05W00.FB05WDD1 < 1
   || FB05W00.FB05WDD1 > 31)
    set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
    FB05M010.XXXMODID = "510";
    converseLib.validationFailed(151);
    exit stack;
  end

  if (FB7REC.FB7RTADT < FB05W00.FB05WFRD
   || FB7REC.FB7RTADT > FB05W00.FB05WLRD)
    set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
    FB05M010.XXXMODID = "510";
    converseLib.validationFailed(343);
    exit stack;
  end

   /* ------------------------------------------------------------*/
   /* select row in dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("SB", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return;
    end

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      FB05M010.XXXMODID = "510";
      set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
      converseLib.validationFailed(323); /* duplicate rta dates*/
      exit stack;
    end

  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05510"; /* Process name*/
  TA1REC.TA1LOC = "SELECT UNIQUE           ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "510";
  exit stack;



end // end FB05510

// edit all countries flag
Function FB05520()
   /* --------------------------------------------------------------*/
   /* Edit the Euro all countries flag*/
   /* --------------------------------------------------------------*/

  if (FB05M010.FB05MACF-EUR != FB05W01.FB05MACF-EUR) /* Eur changed*/

    if (COMMAREA.CACHGFL != "Y")
      set FB05M010.FB05MACF-EUR cursor, bold;
      converseLib.validationFailed(328); /* not authorized to change*/
      FB05M010.XXXMODID = "520";
    end

    if (FB05M010.FB05MACF-EUR == "Y"
     || FB05M010.FB05MACF-EUR == "N")

      /* Next sentence*/
    else
      set FB05M010.FB05MACF-EUR cursor, bold; /* highlight*/
      converseLib.validationFailed(153); /* only Y or N valid*/
      FB05M010.XXXMODID = "520";
    end

    if (FB05M010.FB05MACF-EUR == "Y")
      set FBMREC empty;
      FBMREC.PG1SC4CD = "98";

      FB05S-02-IO4670-S(); /* Select DFBUY.VFSCTL01*/

      if (FBMREC.FBMFINFL == "Y" /* DIRSHP FINISH FL*/
       && FBMREC.FBMCFFL == "Y"  /* CALC FINISH FL*/
       && FBMREC.FBMFLRFL == "Y") /* FCTYLD RUN FL*/
        /* Next sentence*/
      else
        set FB05M010.FB05MACF-EUR cursor, bold;
        converseLib.validationFailed(506); /* Must set other flags = 'y'*/
        FB05M010.XXXMODID = "520";
      end
    else

      set FBZREC empty;
      set FBMREC empty;
      FBMREC.FBMALAFL = "N"; /* autoload flag*/
      FBZREC.FBZFUNC = "SC"; /* call function*/

      FB05S-03-IO4670-SC(); /* Select DFBUY.VFSCTL01*/

      if (FBZREC.FBZSUM1 == 0) /* all autoload flags are Y*/
        converseLib.validationFailed(186); /* cant change, ready for autoload*/
        FB05M010.XXXMODID = "520";
        set FB05M010.FB05MACF-EUR cursor, bold;
      end
    end
  end


   /* --------------------------------------------------------------*/
   /* Edit the NIL all countries flag*/
   /* --------------------------------------------------------------*/

  if (FB05M010.FB05MACF != FB05W01.FB05MACF) /* NIL all ctry fl changed*/

    if (COMMAREA.CACHGFL != "Y")
      set FB05M010.FB05MACF cursor, bold;
      converseLib.validationFailed(328); /* not authorized to change*/
      FB05M010.XXXMODID = "520";
    end

    if (FB05M010.FB05MACF == "Y"
     || FB05M010.FB05MACF == "N")

      /* Next sentence*/
    else
      set FB05M010.FB05MACF cursor, bold; /* highlight*/
      converseLib.validationFailed(153); /* only Y or N valid*/
      FB05M010.XXXMODID = "520";
    end

    if (FB05M010.FB05MACF == "Y")
      set FBMREC empty;
      FBMREC.PG1SC4CD = "99";

      FB05S-02-IO4670-S(); /* Select DFBUY.VFSCTL01*/

      if (FBMREC.FBMFINFL == "Y" /* DIRSHP FINISH FL*/
       && FBMREC.FBMCFFL == "Y"  /* CALC FINISH FL*/
       && FBMREC.FBMFLRFL == "Y") /* FCTYLD RUN FL*/
        /* Next sentence*/
      else
        set FB05M010.FB05MACF cursor, bold;
        converseLib.validationFailed(506); /* Must set other flags = 'y'*/
        FB05M010.XXXMODID = "520";
      end
    else

      set FBZREC empty;
      set FBMREC empty;
      FBMREC.FBMALAFL = "N"; /* autoload flag*/
      FBZREC.FBZFUNC = "SC"; /* call function*/

      FB05S-03-IO4670-SC(); /* Select DFBUY.VFSCTL01*/

      if (FBZREC.FBZSUM1 == 0) /* all autoload flags are Y*/
        set FB05M010.FB05MACF cursor, bold;
        converseLib.validationFailed(186); /* cant change, ready for autoload*/
        FB05M010.XXXMODID = "520";
      end
    end
  end


end // end FB05520

// process valid request
Function FB05600()
  if (converseVar.eventKey is pf7) /* scroll up*/
    FB05W00.XXXTSPAG = FB05W00.XXXTSPAG - 1; /* previous page*/
    FB05W00.FB05WMCS = "Y"; /* format map*/
    return;
  end

  if (converseVar.eventKey is pf8) /* scroll down*/
    FB05W00.XXXTSPAG = FB05W00.XXXTSPAG + 1; /* next page*/
    FB05W00.FB05WMCS = "Y"; /* format map*/
    return;
  end

  if (converseVar.eventKey is pf14) /* size qty moves*/
    FB05610(); /* transfer to size qty moves*/
    return;
  end

   /* ------------------------------------------------------------*/
   /* the program only gets here when enter is hit*/
   /* ------------------------------------------------------------*/

  if (FB05W00.FB05WKCS == "Y") /* key changed*/
    FB05W00.FB05WRDS = "Y"; /* request data*/
    set FB05W01 empty;
    set FB05W02 empty;
    set FB05W03 empty;
    return;
  end

   /* ------------------------------------------------------------*/
   /* this is now the update pass*/
   /* ------------------------------------------------------------*/

  if (FB05M010.FB05MACF != FB05W01.FB05MACF) /* all countries fl chged*/

    FBMREC.FBMGROUP = FB05W00.FB05W-FBMGROUP;
                                   /* Restore NIL record*/
    FBMREC.FBMALAFL = FB05M010.FB05MACF; /* move to record*/
    FB05620(); /* update vfsctl01*/
    FB05W00.FB05WRDS = "Y"; /* request data*/
  end


  if (FB05M010.FB05MACF-EUR != FB05W01.FB05MACF-EUR) /* all cntries fl chged*/

    FBMREC.FBMGROUP = FB05W00.FB05W-FBMGROUP-EUR;
                                   /* Restore EUR record*/
    FBMREC.FBMALAFL = FB05M010.FB05MACF-EUR; /* move to record*/
    FB05620(); /* update vfsctl01*/
    FB05W00.FB05WRDS = "Y"; /* request data*/
  end


  FB05W00.FB05WMIX = 1; /* first screen line*/

  while (FB05W00.FB05WMIX <= FB05W00.FB05WMSL /* for each valid*/
   && FB05M010.XCTCD[FB05WMIX] != " ") /* data line*/
    FB05W00.FB05WDT1 = FB05M010.FB05MRDT[FB05WMIX]; /* mmddyy*/
    FB05W00.FB05WMM2 = FB05W00.FB05WMM1;
    FB05W00.FB05WDD2 = FB05W00.FB05WDD1;
    FB05W00.FB05WYY2 = FB05W00.FB05WYY1;
    /* --------------------- y2k out begin ------------------*/
    /* FB05W00.FB7RTADT = 19000000 + FB05W00.FB05WDT2;/* yymmdd*/
    /* --------------------- y2k out end   ------------------*/
    /* --------------------- y2k in begin  ------------------*/
    if (FB05W00.FB05WDT1 == 0)
      FB05W00.FB7RTADT = 0;
    else
      if (FB05W00.FB05WYY2 > 60)
        FB05W00.FB7RTADT = 19000000 + FB05W00.FB05WDT2; /* yymmdd*/
      else
        FB05W00.FB7RTADT = 20000000 + FB05W00.FB05WDT2; /* yymmdd*/
      end
    end
    /* --------------------- y2k in end    ------------------*/

    if (FB05W00.FB7RTADT != FB05W02.FB7RTADT[FB05WMIX])
      FB05630(); /* update rta date in mfbuy table*/
      FB05640(); /* update rta date in rtqtb table*/
    end

    FB05W00.FB05WMIX = FB05W00.FB05WMIX + 1; /* next line*/
  end

  FB05W00.FB05WRDS = "Y"; /* request data*/
  FBWREC.XXXMSGNO = 32; /* info msg update ok*/
end // end FB05600

// transfer to size quantity
Function FB05610()
  FBXREC.CAUSERID = FB05M010.CAUSERID; /* user id*/
  FBXREC.FB8BUYDT = FB05W00.FB05WBDT; /* buy date*/
  FBXREC.SY1STNBR[1] = FB05W03.SY1STNBR; /* style number*/
  FBXREC.SY2CLRID[1] = FB05W03.SY2CLRID; /* color code*/
  FBXREC.XDMCD[1] = FB05W03.XDMCD; /* dimension code*/
  FBXREC.XCTCD = FB05W03.XCTCD; /* country code*/
  FBXREC.PC2CUXID = FB05W03.PC2CUXID; /* cust xref*/
  FBXREC.OP1PARTN = FB05W03.OP1PARTN; /* OP-ORD-PART-CHAR*/
  FBXREC.OP1CUOID = FB05W03.OP1CUOID; /* OP-CUST-ORD-ID*/
  FBXREC.OP1NORID = FB05W03.OP1NORID; /* OP-NIKE-ORD-ID*/
  FBXREC.FBXFCTY1 = FB05W03.FY1FCTYC; /* factory*/
  FBXREC.FBXFRMDT = FB05W03.FB7RTADT; /* from rta date*/
  FBXREC.FBXTODT = FB05W04.FB7RTADT; /* to rta date*/
  FBXREC.XWHCD1 = FB05W03.XWHCD;

  set FBWREC empty;
  FBWREC.FBWFILL = FBXREC.FBXGROUP;
  COMMAREA.CATOAP = "FB04";
  FB05S01(); /* purge temp storage*/
  XSFBS01(); /* Exit to another application*/
  FB05M010.XXXMODID = "610"; /* Process name*/
  set FB05M010.CATOAP cursor, bold; /* Highlight (in case bad xfer)*/
end // end FB05610

// update VFSCTL01
Function FB05620()
  XX0XS01(); /* get date and time*/
  FBMREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBMREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FBZREC.FBZFUNC = "U "; /* update function*/

  try
    call "IO4670" (FBZREC, SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* update row*/

   /* ------------------------------------------------------------*/
   /* If row not found return, msg updated since last. If found,*/
   /* process.  If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
      FB05M010.XXXMODID = "620"; /* process number*/
      converseLib.validationFailed(20); /* updated since displayed*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* roll back any changes*/
      exit stack; /* display map*/
    end

  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(47); /* In use*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* roll back any changes*/
    converseLib.clearScreen();
    
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05620"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE ROW              ";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "620";
  exit stack;



end // end FB05620

// update rta date
Function FB05630()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set FB7REC empty; /* initialise record*/
  FB7REC.SY1STNBR = FB05M010.SY1STNBR;
  FB7REC.SY2CLRID = FB05M010.SY2CLRID;
  FB7REC.XDMCD = FB05M010.XDMCD;
  FB7REC.FY1FCTYC = FB05M010.FY1FCTYC[FB05WMIX];
  FB7REC.PC2CUXID = FB05M010.PC2CUXID[FB05WMIX];
  FB7REC.OP1PARTN = FB05M010.OP1PARTN[FB05WMIX];
  FB7REC.OP1CUOID = FB05M010.OP1CUOID[FB05WMIX];
  FB7REC.OP1NORID = FB05M010.OP1NORID[FB05WMIX];
  FB7REC.FB7RTADT = FB05W02.FB7RTADT[FB05WMIX];
  FB05W00.FB05MBMO = FB05M010.FB05MBMO;
  FB05W00.FB05WBDD = 01;
   /* ------------------------- y2k out begin --------------------*/
   /* MOVE 19 TO FB05W00.FB05WBCC;*/
   /* ------------------------- y2k out end   --------------------*/
   /* ------------------------- y2k in begin  --------------------*/
  if (FB05W00.FB05WBYY > 60) /* Century windowing*/
    FB05W00.FB05WBCC = 19;
  else
    FB05W00.FB05WBCC = 20;
  end
   /* ------------------------- y2k in end    --------------------*/

  FB7REC.FB8BUYDT = FB05W00.FB05WBDT;
  FB7REC.XWHCD = FB05W02.XWHCD[FB05WMIX];

   /* ------------------------------------------------------------*/
   /* select row in dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("SB", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB05M010.XXXMODID = "630";
      converseLib.validationFailed(21); /* deleted since last displayed*/
      set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end

  end

  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)

    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end

    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB05630"; /* Process name*/
    TA1REC.TA1LOC = "SELECT ROW              ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FB05M010.XXXMODID = "630";
    exit stack;
  end


   /* ------------------------------------------------------------*/
   /* delete row in dfbuy.vmfbuy01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("D2", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB05M010.XXXMODID = "630";
      converseLib.validationFailed(21); /* deleted since last displayed*/
      set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end

  end

  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)

    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end

    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB05630"; /* Process name*/
    TA1REC.TA1LOC = "DELETE ROW              ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FB05M010.XXXMODID = "630";
    exit stack;
  end

  XX0XS01(); /* get date and time*/
  FB7REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FB7REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FB05W00.FB05WDT1 = FB05M010.FB05MRDT[FB05WMIX]; /* mmddyy*/
  FB05W00.FB05WMM2 = FB05W00.FB05WMM1;
  FB05W00.FB05WDD2 = FB05W00.FB05WDD1;
  FB05W00.FB05WYY2 = FB05W00.FB05WYY1;
   /* --------------------- y2k out begin ------------------*/
   /* FB7REC.FB7RTADT = 19000000 + FB05W00.FB05WDT2;/* yymmdd*/
   /* --------------------- y2k out end   ------------------*/
   /* --------------------- y2k in begin  ------------------*/
  if (FB05W00.FB05WYY2 > 60)
    FB7REC.FB7RTADT = 19000000 + FB05W00.FB05WDT2; /* yymmdd*/
  else
    FB7REC.FB7RTADT = 20000000 + FB05W00.FB05WDT2; /* yymmdd*/
  end
   /* --------------------- y2k in end    ------------------    ow*/

   /* ------------------------------------------------------------*/
   /* If database in use, msg try again.  If any other, indicate*/
   /* system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3490" ("A ", SQLCA, FB7REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add row*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end

  end

  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)

    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end

    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB05630"; /* Process name*/
    TA1REC.TA1LOC = "ADD ROW                 ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VMFBUY01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FB05M010.XXXMODID = "630";
    exit stack;
  end




end // end FB05630

// update rta date
Function FB05640()
   /* ------------------------------------------------------------*/
   /* build key*/
   /* ------------------------------------------------------------*/

  set FBFREC empty; /* initialise record*/
  FBFREC.SY1STNBR = FB05M010.SY1STNBR;
  FBFREC.SY2CLRID = FB05M010.SY2CLRID;
  FBFREC.XDMCD = FB05M010.XDMCD;
  FBFREC.PC2CUXID = FB05M010.PC2CUXID[FB05WMIX];
  FBFREC.OP1PARTN = FB05M010.OP1PARTN[FB05WMIX];
  FBFREC.OP1CUOID = FB05M010.OP1CUOID[FB05WMIX];
  FBFREC.OP1NORID = FB05M010.OP1NORID[FB05WMIX];
  FBFREC.FB7RTADT = FB05W02.FB7RTADT[FB05WMIX];
  FB05W00.FB05MBMO = FB05M010.FB05MBMO;
  FB05W00.FB05WBDD = 01;
   /* ------------------------- y2k out begin --------------------*/
   /* MOVE 19 TO FB05W00.FB05WBCC;*/
   /* ------------------------- y2k out end   --------------------*/
   /* ------------------------- y2k in begin  --------------------*/
  if (FB05W00.FB05WBYY > 60) /* Century windowing*/
    FB05W00.FB05WBCC = 19;
  else
    FB05W00.FB05WBCC = 20;
  end
   /* ------------------------- y2k in end    --------------------*/

  FBFREC.FB8BUYDT = FB05W00.FB05WBDT;
  FBFREC.XWHCD = FB05W02.XWHCD[FB05WMIX];

   /* ------------------------------------------------------------*/
   /* select row in dfbuy.vrtqtb01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4620" ("S ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB05M010.XXXMODID = "630";
      converseLib.validationFailed(21); /* deleted since last displayed*/
      set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end

  end

  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)

    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end

    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB05640"; /* Process name*/
    TA1REC.TA1LOC = "SELECT ROW              ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FB05M010.XXXMODID = "630";
    exit stack;
  end


   /* ------------------------------------------------------------*/
   /* delete row in dfbuy.vrtqtb01*/
   /* ------------------------------------------------------------*/

  try
    call "IO4620" ("D ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      FB05M010.XXXMODID = "630";
      converseLib.validationFailed(21); /* deleted since last displayed*/
      set FB05M010.FB05MRDT[FB05WMIX] cursor, bold;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      exit stack;
    end

  end

  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)

    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end

    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB05640"; /* Process name*/
    TA1REC.TA1LOC = "DELETE ROW              ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FB05M010.XXXMODID = "630";
    exit stack;
  end

  XX0XS01(); /* get date and time*/
  FBFREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FBFREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  FB05W00.FB05WDT1 = FB05M010.FB05MRDT[FB05WMIX]; /* mmddyy*/
  FB05W00.FB05WMM2 = FB05W00.FB05WMM1;
  FB05W00.FB05WDD2 = FB05W00.FB05WDD1;
  FB05W00.FB05WYY2 = FB05W00.FB05WYY1;

  if (FB05W00.FB05WYY2 > 60)
    FBFREC.FB7RTADT = 19000000 + FB05W00.FB05WDT2; /* yymmdd*/
  else
    FBFREC.FB7RTADT = 20000000 + FB05W00.FB05WDT2; /* yymmdd*/
  end

   /* ------------------------------------------------------------*/
   /* If database in use, msg try again.  If any other, indicate*/
   /* system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4620" ("A ", SQLCA, FBFREC) {isNoRefresh = yes, isExternal = yes};
  end /* Add row*/

  if (sysVar.errorCode == "00000000") /* Successful call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
      return; /* return to calling process*/
    end

  end

  if (sysVar.errorCode != "00000000"
   || SQLCA.VAGen_SQLCODE != 0)

    if (sysVar.errorCode == "00000000" /* Successful call*/
     && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
      converseLib.validationFailed(47); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(01); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
      
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end

    TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FB05640"; /* Process name*/
    TA1REC.TA1LOC = "ADD ROW                 ";
    TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VRTQTB01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FB05M010.XXXMODID = "630";
    exit stack;
  end




end // end FB05640

// SELECT 'S' DPRDOC.VPRDCU01
Function FB05S-01-IO3340-S()

   /* ------------------------------------------------------------*/
   /* This module selects a table row using gpc and cust xref cd*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3340" ("S ", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end /* sel table row*/

  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      return; /* Return to previous process*/
    end
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05S01"; /* Process name*/
  TA1REC.TA1LOC = "SELECT S DPRODC.VPRDCU01";
  TA1REC.TA1DBASE = "DPRODC. "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "S01"; /* Process name*/

  exit stack;


end // end FB05S-01-IO3340-S

// SELECT 'S' DFBUY.VFSCTL01
Function FB05S-02-IO4670-S()

   /* ------------------------------------------------------------*/
   /* This module selects a table row from DFBUY.VFSCTL01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" ("S ", SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end /* sel table row*/

  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      return; /* Return to previous process*/
    end
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05S02"; /* Process name*/
  TA1REC.TA1LOC = "SELECT S DFBUY.VFSCTL01";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "S02"; /* Process name*/

  exit stack;


end // end FB05S-02-IO4670-S

// SELECT 'SC' DFBUY.VFSCTL01
Function FB05S-03-IO4670-SC()

   /* ------------------------------------------------------------*/
   /* This module performs a select count on DFBUY.VFSCTL01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4670" (FBZREC, SQLCA, FBMREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* Successful call*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Expected return codes*/
      return; /* Return to previous process*/
    end
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FB05S03"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SC DFBUY.VFSCTL01";
  TA1REC.TA1DBASE = "DFBUY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFSCTL01"; /* Table view name*/
  TA1REC.TA1TBLKE = FBMREC.FBMGROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FB05M010.XXXMODID = "S03"; /* Process name*/

  exit stack;


end // end FB05S-03-IO4670-SC

// purge temp storage
Function FB05S01()
   /* ------------------------------------------------------------*/
   /* If the last function was purge, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (TA5REC.TA5FNCCD == "P") /* Last function was purge*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set FB05W02 empty; /* m010 display storage*/

   /* MOVE 'N' TO fb05W00.fb05WSWU   ; Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  FB05W00.TA5TSQIX = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (FB05W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  FB05M010.XXXMODID = "S01"; /* Module identification*/
  converseLib.validationFailed(01); /* Indicate system error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FB05S01

// add page to temp storage
Function FB05S02()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  FB05W02.XXXTSLEN = FB05W00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  if (FB05W00.TA5TSQIX == 0 /* No pages are formatted*/
   && TA5REC.TA5FNCCD == "P") /* and last function purge*/
    TA5REC.TA5FNCCD = "N"; /* Function code*/
  else
    TA5REC.TA5FNCCD = "A"; /* Function code*/
  end

  try
    call "TA0050" (FB05W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    set FB05W02 empty; /* map display storage*/
    FB05W00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    FB05W00.FB05WIXM = 0; /* Display line number*/
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  FB05M010.XXXMODID = "S02"; /* Module identification*/
  converseLib.validationFailed(01); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FB05S02

// reset screen
Function FB05S04()
  FB05W00.CAUSERID = FB05M010.CAUSERID;
  FB05W00.SY1STNBR = FB05M010.SY1STNBR;
  FB05W00.SY2CLRID = FB05M010.SY2CLRID;
  FB05W00.XDMCD = FB05M010.XDMCD;
  FB05W00.SY1SSTNM = FB05M010.SY1SSTNM;
  FB05W00.SY2CLRAB = FB05M010.SY2CLRAB;
  FB05W00.FB05MBMO = FB05M010.FB05MBMO;
  set FB05M010 initial;
  FB05M010.CAUSERID = FB05W00.CAUSERID;
  FB05M010.SY1STNBR = FB05W00.SY1STNBR;
  FB05M010.SY2CLRID = FB05W00.SY2CLRID;
  FB05M010.XDMCD = FB05W00.XDMCD;
  FB05M010.SY1SSTNM = FB05W00.SY1SSTNM;
  FB05M010.SY2CLRAB = FB05W00.SY2CLRAB;
  FB05M010.FB05MBMO = FB05W00.FB05MBMO;
end // end FB05S04

// obtain temp storage page
Function FB05S05()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  FB05W02.XXXTSLEN = FB05W00.XXXTSLEN; /* Temporary storage length*/
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = FB05W00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (FB05W02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/
  FB05M010.XXXMODID = "S05"; /* Module identification*/
  converseLib.validationFailed(10); /* Indicate system error*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FB05M010.XXXMODID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M010"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FB05S05

Record FB05W00 type basicRecord
  10 FB05WRDS FB05WRDS ; 
  10 FB05WMCS FB05WMCS ; 
  10 FB05WKCS FB05WKCS ; 
  10 FB05WDCS FB05WDCS ; 
  10 FB05WFFS FB05WFFS ; 
  10 FB05WSAS FB05WSAS ; 
  10 FB05WMSL FB05WMSL ; 
  10 FB05WIXM FB05WIXM ; 
  10 FB05WGIX FB05WGIX ; 
  10 FB05WMIX FB05WMIX ; 
  10 FB05WIX1 FB05WIX1 ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 FB7RTADT FB7RTADT ; 
  10 FB05WFRD FB05WFRD ; 
  10 FB05WLRD FB05WLRD ; 
  10 FB05WBDT FB05WBDT ; 
    15 FB05WBCC FB05WBCC ; 
    15 FB05MBMO FB05MBMO ; 
      20 FB05WBYY FB05WBYY ; 
      20 FB05WBMM FB05WBMM ; 
    15 FB05WBDD FB05WBDD ; 
  10 FB05WDT1 FB05WDT1 ; 
    15 FB05WMM1 FB05WMM1 ; 
    15 FB05WDD1 FB05WDD1 ; 
    15 FB05WYY1 FB05WYY1 ; 
  10 FB05WDT2 FB05WDT2 ; 
    15 FB05WYY2 FB05WYY2 ; 
    15 FB05WMM2 FB05WMM2 ; 
    15 FB05WDD2 FB05WDD2 ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 CAUSERID CAUSERID ; 
  10 FB05WWK FB05WWK ; 
  10 FB05MACF FB05MACF ; 
  10 FB05MACF-EUR FB05MACF-EUR ; 
  10 FB05W-FBMGROUP FB05W-FBMGROUP ; 
  10 FB05W-FBMGROUP-EUR FB05W-FBMGROUP-EUR ; 
end // end FB05W00

//*** RECORD=FB05W01 ****
// fb03 display working storage for map heading info
// ***********************
Record FB05W01 type basicRecord
  10 CAUSERID CAUSERID ; 
  10 FB05MBMO FB05MBMO ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 FB05MACF FB05MACF ; 
  10 FB05MACF-EUR FB05MACF-EUR ; 
end // end FB05W01

//*** RECORD=FB05W02 ****
// display working storage for temp storage in fb03
// ***********************
Record FB05W02 type basicRecord
  3 XXXTSLEN XXXTSLEN ; 
  3 * char(495) ; 
    5 FB05WGRP FB05WGRP [15] ; 
      10 XCTCD XCTCD ; 
      10 FB7RTADT FB7RTADT ; 
      10 PC2CUXID PC2CUXID ; 
      10 OP1PARTN OP1PARTN ; 
      10 OP1CUOID OP1CUOID ; 
      10 OP1NORID OP1NORID ; 
      10 FB05MQTB FB05MQTB ; 
      10 FY1FCTYC FY1FCTYC ; 
      10 XWHCD XWHCD ; 
end // end FB05W02

//*** RECORD=FB05W03 ****
// fb03 working storage record for holding the 'from' scrn row
// ***********************
Record FB05W03 type basicRecord
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 XCTCD XCTCD ; 
  10 FB7RTADT FB7RTADT ; 
  10 PC2CUXID PC2CUXID ; 
  10 OP1PARTN OP1PARTN ; 
  10 OP1CUOID OP1CUOID ; 
  10 OP1NORID OP1NORID ; 
  10 FB05MQTB FB05MQTB ; 
  10 FY1FCTYC FY1FCTYC ; 
  10 XWHCD XWHCD ; 
end // end FB05W03

//*** RECORD=FB05W04 ****
// fb03 working storage record for holding the 'to' screen row
// ***********************
Record FB05W04 type basicRecord
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 FB7RTADT FB7RTADT ; 
  10 PC2CUXID PC2CUXID ; 
  10 FB05MQTB FB05MQTB ; 
  10 FY1FCTYC FY1FCTYC ; 
end // end FB05W04

// all countries flag (nil)
DataItem FB05MACF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// all countries flag eur
DataItem FB05MACF-EUR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fb05 buy date yy mm
DataItem FB05MBMO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// nil quantity bought
DataItem FB05MQTB num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ftwr buy sched control group
DataItem FB05W-FBMGROUP char(98)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ftwr buy euro control group
DataItem FB05W-FBMGROUP-EUR char(98)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buy date century
DataItem FB05WBCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date day
DataItem FB05WBDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date ccyymmdd format
DataItem FB05WBDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB05WBMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB05WBYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// data changed switch
DataItem FB05WDCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work day 1
DataItem FB05WDD1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work day 2
DataItem FB05WDD2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date mmddyy
DataItem FB05WDT1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date yymmdd
DataItem FB05WDT2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first fetch switch
DataItem FB05WFFS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// earliest possible rta date
DataItem FB05WFRD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// size bucket index
DataItem FB05WGIX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem FB05WGRP char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work index 1
DataItem FB05WIX1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// tsq map index
DataItem FB05WIXM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// key changed switch
DataItem FB05WKCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// latest possible rta date
DataItem FB05WLRD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format map switch
DataItem FB05WMCS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map line index
DataItem FB05WMIX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work month 1
DataItem FB05WMM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work month 2
DataItem FB05WMM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum screen lines
DataItem FB05WMSL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// request data switch
DataItem FB05WRDS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll allowed switch
DataItem FB05WSAS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// misc work area
DataItem FB05WWK int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year1
DataItem FB05WYY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year 2
DataItem FB05WYY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

