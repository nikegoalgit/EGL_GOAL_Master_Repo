package fe0f;

import corpcom2.XPCREC;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPFF001;
import corpcom3.XPXPC01;
import corpcom3.XPXX001;
import corpcom3.XPYPG01;
import corpcom4.XSFFS01;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XPCTBL;
import corpx2.XPCCD;
import corpy2.YPGCD;
import corpy2.YPGTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ff.common.*;
import sy.common.SY2SSCIN;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
//*** PROGRAM=FE0F ****
// This application will allow the user to specify the pre-
// build percents of the different safety stock classes for
// the specified category and type group. It will also display
// the existing ones if they have been setup.
// 
// The user must enter the category and type group codes. The
// pop-up windows are provided to help user to make a selection
// for category or type group code.
// 
// The total percent across each row on the screen should equal
// to 100.
// 
// The user may scroll forward and backward to view or update
// percents of different safety stock class by pressing PF7 and
// PF8. The PF13 key will bring the user to the set up model
// run screen (FF0Y). He may also exit to any allowed applicat-
// ion via fast path or PF key.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          06/27/91  JJUCH   New application.
// FF-362   03/31/93  KGRAHA  Include Saftey Stock Class D on
//                            second page of map.
// FF175    12/18/96  DSMITH  Regenerated for yr 2000.
// *********************
Program FE0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FE0FW00 FE0FW00; // record
  FE0FW01 FE0FW01; // record
  FF2REC FF2REC; // record
  FFWREC FFWREC; // record
  FGBREC FGBREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  XPCREC XPCREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XPCTBL {deleteAfterUse = yes}; // table
  use YPGTBL {deleteAfterUse = yes}; // table
  use FE0FM.FE0FM001, // form
  		FE0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFF001: XPFF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set FE0FM001 initial; /* M001 input/output*/
    set FE0FW00 empty; /* Working storage*/
    set FE0FW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    FE0FW00.FE0FWCRP = 1; /* current page*/
    FE0FW00.FE0FWSWF = "Y"; /* Format the map flag*/
    FE0FW00.FE0FWUPD = "N"; /* table updated flag*/
    move "N" to FE0FW01.FE0FWA5F[1] for all; /* Class A 5 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWA4F[1] for all; /* Class A 4 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWA3F[1] for all; /* Class A 3 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWA2F[1] for all; /* Class A 2 mo pre-buil chng flag*/

    move "N" to FE0FW01.FE0FWB5F[1] for all; /* Class B 5 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWB4F[1] for all; /* Class B 4 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWB3F[1] for all; /* Class B 3 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWB2F[1] for all; /* Class B 2 mo pre-buil chng flag*/

    move "N" to FE0FW01.FE0FWC5F[1] for all; /* Class C 5 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWC4F[1] for all; /* Class C 4 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWC3F[1] for all; /* Class C 3 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWC2F[1] for all; /* Class C 2 mo pre-buil chng flag*/

    move "N" to FE0FW01.FE0FWD5F[1] for all; /* Class D 5 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWD4F[1] for all; /* Class D 4 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWD3F[1] for all; /* Class D 3 mo pre-buil chng flag*/
    move "N" to FE0FW01.FE0FWD2F[1] for all; /* Class D 2 mo pre-buil chng flag*/

     /* ------------------------------------------------------------*/
     /* If type is missing, default it to '01'.*/
     /* ------------------------------------------------------------*/

    if (FFWREC.YPGCD == " " /* type group code not passed*/
     || FFWREC.YPGCD == "*") /* wild card was passed*/
      FFWREC.YPGCD = "01"; /* default to '01'*/
      if (FFWREC.YPGCD in YPGTBL.YPGCD)
        FFWREC.YPGABRV = YPGTBL.YPGABRV[sysVar.arrayIndex];
      end
    end

     /* ------------------------------------------------------------*/
     /* If category code is present, obtain description.*/
     /* ------------------------------------------------------------*/

    if (FFWREC.XPCCD != " ") /* category code passed*/

      XPCREC.XPCCD = FFWREC.XPCCD; /* category code*/
      XPCREC.XGPCD = COMMAREA.XGPCD; /* gpc code*/

      if (XPCREC.XPCKEY in XPCTBL.XPCKEY)
        FFWREC.XPCABRV = XPCTBL.XPCABRV[sysVar.arrayIndex];
      end

    end

     /* ------------------------------------------------------------*/
     /* If complete key is present, request data.*/
     /* ------------------------------------------------------------*/

    if (FFWREC.XPCCD != " " /* category code passed*/
     && FFWREC.YPGCD != " ") /* and type group code passed*/

      FE0FW00.FE0FWSWR = "Y"; /* Request data*/

    else

      FE0FW00.FE0FWSWR = "N"; /* data not requested*/

    end

     /* ------------------------------------------------------------*/
     /* Clear unused FFWREC fields.*/
     /* ------------------------------------------------------------*/

    FFWREC.XPLCD = " "; /* Clear line code*/
    FFWREC.XPLABRV = " "; /* Clear line abrv*/
    FFWREC.SYBSTGNB = " "; /* Clear style grp code*/
    FFWREC.SYBSTGNM = " "; /* Clear style grp name*/
    FFWREC.SY1STNBR = " "; /* Clear style code*/
    FFWREC.SY1SSTNM = " "; /* Clear style name*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FE0F001; /* Converse the main process*/


    FE0F001: FE0F001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FE0F001; /* Converse the main process*/


  end // end main
end // end FE0F

// Main process to display a map
Function FE0F001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FE0F100(); /* Obtain the data to display*/

  FE0F200(); /* Format and display the map*/

  FE0F300(); /* Check attention identifier*/

  FE0F400(); /* Reset fields to normal intensity*/

  FE0F500(); /* Verify the entered data*/

  FE0F600(); /* Process valid input request*/


end // end FE0F001

// Obtain the data to display
Function FE0F100()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (FE0FW00.FE0FWSWR != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Retrieve pre-build percents for safety stock class A, B, C,*/
   /* and D from dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  FE0F110(); /* process safety stock class A*/

  FE0F120(); /* process safety stock class B*/

  FE0F130(); /* process safety stock class C*/

  FE0F140(); /* process safety stock class D*/

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  FE0FW00.FE0FWSWR = "N"; /* Request for data switch*/

  FE0FW00.FE0FWCRP = 1; /* Reset map switch*/


end // end FE0F100

// Process safety stock class A
Function FE0F110()
   /* ------------------------------------------------------------*/
   /* select and open cursor for dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  set FGBREC empty; /* Clear the table row*/
  FGBREC.SY2SSCIN = "A"; /* Safety stock class*/
  FE0FW00.FE0FWCSR = "N"; /* Initialize end of cursor switch*/

  FE0FS01(); /* Select and open the cursor*/

  FE0FS02(); /* Fetch the next row in the cursor*/

  while (FE0FW00.FE0FWCSR == "N") /* Until end of the cursor*/

    FE0FS03(); /* Save the data into working storage*/
    FE0FS02(); /* Fetch the next row in the cursor*/

  end

  FE0FS04(); /* Close the cursor*/

end // end FE0F110

// Process safety stock class B
Function FE0F120()
   /* ------------------------------------------------------------*/
   /* select and open cursor for dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  set FGBREC empty; /* Clear the table row*/
  FGBREC.SY2SSCIN = "B"; /* Safety stock class*/
  FE0FW00.FE0FWCSR = "N"; /* Initialize the end of cursor switch*/

  FE0FS01(); /* Select and open the cursor*/

  FE0FS02(); /* Fetch the next row in the cursor*/

  while (FE0FW00.FE0FWCSR == "N") /* Until end of the cursor*/

    FE0FS03(); /* Save the data into working storage*/
    FE0FS02(); /* Fetch the next row in the cursor*/

  end

  FE0FS04(); /* Close the cursor*/

end // end FE0F120

// Process safety stock class C
Function FE0F130()
   /* ------------------------------------------------------------*/
   /* select and open cursor for dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  set FGBREC empty; /* Clear the table row*/
  FGBREC.SY2SSCIN = "C"; /* Safety stock class*/
  FE0FW00.FE0FWCSR = "N"; /* Initialize the end of cursor switch*/

  FE0FS01(); /* Select and open the cursor*/

  FE0FS02(); /* Fetch the next row in the cursor*/

  while (FE0FW00.FE0FWCSR == "N") /* Until end of the cursor*/

    FE0FS03(); /* Save the data into working storage*/
    FE0FS02(); /* Fetch the next row in the cursor*/

  end

  FE0FS04(); /* Close the cursor*/

end // end FE0F130

// Process safety stock class D
Function FE0F140()
   /* ------------------------------------------------------------*/
   /* select and open cursor for dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  set FGBREC empty; /* Clear the table row*/
  FGBREC.SY2SSCIN = "D"; /* Safety stock class*/
  FE0FW00.FE0FWCSR = "N"; /* Initialize the end of cursor switch*/

  FE0FS01(); /* Select and open the cursor*/

  FE0FS02(); /* Fetch the next row in the cursor*/

  while (FE0FW00.FE0FWCSR == "N") /* Until end of the cursor*/

    FE0FS03(); /* Save the data into working storage*/
    FE0FS02(); /* Fetch the next row in the cursor*/

  end

  FE0FS04(); /* Close the cursor*/

end // end FE0F140

// Format and converse the map
Function FE0F200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    FFWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

  end

   /* ------------------------------------------------------------*/
   /* If data requested or no error, format the data to display.*/
   /* ------------------------------------------------------------*/

  if (FE0FW00.FE0FWSWR == "Y" /* If data was requested*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (FE0FW00.FE0FWSWF == "Y") /* Map must be formatted*/
      FE0F210(); /* Format the data on the map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FE0FM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FE0FM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FE0FM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FFWREC.XXXMSGNO != 0) /* Message to display*/

    FE0FM001.XXXMODID = FFWREC.XXXMODID; /* Module identification*/
    if (FFWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FFWREC.XXXMSGNO);
    end /* Message number*/

    set FE0FM001 alarm; /* Indicate sound alarm*/

  end

  converse FE0FM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FFWREC.XXXMODID = " "; /* Module identification*/
  FFWREC.XXXMSGNO = 0; /* Message number*/

  COMMAREA.CATOAP = FE0FM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FE0FM001.CAITEM; /* Application data*/


end // end FE0F200

// Format the display data
Function FE0F210()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set FE0FM001 initial; /* M001 input/output area*/

  FE0FW00.FE0FWSWF = "N"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* format the page information on the screen.*/
   /* ------------------------------------------------------------*/

  set FE0FM001.XXXLITPG skip; /* "PAGE" literal*/
  set FE0FM001.XXXLITOF skip; /* "OF" literal*/
  FE0FM001.FE0FMCRP = FE0FW00.FE0FWCRP; /* Current page*/
  FE0FM001.FE0FMTLP = 2; /* Highest page*/

   /* ------------------------------------------------------------*/
   /* Format the data in the map from the display storage.*/
   /* ------------------------------------------------------------*/

  FE0FM001.XPCCD = FFWREC.XPCCD; /* Category*/
  FE0FM001.XPCABRV = FFWREC.XPCABRV; /* Abbreviation*/

  FE0FM001.YPGCD = FFWREC.YPGCD; /* Type*/
  FE0FM001.YPGABRV = FFWREC.YPGABRV; /* Abbreviation*/

  if (FE0FW00.FE0FWCRP == 1) /* page 1*/
    FE0F211(); /* Format page 1*/
  else
    FE0F212(); /* Format page 2*/
  end

end // end FE0F210

// Format page 1
Function FE0F211()
   /* ------------------------------------------------------------*/
   /* format safety stock class A.*/
   /* ------------------------------------------------------------*/

  if (FE0FW01.FE0FWCLS[1] == " ") /* no existing data*/
    FE0FM001.FE0FMCLS[1] = "A";
    FE0FM001.FE0FMSFT[1] = 0;
    FE0FM001.FE0FMSFT[2] = 0;
    FE0FM001.FE0FMSFT[3] = 0;
    FE0FM001.FE0FMSFT[4] = 0;
  else
    FE0FM001.FE0FMCLS[1] = FE0FW01.FE0FWCLS[1]; /* Safety stock class*/
    FE0FM001.FE0FMSFT[1] = FE0FW01.FE0FWSFT[1]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[2] = FE0FW01.FE0FWSFT[2]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[3] = FE0FW01.FE0FWSFT[3]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[4] = FE0FW01.FE0FWSFT[4]; /* Safety stock sls pct*/
  end

   /* -------------------------------------------*/
   /* move 5 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 6)

    FE0FM001.FE0FM5P1[FE0FWIXM] = FE0FW01.FE0FWA5P[FE0FWIXM]; /* 5 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 4 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 5)

    FE0FM001.FE0FM4P1[FE0FWIXM] = FE0FW01.FE0FWA4P[FE0FWIXM]; /* 4 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 3 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 4)

    FE0FM001.FE0FM3P1[FE0FWIXM] = FE0FW01.FE0FWA3P[FE0FWIXM]; /* 3 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 2 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 3)

    FE0FM001.FE0FM2P1[FE0FWIXM] = FE0FW01.FE0FWA2P[FE0FWIXM]; /* 2 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* ------------------------------------------------------------*/
   /* format safety stock class B.*/
   /* ------------------------------------------------------------*/

  if (FE0FW01.FE0FWCLS[2] == " ") /* no existing data*/
    FE0FM001.FE0FMCLS[2] = "B";
    FE0FM001.FE0FMSFT[5] = 0;
    FE0FM001.FE0FMSFT[6] = 0;
    FE0FM001.FE0FMSFT[7] = 0;
    FE0FM001.FE0FMSFT[8] = 0;
  else
    FE0FM001.FE0FMCLS[2] = FE0FW01.FE0FWCLS[2]; /* Safety stock class*/
    FE0FM001.FE0FMSFT[5] = FE0FW01.FE0FWSFT[5]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[6] = FE0FW01.FE0FWSFT[6]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[7] = FE0FW01.FE0FWSFT[7]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[8] = FE0FW01.FE0FWSFT[8]; /* Safety stock sls pct*/
  end

   /* -------------------------------------------*/
   /* move 5 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 6)

    FE0FM001.FE0FM5P2[FE0FWIXM] = FE0FW01.FE0FWB5P[FE0FWIXM]; /* 5 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 4 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 5)

    FE0FM001.FE0FM4P2[FE0FWIXM] = FE0FW01.FE0FWB4P[FE0FWIXM]; /* 4 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 3 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 4)

    FE0FM001.FE0FM3P2[FE0FWIXM] = FE0FW01.FE0FWB3P[FE0FWIXM]; /* 3 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 2 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 3)

    FE0FM001.FE0FM2P2[FE0FWIXM] = FE0FW01.FE0FWB2P[FE0FWIXM]; /* 2 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

end // end FE0F211

// Format page 2
Function FE0F212()
   /* ------------------------------------------------------------*/
   /* format safety stock class C.*/
   /* ------------------------------------------------------------*/

  if (FE0FW01.FE0FWCLS[3] == " ") /* no existing data*/
    FE0FM001.FE0FMCLS[1] = "C";
    FE0FM001.FE0FMSFT[1] = 0;
    FE0FM001.FE0FMSFT[2] = 0;
    FE0FM001.FE0FMSFT[3] = 0;
    FE0FM001.FE0FMSFT[4] = 0;
  else
    FE0FM001.FE0FMCLS[1] = FE0FW01.FE0FWCLS[3]; /* Safety stock class*/
    FE0FM001.FE0FMSFT[1] = FE0FW01.FE0FWSFT[9]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[2] = FE0FW01.FE0FWSFT[10]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[3] = FE0FW01.FE0FWSFT[11]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[4] = FE0FW01.FE0FWSFT[12]; /* Safety stock sls pct*/
  end

   /* -------------------------------------------*/
   /* move 5 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 6)

    FE0FM001.FE0FM5P1[FE0FWIXM] = FE0FW01.FE0FWC5P[FE0FWIXM];
                                   /* 5 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 4 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 5)

    FE0FM001.FE0FM4P1[FE0FWIXM] = FE0FW01.FE0FWC4P[FE0FWIXM];
                                   /* 4 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 3 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 4)

    FE0FM001.FE0FM3P1[FE0FWIXM] = FE0FW01.FE0FWC3P[FE0FWIXM];
                                   /* 3 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 2 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 3)

    FE0FM001.FE0FM2P1[FE0FWIXM] = FE0FW01.FE0FWC2P[FE0FWIXM];
                                   /* 2 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* ------------------------------------------------------------*/
   /* format safety stock class D.*/
   /* ------------------------------------------------------------*/

  if (FE0FW01.FE0FWCLS[4] == " ") /* no existing data*/
    FE0FM001.FE0FMCLS[2] = "D";
    FE0FM001.FE0FMSFT[5] = 0;
    FE0FM001.FE0FMSFT[6] = 0;
    FE0FM001.FE0FMSFT[7] = 0;
    FE0FM001.FE0FMSFT[8] = 0;
  else
    FE0FM001.FE0FMCLS[2] = FE0FW01.FE0FWCLS[4]; /* Safety stock class*/
    FE0FM001.FE0FMSFT[5] = FE0FW01.FE0FWSFT[13]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[6] = FE0FW01.FE0FWSFT[14]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[7] = FE0FW01.FE0FWSFT[15]; /* Safety stock sls pct*/
    FE0FM001.FE0FMSFT[8] = FE0FW01.FE0FWSFT[16]; /* Safety stock sls pct*/
  end

   /* -------------------------------------------*/
   /* move 5 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 6)

    FE0FM001.FE0FM5P2[FE0FWIXM] = FE0FW01.FE0FWD5P[FE0FWIXM];
                                   /* 5 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 4 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 5)

    FE0FM001.FE0FM4P2[FE0FWIXM] = FE0FW01.FE0FWD4P[FE0FWIXM];
                                   /* 4 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 3 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 4)

    FE0FM001.FE0FM3P2[FE0FWIXM] = FE0FW01.FE0FWD3P[FE0FWIXM];
                                   /* 3 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

   /* -------------------------------------------*/
   /* move 2 month pre-build percents.*/
   /* -------------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 3)

    FE0FM001.FE0FM2P2[FE0FWIXM] = FE0FW01.FE0FWD2P[FE0FWIXM];
                                   /* 2 mo pcts*/
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

end // end FE0F212

// Check attention identifier
Function FE0F300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (FE0FW00.FE0FWSWR == "Y") /* Request for data*/
      set FE0FW01 empty; /* M001 display storage*/
    end

    FE0FW00.FE0FWSWF = "Y"; /* Format the map switch*/
    FE0FW00.FE0FWSWR = "N"; /* Request for data switch*/

    move "N" to FE0FW01.FE0FWA5F[1] for all; /* Class A 5 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWA4F[1] for all; /* Class A 4 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWA3F[1] for all; /* Class A 3 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWA2F[1] for all; /* Class A 2 mo pre-build chng flag*/

    move "N" to FE0FW01.FE0FWB5F[1] for all; /* Class B 5 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWB4F[1] for all; /* Class B 4 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWB3F[1] for all; /* Class B 3 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWB2F[1] for all; /* Class B 2 mo pre-build chng flag*/

    move "N" to FE0FW01.FE0FWC5F[1] for all; /* Class C 5 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWC4F[1] for all; /* Class C 4 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWC3F[1] for all; /* Class C 3 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWC2F[1] for all; /* Class C 2 mo pre-build chng flag*/

    move "N" to FE0FW01.FE0FWD5F[1] for all; /* Class D 5 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWD4F[1] for all; /* Class D 4 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWD3F[1] for all; /* Class D 3 mo pre-build chng flag*/
    move "N" to FE0FW01.FE0FWD2F[1] for all; /* Class D 2 mo pre-build chng flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSFFS01(); /* Exit to another application*/

      set FE0FM001.CATOAP cursor, bold; /* Highlight*/

    else

      FFWREC.XXXMODID = "300"; /* Module identification*/
      converseLib.validationFailed(36); /* Indicate PF key not valid*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf5 /* or PF5 was pressed*/
   || converseVar.eventKey is pf13) /* or pf14 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FE0FM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FF03"; /* TO application*/
    end

    if (converseVar.eventKey is pf13) /* pf14 was pressed*/
      COMMAREA.CATOAP = "FF0Y"; /* TO application*/
    end

    XSFFS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13) /* and PF13 was not pressed*/

    FFWREC.XXXMODID = "300"; /* Module identification*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end FE0F300

// Reset highlighted fields
Function FE0F400()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FE0FM001.XPCCD initialAttributes; /* Category*/
  set FE0FM001.YPGCD initialAttributes; /* Type group*/

  set FE0FM001.CATOAP initialAttributes; /* TO application*/
  set FE0FM001.CAITEM initialAttributes; /* Application data*/

  set FE0FM001.FE0FMSFT[1] initialAttributes; /* Safety stock class A or C pct*/
  set FE0FM001.FE0FMSFT[2] initialAttributes; /* Safety stock class A or C pct*/
  set FE0FM001.FE0FMSFT[3] initialAttributes; /* Safety stock class A or C pct*/
  set FE0FM001.FE0FMSFT[4] initialAttributes; /* Safety stock class A or C pct*/

  set FE0FM001.FE0FM5P1[1] initialAttributes;
                                   /* class A or C 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P1[2] initialAttributes;
                                   /* class A or C 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P1[3] initialAttributes;
                                   /* class A or C 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P1[4] initialAttributes;
                                   /* class A or C 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P1[5] initialAttributes;
                                   /* class A or C 5 mo pre-build pct*/

  set FE0FM001.FE0FM4P1[1] initialAttributes;
                                   /* class A or C 4 mo pre-build pct*/
  set FE0FM001.FE0FM4P1[2] initialAttributes;
                                   /* class A or C 4 mo pre-build pct*/
  set FE0FM001.FE0FM4P1[3] initialAttributes;
                                   /* class A or C 4 mo pre-build pct*/
  set FE0FM001.FE0FM4P1[4] initialAttributes;
                                   /* class A or C 4 mo pre-build pct*/

  set FE0FM001.FE0FM4P1[1] initialAttributes;
                                   /* class A or C 3 mo pre-build pct*/
  set FE0FM001.FE0FM4P1[2] initialAttributes;
                                   /* class A or C 3 mo pre-build pct*/
  set FE0FM001.FE0FM4P1[3] initialAttributes;
                                   /* class A or C 3 mo pre-build pct*/

  set FE0FM001.FE0FM4P1[1] initialAttributes;
                                   /* class A or C 2 mo pre-build pct*/
  set FE0FM001.FE0FM4P1[2] initialAttributes;
                                   /* class A or C 2 mo pre-build pct*/

  set FE0FM001.FE0FMSFT[5] initialAttributes; /* Safety stock class B or D pct*/
  set FE0FM001.FE0FMSFT[6] initialAttributes; /* Safety stock class B or D pct*/
  set FE0FM001.FE0FMSFT[7] initialAttributes; /* Safety stock class B or D pct*/
  set FE0FM001.FE0FMSFT[8] initialAttributes; /* Safety stock class B or D pct*/

  set FE0FM001.FE0FM5P2[1] initialAttributes; /* class B or D 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P2[2] initialAttributes; /* class B or D 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P2[3] initialAttributes; /* class B or D 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P2[4] initialAttributes; /* class B or D 5 mo pre-build pct*/
  set FE0FM001.FE0FM5P2[5] initialAttributes; /* class B or D 5 mo pre-build pct*/

  set FE0FM001.FE0FM4P2[1] initialAttributes; /* class B or D 4 mo pre-build pct*/
  set FE0FM001.FE0FM4P2[2] initialAttributes; /* class B or D 4 mo pre-build pct*/
  set FE0FM001.FE0FM4P2[3] initialAttributes; /* class B or D 4 mo pre-build pct*/
  set FE0FM001.FE0FM4P2[4] initialAttributes; /* class B or D 4 mo pre-build pct*/

  set FE0FM001.FE0FM4P2[1] initialAttributes; /* class B or D 3 mo pre-build pct*/
  set FE0FM001.FE0FM4P2[2] initialAttributes; /* class B or D 3 mo pre-build pct*/
  set FE0FM001.FE0FM4P2[3] initialAttributes; /* class B or D 3 mo pre-build pct*/

  set FE0FM001.FE0FM4P2[1] initialAttributes; /* class B or D 2 mo pre-build pct*/
  set FE0FM001.FE0FM4P2[2] initialAttributes; /* class B or D 2 mo pre-build pct*/

   /* ------------------------------------------------------------*/
   /* If no lists were requested, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.XPCCD == "?" /* Category list requested*/
   || FE0FM001.YPGCD == "?") /* Type list requested*/

    if (converseVar.eventKey not enter) /* ENTER was not pressed*/

      FFWREC.XXXMODID = "400"; /* Module identification*/
      converseLib.validationFailed(116); /* Indicate PF key not valid*/

      exit stack; /* Exit to display map*/

    end

  else

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of category codes.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.XPCCD == "?") /* Category list requested*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "  CATEGORY"; /* Heading*/
    XX0XW02.XGPCD = COMMAREA.XGPCD; /* gpc cd*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      FE0FM001.XPCCD = FFWREC.XPCCD; /* Restore prior code*/
      FE0FM001.XPCABRV = FFWREC.XPCABRV; /* Abbreviation*/
    else
      FE0FM001.XPCCD = XPCTBL.XPCCD[XX0XWPIX]; /* Selected code*/
      FE0FM001.XPCABRV = XPCTBL.XPCABRV[XX0XWPIX]; /* Abbreviation*/

    end

    set FE0FM001.XPCCD cursor; /* Establish cursor position*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of type codes.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.YPGCD == "?") /* Line list requested*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "  TYPE"; /* Heading*/
    XX0XW02.YPGFFFL = "Y"; /* flag*/
    XX0XW02.XGPCD = COMMAREA.XGPCD; /* gpc cd*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYPG01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      FE0FM001.YPGCD = FFWREC.YPGCD; /* Restore prior code*/
      FE0FM001.YPGABRV = FFWREC.YPGABRV; /* Abbreviation*/
    else
      FE0FM001.YPGCD = YPGTBL.YPGCD[XX0XWPIX]; /* Selected code*/
      FE0FM001.YPGABRV = YPGTBL.YPGABRV[XX0XWPIX]; /* Abbreviation*/

    end

    set FE0FM001.YPGCD cursor; /* Establish cursor position*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();
   /* Clear screen before display*/

  FFWREC.XXXMODID = "400"; /* Module identification*/
  converseLib.validationFailed(97); /* Indicate press ENTER*/

  exit stack; /* Exit to display map*/


end // end FE0F400

// Verify the entered data
Function FE0F500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.CAITEM > " ") /* Application data was entered*/

    FFWREC.XXXMODID = "500"; /* Module identification*/
    set FE0FM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(40); /* Enter only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid request to scroll was entered.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    FE0F510(); /* Verify scroll request*/

  else

    /* -------------------------------------------------------------*/
     /* Verify the stock class prebuild months*/
    /* -------------------------------------------------------------*/

    FE0F515();

    /* ------------------------------------------------------------*/
     /* If the search key was changed, verify the key fields.*/
    /* ------------------------------------------------------------*/

    if (FE0FM001.XPCCD != FFWREC.XPCCD /* category changed*/
     || FE0FM001.YPGCD != FFWREC.YPGCD /* or type changed*/
     || FE0FM001.XPCCD == " "          /* or category missing*/
     || FE0FM001.YPGCD == " ")         /* or type missing*/

      FE0F520(); /* Verify the key fields*/

      FE0F530(); /* Verify Relationships*/

    end

    /* ------------------------------------------------------------*/
     /* If the percent field was changed, verify the entered*/
     /* percent and total percent for each row.*/
    /* ------------------------------------------------------------*/

    FE0F540(); /* Verify entered percent*/

  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end FE0F500

// Verify scroll request
Function FE0F510()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FE0FW00.FE0FWCRP == 1)      /* and current page is 1*/

    FFWREC.XXXMODID = "510"; /* Module identification*/
    converseLib.validationFailed(6); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FE0FW00.FE0FWCRP == 2)      /* and current page is 2*/

    FFWREC.XXXMODID = "510"; /* Module identification*/
    converseLib.validationFailed(7); /* No more pages to display*/

  end

   /* ------------------------------------------------------------*/
   /* Highlight any key field that was changed.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.XPCCD != FFWREC.XPCCD) /* Category changed*/

    FFWREC.XXXMODID = "510"; /* Module identification*/
    set FE0FM001.XPCCD cursor, bold; /* Highlight*/
    converseLib.validationFailed(111); /* Modifications not allowed*/

  end

  if (FE0FM001.YPGCD != FFWREC.YPGCD) /* Type changed*/

    FFWREC.XXXMODID = "510"; /* Module identification*/
    set FE0FM001.YPGCD cursor, bold; /* Highlight*/
    converseLib.validationFailed(111); /* Modifications not allowed*/

  end

   /* ------------------------------------------------------------*/
   /* Highlight any pct field that was changed.*/
   /* ------------------------------------------------------------*/

  FE0F511(); /* check the percent fields*/

end // end FE0F510

// Check the modified pct field
Function FE0F511()
   /* ------------------------------------------------------------*/
   /* Verify the 2nd safety stock class pre-build percent*/
   /* ------------------------------------------------------------*/

   /* -------------------------------*/
   /* Verify 2 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 2;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
      if (FE0FM001.FE0FM2P2[FE0FWIXM] != FE0FW01.FE0FWB2P[FE0FWIXM])
        set FE0FM001.FE0FM2P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class D*/
      if (FE0FM001.FE0FM2P2[FE0FWIXM] != FE0FW01.FE0FWD2P[FE0FWIXM])
        set FE0FM001.FE0FM2P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 3 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 3;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
      if (FE0FM001.FE0FM3P2[FE0FWIXM] != FE0FW01.FE0FWB3P[FE0FWIXM])
        set FE0FM001.FE0FM3P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class D*/
      if (FE0FM001.FE0FM3P2[FE0FWIXM] != FE0FW01.FE0FWD3P[FE0FWIXM])
        set FE0FM001.FE0FM3P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 4 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 4;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
      if (FE0FM001.FE0FM4P2[FE0FWIXM] != FE0FW01.FE0FWB4P[FE0FWIXM])
        set FE0FM001.FE0FM4P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class D*/
      if (FE0FM001.FE0FM4P2[FE0FWIXM] != FE0FW01.FE0FWD4P[FE0FWIXM])
        set FE0FM001.FE0FM4P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 5 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
      if (FE0FM001.FE0FM5P2[FE0FWIXM] != FE0FW01.FE0FWB5P[FE0FWIXM])
        set FE0FM001.FE0FM5P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class D*/
      if (FE0FM001.FE0FM5P2[FE0FWIXM] != FE0FW01.FE0FWD5P[FE0FWIXM])
        set FE0FM001.FE0FM5P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -----------------------------------------*/
   /* Verify safety stock class sales percent*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM < 9)
    if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/

      if (FE0FM001.FE0FMSFT[FE0FWIXM] != FE0FW01.FE0FWSFT[FE0FWIXM])
        set FE0FM001.FE0FMSFT[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class D*/
      FE0FW00.FE0FWIX2 = FE0FW00.FE0FWIXM + 8;
      if (FE0FM001.FE0FMSFT[FE0FWIXM] != FE0FW01.FE0FWSFT[FE0FWIX2])
        set FE0FM001.FE0FMSFT[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end
   /* ------------------------------------------------------------*/
   /* Verify the 1st safety stock class pre-build percent*/
   /* ------------------------------------------------------------*/

   /* -------------------------------*/
   /* Verify 2 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 2;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
      if (FE0FM001.FE0FM2P1[FE0FWIXM] != FE0FW01.FE0FWA2P[FE0FWIXM])
        set FE0FM001.FE0FM2P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class C*/
      if (FE0FM001.FE0FM2P1[FE0FWIXM] != FE0FW01.FE0FWC2P[FE0FWIXM])
        set FE0FM001.FE0FM2P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 3 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 3;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
      if (FE0FM001.FE0FM3P1[FE0FWIXM] != FE0FW01.FE0FWA3P[FE0FWIXM])
        set FE0FM001.FE0FM3P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class C*/
      if (FE0FM001.FE0FM3P1[FE0FWIXM] != FE0FW01.FE0FWC3P[FE0FWIXM])
        set FE0FM001.FE0FM3P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 4 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 4;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
      if (FE0FM001.FE0FM4P1[FE0FWIXM] != FE0FW01.FE0FWA4P[FE0FWIXM])
        set FE0FM001.FE0FM4P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class C*/
      if (FE0FM001.FE0FM4P1[FE0FWIXM] != FE0FW01.FE0FWC4P[FE0FWIXM])
        set FE0FM001.FE0FM4P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 5 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
      if (FE0FM001.FE0FM5P1[FE0FWIXM] != FE0FW01.FE0FWA5P[FE0FWIXM])
        set FE0FM001.FE0FM5P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class C*/
      if (FE0FM001.FE0FM5P1[FE0FWIXM] != FE0FW01.FE0FWC5P[FE0FWIXM])
        set FE0FM001.FE0FM5P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -----------------------------------------*/
   /* Verify safety stock class sales percent*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 1;

  while (FE0FW00.FE0FWIXM < 5)
    if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/

      if (FE0FM001.FE0FMSFT[FE0FWIXM] != FE0FW01.FE0FWSFT[FE0FWIXM])
        set FE0FM001.FE0FMSFT[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    else /* Safety stock class C*/
      FE0FW00.FE0FWIX2 = FE0FW00.FE0FWIXM + 8;
      if (FE0FM001.FE0FMSFT[FE0FWIXM] != FE0FW01.FE0FWSFT[FE0FWIX2])
        set FE0FM001.FE0FMSFT[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(5); /* Indicate modification not allowed*/
      end
    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM + 1;

  end

end // end FE0F511

// Verify stk cls prebuild months
Function FE0F515()
   /* ------------------------------------------------------------*/
   /* Verify stock class B or D*/
   /* ------------------------------------------------------------*/

   /* -------------------------------*/
   /* Verify 2 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 2;
  FE0FW00.FE0FWIX1 = 1;

  if (FE0FM001.FE0FM2P2[FE0FWIXM] < FE0FM001.FE0FM2P2[FE0FWIX1])
    set FE0FM001.FE0FM2P2[FE0FWIXM] cursor, bold; /* Highlight*/
    FFWREC.XXXMODID = "511"; /* Module id*/
    converseLib.validationFailed(486); /* Indicate modification not allowed*/
  end

   /* -------------------------------*/
   /* Verify 3 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 3;

  while (FE0FW00.FE0FWIXM > 1)

    FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIXM - 1;

    while (FE0FW00.FE0FWIX1 > 0)

      if (FE0FM001.FE0FM3P2[FE0FWIXM] < FE0FM001.FE0FM3P2[FE0FWIX1])
        set FE0FM001.FE0FM3P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(486); /* Indicate modification not allowed*/
      end

      FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIX1 - 1;

    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 4 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 4;

  while (FE0FW00.FE0FWIXM > 1)

    FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIXM - 1;

    while (FE0FW00.FE0FWIX1 > 0)

      if (FE0FM001.FE0FM4P2[FE0FWIXM] < FE0FM001.FE0FM4P2[FE0FWIX1])
        set FE0FM001.FE0FM4P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(486); /* Indicate modification not allowed*/
      end

      FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIX1 - 1;

    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 5 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM > 1)

    FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIXM - 1;

    while (FE0FW00.FE0FWIX1 > 0)

      if (FE0FM001.FE0FM5P2[FE0FWIXM] < FE0FM001.FE0FM5P2[FE0FWIX1])
        set FE0FM001.FE0FM5P2[FE0FWIXM] cursor, bold; /* Highlight*/
        FFWREC.XXXMODID = "511"; /* Module id*/
        converseLib.validationFailed(486); /* Indicate modification not allowed*/
      end

      FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIX1 - 1;

    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end


   /* ------------------------------------------------------------*/
   /* Verify stock class A or C*/
   /* ------------------------------------------------------------*/

   /* -------------------------------*/
   /* Verify 2 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 2;
  FE0FW00.FE0FWIX1 = 1;

  if (FE0FM001.FE0FM2P1[FE0FWIXM] < FE0FM001.FE0FM2P1[FE0FWIX1])
    set FE0FM001.FE0FM2P1[FE0FWIXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(486); /* Indicate modification not allowed*/
  end

   /* -------------------------------*/
   /* Verify 3 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 3;

  while (FE0FW00.FE0FWIXM > 1)

    FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIXM - 1;

    while (FE0FW00.FE0FWIX1 > 0)

      if (FE0FM001.FE0FM3P1[FE0FWIXM] < FE0FM001.FE0FM3P1[FE0FWIX1])
        set FE0FM001.FE0FM3P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(486); /* Indicate modification not allowed*/
      end

      FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIX1 - 1;

    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 4 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 4;

  while (FE0FW00.FE0FWIXM > 1)

    FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIXM - 1;

    while (FE0FW00.FE0FWIX1 > 0)

      if (FE0FM001.FE0FM4P1[FE0FWIXM] < FE0FM001.FE0FM4P1[FE0FWIX1])
        set FE0FM001.FE0FM4P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(486); /* Indicate modification not allowed*/
      end

      FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIX1 - 1;

    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 5 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM > 1)

    FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIXM - 1;

    while (FE0FW00.FE0FWIX1 > 0)

      if (FE0FM001.FE0FM5P1[FE0FWIXM] < FE0FM001.FE0FM5P1[FE0FWIX1])
        set FE0FM001.FE0FM5P1[FE0FWIXM] cursor, bold; /* Highlight*/
        converseLib.validationFailed(486); /* Indicate modification not allowed*/
      end

      FE0FW00.FE0FWIX1 = FE0FW00.FE0FWIX1 - 1;

    end

    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

end // end FE0F515

// Verify the key fields
Function FE0F520()
   /* ------------------------------------------------------------*/
   /* If type was entered, verify the code.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.YPGCD in YPGTBL.YPGCD           /* Code in table*/
   && YPGTBL.XXXSTAT[sysVar.arrayIndex] == "A" /* and active status*/
   && YPGTBL.YPGFFFL[sysVar.arrayIndex] == "Y") /* and ftwr fcst type group*/

    FE0FM001.YPGABRV = YPGTBL.YPGABRV[sysVar.arrayIndex]; /* Abbreviation*/

  else

    /* ------------------------------------------------------------*/
     /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    FE0FM001.YPGABRV = " "; /* Abbreviation*/

    FFWREC.XXXMODID = "520"; /* Module identification*/
    set FE0FM001.YPGCD cursor, bold; /* Highlight*/
    converseLib.validationFailed(118); /* Indicate missing or invalid*/

  end

   /* ------------------------------------------------------------*/
   /* If category was entered, verify the code.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.XPCCD in XPCTBL.XPCCD /* Code in table*/
   && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active status*/

    FE0FM001.XPCABRV = XPCTBL.XPCABRV[sysVar.arrayIndex]; /* Abbreviation*/

  else

    /* ------------------------------------------------------------*/
     /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    FE0FM001.XPCABRV = " "; /* Abbreviation*/

    FFWREC.XXXMODID = "520"; /* Module identification*/
    set FE0FM001.XPCCD cursor, bold; /* Highlight*/
    converseLib.validationFailed(118); /* Indicate missing or invalid*/

  end

end // end FE0F520

// Verify relationship- cat & typ
Function FE0F530()
   /* ------------------------------------------------------------*/
   /* Verify that key is in FFXRF.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* If there are no errors*/

    /* ------------------------------------------------------------*/
     /* Clear the row storage area.*/
    /* ------------------------------------------------------------*/

    set FF2REC empty; /* clear DFCAST.VFFXRF01 record.*/

    /* ------------------------------------------------------------*/
     /* Format keys for call to DFCAST.VFFXRF01.*/
    /* ------------------------------------------------------------*/

    FF2REC.XPCCD = FE0FM001.XPCCD; /* Category*/
    FF2REC.YPGCD = FE0FM001.YPGCD; /* Type*/
    FF2REC.YSMXDV = "10"; /* Domestic*/

    FE0F531(); /* Select a row from DFCAST.VFFXRF01*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found code*/
      FF2REC.YSMXDV = "20"; /* Nil*/
      FE0F531(); /* Select a row from DFCAST.VFFXRF01*/
    end

    /* ------------------------------------------------------------*/
     /* If successful, close FFXRF.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE != 0) /* Row not found code*/

      /* ------------------------------------------------------------*/
       /* If not found, indicate invalid.*/
      /* ------------------------------------------------------------*/

      FFWREC.XXXMODID = "530"; /* Module identification*/
      set FE0FM001.YPGCD bold; /* Highlight*/
      set FE0FM001.XPCCD cursor, bold; /* Highlight*/
      converseLib.validationFailed(203); /* Indicate invalid relationship*/

    end

  end

end // end FE0F530

// Select 'S ' dfcast.vffxrf01
Function FE0F531()
   /* ------------------------------------------------------------*/
   /* Open FFXRF.*/
   /* ------------------------------------------------------------*/

  try
    call "IO4000" ("S ", SQLCA, FF2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FFWREC.XXXMODID = "531"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT A ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFFXRF01"; /* Table view name*/
  TA1REC.TA1TBLKE = FF2REC.FF2KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FE0F531

// Verify entered percent
Function FE0F540()
   /* ------------------------------------------------------------*/
   /* Verify the 2nd safety stock class pre-build percent*/
   /* ------------------------------------------------------------*/

   /* -------------------------------*/
   /* Verify 2 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 2;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM2P2[FE0FWIXM] < 0
     || FE0FM001.FE0FM2P2[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM2P2[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
        if (FE0FM001.FE0FM2P2[FE0FWIXM] != FE0FW01.FE0FWB2P[FE0FWIXM])
          FE0FW01.FE0FWB2F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWB2F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      else /* Safety stock class D*/
        if (FE0FM001.FE0FM2P2[FE0FWIXM] != FE0FW01.FE0FWD2P[FE0FWIXM])
          FE0FW01.FE0FWD2F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWD2F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 3 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 3;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM3P2[FE0FWIXM] < 0
     || FE0FM001.FE0FM3P2[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM3P2[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
        if (FE0FM001.FE0FM3P2[FE0FWIXM] != FE0FW01.FE0FWB3P[FE0FWIXM])
          FE0FW01.FE0FWB3F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWB3F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      else /* Safety stock class D*/
        if (FE0FM001.FE0FM3P2[FE0FWIXM] != FE0FW01.FE0FWD3P[FE0FWIXM])
          FE0FW01.FE0FWD3F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWD3F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 4 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 4;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM4P2[FE0FWIXM] < 0
     || FE0FM001.FE0FM4P2[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM4P2[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
        if (FE0FM001.FE0FM4P2[FE0FWIXM] != FE0FW01.FE0FWB4P[FE0FWIXM])
          FE0FW01.FE0FWB4F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWB4F[FE0FWIXM] = "N"; /* reset pct changed flag*/
        end
      else /* Safety stock class D*/
        if (FE0FM001.FE0FM4P2[FE0FWIXM] != FE0FW01.FE0FWD4P[FE0FWIXM])
          FE0FW01.FE0FWD4F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWD4F[FE0FWIXM] = "N"; /* reset pct changed flag*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 5 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM5P2[FE0FWIXM] < 0
     || FE0FM001.FE0FM5P2[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM5P2[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[2] == "B") /* Safety stock class B*/
        if (FE0FM001.FE0FM5P2[FE0FWIXM] != FE0FW01.FE0FWB5P[FE0FWIXM])
          FE0FW01.FE0FWB5F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWB5F[FE0FWIXM] = "N"; /* reset pct changed flag*/
        end
      else /* Safety stock class D*/
        if (FE0FM001.FE0FM5P2[FE0FWIXM] != FE0FW01.FE0FWD5P[FE0FWIXM])
          FE0FW01.FE0FWD5F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWD5F[FE0FWIXM] = "N"; /* reset pct changed flag*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* ------------------------------------------------------------*/
   /* Verify the 1st safety stock class pre-build percent*/
   /* ------------------------------------------------------------*/

   /* -------------------------------*/
   /* Verify 2 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 2;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM2P1[FE0FWIXM] < 0
     || FE0FM001.FE0FM2P1[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM2P1[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
        if (FE0FM001.FE0FM2P1[FE0FWIXM] != FE0FW01.FE0FWA2P[FE0FWIXM])
          FE0FW01.FE0FWA2F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWA2F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      else /* Safety stock class C*/
        if (FE0FM001.FE0FM2P1[FE0FWIXM] != FE0FW01.FE0FWC2P[FE0FWIXM])
          FE0FW01.FE0FWC2F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWC2F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 3 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 3;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM3P1[FE0FWIXM] < 0
     || FE0FM001.FE0FM3P1[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM3P1[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
        if (FE0FM001.FE0FM3P1[FE0FWIXM] != FE0FW01.FE0FWA3P[FE0FWIXM])
          FE0FW01.FE0FWA3F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWA3F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      else /* Safety stock class C*/
        if (FE0FM001.FE0FM3P1[FE0FWIXM] != FE0FW01.FE0FWC3P[FE0FWIXM])
          FE0FW01.FE0FWC3F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWC3F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 4 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 4;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM4P1[FE0FWIXM] < 0
     || FE0FM001.FE0FM4P1[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM4P1[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
        if (FE0FM001.FE0FM4P1[FE0FWIXM] != FE0FW01.FE0FWA4P[FE0FWIXM])
          FE0FW01.FE0FWA4F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWA4F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      else /* Safety stock class C*/
        if (FE0FM001.FE0FM4P1[FE0FWIXM] != FE0FW01.FE0FWC4P[FE0FWIXM])
          FE0FW01.FE0FWC4F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWC4F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

   /* -------------------------------*/
   /* Verify 5 month pre-build*/
   /* -------------------------------*/

  FE0FW00.FE0FWIXM = 5;

  while (FE0FW00.FE0FWIXM > 0)

    if (FE0FM001.FE0FM5P1[FE0FWIXM] < 0
     || FE0FM001.FE0FM5P1[FE0FWIXM] > 100)
      FFWREC.XXXMODID = "540"; /* Module id*/
      set FE0FM001.FE0FM5P1[FE0FWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid value*/
    else
      if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class A*/
        if (FE0FM001.FE0FM5P1[FE0FWIXM] != FE0FW01.FE0FWA5P[FE0FWIXM])
          FE0FW01.FE0FWA5F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWA5F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      else /* Safety stock class C*/
        if (FE0FM001.FE0FM5P1[FE0FWIXM] != FE0FW01.FE0FWC5P[FE0FWIXM])
          FE0FW01.FE0FWC5F[FE0FWIXM] = "Y"; /* indicate pct changed*/
        else
          FE0FW01.FE0FWC5F[FE0FWIXM] = "N"; /* reset pct changed flg*/
        end
      end
    end
    FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;

  end

end // end FE0F540

// Process valid input request
Function FE0F600()
   /* ------------------------------------------------------------*/
   /* Indicate that the map must be formatted before display.*/
   /* ------------------------------------------------------------*/

  FE0FW00.FE0FWSWF = "Y"; /* Format the map switch*/

   /* ------------------------------------------------------------*/
   /* If the key was changed, update FFWREC, and request data.*/
   /* ------------------------------------------------------------*/

  if (FE0FM001.XPCCD != FFWREC.XPCCD /* category changed*/
   || FE0FM001.YPGCD != FFWREC.YPGCD) /* or type changed*/

    /* ------------------------------------------------------------*/
     /* Update the modifiable data in the FF system commarea.*/
    /* ------------------------------------------------------------*/

    FFWREC.XPCCD = FE0FM001.XPCCD; /* Category code*/
    FFWREC.XPCABRV = FE0FM001.XPCABRV; /* Category name*/
    FFWREC.YPGCD = FE0FM001.YPGCD; /* Type code*/
    FFWREC.YPGABRV = FE0FM001.YPGABRV; /* Type name*/

    set FE0FW01 empty; /* clear up working storage*/
    FE0FW00.FE0FWSWR = "Y"; /* Request for data switch*/

    return; /* Return to previous process*/

  end

   /* ---------------------------------------------------------*/
   /* Save saftey stock sales percent*/
   /* ---------------------------------------------------------*/

  if (FE0FW00.FE0FWCRP == 1) /* 1st page*/

    FE0FW01.FE0FWCLS[1] = "A"; /* Sfty stk class*/
    FE0F605(); /* load class 'A' accumulated pct*/
    FE0FW01.FE0FWCLS[2] = "B"; /* Sfty stk class*/
    FE0F607(); /* load class 'B' accumulated pct*/

  else

    FE0FW01.FE0FWCLS[3] = "C"; /* Sfty stk class*/
    FE0F606(); /* load class 'C' accumulated pct*/
    FE0FW01.FE0FWCLS[4] = "D"; /* Sfty stk class*/
    FE0F608(); /* load class 'D' accumulated pct*/

  end

   /* ------------------------------------------------------------*/
   /* If a scroll backward was requested, decrement the page*/
   /* number and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    FE0FW00.FE0FWCRP = FE0FW00.FE0FWCRP - 1; /* Decrement page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If a scroll forward was requested, increment the page*/
   /* number and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    FE0FW00.FE0FWCRP = FE0FW00.FE0FWCRP + 1; /* Increment page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If ENTER was requested, save the pct fields from map to*/
   /* working storage and save the changes into DFCAST.VPBPCT01*/
   /* table.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter) /* Enter was requested*/

    /* ---------------------------------------------------------*/
     /* Save pre-build percent*/
    /* ---------------------------------------------------------*/

    FE0F610(); /* move pct fields of 1st part*/

    /* ---------------------------------------------------------*/
     /* Obtain current date and time*/
    /* ---------------------------------------------------------*/

    XX0XS01(); /* Obtain current date and time*/

    /* ---------------------------------------------------------*/
     /* If any pre-build pct in safety class A has been changed,*/
     /* update db2 table.*/
    /* ---------------------------------------------------------*/

    FE0F620(); /* Save 5 month pre-build*/

    FE0F630(); /* Save 4 month pre-build*/

    FE0F640(); /* Save 3 month pre-build*/

    FE0F650(); /* Save 2 month pre-build*/

    /* ---------------------------------------------------------*/
     /* If any pre-build pct in safety class B has been changed,*/
     /* update db2 table.*/
    /* ---------------------------------------------------------*/

    FE0F660(); /* Save 5 month pre-build*/

    FE0F670(); /* Save 4 month pre-build*/

    FE0F680(); /* Save 3 month pre-build*/

    FE0F690(); /* Save 2 month pre-build*/

    /* ---------------------------------------------------------*/
     /* If any pre-build pct in safety class C has been changed,*/
     /* update db2 table.*/
    /* ---------------------------------------------------------*/

    FE0F700(); /* Save 5 month pre-build*/

    FE0F710(); /* Save 4 month pre-build*/

    FE0F720(); /* Save 3 month pre-build*/

    FE0F730(); /* Save 2 month pre-build*/

    /* ---------------------------------------------------------*/
     /* If any pre-build pct in safety class D has been changed,*/
     /* update db2 table.*/
    /* ---------------------------------------------------------*/

    FE0F740(); /* Save 5 month pre-build*/

    FE0F750(); /* Save 4 month pre-build*/

    FE0F760(); /* Save 3 month pre-build*/

    FE0F770(); /* Save 2 month pre-build*/

  end

  if (FE0FW00.FE0FWUPD == "Y") /* table being updated*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit(); /* Commit all changes*/

    FFWREC.XXXMODID = "600"; /* Module identification*/
    FFWREC.XXXMSGNO = 32; /* Indicate wrksht fcst saved as master*/

    move "N" to FE0FW01.FE0FWA5F[1] for all;
                                   /* Reset class A 5 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWA4F[1] for all;
                                   /* Reset class A 4 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWA3F[1] for all;
                                   /* Reset class A 3 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWA2F[1] for all;
                                   /* Reset class A 2 month prebuld chg flg*/

    move "N" to FE0FW01.FE0FWB5F[1] for all;
                                   /* Reset class B 5 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWB4F[1] for all;
                                   /* Reset class B 4 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWB3F[1] for all;
                                   /* Reset class B 3 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWB2F[1] for all;
                                   /* Reset class B 2 month prebuld chg flg*/

    move "N" to FE0FW01.FE0FWC5F[1] for all;
                                   /* Reset class C 5 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWC4F[1] for all;
                                   /* Reset class C 4 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWC3F[1] for all;
                                   /* Reset class C 3 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWC2F[1] for all;
                                   /* Reset class C 2 month prebuld chg flg*/

    move "N" to FE0FW01.FE0FWD5F[1] for all;
                                   /* Reset class D 5 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWD4F[1] for all;
                                   /* Reset class D 4 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWD3F[1] for all;
                                   /* Reset class D 3 month prebuld chg flg*/
    move "N" to FE0FW01.FE0FWD2F[1] for all;
                                   /* Reset class D 2 month prebuld chg flg*/

    FE0FW00.FE0FWUPD = "N"; /* Reset the table updated flag*/

  end

end // end FE0F600

// Load accum class 'A' pct
Function FE0F605()
   /* -----------------------------------------*/
   /* 5 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 5;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[1] = FE0FM001.FE0FM5P1[FE0FWIXM];

    if (FE0FM001.FE0FM5P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 4 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 4;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[2] = FE0FM001.FE0FM4P1[FE0FWIXM];

    if (FE0FM001.FE0FM4P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 3 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 3;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[3] = FE0FM001.FE0FM3P1[FE0FWIXM];

    if (FE0FM001.FE0FM3P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 2 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 2;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[4] = FE0FM001.FE0FM2P1[FE0FWIXM];

    if (FE0FM001.FE0FM2P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

end // end FE0F605

// Load accum class 'C' pct
Function FE0F606()
   /* -----------------------------------------*/
   /* 5 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 5;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[9] = FE0FM001.FE0FM5P1[FE0FWIXM];

    if (FE0FM001.FE0FM5P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 4 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 4;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[10] = FE0FM001.FE0FM4P1[FE0FWIXM];

    if (FE0FM001.FE0FM4P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 3 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 3;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[11] = FE0FM001.FE0FM3P1[FE0FWIXM];

    if (FE0FM001.FE0FM3P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 2 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 2;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[12] = FE0FM001.FE0FM2P1[FE0FWIXM];

    if (FE0FM001.FE0FM2P1[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

end // end FE0F606

// Load accum class 'B' pct
Function FE0F607()
   /* -----------------------------------------*/
   /* 5 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 5;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[5] = FE0FM001.FE0FM5P2[FE0FWIXM];

    if (FE0FM001.FE0FM5P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 4 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 4;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[6] = FE0FM001.FE0FM4P2[FE0FWIXM];

    if (FE0FM001.FE0FM4P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 3 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 3;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[7] = FE0FM001.FE0FM3P2[FE0FWIXM];

    if (FE0FM001.FE0FM3P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 2 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 2;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[8] = FE0FM001.FE0FM2P2[FE0FWIXM];

    if (FE0FM001.FE0FM2P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

end // end FE0F607

// Load accum class 'D' pct
Function FE0F608()
   /* -----------------------------------------*/
   /* 5 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 5;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[13] = FE0FM001.FE0FM5P2[FE0FWIXM];

    if (FE0FM001.FE0FM5P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 4 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 4;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[14] = FE0FM001.FE0FM4P2[FE0FWIXM];

    if (FE0FM001.FE0FM4P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 3 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 3;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[15] = FE0FM001.FE0FM3P2[FE0FWIXM];

    if (FE0FM001.FE0FM3P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* -----------------------------------------*/
   /* 2 month pre-build*/
   /* -----------------------------------------*/

  FE0FW00.FE0FWIXM = 2;
  FE0FW00.FE0FWFND = "N";

  while (FE0FW00.FE0FWFND == "N"
   && FE0FW00.FE0FWIXM > 0)

    FE0FW01.FE0FWSFT[16] = FE0FM001.FE0FM2P2[FE0FWIXM];

    if (FE0FM001.FE0FM2P2[FE0FWIXM] > 0)
      FE0FW00.FE0FWFND = "Y";
    else
      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

end // end FE0F608

// Move pct field into work area
Function FE0F610()
   /* ---------------------------------------------------------*/
   /* Save pre-build percent*/
   /* ---------------------------------------------------------*/

   /* ---------------------------------------------------------*/
   /* process 1st part of the screen*/
   /* ---------------------------------------------------------*/

  if (FE0FM001.FE0FMCLS[1] == "A") /* Safety stock class 'A'*/

    /* -----------------------------------------------------*/
     /* Save 5 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 5;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWA5P[FE0FWIXM] = FE0FM001.FE0FM5P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 4 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 4;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWA4P[FE0FWIXM] = FE0FM001.FE0FM4P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 3 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 3;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWA3P[FE0FWIXM] = FE0FM001.FE0FM3P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 2 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 2;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWA2P[FE0FWIXM] = FE0FM001.FE0FM2P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  else /* Safety stock class C*/

    /* -----------------------------------------------------*/
     /* Save 5 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 5;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWC5P[FE0FWIXM] = FE0FM001.FE0FM5P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 4 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 4;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWC4P[FE0FWIXM] = FE0FM001.FE0FM4P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 3 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 3;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWC3P[FE0FWIXM] = FE0FM001.FE0FM3P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 2 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 2;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWC2P[FE0FWIXM] = FE0FM001.FE0FM2P1[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end

   /* ---------------------------------------------------------*/
   /* process 2nd part of the screen*/
   /* ---------------------------------------------------------*/

  if (FE0FW00.FE0FWCRP == 1) /* 1st page*/

    /* -----------------------------------------------------*/
     /* Save 5 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 5;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWB5P[FE0FWIXM] = FE0FM001.FE0FM5P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 4 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 4;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWB4P[FE0FWIXM] = FE0FM001.FE0FM4P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 3 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 3;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWB3P[FE0FWIXM] = FE0FM001.FE0FM3P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 2 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 2;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWB2P[FE0FWIXM] = FE0FM001.FE0FM2P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  else /* Safety stock class D*/

    /* -----------------------------------------------------*/
     /* Save 5 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 5;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWD5P[FE0FWIXM] = FE0FM001.FE0FM5P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 4 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 4;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWD4P[FE0FWIXM] = FE0FM001.FE0FM4P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 3 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 3;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWD3P[FE0FWIXM] = FE0FM001.FE0FM3P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

    /* -----------------------------------------------------*/
     /* Save 2 month pre-build percent*/
    /* -----------------------------------------------------*/

    FE0FW00.FE0FWIXM = 2;

    while (FE0FW00.FE0FWIXM > 0)

      FE0FW01.FE0FWD2P[FE0FWIXM] = FE0FM001.FE0FM2P2[FE0FWIXM];

      FE0FW00.FE0FWIXM = FE0FW00.FE0FWIXM - 1;
    end

  end
end // end FE0F610

// Process class A 5 mo pre-build
Function FE0F620()

   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWA5F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "A"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 5; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F621(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end
end // end FE0F620

// Save class A 5 mo pre-build
Function FE0F621()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[1]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWA5P[5]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWA5P[4];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWA5P[4]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWA5P[3];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWA5P[3]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWA5P[2];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWA5P[2]; /* 4th month pre-build pct*/
  FGBREC.FGBPCT04 = FGBREC.FGBPCT04 - FE0FW01.FE0FWA5P[1];
  FGBREC.FGBPCT05 = FE0FW01.FE0FWA5P[1]; /* 5th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F621

// Process class A 4 mo pre-build
Function FE0F630()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWA4F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "A"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 4; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F631(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F630

// Save class A 4 month pre-build
Function FE0F631()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[2]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWA4P[4]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWA4P[3];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWA4P[3]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWA4P[2];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWA4P[2]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWA4P[1];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWA4P[1]; /* 4th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F631

// Process class A 3 mo pre-build
Function FE0F640()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWA3F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "A"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 3; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F641(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F640

// Save class A 3 month pre-build
Function FE0F641()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[3]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWA3P[3]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWA3P[2];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWA3P[2]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWA3P[1];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWA3P[1]; /* 3rd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F641

// Process class A 2 mo pre-build
Function FE0F650()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWA2F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "A"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 2; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F651(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F650

// Save class A 2 month pre-build
Function FE0F651()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[4]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWA2P[2]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWA2P[1];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWA2P[1]; /* 2nd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F651

// Process class B 5 mo pre-build
Function FE0F660()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWB5F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "B"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 5; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F661(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F660

// Save class B 5 month pre-build
Function FE0F661()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[5]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWB5P[5]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWB5P[4];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWB5P[4]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWB5P[3];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWB5P[3]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWB5P[2];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWB5P[2]; /* 4th month pre-build pct*/
  FGBREC.FGBPCT04 = FGBREC.FGBPCT04 - FE0FW01.FE0FWB5P[1];
  FGBREC.FGBPCT05 = FE0FW01.FE0FWB5P[1]; /* 5th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F661

// Process class B 4 mo pre-build
Function FE0F670()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWB4F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "B"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 4; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F671(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F670

// Save class B 4 month pre-build
Function FE0F671()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[6]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWB4P[4]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWB4P[3];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWB4P[3]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWB4P[2];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWB4P[2]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWB4P[1];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWB4P[1]; /* 4th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F671

// Process class B 3 mo pre-build
Function FE0F680()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWB3F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "B"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 3; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F681(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F680

// Save class B 3 month pre-build
Function FE0F681()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[7]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWB3P[3]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWB3P[2];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWB3P[2]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWB3P[1];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWB3P[1]; /* 3rd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F681

// Process class B 2 mo pre-build
Function FE0F690()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWB2F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "B"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 2; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F691(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F690

// Save class B 2 month pre-build
Function FE0F691()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[8]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWB2P[2]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWB2P[1];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWB2P[1]; /* 2nd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F691

// Process class C 5 mo pre-build
Function FE0F700()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWC5F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "C"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 5; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F701(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F700

// Save class C 5 month pre-build
Function FE0F701()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[9]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWC5P[5]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWC5P[4];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWC5P[4]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWC5P[3];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWC5P[3]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWC5P[2];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWC5P[2]; /* 4th month pre-build pct*/
  FGBREC.FGBPCT04 = FGBREC.FGBPCT04 - FE0FW01.FE0FWC5P[1];
  FGBREC.FGBPCT05 = FE0FW01.FE0FWC5P[1]; /* 5th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F701

// Process class C 4 mo pre-build
Function FE0F710()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWC4F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "C"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 4; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F711(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F710

// Save class C 4 month pre-build
Function FE0F711()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[10]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWC4P[4]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWC4P[3];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWC4P[3]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWC4P[2];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWC4P[2]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWC4P[1];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWC4P[1]; /* 4th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F711

// Process class C 3 mo pre-build
Function FE0F720()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWC3F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "C"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 3; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F721(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F720

// Save class C 3 month pre-build
Function FE0F721()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[11]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWC3P[3]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWC3P[2];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWC3P[2]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWC3P[1];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWC3P[1]; /* 3rd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F721

// Process class C 2 mo pre-build
Function FE0F730()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWC2F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "C"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 2; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F731(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F730

// Save class C 2 month pre-build
Function FE0F731()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[12]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWC2P[2]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWC2P[1];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWC2P[1]; /* 2nd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F731

// Process class D 5 mo pre-build
Function FE0F740()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWD5F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "D"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 5; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F741(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F740

// Save class D 5 month pre-build
Function FE0F741()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[13]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWD5P[5]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWD5P[4];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWD5P[4]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWD5P[3];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWD5P[3]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWD5P[2];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWD5P[2]; /* 4th month pre-build pct*/
  FGBREC.FGBPCT04 = FGBREC.FGBPCT04 - FE0FW01.FE0FWD5P[1];
  FGBREC.FGBPCT05 = FE0FW01.FE0FWD5P[1]; /* 5th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F741

// Process class D 4 mo pre-build
Function FE0F750()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWD4F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "D"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 4; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F751(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F750

// Save class D 4 month pre-build
Function FE0F751()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[14]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWD4P[4]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWD4P[3];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWD4P[3]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWD4P[2];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWD4P[2]; /* 3rd month pre-build pct*/
  FGBREC.FGBPCT03 = FGBREC.FGBPCT03 - FE0FW01.FE0FWD4P[1];
  FGBREC.FGBPCT04 = FE0FW01.FE0FWD4P[1]; /* 4th month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F751

// Process class D 3 mo pre-build
Function FE0F760()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWD3F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "D"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 3; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F761(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F760

// Save class D 3 month pre-build
Function FE0F761()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[15]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWD3P[3]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWD3P[2];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWD3P[2]; /* 2nd month pre-build pct*/
  FGBREC.FGBPCT02 = FGBREC.FGBPCT02 - FE0FW01.FE0FWD3P[1];
  FGBREC.FGBPCT03 = FE0FW01.FE0FWD3P[1]; /* 3rd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F761

// Process class D 2 mo pre-build
Function FE0F770()
   /* -------------------------------------------------------*/
   /* Either safety stock sals pct or any pre-build percent*/
   /* was changed, data base needs to be updated.*/
   /* -------------------------------------------------------*/

  if ("Y" in FE0FW01.FE0FWD2F) /* Pct changed*/

    set FGBREC empty; /* Clear table row*/
    FGBREC.XPCCD = FFWREC.XPCCD; /* Category*/
    FGBREC.YPGCD = FFWREC.YPGCD; /* Type group*/
    FGBREC.SY2SSCIN = "D"; /* Safety stock class indicator*/
    FGBREC.FGBPBNMO = 2; /* Pre-build no of months*/

    FE0FS05(); /* Read VPBPCT01*/

    FE0F771(); /* Save data to table row*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Record not found*/
      FE0FS06(); /* Insert VPBPCT01*/
    else
      FE0FS07(); /* Update VPBPCT01*/
    end

    FE0FW00.FE0FWUPD = "Y"; /* table being updated*/

  end

end // end FE0F770

// Save class D 2 month pre-build
Function FE0F771()
  FGBREC.FGBSLPCT = FE0FW01.FE0FWSFT[16]; /* pre-build sales pct*/
  FGBREC.FGBPCT01 = FE0FW01.FE0FWD2P[2]; /* 1st month pre-build pct*/
  FGBREC.FGBPCT01 = FGBREC.FGBPCT01 - FE0FW01.FE0FWD2P[1];
  FGBREC.FGBPCT02 = FE0FW01.FE0FWD2P[1]; /* 2nd month pre-build pct*/

  FGBREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  FGBREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/

end // end FE0F771

// Select 'S1' - dfcast.vpbpct01
Function FE0FS01()
   /* ------------------------------------------------------------*/
   /* Select set on dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* load fgbrec record - dfcast.vpbpct01*/
   /* ------------------------------------------------------------*/

  FGBREC.XPCCD = FFWREC.XPCCD; /* product category*/
  FGBREC.YPGCD = FFWREC.YPGCD; /* product type group*/

   /* ------------------------------------------------------------*/
   /* select set dfcast.vpbpct01*/
   /* ------------------------------------------------------------*/

  try
    call "IO5940" ("S1", SQLCA, FGBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end
  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FFWREC.XXXMODID = "S01"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET TABLE DFCAST.VPBPCT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPBPCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = FGBREC.FGBKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FE0FS01

// Fetch  'N1' - dfcast.vpbpct01
Function FE0FS02()
   /* ------------------------------------------------------------*/
   /* fetch dfcast.vpbpct01 row*/
   /* ------------------------------------------------------------*/

  try
    call "IO5940" ("N1", SQLCA, FGBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      FE0FW00.FE0FWCSR = "Y"; /* end of cursor*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FFWREC.XXXMODID = "S02"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH N1 DFCAST.VPBPCT01 ROW  ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPBPCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = FGBREC.FGBKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end FE0FS02

// Save data to working storage
Function FE0FS03()
   /* ------------------------------------------------------------*/
   /* move safety stock class A percent values to working storage*/
   /* ------------------------------------------------------------*/

  if (FGBREC.SY2SSCIN == "A") /* Safety stock class A*/

    FE0FW01.FE0FWCLS[1] = FGBREC.SY2SSCIN; /* Safety stock class*/

    if (FGBREC.FGBPBNMO == 5) /* 5 month pre-build*/
      FE0FW01.FE0FWA5P[1] = FGBREC.FGBPCT05; /* 5th mo pre-buld pct*/
      FE0FW01.FE0FWA5P[2] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWA5P[2] = FE0FW01.FE0FWA5P[2] + FE0FW01.FE0FWA5P[1];
      FE0FW01.FE0FWA5P[3] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWA5P[3] = FE0FW01.FE0FWA5P[3] + FE0FW01.FE0FWA5P[2];
      FE0FW01.FE0FWA5P[4] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWA5P[4] = FE0FW01.FE0FWA5P[4] + FE0FW01.FE0FWA5P[3];
      FE0FW01.FE0FWA5P[5] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWA5P[5] = FE0FW01.FE0FWA5P[5] + FE0FW01.FE0FWA5P[4];
      FE0FW01.FE0FWSFT[1] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 4) /* 4 month pre-build*/
      FE0FW01.FE0FWA4P[1] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWA4P[2] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWA4P[2] = FE0FW01.FE0FWA4P[2] + FE0FW01.FE0FWA4P[1];
      FE0FW01.FE0FWA4P[3] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWA4P[3] = FE0FW01.FE0FWA4P[3] + FE0FW01.FE0FWA4P[2];
      FE0FW01.FE0FWA4P[4] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWA4P[4] = FE0FW01.FE0FWA4P[4] + FE0FW01.FE0FWA4P[3];
      FE0FW01.FE0FWSFT[2] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 3) /* 3 month pre-build*/
      FE0FW01.FE0FWA3P[1] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWA3P[2] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWA3P[2] = FE0FW01.FE0FWA3P[2] + FE0FW01.FE0FWA3P[1];
      FE0FW01.FE0FWA3P[3] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWA3P[3] = FE0FW01.FE0FWA3P[3] + FE0FW01.FE0FWA3P[2];
      FE0FW01.FE0FWSFT[3] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 2) /* 2 month pre-build*/
      FE0FW01.FE0FWA2P[1] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWA2P[2] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWA2P[2] = FE0FW01.FE0FWA2P[2] + FE0FW01.FE0FWA2P[1];
      FE0FW01.FE0FWSFT[4] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

  end

   /* ------------------------------------------------------------*/
   /* move safety stock class B percent values to working storage*/
   /* ------------------------------------------------------------*/

  if (FGBREC.SY2SSCIN == "B") /* Safety stock class B*/

    FE0FW01.FE0FWCLS[2] = FGBREC.SY2SSCIN; /* Safety stock class*/

    if (FGBREC.FGBPBNMO == 5) /* 5 month pre-build*/
      FE0FW01.FE0FWB5P[1] = FGBREC.FGBPCT05; /* 5th mo pre-buld pct*/
      FE0FW01.FE0FWB5P[2] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWB5P[2] = FE0FW01.FE0FWB5P[2] + FE0FW01.FE0FWB5P[1];
      FE0FW01.FE0FWB5P[3] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWB5P[3] = FE0FW01.FE0FWB5P[3] + FE0FW01.FE0FWB5P[2];
      FE0FW01.FE0FWB5P[4] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWB5P[4] = FE0FW01.FE0FWB5P[4] + FE0FW01.FE0FWB5P[3];
      FE0FW01.FE0FWB5P[5] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWB5P[5] = FE0FW01.FE0FWB5P[5] + FE0FW01.FE0FWB5P[4];
      FE0FW01.FE0FWSFT[5] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 4) /* 4 month pre-build*/
      FE0FW01.FE0FWB4P[1] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWB4P[2] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWB4P[2] = FE0FW01.FE0FWB4P[2] + FE0FW01.FE0FWB4P[1];
      FE0FW01.FE0FWB4P[3] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWB4P[3] = FE0FW01.FE0FWB4P[3] + FE0FW01.FE0FWB4P[2];
      FE0FW01.FE0FWB4P[4] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWB4P[4] = FE0FW01.FE0FWB4P[4] + FE0FW01.FE0FWB4P[3];
      FE0FW01.FE0FWSFT[6] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 3) /* 3 month pre-build*/
      FE0FW01.FE0FWB3P[1] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWB3P[2] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWB3P[2] = FE0FW01.FE0FWB3P[2] + FE0FW01.FE0FWB3P[1];
      FE0FW01.FE0FWB3P[3] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWB3P[3] = FE0FW01.FE0FWB3P[3] + FE0FW01.FE0FWB3P[2];
      FE0FW01.FE0FWSFT[7] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 2) /* 2 month pre-build*/
      FE0FW01.FE0FWB2P[1] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWB2P[2] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWB2P[2] = FE0FW01.FE0FWB2P[2] + FE0FW01.FE0FWB2P[1];
      FE0FW01.FE0FWSFT[8] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

  end

   /* ------------------------------------------------------------*/
   /* move safety stock class C percent values to working storage*/
   /* ------------------------------------------------------------*/

  if (FGBREC.SY2SSCIN == "C") /* Safety stock class C*/

    FE0FW01.FE0FWCLS[3] = FGBREC.SY2SSCIN; /* Safety stock class*/

    if (FGBREC.FGBPBNMO == 5) /* 5 month pre-build*/
      FE0FW01.FE0FWC5P[1] = FGBREC.FGBPCT05; /* 5th mo pre-buld pct*/
      FE0FW01.FE0FWC5P[2] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWC5P[2] = FE0FW01.FE0FWC5P[2] + FE0FW01.FE0FWC5P[1];
      FE0FW01.FE0FWC5P[3] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWC5P[3] = FE0FW01.FE0FWC5P[3] + FE0FW01.FE0FWC5P[2];
      FE0FW01.FE0FWC5P[4] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWC5P[4] = FE0FW01.FE0FWC5P[4] + FE0FW01.FE0FWC5P[3];
      FE0FW01.FE0FWC5P[5] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWC5P[5] = FE0FW01.FE0FWC5P[5] + FE0FW01.FE0FWC5P[4];
      FE0FW01.FE0FWSFT[9] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 4) /* 4 month pre-build*/
      FE0FW01.FE0FWC4P[1] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWC4P[2] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWC4P[2] = FE0FW01.FE0FWC4P[2] + FE0FW01.FE0FWC4P[1];
      FE0FW01.FE0FWC4P[3] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWC4P[3] = FE0FW01.FE0FWC4P[3] + FE0FW01.FE0FWC4P[2];
      FE0FW01.FE0FWC4P[4] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWC4P[4] = FE0FW01.FE0FWC4P[4] + FE0FW01.FE0FWC4P[3];
      FE0FW01.FE0FWSFT[10] = FGBREC.FGBSLPCT; /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 3) /* 3 month pre-build*/
      FE0FW01.FE0FWC3P[1] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWC3P[2] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWC3P[2] = FE0FW01.FE0FWC3P[2] + FE0FW01.FE0FWC3P[1];
      FE0FW01.FE0FWC3P[3] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWC3P[3] = FE0FW01.FE0FWC3P[3] + FE0FW01.FE0FWC3P[2];
      FE0FW01.FE0FWSFT[11] = FGBREC.FGBSLPCT; /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 2) /* 2 month pre-build*/
      FE0FW01.FE0FWC2P[1] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWC2P[2] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWC2P[2] = FE0FW01.FE0FWC2P[2] + FE0FW01.FE0FWC2P[1];
      FE0FW01.FE0FWSFT[12] = FGBREC.FGBSLPCT; /* Safety stock sales pct*/
    end

  end

   /* ------------------------------------------------------------*/
   /* move safety stock class D percent values to working storage*/
   /* ------------------------------------------------------------*/

  if (FGBREC.SY2SSCIN == "D") /* Safety stock class D*/

    FE0FW01.FE0FWCLS[4] = FGBREC.SY2SSCIN; /* Safety stock class*/

    if (FGBREC.FGBPBNMO == 5) /* 5 month pre-build*/
      FE0FW01.FE0FWD5P[1] = FGBREC.FGBPCT05; /* 5th mo pre-buld pct*/
      FE0FW01.FE0FWD5P[2] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWD5P[2] = FE0FW01.FE0FWD5P[2] + FE0FW01.FE0FWD5P[1];
      FE0FW01.FE0FWD5P[3] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWD5P[3] = FE0FW01.FE0FWD5P[3] + FE0FW01.FE0FWD5P[2];
      FE0FW01.FE0FWD5P[4] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWD5P[4] = FE0FW01.FE0FWD5P[4] + FE0FW01.FE0FWD5P[3];
      FE0FW01.FE0FWD5P[5] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWD5P[5] = FE0FW01.FE0FWD5P[5] + FE0FW01.FE0FWD5P[4];
      FE0FW01.FE0FWSFT[13] = FGBREC.FGBSLPCT;
                                   /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 4) /* 4 month pre-build*/
      FE0FW01.FE0FWD4P[1] = FGBREC.FGBPCT04; /* 4th mo pre-buld pct*/
      FE0FW01.FE0FWD4P[2] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWD4P[2] = FE0FW01.FE0FWD4P[2] + FE0FW01.FE0FWD4P[1];
      FE0FW01.FE0FWD4P[3] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWD4P[3] = FE0FW01.FE0FWD4P[3] + FE0FW01.FE0FWD4P[2];
      FE0FW01.FE0FWD4P[4] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWD4P[4] = FE0FW01.FE0FWD4P[4] + FE0FW01.FE0FWD4P[3];
      FE0FW01.FE0FWSFT[14] = FGBREC.FGBSLPCT; /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 3) /* 3 month pre-build*/
      FE0FW01.FE0FWD3P[1] = FGBREC.FGBPCT03; /* 3rd mo pre-buld pct*/
      FE0FW01.FE0FWD3P[2] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWD3P[2] = FE0FW01.FE0FWD3P[2] + FE0FW01.FE0FWD3P[1];
      FE0FW01.FE0FWD3P[3] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWD3P[3] = FE0FW01.FE0FWD3P[3] + FE0FW01.FE0FWD3P[2];
      FE0FW01.FE0FWSFT[15] = FGBREC.FGBSLPCT; /* Safety stock sales pct*/
    end

    if (FGBREC.FGBPBNMO == 2) /* 2 month pre-build*/
      FE0FW01.FE0FWD2P[1] = FGBREC.FGBPCT02; /* 2nd mo pre-buld pct*/
      FE0FW01.FE0FWD2P[2] = FGBREC.FGBPCT01; /* 1st mo pre-buld pct*/
      FE0FW01.FE0FWD2P[2] = FE0FW01.FE0FWD2P[2] + FE0FW01.FE0FWD2P[1];
      FE0FW01.FE0FWSFT[16] = FGBREC.FGBSLPCT; /* Safety stock sales pct*/
    end

  end


end // end FE0FS03

// Close  'C1' - dfcast.vpbpct01
Function FE0FS04()
   /* ------------------------------------------------------------*/
   /* close dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO5940" ("C1", SQLCA, FGBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    return;
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
  converseLib.validationFailed(1); /* error message*/
  FFWREC.XXXMODID = "S04"; /* Module identification*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE C1 DFCAST.VPBPCT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPBPCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = FGBREC.FGBKEY; /* table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FE0FS04

// Read   'R ' dfcast.vpbpct01
Function FE0FS05()
   /* ------------------------------------------------------------*/
   /* Select a row from dfcast.vpbpct01 table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO5940" ("S ", SQLCA, FGBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return;

    end
  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FFWREC.XXXMODID = "S05"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT A ROW FROM DFCAST.VPBPCT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPBPCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = FGBREC.FGBKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FE0FS05

// Insert 'A ' dfcast.vpbpct01
Function FE0FS06()
   /* ------------------------------------------------------------*/
   /* Insert a row into dfcast.vpbpct01*/
   /* ------------------------------------------------------------*/

  FGBREC.ZZZSDT = XX0XW01.XX0XWDAT; /* setup date*/

  try
    call "IO5940" ("A ", SQLCA, FGBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end
  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FFWREC.XXXMODID = "S06"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT A ROW INTO DFCAST.VPBPCT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPBPCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = FGBREC.FGBKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FE0FS06

// Update 'U ' dfcast.vpbpct01
Function FE0FS07()
   /* ------------------------------------------------------------*/
   /* Update the row in the dfcast.vpbpct01*/
   /* ------------------------------------------------------------*/

  try
    call "IO5940" ("U ", SQLCA, FGBREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return;

    end

    /* ------------------------------------------------------------*/
     /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      FE0FW00.FE0FWSWR = "Y"; /* Request for data switch*/
      FFWREC.XXXMODID = "S07"; /* Module identification*/
      FFWREC.XXXMSGNO = 46; /* Indicate updated by another*/

      exit stack; /* Exit to display map*/

    end

  end
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FFWREC.XXXMODID = "S07"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(47); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE A ROW IN TH  DFCAST.VPBPCT01";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FFWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCAST  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPBPCT01"; /* Table view name*/
  TA1REC.TA1TBLKE = FGBREC.FGBKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FE0FS07

//*** RECORD=FE0FW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FE0FW00 type basicRecord
  10 FE0FWIXM FE0FWIXM ; 
  10 FE0FWIX1 FE0FWIX1 ; 
  10 FE0FWIX2 FE0FWIX2 ; 
  10 FE0FWCSR FE0FWCSR ; 
  10 FE0FWSWF FE0FWSWF ; 
  10 FE0FWSWR FE0FWSWR ; 
  10 FE0FWCRP FE0FWCRP ; 
  10 FE0FWTOT FE0FWTOT ; 
  10 FE0FWUPD FE0FWUPD ; 
  10 FE0FWFND FE0FWFND ; 
end // end FE0FW00

//*** RECORD=FE0FW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record FE0FW01 type basicRecord
  5 FE0FWCLS FE0FWCLS [4] ; 
  5 FE0FWSFT FE0FWSFT [16] ; 
  5 FE0FWCLA FE0FWCLA ; 
    10 FE0FWA5P FE0FWA5P [5] ; 
    10 FE0FWA5F FE0FWA5F [5] ; 
    10 FE0FWA4P FE0FWA4P [4] ; 
    10 FE0FWA4F FE0FWA4F [4] ; 
    10 FE0FWA3P FE0FWA3P [3] ; 
    10 FE0FWA3F FE0FWA3F [3] ; 
    10 FE0FWA2P FE0FWA2P [2] ; 
    10 FE0FWA2F FE0FWA2F [2] ; 
  5 FE0FWCLB FE0FWCLB ; 
    10 FE0FWB5P FE0FWB5P [5] ; 
    10 FE0FWB5F FE0FWB5F [5] ; 
    10 FE0FWB4P FE0FWB4P [4] ; 
    10 FE0FWB4F FE0FWB4F [4] ; 
    10 FE0FWB3P FE0FWB3P [3] ; 
    10 FE0FWB3F FE0FWB3F [3] ; 
    10 FE0FWB2P FE0FWB2P [2] ; 
    10 FE0FWB2F FE0FWB2F [2] ; 
  5 FE0FWCLC FE0FWCLC ; 
    10 FE0FWC5P FE0FWC5P [5] ; 
    10 FE0FWC5F FE0FWC5F [5] ; 
    10 FE0FWC4P FE0FWC4P [4] ; 
    10 FE0FWC4F FE0FWC4F [4] ; 
    10 FE0FWC3P FE0FWC3P [3] ; 
    10 FE0FWC3F FE0FWC3F [3] ; 
    10 FE0FWC2P FE0FWC2P [2] ; 
    10 FE0FWC2F FE0FWC2F [2] ; 
  5 FE0FWCLD FE0FWCLD ; 
    10 FE0FWD5P FE0FWD5P [5] ; 
    10 FE0FWD5F FE0FWD5F [5] ; 
    10 FE0FWD4P FE0FWD4P [4] ; 
    10 FE0FWD4F FE0FWD4F [4] ; 
    10 FE0FWD3P FE0FWD3P [3] ; 
    10 FE0FWD3F FE0FWD3F [3] ; 
    10 FE0FWD2P FE0FWD2P [2] ; 
    10 FE0FWD2F FE0FWD2F [2] ; 
end // end FE0FW01

//*** RECORD=FGBREC ****
// ************ PRDCTN FCST PREBUILD PERCENT TABLE ************
// 
// DB2 TABLE VIEW:       DFCAST.VPBPCT01
// 
// DCLGEN MEMBER:        DCL00964
// 
// I/O MODULE:           IO5940
// 
// KEY TO TABLE:         XPCCD
//                       YPGCD
//                       SY2SSCIN
//                       FGBPBNMO
// 
// MAINTENANCE HISTORY:
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          06/25/91  JJUCH   New record.
// **********************
Record FGBREC type basicRecord
  5 FGBGROUP FGBGROUP ; 
    10 FGBKEY FGBKEY ; 
      15 XPCCD XPCCD ; 
      15 YPGCD YPGCD ; 
      15 SY2SSCIN SY2SSCIN ; 
      15 FGBPBNMO FGBPBNMO ; 
    10 FGBSLPCT FGBSLPCT ; 
    10 FGBPCT01 FGBPCT01 ; 
    10 FGBPCT02 FGBPCT02 ; 
    10 FGBPCT03 FGBPCT03 ; 
    10 FGBPCT04 FGBPCT04 ; 
    10 FGBPCT05 FGBPCT05 ; 
    10 FGBPCT06 FGBPCT06 ; 
    10 FGBPCT07 FGBPCT07 ; 
    10 FGBPCT08 FGBPCT08 ; 
    10 FGBPCT09 FGBPCT09 ; 
    10 FGBPCT10 FGBPCT10 ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end FGBREC

// Class A 2 mo pre-buld upd flag
DataItem FE0FWA2F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class A 2 mo pre-build percent
DataItem FE0FWA2P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class A 3 mo pre-buld upd flag
DataItem FE0FWA3F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class A 3 mo pre-build percent
DataItem FE0FWA3P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class A 4 mo pre-buld upd flag
DataItem FE0FWA4F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class A 4 mo pre-build percent
DataItem FE0FWA4P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class A 5 mo pre-buld upd flag
DataItem FE0FWA5F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class A 5 mo pre-build percent
DataItem FE0FWA5P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class B 2 mo pre-buld upd flag
DataItem FE0FWB2F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class B 2 mo pre-build percent
DataItem FE0FWB2P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class B 3 mo pre-buld upd flag
DataItem FE0FWB3F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class B 3 mo pre-build percent
DataItem FE0FWB3P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class B 4 mo pre-buld upd flag
DataItem FE0FWB4F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class B 4 mo pre-build percent
DataItem FE0FWB4P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class B 5 mo pre-buld upd flag
DataItem FE0FWB5F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class B 5 mo pre-build percent
DataItem FE0FWB5P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 2 mo pre-buld upd flag
DataItem FE0FWC2F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 2 mo pre-build percent
DataItem FE0FWC2P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 3 mo pre-buld upd flag
DataItem FE0FWC3F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 3 mo pre-build percent
DataItem FE0FWC3P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 4 mo pre-buld upd flag
DataItem FE0FWC4F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 4 mo pre-build percent
DataItem FE0FWC4P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 5 mo pre-buld upd flag
DataItem FE0FWC5F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 5 mo pre-build percent
DataItem FE0FWC5P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Safety stock class A group
DataItem FE0FWCLA char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Safety stock class B group
DataItem FE0FWCLB char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Safety stock class C group
DataItem FE0FWCLC char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Safety stock class C group
DataItem FE0FWCLD char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Safety stock class
DataItem FE0FWCLS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current page
DataItem FE0FWCRP num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of cursor switch
DataItem FE0FWCSR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 2 mo pre-buld upd flag
DataItem FE0FWD2F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 2 mo pre-build percent
DataItem FE0FWD2P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 3 mo pre-buld upd flag
DataItem FE0FWD3F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 3 mo pre-build percent
DataItem FE0FWD3P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 4 mo pre-buld upd flag
DataItem FE0FWD4F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 4 mo pre-build percent
DataItem FE0FWD4P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// Class C 5 mo pre-buld upd flag
DataItem FE0FWD5F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Class C 5 mo pre-build percent
DataItem FE0FWD5P num(3)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = " ", inputRequired = no
}
end

// pct found flag
DataItem FE0FWFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index for map fields
DataItem FE0FWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end
// index for map fields
DataItem FE0FWIX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for map fields
DataItem FE0FWIX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Safety stock class sales pct
DataItem FE0FWSFT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Format the map switch
DataItem FE0FWSWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FE0FWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total percent field
DataItem FE0FWTOT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table updated flag
DataItem FE0FWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record group level
DataItem FGBGROUP char(54)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key group level
DataItem FGBKEY char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FF_PRBLD_NMO
DataItem FGBPBNMO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO1
DataItem FGBPCT01 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO2
DataItem FGBPCT02 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO3
DataItem FGBPCT03 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO4
DataItem FGBPCT04 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO5
DataItem FGBPCT05 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO6
DataItem FGBPCT06 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO7
DataItem FGBPCT07 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO8
DataItem FGBPCT08 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO9
DataItem FGBPCT09 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_PCT_MO10
DataItem FGBPCT10 decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FF_PRBLD_SLS_PCT
DataItem FGBSLPCT decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

