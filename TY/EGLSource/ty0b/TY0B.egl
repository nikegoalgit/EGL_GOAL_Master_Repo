package ty0b;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
import ty.common.*;
import vv.common.*;
//*** PROGRAM=TY0B ****
// This application allows a user to inquire and maintain rows
// in the Treasury Exchange Rate Type Table.
// 
// If the user has sufficient security to change the data and
// the maintenance option was selected, the modifiable fields
// remain unprotected. Otherwise, they are protected from
// modification by the user.
// 
// The user in maintenance mode can update the following
// fields:
//             1. rate type
//             2. rate type description
//             3. future only flag
//             4. rate type status.
// Both the setup and change date are always protected.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update is completed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      04/15/94  jcarey  New application.
//          05/03/94  jcarey  Added delete routine and took
//                            off some alarms. ty0b-20000,
//                            ty0bs-io7130-s,ty0b-40000,
//                            ty0b-43000,ty0b-50000 &
//                            ty0bs-init-delete.
// -------  --------  ------  ---------------------------------
// Y2KCHG   03/04/98  NGANGO   RECOMPILED TO PICKUP THE CHANGES
//                             OF XX0XS01.
// -------  --------  ------  ---------------------------------
// *********************
Program TY0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TY0BW00 TY0BW00; // record
  TY0BW01 TY0BW01; // record
  TYWREC TYWREC; // record
  VFXTYP01 VFXTYP01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TY0BM.TY0BM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTY-00000: XPTY-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TY0BM001 initial; /* M001 input/output*/
    set TY0BW00 empty; /* Working storage*/
    set TY0BW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    TY0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    TY0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    TY0BW00.XXX-TEMP-STG-LNTH = 819; /* Temporary storage length*/
    TY0BW00.XXX-INX-LMT-NBR = 13; /* Number of lines on a page*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/

    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TY0B-00000; /* Converse the main process*/


    TY0B-00000: TY0B-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TY0B-00000; /* Converse the main process*/


  end // end main
end // end TY0B

// Determine which map to display
Function TY0B-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TY0B-10000(); /* Obtain the data to display*/

  TY0B-20000(); /* Format and display the map*/

  TY0B-30000(); /* Check Attention identifier*/

  TY0B-40000(); /* Verify the entered data*/

  TY0B-50000(); /* Process valid input request*/

end // end TY0B-00000

// Obtain the data to display
Function TY0B-10000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TY0BW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (TYWREC.XXX-MSG-NBR == 0) /* No message to display*/
    TY0BW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  TY0BS-TA0050-P(); /* Purge any temporary storage*/

  TY0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  set VFXTYP01 empty; /* Clear row storage area*/

  TY0BS-IO7130-S1(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  TY0BW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  TY0BW00.TY0BW-RATE-EOF-FL = "N"; /* End of cursor flag*/

  while (TY0BW00.TY0BW-RATE-EOF-FL == "N") /* Until end of cursor*/

    TY0BS-IO7130-N1(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (TY0BW00.TY0BW-RATE-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] = VFXTYP01.TY-EXCHG-RATE-CD; /* Rate type*/

      TY0BW01.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] = VFXTYP01.TY-EXCHG-RATE-DESC;
                                                     /* Rate description*/

      TY0BW01.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] = VFXTYP01.TY-RATE-TYP-FUTRFL; /* Future flag*/

      TY0BW01.XXX-STAT[XXX-INX-FLD-NBR] = VFXTYP01.XXX-STAT; /* Rate status*/

      TY0BW01.ZZ-SDT[XXX-INX-FLD-NBR] = VFXTYP01.ZZ-SDT; /* Setup date*/

      TY0BW00.TY0BW-ORIG-DATE = VFXTYP01.ZZ-SDT; /* Move original date to work area*/

      TY0B-11000(); /* Realign date*/

      TY0BW01.TY0BW-SETUP-DATE[XXX-INX-FLD-NBR] = TY0BW00.TY0BW-NEW-DATE;
                                              /* Realigned setup date*/

      TY0BW01.ZZ-CHNG-DT[XXX-INX-FLD-NBR] = VFXTYP01.ZZ-CHNG-DT; /* Change date*/

      TY0BW00.TY0BW-ORIG-DATE = VFXTYP01.ZZ-CHNG-DT; /* Move change date to work area*/

      TY0B-11000(); /* Realign date*/

      TY0BW01.TY0BW-CHANGE-DATE[XXX-INX-FLD-NBR] = TY0BW00.TY0BW-NEW-DATE;
                                              /* Realigned change date*/

      TY0BW01.ZZ-CHNG-HHMM[XXX-INX-FLD-NBR] = VFXTYP01.ZZ-CHNG-HHMM; /* Change time*/

      TY0BW01.ZZ-CHNG-CNT[XXX-INX-FLD-NBR] = VFXTYP01.ZZ-CHNG-CNT; /* Change count*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (TY0BW00.XXX-INX-FLD-NBR > TY0BW00.XXX-INX-LMT-NBR) /* Page is full*/

      TY0BS-TA0050-A(); /* Add page to temporary storage*/

      TY0BW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (TY0BW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    TY0BS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  TY0BS-IO7130-C1(); /* Close selected set cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (TY0BW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    TYWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(18); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TY0BW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TY0B-10000

// Convert year to new format
Function TY0B-11000()
   /* ------------------------------------------------------------*/
   /* Change year to a mm-dd-yy format.*/
   /* ------------------------------------------------------------*/

  TY0BW-NEW-CHAR1 = "-";
  TY0BW-NEW-CHAR2 = "-";

  move TY0BW-ORIG-MONTH to TY0BW-NEW-MONTH withV60Compat; /* move month to new format*/

  move TY0BW-ORIG-DAY to TY0BW-NEW-DAY withV60Compat; /* move day to new format*/

  move TY0BW-ORIG-YEAR to TY0BW-NEW-YEAR withV60Compat; /* move year to new format*/

end // end TY0B-11000

// Format and converse the map
Function TY0B-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TYWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TY0BW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TY0B-21000(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TY0BM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TY0BM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TY0BM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a error message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TYWREC.XXX-MSG-NBR == 0 /* No message to display*/
   && COMMAREA.CAMSG == " ")  /* or message text*/

    TY0BM001.XXX-MSG-LOC-ID = "TY0B001"; /* Refresh value*/

  else
    if (converseVar.validationMsgNum != 0) /* There is a fatal error*/
      set TY0BM001 alarm; /* Set the alarm*/
    end

    if (TYWREC.XXX-MSG-NBR != 0 /* Message to display*/
     || COMMAREA.CAMSG != " ")  /* or message text*/

      if (TYWREC.XXX-MSG-NBR != 0) /* Message to display*/

        if (TYWREC.XXX-MSG-NBR == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(TYWREC.XXX-MSG-NBR);
        end /* Message number*/
      else
        TY0BM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

      end

      TY0BM001.XXX-MSG-LOC-ID = TYWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    end

  end

  converse TY0BM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TYWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TYWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TY0BM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TY0BM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  TY0BW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TY0BW00.XXX-INX-FLD-NBR <= TY0BW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/

    set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] normal;
                                   /* Rate exchange code*/

    set TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] normal;
                                   /* Rate exchange code description*/

    set TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] normal;
                                   /* Rate exchange future flag*/

    set TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] normal;
                                   /* Rate exchange code status*/

    TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set TY0BM001.CATOAP normal; /* TO application*/
  set TY0BM001.CAITEM normal; /* Application data*/


end // end TY0B-20000

// Format the data in the map
Function TY0B-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TY0BM001 initial; /* M001 input/output area*/

  TY0BW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Initialize the screen heading using the user authority.*/
   /* ------------------------------------------------------------*/

  if (TYWREC.TY-SCREEN-MODE == "INQ") /* Inquiry mode*/

    TY0BM001.TY-SCREEN-FUNCTION = "INQUIRY";

  end

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TY0BW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (TY0BW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (TY0BW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        TY0BS-TA0050-U(); /* Update temporary storage page*/

        TY0BW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (TY0BW00.XXX-CURR-PAGE-NBR > TY0BW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        TY0BW00.XXX-CURR-PAGE-NBR = TY0BW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      TY0BS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set TY0BM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    TY0BM001.XXX-CURR-PAGE-NBR = TY0BW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set TY0BM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    TY0BM001.XXX-HI-PAGE-NBR = TY0BW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* Position the cursor on the first rate type field.*/
   /* ------------------------------------------------------------*/

  set TY0BM001.TY-EXCHG-RATE-CD[1] cursor; /* Position cursor*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TY0BW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/
  TY0BW00.TY-INDEX-NBR = 1; /* Initialize index for mode*/

  while (TY0BW00.XXX-INX-FLD-NBR <= TY0BW00.XXX-INX-LMT-NBR)
                                   /* Until screen is full*/
    if (TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] > " ") /* or end of data*/

      if (TY0BW00.XXX-INX-FLD-NBR == 1) /* First select field*/

        set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] cursor, normal;
      else
        set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] normal;

      end

      TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] = TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR];
      TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] = TY0BW01.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR];
      TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] = TY0BW01.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR];
      TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] = TY0BW01.XXX-STAT[XXX-INX-FLD-NBR];
      TY0BM001.TY0BW-SETUP-DATE[XXX-INX-FLD-NBR] = TY0BW01.TY0BW-SETUP-DATE[XXX-INX-FLD-NBR];
      TY0BM001.TY0BW-CHANGE-DATE[XXX-INX-FLD-NBR] = TY0BW01.TY0BW-CHANGE-DATE[XXX-INX-FLD-NBR];

    end

    if (TYWREC.TY-SCREEN-MODE == "CHG") /* Maintenance mode*/

      if (COMMAREA.CACLVL[TY-INDEX-NBR] == "Y")

       /* SET TY0BM001.XXX-STAT(XXX-INX-FLD-NBR) UNPROTECT;*/

      else

        set TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] skip;

      end

    else

      set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] skip;
      set TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] skip;
      set TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] skip;
      set TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] skip;

    end

    TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end TY0B-21000

// Check attention identifier
Function TY0B-30000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TY0BW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TY0BW01 empty; /* M001 display storage*/
    end

    TY0BW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TY0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TY0BM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TY0BS-TA0050-P(); /* Purge any temporary storage*/

      XSTYS-EXIT(); /* Exit to another application*/

      set TY0BM001.CATOAP cursor, bold; /* Highlight*/

    else

      TYWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      converseLib.validationFailed(21); /* Not available at this time*/
      exit stack;
    /* MOVE 'TY0BM001' TO COMMAREA.CAITEM;/* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TY0A"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "TY0A"; /* System Menu*/
    end

    if (converseVar.eventKey is pf5) /* PF5 was pressed*/
      COMMAREA.CATOAP = "TY0C"; /* System Menu*/
    end

    TY0BS-TA0050-P(); /* Purge any temporary storage*/

    XSTYS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/

    TYWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TY0B-30000

// Verify data that was entered
Function TY0B-40000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (TY0BM001.CAITEM > " ") /* Application data was entered*/

    TYWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TY0BM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    TY0B-41000(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    if (converseVar.validationMsgNum != 0) /* Error was found*/
       /* next sentence*/
    else
      TY0B-42000(); /* Verify scroll request*/

    end

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify any modifiable data that was changed.*/
    /* ------------------------------------------------------------*/

    if (TY0BW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

      TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-LMT-NBR;
                                 /* Line index*/

      while (TY0BW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

        TY0B-43000(); /* Verify data in the line*/

        TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-FLD-NBR - 1;
                                 /* Decrement line number*/

      end

    end

  end


   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TY0B-40000

// Highlight other changed fields
Function TY0B-41000()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-LMT-NBR; /* Line index*/

  while (TY0BW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] != 
    TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR])

      TYWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
      converseLib.validationFailed(14); /* Field may not change*/
      set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    end

    if (TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] != 
    TY0BW01.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR])

      TYWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
      converseLib.validationFailed(14); /* Field may not change*/
      set TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    end

    if (TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] != 
    TY0BW01.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR])

      TYWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
      converseLib.validationFailed(14); /* Field may not change*/
      set TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    end

    if (TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] != 
    TY0BW01.XXX-STAT[XXX-INX-FLD-NBR])

      TYWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
      converseLib.validationFailed(14); /* Field may not change*/
      set TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    end

    TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end TY0B-41000

// Verify scroll request
Function TY0B-42000()
   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TY0BW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    TYWREC.XXX-MSG-LOC-ID = "42000"; /* Message location*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TY0BW00.XXX-CURR-PAGE-NBR >= TY0BW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    TYWREC.XXX-MSG-LOC-ID = "42000"; /* Message location*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end


end // end TY0B-42000

// Verify data in the line
Function TY0B-43000()
   /* ------------------------------------------------------------*/
   /* If there was no change in the four variable fields, we*/
   /* exit the module to look at the next record.*/
   /* ------------------------------------------------------------*/

  if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == 
  TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR]
   && TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] == 
  TY0BW01.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR]
   && TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] == 
  TY0BW01.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR]
   && TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] == 
  TY0BW01.XXX-STAT[XXX-INX-FLD-NBR])
    return;

  end

   /* ------------------------------------------------------------*/
   /* If the rate code was blank, all other enterable fields*/
   /* must be blank.*/
   /* ------------------------------------------------------------*/

  if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " "
   && TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " ")

    if (TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] != " ")
      TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
      converseLib.validationFailed(27); /* Description invalid*/
      set TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] cursor, bold;
    end

    if (TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] != " ")
      TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
      converseLib.validationFailed(28); /* Description invalid*/
      set TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] cursor, bold;
    end

    if (TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] != " ")
      TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
      converseLib.validationFailed(29); /* Description invalid*/
      set TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] cursor, bold;
    end

    return;

  end

   /* ------------------------------------------------------------------*/
   /* If a record has been erased, check to see if the delete*/
   /* requirements are in place.*/
   /* ------------------------------------------------------------------*/

  if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " "
   && TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] == " "
   && TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] == " ")

    if (TY0BW01.XXX-STAT[XXX-INX-FLD-NBR] == "A") /* Active record*/

      TYWREC.XXX-MSG-LOC-ID = "43000"; /* Msg location*/
      converseLib.validationFailed(61); /* Delete not allowed*/
      set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] cursor, bold;

    else
      TY0BW01.TY-DELETE-FLAG[XXX-INX-FLD-NBR] = "Y"; /* Tag record*/
    end

    return;

  end

   /* ------------------------------------------------------------*/
   /* If there there was a new record or a modification to an*/
   /* existing record, we check the fields for valid values.*/
   /* ------------------------------------------------------------*/

  if (TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] != " ")
    if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] !=  /* Existing rate*/
    TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR])         /* type was changed*/

      TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
      converseLib.validationFailed(30); /* Rate type cannot change*/
      set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] cursor, bold;
      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* Status must be 'A','I', or blank. If it's a blank, we*/
   /* initialize to 'I'. Also, an 'A' requires approval authority.*/
   /* ------------------------------------------------------------*/

  if (TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] == "A" /* Status must be*/
   || TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] == "I" /* 'I' or 'A'*/
  )                                            
    /* next sentence*/

  else

    if (TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] == " " /* Blank status*/
     && TY0BW01.XXX-STAT[XXX-INX-FLD-NBR] == " ") /* and a new record*/

      TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] = "I"; /* Initialize to 'i'*/

    else

      TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
      converseLib.validationFailed(23); /* Must be 'a' or 'i'*/
      set TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] cursor, bold;

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* Future flag must be 'y' or 'n'.*/
   /* ------------------------------------------------------------*/
  if (TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] == "Y"
   || TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] == "N"
  ) /* next sentence*/

  else

    TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(24); /* Must be 'y' or 'n'*/
    set TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] cursor, bold;

    return;

  end

   /* ------------------------------------------------------------*/
   /* Rate type description cannot be blank.*/
   /* ------------------------------------------------------------*/
  if (TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] == " ")

    TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(25); /* Cannot be blank*/
    set TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] cursor, bold;

  end

end // end TY0B-43000

// Process valid input request
Function TY0B-50000()
   /* ------------------------------------------------------------*/
   /* If edit function was pressed (pf12), return screen.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* Edit was requested*/

    TYWREC.XXX-MSG-NBR = 54; /* No errors found*/
    return;

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TY0BW00.XXX-CURR-PAGE-NBR = TY0BW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    TY0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TY0BW00.XXX-CURR-PAGE-NBR = TY0BW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    TY0BW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If inquiry mode, no changes were made, so exit the module.*/
   /* ------------------------------------------------------------*/

  if (TYWREC.TY-SCREEN-MODE == "INQ") /* Screen is in inquiry mode*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* ------------------------------------------------------------*/

  TY0BW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TY0BW00.XXX-INX-FLD-NBR <= TY0BW00.XXX-INX-LMT-NBR)
                                  /* Until end of lines*/
    TY0BW00.TY0B-UPDATE-FL = "N"; /* Initialize update flag*/
    TY0BW00.TY0B-ADD-FL = "N"; /* Initialize add flag*/

    if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " ")

      if (TY0BW01.TY-DELETE-FLAG[XXX-INX-FLD-NBR] == "Y") /* Delete request*/
        TY0BS-INIT-DELETE(); /* Initialize a delete record*/
        TY0BS-IO7130-D(); /* Delete the record*/
        TY0BW00.XXX-RQT-DATA-FL = "Y";
      end
    else

      TY0BS-SCAN-CHANGES(); /* Check for a an update or add*/

    end

    if (TY0BW00.TY0B-UPDATE-FL == "Y"
     || TY0BW00.TY0B-ADD-FL == "Y")

      TY0BS-INIT-CM-FLDS(); /* Initialize common fields*/

      if (TY0BW00.TY0B-UPDATE-FL == "Y"
      )
        TY0BS-IO7130-U(); /* Update rate exchange record*/
      else

        VFXTYP01.ZZ-SDT = XX0XW01.XX0XWDAT;
        VFXTYP01.ZZ-CHNG-CNT = 0;

        TY0BS-IO7130-S(); /* Check for a duplicate*/
        TY0BS-IO7130-A(); /* Add rate exchange record*/

      end

      TY0BW00.XXX-RQT-DATA-FL = "Y";

    end

    TY0BW00.XXX-INX-FLD-NBR = TY0BW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* -------------------------------------------------------------*/
   /* If a change has been made, commit all changes*/
   /* -------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  TYWREC.XXX-MSG-LOC-ID = "50000"; /* Message location*/
  TYWREC.XXX-MSG-NBR = 1; /* Table update was completed*/


end // end TY0B-50000

// Initialize common fields
Function TY0BS-INIT-CM-FLDS()
   /* -------------------------------------------------------------------*/
   /* Initialize the common fields for an add or update*/
   /* -------------------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

  VFXTYP01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
  VFXTYP01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

   /* Move rate type*/
  VFXTYP01.TY-EXCHG-RATE-CD = TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR]; /* code*/

   /* Move rate type*/
  VFXTYP01.TY-EXCHG-RATE-DESC = TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR]; /* description*/

   /* Move future flag*/
  VFXTYP01.TY-RATE-TYP-FUTRFL = TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR];

   /* Move status*/
  VFXTYP01.XXX-STAT = TY0BM001.XXX-STAT[XXX-INX-FLD-NBR];


end // end TY0BS-INIT-CM-FLDS

// Initialize record for delete
Function TY0BS-INIT-DELETE()
   /* -------------------------------------------------------------------*/
   /* Initialize vfxtyp01 for a delete*/
   /* -------------------------------------------------------------------*/

  set VFXTYP01 empty;

   /* Move rate cd to*/
  VFXTYP01.TY-EXCHG-RATE-CD = TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR]; /* record*/

end // end TY0BS-INIT-DELETE

// Add record to vfxtyp01
Function TY0BS-IO7130-A()
   /* ------------------------------------------------------------*/
   /* Add record to the exchange rate table*/
   /* ------------------------------------------------------------*/

  VFXTYP01.ZZ-CHNG-CNT = 0; /* Initialize change count*/
  VFXTYP01.ZZ-SDT = XX0XW01.XX0XWDAT; /* Initialize setup date*/

  set SQLCA empty;

  call "IO7130" ("A ", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If there is a database contention, terminate function*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/

      converseLib.validationFailed(11); /* Data in use by another*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(10); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD VFXTYP01"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Database name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.VFXTYP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end TY0BS-IO7130-A

// Close selected set cursor
Function TY0BS-IO7130-C1()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7130" ("C1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TYWREC.XXX-MSG-LOC-ID = "IO7130C1"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-IO7130-C1

// Update the table row
Function TY0BS-IO7130-D()
   /* ------------------------------------------------------------*/
   /* Delete the specified row in the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7130" ("D ", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end /* Delete row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      TY0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

      TYWREC.XXX-MSG-LOC-ID = "IO7130D"; /* Message location*/
      TYWREC.XXX-MSG-NBR = 12; /* Data was deleted by another*/

      exit stack; /* Exit to display map*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TYWREC.XXX-MSG-LOC-ID = "IO7130D"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "DELETE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.VFXTYP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-IO7130-D

// Fetch next row in cursor
Function TY0BS-IO7130-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7130" ("N1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TY0BW00.TY0BW-RATE-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TYWREC.XXX-MSG-LOC-ID = "IO7130N1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.VFXTYP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-IO7130-N1

// Add record to vfxtyp01
Function TY0BS-IO7130-S()
   /* ------------------------------------------------------------*/
   /* Select unique. Used to check for duplicates.*/
   /* ------------------------------------------------------------*/

  set SQLCA empty;

  call "IO7130" ("S ", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 100)    /* Not found*/

    return;

  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Rollback all changes*/

    TY0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data*/

    TYWREC.XXX-MSG-LOC-ID = "IO7130S"; /* Message location*/
    converseLib.validationFailed(53); /* Duplicate record exists*/
    set TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] cursor, bold;

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* If there is a database contention, terminate function*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD VFXTYP01"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Database name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.VFXTYP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end TY0BS-IO7130-S

// Select set and open cursor
Function TY0BS-IO7130-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7130" ("S1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TYWREC.XXX-MSG-LOC-ID = "IO7130S1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.VFXTYP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-IO7130-S1

// Update the table row
Function TY0BS-IO7130-U()
   /* ------------------------------------------------------------*/
   /* Update the specified row in the table.*/
   /* ------------------------------------------------------------*/


  VFXTYP01.ZZ-CHNG-CNT = TY0BW01.ZZ-CHNG-CNT[XXX-INX-FLD-NBR];
                                                  /* Move change cnt*/

  set SQLCA empty;

  try
    call "IO7130" ("U ", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end /* Add row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If row not found, indicate the data was updated by another.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      TY0BW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

      TYWREC.XXX-MSG-LOC-ID = "IO7130U"; /* Message location*/
      TYWREC.XXX-MSG-NBR = 12; /* Data was updated by another*/

      exit stack; /* Exit to display map*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TYWREC.XXX-MSG-LOC-ID = "IO7130U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.VFXTYP01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-IO7130-U

// Scan for adds or changes
Function TY0BS-SCAN-CHANGES()
   /* --------------------------------------------------------------------*/
   /* If both the map and work record rate codes are blank, there is*/
   /* no need for an add or update.*/
   /* --------------------------------------------------------------------*/

  if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " " /* There is no*/
   && TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " ") /* / entry*/

    return;

  end

   /* --------------------------------------------------------------------*/
   /* If the map has an entry, but the work record is empty, we need*/
   /* to add the map record.*/
   /* --------------------------------------------------------------------*/

  if (TY0BM001.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] != " " /* Only the map*/
   && TY0BW01.TY-EXCHG-RATE-CD[XXX-INX-FLD-NBR] == " ") /* has an entry*/

    TY0BW00.TY0B-ADD-FL = "Y"; /* Add the record*/
    return;

  end

   /* --------------------------------------------------------------------*/
   /* If any of the enterable fields has changed, we need to update*/
   /* the record.*/
   /* --------------------------------------------------------------------*/

  if (TY0BM001.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR] !=  /* Description*/
  TY0BW01.TY-EXCHG-RATE-DESC[XXX-INX-FLD-NBR])         /* has changed*/

    TY0BW00.TY0B-UPDATE-FL = "Y";
    return;
  end

  if (TY0BM001.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR] !=  /* Future flag*/
  TY0BW01.TY-RATE-TYP-FUTRFL[XXX-INX-FLD-NBR])         /* has changed*/

    TY0BW00.TY0B-UPDATE-FL = "Y";
    return;
  end

  if (TY0BM001.XXX-STAT[XXX-INX-FLD-NBR] !=  /* Status has*/
  TY0BW01.XXX-STAT[XXX-INX-FLD-NBR])         /* changed*/

    TY0BW00.TY0B-UPDATE-FL = "Y";
    return;
  end


end // end TY0BS-SCAN-CHANGES

// Add page to temporary storage
Function TY0BS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TY0BW01.XXX-TEMP-STG-LNTH = TY0BW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (TY0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TY0BW01 empty; /* M001 display storage*/

    TY0BW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TYWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-TA0050-A

// Purge any temporary storage
Function TY0BS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TY0BW01 empty; /* M001 display storage*/

  TY0BW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  TY0BW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TY0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TYWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-TA0050-P

// Read temporary storage page
Function TY0BS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TY0BW01.XXX-TEMP-STG-LNTH = TY0BW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TY0BW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TY0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TYWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-TA0050-R

// Update temporary storage page
Function TY0BS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TY0BW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TYWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0BS-TA0050-U

//*** RECORD=TY0BW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TY0BW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
  10 TY-INDEX-NBR TY-INDEX-NBR ; 
  10 TY0BW-RATE-EOF-FL TY0BW-RATE-EOF-FL ; 
  10 TY0BW-ORIG-DATE TY0BW-ORIG-DATE ; 
    15 TY0BW-ORIG-CENT TY0BW-ORIG-CENT ; 
    15 TY0BW-ORIG-YEAR TY0BW-ORIG-YEAR ; 
    15 TY0BW-ORIG-MONTH TY0BW-ORIG-MONTH ; 
    15 TY0BW-ORIG-DAY TY0BW-ORIG-DAY ; 
  10 TY0BW-NEW-DATE TY0BW-NEW-DATE ; 
    15 TY0BW-NEW-MONTH TY0BW-NEW-MONTH ; 
    15 TY0BW-NEW-CHAR1 TY0BW-NEW-CHAR1 ; 
    15 TY0BW-NEW-DAY TY0BW-NEW-DAY ; 
    15 TY0BW-NEW-CHAR2 TY0BW-NEW-CHAR2 ; 
    15 TY0BW-NEW-YEAR TY0BW-NEW-YEAR ; 
  10 TY0B-UPDATE-FL TY0B-UPDATE-FL ; 
  10 TY0B-ADD-FL TY0B-ADD-FL ; 
end // end TY0BW00

//*** RECORD=TY0BW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TY0BW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 * char(819) ; 
    10 TY-EXCHG-RATE-CD TY-EXCHG-RATE-CD [13] ; 
    10 TY-EXCHG-RATE-DESC TY-EXCHG-RATE-DESC [13] ; 
    10 TY-RATE-TYP-FUTRFL TY-RATE-TYP-FUTRFL [13] ; 
    10 XXX-STAT XXX-STAT [13] ; 
    10 ZZ-SDT ZZ-SDT [13] ; 
    10 TY0BW-SETUP-DATE TY0BW-SETUP-DATE [13] ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT [13] ; 
    10 TY0BW-CHANGE-DATE TY0BW-CHANGE-DATE [13] ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM [13] ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT [13] ; 
    10 TY-DELETE-FLAG TY-DELETE-FLAG [13] ; 
end // end TY0BW01

// Add vfxtyp01 flag
DataItem TY0B-ADD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update vfxtyp01 flag
DataItem TY0B-UPDATE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Rate type last change date
DataItem TY0BW-CHANGE-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New date character 1
DataItem TY0BW-NEW-CHAR1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New date character 2
DataItem TY0BW-NEW-CHAR2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New date format
DataItem TY0BW-NEW-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New date day
DataItem TY0BW-NEW-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New date month
DataItem TY0BW-NEW-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// New date year
DataItem TY0BW-NEW-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Original date century
DataItem TY0BW-ORIG-CENT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Original date format
DataItem TY0BW-ORIG-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Original date day
DataItem TY0BW-ORIG-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Original date month
DataItem TY0BW-ORIG-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Original date year
DataItem TY0BW-ORIG-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Cursor end of file flag
DataItem TY0BW-RATE-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Rate type setup date
DataItem TY0BW-SETUP-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

