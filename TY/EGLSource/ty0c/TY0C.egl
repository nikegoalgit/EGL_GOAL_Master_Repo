package ty0c;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ty.common.*;
import vv.common.*;
//*** PROGRAM=TY0C ****
// This application allows a user to select parameters for
// either the Exchange Rates Maintenance/Inquiry screen (TY0D)
// or the Exchange Rate - Date Range Inquiry (TY0E) screen.
// 
// The screen contains the following field parameters:
// 
//                Rate Type  - required input
// 
//           Source Currency - one required
//                 or Region
// 
//      Destination Currency - one required
//                 or Region
// 
//             Calendar Date - one required
//             or Season/GPC
// 
//       Approved/Unapproved - optional
//                     Rates
// 
// After completing the selection, the data is verified.
// If no errors have occurred, the selection will be processed.
// An ENTER redisplays the selection with descriptions, while
// PF 5 & 6 transfers the user to the desired screen.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      04/15/94  jcarey  New application.
//          05/03/94  jcarey  Took off the alarm for messages
//                            17 & 20. Also added future flag
//                            check.
// -------  --------  ------  ---------------------------------
// Y2KCHG   03/04/98  NGANGO  RECOMPILED TO PICKUP THE CHANGES
//                            FOR XX0XS01.
// -------  --------  ------  ---------------------------------
// *********************
Program TY0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  TY0CW00 TY0CW00; // record
  TY0CW01 TY0CW01; // record
  TYWREC TYWREC; // record
  VFXTYP01 VFXTYP01; // record
  VZFC0001 VZFC0001; // record
  WFXTYP01 WFXTYP01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDRTBL {deleteAfterUse = yes}; // table
  use XGPTBL; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use TY0CM.TY0CM001,  // forms
      TY0CM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTY-00000: XPTY-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TY0CM001 initial; /* M001 input/output*/
    set TY0CW00 empty; /* Working storage*/
    set TY0CW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA2REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/
    set ZFCWREC empty; /* Foreign currency*/
    set VZFC0001 empty; /**/

    TY0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TY0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Item was passed*/

      COMMAREA.CAITEM = " "; /* Clear application data*/

      TY0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    end

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TY0C-00000; /* Converse the main process*/


    TY0C-00000: TY0C-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TY0C-00000; /* Converse the main process*/


  end // end main
end // end TY0C

// Main process to display a map
Function TY0C-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TY0C-10000(); /* Obtain the data to display*/

  TY0C-20000(); /* Format and display the map*/

  TY0C-30000(); /* Check attention identifier*/

  TY0C-40000(); /* Verify the entered data*/

  TY0C-50000(); /* Process valid input request*/


end // end TY0C-00000

// Obtain the data to display
Function TY0C-10000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TY0CW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set TY0CW01 empty; /* M001 display storage*/

  TY0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TY0CW01.TY-EXCHG-RATE-CD = TY0CM001.TY-EXCHG-RATE-CD;
                                     /* Rate type*/
  TY0CW01.TY-EXCHG-RATE-DESC = TY0CM001.TY-EXCHG-RATE-DESC;
                                     /* Rate type description*/
  TY0CW01.TY-SOURCE-CURRENCY = TY0CM001.TY-SOURCE-CURRENCY;
                                     /* Source currency*/
  TY0CW01.TY-SOURCE-CURRENCY-DESC = TY0CM001.TY-SOURCE-CURRENCY-DESC;
                                     /* Source currency description*/
  TY0CW01.TY-SOURCE-REGION = TY0CM001.TY-SOURCE-REGION;
                                     /* Source region*/
  TY0CW01.TY-SOURCE-REGION-DESC = TY0CM001.TY-SOURCE-REGION-DESC;
                                     /* Source region description*/
  TY0CW01.TY-DEST-CURRENCY = TY0CM001.TY-DEST-CURRENCY;
                                     /* Destination currency*/
  TY0CW01.TY-DEST-CURRENCY-DESC = TY0CM001.TY-DEST-CURRENCY-DESC;
                                     /* Destination currency description*/
  TY0CW01.TY-DEST-REGION = TY0CM001.TY-DEST-REGION;
                                     /* Destination region*/
  TY0CW01.TY-DEST-REGION-DESC = TY0CM001.TY-DEST-REGION-DESC;
                                     /* Destination region description*/
  TY0CW01.TY-CALENDAR-FROM-DATE = TY0CM001.TY-CALENDAR-FROM-DATE;
                                     /* Calendar from date*/
  TY0CW01.TY-CALENDAR-TO-DATE = TY0CM001.TY-CALENDAR-TO-DATE;
                                /* Calendar to date*/
  TY0CW01.XSN-SESN-RNG-ABRV = TY0CM001.XSN-SESN-RNG-ABRV;
                                     /* Season code*/
  TY0CW01.XGP-GPC-CD = TY0CM001.XGP-GPC-CD;
                                     /* General Product Code*/
  TY0CW01.XGP-GPC-ABRV = TY0CM001.XGP-GPC-ABRV;
                                     /* General Product Code description*/
  TY0CW01.TY-APP-UNAPP-IND = TY0CM001.TY-APP-UNAPP-IND;
                                     /* Approved/Unapproved rates ind*/

   /* ------------------------------------------------------------*/
   /* Establish defaults for fields left blank by the user.*/
   /* ------------------------------------------------------------*/

  if (TY0CW01.TY-APP-UNAPP-IND == " ") /* Approved/Unapproved is blank*/
    TY0CW01.TY-APP-UNAPP-IND = "A"; /* Default value*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TY0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TY0C-10000

// Format and converse the map
Function TY0C-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TYWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TY0CW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TY0C-21000(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TY0CM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TY0CM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TY0CM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If there is an error message to display, set the audible*/
   /* alarm.*/
   /* ------------------------------------------------------------*/

  if (TYWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TYWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TYWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TYWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TY0CM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TY0CM001.XXX-MSG-LOC-ID = TYWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    if (converseVar.validationMsgNum == 17 /* Informational message*/
     || converseVar.validationMsgNum == 20)
      /* next sentence*/
    else
      set TY0CM001 alarm; /* Indicate sound alarm*/
    end

  end

  converse TY0CM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TYWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TYWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TY0CM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TY0CM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TY0CM001.TY-EXCHG-RATE-CD normal; /* Rate type*/
  set TY0CM001.TY-SOURCE-CURRENCY normal; /* Source currency cd*/
  set TY0CM001.TY-SOURCE-REGION normal; /* Source region*/
  set TY0CM001.TY-DEST-CURRENCY normal; /* Destination currency*/
  set TY0CM001.TY-DEST-REGION normal; /* Destination region*/
  set TY0CM001.TY-CALENDAR-FROM-DATE normal; /* From date*/
  set TY0CM001.TY-CALENDAR-TO-DATE normal; /* To date*/
  set TY0CM001.XSN-SESN-RNG-ABRV normal; /* Season code*/
  set TY0CM001.XGP-GPC-CD normal; /* GPC*/
  set TY0CM001.TY-APP-UNAPP-IND normal; /* Approved/Unapproved rates*/
  set TY0CM001.CATOAP normal; /* TO application*/
  set TY0CM001.CAITEM normal; /* Application data*/


end // end TY0C-20000

// Format the data in the map
Function TY0C-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TY0CM001 initial; /* M001 input/output area*/

  TY0CW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If Rate code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (TY0CW01.TY-EXCHG-RATE-CD == " ") /* GPC code missing*/
    set TY0CM001.TY-EXCHG-RATE-CD cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TY0CM001.TY-EXCHG-RATE-CD = TY0CW01.TY-EXCHG-RATE-CD;
  TY0CM001.TY-EXCHG-RATE-DESC = TY0CW01.TY-EXCHG-RATE-DESC;
  TY0CM001.TY-SOURCE-CURRENCY = TY0CW01.TY-SOURCE-CURRENCY;
  TY0CM001.TY-SOURCE-CURRENCY-DESC = TY0CW01.TY-SOURCE-CURRENCY-DESC;
  TY0CM001.TY-SOURCE-REGION = TY0CW01.TY-SOURCE-REGION;
  TY0CM001.TY-SOURCE-REGION-DESC = TY0CW01.TY-SOURCE-REGION-DESC;
  TY0CM001.TY-DEST-CURRENCY = TY0CW01.TY-DEST-CURRENCY;
  TY0CM001.TY-DEST-CURRENCY-DESC = TY0CW01.TY-DEST-CURRENCY-DESC;
  TY0CM001.TY-DEST-REGION = TY0CW01.TY-DEST-REGION;
  TY0CM001.TY-DEST-REGION-DESC = TY0CW01.TY-DEST-REGION-DESC;
  TY0CM001.TY-CALENDAR-FROM-DATE = TY0CW01.TY-CALENDAR-FROM-DATE;
  TY0CM001.TY-CALENDAR-TO-DATE = TY0CW01.TY-CALENDAR-TO-DATE;
  TY0CM001.XSN-SESN-RNG-ABRV = TY0CW01.XSN-SESN-RNG-ABRV;
  TY0CM001.XGP-GPC-CD = TY0CW01.XGP-GPC-CD;
  TY0CM001.XGP-GPC-ABRV = TY0CW01.XGP-GPC-ABRV;
  TY0CM001.TY-APP-UNAPP-IND = TY0CW01.TY-APP-UNAPP-IND;

  if (TY0CM001.TY-CALENDAR-FROM-DATE == " ") /* If calendar blank, format*/
    TY0CM001.TY-CALENDAR-FROM-DATE = "MM-DD-YY";
  end

  if (TY0CM001.TY-CALENDAR-TO-DATE == " ") /* If calendar blank, format*/
    TY0CM001.TY-CALENDAR-TO-DATE = "MM-DD-YY";
  end

end // end TY0C-21000

// Check attention identifier
Function TY0C-30000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TY0CW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TY0CW01 empty; /* M001 display storage*/
    end

    TY0CW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TY0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSTYS-EXIT(); /* Exit to another application*/

      set TY0CM001.CATOAP cursor, bold; /* Highlight*/

    else

      TYWREC.XXX-MSG-LOC-ID = "30000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      converseLib.validationFailed(21); /* Not available at this time*/
      exit stack;
   /* MOVE 'TY0CM001' TO COMMAREA.CAITEM;/* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TY0A"; /* System Menu*/
    end

    XSTYS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5   /* and PF5 was not pressed*/
   && converseVar.eventKey not pf6)  /* and PF6 was not pressed*/

    TYWREC.XXX-MSG-LOC-ID = "30000"; /* Message location*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TY0C-30000

// Verify data that was entered
Function TY0C-40000()
   /* ------------------------------------------------------------*/
   /* If any lists were requested, display the popup window.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-EXCHG-RATE-CD == "?"   /* Rate types requested*/
   || TY0CM001.TY-SOURCE-CURRENCY == "?" /* Currencys requested*/
   || TY0CM001.TY-SOURCE-REGION == "?"   /* Regions requested*/
   || TY0CM001.TY-DEST-CURRENCY == "?"   /* Currencys requested*/
   || TY0CM001.TY-DEST-REGION == "?"     /* Regions requested*/
   || TY0CM001.XGP-GPC-CD == "?")        /* GPC's requested*/

    TY0C-41000(); /* Display corporate table lists*/

  else
    if (TY0CM001.XSN-SESN-RNG-ABRV == "?")
      TYWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
      converseLib.validationFailed(56); /* Pop-up not available*/
      set TY0CM001.XSN-SESN-RNG-ABRV cursor, bold; /* Highlight*/
      return;
    end
  end

   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TYWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set TY0CM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Edit the entries on the map*/
   /* ------------------------------------------------------------*/

  TY0C-43000(); /* Check approved/unapproved flag*/

  TY0C-44000(); /* Check time period*/

  TY0C-45000(); /* Check destination curr/region*/

  TY0C-46000(); /* Check source curr/region*/

  TY0C-47000(); /* Check rate types*/


   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If ENTER requested, indicate edit completed and no errors.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter) /* EDIT was requested*/

    TYWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(17); /* Edit completed and no errors*/

    exit stack; /* Exit to display map*/

  end


end // end TY0C-40000

// Display corporate table lists
Function TY0C-41000()
   /* ------------------------------------------------------------*/
   /* Determine whether ENTER was pressed to request the lists.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    TYWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
    converseLib.validationFailed(19); /* PA/PF key may not be used*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of rate types.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-EXCHG-RATE-CD == "?") /**/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "     RATE TYPES     "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPFXTYP01-POP(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0 /* No selection made*/
     || XX0XW02.XX0XWERR != "N") /* There is an error*/

      TY0CM001.TY-EXCHG-RATE-CD = TY0CW01.TY-EXCHG-RATE-CD;
      TY0CM001.TY-EXCHG-RATE-DESC = TY0CW01.TY-EXCHG-RATE-DESC;
                                             /* Restore prior code*/
    else
      TY0CM001.TY-EXCHG-RATE-CD = WFXTYP01.TY-EXCHG-RATE-CD[XX0XWPIX];
      TY0CM001.TY-EXCHG-RATE-DESC = WFXTYP01.TY-EXCHG-RATE-DESC[XX0XWPIX];
                                             /* Selected code*/
    end

    set TY0CM001.TY-EXCHG-RATE-CD cursor; /* Position cursor*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of source currencys.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY == "?") /**/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "SOURCE CURRENCY"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPZFC-POP(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0 /* No selection made*/
     || XX0XW02.XX0XWERR != "N") /* There is an error*/

      TY0CM001.TY-SOURCE-CURRENCY = TY0CW01.TY-SOURCE-CURRENCY;
      TY0CM001.TY-SOURCE-CURRENCY-DESC = TY0CW01.TY-SOURCE-CURRENCY-DESC;
                                             /* Restore prior code*/
    else
      TY0CM001.TY-SOURCE-CURRENCY = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
      TY0CM001.TY-SOURCE-CURRENCY-DESC = ZFCWREC.ZFC-CRCY-DESC[XX0XWPIX];
                                             /* Selected code*/
    end

    set TY0CM001.TY-SOURCE-CURRENCY cursor; /* Position cursor*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of source region codes.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-REGION == "?") /* Source regions requested*/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "SOURCE REGION"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDR01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      TY0CM001.TY-SOURCE-REGION = TY0CW01.TY-SOURCE-REGION;
      TY0CM001.TY-SOURCE-REGION-DESC = TY0CW01.TY-SOURCE-REGION-DESC;
                                  /* Restore prior code*/
    else
      TY0CM001.TY-SOURCE-REGION = XDRTBL.XDR-PROD-REG-CD[XX0XWPIX];
      TY0CM001.TY-SOURCE-REGION-DESC = XDRTBL.XDR-PROD-REG-DESC[XX0XWPIX];
                                  /* Selected code*/

    end

    set TY0CM001.TY-SOURCE-REGION cursor; /* Position cursor*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of destination currencys.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-CURRENCY == "?") /**/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "DESTINATION CURRENCY"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPZFC-POP(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0 /* No selection made*/
     || XX0XW02.XX0XWERR != "N") /* There is an error*/

      TY0CM001.TY-DEST-CURRENCY = TY0CW01.TY-DEST-CURRENCY;
      TY0CM001.TY-DEST-CURRENCY-DESC = TY0CW01.TY-DEST-CURRENCY-DESC;
                                             /* Restore prior code*/
    else
      TY0CM001.TY-DEST-CURRENCY = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
      TY0CM001.TY-DEST-CURRENCY-DESC = ZFCWREC.ZFC-CRCY-DESC[XX0XWPIX];
                                             /* Selected code*/
    end

    set TY0CM001.TY-DEST-CURRENCY cursor; /* Position cursor*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of destination region codes.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-REGION == "?") /* Destination regions are requested*/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "DESTINATION REGIONS"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDR01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      TY0CM001.TY-DEST-REGION = TY0CW01.TY-DEST-REGION;
      TY0CM001.TY-DEST-REGION-DESC = TY0CW01.TY-DEST-REGION-DESC;
                                  /* Restore prior code*/
    else
      TY0CM001.TY-DEST-REGION = XDRTBL.XDR-PROD-REG-CD[XX0XWPIX];
      TY0CM001.TY-DEST-REGION-DESC = XDRTBL.XDR-PROD-REG-DESC[XX0XWPIX];
                                  /* Selected code*/

    end

    set TY0CM001.TY-DEST-REGION cursor; /* Position cursor*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of GPC codes.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.XGP-GPC-CD == "?") /* GPC list requested*/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "  GPC"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXGP01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      TY0CM001.XGP-GPC-CD = TY0CW01.XGP-GPC-CD; /* Restore prior code*/
      TY0CM001.XGP-GPC-ABRV = TY0CW01.XGP-GPC-ABRV;
    else
      TY0CM001.XGP-GPC-CD = XGPTBL.XGPCD[XX0XWPIX]; /* Selected code*/
      TY0CM001.XGP-GPC-ABRV = XGPTBL.XGPABRV[XX0XWPIX];

    end

    set TY0CM001.XGP-GPC-CD cursor; /* Position cursor*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();
   /* Clear screen before display*/

  TYWREC.XXX-MSG-LOC-ID = "41000"; /* Message location*/
  converseLib.validationFailed(20); /* Requested list(s) displayed*/

  exit stack; /* Exit to display map*/


end // end TY0C-41000

// Check for approved/unapproved
Function TY0C-43000()
   /* --------------------------------------------------------------*/
   /* Verify that the approved/unapproved flag is 'a', 'u', or blank.*/
   /* ---------------------------------------------------------------*/

  if (TY0CM001.TY-APP-UNAPP-IND == "A" /* Approved rates only*/
   || TY0CM001.TY-APP-UNAPP-IND == "U" /* Unapproved rates only*/
   || TY0CM001.TY-APP-UNAPP-IND == " ") /* Default to all*/

    /* next sentence*/

  else

    TYWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(36); /* Invalid indicator*/
    set TY0CM001.TY-APP-UNAPP-IND cursor, bold; /* Highlight*/

  end

end // end TY0C-43000

// Edit time period
Function TY0C-44000()
   /* ------------------------------------------------------------*/
   /* Change the mm-dd-yy format to blanks.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-CALENDAR-FROM-DATE == "MM-DD-YY") /* reset to blanks*/
    TY0CM001.TY-CALENDAR-FROM-DATE = " ";
  end

  if (TY0CM001.TY-CALENDAR-TO-DATE == "MM-DD-YY") /* reset to blanks*/
    TY0CM001.TY-CALENDAR-TO-DATE = " ";
  end

  if (TY0CM001.XGP-GPC-CD == " ") /* Reinitialize the description*/
    TY0CM001.XGP-GPC-ABRV = " ";
  end

   /* --------------------------------------------------------------*/
   /* All rate types except 'sc' require a calendar date.*/
   /* --------------------------------------------------------------*/

  if (TY0CM001.TY-EXCHG-RATE-CD != "SC") /* Not a standard cost*/
    if (TY0CM001.TY-CALENDAR-FROM-DATE == " ") /* calendar is empty*/

      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(57); /* Calendar date required*/
      set TY0CM001.TY-CALENDAR-FROM-DATE cursor, bold; /* Highlight*/

      return;

    end

  end

   /* --------------------------------------------------------------*/
   /* If the rate type is 'standard costing', season/gpc fields*/
   /* are required. Also, season/gpc can only be used with 'sc'.*/
   /* --------------------------------------------------------------*/

  if (TY0CM001.TY-EXCHG-RATE-CD == "SC") /* Standard costing*/

    if (TY0CM001.XSN-SESN-RNG-ABRV != " ") /* There is season*/

      if (TY0CM001.XGP-GPC-CD != " ") /* There is a gpc*/
      /* next sentence*/
      else

        TYWREC.XXX-MSG-LOC-ID = "44000";
        converseLib.validationFailed(37); /* Season requires a gpc*/
        set TY0CM001.XGP-GPC-CD cursor, bold;

        return;

      end
    else
      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(45); /* Season/gpc required*/
      set TY0CM001.XSN-SESN-RNG-ABRV cursor, bold; /* Highlight*/

      return;

    end

    if (TY0CM001.TY-CALENDAR-FROM-DATE != " ") /* There is a date*/

      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(45); /* Season/gpc required*/
      set TY0CM001.TY-CALENDAR-FROM-DATE bold, cursor;

    end

  else

    if (TY0CM001.XSN-SESN-RNG-ABRV != " " /* There is a season*/
     || TY0CM001.XGP-GPC-CD != " ")       /* There is a gpc*/

      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(46);

      if (TY0CM001.XSN-SESN-RNG-ABRV != " ") /* Set season bright*/
        set TY0CM001.XSN-SESN-RNG-ABRV cursor, bold;
      end

      if (TY0CM001.XGP-GPC-CD != " ") /* Set gpc bright*/
        set TY0CM001.XGP-GPC-CD cursor, bold;
      end

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If PF5 , Exchange Rates, is chosen, there cannot be a*/
   /* To date.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-CALENDAR-TO-DATE != " " /* There is a To date*/
   && converseVar.eventKey is pf5)        /* Exchange Rates pressed*/

    TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
    converseLib.validationFailed(47); /**/
    set TY0CM001.TY-CALENDAR-TO-DATE cursor, bold;

    return;

  end

   /* ------------------------------------------------------------*/
   /* If there is a From date, validate the entry.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-CALENDAR-FROM-DATE != " ") /* There is a From date*/

    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "B"; /* mm-dd-yy format*/
    TA2REC.TA2GRGB = TY0CM001.TY-CALENDAR-FROM-DATE;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

    if (TA2REC.TA2RTNCD == 0)
      TY0CW00.TY-FROM-DATE = TA2REC.TA2GRGGN;
    else
      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(38); /* Field missing or invalid*/
      set TY0CM001.TY-CALENDAR-FROM-DATE cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If there is a To date, validate the entry.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-CALENDAR-TO-DATE != " ") /* There is a To date*/

    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "B"; /* mm-dd-yy format*/
    TA2REC.TA2GRGB = TY0CM001.TY-CALENDAR-TO-DATE;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

    if (TA2REC.TA2RTNCD == 0)
      TY0CW00.TY-TO-DATE = TA2REC.TA2GRGGN;
    else
      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(38); /* Field missing or invalid*/
      set TY0CM001.TY-CALENDAR-TO-DATE cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Verify that a To date is greater than the From date.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-CALENDAR-FROM-DATE != " " /* Both dates are entered*/
   && TY0CM001.TY-CALENDAR-TO-DATE != " ") 

    if (TY0CW00.TY-TO-DATE < TY0CW00.TY-FROM-DATE)

      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(38); /* Field missing or invalid*/
      set TY0CM001.TY-CALENDAR-FROM-DATE cursor, bold;
      set TY0CM001.TY-CALENDAR-TO-DATE bold; /* Highlight*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If there is a season, validate it.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.XSN-SESN-RNG-ABRV != " ") /* There is a season*/
    if (TY0CM001.XSN-SESN-RNG-ABRV in YSNTBL.XSNABRV
     && YSNTBL.XXXSTAT[sysVar.arrayIndex] == "A")

      /* next sentence*/

    else

      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(8); /* Field missing or invalid*/
      set TY0CM001.XSN-SESN-RNG-ABRV cursor, bold;

    end

  end

   /* ------------------------------------------------------------*/
   /* If there is a gpc, validate it.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.XGP-GPC-CD != " ") /* There is a gpc*/
    if (TY0CM001.XGP-GPC-CD in XGPTBL.XGPCD /* code in table*/
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active*/

      TY0CM001.XGP-GPC-ABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];

    else

      TYWREC.XXX-MSG-LOC-ID = "44000"; /* Message location*/
      converseLib.validationFailed(8); /* Field missing or invalid*/
      set TY0CM001.XGP-GPC-CD cursor, bold;

    end

  end

end // end TY0C-44000

// Edit destination currency
Function TY0C-45000()
   /* ------------------------------------------------------------*/
   /* Clear the descriptions if the entry is blank.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-CURRENCY == " ") /* Dest currency blank*/
    TY0CM001.TY-DEST-CURRENCY-DESC = " "; /* Clear description*/
  end

  if (TY0CM001.TY-DEST-REGION == " ") /* Dest region blank*/
    TY0CM001.TY-DEST-REGION-DESC = " "; /* Clear description*/
  end

   /* ------------------------------------------------------------*/
   /* Verify that there is a destination currency or region*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-CURRENCY == " " /* Currency is blank*/
   && TY0CM001.TY-DEST-REGION == " ")  /* Region is blank*/

    TYWREC.XXX-MSG-LOC-ID = "45000"; /* Message location*/
    converseLib.validationFailed(32); /* Rate type required*/
    set TY0CM001.TY-DEST-CURRENCY bold, cursor;

    return;

  end

   /* ------------------------------------------------------------*/
   /* Check that there is only one - either currency or region*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-CURRENCY != " " /* Currency is blank*/
   && TY0CM001.TY-DEST-REGION != " ")  /* Region is blank*/

    TYWREC.XXX-MSG-LOC-ID = "45000"; /* Message location*/
    converseLib.validationFailed(33); /* Rate type required*/
    set TY0CM001.TY-DEST-CURRENCY bold, cursor;
    set TY0CM001.TY-DEST-REGION bold;

    return;

  end

   /* ------------------------------------------------------------*/
   /* If the currency was entered, verify that it is correct.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-CURRENCY == "ALL")

    TY0CM001.TY-DEST-CURRENCY-DESC = "ALL CURRENCIES";

  else
    if (TY0CM001.TY-DEST-CURRENCY != " " /* Specific currency was*/
    )                                   
      VZFC0001.ZFC-CRCY-CD = TY0CM001.TY-DEST-CURRENCY;

      TY0CS-DC0060-S(); /* Verify currency*/

      if (SQLCA.VAGen_SQLCODE == 0) /* Move description to map*/
        TY0CM001.TY-DEST-CURRENCY-DESC = VZFC0001.ZFC-CRCY-DESC;
      end

       /* ------------------------------------------------------------*/
       /* If not found or inactive, indicate missing or invalid.*/
       /* ------------------------------------------------------------*/

      if (SQLCA.VAGen_SQLCODE == 100)

        TYWREC.XXX-MSG-LOC-ID = "45000"; /* Message location*/
        converseLib.validationFailed(44); /* Invalid currency*/
        set TY0CM001.TY-DEST-CURRENCY cursor, bold; /* Highlight*/

        return;

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If region was entered, verify that it is correct.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-DEST-REGION != " ") /* Region was entered*/

    if (TY0CM001.TY-DEST-REGION in XDRTBL.XDR-PROD-REG-CD /* Code in tbl*/
     && XDRTBL.XXX-STAT == "A")                           /* and active*/

   /* Move description to map*/
      TY0CM001.TY-DEST-REGION-DESC = XDRTBL.XDR-PROD-REG-DESC[sysVar.arrayIndex];

    else

      /* ------------------------------------------------------------*/
      /* If not found or inactive, indicate missing or invalid.*/
      /* ------------------------------------------------------------*/
      TYWREC.XXX-MSG-LOC-ID = "45000"; /* Message location*/
      converseLib.validationFailed(8); /* Field missing or invalid*/
      set TY0CM001.TY-DEST-REGION cursor, bold; /* Highlight*/

      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* If PF6 - Date range, region is not a valid selection.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-REGION != " " /* A region was entered*/
   || TY0CM001.TY-DEST-REGION != " ") 

    if (converseVar.eventKey is pf6) /* Date range chosen*/

      TYWREC.XXX-MSG-LOC-ID = "45000"; /* Message location*/
      converseLib.validationFailed(39); /* Field missing or invalid*/

      if (TY0CM001.TY-SOURCE-REGION != " ")
        set TY0CM001.TY-SOURCE-REGION cursor, bold;
      end

      if (TY0CM001.TY-DEST-REGION != " ")
        set TY0CM001.TY-DEST-REGION cursor, bold;
      end

    end

  end



end // end TY0C-45000

// Edit source currency
Function TY0C-46000()
   /* ------------------------------------------------------------*/
   /* Clear the descriptions in case values have changed.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY == " ") /* Source curr blank*/
    TY0CM001.TY-SOURCE-CURRENCY-DESC = " "; /* Clear description*/
  end

  if (TY0CM001.TY-SOURCE-REGION == " ") /* Region is blank*/
    TY0CM001.TY-SOURCE-REGION-DESC = " "; /* Clear description*/
  end

   /* ------------------------------------------------------------*/
   /* Verify that there is a source currency or region*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY == " " /* Currency is blank*/
   && TY0CM001.TY-SOURCE-REGION == " ")  /* Region is blank*/

    TYWREC.XXX-MSG-LOC-ID = "46000"; /* Message location*/
    converseLib.validationFailed(32); /* Rate type required*/
    set TY0CM001.TY-SOURCE-CURRENCY bold, cursor;

    return;

  end

   /* ------------------------------------------------------------*/
   /* Check that there is only one - either currency or region*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY != " " /* Currency is blank*/
   && TY0CM001.TY-SOURCE-REGION != " ")  /* Region is blank*/

    TYWREC.XXX-MSG-LOC-ID = "46000"; /* Message location*/
    converseLib.validationFailed(33); /* Rate type required*/
    set TY0CM001.TY-SOURCE-CURRENCY bold, cursor;
    set TY0CM001.TY-SOURCE-REGION bold;

    return;

  end

   /* ------------------------------------------------------------*/
   /* If the currency was entered, verify that it is correct.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY == "ALL") /* All sources requested*/

    TY0CM001.TY-SOURCE-CURRENCY-DESC = "ALL CURRENCIES";

  else

    if (TY0CM001.TY-SOURCE-CURRENCY != " " /* Specific currency was*/
    )                                     
      VZFC0001.ZFC-CRCY-CD = TY0CM001.TY-SOURCE-CURRENCY;

      TY0CS-DC0060-S(); /* Verify currency*/

      if (SQLCA.VAGen_SQLCODE == 0) /* Record found, move description*/
        TY0CM001.TY-SOURCE-CURRENCY-DESC = VZFC0001.ZFC-CRCY-DESC;
      end

      /* ------------------------------------------------------------*/
      /* If not found or inactive, indicate missing or invalid.*/
      /* ------------------------------------------------------------*/

      if (SQLCA.VAGen_SQLCODE == 100)

        TYWREC.XXX-MSG-LOC-ID = "46000"; /* Message location*/
        converseLib.validationFailed(44); /* Invalid currency*/
        set TY0CM001.TY-SOURCE-CURRENCY cursor, bold; /* Highlight*/
        return;

      end

    end
  end

   /* ------------------------------------------------------------*/
   /* Verify that the source currency is not the same as the*/
   /* destination currency.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY != " ") /* There is a value*/
    if (TY0CM001.TY-SOURCE-CURRENCY == TY0CM001.TY-DEST-CURRENCY)

      TYWREC.XXX-MSG-LOC-ID = "46000"; /* Message location*/
      converseLib.validationFailed(43); /* Both cannot be the same*/
      set TY0CM001.TY-SOURCE-CURRENCY cursor, bold; /* Highlight*/

      return;

    end

  end

   /* ------------------------------------------------------------*/
   /* If region was entered, verify that it is correct.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-REGION != " ") /* Region was entered*/

    if (TY0CM001.TY-SOURCE-REGION in XDRTBL.XDR-PROD-REG-CD /* Code in tbl*/
     && XDRTBL.XXX-STAT == "A")                             /* and active*/

      TY0CM001.TY-SOURCE-REGION-DESC = XDRTBL.XDR-PROD-REG-DESC[sysVar.arrayIndex]; /* Move description to map*/

    else

      /* ------------------------------------------------------------*/
      /* If not found or inactive, indicate missing or invalid.*/
      /* ------------------------------------------------------------*/
      TYWREC.XXX-MSG-LOC-ID = "46000"; /* Message location*/
      converseLib.validationFailed(8); /* Field missing or invalid*/
      set TY0CM001.TY-SOURCE-REGION cursor, bold; /* Highlight*/

      return;

    end
  end

   /* ---------------------------------------------------------------*/
   /* Verify that there is not a combination of regions or 'all's.*/
   /* ---------------------------------------------------------------*/

  if (TY0CM001.TY-SOURCE-CURRENCY == "ALL"
   || TY0CM001.TY-SOURCE-REGION != " ")

    if (TY0CM001.TY-DEST-CURRENCY == "ALL"
     || TY0CM001.TY-DEST-REGION != " ")

      TYWREC.XXX-MSG-LOC-ID = "46000";
      converseLib.validationFailed(55); /* Only one 'all' or region allowed*/

      if (TY0CM001.TY-SOURCE-CURRENCY == "ALL")
        set TY0CM001.TY-SOURCE-CURRENCY bold, cursor;
      else
        set TY0CM001.TY-SOURCE-REGION bold, cursor;
      end

      if (TY0CM001.TY-DEST-CURRENCY == "ALL")
        set TY0CM001.TY-DEST-CURRENCY bold, cursor;
      else
        set TY0CM001.TY-DEST-REGION bold, cursor;
      end

    end

  end


end // end TY0C-46000

// Edit rate type
Function TY0C-47000()
   /* ------------------------------------------------------------*/
   /* Verify that there is a rate type.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-EXCHG-RATE-CD == " ") /* Rate type is blank*/

    TY0CM001.TY-EXCHG-RATE-DESC = " "; /* Clear description*/
    TYWREC.XXX-MSG-LOC-ID = "47000"; /* Message location*/
    converseLib.validationFailed(31); /* Rate type required*/
    set TY0CM001.TY-EXCHG-RATE-CD bold, cursor;
  end

   /* ------------------------------------------------------------*/
   /* Determine if the code is in the table and status is active.*/
   /* ------------------------------------------------------------*/

  VFXTYP01.TY-EXCHG-RATE-CD = TY0CM001.TY-EXCHG-RATE-CD;

  TY0CS-IO7130-S(); /* Verify rate type*/

  if (SQLCA.VAGen_SQLCODE == 0)

    TY0CM001.TY-EXCHG-RATE-DESC = VFXTYP01.TY-EXCHG-RATE-DESC;

    if (TY0CM001.TY-EXCHG-RATE-CD != "SC"     /* Not a standard cost*/
     && TY0CM001.TY-CALENDAR-FROM-DATE != " " /* There is a date*/
     && COMMAREA.CACHGFL == "Y"               /* Entry authority*/
    )                                        
      TY0C-47100(); /* Future flag edit*/

    end

  else

    /* ------------------------------------------------------------*/
    /* If not found or inactive, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100)

      TYWREC.XXX-MSG-LOC-ID = "47000"; /* Message location*/
      converseLib.validationFailed(8); /* Field missing or invalid*/
      set TY0CM001.TY-EXCHG-RATE-CD cursor, bold; /* Highlight*/

    end

  end

end // end TY0C-47000

// Future flag edit
Function TY0C-47100()
  /* ------------------------------------------------------------------*/
  /* Future flag edit. If the rate type future flag is 'y', the*/
  /* requested date can be two years in the future. Otherwise the*/
  /* limit is one month.*/
  /* ------------------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

  TY-COMPARE-DATE = XX0XW01.XX0XWDAT; /* Move current date to work*/

  if (VFXTYP01.TY-RATE-TYP-FUTRFL == "Y") /* Future flag is set to yes*/

    TY0CW00.TY-COMPARE-CCYY = TY0CW00.TY-COMPARE-CCYY + 2; /* Add 2 years*/

    if (TY0CW00.TY-FROM-DATE > TY0CW00.TY-COMPARE-DATE)
      TYWREC.XXX-MSG-LOC-ID = "47100";
      converseLib.validationFailed(62); /* Requested date limited to 2 future years*/
      set TY0CM001.TY-CALENDAR-FROM-DATE cursor, bold;
    end

  else

    if (TY0CW00.TY-COMPARE-MM == 12) /* Month is december*/
      TY-COMPARE-MM = 01; /* Set month to January*/
      TY0CW00.TY-COMPARE-CCYY = TY0CW00.TY-COMPARE-CCYY + 1;
                                        /* Add one to year*/

    else

      TY0CW00.TY-COMPARE-MM = TY0CW00.TY-COMPARE-MM + 1;
                                        /* Add one to month*/

    end

    if (TY0CW00.TY-FROM-DATE > TY0CW00.TY-COMPARE-DATE)
      TYWREC.XXX-MSG-LOC-ID = "47100";
      converseLib.validationFailed(63); /* Requested date limited to 1 future month*/
      set TY0CM001.TY-CALENDAR-FROM-DATE cursor, bold;
    end

  end
end // end TY0C-47100

// Process valid input request
Function TY0C-50000()
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/

  TYWREC.TY-EXCHG-RATE-CD = TY0CM001.TY-EXCHG-RATE-CD;
  TYWREC.TY-EXCHG-RATE-DESC = TY0CM001.TY-EXCHG-RATE-DESC;
  TYWREC.TY-SOURCE-CURRENCY = TY0CM001.TY-SOURCE-CURRENCY;
  TYWREC.TY-SOURCE-CURRENCY-DESC = TY0CM001.TY-SOURCE-CURRENCY-DESC;
  TYWREC.TY-SOURCE-REGION = TY0CM001.TY-SOURCE-REGION;
  TYWREC.TY-SOURCE-REGION-DESC = TY0CM001.TY-SOURCE-REGION-DESC;
  TYWREC.TY-DEST-CURRENCY = TY0CM001.TY-DEST-CURRENCY;
  TYWREC.TY-DEST-CURRENCY-DESC = TY0CM001.TY-DEST-CURRENCY-DESC;
  TYWREC.TY-DEST-REGION = TY0CM001.TY-DEST-REGION;
  TYWREC.TY-DEST-REGION-DESC = TY0CM001.TY-DEST-REGION-DESC;
  TYWREC.TY-CALENDAR-FROM-DATE = TY0CM001.TY-CALENDAR-FROM-DATE;
  TYWREC.TY-CALENDAR-TO-DATE = TY0CM001.TY-CALENDAR-TO-DATE;
  TYWREC.XSN-SESN-RNG-ABRV = TY0CM001.XSN-SESN-RNG-ABRV;
  TYWREC.XGP-GPC-CD = TY0CM001.XGP-GPC-CD;
  TYWREC.XGP-GPC-ABRV = TY0CM001.XGP-GPC-ABRV;
  if (TY0CM001.TY-APP-UNAPP-IND == "A") /* Approved only*/
    TYWREC.TY-APP-UNAPP-IND = "Y";
  else
    if (TY0CM001.TY-APP-UNAPP-IND == "U") /* Unapproved only*/
      TYWREC.TY-APP-UNAPP-IND = "N";
    else
      TYWREC.TY-APP-UNAPP-IND = "*"; /* All*/
    end
  end
  if (TY0CM001.TY-CALENDAR-FROM-DATE != " ") /* Move the ccyymmdd*/
    TYWREC.TY-FROM-DATE = TY0CW00.TY-FROM-DATE; /* format over*/
  end

  if (TY0CM001.TY-CALENDAR-TO-DATE != " ") /* Move the ccyymmdd*/
    TYWREC.TY-TO-DATE = TY0CW00.TY-TO-DATE; /* format over*/
  end

   /* ------------------------------------------------------------*/
   /* If the Exchange Rate screen or Date Range screen requested,*/
   /* exit to the proper screen.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5 /* Pf5 was pressed*/
   || converseVar.eventKey is pf6) /* Pf6 was pressed*/

    if (converseVar.eventKey is pf5) /* Exchange Rates screen*/
      COMMAREA.CATOAP = "TY0D";
    end

    if (converseVar.eventKey is pf6) /* Date Range screen*/
      COMMAREA.CATOAP = "TY0E";
    end

    XSTYS-EXIT();

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (TY0CM001.TY-EXCHG-RATE-CD != TY0CW01.TY-EXCHG-RATE-CD
   || TY0CM001.TY-SOURCE-CURRENCY != TY0CW01.TY-SOURCE-CURRENCY
   || TY0CM001.TY-SOURCE-REGION != TY0CW01.TY-SOURCE-REGION
   || TY0CM001.TY-DEST-CURRENCY != TY0CW01.TY-DEST-CURRENCY
   || TY0CM001.TY-DEST-REGION != TY0CW01.TY-DEST-REGION
   || TY0CM001.TY-CALENDAR-FROM-DATE != TY0CW01.TY-CALENDAR-FROM-DATE
   || TY0CM001.TY-CALENDAR-TO-DATE != TY0CW01.TY-CALENDAR-TO-DATE
   || TY0CM001.XSN-SESN-RNG-ABRV != TY0CW01.XSN-SESN-RNG-ABRV
   || TY0CM001.XGP-GPC-CD != TY0CW01.XGP-GPC-CD
   || TY0CM001.TY-APP-UNAPP-IND != TY0CW01.TY-APP-UNAPP-IND)

    TY0CW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, return to previous process.*/
   /* ------------------------------------------------------------*/

  TY0CW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  return; /* Return to previous process*/


end // end TY0C-50000

// Select the table row
Function TY0CS-DC0060-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TYWREC.XXX-MSG-LOC-ID = "DC0060S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DCORP   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VZFC0001"; /* Table view name*/
  TA1REC.TA1TBLKE = VZFC0001.ZFC-CRCY-CD; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0CS-DC0060-S

// Select the table row
Function TY0CS-IO7130-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7130" ("S ", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TYWREC.XXX-MSG-LOC-ID = "IO7130S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TYWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DTREAS  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = VFXTYP01.TY-EXCHG-RATE-CD; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TY0CS-IO7130-S

// Load ZFC into working Record
Function XPFXTYP01-LOAD()

   /* ------------------------------------------------------------*/
    /* XPTYP01-LOAD - Load DCORP.VFXTYP01 into table used by*/
    /* pop-up window process XPTYP-POP.*/
    /*  */
    /* NOTE: This process will use & abuse the SQLCA record!*/
   /* ------------------------------------------------------------*/

  set WFXTYP01 empty; /* Clear DB2 array record*/
  set VFXTYP01 empty; /* Clear DB2 array record*/
  SQLCA.VAGen_SQLCODE = 0; /* init status code*/

   /* ------------------------------------------------------------*/
   /* declare cursor for VFXTYP01 Rows*/
   /* ------------------------------------------------------------*/

  call "IO7130" ("S1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};

   /* ------------------------------------------------------------*/
   /* fetch and load rows into TY0CW02 array*/
   /* ------------------------------------------------------------*/

  call "IO7130" ("N1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes}; /* Initial fetch*/

  while (SQLCA.VAGen_SQLCODE == 0)
    WFXTYP01.WFXTYP01-ARRAY-SIZE = WFXTYP01.WFXTYP01-ARRAY-SIZE + 1;
    if (WFXTYP01.WFXTYP01-ARRAY-SIZE <= 200)
      WFXTYP01.TY-EXCHG-RATE-CD[WFXTYP01-ARRAY-SIZE] = VFXTYP01.TY-EXCHG-RATE-CD;
      WFXTYP01.TY-EXCHG-RATE-DESC[WFXTYP01-ARRAY-SIZE] = VFXTYP01.TY-EXCHG-RATE-DESC;
      call "IO7130" ("N1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
    else /* Table overflow! Report to TA0020*/
      WFXTYP01.WFXTYP01-ARRAY-SIZE = 200; /* Set to table max*/
      SQLCA.VAGen_SQLCODE = 100; /* to break out of loop*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "OVERFLOW";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
      TA1REC.TA1PGMNO = "XPTYP-L"; /* Program number*/
      TA1REC.TA1DBASE = "DTREAS "; /* Data base name*/
      TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diag*/
    end
  end

   /* ------------------------------------------------------------*/
   /* close cursor for VZFC0001*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 100)
    call "IO7130" ("C1", SQLCA, VFXTYP01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* report any unexpected DB2 errors to TA0020*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "LOAD TABLE";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
    TA1REC.TA1PGMNO = "XPTYP-L"; /* Program number*/
    TA1REC.TA1DBASE = "DTREAS "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFXTYP01"; /* Table view name*/
    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diag*/
  end

end // end XPFXTYP01-LOAD

// ZFC (DB2) pop up window
Function XPFXTYP01-POP()
   /* ------------------------------------------------------------*/

      /* CONVERSE POP UP WINDOW FOR CURRENCY CODE TABLE*/
      /* NOTE: This is the DB2 table DCORP.VFXTYP01*/
      /*  */
      /* 1) If TY0CW02 has not been loaded, perform XPTYP-LOAD*/
      /* 2) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 3) Converse the map.*/
      /* 4) Reset selection fields to normal after converse.*/
      /* 5) Check for PFkey and scroll errors.*/
      /* 6) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If we don't have the rate type data, load it     ****/
   /* **********************************************************/

  if (WFXTYP01.WFXTYP01-ARRAY-SIZE <= 0
   || WFXTYP01.WFXTYP01-ARRAY-SIZE > 200)
    XPFXTYP01-LOAD(); /* Load it*/
  end

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XX0XW02.XX0XWCT1 <= WFXTYP01.WFXTYP01-ARRAY-SIZE)
        XX0XM001.XX0XMCD[XX0XWCT2] = WFXTYP01.TY-EXCHG-RATE-CD[XX0XWCT1];
        XX0XM001.XX0XMDES[XX0XWCT2] = WFXTYP01.TY-EXCHG-RATE-DESC[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
          XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
        end
        set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                 /* Increment screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        XX0XM001.XX0XMCD[XX0XWCT2] = WFXTYP01.TY-EXCHG-RATE-CD[XX0XWCT1];
        XX0XM001.XX0XMDES[XX0XWCT2] = WFXTYP01.TY-EXCHG-RATE-DESC[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XX0XW02.XX0XWCT1 > WFXTYP01.WFXTYP01-ARRAY-SIZE)
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPFXTYP01-POP

//*** RECORD=TY0CW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TY0CW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 TY-TO-DATE TY-TO-DATE ; 
  10 TY-FROM-DATE TY-FROM-DATE ; 
  10 TY-COMPARE-DATE TY-COMPARE-DATE ; 
    15 TY-COMPARE-CCYY TY-COMPARE-CCYY ; 
    15 TY-COMPARE-MM TY-COMPARE-MM ; 
    15 TY-COMPARE-DD TY-COMPARE-DD ; 
end // end TY0CW00

//*** RECORD=TY0CW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TY0CW01 type basicRecord
  10 TY-EXCHG-RATE-CD TY-EXCHG-RATE-CD ; 
  10 TY-EXCHG-RATE-DESC TY-EXCHG-RATE-DESC ; 
  10 TY-SOURCE-CURRENCY TY-SOURCE-CURRENCY ; 
  10 TY-SOURCE-CURRENCY-DESC TY-SOURCE-CURRENCY-DESC ; 
  10 TY-SOURCE-REGION TY-SOURCE-REGION ; 
  10 TY-SOURCE-REGION-DESC TY-SOURCE-REGION-DESC ; 
  10 TY-DEST-CURRENCY TY-DEST-CURRENCY ; 
  10 TY-DEST-CURRENCY-DESC TY-DEST-CURRENCY-DESC ; 
  10 TY-DEST-REGION TY-DEST-REGION ; 
  10 TY-DEST-REGION-DESC TY-DEST-REGION-DESC ; 
  10 TY-CALENDAR-FROM-DATE TY-CALENDAR-FROM-DATE ; 
  10 TY-CALENDAR-TO-DATE TY-CALENDAR-TO-DATE ; 
  10 XSN-SESN-RNG-ABRV XSN-SESN-RNG-ABRV ; 
  10 XGP-GPC-CD XGP-GPC-CD ; 
  10 XGP-GPC-ABRV XGP-GPC-ABRV ; 
  10 TY-APP-UNAPP-IND TY-APP-UNAPP-IND ; 
end // end TY0CW01

//*** RECORD=WFXTYP01 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window process - XPZFC-POP.
// 
//            NOTE: It is important that this record be set
//            empty in the initialize section of your program.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02-10-94  MHALST  Created
// ************************************************************
// ************************
Record WFXTYP01 type basicRecord
  10 WFXTYP01-ARRAY-SIZE WFXTYP01-ARRAY-SIZE ; 
  10 WFXTYP01-ARRAY WFXTYP01-ARRAY [200] ; 
    15 TY-EXCHG-RATE-CD TY-EXCHG-RATE-CD ; 
    15 TY-EXCHG-RATE-DESC TY-EXCHG-RATE-DESC ; 
end // end WFXTYP01

// Compare date-ccyy
DataItem TY-COMPARE-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Compare date-ccyymmdd
DataItem TY-COMPARE-DATE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Compare date-dd
DataItem TY-COMPARE-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Compare date-mm
DataItem TY-COMPARE-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Array of data from DB2 table
DataItem WFXTYP01-ARRAY char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of rows in array
DataItem WFXTYP01-ARRAY-SIZE smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

