package in0f;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import ta.common.*;
//*** PROGRAM=IN0F ****
// ------------------------------------------------------------
// This application displays the Inventory Master Menu.
// It provides entry to the subordinate applications.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      09/17/93  SMACMI  New application (re-write)
// 1H0003   11/16/93  SMACMI  European Phase I changes; Enhan-
//                            ced call to help pgm (GD01).
// ------------------------------------------------------------
// *********************
Program IN0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IN00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  IN0FW00 IN0FW00; // record
  INRREC INRREC; // record
  INRREC08 INRREC08 { redefines = INRREC } ; // record
  INWREC INWREC; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use IN0FT; // table
  use IN0FM.IN0FM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPIN-00000: XPIN-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set IN0FM001 initial; /* M001 input/output*/
    set IN0FW00 empty; /* Working storage*/
    set INWREC empty; /* Working storage*/

    IN0FW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto IN0F-00000; /* Converse the main process*/


    IN0F-00000: IN0F-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display IN0FM005*/
     /* ------------------------------------------------------------*/

    goto IN0F-00000; /* Converse the main process*/


  end // end main
end // end IN0F

// Main process to display a map
Function IN0F-00000()
   /* ------------------------------------------------------------*/
   /*  */
   /* main process used to display IN0FM005*/
   /*  */
   /* ------------------------------------------------------------*/

  IN0F-10000(); /* Format and display the map*/

  IN0F-20000(); /* Check attention identifier*/

  IN0F-30000(); /* Verify the data that was entered*/

  IN0F-40000(); /* Process valid input request*/


end // end IN0F-00000

// Format and converse the map
Function IN0F-10000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (IN0FW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    IN0F-11000(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields.*/
   /* ------------------------------------------------------------*/

  IN0F-12000(); /* Check change authorization*/

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0FM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0FM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0FM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0FM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0FM001.XXXERRID = IN0FW00.IN0F-MODULE-ID;
                                   /* Message location*/

    set IN0FM001 alarm; /* Indicate sound alarm*/

  end

  converse IN0FM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0FW00.IN0F-MODULE-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0FM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0FM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set IN0FM001.IN0F-MENU-SEL-CD normal; /* Menu selection*/
  set IN0FM001.CATOAP normal; /* TO application*/
  set IN0FM001.CAITEM normal; /* Application data*/


end // end IN0F-10000

// Format the data in the map
Function IN0F-11000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN0FM001 initial; /* M001 input/output area*/

  IN0FW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

end // end IN0F-11000

// Check change authorization
Function IN0F-12000()
   /* ------------------------------------------------------------*/
   /* If the user is authorized to change data on the screen,*/
   /* return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CACHGFL == "Y") /* User authorized to change*/
    return; /* Return to previous process*/
  end


end // end IN0F-12000

// Check attention identifier
Function IN0F-20000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    IN0FW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0FM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSEXIT(); /* Exit to another application*/

      set IN0FM001.CATOAP cursor, bold; /* Highlight*/

    else

      IN0FW00.IN0F-MODULE-ID = "IN0F-20000"; /* Message location*/
      converseLib.validationFailed(7); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* PF1 was pressed*/
   || converseVar.eventKey is pf3  /* or PF3 was pressed*/
   || converseVar.eventKey is pf13 /* or PF13 was pressed*/
   || converseVar.eventKey is pf14 /* or PF14 was pressed*/
   || converseVar.eventKey is pf15 /* or PF15 was pressed*/
   || converseVar.eventKey is pf16 /* or PF16 was pressed*/
   || converseVar.eventKey is pf17 /* or PF17 was pressed*/
   || converseVar.eventKey is pf18) /* or PF18 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CATOAP = "GD01"; /* HELP program*/
      COMMAREA.CAITEM = "IN0F-5  "; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf13) /* PF13 was pressed*/
      COMMAREA.CATOAP = "IN0M"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf14) /* PF14 was pressed*/
      COMMAREA.CATOAP = "IN0I"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "IN0A"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf16) /* PF16 was pressed*/
      COMMAREA.CATOAP = "IN0S"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf17) /* PF17 was pressed*/
      COMMAREA.CATOAP = "IN0T"; /* Master Menu*/
    end

    if (converseVar.eventKey is pf18) /* PF18 was pressed*/
      COMMAREA.CATOAP = "IN0R"; /* Master Menu*/
    end

    XSEXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    IN0FW00.IN0F-MODULE-ID = "IN0F-20000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0F-20000

// Verify data that was entered
Function IN0F-30000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    IN0FW00.IN0F-MODULE-ID = "IN0F-30000"; /* Message location*/
    converseLib.validationFailed(138); /* Enter only with FAST PATH*/
    set IN0FM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify the menu selection that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0FM001.IN0F-MENU-SEL-CD in IN0FT.IN0F-MENU-SEL-CD)

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    IN0FW00.IN0F-MODULE-ID = "IN0F-30000"; /* Message location*/
    converseLib.validationFailed(6); /* Field missing or invalid*/
    set IN0FM001.IN0F-MENU-SEL-CD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end IN0F-30000

// Process valid input request
Function IN0F-40000()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/

  if (IN0FM001.IN0F-MENU-SEL-CD in IN0FT.IN0F-MENU-SEL-CD)
    COMMAREA.CATOAP = IN0FT.CATOAP[sysVar.arrayIndex];
  end /* TO application*/

  XSEXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = " "; /* TO application*/

  set IN0FM001.IN0F-MENU-SEL-CD cursor, bold; /* Highlight*/


end // end IN0F-40000

//*** RECORD=IN0FW00 ****
// ---------------------------------
// IN0F Application working storage
// ---------------------------------
// ***********************
Record IN0FW00 type basicRecord
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 IN0F-MODULE-ID IN0F-MODULE-ID ; 
end // end IN0FW00

// errid - module id
DataItem IN0F-MODULE-ID char(10)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

