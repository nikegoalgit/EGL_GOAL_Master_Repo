package in0a;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=IN0A ****
// This application allows a user to inquire inventory audit
// data either by document or by product using current file or
// history file depending on the current date only flag (by
// document) or date range (by product).
// 
// There are 6 different screens used by this application.  The
// first four are for the by document inquiry and the other two
// are for the by product inquiry.
// 
// By document inquiry requires for warehouse code and document
// number to be entered.  All the products under the same
// document number are then retrieved, saved in tsq and
// displayed.  Selection can also be done to each of the
// product and a screen will show the size info (qty and desc).
// 
// By product inquiry requires for product key fields and all
// rows matching the selection criteria are saved in tsq and
// displayed on screen. Selection function is also provided.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      08/23/93  HKEMPE  New application.
// IN00     09/24/93  HKEMPE  Changed this application to allow
//                            type of inquiry parameter to be
//                            passed when doing FASTPATH.
// 1H0003   11/18/93  AIVERS  European phase I changes.  Also
//                            enhanced call to help (gd01) and
// 1H0003   12/02/93  SMACMI  fixed problems with passing of
//                            INWREC
// 1H0003   01/18/94  DANNAN  Increased document number to
//                            allow for 9 digit order number.
//                            Most maps only allowed 8 digits,
//                            while the audit DB allowed 9.
// IN268    06/10/94  DANNAN  Removed direct calls to VCOLOR01
//                            and VSTYLE01 and replaced with
//                            a call to a product access subr.
//                            IN8020.  Removed SY1REC & SY2REC,
//                            added INGREC.  Removed SGRPS that
//                            called those IO mods.
// y2kfix   01/29/98  pharwo  y2k changes to xpin-0000.
// *********************
Program IN0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "IN00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  IN0AW00 IN0AW00; // record
  IN0AW01 IN0AW01; // record
  IN0AW02 IN0AW02; // record
  IN5REC IN5REC; // record
  IN6REC IN6REC; // record
  INDREC INDREC; // record
  INGREC INGREC; // record
  INRREC INRREC; // record
  INRREC08 INRREC08 { redefines = INRREC } ; // record
  INWREC INWREC; // record
  INXREC INXREC; // record
  SQLCA SQLCA; // record
  SYPREC SYPREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA2REC01 TA2REC01 { redefines = TA2REC } ; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDMTBL; // table
  use XGPTBL; // table
  use XIFTBL; // table
  use XLCTBL; // table
  use XQATBL; // table
  use XWHTBL; // table
  use IN0AM.IN0AM001,  // forms
      IN0AM.IN0AM002, 
      IN0AM.IN0AM003, 
      IN0AM.IN0AM004, 
      IN0AM.IN0AM005, 
      IN0AM.IN0AM006
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPIN-00000: XPIN-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set IN0AM001 initial; /* M001 input/output*/
    set IN0AM002 initial; /* M002 input/output*/
    set IN0AM003 initial; /* M003 input/output*/
    set IN0AM004 initial; /* M004 input/output*/
    set IN0AM005 initial; /* M005 input/output*/
    set IN0AM006 initial; /* M006 input/output*/
    set IN0AW00 empty; /* Working storage*/
    set IN0AW01 empty; /* M001 display storage*/
    set IN0AW02 empty; /* M002 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    IN0AW00.XXX-TEMP-STG-LNTH = 1215; /* Temporary storage length*/
    IN0AW00.XXX-INX-LMT-NBR = 15; /* Number of lines on a page*/

    INWREC.XXX-MSG-NBR = 0; /* Eliminate garbage msgs from*/
                                    /* passing program*/
     /* -----------------------  Y2K OUT BEGIN  ------------------------*/
     /*  */
     /* MOVE EZEDTE TO IN0AW00.XXX-CURR-DT;/* Initialize current date*/
     /* MOVE 19 TO IN0AW-CURR-CC;        /* Initialize current century*/
     /*  */
     /* ------------------------  Y2K OUT END  -------------------------*/
     /* -----------------------  Y2K IN BEGIN  -------------------------*/
     /*  */
    IN0AW00.XXX-CURR-DT = VGVar.currentGregorianDate; /* Initialize current date*/
     /*  */
     /* ------------------------  Y2K IN END  --------------------------*/

     /* ------------------------------------------------------------*/
     /* Initialize any fields passed from another application.*/
     /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      IN0AM001.XXX-MENU-SEL-CD = COMMAREA.CAITEM;
                                     /* Selected option*/
      if (IN0AM001.XXX-MENU-SEL-CD == 1) /* By Document inquiry*/
        IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/
      else
        if (IN0AM001.XXX-MENU-SEL-CD == 2) /* By Product inquiry*/
          IN0AW00.XXX-MAP-DSP-CD = "5"; /* Map to be displayed*/
        end
      end

      COMMAREA.CAITEM = " "; /* Clear passed data*/

      IN0AW00.XXX-RQT-DATA-FL = "N"; /* * Request for data flag*/

    end


     /* ------------------------------------------------------------*/
     /* Check return code from call to In8000 and move*/
     /* date format code to working storage.*/
     /* ------------------------------------------------------------*/
    if (INRREC.INR-RETURN-CODE < 2) /* 0=req rec, 1=default rec*/
      IN0AW00.INR-ENTRY6-DT = INRREC08.INR-ENTRY6-DT[INR-SEARCH-SUB];
    else
      converseLib.validationFailed(8);
    end


     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto IN0A-00000; /* Converse the main process*/


    IN0A-00000: IN0A-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto IN0A-00000; /* Converse the main process*/


  end // end main
end // end IN0A

// Determine which map to display
Function IN0A-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-MAP-DSP-CD == "1") /* If map 1 (Select Option)*/

    IN0A-10000(); /* Display map 1*/

    exit stack; /* Exit to display map*/

  end

  if (IN0AW00.XXX-MAP-DSP-CD == "2") /* Map 2 (By Document - Left)*/

    IN0A-20000(); /* Display map 2*/
    exit stack; /* Exit to display map*/

  end

  if (IN0AW00.XXX-MAP-DSP-CD == "3") /* Map 3 (By Document - Right)*/

    IN0A-30000(); /* Display map 3*/
    exit stack; /* Exit to display map*/

  end

  if (IN0AW00.XXX-MAP-DSP-CD == "4") /* Map 4 (By Document - Select)*/

    IN0A-40000(); /* Display map 4*/
    exit stack; /* Exit to display map*/

  end

  if (IN0AW00.XXX-MAP-DSP-CD == "5") /* Map 5 (By Product)*/

    IN0A-50000(); /* Display map 5*/
    exit stack; /* Exit to display map*/

  end

  if (IN0AW00.XXX-MAP-DSP-CD == "6") /* Map 6 (By Product - Select)*/

    IN0A-60000(); /* Display map 6*/
    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Write the error to the Error Diagnosis Reporting Facility.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = "00000"; /* Message location*/
  INWREC.XXX-MSG-NBR = 10; /* Invalid value in selection field*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "INVALID MAP NUMBER REQUESTED"; /* Description*/
  TA1REC.TA1MAPNO = IN0AW00.XXX-MAP-DSP-CD; /* Map requested*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

   /* ------------------------------------------------------------*/
   /* Exit to display the application system menu.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "IN0F"; /* System Menu*/

  XSINS-EXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Abnormally terminate the transaction if the exit failed.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1FUNC = "ABND"; /* Termination function*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end IN0A-00000

// Process map 1 (Selection Menu)
Function IN0A-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display the Selection Menu.*/
   /* Processing always returns to the top of this process and falls*/
   /* through subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify entered data and process valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  IN0A-11000(); /* Format and display the map*/

  IN0A-12000(); /* Check attention identifier*/

  IN0A-13000(); /* Verify and process entered data*/


end // end IN0A-10000

// Format and converse map 1
Function IN0A-11000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0AM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0AM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0AM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0AM001.XXX-MSG-LOC-ID = INWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set IN0AM001 alarm; /* Indicate sound alarm*/

  end

  converse IN0AM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0AM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0AM001.CAITEM; /* Application data*/

  set IN0AM001.XXX-MENU-SEL-CD normal; /* Select ind*/

  set IN0AM001.CATOAP normal; /* TO application*/
  set IN0AM001.CAITEM normal; /* Application data*/


end // end IN0A-11000

// Check attention identifier
Function IN0A-12000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0AM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      IN0AS-TA0050-P(); /* Purge any temporary storage*/

      XSINS-EXIT(); /* Exit to another application*/

      set IN0AM001.CATOAP cursor, bold; /* Highlight*/

    else

      INWREC.XXX-MSG-LOC-ID = "12000"; /* Message location*/
      converseLib.validationFailed(137); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "IN0A-5"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      if (COMMAREA.CAFROMAP == " " /* Same application*/
       || COMMAREA.CAFROMAP == "IN0A")
        COMMAREA.CATOAP = "IN0F"; /* System Menu*/
      else /* Another application*/
        COMMAREA.CATOAP = COMMAREA.CAFROMAP;
      end

    end

    IN0AS-TA0050-P(); /* Purge any temporary storage*/

    XSINS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14) /* and PF14 was not pressed*/

    INWREC.XXX-MSG-LOC-ID = "12000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0A-12000

// Verify/process entered data
Function IN0A-13000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM001.CAITEM > " ") /* Application data was entered*/

    INWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(5); /* Enter only with FAST PATH*/
    set IN0AM001.CAITEM cursor, bold; /* Highlight*/

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* Verify selected option thru ENTER/PF13/PF14.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* Inquiry By Document*/

    IN0AW00.XXX-MAP-DSP-CD = "2";

    return;

  end

  if (converseVar.eventKey is pf14) /* Inquiry By Product*/

    IN0AW00.XXX-MAP-DSP-CD = "5";

    return;

  end

  if (IN0AM001.XXX-MENU-SEL-CD == 1) /* Inquiry By Document*/

    IN0AW00.XXX-MAP-DSP-CD = "2";

    return;

  end

  if (IN0AM001.XXX-MENU-SEL-CD == 2) /* Inquiry By Product*/

    IN0AW00.XXX-MAP-DSP-CD = "5";

    return;

  end

  INWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
  converseLib.validationFailed(10); /* Selected option not valid*/
  set IN0AM001.XXX-MENU-SEL-CD cursor, bold; /* Highlight*/

  exit stack; /* Exit to display map*/


end // end IN0A-13000

// Process map 2 (By Doc - Left)
Function IN0A-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display By Document - Left.*/
   /* Processing always returns to the top of this process and falls*/
   /* through subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  IN0A-21000(); /* Obtain the data to display*/

  IN0A-22000(); /* Format and display the map*/

  IN0A-23000(); /* Check attention identifier*/

  IN0A-24000(); /* Verify the entered data*/

  IN0A-25000(); /* Process valid input request*/


end // end IN0A-20000

// Obtain data for display
Function IN0A-21000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR == 0) /* No message to display*/
    IN0AW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  IN0AS-TA0050-P(); /* Purge any temporary storage*/

  IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  IN0AW01.XWHCD = IN0AM002.XWHCD; /* Warehouse code*/
  IN0AW01.XWHABRV = IN0AM002.XWHABRV; /* Warehouse abrv*/
  IN0AW01.IN5TRDCD = IN0AM002.IN5TRDCD; /* Audit tran doc code*/
  IN0AW01.IN5TRDOC = IN0AM002.IN5TRDOC; /* Audit tran doc nbr*/
  IN0AW01.IN5TRSUB = IN0AM002.IN5TRSUB; /* Audit tran doc sub*/
  IN0AW01.IN0AW-XIF-TRN-FLD-CD = IN0AM002.IN0AM-XIF-TRN-FLD-CD; /* Audit tran field code*/
  IN0AW01.XIFABRV = IN0AM002.XIFABRV; /* Audit tran field abrv*/
  IN0AW01.IN0AW-CURR-DT-ONLY-FL = IN0AM002.IN0AM-CURR-DT-ONLY-FL; /* Current date only flag*/

  IN0AW00.IN0AW-DOC-KEY-FLD = IN0AW01.IN0AW-DOC-KEY-FLD;
                                   /* By Document key fields*/


   /* ------------------------------------------------------------*/
   /* Process current or history file depending on date selection.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-REC-SEQ-NBR = 0; /* Initialize rec seq nbr*/

  if (IN0AW01.IN0AW-CURR-DT-ONLY-FL == "Y") /* Current date only flag*/

    IN0A-21100(); /* Process curr inv audit tran file*/
  else
    IN0A-21200(); /* Process hist inv audit tran file*/

  end

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    INWREC.XXX-MSG-LOC-ID = "21000"; /* Message location*/
    converseLib.validationFailed(23); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end IN0A-21000

// Obtain data from current file
Function IN0A-21100()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN6REC empty; /* Clear row storage area*/

  IN6REC.XWHCD = IN0AW01.XWHCD; /* Warehouse code*/
  IN6REC.IN5TRDCD = IN0AW01.IN5TRDCD; /* Audit tran doc code*/
  IN6REC.IN5TRDOC = IN0AW01.IN5TRDOC; /* Audit tran doc nbr*/
  IN6REC.IN5TRSUB = IN0AW01.IN5TRSUB; /* Audit tran doc sub*/

  IN0AS-IO2760-S2(); /* Select set and open cursor*/
                                   /* (dinvnt.viadit02)*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  IN0AW00.IN0AW-EOF-FL = "N"; /* End of cursor flag*/

  while (IN0AW00.IN0AW-EOF-FL == "N") /* Until end of cursor*/

    IN0AS-IO2760-N2(); /* Fetch next row in cursor*/
                                   /* (dinvnt.viadit02)*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (IN0AW00.IN0AW-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* Move current item data to common data storage.*/
      /* ------------------------------------------------------------*/

      set INDREC empty;

      INDREC.XWHCD = IN6REC.XWHCD; /* Warehouse code*/
      INDREC.XOWCD = IN6REC.XOWCD; /* Owner group code*/

      INDREC.IN5TRPRT = IN6REC.IN5TRPRT; /* Audit tran part nbr*/

      INDREC.IN5TRDCD = IN6REC.IN5TRDCD; /* Audit tran doc code*/
      INDREC.IN5TRDOC = IN6REC.IN5TRDOC; /* Audit tran doc nbr*/
      INDREC.IN5TRSUB = IN6REC.IN5TRSUB; /* Audit tran doc sub*/

      INDREC.IN5TRDTE = IN6REC.IN5TRDTE; /* Audit tran date*/
      INDREC.IN5TRTIM = IN6REC.IN5TRTIM; /* Audit tran time*/

      INDREC.SY1STNBR = IN6REC.SY1STNBR; /* Style nbr*/
      INDREC.SY2CLRID = IN6REC.SY2CLRID; /* Color id*/

      INDREC.XGPCD = IN6REC.XGPCD; /* GPC code*/
      INDREC.XDMCD = IN6REC.XDMCD; /* Dimension code*/
      INDREC.XQACD = IN6REC.XQACD; /* Quality code*/
      INDREC.XSDCD = IN6REC.XSDCD; /* Spec difference code*/
      INDREC.XSACD = IN6REC.XSACD; /* Shade code*/
      INDREC.XPGCD = IN6REC.XPGCD; /* Package type code*/
      INDREC.XUMCD = IN6REC.XUMCD; /* Unit of measure code*/
      INDREC.XIFCD = IN6REC.XIFCD; /* Audit tran field code*/

      IN0AW00.IN0AW-WS-INX-QTY-DESC = 1;
                                   /* Initialize ws qty/desc index*/

      while (IN0AW00.IN0AW-WS-INX-QTY-DESC <= 40)

        INDREC.IN6TQT[IN0AW-WS-INX-QTY-DESC] = IN6REC.IN6TQT[IN0AW-WS-INX-QTY-DESC];
                                   /* Audit tran qty*/
        IN0AW00.IN0AW-WS-INX-QTY-DESC = IN0AW00.IN0AW-WS-INX-QTY-DESC + 1;
                                   /* Increment qty index by 1*/

      end

      /* ------------------------------------------------------------*/
      /* Select header data using item key fields.*/
      /* ------------------------------------------------------------*/

      set IN5REC empty;

      IN5REC.XWHCD = IN6REC.XWHCD; /* Warehouse code*/
      IN5REC.XOWCD = IN6REC.XOWCD; /* Owner group code*/
      IN5REC.IN5TRDCD = IN6REC.IN5TRDCD; /* Audit tran doc code*/
      IN5REC.IN5TRPRT = IN6REC.IN5TRPRT; /* Audit tran part*/
      IN5REC.IN5TRDOC = IN6REC.IN5TRDOC; /* Audit tran doc nbr*/
      IN5REC.IN5TRSUB = IN6REC.IN5TRSUB; /* Audit tran doc sub*/
      IN5REC.IN5TRDTE = IN6REC.IN5TRDTE; /* Audit tran date*/
      IN5REC.IN5TRTIM = IN6REC.IN5TRTIM; /* Audit tran time*/

      IN0AS-IO2750-S(); /* Select requested row*/
                                   /* (dinvnt.viadhd02)*/

      /* ------------------------------------------------------------*/
      /* Move current header data to common data storage.*/
      /* ------------------------------------------------------------*/

      INDREC.XIGCD = IN5REC.XIGCD; /* Tran group code*/
      INDREC.XITCD = IN5REC.XITCD; /* Tran type code*/
      INDREC.XIRCD = IN5REC.XIRCD; /* Tran reason code*/
      INDREC.IN5USRID = IN5REC.IN5USRID; /* Audit tran user id*/
      INDREC.IN5TRDDT = IN5REC.IN5TRDDT; /* Audit tran doc date*/
      INDREC.IN5TRREF = IN5REC.IN5TRREF; /* Audit tran xref nbr*/

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      IN0A-21300(); /* Save data in display storage*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (IN0AW00.XXX-INX-FLD-NBR > IN0AW00.XXX-INX-LMT-NBR) /* Page is full*/

      IN0AS-TA0050-A(); /* Add page to temporary storage*/

      IN0AW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    IN0AS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  IN0AS-IO2760-C2(); /* Close selected set cursor*/
                                   /* (dinvnt.viadit02)*/


end // end IN0A-21100

// Obtain data from history file
Function IN0A-21200()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  set INDREC empty; /* Clear row storage area*/

  INDREC.XWHCD = IN0AW01.XWHCD; /* Warehouse code*/
  INDREC.IN5TRDCD = IN0AW01.IN5TRDCD; /* Audit tran doc code*/
  INDREC.IN5TRDOC = IN0AW01.IN5TRDOC; /* Audit tran doc nbr*/
  INDREC.IN5TRSUB = IN0AW01.IN5TRSUB; /* Audit tran doc sub*/

  if (IN0AW01.IN0AW-XIF-TRN-FLD-CD == "A " /* Audit tran field code*/
   || IN0AW01.IN0AW-XIF-TRN-FLD-CD == " A")

    INDREC.XIFCD = " ";
  else
    INDREC.XIFCD = IN0AW01.IN0AW-XIF-TRN-FLD-CD;

  end

  set INXREC empty;

  INXREC.INXFC = "S1";
  INXREC.INXSDT = 19861101;
  INXREC.INXEDT = 29990101;

  IN0AS-IO0980-S1(); /* Select set and open cursor*/
                                   /* (dinvnt.viaitm02)*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  IN0AW00.IN0AW-EOF-FL = "N"; /* End of cursor flag*/

  while (IN0AW00.IN0AW-EOF-FL == "N") /* Until end of cursor*/

    INXREC.INXFC = "N1";

    IN0AS-IO0980-N1(); /* Fetch next row in cursor*/
                                   /* (dinvnt.viaitm02)*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (IN0AW00.IN0AW-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      IN0A-21300(); /* Save data in display storage*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (IN0AW00.XXX-INX-FLD-NBR > IN0AW00.XXX-INX-LMT-NBR) /* Page is full*/

      IN0AS-TA0050-A(); /* Add page to temporary storage*/

      IN0AW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    IN0AS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  INXREC.INXFC = "C1";

  IN0AS-IO0980-C1(); /* Close selected set cursor*/
                                   /* (dinvnt.viaitm02)*/


end // end IN0A-21200

// Save data in display storage
Function IN0A-21300()
   /* -------------------------------------------------------*/
   /* Save data from common data storage to display storage.*/
   /* -------------------------------------------------------*/

  if (IN0AW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
   && IN0AW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/

    IN0AW01.IN0AW-DOC-KEY-FLD = IN0AW00.IN0AW-DOC-KEY-FLD; /* By Document key fields*/

  end

  IN0AW01.IN5TRPRT[XXX-INX-FLD-NBR] = INDREC.IN5TRPRT; /* Audit tran part nbr*/

  IN0AW00.XXX-REC-SEQ-NBR = IN0AW00.XXX-REC-SEQ-NBR + 1;
                                   /* Increment record seq nbr*/
  if (IN0AW00.XXX-REC-SEQ-NBR <= 9999)
    /* next sentence*/
  else
    INWREC.XXX-MSG-LOC-ID = "21300"; /* Message location*/
    converseLib.validationFailed(163); /* Overflow*/
    exit stack;
  end

  IN0AW01.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] = IN0AW00.XXX-REC-SEQ-NBR;
                                   /* Record seq nbr*/
  IN0AW01.XOWCD[XXX-INX-FLD-NBR] = INDREC.XOWCD;
                                   /* Owner group code*/
  IN0AW01.IN5TRDDT[XXX-INX-FLD-NBR] = INDREC.IN5TRDDT;
                                   /* Audit tran doc date*/
  IN0AW01.XIGCD[XXX-INX-FLD-NBR] = INDREC.XIGCD;
                                   /* Tran group code*/
  IN0AW01.XITCD[XXX-INX-FLD-NBR] = INDREC.XITCD;
                                   /* Tran type code*/
  IN0AW01.XIRCD[XXX-INX-FLD-NBR] = INDREC.XIRCD;
                                   /* Tran reason code*/
  IN0AW01.XGPCD[XXX-INX-FLD-NBR] = INDREC.XGPCD;
                                   /* GPC code*/
  IN0AW01.SY1STNBR[XXX-INX-FLD-NBR] = INDREC.SY1STNBR;
                                   /* Style nbr*/
  IN0AW01.SY2CLRID[XXX-INX-FLD-NBR] = INDREC.SY2CLRID;
                                   /* Color id*/
  IN0AW01.XDMCD[XXX-INX-FLD-NBR] = INDREC.XDMCD;
                                   /* Dimension code*/
  IN0AW01.XQACD[XXX-INX-FLD-NBR] = INDREC.XQACD;
                                   /* Quality code*/
  IN0AW01.XSDCD[XXX-INX-FLD-NBR] = INDREC.XSDCD;
                                   /* Spec difference code*/
  IN0AW01.XSACD[XXX-INX-FLD-NBR] = INDREC.XSACD;
                                   /* Shade code*/
  IN0AW01.XPGCD[XXX-INX-FLD-NBR] = INDREC.XPGCD;
                                   /* Package type*/
  IN0AW01.XUMCD[XXX-INX-FLD-NBR] = INDREC.XUMCD;
                                   /* Unit of measure*/
  IN0AW01.XIFCD[XXX-INX-FLD-NBR] = INDREC.XIFCD;
                                   /* Audit tran field code*/
  IN0AW01.IN5USRID[XXX-INX-FLD-NBR] = INDREC.IN5USRID;
                                   /* Audit tran user id*/
  IN0AW01.IN5TRREF[XXX-INX-FLD-NBR] = INDREC.IN5TRREF;
                                   /* Audit tran xref nbr*/
  IN0AW01.IN5TRDTE[XXX-INX-FLD-NBR] = INDREC.IN5TRDTE;
                                   /* Audit tran date*/
  IN0AW01.IN5TRTIM[XXX-INX-FLD-NBR] = INDREC.IN5TRTIM;
                                   /* Audit tran time*/

   /* -------------------------------------------------------*/
   /* Accummulate audit tran qty.*/
   /* -------------------------------------------------------*/

  IN0AW01.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR] = 0;
                                   /* Audit tran total qty*/

  IN0AW00.IN0AW-WS-INX-QTY-DESC = 1; /* Initialize qty/desc index*/

  while (IN0AW00.IN0AW-WS-INX-QTY-DESC <= 40)

    IN0AW01.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR] = IN0AW01.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR] +     INDREC.IN6TQT[IN0AW-WS-INX-QTY-DESC];

    IN0AW00.IN0AW-WS-INX-QTY-DESC = IN0AW00.IN0AW-WS-INX-QTY-DESC + 1;

  end

   /* -------------------------------------------------------*/
   /* Obtain product life cycle code when current item differs*/
   /* from the previous item.*/
   /* -------------------------------------------------------*/

  if (IN0AW01.XGPCD[XXX-INX-FLD-NBR] != IN0AW00.XGPCD
   || IN0AW01.SY1STNBR[XXX-INX-FLD-NBR] != IN0AW00.SY1STNBR
   || IN0AW01.SY2CLRID[XXX-INX-FLD-NBR] != IN0AW00.SY2CLRID
   || IN0AW01.XDMCD[XXX-INX-FLD-NBR] != IN0AW00.XDMCD)

    set INGREC empty;
    set TA1REC empty;

    INGREC.ING-PROCESS-CD = "PD"; /* 'PD' means get product data*/
    INGREC.XGP-GPC-CD = IN0AW01.XGPCD[XXX-INX-FLD-NBR];
                                   /* GPC code*/
    INGREC.SY-STY-NBR = IN0AW01.SY1STNBR[XXX-INX-FLD-NBR];
                                   /* Style nbr*/
    INGREC.SY-COLR-CD-ID = IN0AW01.SY2CLRID[XXX-INX-FLD-NBR];
                                   /* Color id*/
    INGREC.XDM-DIM-CD = IN0AW01.XDMCD[XXX-INX-FLD-NBR];
                                   /* Dimension code*/

    TA1REC.TA1PGMNM = "21300";
    INGREC.TA1-GROUP = TA1REC.TA1-GROUP;

    XSINS-CALL-IN8020(); /* Get product data*/

    if (INGREC.ING-RETURN-CD > 0000)
      IN0AS-IN8020-ERRS(); /* Post warning*/
    end

    if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT1)
      IN0AW01.XLCCD[XXX-INX-FLD-NBR] = INGREC.XLCCD1;
    else
      if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT2)
        IN0AW01.XLCCD[XXX-INX-FLD-NBR] = INGREC.XLCCD2;
      else
        if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT3)
          IN0AW01.XLCCD[XXX-INX-FLD-NBR] = INGREC.XLCCD3;
        else
          if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT4)
            IN0AW01.XLCCD[XXX-INX-FLD-NBR] = INGREC.XLCCD4;
          else
            INWREC.XXX-MSG-LOC-ID = "21300"; /* Message location*/
            converseLib.validationFailed(175); /* Product life cycle dates invalid*/
            exit stack;
          end
        end
      end
    end

    IN0AW00.XGPCD = IN0AW01.XGPCD[XXX-INX-FLD-NBR];
    IN0AW00.SY1STNBR = IN0AW01.SY1STNBR[XXX-INX-FLD-NBR];
    IN0AW00.SY2CLRID = IN0AW01.SY2CLRID[XXX-INX-FLD-NBR];
    IN0AW00.XDMCD = IN0AW01.XDMCD[XXX-INX-FLD-NBR];

    IN0AW00.XLCCD = IN0AW01.XLCCD[XXX-INX-FLD-NBR];

  else
    IN0AW01.XLCCD[XXX-INX-FLD-NBR] = IN0AW00.XLCCD;

  end


end // end IN0A-21300

// Format and converse map 2
Function IN0A-22000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    IN0A-22100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0AM002.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0AM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0AM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0AM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0AM002.XXX-MSG-LOC-ID = INWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set IN0AM002 alarm; /* Indicate sound alarm*/

  end

  converse IN0AM002 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0AM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0AM002.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set IN0AM002.XWHCD normal; /* Warehouse code*/
  set IN0AM002.IN5TRDCD normal; /* Audit tran doc code*/
  set IN0AM002.IN5TRDOC normal; /* Audit tran doc nbr*/
  set IN0AM002.IN5TRSUB normal; /* Audit tran doc sub*/
  set IN0AM002.IN0AM-XIF-TRN-FLD-CD normal; /* Audit tran field code*/
  set IN0AM002.IN0AM-CURR-DT-ONLY-FL normal; /* Current date only flag*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && IN0AM002.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] > 0)
                                   /* or end of formatted lines*/

    set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set IN0AM002.CATOAP normal; /* TO application*/
  set IN0AM002.CAITEM normal; /* Application data*/


end // end IN0A-22000

// Format map 2 data
Function IN0A-22100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN0AM002 initial; /* M002 input/output area*/

  IN0AW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Set up the initial map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-REC-SEQ-NBR == 0 /* If initial processing*/
   && converseVar.validationMsgNum == 0) /* and no error*/

    IN0AM002.IN0AM-XIF-TRN-FLD-CD = "A ";
    IN0AM002.XIFABRV = "ALL";

    IN0AM002.IN0AM-CURR-DT-ONLY-FL = "N";

    IN0AW01.IN0AW-XIF-TRN-FLD-CD = IN0AM002.IN0AM-XIF-TRN-FLD-CD;
    IN0AW01.IN0AW-CURR-DT-ONLY-FL = IN0AM002.IN0AM-CURR-DT-ONLY-FL;

    set IN0AM002.XXX-CURR-PAGE-DESC skip, invisible; /* "PAGE" literal*/
    set IN0AM002.XXX-CURR-PAGE-NBR skip, invisible; /* Current page*/
    set IN0AM002.XXX-HI-PAGE-DESC skip, invisible; /* "OF" literal*/
    set IN0AM002.XXX-HI-PAGE-NBR skip, invisible; /* Highest page*/

    IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize map index*/

    while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)

      set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] skip, invisible;

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;

    end

    return;

  end

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (IN0AW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        IN0AS-TA0050-U(); /* Update temporary storage page*/

        IN0AW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-CURR-PAGE-NBR > IN0AW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      IN0AS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set IN0AM002.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    IN0AM002.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set IN0AM002.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    IN0AM002.XXX-HI-PAGE-NBR = IN0AW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* If key field is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.IN0AM-CURR-DT-ONLY-FL == " ") /* Current date selection*/
    set IN0AM002.IN0AM-CURR-DT-ONLY-FL cursor;
  end

  if (IN0AM002.IN0AM-XIF-TRN-FLD-CD == " ") /* Audit tran field code*/
    set IN0AM002.IN0AM-XIF-TRN-FLD-CD cursor;
  end

  if (IN0AM002.IN5TRSUB < 0) /* Audit tran doc sub*/
    set IN0AM002.IN5TRSUB cursor;
  end

  if (IN0AM002.IN5TRDOC < 0) /* Audit tran doc nbr*/
    set IN0AM002.IN5TRDOC cursor;
  end

  if (IN0AM002.IN5TRDCD == " ") /* Audit tran doc code*/
    set IN0AM002.IN5TRDCD cursor;
  end

  if (IN0AM002.XWHCD == " ") /* Warehouse code missing*/
    set IN0AM002.XWHCD cursor;
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  IN0AM002.XWHCD = IN0AW01.XWHCD; /* Warehouse code*/
  IN0AM002.XWHABRV = IN0AW01.XWHABRV; /* Warehouse abrv*/
  IN0AM002.IN5TRDCD = IN0AW01.IN5TRDCD; /* Audit tran doc code*/
  IN0AM002.IN5TRDOC = IN0AW01.IN5TRDOC; /* Audit tran doc nbr*/
  IN0AM002.IN5TRSUB = IN0AW01.IN5TRSUB; /* Audit tran doc sub*/
  IN0AM002.IN0AM-XIF-TRN-FLD-CD = IN0AW01.IN0AW-XIF-TRN-FLD-CD; /* Audit tran field code*/
  IN0AM002.XIFABRV = IN0AW01.XIFABRV; /* Audit tran field abrv*/
  IN0AM002.IN0AM-CURR-DT-ONLY-FL = IN0AW01.IN0AW-CURR-DT-ONLY-FL; /* Current date only flag*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && IN0AW01.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] > 0)

    if (IN0AW00.XXX-INX-FLD-NBR == 1) /* First select field*/

      set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    else
      set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    end

    IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
                                   /* Line select ind*/
    if (IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "*")
                                   /* If already selected*/
      set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    end

    IN0AM002.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] = IN0AW01.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR];
                                   /* Record seq nbr*/

    IN0AM002.XOWCD[XXX-INX-FLD-NBR] = IN0AW01.XOWCD[XXX-INX-FLD-NBR];
                                   /* Owner group code*/
    IN0AM002.IN5TRDDT[XXX-INX-FLD-NBR] = IN0AW01.IN5TRDDT[XXX-INX-FLD-NBR];
                                   /* Audit tran doc date*/
    IN0AM002.XIGCD[XXX-INX-FLD-NBR] = IN0AW01.XIGCD[XXX-INX-FLD-NBR];
                                   /* Tran group code*/
    IN0AM002.XITCD[XXX-INX-FLD-NBR] = IN0AW01.XITCD[XXX-INX-FLD-NBR];
                                   /* Tran type code*/
    IN0AM002.XIRCD[XXX-INX-FLD-NBR] = IN0AW01.XIRCD[XXX-INX-FLD-NBR];
                                   /* Tran reason code*/
    IN0AM002.XGPCD[XXX-INX-FLD-NBR] = IN0AW01.XGPCD[XXX-INX-FLD-NBR];
                                   /* GPC code*/
    IN0AM002.SY1STNBR[XXX-INX-FLD-NBR] = IN0AW01.SY1STNBR[XXX-INX-FLD-NBR];
                                   /* Style nbr*/
    IN0AM002.SY2CLRID[XXX-INX-FLD-NBR] = IN0AW01.SY2CLRID[XXX-INX-FLD-NBR];
                                   /* Color id*/
    IN0AM002.XDMCD[XXX-INX-FLD-NBR] = IN0AW01.XDMCD[XXX-INX-FLD-NBR];
                                   /* Dimension code*/
    IN0AM002.XQACD[XXX-INX-FLD-NBR] = IN0AW01.XQACD[XXX-INX-FLD-NBR];
                                   /* Quality code*/
    IN0AM002.XLCCD[XXX-INX-FLD-NBR] = IN0AW01.XLCCD[XXX-INX-FLD-NBR];
                                   /* Product life cycle code*/
    IN0AM002.XSDCD[XXX-INX-FLD-NBR] = IN0AW01.XSDCD[XXX-INX-FLD-NBR];
                                   /* Spec difference code*/
    /* MOVE IN0AW01.XSACD(XXX-INX-FLD-NBR) TO*/
    /* IN0AM002.XSACD(XXX-INX-FLD-NBR);*/
                                   /* Shade code*/
    IN0AM002.XPGCD[XXX-INX-FLD-NBR] = IN0AW01.XPGCD[XXX-INX-FLD-NBR];
                                   /* Package type*/
    IN0AM002.XUMCD[XXX-INX-FLD-NBR] = IN0AW01.XUMCD[XXX-INX-FLD-NBR];
                                   /* Unit of measure*/
    IN0AM002.IN0AM-TOTAL-QTY[XXX-INX-FLD-NBR] = IN0AW01.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR];
                                   /* Audit tran total qty*/
    IN0AM002.XIFCD[XXX-INX-FLD-NBR] = IN0AW01.XIFCD[XXX-INX-FLD-NBR];
                                   /* Audit tran field code*/

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  if (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)

    while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)

      set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] skip, invisible;

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;

    end

  end


end // end IN0A-22100

// Check attention identifier
Function IN0A-23000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (IN0AW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set IN0AW01 empty; /* M002 display storage*/
    end

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      IN0AS-TA0050-P(); /* Purge any temporary storage*/

      XSINS-EXIT(); /* Exit to another application*/

      set IN0AM002.CATOAP cursor, bold; /* Highlight*/

    else

      INWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
      converseLib.validationFailed(137); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "IN0A-10"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
      IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      IN0AW00.XXX-MAP-DSP-CD = "1"; /* Display map 1*/
      IN0AW00.XXX-REC-SEQ-NBR = 0; /* Record seq nbr*/

      set IN0AM001 initial;
      set IN0AM002 initial;
      set IN0AM003 initial;
      set IN0AM004 initial;
      set IN0AM005 initial;
      set IN0AM006 initial;

      set IN0AW01 empty;
      set IN0AW02 empty;

      exit stack;

    end

    IN0AS-TA0050-P(); /* Purge any temporary storage*/

    XSINS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf11  /* and PF11 was not pressed*/
   && converseVar.eventKey not pf14) /* and PF14 was not pressed*/

    INWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0A-23000

// Verify entered data
Function IN0A-24000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.CAITEM > " ") /* Application data was entered*/

    INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(5); /* Enter only with FAST PATH*/
    set IN0AM002.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Check if key fields were entered.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf14) /* If By Product requested*/
    /* next sentence*/
  else
    if (IN0AM002.IN0AM-CURR-DT-ONLY-FL <= " ")
                                   /* If no current date only flag*/
      INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM002.IN0AM-CURR-DT-ONLY-FL cursor, bold; /* Highlight*/
    end

    if (IN0AM002.IN0AM-XIF-TRN-FLD-CD <= " ") /* If no audit tran field code*/
      INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM002.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/
    end

    if (IN0AM002.IN5TRSUB < 0) /* If no audit tran doc sub*/
      INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM002.IN5TRSUB cursor, bold; /* Highlight*/
    end

    if (IN0AM002.IN5TRDOC <= 0) /* If no audit tran doc nbr*/
      INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM002.IN5TRDOC cursor, bold; /* Highlight*/
    end

    if (IN0AM002.IN5TRDCD <= " ") /* If no audit tran doc code*/
      INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM002.IN5TRDCD cursor, bold; /* Highlight*/
    end

    if (IN0AM002.XWHCD == " ") /* If no warehouse code*/
      INWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM002.XWHCD cursor, bold; /* Highlight*/
    end

    if (converseVar.validationMsgNum != 0) /* Error was found*/
      exit stack; /* Exit to display map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If scroll or By Product inquiry requested, determine if key*/
   /* and/or line fields changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7  /* Scroll back request*/
   || converseVar.eventKey is pf8  /* or scroll forward request*/
   || converseVar.eventKey is pf11 /* or scroll right request*/
   || converseVar.eventKey is pf14) /* or By Product inquiry request*/

    IN0A-24100(); /* Verify if key fields changed*/

    IN0A-24200(); /* Highlight other changed fields*/

  else

    /* ------------------------------------------------------------*/
    /* If key field changed, determine if any other field changed.*/
    /* ------------------------------------------------------------*/

    if (IN0AM002.XWHCD != IN0AW01.XWHCD /* Warehouse*/
     /* Warhouse code changed*/
     || IN0AM002.IN5TRDCD != IN0AW01.IN5TRDCD
     /* Audit tran doc code changed*/
     || IN0AM002.IN5TRDOC != IN0AW01.IN5TRDOC
     /* Audit tran doc nbr changed*/
     || IN0AM002.IN5TRSUB != IN0AW01.IN5TRSUB
     /* Audit tran doc sub changed*/
     || IN0AM002.IN0AM-XIF-TRN-FLD-CD != 
    IN0AW01.IN0AW-XIF-TRN-FLD-CD        
     /* Audit tran field code changed*/
     || IN0AM002.IN0AM-CURR-DT-ONLY-FL != 
    IN0AW01.IN0AW-CURR-DT-ONLY-FL)     
                                   /* Current date only changed*/

      IN0A-24200(); /* Highlight other changed fields*/

      /* ------------------------------------------------------------*/
      /* Determine if all the required key fields were entered.*/
      /* ------------------------------------------------------------*/

      IN0A-24300(); /* Check for required key fields*/

    else

      /* ------------------------------------------------------------*/
      /* Otherwise, verify any modifiable data that was changed.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

        IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-LMT-NBR;
                                   /* Line index*/

        while (IN0AW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

          IN0A-24400(); /* Verify data in the line*/

          IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end IN0A-24000

// Verify scroll request
Function IN0A-24100()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.XWHCD != IN0AW01.XWHCD) /* Warehouse code changed*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM002.XWHCD cursor, bold; /* Highlight*/

  end

  if (IN0AM002.IN5TRDCD != IN0AW01.IN5TRDCD) /* Audit tran doc code changed*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM002.IN5TRDCD cursor, bold; /* Highlight*/

  end

  if (IN0AM002.IN5TRDOC != IN0AW01.IN5TRDOC) /* Audit tran doc nbr changed*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM002.IN5TRDOC cursor, bold; /* Highlight*/

  end

  if (IN0AM002.IN5TRSUB != IN0AW01.IN5TRSUB) /* Audit tran doc nbr changed*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM002.IN5TRSUB cursor, bold; /* Highlight*/

  end

  if (IN0AM002.IN0AM-XIF-TRN-FLD-CD != 
  IN0AW01.IN0AW-XIF-TRN-FLD-CD) /* Audit tran field code changed*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM002.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/

  end

  if (IN0AM002.IN0AM-CURR-DT-ONLY-FL != 
  IN0AW01.IN0AW-CURR-DT-ONLY-FL) /* Current date only flag changed*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM002.IN0AM-CURR-DT-ONLY-FL cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && IN0AW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(3); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && IN0AW00.XXX-CURR-PAGE-NBR >= IN0AW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    INWREC.XXX-MSG-LOC-ID = "24100"; /* Message location*/
    converseLib.validationFailed(4); /* No more pages to display*/

  end


end // end IN0A-24100

// Highlight other changed fields
Function IN0A-24200()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-LMT-NBR; /* Line index*/

  while (IN0AW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      if (IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " ")
        IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = " "; /* Select ind*/
        IN0AW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/
      else
        INWREC.XXX-MSG-LOC-ID = "24200"; /* Message location*/
        converseLib.validationFailed(2); /* Field may not change*/
        set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
      end

    end

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end IN0A-24200

// Check for required key fields
Function IN0A-24300()
   /* ------------------------------------------------------------*/
   /* Verify current date only flag entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.IN0AM-CURR-DT-ONLY-FL == "Y"
   || IN0AM002.IN0AM-CURR-DT-ONLY-FL == "N")

  else
    INWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM002.IN0AM-CURR-DT-ONLY-FL cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify audit tran field code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.IN0AM-XIF-TRN-FLD-CD == "A "
   || IN0AM002.IN0AM-XIF-TRN-FLD-CD == " A")

    IN0AM002.XIFABRV = "ALL";
  else
    if (IN0AM002.IN0AM-XIF-TRN-FLD-CD in XIFTBL.XIFCD)

      if (XIFTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        IN0AM002.XIFABRV = XIFTBL.XIFABRV[sysVar.arrayIndex];
      else
        INWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
        converseLib.validationFailed(12); /* Inactive status*/
        set IN0AM002.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/
      end

    else
      INWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
      converseLib.validationFailed(11); /* Invalid value*/
      set IN0AM002.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Verify audit tran doc code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.IN5TRDCD == "A" /* Adjustment*/
   || IN0AM002.IN5TRDCD == "O" /* Order*/
   || IN0AM002.IN5TRDCD == "S" /* Set aside*/
   || IN0AM002.IN5TRDCD == "T" /* Stock Transfer*/
   || IN0AM002.IN5TRDCD == "R" /* Receiving*/
   || IN0AM002.IN5TRDCD == "C") /* Cycle count*/

  else
    INWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM002.IN5TRDCD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify warehouse code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.XWHCD in XWHTBL.XWHCD)

    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      IN0AM002.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
    else
      INWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
      converseLib.validationFailed(12); /* Inactive status*/
      set IN0AM002.XWHCD cursor, bold; /* Highlight*/
    end

  else
    INWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM002.XWHCD cursor, bold; /* Highlight*/

  end


end // end IN0A-24300

// Verify data in the line
Function IN0A-24400()
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not a "S", indicate that*/
   /* only "S" may be entered to select a line.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/

    if (IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " "
     || IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S")
    /* next sentence*/
    else
      INWREC.XXX-MSG-LOC-ID = "24400"; /* Message location*/
      converseLib.validationFailed(139); /* Only "S" may be entered*/
      set IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    end

  end


end // end IN0A-24400

// Process valid request
Function IN0A-25000()
   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.XWHCD != IN0AW01.XWHCD       /* Warehouse code*/
   || IN0AM002.IN5TRDCD != IN0AW01.IN5TRDCD /* Audit tran doc code*/
   || IN0AM002.IN5TRDOC != IN0AW01.IN5TRDOC /* Audit tran doc nbr*/
   || IN0AM002.IN5TRSUB != IN0AW01.IN5TRSUB /* Audit tran doc sub*/
   || IN0AM002.IN0AM-XIF-TRN-FLD-CD !=      
  IN0AW01.IN0AW-XIF-TRN-FLD-CD              
   /* Audit tran field code*/
   || IN0AM002.IN0AM-CURR-DT-ONLY-FL !=     
  IN0AW01.IN0AW-CURR-DT-ONLY-FL)           
                                   /* Current date only flag*/

    IN0AW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll right was requested, set to display map 3.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf11) /* Scroll right requested*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "3"; /* Map to be displayed*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If By Product inquiry was requested, set to display map 5.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf14) /* By Product inquiry was requested*/

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "5"; /* Map to be displayed*/

    IN0AW00.XXX-REC-SEQ-NBR = 0; /* Record seq nbr*/

    set IN0AW02 empty;

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/

    if (IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = IN0AM002.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      IN0AW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/

    end

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, format the key fields and indicate*/
   /* that map 004 is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in IN0AW01.XXX-LN-SEL-IND) /* Line was selected*/

    IN0AW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "4"; /* Map to be displayed*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Enter new key fields, select a line or press a valid pf key.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = "25000"; /* Message location*/
  converseLib.validationFailed(1); /* Enter new input or pf key*/


end // end IN0A-25000

// Process map 3 (By Doc - Right)
Function IN0A-30000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display By Document - Right.*/
   /* Processing always returns to the top of this process and falls*/
   /* through subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify entered data and process valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  IN0A-31000(); /* Format and display the map*/

  IN0A-32000(); /* Check attention identifier*/

  IN0A-33000(); /* Verify entered data*/

  IN0A-34000(); /* Process entered data*/


end // end IN0A-30000

// Format and converse map 3
Function IN0A-31000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    IN0A-31100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0AM003.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0AM003.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0AM003.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0AM003.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0AM003.XXX-MSG-LOC-ID = INWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set IN0AM003 alarm; /* Indicate sound alarm*/

  end

  converse IN0AM003 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0AM003.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0AM003.CAITEM; /* Application data*/

  set IN0AM003.CATOAP normal; /* TO application*/
  set IN0AM003.CAITEM normal; /* Application data*/


end // end IN0A-31000

// Format map 3 data
Function IN0A-31100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN0AM003 initial; /* M003 input/output area*/

  IN0AW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (IN0AW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        IN0AS-TA0050-U(); /* Update temporary storage page*/

        IN0AW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-CURR-PAGE-NBR > IN0AW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      IN0AS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set IN0AM003.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    IN0AM003.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set IN0AM003.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    IN0AM003.XXX-HI-PAGE-NBR = IN0AW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  IN0AM003.XWHCD = IN0AW01.XWHCD; /* Warehouse code*/
  IN0AM003.XWHABRV = IN0AW01.XWHABRV; /* Warehouse abrv*/
  IN0AM003.IN5TRDCD = IN0AW01.IN5TRDCD; /* Audit tran doc code*/
  IN0AM003.IN5TRDOC = IN0AW01.IN5TRDOC; /* Audit tran doc nbr*/
  IN0AM003.IN5TRSUB = IN0AW01.IN5TRSUB; /* Audit tran doc sub*/
  IN0AM003.IN0AM-XIF-TRN-FLD-CD = IN0AW01.IN0AW-XIF-TRN-FLD-CD; /* Audit tran field code*/
  IN0AM003.XIFABRV = IN0AW01.XIFABRV; /* Audit tran field abrv*/
  IN0AM003.IN0AM-CURR-DT-ONLY-FL = IN0AW01.IN0AW-CURR-DT-ONLY-FL; /* Current date only flag*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && IN0AW01.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] > 0)

    IN0AM003.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] = IN0AW01.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR];
                                   /* Record seq nbr*/
    IN0AM003.IN5USRID[XXX-INX-FLD-NBR] = IN0AW01.IN5USRID[XXX-INX-FLD-NBR];
                                   /* Audit tran user id*/
    IN0AM003.IN5TRREF[XXX-INX-FLD-NBR] = IN0AW01.IN5TRREF[XXX-INX-FLD-NBR];
                                   /* Audit tran xref nbr*/
    IN0AM003.IN5TRDTE[XXX-INX-FLD-NBR] = IN0AW01.IN5TRDTE[XXX-INX-FLD-NBR];
                                   /* Audit tran date*/
    IN0AM003.IN5TRTIM[XXX-INX-FLD-NBR] = IN0AW01.IN5TRTIM[XXX-INX-FLD-NBR];
                                   /* Audit tran time*/

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end IN0A-31100

// Check attention identifier
Function IN0A-32000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (IN0AW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set IN0AW01 empty; /* M002 display storage*/
    end

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0AM003.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      IN0AS-TA0050-P(); /* Purge any temporary storage*/

      XSINS-EXIT(); /* Exit to another application*/

      set IN0AM003.CATOAP cursor, bold; /* Highlight*/

      IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

    else

      INWREC.XXX-MSG-LOC-ID = "32000"; /* Message location*/
      converseLib.validationFailed(137); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "IN0A-12"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/
      exit stack;
    end

    IN0AS-TA0050-P(); /* Purge any temporary storage*/

    XSINS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* PF8 was not pressed*/
   && converseVar.eventKey not pf10  /* PF10 was not pressed*/
   && converseVar.eventKey not pf14) /* PF14 was not pressed*/

    INWREC.XXX-MSG-LOC-ID = "32000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0A-32000

// Verify entered data
Function IN0A-33000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM002.CAITEM > " ") /* Application data was entered*/

    INWREC.XXX-MSG-LOC-ID = "33000"; /* Message location*/
    converseLib.validationFailed(5); /* Enter only with FAST PATH*/
    set IN0AM003.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && IN0AW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    INWREC.XXX-MSG-LOC-ID = "33000"; /* Message location*/
    converseLib.validationFailed(3); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && IN0AW00.XXX-CURR-PAGE-NBR >= IN0AW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    INWREC.XXX-MSG-LOC-ID = "33000"; /* Message location*/
    converseLib.validationFailed(4); /* No more pages to display*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end IN0A-33000

// Verify/process entered data
Function IN0A-34000()
   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll left was requested, set to display map 2.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf10) /* Scroll left requested*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If By Product inquiry was requested, set to display map 5.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf14) /* By Product inquiry was requested*/

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "5"; /* Map to be displayed*/

    IN0AW00.XXX-REC-SEQ-NBR = 0; /* Initialize record seq nbr*/

    set IN0AW02 empty;

    return;

  end

   /* ------------------------------------------------------------*/
   /* Enter new key fields, select a line or press a valid pf key.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = "34000"; /* Message location*/
  converseLib.validationFailed(88); /* PF3 to last screen*/


end // end IN0A-34000

// Process map 4 (By Doc - Selct)
Function IN0A-40000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display By Document - Select.*/
   /* Processing always returns to the top of this process and falls*/
   /* through subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify entered data and process valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  IN0A-41000(); /* Format and display the map*/

  IN0A-42000(); /* Check attention identifier*/

  IN0A-43000(); /* Verify/process entered data*/


end // end IN0A-40000

// Format and converse map 4
Function IN0A-41000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    IN0A-41100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0AM004.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0AM004.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0AM004.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0AM004.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0AM004.XXX-MSG-LOC-ID = INWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set IN0AM004 alarm; /* Indicate sound alarm*/

  end

  converse IN0AM004 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0AM004.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0AM004.CAITEM; /* Application data*/

  set IN0AM004.CATOAP normal; /* TO application*/
  set IN0AM004.CAITEM normal; /* Application data*/


end // end IN0A-41000

// Format map 4 data
Function IN0A-41100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN0AM004 initial; /* M004 input/output area*/

  IN0AW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

  set IN0AM004.XXX-CURR-PAGE-DESC skip, invisible; /* "PAGE" literal*/
  set IN0AM004.XXX-CURR-PAGE-NBR skip, invisible; /* Current page*/
  set IN0AM004.XXX-HI-PAGE-DESC skip, invisible; /* "OF" literal*/
  set IN0AM004.XXX-HI-PAGE-NBR skip, invisible; /* Highest page*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  IN0AM004.XWHCD = IN0AW01.XWHCD; /* Warehouse code*/
  IN0AM004.XWHABRV = IN0AW01.XWHABRV; /* Warehouse abrv*/
  IN0AM004.IN5TRDCD = IN0AW01.IN5TRDCD; /* Audit tran doc code*/
  IN0AM004.IN5TRDOC = IN0AW01.IN5TRDOC; /* Audit tran doc nbr*/
  IN0AM004.IN5TRSUB = IN0AW01.IN5TRSUB; /* Audit tran doc sub*/
  IN0AM004.IN0AM-XIF-TRN-FLD-CD = IN0AW01.IN0AW-XIF-TRN-FLD-CD; /* Audit tran field code*/
  IN0AM004.XIFABRV = IN0AW01.XIFABRV; /* Audit tran field abrv*/
  IN0AM004.IN0AM-CURR-DT-ONLY-FL = IN0AW01.IN0AW-CURR-DT-ONLY-FL; /* Current date only flag*/

  IN0AM004.XXX-REC-SEQ-NBR = IN0AW01.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR]; /* Record seq nbr*/

  IN0AM004.XOWCD = IN0AW01.XOWCD[XXX-INX-FLD-NBR]; /* Owner group code*/
  IN0AM004.IN5TRDDT = IN0AW01.IN5TRDDT[XXX-INX-FLD-NBR]; /* Audit tran doc date*/
  IN0AM004.XIGCD = IN0AW01.XIGCD[XXX-INX-FLD-NBR]; /* Tran group code*/
  IN0AM004.XITCD = IN0AW01.XITCD[XXX-INX-FLD-NBR]; /* Tran type code*/
  IN0AM004.XIRCD = IN0AW01.XIRCD[XXX-INX-FLD-NBR]; /* Tran reason code*/
  IN0AM004.XGPCD = IN0AW01.XGPCD[XXX-INX-FLD-NBR]; /* GPC code*/
  IN0AM004.SY1STNBR = IN0AW01.SY1STNBR[XXX-INX-FLD-NBR]; /* Style nbr*/
  IN0AM004.SY2CLRID = IN0AW01.SY2CLRID[XXX-INX-FLD-NBR]; /* Color id*/
  IN0AM004.XDMCD = IN0AW01.XDMCD[XXX-INX-FLD-NBR]; /* Dimension code*/
  IN0AM004.XQACD = IN0AW01.XQACD[XXX-INX-FLD-NBR]; /* Quality code*/
  IN0AM004.XLCCD = IN0AW01.XLCCD[XXX-INX-FLD-NBR]; /* Product life cycle code*/
  IN0AM004.XSDCD = IN0AW01.XSDCD[XXX-INX-FLD-NBR]; /* Spec difference code*/
  /* MOVE IN0AW01.XSACD(XXX-INX-FLD-NBR) TO*/
  /* IN0AM004.XSACD; Shade code*/
  IN0AM004.XPGCD = IN0AW01.XPGCD[XXX-INX-FLD-NBR]; /* Package type*/
  IN0AM004.XUMCD = IN0AW01.XUMCD[XXX-INX-FLD-NBR]; /* Unit of measure*/
  IN0AM004.IN0AM-TOTAL-QTY = IN0AW01.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR]; /* Audit tran total qty*/
  IN0AM004.XIFCD = IN0AW01.XIFCD[XXX-INX-FLD-NBR]; /* Audit tran field code*/

   /* ------------------------------------------------------------*/
   /* Select unique the selected item.*/
   /* ------------------------------------------------------------*/

  set IN6REC empty;

  IN6REC.XWHCD = IN0AW01.XWHCD; /* Warehouse code*/
  IN6REC.IN5TRPRT = IN0AW01.IN5TRPRT[XXX-INX-FLD-NBR]; /* Audit tran part code*/
  IN6REC.IN5TRDCD = IN0AW01.IN5TRDCD; /* Audit tran doc code*/
  IN6REC.IN5TRDOC = IN0AW01.IN5TRDOC; /* Audit tran doc nbr*/
  IN6REC.IN5TRSUB = IN0AW01.IN5TRSUB; /* Audit tran doc sub*/

  IN6REC.IN5TRDTE = IN0AW01.IN5TRDTE[XXX-INX-FLD-NBR]; /* Audit tran date*/
  IN6REC.IN5TRTIM = IN0AW01.IN5TRTIM[XXX-INX-FLD-NBR]; /* Audit tran time*/

  IN6REC.SY1STNBR = IN0AW01.SY1STNBR[XXX-INX-FLD-NBR]; /* Style nbr*/
  IN6REC.SY2CLRID = IN0AW01.SY2CLRID[XXX-INX-FLD-NBR]; /* Color id*/

  IN6REC.XOWCD = IN0AW01.XOWCD[XXX-INX-FLD-NBR]; /* Owner group code*/
  IN6REC.XGPCD = IN0AW01.XGPCD[XXX-INX-FLD-NBR]; /* GPC code*/
  IN6REC.XDMCD = IN0AW01.XDMCD[XXX-INX-FLD-NBR]; /* Dimension code*/
  IN6REC.XQACD = IN0AW01.XQACD[XXX-INX-FLD-NBR]; /* Quality code*/
  IN6REC.XSDCD = IN0AW01.XSDCD[XXX-INX-FLD-NBR];
                                   /* Spec difference code*/
  IN6REC.XSACD = IN0AW01.XSACD[XXX-INX-FLD-NBR]; /* Shade code*/
  IN6REC.XPGCD = IN0AW01.XPGCD[XXX-INX-FLD-NBR]; /* Package type code*/
  IN6REC.XUMCD = IN0AW01.XUMCD[XXX-INX-FLD-NBR]; /* Unit of measure*/
  IN6REC.XIFCD = IN0AW01.XIFCD[XXX-INX-FLD-NBR]; /* Tran field code*/

  if (IN0AW01.IN0AW-CURR-DT-ONLY-FL == "Y")

    IN0AS-IO2760-S(); /* Select requested row*/
                                   /* (dinvnt.viadit02)*/
  else
    IN0AS-IO1420-S(); /* Select requested row*/
                                   /* (dinvnt.viaitm01)*/

  end

   /* ------------------------------------------------------------*/
   /* Select row for size descriptions.*/
   /* ------------------------------------------------------------*/

  set SYPREC empty;

  SYPREC.XGPCD = IN0AW01.XGPCD[XXX-INX-FLD-NBR];
                                   /* GPC code*/
  SYPREC.SY1STNBR = IN0AW01.SY1STNBR[XXX-INX-FLD-NBR];
                                   /* Style nbr*/
  SYPREC.SY2CLRID = IN0AW01.SY2CLRID[XXX-INX-FLD-NBR];
                                   /* Color id*/
  SYPREC.XDMCD = IN0AW01.XDMCD[XXX-INX-FLD-NBR];
                                   /* Dimension code*/
  SYPREC.XQACD = "**"; /* Quality code*/

  IN0AS-SY1120(); /* Select requested row (dprod.vsize001)*/

   /* ------------------------------------------------------------*/
   /* Format size qty and description.*/
   /* ------------------------------------------------------------*/

  IN0AW00.IN0AW-WS-INX-QTY-DESC = 1; /* Initialize ws qty/desc index*/
  IN0AW00.IN0AW-MP-INX-QTY-DESC = 1; /* Initialize map qty/desc index*/

  while (IN0AW00.IN0AW-WS-INX-QTY-DESC <= 40)

    if (IN6REC.IN6TQT[IN0AW-WS-INX-QTY-DESC] != 0)

      IN0AM004.IN6TQT[IN0AW-MP-INX-QTY-DESC] = IN6REC.IN6TQT[IN0AW-WS-INX-QTY-DESC];

      if (SYPREC.SY4IDDSC[IN0AW-WS-INX-QTY-DESC] > " ")
        IN0AM004.SY4IDDSC[IN0AW-MP-INX-QTY-DESC] = SYPREC.SY4IDDSC[IN0AW-WS-INX-QTY-DESC];
      else
        IN0AM004.SY4IDDSC[IN0AW-MP-INX-QTY-DESC] = "*****";
      end

      IN0AW00.IN0AW-MP-INX-QTY-DESC = IN0AW00.IN0AW-MP-INX-QTY-DESC + 1;

    end

    IN0AW00.IN0AW-WS-INX-QTY-DESC = IN0AW00.IN0AW-WS-INX-QTY-DESC + 1;

  end

   /* ------------------------------------------------------------*/
   /* Modify line sel ind from 's' to '*'.*/
   /* ------------------------------------------------------------*/

  IN0AW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "*";


end // end IN0A-41100

// Check attention identifier
Function IN0A-42000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (IN0AW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set IN0AW01 empty; /* M002 display storage*/
    end

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0AM004.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      IN0AS-TA0050-P(); /* Purge any temporary storage*/

      XSINS-EXIT(); /* Exit to another application*/

      set IN0AM004.CATOAP cursor, bold; /* Highlight*/

      IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

    else

      INWREC.XXX-MSG-LOC-ID = "42000"; /* Message location*/
      converseLib.validationFailed(137); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "IN0A-10"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/
      exit stack;
    end

    IN0AS-TA0050-P(); /* Purge any temporary storage*/

    XSINS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf14) /* PF14 was not pressed*/

    INWREC.XXX-MSG-LOC-ID = "42000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0A-42000

// Verify/process entered data
Function IN0A-43000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM004.CAITEM > " ") /* Application data was entered*/

    INWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(5); /* Enter only with FAST PATH*/
    set IN0AM004.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If By Product inquiry was requested, set to display map 5.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf14) /* By Product inquiry was requested*/

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "5"; /* Map to be displayed*/

    IN0AW00.XXX-REC-SEQ-NBR = 0; /* Initialize record seq nbr*/

    set IN0AW02 empty;

    return;

  end

   /* ------------------------------------------------------------*/
   /* Check for another selected line.*/
   /* ------------------------------------------------------------*/

  if ("S" in IN0AW01.XXX-LN-SEL-IND from XXX-INX-FLD-NBR) /* Line was selected*/

    IN0AW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Enter new key fields, select a line or press a valid pf key.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
  converseLib.validationFailed(88); /* PF3 to last screen*/


end // end IN0A-43000

// Process map 5 (By Product)
Function IN0A-50000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display By Product map.*/
   /* Processing always returns to the top of this process and falls*/
   /* through subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  IN0A-51000(); /* Obtain the data to display*/

  IN0A-52000(); /* Format and display the map*/

  IN0A-53000(); /* Check attention identifier*/

  IN0A-54000(); /* Verify the entered data*/

  IN0A-55000(); /* Process valid input request*/


end // end IN0A-50000

// Obtain the data to display
Function IN0A-51000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR == 0) /* No message to display*/
    IN0AW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  set IN0AW02 empty;

  IN0AS-TA0050-P(); /* Purge any temporary storage*/

  IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  IN0AW02.XWHCD = IN0AM005.XWHCD; /* Warehouse code*/
  IN0AW02.XWHABRV = IN0AM005.XWHABRV; /* Warehouse abrv*/
  IN0AW02.XGPCD = IN0AM005.XGPCD; /* GPC code*/
  IN0AW02.XGPABRV = IN0AM005.XGPABRV; /* GPC abrv*/
  IN0AW02.SY1STNBR = IN0AM005.SY1STNBR; /* Style nbr*/
  IN0AW02.SY1SSTNM = IN0AM005.SY1SSTNM; /* Style short name*/
  IN0AW02.SY2CLRID = IN0AM005.SY2CLRID; /* Color id*/
  IN0AW02.SY2CLRAB = IN0AM005.SY2CLRAB; /* Color abrv*/
  IN0AW02.XDMCD = IN0AM005.XDMCD; /* Dimension code*/
  IN0AW02.XQACD = IN0AM005.XQACD; /* Quality code*/
  IN0AW02.XLCCD = IN0AM005.XLCCD; /* Product life cycle code*/
  IN0AW02.XLCDESC = IN0AM005.XLCDESC; /* Product life cycle desc*/
  IN0AW02.IN0AW-XIF-TRN-FLD-CD = IN0AM005.IN0AM-XIF-TRN-FLD-CD; /* Field code*/
  IN0AW02.XIFABRV = IN0AM005.XIFABRV; /* Field abrv*/
  IN0AW02.IN0AW-START-DT = IN0AM005.IN0AM-START-DT; /* Start date*/
  IN0AW02.IN0AW-END-DT = IN0AM005.IN0AM-END-DT; /* End date*/

  IN0AW00.IN0AW-PROD-KEY-FLD = IN0AW02.IN0AW-PROD-KEY-FLD; /* By Product key fields*/

   /* ------------------------------------------------------------*/
   /* Process current or history file depending on date selection.*/
   /* ------------------------------------------------------------*/

  set IN6REC empty; /* Clear row storage area*/

  IN6REC.XWHCD = IN0AW02.XWHCD; /* Warehouse code*/
  IN6REC.XGPCD = IN0AW02.XGPCD; /* GPC code*/
  IN6REC.SY1STNBR = IN0AW02.SY1STNBR; /* Style nbr*/
  IN6REC.SY2CLRID = IN0AW02.SY2CLRID; /* Color id*/
  IN6REC.XDMCD = IN0AW02.XDMCD; /* Dimension code*/
  IN6REC.XQACD = IN0AW02.XQACD; /* Quality code*/

  if (IN0AW02.IN0AW-XIF-TRN-FLD-CD == "A " /* Field code*/
   || IN0AW02.IN0AW-XIF-TRN-FLD-CD == " A")

    IN6REC.XIFCD = " ";
  else
    IN6REC.XIFCD = IN0AW02.IN0AW-XIF-TRN-FLD-CD;

  end

  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/

  if (IN0AW00.IN0AW-START-DT == IN0AW00.XXX-CURR-DT)

    IN0AS-IO2760-S1(); /* Select set and open cursor*/
                                   /* (dinvnt.viadit02)*/
  else

    set INXREC empty;
    INXREC.INXFC = "S2";
    INXREC.INXSDT = IN0AW00.IN0AW-START-DT;
    INXREC.INXEDT = IN0AW00.IN0AW-END-DT;

    IN0AS-IO1420-S2(); /* Select set and open cursor*/
                                   /* (dinvnt.viaitm01)*/
  end

  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  IN0AW00.IN0AW-EOF-FL = "N"; /* End of cursor flag*/

  IN0AW00.XXX-REC-SEQ-NBR = 0; /* Initialize record seq nbr*/

  while (IN0AW00.IN0AW-EOF-FL == "N") /* Until end of cursor*/

    if (IN0AW00.IN0AW-START-DT == IN0AW00.XXX-CURR-DT)
      IN0AS-IO2760-N1(); /* Fetch next row in cursor*/
                                   /* (dinvnt.viadit02)*/
    else
      INXREC.INXFC = "N2";
      IN0AS-IO1420-N2(); /* Fetch next row in cursor*/
                                   /* (dinvnt.viaitm01)*/
    end

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (IN0AW00.IN0AW-EOF-FL == "N") /* Not end of cursor*/

      if (IN0AW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && IN0AW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/

        IN0AW02.IN0AW-PROD-KEY-FLD = IN0AW00.IN0AW-PROD-KEY-FLD; /* By Product key fields*/

      end

      IN0AW00.XXX-REC-SEQ-NBR = IN0AW00.XXX-REC-SEQ-NBR + 1;
                                   /* Increment record seq nbr*/
      if (IN0AW00.XXX-REC-SEQ-NBR <= 9999)
        /* next sentence*/
      else
        INWREC.XXX-MSG-LOC-ID = "51000"; /* Message location*/
        converseLib.validationFailed(163); /* Overflow*/
        exit stack; /* Exit to display map*/
      end

      IN0AW02.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] = IN0AW00.XXX-REC-SEQ-NBR;

      IN0AW02.XSDCD[XXX-INX-FLD-NBR] = IN6REC.XSDCD;
                                   /* Spec difference-code*/
      IN0AW02.XSACD[XXX-INX-FLD-NBR] = IN6REC.XSACD;
                                   /* Shade code*/
      IN0AW02.XPGCD[XXX-INX-FLD-NBR] = IN6REC.XPGCD;
                                   /* Package type code*/
      IN0AW02.XUMCD[XXX-INX-FLD-NBR] = IN6REC.XUMCD;
                                   /* Unit of measure code*/

      IN0AW02.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR] = 0; /* Total qty*/

      IN0AW00.IN0AW-WS-INX-QTY-DESC = 1; /* Initialize qty index*/

      while (IN0AW00.IN0AW-WS-INX-QTY-DESC <= 40)

        IN0AW02.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR] = IN0AW02.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR] +         IN6REC.IN6TQT[IN0AW-WS-INX-QTY-DESC];
                                   /* Audit tran qty*/
        IN0AW00.IN0AW-WS-INX-QTY-DESC = IN0AW00.IN0AW-WS-INX-QTY-DESC + 1;
                                   /* Increment qty index by 1*/

      end

      IN0AW02.XIFCD[XXX-INX-FLD-NBR] = IN6REC.XIFCD;
                                   /* Tran field code*/

      IN0AW02.IN5TRPRT[XXX-INX-FLD-NBR] = IN6REC.IN5TRPRT;
                                   /* Audit tran part code*/

      IN0AW02.IN5TRDCD[XXX-INX-FLD-NBR] = IN6REC.IN5TRDCD;
                                   /* Audit tran doc code*/
      IN0AW02.IN5TRDOC[XXX-INX-FLD-NBR] = IN6REC.IN5TRDOC;
                                   /* Audit tran doc nbr*/
      IN0AW02.IN5TRSUB[XXX-INX-FLD-NBR] = IN6REC.IN5TRSUB;
                                   /* Audit tran doc sub*/

      IN0AW02.XOWCD[XXX-INX-FLD-NBR] = IN6REC.XOWCD;
                                   /* Owner group code*/

      IN0AW02.IN5TRDTE[XXX-INX-FLD-NBR] = IN6REC.IN5TRDTE;
                                   /* Audit tran date*/
      IN0AW02.IN5TRTIM[XXX-INX-FLD-NBR] = IN6REC.IN5TRTIM;
                                   /* Audit tran time*/

      /* ------------------------------------------------------------*/
      /* Select header data using item key fields.*/
      /* ------------------------------------------------------------*/

      set IN5REC empty;

      IN5REC.XWHCD = IN6REC.XWHCD; /* Warehouse code*/
      IN5REC.XOWCD = IN6REC.XOWCD; /* Owner group code*/
      IN5REC.IN5TRPRT = IN6REC.IN5TRPRT; /* Audit tran part*/
      IN5REC.IN5TRDCD = IN6REC.IN5TRDCD; /* Audit tran doc code*/
      IN5REC.IN5TRDOC = IN6REC.IN5TRDOC; /* Audit tran doc nbr*/
      IN5REC.IN5TRSUB = IN6REC.IN5TRSUB; /* Audit tran doc sub*/
      IN5REC.IN5TRDTE = IN6REC.IN5TRDTE; /* Audit tran date*/
      IN5REC.IN5TRTIM = IN6REC.IN5TRTIM; /* Audit tran time*/

      if (IN0AW00.IN0AW-START-DT == IN0AW00.XXX-CURR-DT)
        IN0AS-IO2750-S(); /* Select requested row*/
                                   /* (dinvnt.viadhd02)*/
      else
        IN0AS-IO1410-S(); /* Select requested row*/
                                   /* (dinvnt.viahdr01)*/
      end

      /* ------------------------------------------------------------*/
      /* Move header data to display storage.*/
      /* ------------------------------------------------------------*/

      IN0AW02.XIGCD[XXX-INX-FLD-NBR] = IN5REC.XIGCD;
                                   /* Tran group code*/
      IN0AW02.XITCD[XXX-INX-FLD-NBR] = IN5REC.XITCD;
                                   /* Tran type code*/
      IN0AW02.XIRCD[XXX-INX-FLD-NBR] = IN5REC.XIRCD;
                                   /* Tran reason code*/
      IN0AW02.IN5USRID[XXX-INX-FLD-NBR] = IN5REC.IN5USRID;
                                   /* Audit tran user id*/
      IN0AW02.IN5TRDDT[XXX-INX-FLD-NBR] = IN5REC.IN5TRDDT;
                                   /* Audit tran doc date*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (IN0AW00.XXX-INX-FLD-NBR > IN0AW00.XXX-INX-LMT-NBR) /* Page is full*/

      IN0AW01.IN0AW-WORK-STG-1 = IN0AW02.IN0AW-WORK-STG-2;

      IN0AS-TA0050-A(); /* Add page to temporary storage*/

      set IN0AW02 empty;

      IN0AW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/

    IN0AW01.IN0AW-WORK-STG-1 = IN0AW02.IN0AW-WORK-STG-2;

    IN0AS-TA0050-A(); /* Add page to temporary storage*/

    set IN0AW02 empty;

  end

  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/

  if (IN0AW00.IN0AW-START-DT == IN0AW00.XXX-CURR-DT)
    IN0AS-IO2760-C1(); /* Close selected set cursor*/
                                   /* (dinvnt.viadit02)*/
  else
    INXREC.INXFC = "C2";
    IN0AS-IO1420-C2(); /* Close selected set cursor*/
                                   /* (dinvnt.viaitm01)*/
  end

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    INWREC.XXX-MSG-LOC-ID = "51000"; /* Message location*/
    converseLib.validationFailed(23); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end IN0A-51000

// Format and converse map 5
Function IN0A-52000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    IN0A-52100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0AM005.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0AM005.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0AM005.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0AM005.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0AM005.XXX-MSG-LOC-ID = INWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set IN0AM005 alarm; /* Indicate sound alarm*/

  end

  converse IN0AM005 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0AM005.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0AM005.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set IN0AM005.XWHCD normal; /* Warehouse code*/
  set IN0AM005.XGPCD normal; /* GPC code*/
  set IN0AM005.SY1STNBR normal; /* Style nbr*/
  set IN0AM005.SY2CLRID normal; /* Color id*/
  set IN0AM005.XDMCD normal; /* Dimension code*/
  set IN0AM005.XQACD normal; /* Quality code*/
  set IN0AM005.IN0AM-XIF-TRN-FLD-CD normal; /* Field code*/
  set IN0AM005.IN0AM-START-DT normal; /* Start date*/
  set IN0AM005.IN0AM-END-DT normal; /* End date*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && IN0AM005.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] > 0)
                                   /* or end of formatted lines*/

    set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set IN0AM005.CATOAP normal; /* TO application*/
  set IN0AM005.CAITEM normal; /* Application data*/


end // end IN0A-52000

// Format the data in the map
Function IN0A-52100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN0AM005 initial; /* M005 input/output area*/

  IN0AW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Set up the initial map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-REC-SEQ-NBR == 0 /* If initial processing*/
   && converseVar.validationMsgNum == 0) /* and no error*/

    IN0AM005.SY2CLRID = "00 "; /* Color id*/
    IN0AM005.XDMCD = "00"; /* Dimension code*/
    IN0AM005.XQACD = "01"; /* Quality code*/
    IN0AM005.IN0AM-XIF-TRN-FLD-CD = "A"; /* Field code*/
    IN0AM005.XIFABRV = "ALL"; /* Field abrv*/

    IN0AW02.SY2CLRID = IN0AM005.SY2CLRID;
    IN0AW02.XDMCD = IN0AM005.XDMCD;
    IN0AW02.XQACD = IN0AM005.XQACD;
    IN0AW02.IN0AW-XIF-TRN-FLD-CD = IN0AM005.IN0AM-XIF-TRN-FLD-CD;

    IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize map index*/

    while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)

      set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] skip, invisible;

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;

    end

    return;

  end

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (IN0AW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        IN0AW01.IN0AW-WORK-STG-1 = IN0AW02.IN0AW-WORK-STG-2;

        IN0AS-TA0050-U(); /* Update temporary storage page*/

        IN0AW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-CURR-PAGE-NBR > IN0AW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      IN0AS-TA0050-R(); /* Read temporary storage page*/

      IN0AW02.IN0AW-WORK-STG-2 = IN0AW01.IN0AW-WORK-STG-1;

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    /* SET IN0AM005.XXX-CURR-PAGE-DESC AUTOSKIP;/* "PAGE" literal*/
    /* MOVE IN0AW00.XXX-CURR-PAGE-NBR TO IN0AM005.XXX-CURR-PAGE-NBR;*/
                                   /* Current page*/
    /* SET IN0AM005.XXX-HI-PAGE-DESC AUTOSKIP;/* "OF" literal*/
    /* MOVE IN0AW00.XXX-HI-PAGE-NBR TO IN0AM005.XXX-HI-PAGE-NBR;*/
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* If warehouse code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (IN0AW02.IN0AW-XIF-TRN-FLD-CD <= " ") /* Field code missing*/
    set IN0AM005.IN0AM-XIF-TRN-FLD-CD cursor; /* Position cursor*/
  end

  if (IN0AW02.XQACD <= " ") /* Quality code missing*/
    set IN0AM005.XQACD cursor; /* Position cursor*/
  end

  if (IN0AW02.XDMCD <= " ") /* Dimension code missing*/
    set IN0AM005.XDMCD cursor; /* Position cursor*/
  end

  if (IN0AW02.SY2CLRID <= " ") /* Color id missing*/
    set IN0AM005.SY2CLRID cursor; /* Position cursor*/
  end

  if (IN0AW02.SY1STNBR <= " ") /* Style nbr*/
    set IN0AM005.SY1STNBR cursor; /* Position cursor*/
  end

  if (IN0AW02.IN0AW-START-DT <= 0) /* Start date missing*/
    set IN0AM005.IN0AM-START-DT cursor; /* Position cursor*/
  end

  if (IN0AW02.IN0AW-END-DT <= 0) /* End date missing*/
    set IN0AM005.IN0AM-END-DT cursor; /* Position cursor*/
  end

  if (IN0AW02.XGPCD <= " ") /* GPC code missing*/
    set IN0AM005.XGPCD cursor; /* Position cursor*/
  end

  if (IN0AW02.XWHCD <= " ") /* Warehouse code missing*/
    set IN0AM005.XWHCD cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  IN0AM005.XWHCD = IN0AW02.XWHCD; /* Warehouse code*/
  IN0AM005.XWHABRV = IN0AW02.XWHABRV; /* Warehouse abrv*/
  IN0AM005.XGPCD = IN0AW02.XGPCD; /* GPC code*/
  IN0AM005.XGPABRV = IN0AW02.XGPABRV; /* GPC abrv*/
  IN0AM005.SY1STNBR = IN0AW02.SY1STNBR; /* Style nbr*/
  IN0AM005.SY1SSTNM = IN0AW02.SY1SSTNM; /* Style short name*/
  IN0AM005.SY2CLRID = IN0AW02.SY2CLRID; /* Color id*/
  IN0AM005.SY2CLRAB = IN0AW02.SY2CLRAB; /* Color abrv*/
  IN0AM005.XDMCD = IN0AW02.XDMCD; /* Dimension code*/
  IN0AM005.XQACD = IN0AW02.XQACD; /* Quality code*/
  IN0AM005.XLCCD = IN0AW02.XLCCD; /* Product life cycle code*/
  IN0AM005.XLCDESC = IN0AW02.XLCDESC; /* Product life cycle desc*/
  IN0AM005.IN0AM-XIF-TRN-FLD-CD = IN0AW02.IN0AW-XIF-TRN-FLD-CD; /* Field code*/
  IN0AM005.XIFABRV = IN0AW02.XIFABRV; /* Field abrv*/
  IN0AM005.IN0AM-START-DT = IN0AW02.IN0AW-START-DT; /* Start date*/
  IN0AM005.IN0AM-END-DT = IN0AW02.IN0AW-END-DT; /* End date*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
   && IN0AW02.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] > 0) /* or end of data*/

    if (IN0AW00.XXX-INX-FLD-NBR == 1) /* First select field*/

      set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    else
      set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    end

    IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
                                  /* Line sel ind*/
    if (IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "*")
                                   /* If already selected*/
      set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    end

    IN0AM005.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR] = IN0AW02.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR];
                                  /* Record seq nbr*/

    IN0AM005.XSDCD[XXX-INX-FLD-NBR] = IN0AW02.XSDCD[XXX-INX-FLD-NBR];
                                  /* Spec difference code*/
    /* MOVE IN0AW02.XSACD(XXX-INX-FLD-NBR) TO*/
    /* IN0AM005.XSACD(XXX-INX-FLD-NBR);*/
                                  /* Shade code*/
    IN0AM005.XPGCD[XXX-INX-FLD-NBR] = IN0AW02.XPGCD[XXX-INX-FLD-NBR];
                                  /* Package type*/
    IN0AM005.XUMCD[XXX-INX-FLD-NBR] = IN0AW02.XUMCD[XXX-INX-FLD-NBR];
                                  /* Unit of measure*/
    IN0AM005.IN0AM-TOTAL-QTY[XXX-INX-FLD-NBR] = IN0AW02.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR];
                                  /* Total qty*/
    IN0AM005.XIFCD[XXX-INX-FLD-NBR] = IN0AW02.XIFCD[XXX-INX-FLD-NBR];
                                  /* Field code*/
    IN0AM005.IN5TRDCD[XXX-INX-FLD-NBR] = IN0AW02.IN5TRDCD[XXX-INX-FLD-NBR];
                                  /* Audit tran doc code*/
    IN0AM005.IN5TRDOC[XXX-INX-FLD-NBR] = IN0AW02.IN5TRDOC[XXX-INX-FLD-NBR];
                                  /* Audit tran doc nbr*/
    IN0AM005.IN5TRSUB[XXX-INX-FLD-NBR] = IN0AW02.IN5TRSUB[XXX-INX-FLD-NBR];
                                  /* Audit tran doc sub*/
    IN0AM005.XOWCD[XXX-INX-FLD-NBR] = IN0AW02.XOWCD[XXX-INX-FLD-NBR];
                                  /* Owner group code*/
    IN0AM005.XIGCD[XXX-INX-FLD-NBR] = IN0AW02.XIGCD[XXX-INX-FLD-NBR];
                                  /* Tran group code*/
    IN0AM005.XITCD[XXX-INX-FLD-NBR] = IN0AW02.XITCD[XXX-INX-FLD-NBR];
                                  /* Tran type code*/
    IN0AM005.XIRCD[XXX-INX-FLD-NBR] = IN0AW02.XIRCD[XXX-INX-FLD-NBR];
                                  /* Tran reason code*/
    IN0AM005.IN5USRID[XXX-INX-FLD-NBR] = IN0AW02.IN5USRID[XXX-INX-FLD-NBR];
                                  /* User id*/
    IN0AM005.IN5TRDDT[XXX-INX-FLD-NBR] = IN0AW02.IN5TRDDT[XXX-INX-FLD-NBR];
                                  /* Audit tran doc date*/

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  if (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)

    while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)

      set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] skip, invisible;

      IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;

    end

  end


end // end IN0A-52100

// Check attention identifier
Function IN0A-53000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (IN0AW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set IN0AW02 empty; /* M005 display storage*/
    end

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set IN0AW02 empty;

      IN0AS-TA0050-P(); /* Purge any temporary storage*/

      XSINS-EXIT(); /* Exit to another application*/

      set IN0AM005.CATOAP cursor, bold; /* Highlight*/

    else

      INWREC.XXX-MSG-LOC-ID = "53000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "IN0A-20"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
      IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      IN0AW00.XXX-MAP-DSP-CD = "1"; /* Map requested*/
      IN0AW00.XXX-REC-SEQ-NBR = 0; /* Record seq nbr*/

      set IN0AM001 initial;
      set IN0AM002 initial;
      set IN0AM003 initial;
      set IN0AM004 initial;
      set IN0AM005 initial;
      set IN0AM006 initial;

      set IN0AW01 empty;
      set IN0AW02 empty;

      exit stack; /* Exit to display map*/

    end

    IN0AS-TA0050-P(); /* Purge any temporary storage*/

    XSINS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13) /* and PF13 was not pressed*/

    INWREC.XXX-MSG-LOC-ID = "53000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0A-53000

// Verify data that was entered
Function IN0A-54000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.CAITEM > " ") /* Application data was entered*/

    INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
    converseLib.validationFailed(5); /* Enter only with FAST PATH*/
    set IN0AM005.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Check if key fields were entered.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* If By Document requested*/
    /* next sentence*/
  else
    if (IN0AM005.IN0AM-XIF-TRN-FLD-CD == " ") /* If no tran field code*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/
    end

    if (IN0AM005.XQACD == " ") /* If no quality code*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.XQACD cursor, bold; /* Highlight*/
    end

    if (IN0AM005.XDMCD == " ") /* If no dimension code*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.XDMCD cursor, bold; /* Highlight*/
    end

    if (IN0AM005.SY2CLRID == " ") /* If no color id*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.SY2CLRID cursor, bold; /* Highlight*/
    end

    if (IN0AM005.SY1STNBR == " ") /* If no style nbr*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.SY1STNBR cursor, bold; /* Highlight*/
    end

    if (IN0AM005.IN0AM-END-DT == 0) /* If no end date*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.IN0AM-END-DT cursor, bold; /* Highlight*/
    end

    if (IN0AM005.IN0AM-START-DT == 0) /* If no start date*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.IN0AM-START-DT cursor, bold; /* Highlight*/
    end

    if (IN0AM005.XGPCD == " ") /* If no GPC code*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.XGPCD cursor, bold; /* Highlight*/
    end

    if (IN0AM005.XWHCD == " ") /* If no warehouse code*/
      INWREC.XXX-MSG-LOC-ID = "54000"; /* Message location*/
      converseLib.validationFailed(6); /* Required field*/
      set IN0AM005.XWHCD cursor, bold; /* Highlight*/
    end

    if (converseVar.validationMsgNum != 0) /* Error was found*/
      exit stack; /* Exit to display map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If scroll or By Document inquiry requested, determine if key*/
   /* and/or line fields changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7  /* Scroll back request*/
   || converseVar.eventKey is pf8  /* or scroll forward request*/
   || converseVar.eventKey is pf11 /* or scroll right request*/
   || converseVar.eventKey is pf13) /* or By Document inquiry request*/

    IN0A-54100(); /* Verify if key fields changed*/

    IN0A-54200(); /* Highlight other changed fields*/

  else

     /* ------------------------------------------------------------*/
     /* If key field changed, determine if any other field changed.*/
     /* ------------------------------------------------------------*/

    if (IN0AM005.XWHCD != IN0AW02.XWHCD /* Warehouse*/
     /* Warhouse code changed*/
     || IN0AM005.XGPCD != IN0AW02.XGPCD 
     /* GPC code changed*/
     || IN0AM005.SY1STNBR != IN0AW02.SY1STNBR
     /* Style nbr changed*/
     || IN0AM005.SY2CLRID != IN0AW02.SY2CLRID
     /* Color id changed*/
     || IN0AM005.XDMCD != IN0AW02.XDMCD 
     /* Dimension code changed*/
     || IN0AM005.XQACD != IN0AW02.XQACD 
     /* Quality code changed*/
     || IN0AM005.IN0AM-XIF-TRN-FLD-CD != 
    IN0AW02.IN0AW-XIF-TRN-FLD-CD        
     /* Audit tran field code changed*/
     || IN0AM005.IN0AM-START-DT !=      
    IN0AW02.IN0AW-START-DT              /* Start date changed*/
     || IN0AM005.IN0AM-END-DT !=        
    IN0AW02.IN0AW-END-DT)               /* End date changed*/

      IN0A-54200(); /* Highlight other changed fields*/

      /* ------------------------------------------------------------*/
      /* Determine if all the required key fields were entered.*/
      /* ------------------------------------------------------------*/

      IN0A-54300(); /* Check for required key fields*/

    else

      /* ------------------------------------------------------------*/
      /* Otherwise, verify any modifiable data that was changed.*/
      /* ------------------------------------------------------------*/

      if (IN0AW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

        IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-LMT-NBR;
                                   /* Line index*/

        while (IN0AW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

          IN0A-54400(); /* Verify data in the line*/

          IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

        end

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end IN0A-54000

// Highlight other changed fields
Function IN0A-54100()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XWHCD != IN0AW02.XWHCD) /* Warehouse code changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.XWHCD cursor, bold; /* Highlight*/

  end

  if (IN0AM005.XGPCD != IN0AW02.XGPCD) /* GPC code changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.XGPCD cursor, bold; /* Highlight*/

  end

  if (IN0AM005.SY1STNBR != IN0AW02.SY1STNBR) /* Style nbr changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.SY1STNBR cursor, bold; /* Highlight*/

  end

  if (IN0AM005.SY2CLRID != IN0AW02.SY2CLRID) /* Color id changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.SY2CLRID cursor, bold; /* Highlight*/

  end

  if (IN0AM005.XDMCD != IN0AW02.XDMCD) /* Dimension code changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.XDMCD cursor, bold; /* Highlight*/

  end

  if (IN0AM005.XQACD != IN0AW02.XQACD) /* Quality code changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.XQACD cursor, bold; /* Highlight*/

  end

  if (IN0AM005.IN0AM-XIF-TRN-FLD-CD != 
  IN0AW02.IN0AW-XIF-TRN-FLD-CD) /* Audit tran field code changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/

  end

  if (IN0AM005.IN0AM-START-DT != 
  IN0AW02.IN0AW-START-DT) /* Start date changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.IN0AM-START-DT cursor, bold; /* Highlight*/

  end

  if (IN0AM005.IN0AM-END-DT != 
  IN0AW02.IN0AW-END-DT) /* End date changed*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(2); /* Field may not change*/
    set IN0AM005.IN0AM-END-DT cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && IN0AW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(3); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && IN0AW00.XXX-CURR-PAGE-NBR >= IN0AW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    INWREC.XXX-MSG-LOC-ID = "54100"; /* Message location*/
    converseLib.validationFailed(4); /* No more pages to display*/

  end


end // end IN0A-54100

// Verify scroll request
Function IN0A-54200()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-LMT-NBR; /* Line index*/

  while (IN0AW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      if (IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " ")
        IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = " "; /* Select ind*/
        IN0AW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/
      else
        INWREC.XXX-MSG-LOC-ID = "54200"; /* Message location*/
        converseLib.validationFailed(2); /* Field may not change*/
        set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
      end

    end

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end IN0A-54200

// Check for required key fields
Function IN0A-54300()
   /* ------------------------------------------------------------*/
   /* Verify audit tran field code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.IN0AM-XIF-TRN-FLD-CD == "A "
   || IN0AM005.IN0AM-XIF-TRN-FLD-CD == " A")

    IN0AM005.XIFABRV = "ALL";
  else
    if (IN0AM005.IN0AM-XIF-TRN-FLD-CD in XIFTBL.XIFCD)

      if (XIFTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        IN0AM005.XIFABRV = XIFTBL.XIFABRV[sysVar.arrayIndex];
      else
        INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
        converseLib.validationFailed(12); /* Inactive status*/
        set IN0AM005.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/
      end

    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(11); /* Invalid value*/
      set IN0AM005.IN0AM-XIF-TRN-FLD-CD cursor, bold; /* Highlight*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Verify quality code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XQACD in XQATBL.XQACD)

    if (XQATBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* next sentence*/
    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(12); /* Inactive status*/
      set IN0AM005.XQACD cursor, bold; /* Highlight*/
    end

  else
    INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM005.XQACD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify dimension code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XDMCD in XDMTBL.XDMCD)

    if (XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* next sentence*/
    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(12); /* Inactive status*/
      set IN0AM005.XDMCD cursor, bold; /* Highlight*/
    end

  else
    INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM005.XDMCD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify GPC code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XGPCD in XGPTBL.XGPCD)

    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      IN0AM005.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(12); /* Inactive status*/
      set IN0AM005.XGPCD cursor, bold; /* Highlight*/
    end

  else
    INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM005.XGPCD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify warehouse code entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XWHCD in XWHTBL.XWHCD)

    if (XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      IN0AM005.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(12); /* Inactive status*/
      set IN0AM005.XWHCD cursor, bold; /* Highlight*/
    end

  else
    INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value*/
    set IN0AM005.XWHCD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Verify style and get style short name.*/
   /* Verify color and get color abbreviation.*/
   /* ------------------------------------------------------------*/

  set INGREC empty;
  set TA1REC empty;

  INGREC.ING-PROCESS-CD = "PD"; /* 'PD' means get product data*/
  INGREC.XGP-GPC-CD = IN0AM005.XGPCD; /* GPC code*/
  INGREC.SY-STY-NBR = IN0AM005.SY1STNBR; /* Style nbr*/
  INGREC.SY-COLR-CD-ID = IN0AM005.SY2CLRID; /* Color id*/
  INGREC.XDM-DIM-CD = IN0AM005.XDMCD; /* Dimension code*/

  TA1REC.TA1PGMNM = "54300";
  INGREC.TA1-GROUP = TA1REC.TA1-GROUP;

  XSINS-CALL-IN8020(); /* Get product data*/

  if (INGREC.ING-RETURN-CD > 0000)
    IN0AS-IN8020-ERRS(); /* Post warning*/
  end

  IN0AM005.SY1SSTNM = INGREC.SY1SSTNM; /* Style short name*/
  IN0AM005.SY2CLRAB = INGREC.SY2CLRAB; /* Color abrv*/

   /* ------------------------------------------------------------*/
   /* Get product life cycle code.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT1)
    IN0AM005.XLCCD = INGREC.XLCCD1;
  else
    if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT2)
      IN0AM005.XLCCD = INGREC.XLCCD2;
    else
      if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT3)
        IN0AM005.XLCCD = INGREC.XLCCD3;
      else
        if (IN0AW00.XXX-CURR-DT >= INGREC.SY2CEDT4)
          IN0AM005.XLCCD = INGREC.XLCCD4;
        else
          INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
          converseLib.validationFailed(175); /* Product life cycle dates invalid*/
        end
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Get product life cycle desc.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XLCCD in XLCTBL.XLCCD)

    if (XLCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      IN0AM005.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    else
      IN0AM005.XLCDESC = "INACTIVE";
    end

  else
    IN0AM005.XLCDESC = "UNKNOWN";

  end

   /* ------------------------------------------------------------*/
   /* Verify start date entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.IN0AM-START-DT > 0)

    set TA2REC empty;

    TA2REC.TA2GRGAN = IN0AM005.IN0AM-START-DT;
    /* -----------------------  Y2K OUT BEGIN  ------------------------*/
    /*  */
    /* MOVE IN0AW00.IN0AW-CURR-CC TO TA2REC.TA2CENT;*/
    /*  */
    /* ------------------------  Y2K OUT END  -------------------------*/
    /* -----------------------  Y2K IN BEGIN  -------------------------*/
    /*  */
    IN0AW00.XXX-WORK-DT = IN0AM005.IN0AM-START-DT;
    if (IN0AW00.WORK-YY > 60)
      TA2REC.TA2CENT = 19;
    else
      TA2REC.TA2CENT = 20;
    end
    /*  */
    /* ------------------------  Y2K IN END  --------------------------*/
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = IN0AW00.INR-ENTRY6-DT;
    if (IN0AW00.INR-ENTRY6-DT == "A")
      TA2REC.TA2GRGAN = IN0AM005.IN0AM-START-DT; /* US date format*/
    else
      TA2REC01.TA2-GREG-DDMMYY = IN0AM005.IN0AM-START-DT;
                       /* EUR date format*/
    end

    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

    if (TA2REC.TA2RTNCD == 0)
      IN0AW00.IN0AW-START-DT = TA2REC.TA2GRGGN;
    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(18); /* Invalid date*/
      set IN0AM005.IN0AM-START-DT cursor, bold; /* Highlight*/
    end

  else
    IN0AW00.IN0AW-START-DT = 0;

  end

   /* ------------------------------------------------------------*/
   /* Verify end date entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.IN0AM-END-DT > 0)

    set TA2REC empty;

    TA2REC.TA2GRGAN = IN0AM005.IN0AM-END-DT;
    /* -----------------------  Y2K OUT BEGIN  ------------------------*/
    /*  */
   /* MOVE IN0AW00.IN0AW-CURR-CC TO TA2REC.TA2CENT;*/
    /*  */
    /* ------------------------  Y2K OUT END  -------------------------*/
    /* -----------------------  Y2K IN BEGIN  -------------------------*/
    /*  */
    IN0AW00.XXX-WORK-DT = IN0AM005.IN0AM-END-DT;
    if (IN0AW00.WORK-YY > 60)
      TA2REC.TA2CENT = 19;
    else
      TA2REC.TA2CENT = 20;
    end
    /*  */
    /* ------------------------  Y2K IN END  --------------------------*/
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = IN0AW00.INR-ENTRY6-DT;
    if (IN0AW00.INR-ENTRY6-DT == "A")
      TA2REC.TA2GRGAN = IN0AM005.IN0AM-END-DT; /* US date format*/
    else
      TA2REC01.TA2-GREG-DDMMYY = IN0AM005.IN0AM-END-DT;
                       /* EUR date format*/
    end


    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

    if (TA2REC.TA2RTNCD == 0)
      IN0AW00.IN0AW-END-DT = TA2REC.TA2GRGGN;
    else
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(18); /* Invalid date*/
      set IN0AM005.IN0AM-END-DT cursor, bold; /* Highlight*/
    end

  else
    IN0AW00.IN0AW-END-DT = 0;

  end

   /* ------------------------------------------------------------*/
   /* Start date should be less/equal end date.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.IN0AW-START-DT > IN0AW00.IN0AW-END-DT)

    INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
    converseLib.validationFailed(16); /* Start date greater end date*/
    set IN0AM005.IN0AM-START-DT cursor, bold;
    set IN0AM005.IN0AM-END-DT bold;

  end

   /* ------------------------------------------------------------*/
   /* Start date and end date range should not be more than 14 days.*/
   /* ------------------------------------------------------------*/

  set TA2REC empty;

  TA2REC.TA2DBDFN = IN0AW00.IN0AW-START-DT;
  TA2REC.TA2DBDTN = IN0AW00.IN0AW-END-DT;
  TA2REC.TA2DTOPT = "DAYSDIFF";

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD == 0)

    if (TA2REC.TA2DBDDN > 13) /* Days difference greater 13*/
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(158); /* More than 14 days difference*/
      set IN0AM005.IN0AM-START-DT cursor, bold;
      set IN0AM005.IN0AM-END-DT bold;
    end

  end

   /* ------------------------------------------------------------*/
   /* For date range, start end dates should be less current date.*/
   /* Access is for audit history files only.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.IN0AW-START-DT < IN0AW00.XXX-CURR-DT)

    if (IN0AW00.IN0AW-END-DT >= IN0AW00.XXX-CURR-DT)
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(150); /* Date range should not include today*/
      set IN0AM005.IN0AM-END-DT cursor, bold;
      set IN0AM005.IN0AM-START-DT bold;
    end
  end

   /* ------------------------------------------------------------*/
   /* When start date is current date, so should end date.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.IN0AW-START-DT == IN0AW00.XXX-CURR-DT)

    if (IN0AW00.IN0AW-END-DT > IN0AW00.XXX-CURR-DT)
      INWREC.XXX-MSG-LOC-ID = "54300"; /* Message location*/
      converseLib.validationFailed(150); /* Date range should not include today*/
      set IN0AM005.IN0AM-END-DT cursor, bold;
      set IN0AM005.IN0AM-START-DT bold;
    end

  end


end // end IN0A-54300

// Verify data in the line
Function IN0A-54400()
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not a "S", indicate that*/
   /* only "S" may be entered to select a line.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
  IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR]) /* Selection entered*/

    if (IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " "
     || IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "S")
    /* next sentence*/
    else
      INWREC.XXX-MSG-LOC-ID = "54400"; /* Message location*/
      converseLib.validationFailed(139); /* Only "S" may be entered*/
      set IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
                                   /* Highlight*/
    end

  end


end // end IN0A-54400

// Process valid input request
Function IN0A-55000()
   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (IN0AM005.XWHCD != IN0AW02.XWHCD       /* Warehouse code*/
   || IN0AM005.XGPCD != IN0AW02.XGPCD       /* GPC code*/
   || IN0AM005.SY1STNBR != IN0AW02.SY1STNBR /* Style nbr*/
   || IN0AM005.SY2CLRID != IN0AW02.SY2CLRID /* Color id*/
   || IN0AM005.XDMCD != IN0AW02.XDMCD       /* Dimension code*/
   || IN0AM005.XQACD != IN0AW02.XQACD       /* Quality code*/
   || IN0AM005.IN0AM-XIF-TRN-FLD-CD !=      
  IN0AW02.IN0AW-XIF-TRN-FLD-CD              /* Field code*/
   || IN0AM005.IN0AM-START-DT !=            
  IN0AW02.IN0AW-START-DT                    /* Start date*/
   || IN0AM005.IN0AM-END-DT !=              
  IN0AW02.IN0AW-END-DT)                     /* End date*/

    IN0AW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    IN0AW00.XXX-CURR-PAGE-NBR = IN0AW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If By Document inquiry was requested, set to display map 5.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* By Document inquiry was requested*/

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

    IN0AW00.XXX-REC-SEQ-NBR = 0; /* Record seq nbr*/

    set IN0AW01 empty;

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* ------------------------------------------------------------*/

  IN0AW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (IN0AW00.XXX-INX-FLD-NBR <= IN0AW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/

    if (IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])

      IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = IN0AM005.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      IN0AW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/

    end

    IN0AW00.XXX-INX-FLD-NBR = IN0AW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, format the key fields and indicate*/
   /* that map 004 is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in IN0AW02.XXX-LN-SEL-IND) /* Line was selected*/

    IN0AW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "6"; /* Map to be displayed*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Enter new key fields, select a line or press a valid pf key.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = "55000"; /* Message location*/
  converseLib.validationFailed(1); /* Enter new input or pf key*/


end // end IN0A-55000

// Process map 6 (By Prod - Selc)
Function IN0A-60000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display By Product - Select.*/
   /* Processing always returns to the top of this process and falls*/
   /* through subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Verify entered data and process valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  IN0A-61000(); /* Format and display the map*/

  IN0A-62000(); /* Check attention identifier*/

  IN0A-63000(); /* Verify/process entered data*/


end // end IN0A-60000

// Format and converse map 6
Function IN0A-61000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    INWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (IN0AW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    IN0A-61100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  IN0AM006.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  IN0AM006.CATOAP = COMMAREA.CATOAP; /* TO application*/
  IN0AM006.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (INWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (INWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (INWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(INWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      IN0AM006.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    IN0AM006.XXX-MSG-LOC-ID = INWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set IN0AM006 alarm; /* Indicate sound alarm*/

  end

  converse IN0AM006 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  INWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = IN0AM006.CATOAP; /* TO application*/
  COMMAREA.CAITEM = IN0AM006.CAITEM; /* Application data*/

  set IN0AM006.CATOAP normal; /* TO application*/
  set IN0AM006.CAITEM normal; /* Application data*/


end // end IN0A-61000

// Format map 6 data
Function IN0A-61100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set IN0AM006 initial; /* M006 input/output area*/

  IN0AW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  IN0AM006.XWHCD = IN0AW02.XWHCD; /* Warehouse code*/
  IN0AM006.XWHABRV = IN0AW02.XWHABRV; /* Warehouse name*/
  IN0AM006.XGPCD = IN0AW02.XGPCD; /* GPC code*/
  IN0AM006.XGPABRV = IN0AW02.XGPABRV; /* GPC desc*/
  IN0AM006.SY1STNBR = IN0AW02.SY1STNBR; /* Style nbr*/
  IN0AM006.SY1SSTNM = IN0AW02.SY1SSTNM; /* Style short name*/
  IN0AM006.SY2CLRID = IN0AW02.SY2CLRID; /* Color id*/
  IN0AM006.SY2CLRAB = IN0AW02.SY2CLRAB; /* Colr abrv*/
  IN0AM006.XDMCD = IN0AW02.XDMCD; /* Dimension code*/
  IN0AM006.XQACD = IN0AW02.XQACD; /* Quality code*/
  IN0AM006.XLCCD = IN0AW02.XLCCD; /* Product life cycle code*/
  IN0AM006.XLCDESC = IN0AW02.XLCDESC; /* Product life cycle desc*/
  IN0AM006.IN0AM-XIF-TRN-FLD-CD = IN0AW02.IN0AW-XIF-TRN-FLD-CD; /* Audit tran field code*/
  IN0AM006.XIFABRV = IN0AW02.XIFABRV; /* Audit tran field desc*/
  IN0AM006.IN0AM-START-DT = IN0AW02.IN0AW-START-DT; /* Start date*/
  IN0AM006.IN0AM-END-DT = IN0AW02.IN0AW-END-DT; /* End date*/

  IN0AM006.XXX-REC-SEQ-NBR = IN0AW02.XXX-REC-SEQ-NBR[XXX-INX-FLD-NBR]; /* Record seq nbr*/

  IN0AM006.XSDCD = IN0AW02.XSDCD[XXX-INX-FLD-NBR]; /* Spec difference code*/
  /* MOVE IN0AW02.xsacd(XXX-INX-FLD-NBR) TO*/
  /* IN0AM006.xsacd;/* Shade code*/
  IN0AM006.XPGCD = IN0AW02.XPGCD[XXX-INX-FLD-NBR]; /* Package type code*/
  IN0AM006.XUMCD = IN0AW02.XUMCD[XXX-INX-FLD-NBR]; /* Unit of measure*/
  IN0AM006.IN0AM-TOTAL-QTY = IN0AW02.IN0AW-TOTAL-QTY[XXX-INX-FLD-NBR]; /* Total qty*/
  IN0AM006.XIFCD = IN0AW02.XIFCD[XXX-INX-FLD-NBR]; /* Audit tran field code*/
  IN0AM006.IN5TRDCD = IN0AW02.IN5TRDCD[XXX-INX-FLD-NBR]; /* Audit tran doc code*/
  IN0AM006.IN5TRDOC = IN0AW02.IN5TRDOC[XXX-INX-FLD-NBR]; /* Audit tran doc nbr*/
  IN0AM006.IN5TRSUB = IN0AW02.IN5TRSUB[XXX-INX-FLD-NBR]; /* Audit tran doc sub*/
  IN0AM006.XOWCD = IN0AW02.XOWCD[XXX-INX-FLD-NBR]; /* Owner group code*/
  IN0AM006.XIGCD = IN0AW02.XIGCD[XXX-INX-FLD-NBR]; /* Tran group code*/
  IN0AM006.XITCD = IN0AW02.XITCD[XXX-INX-FLD-NBR]; /* Tran type code*/
  IN0AM006.XIRCD = IN0AW02.XIRCD[XXX-INX-FLD-NBR]; /* Tran reason code*/
  IN0AM006.IN5USRID = IN0AW02.IN5USRID[XXX-INX-FLD-NBR]; /* User id*/
  IN0AM006.IN5TRDDT = IN0AW02.IN5TRDDT[XXX-INX-FLD-NBR]; /* Audit tran doc date*/

   /* ------------------------------------------------------------*/
   /* Select unique the selected item.*/
   /* ------------------------------------------------------------*/

  set IN6REC empty;

  IN6REC.XWHCD = IN0AW02.XWHCD; /* Warehouse code*/
  IN6REC.IN5TRPRT = IN0AW02.IN5TRPRT[XXX-INX-FLD-NBR]; /* Audit tran part code*/
  IN6REC.IN5TRDCD = IN0AW02.IN5TRDCD[XXX-INX-FLD-NBR]; /* Audit tran doc code*/
  IN6REC.IN5TRDOC = IN0AW02.IN5TRDOC[XXX-INX-FLD-NBR]; /* Audit tran doc nbr*/
  IN6REC.IN5TRSUB = IN0AW02.IN5TRSUB[XXX-INX-FLD-NBR]; /* Audit tran doc sub*/

  IN6REC.IN5TRDTE = IN0AW02.IN5TRDTE[XXX-INX-FLD-NBR];
                                   /* Audit tran date*/
  IN6REC.IN5TRTIM = IN0AW02.IN5TRTIM[XXX-INX-FLD-NBR];
                                   /* Audit tran time*/

  IN6REC.SY1STNBR = IN0AW02.SY1STNBR; /* Style nbr*/
  IN6REC.SY2CLRID = IN0AW02.SY2CLRID; /* Color id*/

  IN6REC.XOWCD = IN0AW02.XOWCD[XXX-INX-FLD-NBR]; /* Owner group code*/
  IN6REC.XGPCD = IN0AW02.XGPCD; /* GPC code*/
  IN6REC.XDMCD = IN0AW02.XDMCD; /* Dimension code*/
  IN6REC.XQACD = IN0AW02.XQACD; /* Quality code*/
  IN6REC.XSDCD = IN0AW02.XSDCD[XXX-INX-FLD-NBR]; /* Spec difference code*/
  IN6REC.XSACD = IN0AW02.XSACD[XXX-INX-FLD-NBR]; /* Shade code*/
  IN6REC.XPGCD = IN0AW02.XPGCD[XXX-INX-FLD-NBR]; /* Package type code*/
  IN6REC.XUMCD = IN0AW02.XUMCD[XXX-INX-FLD-NBR]; /* Unit of measure*/
  IN6REC.XIFCD = IN0AW02.XIFCD[XXX-INX-FLD-NBR]; /* Tran field code*/

  if (IN0AW00.IN0AW-START-DT == IN0AW00.XXX-CURR-DT)

    IN0AS-IO2760-S(); /* Select requested row*/
                                   /* (dinvnt.viadit02)*/
  else
    IN0AS-IO1420-S(); /* Select requested row*/
                                   /* (dinvnt.viaitm01)*/

  end

   /* ------------------------------------------------------------*/
   /* Select row for size descriptions.*/
   /* ------------------------------------------------------------*/

  set SYPREC empty;

  SYPREC.XGPCD = IN0AW02.XGPCD; /* GPC code*/
  SYPREC.SY1STNBR = IN0AW02.SY1STNBR; /* Style nbr*/
  SYPREC.SY2CLRID = IN0AW02.SY2CLRID; /* Color id*/
  SYPREC.XDMCD = IN0AW02.XDMCD; /* Dimension code*/
  SYPREC.XQACD = "**"; /* Quality code*/

  IN0AS-SY1120(); /* Select requested row (dprod.vsize001)*/

   /* ------------------------------------------------------------*/
   /* Format size qty and description.*/
   /* ------------------------------------------------------------*/

  IN0AW00.IN0AW-WS-INX-QTY-DESC = 1; /* Initialize ws qty/desc index*/
  IN0AW00.IN0AW-MP-INX-QTY-DESC = 1; /* Initialize map qty/desc index*/

  while (IN0AW00.IN0AW-WS-INX-QTY-DESC <= 40)

    if (IN6REC.IN6TQT[IN0AW-WS-INX-QTY-DESC] != 0)
      IN0AM006.IN6TQT[IN0AW-MP-INX-QTY-DESC] = IN6REC.IN6TQT[IN0AW-WS-INX-QTY-DESC];

      if (SYPREC.SY4IDDSC[IN0AW-WS-INX-QTY-DESC] > " ")
        IN0AM006.SY4IDDSC[IN0AW-MP-INX-QTY-DESC] = SYPREC.SY4IDDSC[IN0AW-WS-INX-QTY-DESC];
      else
        IN0AM006.SY4IDDSC[IN0AW-MP-INX-QTY-DESC] = "*****";
      end

      IN0AW00.IN0AW-MP-INX-QTY-DESC = IN0AW00.IN0AW-MP-INX-QTY-DESC + 1;

    end

    IN0AW00.IN0AW-WS-INX-QTY-DESC = IN0AW00.IN0AW-WS-INX-QTY-DESC + 1;

  end

   /* ------------------------------------------------------------*/
   /* Modify line sel ind from 's' to '*'.*/
   /* ------------------------------------------------------------*/

  IN0AW02.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "*";


end // end IN0A-61100

// Check attention identifier
Function IN0A-62000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (IN0AW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set IN0AW02 empty; /* M006 display storage*/
    end

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (IN0AM006.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set IN0AW02 empty;

      IN0AS-TA0050-P(); /* Purge any temporary storage*/

      XSINS-EXIT(); /* Exit to another application*/

      set IN0AM006.CATOAP cursor, bold; /* Highlight*/

      IN0AW00.XXX-MAP-DSP-CD = "5"; /* Map to be displayed*/

    else

      INWREC.XXX-MSG-LOC-ID = "62000"; /* Message location*/
      converseLib.validationFailed(137); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "IN0A-20"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      IN0AW00.XXX-MAP-DSP-CD = "5"; /* Map to be displayed*/
      exit stack;
    end

    IN0AS-TA0050-P(); /* Purge any temporary storage*/

    XSINS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf13) /* PF13 was not pressed*/

    INWREC.XXX-MSG-LOC-ID = "62000"; /* Message location*/
    converseLib.validationFailed(7); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end IN0A-62000

// Verify/process entered data
Function IN0A-63000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (IN0AM006.CAITEM > " ") /* Application data was entered*/

    INWREC.XXX-MSG-LOC-ID = "63000"; /* Message location*/
    converseLib.validationFailed(5); /* Enter only with FAST PATH*/
    set IN0AM006.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If By Product inquiry was requested, set to display map 5.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* By Document inquiry was requested*/

    IN0AW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    IN0AW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

    IN0AW00.XXX-REC-SEQ-NBR = 0; /* Initialize record seq nbr*/

    set IN0AW01 empty;

    return;

  end

   /* ------------------------------------------------------------*/
   /* Check for another selected line.*/
   /* ------------------------------------------------------------*/

  if ("S" in IN0AW02.XXX-LN-SEL-IND from XXX-INX-FLD-NBR) /* Line was selected*/

    IN0AW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line indes*/

    IN0AW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Enter new key fields, select a line or press a valid pf key.*/
   /* ------------------------------------------------------------*/

  INWREC.XXX-MSG-LOC-ID = "63000"; /* Message location*/
  converseLib.validationFailed(88); /* PF3 to last screen*/


end // end IN0A-63000

// Check IN8020 return code
Function IN0AS-IN8020-ERRS()
   /*  */
   /* Check IN8020 return codes.  All return codes except zero (no*/
   /* errors) are posted.  A screen message for DB2 deadlock*/
   /* (8000).*/
   /*  */

  if (INGREC.ING-RETURN-CD == 8000) /* DB2 deadlock*/
    converseLib.validationFailed(136);
    return;
  else
    if (INGREC.ING-RETURN-CD <= 2300) /* Edit error or row not found*/
      converseLib.validationFailed(169);
    end
  end

  TA1REC.TA1-GROUP = INGREC.TA1-GROUP;
  TAEREC.SQLCAREC = INGREC.SQLCAREC;

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TA1REC.TA1TBLKE = INGREC.ING-INPUT-DATA; /* IN8020 parameters*/
  TA1REC.TA1FUNC = "POST";

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes};

end // end IN0AS-IN8020-ERRS

// Close selected set cursor
Function IN0AS-IO0980-C1()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0980" (INXREC, SQLCA, INDREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO0980C1"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO0980-C1

// Fetch next row in cursor
Function IN0AS-IO0980-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0980" (INXREC, SQLCA, INDREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      IN0AW00.IN0AW-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO0980N1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM02"; /* Table view name*/
  TA1REC.TA1TBLKE = INDREC.INDKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO0980-N1

// Select set and open cursor
Function IN0AS-IO0980-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO0980" (INXREC, SQLCA, INDREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO0980S1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM02"; /* Table view name*/
  TA1REC.TA1TBLKE = INDREC.INDKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO0980-S1
// Select requested row
Function IN0AS-IO1410-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO1410" ("S ", SQLCA, IN5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO1410S "; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    if (IN0AW00.XXX-MAP-DSP-CD == "2")
      converseLib.clearScreen();
       /* Clear screen before display*/
    else
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT REQUESTED ROW"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAHDR01"; /* Table view name*/
  TA1REC.TA1TBLKE = IN5REC.IN5KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO1410-S

// Close selected set cursor
Function IN0AS-IO1420-C2()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO1420" (INXREC, SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO1420C2"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO1420-C2

// Fetch next row in cursor
Function IN0AS-IO1420-N2()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO1420" (INXREC, SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      IN0AW00.IN0AW-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO1420N2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO1420-N2

// Select requested row
Function IN0AS-IO1420-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO1420" ("S ", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO1420S "; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    if (IN0AW00.XXX-MAP-DSP-CD == "2")
      converseLib.clearScreen();
       /* Clear screen before display*/
    else
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT REQUESTED ROW"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO1420-S

// Select set and open cursor
Function IN0AS-IO1420-S2()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO1420" (INXREC, SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO1420S2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIAITM01"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO1420-S2

// Select requested row
Function IN0AS-IO2750-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2750" ("S ", SQLCA, IN5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2750S "; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    if (IN0AW00.XXX-MAP-DSP-CD == "2")
      converseLib.clearScreen();
       /* Clear screen before display*/
    else
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT REQUESTED ROW"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADHD02"; /* Table view name*/
  TA1REC.TA1TBLKE = IN5REC.IN5KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2750-S

// Close selected set cursor
Function IN0AS-IO2760-C1()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("C1", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760C1"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-C1

// Close selected set cursor
Function IN0AS-IO2760-C2()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("C2", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760C2"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-C2

// Fetch next row in cursor
Function IN0AS-IO2760-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("N1", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      IN0AW00.IN0AW-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760N1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-N1

// Fetch new row in cursor
Function IN0AS-IO2760-N2()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("N2", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      IN0AW00.IN0AW-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760N2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-N2

// Select requested row
Function IN0AS-IO2760-S()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("S ", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760S "; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    if (IN0AW00.XXX-MAP-DSP-CD == "2")
      converseLib.clearScreen();
       /* Clear screen before display*/
    else
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT REQUESTED ROW"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-S

// Select set and open cursor
Function IN0AS-IO2760-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("S1", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760S1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-S1

// Select set and open cursor
Function IN0AS-IO2760-S2()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2760" ("S2", SQLCA, IN6REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  INWREC.XXX-MSG-LOC-ID = "IO2760S2"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DINVNT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VIADIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = IN6REC.IN6KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-IO2760-S2

// Select the table row
Function IN0AS-SY1120()
   /* ------------------------------------------------------------*/
   /* Select the requested row from the table.*/
   /* ------------------------------------------------------------*/

  SYPREC.SYPFC = "PC"; /* Translator function code*/
  SYPREC.SYPCMPSW = "N"; /* Compressed switch*/

  try
    call "SY1120" (SQLCA, SYPREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      if (SYPREC.SYPRC == 0) /* Return code is successful*/
        return;
      else
        if (SYPREC.SYPRC < 99) /* No size descriptions*/
          INWREC.XXX-MSG-LOC-ID = "SY1120 "; /* Message location*/
          converseLib.validationFailed(67); /* No size description;*/
          return;
        end
      end

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

        return; /* Return to previous process*/

      end

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  INWREC.XXX-MSG-LOC-ID = "SY1120 "; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(136); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(8); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSIZE001"; /* Table view name*/
  TA1REC.TA1TBLKE = SYPREC.SYPKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-SY1120

// Add page to temporary storage
Function IN0AS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  IN0AW01.XXX-TEMP-STG-LNTH = IN0AW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (IN0AW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set IN0AW01 empty; /* Display storage*/

    IN0AW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  INWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-TA0050-A

// Purge any temporary storage
Function IN0AS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set IN0AW01 empty; /* M002 display storage*/

  IN0AW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  IN0AW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (IN0AW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  INWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-TA0050-P

// Read temporary storage page
Function IN0AS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  IN0AW01.XXX-TEMP-STG-LNTH = IN0AW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = IN0AW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (IN0AW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  INWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-TA0050-R

// Update temporary storage page
Function IN0AS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (IN0AW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  INWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(8); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = INWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end IN0AS-TA0050-U

// Exit to another application
Function XSINS-EXIT()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF1 or PF4.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD01"; /* Goal Documentation*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "IN0F"; /* Inventory Menu*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Master Menu*/
  end

   /* ------------------------------------------------------------*/
   /* Save the system work record in the COMMAREA user area.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* Same system*/

    COMMAREA.CAUSERA = INWREC.CAUSERA; /* Save work record*/
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/

  end

   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/

  XSEXIT(); /* Exit to another application*/

  INWREC.XXX-MSG-LOC-ID = "XSEXIT"; /* Message location*/

   /* ------------------------------------------------------------*/
   /* Reestablish the COMMAREA application and item fields.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* Current application*/

  if (converseVar.eventKey is pfkey) /* PF key was pressed*/

    COMMAREA.CATOAP = " "; /* Clear TO application*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end

  end


end // end XSINS-EXIT

//*** RECORD=IN0AW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record IN0AW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
  10 XXX-REC-SEQ-NBR XXX-REC-SEQ-NBR ; 
  10 XXX-CURR-DT XXX-CURR-DT ; 
    15 IN0AW-CURR-CC IN0AW-CURR-CC ; 
    15 IN0AW-CURR-YY IN0AW-CURR-YY ; 
    15 IN0AW-CURR-MM IN0AW-CURR-MM ; 
    15 IN0AW-CURR-DD IN0AW-CURR-DD ; 
  10 XXX-WORK-DT XXX-WORK-DT ; 
    15 WORK-MM WORK-MM ; 
    15 WORK-DD WORK-DD ; 
    15 WORK-YY WORK-YY ; 
  10 IN0AW-START-DT IN0AW-START-DT ; 
  10 IN0AW-END-DT IN0AW-END-DT ; 
  10 IN0AW-EOF-FL IN0AW-EOF-FL ; 
  10 IN0AW-WS-INX-QTY-DESC IN0AW-WS-INX-QTY-DESC ; 
  10 IN0AW-MP-INX-QTY-DESC IN0AW-MP-INX-QTY-DESC ; 
  10 XGPCD XGPCD ; 
  10 XDMCD XDMCD ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XLCCD XLCCD ; 
  10 IN0AW-DOC-KEY-FLD IN0AW-DOC-KEY-FLD ; 
  10 IN0AW-PROD-KEY-FLD IN0AW-PROD-KEY-FLD ; 
  10 INR-ENTRY6-DT INR-ENTRY6-DT ; 
end // end IN0AW00

//*** RECORD=IN0AW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record IN0AW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 IN0AW-WORK-STG-1 char(1215) ; // Working storage 1
    10 IN0AW-DOC-KEY-FLD IN0AW-DOC-KEY-FLD ; 
      15 XWHCD XWHCD ; 
      15 XWHABRV XWHABRV ; 
      15 IN5TRDCD IN5TRDCD ; 
      15 IN5TRDOC IN5TRDOC ; 
      15 IN5TRSUB IN5TRSUB ; 
      15 IN0AW-XIF-TRN-FLD-CD IN0AW-XIF-TRN-FLD-CD ; 
      15 XIFABRV XIFABRV ; 
      15 IN0AW-CURR-DT-ONLY-FL IN0AW-CURR-DT-ONLY-FL ; 
    10 IN0AW-DOCUMENT-LINES IN0AW-DOCUMENT-LINES [15] ; 
      15 XXX-LN-SEL-IND XXX-LN-SEL-IND ; 
      15 XXX-REC-SEQ-NBR XXX-REC-SEQ-NBR ; 
      15 IN5TRPRT IN5TRPRT ; 
      15 XOWCD XOWCD ; 
      15 IN5TRDDT IN5TRDDT ; 
      15 XIGCD XIGCD ; 
      15 XITCD XITCD ; 
      15 XIRCD XIRCD ; 
      15 XGPCD XGPCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XQACD XQACD ; 
      15 XLCCD XLCCD ; 
      15 XSDCD XSDCD ; 
      15 XSACD XSACD ; 
      15 XPGCD XPGCD ; 
      15 XUMCD XUMCD ; 
      15 IN0AW-TOTAL-QTY IN0AW-TOTAL-QTY ; 
      15 XIFCD XIFCD ; 
      15 IN5USRID IN5USRID ; 
      15 IN5TRREF IN5TRREF ; 
      15 IN5TRDTE IN5TRDTE ; 
      15 IN5TRTIM IN5TRTIM ; 
end // end IN0AW01

//*** RECORD=IN0AW02 ****
// ------------------------
// Map 002 display storage.
// ------------------------
// ***********************
Record IN0AW02 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 IN0AW-WORK-STG-2 char(941) ; // Working storage 2
    10 IN0AW-PROD-KEY-FLD IN0AW-PROD-KEY-FLD ; 
      15 XWHCD XWHCD ; 
      15 XWHABRV XWHABRV ; 
      15 XGPCD XGPCD ; 
      15 XGPABRV XGPABRV ; 
      15 IN0AW-START-DT IN0AW-START-DT ; 
      15 IN0AW-END-DT IN0AW-END-DT ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 SY1SSTNM SY1SSTNM ; 
      15 SY2CLRAB SY2CLRAB ; 
      15 XQACD XQACD ; 
      15 XLCCD XLCCD ; 
      15 XLCDESC XLCDESC ; 
      15 IN0AW-XIF-TRN-FLD-CD IN0AW-XIF-TRN-FLD-CD ; 
      15 XIFABRV XIFABRV ; 
    10 IN0AW-PRODUCT-LINES IN0AW-PRODUCT-LINES [15] ; 
      15 XXX-LN-SEL-IND XXX-LN-SEL-IND ; 
      15 XXX-REC-SEQ-NBR XXX-REC-SEQ-NBR ; 
      15 XSDCD XSDCD ; 
      15 XSACD XSACD ; 
      15 XPGCD XPGCD ; 
      15 XUMCD XUMCD ; 
      15 IN0AW-TOTAL-QTY IN0AW-TOTAL-QTY ; 
      15 XIFCD XIFCD ; 
      15 IN5TRPRT IN5TRPRT ; 
      15 IN5TRDCD IN5TRDCD ; 
      15 IN5TRDOC IN5TRDOC ; 
      15 IN5TRSUB IN5TRSUB ; 
      15 XOWCD XOWCD ; 
      15 XIGCD XIGCD ; 
      15 XITCD XITCD ; 
      15 XIRCD XIRCD ; 
      15 IN5USRID IN5USRID ; 
      15 IN5TRDDT IN5TRDDT ; 
      15 IN5TRDTE IN5TRDTE ; 
      15 IN5TRTIM IN5TRTIM ; 
end // end IN0AW02

//*** RECORD=INDREC ****
// ************* inv./aud.hdr/aud.itm record ******************
// 
// PUROSE:              returns 40 sets of size data with audit
//                      header & inv. hdr data.
// 
// DB2 TABLE:           dinvnt.viaitm02
// 
// COPYLIB MEMBER:      dcl00153
// 
// KEY TO DB2 TABLE:    Xwhcd
//                      xowcd
//                      in5trdcd
//                      in5trprt
//                      in5trdoc
//                      in5trsub
//                      in5trdte
//                      in5trtim
//                      xigcd
//                      xitcd
//                      xircd
//                      in5usrid
//                      in5trddt
//                      in5trref
//                      xgpcd
//                      SY1STNBR
//                      SY2clrid
//                      xdmcd
//                      xqacd
//                      xsdcd
//                      xsacd
//                      xpgcd
//                      xumcd
//                      xifcd
// 
// MAINTENANCE LOG:
// 
// DATE:      INIT:    COMMENTS:
// --------   ------   -------------------------------------
// 11-03-86   wnj      created csp record
// ************************************************************
// **********************
Record INDREC type basicRecord
  5 INDDATA INDDATA ; 
    10 INDKEY INDKEY ; 
      15 XWHCD XWHCD ; 
      15 XOWCD XOWCD ; 
      15 IN5TRDCD IN5TRDCD ; 
      15 IN5TRPRT IN5TRPRT ; 
      15 IN5TRDOC IN5TRDOC ; 
      15 IN5TRSUB IN5TRSUB ; 
      15 IN5TRDTE IN5TRDTE ; 
      15 IN5TRTIM IN5TRTIM ; 
      15 XIGCD XIGCD ; 
      15 XITCD XITCD ; 
      15 XIRCD XIRCD ; 
      15 IN5USRID IN5USRID ; 
      15 IN5TRDDT IN5TRDDT ; 
      15 IN5TRREF IN5TRREF ; 
      15 XGPCD XGPCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XQACD XQACD ; 
      15 XSDCD XSDCD ; 
      15 XSACD XSACD ; 
      15 XPGCD XPGCD ; 
      15 XUMCD XUMCD ; 
      15 XIFCD XIFCD ; 
    10 IN6TQT IN6TQT [40] ; 
end // end INDREC

// Current date century
DataItem IN0AW-CURR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current date day
DataItem IN0AW-CURR-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current date only flag
DataItem IN0AW-CURR-DT-ONLY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current date month
DataItem IN0AW-CURR-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current date year
DataItem IN0AW-CURR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// By Document key fields
DataItem IN0AW-DOC-KEY-FLD char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Summary lines by document
DataItem IN0AW-DOCUMENT-LINES char(79)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End date
DataItem IN0AW-END-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of file flag (no more rows
DataItem IN0AW-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Qty and size desc index - map
DataItem IN0AW-MP-INX-QTY-DESC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem IN0AW-PROD-KEY-FLD char(101)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Summary lines by product
DataItem IN0AW-PRODUCT-LINES char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Start date
DataItem IN0AW-START-DT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Audit tran total qty
DataItem IN0AW-TOTAL-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Qty and size desc index - ws
DataItem IN0AW-WS-INX-QTY-DESC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Audit tran field code
DataItem IN0AW-XIF-TRN-FLD-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data group item entire row
DataItem INDDATA char(239)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key into invntry. item table
DataItem INDKEY char(79)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current date day
DataItem WORK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current date month
DataItem WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current date year
DataItem WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current date
DataItem XXX-WORK-DT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", dateFormat = "MM-dd-yy", inputRequired = no
}
end

