package os0p;
import corpcom4.*;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import os.common.OSRREC;
import os.common.OSSREC;
import os.common.OSTREC;
import os.common.OSWWREC;
import sp.common.SP1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VBASGN01;
import xx.common.*;
import xx02.*;
import xx02.XGPTBL;
//*** PROGRAM=OS0P ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS0PS-GET-   = SELECT RECORDS
//    OS0PS-EDT-   = EDIT FIELDS
//    OS0PS-BLD-   = BUILD RECORDS
//    OS0PS-FMT-   = FORMAT RECORDS
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 04/18/94   SCHASE     Created.
// * 11/29/94   CBRINE     Added OSWW-MSG-NBR to OSWWREC.
// * 03/24/98   KLEE       Changed order of flag processing.
// *            SATYAM     Changes have been done by Ken Lee
// *                       and tested by Srinivas. installed
// *                       05/19/98.
// *********************
Program OS0P type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  OS0PW01 OS0PW01; // record
  OSRREC OSRREC; // record
  OSSREC OSSREC; // record
  OSTREC OSTREC; // record
  OSWWREC OSWWREC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBASGN01 VBASGN01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  //  use  OS0PM // VAGen Info - unused formGroup    {
  //    pfKeyEquate = no
  //  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0P000: OS0P000();
    goto OS0P010;
    OS0P010: OS0P010();
    goto OS0P010;
  end // end main
end // end OS0P

// main execute process
Function OS0P000()
     /* Check csp and order batch security*/
  ;
  XSENTRY();
  ;
     /* Initialize application - init records, save map name*/
  ;
  OS0PS-INIT-OS0P();
  ;
     /* Build map for display*/
  ;
   /* OS0PS-BLD-MAP;*/
  OS0PS-GET-VBASGN01();
  ;
  ;
end // end OS0P000
// converse/ after process
Function OS0P010()
  ;
   /* SET OS0PM001 PAGE;                /* set map to scroll properly*/
   /* MOVE 1 TO EZESEGM;                /* force segmented converse mode*/
  ;
  ;
     /* Init error stuff*/
  ;
  OSWWREC.OSWWERFL = "N";
  converseLib.validationFailed(0);
  ;
  ;
     /* Reset field attributes*/
  ;
   /* OS0PS-RESET-ATTRIB;*/
  ;
  ;
     /* Edit map*/
  ;
   /* OS0PS-EDT-MAP;*/
  OS0PS-EDT-RECORD();
  ;
  ;
  if (OSWWREC.OSWWERFL == "N")
    OS0PS-CALL-OS1020(); /* build temp storage for bulks*/
  end
  ;
     /* Transfer to another application*/
  ;
  OSWW-FROM-PGM = "OS0P"; /* used for pf3 test in OS0Q*/
  ;
  OS0PS-TRNSFR-CNTL(); /* transfer to requested application.*/
  ;
  ;
end // end OS0P010

// UPDT ASSOCIATED RECS OB1220
Function OS0PS-CALL-OS1020()
  ;
  OS0PS-PRG-TMP-STOR(); /* purge os0q ts before building*/
  OS0PS-FMT-OSTREC(); /* format passing record*/
  ;
  call "OS1020" (OSTREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (OSTREC.OST-RETURN-CODE == 00)
    OSWWREC.OSWWTF2M = OSTREC.OST-MAX-PAGE-NBR;
  else
    if (OSTREC.OST-RETURN-CODE == 02)
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWWREC.OSWW-MSG-NBR = 886; /* no bulks found for criteria*/
      OS0PS-TRNSFR-CNTL();
    else
      if (OSTREC.OST-RETURN-CODE == 03)
        OSWWREC.OSWWERFL = "Y"; /* set error flag*/
        OSWWREC.OSWW-MSG-NBR = 010; /* database busy try again*/
        OS0PS-TRNSFR-CNTL();
      else
     /* OSTREC.OST-RETURN-CODE EQ 01  (os1020 couldn't find bulk asgnmnt)*/
     /* OSTREC.OST-RETURN-CODE EQ 04  (os1020 couldn't find company rec)*/
     /* OSTREC.OST-RETURN-CODE EQ 05  (os1020 couldn't find dept record)*/
     /* OSTREC.OST-RETURN-CODE EQ 06  (os1020 couldn't find order header)*/
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0P    ";
        TA1REC.TA1LOCAT[1] = "OS0PS-CA";
        TA1REC.TA1LOCAT[2] = "LL-OS102";
        TA1REC.TA1LOCAT[3] = "0 OS1020";
        TA1REC.TA1DBASE = "DORDB   ";
        TA1REC.TA1TBLVU = "VBULKS01";
        ;
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        ;
        COMMAREA.CAUSERA = " ";
        ;
        XSPF4();
        exit program;
      end
    end
  end
  ;
  ;
end // end OS0PS-CALL-OS1020

// Edit KUCCOID
Function OS0PS-EDT-KUCCOID()
  ;
  ;
    /* verify company exists*/
  ;
  if (OSWWREC.KUCCOID == 0) /* no customer id entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    OSWWREC.OSWW-MSG-NBR = 879; /* customer id is required*/
    OS0PS-TRNSFR-CNTL();
  else
    OS0PS-GET-KUCREC(); /* select company*/
  end
  ;
  ;
end // end OS0PS-EDT-KUCCOID

// Edit KUCCOID
Function OS0PS-EDT-KUMSTRID()
  ;
  ;
    /* verify store exists*/
  ;
  OS0PS-GET-KUMREC(); /* select store*/
  ;
  ;
end // end OS0PS-EDT-KUMSTRID

// map to db date convert
Function OS0PS-EDT-MMDDYY()
   /* Edit MMDDYY date*/
  ;
   /* move the map date to OSWWREC.OSWWDT6 before entering*/
   /* this routine*/
   /* the calling stmt grp must handle the return code*/
   /* processing*/
  ;
  set TA2REC empty;
  TA2REC.TA2GRGA = OSWWREC.OSWWDT6;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
end // end OS0PS-EDT-MMDDYY

// EDIT BEGINNING NEED DATE
Function OS0PS-EDT-OP1CUNDT()
  ;
  ;
  if (OSWWREC.OP1CUNDT > 0) /* need date entered*/
    if (OSWWREC.OP1CUPO > " ") /* cust po entered*/
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWWREC.OSWW-MSG-NBR = 947; /* need date or po req*/
      OS0PS-TRNSFR-CNTL(); /* transfer to OS0N*/
    else
      if (COMMAREA.CAFROMAP == "OS0Q")
        /* NEXT SENTENCE*/
      else
        OSWWREC.OSWWDT6 = OSWWREC.OP1CUNDT;
        OS0PS-VALIDATE-DTE(); /* validate date*/
        ;
        if (TA2REC.TA2RTNCD == 0) /* good return*/
       /* next sentence*/
        else
          OS0PS-TRNSFR-CNTL();
        end
      end
    end
   /* ELSE;*/
   /* IF COMMAREA.CAFROMAP = 'OS0O';*/
   /* IF VBASGN01.OB-ASGN-MO-ONLY-FL = 'Y';    /* asgn prior need date flag*/
   /* MOVE 'Y' TO OSWWREC.OSWWERFL;          /* set error flag*/
   /* MOVE 952 TO OSWWREC.OSWW-MSG-NBR;      /* setting and begin date*/
                                            /* are incompatible*/
   /* END;*/
   /* IF VBASGN01.OB-ASGN-MO-BWD-FL = 'Y';     /* asgn same need date flag*/
   /* MOVE 'Y' TO OSWWREC.OSWWERFL;          /* set error flag*/
   /* MOVE 952 TO OSWWREC.OSWW-MSG-NBR;      /* setting and begin date*/
   /* /* are incompatible*/
   /* END;*/
   /* IF VBASGN01.OB-ASGN-MO-FWD-FL = 'Y';     /* asgn next need date flag*/
   /* MOVE 'Y' TO OSWWREC.OSWWERFL;          /* set error flag*/
   /* MOVE 952 TO OSWWREC.OSWW-MSG-NBR;      /* setting and begin date*/
   /* /* are incompatible*/
   /* END;*/
   /* ND;*/
  end
  ;
  ;
end // end OS0PS-EDT-OP1CUNDT

// Edit record from OS0N
Function OS0PS-EDT-RECORD()
  ;
  OS0PW01.OS0PW-CHG-FLAG = "N"; /* init change flag*/
  converseLib.validationFailed(0);
  ;
    /* Edit Sales Program ID*/
  ;
  OS0PS-EDT-SP1ID();
    /* Edit Customer PO*/
  ;
   /* no edit for customer po*/
  ;
    /* Edit Need Date*/
  ;
  OS0PS-EDT-OP1CUNDT();
    /* Edit GPC Code*/
  ;
  OS0PS-EDT-XGPCD();
  ;
    /* Edit Department ID*/
  if (OSWWREC.XNXCD > 0) /* department key*/
    OS0PS-EDT-XNXCD();
  end
  ;
    /* Edit Store ID*/
  ;
  if (OSWWREC.KUMSTRID > 0)
    OS0PS-EDT-KUMSTRID();
  end
  ;
    /* Edit Customer ID*/
  ;
  if (OSWWREC.KUCCOID > 0) /* customer key*/
    OS0PS-EDT-KUCCOID();
  end
  ;
  ;
end // end OS0PS-EDT-RECORD

// Edit KUCCOID
Function OS0PS-EDT-SP1ID()
  ;
  ;
    /* verify company exists*/
  ;
   /* IF OS0PM001.SP1ID EQ ' ';             /* no customer id entered*/
  if (OSWWREC.SP1ID == " ") /* no customer id entered*/
   /* next sentence*/
  else
    OS0PS-GET-SP1REC(); /* select sales program*/
  end
  ;
  ;
end // end OS0PS-EDT-SP1ID

// EDIT GENERAL PRODUCT CODE
Function OS0PS-EDT-XGPCD()
  ;
  if (OSWWREC.XGPCD == " ") /* no gpc entered to edit*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    OSWWREC.OSWW-MSG-NBR = 882; /* GPC code is invalid or inactive*/
    OS0PS-TRNSFR-CNTL();
  else
    if (OSWWREC.XGPCD in XGPTBL.XGPCD /* if gpc is on tbl*/
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is a active status*/
       /* next sentence*/
    else
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWWREC.OSWW-MSG-NBR = 847; /* GPC code is invalid or inactive*/
      OS0PS-TRNSFR-CNTL();
    end
  end
  ;
  ;
end // end OS0PS-EDT-XGPCD

// Edit KUCCOID
Function OS0PS-EDT-XNXCD()
  ;
  ;
    /* verify department exists*/
  ;
  OS0PS-GET-KUJREC(); /* select department*/
  ;
  ;
end // end OS0PS-EDT-XNXCD

// Load Map using VBASGN01
Function OS0PS-FMT-OSTREC()
  ;
  set OSTREC empty;
  ;
  OSTREC.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  OSWWREC.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  ;
  OSTREC.KUCCOID = OSWWREC.KUCCOID;
  OSTREC.KUMSTRID = OSWWREC.KUMSTRID;
  OSTREC.XNXCD = OSWWREC.XNXCD;
  OSTREC.XGPCD = OSWWREC.XGPCD;
  ;
  if (OSWWREC.OP1CUNDT != 0)
    OSTREC.OP1CUNDT = OSWWREC.OSWWDT8;
  else
    OSTREC.OP1CUNDT = 0;
  end
  ;
  if (OSWWREC.OP1CUPO != " ")
    OSTREC.OP1CUPO = OSWWREC.OP1CUPO;
  else
    OSTREC.OP1CUPO = " ";
  end
  ;
  if (OSWWREC.SP1ID != " ")
    OSTREC.SP1ID = OSWWREC.SP1ID;
  else
    OSTREC.SP1ID = " ";
  end
  ;
  OSTREC.OST-RETURN-CODE = 99;
  ;
  ;
end // end OS0PS-FMT-OSTREC

// Get KUCREC VIA IO For KUCCOID
Function OS0PS-GET-KUCREC()
  ;
  ;
  set SQLCA empty;
  ;
  KUCREC.KUCCOID = OSWWREC.KUCCOID;
  OS0PW01.OS0PW-KUCREC-POST = OSWWREC.KUCCOID;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWWREC.OSWW-MSG-NBR = 837; /* customer does not exist*/
      OS0PS-TRNSFR-CNTL();
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0P    ";
      TA1REC.TA1LOCAT[1] = "OS0PS-GE";
      TA1REC.TA1LOCAT[2] = "T-KUCREC";
      TA1REC.TA1LOCAT[3] = " IO0240 ";
      TA1REC.TA1LOCAT[4] = "S       ";
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = OS0PW01.OS0PW-KUCREC-POST;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0PS-GET-KUCREC

// Get KUKREC VIA IO For KUKPCOID
Function OS0PS-GET-KUJREC()
  ;
  ;
  set SQLCA empty;
  ;
  KUJREC.KUCCOID = OSWWREC.KUCCOID; /* customer key*/
  OS0PW01.OS0PW-KUJREC-CUST = OSWWREC.KUCCOID;
  KUJREC.XNXCD = OSWWREC.XNXCD; /* department key*/
  OS0PW01.OS0PW-KUJREC-DEPT = OSWWREC.XNXCD;
  ;
  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWWREC.OSWW-MSG-NBR = 841; /* department is invalid*/
      OS0PS-TRNSFR-CNTL();
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0P    ";
      TA1REC.TA1LOCAT[1] = "OS0PS-GE";
      TA1REC.TA1LOCAT[2] = "T-KUJREC";
      TA1REC.TA1LOCAT[3] = " IO0290 ";
      TA1REC.TA1LOCAT[4] = "S       ";
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VDEPT001";
      TA1REC.TA1TBLKE = OS0PW01.OS0PW-KUJREC-POST;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0PS-GET-KUJREC

// Get KUCREC VIA IO For KUCCOID
Function OS0PS-GET-KUMREC()
  ;
  ;
  set SQLCA empty;
  ;
  KUMREC.KUCCOID = OSWWREC.KUCCOID;
  KUMREC.KUMSTRID = OSWWREC.KUMSTRID;
  OS0PW01.OS0PW-KUMREC-CUST = OSWWREC.KUCCOID;
  OS0PW01.OS0PW-KUMREC-STOR = OSWWREC.KUMSTRID;
  ;
  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OSWWREC.OSWWERFL = "Y";
      OSWWREC.OSWW-MSG-NBR = 884; /* store does not exist*/
      OS0PS-TRNSFR-CNTL();
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0P    ";
      TA1REC.TA1LOCAT[1] = "OS0PS-GE";
      TA1REC.TA1LOCAT[2] = "T-KUMREC";
      TA1REC.TA1LOCAT[3] = " IO0340 ";
      TA1REC.TA1LOCAT[4] = "S       ";
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = OS0PW01.OS0PW-KUMREC-POST;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0PS-GET-KUMREC

// Get KUCREC VIA IO For KUCCOID
Function OS0PS-GET-SP1REC()
  ;
  ;
  set SQLCA empty;
  ;
  SP1REC.SP1ID = OSWWREC.SP1ID;
  OS0PW-SP1REC-POST = OSWWREC.SP1ID;
  ;
  call "IO0070" ("S ", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWW-MSG-NBR = 885; /* sales program does not exist*/
      OS0PS-TRNSFR-CNTL(); /* go back to 'OS0N'*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0P    ";
      TA1REC.TA1LOCAT[1] = "OS0PS-GE";
      TA1REC.TA1LOCAT[2] = "T-SP1REC";
      TA1REC.TA1LOCAT[3] = " IO0070 ";
      TA1REC.TA1LOCAT[4] = "S       ";
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = OS0PW01.OS0PW-SP1REC-POST;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0PS-GET-SP1REC

// Get VBASGN01 VIA IO0000
Function OS0PS-GET-VBASGN01()
  ;
  ;
  set SQLCA empty;
  set VBASGN01 empty;
  ;
  VBASGN01.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  OS0PW01.OS0PW-VBASGN01-POST = OSWWREC.OB-BULK-ASGN-ID;
  ;
  call "IO7200" ("S ", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OS0P    ";
    TA1REC.TA1LOCAT[1] = "OS0PS-GE";
    TA1REC.TA1LOCAT[2] = "T-VBASGN";
    TA1REC.TA1LOCAT[3] = "01 IO720";
    TA1REC.TA1LOCAT[4] = "0 S     ";
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBASGN01";
    TA1REC.TA1TBLKE = OS0PW01.OS0PW-VBASGN01-POST;
    ;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    ;
    COMMAREA.CAUSERA = " ";
    ;
    XSPF4();
    exit program;
  end
  ;
  ;
end // end OS0PS-GET-VBASGN01

// initialize application
Function OS0PS-INIT-OS0P()
  ;
  set VBASGN01 empty; /* bulk assignment criteria record*/
  set OSTREC empty; /* draw order info record*/
  set SQLCA empty; /* return code from DB2*/
  set ERRSQLCA empty; /* return code from non-db2*/
  set TAEREC empty; /* diags for non db2*/
  set TA1REC empty; /* diagnostic record*/
  set OSWWREC empty; /* system working storage*/
  set OS0PW01 empty; /* working storage*/
  ;
  OSWWREC.OSWWGRP = COMMAREA.CAUSERA; /* init common working storage*/
  ;
  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate;
  ;
  if (COMMAREA.CAFROMAP == "OS0N")
    OSWWREC.OSWWRTNAP = "OS0N";
  else
    if (COMMAREA.CAFROMAP == "OS0O")
      OSWWREC.OSWWRTNAP = "OS0O";
    end
  end
  ;
  if (COMMAREA.CAFROMAP == "OS0Q")
    OSWWREC.OSWWRTNAP = "OS0N";
    OS0PS-TRNSFR-CNTL();
  end
  ;
end // end OS0PS-INIT-OS0P

// MMDDYY To Comp - no validate
Function OS0PS-MMDDYY-COMP()
    /* convert MMDDYY date to comp (DB2 date)*/
  ;
  ;
  ;
   /* the calling stmt group must move the MMDDYY date*/
   /* to OSWWREC.OSWWDT6 before entering this routine*/
  ;
  if (OSWWREC.OSWWDT6 == 0)
    OSWWREC.OSWWDT8 = 0;
    return;
  end
  ;
  ;
  OSWWREC.OSWWDT8Y = OSWWREC.OSWWDT6Y;
  OSWWREC.OSWWDT8M = OSWWREC.OSWWDT6M;
  OSWWREC.OSWWDT8D = OSWWREC.OSWWDT6D;
  ;
  if (OSWWREC.OSWWDT6Y <= 81)
    OSWWREC.OSWWDT8C = 20;
  else
    OSWWREC.OSWWDT8C = 19;
  end
  ;
   /* the calling stmt group needs to move*/
   /* OSWWREC.OSWWDT8 to the comp date field.*/
  ;
end // end OS0PS-MMDDYY-COMP

// Non-DB2 Post Routine TA0020
Function OS0PS-POST-NO-ROLL()
       /* Non-DB2 post routine*/
  ;
  ;
   /* the following fields will be filled in by the*/
   /* calling stmt group before entering this routine*/
     /* ta1locat(1) = transaction type  ie: 'ss' 'sn'*/
     /* ta1locat(2) = i/o mod name*/
     /* ta1locat(3) = calling stmt group name*/
     /* ta1locat(4) = programmers option(extra key data)*/
     /* taerec.taedesc1 = programmers opiton (additional key data*/
     /* taerec.taedesc2 = messages*/
     /* ta1map = appl's mapname and should be initilized*/
              /* in the programs init process.*/
   /* return code processing will also be handled by the*/
   /* calling stmt group.*/
  ;
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "POST";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end
  ;
end // end OS0PS-POST-NO-ROLL

// Purge Bulk Asgnmnt Temp Storag
Function OS0PS-PRG-TMP-STOR()
  ;
  ;
  ;
   /* purge temporary storage 2*/
  ;
  TA5REC.TA5APPID = "OSFQ"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSSREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0
   || TA5REC.TA5RTNCD == 4)
    OSWWREC.OSWWTF2P = 1;
    OSWWREC.OSWWTF2S = 1;
    OSWWREC.OSWWTF2M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS2";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSSREC.OSSTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0PS-POST-NO-ROLL(); /* post,  no rollback, non db2*/
    ;
    ;
  end
end // end OS0PS-PRG-TMP-STOR

// Edit pfkeys for OS0N
Function OS0PS-TRNSFR-CNTL()
  ;
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  if (COMMAREA.CAFROMAP == "OS0Q")
    COMMAREA.CATOAP = "OS0N";
  else
    if (OSWWREC.OSWWERFL == "N") /* input record processed ok*/
      COMMAREA.CATOAP = "OS0Q";
    else
      COMMAREA.CATOAP = "OS0N";
    end
  end
  COMMAREA.CAFROMAP = "OS0P";
  XSEXIT();
  ;
  ;
  ;
end // end OS0PS-TRNSFR-CNTL

// VALIDIATE DATE
Function OS0PS-VALIDATE-DTE()
  ;
  ;
    /* Edit MMDDYY Map Date*/
  ;
  OS0PS-EDT-MMDDYY();
  ;
  if (TA2REC.TA2RTNCD == 0) /* good return*/
    OS0PS-MMDDYY-COMP(); /* convert MMDDYY to comp*/
  else
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    OSWWREC.OSWW-MSG-NBR = 849; /* date entered is invalid*/
  end
  ;
  ;
end // end OS0PS-VALIDATE-DTE

//*** RECORD=OS0PW01 ****
//     Working Storage Record for OS0L.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   05/02/94    schase     initial creation
// ***********************
Record OS0PW01 type basicRecord
  10 OS0PW-CHG-FLAG OS0PW-CHG-FLAG ; 
  10 OS0PW-KUCREC-POST OS0PW-KUCREC-POST ; 
  10 OS0PW-VBASGN01-POST OS0PW-VBASGN01-POST ; 
  10 OS0PW-KUMREC-POST OS0PW-KUMREC-POST ; 
    15 OS0PW-KUMREC-CUST OS0PW-KUMREC-CUST ; 
    15 OS0PW-FILLER1 OS0PW-FILLER1 ; 
    15 OS0PW-KUMREC-STOR OS0PW-KUMREC-STOR ; 
  10 OS0PW-KUJREC-POST OS0PW-KUJREC-POST ; 
    15 OS0PW-KUJREC-CUST OS0PW-KUJREC-CUST ; 
    15 OS0PW-FILLER2 OS0PW-FILLER2 ; 
    15 OS0PW-KUJREC-DEPT OS0PW-KUJREC-DEPT ; 
  10 OS0PW-SP1REC-POST OS0PW-SP1REC-POST ; 
end // end OS0PW01

// Map Field Changed Flag
DataItem OS0PW-CHG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler
DataItem OS0PW-FILLER1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler
DataItem OS0PW-FILLER2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Company error post key
DataItem OS0PW-KUCREC-POST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kuccoid
DataItem OS0PW-KUJREC-CUST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kumstrid
DataItem OS0PW-KUJREC-DEPT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level key for kumrec
DataItem OS0PW-KUJREC-POST char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kuccoid
DataItem OS0PW-KUMREC-CUST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level key for kumrec
DataItem OS0PW-KUMREC-POST char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kumstrid
DataItem OS0PW-KUMREC-STOR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Sales program post key
DataItem OS0PW-SP1REC-POST char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Bulk assignment id post key
DataItem OS0PW-VBASGN01-POST char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

