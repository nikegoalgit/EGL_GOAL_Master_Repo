package os0r;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import ku.common.KUCREC;
import ku.common.KUJREC;
import op.common.*;
import ta.common.TA1REC;
import vv.common.VBULKS02;
//*** PROGRAM=OS0R ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS0KS-BLD-  = Build Records
//    OS0KS-GET-  = Select Records
//    OS0KS-EDT-  = Edit Fields
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 09/06/94   SCHASE     Created.
// * 04/22/96   nfield     change to use vbulks02 and load
//                         sm_srep_id
// *********************
Program OS0R type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OS0RW01 OS0RW01; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  VBULKS02 VBULKS02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OS0RM.OS0RM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0R000: OS0R000();
    goto OS0R010;
    OS0R010: OS0R010();
    goto OS0R010;
  end // end main
end // end OS0R

// main execute process
Function OS0R000()
     /* Check csp and order batch security*/

  XSENTRY(); /* check security*/
  XSSEGTR(); /* set segmented trans id*/

     /* Initialize application*/

  OS0RS-INIT-OS0R();

     /* Build map for display*/

  OS0RS-BLD-MAP();



end // end OS0R000

// converse/ after process
Function OS0R010()

  converseVar.segmentedMode = 1; /* force segmented converse mode*/

  converse OS0RM001 ;

     /* Init error stuff*/

  OS0RW01.OS0RWERR = "N";
  converseLib.validationFailed(0);


     /* Reset field attributes*/

  OS0RS-RESET-ATTRIB();


     /* Edit map*/

  OS0RS-EDT-MAP();


     /* Process option*/

  OS0RS-PROC-OPTIONS(); /* process options*/


end // end OS0R010

// Build OS0K Map
Function OS0RS-BLD-MAP()

     /* build map headings*/

  OS0RM001.OS0RM-MAP-DTE = OS0RW01.OS0RWCDT;

  OS0RM001.OS0RM-MAP-RVN = 01;

  OS0RM001.OS0RM-MAP-OPT = 01; /* default to 1 until other opts*/


end // end OS0RS-BLD-MAP

// Close item cursor-IO0440
Function OS0RS-CLS-VITEM001()


   /* Call the I/O mod to close the cursor.*/
  call "IO0440" ("CS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

   /* Stop the program if error has occurred.*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* Next sentence - no errors, so do nothing.*/

  else
     /* Error has occurred.  Set up TA1REC fields and abend*/

    TA1REC.TA1PGMNM = "OS0R    ";
    TA1REC.TA1MAP = "OS0RM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VITEM001";
    TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;
    TA1REC.TA1LOCAT[1] = "OS0RS-CL";
    TA1REC.TA1LOCAT[2] = "S-VITEM0";
    TA1REC.TA1LOCAT[3] = "01 IO044";
    TA1REC.TA1LOCAT[4] = "0 CS    ";

    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

    COMMAREA.CAUSERA = " ";

    XSPF4();
    exit program;
  end
end // end OS0RS-CLS-VITEM001

// Edit OS0K Map
Function OS0RS-EDT-MAP()


     /* edit option*/

  if (OS0RM001.OS0RM-MAP-OPT == 1
  ) /* NEXT SENTENCE*/
  else
    OS0RW01.OS0RWERR = "Y"; /* SET THE ERROR FLAG*/
    set OS0RM001.OS0RM-MAP-OPT cursor, bold;
    converseLib.validationFailed(831); /* INVALID OPTION*/
  end

     /* edit order number*/

  if (OS0RM001.OP1CUOID != 0)
    /* NEXT SENTENCE*/
  else
    OS0RW01.OS0RWERR = "Y"; /* SET THE ERROR FLAG*/
    set OS0RM001.OP1CUOID cursor, bold;
    set OS0RM001.OP1CUOID bold;
    converseLib.validationFailed(374); /* ORDER NUMBER IS REQUIRED*/
    return;
  end

     /* edit order suborder number*/

  if (OS0RM001.OP1NORID != 0)
    /* NEXT SENTENCE*/
  else
    OS0RW01.OS0RWERR = "Y"; /* SET THE ERROR FLAG*/
    set OS0RM001.OP1NORID cursor, bold;
    converseLib.validationFailed(374); /* ORDER NUMBER IS REQUIRED*/
    return;
  end

     /* edit order number existance*/

  OP1REC.OP1CUOID = OS0RM001.OP1CUOID;
  OP1REC.OP1NORID = OS0RM001.OP1NORID;
  OS0RW-OP1CUOID = OS0RM001.OP1CUOID;
  OP1REC.OP1PARTN = OS0RW-PART-CHAR;

  OS0RS-GET-VORHDR01();

  if (OS0RW01.OS0RWERR == "Y")
    return;
  end

  if (OP1REC.XBDCD != "5")
    OS0RW01.OS0RWERR = "Y"; /* SET THE ERROR FLAG*/
    set OS0RM001.OP1CUOID cursor, bold;
    set OS0RM001.OP1NORID bold;
    converseLib.validationFailed(890); /* ORDER IS NOT A CUSTOMER DRAW*/
  end

end // end OS0RS-EDT-MAP

// Fetch next item-IO0440
Function OS0RS-FET-VITEM001()

   /* Call the I/O mod to read an item record.*/

  call "IO0440" ("SN", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};


   /* Stop program if error has occurred.*/

  if (SQLCA.VAGen_SQLCODE == 0
  ) /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OS0RW01.OS0RW-EOF-ITEMS = "Y"; /* Set EOF Flag*/
    else
       /* Error has occurred.  Set up TA1REC fields and exit*/

      TA1REC.TA1PGMNM = "OS0R    ";
      TA1REC.TA1MAP = "OS0RM001";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VITEM001";
      TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;
      TA1REC.TA1LOCAT[1] = "OS0RS-FE";
      TA1REC.TA1LOCAT[2] = "T-VITEM0";
      TA1REC.TA1LOCAT[3] = "01 IO044";
      TA1REC.TA1LOCAT[4] = "0 SN    ";

      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

      COMMAREA.CAUSERA = " ";

      XSPF4();
      exit program;
    end
  end
end // end OS0RS-FET-VITEM001

// get dcust.vcmpny01 kucrec
Function OS0RS-GET-VCMPNY01()



       /* read the customer company record*/

  KUCREC.KUCCOID = OP1REC.KUCCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2 "; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
    TA1REC.TA1PGMNM = "OS0R    "; /* program name*/
    TA1REC.TA1MAP = "OS0RM001"; /* map name*/
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    OS0RW01.OS0RWKEY = 0;
    OS0RW01.OS0RWKEY3 = OP1REC.KUCCOID;
    TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY; /* table key*/
    TA1REC.TA1LOCAT[4] = "IO0240";
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CAUSERA = " ";
    XSPF4();
    exit program;
  end


end // end OS0RS-GET-VCMPNY01

// GET DEPT FOR DEPT SELF ID
Function OS0RS-GET-VDEPT001()


      /* This routine reads the department record to obtain the*/
      /* department self id (kujslfid).*/


  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "S       ";
    TA1REC.TA1LOCAT[3] = "IO0290  ";
    TA1REC.TA1DBASE = "KUJREC  ";
    TA1REC.TA1TBLVU = "VDEPT001";
    OS0RW01.OS0RWKEY = 0;
    OS0RW01.OS0RWKEY3 = OP1REC.KUCCOID;
    OS0RW01.OS0RWKEY4 = OP1REC.XNXCD;
    TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    COMMAREA.CAUSERA = " ";
    XSPF4();
    exit program;
  end





end // end OS0RS-GET-VDEPT001

// GET DEPT FOR DEPT SELF ID
Function OS0RS-GET-VORHDR01()


      /* This routine reads the order header record to obtain the*/
      /* information needed to create a new dordb.vbulks01 record.*/


  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      OS0RW01.OS0RWERR = "Y";
      set OS0RM001.OP1CUOID cursor, bold;
      set OS0RM001.OP1NORID bold;
      converseLib.validationFailed(32); /* NO ORDER NUMBER EXISTS*/
    else
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[3] = "IO0430  ";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VORHDR01";
      OS0RW01.OS0RWKEY = 0;
      OS0RW01.OS0RWKEY1 = OP1REC.OP1CUOID;
      OS0RW01.OS0RWKEY2 = OP1REC.OP1NORID;
      TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes}; /* abend*/
      COMMAREA.CAUSERA = " ";
      XSPF4();
      exit program;
    end
  end





end // end OS0RS-GET-VORHDR01

// Initialize OS0K Application
Function OS0RS-INIT-OS0R()

  set OP1REC empty; /* Order Header*/
  set OP2REC empty; /* Order Item*/
  set KUCREC empty; /* Company*/
  set KUJREC empty; /* Department*/
  set VBULKS02 empty; /* Bulks*/
  set SQLCA empty; /* return code from DB2*/
  set TA1REC empty; /* diagnostic record*/

  set OS0RM001 empty; /* map*/

  OS0RW01.OS0RWCDT = VGVar.currentShortGregorianDate;
  OS0RW01.OS0RWCTM = VGVar.currentFormattedTime;

  if (OS0RW01.OS0RWCYY <= 51)
    OS0RW01.OS0RWDT8C = 20;
  else
    OS0RW01.OS0RWDT8C = 19;
  end

  OS0RW01.OS0RWDT8Y = OS0RW01.OS0RWCYY; /* date reformat yy*/
  OS0RW01.OS0RWDT8M = OS0RW01.OS0RWCMM; /* date reformat mm*/
  OS0RW01.OS0RWDT8D = OS0RW01.OS0RWCDD; /* date reformat dd*/

  OS0RW01.OS0RWTM4H = OS0RW01.OS0RWCHH1; /* time reformat hh*/
  OS0RW01.OS0RWTM4M = OS0RW01.OS0RWCMM1; /* time reformat mm*/

  TA1REC.TA1MAP = "OS0RM001"; /* map name for diags*/


end // end OS0RS-INIT-OS0R

// WRITE customer BULK RECORD
Function OS0RS-INS-VBULKS01()

     /* build customer bulk record*/

  VBULKS02.OP1PARTN = OP1REC.OP1PARTN; /* move part char*/
  VBULKS02.OP1CUOID = OP1REC.OP1CUOID; /* move order number*/
  VBULKS02.OP1NORID = OP1REC.OP1NORID; /* move nike order id*/

  KUCREC.KUCCOID = OP1REC.KUCCOID; /* move customer id key*/
  OS0RS-GET-VCMPNY01(); /* get comp for group/parent*/
  VBULKS02.KUCGRPID = KUCREC.KUCGRPID; /* move company group id*/
  VBULKS02.KUKPCOID = KUCREC.KUKPCOID; /* move parent company id*/
  VBULKS02.KUCCOID = OP1REC.KUCCOID; /* move customer id*/
  VBULKS02.KUMSTRID = OP1REC.KUMSTRID; /* move store id*/
  VBULKS02.XNXCD = OP1REC.XNXCD; /* move department id*/

  KUJREC.KUCCOID = OP1REC.KUCCOID; /* move customer id key*/
  KUJREC.XNXCD = OP1REC.XNXCD; /* move department id key*/
  OS0RS-GET-VDEPT001(); /* get dept for dept self id*/
  VBULKS02.KUJSLFID = KUJREC.KUJSLFID; /* move dept self id*/
  VBULKS02.XBDCD = OP1REC.XBDCD; /* move bulk code*/
  VBULKS02.XGPCD = OP1REC.XGPCD; /* move gpc*/
  VBULKS02.XDVCD = OP1REC.XDVCD; /* move division code*/
  VBULKS02.XSOCD = OP1REC.XSOCD; /* move sales office*/
  VBULKS02.XWHCD = OP1REC.XWHCD; /* move warehouse code*/
  VBULKS02.OP1CUPO = OP1REC.OP1CUPO; /* move customer po*/
  VBULKS02.OP1CUNDT = OP1REC.OP1CUNDT; /* move need date*/
  VBULKS02.OP1DSADT = OP1REC.OP1DSADT; /* move don't ship after date*/
  VBULKS02.SP1ID = OP1REC.SP1ID; /* move sales program id*/
  VBULKS02.SM4REPID = OP1REC.SM4REPID; /* move sales rep id*/
  VBULKS02.ZZZSDT = OS0RW01.OS0RWDT8; /* setup date*/
  VBULKS02.ZZZSTM = OS0RW01.OS0RWTM4; /* setup time*/

  VBULKS02.ZZZCHGDT = OS0RW01.OS0RWDT8; /* change date*/
  VBULKS02.ZZZCHGTM = OS0RW01.OS0RWTM4; /* change time*/
  VBULKS02.ZZZCHGCT = 0; /* change count*/

  call "VBULKS02" ("A ", SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* NEXT SENTENCE*/
  else
    set TA1REC empty;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1DBASE = "DORDB ";
    TA1REC.TA1TBLVU = "VBULKS02";
    OS0RW01.OS0RWKEY1 = OP1REC.OP1CUOID;
    OS0RW01.OS0RWKEY2 = OP1REC.OP1NORID;
    TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;
    TA1REC.TA1LOCAT[1] = "A/IO725";
    TA1REC.TA1LOCAT[2] = "0/OS0RS";
    TA1REC.TA1LOCAT[3] = "-INS-VB";
    TA1REC.TA1LOCAT[4] = "ULKS01 ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    COMMAREA.CAUSERA = " ";
    XSPF4();
    exit program;
  end

end // end OS0RS-INS-VBULKS01

// Open item cursor-IO0440
Function OS0RS-OPN-VITEM001()


  set SQLCA empty;

  call "IO0440" ("SS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

   /* Abend if an error has occurred.*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* Next sentence - no errors, so do nothing.*/

  else
     /* Error has occurred.  Set up TA1REC fields.*/

    TA1REC.TA1PGMNM = "OS0R    ";
    TA1REC.TA1MAP = "OS0RM001";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VITEM001";
     /* Format the key of the cursor.*/
    OS0RW01.OS0RWKEY1 = OP2REC.OP1CUOID;
    OS0RW01.OS0RWKEY2 = OP2REC.OP1NORID;
    TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;

    TA1REC.TA1LOCAT[1] = "OS0RS-OP";
    TA1REC.TA1LOCAT[2] = "N-VITEM0";
    TA1REC.TA1LOCAT[3] = "01 IO044";
    TA1REC.TA1LOCAT[4] = "0 SS    ";

    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

    COMMAREA.CAUSERA = " ";

    XSPF4();
    exit program;
  end
end // end OS0RS-OPN-VITEM001

// Transfer Control for OS0K
Function OS0RS-PROC-OPTION1()


       /* update the order header record*/

  OP1REC.OP1CUOID = OS0RM001.OP1CUOID; /* Cust Ord ID*/
  OP1REC.OP1NORID = OS0RM001.OP1NORID; /* Nike Ord ID*/
  OS0RW01.OS0RW-OP1CUOID = OS0RM001.OP1CUOID; /* Redfine Cust Ord ID*/
  OP1REC.OP1PARTN = OS0RW01.OS0RW-PART-CHAR;

  OP1REC.XBDCD = "1"; /* update bulk draw code*/
  OP1REC.OP1BLKID = 0; /* update bulk order id*/
  OP1REC.ZZZCHGDT = OS0RW01.OS0RWDT8; /* update change date*/
  OP1REC.ZZZCHGTM = OS0RW01.OS0RWTM4; /* update change time*/

  OS0RS-UPD-VORHDR01(); /* update dorder.vorhdr01*/


       /* update the order item record*/

  OP2REC.OP1CUOID = OS0RM001.OP1CUOID; /* Cust Ord ID*/
  OP2REC.OP1NORID = OS0RM001.OP1NORID; /* Nike Ord ID*/
  OS0RW01.OS0RW-OP1CUOID = OS0RM001.OP1CUOID; /* Redfine Cust Ord ID*/
  OP2REC.OP1PARTN = OS0RW01.OS0RW-PART-CHAR;

  OS0RW01.OS0RW-EOF-ITEMS = "N";

  OS0RS-OPN-VITEM001(); /* declare items for header*/
  OS0RS-FET-VITEM001(); /* fetch first item*/

  while (OS0RW01.OS0RW-EOF-ITEMS == "N")
    OP2REC.OPRBNOID = 0; /* update bulk nike order id*/
    OP2REC.ZZZCHGDT = OS0RW01.OS0RWDT8; /* update change date*/
    OP2REC.ZZZCHGTM = OS0RW01.OS0RWTM4; /* update change time*/
    OS0RS-UPD-VITEM001(); /* update dorder.vitem001*/
    OS0RS-FET-VITEM001(); /* fetch first item*/
  end

  OS0RS-CLS-VITEM001(); /* close item cursor*/


       /* insert new bulk order into dordb.vbulks01 table*/

  OS0RS-INS-VBULKS01();

end // end OS0RS-PROC-OPTION1

// Transfer Control for OS0K
Function OS0RS-PROC-OPTIONS()


  if (converseVar.eventKey is pf3)
    COMMAREA.CAUSERA = " ";
    COMMAREA.CATOAP = "OP0Y"; /* Order Inquiry parms*/
    XSEXIT();
  end


  if (converseVar.eventKey is pf4)
    COMMAREA.CAUSERA = " ";
    XSPF4();
  end


  if (converseVar.eventKey is enter
  ) /* next sentence - there may be errors*/
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    OS0RW01.OS0RWERR = "Y"; /* set error flag*/
  end

  if (converseVar.eventKey is enter
   && OS0RW01.OS0RWERR == "N")
    if (OS0RM001.OS0RM-MAP-OPT == 1)
      OS0RS-PROC-OPTION1();
    end
  end


  if (OS0RW01.OS0RWERR == "N")
    converseLib.validationFailed(418); /* database update successful*/
  end


end // end OS0RS-PROC-OPTIONS

// Reset Field Attributes
Function OS0RS-RESET-ATTRIB()

     /* Set map field attributes*/

  set OS0RM001.OP1CUOID cursor, initialAttributes;
  set OS0RM001.OP1NORID initialAttributes;
  set OS0RM001.SY1STNBR initialAttributes;
  set OS0RM001.SY2CLRID initialAttributes;
  set OS0RM001.XDMCD initialAttributes;

  set OS0RM001.OS0RM-MAP-OPT initialAttributes;


end // end OS0RS-RESET-ATTRIB

// UPDATE VBASGN01 RECORD
Function OS0RS-UPD-VITEM001()


  set SQLCA empty;

  call "IO0440" ("U2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OS0RW01.OS0RWERR = "Y"; /* set error flag*/
      converseLib.validationFailed(330); /* reenter changes again*/
      set OS0RM001.OP1CUOID cursor, bold; /* position cursor*/
      set OS0RM001.OP1NORID bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        OS0RW01.OS0RWERR = "Y"; /* set error flag*/
        converseLib.validationFailed(010); /* database busy*/
        set OS0RM001.OP1CUOID cursor, bold; /* position cursor*/
        set OS0RM001.OP1NORID bold;
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0R";
        TA1REC.TA1LOCAT[1] = "OS0RS-UP";
        TA1REC.TA1LOCAT[2] = "D-VITEM0";
        TA1REC.TA1LOCAT[3] = "01 U    ";
        TA1REC.TA1LOCAT[4] = "IO0440  ";
        TA1REC.TA1DBASE = "DORDER  ";
        TA1REC.TA1TBLVU = "VITEM001";
        OS0RW01.OS0RWKEY1 = OP1REC.OP1CUOID;
        OS0RW01.OS0RWKEY2 = OP1REC.OP1NORID;
        TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;

        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

        COMMAREA.CAUSERA = " ";

        XSPF4();
        exit program;
      end
    end
  end


end // end OS0RS-UPD-VITEM001

// UPDATE VBASGN01 RECORD
Function OS0RS-UPD-VORHDR01()


  set SQLCA empty;

  call "IO0430" ("U ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OS0RW01.OS0RWERR = "Y"; /* set error flag*/
      converseLib.validationFailed(330); /* reenter changes again*/
      set OS0RM001.OP1CUOID cursor, bold; /* position cursor*/
      set OS0RM001.OP1NORID bold;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        OS0RW01.OS0RWERR = "Y"; /* set error flag*/
        converseLib.validationFailed(010); /* database busy*/
        set OS0RM001.OP1CUOID cursor, bold; /* position cursor*/
        set OS0RM001.OP1NORID bold;
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0R";
        TA1REC.TA1LOCAT[1] = "OS0RS-UP";
        TA1REC.TA1LOCAT[2] = "D-VORHDR";
        TA1REC.TA1LOCAT[3] = "01 U    ";
        TA1REC.TA1LOCAT[4] = "IO0430  ";
        TA1REC.TA1DBASE = "DORDER  ";
        TA1REC.TA1TBLVU = "VORHDR01";
        OS0RW01.OS0RWKEY1 = OP1REC.OP1CUOID;
        OS0RW01.OS0RWKEY2 = OP1REC.OP1NORID;
        TA1REC.TA1TBLKE = OS0RW01.OS0RWKEY;

        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

        COMMAREA.CAUSERA = " ";

        XSPF4();
        exit program;
      end
    end
  end


end // end OS0RS-UPD-VORHDR01

//*** RECORD=OS0RW01 ****
//     Working Storage Record for OS0L.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   05/02/94    schase     initial creation
// ***********************
Record OS0RW01 type basicRecord
  10 OS0RWERR OS0RWERR ; 
  10 OS0RWKEY OS0RWKEY ; 
    15 OS0RWKEY1 OS0RWKEY1 ; 
    15 OS0RWKEY2 OS0RWKEY2 ; 
    15 OS0RWKEY3 OS0RWKEY3 ; 
    15 OS0RWKEY4 OS0RWKEY4 ; 
  10 OS0RW-EOF-ITEMS OS0RW-EOF-ITEMS ; 
  10 OS0RW-OP1CUOID OS0RW-OP1CUOID ; 
    15 OS0RW-FILLER1 OS0RW-FILLER1 ; 
    15 OS0RW-PART-CHAR OS0RW-PART-CHAR ; 
  10 OS0RWCDT OS0RWCDT ; 
    15 OS0RWCMM OS0RWCMM ; 
    15 OS0RWCDD OS0RWCDD ; 
    15 OS0RWCYY OS0RWCYY ; 
  10 OS0RWCTM OS0RWCTM ; 
    15 OS0RWCHH1 OS0RWCHH1 ; 
    15 OS0RW-FILLER2 OS0RW-FILLER2 ; 
    15 OS0RWCMM1 OS0RWCMM1 ; 
    15 OS0RW-FILLER3 OS0RW-FILLER3 ; 
    15 OS0RWCSS1 OS0RWCSS1 ; 
  10 OS0RWDT8 OS0RWDT8 ; 
    15 OS0RWDT8C OS0RWDT8C ; 
    15 OS0RWDT8Y OS0RWDT8Y ; 
    15 OS0RWDT8M OS0RWDT8M ; 
    15 OS0RWDT8D OS0RWDT8D ; 
  10 OS0RWTM4 OS0RWTM4 ; 
    15 OS0RWTM4H OS0RWTM4H ; 
    15 OS0RWTM4M OS0RWTM4M ; 
end // end OS0RW01

// EOF on DORDER.VITEM001
DataItem OS0RW-EOF-ITEMS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler for 1st 8 bytes
DataItem OS0RW-FILLER1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// filler ':'
DataItem OS0RW-FILLER2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler ':'
DataItem OS0RW-FILLER3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map Cust Ord ID
DataItem OS0RW-OP1CUOID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Part Char Number
DataItem OS0RW-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current dd
DataItem OS0RWCDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date mm-dd-yy
DataItem OS0RWCDT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current hh
DataItem OS0RWCHH1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem OS0RWCMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem OS0RWCMM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current ss
DataItem OS0RWCSS1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current time hh:mm:ss
DataItem OS0RWCTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current yy
DataItem OS0RWCYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date ccyymmdd
DataItem OS0RWDT8 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current cc
DataItem OS0RWDT8C num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current dd
DataItem OS0RWDT8D num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem OS0RWDT8M num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current yy
DataItem OS0RWDT8Y num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage error flag
DataItem OS0RWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working storage error diag key
DataItem OS0RWKEY char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-cust-ord-id
DataItem OS0RWKEY1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-nike-ord-id
DataItem OS0RWKEY2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cu-co-id
DataItem OS0RWKEY3 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xnx-dept-id-xref
DataItem OS0RWKEY4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current time hhmm
DataItem OS0RWTM4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current hh
DataItem OS0RWTM4H num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current mm
DataItem OS0RWTM4M num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

