package os0i;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import op.common.*;
import sy.common.SY4REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VMSRCD01;
import vv.common.VMSRCD01-GROUP;
import xx.common.*;
import xx02.*;
import xx02.XGCTBL;
import xx02.XGPTBL;
//*** PROGRAM=OS0I ****
// this transaction is for maintaining musical size run
// information.
// 
// ************************************************************
//              Maintenace History
// -----------------------------------------------------------
//   Date      Who     Reason
// -----------------------------------------------------------
// 01/31/94   dmeier   install
// 04/06/94   schase   Changed os0im001 and os0i020 to inter-
//                     face with OP0Y Appl.
// *********************
Program OS0I type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OS0IW01 OS0IW01; // record
  OS0IW02 OS0IW02; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VMSRCD01 VMSRCD01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGCTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use OS0IM.OS0IM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0I001: OS0I001();


    goto OS0I005;


    OS0I005: OS0I005();


    goto OS0I005;


  end // end main
end // end OS0I

// MAINT MSR INITIALIZE
Function OS0I001()


  XSENTRY(); /* check security*/
  XSSEGTR(); /* get seg tranid*/

  set OS0IW01 empty; /* initialize ws records*/

  if (COMMAREA.CAITEM == " ") /* no msr code from prev appl*/
    set VMSRCD01 empty;
    set SY4REC empty;
  else
    OS0IM001.OP-MSC-SZ-RUN-CD = COMMAREA.CAITEM;
    COMMAREA.CAITEM = " ";

    OS0IS-NEW-MSR-DATA(); /* get data for new msr code*/
  end

  OS0IW01.OS0IW-NEW-MSR-FL = "Y";


end // end OS0I001

// MAINT MSR MAINLINE
Function OS0I005()


  OS0I010(); /* converse os0im os0im005*/

  if (OS0IM001.CATOAP != " "      /* xfer to requested appl*/
   || converseVar.eventKey is pf3 /* xfer to op menu*/
   || converseVar.eventKey is pf4 /* xfer to main*/
   || converseVar.eventKey is pf5) /* xfer to browse msr codes*/
    OS0I020(); /* perform exit routine*/
  else
    if (converseVar.eventKey is pf6) /* delete msr data*/
      OS0I030(); /* perform delete routine*/
    else
      OS0IW01.OS0IW-MAP-ERR-FL = "N";
      OS0IW01.OS0IW-PREV-PFKEY = " ";

      if (converseVar.eventKey is pf12 /* edit - no update*/
       || converseVar.eventKey is pf19 /* refresh screen*/
       || converseVar.eventKey is enter) /* standard flow*/
        OS0I040(); /* perform check msr code routine*/
        OS0I050(); /* perform edit map routine*/
        OS0I060(); /* perform db2 update routine*/
      else
        converseLib.validationFailed(2); /* invalid pf key*/
      end
    end
  end


end // end OS0I005

// CONVERSE MAIN MAINT SCREEN
Function OS0I010()


  if (OS0IW01.OS0IW-MAP-ERR-FL == "Y")
   /* continue*/
  else
    if (OS0IW01.OS0IW-NEW-MSR-FL == "Y"
     || OS0IW01.OS0IW-NEW-SZ-FL == "Y")

      if (OS0IW01.OS0IW-NEW-MSR-FL == "Y")
        OS0IW01.OS0IW-ERR-MSG-NBR = converseVar.validationMsgNum;

        OS0IS-MAP-MSR-DATA(); /* move VMSRCD01 to OS0IM001*/

        if (OS0IW01.OS0IW-ERR-MSG-NBR == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(OS0IW01.OS0IW-ERR-MSG-NBR);
        end
      end

      OS0IS-MAP-SZ-DATA(); /* move SY4REC to OS0IM001*/
      OS0IS-SET-SZ-ATTR(); /* move attributes for size array*/

      OS0IW01.OS0IW-NEW-SZ-FL = "N";
      OS0IW01.OS0IW-NEW-MSR-FL = "N";
      OS0IW01.OS0IW-SCRN-CNT = 0;
    end
  end


  converse OS0IM001 ;


  OS0IW01.OS0IW-SCRN-CNT = OS0IW01.OS0IW-SCRN-CNT + 1;

  OS0IS-RESET-ATTR(); /* reset map attributes*/


end // end OS0I010

// early exit
Function OS0I020()


  OS0IW01.OS0IW-PREV-PFKEY = " ";

  if (OS0IM001.CATOAP != " " /* something in to appl*/
   && converseVar.eventKey is enter) /* user pressed enter key*/
    COMMAREA.CATOAP = OS0IM001.CATOAP;
    COMMAREA.CAITEM = OS0IM001.CAITEM;

    XSEXIT();

    OS0IM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAMSG = " ";
    COMMAREA.CATOAP = " ";
    COMMAREA.CAITEM = " ";
  else
    if (OS0IM001.CATOAP != " ") /* something in to appl*/
      set OS0IM001.CATOAP cursor, bold;
      converseLib.validationFailed(2);
    else
      if (converseVar.eventKey is pf3) /* xfer to op menu*/
        COMMAREA.CATOAP = "OP0Y";
      else
        if (converseVar.eventKey is pf4) /* xfer to main menu*/
          COMMAREA.CATOAP = "MN0M";
        else /* xfer to browse msr*/
          COMMAREA.CATOAP = "OS0J";
        end
      end

      XSEXIT(); /* xfer to requested  appl*/

      exit program; /* dxfer error - close down appl*/
    end
  end


end // end OS0I020

// delete msr data
Function OS0I030()


  if (OS0IM001.OP-MSC-SZ-RUN-CD != VMSRCD01.OP-MSC-SZ-RUN-CD)
    OS0IW01.OS0IW-PREV-PFKEY = " ";
    converseLib.validationFailed(828);
  else
    if (OS0IW01.OS0IW-PREV-PFKEY != "PF6")
      OS0IW01.OS0IW-PREV-PFKEY = "PF6";
      converseLib.validationFailed(829);
    else
      if (OS0IW01.OS0IW-MAINT-CD == "C")
        OS0IS-DELETE-DATA();
      else
        set VMSRCD01 empty;
        set SY4REC empty;

        OS0IW01.OS0IW-NEW-MSR-FL = "Y";
        OS0IW01.OS0IW-PREV-PFKEY = " ";
        OS0IW01.OS0IW-MAINT-CD = " ";
      end
    end
  end


end // end OS0I030

// check for new msr code
Function OS0I040()


  if (converseVar.eventKey is pf19
   && OS0IM001.OP-MSC-SZ-RUN-CD == VMSRCD01.OP-MSC-SZ-RUN-CD
   && OS0IW01.OS0IW-MAINT-CD == "A")
     /* user requested screen refresh*/
     /* no VMSRCD01 rec for curr msr code*/

     /* reinitialize VMSRCD01 and SY4REC records*/
     /* set flag to discontinue map edits and data updates*/
     /* set flag to refresh screen for add*/

    set VMSRCD01 empty;
    set SY4REC empty;

    OS0IW01.OS0IW-NEW-MSR-FL = "Y";
    converseLib.validationFailed(825);
  else
    if (OS0IM001.OP-MSC-SZ-RUN-CD != VMSRCD01.OP-MSC-SZ-RUN-CD
     || converseVar.eventKey is pf19)
       /* user entered a new msr code or*/
       /* requested a refresh from VMSRCD01 record*/

      OS0IS-NEW-MSR-DATA(); /* get db2 data for msr code*/

      if (OS0IW01.OS0IW-MAP-ERR-FL == "N")
        if (converseVar.eventKey is pf19) /* user requested screen refresh*/
          converseLib.validationFailed(825);
        end
      end
    end
  end


end // end OS0I040

// edit maint screen
Function OS0I050()


  if (OS0IW01.OS0IW-MAP-ERR-FL == "N"
   && OS0IW01.OS0IW-NEW-MSR-FL == "N")
    OS0IS-EDIT-SZ-SCL(); /* edit size scale*/
    OS0IS-EDIT-GENDER(); /* edit gender code*/
    OS0IS-EDIT-GPC(); /* edit gpc code*/
    OS0IS-EDIT-STATUS(); /* edit status code*/
    OS0IS-EDIT-DESC(); /* edit msr description*/
    OS0IS-EDIT-MSR-CD(); /* edit msr code*/

    if (OS0IW01.OS0IW-MAP-ERR-FL == "N"
     && OS0IW01.OS0IW-NEW-MSR-FL == "N"
     && OS0IW01.OS0IW-NEW-SZ-FL == "N")
      OS0IS-EDIT-QTYS(); /* edit sz ratios*/

      if (OS0IW01.OS0IW-MAP-ERR-FL == "N"
       && converseVar.eventKey is pf12)
        OS0IW01.OS0IW-MAP-ERR-FL = "Y";
        converseLib.validationFailed(518);
      end
    end
  end


end // end OS0I050

// update msr data
Function OS0I060()


  if (OS0IW01.OS0IW-MAP-ERR-FL == "N"
   && OS0IW01.OS0IW-NEW-MSR-FL == "N"
   && OS0IW01.OS0IW-NEW-SZ-FL == "N")
    OS0IW01.OS0IW-UPDT-FL = "N";

    OS0IS-COMPARE-DATA(); /* check for data changes*/

    if (OS0IW01.OS0IW-UPDT-FL == "Y") /* update flag = 'y'*/
      OS0IS-UPDATE-DATA();
    else /* update flag = 'n'*/
      if (OS0IW01.OS0IW-SCRN-CNT > 1)
        set VMSRCD01 empty;
        set SY4REC empty;

        OS0IW01.OS0IW-NEW-MSR-FL = "Y";
        OS0IW01.OS0IW-MAINT-CD = " ";
      else
        converseLib.validationFailed(9);
      end
    end
  end


end // end OS0I060

// compare data for changes
Function OS0IS-COMPARE-DATA()


  if (OS0IM001.OP-MSC-SZ-RUN-CD != VMSRCD01.OP-MSC-SZ-RUN-CD
   || OS0IM001.OP-MSC-SZ-RUN-DESC != VMSRCD01.OP-MSC-SZ-RUN-DESC
   || OS0IM001.OP-MSC-CRTN-RTO != VMSRCD01.OP-MSC-CRTN-RTO
   || OS0IM001.SY4SZSCL != VMSRCD01.SY4SZSCL
   || OS0IM001.XXXSTAT != VMSRCD01.XXXSTAT
   || OS0IM001.XGPCD != VMSRCD01.XGPCD
   || OS0IM001.XGCCD != VMSRCD01.XGCCD)
    OS0IW01.OS0IW-UPDT-FL = "Y";
  else
    OS0IW01.OS0IW-SZ-SUB = 1;
    while (OS0IW01.OS0IW-SZ-SUB <= 40
     && OS0IW01.OS0IW-UPDT-FL == "N")
      if (OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB]
       != VMSRCD01.OP-MSC-SZ-RTO[OS0IW-SZ-SUB])
        OS0IW01.OS0IW-UPDT-FL = "Y";
      else
        OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB + 1;
      end
    end
  end


end // end OS0IS-COMPARE-DATA

// delete VMSRCD01
Function OS0IS-DELETE-DATA()


  set SQLCA empty;

  call "IO7040" ("D ", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 /* delete was successful*/
   || SQLCA.VAGen_SQLCODE == 100) /* record not found*/
    set VMSRCD01 empty;
    set SY4REC empty;

    OS0IW01.OS0IW-NEW-MSR-FL = "Y";
    OS0IW01.OS0IW-PREV-PFKEY = " ";
    converseLib.validationFailed(830);
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* database busy try again*/
      converseLib.validationFailed(10);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0I";
      TA1REC.TA1LOC = "OS0IS-DELETE-DATA IO7040";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VMSRCD01";
      TA1REC.TA1TBLKE = VMSRCD01.OP-MSC-SZ-RUN-CD;

      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

      COMMAREA.CAUSERA = " ";

      XSPF4();
      exit program;
    end
  end


end // end OS0IS-DELETE-DATA

// edit msr description
Function OS0IS-EDIT-DESC()


  if (OS0IM001.OP-MSC-SZ-RUN-DESC == " ")
    set OS0IM001.OP-MSC-SZ-RUN-DESC cursor, bold;
    converseLib.validationFailed(815);
    OS0IW01.OS0IW-MAP-ERR-FL = "Y";
  end


end // end OS0IS-EDIT-DESC

// edit gender code
Function OS0IS-EDIT-GENDER()


  if (OS0IM001.XGCCD == "  ") /* no gender code entered*/
    OS0IM001.XGCABRV = " "; /* clear gender abrev*/

    if (OS0IM001.SY4SZSCL == "01") /* size scale = '01'*/
      set OS0IM001.XGCCD cursor, bold;
      OS0IW01.OS0IW-MAP-ERR-FL = "Y";
      converseLib.validationFailed(816);
    end

  else
    sysVar.arrayIndex = 1;
    if (OS0IM001.XGCCD in XGCTBL.XGCCD)
      OS0IM001.XGCABRV = XGCTBL.XGCABRV[sysVar.arrayIndex];

      if (XGCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
                                  /* continue*/
      else
        set OS0IM001.XGCCD cursor, bold;
        OS0IW01.OS0IW-MAP-ERR-FL = "Y";
        converseLib.validationFailed(817);
      end

    else
      OS0IM001.XGCABRV = "UNKNWN";
      set OS0IM001.XGCCD cursor, bold;
      OS0IW01.OS0IW-MAP-ERR-FL = "Y";
      converseLib.validationFailed(818);
    end
  end


end // end OS0IS-EDIT-GENDER

// edit gpc
Function OS0IS-EDIT-GPC()


  if (OS0IM001.XGPCD == "  ") /* no gpc entered*/
    OS0IM001.XGPCD = "02"; /* ftwr is default*/
  end

  sysVar.arrayIndex = 1;
  if (OS0IM001.XGPCD in XGPTBL.XGPCD)
    OS0IM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];

    if (XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      if (XGPTBL.XGPCD[sysVar.arrayIndex] != "02") /* gpc not footwear*/
        set OS0IM001.XGPCD cursor, bold;
        OS0IW01.OS0IW-MAP-ERR-FL = "Y";
        converseLib.validationFailed(819); /* gpc must = '02'*/
      end

    else
      set OS0IM001.XGPCD cursor, bold;
      OS0IW01.OS0IW-MAP-ERR-FL = "Y";
      converseLib.validationFailed(820); /* gpc is inactive*/
    end

  else
    OS0IM001.XGPABRV = "UNKNWN";
    set OS0IM001.XGPCD cursor, bold;
    OS0IW01.OS0IW-MAP-ERR-FL = "Y";
    converseLib.validationFailed(138); /* gpc is invalid*/
  end


end // end OS0IS-EDIT-GPC

// edit msr code
Function OS0IS-EDIT-MSR-CD()


  if (OS0IM001.OP-MSC-SZ-RUN-CD == " ")
    set OS0IM001.OP-MSC-SZ-RUN-CD cursor, bold;
    OS0IW01.OS0IW-MAP-ERR-FL = "Y";
    converseLib.validationFailed(814);
  end


end // end OS0IS-EDIT-MSR-CD

// edit size ratios
Function OS0IS-EDIT-QTYS()


  OS0IW01.OS0IW-TTL-SZ-RTO = 0;

  OS0IW01.OS0IW-SZ-SUB = 40;
  while (OS0IW01.OS0IW-SZ-SUB >= 1)
    OS0IW01.OS0IW-TTL-SZ-RTO = OS0IW01.OS0IW-TTL-SZ-RTO     + OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB];

    if (OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] != 0)
      if (OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] == "UNKNWN"
       || OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] == " ")
        set OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] cursor, bold;
        OS0IW01.OS0IW-MAP-ERR-FL = "Y";
        converseLib.validationFailed(821); /* size invalid for msr code*/
      end
    end

    OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB - 1;
  end

  if (OS0IW01.OS0IW-TTL-SZ-RTO != OS0IM001.OP-MSC-CRTN-RTO)
    OS0IW01.OS0IW-MAP-ERR-FL = "Y";
    converseLib.validationFailed(822); /* size ratios must total crtn rto*/
  end


end // end OS0IS-EDIT-QTYS

// edit status code
Function OS0IS-EDIT-STATUS()


  if (OS0IM001.XXXSTAT == "  ") /* no gpc entered*/
    OS0IM001.XXXSTAT = "A"; /* default is active*/
  else
    if (OS0IM001.XXXSTAT == "A"
     || OS0IM001.XXXSTAT == "I")
      /* continue*/
    else
      set OS0IM001.XXXSTAT cursor, bold;
      OS0IW01.OS0IW-MAP-ERR-FL = "Y";
      converseLib.validationFailed(827); /* status must be 'a' or 'i'*/
    end
  end


end // end OS0IS-EDIT-STATUS

// edit size scale
Function OS0IS-EDIT-SZ-SCL()


  if (OS0IM001.SY4SZSCL == " ") /* no size scale entered*/
    set OS0IM001.SY4SZSCL cursor, bold;
    OS0IW01.OS0IW-MAP-ERR-FL = "Y";
    converseLib.validationFailed(823); /* size scale is required*/
  else
    if (OS0IM001.SY4SZSCL != SY4REC.SY4SZSCL)
      set SY4REC empty; /* initialize SY4REC*/

      SY4REC.SY4SZSCL = OS0IM001.SY4SZSCL;

      OS0IS-GET-SY4REC(); /* get SY4REC via IO0040*/

      if (SQLCA.VAGen_SQLCODE == 0) /* good db2 return*/
        OS0IW01.OS0IW-NEW-SZ-FL = "Y";

        OS0IS-SET-CRTN-RTO(); /* set carton ratio*/
      else
        OS0IM001.OP-MSC-CRTN-RTO = 0;
      end
    end
  end


end // end OS0IS-EDIT-SZ-SCL

// GET CURRENT DATE
Function OS0IS-GET-CURR-DTE()


  set TA2REC empty;

  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};


end // end OS0IS-GET-CURR-DTE

// get SY4REC via IO0040
Function OS0IS-GET-SY4REC()


  if (SY4REC.SY4SZSCL != " ")
    set SQLCA empty;

    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
       /* continue*/
    else
      set OS0IM001.SY4SZSCL cursor, bold;
      OS0IW01.OS0IW-MAP-ERR-FL = "Y";
      SY4REC.SY4SZSCL = " ";

      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(824); /* invalid size scale*/
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          converseLib.validationFailed(10); /* database is busy*/
        else
          TA1REC.TA1TYPE = "DB2 ";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "OS0I    ";
          TA1REC.TA1LOC = "OS0IS-GET-SY4REC  IO0040 - S";
          TA1REC.TA1DBASE = "DPROD   ";
          TA1REC.TA1TBLVU = "VSCALE01";
          TA1REC.TA1TBLKE = SY4REC.SY4SZSCL;

          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

          COMMAREA.CAUSERA = " ";

          XSPF4();
          exit program;
        end
      end
    end
  end


end // end OS0IS-GET-SY4REC

// get VMSRCD01 via IO7040
Function OS0IS-GET-VMSRCD01()


  if (VMSRCD01.OP-MSC-SZ-RUN-CD != " ")
    set SQLCA empty;

    call "IO7040" ("S ", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
      OS0IW01.OS0IW-MSR-FND-FL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == 100)
         /* continue*/
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          OS0IW01.OS0IW-DB2-ERR-FL = "Y";
        else
          TA1REC.TA1TYPE = "DB2 ";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "OS0I";
          TA1REC.TA1LOC = "OS0IS-GET-VMSRCD01  IO7040 - S";
          TA1REC.TA1DBASE = "DORDER  ";
          TA1REC.TA1TBLVU = "VMSRCD01";
          TA1REC.TA1TBLKE = VMSRCD01.OP-MSC-SZ-RUN-CD;

          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

          COMMAREA.CAUSERA = " ";

          XSPF4();
          exit program;
        end
      end
    end
  end


end // end OS0IS-GET-VMSRCD01

// move VMSRCD01 to map
Function OS0IS-MAP-MSR-DATA()


  set OS0IM001 initial;

  OS0IM001.OS0IM-MAP-RVN = "01";
  OS0IM001.OS0IM-MAP-DTE = VGVar.currentShortGregorianDate;
  OS0IM001.OP-MSC-SZ-RUN-CD = VMSRCD01.OP-MSC-SZ-RUN-CD;
  OS0IM001.OP-MSC-SZ-RUN-DESC = VMSRCD01.OP-MSC-SZ-RUN-DESC;
  OS0IM001.OP-MSC-CRTN-RTO = VMSRCD01.OP-MSC-CRTN-RTO;
  OS0IM001.SY4SZSCL = VMSRCD01.SY4SZSCL;
  OS0IM001.XXXSTAT = VMSRCD01.XXXSTAT;
  OS0IM001.XGPCD = VMSRCD01.XGPCD;
  OS0IM001.XGCCD = VMSRCD01.XGCCD;

  if (VMSRCD01.XGPCD == " ")
    OS0IM001.XGPABRV = " ";
  else
    sysVar.arrayIndex = 1;
    if (VMSRCD01.XGPCD in XGPTBL.XGPCD from sysVar.arrayIndex)
      OS0IM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    else
      OS0IM001.XGPABRV = "UNKNWN";
    end
  end

  if (VMSRCD01.XGCCD == " ")
    OS0IM001.XGCABRV = " ";
  else
    sysVar.arrayIndex = 1;
    if (VMSRCD01.XGCCD in XGCTBL.XGCCD from sysVar.arrayIndex)
      OS0IM001.XGCABRV = XGCTBL.XGCABRV[sysVar.arrayIndex];
    else
      OS0IM001.XGCABRV = "UNKNWN";
    end
  end


end // end OS0IS-MAP-MSR-DATA

// move size descriptions to map
Function OS0IS-MAP-SZ-DATA()


  OS0IW01.OS0IW-SZ-SUB = 40;
  while (OS0IW01.OS0IW-SZ-SUB >= 1)
    OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] = VMSRCD01.OP-MSC-SZ-RTO[OS0IW-SZ-SUB];
    OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] = SY4REC.SY4IDDSC[OS0IW-SZ-SUB];

    if (SY4REC.SY4IDDSC[OS0IW-SZ-SUB] == " "
     && OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] != 0)
      OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] = "UNKNWN";
    end

    OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB - 1;
  end


end // end OS0IS-MAP-SZ-DATA

// get new msr data
Function OS0IS-NEW-MSR-DATA()


  OS0IW01.OS0IW-DB2-ERR-FL = "N";
  OS0IW01.OS0IW-MSR-FND-FL = "N";

  set VMSRCD01 empty; /* initialize msc szrun rec*/

  VMSRCD01.OP-MSC-SZ-RUN-CD = OS0IM001.OP-MSC-SZ-RUN-CD;

  OS0IS-GET-VMSRCD01(); /* call IO7040 'S ' - VMSRCD01*/

  if (OS0IW01.OS0IW-DB2-ERR-FL == "Y")
    OS0IW01.OS0IW-MAP-ERR-FL = "Y";
    VMSRCD01.OP-MSC-SZ-RUN-CD = " ";
    converseLib.validationFailed(10);
  else
    if (OS0IW01.OS0IW-MSR-FND-FL != "Y"
     && OS0IW01.OS0IW-MAINT-CD != "C"
     && converseVar.eventKey not pf19)
      /* no DB2 rec for curr msr code and*/
      /* user not in maintenance mode and*/
      /* user did not request refresh*/

      /* set maint code for curr msr code to 'add'*/
      /* do not overlay user entered msr data on map*/

      OS0IW01.OS0IW-MAINT-CD = "A";
    else
      /* DB2 rec exists for curr msr code or*/
      /* user has been in maintenance mode or*/
      /* user requested screen refresh*/

      /* set flag to refresh map with data for curr msr code*/

      OS0IW01.OS0IW-NEW-MSR-FL = "Y";

      set SY4REC empty; /* initialize sz scale rec*/

      if (OS0IW01.OS0IW-MSR-FND-FL == "N")
        /* no DB2 rec for curr msr code*/
        /* set maint code for curr msr code to 'add'*/

        OS0IW01.OS0IW-MAINT-CD = "A";
      else
        /* DB2 rec exists for curr msr code*/
        /* set maint code for curr msr code to 'change'*/
        /* get size descriptions for curr msr code*/

        OS0IW01.OS0IW-MAINT-CD = "C";
        SY4REC.SY4SZSCL = VMSRCD01.SY4SZSCL;

        OS0IS-GET-SY4REC(); /* call IO0040 'S ' - SY4REC*/
      end
    end
  end


end // end OS0IS-NEW-MSR-DATA

// set OS0IM001 attributes
Function OS0IS-RESET-ATTR()


  set OS0IM001.OP-MSC-SZ-RUN-CD initialAttributes;
  set OS0IM001.OP-MSC-SZ-RUN-DESC initialAttributes;
  set OS0IM001.OP-MSC-CRTN-RTO initialAttributes;
  set OS0IM001.SY4SZSCL initialAttributes;
  set OS0IM001.XXXSTAT initialAttributes;
  set OS0IM001.XGPCD initialAttributes;
  set OS0IM001.XGCCD initialAttributes;

  OS0IW01.OS0IW-SZ-SUB = 40;
  while (OS0IW01.OS0IW-SZ-SUB >= 1)
    if (OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] == "     "
     && OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] == 0)
      set OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] skip, invisible;
    else
      set OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] cursor, normal;
    end

    OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB - 1;
  end

  set OS0IM001.CATOAP initialAttributes;
  set OS0IM001.CAITEM initialAttributes;


end // end OS0IS-RESET-ATTR

// set carton ratio
Function OS0IS-SET-CRTN-RTO()


  if (OS0IM001.SY4SZSCL == "03") /* size scale = '03' - infants*/
    OS0IM001.OP-MSC-CRTN-RTO = 24;
  else
    if (OS0IM001.SY4SZSCL == SY4REC.SY4SZSCL
     && OS0IM001.SY4SZSCL != " ")
      OS0IM001.OP-MSC-CRTN-RTO = 12;
    else
      OS0IM001.OP-MSC-CRTN-RTO = 0;
    end
  end


end // end OS0IS-SET-CRTN-RTO

// set attributes for size array
Function OS0IS-SET-SZ-ATTR()


  OS0IW01.OS0IW-SZ-SUB = 1;

  OS0IW01.OS0IW-SUB = 1;
  while (OS0IW01.OS0IW-SUB <= 4)
    set OS0IM001.OS0IM-SZ-LIT[OS0IW-SUB] skip, invisible;
    set OS0IM001.OS0IM-RTO-LIT[OS0IW-SUB] skip, invisible;

    sysVar.arrayIndex = 10;
    while (sysVar.arrayIndex > 0)
      if (OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] != 0
       || OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] != " ")
        set OS0IM001.OS0IM-SZ-LIT[OS0IW-SUB] initialAttributes;
        set OS0IM001.OS0IM-RTO-LIT[OS0IW-SUB] initialAttributes;
        OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB + sysVar.arrayIndex;
        sysVar.arrayIndex = 0;
      else
        OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB + 1;
        sysVar.arrayIndex = sysVar.arrayIndex - 1;
      end
    end

    OS0IW01.OS0IW-SUB = OS0IW01.OS0IW-SUB + 1;
  end

  OS0IW01.OS0IW-SZ-SUB = 40;
  while (OS0IW01.OS0IW-SZ-SUB >= 1)
    if (OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] == 0
     && OS0IM001.SY4IDDSC[OS0IW-SZ-SUB] == " ")
      set OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] skip, invisible;
    else
      set OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] cursor, normal;
    end

    OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB - 1;
  end


end // end OS0IS-SET-SZ-ATTR

// move data to VMSRCD01
Function OS0IS-SET-VMSRCD01()


  VMSRCD01.OP-MSC-SZ-RUN-CD = OS0IM001.OP-MSC-SZ-RUN-CD;
  VMSRCD01.OP-MSC-SZ-RUN-DESC = OS0IM001.OP-MSC-SZ-RUN-DESC;
  VMSRCD01.OP-MSC-CRTN-RTO = OS0IM001.OP-MSC-CRTN-RTO;
  VMSRCD01.SY4SZSCL = OS0IM001.SY4SZSCL;
  VMSRCD01.XXXSTAT = OS0IM001.XXXSTAT;
  VMSRCD01.XGPCD = OS0IM001.XGPCD;
  VMSRCD01.XGCCD = OS0IM001.XGCCD;

  OS0IW01.OS0IW-SZ-SUB = 1;
  while (OS0IW01.OS0IW-SZ-SUB <= 40)
    VMSRCD01.OP-MSC-SZ-RTO[OS0IW-SZ-SUB] = OS0IM001.OP-MSC-SZ-RTO[OS0IW-SZ-SUB];
    OS0IW01.OS0IW-SZ-SUB = OS0IW01.OS0IW-SZ-SUB + 1;
  end

  if (OS0IW01.OS0IW-MAINT-CD == "A")
    VMSRCD01.ZZZSDT = TA2REC.TA2GRGGN;
  end

  VMSRCD01.ZZZCHGDT = TA2REC.TA2GRGGN;
  VMSRCD01.ZZZCHGTM = TA2REC.TA2TIMHM;


end // end OS0IS-SET-VMSRCD01

// update musical size run data
Function OS0IS-UPDATE-DATA()


  OS0IW02.VMSRCD01-GROUP = VMSRCD01.VMSRCD01-GROUP;

  set SQLCA empty;

  OS0IS-GET-CURR-DTE();
  OS0IS-SET-VMSRCD01();

  if (OS0IW01.OS0IW-MAINT-CD == "A")
    call "IO7040" ("A ", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};
  else
    call "IO7040" ("U ", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == 0) /* add/update was successful*/
    set OS0IM001.OP-MSC-SZ-RUN-CD initialAttributes;
    OS0IW01.OS0IW-MAINT-CD = "C";
    converseLib.validationFailed(418);
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* database busy try again*/
      VMSRCD01.VMSRCD01-GROUP = OS0IW02.VMSRCD01-GROUP;
      converseLib.validationFailed(10);
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0I";
      TA1REC.TA1LOC = "OS0IS-UPDATE-DATA IO7040";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VMSRCD01";
      TA1REC.TA1TBLKE = VMSRCD01.OP-MSC-SZ-RUN-CD;

      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

      COMMAREA.CAUSERA = " ";

      XSPF4();
      exit program;
    end
  end


end // end OS0IS-UPDATE-DATA

Record OS0IW01 type basicRecord
  10 OS0IW-MAINT-CD OS0IW-MAINT-CD ; 
  10 OS0IW-TTL-SZ-RTO OS0IW-TTL-SZ-RTO ; 
  10 OS0IW-SZ-SUB OS0IW-SZ-SUB ; 
  10 OS0IW-SUB OS0IW-SUB ; 
  10 OS0IW-NEW-MSR-FL OS0IW-NEW-MSR-FL ; 
  10 OS0IW-NEW-SZ-FL OS0IW-NEW-SZ-FL ; 
  10 OS0IW-MAP-ERR-FL OS0IW-MAP-ERR-FL ; 
  10 OS0IW-DB2-ERR-FL OS0IW-DB2-ERR-FL ; 
  10 OS0IW-MSR-FND-FL OS0IW-MSR-FND-FL ; 
  10 OS0IW-UPDT-FL OS0IW-UPDT-FL ; 
  10 OS0IW-PREV-PFKEY OS0IW-PREV-PFKEY ; 
  10 OS0IW-ERR-MSG-NBR OS0IW-ERR-MSG-NBR ; 
  10 OS0IW-SCRN-CNT OS0IW-SCRN-CNT ; 
end // end OS0IW01

Record OS0IW02 type basicRecord
  10 VMSRCD01-GROUP VMSRCD01-GROUP ; 
end // end OS0IW02

// database error flag
DataItem OS0IW-DB2-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error message number
DataItem OS0IW-ERR-MSG-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maint code
DataItem OS0IW-MAINT-CD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map error flag
DataItem OS0IW-MAP-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msr found flag
DataItem OS0IW-MSR-FND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new msr flag
DataItem OS0IW-NEW-MSR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new sizes flag
DataItem OS0IW-NEW-SZ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// previous pf key
DataItem OS0IW-PREV-PFKEY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen display counter
DataItem OS0IW-SCRN-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript
DataItem OS0IW-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// size subscript
DataItem OS0IW-SZ-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// total size ratios
DataItem OS0IW-TTL-SZ-RTO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update flag
DataItem OS0IW-UPDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

