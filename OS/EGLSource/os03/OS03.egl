package os03;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUKREC;
import os.common.OSRREC;
import os.common.OSUREC;
import os.common.OSWWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VBASGN02;
//*** PROGRAM=OS03 ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS03S-DEC-X  = DECLARE NEW RECORD SET
//    OS03S-FET-X  = FETCH NEXT RECORD
//    OS03S-CLS-X  = CLOSE RECORD CURSOR
//    OS03S-BLD-X  = BUILD RECORD
//    OS03S-LOAD-X = LOAD RECORD
//    OS03S-GET-X  = SELECT RECORD
//    OS03S-EDT-X  = EDIT FIELD
//    OS03S-UPD-X  = UPDATE RECORD
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 12/09/97   KLEE       Created.
// *********************
Program OS03 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUKREC KUKREC; // record
  OS03W01 OS03W01; // record
  OSRREC OSRREC; // record
  OSUREC OSUREC; // record
  OSWWREC OSWWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBASGN02 VBASGN02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OS03M.OS03M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS03000: OS03000();
    goto OS03010;
    OS03010: OS03010();
    goto OS03010;
  end // end main
end // end OS03

// main execute process
Function OS03000()
     /* Check csp security*/
  ;
  XSENTRY();
  XSSEGTR(); /* set OS03 segmented trans id*/
  ;
     /* Initialize application - init records, save map name*/
  ;
  OS03S-INIT-OS03();
  ;
     /* Build map for display*/
  ;
  OS03S-BLD-MAP();
  ;
  ;
end // end OS03000

// converse/ after process
Function OS03010()
  ;
  converseLib.clearScreen();
   /* set map to scroll properly*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  ;
  converse OS03M001 ;
  ;
     /* Init error stuff*/
  ;
  OSWWREC.OSWWERFL = "N";
  converseLib.validationFailed(0);
  ;
  ;
     /* Reset field attributes*/
  ;
  OS03S-RESET-ATTRIB();
  ;
  ;
     /* Update map*/
  ;
  if (converseVar.eventKey is enter /* CONTINUE*/
   || converseVar.eventKey is pf3   /* return to os0m appl*/
   || converseVar.eventKey is pf4   /* return to om0m appl*/
   || converseVar.eventKey is pf10) /* goto os0p appl*/
    if (OSWWREC.OSWWERFL == "N") /* no errors*/
      if (OS03W01.OS03W-CHG-FLAG == "Y") /* map field changed*/
        OS03S-UPD-MAP();
      end
    end
  end
  ;
  ;
     /* Transfer to another application*/
  ;
  OS03S-TRNSFR-CNTL(); /* transfer to requested application.*/
  ;
  ;
end // end OS03010

// Build OS03 Map
Function OS03S-BLD-MAP()
  ;
     /* build map headings*/
  ;
  OS03S-FMT-HEADINGS();
  ;
    /* display existing bulk assignment id*/
  ;
  OS03S-GET-VBASGN02(); /* select from vbasgn01*/
  OS03S-LOAD-MAP(); /* load values to map*/
  ;
     /* reset field attributes*/
  ;
  OS03S-RESET-ATTRIB();
  ;
  ;
end // end OS03S-BLD-MAP

// CONVERT MMDDYY TO COMP FORMAT
Function OS03S-CONVERT-DATE()
    /* convert DB2 date to screen format*/
  ;
  ;
  ;
   /* the calling stmt group must move the DB2 date*/
   /* to OSWWREC.OSWWDT8 before entering this routine*/
  ;
  if (OSWWREC.OSWWDT8 == 0)
    OSWWREC.OSWWDT6 = 0;
    return;
  end
  ;
  ;
  OSWWREC.OSWWDT6Y = OSWWREC.OSWWDT8Y;
  OSWWREC.OSWWDT6M = OSWWREC.OSWWDT8M;
  OSWWREC.OSWWDT6D = OSWWREC.OSWWDT8D;
  ;
  ;
   /* the calling stmt group needs to move*/
   /* OSWWREC.OSWWDT6 to the comp date field.*/
  ;
end // end OS03S-CONVERT-DATE

// BUILD OS03 MAP HEADINGS
Function OS03S-FMT-HEADINGS()
  ;
  OS03M001.OS03M-MAP-DTE = OSWWREC.OSWWCDAT; /* formatted current date*/
  ;
  ;
end // end OS03S-FMT-HEADINGS

// FORMAT VBASGN01 RECORD
Function OS03S-FMT-VBASGN02()
  ;
  ;
  VBASGN02.OB-BULK-ASGN-ID = OS03M001.OB-BULK-ASGN-ID;
  OSWWREC.OB-BULK-ASGN-ID = OS03M001.OB-BULK-ASGN-ID;
  VBASGN02.OB-BULK-ASGN-DESC = OS03M001.OB-BULK-ASGN-DESC;
  ;
  VBASGN02.OB-SEL-GRPCO-ID-FL = OS03M001.OB-SEL-GRPCO-ID-FL;
  VBASGN02.CU-GRP-CO-ID1 = OS03M001.CU-GRP-CO-ID1;
  VBASGN02.CU-GRP-CO-ID2 = OS03M001.CU-GRP-CO-ID2;
  VBASGN02.CU-GRP-CO-ID3 = OS03M001.CU-GRP-CO-ID3;
  VBASGN02.CU-GRP-CO-ID4 = OS03M001.CU-GRP-CO-ID4;
  VBASGN02.CU-GRP-CO-ID5 = OS03M001.CU-GRP-CO-ID5;
  ;
  VBASGN02.OB-SEL-PNTCO-ID-FL = OS03M001.OB-SEL-PNTCO-ID-FL;
  VBASGN02.CU-PNT-CO-ID1 = OS03M001.CU-PNT-CO-ID1;
  VBASGN02.CU-PNT-CO-ID2 = OS03M001.CU-PNT-CO-ID2;
  VBASGN02.CU-PNT-CO-ID3 = OS03M001.CU-PNT-CO-ID3;
  VBASGN02.CU-PNT-CO-ID4 = OS03M001.CU-PNT-CO-ID4;
  VBASGN02.CU-PNT-CO-ID5 = OS03M001.CU-PNT-CO-ID5;
  ;
  VBASGN02.OB-SEL-CO-ID-FL = OS03M001.OB-SEL-CO-ID-FL;
  VBASGN02.CU-CO-ID1 = OS03M001.CU-CO-ID1;
  VBASGN02.CU-CO-ID2 = OS03M001.CU-CO-ID2;
  VBASGN02.CU-CO-ID3 = OS03M001.CU-CO-ID3;
  VBASGN02.CU-CO-ID4 = OS03M001.CU-CO-ID4;
  VBASGN02.CU-CO-ID5 = OS03M001.CU-CO-ID5;
  ;
  VBASGN02.OB-SEL-STOR-ID-FL = OS03M001.OB-SEL-STOR-ID-FL;
  VBASGN02.OB-SEL-XNX-ID-FL = OS03M001.OB-SEL-XNX-ID-FL;
  VBASGN02.XNX-DEPT-ID-XREF1 = OS03M001.XNX-DEPT-ID-XREF1;
  VBASGN02.XNX-DEPT-ID-XREF2 = OS03M001.XNX-DEPT-ID-XREF2;
  VBASGN02.XNX-DEPT-ID-XREF3 = OS03M001.XNX-DEPT-ID-XREF3;
  VBASGN02.XNX-DEPT-ID-XREF4 = OS03M001.XNX-DEPT-ID-XREF4;
  VBASGN02.XNX-DEPT-ID-XREF5 = OS03M001.XNX-DEPT-ID-XREF5;
  ;
  VBASGN02.OB-SEL-DEPT-ID-FL = OS03M001.OB-SEL-DEPT-ID-FL;
  VBASGN02.OB-SEL-XGP-CD-FL = "S";
  VBASGN02.OB-SEL-SREP-ID-FL = OS03M001.OB-SEL-SREP-ID-FL;
  VBASGN02.OB-SEL-CUST-PO-FL = OS03M001.OB-SEL-CUST-PO-FL;
  VBASGN02.OB-SEL-SPGM-ID-FL = OS03M001.OB-SEL-SPGM-ID-FL;
  VBASGN02.OB-SEL-NEED-DT-FL = OS03M001.OB-SEL-NEED-DT-FL;
  ;
  OSWWREC.OSWWDT6 = OS03M001.OB-NEED-BULK-BDT;
  OS03S-MMDDYY-COMP();
  VBASGN02.OB-NEED-BULK-BDT = OSWWREC.OSWWDT8;
  ;
  OSWWREC.OP1CUNDT = OS03M001.OB-NEED-BULK-BDT; /* from dt*/
  OSWWREC.OB-NEED-BULK-BDT = OS03M001.OB-NEED-BULK-BDT; /* from dt*/
  OSWWREC.OB-NEED-BULK-XDT = OS03M001.OB-NEED-BULK-XDT; /* to dt*/
  OSWWREC.OP1CUPO = OS03M001.OB-CUST-PO-NBR; /* po number*/
  OSWWREC.XNXCD = OS03M001.XNX-DEPT-ID-XREF1; /* department number*/
  OSWWREC.KUMSTRID = OS03M001.OB-STOR-ID; /* store id*/
  OSWWREC.XGPCD = OS03M001.OB-GPC-CODE; /* gpc code*/
  ;
  OSWWREC.OSWWDT6 = OS03M001.OB-NEED-BULK-XDT;
  OS03S-MMDDYY-COMP();
  VBASGN02.OB-NEED-BULK-XDT = OSWWREC.OSWWDT8;
  ;
    /* default to the oldest bulk first flag if no flag is set*/
  ;
  if (VBASGN02.OB-ASGN-OLDEST-FL == " "
   && VBASGN02.OB-ASGN-MO-FWD-FL == " "
   && VBASGN02.OB-ASGN-MO-BWD-FL == " "
   && VBASGN02.OB-ASGN-MO-ONLY-FL == " ")
    VBASGN02.OB-ASGN-OLDEST-FL = "Y";
  end
  ;
end // end OS03S-FMT-VBASGN02

// GET CURRENT DATE
Function OS03S-GET-CURR-DTE()
  ;
  set TA2REC empty;
  ;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
end // end OS03S-GET-CURR-DTE

// GET VBASGN01 VIA IO7200
Function OS03S-GET-VBASGN02()
  ;
  ;
  set SQLCA empty;
  set VBASGN02 empty;
  ;
  VBASGN02.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  OS03W01.OS03W-VBASGN02-POST = OSWWREC.OB-BULK-ASGN-ID;
  ;
  call "VBASGN02" ("S ", SQLCA, VBASGN02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      OSWWREC.OSWWERFL = "Y";
      converseLib.validationFailed(010); /* database busy*/
    else
      if (OSWWREC.OSWWFRMAP == "OS01") /* came from os0l appl*/
        OS03S-PRG-TMP-STOR(); /* purge os0l temp storage*/
      end
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS03    ";
      TA1REC.TA1LOCAT[1] = "OS03S-GE";
      TA1REC.TA1LOCAT[2] = "T-VBASGN";
      TA1REC.TA1LOCAT[3] = "02 VBASG";
      TA1REC.TA1LOCAT[4] = "N02 S   ";
      TA1REC.TA1DBASE = "DORDB   ";
      TA1REC.TA1TBLVU = "VBASGN02";
      TA1REC.TA1TBLKE = OS03W01.OS03W-VBASGN02-POST;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS03S-GET-VBASGN02

// INITIALIZE OS03 APPLICATION
Function OS03S-INIT-OS03()
  ;
  set VBASGN02 empty; /* bulk assignment record*/
  set SQLCA empty; /* return code from DB2*/
  set ERRSQLCA empty; /* return code from non-db2*/
  set TAEREC empty; /* diags for non db2*/
  set TA1REC empty; /* diagnostic record*/
  set OS03W01 empty; /* working storage*/
  ;
  OSWWREC.OSWWGRP = COMMAREA.CAUSERA; /* init common working storage*/
  ;
    /* verify that they came from os0k application*/
  ;
  if (OSWWREC.OSWWINIT != "OS0K") /* did not come from os0k*/
    transfer to program "OS0K" passing COMMAREA;
    exit program;
  end
  ;
  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate;
  ;
  TA1REC.TA1MAP = "OS03M001"; /* map name for diags*/
  ;
  if (OSWWREC.OSWWFRMAP == "OS0L") /* processing os0l loop*/
     /* next sentence*/
  else
    OSWWREC.OSWWFRMAP = "OS03"; /* format from appl as os0n*/
  end
  ;
  ;
end // end OS03S-INIT-OS03

// LOAD MAP FROM VBASGN01
Function OS03S-LOAD-MAP()
  ;
  ;
  OS03M001.OB-BULK-ASGN-ID = VBASGN02.OB-BULK-ASGN-ID;
  OS03M001.OB-BULK-ASGN-DESC = VBASGN02.OB-BULK-ASGN-DESC;
  ;
  OS03M001.OB-SEL-GRPCO-ID-FL = VBASGN02.OB-SEL-GRPCO-ID-FL;
  OS03M001.CU-GRP-CO-ID1 = VBASGN02.CU-GRP-CO-ID1;
  OS03M001.CU-GRP-CO-ID2 = VBASGN02.CU-GRP-CO-ID2;
  OS03M001.CU-GRP-CO-ID3 = VBASGN02.CU-GRP-CO-ID3;
  OS03M001.CU-GRP-CO-ID4 = VBASGN02.CU-GRP-CO-ID4;
  OS03M001.CU-GRP-CO-ID5 = VBASGN02.CU-GRP-CO-ID5;
  ;
  OS03M001.OB-SEL-PNTCO-ID-FL = VBASGN02.OB-SEL-PNTCO-ID-FL;
  OS03M001.CU-PNT-CO-ID1 = VBASGN02.CU-PNT-CO-ID1;
  OS03M001.CU-PNT-CO-ID2 = VBASGN02.CU-PNT-CO-ID2;
  OS03M001.CU-PNT-CO-ID3 = VBASGN02.CU-PNT-CO-ID3;
  OS03M001.CU-PNT-CO-ID4 = VBASGN02.CU-PNT-CO-ID4;
  OS03M001.CU-PNT-CO-ID5 = VBASGN02.CU-PNT-CO-ID5;
  ;
  OS03M001.OB-SEL-CO-ID-FL = VBASGN02.OB-SEL-CO-ID-FL;
  OS03M001.CU-CO-ID1 = VBASGN02.CU-CO-ID1;
  OS03M001.CU-CO-ID2 = VBASGN02.CU-CO-ID2;
  OS03M001.CU-CO-ID3 = VBASGN02.CU-CO-ID3;
  OS03M001.CU-CO-ID4 = VBASGN02.CU-CO-ID4;
  OS03M001.CU-CO-ID5 = VBASGN02.CU-CO-ID5;
  ;
  OS03M001.OB-GPC-CODE = VBASGN02.XGPCD;
  ;
  OS03M001.OB-SEL-STOR-ID-FL = VBASGN02.OB-SEL-STOR-ID-FL;
  OS03M001.OB-SEL-XNX-ID-FL = VBASGN02.OB-SEL-XNX-ID-FL;
  OS03M001.XNX-DEPT-ID-XREF1 = VBASGN02.XNX-DEPT-ID-XREF1;
  OS03M001.XNX-DEPT-ID-XREF2 = VBASGN02.XNX-DEPT-ID-XREF2;
  OS03M001.XNX-DEPT-ID-XREF3 = VBASGN02.XNX-DEPT-ID-XREF3;
  OS03M001.XNX-DEPT-ID-XREF4 = VBASGN02.XNX-DEPT-ID-XREF4;
  OS03M001.XNX-DEPT-ID-XREF5 = VBASGN02.XNX-DEPT-ID-XREF5;
  ;
  OS03M001.OB-SEL-DEPT-ID-FL = VBASGN02.OB-SEL-DEPT-ID-FL;
  OS03M001.OB-SEL-CUST-PO-FL = VBASGN02.OB-SEL-CUST-PO-FL;
  OS03M001.OB-SEL-SREP-ID-FL = VBASGN02.OB-SEL-SREP-ID-FL;
  OS03M001.OB-SEL-SPGM-ID-FL = VBASGN02.OB-SEL-SPGM-ID-FL;
  OS03M001.OB-SEL-NEED-DT-FL = VBASGN02.OB-SEL-NEED-DT-FL;
  ;
    /* CONVERT THE NEED DATES TO SCREEN FORMAT*/
  ;
  OSWWREC.OSWWDT8 = VBASGN02.OB-NEED-BULK-BDT;
  OS03S-CONVERT-DATE();
  OS03M001.OB-NEED-BULK-BDT = OSWWREC.OSWWDT6;
  OSWWREC.OB-NEED-BULK-BDT = OSWWREC.OSWWDT6;
  OSWWREC.OSWWDT8 = VBASGN02.OB-NEED-BULK-XDT;
  OS03S-CONVERT-DATE();
  OS03M001.OB-NEED-BULK-XDT = OSWWREC.OSWWDT6;
  OSWWREC.OB-NEED-BULK-XDT = OSWWREC.OSWWDT6;
  ;
  if (COMMAREA.CAFROMAP == "OS05") /* returning from os0p*/
    OS03M001.OB-GPC-CODE = OSWWREC.XGPCD;
    OS03M001.OB-GPC-CODE = OSWWREC.XGPCD;
    OS03M001.OB-STOR-ID = OSWWREC.KUMSTRID;
    OS03M001.OB-CUST-PO-NBR = OSWWREC.OP1CUPO;
    OS03M001.OB-NEED-BULK-BDT = OSWWREC.OB-NEED-BULK-BDT;
    OS03M001.OB-NEED-BULK-XDT = OSWWREC.OB-NEED-BULK-XDT;
    if (OSWWREC.OSWWERFL == "Y") /* error from pgm os0p*/
      if (OSWWREC.OSWW-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OSWWREC.OSWW-MSG-NBR);
      end
      OSWWREC.OSWWERFL = " "; /* reset error flag*/
      OSWWREC.OSWW-MSG-NBR = " "; /* reset msg number*/
    end
  end
  ;
end // end OS03S-LOAD-MAP

// CONVERT MMDDYY TO COMP FORMAT
Function OS03S-MMDDYY-COMP()
    /* convert MMDDYY date to comp (DB2 date)*/
  ;
  ;
   /* the calling stmt group must move the MMDDYY date*/
   /* to OSWWREC.OSWWDT6 before entering this routine*/
  ;
  if (OSWWREC.OSWWDT6 == 0)
    OSWWREC.OSWWDT8 = 0;
    return;
  end
  ;
  ;
  OSWWREC.OSWWDT8Y = OSWWREC.OSWWDT6Y;
  OSWWREC.OSWWDT8M = OSWWREC.OSWWDT6M;
  OSWWREC.OSWWDT8D = OSWWREC.OSWWDT6D;
  ;
  if (OSWWREC.OSWWDT6Y <= 51)
    OSWWREC.OSWWDT8C = 20;
  else
    OSWWREC.OSWWDT8C = 19;
  end
  ;
   /* the calling stmt group needs to move*/
   /* OSWWREC.OSWWDT8 to the comp date field.*/
  ;
end // end OS03S-MMDDYY-COMP

// Non-DB2 Post Routine TA0020
Function OS03S-POST-NO-ROLL()
       /* Non-DB2 post routine*/
  ;
   /* the following fields will be filled in by the*/
   /* calling stmt group before entering this routine*/
     /* ta1locat(1) = transaction type  ie: 'ss' 'sn'*/
     /* ta1locat(2) = i/o mod name*/
     /* ta1locat(3) = calling stmt group name*/
     /* ta1locat(4) = programmers option(extra key data)*/
     /* taerec.taedesc1 = programmers opiton (additional key data*/
     /* taerec.taedesc2 = messages*/
     /* ta1map = appl's mapname and should be initilized*/
              /* in the programs init process.*/
   /* return code processing will also be handled by the*/
   /* calling stmt group.*/
  ;
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "POST";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end
  ;
end // end OS03S-POST-NO-ROLL

// Purge Bulk Asgnmnt Temp Storag
Function OS03S-PRG-TMP-STOR()
  ;
  ;
  ;
   /* purge temporary storage 1*/
  ;
  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    OSWWREC.OSWWTF1P = 1;
    OSWWREC.OSWWTF1S = 1;
    OSWWREC.OSWWTF1M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS03S-POST-NO-ROLL(); /* post,  no rollback, non db2*/
    ;
    ;
  end
end // end OS03S-PRG-TMP-STOR

// RESET FIELD ATTRIBUTES
Function OS03S-RESET-ATTRIB()
  ;
     /* set heading attributes*/
  ;
  set OS03M001.OB-BULK-ASGN-ID initialAttributes;
  set OS03M001.OB-BULK-ASGN-DESC initialAttributes;
  ;
  set OS03M001.OB-SEL-GRPCO-ID-FL cursor, initialAttributes;
  set OS03M001.CU-GRP-CO-ID1 initialAttributes;
  set OS03M001.CU-GRP-CO-ID2 initialAttributes;
  set OS03M001.CU-GRP-CO-ID3 initialAttributes;
  set OS03M001.CU-GRP-CO-ID4 initialAttributes;
  set OS03M001.CU-GRP-CO-ID5 initialAttributes;
  ;
  set OS03M001.OB-SEL-PNTCO-ID-FL initialAttributes;
  set OS03M001.CU-PNT-CO-ID1 initialAttributes;
  set OS03M001.CU-PNT-CO-ID2 initialAttributes;
  set OS03M001.CU-PNT-CO-ID3 initialAttributes;
  set OS03M001.CU-PNT-CO-ID4 initialAttributes;
  set OS03M001.CU-PNT-CO-ID5 initialAttributes;
  ;
  set OS03M001.OB-SEL-CO-ID-FL initialAttributes;
  set OS03M001.CU-CO-ID1 initialAttributes;
  set OS03M001.CU-CO-ID2 initialAttributes;
  set OS03M001.CU-CO-ID3 initialAttributes;
  set OS03M001.CU-CO-ID4 initialAttributes;
  set OS03M001.CU-CO-ID5 initialAttributes;
  ;
  set OS03M001.OB-GPC-CODE initialAttributes;
  set OS03M001.OB-CUST-PO-NBR initialAttributes;
  ;
  set OS03M001.OB-SEL-STOR-ID-FL initialAttributes;
  set OS03M001.OB-SEL-XNX-ID-FL initialAttributes;
  set OS03M001.XNX-DEPT-ID-XREF1 initialAttributes;
  set OS03M001.XNX-DEPT-ID-XREF2 initialAttributes;
  set OS03M001.XNX-DEPT-ID-XREF3 initialAttributes;
  set OS03M001.XNX-DEPT-ID-XREF4 initialAttributes;
  set OS03M001.XNX-DEPT-ID-XREF5 initialAttributes;
  ;
  set OS03M001.OB-SEL-DEPT-ID-FL initialAttributes;
  set OS03M001.OB-SEL-CUST-PO-FL initialAttributes;
  set OS03M001.OB-SEL-SREP-ID-FL initialAttributes;
  set OS03M001.OB-SEL-SPGM-ID-FL initialAttributes;
  set OS03M001.OB-SEL-NEED-DT-FL initialAttributes;
  set OS03M001.OB-NEED-BULK-BDT initialAttributes;
  set OS03M001.OB-NEED-BULK-XDT initialAttributes;
  ;
  ;
end // end OS03S-RESET-ATTRIB

// TRANSFER CONTROL TO OTHER APPL
Function OS03S-TRNSFR-CNTL()
  ;
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  if (converseVar.eventKey is pf3
   && OSWWREC.OSWWERFL == "N")
    COMMAREA.CATOAP = "OS02"; /* Inquiry Bulk Asgnmnt - Draw Criteria*/
    XSEXIT();
    ;
  end
  ;
  if (converseVar.eventKey is pf4
   && OSWWREC.OSWWERFL == "N")
    if (OSWWREC.OSWWFRMAP == "OS01") /* came from os01 application*/
      OS03S-PRG-TMP-STOR(); /* purge os01 temp storage*/
    end
    COMMAREA.CAUSERA = " ";
    XSPF4();
  end
  ;
    /* transfer to os0N Application*/
  ;
  if (converseVar.eventKey is pf9
   && OSWWREC.OSWWERFL == "N")
    COMMAREA.CATOAP = "OS0N";
    XSEXIT();
  end
  ;
    /* check for invalid pfkey*/
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4)
     /* next sentence - there may be errors*/
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
  end
  ;
  if (converseVar.eventKey is enter
   && OSWWREC.OSWWERFL == "N")
    COMMAREA.CATOAP = "OS04";
    XSEXIT();
  end
  ;
  ;
end // end OS03S-TRNSFR-CNTL

// UPDATE OS03 MAP
Function OS03S-UPD-MAP()
  ;
  ;
  OS03S-GET-CURR-DTE(); /* get current date/time*/
  ;
  OS03S-FMT-VBASGN02(); /* format VBASGN01 record*/
  ;
  OS03S-UPD-VBASGN02(); /* update existing bulk asgnmnt*/
  ;
  ;
end // end OS03S-UPD-MAP

Function OS03S-UPD-VBASGN02()
end // end OS03S-UPD-VBASGN02

//*** RECORD=OS03W01 ****
//     Working Storage Record for OS03.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   12/09/97    KLEE       initial creation
// ***********************
Record OS03W01 type basicRecord
  10 OS03W-CHG-FLAG OS03W-CHG-FLAG ; 
  10 OS03W-KUCREC-POST OS03W-KUCREC-POST ; 
  10 OS03W-KUKREC-POST OS03W-KUKREC-POST ; 
  10 OS03W-KUJREC-POST OS03W-KUJREC-POST ; 
  10 OS03W-VBASGN02-POST OS03W-VBASGN02-POST ; 
  10 OS03W-EZEMNO OS03W-EZEMNO ; 
end // end OS03W01

// Map Field Changed Flag
DataItem OS03W-CHG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold field for ezemno values
DataItem OS03W-EZEMNO num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Company error post key
DataItem OS03W-KUCREC-POST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Department ID post key
DataItem OS03W-KUJREC-POST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Parent company post key
DataItem OS03W-KUKREC-POST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Bulk assignment id post key
DataItem OS03W-VBASGN02-POST char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

