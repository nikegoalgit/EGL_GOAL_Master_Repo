package os06;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPOS-00000;
import corpcom3.XPXGP01;
import corpcom3.XPXWH01;
import corpcom3.XPXX001;
import corpcom4.XSEXIT;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXMSGNO;
import corpcom7.XXXPRCNM;
import corpcom7.XXXTSLEN;
import corpcom7.XXXTSPAG;
import op.common.*;
import os.common.OSWREC;
import sy.common.SY4REC;
import sy.common.SYCREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TA5TSQIX;
import ta.common.TAEREC;
import vv.common.VRPLIT02;
import xx.common.*;
import xx02.*;
import xx02.XGPTBL;
import xx04.*;
import xx05.*;
import xx06.*;
import xx06.XWHTBL;
//*** PROGRAM=OS06 ****
// The auto-replenishment on-line system will consist of two
// applications:  OS06 and OS07.  OS06 will manage and maintain
// product which has been identified as being eligible for the
// auto-replenishment program.  Input of product from this
// screen into the new item table (VRPLIT01) will be necessary
// prior to assigning product to a customer, as this table will
// be checked by OS07 to ensure that a product assigned to a
// customer is a valid auto-replenishment product.
// OS07 will manage and maintain both customer and customer
// product who/which have been identified as being eligible for
// participation in the auto-replenishment program.  Once the
// product is defined using OS06, OS07 can then be invoked to
// add customers to the customer table and add product to the
// customer/item table.
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      12/08/98  DHUFFM  New application.
// *********************
Program OS06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  OS06W00 OS06W00; // record
  OS06W01 OS06W01; // record
  OS06W02 OS06W02; // record
  OSWREC OSWREC; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VRPLIT02 VRPLIT02; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use XQATBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XOWTBL {deleteAfterUse = yes}; // table
  use OS06M.OS06M001,  // forms
      OS06M.OS06M002,
      OS06M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOS-00000: XPOS-00000();
    /* ------------------------------------------------------------*/
    /* Initialize working storage and display storage areas.*/
    /* ------------------------------------------------------------*/

    set OS06M001 initial; /* M001 input/output*/
    set OS06M002 initial; /* M002 input/output*/
    set OS06W00 empty; /* Working storage*/
    set OS06W01 empty; /* M001 display storage*/
    set OS06W02 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    OS06W00.OS06W-SWD = "1"; /* Map to be displayed switch*/
    OS06W00.OS06W-SWF = "Y"; /* Format the map switch*/
    OS06W00.OS06W-SWR = "N"; /* Request for data switch*/

    /* ------------------------------------------------------------*/
    /* If data was passed in the COMMAREA, use as the initial key.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.CAITEM > " ") /* Data was passed*/

      COMMAREA.CAITEM = " "; /* Clear passed data*/

      OS06W00.OS06W-SWR = "Y"; /* Request for data switch*/

    end

    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OS06-00000; /* Converse the main process*/


    OS06-00000: OS06-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/

    goto OS06-00000; /* Converse the main process*/


  end // end main
end // end OS06

// Main process to display a map
Function OS06-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.OS06W-SWD == "1") /* Map 1 was requested*/

    OS06-10000(); /* Display map 1*/

  else

    if (OS06W00.OS06W-SWD == "2") /* Map 2 was requested*/

      OS06-20000(); /* Display map 2*/

    else

      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/

      OS06W00.XXXPRCNM = "00000"; /* Module identification*/
      OS06W00.XXXMSGNO = 973; /* Unexpected error occurred*/

      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1TYPE = "APPL"; /* Type of error*/
      TA1REC.TA1LOC = "INVALID MAP NUMBER WAS REQUESTED";
      TA1REC.TA1MAPNO = OS06W00.OS06W-SWD; /* Map number*/
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
      TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/

      call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/

      COMMAREA.CATOAP = "OM0P"; /* TO application*/

      XSOS-S0001(); /* Exit to another application*/

      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/

      TA1REC.TA1FUNC = "ABND"; /* Termination function*/

      call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

    end

  end


end // end OS06-00000

// List the rows in the table
Function OS06-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Obtain the data to display.*/
  /* 2) Format the map output area and display the map.*/
  /* 3) Check the attention identifier used to respond.*/
  /* 4) Reset highlighted fields to normal intensity.*/
  /* 5) Verify the data that was entered.*/
  /* 6) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OS06-11000(); /* Obtain the data to display*/

  OS06-12000(); /* Format and display the map*/

  OS06-13000(); /* Check attention identifier*/

  OS06-14000(); /* Reset fields to normal intensity*/

  OS06-15000(); /* Verify the entered data*/

  OS06-16000(); /* Process valid input request*/


end // end OS06-10000

// Obtain the data to display
Function OS06-11000()
  /* ------------------------------------------------------------*/
  /* If data was not requested or an error was found, return to*/
  /* the previous process.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.OS06W-SWR != "Y"           /* Data was not requested*/
   || (converseVar.validationMsgNum != 0 /* or an error was found*/
   && converseVar.validationMsgNum != 418)) /* ;*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Establish the temporary storage queue page length.*/
  /* ------------------------------------------------------------*/

  OS06W00.XXXTSLEN = 1236; /* temp storage page length*/

  /* ------------------------------------------------------------*/
  /* If no message to display, reset the page number to display.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.XXXTSPAG == 0) /* no pages established*/
    OS06W00.XXXTSPAG = 1; /* Page number to display*/
  end

  /* ------------------------------------------------------------*/
  /* Purge any pages from temporary storage and save key fields.*/
  /* ------------------------------------------------------------*/

  OS06-11100(); /* Purge any temporary storage*/

  /* ------------------------------------------------------------*/
  /* Select and open the cursor for the set to be formatted.*/
  /* ------------------------------------------------------------*/

  OS06-11300(); /* Select set and open cursor*/

  /* ------------------------------------------------------------*/
  /* Fetch and format the data into pages until end of cursor.*/
  /* ------------------------------------------------------------*/

  OS06W00.OS06W-IXM = 1; /* Display line index*/
  OS06W00.OS06W-SWC = "N"; /* End of cursor switch*/

  while (OS06W00.OS06W-SWC == "N") /* Until end of cursor*/

    OS06-11400(); /* Fetch next row in the cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (OS06W00.OS06W-SWC == "N") /* Not end of cursor*/
      OS06-11500(); /* Save data in display storage*/
    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (OS06W00.OS06W-IXM > 12) /* Page is full*/

      OS06-11600(); /* Add page to temporary storage*/

      OS06W00.OS06W-IXM = 1; /* Display line index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Add any partially formatted last page to the queue.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.OS06W-IXM > 1) /* Page was formatted*/
    OS06-11600(); /* Add page to temporary storage*/
  end

  /* ------------------------------------------------------------*/
  /* Close the cursor for the selected set.*/
  /* ------------------------------------------------------------*/

  OS06-11700(); /* Close the selected set cursor*/

  /* ------------------------------------------------------------*/
  /* If no pages were formatted, indicate no data to display.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.TA5TSQIX == 0 /* No pages formatted*/
   && converseVar.eventKey is enter)

    OS06W00.XXXPRCNM = "11000"; /* Module identification*/
    OS06W00.XXXMSGNO = 974; /* No data was found to display*/
    set OS06M001.OS06M-WHSE-CD cursor; /* cursor*/
    OS06M001.OS06MSEL[1] = " "; /* reset select field*/
    set OS06M001.OS06MSEL[1] skip;

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate that the request for data is complete.*/
  /* ------------------------------------------------------------*/

  OS06W00.OS06W-SWR = "N"; /* Request for data switch*/


end // end OS06-11000

// Purge any temporary storage
Function OS06-11100()
  /* ------------------------------------------------------------*/
  /* Initialize the storage areas and indicators to be used.*/
  /* ------------------------------------------------------------*/

  set OS06W01 empty; /* M001 display storage*/

  OS06W00.OS06W-SWU = "N"; /* Storage update switch*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  OS06W00.TA5TSQIX = 0; /* Highest page number*/

  /* ------------------------------------------------------------*/
  /* Purge any temporary storage for this application.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (OS06W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OS06W00.XXXPRCNM = "11100"; /* Module identification*/
  converseLib.validationFailed(973); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-11100

// Select   open cursor VRPLIT01
Function OS06-11300()
  /* ------------------------------------------------------------*/
  /* Select the requested set of rows from the table.*/
  /* ------------------------------------------------------------*/

  set VRPLIT02 empty; /* Clear row storage area*/

  /* Use values entered on map to select the data*/

  VRPLIT02.XGP-GPC-CD = OS06M001.OS06M-GPC-CD;
  VRPLIT02.XWH-WHSE-CD = OS06M001.OS06M-WHSE-CD;

  if (OS06M001.OS06M-STY-NBR == " ") /* style nbr is spaces*/
    try
      call "VRPLIT02" ("S2", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
    end
  else
    VRPLIT02.SY-STY-NBR = OS06M001.OS06M-STY-NBR;
    try
      call "VRPLIT02" ("S3", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
    end
  end


  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  OS06W00.XXXPRCNM = "11300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-11300

// Fetch next row in the cursor
Function OS06-11400()
  /* ------------------------------------------------------------*/
  /* Fetch the next row to display from the table.*/
  /* ------------------------------------------------------------*/

  if (OS06M001.OS06M-STY-NBR == " ") /* style nbr is spaces*/
    try
      call "VRPLIT02" ("N2", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
    end
  else
    try
      call "VRPLIT02" ("N3", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
    end
  end

  /* ------------------------------------------------------------*/
  /* If the call was successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      OS06W00.OS06W-SWC = "Y"; /* Indicate end of cursor*/

      return; /* Return to previous process*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  OS06W00.XXXPRCNM = "11400"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "FETCH NEXT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-11400

// Save data in display storage
Function OS06-11500()
  /* ------------------------------------------------------------*/
  /* Save the data from the table row in display storage.*/
  /* ------------------------------------------------------------*/

  if (VRPLIT02.SYS-PROC-CD != "O")
    OS06W01.OS06W-GROUP[OS06W-IXM] = VRPLIT02.VRPLIT02-KEY;
    OS06W01.OS06W-DTL-STD-USER[OS06W-IXM] = VRPLIT02.ZZ-SETUP-USER-ID;
    OS06W01.OS06W-DTL-CHG-USER[OS06W-IXM] = VRPLIT02.ZZ-CHNG-USER-ID;
    OS06W01.OS06W-DTL-ZZZCHGCT[OS06W-IXM] = VRPLIT02.ZZ-CHNG-DT;
    OS06W00.OS06W-IXM = OS06W00.OS06W-IXM + 1; /* Increment line index*/
  end

end // end OS06-11500

// Add page to temporary storage
Function OS06-11600()
  /* ------------------------------------------------------------*/
  /* Add the next page to temporary storage.*/
  /* ------------------------------------------------------------*/

  OS06W01.XXXTSLEN = OS06W00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (OS06W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, initialize the storage area and indicators*/
  /* to be used.  Return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set OS06W01 empty; /* M001 display storage*/

    OS06W00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OS06W00.XXXPRCNM = "11600"; /* Module identification*/
  converseLib.validationFailed(973); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-11600

// Close selected set cursor
Function OS06-11700()
  /* ------------------------------------------------------------*/
  /* Close the selected set of table rows.*/
  /* ------------------------------------------------------------*/

  if (OS06M001.OS06M-STY-NBR == " ") /* style nbr is spaces*/
    try
      call "VRPLIT02" ("C2", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
    end
  else
    try
      call "VRPLIT02" ("C3", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
    end
  end

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  OS06W00.XXXPRCNM = "11700"; /* Module identification*/
  converseLib.validationFailed(973); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-11700

// Format and converse the map
Function OS06-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OS06W00.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.OS06W-SWR == "Y"          /* Obtain data failed*/
   || converseVar.validationMsgNum == 0 /* or no error found*/
   || converseVar.validationMsgNum == 418) /* data base update successful*/

    if (OS06W00.OS06W-SWF == "Y") /* Map must be formatted*/
  /* Save header info in working storage*/
      OS06W00.OS06W-GPC-CD = OS06M001.OS06M-GPC-CD; /* save gpc*/
      OS06W00.OS06W-WHSE-CD = OS06M001.OS06M-WHSE-CD;
      OS06W00.OS06W-STY-NBR = OS06M001.OS06M-STY-NBR; /**/
      OS06-12100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OS06M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OS06M001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OS06M001.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* Set attributes for add and change depending on authority*/
  /* ------------------------------------------------------------*/

   /* IF COMMAREA.CAADDFL = 'Y';               /* adds allowed*/
    /* SET OS06M001.OS06M-PF13 AUTOSKIP;      /* display option on map*/
   /* END;*/

   /* IF COMMAREA.CACHGFL = 'Y';               /* changes allowed*/
    /* SET OS06M001.OS06M-PF14 AUTOSKIP;      /* display option on map*/
    /* SET OS06M001.OS06M-PF19 AUTOSKIP;      /* display option on map*/
   /* END;*/

   /* IF COMMAREA.CAINQFL = 'Y';               /* changes allowed*/
    /* SET OS06M001.OS06M-PF16 AUTOSKIP;      /* display option on map*/
   /* END;*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OS06W00.XXXMSGNO != 0) /* Message to display*/

      if (OS06W00.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OS06W00.XXXMSGNO);
      end /* Message number*/
    else
      OS06M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OS06M001.XXXPRCNM = OS06W00.XXXPRCNM; /* Module identification*/

    set OS06M001 alarm; /* Indicate sound alarm*/

  end

  converse OS06M001 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OS06W00.XXXPRCNM = " "; /* Module identification*/
  OS06W00.XXXMSGNO = 0; /* Message number*/
  /* VE 0 TO EZEMNO;*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OS06W00.OS06W-SFN = " "; /* reset function switch*/
   /* reset saved page*/
  OS06W00.OS06W-SAVE-PAGE = 0;
  COMMAREA.CATOAP = OS06M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OS06M001.CAITEM; /* Application data*/
end // end OS06-12000

// Format the display data
Function OS06-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OS06M001 initial; /* M001 input/output area*/

  OS06W00.OS06W-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* If a ruling was added, get the page from temp storage that the*/
  /* ruling's on and display it.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.OS06W-SAVE-PAGE != 0) /* if page saved off*/

    OS06W00.XXXTSPAG = OS06W-SAVE-PAGE; /* use saved page*/

    OS06-12110(); /* Obtain temporary storage page*/

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set OS06M001.XXXLITPG skip; /* "PAGE" literal*/
    OS06M001.XXXTSPAG = OS06W00.XXXTSPAG; /* Current page*/
    set OS06M001.XXXLITOF skip; /* "OF" literal*/
    OS06M001.TA5TSQIX = OS06W00.TA5TSQIX; /* Highest page*/

  /* ------------------------------------------------------------*/
  /* If the page in storage is not the page to be displayed,*/
  /* obtain the desired page from temporary storage.*/
  /* ------------------------------------------------------------*/

  else
    if (OS06W00.TA5TSQIX > 0) /* Pages were formatted*/

      if (OS06W00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

        /* ------------------------------------------------------------*/
        /* If the current page has been changed, update the page in*/
        /* storage before obtaining the next one to display.*/
        /* ------------------------------------------------------------*/

        if (OS06W00.OS06W-SWU == "Y") /* Current page was changed*/

          OS06-12120(); /* Update temporary storage page*/

          OS06W00.OS06W-SWU = "N"; /* Storage update switch*/

        end

        /* ------------------------------------------------------------*/
        /* If the desired page number is greater than the highest page*/
        /* in storage, default to the highest page number.*/
        /* ------------------------------------------------------------*/

        if (OS06W00.XXXTSPAG > OS06W00.TA5TSQIX) /* Desired greater highest*/
          OS06W00.XXXTSPAG = OS06W00.TA5TSQIX; /* Default to highest*/
        end

        OS06-12110(); /* Obtain temporary storage page*/

      end

      /* ------------------------------------------------------------*/
      /* Display the page information on the screen.*/
      /* ------------------------------------------------------------*/

      set OS06M001.XXXLITPG skip; /* "PAGE" literal*/
      OS06M001.XXXTSPAG = OS06W00.XXXTSPAG; /* Current page*/
      set OS06M001.XXXLITOF skip; /* "OF" literal*/
      OS06M001.TA5TSQIX = OS06W00.TA5TSQIX; /* Highest page*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/
                /* GPC and GPC description in the header*/
  OS06M001.OS06M-GPC-CD = OS06W00.OS06W-GPC-CD;
   /* get description*/
  if (OS06W00.OS06W-GPC-CD in XGPTBL.XGPCD)
    OS06M001.OS06M-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  end

                /* whse and whse description in the header*/
  OS06M001.OS06M-WHSE-CD = OS06W00.OS06W-WHSE-CD;
   /* get description*/
  if (OS06W00.OS06W-WHSE-CD in XWHTBL.XWHCD)
    OS06M001.OS06M-WHSE-DESC = XWHTBL.XWHABRV[sysVar.arrayIndex];
  end

                /* style and style description in the header*/
  OS06M001.OS06M-STY-NBR = OS06W00.OS06W-STY-NBR;
  OS06M001.OS06M-STY-DESC = OS06W00.OS06W-STY-DESC;

  if (OS06W00.OS06W-SAV > 0) /* If save index gt zero*/
    OS06W00.OS06W-IX1 = OS06W00.OS06W-SAV;
    OS06W00.OS06W-SAV = 0;
    if (OS06W01.OS06W-DTL-STY-NBR > " ")
      set OS06M001.OS06MSEL[OS06W-IX1] cursor;
    else
      if (OS06W01.OS06W-DTL-STY-NBR[1] > " ") /* data to display*/
        set OS06M001.OS06MSEL[1] cursor, normal; /* Position cursor top*/
      end
    end
  else
    if (OS06W01.OS06W-DTL-STY-NBR[1] > " ") /* data to display*/
      set OS06M001.OS06MSEL[1] cursor, normal; /* Position cursor top*/
    end
  end

  OS06W00.OS06W-IXM = 1; /* Initialize map index*/
  while (OS06W00.OS06W-IXM <= 12) /* Until screen is full or*/
  /* AND OS06W01.OS06W-DTL-STY-NBR(OS06W-IXM) GT ' ';/* or end of data*/

  /* IF OS06W01.OS06W-DTL-STY-NBR(OS06W-IXM) GT ' ';*/
    set OS06M001.OS06MSEL[OS06W-IXM] normal; /**/
    set OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-ISEG[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-XOW-CD[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-XUM-CD[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-STD-USER[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-CHG-USER[OS06W-IXM] noHighLight, skip;
    set OS06M001.OS06M-DTL-CHG-DT[OS06W-IXM] noHighLight, skip;

  /* END;*/

    if (OS06M001.OS06MSEL[1] == "A")
      set OS06M001.OS06M-DTL-STY-NBR[1] normal;
      set OS06M001.OS06M-DTL-COLR-CD[1] normal;
      set OS06M001.OS06M-DTL-XDM-CD[1] normal;
      set OS06M001.OS06M-DTL-XQA-CD[1] normal;
      set OS06M001.OS06M-DTL-ISEG[1] normal;
      set OS06M001.OS06M-DTL-XOW-CD[1] normal;
      set OS06M001.OS06M-DTL-XUM-CD[1] normal;
      set OS06M001.OS06M-DTL-STD-USER[1] normal;
      set OS06M001.OS06M-DTL-CHG-USER[1] normal;
      set OS06M001.OS06M-DTL-CHG-DT[1] normal;
    end

    if (OS06W01.OS06W-DTL-STY-NBR[OS06W-IXM] > " ")
      OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] = OS06W01.OS06W-DTL-STY-NBR[OS06W-IXM];
      OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] = OS06W01.OS06W-DTL-COLR-CD[OS06W-IXM];
      OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] = OS06W01.OS06W-DTL-XDM-CD[OS06W-IXM];
      OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM] = OS06W01.OS06W-DTL-XQA-CD[OS06W-IXM];
      OS06M001.OS06M-DTL-ISEG[OS06W-IXM] = OS06W01.OS06W-DTL-ISEG[OS06W-IXM];
      OS06M001.OS06M-DTL-XOW-CD[OS06W-IXM] = OS06W01.OS06W-DTL-XOW-CD[OS06W-IXM];
      OS06M001.OS06M-DTL-XUM-CD[OS06W-IXM] = OS06W01.OS06W-DTL-XUM-CD[OS06W-IXM];
      OS06M001.OS06M-DTL-STD-USER[OS06W-IXM] = OS06W01.OS06W-DTL-STD-USER[OS06W-IXM];
      OS06M001.OS06M-DTL-CHG-USER[OS06W-IXM] = OS06W01.OS06W-DTL-CHG-USER[OS06W-IXM];
      OS06W00.OS06W-CHG-DT-NUM = OS06W01.OS06W-DTL-ZZZCHGCT[OS06W-IXM];
      if (OS06W00.OS06W-CHG-DT-CHA == "00000000")
        OS06M001.OS06M-DTL-CHG-DT[OS06W-IXM] = "        ";
      else
        OS06M001.OS06M-DTL-CHG-DT[OS06W-IXM] = OS06W00.OS06W-CHG-DT-CHA;
      end
    end

    OS06W00.OS06W-IXM = OS06W00.OS06W-IXM + 1;
                                   /* Increment map index*/

  end


end // end OS06-12100

// Read temporary storage page
Function OS06-12110()
  /* ------------------------------------------------------------*/
  /* Obtain the next page of data to display.*/
  /* ------------------------------------------------------------*/

  OS06W01.XXXTSLEN = OS06W00.XXXTSLEN; /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = OS06W00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (OS06W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OS06W00.XXXPRCNM = "12100"; /* Module identification*/
  converseLib.validationFailed(973); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-12110

// Update temporary storage page
Function OS06-12120()
  /* ------------------------------------------------------------*/
  /* Update the page in temporary storage.*/
  /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (OS06W01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  OS06W00.XXXPRCNM = "12120"; /* Module identification*/
  converseLib.validationFailed(973); /* Unexpected error occurred*/

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-12120

// Check attention identifier
Function OS06-13000()
  /* -------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OS06W00.OS06W-SWR == "Y") /* Request for data*/
      set OS06W01 empty; /* M001 display storage*/
    end

    OS06W00.OS06W-SWF = "Y"; /* Format the map switch*/
    OS06W00.OS06W-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (OS06M001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OS06-11100(); /* Purge temporary storage*/

      XSOS-S0001(); /* Exit to another application*/

      set OS06M001.CATOAP cursor, bold; /* Highlight*/

    else

      OS06W00.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf1   /* and PF1 was not pressed*/
   && converseVar.eventKey not pf3   /* and PF3 was not pressed*/
   && converseVar.eventKey not pf4   /* and PF4 was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14) /* and PF14 was not pressed*/

    OS06W00.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to the previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "OS06M001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "OP0M"; /* TO application*/
    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
  /* MOVE 'OP0M' TO COMMAREA.CATOAP;/* TO application*/
    end

    OS06-11100(); /* Purge temporary storage*/

    XSOS-S0001(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* PF13 - ADD*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf13) /* pf13 pressed*/

    if (COMMAREA.CAADDFL == "N") /* and no add authority*/
      OS06W00.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(267); /* No authority to update*/
      OS06W00.OS06W-SWR = "N"; /* No Request for data*/
      exit stack; /* Exit to display map*/
    else
      OS06W00.OS06W-SWR = "Y"; /* Request for data*/
      OS06W00.OS06W-SWF = "Y"; /* Request for data*/
    end

  end

   /* ------------------------------------------------------------*/
   /* PF14 -*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf14) /* pf14 pressed*/

    if (COMMAREA.CACHGFL == "N") /* no change authority*/
      OS06W00.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(267); /* No authority to update*/
      exit stack; /* Exit to display map*/
    end

  end

   /* ------------------------------------------------------------*/
   /* ENTER*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is enter) /* Enter pressed*/
    OS06W00.OS06W-SWR = "Y"; /* Request for data*/
     /* MOVE 'Y' TO OS06W00.OS06W-SWF;  /*    Request for data*/
  end

end // end OS06-13000

// Reset highlighted fields
Function OS06-14000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  set OS06M001.OS06M-GPC-CD normal; /* Reset gpc*/
  set OS06M001.OS06M-WHSE-CD normal; /* Reset whse*/
  set OS06M001.OS06M-STY-NBR normal; /* Reset style*/

  OS06W00.OS06W-IXM = 1; /* Initialize line index*/

  while (OS06W00.OS06W-IXM <= 12 /* * Until end of lines*/
   && OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] > " ") /* or end of display*/

    set OS06M001.OS06MSEL[OS06W-IXM] normal; /* Reset select flag*/
    set OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] normal;
    set OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] normal;
    set OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] normal;
    set OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM] normal;

    OS06W00.OS06W-IXM = OS06W00.OS06W-IXM + 1; /* Increment line index*/

  end

  set OS06M001.CATOAP initialAttributes; /* TO application*/
  set OS06M001.CAITEM initialAttributes; /* Application data*/

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (OS06M001.OS06M-GPC-CD == "?" /* if any ? entered*/
   || OS06M001.OS06M-WHSE-CD == "?")

    if (OS06M001.OS06M-GPC-CD == "?") /* if ? entered in gpc*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the gpc        **/
       /* *  code and description to the map.                     **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OS06M001.OS06M-GPC-CD = XGPTBL.XGPCD[XX0XWPIX];
        OS06M001.OS06M-GPC-DESC = XGPTBL.XGPDESC[XX0XWPIX];
  /* SET OS06M001.OS06M-SESN-CD CURSOR;/* put cursor on sesn cd*/
      else
        OS06M001.OS06M-GPC-CD = " "; /* clear fields*/
        set OS06M001.OS06M-GPC-CD cursor; /* put cursor on gpc cd*/
        OS06M001.OS06M-GPC-DESC = " "; /* clear description*/
      end

    end

    if (OS06M001.OS06M-WHSE-CD == "?") /* if ? in whse field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "            WAREHOUSE        "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXWH01(); /* perform WHSE window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the whse       **/
       /* *  code and description to the map                      **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        OS06M001.OS06M-WHSE-CD = XWHTBL.XWHCD[XX0XWPIX];
  /* MOVE XWHTBL.XWHDESC(XX0XWPIX) TO OS06M001.OS06M-WHSE-DESC;*/
        set OS06M001.OS06M-WHSE-CD cursor; /* put cursor on sesn yr*/
      else
        OS06M001.OS06M-WHSE-CD = " "; /* clear fields*/
        set OS06M001.OS06M-WHSE-CD cursor; /* put cursor on whse cd*/
        OS06M001.OS06M-WHSE-DESC = " "; /* clear description*/
      end
    end

    converseLib.clearScreen();
     /* restore the original map*/

    OS06W00.OS06W-SWR = "N"; /* no to request for data*/
    OS06W00.OS06W-SWF = "N"; /* no to format map*/

    exit stack; /* go display map*/

  end


end // end OS06-14000

// Verify data that was entered
Function OS06-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (OS06M001.CAITEM > " ") /* Application data was entered*/

    OS06W00.XXXPRCNM = "15000"; /* Module identification*/
    set OS06M001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* If no header data entered, ask for it.*/
   /* ------------------------------------------------------------*/

  if (OS06M001.OS06M-WHSE-CD == " " /* whse is blank*/
   && OS06M001.OS06M-GPC-CD == " ") /* gpc is blank*/
    set OS06M001.OS06M-WHSE-CD cursor, bold; /* cursor & hi-lite*/
    set OS06M001.OS06M-GPC-CD bold; /* hi-lite*/
    converseLib.validationFailed(76); /* hi-lited fields are required*/
   /* EZERTN;                        /* return to previous process*/
  end

  if (OS06M001.OS06M-WHSE-CD == " ") /* whse is blank*/
    set OS06M001.OS06M-WHSE-CD cursor, bold; /* cursor & hi-lite*/
    converseLib.validationFailed(76); /* whse is required*/
   /* EZERTN;                        /* return to previous process*/
  else
    if (OS06M001.OS06M-WHSE-CD in XWHTBL.XWHCD) /* If code exists*/
       /* next sentence*/
    else
      OS06W00.XXXPRCNM = "15100"; /* Module identification*/
      set OS06M001.OS06M-WHSE-CD cursor, bold; /* Highlight*/
      converseLib.validationFailed(78); /* Field missing or invalid*/
    end
  end

  if (OS06M001.OS06M-GPC-CD == " ") /* gpc is blank*/
    set OS06M001.OS06M-GPC-CD cursor, bold; /* cursor & hi-lite*/
    converseLib.validationFailed(483); /* gpc is requried*/
   /* EZERTN;                        /* return to previous process*/
  else
    if (OS06M001.OS06M-GPC-CD in XGPTBL.XGPCD) /* If code exists*/
       /* next sentence*/
    else
      OS06W00.XXXPRCNM = "15100"; /* Module identification*/
      set OS06M001.OS06M-GPC-CD cursor, bold; /* Highlight*/
      converseLib.validationFailed(138); /* Field missing or invalid*/
    end
  end

  if (OS06M001.OS06M-STY-NBR != " ") /* style is not blank*/
    OS06-15050(); /* check style x gpc in VCOLOR02*/
  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid request to scroll was entered.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    OS06-15100(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* Otherwise, verify data in the line.*/
    /* ------------------------------------------------------------*/

    if (converseVar.eventKey is enter /* Enter was pressed*/
     || converseVar.eventKey is pf13  /* or pf13*/
     || converseVar.eventKey is pf14) /* or pf14*/

      OS06-15200(); /* Verify data in the line*/

    end

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end OS06-15000

// Select open cursor in VCOLOR02
Function OS06-15050()
   /* -----------------------------------------------------------------*/
    /* If style nbr was entered there is a check into vcolor02 tbl to*/
    /* see if the  GPC has that style.*/
   /* -----------------------------------------------------------------*/
  set SYCREC empty; /* CLEAR ROW STORAGE AREA*/
  SYCREC.XGPCD = OS06M001.OS06M-GPC-CD;
  SYCREC.SY1STNBR = OS06M001.OS06M-STY-NBR;
  SYCREC.SY2CLRID = " ";
  SYCREC.XDMCD = " ";
  try
    call "IO0560" ("SS", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OS06-15051(); /* Fetch row*/
      OS06-15052(); /* Close cursor*/
      return;
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "13100";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.SYCKEY;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;
end // end OS06-15050

// Fetch next row
Function OS06-15051()
  try
    call "IO0560" ("SN", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OS06M001.OS06M-STY-DESC = SYCREC.SY1STYNM;
      return;
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        converseLib.validationFailed(780);
        set OS06M001.OS06M-STY-NBR cursor, bold;
        return;
      end
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "13100";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.XGPCD;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;
end // end OS06-15051

// Close cursor vcolor02
Function OS06-15052()
  try
    call "IO0560" ("CS", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "13100";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.XGPCD;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;
end // end OS06-15052

// Verify scroll request
Function OS06-15100()
  /* ------------------------------------------------------------*/
  /* If scroll back was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && OS06W00.XXXTSPAG < 2)       /* and no previous pages*/

    OS06W00.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(2); /* No previous page to display*/

  end

  /* ------------------------------------------------------------*/
  /* If scroll forward was requested, ensure that pages exist.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && OS06W00.XXXTSPAG >= OS06W00.TA5TSQIX) /* and no more pages*/

    OS06W00.XXXPRCNM = "15100"; /* Module identification*/
    converseLib.validationFailed(3); /* No more pages to display*/

  end

  /* ------------------------------------------------------------*/
  /* Indicate an error for any data that was modified.*/
  /* ------------------------------------------------------------*/

  OS06W00.OS06W-IXM = 12; /* Initialize line index*/

  while (OS06W00.OS06W-IXM > 0) /* Until end of lines*/

    if (OS06M001.OS06MSEL[OS06W-IXM] != OS06W01.OS06W-SEL[OS06W-IXM])

      OS06W00.XXXPRCNM = "15100"; /* Module identification*/
      set OS06M001.OS06MSEL[OS06W-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(14); /* Field may not change*/

    end

    OS06W00.OS06W-IXM = OS06W00.OS06W-IXM - 1; /* Decrement line number*/

  end


end // end OS06-15100

// Verify data in the line
Function OS06-15200()
  /* ------------------------------------------------------------*/
  /* If selection was entered and is not an "S", indicate that*/
  /* only "S" may be entered to select a line.*/
  /* ------------------------------------------------------------*/

  OS06W00.OS06W-IXM = 12; /* initialize index*/

  while (OS06W00.OS06W-IXM > 0) /* until end of lines*/

    if (OS06M001.OS06MSEL[OS06W-IXM] != "S" /* and is not a "S"*/
     && OS06M001.OS06MSEL[OS06W-IXM] != "A" /* and is not a "A"*/
     && OS06M001.OS06MSEL[OS06W-IXM] != "D" /* and is not a "D"*/
     && OS06M001.OS06MSEL[OS06W-IXM] != " ")

      OS06W00.XXXPRCNM = "15200"; /* Module identification*/
      set OS06M001.OS06MSEL[OS06W-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(857);

    else
      if (OS06M001.OS06MSEL[OS06W-IXM] == "A"
       && converseVar.eventKey is enter)
        OS06-15210();
      end
    end

    OS06W00.OS06W-IXM = OS06W00.OS06W-IXM - 1; /* decrement line number*/

  end

  /* ------------------------------------------------------------*/
  /* GPC code must be in GPC code table*/
  /* ------------------------------------------------------------*/

  if (OS06M001.OS06M-GPC-CD == " ") /* code is blank - flag edit*/
    OS06W00.OS06W-EDIT-FLAG = "Y"; /* yes to edit flag*/
    OS06W00.XXXPRCNM = "15200"; /* Module identification*/
    set OS06M001.OS06M-GPC-CD cursor, bold; /* Highlight*/
    set OS06M001.OS06M-GPC-DESC skip, invisible; /* darken desc*/
    converseLib.validationFailed(483); /* GPC code invalid*/

  else
    if (OS06M001.OS06M-GPC-CD in XGPTBL.XGPCD) /* code in table*/

      /* IF OS06M001.OS06M-GPC-CD = '02' /*  code is 02*/
       /* AND COMMAREA.CAILVL(2) = 'N';/*  and no inquiry authority*/
       /* MOVE '15200' TO OS06W00.XXXPRCNM;/* Module identification*/
       /* SET OS06M001.OS06M-GPC-CD CURSOR,BRIGHT;/* Highlight*/
       /* MOVE 40 TO EZEMNO;         /* GPC code invalid*/
      /* ELSE;*/
       /* ;*/
       /* IF OS06M001.OS06M-GPC-CD = '03' /*  code is 03*/
         /* AND COMMAREA.CAILVL(3) = 'N';/*  and no inquiry authority*/
         /* MOVE '15200' TO OS06W00.XXXPRCNM;/* Module identification*/
         /* SET OS06M001.OS06M-GPC-CD CURSOR,BRIGHT;/* Highlight*/
         /* MOVE 40 TO EZEMNO;       /* GPC code invalid*/
       /* END;*/
      /* ;*/
      /* END;*/

   /* get description*/
      if (OS06M001.OS06M-GPC-CD in XGPTBL.XGPCD)
        OS06M001.OS06M-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      set OS06M001.OS06M-GPC-DESC skip;

    else
      OS06W00.OS06W-EDIT-FLAG = "Y"; /* yes to edit flag*/
      OS06W00.XXXPRCNM = "15200"; /* Module identification*/
      set OS06M001.OS06M-GPC-CD cursor, bold; /* Highlight*/
      set OS06M001.OS06M-GPC-DESC skip, invisible; /* darken desc*/
      converseLib.validationFailed(847); /* GPC code invalid*/

    end

  end

  if (OS06W00.OS06W-EDIT-FLAG == "Y") /* edit flag is on - clear dtls*/

    OS06W00.OS06W-IXM = 12; /* initialize index*/

    while (OS06W00.OS06W-IXM > 0) /* until end of lines*/

      OS06M001.OS06MSEL[OS06W-IXM] = " ";
      set OS06M001.OS06MSEL[OS06W-IXM] skip, invisible;
      OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-ISEG[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-XOW-CD[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-XUM-CD[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-STD-USER[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-CHG-USER[OS06W-IXM] = " ";
      OS06M001.OS06M-DTL-CHG-DT[OS06W-IXM] = " ";

      OS06W00.OS06W-IXM = OS06W00.OS06W-IXM - 1; /* decrement line number*/

    end

    OS06W00.OS06W-EDIT-FLAG = "N"; /* reset flag*/

  end

end // end OS06-15200

Function OS06-15210()
  /* ------------------------------------------------------------*/
  /* If a product line is being added, edit style/color/dimension*/
  /* for validity.*/
  /* ------------------------------------------------------------*/

  if (OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM] == " ")
    OS06W00.XXXPRCNM = "15210"; /* Module identification*/
    set OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(237); /* field is required*/
  end

  if (OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] > " "
   && OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] > " "
   && OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] > " ")
    OS06-15215();
  else
    if (OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] == " ")
      OS06W00.XXXPRCNM = "15210"; /* Module identification*/
      set OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(235); /* style/clr/dim is required*/
    end
    if (OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] == " ")
      OS06W00.XXXPRCNM = "15210"; /* Module identification*/
      set OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(235); /* style/clr/dim is required*/
    end
    if (OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] == " ")
      OS06W00.XXXPRCNM = "15210"; /* Module identification*/
      set OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(235); /* style/clr/dim is required*/
    end
  end

end // end OS06-15210

Function OS06-15215()
   /* -----------------------------------------------------------------*/
    /* If style nbr was entered there is a check into vcolor02 tbl to*/
    /* see if the  GPC has that style.*/
   /* -----------------------------------------------------------------*/
  set SYCREC empty; /* CLEAR ROW STORAGE AREA*/
  SYCREC.XGPCD = OS06M001.OS06M-GPC-CD;
  SYCREC.SY1STNBR = OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM];
  SYCREC.SY2CLRID = OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM];
  SYCREC.XDMCD = OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM];
  try
    call "IO0560" ("SS", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OS06-15216(); /* Fetch row*/
      OS06-15052(); /* Close cursor*/
      return;
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "15215";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.SYCKEY;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;
end // end OS06-15215

Function OS06-15216()
  try
    call "IO0560" ("SN", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        converseLib.validationFailed(131);
        set OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] cursor, bold;
        set OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM] bold;
        return;
      end
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "15216";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.XGPCD;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;
end // end OS06-15216

// Process valid input request
Function OS06-16000()
  /* ------------------------------------------------------------*/
  /* Indicate that the map must be formatted before display*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0)
    OS06W00.OS06W-SWF = "Y"; /* format the map switch*/
  end

  if (converseVar.eventKey is pf14) /* PF14 pressed*/
    COMMAREA.CATOAP = "OS07"; /* Set destination application*/
    XSOS-S0001(); /* Exit to another application*/
  end

  /* ------------------------------------------------------------*/
  /* If search key changed, get new data*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf13) /* ADD not requested*/

    if (OS06W00.OS06W-WHSE-CD != OS06M001.OS06M-WHSE-CD
     || OS06W00.OS06W-GPC-CD != OS06M001.OS06M-GPC-CD
     || OS06W00.OS06W-STY-NBR != OS06M001.OS06M-STY-NBR)
      OS06W00.OS06W-SWR = "Y"; /* request for data switch*/
      OS06W00.XXXTSPAG = 0; /* zero out temp storage*/
  /* move map input to working storage*/
      OS06W00.OS06W-WHSE-CD = OS06M001.OS06M-WHSE-CD;
      OS06W00.OS06W-GPC-CD = OS06M001.OS06M-GPC-CD;
      OS06W00.OS06W-STY-NBR = OS06M001.OS06M-STY-NBR;
    end

  end

  /* ------------------------------------------------------------*/
  /* If a scroll backward was requested, decrement the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    OS06W00.XXXTSPAG = OS06W00.XXXTSPAG - 1; /* Decrement page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* If a scroll forward was requested, increment the page*/
  /* number and return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    OS06W00.XXXTSPAG = OS06W00.XXXTSPAG + 1; /* Increment page number*/

    return; /* Return to previous process*/

  end

  /* ------------------------------------------------------------*/
  /* Save the select fields and clear the map input/output area.*/
  /* ------------------------------------------------------------*/

  OS06W00.OS06W-UPDATE-SW = "N"; /* turn off updated switch*/

  if (converseVar.eventKey is pf13) /* pf13*/
    OS06W00.OS06W-SFN = "A"; /* 'add' function*/
    OS06W00.OS06W-SWD = "1"; /* Map to be displayed switch*/
  /* MOVE 'Y' TO OS06W00.OS06W-SWF; /* yes format map*/
    OS06W00.OS06W-SWR = "Y"; /* yes format map*/

    OS06M001.OS06MSEL[1] = "A";
    set OS06M001.OS06M-DTL-STY-NBR[1] cursor, initialAttributes;
    OS06M001.OS06M-DTL-STY-NBR[1] = "      ";
    set OS06M001.OS06M-DTL-STY-NBR[1] initialAttributes;
    OS06M001.OS06M-DTL-COLR-CD[1] = "   ";
    set OS06M001.OS06M-DTL-COLR-CD[1] initialAttributes;
    OS06M001.OS06M-DTL-XDM-CD[1] = "  ";
    set OS06M001.OS06M-DTL-XDM-CD[1] initialAttributes;
    OS06M001.OS06M-DTL-XQA-CD[1] = "  ";
    set OS06M001.OS06M-DTL-XQA-CD[1] initialAttributes;
    OS06M001.OS06M-DTL-ISEG[1] = "000";
    set OS06M001.OS06M-DTL-ISEG[1] initialAttributes;
    OS06M001.OS06M-DTL-XOW-CD[1] = "00";
    set OS06M001.OS06M-DTL-XOW-CD[1] initialAttributes;
    OS06M001.OS06M-DTL-XUM-CD[1] = "01";
    set OS06M001.OS06M-DTL-XUM-CD[1] initialAttributes;
    OS06M001.OS06M-DTL-STD-USER[1] = COMMAREA.CAUSERID;
    set OS06M001.OS06M-DTL-STD-USER[1] initialAttributes;
    OS06M001.OS06M-DTL-CHG-USER[1] = COMMAREA.CAUSERID;
    set OS06M001.OS06M-DTL-CHG-USER[1] initialAttributes;
    XX0XS01(); /* get date and time*/
    OS06M001.OS06M-DTL-CHG-DT[1] = XX0XW01.XX0XWDAT;
    set OS06M001.OS06M-DTL-CHG-DT[1] initialAttributes;
    OS06W00.OS06W-SWF = "N"; /* yes format map*/
    exit stack;
  else
    if (converseVar.eventKey is enter) /* Enter was press*/
      OS06W00.OS06W-IXM = 1; /* Initialize line index*/
      OS06W00.OS06W-SWU = "N"; /* reset switch*/
      OS06W00.OS06W-SWF = "Y"; /* format map switch*/

      while (OS06W00.OS06W-IXM <= 12 /* Until end of lines*/
       && OS06W00.OS06W-SWU != "Y") /* or 'S' is found*/

        if (OS06M001.OS06MSEL[OS06W-IXM] == "S")

          OS06W00.OS06W-SWU = "Y"; /* indicate 's' was found*/
          OS06W00.OS06W-SFN = "C"; /* 'change' function*/
          OS06W00.OS06W-SWF = "Y"; /* yes format map*/
          OS06W00.OS06W-SWD = "2"; /* Map to be displayed switch*/
          set OS06W02 empty;
          OS06W02.OS06W-WHSE-CD = OS06M001.OS06M-WHSE-CD;
          OS06W02.OS06W-WHSE-DESC = OS06M001.OS06M-WHSE-DESC;
          OS06W02.OS06W-STY-NM = OS06M001.OS06M-STY-DESC;
          OS06W02.OS06W-GPC-CD = OS06M001.OS06M-GPC-CD;
          OS06W02.OS06W-STY-NBR = OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM];
          OS06W02.OS06W-COLR-CD = OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM];
          OS06W02.OS06W-XDM-CD = OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM];
          OS06W02.OS06W-XQA-CD = OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM];
          OS06W02.OS06W-ISEG-CD = OS06M001.OS06M-DTL-ISEG[OS06W-IXM];
          OS06W02.OS06W-XOW-CD = OS06M001.OS06M-DTL-XOW-CD[OS06W-IXM];
          OS06W02.OS06W-XUM-CD = OS06M001.OS06M-DTL-XUM-CD[OS06W-IXM];

          OS06-16100(); /* Get scale in VCOLOR02*/
          if (converseVar.validationMsgNum == 0)
            OS06-16200(); /* Get size IN VSCALE01*/
            OS06-16260(); /* Get qty  IN vrplit02*/
          end

        end

        if (OS06M001.OS06MSEL[1] == "A")

          set VRPLIT02 empty; /* Clear row storage area*/

          VRPLIT02.XWH-WHSE-CD = OS06M001.OS06M-WHSE-CD;
          VRPLIT02.XGP-GPC-CD = OS06M001.OS06M-GPC-CD;
          VRPLIT02.SY-STY-NBR = OS06M001.OS06M-DTL-STY-NBR[1];
          VRPLIT02.SY-COLR-CD-ID = OS06M001.OS06M-DTL-COLR-CD[1];
          VRPLIT02.XDM-DIM-CD = OS06M001.OS06M-DTL-XDM-CD[1];
          VRPLIT02.XQA-QUAL-CD = OS06M001.OS06M-DTL-XQA-CD[1];
          VRPLIT02.PC-CU-IN-SEG-CD = OS06M001.OS06M-DTL-ISEG[1];
          VRPLIT02.XOW-OWN-GRP-CD = OS06M001.OS06M-DTL-XOW-CD[1];
          VRPLIT02.XUM-UOM-CD = OS06M001.OS06M-DTL-XUM-CD[1];
          VRPLIT02.ZZ-SETUP-USER-ID = OS06M001.OS06M-DTL-STD-USER[1];
          VRPLIT02.ZZ-CHNG-USER-ID = OS06M001.OS06M-DTL-CHG-USER[1];
          VRPLIT02.XXX-STAT = "A";
          VRPLIT02.ZZ-QTY1 = 0;
          VRPLIT02.ZZ-QTY2 = 0;
          VRPLIT02.ZZ-QTY3 = 0;
          VRPLIT02.ZZ-QTY4 = 0;
          VRPLIT02.ZZ-QTY5 = 0;
          VRPLIT02.ZZ-QTY6 = 0;
          VRPLIT02.ZZ-QTY7 = 0;
          VRPLIT02.ZZ-QTY8 = 0;
          VRPLIT02.ZZ-QTY9 = 0;
          VRPLIT02.ZZ-QTY10 = 0;
          VRPLIT02.ZZ-QTY11 = 0;
          VRPLIT02.ZZ-QTY12 = 0;
          VRPLIT02.ZZ-QTY13 = 0;
          VRPLIT02.ZZ-QTY14 = 0;
          VRPLIT02.ZZ-QTY15 = 0;
          VRPLIT02.ZZ-QTY16 = 0;
          VRPLIT02.ZZ-QTY17 = 0;
          VRPLIT02.ZZ-QTY18 = 0;
          VRPLIT02.ZZ-QTY19 = 0;
          VRPLIT02.ZZ-QTY20 = 0;
          VRPLIT02.ZZ-QTY21 = 0;
          VRPLIT02.ZZ-QTY22 = 0;
          VRPLIT02.ZZ-QTY23 = 0;
          VRPLIT02.ZZ-QTY24 = 0;
          VRPLIT02.ZZ-QTY25 = 0;
          VRPLIT02.ZZ-QTY26 = 0;
          VRPLIT02.ZZ-QTY27 = 0;
          VRPLIT02.ZZ-QTY28 = 0;
          VRPLIT02.ZZ-QTY29 = 0;
          VRPLIT02.ZZ-QTY31 = 0;
          VRPLIT02.ZZ-QTY32 = 0;
          VRPLIT02.ZZ-QTY33 = 0;
          VRPLIT02.ZZ-QTY34 = 0;
          VRPLIT02.ZZ-QTY35 = 0;
          VRPLIT02.ZZ-QTY36 = 0;
          VRPLIT02.ZZ-QTY37 = 0;
          VRPLIT02.ZZ-QTY38 = 0;
          VRPLIT02.ZZ-QTY39 = 0;
          VRPLIT02.ZZ-QTY40 = 0;
          VRPLIT02.SYS-PROC-CD = "G";
   /* ---- HERE TEST DATE IN TA2REC BEFORE MOVING*/
          OS06W00.OS06W-CHG-DT-CHA = OS06M001.OS06M-DTL-CHG-DT[1];
          VRPLIT02.ZZ-CHNG-DT = OS06W00.OS06W-CHG-DT-NUM;

          if (converseVar.validationMsgNum == 0) /* No error*/
            OS06-16300(); /* Add new row in to vrplit02*/
          end
   /* -------------------------------*/
        end

        if (OS06M001.OS06MSEL[OS06W-IXM] == "D")
          VRPLIT02.XWH-WHSE-CD = OS06M001.OS06M-WHSE-CD;
          VRPLIT02.XGP-GPC-CD = OS06M001.OS06M-GPC-CD;
          VRPLIT02.SY-STY-NBR = OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM];
          VRPLIT02.SY-COLR-CD-ID = OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM];
          VRPLIT02.XDM-DIM-CD = OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM];
          VRPLIT02.XQA-QUAL-CD = OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM];
          VRPLIT02.PC-CU-IN-SEG-CD = OS06M001.OS06M-DTL-ISEG[OS06W-IXM];
          VRPLIT02.XOW-OWN-GRP-CD = OS06M001.OS06M-DTL-XOW-CD[OS06W-IXM];
          VRPLIT02.XUM-UOM-CD = OS06M001.OS06M-DTL-XUM-CD[OS06W-IXM];

          if (converseVar.validationMsgNum == 0) /* No error*/
            OS06-16400(); /* Delete  row in to vrplit02*/
            OS06M001.OS06MSEL[OS06W-IXM] = " ";
          end

        end

        OS06W00.OS06W-IXM = OS06W00.OS06W-IXM + 1; /* Increment line index*/

      end

      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit();

    end
  end


end // end OS06-16000

// Get scale in VCOLOR02
Function OS06-16100()
   /* -----------------------------------------------------------------*/
       /* Get scale  in VCOLOR02*/
   /* -----------------------------------------------------------------*/

  set SYCREC empty;

  SYCREC.XGPCD = OS06M001.OS06M-GPC-CD;
  SYCREC.SY1STNBR = OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM];
  SYCREC.SY2CLRID = OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM];
  SYCREC.XDMCD = OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM];

  try
    call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OS06W02.OS06W-STY-NM = SYCREC.SY1STYNM;
      return;
    end
    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(780); /**/
      return;
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "16100";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.SYCKEY;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;

end // end OS06-16100

// Get size in VSCALE01
Function OS06-16200()
   /* -----------------------------------------------------------------*/
       /* Get size   in VSCALE01*/
   /* -----------------------------------------------------------------*/

  set SY4REC empty;

  SY4REC.SY4SZSCL = SYCREC.SY4SZSCL;
  try
    call "IO0040" ("S ", SQLCA, SY4REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000") /* CALL SUCCESSFUL*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OS06-16250(); /* Load sizes*/
      return;
    end
    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(264); /* SCALE NOT FOUND*/
    end
  end
   /* -----------------------------------------------------------------*/
   /* AN UNEXPECTED ERROR HAS OCCURRED*/
   /* -----------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP RETURN CODE*/

  OS06W00.XXXPRCNM = "16200";

  if (sysVar.errorCode == "00000000" /* CALL SUCCESSFUL*/
   && SQLCA.VAGen_SQLCODE == -911)   /* RESOURCE NOT AVAILABLE*/
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "POST";
  else
    converseLib.validationFailed(973);
    TA1REC.TA1FUNC = "RETN";
    converseLib.clearScreen();
    
  end
  TA1REC.TA1TYPE = "DB2 ";
  TA1REC.TA1LOC = "SELECT UNIQUE VCOLOR02 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP;
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM;
  TA1REC.TA1DBASE = "DPROD   ";
  TA1REC.TA1TBLVU = "VCOLOR02";
  TA1REC.TA1TBLKE = SYCREC.SYCKEY;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};

  exit stack;

end // end OS06-16200

// Load sizes
Function OS06-16250()
  OS06W-IX1 = 1;
  while (OS06W-IX1 <= 40)
    OS06W02-GROUP-DATA[OS06W-IX1] = SY4REC.SY4IDDSC[OS06W-IX1];
    OS06W-IX1 = OS06W-IX1 + 1;
  end
end // end OS06-16250

// get qty in VRPLIT01
Function OS06-16260()
  /* ------------------------------------------------------------*/
  /* Get qty in vrplit02*/
  /* ------------------------------------------------------------*/

  set VRPLIT02 empty; /* Clear row storage area*/

  VRPLIT02.XWH-WHSE-CD = OS06M001.OS06M-WHSE-CD;
  VRPLIT02.XGP-GPC-CD = OS06M001.OS06M-GPC-CD;
  VRPLIT02.SY-STY-NBR = OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM];
  VRPLIT02.SY-COLR-CD-ID = OS06M001.OS06M-DTL-COLR-CD[OS06W-IXM];
  VRPLIT02.XDM-DIM-CD = OS06M001.OS06M-DTL-XDM-CD[OS06W-IXM];
  VRPLIT02.XQA-QUAL-CD = OS06M001.OS06M-DTL-XQA-CD[OS06W-IXM];
  VRPLIT02.PC-CU-IN-SEG-CD = OS06M001.OS06M-DTL-ISEG[OS06W-IXM];
  VRPLIT02.XOW-OWN-GRP-CD = OS06M001.OS06M-DTL-XOW-CD[OS06W-IXM];
  VRPLIT02.XUM-UOM-CD = OS06M001.OS06M-DTL-XUM-CD[OS06W-IXM];

  /* ------------------------------------------------------------*/
  /* Select unique requested  of row from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VRPLIT02" ("S ", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      OS06-16270(); /* Load qty*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* row not found*/
        converseLib.validationFailed(285);
        return; /* Return to previous process*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  OS06W00.XXXPRCNM = "16260"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT UNIQUE TABLE ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-16260

// Load qty
Function OS06-16270()
   /* --------------------------------------------------------*/
    /* Load qty from vrplit02*/
   /* --------------------------------------------------------*/

  OS06W02.OS06W-ZZ-QTY[1] = VRPLIT02.ZZ-QTY1;
  OS06W02.OS06W-ZZ-QTY[2] = VRPLIT02.ZZ-QTY2;
  OS06W02.OS06W-ZZ-QTY[3] = VRPLIT02.ZZ-QTY3;
  OS06W02.OS06W-ZZ-QTY[4] = VRPLIT02.ZZ-QTY4;
  OS06W02.OS06W-ZZ-QTY[5] = VRPLIT02.ZZ-QTY5;
  OS06W02.OS06W-ZZ-QTY[6] = VRPLIT02.ZZ-QTY6;
  OS06W02.OS06W-ZZ-QTY[7] = VRPLIT02.ZZ-QTY7;
  OS06W02.OS06W-ZZ-QTY[8] = VRPLIT02.ZZ-QTY8;
  OS06W02.OS06W-ZZ-QTY[9] = VRPLIT02.ZZ-QTY9;
  OS06W02.OS06W-ZZ-QTY[10] = VRPLIT02.ZZ-QTY10;
  OS06W02.OS06W-ZZ-QTY[11] = VRPLIT02.ZZ-QTY11;
  OS06W02.OS06W-ZZ-QTY[12] = VRPLIT02.ZZ-QTY12;
  OS06W02.OS06W-ZZ-QTY[13] = VRPLIT02.ZZ-QTY13;
  OS06W02.OS06W-ZZ-QTY[14] = VRPLIT02.ZZ-QTY14;
  OS06W02.OS06W-ZZ-QTY[15] = VRPLIT02.ZZ-QTY15;
  OS06W02.OS06W-ZZ-QTY[16] = VRPLIT02.ZZ-QTY16;
  OS06W02.OS06W-ZZ-QTY[17] = VRPLIT02.ZZ-QTY17;
  OS06W02.OS06W-ZZ-QTY[18] = VRPLIT02.ZZ-QTY18;
  OS06W02.OS06W-ZZ-QTY[19] = VRPLIT02.ZZ-QTY19;
  OS06W02.OS06W-ZZ-QTY[20] = VRPLIT02.ZZ-QTY20;
  OS06W02.OS06W-ZZ-QTY[21] = VRPLIT02.ZZ-QTY21;
  OS06W02.OS06W-ZZ-QTY[22] = VRPLIT02.ZZ-QTY22;
  OS06W02.OS06W-ZZ-QTY[23] = VRPLIT02.ZZ-QTY23;
  OS06W02.OS06W-ZZ-QTY[24] = VRPLIT02.ZZ-QTY24;
  OS06W02.OS06W-ZZ-QTY[25] = VRPLIT02.ZZ-QTY25;
  OS06W02.OS06W-ZZ-QTY[26] = VRPLIT02.ZZ-QTY26;
  OS06W02.OS06W-ZZ-QTY[27] = VRPLIT02.ZZ-QTY27;
  OS06W02.OS06W-ZZ-QTY[28] = VRPLIT02.ZZ-QTY28;
  OS06W02.OS06W-ZZ-QTY[29] = VRPLIT02.ZZ-QTY29;
  OS06W02.OS06W-ZZ-QTY[30] = VRPLIT02.ZZ-QTY30;
  OS06W02.OS06W-ZZ-QTY[31] = VRPLIT02.ZZ-QTY31;
  OS06W02.OS06W-ZZ-QTY[32] = VRPLIT02.ZZ-QTY32;
  OS06W02.OS06W-ZZ-QTY[33] = VRPLIT02.ZZ-QTY33;
  OS06W02.OS06W-ZZ-QTY[34] = VRPLIT02.ZZ-QTY34;
  OS06W02.OS06W-ZZ-QTY[35] = VRPLIT02.ZZ-QTY35;
  OS06W02.OS06W-ZZ-QTY[36] = VRPLIT02.ZZ-QTY36;
  OS06W02.OS06W-ZZ-QTY[37] = VRPLIT02.ZZ-QTY37;
  OS06W02.OS06W-ZZ-QTY[38] = VRPLIT02.ZZ-QTY38;
  OS06W02.OS06W-ZZ-QTY[39] = VRPLIT02.ZZ-QTY39;
  OS06W02.OS06W-ZZ-QTY[40] = VRPLIT02.ZZ-QTY40;

end // end OS06-16270

// Add new row in to VRPLIT01
Function OS06-16300()
  /* ------------------------------------------------------------*/
  /* Format the data from the map in the table row.*/
  /* ------------------------------------------------------------*/


  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "E";
  TA2REC.TA2GRGE = VGVar.currentShortGregorianDate;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* valid date pgm*/

  if (TA2REC.TA2RTNCD == 0)
    VRPLIT02.ZZ-SDT = TA2REC.TA2GRGGN;
  else
    OS06W00.XXXPRCNM = "16300"; /* Module identification*/
    converseLib.validationFailed(973); /* unexpected error*/
  end

  OS06W00.OS06W-TIME-BRK = VGVar.currentFormattedTime;
  OS06W00.OS06W-TM-HH = OS06W00.OS06W-TB-HH;
  OS06W00.OS06W-TM-MM = OS06W00.OS06W-TB-MM;
  VRPLIT02.ZZ-CHNG-HHMM = OS06W00.OS06W-TIME-MK;

  if (OS06M001.OS06MSEL[1] == "A")
    VRPLIT02.ZZ-CHNG-HHMM = OS06W00.OS06W-TIME-MK;
    VRPLIT02.ZZ-SDT = TA2REC.TA2GRGGN;
    VRPLIT02.ZZ-CHNG-CNT = 0;
  else
  /* MOVE OS06W01.OS06W-ZZZSDT(1) TO vrplit02.ZZ-SDT;*/
  /* MOVE OS06W01.OS06W-ZZ-CHNG-HHMM(1) TO vrplit02.ZZ-CHNG-HHMM;*/
  /* MOVE OS06W01.OS06W-DTL-ZZZCHGCT(1) TO vrplit02.ZZ-CHNG-CNT;*/
  end

  /* ------------------------------------------------------------*/
  /* INSERT the new row in the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VRPLIT02" ("A ", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OS06W00.OS06W-UPDATE-SW = "Y"; /* update switch*/
      converseLib.validationFailed(418); /* Update successfully completed*/
      OS06W-IXM = 12;
      OS06-16310(); /* Reset fields to normal*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == -803) /* duplicate add attempt*/
        OS06W00.XXXPRCNM = "16300"; /* Module identification*/
        set OS06M001.OS06M-DTL-STY-NBR[OS06W-IXM] cursor, bold;
        converseLib.validationFailed(429); /* this record already exists*/
        OS06W00.OS06W-UPDATE-SW = "N"; /* update switch*/
        OS06W00.OS06W-SWF = "N";
        return; /* Return to previous process*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/

  OS06W00.XXXPRCNM = "16300"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "INSERT TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-16300

// Reset fields to normal
Function OS06-16310()
  /* ------------------------------------------------------------*/
  /* Reset fields to defined*/
  /* ------------------------------------------------------------*/
  OS06M001.OS06MSEL[1] = " ";
  set OS06M001.OS06M-DTL-STY-NBR[1] noHighLight, skip;
  OS06M001.OS06M-DTL-STY-NBR[1] = "      ";
  set OS06M001.OS06M-DTL-STY-NBR[1] noHighLight, skip;
  OS06M001.OS06M-DTL-COLR-CD[1] = "   ";
  set OS06M001.OS06M-DTL-COLR-CD[1] noHighLight, skip;
  OS06M001.OS06M-DTL-XDM-CD[1] = "  ";
  set OS06M001.OS06M-DTL-XDM-CD[1] noHighLight, skip;
  OS06M001.OS06M-DTL-XQA-CD[1] = "  ";
  set OS06M001.OS06M-DTL-XQA-CD[1] noHighLight, skip;
  OS06M001.OS06M-DTL-ISEG[1] = "   ";
  set OS06M001.OS06M-DTL-ISEG[1] noHighLight, skip;
  OS06M001.OS06M-DTL-XOW-CD[1] = "  ";
  set OS06M001.OS06M-DTL-XOW-CD[1] noHighLight, skip;
  OS06M001.OS06M-DTL-XUM-CD[1] = "  ";
  set OS06M001.OS06M-DTL-XUM-CD[1] noHighLight, skip;
  OS06M001.OS06M-DTL-STD-USER[1] = "       ";
  set OS06M001.OS06M-DTL-STD-USER[1] noHighLight, skip;
  OS06M001.OS06M-DTL-CHG-USER[1] = "       ";
  set OS06M001.OS06M-DTL-CHG-USER[1] noHighLight, skip;
  OS06M001.OS06M-DTL-CHG-DT[1] = "        ";
  set OS06M001.OS06M-DTL-CHG-DT[1] noHighLight, skip;
end // end OS06-16310

// Delete row in VRPLIT01
Function OS06-16400()
  /* ------------------------------------------------------------*/
  /* Delete row into vrplit02*/
  /* ------------------------------------------------------------*/

  try
    call "VRPLIT02" ("D ", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
  end /* add row*/

  /* ------------------------------------------------------------*/
  /* If successful, return to the previous process.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      OS06W00.OS06W-UPDATE-SW = "Y";
      converseLib.validationFailed(418); /* Delete successful*/
      return; /* Return to previous process*/
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/

  OS06W00.XXXPRCNM = "16400"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-16400

// Process to converse map 2
Function OS06-20000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/

  OS06-22000(); /* Format and display the map*/

  OS06-23000(); /* Check attention identifier*/

  OS06-24000(); /* Reset fields to normal intensity*/

  OS06-25000(); /* Verify the entered data*/

  OS06-26000(); /* Process valid input request*/


end // end OS06-20000

// Format and converse the map
Function OS06-22000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OS06W00.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.OS06W-SWR == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (OS06W00.OS06W-SWF == "Y") /* Map must be formatted*/
      OS06-22100(); /* Format the data on the map*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OS06M002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  OS06M002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OS06M002.CAITEM = COMMAREA.CAITEM; /* Application data*/

  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/

  if (OS06W00.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (OS06W00.XXXMSGNO != 0) /* Message to display*/

      if (OS06W00.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OS06W00.XXXMSGNO);
      end /* Message number*/
    else
      OS06M002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    OS06M002.XXXPRCNM = OS06W00.XXXPRCNM; /* Module identification*/

    set OS06M002 alarm; /* Indicate sound alarm*/

  end

  converse OS06M002 ;

  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/

  OS06W00.XXXPRCNM = " "; /* Module identification*/
  OS06W00.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  OS06W00.OS06W-UPDATE-SW = "N"; /* reset update-sw*/

  COMMAREA.CATOAP = OS06M002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OS06M002.CAITEM; /* Application data*/

end // end OS06-22000

// Format the display data
Function OS06-22100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/

  set OS06M002 initial; /* M002 input/output area*/

  OS06W00.OS06W-SWF = "N"; /* Format the map switch*/

  /* ------------------------------------------------------------*/
  /* Obtain the current date and time*/
  /* ------------------------------------------------------------*/

  XX0XS01(); /* get date and time*/
  OS06W00.OS06W-FULLDATE = XX0XW01.XX0XWDAT; /* move to ws*/
  OS06W00.OS06W-FORMYY = OS06W00.OS06W-FULLYY; /* move year*/
  OS06W00.OS06W-FORMMM = OS06W00.OS06W-FULLMM; /* move month*/
  OS06W00.OS06W-FORMDD = OS06W00.OS06W-FULLDD; /* move days*/

  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/

  OS06M002.OS06M-XWH-WHSE-CD = OS06W02.OS06W-WHSE-CD;
                                                          /* whse from map1*/
  OS06M002.OS06M-XWH-WHSE-DESC = OS06W02.OS06W-WHSE-DESC;
                                                      /* desc from map 1*/
  OS06M002.OS06M-SY-STY-NBR = OS06W02.OS06W-STY-NBR;
  OS06M002.OS06M-SY-COLR-CD-ID = OS06W02.OS06W-COLR-CD;
  OS06M002.OS06M-XDM-DIM-CD = OS06W02.OS06W-XDM-CD;
  OS06M002.OS06M-SY-STY-NM = OS06W02.OS06W-STY-NM;

  OS06W-IX1 = 1;
  while (OS06W-IX1 <= 40)
    OS06M002.OS06M-SZ-ID-DESC[OS06W-IX1] = OS06W02.OS06W-SZ-ID-DESC[OS06W-IX1];
    if (OS06W02.OS06W-ZZ-QTY[OS06W-IX1] == 0)
      OS06M002.OS06M-ZZ-QTY[OS06W-IX1] = "     ";
    else
      OS06W02.OS06W-ZZ-QTY-NUM = OS06W02.OS06W-ZZ-QTY[OS06W-IX1];
      OS06M002.OS06M-ZZ-QTY[OS06W-IX1] = OS06W02.OS06W-ZZ-QTY-CHA;
    end
    OS06W-IX1 = OS06W-IX1 + 1;
  end

end // end OS06-22100

// Check attention identifier
Function OS06-23000()
  /* ------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* If a request for data is pending, reset that request.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (OS06W00.OS06W-SWR == "Y") /* Request for data*/
      set OS06W02 empty; /* M002 display storage*/
    end

    OS06W00.OS06W-SWF = "Y"; /* Format the map switch*/
    OS06W00.OS06W-SWR = "N"; /* Request for data switch*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      OS06-11100(); /* Purge any temporary storage*/

      XSOS-S0001(); /* Exit to another application*/

      set OS06M001.CATOAP cursor, bold; /* Highlight*/

      OS06W00.OS06W-SWD = "1"; /* Map to be displayed switch*/

    else

      OS06W00.XXXPRCNM = "23000"; /* Module identification*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf21) /* or PF21 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "OS06M002"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      OS06W00.OS06W-SWD = "1"; /* Map to be displayed switch*/
      OS06W00.OS06W-SWF = "Y"; /* Format the map switch*/

  /* IF OS06M002.OS06M-GPC-CD NE  /* gpc changed from map1*/
  /* OS06W02.OS06W-GPC-CD       /* and gpc not spaces*/
  /* AND OS06M002.OS06M-GPC-CD NE ' ';*/
  /* SET OS06M001 CLEAR;        /* clear map1 and*/
  /* MOVE OS06M002.OS06M-GPC-CD TO/* move new gpc to it*/
  /* OS06M001.OS06M-GPC-CD;*/
  /* END;*/

      exit stack; /* Exit to display map*/

    end

    if (converseVar.eventKey is pf21) /* PF21 was pressed*/

      COMMAREA.CATOAP = "OP0M"; /* tran for op menu screen*/
      OS06-11100(); /* Purge any temporary storage*/
      XSOS-S0001(); /* Exit to another application*/

      exit stack; /* Exit to display map*/

    end

    OS06-11100(); /* Purge any temporary storage*/

    XSOS-S0001(); /* Exit to another application*/

    OS06W00.OS06W-SWD = "1"; /* Map to be displayed switch*/

    exit stack; /* Exit to display map*/

  end

  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf23) /* and PF23 was not pressed*/

    OS06W00.XXXPRCNM = "23000"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end OS06-23000

// Reset highlighted fields
Function OS06-24000()
  /* ------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/

  set OS06M002.OS06M-XWH-WHSE-CD initialAttributes;
  set OS06M002.OS06M-XWH-WHSE-DESC initialAttributes;
  set OS06M002.OS06M-SY-STY-NBR initialAttributes;
  set OS06M002.OS06M-SY-COLR-CD-ID initialAttributes;
  set OS06M002.OS06M-XDM-DIM-CD initialAttributes;
  set OS06M002.OS06M-SY-STY-NM initialAttributes;

  OS06W-IX2 = 1;
  while (OS06W-IX2 <= 40)
    set OS06M002.OS06M-SZ-ID-DESC[OS06W-IX2] initialAttributes;
    set OS06M002.OS06M-ZZ-QTY[OS06W-IX2] initialAttributes;
    OS06W-IX2 = OS06W-IX2 + 1;
  end

end // end OS06-24000

// Verify data that was entered
Function OS06-25000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    OS06W00.XXXPRCNM = "25000"; /* Module identification*/
    set OS06M002.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

  /* ------------------------------------------------------------*/
  /* If any errors were found, exit to display the map.*/
  /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  else /**/
    OS06-25200(); /* verify entered data*/
  end

end // end OS06-25000

// Verify any changed data
Function OS06-25200()
  /* ------------------------------------------------------------*/
  /* remove blank SESN and YR fields*/
  /* ------------------------------------------------------------*/

  if (OS06M002 is modified)
    OS06W00.OS06W-IX1 = 1;

    while (OS06W-IX1 <= 40)

  /* IF OS06M002.OS06M-ZZ-QTY(OS06W-IX1) = '     ';*/
  /* MOVE 0 TO OS06W02.OS06W-ZZ-QTY(OS06W-IX1);*/
  /* ELSE;*/
      OS06W02.OS06W-ZZ-QTY-CHA = OS06M002.OS06M-ZZ-QTY[OS06W-IX1];
      OS06W02.OS06W-ZZ-QTY[OS06W-IX1] = OS06W02.OS06W-ZZ-QTY-NUM;
  /* END;*/

      OS06W00.OS06W-IX1 = OS06W00.OS06W-IX1 + 1;
    end
  end


  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    exit stack; /* Exit to display map*/
  end


end // end OS06-25200

// Process valid input request
Function OS06-26000()
  /* ------------------------------------------------------------*/
  /* if enter was pressed, continue*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* enter not pressed*/

    OS06W00.XXXPRCNM = "26000"; /* module id*/
    converseLib.validationFailed(4); /* pa/pf key pressed is not valid*/
    exit stack; /* exit to display map*/

  else

    OS06-26050(); /* select row*/
    OS06-26100(); /* update row*/

    /* ------------------------------------------------------------*/
    /* Add the new data in the table row.*/
    /* ------------------------------------------------------------*/

  /* PERFORM OS06-26200;            /* add table row*/

  end
  /* ------------------------------------------------------------*/
  /* Commit all changes made to protected resources.*/
  /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/


end // end OS06-26000

// Select row for update
Function OS06-26050()
  /* ------------------------------------------------------------*/
  /* Get row in vrplit02 for update*/
  /* ------------------------------------------------------------*/

  set VRPLIT02 empty; /* Clear row storage area*/

  VRPLIT02.XWH-WHSE-CD = OS06W02.OS06W-WHSE-CD;
  VRPLIT02.XGP-GPC-CD = OS06W02.OS06W-GPC-CD;
  VRPLIT02.SY-STY-NBR = OS06W02.OS06W-STY-NBR;
  VRPLIT02.SY-COLR-CD-ID = OS06W02.OS06W-COLR-CD;
  VRPLIT02.XDM-DIM-CD = OS06W02.OS06W-XDM-CD;
  VRPLIT02.XQA-QUAL-CD = OS06W02.OS06W-XQA-CD;
  VRPLIT02.PC-CU-IN-SEG-CD = OS06W02.OS06W-ISEG-CD;
  VRPLIT02.XOW-OWN-GRP-CD = OS06W02.OS06W-XOW-CD;
  VRPLIT02.XUM-UOM-CD = OS06W02.OS06W-XUM-CD;

  /* ------------------------------------------------------------*/
  /* Select unique requested  of row from the table.*/
  /* ------------------------------------------------------------*/

  try
    call "VRPLIT02" ("S ", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      return; /* Return to previous process*/
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* row not found*/
        converseLib.validationFailed(285);
        return; /* Return to previous process*/
      end
    end

  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  OS06W00.XXXPRCNM = "26050"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT FOR UPDATE   ROWS";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-26050

// Update row in VRPLIT01
Function OS06-26100()
   /* --------------------------------------------------------*/
    /* Load qty from OS06W02 for update*/
   /* --------------------------------------------------------*/

  VRPLIT02.ZZ-QTY1 = OS06W02.OS06W-ZZ-QTY[1];
  VRPLIT02.ZZ-QTY2 = OS06W02.OS06W-ZZ-QTY[2];
  VRPLIT02.ZZ-QTY3 = OS06W02.OS06W-ZZ-QTY[3];
  VRPLIT02.ZZ-QTY4 = OS06W02.OS06W-ZZ-QTY[4];
  VRPLIT02.ZZ-QTY5 = OS06W02.OS06W-ZZ-QTY[5];
  VRPLIT02.ZZ-QTY6 = OS06W02.OS06W-ZZ-QTY[6];
  VRPLIT02.ZZ-QTY7 = OS06W02.OS06W-ZZ-QTY[7];
  VRPLIT02.ZZ-QTY8 = OS06W02.OS06W-ZZ-QTY[8];
  VRPLIT02.ZZ-QTY9 = OS06W02.OS06W-ZZ-QTY[9];
  VRPLIT02.ZZ-QTY10 = OS06W02.OS06W-ZZ-QTY[10];
  VRPLIT02.ZZ-QTY11 = OS06W02.OS06W-ZZ-QTY[11];
  VRPLIT02.ZZ-QTY12 = OS06W02.OS06W-ZZ-QTY[12];
  VRPLIT02.ZZ-QTY13 = OS06W02.OS06W-ZZ-QTY[13];
  VRPLIT02.ZZ-QTY14 = OS06W02.OS06W-ZZ-QTY[14];
  VRPLIT02.ZZ-QTY15 = OS06W02.OS06W-ZZ-QTY[15];
  VRPLIT02.ZZ-QTY16 = OS06W02.OS06W-ZZ-QTY[16];
  VRPLIT02.ZZ-QTY17 = OS06W02.OS06W-ZZ-QTY[17];
  VRPLIT02.ZZ-QTY18 = OS06W02.OS06W-ZZ-QTY[18];
  VRPLIT02.ZZ-QTY19 = OS06W02.OS06W-ZZ-QTY[19];
  VRPLIT02.ZZ-QTY20 = OS06W02.OS06W-ZZ-QTY[20];
  VRPLIT02.ZZ-QTY21 = OS06W02.OS06W-ZZ-QTY[21];
  VRPLIT02.ZZ-QTY22 = OS06W02.OS06W-ZZ-QTY[22];
  VRPLIT02.ZZ-QTY23 = OS06W02.OS06W-ZZ-QTY[23];
  VRPLIT02.ZZ-QTY24 = OS06W02.OS06W-ZZ-QTY[24];
  VRPLIT02.ZZ-QTY25 = OS06W02.OS06W-ZZ-QTY[25];
  VRPLIT02.ZZ-QTY26 = OS06W02.OS06W-ZZ-QTY[26];
  VRPLIT02.ZZ-QTY27 = OS06W02.OS06W-ZZ-QTY[27];
  VRPLIT02.ZZ-QTY28 = OS06W02.OS06W-ZZ-QTY[28];
  VRPLIT02.ZZ-QTY29 = OS06W02.OS06W-ZZ-QTY[29];
  VRPLIT02.ZZ-QTY30 = OS06W02.OS06W-ZZ-QTY[30];
  VRPLIT02.ZZ-QTY31 = OS06W02.OS06W-ZZ-QTY[31];
  VRPLIT02.ZZ-QTY32 = OS06W02.OS06W-ZZ-QTY[32];
  VRPLIT02.ZZ-QTY33 = OS06W02.OS06W-ZZ-QTY[33];
  VRPLIT02.ZZ-QTY34 = OS06W02.OS06W-ZZ-QTY[34];
  VRPLIT02.ZZ-QTY35 = OS06W02.OS06W-ZZ-QTY[35];
  VRPLIT02.ZZ-QTY36 = OS06W02.OS06W-ZZ-QTY[36];
  VRPLIT02.ZZ-QTY37 = OS06W02.OS06W-ZZ-QTY[37];
  VRPLIT02.ZZ-QTY38 = OS06W02.OS06W-ZZ-QTY[38];
  VRPLIT02.ZZ-QTY39 = OS06W02.OS06W-ZZ-QTY[39];
  VRPLIT02.ZZ-QTY40 = OS06W02.OS06W-ZZ-QTY[40];
  XX0XS01(); /* get date and time*/
  VRPLIT02.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
  VRPLIT02.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
  VRPLIT02.ZZ-CHNG-USER-ID = COMMAREA.CAUSERID;

  try
    call "VRPLIT02" ("U ", SQLCA, VRPLIT02) {isNoRefresh = yes, isExternal = yes};
  end

  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* and normal return code*/
      converseLib.validationFailed(418);
      return; /* Return to previous process*/
    end
  end

  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  OS06W00.XXXPRCNM = "26100"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE   T OF TABLE ROW ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = OS06W00.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLIT02"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLIT02.VRPLIT02-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end OS06-26100

Function XSOS-S0001()
  /* ------------------------------------------------------------*/
  /* Set the application to be invoked for PF1 or PF4.*/
  /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD00"; /* Indicate Goal Documentation*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Indicate Master Menu*/
  end

  /* ------------------------------------------------------------*/
  /* Transfer control to the specified application.*/
  /* ------------------------------------------------------------*/

  XSEXIT(); /* Exit to another application*/

  /* ------------------------------------------------------------*/
  /* Reestablish the COMMAREA application and item fields.*/
  /* ------------------------------------------------------------*/

  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* CURR application*/

  if (converseVar.eventKey is pfkey) /* PF key was pressed*/

    COMMAREA.CATOAP = " "; /* Clear TO application*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end

  end

  /* ------------------------------------------------------------*/
  /* Indicate error if transfer failed.*/
  /* ------------------------------------------------------------*/

  if (COMMAREA.CASECRC == 3 /* Application not found*/
   || COMMAREA.CASECRC == 4) /* or transfer not allowed*/

    converseLib.validationFailed(6); /* Indicate not allowed*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/

  end


end // end XSOS-S0001

//*** RECORD=OS06W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OS06W00 type basicRecord
  10 OS06W-IXM OS06W-IXM ; 
  10 OS06W-IX1 OS06W-IX1 ; 
  10 OS06W-IX2 OS06W-IX2 ; 
  10 OS06W-IXX OS06W-IXX ; 
  10 OS06W-SWC OS06W-SWC ; 
  10 OS06W-SWD OS06W-SWD ; 
  10 OS06W-SWF OS06W-SWF ; 
  10 OS06W-SWR OS06W-SWR ; 
  10 OS06W-SWU OS06W-SWU ; 
  10 OS06W-SFN OS06W-SFN ; 
  10 OS06W-EDIT-FLAG OS06W-EDIT-FLAG ; 
  10 OS06W-WHSE-CD OS06W-WHSE-CD ; 
  10 OS06W-GPC-CD OS06W-GPC-CD ; 
  10 OS06W-GPC-DESC OS06W-GPC-DESC ; 
  10 OS06W-STY-NBR OS06W-STY-NBR ; 
  10 OS06W-STY-DESC OS06W-STY-DESC ; 
  10 OS06W-YEAR-DESC-CHAR OS06W-YEAR-DESC-CHAR ; 
  10 OS06W-YEAR-DESC OS06W-YEAR-DESC ; 
    15 OS06W-YEAR-DESC-CC OS06W-YEAR-DESC-CC ; 
    15 OS06W-YEAR-DESC-YY OS06W-YEAR-DESC-YY ; 
  10 OS06W-STAT OS06W-STAT ; 
  10 OS06W-STAT-DESC OS06W-STAT-DESC ; 
  10 OS06W-UPDATE-SW OS06W-UPDATE-SW ; 
  10 OS06W-SAVE-PAGE OS06W-SAVE-PAGE ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 XXXMSGNO XXXMSGNO ; 
  10 XXXPRCNM XXXPRCNM ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 OS06W-BIN-YEAR OS06W-BIN-YEAR ; 
    15 OS06W-BIN-YEAR-CC OS06W-BIN-YEAR-CC ; 
    15 OS06W-BIN-YEAR-YY OS06W-BIN-YEAR-YY ; 
  10 OS06W-FULLDATE OS06W-FULLDATE ; 
    15 OS06W-FULLCC OS06W-FULLCC ; 
    15 OS06W-FULLYY OS06W-FULLYY ; 
    15 OS06W-FULLMM OS06W-FULLMM ; 
    15 OS06W-FULLDD OS06W-FULLDD ; 
  10 OS06W-FORMDATE OS06W-FORMDATE ; 
    15 OS06W-FORMMM OS06W-FORMMM ; 
    15 OS06W-FORMDD OS06W-FORMDD ; 
    15 OS06W-FORMYY OS06W-FORMYY ; 
  10 OS06W-HOLD-DATE1 OS06W-HOLD-DATE1 ; 
  10 OS06W-HOLD-DATE2 OS06W-HOLD-DATE2 ; 
  10 OS06W-HOLD-YEAR OS06W-HOLD-YEAR ; 
  10 OS06W-HOLD-YEAR-CHAR OS06W-HOLD-YEAR-CHAR ; 
  10 OS06W-HOLD-YEAR-CHAR2 OS06W-HOLD-YEAR-CHAR2 ; 
  10 OS06W-HOLD-YEAR-CHAR3 OS06W-HOLD-YEAR-CHAR3 ; 
  10 OS06W-CTL-FLD OS06W-CTL-FLD ; 
    15 OS06W-FNC OS06W-FNC ; 
    15 OS06W-SAV OS06W-SAV ; 
    15 OS06W-SAV-PAGE OS06W-SAV-PAGE ; 
  10 OS06W-CHG-DT-CHA OS06W-CHG-DT-CHA ; 
    15 OS06W-CHG-DT-NUM OS06W-CHG-DT-NUM ; 
  10 OS06W-TIME-BRK OS06W-TIME-BRK ; 
    15 OS06W-TB-HH OS06W-TB-HH ; 
    15 * char(1) ; 
    15 OS06W-TB-MM OS06W-TB-MM ; 
    15 * char(1) ; 
    15 OS06W-TB-SS OS06W-TB-SS ; 
  10 OS06W-TIME-MK OS06W-TIME-MK ; 
    15 OS06W-TM-HH OS06W-TM-HH ; 
    15 OS06W-TM-MM OS06W-TM-MM ; 
end // end OS06W00

//*** RECORD=OS06W01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OS06W01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 * char(540) ; // Temporary storage page length
    10 OS06W-SEL OS06W-SEL [12] ; 
    10 OS06W-GROUP OS06W-GROUP [12] ; 
      15 OS06W-DTL-WHSE-CD OS06W-DTL-WHSE-CD ; 
      15 OS06W-DTL-GPC-CD OS06W-DTL-GPC-CD ; 
      15 OS06W-DTL-STY-NBR OS06W-DTL-STY-NBR ; 
      15 OS06W-DTL-COLR-CD OS06W-DTL-COLR-CD ; 
      15 OS06W-DTL-XDM-CD OS06W-DTL-XDM-CD ; 
      15 OS06W-DTL-XQA-CD OS06W-DTL-XQA-CD ; 
      15 OS06W-DTL-ISEG OS06W-DTL-ISEG ; 
      15 OS06W-DTL-XOW-CD OS06W-DTL-XOW-CD ; 
      15 OS06W-DTL-XUM-CD OS06W-DTL-XUM-CD ; 
      15 OS06W-DTL-STD-USER OS06W-DTL-STD-USER ; 
      15 OS06W-DTL-CHG-USER OS06W-DTL-CHG-USER ; 
      15 OS06W-DTL-ZZZCHGCT OS06W-DTL-ZZZCHGCT ; 
end // end OS06W01

//*** RECORD=OS06W02 ****
// /*
// /*      application working storage for map 2
// /*
// ***********************
Record OS06W02 type basicRecord
  10 OS06W02-GROUP-DATA OS06W02-GROUP-DATA [40] ; 
    15 OS06W-SZ-ID-DESC OS06W-SZ-ID-DESC ; 
    15 OS06W-ZZ-QTY OS06W-ZZ-QTY ; 
  10 OS06W-GPC-CD OS06W-GPC-CD ; 
  10 OS06W-WHSE-CD OS06W-WHSE-CD ; 
  10 OS06W-WHSE-DESC OS06W-WHSE-DESC ; 
  10 OS06W-STY-NBR OS06W-STY-NBR ; 
  10 OS06W-STY-NM OS06W-STY-NM ; 
  10 OS06W-COLR-CD OS06W-COLR-CD ; 
  10 OS06W-XDM-CD OS06W-XDM-CD ; 
  10 OS06W-XQA-CD OS06W-XQA-CD ; 
  10 OS06W-ISEG-CD OS06W-ISEG-CD ; 
  10 OS06W-XOW-CD OS06W-XOW-CD ; 
  10 OS06W-XUM-CD OS06W-XUM-CD ; 
  10 OS06W-ZZ-QTY-CHA OS06W-ZZ-QTY-CHA ; 
    15 OS06W-ZZ-QTY-NUM OS06W-ZZ-QTY-NUM ; 
end // end OS06W02

// Binary work year
DataItem OS06W-BIN-YEAR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Binary work year cc
DataItem OS06W-BIN-YEAR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Binary work year yy
DataItem OS06W-BIN-YEAR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS06W-CHG-DT-CHA char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS06W-CHG-DT-NUM num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-COLR-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Pass record control field
DataItem OS06W-CTL-FLD char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-CHG-USER char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-COLR-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-ISEG char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-STD-USER char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-WHSE-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-XDM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-XOW-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-XQA-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE - DETAIL
DataItem OS06W-DTL-XUM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BINDING RULING COMMENT -DETAIL
DataItem OS06W-DTL-ZZZCHGCT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Edit Flag
DataItem OS06W-EDIT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map function switch
DataItem OS06W-FNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format Date
DataItem OS06W-FORMDATE char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format Date dd
DataItem OS06W-FORMDD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format Date mm
DataItem OS06W-FORMMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format Date yy
DataItem OS06W-FORMYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Work Full Date cc
DataItem OS06W-FULLCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Work Full Date
DataItem OS06W-FULLDATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Work Full Date dd
DataItem OS06W-FULLDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Work Full Date mm
DataItem OS06W-FULLMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Work Full Date yy
DataItem OS06W-FULLYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE
DataItem OS06W-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OS06W-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//  Group Level
DataItem OS06W-GROUP char(44)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Holding Date 1
DataItem OS06W-HOLD-DATE1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Holding Date 2
DataItem OS06W-HOLD-DATE2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Holding Year numeric
DataItem OS06W-HOLD-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Holding Year character
DataItem OS06W-HOLD-YEAR-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Holding Year character
DataItem OS06W-HOLD-YEAR-CHAR2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Holding Year character
DataItem OS06W-HOLD-YEAR-CHAR3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-ISEG-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OS06W-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OS06W-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OS06W-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem OS06W-IXX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Save index for WS
DataItem OS06W-SAV num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save page for cursor placement
DataItem OS06W-SAV-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page save field
DataItem OS06W-SAVE-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// LINE SELECTION INDICATOR
DataItem OS06W-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// function switch
DataItem OS06W-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS CODE
DataItem OS06W-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS CODE DESCRIPTION - HDR
DataItem OS06W-STAT-DESC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OS06W-STY-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OS06W-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OS06W-STY-NM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file switch
DataItem OS06W-SWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem OS06W-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem OS06W-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem OS06W-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Storage page update switch
DataItem OS06W-SWU char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE
DataItem OS06W-SZ-ID-DESC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS06W-TB-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS06W-TB-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS06W-TB-SS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS06W-TIME-BRK char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS06W-TIME-MK num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS06W-TM-HH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS06W-TM-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Update switch
DataItem OS06W-UPDATE-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-WHSE-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE DESCRIPTION - HEADER
DataItem OS06W-WHSE-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-XDM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-XOW-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-XQA-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Warehouse Code
DataItem OS06W-XUM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SEASON YEARdescription
DataItem OS06W-YEAR-DESC num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SEASON YEAR description cc
DataItem OS06W-YEAR-DESC-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// SEASON YEAR description char
DataItem OS06W-YEAR-DESC-CHAR char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// SEASON YEAR description yy
DataItem OS06W-YEAR-DESC-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE
DataItem OS06W-ZZ-QTY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// GPC CODE
DataItem OS06W-ZZ-QTY-CHA char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC CODE
DataItem OS06W-ZZ-QTY-NUM num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//  Group Level
DataItem OS06W02-GROUP-DATA char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

