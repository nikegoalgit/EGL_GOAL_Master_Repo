package os0k;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import op.common.*;
import os.common.OSWWREC;
import ta.common.TA1REC;
import vv.common.VBASGN01;
//*** PROGRAM=OS0K ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS0KS-bld-  = build records
//    OS0KS-get-  = select records
//    OS0KS-edt-  = edit fields
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 04/18/94   SCHASE     Created.
// * 11/29/94   CBRINE     Added OSWW-MSG-NBR TO OSWWREC.
// * 12/08/97   KLEE       Added NEW SCREEN ENTRY.
// *********************
Program OS0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  OSWWREC OSWWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  VBASGN01 VBASGN01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OS0KM.OS0KM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0K000: OS0K000();
    goto OS0K010;
    OS0K010: OS0K010();
    goto OS0K010;
  end // end main
end // end OS0K

// main execute process
Function OS0K000()
     /* Check csp and order batch security*/
  ;
  XSENTRY(); /* check security*/
  XSSEGTR(); /* set segmented trans id*/
  ;
     /* Initialize application*/
  ;
  OS0KS-INIT-OS0K();
  ;
  OSWWREC.OSWWINIT = "OS0K"; /* set system init to os0k*/
  ;
     /* Build map for display*/
  ;
  OS0KS-BLD-MAP();
  ;
  ;
  ;
end // end OS0K000

// converse/ after process
Function OS0K010()
  ;
  converseLib.clearScreen();
   /* set map to scroll properly*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  ;
  converse OS0KM001 ;
  ;
     /* Init error stuff*/
  ;
  OSWWREC.OSWWERFL = "N";
  converseLib.validationFailed(0);
  ;
  ;
     /* Reset field attributes*/
  ;
  OS0KS-RESET-ATTRIB();
  ;
  ;
     /* Edit map*/
  ;
  OS0KS-EDT-MAP();
  ;
  ;
     /* Edit PF Keys*/
  ;
  OS0KS-TRNSFR-CNTL(); /* transfer to requested application.*/
  ;
  ;
end // end OS0K010

// Build OS0K Map
Function OS0KS-BLD-MAP()
  ;
     /* build map headings*/
  ;
  OS0KM001.OS0KM-MAP-DTE = OSWWREC.OSWWCDAT;
  ;
  OS0KM001.OS0KM-MAP-RVN = 01;
  ;
  ;
end // end OS0KS-BLD-MAP

// Edit OS0K Map
Function OS0KS-EDT-MAP()
  ;
  ;
     /* edit bulk assignment id*/
  ;
  if (OS0KM001.OS0KM-MAP-OPT == 3)
    if (OS0KM001.OB-BULK-ASGN-ID == " ")
      OSWWREC.OSWWERFL = "Y"; /* SET THE ERROR FLAG*/
      set OS0KM001.OB-BULK-ASGN-ID cursor, bold;
      converseLib.validationFailed(832); /* OPTION REQUIRES BULK ASGN ID*/
    else
      OS0KS-GET-VBASGN01(); /* VERIFY BULK ASSIGNMENT ID*/
    end
  end
  ;
     /* edit option*/
  ;
  if (OS0KM001.OS0KM-MAP-OPT == 1
   || OS0KM001.OS0KM-MAP-OPT == 2
   || OS0KM001.OS0KM-MAP-OPT == 3
   || OS0KM001.OS0KM-MAP-OPT == 4)
    /* NEXT SENTENCE*/
  else
    OSWWREC.OSWWERFL = "Y"; /* SET THE ERROR FLAG*/
    set OS0KM001.OS0KM-MAP-OPT cursor, bold;
    converseLib.validationFailed(831); /* INVALID OPTION*/
  end
  ;
end // end OS0KS-EDT-MAP

// Select VBASGN01
Function OS0KS-GET-VBASGN01()
  ;
  set VBASGN01 empty;
  set SQLCA empty;
  ;
  VBASGN01.OB-BULK-ASGN-ID = OS0KM001.OB-BULK-ASGN-ID;
  ;
  call "IO7200" ("S ", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
  ;
    /* CHECK DB2 RETURN CODE*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    OSWWREC.OB-BULK-ASGN-ID = OS0KM001.OB-BULK-ASGN-ID;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OSWWREC.OSWWERFL = "Y"; /* SET THE ERROR FLAG*/
      converseLib.validationFailed(833); /* BULK ASSGNMNT ID DOES NOT EXIST*/
      set OS0KM001.OB-BULK-ASGN-ID cursor, bold; /* position cursor*/
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        OSWWREC.OSWWERFL = "Y"; /* set error flag*/
        converseLib.validationFailed(010); /* database busy*/
        set OS0KM001.OS0KM-MAP-OPT cursor; /* position cursor*/
      else
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0K";
        TA1REC.TA1DBASE = "DORDB   ";
        TA1REC.TA1TBLVU = "VBASGN01";
        TA1REC.TA1LOCAT[1] = "S IO7200";
        TA1REC.TA1LOCAT[2] = " OS0KS-G";
        TA1REC.TA1LOCAT[3] = "ET-VBASG";
        TA1REC.TA1LOCAT[4] = "N01     ";
        TA1REC.TA1TBLKE = VBASGN01.OB-BULK-ASGN-ID;
      end
    end
  end
  ;
  ;
end // end OS0KS-GET-VBASGN01

// Initialize OS0K Application
Function OS0KS-INIT-OS0K()
  ;
  set VBASGN01 empty; /* Bulk Assignment*/
  set SQLCA empty; /* return code from DB2*/
  set TA1REC empty; /* diagnostic record*/
  set OSWWREC empty; /* common working storage*/
  ;
  set OS0KM001 empty; /* map*/
  ;
  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate;
  ;
  OSWWREC.OSWWFRMAP = "OS0K"; /* format from appl*/
  ;
  TA1REC.TA1MAP = "OS0KM001"; /* map name for diags*/
  ;
  ;
end // end OS0KS-INIT-OS0K

// Reset Field Attributes
Function OS0KS-RESET-ATTRIB()
  ;
     /* Set map field attributes*/
  ;
  set OS0KM001.OB-BULK-ASGN-ID initialAttributes;
  ;
  set OS0KM001.OS0KM-MAP-OPT cursor, initialAttributes;
  ;
  ;
end // end OS0KS-RESET-ATTRIB

// Transfer Control for OS0K
Function OS0KS-TRNSFR-CNTL()
  ;
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CAUSERA = " ";
    COMMAREA.CATOAP = "OP0Y"; /* Order Inquiry parms*/
    XSEXIT();
  end
  ;
  ;
  if (converseVar.eventKey is pf4)
    COMMAREA.CAUSERA = " ";
    XSPF4();
  end
  ;
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  ;
  if (converseVar.eventKey is enter
  ) /* next sentence - there may be errors*/
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
  end
  ;
  if (converseVar.eventKey is enter
   && OSWWREC.OSWWERFL == "N")
    if (OS0KM001.OS0KM-MAP-OPT == 1)
      COMMAREA.CATOAP = "OS0L";
      XSEXIT();
      OS0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    else
      if (OS0KM001.OS0KM-MAP-OPT == 2)
        COMMAREA.CATOAP = "OS0M";
        XSEXIT();
        OS0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      else
        if (OS0KM001.OS0KM-MAP-OPT == 3)
          COMMAREA.CATOAP = "OS0M";
          XSEXIT();
          OS0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
        else
          if (OS0KM001.OS0KM-MAP-OPT == 4)
            COMMAREA.CATOAP = "OS01";
            XSEXIT();
            OS0KM001.VAGen_EZEMSG = COMMAREA.CAMSG;
          end
        end
      end
    end
  end
  ;
  ;
end // end OS0KS-TRNSFR-CNTL

