package os0q;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import os.common.OSRREC;
import os.common.OSSREC;
import os.common.OSWWREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VBASGN01;
//*** PROGRAM=OS0Q ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS0PSSx = select or select set
//    OS0PSNx = select next
//    OS0PSCx = close set
//    OS0PSBx = build record
//    OS0PSLx = load (temp storage load drivers)
//    OS0PSUx = update record
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 04/18/94   SCHASE     Created.
// * 11/29/94   CBRINE     Added OSWW-MSG-NBR to OSWWREC.
// * 12/23/97   KLEE3      Passed need date.
// *********************
Program OS0Q type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OS0QW01 OS0QW01; // record
  OSRREC OSRREC; // record
  OSSREC OSSREC; // record
  OSWWREC OSWWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBASGN01 VBASGN01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OS0QM.OS0QM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0Q000: OS0Q000();
    goto OS0Q010;
    OS0Q010: OS0Q010();
    goto OS0Q010;
  end // end main
end // end OS0Q

// main execute process
Function OS0Q000()
     /* Check csp security*/
  ;
  XSENTRY();
  XSSEGTR();
  ;
     /* Initialize application*/
  ;
  OS0QS-INIT-OS0Q();
     /* Update process for execute*/
  ;
  if (COMMAREA.CAFROMAP == "OM0M") /* came from last appl in flow*/
    OSWWREC.CAMSG = "NEXT BULK ORDER";
    OS0QS-RED-TMP-STOR(); /* read temp storage*/
    OS0QS-UPD-EXECUTE(); /* update temp storage for view*/
  else
    if (COMMAREA.CAFROMAP == "OS0Q") /* restarted itself per paging*/
      OS0QS-RED-TMP-STOR(); /* read temp storage*/
    else
      OS0QS-RED-TMP-STOR(); /* read temp storage*/
      OSWWREC.OSWWTF2P = 1; /* init current page nbr*/
    end
  end
  ;
  ;
  OSWWREC.CAMSG = " "; /* clear message*/
  ;
  OS0QS-BLD-MAP(); /* build map*/
  ;
end // end OS0Q000

// converse/ after process
Function OS0Q010()
  ;
  ;
  converseLib.clearScreen();
   /* set map to scroll properly*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  ;
  converse OS0QM001 ;
  ;
     /* Init error/keys stuff*/
  ;
  OSWWREC.OSWWERFL = "N";
  converseLib.validationFailed(0);
  ;
  ;
     /* Reset field attributes*/
  ;
  OS0QS-RESET-ATTRIB();
  ;
     /* Edit map*/
  ;
  OS0QS-EDT-MAP();
  ;
  ;
     /* Update map*/
  ;
  if (OSWWREC.OSWWERFL == "N")
    OS0QS-UPD-CONVERSE();
  end
  ;
     /* Edit PFKeys*/
  ;
  if (OSWWREC.OSWWERFL == "N")
    OS0QS-SCROLL-PAGE(); /* pf7/pf8 redisplay screen*/
  end
  ;
  OS0QS-TRNSFR-CNTL(); /* transfer to requested application.*/
  ;
  ;
end // end OS0Q010

// Build OS0L Map
Function OS0QS-BLD-MAP()
  ;
  ;
  OS0QS-FMT-HEADINGS(); /* format current date*/
  ;
     /* build bulk assignment array on screen*/
  ;
  OS0QS-GET-VBASGN01(); /* get bulk assignment id and desc*/
  ;
  if (OSWWREC.OSWWERFL == "N")
    OS0QM001.OB-BULK-ASGN-ID = VBASGN01.OB-BULK-ASGN-ID;
    OS0QM001.OB-BULK-ASGN-DESC = VBASGN01.OB-BULK-ASGN-DESC;
  end
  ;
  OSWWREC.OSWWTF2S = 1; /* init subscript*/
  while (OSWWREC.OSWWTF2S <= 12) /* process all 12 rows*/
    OS0QS-LOAD-MAP();
    OSWWREC.OSWWTF2S = OSWWREC.OSWWTF2S + 1;
  end
  OS0QM001.OSWWTF2M = OSWWREC.OSWWTF2M; /* set max page number*/
  ;
  ;
     /* reset field attributes*/
  ;
  OS0QS-RESET-ATTRIB();
  ;
end // end OS0QS-BLD-MAP

// MMDDYY TO COMP - NO VALIDATE
Function OS0QS-CCYYMMDD-MAP()
    /* convert CCYYMMDD date to display MMDDYY for map*/
  ;
  ;
  ;
   /* the calling stmt group must move the CCYYMMDD date*/
   /* to OSWWREC.OSWWDT8 before entering this routine*/
  ;
  if (OSWWREC.OSWWDT8 == 0)
    OSWWREC.OSWWDT6 = 0;
    return;
  end
  ;
  ;
  OSWWREC.OSWWDT6Y = OSWWREC.OSWWDT8Y;
  OSWWREC.OSWWDT6M = OSWWREC.OSWWDT8M;
  OSWWREC.OSWWDT6D = OSWWREC.OSWWDT8D;
  ;
   /* the calling stmt group needs to move*/
   /* OSWWREC.OSWWDT6 to the map field.*/
  ;
end // end OS0QS-CCYYMMDD-MAP

// Edit Map
Function OS0QS-EDT-MAP()
  ;
     /* edit map bottom to top - select codes, page nbr,*/
       /* pf7/pf8, and relational edits for screen*/
  ;
  ;
     /* edit select codes*/
  ;
  OSWWREC.OSWWTF2S = 12; /* init subscript*/
  OS0QW01.OS0QWSEL = "N"; /* init selections made flag*/
  ;
  while (OSWWREC.OSWWTF2S >= 1) /* process all 12 rows*/
    OS0QS-EDT-SELCDS();
    OSWWREC.OSWWTF2S = OSWWREC.OSWWTF2S - 1;
  end
  ;
     /* edit page number*/
  ;
  OS0QS-EDT-PAG-NBR();
  ;
  ;
     /* edit PF7/PF8*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    OS0QS-EDT-PAGING();
  end
  ;
  ;
     /* edit selection flag*/
  ;
  if (OSWWREC.OSWWERFL == "N") /* no errors found to this point*/
    if (OS0QM001.OS0QM-BULK-ORD[1] != " ")
      OS0QS-EDT-NO-SEL();
    end
  end
  ;
end // end OS0QS-EDT-MAP

// Edit For No Selections
Function OS0QS-EDT-NO-SEL()
  ;
  ;
     /* if nothing selected, display error*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || OS0QM001.OSWWTF2P != OSWWREC.OSWWTF2P) /* page nbr chgd*/
    if (OS0QW01.OS0QWSEL == "Y") /* selections made*/
      converseLib.validationFailed(826); /* cant page and select*/
      OSWWREC.OSWWERFL = "Y"; /* err flag*/
      OS0QM001.OSWWTF2P = OSWWREC.OSWWTF2P; /* reset with original*/
      set OS0QM001.OSWWTF2P cursor, bold;
    end
    ;
  else
    if (OS0QW01.OS0QWSEL == "N") /* not paging and no selections made*/
      converseLib.validationFailed(273); /* no selections made*/
      OSWWREC.OSWWERFL = "Y"; /* err flag*/
    end
  end
  ;
end // end OS0QS-EDT-NO-SEL

// Edit Page Number
Function OS0QS-EDT-PAG-NBR()
  ;
  ;
  if (OS0QM001.OSWWTF2P > OS0QM001.OSWWTF2M /* changed page number*/
   || OS0QM001.OSWWTF2P < 1)               
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(603); /* page number must be between 1 and last page #*/
    set OS0QM001.OSWWTF2P cursor, bold;
    OS0QM001.OSWWTF2P = OSWWREC.OSWWTF2P; /* reset page number*/
  end
  ;
  ;
end // end OS0QS-EDT-PAG-NBR

// Edit PF7/PF8 and Page Nbr Chg
Function OS0QS-EDT-PAGING()
  ;
  if (converseVar.eventKey is pf7
   && OS0QM001.OSWWTF2P == 1) /* at first page*/
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(643); /* cant scroll backward*/
  end
  ;
  ;
  if (converseVar.eventKey is pf8
   && OS0QM001.OSWWTF2P >= OSWWREC.OSWWTF2M) /* at max page*/
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(644); /* cant scroll forward*/
  end
  ;
  ;
  if (OS0QM001.OSWWTF2P != OSWWREC.OSWWTF2P) /* pf7/pf8 and pg chg*/
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(597); /* cant scroll and chg pg number*/
    set OS0QM001.OSWWTF2P cursor, bold;
    OS0QM001.OSWWTF2P = OSWWREC.OSWWTF2P; /* reset page number*/
  end
  ;
  ;
end // end OS0QS-EDT-PAGING

// Edit Select Codes
Function OS0QS-EDT-SELCDS()
  ;
    /* compare select codes on screen with temp storage,*/
      /* if they are equal - OK*/
    /* if user entered ' ' or 'S'  -  OK*/
      /* other select options are errors.*/
  ;
  if (OSSREC.OSSMSEL[OSWWTF2S] == OS0QM001.OS0QM-SEL-CD[OSWWTF2S])
     /* next sentence*/
  else
    if (OS0QM001.OS0QM-SEL-CD[OSWWTF2S] == " " /* blank*/
     || OS0QM001.OS0QM-SEL-CD[OSWWTF2S] == "S" /* selection made*/
     || OS0QM001.OS0QM-SEL-CD[1] == "A")       /* select all*/
       /* next sentence*/
    else
      OSWWREC.OSWWERFL = "Y"; /* set err flag*/
      converseLib.validationFailed(838); /* select option invalid - enter 's'*/
      set OS0QM001.OS0QM-SEL-CD[OSWWTF2S] cursor, bold;
    end
  end
  ;
  if (OS0QM001.OS0QM-SEL-CD[OSWWTF2S] == "S" /* selection made*/
   || OS0QM001.OS0QM-SEL-CD[1] == "A")       /* select all*/
    OS0QW01.OS0QWSEL = "Y"; /* set select flag*/
  end
  ;
  ;
end // end OS0QS-EDT-SELCDS

// Format OS0L Map Headings
Function OS0QS-FMT-HEADINGS()
  ;
  ;
  OS0QM001.OS0QM-MAP-DTE = OSWWREC.OSWWCDAT; /* formatted current date*/
  ;
  OS0QM001.OS0QM-MAP-RVN = 01;
  ;
  OS0QM001.OSWWTF2P = OSWWREC.OSWWTF2P;
  OS0QM001.OSWWTF2M = OSWWREC.OSWWTF2M;
  ;
end // end OS0QS-FMT-HEADINGS

// Get VBASGN01 VIA IO0000
Function OS0QS-GET-VBASGN01()
  ;
  ;
  set SQLCA empty;
  set VBASGN01 empty;
  ;
  VBASGN01.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  OS0QW01.OS0QW-VBASGN01-POST = OSWWREC.OB-BULK-ASGN-ID;
  ;
  call "IO7200" ("S ", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OS0P    ";
    TA1REC.TA1LOCAT[1] = "OS0QS-GE";
    TA1REC.TA1LOCAT[2] = "T-VBASGN";
    TA1REC.TA1LOCAT[3] = "01 IO720";
    TA1REC.TA1LOCAT[4] = "0 S     ";
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBASGN01";
    TA1REC.TA1TBLKE = OS0QW01.OS0QW-VBASGN01-POST;
    ;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    ;
    COMMAREA.CAUSERA = " ";
    ;
    XSPF4();
    exit program;
  end
  ;
  ;
end // end OS0QS-GET-VBASGN01

// Initialize OS0L Application
Function OS0QS-INIT-OS0Q()
  ;
  set OSSREC empty; /* temp storage record*/
  set SQLCA empty; /* return code from DB2*/
  set TA1REC empty; /* diagnostic record*/
  set TA5REC empty; /* temp storage io- record*/
  set OSWWREC empty; /* common working storage*/
  set OS0QW01 empty; /* working storage*/
  ;
  TA1REC.TA1MAP = "OS0QM001"; /* map name for diags*/
  COMMAREA.CACURRAP = "OS0Q"; /* format curr appl name*/
  ;
  OSWWREC.OSWWGRP = COMMAREA.CAUSERA;
  ;
  if (OSWWREC.OSWWINIT != "OS0K")
    transfer to program "OS0K" passing COMMAREA;
    exit program;
  end
  ;
  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate; /* format current date*/
  ;
  ;
end // end OS0QS-INIT-OS0Q

// Build/Load Bulk Asgnmnt Array
Function OS0QS-LOAD-MAP()
  ;
     /* move fields from osrrec to screen*/
  ;
  OS0QM001.OS0QM-SEL-CD[OSWWTF2S] = OSSREC.OSSMSEL[OSWWTF2S];
  ;
  OS0QW01.OS0QW-OP1CUOID = 0;
  OS0QW01.OS0QW-OP1NORID = 0;
  ;
  OS0QW01.OS0QW-OP1CUOID = OSSREC.OSS-OP1CUOID[OSWWTF2S];
  OS0QW01.OS0QW-PERIOD1 = ".";
  OS0QW01.OS0QW-OP1NORID = OSSREC.OSS-OP1NORID[OSWWTF2S];
  ;
  OS0QM001.OS0QM-BULK-ORD[OSWWTF2S] = OS0QW01.OS0QW-BULK-ORD;
  ;
  OS0QM001.OP1CUPO[OSWWTF2S] = OSSREC.OSS-OP1CUPO[OSWWTF2S];
  ;
  OS0QW01.OS0QW-KUCCOID = 0;
  OS0QW01.OS0QW-KUMSTRID = 0;
  OS0QW01.OS0QW-XNXCD = 0;
  ;
  OS0QW01.OS0QW-KUCCOID = OSSREC.OSS-KUCCOID[OSWWTF2S];
  OS0QW01.OS0QW-PERIOD2 = ".";
  OS0QW01.OS0QW-KUMSTRID = OSSREC.OSS-KUMSTRID[OSWWTF2S];
  OS0QW01.OS0QW-PERIOD3 = ".";
  OS0QW01.OS0QW-DEPT-GRP = OSSREC.OSS-XNXCD[OSWWTF2S];
  OS0QW01.OS0QW-DEPT-FIRST = OS0QW01.OS0QW-DEPT-SECOND;
  OS0QW01.OS0QW-DEPT-SECOND = 0;
  OS0QW01.OS0QW-XNXCD = OS0QW01.OS0QW-DEPT-GRP;
  ;
  OS0QM001.OS0QM-CUST-STRING[OSWWTF2S] = OS0QW01.OS0QW-CUST-STRING;
  ;
  OSWWREC.OSWWDT8 = OSSREC.OSS-OP1CUNDT[OSWWTF2S];
  OS0QS-CCYYMMDD-MAP();
  OS0QM001.OP1CUNDT[OSWWTF2S] = OSWWREC.OSWWDT6;
  ;
  OS0QM001.OP1OTUNT[OSWWTF2S] = OSSREC.OSS-OP1OTUNT[OSWWTF2S];
  OS0QM001.OB-GPC-CODE[OSWWTF2S] = OSSREC.OSS-GPC-CD[OSWWTF2S];
  OS0QM001.XOBCD[OSWWTF2S] = OSSREC.OSS-XOBCD[OSWWTF2S];
  OS0QM001.XOSCD[OSWWTF2S] = OSSREC.OSS-XOSCD[OSWWTF2S];
  ;
  ;
end // end OS0QS-LOAD-MAP

// Non-DB2 Post Routine TA0020
Function OS0QS-POST-NO-ROLL()
       /* Non-DB2 post routine*/
  ;
  ;
   /* the following fields will be filled in by the*/
   /* calling stmt group before entering this routine*/
     /* ta1locat(1) = transaction type  ie: 'ss' 'sn'*/
     /* ta1locat(2) = i/o mod name*/
     /* ta1locat(3) = calling stmt group name*/
     /* ta1locat(4) = programmers option(extra key data)*/
     /* taerec.taedesc1 = programmers opiton (additional key data*/
     /* taerec.taedesc2 = messages*/
     /* ta1map = appl's mapname and should be initilized*/
              /* in the programs init process.*/
   /* return code processing will also be handled by the*/
   /* calling stmt group.*/
  ;
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "POST";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  TA1REC.TA1TBLKE = OS0QW01.OS0QW-POST-KEY; /* move system key*/
  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end
  ;
end // end OS0QS-POST-NO-ROLL

// Purge Bulk Asgnmnt Temp Storag
Function OS0QS-PRG-TMP-STOR()
  ;
  ;
  ;
   /* purge temporary storage 2*/
  ;
  TA5REC.TA5APPID = "OSFQ"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSSREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    OSWWREC.OSWWTF2P = 1;
    OSWWREC.OSWWTF2S = 1;
    OSWWREC.OSWWTF2M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS2";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSSREC.OSSTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0QS-POST-NO-ROLL(); /* post,  no rollback, non db2*/
    ;
    ;
  end
end // end OS0QS-PRG-TMP-STOR

// Purge Bulk Asgnmnt Temp Storag
Function OS0QS-PRG-TMP-STR1()
  ;
  ;
  ;
   /* purge temporary storage 2*/
  ;
  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    OSWWREC.OSWWTF1P = 1;
    OSWWREC.OSWWTF1S = 1;
    OSWWREC.OSWWTF1M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSRREC.OSRTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0QS-POST-NO-ROLL(); /* post,  no rollback, non db2*/
    ;
    ;
  end
end // end OS0QS-PRG-TMP-STR1

// Read Bulk Asgnmnt Temp Storage
Function OS0QS-RED-TMP-STOR()
  ;
  ;
  ;
   /* read temporary storage 2*/
  ;
  set OSSREC empty;
  ;
  TA5REC.TA5APPID = "OSFQ"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = OSWWREC.OSWWTF2P; /* current page*/
  OSSREC.OSSTSLEN = 964; /* length of record*/
  ;
  call "TA0050" (OSSREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "READ TS2";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSSREC.OSSTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0QS-POST-NO-ROLL(); /* post, no rollback, non db2 diags*/
    ;
    ;
  end
end // end OS0QS-RED-TMP-STOR

// Reset Array Attributes
Function OS0QS-RESET-ARRAY()
  ;
     /* set select fields defined*/
  ;
  set OS0QM001.OS0QM-SEL-CD[OSWWTF2S] initialAttributes;
  set OS0QM001.OS0QM-BULK-ORD[OSWWTF2S] initialAttributes;
  set OS0QM001.OP1CUPO[OSWWTF2S] initialAttributes;
  set OS0QM001.OS0QM-CUST-STRING[OSWWTF2S] initialAttributes;
  set OS0QM001.OP1CUNDT[OSWWTF2S] initialAttributes;
  set OS0QM001.OP1OTUNT[OSWWTF2S] initialAttributes;
  set OS0QM001.OB-GPC-CODE[OSWWTF2S] initialAttributes;
  set OS0QM001.XOBCD[OSWWTF2S] initialAttributes;
  set OS0QM001.XOSCD[OSWWTF2S] initialAttributes;
  ;
  ;
     /* set select fields dark if line is empty*/
  ;
  if (OSSREC.OSS-OP1CUOID[OSWWTF2S] == 0) /* no bulk order*/
    set OS0QM001.OS0QM-SEL-CD[OSWWTF2S] skip, invisible;
    set OS0QM001.OS0QM-BULK-ORD[OSWWTF2S] skip, invisible;
    set OS0QM001.OP1CUPO[OSWWTF2S] skip, invisible;
    set OS0QM001.OS0QM-CUST-STRING[OSWWTF2S] skip, invisible;
    set OS0QM001.OP1CUNDT[OSWWTF2S] skip, invisible;
    set OS0QM001.OP1OTUNT[OSWWTF2S] skip, invisible;
    set OS0QM001.XOBCD[OSWWTF2S] skip, invisible;
    set OS0QM001.XOSCD[OSWWTF2S] skip, invisible;
  end
  ;
  ;
end // end OS0QS-RESET-ARRAY

// Reset Field Attributes
Function OS0QS-RESET-ATTRIB()
  ;
     /* set heading attributes*/
  ;
  set OS0QM001.OSWWTF2P cursor, initialAttributes; /* page number*/
  ;
  ;
     /* reset bulk assignment array attributes*/
  ;
  OSWWREC.OSWWTF2S = 12; /* init subscript*/
  ;
  while (OSWWREC.OSWWTF2S >= 1) /* process all 12 rows*/
    OS0QS-RESET-ARRAY(); /* set askip if '*' on select, set unused dark*/
    OSWWREC.OSWWTF2S = OSWWREC.OSWWTF2S - 1;
  end
  ;
  if (OS0QM001.OS0QM-BULK-ORD != " ") /* atleast one bulk assignment*/
    set OS0QM001.OS0QM-SEL-CD[1] cursor; /* position cursor*/
  end
  ;
  ;
end // end OS0QS-RESET-ATTRIB

// OS SYSTEM - dxfr to OS0L
Function OS0QS-RESTART-OS0Q()
  ;
   /* Application will transfer to itself*/
  ;
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  COMMAREA.CAFROMAP = "OS0Q";
  sysVar.transferName = COMMAREA.CACURRAP;
  transfer to program sysVar.transferName passing COMMAREA;
  ;
end // end OS0QS-RESTART-OS0Q

// Scroll Forward/Backward
Function OS0QS-SCROLL-PAGE()
  ;
       /* edit pf7/pf8 and enter for next os0l map display*/
  ;
  if (converseVar.eventKey is pf7)
    OSWWREC.OSWWTF2P = OSWWREC.OSWWTF2P - 1; /* prior page*/
  else
    if (converseVar.eventKey is pf8)
      OSWWREC.OSWWTF2P = OSWWREC.OSWWTF2P + 1; /* next page*/
    else
      if (converseVar.eventKey is enter
       && OS0QM001.OSWWTF2P != OSWWREC.OSWWTF2P) /* page nbr changed*/
        OSWWREC.OSWWTF2P = OS0QM001.OSWWTF2P; /* move map pg to rec*/
        OS0QS-RESTART-OS0Q(); /* restart application*/
      end
    end
  end
  ;
end // end OS0QS-SCROLL-PAGE

// Transfer Control to Appls
Function OS0QS-TRNSFR-CNTL()
  ;
  ;
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  if (converseVar.eventKey is pf3)
    OS0QS-PRG-TMP-STOR(); /* purge temp storage - bulk ords*/
    ;
    if (OSWWREC.OSWW-FROM-PGM == "OS05")
      COMMAREA.CATOAP = "OS05"; /* define bulk asgnmnts scrn*/
    else
      COMMAREA.CATOAP = "OS0P"; /* define bulk asgnmnts scrn*/
    end
    XSEXIT();
  end
  ;
  if (converseVar.eventKey is pf4)
    if (OSWWREC.OSWWFRMAP == "OS0L") /* orig within os0l temp storage*/
      OS0QS-PRG-TMP-STR1(); /* purge os0l temp storage*/
    end
    OS0QS-PRG-TMP-STOR(); /* purge temp storage - bulk ords*/
    COMMAREA.CAUSERA = " "; /* clear causera for fastpathing*/
    ;
    XSPF4();
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (OSWWREC.OSWWERFL == "N")
      OS0QS-RESTART-OS0Q(); /* restarts application*/
    end
  end
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
  ) /* next sentence - there may be errors*/
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    OSWWREC.OSWWERFL = "Y"; /* set 'OS' error flag*/
  end
  ;
  ;
end // end OS0QS-TRNSFR-CNTL

// Update For Converse
Function OS0QS-UPD-CONVERSE()
  ;
      /* move all selections from map to temp storage*/
      /* then process first selection using temp storage*/
  ;
      /* commented out os0qs-sel-all per user request not to*/
      /* program this option at this time.*/
  ;
   /* OS0QS-SEL-ALL;                    /* check for 'all' selection*/
  ;
  OSWWREC.OSWWTF2S = 1; /* init subscript*/
  while (OSWWREC.OSWWTF2S <= 12) /* max orders per page*/
    OSSREC.OSSMSEL[OSWWTF2S] = OS0QM001.OS0QM-SEL-CD[OSWWTF2S];
    OSWWREC.OSWWTF2S = OSWWREC.OSWWTF2S + 1;
  end
  ;
  OS0QS-UPD-TMP-STOR(); /* update temp storage with selections*/
  ;
  if (OS0QW01.OS0QWSEL == "Y") /* selection was made*/
    OSWWREC.OSWWTF2S = 1; /* init subscript*/
    while (OSWWREC.OSWWTF2S <= 11) /* max orders per page*/
      if (OSSREC.OSSMSEL[OSWWTF2S] == "S") /* bulk assignment selected*/
        OS0QS-UPD-EXECUTE(); /* main update*/
        return; /* get out with current subscript*/
      end
      OSWWREC.OSWWTF2S = OSWWREC.OSWWTF2S + 1;
    end
  end
  ;
end // end OS0QS-UPD-CONVERSE

// Main Update For Each Selection
Function OS0QS-UPD-EXECUTE()
  ;
  OSWWREC.OSWWTF2S = 1; /* init subscript*/
  ;
  while (OSWWREC.OSWWTF2S <= 12) /* check all 12 bulk asgnmnts*/
    if (OSSREC.OSSMSEL[OSWWTF2S] == "S")
     /* MOVE 'V' TO OSSREC.OSSMSEL(OSWWTF2S);   /* update as viewed*/
     /* OS0QS-UPD-TMP-STOR;                     /* update temp storage*/
     /* Prior two lines are commented out for now, but will be used in the*/
     /* future when code is added to Order Maintenance to walk OSFQ temp*/
     /* storage.  This feature is not being installed at this time.*/
     /* **************************************************************/
   /* OS0QS-PRG-TMP-STOR;                     /* purge temp storage for now*/
     /* **************************************************************/
     /* The purge of temp storage is only doing house cleaning for now*/
     /* but, will must be removed when the full OSFQ features are installd*/
      if (OSWWREC.OSWWFRMAP == "OS0L") /* within OS0L TS Loop*/
        OS0QS-PRG-TMP-STR1(); /* purge OS0L temp storage*/
      end
     /* The purge of temp storage is only doing house cleaning for OS0L*/
     /* because control will not return to the 'OS' applications.*/
      OSWWREC.OP1CUOID = OSSREC.OSS-OP1CUOID[OSWWTF2S];
      OSWWREC.OP1NORID = OSSREC.OSS-OP1NORID[OSWWTF2S];
      COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
      COMMAREA.CAFROMAP = "OS0Q";
      COMMAREA.CATOAP = "OM0M";
      XSEXIT();
    end
    OSWWREC.OSWWTF2S = OSWWREC.OSWWTF2S + 1;
  end
  ;
  ;
end // end OS0QS-UPD-EXECUTE

// Update Bulk Asgnmnt Temp Stora
Function OS0QS-UPD-TMP-STOR()
  ;
  ;
  ;
   /* update temporary storage 1*/
  ;
  TA5REC.TA5APPID = "OSFQ"; /* appl identification*/
  TA5REC.TA5FNCCD = "U"; /* function code*/
  TA5REC.TA5TSQIX = OSWWREC.OSWWTF2P; /* current page*/
  OSSREC.OSSTSLEN = 964; /* length of record*/
  ;
  call "TA0050" (OSSREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "UPD TS2";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSSREC.OSSTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0QS-POST-NO-ROLL(); /* post, no rollback, non db2*/
    ;
    ;
  end
end // end OS0QS-UPD-TMP-STOR

//*** RECORD=OS0QW01 ****
//     Working Storage Record for OS0L.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   05/02/94    schase     initial creation
// ***********************
Record OS0QW01 type basicRecord
  10 OS0QWSEL OS0QWSEL ; 
  10 OS0QWERR OS0QWERR ; 
  10 OS0QWEOF OS0QWEOF ; 
  10 OS0QW-BULK-ORD OS0QW-BULK-ORD ; 
    15 OS0QW-OP1CUOID OS0QW-OP1CUOID ; 
    15 OS0QW-PERIOD1 OS0QW-PERIOD1 ; 
    15 OS0QW-OP1NORID OS0QW-OP1NORID ; 
  10 OS0QW-CUST-STRING OS0QW-CUST-STRING ; 
    15 OS0QW-KUCCOID OS0QW-KUCCOID ; 
    15 OS0QW-PERIOD2 OS0QW-PERIOD2 ; 
    15 OS0QW-KUMSTRID OS0QW-KUMSTRID ; 
    15 OS0QW-PERIOD3 OS0QW-PERIOD3 ; 
    15 OS0QW-XNXCD OS0QW-XNXCD ; 
  10 OS0QW-DEPT-GRP OS0QW-DEPT-GRP ; 
    15 OS0QW-DEPT-FIRST OS0QW-DEPT-FIRST ; 
    15 OS0QW-DEPT-SECOND OS0QW-DEPT-SECOND ; 
  10 OS0QW-VBASGN01-POST OS0QW-VBASGN01-POST ; 
  10 OS0QW-POST-KEY OS0QW-POST-KEY ; 
  10 OS0QW-OB-NEED-BULK-BDT OS0QW-OB-NEED-BULK-BDT ; 
  10 OS0QW-OB-NEED-BULK-XDT OS0QW-OB-NEED-BULK-XDT ; 
end // end OS0QW01

// bulk order number
DataItem OS0QW-BULK-ORD char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer string
DataItem OS0QW-CUST-STRING char(19)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xnx-dept-id-xref
DataItem OS0QW-DEPT-FIRST num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xnx-dept-id-xref
DataItem OS0QW-DEPT-GRP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xnx-dept-id-xref
DataItem OS0QW-DEPT-SECOND num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cu-co-id
DataItem OS0QW-KUCCOID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cu-stor-id
DataItem OS0QW-KUMSTRID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem OS0QW-OB-NEED-BULK-BDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem OS0QW-OB-NEED-BULK-XDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem OS0QW-OP1CUOID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-nike-ord-id
DataItem OS0QW-OP1NORID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// '.'
DataItem OS0QW-PERIOD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// '.'
DataItem OS0QW-PERIOD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// '.'
DataItem OS0QW-PERIOD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-cust-ord-id
DataItem OS0QW-POST-KEY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ob-bulk-asgn-id
DataItem OS0QW-VBASGN01-POST char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xnx-dept-id-xref
DataItem OS0QW-XNXCD num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage end of file
DataItem OS0QWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage error flag
DataItem OS0QWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection made flag
DataItem OS0QWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

