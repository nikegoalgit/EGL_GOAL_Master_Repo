package os0j;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import op.common.*;
import sy.common.SY4REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VMSRCD01;
import xx.common.*;
import xx.common.XGPCD;
import xx.common.XXXSTAT;
import xx02.*;
import xx02.XGCCD;
import xx02.XGCTBL;
import xx02.XGPTBL;
import xx07.*;
import xx07.SY4SZSCL;
//*** PROGRAM=OS0J ****
// this transaction is for browsing musical size run
// information.
// 
// ************************************************************
//              Maintenace History
// -----------------------------------------------------------
//   Date      Who     Reason
// -----------------------------------------------------------
// 01/31/94   dmeier   install
// 04/06/94   schase   Changed os0j020 to interface with OP0X
//                     Appl.
// 02/05/96   mmcgol   Changed os0js-scroll-frwd and os0js-
//                     scroll-back to correct scrolling problem
// *********************
Program OS0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OS0JW01 OS0JW01; // record
  OS0JW02 OS0JW02; // record
  SQLCA SQLCA; // record
  SY4REC SY4REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VMSRCD01 VMSRCD01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGCTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use OS0JM.OS0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0J001: OS0J001();


    goto OS0J005;


    OS0J005: OS0J005();


    goto OS0J005;


  end // end main
end // end OS0J

// BROWSE MSR INITIALIZE
Function OS0J001()


  XSENTRY(); /* check security*/
  XSSEGTR(); /* get seg tranid*/

  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";

  converseLib.clearScreen();
  set OS0JM001 initial; /* initialize maps*/

  set VMSRCD01 empty; /* initialize ws records*/
  set SY4REC empty;
  set OS0JW01 empty;

  OS0JS-BLD-MSR-TBLE(); /* build msr table*/
  OS0JS-LOAD-BRS-MAP(); /* load browse array to map*/


end // end OS0J001

// BROWSE MSR MAINLINE
Function OS0J005()


  OS0J010(); /* converse os0jm os0jm001*/

  if (converseVar.eventKey is pf3 /* xfer to prev appl*/
   || converseVar.eventKey is pf4 /* xfer to main*/
   || converseVar.eventKey is pf5 /* xfer to maint msr (add)*/
   || OS0JM001.CATOAP != " ")     /* xfer to requested appl*/
    OS0J020(); /* perform exit routine*/
  else
    if (converseVar.eventKey is enter /* continue*/
     || converseVar.eventKey is pf7   /* scroll back*/
     || converseVar.eventKey is pf8)  /* scroll frwd*/
      OS0J030(); /* edit os0jm os0jm001*/
    else
      converseLib.validationFailed(2); /* invalid pf key*/
    end
  end


end // end OS0J005

// CONVERSE BROWSE MAP
Function OS0J010()


  if (OS0JW01.OS0JW-NEW-MAP-FL == "Y")
    OS0JW01.OS0JW-NEW-MAP-FL = "N";

    OS0JS-LOAD-BRS-MAP(); /* load msr data*/
  end


  converse OS0JM001 ;


  OS0JW02.OS0JW-MAP-SUB = 12;
  while (OS0JW02.OS0JW-MAP-SUB >= 1)
    if (OS0JM001.OP-MSC-SZ-RUN-CD[OS0JW-MAP-SUB] != " ")
      set OS0JM001.OS0JM-SEL-CD[OS0JW-MAP-SUB] cursor, normal;
    else
      set OS0JM001.OS0JM-SEL-CD[OS0JW-MAP-SUB] skip, invisible;
    end

    OS0JW02.OS0JW-MAP-SUB = OS0JW02.OS0JW-MAP-SUB - 1;
  end

  set OS0JM001.CATOAP cursor, normal;
  set OS0JM001.CAITEM normal;


end // end OS0J010

// EARLY EXIT ROUTINE
Function OS0J020()


  if (OS0JM001.CATOAP == " ") /* nothing in to appl*/
                                  /* continue*/
  else
    if (converseVar.eventKey is enter) /* user pressed enter key*/
                                  /* continue*/
    else
      set OS0JM001.CATOAP cursor, bold;
      converseLib.validationFailed(2);
      return;
    end
  end

  if (converseVar.eventKey is pf3) /* xfer to op menu*/
    COMMAREA.CATOAP = "OP0X";
  else
    if (converseVar.eventKey is pf4) /* xfer to main menu*/
      COMMAREA.CATOAP = "MN0M";
    else
      if (converseVar.eventKey is pf5) /* xfer to add msr code*/
        COMMAREA.CATOAP = "OS0I";
      else /* xfer to requested appl*/
        COMMAREA.CATOAP = OS0JM001.CATOAP;
        COMMAREA.CAITEM = OS0JM001.CAITEM;
      end
    end
  end

  XSEXIT();

  OS0JM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  COMMAREA.CAMSG = " ";
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";


end // end OS0J020

// VALIDATE BROWSE MAP
Function OS0J030()


  OS0JW02.OS0JW-SEL-FL = "N";

  OS0JS-EDIT-SEL-CD();

  if (converseVar.eventKey is pf7)
    OS0JS-SCROLL-BACK();
  else
    if (converseVar.eventKey is pf8)
      OS0JS-SCROLL-FRWD();
    else
      if (OS0JW02.OS0JW-SEL-FL == "Y"
       && OS0JW01.OS0JW-ERR-FL == "N")
        COMMAREA.CATOAP = "OS0I";
        COMMAREA.CAITEM = OS0JW01.OP-MSC-SZ-RUN-CD;

        XSEXIT();

        OS0JM001.VAGen_EZEMSG = COMMAREA.CAMSG;
        COMMAREA.CAMSG = " ";
        COMMAREA.CATOAP = " ";
        COMMAREA.CAITEM = " ";
      end
    end
  end


end // end OS0J030

// build msr table
Function OS0JS-BLD-MSR-TBLE()


  set OS0JW02 empty; /* initialize browse array*/

  OS0JW02.OS0JW-MSR-POS = 0; /* set start array position*/
  OS0JW02.OS0JW-MSR-LST = 0; /* set last array position*/
  OS0JW02.OS0JW-MSR-CNT = 0; /* set msr record counter*/
  OS0JW02.OS0JW-MSR-SUB = 1; /* set array subscript*/
  OS0JW02.OS0JW-EOF-FL = "N"; /* set end of file flag*/

  OS0JS-OPN-VMSRCD01(); /* open vmsrcd01 cursor*/
  OS0JS-NXT-VMSRCD01(); /* select next msr code*/

  while (OS0JW02.OS0JW-MSR-SUB <= 120
   && OS0JW02.OS0JW-EOF-FL == "N")
    OS0JS-LOAD-MSR-ROW(); /* load msr table row*/
    OS0JS-NXT-VMSRCD01(); /* select next msr code*/
  end

  OS0JS-CLS-VMSRCD01(); /* close vmsrcd01 cursor*/


end // end OS0JS-BLD-MSR-TBLE

// close vmsrcd01 cursor
Function OS0JS-CLS-VMSRCD01()


  set SQLCA empty;
  set VMSRCD01 empty;

  call "IO7040" ("C1", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OS0J";
    TA1REC.TA1LOCAT[1] = "OS0JS-CL";
    TA1REC.TA1LOCAT[2] = "S-VMSRCD";
    TA1REC.TA1LOCAT[3] = "01      ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VMSRCD01";
    TA1REC.TA1TBLKE = " ";

    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

    COMMAREA.CAUSERA = " ";

    XSPF4();
    exit program;
  end


end // end OS0JS-CLS-VMSRCD01

// edit selection code
Function OS0JS-EDIT-SEL-CD()


  OS0JW01.OP-MSC-SZ-RUN-CD = " ";
  OS0JW01.OS0JW-ERR-FL = "N";
  OS0JW02.OS0JW-MAP-SUB = 1;

  while (OS0JW02.OS0JW-MAP-SUB <= 12
   && OS0JW02.OS0JW-SEL-FL == "N")
    if (OS0JM001.OS0JM-SEL-CD[OS0JW-MAP-SUB] == " ")
      OS0JW02.OS0JW-MAP-SUB = OS0JW02.OS0JW-MAP-SUB + 1;
    else
      OS0JW01.OP-MSC-SZ-RUN-CD = OS0JM001.OP-MSC-SZ-RUN-CD[OS0JW-MAP-SUB];
      OS0JW02.OS0JW-SEL-FL = "Y";

      OS0JW01.OS0JW-SUB = OS0JW02.OS0JW-MAP-SUB + 1;
      while (OS0JW01.OS0JW-SUB <= 12)
        if (OS0JM001.OS0JM-SEL-CD[OS0JW-SUB] != " ")
          set OS0JM001.OS0JM-SEL-CD[OS0JW-MAP-SUB] bold;
          set OS0JM001.OS0JM-SEL-CD[OS0JW-SUB] bold;
          OS0JW01.OS0JW-ERR-FL = "Y";
        end

        OS0JW01.OS0JW-SUB = OS0JW01.OS0JW-SUB + 1;
      end
    end
  end


end // end OS0JS-EDIT-SEL-CD

// load msr browse map
Function OS0JS-LOAD-BRS-MAP()


  converseLib.clearScreen();
  set OS0JM001 initial;

  OS0JM001.OS0JM-MAP-RVN = "01";
  OS0JM001.OS0JM-MAP-DTE = VGVar.currentShortGregorianDate;

  OS0JW02.OS0JW-MAP-SUB = 12;
  while (OS0JW02.OS0JW-MAP-SUB >= 1)
    OS0JW02.OS0JW-MSR-SUB = OS0JW02.OS0JW-MSR-POS + OS0JW02.OS0JW-MAP-SUB;

    if (OS0JW02.OP-MSC-SZ-RUN-CD[OS0JW-MSR-SUB] != " ")
      set OS0JM001.OS0JM-SEL-CD[OS0JW-MAP-SUB] cursor, normal;

      OS0JM001.OP-MSC-SZ-RUN-CD[OS0JW-MAP-SUB] = OS0JW02.OP-MSC-SZ-RUN-CD[OS0JW-MSR-SUB];
      OS0JM001.OP-MSC-SZ-RUN-DESC[OS0JW-MAP-SUB] = OS0JW02.OP-MSC-SZ-RUN-DESC[OS0JW-MSR-SUB];
      OS0JM001.OP-MSC-CRTN-RTO[OS0JW-MAP-SUB] = OS0JW02.OP-MSC-CRTN-RTO[OS0JW-MSR-SUB];
      OS0JM001.SY4SZSCL[OS0JW-MAP-SUB] = OS0JW02.SY4SZSCL[OS0JW-MSR-SUB];
      OS0JM001.XXXSTAT[OS0JW-MAP-SUB] = OS0JW02.XXXSTAT[OS0JW-MSR-SUB];

      if (OS0JW02.XGPCD[OS0JW-MSR-SUB] != " ")
        sysVar.arrayIndex = 1;
        if (OS0JW02.XGPCD[OS0JW-MSR-SUB] in XGPTBL.XGPCD from sysVar.arrayIndex)
          OS0JM001.XGPABRV[OS0JW-MAP-SUB] = XGPTBL.XGPABRV[sysVar.arrayIndex];
        else
          OS0JM001.XGPABRV[OS0JW-MAP-SUB] = "UNKNWN";
        end

      else
        OS0JM001.XGPABRV[OS0JW-MAP-SUB] = " ";
      end

      if (OS0JW02.XGCCD[OS0JW-MSR-SUB] != " ")
        sysVar.arrayIndex = 1;
        if (OS0JW02.XGCCD[OS0JW-MSR-SUB] in XGCTBL.XGCCD from sysVar.arrayIndex)
          OS0JM001.XGCABRV[OS0JW-MAP-SUB] = XGCTBL.XGCABRV[sysVar.arrayIndex];
        else
          OS0JM001.XGCABRV[OS0JW-MAP-SUB] = "UNKNWN";
        end
      end

    else
      OS0JM001.XGCABRV[OS0JW-MAP-SUB] = " ";
    end

    OS0JW02.OS0JW-MAP-SUB = OS0JW02.OS0JW-MAP-SUB - 1;
  end


end // end OS0JS-LOAD-BRS-MAP

// load msr table row
Function OS0JS-LOAD-MSR-ROW()


  OS0JW02.OS0JW-MSR-CNT = OS0JW02.OS0JW-MSR-CNT + 1;

  if (OS0JW02.OS0JW-MSR-CNT > OS0JW01.OS0JW-MSR-CNT)
    OS0JW02.OP-MSC-SZ-RUN-CD[OS0JW-MSR-SUB] = VMSRCD01.OP-MSC-SZ-RUN-CD;
    OS0JW02.OP-MSC-SZ-RUN-DESC[OS0JW-MSR-SUB] = VMSRCD01.OP-MSC-SZ-RUN-DESC;
    OS0JW02.OP-MSC-CRTN-RTO[OS0JW-MSR-SUB] = VMSRCD01.OP-MSC-CRTN-RTO;
    OS0JW02.XGPCD[OS0JW-MSR-SUB] = VMSRCD01.XGPCD;
    OS0JW02.XGCCD[OS0JW-MSR-SUB] = VMSRCD01.XGCCD;
    OS0JW02.SY4SZSCL[OS0JW-MSR-SUB] = VMSRCD01.SY4SZSCL;
    OS0JW02.XXXSTAT[OS0JW-MSR-SUB] = VMSRCD01.XXXSTAT;

    OS0JW02.OS0JW-MSR-SUB = OS0JW02.OS0JW-MSR-SUB + 1;
    OS0JW02.OS0JW-MSR-LST = OS0JW02.OS0JW-MSR-LST + 1;
  end


end // end OS0JS-LOAD-MSR-ROW

// select next msr code
Function OS0JS-NXT-VMSRCD01()


  set SQLCA empty;

  call "IO7040" ("N1", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OS0JW02.OS0JW-EOF-FL = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0J";
      TA1REC.TA1LOCAT[1] = "OS0JS-NX";
      TA1REC.TA1LOCAT[2] = "T-VMSRCD";
      TA1REC.TA1LOCAT[3] = "01      ";
      TA1REC.TA1LOCAT[4] = "        ";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VMSRCD01";
      TA1REC.TA1TBLKE = " ";

      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

      COMMAREA.CAUSERA = " ";

      XSPF4();
      exit program;
    end
  end


end // end OS0JS-NXT-VMSRCD01

// open vmsrcd01 cursor
Function OS0JS-OPN-VMSRCD01()


  set SQLCA empty;
  set VMSRCD01 empty;

  call "IO7040" ("S1", SQLCA, VMSRCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue*/
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "OS0J";
    TA1REC.TA1LOCAT[1] = "OS0JS-OP";
    TA1REC.TA1LOCAT[2] = "N-VMSRCD";
    TA1REC.TA1LOCAT[3] = "01      ";
    TA1REC.TA1LOCAT[4] = "        ";
    TA1REC.TA1DBASE = "DORDER  ";
    TA1REC.TA1TBLVU = "VMSRCD01";
    TA1REC.TA1TBLKE = " ";

    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

    COMMAREA.CAUSERA = " ";

    XSPF4();
    exit program;
  end


end // end OS0JS-OPN-VMSRCD01

// scroll back
Function OS0JS-SCROLL-BACK()


  if (OS0JW02.OS0JW-SEL-FL == "Y")
    converseLib.validationFailed(826); /* cannot scroll and select at same time*/
  else
    OS0JW02.OS0JW-MSR-POS = OS0JW02.OS0JW-MSR-POS - 12;

    if (OS0JW02.OS0JW-MSR-POS >= 0) /* not at first screen load in array*/
      OS0JW01.OS0JW-NEW-MAP-FL = "Y";
      OS0JW02.OS0JW-MSR-LST = OS0JW02.OS0JW-MSR-LST + 12;
    else
      if (OS0JW01.OS0JW-MSR-CNT > 120)
        OS0JW01.OS0JW-MSR-CNT = OS0JW01.OS0JW-MSR-CNT - 120;
        OS0JS-BLD-MSR-TBLE();

        OS0JW01.OS0JW-NEW-MAP-FL = "Y";
      else
        OS0JW02.OS0JW-MSR-POS = OS0JW02.OS0JW-MSR-POS + 12;
        OS0JW02.OS0JW-MSR-LST = OS0JW02.OS0JW-MSR-CNT;

        converseLib.validationFailed(643);
      end
    end
  end


end // end OS0JS-SCROLL-BACK

// scroll forward
Function OS0JS-SCROLL-FRWD()


  if (OS0JW02.OS0JW-SEL-FL == "Y")
    converseLib.validationFailed(826); /* cannot scroll and select at same time*/
  else
    OS0JW02.OS0JW-MSR-LST = OS0JW02.OS0JW-MSR-LST - 12;
    OS0JW02.OS0JW-MSR-POS = OS0JW02.OS0JW-MSR-POS + 12;

    /* IF OS0JW02.OS0JW-MSR-POS LE OS0JW02.OS0JW-MSR-LST;*/
    if (OS0JW02.OS0JW-MSR-LST > 0)
      OS0JW01.OS0JW-NEW-MAP-FL = "Y";
    else
      if (OS0JW02.OS0JW-EOF-FL != "Y")
        OS0JW01.OS0JW-MSR-CNT = OS0JW01.OS0JW-MSR-CNT + 120;
        OS0JS-BLD-MSR-TBLE();

        OS0JW01.OS0JW-NEW-MAP-FL = "Y";
      else
        OS0JW02.OS0JW-MSR-POS = OS0JW02.OS0JW-MSR-POS - 12;
        OS0JW02.OS0JW-MSR-LST = OS0JW02.OS0JW-MSR-CNT;

        converseLib.validationFailed(644);
      end
    end

    /* OS0JW02.OS0JW-MSR-LST = OS0JW02.OS0JW-MSR-LST - 12;*/
  end


end // end OS0JS-SCROLL-FRWD

Record OS0JW01 type basicRecord
  10 OP-MSC-SZ-RUN-CD OP-MSC-SZ-RUN-CD ; 
  10 OS0JW-NEW-MAP-FL OS0JW-NEW-MAP-FL ; 
  10 OS0JW-ERR-FL OS0JW-ERR-FL ; 
  10 OS0JW-MSR-CNT OS0JW-MSR-CNT ; 
  10 OS0JW-SUB OS0JW-SUB ; 
end // end OS0JW01

Record OS0JW02 type basicRecord
  10 OS0JW-SEL-FL OS0JW-SEL-FL ; 
  10 OS0JW-EOF-FL OS0JW-EOF-FL ; 
  10 OS0JW-MSR-CNT OS0JW-MSR-CNT ; 
  10 OS0JW-MSR-POS OS0JW-MSR-POS ; 
  10 OS0JW-MSR-LST OS0JW-MSR-LST ; 
  10 OS0JW-MAP-SUB OS0JW-MAP-SUB ; 
  10 OS0JW-MSR-SUB OS0JW-MSR-SUB ; 
  10 OS0JW-MSR-ARRAY OS0JW-MSR-ARRAY [120] ; 
    15 OP-MSC-SZ-RUN-CD OP-MSC-SZ-RUN-CD ; 
    15 OP-MSC-SZ-RUN-DESC OP-MSC-SZ-RUN-DESC ; 
    15 OP-MSC-CRTN-RTO OP-MSC-CRTN-RTO ; 
    15 XGPCD XGPCD ; 
    15 XGCCD XGCCD ; 
    15 SY4SZSCL SY4SZSCL ; 
    15 XXXSTAT XXXSTAT ; 
end // end OS0JW02

// end of file flag
DataItem OS0JW-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map error flag
DataItem OS0JW-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map subscript
DataItem OS0JW-MAP-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS0JW-MSR-ARRAY char(43)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nbr of msr records
DataItem OS0JW-MSR-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msr last array position
DataItem OS0JW-MSR-LST smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msr current array position
DataItem OS0JW-MSR-POS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msr array subscript
DataItem OS0JW-MSR-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// load map flag
DataItem OS0JW-NEW-MAP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection flag
DataItem OS0JW-SEL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript
DataItem OS0JW-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

