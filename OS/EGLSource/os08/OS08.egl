package os08;

import corpcom2.XX0XW01;
import corpcom3.XPOS-00000;
import corpcom4.XSEXIT;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom7.XXXMSGNO;
import corpcom7.XXXPRCNM;
import om.common.OMCREC;
import op.common.OP1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VRPLCI01;
//*** PROGRAM=OS08 ****
// OS08 will manage the Bulk Order ID for the Replenishment
// program.  This program will consist of one screen which
// allows the user to perform a change all function from one
// bulk ord id to another as well as providing the flexibility
// to change by whse, customer or combination of both.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      12/14/98  TDAUGH  New application.
// *********************
Program OS08 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  OMCREC OMCREC; // record
  OP1REC OP1REC; // record
  OS08W00 OS08W00; // record
  OS08W01 OS08W01; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VRPLCI01 VRPLCI01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OS08M.OS08M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPOS-00000: XPOS-00000();
    /* ------------------------------------------------------------*/
    /* Flow to converse the main process used to display a map.*/
    /* ------------------------------------------------------------*/
    ;
    set OS08M001 empty;
    ;
    set OS08W00 empty;
    set OS08W01 empty;
    ;
    set VRPLCI01 empty;
    set OP1REC empty;
    set OMCREC empty;
    ;
    set SQLCA empty;
    set TAEREC empty;
    set TA1REC empty;
    set TA2REC empty;
    set XX0XW01 empty;
    ;
    OS08W00.OS08W-SFN = " "; /* Function Code*/
    OS08W00.OS08W-SWR = "N"; /* Request for data switch*/
    OS08W00.OS08W-SWF = "N"; /* FORMAT SCREEN*/
    OS08W00.OS08W-SWD = "1"; /* Display Screen 1*/
    ;
    goto OS08-00000; /* Converse the main process*/
    ;
    ;
    OS08-00000: OS08-00000();
    goto OS08-00000;
  end // end main
end // end OS08

// Determine which map to display
Function OS08-00000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) If specified, display the first map.*/
  /* 2) Otherwise, if specified, display the second map, depending*/
  /* on function = add or change*/
  /* 3) Otherwise, indicate error and exit to Application Menu.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  if (OS08W00.OS08W-SWD == "1") /* Map 1 was requested*/
    ;
    OS08-10000(); /* Display map 1*/
    ;
  else
    ;
      /* ------------------------------------------------------------*/
      /* Write the error to the Error Diagnosis Reporting Facility.*/
      /* ------------------------------------------------------------*/
    ;
    OS08W00.XXXPRCNM = "00000"; /* Module identification*/
    OS08W00.XXXMSGNO = 973; /* Unexpected error occurred*/
    ;
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "OS08-00000";
    TA1REC.TA1MAPNO = OS08W00.OS08W-SWD; /* Map number*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = OS08W00.XXXPRCNM; /* Program number*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
      /* ------------------------------------------------------------*/
      /* Exit to display the application system menu.*/
      /* ------------------------------------------------------------*/
    ;
    COMMAREA.CATOAP = "MN0M"; /* TO application*/
    ;
    XSEXIT(); /* Exit to another application*/
    ;
      /* ------------------------------------------------------------*/
      /* Abnormally terminate the transaction if the exit failed.*/
      /* ------------------------------------------------------------*/
    ;
    TA1REC.TA1FUNC = "ABND"; /* Termination function*/
    ;
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/
    ;
  end
  ;
end // end OS08-00000

// Main process to display a map
Function OS08-10000()
  /* ------------------------------------------------------------*/
  /* This is the main process used to display a map.  Processing*/
  /* always returns to the top of this process and falls through*/
  /* subordinate processes until an error is found or a valid*/
  /* request is processed.  Processing sequence is as follows:*/
  /*  */
  /* 1) Format the map output area and display the map.*/
  /* 2) Check the attention identifier used to respond.*/
  /* 3) Reset highlighted fields to normal intensity.*/
  /* 4) Verify the data that was entered.*/
  /* 5) Process a valid input request.*/
  /*  */
  /* In all subordinate processes, "EZEFLO" is used to exit to*/
  /* redisplay the map when an error is found.  This is done to*/
  /* minimize the coding effort required to skip subsequent*/
  /* processing under error conditions.*/
  /* ------------------------------------------------------------*/
  ;
  OS08-12000(); /* Format and display the map*/
  ;
  OS08-13000(); /* Check attention identifier*/
  ;
  OS08-14000(); /* Reset fields to normal intensity*/
  ;
  OS08-15000(); /* Verify the entered data*/
  ;
  OS08-16000(); /* Process valid input request*/
  ;
  ;
end // end OS08-10000

// Format and converse the map
Function OS08-12000()
  /* ------------------------------------------------------------*/
  /* If an error was found, save the error message number.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.validationMsgNum != 0) /* Error was found*/
    OS08W00.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end
  ;
  /* ------------------------------------------------------------*/
  /* If obtain data failed or no error, format data to display.*/
  /* ------------------------------------------------------------*/
  ;
  if (OS08W00.OS08W-SWR == "Y" /* Obtain data*/
   || converseVar.validationMsgNum == 0) /* or no error found*/
    ;
    if (OS08W00.OS08W-SWF == "Y") /* Map must be formatted*/
      OS08-12100(); /* Format the data on the map*/
    end
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Format the current date and any FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OS08M001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  ;
  OS08M001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  OS08M001.CAITEM = COMMAREA.CAITEM; /* Application data*/
  ;
  /* ------------------------------------------------------------*/
  /* If a message to display, indicate sound audible alarm.*/
  /* ------------------------------------------------------------*/
  ;
  if (OS08W00.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/
    ;
    if (OS08W00.XXXMSGNO != 0) /* Message to display*/
      ;
      if (OS08W00.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(OS08W00.XXXMSGNO);
      end /* Message number*/
    else
      OS08M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
      ;
    end
    ;
    OS08M001.XXXPRCNM = OS08W00.XXXPRCNM; /* Module identification*/
    ;
    set OS08M001 alarm; /* Indicate sound alarm*/
    ;
  end
  ;
  converse OS08M001 ;
  ;
  /* ------------------------------------------------------------*/
  /* Clear the message fields and save FAST PATH information.*/
  /* ------------------------------------------------------------*/
  ;
  OS08W00.XXXPRCNM = " "; /* Module identification*/
  OS08W00.XXXMSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  ;
  COMMAREA.CATOAP = OS08M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = OS08M001.CAITEM; /* Application data*/
  ;
  /* Move map to working storage here because no obtain data necessary*/
  ;
  OS08W01.OS08W-FROM-BULK1 = OS08M001.OS08M-FROM-BULK1;
  OS08W01.OS08W-TO-BULK1 = OS08M001.OS08M-TO-BULK1;
  OS08W01.OS08W-XWH-WHSE-CD = OS08M001.OS08M-XWH-WHSE-CD;
  OS08W01.OS08W-CU-CO-ID = OS08M001.OS08M-CU-CO-ID;
  OS08W01.OS08W-FROM-BULK2 = OS08M001.OS08M-FROM-BULK2;
  OS08W01.OS08W-TO-BULK2 = OS08M001.OS08M-TO-BULK2;
  OS08W00.OS08W-USER-MSG = " ";
  OS08M001.OS08M-USER-MSG = " ";
  ;
end // end OS08-12000

// Format the display data
Function OS08-12100()
  /* ------------------------------------------------------------*/
  /* Clear the fields in the map storage area to be formatted.*/
  /* ------------------------------------------------------------*/
  ;
  set OS08M001 initial; /* M001 input/output area*/
  ;
  OS08W00.OS08W-SWF = "N"; /* Format the map switch*/
  ;
  /* ------------------------------------------------------------*/
  /* Obtain the current date and time*/
  /* ------------------------------------------------------------*/
  ;
  XX0XS01(); /* Current date*/
  ;
  /* ------------------------------------------------------------*/
  /* Format the data in the map from the display storage.*/
  /* ------------------------------------------------------------*/
  ;
  set OS08M001.OS08M-FROM-BULK1 initialAttributes;
  set OS08M001.OS08M-TO-BULK1 initialAttributes;
  set OS08M001.OS08M-XWH-WHSE-CD initialAttributes;
  set OS08M001.OS08M-CU-CO-ID initialAttributes;
  set OS08M001.OS08M-FROM-BULK2 initialAttributes;
  set OS08M001.OS08M-TO-BULK2 initialAttributes;
  set OS08M001.CATOAP initialAttributes;
  set OS08M001.CAITEM initialAttributes;
  ;
  OS08M001.OS08M-FROM-BULK1 = OS08W01.OS08W-FROM-BULK1;
  OS08M001.OS08M-TO-BULK1 = OS08W01.OS08W-TO-BULK1;
  OS08M001.OS08M-XWH-WHSE-CD = OS08W01.OS08W-XWH-WHSE-CD;
  OS08M001.OS08M-CU-CO-ID = OS08W01.OS08W-CU-CO-ID;
  OS08M001.OS08M-FROM-BULK2 = OS08W01.OS08W-FROM-BULK2;
  OS08M001.OS08M-TO-BULK2 = OS08W01.OS08W-TO-BULK2;
  OS08M001.OS08M-USER-MSG = OS08W00.OS08W-USER-MSG;
  ;
end // end OS08-12100

// Check attention identifier
Function OS08-13000()
  /* ------------------------------------------------------------*/
  /* If CANCEL was requested, clear the map fields and exit.*/
  /* If a request for data is pending, reset that request.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    ;
    if (OS08W00.OS08W-SWR == "Y") /* Request for data*/
      set OS08W01 empty; /* M001 display storage*/
    end
    ;
    OS08W00.OS08W-SWF = "Y"; /* Format the map switch*/
    OS08W00.OS08W-SWR = "N"; /* Request for data switch*/
    ;
    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If FAST PATH was requested, transfer to the application.*/
  /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/
    ;
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      ;
      XSEXIT(); /* Exit to another application*/
      ;
    else
      ;
      OS08W00.XXXPRCNM = "13000"; /* Module identification*/
      converseLib.validationFailed(2); /* PA/PF key may not be used*/
      ;
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If HELP, exit to the previous level or exit to the Master*/
  /* Menu was requested, exit to another application.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/
    ;
  /* IF EZEAID IS PF1;              /* PF1 was pressed*/
  /* MOVE 'OS08M001' TO COMMAREA.CAITEM;/* Application find code*/
  /* END;*/
    ;
    COMMAREA.CATOAP = "MN0M"; /* TO application*/
    ;
    XSEXIT(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    ;
    COMMAREA.CATOAP = "OS06"; /* TO application*/
    ;
    XSEXIT(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  if (converseVar.eventKey is pf6) /* PF6 was pressed*/
    ;
    COMMAREA.CATOAP = "OS07"; /* TO application*/
    ;
    XSEXIT(); /* Exit to another application*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* Determine whether a valid attention identifier was used to*/
  /* invoke the transaction.  Display an error message to the*/
  /* user if the PF key used is not supported.*/
  /* ------------------------------------------------------------*/
  ;
  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf5)  /* and PF05 was not pressed*/
    ;
    OS08W00.XXXPRCNM = "13000"; /* Module identification*/
    converseLib.validationFailed(2); /* PA/PF key pressed is not valid*/
    ;
    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
  ;
end // end OS08-13000

// Reset highlighted fields
Function OS08-14000()
  /* -------------------------------------------------------------*/
  /* Reset all modifiable field attributes to normal intensity.*/
  /* ------------------------------------------------------------*/
  ;
  set OS08M001.OS08M-FROM-BULK1 initialAttributes;
  set OS08M001.OS08M-TO-BULK1 initialAttributes;
  set OS08M001.OS08M-XWH-WHSE-CD initialAttributes;
  set OS08M001.OS08M-CU-CO-ID initialAttributes;
  set OS08M001.OS08M-FROM-BULK2 initialAttributes;
  set OS08M001.OS08M-TO-BULK2 initialAttributes;
  set OS08M001.CATOAP initialAttributes;
  set OS08M001.CAITEM initialAttributes;
  ;
end // end OS08-14000

// Verify data that was entered
Function OS08-15000()
  /* ------------------------------------------------------------*/
  /* Highlight any application data that was entered.*/
  /* ------------------------------------------------------------*/
  ;
  if (COMMAREA.CAITEM > " ") /* Application data was entered*/
    ;
    OS08W00.XXXPRCNM = "15000"; /* Module identification*/
    set OS08M001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(975); /* Enter only with FAST PATH*/
    ;
  end
  ;
  if (OS08M001.OS08M-FROM-BULK1 > 0
   || OS08M001.OS08M-TO-BULK1 > 0)
    ;
    if (OS08M001.OS08M-XWH-WHSE-CD != " "
     || OS08M001.OS08M-CU-CO-ID > 0
     || OS08M001.OS08M-FROM-BULK2 > 0
     || OS08M001.OS08M-TO-BULK2 > 0
     || (OS08M001.OS08M-FROM-BULK1 == 0
     && OS08M001.OS08M-TO-BULK1 == 0))
      ;
      OS08W00.XXXPRCNM = "15000"; /* Module identification*/
      set OS08M001.OS08M-XWH-WHSE-CD cursor, bold; /* Highlight*/
      set OS08M001.OS08M-CU-CO-ID bold; /* Highlight*/
      set OS08M001.OS08M-FROM-BULK1 bold; /* Highlight*/
      set OS08M001.OS08M-TO-BULK1 bold; /* Highlight*/
      set OS08M001.OS08M-FROM-BULK2 bold; /* Highlight*/
      set OS08M001.OS08M-TO-BULK2 bold; /* Highlight*/
      converseLib.validationFailed(993);
      ;
    end
    ;
  end
  ;
  if (OS08M001.OS08M-XWH-WHSE-CD != " "
   || OS08M001.OS08M-CU-CO-ID > 0
   || OS08M001.OS08M-FROM-BULK2 > 0
   || OS08M001.OS08M-TO-BULK2 > 0)
    ;
    if (OS08M001.OS08M-FROM-BULK1 > 0
     || OS08M001.OS08M-TO-BULK1 > 0)
      ;
      OS08W00.XXXPRCNM = "15000"; /* Module identification*/
      set OS08M001.OS08M-FROM-BULK1 cursor, bold;
      set OS08M001.OS08M-TO-BULK1 bold;
      converseLib.validationFailed(993);
      ;
    end
    ;
  end
  ;
  if (OS08M001.OS08M-XWH-WHSE-CD != " "
   || OS08M001.OS08M-CU-CO-ID > 0)
    ;
    if (OS08M001.OS08M-FROM-BULK2 == 0
     || OS08M001.OS08M-TO-BULK2 == 0)
      ;
      OS08W00.XXXPRCNM = "15000"; /* Module identification*/
      set OS08M001.OS08M-FROM-BULK2 cursor, bold;
      set OS08M001.OS08M-TO-BULK2 bold;
      converseLib.validationFailed(993);
      ;
    end
    ;
  end
  ;
  if (OS08M001.OS08M-FROM-BULK2 > 0
   && OS08M001.OS08M-TO-BULK2 > 0)
    ;
    set OP1REC empty;
    ;
    set OMCREC empty;
    ;
    OP1REC.OP1CUOID = OS08M001.OS08M-TO-BULK2;
    ;
    OMCREC.OMCFUNCT = "SC"; /* select count function*/
    ;
    OS08S-VORHDR01-SC();
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && OMCREC.OMCCOUNT > 0)
      ;
    else
      ;
      OS08W00.XXXPRCNM = "15000"; /* Message location*/
      ;
      converseLib.validationFailed(988); /* Bulk Order ID Invalid*/
      ;
      set OS08M001.OS08M-TO-BULK2 cursor, bold;
      ;
    end
    ;
    set OP1REC empty;
    ;
    set OMCREC empty;
    ;
    OP1REC.OP1CUOID = OS08M001.OS08M-FROM-BULK2;
    ;
    OMCREC.OMCFUNCT = "SC"; /* select count function*/
    ;
    OS08S-VORHDR01-SC();
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && OMCREC.OMCCOUNT > 0)
      ;
    else
      ;
      OS08W00.XXXPRCNM = "15000"; /* Message location*/
      ;
      converseLib.validationFailed(988); /* Bulk Order ID Invalid*/
      ;
      set OS08M001.OS08M-FROM-BULK2 cursor, bold;
      ;
    end
    ;
  else
    ;
    set OP1REC empty;
    ;
    set OMCREC empty;
    ;
    OP1REC.OP1CUOID = OS08M001.OS08M-TO-BULK1;
    ;
    OMCREC.OMCFUNCT = "SC"; /* select count function*/
    ;
    OS08S-VORHDR01-SC();
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && OMCREC.OMCCOUNT > 0)
      ;
    else
      ;
      OS08W00.XXXPRCNM = "15000"; /* Message location*/
      ;
      converseLib.validationFailed(988); /* Bulk Order ID Invalid*/
      ;
      set OS08M001.OS08M-TO-BULK1 cursor, bold;
      ;
    end
    ;
    set OP1REC empty;
    ;
    set OMCREC empty;
    ;
    OP1REC.OP1CUOID = OS08M001.OS08M-FROM-BULK1;
    ;
    OMCREC.OMCFUNCT = "SC"; /* select count function*/
    ;
    OS08S-VORHDR01-SC();
    ;
    if (SQLCA.VAGen_SQLCODE == 0
     && OMCREC.OMCCOUNT > 0)
      ;
    else
      ;
      OS08W00.XXXPRCNM = "15000"; /* Message location*/
      ;
      converseLib.validationFailed(988); /* Bulk Order ID Invalid*/
      ;
      set OS08M001.OS08M-FROM-BULK1 cursor, bold;
      ;
    end
    ;
  end
  ;
  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    ;
    exit stack; /* Exit to display map*/
    ;
  end
  ;
end // end OS08-15000

// Process valid input request
Function OS08-16000()
  ;
  /* ------------------------------------------------------------------*/
  /* Process Valid Request*/
  /* ------------------------------------------------------------------*/
  ;
  OS08W00.OS08W-CTR = 0; /* Initialize "rows updated" ctr*/
  OS08W00.OS08W-SFN = " "; /* Initialize Function Switch*/
  ;
  if (OS08M001.OS08M-FROM-BULK1 > 0
   && OS08M001.OS08M-TO-BULK1 > 0)
    ;
    OS08W00.OS08W-SFN = "A"; /* Change ALL function*/
    ;
  else
    ;
    if (OS08M001.OS08M-XWH-WHSE-CD != " "
     && OS08M001.OS08M-CU-CO-ID > 0)
      ;
      OS08W00.OS08W-SFN = "B"; /* BOTH function*/
      ;
    else
      ;
      if (OS08M001.OS08M-XWH-WHSE-CD != " "
       && OS08M001.OS08M-CU-CO-ID == 0)
        ;
        OS08W00.OS08W-SFN = "W"; /* Whse function*/
        ;
      else
        ;
        if (OS08M001.OS08M-XWH-WHSE-CD == " "
         && OS08M001.OS08M-CU-CO-ID > 0)
          ;
          OS08W00.OS08W-SFN = "C"; /* Cust function*/
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
  if (OS08W00.OS08W-SFN == "A")
    ;
    OS08-16100(); /* Process Change All function*/
    ;
  else
    ;
    if (OS08W00.OS08W-SFN == "B") /* Process by Whse/Customer*/
      ;
      OS08-16200();
      ;
    else
      ;
      if (OS08W00.OS08W-SFN == "W") /* Process by Whse*/
        ;
        OS08-16300();
        ;
      else
        ;
        if (OS08W00.OS08W-SFN == "C") /* Process by Customer*/
          ;
          OS08-16400();
          ;
        end
        ;
      end
      ;
    end
    ;
  end
  ;
  if (OS08W00.OS08W-CTR > 0)
    ;
    OS08W00.OS08W-USER-TXT = "TOTAL ROWS UPDATED: ";
    ;
    OS08W00.OS08W-DISPLAY-CTR = OS08W00.OS08W-CTR;
    ;
    converseLib.validationFailed(418);
    ;
  else
    ;
    OS08W00.OS08W-USER-MSG = " ";
    ;
    converseLib.validationFailed(994);
    ;
  end
  ;
  OS08W00.OS08W-SWR = "Y"; /* Request Data*/
  OS08W00.OS08W-SWF = "Y"; /* Format Map*/
  ;
end // end OS08-16000

// Process CHG ALL
Function OS08-16100()
  ;
  /* ----------------------------------------------------------------------*/
  /* Process Chg all*/
  /* ----------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  set VRPLCI01 empty;
  ;
  OS08W00.OS08W-VRPLCI01-EOF = "N";
  ;
  OS08S-VRPLCI01-S1();
  ;
  OS08S-VRPLCI01-N1();
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    ;
    OS08W00.OS08W-VRPLCI01-EOF = "Y";
    ;
  end
  ;
  while (OS08W00.OS08W-VRPLCI01-EOF == "N")
    ;
    if (OS08M001.OS08M-FROM-BULK1 == VRPLCI01.OP-BULK-ORD-ID)
      ;
      VRPLCI01.OP-BULK-ORD-ID = OS08M001.OS08M-TO-BULK1;
      ;
      VRPLCI01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      ;
      VRPLCI01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
      ;
      VRPLCI01.ZZ-CHNG-USER-ID = COMMAREA.CAUSERID;
      ;
      OS08S-VRPLCI01-U(); /* Update DORDER.VRPLCI01*/
      ;
      OS08W00.OS08W-CTR = OS08W00.OS08W-CTR + 1;
      ;
    end
    ;
    OS08S-VRPLCI01-N1();
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      ;
      OS08W00.OS08W-VRPLCI01-EOF = "Y";
      ;
    end
    ;
  end
  ;
  OS08S-VRPLCI01-C1();
  ;
end // end OS08-16100

// Process by Whse/Cust
Function OS08-16200()
  ;
  /* ----------------------------------------------------------------------*/
  /* Process Whse/Cust*/
  /* ----------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  set VRPLCI01 empty;
  ;
  OS08W00.OS08W-VRPLCI01-EOF = "N";
  ;
  OS08S-VRPLCI01-S1();
  ;
  OS08S-VRPLCI01-N1();
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    ;
    OS08W00.OS08W-VRPLCI01-EOF = "Y";
    ;
  end
  ;
  while (OS08W00.OS08W-VRPLCI01-EOF == "N")
    ;
    if (OS08M001.OS08M-XWH-WHSE-CD == VRPLCI01.XWH-WHSE-CD
     && OS08M001.OS08M-CU-CO-ID == VRPLCI01.CU-CO-ID
     && OS08M001.OS08M-FROM-BULK2 == VRPLCI01.OP-BULK-ORD-ID)
      ;
      VRPLCI01.OP-BULK-ORD-ID = OS08M001.OS08M-TO-BULK2;
      ;
      VRPLCI01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      ;
      VRPLCI01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
      ;
      VRPLCI01.ZZ-CHNG-USER-ID = COMMAREA.CAUSERID;
      ;
      OS08S-VRPLCI01-U(); /* Update DORDER.VRPLCI01*/
      ;
      OS08W00.OS08W-CTR = OS08W00.OS08W-CTR + 1;
      ;
    end
    ;
    OS08S-VRPLCI01-N1();
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      ;
      OS08W00.OS08W-VRPLCI01-EOF = "Y";
      ;
    end
    ;
  end
  ;
  OS08S-VRPLCI01-C1();
  ;
end // end OS08-16200

// Process by Whse
Function OS08-16300()
  ;
  /* ----------------------------------------------------------------------*/
  /* Process Whse/Cust*/
  /* ----------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  set VRPLCI01 empty;
  ;
  OS08W00.OS08W-VRPLCI01-EOF = "N";
  ;
  OS08S-VRPLCI01-S1();
  ;
  OS08S-VRPLCI01-N1();
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    ;
    OS08W00.OS08W-VRPLCI01-EOF = "Y";
    ;
  end
  ;
  while (OS08W00.OS08W-VRPLCI01-EOF == "N")
    ;
    if (OS08M001.OS08M-XWH-WHSE-CD == VRPLCI01.XWH-WHSE-CD
     && OS08M001.OS08M-FROM-BULK2 == VRPLCI01.OP-BULK-ORD-ID)
      ;
      VRPLCI01.OP-BULK-ORD-ID = OS08M001.OS08M-TO-BULK2;
      ;
      VRPLCI01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      ;
      VRPLCI01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
      ;
      VRPLCI01.ZZ-CHNG-USER-ID = COMMAREA.CAUSERID;
      ;
      OS08S-VRPLCI01-U(); /* Update DORDER.VRPLCI01*/
      ;
      OS08W00.OS08W-CTR = OS08W00.OS08W-CTR + 1;
      ;
    end
    ;
    OS08S-VRPLCI01-N1();
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      ;
      OS08W00.OS08W-VRPLCI01-EOF = "Y";
      ;
    end
    ;
  end
  ;
  OS08S-VRPLCI01-C1();
  ;
end // end OS08-16300

// Process by Customer
Function OS08-16400()
  ;
  /* ----------------------------------------------------------------------*/
  /* Process Whse/Cust*/
  /* ----------------------------------------------------------------------*/
  ;
  XX0XS01();
  ;
  set VRPLCI01 empty;
  ;
  OS08W00.OS08W-VRPLCI01-EOF = "N";
  ;
  OS08S-VRPLCI01-S1();
  ;
  OS08S-VRPLCI01-N1();
  ;
  if (SQLCA.VAGen_SQLCODE == +100)
    ;
    OS08W00.OS08W-VRPLCI01-EOF = "Y";
    ;
  end
  ;
  while (OS08W00.OS08W-VRPLCI01-EOF == "N")
    ;
    if (OS08M001.OS08M-CU-CO-ID == VRPLCI01.CU-CO-ID
     && OS08M001.OS08M-FROM-BULK2 == VRPLCI01.OP-BULK-ORD-ID)
      ;
      VRPLCI01.OP-BULK-ORD-ID = OS08M001.OS08M-TO-BULK2;
      ;
      VRPLCI01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      ;
      VRPLCI01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
      ;
      VRPLCI01.ZZ-CHNG-USER-ID = COMMAREA.CAUSERID;
      ;
      OS08S-VRPLCI01-U(); /* Update DORDER.VRPLCI01*/
      ;
      OS08W00.OS08W-CTR = OS08W00.OS08W-CTR + 1;
      ;
    end
    ;
    OS08S-VRPLCI01-N1();
    ;
    if (SQLCA.VAGen_SQLCODE == +100)
      ;
      OS08W00.OS08W-VRPLCI01-EOF = "Y";
      ;
    end
    ;
  end
  ;
  OS08S-VRPLCI01-C1();
  ;
end // end OS08-16400

// Select Count bulk ord id
Function OS08S-VORHDR01-SC()
  ;
  set SQLCA empty;
  ;
  /* ------------------------------------------------------------*/
  /* Select Count    DORDER.VORHDR01*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "IO0430" (OMCREC, SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
  end
  /* ------------------------------------------------------------*/
  /* If successful, return*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OS08W00.XXXPRCNM = "VORHDR01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(10); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OS08S-VORHDR01-SC";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VORHDR01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OS08S-VORHDR01-SC

// Call to VRPLCI01 - 'C1'
Function OS08S-VRPLCI01-C1()
  ;
  set SQLCA empty;
  ;
  /* ------------------------------------------------------------*/
  /* Close S1 Cursor DORDER.VRPLCI01*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VRPLCI01" ("C1", SQLCA, VRPLCI01) {isNoRefresh = yes, isExternal = yes};
  end /* Close*/
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OS08W00.XXXPRCNM = "VRPLCI01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(10); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OS08S-VRPLCU01-C1";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLCI01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OS08S-VRPLCI01-C1

// Call to VRPLCI01 - 'N1'
Function OS08S-VRPLCI01-N1()
  ;
  set SQLCA empty;
  ;
  /* ------------------------------------------------------------*/
  /* Fetch Next from DORDER.VRPLCI01*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VRPLCI01" ("N1", SQLCA, VRPLCI01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch*/
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0       /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == +100)  
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OS08W00.XXXPRCNM = "VRPLCI01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(10); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OS08S-VRPLCI01-N1 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLCI01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OS08S-VRPLCI01-N1

// Call to VRPLCI01 - 'S1'
Function OS08S-VRPLCI01-S1()
  ;
  set SQLCA empty;
  ;
  /* ------------------------------------------------------------*/
  /* Select Scan from DORDER.VRPLCI01*/
  /* ------------------------------------------------------------*/
  ;
  try
    call "VRPLCI01" ("S1", SQLCA, VRPLCI01) {isNoRefresh = yes, isExternal = yes};
  end /* Select*/
  /* ------------------------------------------------------------*/
  /* If successful, initialize the line index and cursor switch.*/
  /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0       /* and normal return code*/
   || SQLCA.VAGen_SQLCODE == +100)  
    ;
    return; /* Return to previous process*/
    ;
  end
  ;
  /* ------------------------------------------------------------*/
  /* If data not available, return an error message to the user.*/
  /* Otherwise, indicate that an unexpected error has occurred.*/
  /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  OS08W00.XXXPRCNM = "VRPLCI01"; /* Module identification*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(10); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OS08S-VRPLCI01-S1 ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLCI01"; /* Table view name*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to display map*/
  ;
  ;
end // end OS08S-VRPLCI01-S1

// Call to VRPLCI01 - 'U '
Function OS08S-VRPLCI01-U()
  ;
  set SQLCA empty;
  ;
  try
    call "VRPLCI01" ("U ", SQLCA, VRPLCI01) {isNoRefresh = yes, isExternal = yes};
  end
  ;
  if (sysVar.errorCode == "00000000" /* Call Successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    ;
    return;
    ;
  end
  ;
   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  ;
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    ;
    converseLib.validationFailed(10); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    ;
  else
    ;
    converseLib.validationFailed(973); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    ;
  end
  ;
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OS08S-VRPLCI01-U  "; /* Description*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program Application*/
  TA1REC.TA1PGMNM = OS08W00.XXXPRCNM; /* Message location*/
  TA1REC.TA1DBASE = "DORDER  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRPLCI01"; /* Table view name*/
  TA1REC.TA1TBLKE = VRPLCI01.VRPLCI01-KEY; /* Table key*/
  ;
  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/
  ;
  exit stack; /* Exit to redisplay map*/
  ;
  ;
end // end OS08S-VRPLCI01-U

//*** RECORD=OS08W00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record OS08W00 type basicRecord
  10 OS08W-SWR OS08W-SWR ; 
  10 OS08W-SFN OS08W-SFN ; 
  10 OS08W-SWD OS08W-SWD ; 
  10 OS08W-SWF OS08W-SWF ; 
  10 XXXPRCNM XXXPRCNM ; 
  10 XXXMSGNO XXXMSGNO ; 
  10 OS08W-CTR OS08W-CTR ; 
  10 OS08W-VRPLCI01-EOF OS08W-VRPLCI01-EOF ; 
  10 OS08W-USER-MSG OS08W-USER-MSG ; 
    15 OS08W-USER-TXT OS08W-USER-TXT ; 
    15 OS08W-DISPLAY-CTR OS08W-DISPLAY-CTR ; 
end // end OS08W00

//*** RECORD=OS08W01 ****
// /*
// /*      application working storage for map1
// /*
// ***********************
Record OS08W01 type basicRecord
  10 OS08W-FROM-BULK1 OS08W-FROM-BULK1 ; 
  10 OS08W-TO-BULK1 OS08W-TO-BULK1 ; 
  10 OS08W-XWH-WHSE-CD OS08W-XWH-WHSE-CD ; 
  10 OS08W-CU-CO-ID OS08W-CU-CO-ID ; 
  10 OS08W-FROM-BULK2 OS08W-FROM-BULK2 ; 
  10 OS08W-TO-BULK2 OS08W-TO-BULK2 ; 
end // end OS08W01

DataItem OS08W-CTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-CU-CO-ID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-DISPLAY-CTR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-FROM-BULK1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-FROM-BULK2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-SFN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-SWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-SWF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-SWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-TO-BULK1 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-TO-BULK2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OS08W-USER-MSG char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-USER-TXT char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-VRPLCI01-EOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OS08W-XWH-WHSE-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

