package os05;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.*;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import op.common.*;
import os.common.OSRREC;
import os.common.OSSREC;
import os.common.OSTREC;
import os.common.OSWWREC;
import sp.common.SP1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VBASGN01;

//*** PROGRAM=OS05 ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS05S-GET-   = SELECT RECORDS
//    OS05S-EDT-   = EDIT FIELDS
//    OS05S-BLD-   = BUILD RECORDS
//    OS05S-FMT-   = FORMAT RECORDS
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 12/09/87   KLEE       Created.
// *********************
Program OS05 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  OS05W01 OS05W01; // record
  OSRREC OSRREC; // record
  OSSREC OSSREC; // record
  OSTREC OSTREC; // record
  OSWWREC OSWWREC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBASGN01 VBASGN01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  //  use  OS05M // VAGen Info - unused formGroup    {
  //    pfKeyEquate = no
  //  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS05000: OS05000();
    goto OS05010;
    OS05010: OS05010();
    goto OS05010;
  end // end main
end // end OS05

// main execute process
Function OS05000()
     /* Check csp and order batch security*/

  XSENTRY();

     /* Initialize application - init records, save map name*/

  OS05S-INIT-OS05();

  OS05S-GET-VBASGN01();


end // end OS05000

// converse/ after process
Function OS05010()


     /* Init error stuff*/

  OSWWREC.OSWWERFL = "N";
  converseLib.validationFailed(0);



  if (OSWWREC.OSWWERFL == "N")
    OS05S-CALL-OS1020(); /* build temp storage for bulks*/
  end

     /* Transfer to another application*/

  OSWW-FROM-PGM = "OS05"; /* used for pf3 test in OS0Q*/

  OS05S-TRNSFR-CNTL(); /* transfer to requested application.*/


end // end OS05010

// UPDT ASSOCIATED RECS OB1220
Function OS05S-CALL-OS1020()

  OS05S-PRG-TMP-STOR(); /* purge os0q ts before building*/
  OS05S-FMT-OSTREC(); /* format passing record*/

  call "OS1020" (OSTREC) {isNoRefresh = yes, isExternal = yes};

  if (OSTREC.OST-RETURN-CODE == 00)
    OSWWREC.OSWWTF2M = OSTREC.OST-MAX-PAGE-NBR;
  else
    if (OSTREC.OST-RETURN-CODE == 02)
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      OSWWREC.OSWW-MSG-NBR = 886; /* no bulks found for criteria*/
      OS05S-TRNSFR-CNTL();
    else
      if (OSTREC.OST-RETURN-CODE == 03)
        OSWWREC.OSWWERFL = "Y"; /* set error flag*/
        OSWWREC.OSWW-MSG-NBR = 010; /* database busy try again*/
        OS05S-TRNSFR-CNTL();
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS05    ";
        TA1REC.TA1LOCAT[1] = "OS05S-CA";
        TA1REC.TA1LOCAT[2] = "LL-OS102";
        TA1REC.TA1LOCAT[3] = "0 OS1020";
        TA1REC.TA1DBASE = "DORDB   ";
        TA1REC.TA1TBLVU = "VBULKS01";

        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

        COMMAREA.CAUSERA = " ";

        XSPF4();
        exit program;
      end
    end
  end


end // end OS05S-CALL-OS1020

// Load Map using VBASGN01
Function OS05S-FMT-OSTREC()

  set OSTREC empty;

  OSTREC.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  OSWWREC.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;

  OSTREC.KUCCOID = OSWWREC.KUCCOID;
  OSTREC.KUMSTRID = OSWWREC.KUMSTRID;
  OSTREC.XNXCD = OSWWREC.XNXCD;
  OSTREC.XGPCD = OSWWREC.XGPCD;

  if (OSWWREC.OP1CUNDT != 0)
    OSTREC.OP1CUNDT = OSWWREC.OSWWDT8;
  else
    OSTREC.OP1CUNDT = 0;
  end

  if (OSWWREC.OP1CUPO != " ")
    OSTREC.OP1CUPO = OSWWREC.OP1CUPO;
  else
    OSTREC.OP1CUPO = " ";
  end

  if (OSWWREC.SP1ID != " ")
    OSTREC.SP1ID = OSWWREC.SP1ID;
  else
    OSTREC.SP1ID = " ";
  end

  OSTREC.OST-RETURN-CODE = 99;


end // end OS05S-FMT-OSTREC

Function OS05S-GET-VBASGN01()
end // end OS05S-GET-VBASGN01

// initialize application
Function OS05S-INIT-OS05()

  set VBASGN01 empty; /* bulk assignment criteria record*/
  set OSTREC empty; /* draw order info record*/
  set SQLCA empty; /* return code from DB2*/
  set ERRSQLCA empty; /* return code from non-db2*/
  set TAEREC empty; /* diags for non db2*/
  set TA1REC empty; /* diagnostic record*/
  set OSWWREC empty; /* system working storage*/
  set OS05W01 empty; /* working storage*/

  OSWWREC.OSWWGRP = COMMAREA.CAUSERA; /* init common working storage*/

  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate;

  if (COMMAREA.CAFROMAP == "OS03")
    OSWWREC.OSWWRTNAP = "OS03";
  else
    if (COMMAREA.CAFROMAP == "OS04")
      OSWWREC.OSWWRTNAP = "OS04";
    end
  end

end // end OS05S-INIT-OS05

// Non-DB2 Post Routine TA0020
Function OS05S-POST-NO-ROLL()
       /* Non-DB2 post routine*/



   /* the following fields will be filled in by the*/
   /* calling stmt group before entering this routine*/
     /* ta1locat(1) = transaction type  ie: 'ss' 'sn'*/
     /* ta1locat(2) = i/o mod name*/
     /* ta1locat(3) = calling stmt group name*/
     /* ta1locat(4) = programmers option(extra key data)*/
     /* taerec.taedesc1 = programmers opiton (additional key data*/
     /* taerec.taedesc2 = messages*/
     /* ta1map = appl's mapname and should be initilized*/
              /* in the programs init process.*/
   /* return code processing will also be handled by the*/
   /* calling stmt group.*/

  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "POST";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end

end // end OS05S-POST-NO-ROLL

// Purge Bulk Asgnmnt Temp Storag
Function OS05S-PRG-TMP-STOR()



   /* purge temporary storage 2*/

  TA5REC.TA5APPID = "OSFQ"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSSREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0
   || TA5REC.TA5RTNCD == 4)
    OSWWREC.OSWWTF2P = 1;
    OSWWREC.OSWWTF2S = 1;
    OSWWREC.OSWWTF2M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS2";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSSREC.OSSTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS05S-POST-NO-ROLL(); /* post,  no rollback, non db2*/


  end
end // end OS05S-PRG-TMP-STOR

// Edit pfkeys for OS0N
Function OS05S-TRNSFR-CNTL()

  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;

  if (COMMAREA.CAFROMAP == "OS0Q") /**/
    COMMAREA.CATOAP = "OS03"; /**/
  else
    if (OSWWREC.OSWWERFL == "N") /* input record processed ok*/
      COMMAREA.CATOAP = "OS0Q";
    else
      COMMAREA.CATOAP = "OS03";
    end
  end
  COMMAREA.CAFROMAP = "OS05";
  XSEXIT();



end // end OS05S-TRNSFR-CNTL

//*** RECORD=OS05W01 ****
//     Working Storage Record for OS05.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   12/09/97    KLEE       initial creation
// ***********************
Record OS05W01 type basicRecord
  10 OS05W-CHG-FLAG OS05W-CHG-FLAG ; 
  10 OS05W-KUCREC-POST OS05W-KUCREC-POST ; 
  10 OS05W-VBASGN01-POST OS05W-VBASGN01-POST ; 
  10 OS05W-KUMREC-POST OS05W-KUMREC-POST ; 
    15 OS05W-KUMREC-CUST OS05W-KUMREC-CUST ; 
    15 OS05W-FILLER1 OS05W-FILLER1 ; 
    15 OS05W-KUMREC-STOR OS05W-KUMREC-STOR ; 
  10 OS05W-KUJREC-POST OS05W-KUJREC-POST ; 
    15 OS05W-KUJREC-CUST OS05W-KUJREC-CUST ; 
    15 OS05W-FILLER2 OS05W-FILLER2 ; 
    15 OS05W-KUJREC-DEPT OS05W-KUJREC-DEPT ; 
  10 OS05W-SP1REC-POST OS05W-SP1REC-POST ; 
end // end OS05W01

// Map Field Changed Flag
DataItem OS05W-CHG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler
DataItem OS05W-FILLER1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler
DataItem OS05W-FILLER2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Company error post key
DataItem OS05W-KUCREC-POST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kuccoid
DataItem OS05W-KUJREC-CUST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kumstrid
DataItem OS05W-KUJREC-DEPT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level key for kumrec
DataItem OS05W-KUJREC-POST char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kuccoid
DataItem OS05W-KUMREC-CUST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level key for kumrec
DataItem OS05W-KUMREC-POST char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kumstrid
DataItem OS05W-KUMREC-STOR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Sales program post key
DataItem OS05W-SP1REC-POST char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Bulk assignment id post key
DataItem OS05W-VBASGN01-POST char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

