package os0l;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import ku.common.KUCREC;
import ku.common.KUKREC;
import op.common.*;
import os.common.OSRREC;
import os.common.OSWWREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VBASGN01;
//*** PROGRAM=OS0L ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS0LS-GET-x = select or select set
//    OS0LS-NXT-x = select next
//    OS0LS-CLS-x = close set
//    OS0LS-BLD-x = build record
//    OS0LS-LOAD-x = load (temp storage load drivers)
//    OS0LS-RED-x = read (temp storage)
//    OS0LS-WRI-x = write (temp storage)
//    OS0LS-UPD-x = update (temp storage)
//    OS0LS-PRG-x = purge (temp storage)
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 05/02/94   SCHASE     Created.
// * 11/29/94   CBRINE     Added msg #891 to prompt for input.
// *                       Fixed cursor position. Added
// *                       OSWW-MSG-NBR to OSWWREC to display
// *                       messages on restart.
// * 12/29/97   KLEE       added gpc code to map. added fields
// *                       to commarea.
// * 05/17/99   SCHAPY     Changed the edit definition of map
// *                       Datefields for the Y2k fix.
// *********************
Program OS0L type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KUCREC KUCREC; // record
  KUKREC KUKREC; // record
  OS0LW01 OS0LW01; // record
  OSRREC OSRREC; // record
  OSWWREC OSWWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBASGN01 VBASGN01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OS0LM.OS0LM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS0L000: OS0L000();
    goto OS0L010;
    OS0L010: OS0L010();
    goto OS0L010;
  end // end main
end // end OS0L

// main execute process
Function OS0L000()
     /* Check csp security*/
  ;
  XSENTRY();
  XSSEGTR(); /* set segmented trans id*/
  ;
     /* Initialize application*/
  ;
  OS0LS-INIT-OS0L();
     /* Update process for execute*/
  ;
  if (OSWWREC.OSWWFRMAP == "OS0O") /* came from last appl in flow*/
    OSWWREC.CAMSG = "NEXT BULK ASSIGNMENT";
    OS0LM001.KUCGRPID = OSWWREC.KUCGRPID;
    OS0LM001.KUKPCOID = OSWWREC.KUKPCOID;
    OS0LM001.KUCCOID = OSWWREC.KUCCOID;
    OS0LS-RED-TMP-STOR(); /* read temp storage*/
    OS0LS-UPD-EXECUTE(); /* update temp storage for view*/
  else
    if (OSWWREC.OSWWFRMAP == "OS0L") /* restarted itself for display*/
      OS0LS-RED-TMP-STOR(); /* read temp storage*/
    else
      OSWWREC.OSWWTF1P = 1; /* init page number*/
      OSWWREC.OSWWTF1M = 1; /* init max page number*/
      converseLib.validationFailed(891); /* prompt message*/
    end
  end
  ;
  if (OSWWREC.OSWW-MSG-NBR != 0) /* if msg nbr exists, move to*/
    if (OSWWREC.OSWW-MSG-NBR == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(OSWWREC.OSWW-MSG-NBR);
    end /* ezemno so it will display*/
    OSWWREC.OSWW-MSG-NBR = 0; /* clear message number*/
  end
  ;
  ;
  OSWWREC.CAMSG = " "; /* clear message*/
  ;
  OS0LS-BLD-MAP(); /* build map*/
  ;
end // end OS0L000

// converse/ after process
Function OS0L010()
  ;
  ;
  converseLib.clearScreen();
   /* set map to scroll properly*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  ;
  converse OS0LM001 ;
  ;
     /* Init error/keys stuff*/
  ;
  OSWWREC.OSWWERFL = "N";
  OS0LW01.OS0LW-KEY-CHGD = "N";
  converseLib.validationFailed(0);
  ;
  ;
     /* Reset field attributes*/
  ;
  OS0LS-RESET-ATTRIB();
  ;
     /* Edit map*/
  ;
  OS0LS-EDT-MAP();
  ;
  ;
     /* Build new temp storage for new key*/
  ;
  if (OS0LW01.OS0LW-KEY-CHGD == "Y"
   && OSWWREC.OSWWERFL == "N")
    OS0LS-PRG-TMP-STOR();
    OS0LS-BLD-TMP-STOR();
    OSWWREC.KUCGRPID = OS0LM001.KUCGRPID; /* save map group id*/
    OSWWREC.KUKPCOID = OS0LM001.KUKPCOID; /* save map parent id*/
    OSWWREC.KUCCOID = OS0LM001.KUCCOID; /* save map customer id*/
    OSWWREC.OSWWFRMAP = "OS0L";
    OS0LS-RESTART-OS0L();
  end
  ;
     /* Update map*/
  ;
  if (OSWWREC.OSWWERFL == "N")
    OS0LS-UPD-CONVERSE();
  end
  ;
     /* Edit PFKeys*/
  ;
  if (OSWWREC.OSWWERFL == "N")
    OS0LS-SCROLL-PAGE(); /* pf7/pf8 redisplay screen*/
  end
  ;
  OS0LS-TRNSFR-CNTL(); /* transfer to requested application.*/
  ;
  ;
end // end OS0L010

// Build OS0L Map
Function OS0LS-BLD-MAP()
  ;
  ;
  OS0LS-FMT-HEADINGS(); /* format current date*/
  ;
     /* build bulk assignment array on screen*/
  ;
  OSWWREC.OSWWTF1S = 1; /* init subscript*/
  while (OSWWREC.OSWWTF1S <= 11) /* process all 11 rows*/
    OS0LS-LOAD-MAP();
    OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S + 1;
  end
  OS0LM001.OSWWTF1M = OSWWREC.OSWWTF1M; /* set max page number*/
  ;
  ;
    /* format group/parent/company if already present*/
  ;
  if (OSWWREC.KUCGRPID > 0) /* group exists*/
    OS0LM001.KUCGRPID = OSWWREC.KUCGRPID;
  else
    if (OSWWREC.KUKPCOID > 0) /* parent exists*/
      OS0LM001.KUKPCOID = OSWWREC.KUKPCOID;
    else
      if (OSWWREC.KUCCOID > 0) /* company exists*/
        OS0LM001.KUCCOID = OSWWREC.KUCCOID;
      end
    end
  end
  ;
     /* reset field attributes*/
  ;
  OS0LS-RESET-ATTRIB();
  ;
end // end OS0LS-BLD-MAP

// Build OSFL Temp Storage
Function OS0LS-BLD-TMP-STOR()
  ;
  ;
    /* format key for selecting all possible bulk assignments*/
  ;
  if (OS0LM001.KUCGRPID > 0) /* customer group entered*/
    OS0LW01.OS0LW-VBASGN01-CD = "01";
  else
    if (OS0LM001.KUKPCOID > 0) /* parent company entered*/
      OS0LW01.OS0LW-VBASGN01-CD = "02";
    else
      if (OS0LM001.KUCCOID > 0) /* company entered*/
        OS0LW01.OS0LW-VBASGN01-CD = "03";
      else
        if (converseVar.eventKey is pf9) /* display all feature*/
          OS0LW01.OS0LW-VBASGN01-CD = "04";
        end
      end
    end
  end
  ;
  set VBASGN01 empty;
  ;
  OS0LS-OPN-VBASGN01(); /* open cursor on vbasgn01*/
  ;
  OS0LW01.OS0LWEOF = "N"; /* init eof flag*/
  ;
  OS0LS-NXT-VBASGN01(); /* fetch first vbasgn01*/
  ;
  OSWWREC.OSWWTF1P = 1; /* init page number*/
  ;
  if (OS0LW01.OS0LWEOF == "Y") /* end of file*/
    converseLib.validationFailed(839); /* no bulk assignmnts exist*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
  else
    while (OS0LW01.OS0LWEOF == "N") /* while there is bulk asgn*/
      OS0LS-LOAD-OSRREC(); /* load temp storage*/
    end
    OSWWREC.OSWWTF1M = OSWWREC.OSWWTF1P; /* set max to last page*/
    OSWWREC.OSWWTF1M = OSWWREC.OSWWTF1M - 1; /* subtract 1 from max*/
    OSWWREC.OSWWTF1P = 1; /* set page to 1*/
    OSWWREC.OSWWTF1S = 1; /* position cursor on first*/
  end
  ;
  ;
  OS0LS-CLS-VBASGN01(); /* close vbasgn01 cursor*/
  ;
  ;
end // end OS0LS-BLD-TMP-STOR

// Close KUCREC Cursor
Function OS0LS-CLS-KUCREC()
  ;
  ;
  set SQLCA empty;
  ;
  call "IO0240" ("C1", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      OSWWREC.OSWWERFL = "Y";
      converseLib.validationFailed(010); /* DATABASE BUSY*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0L    ";
      TA1REC.TA1LOCAT[1] = "OS0LS-CL";
      TA1REC.TA1LOCAT[2] = "S-KUCREC";
      TA1REC.TA1LOCAT[3] = " IO0240 ";
      TA1REC.TA1LOCAT[4] = "C1      ";
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = OS0LW01.OS0LW-POST-KEY;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0LS-CLS-KUCREC

// Close VBASGN01 Cursor
Function OS0LS-CLS-VBASGN01()
  ;
  ;
  set SQLCA empty;
  ;
  if (OS0LW01.OS0LW-VBASGN01-CD == "01")
    call "IO7200" ("C1", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
  else
    if (OS0LW01.OS0LW-VBASGN01-CD == "02")
      call "IO7200" ("C2", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
    else
      if (OS0LW01.OS0LW-VBASGN01-CD == "03")
        call "IO7200" ("C3", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
      else
        if (OS0LW01.OS0LW-VBASGN01-CD == "04")
          call "IO7200" ("C4", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
        end
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      OSWWREC.OSWWERFL = "Y";
      converseLib.validationFailed(010); /* DATABASE BUSY*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0L";
      TA1REC.TA1LOCAT[1] = "OS0LS-CL";
      TA1REC.TA1LOCAT[2] = "S-VBASGN";
      TA1REC.TA1LOCAT[3] = "01      ";
      TA1REC.TA1LOCAT[4] = "        ";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VBASGN01";
      TA1REC.TA1TBLKE = " ";
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0LS-CLS-VBASGN01

// Declare KUCREC Cursor
Function OS0LS-DEC-KUCREC()
  ;
  ;
  set SQLCA empty;
  set KUCREC empty;
  ;
  KUCREC.KUCGRPID = OS0LM001.KUCGRPID;
  OS0LW01.OS0LW-POST-KEY = OS0LM001.KUCGRPID;
  ;
  call "IO0240" ("S1", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      OSWWREC.OSWWERFL = "Y";
      converseLib.validationFailed(010); /* DATABASE BUSY*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0L    ";
      TA1REC.TA1LOCAT[1] = "OS0LS-DE";
      TA1REC.TA1LOCAT[2] = "C-KUCREC";
      TA1REC.TA1LOCAT[3] = " IO0240 ";
      TA1REC.TA1LOCAT[4] = "S1      ";
      TA1REC.TA1DBASE = "DCUST   ";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1TBLKE = OS0LW01.OS0LW-POST-KEY;
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0LS-DEC-KUCREC

// Display All Bulk Assignments
Function OS0LS-DISPLAY-ALL()
  ;
  ;
    /* display all bulk assignment ids*/
  ;
  OS0LM001.KUCGRPID = 0;
  OS0LM001.KUKPCOID = 0;
  OS0LM001.KUCCOID = 0;
  ;
  OSWWREC.KUCGRPID = 0;
  OSWWREC.KUKPCOID = 0;
  OSWWREC.KUCCOID = 0;
  ;
  OS0LS-BLD-TMP-STOR();
  ;
  ;
end // end OS0LS-DISPLAY-ALL

// Edit KUCCOID
Function OS0LS-EDT-KUCCOID()
  ;
    /* verify company exists*/
  ;
  OS0LS-GET-KUCREC(); /* select company*/
  ;
    /* edit for other entries*/
  ;
  if (OS0LM001.KUCGRPID > 0) /* company group also entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(834); /* mult selections not allowed*/
    set OS0LM001.KUCCOID bold;
    set OS0LM001.KUCGRPID cursor, bold;
  end
  ;
  if (OS0LM001.KUKPCOID > 0) /* parent company also entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(834); /* mult selections not allowed*/
    set OS0LM001.KUCCOID bold;
    set OS0LM001.KUKPCOID cursor, bold;
  end
  ;
    /* if no errors, save the company to use when screen is redisplayed*/
  ;
  if (OSWWREC.OSWWERFL == "N") /* no errors*/
    OSWWREC.KUCCOID = OS0LM001.KUCCOID;
  end
  ;
end // end OS0LS-EDT-KUCCOID

// Edit KUCGRPID
Function OS0LS-EDT-KUCGRPID()
  ;
  ;
    /* verify company group exists*/
  ;
  OS0LS-DEC-KUCREC(); /* declare company group id*/
  OS0LS-FET-KUCREC(); /* fetch company group id*/
  OS0LS-CLS-KUCREC(); /* close company group id*/
  ;
    /* edit for other entries*/
  ;
  if (OS0LM001.KUKPCOID > 0) /* parent company also entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(834); /* mult selections not allowed*/
    set OS0LM001.KUCGRPID cursor, bold;
    set OS0LM001.KUKPCOID bold;
  end
  ;
  if (OS0LM001.KUCCOID > 0) /* company also entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(834); /* mult selections not allowed*/
    set OS0LM001.KUCGRPID cursor, bold;
    set OS0LM001.KUCCOID bold;
  end
  ;
  ;
    /* if no errors, save group id for when screen is redisplayed*/
  ;
  if (OSWWREC.OSWWERFL == "N") /* no errors*/
    OSWWREC.KUCGRPID = OS0LM001.KUCGRPID;
  end
  ;
  ;
end // end OS0LS-EDT-KUCGRPID

// Edit KUKPCOID
Function OS0LS-EDT-KUKPCOID()
  ;
    /* verify parent company exists*/
  ;
  OS0LS-GET-KUKREC(); /* select parent company*/
  ;
    /* edit for other entries*/
  ;
  if (OS0LM001.KUCGRPID > 0) /* company group also entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(834); /* mult selections not allowed*/
    set OS0LM001.KUKPCOID bold;
    set OS0LM001.KUCGRPID cursor, bold;
  end
  ;
  if (OS0LM001.KUCCOID > 0) /* company also entered*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(834); /* mult selections not allowed*/
    set OS0LM001.KUKPCOID cursor, bold;
    set OS0LM001.KUCCOID bold;
  end
  ;
    /* if no errors, save parent id for when screen is redisplayed*/
  ;
  if (OSWWREC.OSWWERFL == "N") /* no errors*/
    OSWWREC.KUKPCOID = OS0LM001.KUKPCOID;
  end
  ;
  ;
end // end OS0LS-EDT-KUKPCOID

// Edit Map
Function OS0LS-EDT-MAP()
  ;
    /* validate customer group*/
  ;
  if (OS0LM001.KUCGRPID > 0 /* customer group entered*/
   && OS0LM001.KUCGRPID != OSWWREC.KUCGRPID) /* and has changed*/
    OS0LW01.OS0LW-KEY-CHGD = "Y";
    OS0LS-EDT-KUCGRPID(); /* verify cust grp exists*/
  end
  ;
  ;
    /* validate parent company*/
  ;
  if (OS0LM001.KUKPCOID > 0 /* parent company entered*/
   && OS0LM001.KUKPCOID != OSWWREC.KUKPCOID) /* and has changed*/
    OS0LW01.OS0LW-KEY-CHGD = "Y";
    OS0LS-EDT-KUKPCOID(); /* verify parent comp exist*/
  end
  ;
  ;
    /* validate company*/
  ;
  if (OS0LM001.KUCCOID > 0 /* company entered*/
   && OS0LM001.KUCCOID != OSWWREC.KUCCOID) /* and has changed*/
    OS0LW01.OS0LW-KEY-CHGD = "Y";
    OS0LS-EDT-KUCCOID(); /* verify company exists*/
  end
  ;
  ;
    /* validate entry of one of three when screen empty*/
  ;
  if (OS0LM001.KUCGRPID == 0 &&  /* customer group entered*/
  OS0LM001.KUKPCOID == 0 &&      /* parent company entered*/
  OS0LM001.KUCCOID == 0 &&       /* company not entered*/
  OS0LM001.OB-BULK-ASGN-ID[1] == " ") /* screen blank*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    converseLib.validationFailed(891); /* prompt for input*/
  end
  ;
  ;
  if (OSWWREC.OSWWERFL == "Y" /* error exists*/
   || OS0LW01.OS0LW-KEY-CHGD == "Y") /* key changed*/
    return; /* get out per incorrect key value*/
  end
  ;
  ;
     /* edit map bottom to top - select codes, page nbr,*/
       /* pf7/pf8, and relational edits for screen*/
  ;
  ;
     /* edit select codes*/
  ;
  OSWWREC.OSWWTF1S = 11; /* init subscript*/
  OS0LW01.OS0LWSEL = "N"; /* init selections made flag*/
  ;
  while (OSWWREC.OSWWTF1S >= 1) /* process all 11 rows*/
    OS0LS-EDT-SELCDS();
    OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S - 1;
  end
  ;
     /* edit page number*/
  ;
  OS0LS-EDT-PAG-NBR();
  ;
  ;
     /* edit PF7/PF8*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    OS0LS-EDT-PAGING();
  end
  ;
  ;
     /* edit selection flag*/
  ;
  if (OSWWREC.OSWWERFL == "N") /* no errors found to this point*/
    if (OS0LM001.OB-BULK-ASGN-ID[1] != " ")
      OS0LS-EDT-NO-SEL();
    end
  end
  ;
end // end OS0LS-EDT-MAP

// Edit For No Selections
Function OS0LS-EDT-NO-SEL()
  ;
  ;
     /* if nothing selected, display error*/
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || OS0LM001.OSWWTF1P != OSWWREC.OSWWTF1P) /* page nbr chgd*/
    if (OS0LW01.OS0LWSEL == "Y") /* selections made*/
      converseLib.validationFailed(826); /* cant page and select*/
      OSWWREC.OSWWERFL = "Y"; /* err flag*/
      OS0LM001.OSWWTF1P = OSWWREC.OSWWTF1P; /* reset with original*/
      set OS0LM001.OSWWTF1P cursor, bold;
    end
    ;
  else
    if (OS0LW01.OS0LWSEL == "N") /* not paging and no selections made*/
      converseLib.validationFailed(273); /* no selections made*/
      OSWWREC.OSWWERFL = "Y"; /* err flag*/
    end
  end
  ;
end // end OS0LS-EDT-NO-SEL

// Edit Page Number
Function OS0LS-EDT-PAG-NBR()
  ;
  ;
  if (OS0LM001.OSWWTF1P > OS0LM001.OSWWTF1M /* changed page number*/
   || OS0LM001.OSWWTF1P < 1)               
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(603); /* page number must be between 1 and last page #*/
    set OS0LM001.OSWWTF1P cursor, bold;
    OS0LM001.OSWWTF1P = OSWWREC.OSWWTF1P; /* reset page number*/
  end
  ;
  ;
end // end OS0LS-EDT-PAG-NBR

// Edit PF7/PF8 and Page Nbr Chg
Function OS0LS-EDT-PAGING()
  ;
  if (converseVar.eventKey is pf7
   && OS0LM001.OSWWTF1P == 1) /* at first page*/
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(643); /* cant scroll backward*/
  end
  ;
  ;
  if (converseVar.eventKey is pf8
   && OS0LM001.OSWWTF1P >= OSWWREC.OSWWTF1M) /* at max page*/
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(644); /* cant scroll forward*/
  end
  ;
  ;
  if (OS0LM001.OSWWTF1P != OSWWREC.OSWWTF1P) /* pf7/pf8 and pg chg*/
    OSWWREC.OSWWERFL = "Y"; /* set error*/
    converseLib.validationFailed(597); /* cant scroll and chg pg number*/
    set OS0LM001.OSWWTF1P cursor, bold;
    OS0LM001.OSWWTF1P = OSWWREC.OSWWTF1P; /* reset page number*/
  end
  ;
  ;
end // end OS0LS-EDT-PAGING

// Edit Select Codes
Function OS0LS-EDT-SELCDS()
  ;
    /* compare select codes on screen with temp storage,*/
      /* if they are equal - OK*/
    /* if user entered ' ' or 'S'  -  OK*/
      /* other select options are errors.*/
  ;
  if (OSRREC.OSRMSEL[OSWWTF1S] == OS0LM001.OS0LM-SEL-CD[OSWWTF1S])
     /* next sentence*/
  else
    if (OS0LM001.OS0LM-SEL-CD[OSWWTF1S] == " " /* blank*/
     || OS0LM001.OS0LM-SEL-CD[OSWWTF1S] == "S" /* selection made*/
     || OS0LM001.OS0LM-SEL-CD[1] == "A")       /* select all*/
       /* next sentence*/
    else
      OSWWREC.OSWWERFL = "Y"; /* set err flag*/
      converseLib.validationFailed(838); /* select option invalid - enter 's'*/
      set OS0LM001.OS0LM-SEL-CD[OSWWTF1S] cursor, bold;
    end
  end
  ;
  if (OS0LM001.OS0LM-SEL-CD[OSWWTF1S] == "S" /* selection made*/
   || OS0LM001.OS0LM-SEL-CD[1] == "A")       /* select all*/
    OS0LW01.OS0LWSEL = "Y"; /* set select flag*/
  end
  ;
  ;
end // end OS0LS-EDT-SELCDS

// Fetch Next KUCREC Record
Function OS0LS-FET-KUCREC()
  ;
  ;
  set SQLCA empty;
  ;
  call "IO0240" ("N1", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set OS0LM001.KUCGRPID cursor, bold;
      converseLib.validationFailed(835);
      OSWWREC.OSWWERFL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        set OS0LM001.KUCGRPID cursor;
        converseLib.validationFailed(010);
        OSWWREC.OSWWERFL = "Y";
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0L    ";
        TA1REC.TA1LOCAT[1] = "OS0LS-FE";
        TA1REC.TA1LOCAT[2] = "T-KUCREC";
        TA1REC.TA1LOCAT[3] = " IO0240 ";
        TA1REC.TA1LOCAT[4] = "N1      ";
        TA1REC.TA1DBASE = "DCUST   ";
        TA1REC.TA1TBLVU = "VCMPNY01";
        TA1REC.TA1TBLKE = OS0LW01.OS0LW-POST-KEY;
        ;
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        ;
        COMMAREA.CAUSERA = " ";
        ;
        XSPF4();
        exit program;
      end
    end
  end
  ;
  ;
end // end OS0LS-FET-KUCREC

// Format OS0L Map Headings
Function OS0LS-FMT-HEADINGS()
  ;
  ;
  OS0LM001.OS0LM-MAP-DTE = OSWWREC.OSWWCDAT; /* formatted current date*/
  ;
  OS0LM001.OS0LM-MAP-RVN = 01;
  ;
  OS0LM001.OSWWTF1P = OSWWREC.OSWWTF1P;
  OS0LM001.OSWWTF1M = OSWWREC.OSWWTF1M;
  ;
end // end OS0LS-FMT-HEADINGS

// Get KUCREC VIA IO For KUCCOID
Function OS0LS-GET-KUCREC()
  ;
  ;
  set SQLCA empty;
  set KUCREC empty;
  ;
  KUCREC.KUCCOID = OS0LM001.KUCCOID;
  OS0LW01.OS0LW-POST-KEY = OS0LM001.KUCCOID;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set OS0LM001.KUCCOID cursor, bold;
      converseLib.validationFailed(837);
      OSWWREC.OSWWERFL = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        set OS0LM001.KUCCOID cursor;
        converseLib.validationFailed(010);
        OSWWREC.OSWWERFL = "Y";
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0L    ";
        TA1REC.TA1LOCAT[1] = "OS0LS-GE";
        TA1REC.TA1LOCAT[2] = "T-KUCREC";
        TA1REC.TA1LOCAT[3] = " IO0240 ";
        TA1REC.TA1LOCAT[4] = "S       ";
        TA1REC.TA1DBASE = "DCUST   ";
        TA1REC.TA1TBLVU = "VCMPNY01";
        TA1REC.TA1TBLKE = OS0LW01.OS0LW-POST-KEY;
        ;
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        ;
        COMMAREA.CAUSERA = " ";
        ;
        XSPF4();
        exit program;
      end
    end
  end
  ;
  ;
end // end OS0LS-GET-KUCREC

// Get KUKREC VIA IO For KUKPCOID
Function OS0LS-GET-KUKREC()
  ;
  ;
  set SQLCA empty;
  set KUKREC empty;
  ;
  KUKREC.KUKPCOID = OS0LM001.KUKPCOID;
  OS0LW01.OS0LW-POST-KEY = OS0LM001.KUKPCOID;
  ;
  call "IO0030" ("S ", SQLCA, KUKREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set OS0LM001.KUKPCOID cursor, bold;
      converseLib.validationFailed(836);
      OSWWREC.OSWWERFL = "Y";
      return;
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        set OS0LM001.KUKPCOID cursor;
        converseLib.validationFailed(010);
        OSWWREC.OSWWERFL = "Y";
        return;
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0L    ";
        TA1REC.TA1LOCAT[1] = "OS0LS-GE";
        TA1REC.TA1LOCAT[2] = "T-KUKREC";
        TA1REC.TA1LOCAT[3] = " IO0030 ";
        TA1REC.TA1LOCAT[4] = "S       ";
        TA1REC.TA1DBASE = "DCUST   ";
        TA1REC.TA1TBLVU = "VPARNT01";
        TA1REC.TA1TBLKE = OS0LW01.OS0LW-POST-KEY;
        ;
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        ;
        COMMAREA.CAUSERA = " ";
        ;
        XSPF4();
        exit program;
      end
    end
  end
  ;
  ;
end // end OS0LS-GET-KUKREC

// Initialize OS0L Application
Function OS0LS-INIT-OS0L()
  ;
  set KUCREC empty; /* product file*/
  set KUKREC empty; /* product file*/
  set OSRREC empty; /* product file*/
  set SQLCA empty; /* return code from DB2*/
  set TA1REC empty; /* diagnostic record*/
  set TA5REC empty; /* temp storage io- record*/
  set OSWWREC empty; /* common working storage*/
  set OS0LW01 empty; /* working storage*/
  ;
  TA1REC.TA1MAP = "OS0LM001"; /* map name for diags*/
  COMMAREA.CACURRAP = "OS0L"; /* format curr appl name*/
  ;
  OSWWREC.OSWWGRP = COMMAREA.CAUSERA;
  ;
    /* verify that they came from os0k first*/
  ;
  if (OSWWREC.OSWWINIT != "OS0K")
    transfer to program "OS0K" passing COMMAREA;
    exit program;
  end
  ;
  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate; /* format current date*/
  ;
  OS0LW01.OS0LW-TS-EXISTS-FL = "N"; /* init temp storage flag*/
  ;
end // end OS0LS-INIT-OS0L

// Build/Load Bulk Asgnmnt Array
Function OS0LS-LOAD-MAP()
  ;
     /* move fields from osrrec to screen*/
  ;
  OS0LM001.OS0LM-SEL-CD[OSWWTF1S] = OSRREC.OSRMSEL[OSWWTF1S];
  OS0LM001.OB-BULK-ASGN-ID[OSWWTF1S] = OSRREC.OB-BULK-ASGN-ID[OSWWTF1S];
  OS0LM001.OB-BULK-ASGN-DESC[OSWWTF1S] = OSRREC.OB-BULK-ASGN-DESC[OSWWTF1S];
  OS0LM001.OB-GPC-CODE[OSWWTF1S] = OSRREC.OB-GPC-CODE[OSWWTF1S];
  OS0LM001.OB-BULK-ASGN-EBDT[OSWWTF1S] = OSRREC.OB-BULK-ASGN-EBDT[OSWWTF1S];
  OS0LM001.OB-BULK-ASGN-EXDT[OSWWTF1S] = OSRREC.OB-BULK-ASGN-EXDT[OSWWTF1S];
  OS0LM001.XXX-STAT[OSWWTF1S] = OSRREC.XXX-STAT[OSWWTF1S];
  ;
  ;
end // end OS0LS-LOAD-MAP

// Load Temp Storage Rec - OSRREC
Function OS0LS-LOAD-OSRREC()
  ;
  ;
  set OSRREC empty;
  OSWWREC.OSWWTF1S = 1; /* init subscript*/
  ;
  while (OSWWREC.OSWWTF1S <= 11 /**/
   && OS0LW01.OS0LWEOF == "N") /* and not end of file*/
    ;
    OSRREC.OSRMSEL[OSWWTF1S] = " ";
    OSRREC.OB-BULK-ASGN-ID[OSWWTF1S] = VBASGN01.OB-BULK-ASGN-ID;
    OSRREC.OB-BULK-ASGN-DESC[OSWWTF1S] = VBASGN01.OB-BULK-ASGN-DESC;
    OSRREC.OB-BULK-ASGN-EBDT[OSWWTF1S] = VBASGN01.OB-BULK-ASGN-EBDT;
    OSRREC.OB-BULK-ASGN-EXDT[OSWWTF1S] = VBASGN01.OB-BULK-ASGN-EXDT;
    OSRREC.OB-GPC-CODE[OSWWTF1S] = VBASGN01.XGPCD;
    OSRREC.XXX-STAT[OSWWTF1S] = VBASGN01.XXX-STAT;
    ;
    OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S + 1; /* increment subscript*/
    ;
    OS0LS-NXT-VBASGN01(); /* get next bulk asgnmnt*/
    ;
  end
  ;
  ;
    /* write temp storage page to osrrec*/
  ;
  if (OSWWREC.OSWWTF1S > 1) /* atleast 1 bulk asgnmnt*/
    OS0LS-WRI-TMP-STOR();
    OSWWREC.OSWWTF1P = OSWWREC.OSWWTF1P + 1; /* save page as max page*/
  else
    if (OSWWREC.OSWWTF1P == 1) /* still on first page*/
      converseLib.validationFailed(839); /* no bulk asgnmnts found*/
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
    end
  end
  ;
  ;
end // end OS0LS-LOAD-OSRREC

// Fetch Next VBASGN01 Record
Function OS0LS-NXT-VBASGN01()
  ;
  ;
  set SQLCA empty;
  ;
  if (OS0LW01.OS0LW-VBASGN01-CD == "01")
    call "IO7200" ("N1", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
  else
    if (OS0LW01.OS0LW-VBASGN01-CD == "02")
      call "IO7200" ("N2", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
    else
      if (OS0LW01.OS0LW-VBASGN01-CD == "03")
        call "IO7200" ("N3", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
      else
        if (OS0LW01.OS0LW-VBASGN01-CD == "04")
          call "IO7200" ("N4", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
        end
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OS0LW01.OS0LWEOF = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == -911)
        OSWWREC.OSWWERFL = "Y";
        converseLib.validationFailed(010); /* DATABASE BUSY*/
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OS0L";
        TA1REC.TA1LOCAT[1] = "OS0LS-NX";
        TA1REC.TA1LOCAT[2] = "T-VBASGN";
        TA1REC.TA1LOCAT[3] = "01      ";
        TA1REC.TA1LOCAT[4] = "        ";
        TA1REC.TA1DBASE = "DORDER  ";
        TA1REC.TA1TBLVU = "VBASGN01";
        TA1REC.TA1TBLKE = " ";
        ;
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        ;
        COMMAREA.CAUSERA = " ";
        ;
        XSPF4();
        exit program;
      end
    end
  end
  ;
  ;
end // end OS0LS-NXT-VBASGN01

// Open VBASGN01 Cursor
Function OS0LS-OPN-VBASGN01()
  ;
  set SQLCA empty;
  ;
  if (OS0LW01.OS0LW-VBASGN01-CD == "01")
    VBASGN01.KUCGRPID = OS0LM001.KUCGRPID;
    call "IO7200" ("S1", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
  else
    if (OS0LW01.OS0LW-VBASGN01-CD == "02")
      VBASGN01.KUKPCOID = OS0LM001.KUKPCOID;
      call "IO7200" ("S2", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
    else
      if (OS0LW01.OS0LW-VBASGN01-CD == "03")
        VBASGN01.KUCCOID = OS0LM001.KUCCOID;
        call "IO7200" ("S3", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
      else
        if (OS0LW01.OS0LW-VBASGN01-CD == "04")
          set VBASGN01 empty;
          call "IO7200" ("S4", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};
        end
      end
    end
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      OSWWREC.OSWWERFL = "Y";
      converseLib.validationFailed(010); /* DATABASE BUSY*/
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS0L";
      TA1REC.TA1LOCAT[1] = "OS0LS-OP";
      TA1REC.TA1LOCAT[2] = "N-VBASGN";
      TA1REC.TA1LOCAT[3] = "01      ";
      TA1REC.TA1LOCAT[4] = "        ";
      TA1REC.TA1DBASE = "DORDER  ";
      TA1REC.TA1TBLVU = "VBASGN01";
      TA1REC.TA1TBLKE = " ";
      ;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      ;
      COMMAREA.CAUSERA = " ";
      ;
      XSPF4();
      exit program;
    end
  end
  ;
  ;
end // end OS0LS-OPN-VBASGN01

// Non-DB2 Post Routine TA0020
Function OS0LS-POST-NO-ROLL()
       /* Non-DB2 post routine*/
  ;
  ;
   /* the following fields will be filled in by the*/
   /* calling stmt group before entering this routine*/
     /* ta1locat(1) = transaction type  ie: 'ss' 'sn'*/
     /* ta1locat(2) = i/o mod name*/
     /* ta1locat(3) = calling stmt group name*/
     /* ta1locat(4) = programmers option(extra key data)*/
     /* taerec.taedesc1 = programmers opiton (additional key data*/
     /* taerec.taedesc2 = messages*/
     /* ta1map = appl's mapname and should be initilized*/
              /* in the programs init process.*/
   /* return code processing will also be handled by the*/
   /* calling stmt group.*/
  ;
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "POST";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  TA1REC.TA1TBLKE = OS0LW01.OS0LW-POST-KEY; /* move system key*/
  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end
  ;
end // end OS0LS-POST-NO-ROLL

// Purge Bulk Asgnmnt Temp Storag
Function OS0LS-PRG-TMP-STOR()
  ;
  ;
  ;
   /* purge temporary storage 1*/
  ;
  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    OSWWREC.OSWWTF1P = 1;
    OSWWREC.OSWWTF1S = 1;
    OSWWREC.OSWWTF1M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSRREC.OSRTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0LS-POST-NO-ROLL(); /* post,  no rollback, non db2*/
    ;
    ;
  end
end // end OS0LS-PRG-TMP-STOR

// Read Bulk Asgnmnt Temp Storage
Function OS0LS-RED-TMP-STOR()
  ;
  ;
  ;
   /* read temporary storage 1*/
  ;
  set OSRREC empty;
  ;
  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = OSWWREC.OSWWTF1P; /* current page*/
  OSRREC.OSRTSLEN = 588; /* length of record*/
  ;
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    OS0LW01.OS0LW-TS-EXISTS-FL = "Y"; /* set ts exists flag on*/
  else
    TA1REC.TA1LOCAT[1] = "READ TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSRREC.OSRTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0LS-POST-NO-ROLL(); /* post, no rollback, non db2 diags*/
    ;
    ;
  end
end // end OS0LS-RED-TMP-STOR

// Reset Array Attributes
Function OS0LS-RESET-ARRAY()
  ;
     /* set select fields defined*/
  ;
  set OS0LM001.OS0LM-SEL-CD[OSWWTF1S] initialAttributes;
  set OS0LM001.OB-BULK-ASGN-ID[OSWWTF1S] initialAttributes;
  set OS0LM001.OB-BULK-ASGN-DESC[OSWWTF1S] initialAttributes;
  set OS0LM001.OB-GPC-CODE[OSWWTF1S] initialAttributes;
  set OS0LM001.OB-BULK-ASGN-EBDT[OSWWTF1S] initialAttributes;
  set OS0LM001.OB-BULK-ASGN-EXDT[OSWWTF1S] initialAttributes;
  set OS0LM001.XXX-STAT[OSWWTF1S] initialAttributes;
  ;
  ;
     /* set select fields dark if line is empty*/
  ;
  if (OSRREC.OB-BULK-ASGN-ID[OSWWTF1S] == " ") /* no bulk asgnmnt*/
    set OS0LM001.OS0LM-SEL-CD[OSWWTF1S] skip, invisible;
    set OS0LM001.OB-BULK-ASGN-ID[OSWWTF1S] skip, invisible;
    set OS0LM001.OB-BULK-ASGN-DESC[OSWWTF1S] skip, invisible;
    set OS0LM001.OB-GPC-CODE[OSWWTF1S] skip, invisible;
    set OS0LM001.OB-BULK-ASGN-EBDT[OSWWTF1S] skip, invisible;
    set OS0LM001.OB-BULK-ASGN-EXDT[OSWWTF1S] skip, invisible;
    set OS0LM001.XXX-STAT[OSWWTF1S] skip, invisible;
  end
  ;
  ;
end // end OS0LS-RESET-ARRAY

// Reset Field Attributes
Function OS0LS-RESET-ATTRIB()
  ;
     /* set heading attributes*/
  ;
  set OS0LM001.KUCGRPID initialAttributes; /* COMPANY GROUP*/
  set OS0LM001.KUKPCOID initialAttributes; /* PARENT COMPANY*/
  set OS0LM001.KUCCOID initialAttributes; /* CUSTOMER ID*/
  ;
  set OS0LM001.OSWWTF1P initialAttributes; /* page number*/
  ;
  ;
     /* reset bulk assignment array attributes*/
  ;
  OSWWREC.OSWWTF1S = 11; /* init subscript*/
  ;
  while (OSWWREC.OSWWTF1S >= 1) /* process all 11 rows*/
    OS0LS-RESET-ARRAY(); /* set askip if '*' on select, set unused dark*/
    OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S - 1;
  end
  ;
  if (OS0LM001.OB-BULK-ASGN-ID != " ") /* atleast one bulk assignment*/
    set OS0LM001.OS0LM-SEL-CD[1] cursor; /* position cursor*/
  end
  ;
  ;
end // end OS0LS-RESET-ATTRIB

// OS SYSTEM - dxfr to OS0L
Function OS0LS-RESTART-OS0L()
  ;
   /* Application will transfer to itself*/
  ;
  OSWWREC.OSWW-MSG-NBR = converseVar.validationMsgNum; /* save msg no - so it can be*/
                                           /* displayed on restart*/
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  sysVar.transferName = COMMAREA.CACURRAP;
  transfer to program sysVar.transferName passing COMMAREA;
  ;
end // end OS0LS-RESTART-OS0L

// Scroll Forward/Backward
Function OS0LS-SCROLL-PAGE()
  ;
       /* edit pf7/pf8 and enter for next os0l map display*/
  ;
  if (converseVar.eventKey is pf7)
    OSWWREC.OSWWTF1P = OSWWREC.OSWWTF1P - 1; /* prior page*/
  else
    if (converseVar.eventKey is pf8)
      OSWWREC.OSWWTF1P = OSWWREC.OSWWTF1P + 1; /* next page*/
    else
      if (converseVar.eventKey is enter
       && OS0LM001.OSWWTF1P != OSWWREC.OSWWTF1P) /* page nbr changed*/
        OSWWREC.OSWWTF1P = OS0LM001.OSWWTF1P; /* move map pg to rec*/
        OS0LS-RESTART-OS0L(); /* restart application*/
      end
    end
  end
  ;
end // end OS0LS-SCROLL-PAGE

// Set All Selections = 'S'
Function OS0LS-SEL-ALL()
  ;
  ;
    /* TURN ON ALL SELECTIONS IF USER REQUESTS "A"*/
  ;
  if (OS0LM001.OS0LM-SEL-CD[1] == "A") /* select all errors*/
    OSWWREC.OSWWTF1S = 1; /* init subscript*/
    while (OSWWREC.OSWWTF1S <= 11) /* less than or equal to 11*/
      if (OS0LM001.OB-BULK-ASGN-ID[OSWWTF1S] == " ")
         /* skip it*/
      else
        OS0LM001.OS0LM-SEL-CD[OSWWTF1S] = "S"; /* turn on selections*/
      end
      OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S + 1; /* increment by +1*/
    end
  end
  ;
  ;
end // end OS0LS-SEL-ALL

// Transfer Control to Appls
Function OS0LS-TRNSFR-CNTL()
  ;
  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
  ;
  if (converseVar.eventKey is pf3)
    if (OS0LW01.OS0LW-TS-EXISTS-FL == "Y") /* temp storage exists*/
      OS0LS-PRG-TMP-STOR(); /* purge bulk assignments*/
    end
    ;
    COMMAREA.CATOAP = "OS0K"; /* define bulk asgnmnts scrn*/
    XSEXIT();
    ;
  end
  ;
  if (converseVar.eventKey is pf4)
    if (OS0LW01.OS0LW-TS-EXISTS-FL == "Y") /* temp storage exists*/
      OS0LS-PRG-TMP-STOR(); /* purge temp storage 1*/
    end
    COMMAREA.CAUSERA = " ";
    ;
    XSPF4();
  end
  ;
  if (converseVar.eventKey is pf9)
    if (OS0LW01.OS0LW-TS-EXISTS-FL == "Y") /* temp storage exists*/
      OS0LS-PRG-TMP-STOR(); /* purge temp storage 1*/
    end
    ;
    OS0LS-DISPLAY-ALL(); /* bld temp storage for all ba's*/
    OSWWREC.OSWWFRMAP = "OS0L"; /* format from appl*/
    OS0LS-RESTART-OS0L(); /* restarts application*/
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (OSWWREC.OSWWERFL == "N")
      OS0LS-RESTART-OS0L(); /* restarts application*/
    end
  end
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
  ) /* next sentence - there may be errors*/
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    OSWWREC.OSWWERFL = "Y"; /* set 'Os' error flag*/
  end
  ;
  ;
end // end OS0LS-TRNSFR-CNTL

// Update For Converse
Function OS0LS-UPD-CONVERSE()
  ;
      /* move all selections from map to temp storage*/
      /* then process first selection using temp storage*/
  ;
  ;
  OS0LS-SEL-ALL(); /* check for 'all' selection*/
  ;
  OSWWREC.OSWWTF1S = 1; /* init subscript*/
  while (OSWWREC.OSWWTF1S <= 11) /* max orders per page*/
    OSRREC.OSRMSEL[OSWWTF1S] = OS0LM001.OS0LM-SEL-CD[OSWWTF1S];
    OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S + 1;
  end
  ;
  OS0LS-UPD-TMP-STOR(); /* update temp storage with selections*/
  ;
  if (OS0LW01.OS0LWSEL == "Y") /* selection was made*/
    OSWWREC.OSWWTF1S = 1; /* init subscript*/
    while (OSWWREC.OSWWTF1S <= 11) /* max orders per page*/
      if (OSRREC.OSRMSEL[OSWWTF1S] == "S") /* bulk assignment selected*/
        OS0LS-UPD-EXECUTE(); /* main update*/
        return; /* get out with current subscript*/
      end
      OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S + 1;
    end
  end
  ;
end // end OS0LS-UPD-CONVERSE

// Main Update For Each Selection
Function OS0LS-UPD-EXECUTE()
  ;
  OSWWREC.OSWWTF1S = 1; /* init subscript*/
  ;
  while (OSWWREC.OSWWTF1S <= 11) /* check all 11 bulk asgnmnts*/
    if (OSRREC.OSRMSEL[OSWWTF1S] == "S")
      OSRREC.OSRMSEL[OSWWTF1S] = "V"; /* update as viewed*/
      OS0LS-UPD-TMP-STOR(); /* update temp storage*/
      OSWWREC.OSWWFRMAP = "OS0L"; /* set from appl to os0l*/
      OSWWREC.OB-BULK-ASGN-ID = OSRREC.OB-BULK-ASGN-ID[OSWWTF1S];
      OSWWREC.KUCGRPID = OS0LM001.KUCGRPID;
      OSWWREC.KUKPCOID = OS0LM001.KUKPCOID;
      OSWWREC.KUCCOID = OS0LM001.KUCCOID;
      COMMAREA.CAUSERA = OSWWREC.OSWWGRP;
      COMMAREA.CAFROMAP = "OS0L";
      COMMAREA.CATOAP = "OS0M";
      XSEXIT();
    end
    OSWWREC.OSWWTF1S = OSWWREC.OSWWTF1S + 1;
  end
  ;
  ;
end // end OS0LS-UPD-EXECUTE

// Update Bulk Asgnmnt Temp Stora
Function OS0LS-UPD-TMP-STOR()
  ;
  ;
  ;
   /* update temporary storage 1*/
  ;
  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "U"; /* function code*/
  TA5REC.TA5TSQIX = OSWWREC.OSWWTF1P; /* current page*/
  OSRREC.OSRTSLEN = 588; /* length of record*/
  ;
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "UPD TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSRREC.OSRTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0LS-POST-NO-ROLL(); /* post, no rollback, non db2*/
    ;
    ;
  end
end // end OS0LS-UPD-TMP-STOR

// Write Bulk Asgnmnt Temp Storag
Function OS0LS-WRI-TMP-STOR()
  ;
  ;
  ;
   /* write temporary storage 1*/
  ;
  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  OSRREC.OSRTSLEN = 566; /* length of record*/
  ;
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/
  ;
  if (TA5REC.TA5RTNCD == 0)
    OS0LW01.OS0LW-TS-EXISTS-FL = "Y"; /* set temp storage flag*/
    OSWWREC.OSWWTF1M = TA5REC.TA5TSQIX;
  else
    TA1REC.TA1LOCAT[1] = "ADD TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSRREC.OSRTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS0LS-POST-NO-ROLL(); /* post, no rollback, non db2*/
    ;
    ;
  end
end // end OS0LS-WRI-TMP-STOR

//*** RECORD=OS0LW01 ****
//     Working Storage Record for OS0L.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   05/02/94    schase     initial creation
// ***********************
Record OS0LW01 type basicRecord
  10 OS0LWSEL OS0LWSEL ; 
  10 OS0LWERR OS0LWERR ; 
  10 OS0LWEOF OS0LWEOF ; 
  10 OS0LW-KEY-CHGD OS0LW-KEY-CHGD ; 
  10 OS0LW-POST-KEY OS0LW-POST-KEY ; 
  10 OS0LW-VBASGN01-CD OS0LW-VBASGN01-CD ; 
  10 OS0LW-TS-EXISTS-FL OS0LW-TS-EXISTS-FL ; 
end // end OS0LW01

// map key changed flag
DataItem OS0LW-KEY-CHGD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map key for posting
DataItem OS0LW-POST-KEY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// os0l temp storage exists flag
DataItem OS0LW-TS-EXISTS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO7200 CALL CODE
DataItem OS0LW-VBASGN01-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage end of file
DataItem OS0LWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage error flag
DataItem OS0LWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selection made flag
DataItem OS0LWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

