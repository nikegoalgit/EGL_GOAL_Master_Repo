package os02;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.*;
import ku.common.KUCREC;
import ku.common.KUKREC;
import op.common.*;
import os.common.OSRREC;
import os.common.OSWWREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VBASGN01;

//*** PROGRAM=OS02 ****
// OVERVIEW:
// POSSIBLE STATEMENT GROUP MEANINGS:
//    OS02S-ADD-X  Add Record
//    OS02S-GET-X  Select Record
//    OS02S-BLD-X  Build Record
//    OS02S-EDT-X  Edit Record
//    OS02S-FMT-X  Format Record
//    OS02S-UPD-X  Update Record
//    OS02S-LOAD-X Load Process
// 
// **  statement group naming is flexible and may not have
//     any meaning especially after several enhancements.
// 
// ********************************************************
// *     M A I N T E N A N C E     L O G                  *
// ********************************************************
// *
// * DATE        NAME          DESCRIPTION OF CHANGE
// *
// * 12/09/97   KLEE       Created.
// *********************
Program OS02 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUKREC KUKREC; // record
  OS02W01 OS02W01; // record
  OSRREC OSRREC; // record
  OSWWREC OSWWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBASGN01 VBASGN01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use OS02M.OS02M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OS02000: OS02000();
    goto OS02010;
    OS02010: OS02010();
    goto OS02010;
  end // end main
end // end OS02

// main execute process
Function OS02000()
     /* Check csp security*/

  XSENTRY();
  XSSEGTR(); /* set segmented tran id*/

     /* Initialize application - init records, get zz date/time,*/
                              /* save map name for diagnostics*/
  OS02S-INIT-OS02();


     /* Display commarea message*/

  OS02M001.CAMSG = OSWWREC.CAMSG;
  OSWWREC.CAMSG = " ";


     /* Build map for display*/

  OS02S-BLD-MAP();



end // end OS02000

// converse/ after process
Function OS02010()

  converseLib.clearScreen();
   /* set map to scroll properly*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/

  converse OS02M001 ;

     /* Init error stuff*/

  OSWWREC.OSWWERFL = "N";
  converseLib.validationFailed(0);
  OS02M001.CAMSG = " ";


     /* Reset field attributes*/

  OS02S-RESET-ATTRIB();


     /* Transfer control to another application*/

  OS02S-TRNSFR-CNTL(); /* transfer to requested application.*/


end // end OS02010

// BUILD OS02 MAP
Function OS02S-BLD-MAP()

     /* build map headings*/

  OS02S-FMT-HEADINGS();

    /* display existing bulk assignment id*/

  if (OSWWREC.OB-BULK-ASGN-ID != " ") /* if bulk asgnmnt id exists*/
    OS02W01.OS02W-MAINT-CD = "C"; /* change maint code*/
    OS02S-GET-VBASGN01(); /* select from vbasgn01*/
    OS02S-LOAD-MAP(); /* load values to map*/
  else
    OS02W01.OS02W-MAINT-CD = "A"; /* add maint code*/
    OS02S-LOAD-MAP(); /* load values to map*/
  end

     /* reset field attributes*/

  OS02S-RESET-ATTRIB();


end // end OS02S-BLD-MAP

// MMDDYY TO COMP - NO VALIDATE
Function OS02S-CCYYMMDD-MAP()
    /* convert CCYYMMDD date to display MMDDYY for map*/


   /* the calling stmt group must move the CCYYMMDD date*/
   /* to OSWWREC.OSWWDT8 before entering this routine*/

  if (OSWWREC.OSWWDT8 == 0)
    OSWWREC.OSWWDT6 = 0;
    return;
  end


  OSWWREC.OSWWDT6Y = OSWWREC.OSWWDT8Y;
  OSWWREC.OSWWDT6M = OSWWREC.OSWWDT8M;
  OSWWREC.OSWWDT6D = OSWWREC.OSWWDT8D;

   /* the calling stmt group needs to move*/
   /* OSWWREC.OSWWDT6 to the map field.*/

end // end OS02S-CCYYMMDD-MAP

// FORMAT OS02M001 HEADINGS
Function OS02S-FMT-HEADINGS()

  OS02M001.OS02M-MAP-DTE = OSWWREC.OSWWCDAT; /* formatted current date*/

  OS02M001.OS02M-MAP-RVN = 01; /* map revision number*/

end // end OS02S-FMT-HEADINGS

// GET VBASGN01 / OB-BULK-ASGN-ID
Function OS02S-GET-VBASGN01()


  set SQLCA empty;
  set VBASGN01 empty;

  VBASGN01.OB-BULK-ASGN-ID = OSWWREC.OB-BULK-ASGN-ID;
  OS02W01.OS02W-POST-KEY = OSWWREC.OB-BULK-ASGN-ID;

  call "IO7200" ("S ", SQLCA, VBASGN01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == -911)
      OSWWREC.OSWWERFL = "Y"; /* set error flag*/
      converseLib.validationFailed(010); /* database busy*/
      set OS02M001.KUCGRPID cursor; /* position cursor*/
    else
      if (OSWWREC.OSWWFRMAP == "OS0L") /* came from os0l appl*/
        OS02S-PRG-TMP-STOR(); /* purge os0l temp stor*/
      end
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OS02    ";
      TA1REC.TA1LOCAT[1] = "OS02S-GE";
      TA1REC.TA1LOCAT[2] = "T-VBASGN";
      TA1REC.TA1LOCAT[3] = "01 IO720";
      TA1REC.TA1LOCAT[4] = "0 S     ";
      TA1REC.TA1DBASE = "DORDB   ";
      TA1REC.TA1TBLVU = "VBASGN01";
      TA1REC.TA1TBLKE = OS02W01.OS02W-POST-KEY;

      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};

      COMMAREA.CAUSERA = " ";

      XSPF4();
      exit program;
    end
  end


end // end OS02S-GET-VBASGN01

// INITIALIZE OS02 APPLICATION
Function OS02S-INIT-OS02()

  set KUCREC empty; /* set customer record empty*/
  set KUKREC empty; /* set parent record empty*/
  set OSWWREC empty; /* bulk assignment system working storage*/
  set OSRREC empty; /* temp storage record from os0l appl*/
  set SQLCA empty; /* return code from DB2*/
  set ERRSQLCA empty; /* return code from non-db2*/
  set TAEREC empty; /* diags for non db2*/
  set TA1REC empty; /* diagnostic record*/
  set TA2REC empty; /* temp storage record*/
  set TA5REC empty; /* temp storage record*/
  set VBASGN01 empty; /* bulk assignment record*/
  set OS02W01 empty; /* working storage*/


  OSWWREC.OSWWGRP = COMMAREA.CAUSERA; /* format system working store*/

    /* verify that they came from os0k application*/

  if (OSWWREC.OSWWINIT != "OS0K")
    transfer to program "OS0K" passing COMMAREA;
    exit program;
  end

  OSWWREC.OSWWCDAT = VGVar.currentShortGregorianDate;

  TA1REC.TA1MAP = "OS02M001"; /* map name for diags*/


end // end OS02S-INIT-OS02

// LOAD MAP USING VBASGN01
Function OS02S-LOAD-MAP()


  OS02M001.OB-BULK-ASGN-ID = VBASGN01.OB-BULK-ASGN-ID;
  OS02M001.OB-BULK-ASGN-DESC = VBASGN01.OB-BULK-ASGN-DESC;

  if (OS02W01.OS02W-MAINT-CD == "A")
    OS02M001.XXX-STAT = "A";
    OSWWREC.OSWWDT8 = OSWWREC.OSWWCDAT;
    OSWWREC.OSWWDT6Y = OSWWREC.OSWWDT8Y;
    OSWWREC.OSWWDT6M = OSWWREC.OSWWDT8M;
    OSWWREC.OSWWDT6D = OSWWREC.OSWWDT8D;
    OS02M001.ZZZCHGDT = OSWWREC.OSWWDT6;
    OS02M001.KUCGRPID = 0;
    OS02M001.KUKPCOID = 0;
    OS02M001.KUCCOID = 0;
    OS02M001.XOTPROPF = "Y";
    OS02M001.XOTFUTRF = "Y";
  else
    OSWWREC.OSWWDT8 = VBASGN01.OB-BULK-ASGN-EBDT;
    OS02S-CCYYMMDD-MAP();
    OS02M001.OB-BULK-ASGN-EBDT = OSWWREC.OSWWDT6;

    OSWWREC.OSWWDT8 = VBASGN01.OB-BULK-ASGN-EXDT;
    OS02S-CCYYMMDD-MAP();
    OS02M001.OB-BULK-ASGN-EXDT = OSWWREC.OSWWDT6;

    OS02M001.XXX-STAT = VBASGN01.XXX-STAT;

    OSWWREC.OSWWDT8 = VBASGN01.ZZZCHGDT;
    OS02S-CCYYMMDD-MAP();
    OS02M001.ZZZCHGDT = OSWWREC.OSWWDT6;

    OS02M001.KUCGRPID = VBASGN01.KUCGRPID;
    OS02M001.KUKPCOID = VBASGN01.KUKPCOID;
    OS02M001.KUCCOID = VBASGN01.KUCCOID;
    OS02M001.XOTPROPF = VBASGN01.XOTPROPF;
    OS02M001.XOTFUTRF = VBASGN01.XOTFUTRF;
    OS02M001.XGPCD = VBASGN01.XGPCD;
    OS02M001.XSOCD = VBASGN01.XSOCD;

    OSWWREC.OSWWDT8 = VBASGN01.OB-NEED-DRAW-BDT;
    OS02S-CCYYMMDD-MAP();
    OS02M001.OB-NEED-DRAW-BDT = OSWWREC.OSWWDT6;

    OSWWREC.OSWWDT8 = VBASGN01.OB-NEED-DRAW-XDT;
    OS02S-CCYYMMDD-MAP();
    OS02M001.OB-NEED-DRAW-XDT = OSWWREC.OSWWDT6;
  end


end // end OS02S-LOAD-MAP

// Non-DB2 Post Routine TA0020
Function OS02S-POST-NO-ROLL()
       /* Non-DB2 post routine*/


   /* the following fields will be filled in by the*/
   /* calling stmt group before entering this routine*/
     /* ta1locat(1) = transaction type  ie: 'ss' 'sn'*/
     /* ta1locat(2) = i/o mod name*/
     /* ta1locat(3) = calling stmt group name*/
     /* ta1locat(4) = programmers option(extra key data)*/
     /* taerec.taedesc1 = programmers opiton (additional key data*/
     /* taerec.taedesc2 = messages*/
     /* ta1map = appl's mapname and should be initilized*/
              /* in the programs init process.*/
   /* return code processing will also be handled by the*/
   /* calling stmt group.*/

  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "POST";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end

end // end OS02S-POST-NO-ROLL

// Purge Bulk Asgnmnt Temp Storag
Function OS02S-PRG-TMP-STOR()



   /* purge temporary storage 1*/

  TA5REC.TA5APPID = "OSFL"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/
  call "TA0050" (OSRREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    OSWWREC.OSWWTF1P = 1;
    OSWWREC.OSWWTF1S = 1;
    OSWWREC.OSWWTF1M = 1;
  else
    TA1REC.TA1LOCAT[1] = "PRGE TS1";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TA1REC.TA1TBLKE = OSRREC.OSRTSROW[1]; /* first row, first rec*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    OS02S-POST-NO-ROLL(); /* post,  no rollback, non db2*/


  end
end // end OS02S-PRG-TMP-STOR

// RESET FIELD ATTRIBUTES
Function OS02S-RESET-ATTRIB()

     /* set heading attributes*/

  if (OS02W01.OS02W-MAINT-CD == "C") /* bulk assignment exists*/
   /* SET OS02M001.OB-BULK-ASGN-ID AUTOSKIP,BLUE;*/
   /* SET OS02M001.OB-BULK-ASGN-DESC AUTOSKIP,BLUE;*/
    set OS02M001.KUCGRPID cursor, initialAttributes; /* COMPANY GROUP & set cursor*/
  else
    set OS02M001.OB-BULK-ASGN-EBDT initialAttributes;
    set OS02M001.OB-BULK-ASGN-EXDT initialAttributes;
    set OS02M001.OB-BULK-ASGN-ID cursor, initialAttributes; /* Bulk Asgnmnt & set csr*/
    set OS02M001.OB-BULK-ASGN-DESC initialAttributes;
    set OS02M001.OB-BULK-ASGN-EBDT initialAttributes;
    set OS02M001.OB-BULK-ASGN-EXDT initialAttributes;
    set OS02M001.KUCGRPID initialAttributes; /* COMPANY GROUP*/
  end

  set OS02M001.XXX-STAT initialAttributes;
  set OS02M001.ZZZCHGDT initialAttributes;

  set OS02M001.KUKPCOID initialAttributes; /* PARENT COMPANY*/
  set OS02M001.KUCCOID initialAttributes; /* CUSTOMER ID*/

  set OS02M001.XOTPROPF initialAttributes; /* PROP FLAG*/
  set OS02M001.XOTFUTRF initialAttributes; /* FUTURE FLAG*/
  set OS02M001.XGPCD initialAttributes; /* GPC CODE*/
  set OS02M001.OB-NEED-DRAW-BDT initialAttributes; /* BEGIN NEED DATE*/
  set OS02M001.OB-NEED-DRAW-XDT initialAttributes; /* END NEED DATE*/


end // end OS02S-RESET-ATTRIB

// TRANSFER CNTL FOR PFKEYS/ENTER
Function OS02S-TRNSFR-CNTL()

  COMMAREA.CAUSERA = OSWWREC.OSWWGRP;

  if (converseVar.eventKey is pf3)
    if (OSWWREC.OSWWFRMAP == "OS01") /* came from OS01 appl*/
      OS02S-PRG-TMP-STOR();
    end
    COMMAREA.CATOAP = "OS0K"; /* Order Inquiry parms*/
    XSEXIT();
  end

  if (converseVar.eventKey is pf4)
    if (OSWWREC.OSWWFRMAP == "OS01") /* came from OS01 appl*/
      OS02S-PRG-TMP-STOR();
    end
    COMMAREA.CAUSERA = " ";
    XSPF4();
  end

    /* transfer to os0m Application*/

  if (converseVar.eventKey is pf9
   && OSWWREC.OSWWERFL == "N")
    COMMAREA.CATOAP = "OS0M";
    XSEXIT();
  end

    /* check for invalid pfkey*/

  if (converseVar.eventKey is enter)
     /* next sentence - there may be errors*/
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    OSWWREC.OSWWERFL = "Y"; /* set error flag*/
  end

    /* continue to OS03 Application*/

  if (converseVar.eventKey is enter
   && OSWWREC.OSWWERFL == "N")
    COMMAREA.CATOAP = "OS03";
    XSEXIT();
  end



end // end OS02S-TRNSFR-CNTL

//*** RECORD=OS02W01 ****
//     Working Storage Record for OS02 Application.
// 
// ************************************************************
// *    MAINTENANCE LOG
// ************************************************************
// 
//   02/09/97    KLEE       initial creation
// ***********************
Record OS02W01 type basicRecord
  10 OS02W-MAINT-CD OS02W-MAINT-CD ; 
  10 OS02W-POST-KEY OS02W-POST-KEY ; 
  10 OS02W-POST-KEY2 OS02W-POST-KEY2 ; 
  10 OS02W-CHG-FLAG OS02W-CHG-FLAG ; 
  10 OS02W-KEY-CHG-FLAG OS02W-KEY-CHG-FLAG ; 
  10 OS02W-UPD-TEMP OS02W-UPD-TEMP ; 
  10 OS02W-OLD-OB-BULK-ASGN-ID OS02W-OLD-OB-BULK-ASGN-ID ; 
end // end OS02W01

// Map Field Changed Flag
DataItem OS02W-CHG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map Field Changed Flag
DataItem OS02W-KEY-CHG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// add/chg maint code
DataItem OS02W-MAINT-CD char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// Status field change flag
DataItem OS02W-OLD-OB-BULK-ASGN-ID char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ob-bulk-asgn-id key
DataItem OS02W-POST-KEY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kucgrpid/kukpcoid/kuccoid key
DataItem OS02W-POST-KEY2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Status field change flag
DataItem OS02W-UPD-TEMP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

