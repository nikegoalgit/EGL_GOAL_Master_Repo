package kr01;

import corpcom1.CAADD;
import corpcom1.CACHG;
import corpcom1.CACURRAP;
import corpcom1.CADEL;
import corpcom1.CAFROMAP;
import corpcom1.CAINQ;
import corpcom1.CAITEM;
import corpcom1.CAMSG;
import corpcom1.CASECRC;
import corpcom1.CASYSINT;
import corpcom1.CATOAP;
import corpcom1.CAUSERA;
import corpcom1.CAUSERID;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom6.UT1REC;
import corpx1.XDVCD;
import corpx1.XGPCD;
import corpx2.XNDCD;
import corpx2.XSOCD;
import corpx2.XWHCD;
import ta.common.TA1REC;
//*** PROGRAM=KR01 ****
// this is the microfilm index menu program
// 
// 
// 
// date created:        October 14, 1987
//       author:        Debbie Meier
//  maintenance:
// 
// init   date      reason
// -------------------------------------------------------
// mgatre 12-21-88  add applications 'C' and 'D'
// *********************
Program KR01 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KR01W01 KR01W01; // record
  KR01W02 KR01W02; // record
  KR01W03 KR01W03; // record
  KR01W04 KR01W04; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  UT1REC UT1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KR01T {deleteAfterUse = yes}; // table
  use KR01M.KR01M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KR01001: KR01001();
    ;
    ;
    goto KR01005;
    ;
    ;
    KR01005: KR01005();
    ;
    ;
        /* go to the top of application no matter what.*/
    ;
    ;
    goto KR01005;
    ;
    ;
  end // end main
end // end KR01

// inititialize application
Function KR01001()
  ;
  ;
  set COMMAREA empty; /* initialize commarea*/
  ;
  VGVar.handleHardIOErrors = 1; /* Return all file errors*/
  converseVar.commitOnConverse = 1; /* Commit on every converse*/
  ;
  set UT1REC empty; /* Initialize subroutine parameters*/
  ;
  call "UT0200" (UT1REC) {isNoRefresh = yes}; /* Obtain user identification*/
  ;
  if (UT1REC.UT1RETCD == 1) /* Non-zero return code*/
    ;
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "KR01001 "; /* Process name*/
    TA1REC.TA1LOC = "OBTAIN CICS USER IDENTIFICATION";
    SQLCA.SQLCAREC = UT1REC.UT1GRPLV; /* Error information*/
    ;
    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes}; /* Error diagnosis routine*/
    ;
    exit program;
    ;
  end
  ;
  COMMAREA.CAUSERID = UT1REC.UT1USRID;
  ;
  ;
end // end KR01001

// converse the microfilm menu
Function KR01005()
  ;
  ;
  KR01M001.XXXCURDT = VGVar.currentShortGregorianDate;
  ;
  ;
   /* ***********************************************************/
  converse KR01M001 ;
   /* ***********************************************************/
  ;
  ;
  KR01S05(); /* check pf keys*/
  ;
  ;
end // end KR01005

// validate pf keys
Function KR01S05()
  ;
  ;
      /* check for valid pfkeys*/
  ;
  if (converseVar.eventKey is enter)
    KR01S5B(); /* validate menu selection*/
  else
    if (converseVar.eventKey is pf3)
      call "UT0210"; /* exit kar system*/
      exit program;
    else
      KR01M001.VAGen_EZEMSG = "INVALID PF KEY";
    end
  end
  ;
  ;
end // end KR01S05

// validate menu selection
Function KR01S5B()
  ;
  ;
   /* validate menu selection against application table (kr01t)*/
  ;
  ;
  if (KR01M001.KR01MSEL in KR01T.KR01TSEL)
    COMMAREA.CATOAP = KR01T.KR01TPRM[sysVar.arrayIndex];
  end
  ;
  if (sysVar.arrayIndex > 0)
    KR01S5C(); /* write commarea to temp storage*/
    KR01S5D(); /* transfer to kr02*/
  else
    KR01M001.VAGen_EZEMSG = "INVALID MENU SELECTION";
  end
  ;
  ;
end // end KR01S5B

// write commarea to temp storage
Function KR01S5C()
  ;
  ;
  set KR01W02 empty;
  set KR01W03 empty;
  set KR01W04 empty;
  ;
  move COMMAREA to KR01W02 withV60Compat;
  KR01W02.CASYSINT = COMMAREA.CASYSINT;
  KR01W02.CAUSERID = COMMAREA.CAUSERID;
  KR01W02.CAFROMAP = COMMAREA.CAFROMAP;
  KR01W02.CACURRAP = COMMAREA.CACURRAP;
  KR01W02.CATOAP = COMMAREA.CATOAP;
  KR01W02.CAITEM = COMMAREA.CAITEM;
  KR01W02.CAMSG = COMMAREA.CAMSG;
  KR01W02.CASECRC = COMMAREA.CASECRC;
  KR01W02.CAADD = COMMAREA.CAADD;
  KR01W02.CACHG = COMMAREA.CACHG;
  KR01W02.CADEL = COMMAREA.CADEL;
  KR01W02.CAINQ = COMMAREA.CAINQ;
  KR01W02.XWHCD = COMMAREA.XWHCD;
  KR01W02.XDVCD = COMMAREA.XDVCD;
  KR01W02.XSOCD = COMMAREA.XSOCD;
  KR01W02.XNDCD = COMMAREA.XNDCD;
  KR01W02.XGPCD = COMMAREA.XGPCD;
  KR01W02.CAUSERA = COMMAREA.CAUSERA;
  ;
  KR01W03.KR01W3AP = "KR01";
  KR01W03.KR01W3CT = 1;
  KR01W03.KR01W3FC = "N";
  KR01W03.KR01W3RC = 0;
  ;
  KR01W04.KR01W4LG = 2048;
  KR01W04.KR01W4DA = KR01W02.KR01W2DA;
  ;
  call "TA0050" (KR01W04, KR01W03) {isNoRefresh = yes};
  ;
  if (KR01W03.KR01W3RC != 0)
    set TA1REC empty;
    set SQLCA empty;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KR01S5C";
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1LOC = "ADDING RECORDS TO TEMP WORK FILE";
    call "TA0020" (TA1REC, SQLCA);
    exit program;
  end
  ;
  ;
end // end KR01S5C

// transfer to kr02
Function KR01S5D()
  ;
  ;
  sysVar.transferName = "KR02";
  ;
  COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
  COMMAREA.CACURRAP = "KR02";
  COMMAREA.CATOAP = KR01T.KR01TPRM[sysVar.arrayIndex];
  ;
  transfer to transaction sysVar.transferName passing COMMAREA;
  ;
  ;
      /* check for bad csp system return code*/
  ;
  if (COMMAREA.CASECRC == 0
   && sysVar.errorCode != "00000000")
    KR01M001.VAGen_EZEMSG = "BAD SYSTEM RETURN CODE FROM SECURITY MODULE";
  end
  ;
  ;
end // end KR01S5D

Record KR01W01 type basicRecord
  10 CATOAP CATOAP ; 
    15 KR01WAPR KR01WAPR ; 
    15 * char(2) ; 
end // end KR01W01

Record KR01W02 type basicRecord
  10 KR01W2RL KR01W2RL ; 
    15 KR01W2DA KR01W2DA ; 
      20 CASYSINT CASYSINT ; 
      20 CAUSERID CAUSERID ; 
      20 CAFROMAP CAFROMAP ; 
      20 CACURRAP CACURRAP ; 
      20 CATOAP CATOAP ; 
      20 CAITEM CAITEM ; 
      20 CAMSG CAMSG ; 
      20 CASECRC CASECRC ; 
      20 CAADD CAADD ; 
      20 CACHG CACHG ; 
      20 CADEL CADEL ; 
      20 CAINQ CAINQ ; 
      20 XWHCD XWHCD ; 
      20 XDVCD XDVCD ; 
      20 XSOCD XSOCD ; 
      20 XNDCD XNDCD ; 
      20 XGPCD XGPCD ; 
      20 * char(169) ; 
      20 CAUSERA CAUSERA ; 
end // end KR01W02

Record KR01W03 type basicRecord
  10 KR01W3RL KR01W3RL ; 
    15 KR01W3AP KR01W3AP ; 
    15 KR01W3CT KR01W3CT ; 
    15 KR01W3FC KR01W3FC ; 
    15 KR01W3RC KR01W3RC ; 
end // end KR01W03

Record KR01W04 type basicRecord
  10 KR01W4RL KR01W4RL ; 
    15 KR01W4LG KR01W4LG ; 
    15 KR01W4DA KR01W4DA ; 
end // end KR01W04

// data
DataItem KR01W2DA char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KR01W2RL char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// application id
DataItem KR01W3AP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// count
DataItem KR01W3CT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// function code
DataItem KR01W3FC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return code
DataItem KR01W3RC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KR01W3RL char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data
DataItem KR01W4DA char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of data
DataItem KR01W4LG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KR01W4RL char(2052)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// application prefix
DataItem KR01WAPR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

