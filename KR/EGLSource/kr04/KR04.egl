package kr04;

import corpcom1.CAADD;
import corpcom1.CACHG;
import corpcom1.CACURRAP;
import corpcom1.CADEL;
import corpcom1.CAFROMAP;
import corpcom1.CAINQ;
import corpcom1.CAITEM;
import corpcom1.CAMSG;
import corpcom1.CASECRC;
import corpcom1.CASYSINT;
import corpcom1.CATOAP;
import corpcom1.CAUSERA;
import corpcom1.CAUSERID;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpx1.XDVCD;
import corpx1.XGPCD;
import corpx2.XNDCD;
import corpx2.XSOCD;
import corpx2.XWHCD;
import ta.common.TA1REC;
//*** PROGRAM=KR04 ****
// this application transfers the user from the kar
// system to the microfilm index menu
// 
// 
// date created:        October 14, 1987
//       author:        Debbie Meier
//  maintenance:
// 
// init   date      reason
// -------------------------------------------------------
// 
// *********************
Program KR04 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = no
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KR04W01 KR04W01; // record
  KR04W02 KR04W02; // record
  KR04W03 KR04W03; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  //  use  KR04M // VAGen Info - unused formGroup    {
  //    pfKeyEquate = no
  //  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KR04001: KR04001();
    goto KR04001;
  end // end main
end // end KR04

// read temporary storage
Function KR04001()


  KR04S01(); /* read temporary storage*/
  KR04S05(); /* transfer to kr01*/


end // end KR04001

// move temp storage to commarea
Function KR04S01()


  set KR04W02 empty;
  KR04W02.KR04W2AP = "KR01";
  KR04W02.KR04W2CT = 1;
  KR04W02.KR04W2FC = "R";
  KR04W02.KR04W2RC = 0;

  set KR04W03 empty;
  KR04W03.KR04W3LG = 2048;

  call "TA0050" (KR04W03, KR04W02) {isNoRefresh = yes};

  if (KR04W02.KR04W2RC == 0)
    set KR04W01 empty;
    KR04W01.KR04W1DA = KR04W03.KR04W3DA;
    COMMAREA.CASYSINT = KR04W01.CASYSINT;
    COMMAREA.CAUSERID = KR04W01.CAUSERID;
    COMMAREA.CAFROMAP = KR04W01.CAFROMAP;
    COMMAREA.CACURRAP = KR04W01.CACURRAP;
    COMMAREA.CATOAP = KR04W01.CATOAP;
    COMMAREA.CAITEM = KR04W01.CAITEM;
    COMMAREA.CAMSG = KR04W01.CAMSG;
    COMMAREA.CASECRC = KR04W01.CASECRC;
    COMMAREA.CAADD = KR04W01.CAADD;
    COMMAREA.CACHG = KR04W01.CACHG;
    COMMAREA.CADEL = KR04W01.CADEL;
    COMMAREA.CAINQ = KR04W01.CAINQ;
    COMMAREA.XWHCD = KR04W01.XWHCD;
    COMMAREA.XDVCD = KR04W01.XDVCD;
    COMMAREA.XSOCD = KR04W01.XSOCD;
    COMMAREA.XNDCD = KR04W01.XNDCD;
    COMMAREA.XGPCD = KR04W01.XGPCD;
    COMMAREA.CAUSERA = KR04W01.CAUSERA;
    COMMAREA.CASYSINT = "KAR";
    KR04S1A(); /* purge temporary storage*/
  else
    set TA1REC empty;
    set SQLCA empty;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "KR04S01";
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1LOC = "READING TEMP WORK FILE";
    call "TA0020" (TA1REC, SQLCA);
    exit program;
  end


end // end KR04S01

// transfer to kr01
Function KR04S05()


  sysVar.transferName = "KR01";

  COMMAREA.CAFROMAP = "KR04";
  COMMAREA.CACURRAP = "KR01";
  COMMAREA.CATOAP = "KR01";

  transfer to transaction sysVar.transferName passing COMMAREA;


      /* check for bad csp system return code*/

  if (COMMAREA.CASECRC == 0
   && sysVar.errorCode != "00000000")
    exit program;
  end


end // end KR04S05

// purge temp storage
Function KR04S1A()



  set KR04W02 empty;
  KR04W02.KR04W2AP = "KR01";
  KR04W02.KR04W2CT = 0;
  KR04W02.KR04W2FC = "P";
  KR04W02.KR04W2RC = 0;

  set KR04W03 empty;
  KR04W03.KR04W3LG = 2048;

  call "TA0050" (KR04W03, KR04W02) {isNoRefresh = yes};

  if (KR04W02.KR04W2RC != 0)
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    set TA1REC empty;
    set SQLCA empty;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1TBLVU = "TMPWRKFL";
    TA1REC.TA1PGMNM = "KR04S1A";
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1LOC = "PURGING TEMP WORK FILE";
    call "TA0020" (TA1REC, SQLCA);
    exit program;
  end


end // end KR04S1A

Record KR04W01 type basicRecord
  10 KR04W1RL KR04W1RL ; 
    15 KR04W1DA KR04W1DA ; 
      20 CASYSINT CASYSINT ; 
      20 CAUSERID CAUSERID ; 
      20 CAFROMAP CAFROMAP ; 
      20 CACURRAP CACURRAP ; 
      20 CATOAP CATOAP ; 
      20 CAITEM CAITEM ; 
      20 CAMSG CAMSG ; 
      20 CASECRC CASECRC ; 
      20 CAADD CAADD ; 
      20 CACHG CACHG ; 
      20 CADEL CADEL ; 
      20 CAINQ CAINQ ; 
      20 XWHCD XWHCD ; 
      20 XDVCD XDVCD ; 
      20 XSOCD XSOCD ; 
      20 XNDCD XNDCD ; 
      20 XGPCD XGPCD ; 
      20 * char(169) ; 
      20 CAUSERA CAUSERA ; 
end // end KR04W01

Record KR04W02 type basicRecord
  10 KR04W2RL KR04W2RL ; 
    15 KR04W2AP KR04W2AP ; 
    15 KR04W2CT KR04W2CT ; 
    15 KR04W2FC KR04W2FC ; 
    15 KR04W2RC KR04W2RC ; 
end // end KR04W02

Record KR04W03 type basicRecord
  10 KR04W3RL KR04W3RL ; 
    15 KR04W3LG KR04W3LG ; 
    15 KR04W3DA KR04W3DA ; 
end // end KR04W03

// data
DataItem KR04W1DA char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KR04W1RL char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// application id
DataItem KR04W2AP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// count
DataItem KR04W2CT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// function code
DataItem KR04W2FC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return code
DataItem KR04W2RC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KR04W2RL char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data
DataItem KR04W3DA char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of data
DataItem KR04W3LG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KR04W3RL char(2052)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

