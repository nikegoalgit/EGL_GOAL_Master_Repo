package mn0m;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import mn.common.*;
import ta.common.*;
//*** PROGRAM=MN0M ****
// nike master menu application
// 
// overview: this application is the master menu used as a
//           front end menu for selecting the valid system
//           options within the menu/security system.  the
//           application will transfer a user to the requested
//           application based upon their security clearance.
// 
// date created: 01/23/86
//       author: steve noble
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   09/10/87  JWOOD   ADDED OPTION 17 (PACKAGING)
//   05/01/91  JWOOD   ADDED OPTION 26 (PAIR COUNT)
//   05/10/91  JWOOD   ADDED OPTION 27 (FOOTWEAR QUALITY)
//   11/07/91  JWOOD   ADDED OPTION 29 (MAILING LIST)
//   11/08/91  JWOOD   ADDED OPTION 30 (CUSTOMS)
//   07/13/93  vcowan  activate opt 20 & 21 in mn0mt table
//   07/14/93  vcowan  init mn0mm001(map) per cics region;
//                   cicsd14 (devl) shows all transactions;
//                   cics014 (psdo) shows all pre-prod trans;
//   07/14/93  vcowan  chg in xsxc470 ... rtn code 4 = appl not
//                     in prod.csp.loadlib .... ref: mn0m005
//                     action: re-gen mn0m for xsxc470 chgs
//   07/29/93  jcampb  add mnwrec for change in xsxc470
//   12/13/93  vcowan  activate opt 02 in mn0mt table
//   12/20/93  vcowan  activate opt 04 & 07 in mn0mt table
//   01/28/94  vcowan  add logic for ZFL.LANG.CD: CALL TA0230
//                     which, in turn, calls XC0200 to get CICS
//                     LOGON LANGUAGE CODE. MN0M then move the
//                     TA3REC.ZFL.LANG-CD to COMMAREA.ZFL-LANG-
//                     CD, a 2-char field.
//   02/08/94  vcowan  fix code to be compatable in all CICSes:
//                     NOTE: for map date edit use SYSGREGRN
//                         : for map title, item: XXXTITLE
//                         : call XC0910, Theater of Operations
//                         : format menu screen per CICS Region
//   02/25/94  vcowan  add logic to mn0ms-init0map-001 for
//                         cicsn14 & cicso14
//   03/12/94  vcowan  FORCE "EN" ON MVSPROD FOR LANG CODE-SEL
//   03/12/94  vcowan  add test display record to mn0mm001 if
//                     userid = vcowan
//   03/14/94  vcowan  allow user to make lang code change via
//                     mn0mm001 map as well as via pop-up rtn
//                     test in mvseurd
//   05/25/94  vcowan  add NBR NOTATION DISPLAY to MN0MM001 map
//   07/21/94  vcowan  add logic for MVSASIA
//   07/21/95  vcowan  chg title to 'U.S. & Canada Master Appli
//                     cation Menu' (proc = mn0m001)
//   01/05/96  vcowan  Add Opt 31 (returns/adjuctments) on erud
//                     requested by Ernie Smith & Joe Baker
//   02/05/96  vcowan  chg test display record to mn0mm001 if
//                     userid = vcowan; move lang, add catop
//   08/06/96  vcowan  add logic for new lpar: PRD2 (DC Split)
//                     CICS Test Regions: CICSW04 & CICSQ04
//                     CICS PRD2 Regions: CICSR03
//                     ref: mn0ms-init-map-001
//   09/13/96  vcowan  add logic for new CICSs: PRD2 (DC Split)
//                     CICS Test Regions: CICSD05 & CICS0O5
//                     ref: mn0ms-init-map-001
//   02/12/97  vcowan  add:  logic for new LPARs:
//                     MVSDAPB, APRL, CICSD34, O34, 033
//                     MVSDFTC, FTWR, CICSD44, O44, 043
//   09/04/97  vcowan  add:  logic for new CICSs, ref MN0M001
//                     MVSEURD, DSNF, CICSD15, O15
//                     MVSDEVL, DSNY, CICSD06, O06
//   10/06/97  vcowan  add:  logic to mn0ms-init-map-001
//                     for cicso06, cicso15, cicsn15,
//   07/21/98  vcowan  add:  allow MVSASIA to change the
//                     commarea.zfl-lang-cd  ref mn0m001
//   07/26/98  vcowan  add: init commarea.ta3db2ss from
//                     ta3rec.taedb2ss from call to ta0230
//                     ref mn0m001 and mn0mw01
//   07/31/98  vcowan  add:  init commarea.ca-term-dblbyte-fl
//                     xckjrec.xckj-term-dblbyte-fl
//                     Y = terminal dblbyte-kanji enable
//                     N = terminal NOT dblbyte-kanji enable
//                     ref mn0m001 & Pgm xc1490
//   04/05/2000 vcowan add:  cics regions for nsc lpar
//                     cicsm33, cicso33, cicsp33 ......
//                     make same as mvsprod cics lpar
// 
// 
// *********************
Program MN0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  MN0MW01 MN0MW01; // record
  MNWREC MNWREC; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  UT3REC UT3REC; // record
  XCKJREC XCKJREC; // record
  XCTHREC XCTHREC; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use MN0MT {deleteAfterUse = yes}; // table
  use MN0MTL1 {deleteAfterUse = yes}; // table
  use ZFLTBL {deleteAfterUse = yes}; // table
  use MN0MM.MN0MM001,  // forms
      MN0MM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    MN0M001: MN0M001();



    goto MN0M005;



    MN0M005: MN0M005();



        /* branch to converse*/

    goto MN0M005; /* branch to converse*/



  end // end main
end // end MN0M

// program init
Function MN0M001()

      /* ***************************************************/
      /* PROC MN0M001                                     **/
      /* * this process initializes program work area and **/
      /* * clears the map areas.                          **/
      /* ***************************************************/

      /* check entry security*/

  XSENTRY(); /* entry security check*/

  XSSEGTR(); /* set segmented transaction id*/
   /* ----------------------------------------------------------------------*/
      /* init map & workrecords*/

  set MN0MM001 initial; /* set map mn0m001 clear*/

  set MN0MW01 empty; /* set mn0mw01 record empty*/
  set TA1REC empty; /* set ta1rec empty*/

   /* ----------------------------------------------------------------------*/
      /* move system date to map*/
   /* move date info to field*/
  MN0MM001.MN0MMDT = VGVar.currentShortGregorianDate;
   /* ----------------------------------------------------------------------*/
      /* get theater of operations information*/
      /* get "runtype"  (which MVS CICS) info 'test' or 'prod'*/
      /* get "location" (which MVS LPAR) info 'us' or 'europe'*/
      /* get "division" (on US lpar Only)info 'apparel" or 'footwear'*/
      /* --- special note:  division never implemented per v.cowan*/

  MN0MS-INIT-XCTHREC(); /* init xcthrec, then call xc0910*/

   /* ----------------------------------------------------------------------*/
      /* get cics eib information*/

  MN0MS-CALL-TA0230(); /* init ta3rec, then call ta0230*/

   /* ----------------------------------------------------------------------*/
      /* check if terminal is KANJI-DBCS Enabled*/

  MN0MS-CALL-XC1490(); /* init xckjrec, then call xc1490*/

   /* ----------------------------------------------------------------------*/
      /* TEMP fix problem with theater of operations program on mvsdevl*/

  if (TA3REC.TA3APLID == "CICSD05" /* if cmd5 ... dsnf*/
   || TA3REC.TA3APLID == "CICSO05" /* if cmt5 ... dsnf*/
   || TA3REC.TA3APLID == "CICSD06" /* if cmd6 ... dsny*/
   || TA3REC.TA3APLID == "CICSO06") /* if cmt6 ... dsny*/
    XCTHREC.XCTH-THEATER-RUNTYPE = "TEST";
    COMMAREA.XCTH-THEATER-RUNTYPE = "TEST";

    COMMAREA.XCTH-THEATER-LOCATION = "US";
    XCTHREC.XCTH-THEATER-LOCATION = "US";
  end

   /* ----------------------------------------------------------------------*/
      /* TEMP fix problem with theater of operations program on MVSNSCI*/
      /* 04-05-2000  by V.Cowan (nike) per M.Thompson (LMCO)*/

  if (TA3REC.TA3APLID == "CICSM33" /* if nsc for msvprod - msg region*/
   || TA3REC.TA3APLID == "CICSO33" /* if nsc for mvsprod - goal region*/
   || TA3REC.TA3APLID == "CICSP33" /* if nsc for mvsprod - bundl region*/
   || TA3REC.TA3APLID == "CICST33") /* if nsc for mvsprod - tor region*/
    XCTHREC.XCTH-THEATER-RUNTYPE = "PROD";
    COMMAREA.XCTH-THEATER-RUNTYPE = "PROD";

    COMMAREA.XCTH-THEATER-LOCATION = "US    ";
    XCTHREC.XCTH-THEATER-LOCATION = "US    ";

    COMMAREA.XCTH-THEATER-DIVISION = "      ";
    XCTHREC.XCTH-THEATER-DIVISION = "      ";
  end

   /* ----------------------------------------------------------------------*/
      /* TEMP fix problem with theater of operations program on mvseurd*/

  if (TA3REC.TA3APLID == "CICSD15" /* if cmde5 ... dsny*/
   || TA3REC.TA3APLID == "CICSO15" /* if cmte5 ... dsny*/
   || TA3REC.TA3APLID == "CICSN15") /* if cmte5 ... dsny*/
    XCTHREC.XCTH-THEATER-RUNTYPE = "TEST";
    COMMAREA.XCTH-THEATER-RUNTYPE = "TEST";

    COMMAREA.XCTH-THEATER-LOCATION = "EUROPE";
    XCTHREC.XCTH-THEATER-LOCATION = "EUROPE";
  end

   /* ----------------------------------------------------------------------*/
      /* TEST FIX FOR CICSO34*/

    /* MOVE 'APPAREL ' TO XCTHREC.XCTH-THEATER-DIVISION;*/
    /* MOVE 'APPAREL ' TO COMMAREA.XCTH-THEATER-DIVISION;*/
    /* MOVE 'CICSD34' TO TA3REC.TA3APLID;*/

    /* MOVE 'FOOTWEAR' TO XCTHREC.XCTH-THEATER-DIVISION;*/
    /* MOVE 'FOOTWEAR' TO COMMAREA.XCTH-THEATER-DIVISION;*/
    /* MOVE 'CICSO44' TO TA3REC.TA3APLID;*/


   /* ----------------------------------------------------------------------*/
      /* initialize main menu map per cics region*/

  MN0MS-INIT-MAP-001(); /* initialize map*/

   /* ----------------------------------------------------------------------*/
   /* initialize mn0m2-test-info for mn0mm001 map display*/

   /* when userid = vcowan, move test info to map display*/

  MN0MM001.MN0MW-TEST-INFO-L1 = " "; /* spaces to mn0mw.test.info-L1*/
  MN0MW01.MN0MW-LIT-L101 = "TA3LANG:";
  MN0MW01.ZFL-LANG-CD = TA3REC.ZFL-LANG-CD; /* cics logon lang-cd*/
    /* move 'CICS LOGON LANGCD' TO MN0MW01.MN0MW-LIT-L102;*/
  MN0MW01.MN0MW-LIT-L102 = "DBCS TERMINAL:";
  MN0MW01.XCKJ-DBCS-TERM-FL = COMMAREA.XCKJ-DBCS-TERM-FL;

  MN0MM001.MN0MW-TEST-INFO-L2 = " "; /* spaces to mn0mw.test.info-L2*/

  MN0MW01.MN0MW-LIT-L201 = "CAFROMAP:";
  MN0MW01.MN0MW-LIT-L203 = "XCTH-RUNTYPE:";
  MN0MW01.MN0MW-LIT-L204 = "XCTH-LOC:";
  MN0MW01.MN0MW-LIT-L205 = "CICS:";
  MN0MW01.MN0MW-LIT-L206 = "DB2:";

  MN0MW01.CAFROMAP = COMMAREA.CAFROMAP; /* "from" application*/
  MN0MW01.XCTH-THEATER-RUNTYPE = COMMAREA.XCTH-THEATER-RUNTYPE;
  MN0MW01.XCTH-THEATER-LOCATION = COMMAREA.XCTH-THEATER-LOCATION;
  MN0MW01.TA3APLID = TA3REC.TA3APLID; /* cics region nbr*/
  MN0MW01.TA3DB2SS = COMMAREA.TA3DB2SS; /* db2 region nbr*/

  if (TA3REC.TA3USRID == "VCOWAN" /* USERID=VERN COWAN, mvs tech supp*/
   || TA3REC.TA3USRID == "LRAO"   /* USERID=Lakshman Rao, mvs tech supp*/
   || TA3REC.TA3USRID == "JBUCH1") /* USERID=Jeff Buchanan, mvs tech supp*/

    MN0MM001.MN0MW-TEST-INFO-L1 = MN0MW01.MN0MW-TEST-INFO-L1;
    MN0MM001.MN0MW-TEST-INFO-L2 = MN0MW01.MN0MW-TEST-INFO-L2;
  end


   /* ----------------------------------------------------------------------*/
       /* If this is the first time thru, save CICS LOGON LANGCODE*/

  if (COMMAREA.XCTH-THEATER-RUNTYPE == "PROD") /* If PRODuction CICS Regions*/
                                   /* CICSs = CP, CE, CPE, CA*/
    if (COMMAREA.CAFROMAP == "SOND") /* eibtrnid=SOND W/GOAL in PROD CICS*/
                                   /* CICSs = CP, CE, CPE, CA*/
      COMMAREA.ZFL-LANG-CD = TA3REC.ZFL-LANG-CD;
      if (COMMAREA.XCTH-THEATER-LOCATION == "US") /* If 'US' CICS REGIONS*/
        COMMAREA.ZFL-LANG-CD = "EN";
      end
    end
  else
  /* COMMAREA.XCTH-THEATER-RUNTYPE EQ 'TEST' ... If TEST CICS Regions*/
    if (COMMAREA.CAFROMAP == "TST1" /* eibtrnid=TST1 AE in all TEST CICSs*/
     /* CICSs = CD, CMD, CMT, CMDE, CMTE*/
     || COMMAREA.CAFROMAP == "    " /* eibtrnid='  ' AD in all TEST CICSs*/
     /* CICSs = CD, CMD, CMT, CMDE, CMTE*/
     || COMMAREA.CAFROMAP == "G   " /* eibtrnid=G    W/GOAL in PSDO CICSs*/
     /* CICSs = CMT, CMTE*/
     || COMMAREA.CAFROMAP == "SOND") /* eibtrnid=SOND W/GOAL in PSDO CICSs*/
                                   /* CICSs = CMT, CMTE*/
      COMMAREA.ZFL-LANG-CD = TA3REC.ZFL-LANG-CD;
    end
  end

  MN0MM001.ZFL-LANG-CD = COMMAREA.ZFL-LANG-CD;
                                   /* langcode to map*/

   /* ----------------------------------------------------------------------*/
       /* initialize TITLE on MAP*/

  if (COMMAREA.XCTH-THEATER-LOCATION == "US") /* If 'US' cics regions*/
    set MN0MM001.ZFL-LANG-CD skip; /* set field protected & autoskip*/
    MN0MM001.MN0MM-MAPTITLE = "U.S. & CANADA MASTER APPLICATION MENU"; /* map title:U.S.*/

   /* IF COMMAREA.XCTH-THEATER-DIVISION EQ 'APPAREL ';*/
                                  /* *If 'US' Apparel cics*/
                                  /* SET MN0MM001.ZFL-LANG-CD AUTOSKIP;/**/
                                   /* set field protected & autoskip*/
     /* SET MN0MM001.MN0MMPRC PINK;  /* set field yellow*/
     /* SET MN0MM001.MN0MMMAP PINK;  /* set field yellow*/
     /* SET MN0MM001.MN0MM-MAPTITLE PINK;/* set field yellow*/
     /* SET MN0MM001.MN0MMDT PINK;   /* set field yellow*/
     /* MOVE 'U.S. APPAREL DIVISION   MASTER MENU'*/
       /* TO MN0MM001.MN0MM-MAPTITLE;/* map title:U.S.*/
   /* END;*/
   /* IF COMMAREA.XCTH-THEATER-DIVISION EQ 'FOOTWEAR';*/
                                  /* *If 'US' Apparel cics*/
                                  /* SET MN0MM001.ZFL-LANG-CD AUTOSKIP;/**/
                                   /* set field protected & autoskip*/
     /* SET MN0MM001.MN0MMPRC YELLOW;/* set field yellow*/
     /* SET MN0MM001.MN0MMMAP YELLOW;/* set field yellow*/
     /* SET MN0MM001.MN0MM-MAPTITLE YELLOW;/* set field yellow*/
     /* SET MN0MM001.MN0MMDT YELLOW; /* set field yellow*/
     /* MOVE 'U.S. FOOTWEAR DIVISION   MASTER MENU'*/
       /* TO MN0MM001.MN0MM-MAPTITLE;/* map title:U.S.*/
   /* END;*/
  else
    if (COMMAREA.XCTH-THEATER-LOCATION == "ASIA") /* 'ASIA' CICS REGIONS*/
      MN0MM001.MN0MM-MAPTITLE = "ASIA   MASTER APPLICATION MENU"; /* map title:U.S.*/
    else
                                   /* 'ERUOPE' CICS REGIONS*/
      MN0MM001.MN0MM-MAPTITLE = "EUROPEAN MASTER APPLICATION MENU"; /* map title: EUROPEAN*/
    end
  end

   /* ----------------------------------------------------------------------*/
       /* display LANGCODE description on map*/

  MN0MS-LANGCD-LKUP(); /* display langcode descript on map*/

   /* ----------------------------------------------------------------------*/
       /* display NUMERIC NOTATION FORMAT on map*/

  MN0MM001.MN0MM-NBR-NOTATION = 12345.67; /* move value to map*/

   /* ----------------------------------------------------------------------*/


end // end MN0M001

// converse map/transfer
Function MN0M005()

      /* ******************************************************/
      /* PROC: MN0M005                                       **/
      /* * this process converses the map, edits the entered **/
      /* * fields, and if possible, xfer's to the requested  **/
      /* * application                                       **/
      /* ******************************************************/


      /* fill in fields in map*/

  MN0MM001.MN0MMXIT = COMMAREA.CAITEM; /* fill in passed item*/


      /* force segmented converse execution mode*/

  converseVar.segmentedMode = 1; /* force segmented execution mode*/


  if (COMMAREA.CAMSG != " ") /* if err msg passed by another appl*/
    MN0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move to map*/
    COMMAREA.CAMSG = " "; /* clear commarea message area*/
  end


  converse MN0MM001 ;


      /* clear message fields*/

  MN0MM001.VAGen_EZEMSG = " "; /* clear message*/
  MN0MM001.MN0MMMSG = " "; /* clear message*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - abort*/
        /* pf1 - transfer to help*/
        /* pf3 - exit*/
        /* pf4 - transfer to system menu (this program)*/

  if (converseVar.eventKey is enter) /* check for enter key*/
       /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pa2) /* check for system exit*/
      exit program;
    else
      if (converseVar.eventKey is pf1) /* check for system help*/
        COMMAREA.CAITEM = MN0MM001.MN0MMXIT;
        XSPF1(); /* help facility*/
        MN0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
        COMMAREA.CATOAP = " "; /* clear appl*/
        exit stack;
      else
        if (converseVar.eventKey is pf3) /* check for system exit*/
          call "UT0210";
          exit program;
        else
          if (converseVar.eventKey is pf4) /* check for master menu*/
            COMMAREA.CAITEM = MN0MM001.MN0MMXIT;
            XSPF4(); /* pf4 statement group*/
            MN0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
            COMMAREA.CATOAP = " "; /* clear appl*/
            exit stack;
          else
            MN0MM001.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY"; /* err msg*/
            exit stack;
          end
        end
      end
    end
  end


   /* ------------------------------------------------------------*/
   /* If requested, display the list of LANGUAGE CODES*/
   /* ------------------------------------------------------------*/

  if (MN0MM001.ZFL-LANG-CD == "?") /* if pop-up rtn requested*/
    MN0MS-DSPLY-POPUP(); /* display langcode pop-up windows*/
    MN0MS-INIT-MAP-001(); /* init mn0m001 with descriptions*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* If zfl-lang-cd changed on map by user*/
   /* ------------------------------------------------------------*/

  if (MN0MM001.ZFL-LANG-CD == COMMAREA.ZFL-LANG-CD) /* if same lang-cd*/
     /* next sentence*/
  else
    MN0MS-LANGCD-LKUP(); /* verify lang code*/
    if (MN0MW01.MN0MW-LANGCD-ERROR == "Y") /* if error*/
      exit stack; /* Exit to display map*/
    end
    MN0MS-INIT-MAP-001(); /* init mn0m001 with descriptions*/

  end


      /* save next item if entered*/

  if (MN0MM001.MN0MMXIT is modified) /* has field been changed?*/
    COMMAREA.CAITEM = MN0MM001.MN0MMXIT; /* save reqstd item*/
  end

      /* reset map attributes*/

  set MN0MM001.MN0MM-OPT-CD-SEL initialAttributes;
  set MN0MM001.MN0MMXAP initialAttributes;


      /* determine appl based on selection number (if any)*/

  if (MN0MM001.MN0MM-OPT-CD-SEL == 0) /* null?*/
      /* ** next sentence ** ignore field ***/
  else
    if (MN0MM001.MN0MM-OPT-CD-SEL in MN0MT.MN0MT-OPT-CD)
      COMMAREA.CATOAP = MN0MT.CATOAP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0) /* test for not found in table*/
      MN0MM001.VAGen_EZEMSG = "MN0M01A - INVALID APPLICATION SELECTED - RE-ENTER";
      set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
                                   /* set attrib*/
      exit stack;
    end
    /* ........................................................*/
    /* ------------------------------------------------------------------*/
     /* If THEATER of OPERATIONS = 'EUROPE'  move EUROPE APPLS to CATOAP*/
     /*  */
     /* DEFAULT = 'US'*/
    /* ------------------------------------------------------------------*/

    if (XCTHREC.XCTH-THEATER-LOCATION == "US") /* if U.S. CICS Regions*/
      /* ** next sentence ***/
    else
      /* ** MUST BE EUROPE or asia cICS REGIONS ***/
      if (XCTHREC.XCTH-THEATER-LOCATION == "EUROPE")
                                   /* if EUROPE CICS Regions*/
        COMMAREA.CATOAP = MN0MT.MN0MT-CATOAP-EURD[sysVar.arrayIndex];
                                   /* reset with european CATOAPs values*/
        if (MN0MW01.MN0MW-CICS-PROD-FL == "Y") /* if production cics*/
          if (MN0MT.MN0MT-EURD-FL[sysVar.arrayIndex] == "Y") /* if production appl*/
            /* ** next sentence ***/
          else
            MN0MM001.VAGen_EZEMSG = "MN0M01B - NOT A PRODUCTION APPLICATION - RE-ENTER";
            set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
                                   /* set attrib*/
            exit stack;
          end

        else
          if (MN0MT.MN0MT-EURD-FL[sysVar.arrayIndex] == "N")
                                   /* if appl not in prod stat*/
            MN0MM001.VAGen_EZEMSG = "APPL NOT DEFINED IN MASTER MENU - CONTACT TECH-SUPPORT";
            set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
                                   /* set attrib*/
            exit stack;

          end

        end

      else
        /* --- MUST BE ASIA CICS Regions*/
        COMMAREA.CATOAP = MN0MT.MN0MT-CATOAP-ASIA[sysVar.arrayIndex];
                                   /* reset with european CATOAPs values*/
        if (MN0MW01.MN0MW-CICS-PROD-FL == "Y") /* if production cics*/
          if (MN0MT.MN0MT-ASIA-FL[sysVar.arrayIndex] == "Y") /* if production appl*/
            /* ** next sentence ***/
          else
            MN0MM001.VAGen_EZEMSG = "MN0M01B - NOT A PRODUCTION APPLICATION - RE-ENTER";
            set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
                                   /* set attrib*/
            exit stack;
          end

        else
          if (MN0MT.MN0MT-ASIA-FL[sysVar.arrayIndex] == "N")
                                   /* if appl not in prod stat*/
            MN0MM001.VAGen_EZEMSG = "APPL NOT DEFINED IN MASTER MENU - CONTACT TECH-SUPPORT";
            set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
                                   /* set attrib*/
            exit stack;

          end

        end

      end
      /* ........................................................*/

      set UT3REC empty; /* set record empty*/
      COMMAREA.CAMSG = " "; /* clear msg area*/
      COMMAREA.XXXPRCNM = "MN0M005"; /* clear msg area*/
      UT3REC.CATOAP = COMMAREA.CATOAP; /* set appl name to operand*/
      XSXC470(); /* call xc0740*/
      if (UT3REC.UT3RETCD != "0") /* if bad return code*/
        MN0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move message*/
        exit stack;

      end

    end

  end

      /* if nothing entered in the select or fast path*/
      /* fields, then ask user to enter a selection*/

  if (MN0MM001.MN0MM-OPT-CD-SEL <= 0
   /* if no selection then tell user*/
   && MN0MM001.MN0MMXAP == " ")
  /* AND MN0MM001.MN0MMXAP LE ' ';*/
    MN0MM001.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    COMMAREA.CATOAP = " "; /* clear appl*/
    exit stack; /* branch to flow*/
  end


      /* if both select and fast path entered,*/
      /* then, ask user to erase one*/

  if (MN0MM001.MN0MM-OPT-CD-SEL > 0
   && MN0MM001.MN0MMXAP > " ")
    set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
    set MN0MM001.MN0MMXAP modified, bold;
    COMMAREA.CATOAP = " "; /* clear appl*/
    MN0MM001.VAGen_EZEMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
    MN0MM001.MN0MMMSG = "PLEASE ERASE ONE";
    exit stack;
  end


      /* all edits are good at this point*/

      /* if fast path was entered and select field not entered,*/
      /* then the application field will need to be created*/

  if (MN0MM001.MN0MM-OPT-CD-SEL <= 0) /* if appl not selected*/
    COMMAREA.CATOAP = MN0MM001.MN0MMXAP; /* set application*/
  end

   /* >>>> CHECK FOR VALID COMMAREA BEFORE TRANSFER <<<<*/


  if (converseVar.eventKey is enter)
    if (COMMAREA.CACURSYS == COMMAREA.CATOSYS)
      if (COMMAREA.CACURSYS != "MN")
        TA1REC.TA1TYPE = "APPL";
        TA1REC.TA1FUNC = "POST";
        TA1REC.TA1PGMNM = "MN0M";
        TA1LOCAT[1] = COMMAREA.CACURRAP;
        TA1LOCAT[2] = COMMAREA.CAFROMAP;
        TA1LOCAT[3] = COMMAREA.CATOAP;
        TA1LOCAT[4] = "CU-FR-TO";
        MN0MWERL[1] = "** ERROR - THE COMMAREA IS CORRUPTED";
        MN0MWERL[2] = "RESETTING COMMAREA TO DO AN XFER";
        COMMAREA.CACURRAP = "MN0M";
        call "TA0020" (TA1REC, MN0MW01);
      end
    end
  end


      /* all is good and set to check for transfer*/

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP > " ")
      XSEXIT();
      MN0MM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      COMMAREA.CATOAP = " "; /* clear appl*/
      if (MN0MM001.MN0MMXAP > " ") /* was appl entered*/
        set MN0MM001.MN0MMXAP cursor, modified, bold;
        exit stack;
      else
        set MN0MM001.MN0MM-OPT-CD-SEL modified, bold;
        exit stack;
      end
    end
  end


end // end MN0M005

// init map per cics region
Function MN0MS-CALL-TA0230()

   /* ------------------------------------------------------------*/
   /* MN0MS-call-ta02301 ... init ta3rec with cics eib information*/
   /*  */
   /* ------------------------------------------------------------*/

   /* GET ALL CICS FIELDS:  IE CICS Region Numbers*/
   /* ------------------------------------------------------------*/
  set TA3REC empty; /* set record empty*/
  TA3REC.TA3OPTN = "ALLFLDS"; /* set ta0230 option*/
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end /* call ta0230*/


  if (sysVar.errorCode == "00000000") /* call successful*/
    if (TA3REC.TA3RTNCD == 0) /* good return code from ta0230*/
      MN0MW01.MN0MW-TA0230-CALL-OK = "Y"; /* set flag to yes*/
      COMMAREA.TA3DB2SS = TA3REC.TA3DB2SS; /* cics's db2 subsystem*/
    else
      MN0MW01.MN0MW-TA0230-CALL-OK = "N"; /* set flag to no*/
    end


  else
    /* ****  error *****/
    MN0MM001.VAGen_EZEMSG = "MN0M010 ** SYSTEM ERROR** CALL TO TA0230 FAILED";

  end


end // end MN0MS-CALL-TA0230

// trans status query utility
Function MN0MS-CALL-XC1490()
   /* ****************************************************/
   /* * THIS STATEMENT GROUP RETURNS the KANji-dbcs     **/
   /* * terminal type status by calling xc1490          **/
   /* *                                            .    **/
   /* * The Parameter Record used by this routine is the**/
   /* * XCKJREC.  Returnb Values are as follows...      **/
   /* *    N = Terminal not KANJI-DBCS Enabled          **/
   /* *    Y = Terminal is  KANJI-DBCS Enabled          **/
   /* *-------------------------------------------------**/
   /* MAINTENANCE HISTORY*/
   /*  */
   /* DATE   USERID  COMMENTS*/
   /* 07/28/98 vcowan  orig specs*/
   /* ****************************************************/


  set XCKJREC empty;
  call "XC1490" (XCKJREC) {isNoRefresh = yes, isExternal = yes};

  if (XCKJREC.XCKJ-DBCS-TERM-FL == "  ") /* CALL TO XC1490 FAILED*/
    MN0MM001.VAGen_EZEMSG = "MN0M012A  CALL TO XC1490 FAILED ... CALL HOTLINE";
  else
    COMMAREA.XCKJ-DBCS-TERM-FL = XCKJREC.XCKJ-DBCS-TERM-FL;
  end


end // end MN0MS-CALL-XC1490

// display ZFLTBL-lanccode pop-up
Function MN0MS-DSPLY-POPUP()

   /* ------------------------------------------------------------*/
   /* MN0MS-DSPLY-POPUP ... display langcode pop-up window*/
   /* ------------------------------------------------------------*/

  if (MN0MM001.ZFL-LANG-CD == "?") /* GPC list requested*/

    XPXX001(); /* Window initialization*/

    XX0XW02.XX0XWHDR = "LANGCODE/DESCRIPTION OF LANGUAGE"; /* HEADING*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPZFL01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX == 0) /* No selection made*/

      MN0MM001.ZFL-LANG-CD = COMMAREA.ZFL-LANG-CD;
                                   /* restore langcode on map*/
    else
      MN0MM001.ZFL-LANG-CD = ZFLTBL.ZFLCD[XX0XWPIX];
                                   /* save new langcode on map*/
   /* reply message*/
      MN0MM001.VAGen_EZEMSG = "MN0MM01I - NEW LANGCODE SELECTED- PRESS ENTER TO CONTINUE";
    end

    COMMAREA.ZFL-LANG-CD = MN0MM001.ZFL-LANG-CD;
                                   /* save new langcode in commarea*/
    MN0MS-LANGCD-LKUP(); /* find langcode descript & move it to*/
                                   /* the map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();
   /* Clear screen before display*/


end // end MN0MS-DSPLY-POPUP

// init map per cics region
Function MN0MS-INIT-MAP-001()

   /* ------------------------------------------------------------*/
   /* MN0MS-INIT-MAP-001 ... initialize map mn0m001 per cics region*/
   /* & get cics-logon language code, move to COMMAREA.ZFL-LANG-CODE*/
   /* ------------------------------------------------------------*/

   /* GET ALL CICS FIELDS:  IE CICS Region Numbers*/
   /* ------------------------------------------------------------*/
    /* SET TA3REC EMPTY;                /* set record empty*/
    /* MOVE 'ALLFLDS' TA3REC.TA3OPTN;   /* set ta0230 option*/
    /* CALL TA0230 TA3REC (NOMAPS,NONCSP,REPLY;/* call ta0230*/


  if (sysVar.errorCode == "00000000" /* call successful*/
   && TA3REC.TA3RTNCD == 0)          /* good return code from ta0230*/
    if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD" /* if PRODuction CICSs*/
     || TA3REC.TA3APLID == "CICSO04"           /* mvsdevl dsnt . domestic psdo PROD*/
     || TA3REC.TA3APLID == "CICSO05"           /* mvsdevl dsnf . domestic psdo PROD*/
     || TA3REC.TA3APLID == "CICSO06"           /* mvsdevl dsnf . domestic psdo PROD*/
     || TA3REC.TA3APLID == "CICSQ04"           /* mvsdevl dsnx . domestic psdo PROD*/
     || TA3REC.TA3APLID == "CICSO14"           /* mvseurd dsnt . euro psdo*/
     || TA3REC.TA3APLID == "CICSN14"           /* mvseurd dsnt . euro psdo nbr-ck*/
     || TA3REC.TA3APLID == "CICSO15"           /* mvseurd dsnf . euro psdo*/
     || TA3REC.TA3APLID == "CICSN15"           /* mvseurd dsnf . euro psdo nbr-ck*/
     || TA3REC.TA3APLID == "CICSO24"           /* mvsasia dsnt . asia psdo*/
     || TA3REC.TA3APLID == "CICSO34"           /* mvsdapb cics . apparel  psdo PROD*/
     || TA3REC.TA3APLID == "CICSO44")          /* mvsdftc cics . footwear psdo PROD*/
      MN0MW01.MN0MW-CICS-PROD-FL = "Y"; /* set flag to yes*/
      MN0MS-LOAD-PROD-VR(); /* load prod version of mn0mm001*/
    else
      MN0MW01.MN0MW-CICS-PROD-FL = "N"; /* set flag to no*/
      MN0MS-LOAD-TEST-VR(); /* load test version of mn0mm001*/
    end


  else
    /* ****  error *****/
    MN0MM001.VAGen_EZEMSG = "MN0M010 ** SYSTEM ERROR** CALL TO TA0230 FAILED";

  end


end // end MN0MS-INIT-MAP-001

// init xcthrec, call xc0910
Function MN0MS-INIT-XCTHREC()
   /* ---------------------------------------------------------------------*/
   /* MN0MS-INIT-XCTHREC ...*/
      /* get theater of operations information & move info to COMMAREA*/

      /* get "runtype"  (which MVS CICS) info:  'test' or 'prod'*/
      /* get "location" (which MVS LPAR) info 'us' or 'europe'*/

   /* ------------------------------------------------------------*/
  set XCTHREC empty;
  call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};

  if (XCTHREC.XCTH-THEATER-RUNTYPE == "  ") /* CALL TO XC0910 FAILED*/
    MN0MM001.VAGen_EZEMSG = "MN0M011A  CALL TO XC0910 FAILED ... CALL HOTLINE";
    return;
  else
    COMMAREA.XCTHREC-GROUP = " ";
    COMMAREA.XCTH-THEATER-RUNTYPE = XCTHREC.XCTH-THEATER-RUNTYPE; /* RUNTYPE TO COMMAREA*/
    COMMAREA.XCTH-THEATER-LOCATION = XCTHREC.XCTH-THEATER-LOCATION; /* LOCATION TO COMMAREA*/
    COMMAREA.XCTH-THEATER-DIVISION = XCTHREC.XCTH-THEATER-DIVISION; /* LOCATION TO COMMAREA*/
    COMMAREA.XCTH-THEATER-PARMS-LEN = XCTHREC.XCTH-THEATER-PARMS-LEN; /* PARMS-LEN TO COMMAREA*/

  end


end // end MN0MS-INIT-XCTHREC

// move langcode descript to map
Function MN0MS-LANGCD-LKUP()

   /* ------------------------------------------------------------*/
   /* MN0M-LANGCD-LKUP ... langcode in zfltbl & display on map*/
   /* ------------------------------------------------------------*/

  if (MN0MM001.ZFL-LANG-CD in ZFLTBL.ZFLCD)
    MN0MM001.ZFLDESC = ZFLTBL.ZFLDESC[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0) /* test for not found in table*/
    MN0MM001.VAGen_EZEMSG = "MN0M01A - INVALID LANGCODE SELECTED - RE-ENTER";
    set MN0MM001.ZFL-LANG-CD cursor, modified, bold;
                                   /* set attrib*/
    MN0MW01.MN0MW-LANGCD-ERROR = "Y"; /* set error flag on*/
  else
    COMMAREA.ZFL-LANG-CD = MN0MM001.ZFL-LANG-CD; /* save langcode*/
    MN0MW01.MN0MW-LANGCD-ERROR = "N"; /* set error flag off*/
    set MN0MM001.ZFL-LANG-CD initialAttributes;
    set MN0MM001.MN0MM-OPT-CD-SEL cursor; /* re-set cursor*/
    if (XCTHREC.XCTH-THEATER-LOCATION == "US") /* if 'us' prod cics*/
      set MN0MM001.ZFL-LANG-CD skip; /* set on autoskip attribute*/
    end
  end
end // end MN0MS-LANGCD-LKUP

// load map w/PROD options/titles
Function MN0MS-LOAD-PROD-VR()

   /* ------------------------------------------------------------*/
   /* MN0MS-LOAD-PROD-VR ... LOAD PROD VERSION OF GOAL MAIN MENU*/
   /* ------------------------------------------------------------*/

  MN0MW01.MN0MW-TBL-IDX = 1; /* initialize index*/
  MN0MW01.MN0MW-MAP-IDX = 1; /* initialize index*/

    /* ------------------------------------------------------------*/
    /*  */
    /* On MVSPROD & MVSDEVL LPARS ... xcth-theater-location = 'us'*/
    /* &  MVSDAPB & MVSDFTC LPARS ... xcth-theater-location = 'us'*/
    /* &  MVSNCSI (nsc test lpar) ... xcth-theater-location = 'us'*/
    /* initialize mn0m001 with all info from table  MN0MT*/
   /* ------------------------------------------------------------*/

                /* **** U.S. REGIONS ... MVSPROD *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "US" /* if 'us' cics regions*/
   && XCTHREC.XCTH-THEATER-DIVISION == "        ") /* IF MVSPROD*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

      MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
      MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;
                                   /* increment index*/
    end
    return; /* return*/
  end

                /* **** U.S. REGIONS ... MVSPAPB *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "US" /* if 'US Apparel' cics*/
   && XCTHREC.XCTH-THEATER-DIVISION == "APPAREL") /* IF MVSPAPB*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      if (MN0MT.MN0MT-APRL-FL[MN0MW-TBL-IDX] == "Y")
                                   /* if appl in production*/
        MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

        MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

        MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;

      end

      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
                                   /* increment index*/
    end
    return; /* return*/
  end

                /* **** U.S. REGIONS ... MVSPFTC *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "US" /* if 'US Footwear cics*/
   && XCTHREC.XCTH-THEATER-DIVISION == "FOOTWEAR") /* IF MVSPAPB*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      if (MN0MT.MN0MT-FTWR-FL[MN0MW-TBL-IDX] == "Y")
                                   /* if appl in production*/
        MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

        MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

        MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;

      end

      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
                                   /* increment index*/
    end
    return; /* return*/
  end

                /* **** ASIA Regions ... MVSASIA *****/

    /* ------------------------------------------------------------*/
    /*  */
    /* On MVSASIA LPAR ... xcth-theater-location = 'asia'*/
    /* initialize map mn0m001 with PROD VERSION info from table MN0MT*/
    /* ---------------------------------------------------------------*/

  if (XCTHREC.XCTH-THEATER-LOCATION == "ASIA") /* if 'asia' cics regions*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      if (MN0MT.MN0MT-ASIA-FL[MN0MW-TBL-IDX] == "Y")
                                   /* if appl in production*/
        MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

        if (COMMAREA.ZFL-LANG-CD == "JP" /* If Japan Language Selected*/
         && COMMAREA.XCKJ-DBCS-TERM-FL == "Y")
                                   /* if terminal is DBCS enabled*/
          MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MTL1.MN0MTL1-CATOAP-DESC-KANJI[MN0MW-TBL-IDX];
        else
          MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];
        end
        MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;

      end

      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
                                   /* increment index*/
    end
    return; /* return*/
  end

      /* ***** Default to MVSEURD ... EUROPE ******/

    /* ------------------------------------------------------------*/
    /*  */
    /* On MVSEURD LPAR ... xcth-theater-location = 'europe'*/
    /* initialize map mn0m001 with PROD VERSION info from table MN0MT*/
    /* ---------------------------------------------------------------*/

  while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
    if (MN0MT.MN0MT-EURD-FL[MN0MW-TBL-IDX] == "Y")
                                   /* if appl in production*/
      MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

      MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

      MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;

    end

    MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
                                   /* increment index*/
  end



end // end MN0MS-LOAD-PROD-VR

// load map w/TEST options/titles
Function MN0MS-LOAD-TEST-VR()

   /* ------------------------------------------------------------*/
   /* MN0MS-LOAD-TEST-VR ... LOAD TEST VERSION OF GOAL MAIN MENU*/
   /* ------------------------------------------------------------*/

  MN0MW01.MN0MW-TBL-IDX = 1; /* initialize subscript*/
  MN0MW01.MN0MW-MAP-IDX = 1; /* initialize subscript*/

   /* ------------------------------------------------------------*/
   /* On MVSDEVL LPAR ... TEST CICS ... xcth-theater-location = 'us'*/
   /* initialize mn0m001 with all info from table  MN0MT*/
   /* ------------------------------------------------------------*/

                    /* **** U.S. Regions *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "US" /* if 'us' cics regions*/
   && XCTHREC.XCTH-THEATER-DIVISION == "        ") /* if MVSDEVL*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

      MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
      MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;
                                   /* increment index*/
    end
    return;
  end

               /* **** U.S. Apparel Division *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "US" /* if 'us' cics regions*/
   && XCTHREC.XCTH-THEATER-DIVISION == "APPAREL ") /* if MVSDEVL*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

      MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

      if (MN0MT.MN0MT-APRL-FL[MN0MW-TBL-IDX] == "N")
                                  /* if not prod appl*/
        set MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] red;
      end
      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
      MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;
                                   /* increment index*/
    end
    return;
  end

               /* **** U.S. Footwear Division *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "US" /* if 'us' cics regions*/
   && XCTHREC.XCTH-THEATER-DIVISION == "FOOTWEAR") /* if MVSDEVL*/

    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
      MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

      MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

      if (MN0MT.MN0MT-FTWR-FL[MN0MW-TBL-IDX] == "N")
                                  /* if not prod appl*/
        set MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] red;
      end
      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
      MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;
                                   /* increment index*/
    end
    return;
  end

                  /* **** ASIA *****/

  if (XCTHREC.XCTH-THEATER-LOCATION == "ASIA") /* if  'ASIA' cics regions*/

    /* ------------------------------------------------------------*/
    /* On MVSEURD LPAR ... TEST CICS ... xcth-theater-location = 'asia'*/
    /* initialize map mn0m001 with test VERSION info from table MN0MT*/
    /* ---------------------------------------------------------------*/


    while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/

      MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

      if (COMMAREA.ZFL-LANG-CD == "JP" /* if Japan Language selected*/
       && COMMAREA.XCKJ-DBCS-TERM-FL == "Y")
                                   /* if terminal is DBCS enabled*/
        MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MTL1.MN0MTL1-CATOAP-DESC-KANJI[MN0MW-TBL-IDX];
      else
        MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];
      end

      if (MN0MT.MN0MT-ASIA-FL[MN0MW-TBL-IDX] == "N")
                                  /* if not prod appl*/
        set MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] red;
      end
      MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
      MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;
                                   /* increment index*/
    end
    return;
  end

                  /* **** EUROPE *****/


    /* ------------------------------------------------------------*/
    /* On MVSEURD LPAR ... TEST CICS ... xcth-theater-location = 'europe'*/
    /* initialize map mn0m001 with test VERSION info from table MN0MT*/
    /* ---------------------------------------------------------------*/


  while (MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX] != 99)
                                   /* if not end-of-table mn0mt*/
    MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] = MN0MT.MN0MT-OPT-CD[MN0MW-TBL-IDX];

    MN0MM001.MN0MM-CATOAP-DESC[MN0MW-MAP-IDX] = MN0MT.MN0MT-CATOAP-DESC[MN0MW-TBL-IDX];

    if (MN0MT.MN0MT-EURD-FL[MN0MW-TBL-IDX] == "N")
                                  /* if not prod appl*/
      set MN0MM001.MN0MM-OPT-CD[MN0MW-MAP-IDX] red;
    end
    MN0MW01.MN0MW-TBL-IDX = MN0MW01.MN0MW-TBL-IDX + 1;
    MN0MW01.MN0MW-MAP-IDX = MN0MW01.MN0MW-MAP-IDX + 1;
                                   /* increment index*/
  end
  return;



end // end MN0MS-LOAD-TEST-VR

Record MN0MW01 type basicRecord
  10 MN0MWERG MN0MWERG ; 
    15 MN0MWERL MN0MWERL [2] ; 
  10 MN0MWHDT MN0MWHDT ; 
  10 MN0MW-MAP-IDX MN0MW-MAP-IDX ; 
  10 MN0MW-TBL-IDX MN0MW-TBL-IDX ; 
  10 MN0MW-CICS-PROD-FL MN0MW-CICS-PROD-FL ; 
  10 MN0MW-LANGCD-ERROR MN0MW-LANGCD-ERROR ; 
  10 MN0MW-TA0230-CALL-OK MN0MW-TA0230-CALL-OK ; 
  10 MN0MW-TEST-INFO-L1 MN0MW-TEST-INFO-L1 ; 
    15 MN0MW-LIT-L101 MN0MW-LIT-L101 ; 
    15 ZFL-LANG-CD ZFL-LANG-CD ; 
    15 * char(2) ; // zfl-lang-cd
    15 MN0MW-LIT-L102 MN0MW-LIT-L102 ; 
    15 XCKJ-DBCS-TERM-FL XCKJ-DBCS-TERM-FL ; 
    15 * char(1) ; // zfl-lang-cd
  10 MN0MW-TEST-INFO-L2 MN0MW-TEST-INFO-L2 ; 
    15 MN0MW-LIT-L201 MN0MW-LIT-L201 ; 
    15 CAFROMAP CAFROMAP ; 
    15 * char(2) ; // zfl-lang-cd
    15 MN0MW-LIT-L203 MN0MW-LIT-L203 ; 
    15 XCTH-THEATER-RUNTYPE XCTH-THEATER-RUNTYPE ; 
    15 * char(2) ; // zfl-lang-cd
    15 MN0MW-LIT-L204 MN0MW-LIT-L204 ; 
    15 XCTH-THEATER-LOCATION XCTH-THEATER-LOCATION ; 
    15 * char(2) ; // zfl-lang-cd
    15 MN0MW-LIT-L205 MN0MW-LIT-L205 ; 
    15 TA3APLID TA3APLID ; 
    15 * char(2) ; // zfl-lang-cd
    15 MN0MW-LIT-L206 MN0MW-LIT-L206 ; 
    15 TA3DB2SS TA3DB2SS ; 
    15 * char(1) ; // zfl-lang-cd
end // end MN0MW01

//*** RECORD=XCKJREC ****
// ************************************************************
// *****                   X C K J R E C                  *****
// *****                                                  *****
// ***** Record describes the parameter information       *****
// ***** passed from on-line CSP application to program   *****
// ***** xc1490.  This is to allow applications to det-   *****
// ***** ermine if a terminal is KANJI-DBCS Enabled       *****
// *****                                                  *****
// *****     M A I N T E N A N C E     H I S T O R Y      *****
// *****                                                  *****
// ***** DATE      NAME         COMMENT                   *****
// ***** --------  -----------  ------------------------- *****
// ***** 07/26/93  Vern Cowan   Initial record creation   *****
// *****                        per M.Thompson, CICS Pgmr *****
// *****                                                  *****
// ************************************************************
// * Call example:                                            *
// *                                                          *
// * call xc1490 xckjrec (nomaps noncsp  ;                    *
// ************************************************************
// *                                                          *
// *  Return code information:                                *
// *  XC1490 does not return any return codes to the calling  *
// *  Application.                                            *
// ************************************************************
// ***********************
Record XCKJREC type basicRecord
  5 XCKJREC-GROUP XCKJREC-GROUP ; 
    10 XCKJ-DBCS-TERM-FL XCKJ-DBCS-TERM-FL ; 
end // end XCKJREC

// appl in cics production flag
DataItem MN0MW-CICS-PROD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// langcd not found flag y/n
DataItem MN0MW-LANGCD-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - TA3LANG
DataItem MN0MW-LIT-L101 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - TA3LANG
DataItem MN0MW-LIT-L102 char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - TA3LANG
DataItem MN0MW-LIT-L201 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - XCTH-RUNTYPE
DataItem MN0MW-LIT-L203 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - XCTH-LOC
DataItem MN0MW-LIT-L204 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - CICS
DataItem MN0MW-LIT-L205 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LIT - CAFROMAP
DataItem MN0MW-LIT-L206 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map index
DataItem MN0MW-MAP-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ta0230-call-ok   flag y/n
DataItem MN0MW-TA0230-CALL-OK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tbl index
DataItem MN0MW-TBL-IDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem MN0MW-TEST-INFO-L1 char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MN0MM001 TEST-INFO DSPLY AREA
DataItem MN0MW-TEST-INFO-L2 char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2 68 BYTE LINES FOR TA0020 ERS
DataItem MN0MWERG char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ERROR LINE FOR TA0020 ERRORS
DataItem MN0MWERL char(68)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// HOLD DATE
DataItem MN0MWHDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xc1490 parm record
DataItem XCKJREC-GROUP char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

