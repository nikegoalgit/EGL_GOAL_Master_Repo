package mn0p;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import mn.common.*;
import ta.common.*;
//*** PROGRAM=MN0P ****
// PROFILE MAINTENANCE CSP SECURITY FILE UPDATE APPLICATION
// ============================================================
// THIS APPLICATION IS USED TO ADD, UPDATE, AND DELETE "&"
// PROFILES FROM THE CSP SECURITY FILE.
// IT IS INTENDED FOR USE BY THE DATA CENTER HOTLINE PSA, OR
// THE APPLICATION SUPPORT CSP SECURITY FILE ADMINISTRATOR TO
// MAINTAIN THE CSP SECURITY FILE...
// ============================================================
// 07-25-90  JWOOD  CREATED APPLICATION
// 07-26-90  JWOOD  CHANGED OPTION 4 TO 'DEL FROM USER' PROCESS
// 01-27-92  JWOOD  INITIALIZE LOGIC
// *********************
Program MN0P type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "MN00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  MN0PW01 MN0PW01; // record
  MN1REC MN1REC; // record
  MN2REC MN2REC { redefines = MN1REC } ; // record
  MN3REC MN3REC { redefines = MN1REC } ; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use MN0PM.MN0PM001,  // forms
      MN0PM.MN0PM002, 
      MN0PM.MN0PM003, 
      MN0PM.MN0PM004, 
      MN0PM.MN0PM005
   {
    helpKey = pf1,
    pfKeyEquate = yes
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    MN0P000: MN0P000();
    goto MN0P000;
  end // end main
end // end MN0P

// mainline logic
Function MN0P000()
   /* XSENTRY*/
  while (MN0PW01.MN0PWIFL != "N")
    MN0P010(); /* init w/s*/
  end

  while (MN0PW01.MN0PWMFL == "Y")
    MN0P100(); /* process menu*/
  end

  while (MN0PW01.MN0PW1FL == "Y")
    MN0P200(); /* process OPTION 1*/
  end
                                   /* - new profile*/

  while (MN0PW01.MN0PW2FL == "Y")
    MN0P300(); /* process OPTION 2*/
  end /* - add to list*/

  while (MN0PW01.MN0PW3FL == "Y")
    MN0P400(); /* process OPTION 3*/
  end /* - chg user rec*/

  while (MN0PW01.MN0PW4FL == "Y")
    MN0P500(); /* process OPTION 4*/
  end /* - chg appl rec*/
end // end MN0P000

// INITIALIZE W/S
Function MN0P010()
  converseLib.clearScreen();
  set MN0PM001 initial;
  converseLib.clearScreen();
  set MN0PM002 initial;
  converseLib.clearScreen();
  set MN0PM003 initial;
  converseLib.clearScreen();
  set MN0PM004 initial;
  converseLib.clearScreen();
  set MN0PM005 initial;
  set MN0PW01 empty;
  set MN2REC empty;
  set MN3REC empty;
  MN0PW01.MN0PWIFL = "N"; /* turn off init flag*/

  MN0PW01.MN0PWMFL = "Y"; /* turn on menu display flag*/
end // end MN0P010

// MENU PROCESSING
Function MN0P100()
  MN0P110(); /* prepare menu display*/
  converse MN0PM001 ;
  MN0P120(); /* edit menu input*/
  if (MN0PW01.MN0PWEFL == "Y")
    MN0PWMFL = "Y";
    MN0PWEFL = "N";
  else
    MN0PWMFL = "N";
  end
end // end MN0P100

// prepare menu data
Function MN0P110()
  MN0PM001.MN0PMDT = VGVar.currentShortGregorianDate;
end // end MN0P110

// edit menu input
Function MN0P120()
  MN0PM001.XXXPRCNM = "MN0P120";

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
    MN0PM001.MN0PMMSG = COMMAREA.CAMSG;
    COMMAREA.CATOAP = " ";
    MN0PW01.MN0PWEFL = "Y";
    return;
  end

  if (converseVar.eventKey is pf4)
    XSPF4();
    MN0PM001.MN0PMMSG = COMMAREA.CAMSG;
    COMMAREA.CATOAP = " ";
    MN0PW01.MN0PWEFL = "Y";
    return;
  end

  if (converseVar.eventKey is enter)
    /* NEXT*/
  else
    MN0PM001.MN0PMMSG = "INVALID FUNCTION KEY PRESSED - TRY AGAIN";
    MN0PW01.MN0PWEFL = "Y";
    return; /* RETURN TO MN0P100*/
  end

  if (MN0PM001.CATOAP == " ")
    /* next sentence*/
  else
    if (MN0PM001.CATOAP == "JWOO")
      MN0PM001.CATOAP = " ";
      MN0PW01.MN0PWJFL = "Y";
    else
      COMMAREA.CATOAP = MN0PM001.CATOAP;
      COMMAREA.CAITEM = MN0PM001.CAITEM;
      XSEXIT();
      MN0PM001.MN0PMMSG = COMMAREA.CAMSG;
      COMMAREA.CATOAP = " ";
      MN0PW01.MN0PWJFL = "N";
      MN0PW01.MN0PWEFL = "Y";
      return;
    end
  end

  if (MN0PM001.MN0PMSEL == "1")
    MN0PW01.MN0PW1FL = "Y";
    MN0PW01.MN0PWEFL = "N";
    return;
  end
  if (MN0PM001.MN0PMSEL == "2")
    MN0PW01.MN0PW2FL = "Y";
    MN0PW01.MN0PWEFL = "N";
    return;
  end
  if (MN0PM001.MN0PMSEL == "3")
    MN0PW01.MN0PW3FL = "Y";
    MN0PW01.MN0PWEFL = "N";
    return;
  end
  if (MN0PM001.MN0PMSEL == "4")
    MN0PW01.MN0PW4FL = "Y";
    MN0PW01.MN0PWEFL = "N";
    return;
  else
    MN0PM001.MN0PMMSG = "ENTER VALID SELECTION OR PRESS PF KEY";
    MN0PW01.MN0PWEFL = "Y";
  end
end // end MN0P120

// NEW PROFILE PROCESS (opt 1
Function MN0P200()
  MN0P210(); /* prepare new profile screen*/
  MN0P215(); /* converse screen*/
   /* ==========================================================*/
  if (converseVar.eventKey is pf3)
    MN0PW01.MN0PW1FL = "N";
    MN0PW01.MN0PWMFL = "Y";
    return; /* RETURN TO MN0P000*/
  end
   /* ==========================================================*/
  if (converseVar.eventKey is enter)
    /* NEXT*/
  else
    MN0PM002.MN0PMMSG = "INVALID FUNCTION KEY PRESSED - TRY AGAIN";
    MN0PW01.MN0PW1FL = "Y";
    return; /* RETURN TO MN0P000*/
  end
   /* ==========================================================*/
  MN0P220(); /* edit input data*/
   /* ==========================================================*/
  if (MN0PW01.MN0PWEFL == "Y")
    MN0PW01.MN0PW1FL = "Y"; /* RETURN TO MN0P000*/
    return;
  end
   /* ==========================================================*/
  MN0P230(); /* ADD APPL RECORD*/
   /* ==========================================================*/
  if (MN0PW01.MN0PWEFL == "Y")
    MN0PW01.MN0PW1FL = "Y"; /* RETURN TO MN0P000*/
    return;
  end
   /* ==========================================================*/
  MN0P240(); /* ADD USER RECORD*/
   /* ==========================================================*/
  if (MN0PW01.MN0PWEFL == "Y")
    MN0PW01.MN0PW1FL = "Y"; /* RETURN TO MN0P000*/
    return;
  end
   /* ==========================================================*/
  if (MN0PW01.MN0PWEFL == "Y")
    /* NEXT*/
  else
    set MN0PM002 initial;
    MN0PM002.MN0PMMSG = "---- UPDATE SUCCESSFUL ----";
    MN0PW01.MN0PW1FL = "Y";
  end
end // end MN0P200

// prepare screen data
Function MN0P210()
  MN0PM002.MN0PMDT = VGVar.currentShortGregorianDate;
end // end MN0P210

// display screen
Function MN0P215()
  MN0PM002.XXXPRCNM = "MN0P215";
  converse MN0PM002 ;
  MN0PM002.MN0PMMSG = " ";
  MN0PM002.VAGen_EZEMSG = " ";
end // end MN0P215

// edit input data
Function MN0P220()
  MN0PM002.XXXPRCNM = "MN0P220";
   /* ========================================== edit user name*/
  if (MN0PM002.MN2USRNM == " ")
    MN0PM002.MN0PMMSG = "---- USER NAME MUST BE ENTERED ----";
    set MN0PM002.MN2USRNM cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return;
  else
    set MN0PM002.MN2USRNM initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
   /* ========================================== edit mn0pmpro*/
  MN0PW01.MN1USER = MN0PM002.MN1USER; /* breakdown profile fld*/
  if (MN0PW01.MN0PWAMP != "&")
    MN0PM002.MN0PMMSG = "PROFILE ID   IS NOT VALID (& REQUIRED)";
    set MN0PM002.MN1USER cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return; /* return to mn0p200*/
  else
    set MN0PM002.MN1USER initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
   /* ==========================================*/
  MN0P225(); /* check appl record*/
   /* ==========================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* if error, return to mn0p200*/
    return;
  end
   /* ==========================================*/
  MN0P227(); /* check user record*/
   /* ==========================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* if error, return to mn0p200*/
    return;
  end
   /* ==========================================*/
end // end MN0P220

// get appl (type 1) record
Function MN0P225()
  MN1KEY = " ";
  MN1REC.MN1APPL = MN0PM002.MN1USER;
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  try
    get MN1REC ;
  end
  if (MN1REC is ioError)
    if (MN1REC is noRecordFound)
      set MN0PM002.MN1USER initialAttributes;
      MN0PW01.MN0PWEFL = "N";
      return;
    else
      MN0PM002.MN0PMMSG = "----- ERROR READING APPL RECORD -----";
      set MN0PM002.MN1USER cursor, bold;
      MN0PW01.MN0PWEFL = "Y";
      return;
    end
  else
    MN0PM002.MN0PMMSG = "----- APPL RECORD EXISTS -----";
    set MN0PM002.MN1USER cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return;
  end
end // end MN0P225

// get user (type 2) record
Function MN0P227()
  MN0PM002.XXXPRCNM = "MN0P227";

  MN2REC.MN1KEY = " ";
  MN2REC.MN1TYPE1 = "2";
  MN2REC.MN1TYPE2 = "2";
  MN2REC.MN1USER = MN0PM002.MN1USER;
  MN2REC.MN1APPL = MN2REC.MN1USER;
  try
    get MN1REC ;
  end
   /* ========================================================*/
  if (MN1REC is ioError)
    if (MN1REC is noRecordFound)
      set MN0PM002.MN1USER initialAttributes;
      MN0PW01.MN0PWEFL = "N";
      return;
    else
      MN0PM002.MN0PMMSG = "----- ERROR READING USER RECORD -----";
      set MN0PM002.MN1USER cursor, bold;
      MN0PW01.MN0PWEFL = "Y";
      return;
    end
  else
    MN0PM002.MN0PMMSG = "----- USER RECORD EXISTS -----";
    set MN0PM002.MN1USER cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return;
  end
   /* ========================================================*/
end // end MN0P227

// add appl record
Function MN0P230()
  MN1KEY = " ";
  MN1REC.MN1APPL = MN0PM002.MN1USER;
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  MN1REC.MN1CICS = "****";
  MN1REC.MN1NM = MN0PM002.MN2USRNM;
  try
    add MN1REC ;
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  if (MN1REC is ioError)
    MN0PM002.MN0PMMSG = "----- ERROR ADDING APPL RECORD -----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P230

// add user record
Function MN0P240()
  MN0PM002.XXXPRCNM = "MN0P240";
  set MN1REC empty;
  MN2REC.MN1TYPE1 = "2";
  MN2REC.MN1TYPE2 = "2";
  MN2REC.MN1USER = MN0PM002.MN1USER;
  MN2REC.MN1APPL = MN0PM002.MN1USER;
  MN2REC.MN2USRNM = MN0PM002.MN2USRNM;
  MN2REC.XNDCD = " ";
  MN2REC.XDVCD = " ";
  MN2REC.XWHCD = " ";
  MN2REC.XSOCD = " ";
  MN2REC.MN2STAT = "A";
  try
    add MN1REC ;
  end
  if (MN1REC is ioError)
    MN0PM002.MN0PMMSG = "---- ERROR ADDING USER REC ----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P240

// ADD TO LIST PROCESS (opt 2
Function MN0P300()
  MN0PM003.XXXPRCNM = "MN0P300";
  MN0P310(); /* prepare add to list screen*/
   /* =====================================================*/
  MN0P315(); /* display screen*/
   /* =====================================================*/
  if (converseVar.eventKey is pf5)
    converseLib.clearScreen();
    set MN0PM003 initial;
    MN0PW01.MN0PW2FL = "Y";
    MN0PW01.MN0PWIFL = "N";
    return; /* RETURN TO MN0P000*/
  end

  if (converseVar.eventKey is pf3)
    MN0PW01.MN0PW2FL = "N";
    MN0PW01.MN0PWIFL = "Y";
    return; /* RETURN TO MN0P000*/
  end

  if (converseVar.eventKey is enter)
    /* NEXT*/
  else
    MN0PM003.MN0PMMSG = "INVALID FUNCTION KEY PRESSED - TRY AGAIN";
    MN0PW01.MN0PWEFL = "Y";
    return; /* RETURN TO MN0P000*/
  end
   /* ====================================================*/
  MN0P320(); /* edit profile id*/
   /* ====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if edit errors*/
    MN0PW01.MN0PW2FL = "Y"; /* if error, insure display flag on*/
    MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
    return; /* RETURN TO MN0P000*/
  end
   /* ====================================================*/
                                   /* edit user ids*/
  MN0PW01.MN0PWIX = 1; /* initialize index*/
  while (MN0PW01.MN0PWIX <= 84)
    MN0P330(); /* edit userids    (type 2)*/
    MN0PW01.MN0PWIX = MN0PW01.MN0PWIX + 1;
  end
   /* ====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if edit errors*/
    MN0PW01.MN0PW2FL = "Y"; /* if error, insure display flag on*/
    MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
    return; /* RETURN TO MN0P000*/
  end
   /* ====================================================*/
  MN0PWIX = 1;
  MN0PW01.MN0PWEFL = "N";
  while (MN0PW01.MN0PWIX <= 84)
    MN0P340(); /* add usr-appl recs (type 3)*/
    MN0PW01.MN0PWIX = MN0PW01.MN0PWIX + 1;
  end
   /* ====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if add  errors*/
     /* next sentence*/
  else
    MN0PM003.MN0PMMSG = "---- UPDATE PROCESS COMPLETED -----";
  end

  MN0PW01.MN0PW2FL = "Y"; /* insure display flag on*/
  MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
  return; /* RETURN TO MN0P000*/
   /* ====================================================*/
end // end MN0P300

// prepare screen data
Function MN0P310()
  MN0PM003.MN0PMDT = VGVar.currentShortGregorianDate;
  if (MN0PW01.MN0PWEND == "Y")
    move MN0PM005 to MN0PM003 withV60Compat;
    MN0PM003.VAGen_EZEMSG = " ";
    MN0PM003.MN0PMMSG = " ";
    MN0PM003.MN0PMPRO = " ";
    MN0PW01.MN0PWEND = "N";
  end
end // end MN0P310

// display screen
Function MN0P315()
  converse MN0PM003 ;
  MN0PM003.MN0PMMSG = " ";
  MN0PM003.VAGen_EZEMSG = " ";
end // end MN0P315

// edit input data
Function MN0P320()
  MN0PM003.XXXPRCNM = "MN0P320";
   /* ========================================== edit mn0pmpro*/
  MN0PW01.MN1USER = MN0PM003.MN0PMPRO; /* breakdown profile fld*/
  if (MN0PW01.MN0PWAMP != "&")
    MN0PM003.MN0PMMSG = "PROFILE ID   IS NOT VALID (& REQUIRED)";
    set MN0PM003.MN0PMPRO cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return;
  else
    set MN0PM003.MN0PMPRO initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
   /* ==========================================*/
  MN0P325(); /* check appl record*/
   /* ==========================================*/
end // end MN0P320

// get appl (type 1) record
Function MN0P325()
  MN1KEY = " ";
  MN1APPL = MN0PM003.MN0PMPRO;
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  try
    get MN1REC ;
  end
  if (MN1REC is ioError)
    MN0PM003.MN0PMMSG = "----- PROFILE NOT FOUND AS APPLICATION -----";
    set MN0PM003.MN0PMPRO cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return;
  else
    set MN0PM003.MN0PMPRO initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P325

// get user (type 2) record
Function MN0P330()
  MN0PM003.XXXPRCNM = "MN0P330";

  if (MN0PM003.MN1USER[MN0PWIX] == " ")
    return;
  else
    MN2REC.MN1KEY = " ";
    MN2REC.MN1TYPE1 = "2";
    MN2REC.MN1TYPE2 = "2";
    MN2REC.MN1USER = MN0PM003.MN1USER[MN0PWIX];
    MN2REC.MN1APPL = MN2REC.MN1USER;
  end
  try
    get MN1REC ;
  end

  if (MN1REC is deadLock)
    MN0PW01.MN0PWEFL = "N";
    return;
  end
   /* ========================================================*/
  if (MN1REC is ioError)
    set MN0PM003.MN1USER[MN0PWIX] bold;
    MN0PM003.MN0PMMSG = "------ NOTED USERIDS CANNOT BE CHANGED ----";
    MN0PW01.MN0PWEFL = "Y";
    return;
  end
   /* ========================================================*/
end // end MN0P330

// add user-appl (typ3) record
Function MN0P340()
  if (MN0PM003.MN1USER[MN0PWIX] == " ")
    return;
  else
    set MN1REC empty;
    MN3REC.MN1KEY = " ";
    MN3REC.MN1TYPE1 = "3";
    MN3REC.MN1TYPE2 = "3";
    MN3REC.MN1USER = MN0PM003.MN1USER[MN0PWIX];
    MN3REC.MN1APPL = MN0PM003.MN0PMPRO;
  end
  try
    add MN1REC ;
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  if (MN1REC is ioError)
    set MN0PM003.MN1USER[MN0PWIX] bold;
    MN0PM003.VAGen_EZEMSG = "---------- PARTIAL UPDATE COMPLETED ------";
    MN0PM003.MN0PMMSG = "------ USER IDS NOTED WERE NOT CHANGED ---";
    MN0PW01.MN0PWEFL = "Y";
  else
    set MN0PM003.MN1USER[MN0PWIX] initialAttributes;
  end
end // end MN0P340

// CHANGE USER PROCESS (OPTION 3
Function MN0P400()
  MN0PM004.XXXPRCNM = "MN0P400";
   /* =================================================*/
  MN0P410(); /* prepare change user screen*/
   /* =================================================*/
  MN0P415(); /* CONVERSE SCREEN*/
   /* =================================================chk pf keys*/
  if (converseVar.eventKey is pf3)
    MN0PW01.MN0PW3FL = "N";
    MN0PW01.MN0PWIFL = "Y";
    return;
  end

  if (converseVar.eventKey is enter)
    /* next*/
  else
    MN0PM004.XXXPRCNM = "MN0P400";
    MN0PM004.MN0PMMSG = "INVALID FUNCTION KEY PRESSED - TRY AGAIN";
    return; /* RETURN TO MN0P000*/
  end

   /* =====================================================*/
  MN0P420(); /* edit input data*/
   /* =====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if edit errors*/
    MN0PW01.MN0PW3FL = "Y"; /* if errors, insure display flag on*/
    MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
    return; /* RETURN TO MN0P000*/
  end
   /* =====================================================*/
  MN0P425(); /* get appl record*/
   /* =====================================================*/
  MN0P430(); /* get user record*/
   /* =====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if read error*/
    MN0PW01.MN0PW3FL = "Y"; /* if error, insure display flag on*/
    MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
    return; /* RETURN TO MN0P000*/
  end
   /* =====================================================*/
  if (MN0PW01.MN0PWAFL == "Y") /* if both appl & user rec not found*/
    if (MN0PW01.MN0PWUFL == "Y")
      MN0PM004.VAGen_EZEMSG = " ";
      MN0PM004.MN0PMMSG = "--- BOTH USER AND APPL RECS NOT FOUND ---";
      MN0PW01.MN0PW3FL = "Y"; /* insure display flag on*/
      MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
      return; /* RETURN TO MN0P000*/
    end
  end
   /* =====================================================*/
  MN0P440(); /* move data to screen*/
   /* =====================================================*/
  MN0PW01.MN0PWEFL = "Y";
  while (MN0PW01.MN0PWEFL == "Y")
    /* =====================================================*/
    MN0P415(); /* display screen*/
    /* =====================================================*/
    MN0P450(); /* edit input*/
    /* =====================================================*/
    if (MN0PW01.MN0PWEFL == "Y") /* if edit error, next*/
       /* next sentence*/
    else /* else*/
      if (MN0PW01.MN0PWUFL == "Y") /* if user not on file, next*/
        /* next sentence*/
      else /* else*/
        MN0P460(); /* read user record for updt*/
      end
    end
    /* =====================================================*/
    if (MN0PW01.MN0PWEFL == "Y") /* if read error, next*/
       /* next sentence*/
    else /* else*/
      if (MN0PW01.MN0PWUFL == "Y") /* if user rec not on file*/
        MN0P465(); /* add user record*/
      else
        MN0P470(); /* replace usr record*/
      end
    end
    /* =====================================================*/
    if (MN0PW01.MN0PWEFL == "Y") /* if updt error, next*/
       /* next sentence*/
    else /* else*/
      if (MN0PW01.MN0PWAFL == "Y") /* if appl rec not on file*/
         /* next sentence               ;   next*/
      else /* else*/
        MN0P480(); /* read appl record for update*/
      end
    end
    /* =====================================================*/
    if (MN0PW01.MN0PWEFL == "Y") /* if read error, next*/
       /* next sentence*/
    else /* else*/
      if (MN0PW01.MN0PWAFL == "Y") /* if appl rec not on file*/
        MN0P475(); /* add appl record*/
      else /* else*/
        MN0P490(); /* replace appl record*/
      end
    end
    /* =====================================================*/
    if (MN0PW01.MN0PWEFL == "Y") /* if updt error, next*/
       /* next sentence*/
    else /* else*/
      set MN0PM004 initial;
      MN0PM004.XXXPRCNM = "MN0P400";
      MN0PM004.MN0PMMSG = "UPDATE SUCCESSFUL";
      MN0PW01.MN0PWEFL = "N"; /* return to top of process*/
    end
  end
   /* =====================================================*/
end // end MN0P400

// prepare screen data
Function MN0P410()
  MN0PM004.MN0PMDT = VGVar.currentShortGregorianDate;
end // end MN0P410

// display screen
Function MN0P415()
  MN0PM004.XXXPRCNM = "MN0P415";
  converse MN0PM004 ;
  MN0PM004.MN0PMMSG = " ";
  MN0PM004.VAGen_EZEMSG = " ";
end // end MN0P415

// edit input data
Function MN0P420()
  MN0PM004.XXXPRCNM = "MN0P420";
  MN0PW01.MN1USER = MN0PM004.MN1USER; /* breakdown user field*/
  if (MN0PW01.MN0PWAMP != "&")
    MN0PM004.MN0PMMSG = "USERID VALUE IS NOT VALID (& REQUIRED)";
    set MN0PM004.MN1USER cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
  else
    set MN0PM004.MN1USER initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P420

// obtain appl record
Function MN0P425()
  MN0PM004.XXXPRCNM = "MN0P425";
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
   /* ========================================================*/
  set MN1REC empty;
   /* ========================================================*/
  MN1REC.MN1KEY = " ";
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  MN1REC.MN1APPL = MN0PM004.MN1USER;
   /* ========================================================*/
  try
    get MN1REC ;
  end
   /* ========================================================*/
  if (MN1REC is deadLock)
    MN0PW01.MN0PWAFL = "N";
    MN0PW01.MN0PWEFL = "N";
    return;
  end
   /* ========================================================*/
  if (MN1REC is noRecordFound)
    MN0PM004.VAGen_EZEMSG = "APPL RECORD NOT FOUND";
    MN0PW01.MN0PWAFL = "Y";
    MN0PW01.MN0PWEFL = "N";
    return;
  end
   /* ========================================================*/
  if (MN1REC is ioError)
    MN0PW01.MN0PWAFL = "N";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PM004.MN2USRNM = MN1REC.MN1NM;
    MN0PW01.MN0PWAFL = "N";
    MN0PW01.MN0PWEFL = "N";
  end
   /* ========================================================*/
end // end MN0P425

// obtain user record
Function MN0P430()
  MN0PM004.XXXPRCNM = "MN0P430";
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
   /* ========================================================*/
  set MN1REC empty;
   /* ========================================================*/
  MN2REC.MN1TYPE1 = "2";
  MN2REC.MN1TYPE2 = "2";
  MN2REC.MN1USER = MN0PM004.MN1USER;
  MN2REC.MN1APPL = MN0PM004.MN1USER;
   /* ========================================================*/
  try
    get MN1REC ;
  end
   /* ========================================================*/
  if (MN1REC is deadLock)
    MN0PM004.MN0PMMSG = "THE USER RECORD IS LOCKED";
    MN0PW01.MN0PWUFL = "N";
    MN0PW01.MN0PWEFL = "Y";
    return;
  end
   /* ========================================================*/
  if (MN1REC is noRecordFound)
    MN0PM004.VAGen_EZEMSG = "----- USER RECORD NOT FOUND -----";
    MN0PW01.MN0PWUFL = "Y";
    return;
  end
   /* ========================================================*/
  if (MN1REC is ioError)
    MN0PW01.MN0PWEFL = "Y";
    MN0PW01.MN0PWUFL = "N";
  else
    MN0PW01.MN0PWEFL = "N";
    MN0PW01.MN0PWUFL = "N";
  end
   /* ========================================================*/
end // end MN0P430

// display update screen
Function MN0P440()
  MN0PM004.XXXPRCNM = "MN0P440";
   /* ======================================= move flds to screen*/
  if (MN0PW01.MN0PWUFL == "N")
    MN0PM004.MN1USER = MN2REC.MN1USER;
    MN0PM004.MN2USRNM = MN2REC.MN2USRNM;
  end
   /* ======================================= protect usr set crsr*/
  set MN0PM004.MN1USER protect;
  set MN0PM004.MN2USRNM cursor;
   /* =======================================*/
  MN0PM004.MN0PMMSG = "========= MAKE YOUR CHANGES =======";
end // end MN0P440

// edit changed data
Function MN0P450()
  MN0PM004.XXXPRCNM = "MN0P450";
   /* ============================ validate pf key*/
  if (converseVar.eventKey is pf3)
    MN0PW01.MN0PW3FL = "N";
    MN0PW01.MN0PWIFL = "Y";
    MN0PW01.MN0PWEFL = "N";
    return;
  end
  if (converseVar.eventKey is enter)
    /* next sentence*/
  else
    MN0PM004.MN0PMMSG = "INVALID PF KEY PRESSED - TRY AGAIN";
    MN0PW01.MN0PWEFL = "Y";
    return;
  end
   /* ============================ edit usr name*/
  if (MN0PM004.MN2USRNM == " ")
    MN0PM004.MN0PMMSG = "-------- USER NAME INVALID ----------";
    set MN0PM004.MN2USRNM cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
   /* ============================*/
end // end MN0P450

// read user record for update
Function MN0P460()
  MN0PM004.XXXPRCNM = "MN0P460";
  try
    get MN1REC forUpdate ;
  end
  if (MN1REC is ioError)
    MN0PM004.MN0PMMSG = "---- READ FOR UPDATE ERROR ----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P460

// add user record
Function MN0P465()
  MN0PM004.XXXPRCNM = "MN0P470";
  set MN1REC empty;
  MN2REC.MN1TYPE1 = "2";
  MN2REC.MN1TYPE2 = "2";
  MN2REC.MN1USER = MN0PM004.MN1USER;
  MN2REC.MN1APPL = MN0PM004.MN1USER;
  MN2REC.MN2USRNM = MN0PM004.MN2USRNM;
  MN2REC.XNDCD = " ";
  MN2REC.XDVCD = " ";
  MN2REC.XWHCD = " ";
  MN2REC.XSOCD = " ";
  MN2REC.MN2STAT = "A";
  try
    add MN1REC ;
  end
  if (MN1REC is ioError)
    MN0PM004.MN0PMMSG = "----- USER RECORD UPDATE ERROR -----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P465

// update user record
Function MN0P470()
  MN0PM004.XXXPRCNM = "MN0P470";
  MN2REC.MN2USRNM = MN0PM004.MN2USRNM;
  MN2REC.XNDCD = " ";
  MN2REC.XDVCD = " ";
  MN2REC.XWHCD = " ";
  MN2REC.XSOCD = " ";
  MN2REC.MN2STAT = "A";
  try
    replace MN1REC ;
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  if (MN1REC is ioError)
    MN0PM004.MN0PMMSG = "----- USER RECORD UPDATE ERROR -----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P470

// add appl record
Function MN0P475()
  MN0PM004.XXXPRCNM = "MN0P475";
  set MN1REC empty;
  MN1REC.MN1KEY = " ";
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  MN1REC.MN1APPL = MN0PM004.MN1USER;
  MN1REC.MN1CICS = "****";
  MN1REC.MN1NM = MN0PM004.MN2USRNM;
  try
    add MN1REC ;
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  if (MN1REC is ioError)
    MN0PM004.MN0PMMSG = "----- APPL RECORD UPDATE ERROR -----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P475

// read appl record for update
Function MN0P480()
  MN0PM004.XXXPRCNM = "MN0P480";
  set MN1REC empty;
  MN1REC.MN1KEY = " ";
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  MN1REC.MN1APPL = MN0PM004.MN1USER;
  try
    get MN1REC forUpdate ;
  end
  if (MN1REC is ioError)
    MN0PM004.MN0PMMSG = "---- READ FOR UPDATE ERROR ----";
    MN0PW01.MN0PWEFL = "Y";
  else
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P480

// update user record
Function MN0P490()
  MN0PM004.XXXPRCNM = "MN0P490";
  MN1REC.MN1CICS = "****";
  MN1REC.MN1NM = MN0PM004.MN2USRNM;
  MN1REC.MN1ADDFL = " ";
  MN1REC.MN1ALVL[1] = " ";
  MN1REC.MN1ALVL[2] = " ";
  MN1REC.MN1ALVL[3] = " ";
  MN1REC.MN1ALVL[4] = " ";
  MN1REC.MN1ALVL[5] = " ";
  MN1REC.MN1ALVL[6] = " ";
  MN1REC.MN1ALVL[7] = " ";
  MN1REC.MN1ALVL[8] = " ";
  MN1REC.MN1ALVL[9] = " ";
  MN1REC.MN1ALVL[10] = " ";
  MN1REC.MN1CHGFL = " ";
  MN1REC.MN1CLVL[1] = " ";
  MN1REC.MN1CLVL[2] = " ";
  MN1REC.MN1CLVL[3] = " ";
  MN1REC.MN1CLVL[4] = " ";
  MN1REC.MN1CLVL[5] = " ";
  MN1REC.MN1CLVL[6] = " ";
  MN1REC.MN1CLVL[7] = " ";
  MN1REC.MN1CLVL[8] = " ";
  MN1REC.MN1CLVL[9] = " ";
  MN1REC.MN1CLVL[10] = " ";
  MN1REC.MN1DELFL = " ";
  MN1REC.MN1DLVL[1] = " ";
  MN1REC.MN1DLVL[2] = " ";
  MN1REC.MN1DLVL[3] = " ";
  MN1REC.MN1DLVL[4] = " ";
  MN1REC.MN1DLVL[5] = " ";
  MN1REC.MN1DLVL[6] = " ";
  MN1REC.MN1DLVL[7] = " ";
  MN1REC.MN1DLVL[8] = " ";
  MN1REC.MN1DLVL[9] = " ";
  MN1REC.MN1DLVL[10] = " ";
  MN1REC.MN1INQFL = " ";
  MN1REC.MN1ILVL[1] = " ";
  MN1REC.MN1ILVL[2] = " ";
  MN1REC.MN1ILVL[3] = " ";
  MN1REC.MN1ILVL[4] = " ";
  MN1REC.MN1ILVL[5] = " ";
  MN1REC.MN1ILVL[6] = " ";
  MN1REC.MN1ILVL[7] = " ";
  MN1REC.MN1ILVL[8] = " ";
  MN1REC.MN1ILVL[9] = " ";
  MN1REC.MN1ILVL[10] = " ";
  try
    replace MN1REC ;
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
end // end MN0P490

// DELETE PRFL PROCESS (OPTION 4
Function MN0P500()
  MN0PM005.XXXPRCNM = "MN0P500";
  MN0P510(); /* prepare delete list screen*/
   /* =====================================================*/
  MN0P515(); /* display screen*/
   /* =====================================================*/
  if (MN0PW01.MN0PWEND == "Y")
    if (converseVar.eventKey is pf6)
      MN0PW01.MN0PW4FL = "N";
      MN0PW01.MN0PW2FL = "Y";
      MN0PW01.MN0PWIFL = "N";
      set MN0PM005.MN0PMPF6 initialAttributes;
    else
      set MN0PM005.MN0PMPF6 initialAttributes;
    end
  else
    set MN0PM005.MN0PMPF6 initialAttributes;
  end

  if (converseVar.eventKey is pf5)
    converseLib.clearScreen();
    set MN0PM005 initial;
    MN0PW01.MN0PW4FL = "Y";
    MN0PW01.MN0PWIFL = "N";
    return; /* RETURN TO MN0P000*/
  end

  if (converseVar.eventKey is pf3)
    MN0PW01.MN0PW4FL = "N";
    MN0PW01.MN0PWIFL = "Y";
    return; /* RETURN TO MN0P000*/
  end

  if (converseVar.eventKey is enter)
    /* NEXT*/
  else
    MN0PM005.MN0PMMSG = "INVALID FUNCTION KEY PRESSED - TRY AGAIN";
    MN0PW01.MN0PWEFL = "Y";
    return; /* RETURN TO MN0P000*/
  end
   /* ====================================================*/
  MN0P520(); /* edit profile id*/
   /* ====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if edit errors*/
    MN0PW01.MN0PW4FL = "Y"; /* if error, insure display flag on*/
    MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
    return; /* RETURN TO MN0P000*/
  end
   /* ====================================================*/
                                   /* edit user ids*/
  MN0PW01.MN0PWIX = 1; /* initialize index*/
  while (MN0PW01.MN0PWIX <= 84)
    MN0P530(); /* edit userids    (type 2)*/
    MN0PW01.MN0PWIX = MN0PW01.MN0PWIX + 1;
  end
   /* ====================================================*/
  if (MN0PW01.MN0PWEFL == "Y") /* check if edit errors*/
    MN0PW01.MN0PW4FL = "Y"; /* if error, insure display flag on*/
    MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
    return; /* RETURN TO MN0P000*/
  end
   /* ====================================================*/
  MN0PWIX = 1;
  MN0PW01.MN0PWEFL = "N";
  while (MN0PW01.MN0PWIX <= 84)
    MN0P535();
    if (MN0PW01.MN0PWEFL == "Y") /* if read for updt error*/
      /* next                         ;   next*/
    else /* else*/
      MN0P540(); /* del usr-appl recs (type 3)*/
    end
    MN0PW01.MN0PWIX = MN0PW01.MN0PWIX + 1;
  end
   /* ====================================================*/
  MN0PW01.MN0PWEND = "Y";
  set MN0PM005.MN0PMPF6 protect;
  if (MN0PW01.MN0PWEFL == "Y") /* check if add  errors*/
     /* next sentence*/
  else
    MN0PM005.MN0PMMSG = "---- DELETE PROCESS COMPLETED -----";
  end

  MN0PW01.MN0PW4FL = "Y"; /* insure display flag on*/
  MN0PW01.MN0PWEFL = "N"; /* and turn off error flag*/
  return; /* RETURN TO MN0P000*/
   /* ====================================================*/
end // end MN0P500

// prepare screen data
Function MN0P510()
  MN0PM005.MN0PMDT = VGVar.currentShortGregorianDate;
end // end MN0P510

// display screen
Function MN0P515()
  converse MN0PM005 ;
  MN0PM005.VAGen_EZEMSG = " ";
  MN0PM005.MN0PMMSG = " ";
end // end MN0P515

// edit input data
Function MN0P520()
  MN0PM005.XXXPRCNM = "MN0P520";
   /* ========================================== edit mn0pmpro*/
  MN0PW01.MN1USER = MN0PM005.MN0PMPRO; /* breakdown profile fld*/
  if (MN0PW01.MN0PWAMP != "&")
    if (MN0PW01.MN0PWJFL == "Y")
      set MN0PM005.MN0PMPRO initialAttributes;
      MN0PW01.MN0PWEFL = "N";
    else
      MN0PM005.MN0PMMSG = "PROFILE ID   IS NOT VALID (& REQUIRED)";
      set MN0PM005.MN0PMPRO cursor, bold;
      MN0PW01.MN0PWEFL = "Y";
      return;
    end
  else
    set MN0PM005.MN0PMPRO initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
   /* ==========================================*/
  MN0P525(); /* check appl record*/
   /* ==========================================*/
end // end MN0P520

// get appl (type 1) record
Function MN0P525()
  MN1KEY = " ";
  MN1APPL = MN0PM005.MN0PMPRO;
  MN1REC.MN1TYPE1 = "1";
  MN1REC.MN1TYPE2 = "1";
  try
    get MN1REC ;
  end
  if (MN1REC is ioError)
    MN0PM005.MN0PMMSG = "----- PROFILE NOT FOUND AS APPLICATION -----";
    set MN0PM005.MN0PMPRO cursor, bold;
    MN0PW01.MN0PWEFL = "Y";
    return;
  else
    set MN0PM005.MN0PMPRO initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P525

// get user (type 2) record
Function MN0P530()
  MN0PM005.XXXPRCNM = "MN0P530";

  if (MN0PM005.MN1USER[MN0PWIX] == " ")
    return;
  else
    MN2REC.MN1KEY = " ";
    MN2REC.MN1TYPE1 = "2";
    MN2REC.MN1TYPE2 = "2";
    MN2REC.MN1USER = MN0PM005.MN1USER[MN0PWIX];
    MN2REC.MN1APPL = MN2REC.MN1USER;
  end
  try
    get MN1REC ;
  end

  if (MN1REC is deadLock)
    MN0PW01.MN0PWEFL = "N";
    return;
  end
   /* ========================================================*/
  if (MN1REC is ioError)
    set MN0PM005.MN1USER[MN0PWIX] bold;
    MN0PM005.VAGen_EZEMSG = "------ NOTED USERIDS NOT VALID -----";
    MN0PW01.MN0PWEFL = "Y";
    return;
  else
    set MN0PM005.MN1USER[MN0PWIX] initialAttributes;
  end
   /* ========================================================*/
end // end MN0P530

// read user-appl   for update
Function MN0P535()
  MN0PM005.XXXPRCNM = "MN0P535";
  if (MN0PM005.MN1USER[MN0PWIX] == " ")
    return;
  else
    set MN1REC empty;
    MN3REC.MN1KEY = " ";
    MN3REC.MN1TYPE1 = "3";
    MN3REC.MN1TYPE2 = "3";
    MN3REC.MN1USER = MN0PM005.MN1USER[MN0PWIX];
    MN3REC.MN1APPL = MN0PM005.MN0PMPRO;
  end
  try
    get MN1REC forUpdate ;
  end
  if (MN1REC is ioError)
    MN0PM005.VAGen_EZEMSG = "---- PARTIAL UPDATE COMPLETED  ----";
    MN0PM005.MN0PMMSG = "---- NOTED USERS NOT PROCESSED ----";
    set MN0PM005.MN1USER[MN0PWIX] bold;
    MN0PW01.MN0PWEFL = "Y";
  else
    set MN0PM005.MN1USER[MN0PWIX] initialAttributes;
    MN0PW01.MN0PWEFL = "N";
  end
end // end MN0P535

// del user-appl (typ3) record
Function MN0P540()
  if (MN0PM005.MN1USER[MN0PWIX] == " ")
    return;
  else
    set MN1REC empty;
    MN3REC.MN1KEY = " ";
    MN3REC.MN1TYPE1 = "3";
    MN3REC.MN1TYPE2 = "3";
    MN3REC.MN1USER = MN0PM005.MN1USER[MN0PWIX];
    MN3REC.MN1APPL = MN0PM005.MN0PMPRO;
  end
  try
    delete MN1REC ;
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
  
  if (MN1REC is ioError)
    set MN0PM005.MN1USER[MN0PWIX] bold;
    MN0PM005.VAGen_EZEMSG = "---------- PARTIAL UPDATE COMPLETED ------";
    MN0PM005.MN0PMMSG = "------ USER IDS NOTED WERE NOT CHANGED ---";
    MN0PW01.MN0PWEFL = "Y";
  else
    set MN0PM005.MN1USER[MN0PWIX] initialAttributes;
  end
end // end MN0P540

Record MN0PW01 type basicRecord
  10 MN0PWAFL MN0PWAFL ; 
  10 MN0PWEFL MN0PWEFL ; 
  10 MN0PWIX MN0PWIX ; 
  10 MN0PWIFL MN0PWIFL ; 
  10 MN0PWJFL MN0PWJFL ; 
  10 MN0PWMFL MN0PWMFL ; 
  10 MN0PWUFL MN0PWUFL ; 
  10 MN0PW1FL MN0PW1FL ; 
  10 MN0PW2FL MN0PW2FL ; 
  10 MN0PW3FL MN0PW3FL ; 
  10 MN0PW4FL MN0PW4FL ; 
  10 MN0PWEND MN0PWEND ; 
  10 MN1USER MN1USER ; 
    15 MN0PWAMP MN0PWAMP ; 
    15 * char(7) ; 
end // end MN0PW01

// 'y'= display OPT 1 MAP
DataItem MN0PW1FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= display OPT 2 MAP
DataItem MN0PW2FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= display OPT 3 MAP
DataItem MN0PW3FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= display OPT 4 MAP
DataItem MN0PW4FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= appl rec not fnd
DataItem MN0PWAFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ampersand
DataItem MN0PWAMP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= error found
DataItem MN0PWEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= end of delete process
DataItem MN0PWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= init w/s
DataItem MN0PWIFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index
DataItem MN0PWIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 'JWOO' = spl update
DataItem MN0PWJFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= display menu
DataItem MN0PWMFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'y'= user rec not fnd
DataItem MN0PWUFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

