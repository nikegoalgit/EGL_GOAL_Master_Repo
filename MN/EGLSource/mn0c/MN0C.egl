package mn0c;
import corpcom1.*;
import corpcom2.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
//*** PROGRAM=MN0C ****
// this application is intended as a testing aid for
// programmers.  it allows you to 'stuff' most values into
// the commarea without going through the normal menu/security
// steps.  there are no checks on values put into these fields
// so use at your own risk.  also since this application lets
// you into another transactions without any security checks
// make sure that you can get out of the application you are
// going to.  again this transaction is for testing purposes
// only and will not be installed in a test environment.
// .........................................................
// ............... maintenance log .........................
// CNTL --DATE-- USERID  DESCRIPTION
// tsup 04-26-94 vcowan  default commarea.zfl-lang-cd to 'en'
// tsup 02-14-95 vcowan  set defaults of commarea.xcthrec
// tsup 03-25-97 vcowan  update mn0cs-init-xcthrec ... reason:
//                       division field added to record for
//                       MVSDAPB & MVSDFTC LPARs
// *********************
Program MN0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = no
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  XCTHREC XCTHREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use MN0CM.MN0CM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    MN0C001: MN0C001();



     /* ************************************************************/
        /* always flow to the converse process mn0c005*/
     /* ************************************************************/



    goto MN0C005;



    MN0C005: MN0C005();



     /* ***********************************************************/
        /* flow back to the same process*/
     /* ***********************************************************/


    goto MN0C005;



  end // end main
end // end MN0C

// program initialization
Function MN0C001()



   /* ************************************************************/
      /* this process does any initialization required for*/
      /* the application.*/
   /* ************************************************************/


  set MN0CM001 initial;
  MN0CM001.MN0CMTDT = VGVar.currentShortGregorianDate;
  MN0CM001.CAADDFL = "N";
  MN0CM001.CAALVL[1] = "N";
  MN0CM001.CAALVL[2] = "N";
  MN0CM001.CAALVL[3] = "N";
  MN0CM001.CAALVL[4] = "N";
  MN0CM001.CAALVL[5] = "N";
  MN0CM001.CAALVL[6] = "N";
  MN0CM001.CAALVL[7] = "N";
  MN0CM001.CAALVL[8] = "N";
  MN0CM001.CAALVL[9] = "N";
  MN0CM001.CAALVL[10] = "N";

  MN0CM001.CACHGFL = "N";
  MN0CM001.CACLVL[1] = "N";
  MN0CM001.CACLVL[2] = "N";
  MN0CM001.CACLVL[3] = "N";
  MN0CM001.CACLVL[4] = "N";
  MN0CM001.CACLVL[5] = "N";
  MN0CM001.CACLVL[6] = "N";
  MN0CM001.CACLVL[7] = "N";
  MN0CM001.CACLVL[8] = "N";
  MN0CM001.CACLVL[9] = "N";
  MN0CM001.CACLVL[10] = "N";

  MN0CM001.CADELFL = "N";
  MN0CM001.CADLVL[1] = "N";
  MN0CM001.CADLVL[2] = "N";
  MN0CM001.CADLVL[3] = "N";
  MN0CM001.CADLVL[4] = "N";
  MN0CM001.CADLVL[5] = "N";
  MN0CM001.CADLVL[6] = "N";
  MN0CM001.CADLVL[7] = "N";
  MN0CM001.CADLVL[8] = "N";
  MN0CM001.CADLVL[9] = "N";
  MN0CM001.CADLVL[10] = "N";

  MN0CM001.CAINQFL = "Y";
  MN0CM001.CAILVL[1] = "N";
  MN0CM001.CAILVL[2] = "N";
  MN0CM001.CAILVL[3] = "N";
  MN0CM001.CAILVL[4] = "N";
  MN0CM001.CAILVL[5] = "N";
  MN0CM001.CAILVL[6] = "N";
  MN0CM001.CAILVL[7] = "N";
  MN0CM001.CAILVL[8] = "N";
  MN0CM001.CAILVL[9] = "N";
  MN0CM001.CAILVL[10] = "N";



end // end MN0C001

// set up commarea on screen
Function MN0C005()



   /* ************************************************************/
      /* this process is used to optain the commarea parameters.*/
      /* the screen is conversed and the user fills in the*/
      /* necessary parameters.*/
   /* ************************************************************/



  converse MN0CM001 ;



  if (converseVar.eventKey is enter)
    MN0CS10();
  else
    if (converseVar.eventKey is pf3)
      exit program;
    end
  end



end // end MN0C005

// init xcthrec, call xc0910
Function MN0CS-INIT-XCTHREC()
   /* ---------------------------------------------------------------------*/
   /* MN0MS-INIT-XCTHREC ...*/
      /* get theater of operations information & move info to COMMAREA*/

      /* get "runtype"  (which MVS CICS) info:  'test' or 'prod'*/
      /* get "location" (which MVS LPAR) info 'us' or 'europe'*/

   /* ------------------------------------------------------------*/
  set XCTHREC empty;
  call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};

  if (XCTHREC.XCTH-THEATER-RUNTYPE == "  ") /* CALL TO XC0910 FAILED*/
    COMMAREA.CAMSG = "MN0M011A  CALL TO XC0910 FAILED ... CALL HOTLINE";
    return;
  else
    COMMAREA.XCTHREC-GROUP = " ";
    COMMAREA.XCTH-THEATER-RUNTYPE = XCTHREC.XCTH-THEATER-RUNTYPE; /* RUNTYPE TO COMMAREA*/
    COMMAREA.XCTH-THEATER-LOCATION = XCTHREC.XCTH-THEATER-LOCATION; /* LOCATION TO COMMAREA*/
    COMMAREA.XCTH-THEATER-DIVISION = XCTHREC.XCTH-THEATER-DIVISION; /* LOCATION TO COMMAREA*/
    COMMAREA.XCTH-THEATER-PARMS-LEN = XCTHREC.XCTH-THEATER-PARMS-LEN; /* PARMS-LEN TO COMMAREA*/

  end


end // end MN0CS-INIT-XCTHREC

Function MN0CS10()



   /* **********************************************************/
      /* set up the commarea and try to transfer to the*/
      /* requested application.*/
   /* **********************************************************/



  move MN0CM001 to COMMAREA withV60Compat;
  COMMAREA.CASYSINT = "CSP";
  COMMAREA.CACURRAP = MN0CM001.CATOAP;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAMSG = " ";
  COMMAREA.CASECRC = 0;
  COMMAREA.CAUSERA = " ";
  COMMAREA.ZFL-LANG-CD = "EN";

  MN0CS-INIT-XCTHREC();
      /* attempt the transfer,  if the application is*/
      /* not there then you are out of luck!*/

  sysVar.transferName = MN0CM001.CATOAP;
  transfer to transaction sysVar.transferName passing COMMAREA;



end // end MN0CS10

