package mn0t;
import corpcom1.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import mn.common.*;
import ta.common.*;
//*** PROGRAM=MN0T ****
// Application Name: MN0T
// Author:           Vern Cowan, Technology Support
// Date Written:     December 1994
// Install Date:     December 1994
// 
// This application is used to validate which USERs are allowed
// to maintenance given CSP Applications per a unique CSP Goal
// Security Tran ID record that has the following format of
// sscc, where
//   ss = CSP System Prefix
//   cc = ISO Country Code (ref: XCTTBL and/or DCORP.VSCT0001)
// 
// A given USER can have one or many for the above described
// Goal Security Tran ID Records associated with their USERID.
// 
// PROGRAMMING REQUIREMENTS:
// The Calling CSP Appliation must use the following statements
// when calling CSP Application MN0T:
// 
//   SET MNTREC EMPTY;            /* Initialize MNTREC
//   MOVE (map's system prefix)
//     TO MNTREC.XXX-SYS-PFX;    /*  Initialize System Prefix
//   MOVE (map's 4-char country code)
//     TO MNTREC.XXX-SYS-PFX;    /*  Initialize Country Code
//   CALL MN0T COMMAREA,MNTREC (NOMAPS,REPLY;
// 
// 
// PASS-RECORD DEFINITION:
// MN0T will return the following information via MNTREC
//          ---- TOTAL LENGTH = 250 CHARS ----
//   2-char System Prefix from calling application
//   4-char Country Code from calling application
//   2-char ISO Country Code
//   4-Numeric Retrun Code
//     0000 - record found on GOAL Security File
//     1010 - record not found on GOAL Security File
//     1020 - system error - cannot read GOAL Security File
//     2010 - System Prefix passed is equal to spaces
//     3010 - Country Code  passed is equal to spaces
//     3020 - Country Code  not found in XCTTBL
//     4010 - 2-char ISO Country Code Blank on XCTTBL
//  78-char Return Error Message
//   4-char GOAL Secuurity Tran ID: format ppcc, where
//     pp = 2-character System Prefix
//     cc = 2-character ISO Country Code
//  11-char ADD Flag & Sub Flags for GOAL Security Tran ID
//  11-char CHG Flag & Sub Flags for GOAL Security Tran ID
//  11-char DEL Flag & Sub Flags for GOAL Security Tran ID
//  11-char INQ Flag & Sub Flags for GOAL Security Tran ID
// 112-char reserved for future use
// 
// ************************************************************
//          Maintenance Log
// 
//  DATE     USERID   DESCRIPTION OF MAINTENANCE
// 12/16/94  VCowan   Original Specs
// 12/27/94  VCowan   Chg text of "goal scty record not found"
//                    message to " user USERID  access not
//                    not authorized for country code: XXXX"
//                    per Debra White & Tammie Shively's req.
// *********************
Program MN0T type textUIProgram //VAGen Info - called text program
  (
   COMMAREA COMMAREA, // record
   MNTREC MNTREC // record
  )
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  MN0TW00 MN0TW00; // record
  MN1REC MN1REC; // record
  MN3REC MN3REC { redefines = MN1REC } ; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  //  use  MN0TM // VAGen Info - unused formGroup    {
  //    pfKeyEquate = no
  //  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    MN0T-10000: MN0T-10000();


    exit program; /* return to caller*/


  end // end main
end // end MN0T

// read grp/appl record
Function MN0T-10000()
  set MN1REC empty; /* set record empty*/
  set MN0TW00 empty; /* set record empty*/

   /* ------------------------------------------------------------------*/
   /* this process is used to read the user/appl record on goal security*/
   /* set up file key for application read*/
   /* ------------------------------------------------------------------*/

  MN3REC.MN1KEY = " "; /* clear key area*/
  MN3REC.MN1TYPE1 = "3"; /* set record type-1 value*/
  MN3REC.MN1USER = COMMAREA.CAUSERID; /* get user id value*/
  MN3REC.MN1TYPE2 = "3"; /* set recird type-2 value*/

  MN0TS-EDIT-MNTREC(); /* validate mntrec data*/

  if (MNT-RTN-CODE != 0) /* if error-code not = 0*/
    return; /* return to calling program*/
  end

  MN0TW00.XXX-SYS-PFX = MNTREC.XXX-SYS-PFX; /* system prefix*/
  MN0TW00.XCT-ISO-CTRY-CD = MNTREC.XCT-ISO-CTRY-CD; /* iso cntry code*/

  MN3REC.MN1APPL = MN0TW00.MN1APPL; /* get "appl" id*/
  MNTREC.MN1APPL = MN0TW00.MN1APPL; /* get "appl" id*/
  try
    get MN1REC ;
    onException MN0TS-P10000-ERROR() ;
  end


  if (MN1REC is noRecordFound /* not found contidion*/
   || MN1REC is ioError)      /* error reading scty file*/
    MNTREC.MNT-RTN-CODE = 1010; /* set error code*/
    MN0TW00.MN0TW-RTN-ERR-MSG-VAR1 = "MN0T1010I";
    MN0TW00.MN0TW-RTN-ERR-MSG-LIT1 = " -- USER ";
    MN0TW00.MN0TW-RTN-ERR-MSG-VAR2 = COMMAREA.CAUSERID;
    MN0TW00.MN0TW-RTN-ERR-MSG-LIT2 = "ACCESS NOT AUTHORIZED FOR COUNTRY CODE: ";
    MN0TW00.MN0TW-RTN-ERR-MSG-VAR3 = MNTREC.XCTCD;
    MN0TW00.MN0TW-RTN-ERR-MSG-LIT3 = " ";
    MNTREC.MNT-RTN-ERR-MSG = MN0TW00.MN0TW-RTN-ERR-MSG;
  else
    MNTREC.MNT-RTN-CODE = 0000; /* set error code*/
    MNTREC.MNT-RTN-ERR-MSG = " ";
    MNTREC.MN3ADD = MN3REC.MN3ADD; /* set add levels*/
    MNTREC.MN3CHG = MN3REC.MN3CHG; /* set chg levels*/
    MNTREC.MN3DEL = MN3REC.MN3DEL; /* set del levels*/
    MNTREC.MN3INQ = MN3REC.MN3INQ; /* set inq levels*/
  end


end // end MN0T-10000

// validate mntrec passed data
Function MN0TS-EDIT-MNTREC()

   /* ************************************************************/
    /* edit MNTREC to see if valid data has been passed*/
   /* ************************************************************/

  MNTREC.MNT-RTN-CODE = 0000; /* initialize mnt-rtn-code*/
  MNTREC.MNT-RTN-ERR-MSG = " "; /**/


  if (MNTREC.XXX-SYS-PFX == " ") /* if systems prefix passed is spaces*/
    MNTREC.MNT-RTN-CODE = 2010;
    MNTREC.MNT-RTN-ERR-MSG = "MN0T2010I - SYSTEM PREFIX PASSED IS EQUAL SPACES";
    return;
  end


  if (MNTREC.XCTCD == " ") /* if country code passed is spaces*/
    MNTREC.MNT-RTN-CODE = 3010;
    MNTREC.MNT-RTN-ERR-MSG = "MN0T3010I - COUNTRY CODE PASSED IS EQUAL SPACES";
    return;
  end

   /* get corresponding xct-iso-ctry-cd from xcttbl*/
  if (MNTREC.XCTCD in XCTTBL.XCTCD)
    MNTREC.XCT-ISO-CTRY-CD = XCTTBL.XCT-ISO-CTRY-CD[sysVar.arrayIndex];
  end

  if (sysVar.arrayIndex == 0) /* if value not found in table*/
    MNTREC.MNT-RTN-CODE = 3020;
    MNTREC.MNT-RTN-ERR-MSG = "MN0T3020I - COUNTRY CODE NOT FOUND IN XCTTBL";
    return;
  end


   /* check for non-blank xct-iso-ctry-cd from xcttbl*/
  if (MNTREC.XCT-ISO-CTRY-CD == " ")
    MNTREC.MNT-RTN-CODE = 4010;
    MNTREC.MNT-RTN-ERR-MSG = "MN0T4010I - ISO COUNTRY CODE IS SPACES IN XCTTBL";
    return;
  end


end // end MN0TS-EDIT-MNTREC

// MENU FILE READ ERROR
Function MN0TS-P10000-ERROR()


   /* ************************************************************/
      /* this statement group is invoked when an error*/
      /* had occured when reading the menu file*/
   /* ************************************************************/


  if (MN1REC is noRecordFound) /* not found contidion*/
    MNTREC.MNT-RTN-CODE = 1010; /* set error code*/
    MNTREC.MNT-RTN-CODE = 1010; /* set error code*/
    MN0TW00.MN0TW-RTN-ERR-MSG-VAR1 = "MN0T1010I";
    MN0TW00.MN0TW-RTN-ERR-MSG-LIT1 = " -- USER ";
    MN0TW00.MN0TW-RTN-ERR-MSG-VAR2 = COMMAREA.CAUSERID;
    MN0TW00.MN0TW-RTN-ERR-MSG-LIT2 = "ACCESS NOT AUTHORIZED FOR COUNTRY CODE: ";
    MN0TW00.MN0TW-RTN-ERR-MSG-VAR3 = MNTREC.XCTCD;
    MN0TW00.MN0TW-RTN-ERR-MSG-LIT3 = " ";
    MNTREC.MNT-RTN-ERR-MSG = MN0TW00.MN0TW-RTN-ERR-MSG;
  else
    MNTREC.MNT-RTN-CODE = 1020; /* set error code*/
    MNTREC.MNT-RTN-ERR-MSG = "MN0T1020I -- SYSTEM ERROR ON SCTY FILE, CALL HELP DESK";
  end


  /* GET MN0T-10000*/
end // end MN0TS-P10000-ERROR

//*** RECORD=MN0TW00 ****
// Pass Record for MN0T
// ***********************
Record MN0TW00 type basicRecord
  10 MN1APPL MN1APPL ; 
    15 XXX-SYS-PFX XXX-SYS-PFX ; 
    15 XCT-ISO-CTRY-CD XCT-ISO-CTRY-CD ; 
  10 MN0TW-RTN-ERR-MSG MN0TW-RTN-ERR-MSG ; 
    15 MN0TW-RTN-ERR-MSG-VAR1 MN0TW-RTN-ERR-MSG-VAR1 ; 
    15 MN0TW-RTN-ERR-MSG-LIT1 MN0TW-RTN-ERR-MSG-LIT1 ; 
    15 MN0TW-RTN-ERR-MSG-VAR2 MN0TW-RTN-ERR-MSG-VAR2 ; 
    15 MN0TW-RTN-ERR-MSG-LIT2 MN0TW-RTN-ERR-MSG-LIT2 ; 
    15 MN0TW-RTN-ERR-MSG-VAR3 MN0TW-RTN-ERR-MSG-VAR3 ; 
    15 MN0TW-RTN-ERR-MSG-LIT3 MN0TW-RTN-ERR-MSG-LIT3 ; 
end // end MN0TW00

// menu application id
DataItem MN0TW-RTN-ERR-MSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem MN0TW-RTN-ERR-MSG-LIT1 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem MN0TW-RTN-ERR-MSG-LIT2 char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem MN0TW-RTN-ERR-MSG-LIT3 char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem MN0TW-RTN-ERR-MSG-VAR1 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem MN0TW-RTN-ERR-MSG-VAR2 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem MN0TW-RTN-ERR-MSG-VAR3 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

