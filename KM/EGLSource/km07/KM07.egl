package km07;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPXLG01;
import corpcom3.XPXX001;
import corpcom3.XPYVI01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom6.SQLCA;
import corpcom7.XXXFSTNM;
import corpcom7.XXXLSTNM;
import corpcom7.XXXMDINT;
import corpcom7.XXXSSN;
import corpx1.XATCD;
import corpx1.XATTBL;
import corpx1.XAUTBL;
import corpx1.XCCTBL;
import corpx1.XCETBL;
import corpx1.XCUTBL;
import corpx1.XIETBL;
import corpx1.XLGTBL;
import corpx2.XXXPHN;
import corpx2.XXXPHNA;
import corpx2.XXXPHNN;
import corpx2.XXXPHNP;
import corpy2.YVITBL;
import kl.common.KIZTBL;
import ku.common.KU0XW10;
import ku.common.KU0XW30;
import ku.common.KUCCOID;
import ku.common.KUEREC;
import ku.common.KUHGEDT;
import ku.common.KUHGUAR;
import ku.common.KUHPRNM;
import ku.common.KUHPRTLT;
import ku.common.KUHREC;
import ku.common.KUHSEQNO;
import ku.common.KUHSGUAR;
import ku.common.KUKREC;
import ku.common.KULREC;
import ku.common.KUZREC;
import ta.common.TA1REC;
import vv.common.VCMPNY02;
import vv.common.VCTACT01;
//*** PROGRAM=KM07 ****
// ----------------  km07 - change/inquiry company ------------
// 
// overview:  this application performs change functions for
//            general credit company information
// 
// date written: 01/90
// author:       Juan Fiat
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
//  03/15/90  dsalzw  changed to allow new comment type in db
//  03/30/90  dsalzw  db changes
//  06/12/90  dsalzw  replace xcuttlcd with xcurmgr
//  07/17/90  jhemme  add security for xcccd/xcc-cr-stat-cd and
//                    increase kucasmt/cu-cr-mgr-asmt to 2 char
//  07/25/90  dsalzw  add km07520 - edit fin stmt date
//  09/10/90  dsalzw  added kiztbl for audit trail
//  10/02/90  dsalzw  db changes
//  10/15/90  dsalzw  update blgrp on cmpny
//  12/10/90  dsalzw  add po required ind on screen
//  02/04/91  dsalzw  db changes
//  03/26/91  twatso  make xiecd 2 bytes on map100 instead of 1
//  04/08/91  dsalzw  db changes
//  05/08/91  dsalzw  removed km0m from setting security
//  05/16/91  dsalzw  changed pf3 to use from appl
//  06/09/91  dsalzw  db changes
//  10/11/91  CHELLM  db changes. Dinstalled CUTAG records.
//                    Added CU-CO-SHORT-NM UPDATE LOGIC.
//  01/09/92  wjohns  allow credit assistants to have more
//                    update capabilities.
//  01/15/92  wjohns  Fix occasional duplicate comment row adds
//                    by removing conditional read on the
//                    comments file.
//  02/03/92  CHELLM  Added Set Up date to the map.
//                    Decreased the size of the Cr Comment fld
//                    to match the DB2 field length.
//  03/13/92  CHELLM  DB2 changes, Added; cr-app date, last
//                    D&B rpt date
//  03/16/92  CHELLM  Add ^GT curr-date edit to cr-app-dt &
//                    D&B rpt date.
//  04/08/92  CHELLM  Add select from dcust.vprinc01 to deter-
//                    mine add or update of rows.  this will
//                    prevent duplicate rows on the table.
//  08/31/92  CHELLM  removed loc amt required edit if dates
//                    are also zero.
//  03/17/93  CHELLM  Use DACRCV.VCTACT01 for Credit Contact
//                    name and phone.
//  04/14/93  CHELLM  Changed Coll Alert edit to values 1-6
//                    and space.
//  05/19/93  CHELLM  Added third hier. step for selecting
//                    the Credit Contact, cu-grp-co-id.
//  06/09/93  CHELLM  Added credit status codes S & T to those
//                    that can be maintained with level 1 scty.
// 29-june-1993       dlegg      Add check for numeric value
//                               before move in km07000.
// 12-JULY-1993       DLEGG      Change call to TA0020 with
//                               ABND to RETN. KM07210,240,290,
//                               295,260,270,280,422,426,610,
//                               620,625,630,635,466,468.
// 16-JULY-1993       DLEGG      Add sgrp to initialize all
//                               records used by appl.
//  10/01/93  CHELLM  CSP 4.1 Conversion.
//  02-10-94  BCourt  Fix edit on XCC table to allow for one
//               code to have both active & inactive rows.
//               See KM07527.
//  06/22/94  CHELLM  Revise XCC Code edits to allow for new
//                    'P' pending Credit Status.
//                    Change SS# edit attribute to allow lead-
//                    ing zeros.
//  11/10/94  CHELLM  Added cu-vendor-nbr as display field.
//  04/10/95  CHELLM  Added user security for Nike Canada.
//  02/07/96  kclar1  display leading zeros for ssn
//  03/07/96  kclar1  allow spaces for ssn
//  03/27/96  kclar1  added cu-inv-prt-ind as display field
//  07/11/96  kclar1  allow spaces for ssn
//  08/11/96  kclar1  allow 'r' to be entered in xcccd
//  10/23/97  kclar1  changed processing for xcccd
//  01/23/98  kclar1  changed processing for xcccd
//  01-28097  ORICHA  y2k modifications:  km07m100 - zero fill
//                    year fields; w01, 515, 520, 525, 615.
// *********************
Program KM07 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KM07W01 KM07W01; // record
  KU0XW10 KU0XW10; // record
  KU0XW30 KU0XW30; // record
  KUEREC KUEREC; // record
  KUHREC KUHREC; // record
  KUKREC KUKREC; // record
  KULREC KULREC; // record
  KUZREC KUZREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  VCMPNY02 VCMPNY02; // record
  VCTACT01 VCTACT01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KIZTBL {deleteAfterUse = yes}; // table
  use XATTBL {deleteAfterUse = yes}; // table
  use XCETBL {deleteAfterUse = yes}; // table
  use XCUTBL {deleteAfterUse = yes}; // table
  use XCCTBL {deleteAfterUse = yes}; // table
  use XLGTBL {deleteAfterUse = yes}; // table
  use XAUTBL {deleteAfterUse = yes}; // table
  use XIETBL {deleteAfterUse = yes}; // table
  use YVITBL {deleteAfterUse = yes}; // table
  use KM07M.KM07M100,  // forms
      KM07M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KM07000: KM07000();
    goto KM07100; /* converse credit maintenance screen*/
    ;
    KM07100: KM07100();
    ;
    goto KM07100; /* A/R maintenance screen*/
    ;
  end // end main
end // end KM07

// Get Credit Contact
Function KM07-240()
  ;
   /* *********************************************************/
                          /* km07-240*/
   /* Get the Credit Contact from the AR Contact table.*/
   /* *********************************************************/
  ;
      /* First try the Customer level Credit Contact.*/
      /* If a Customer level doen't exist, try the Group level*/
      /* If a Group level doesn't exist, use the Grp-Co-Id to*/
      /* get the Group Level Contact.*/
   /* **********************************************************/
  ;
   /* ---------------------------------------------------------*/
     /* Look up the Customer level Contact*/
   /* ---------------------------------------------------------*/
  ;
  set SQLCA empty;
  set VCTACT01 empty;
  VCTACT01.KUCCOID = KM07M100.KUCCOID;
  VCTACT01.XXXSTAT = "A";
  VCTACT01.AR-CTCT-PRTY-IND = "1";
  VCTACT01.KUNCGIND = "C";
  ;
  call "IO3980" ("SA", SQLCA, VCTACT01) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KM07W01.XXXLSTNM = VCTACT01.XXXLSTNM; /* last name*/
    KM07W01.XXXFSTNM = VCTACT01.XXXFSTNM; /* first name*/
    KM07W01.XXXMDINT = VCTACT01.XXXMDINT; /* middle initial*/
    KM07W01.XXXPHN = VCTACT01.XXXPHN; /* format phone number*/
    KM07W01.KM07W-PHN-AREA-CD = KM07W01.XXXPHNA; /* phone*/
    KM07W-PHN-DASH1 = "-";
    KM07W01.KM07W-PHN-PREFIX = KM07W01.XXXPHNP; /* phone*/
    KM07W-PHN-DASH2 = "-";
    KM07W01.KM07W-PHN-NUMBER = KM07W01.XXXPHNN; /* phone*/
    KM07M100.KM07M-PHONE = KM07W01.KM07W-PHONE; /* phone*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KM07M100.KM07M-PHONE = " "; /* phone*/
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DACRCV";
      TA1REC.TA1TBLVU = "VCTACT01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07-240";
      TA1REC.TA1LOC = "READING DB2 CTACT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
   /* ---------------------------------------------------------*/
     /* Look up the Group level Contact*/
   /* ---------------------------------------------------------*/
  ;
  ;
  set SQLCA empty;
  set VCTACT01 empty;
  VCTACT01.KUCCOID = KM07M100.KUCCOID;
  VCTACT01.XXXSTAT = "A";
  VCTACT01.AR-CTCT-PRTY-IND = "1";
  VCTACT01.KUNCGIND = "G";
  ;
  call "IO3980" ("SA", SQLCA, VCTACT01) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KM07W01.XXXLSTNM = VCTACT01.XXXLSTNM; /* last name*/
    KM07W01.XXXFSTNM = VCTACT01.XXXFSTNM; /* first name*/
    KM07W01.XXXMDINT = VCTACT01.XXXMDINT; /* middle initial*/
    KM07W01.XXXPHN = VCTACT01.XXXPHN; /* phone*/
    KM07W01.KM07W-PHN-AREA-CD = KM07W01.XXXPHNA; /* phone*/
    KM07W-PHN-DASH1 = "-";
    KM07W01.KM07W-PHN-PREFIX = KM07W01.XXXPHNP; /* phone*/
    KM07W-PHN-DASH2 = "-";
    KM07W01.KM07W-PHN-NUMBER = KM07W01.XXXPHNN; /* phone*/
    KM07M100.KM07M-PHONE = KM07W01.KM07W-PHONE; /* phone*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DACRCV";
      TA1REC.TA1TBLVU = "VCTACT01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07-240";
      TA1REC.TA1LOC = "READING DB2 CTACT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
   /* ---------------------------------------------------------*/
     /* Look up the Group level Contact using the Grp Co ID*/
   /* ---------------------------------------------------------*/
  ;
  ;
  set SQLCA empty;
  set VCTACT01 empty;
  VCTACT01.KUCCOID = VCMPNY02.KUCGRPID;
  VCTACT01.XXXSTAT = "A";
  VCTACT01.AR-CTCT-PRTY-IND = "1";
  VCTACT01.KUNCGIND = "G";
  ;
  call "IO3980" ("SA", SQLCA, VCTACT01) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KM07W01.XXXLSTNM = VCTACT01.XXXLSTNM; /* last name*/
    KM07W01.XXXFSTNM = VCTACT01.XXXFSTNM; /* first name*/
    KM07W01.XXXMDINT = VCTACT01.XXXMDINT; /* middle initial*/
    KM07W01.XXXPHN = VCTACT01.XXXPHN; /* phone*/
    KM07W01.KM07W-PHN-AREA-CD = KM07W01.XXXPHNA; /* phone*/
    KM07W-PHN-DASH1 = "-";
    KM07W01.KM07W-PHN-PREFIX = KM07W01.XXXPHNP; /* phone*/
    KM07W-PHN-DASH2 = "-";
    KM07W01.KM07W-PHN-NUMBER = KM07W01.XXXPHNN; /* phone*/
    KM07M100.KM07M-PHONE = KM07W01.KM07W-PHONE; /* phone*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KM07M100.KM07M-PHONE = " "; /* phone*/
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DACRCV";
      TA1REC.TA1TBLVU = "VCTACT01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07-240";
      TA1REC.TA1LOC = "READING DB2 CTACT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
   /* ********************** END OF km07-240 *********************/
end // end KM07-240

// FORMAT CREDIT CONTACT NAME
Function KM07-245()
   /* ***************************************************************/
   /* * maintenance log              ********************************/
   /* 08-09-93 bcourt abend on subscript IX2.                     **/
   /* (First name had only 1 character, & last name had all 25 cha**/
   /* Add code to check for max.                  **/
   /* ***************************************************************/
   /* FORMAT CREDIT CONTACT NAME INTO 30 CHARACTERS.*/
  ;
  if (VCTACT01.XXXFSTNM == " ")
    KM07M100.KM07M-CREDIT-CONTACT-NM = VCTACT01.XXXLSTNM;
    return;
  end
  ;
  KM07W01.KM07W-FIRST-LAST-NAME = VCTACT01.XXXFSTNM;
  KM07W01.KM07W-LAST-NAME = VCTACT01.XXXLSTNM;
  KM07W01.KM07W-IX1 = 1;
  while (KM07W01.KM07W-IX1 < 30
   && KM07W01.KM07W-FLNAME-ARRAY[KM07W-IX1] != "^")
    if (KM07W01.KM07W-FLNAME-ARRAY[KM07W-IX1] == " ")
      KM07W01.KM07W-IX1 = KM07W01.KM07W-IX1 + 1;
      if (KM07W01.KM07W-FLNAME-ARRAY[KM07W-IX1] == " ")
        KM07W01.KM07W-FLNAME-ARRAY[KM07W-IX1] = "^";
        KM07W01.KM07W-IX1 = KM07W01.KM07W-IX1 - 1;
      else
        KM07W01.KM07W-IX1 = KM07W01.KM07W-IX1 - 1;
      end
    end
    KM07W01.KM07W-IX1 = KM07W01.KM07W-IX1 + 1;
  end
  ;
  KM07W01.KM07W-IX2 = 1;
  while (KM07W01.KM07W-IX1 < 30
   && KM07W01.KM07W-IX2 < 26) /* 8/9/93 add check for max*/
    KM07W01.KM07W-FLNAME-ARRAY[KM07W-IX1] = KM07W01.KM07W-LNAME-ARRAY[KM07W-IX2];
    if (KM07W01.KM07W-FLNAME-ARRAY[KM07W-IX1] == " ")
      KM07W01.KM07W-IX2 = KM07W01.KM07W-IX2 + 1;
      if (KM07W01.KM07W-IX2 > 25 /* 8/9/93 add check for max*/
       || KM07W01.KM07W-LNAME-ARRAY[KM07W-IX2] == " ")
        KM07W01.KM07W-IX1 = KM07W01.KM07W-IX1 + 30; /* force end of loop*/
      else
        KM07W01.KM07W-IX2 = KM07W01.KM07W-IX2 - 1;
      end
    end
    KM07W01.KM07W-IX1 = KM07W01.KM07W-IX1 + 1;
    KM07W01.KM07W-IX2 = KM07W01.KM07W-IX2 + 1;
  end
  KM07M100.KM07M-CREDIT-CONTACT-NM = KM07W01.KM07W-FIRST-LAST-NAME;
end // end KM07-245

// converse pop up window
Function KM07-511()
   /* ------------------------------------------------------------*/
  ;
              /* CONVERSE POP UP WINDOW*/
  ;
      /* 1) If no errors, clear the map and set up for*/
         /* displaying the data.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey errors.*/
      /* 5) If ENTER pressed, return to the main map.*/
  ;
   /* ------------------------------------------------------------*/
  ;
  ;
  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/
    ;
     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/
    ;
    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end
    ;
    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = "     COLLECTIONS ALERT INDICATORS     ";
    XX0XM001.XX0XMTR1 = "          HIT ENTER TO RETURN         ";
    XX0XM001.XX0XMTR2 = "                                      ";
    ;
    ;
    XX0XM001.XX0XMCD[2] = "1";
    XX0XM001.XX0XMDES[2] = "PRI=1:CASH RECEIVED ";
    XX0XM001.XX0XMCD[3] = "2";
    XX0XM001.XX0XMDES[3] = "PRI=2:CASH RECVD / PAST DUE ";
    XX0XM001.XX0XMCD[4] = "3";
    XX0XM001.XX0XMDES[4] = "PRI=3:CASH RECVD OR RVW DATE";
    XX0XM001.XX0XMCD[5] = "4";
    XX0XM001.XX0XMDES[5] = "PRI=4:USED BY COLLECTIONS   ";
    XX0XM001.XX0XMCD[6] = "5";
    XX0XM001.XX0XMDES[6] = "PRI=5:REVIEW DUE    ";
    XX0XM001.XX0XMCD[7] = "6";
    XX0XM001.XX0XMDES[7] = "DONT DISPLAY PRI=H  ";
    ;
  end
  ;
  converse XX0XM001 ;
  ;
  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/
  ;
     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/
  ;
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end
  ;
    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/
  ;
  if (converseVar.eventKey is enter) /* If enter pressed*/
    XX0XW02.XX0XWEND = "Y"; /* Set end flag*/
  else
    XX0XW02.XX0XWERR = "Y"; /* set error flag*/
  end
  ;
  ;
end // end KM07-511

// init chg company processing
Function KM07000()
   /* *********************************************/
    /* initialization of variables used in the  **/
    /* processing of the CREDit company screen  **/
   /* *********************************************/
  ;
   /* TEMP001;*/
  ;
  XSENTRY();
  ;
  XSSEGTR(); /* set segmented transaction id*/
  ;
  set KM07M100 initial; /* credit maintenance screen*/
  ;
  KM07S-INIT-RECS(); /* working storage 1*/
  ;
  KM07W01.KM07WMD1 = "N"; /* init cmpny update flag*/
  KM07W01.KM07WMD2 = "N"; /* init princ update flag*/
  KM07W01.KM07WMD3 = "N"; /* init cmmnt update flag*/
  KM07W01.KM07WEFL = "N"; /* init ready to update flag*/
  KM07W01.KM07WERR = "N"; /* set error flag*/
  ;
  XX0XS01(); /* get today's date*/
  ;
   /* ****************************/
   /* check fast path entry*/
   /* ****************************/
  ;
  if (COMMAREA.CACHGFL == "Y")
    KM07W01.KM07WUPM = "Y"; /* update mode*/
    KM07401(); /* set fields for update*/
  else
    KM07W01.KM07WUPM = "N"; /* inquiry move*/
    KM07402(); /* set fields for inquiry*/
  end
  ;
  ;
  KM07W01.KM07WUSR = COMMAREA.CAUSERA; /* key from add menu*/
  if (COMMAREA.CAITEM != " ")
    KM07W01.KM07WUSR = COMMAREA.CAITEM; /* key from fastpath*/
    if (KM07W01.KM07WCNO-CHAR is numeric)
      KM07M100.KUCCOID = KM07W01.KM07WCNO;
    end
  else
    if (KM07W01.KM07WCNO-CHAR is numeric)
      KM07M100.KUCCOID = KM07W01.KM07WCNO; /* key from chg menu*/
    end
  end
  ;
  if (KM07M100.KUCCOID > 0) /* if a company is available*/
    KM07200(); /* read/format basic company screen*/
  end
  ;
end // end KM07000

// converse map
Function KM07100()
  ;
   /* *******************************************/
   /* customer credit screen process          **/
   /* 1. prepares working variables           **/
   /* 2. presents screen                      **/
   /* 3. edits special keys                   **/
   /* 4. edit screen data                     **/
                                           /* **/
   /* *******************************************/
  ;
  KM07W01.KM07WERR = "N"; /* init error flag*/
  KM07M100.KM07MDAT = VGVar.currentShortGregorianDate; /* set screen date*/
  ;
  ;
  converse KM07M100 ;
  ;
  ;
  KM07400(); /* edit pf and special keys*/
  ;
  if (KM07W01.KM07WERR == "N") /* no errors*/
    KM07500(); /* edit screen*/
  end
  ;
  if (KM07W01.KM07WERR == "N" /* no errors*/
   && KM07W01.KM07WUPM == "Y") /* update mode*/
    if (KM07W01.KM07WMD1 == "Y"
     || KM07W01.KM07WMD2 == "Y"
     || KM07W01.KM07WMD3 == "Y")
      converseLib.validationFailed(277); /* good edit*/
      KM07W01.KM07WEFL = "Y"; /* setup update flag*/
    end
  end
end // end KM07100

// read/format screen
Function KM07200()
  ;
  ;
  ;
  ;
   /* *********************************************************/
     /* read and format company screen data*/
   /* *********************************************************/
  ;
  set VCMPNY02 empty; /* clear out company record*/
  KM07W01.KM07WCID = 0; /* save current company id*/
  ;
  VCMPNY02.KUCCOID = KM07M100.KUCCOID; /* set company key*/
  ;
  KM07210(); /* read vcmpny01*/
  if (KM07W01.KM07WERR == "Y") /* not found?*/
    set KM07M100 initial;
    KM07M100.KUCCOID = VCMPNY02.KUCCOID; /* set company key*/
    set KM07M100.KUCCOID cursor, bold;
    return;
  end
  ;
  KM07220(); /* format cmpny01 to map km07m100*/
  ;
  KM07W01.KM07WCID = VCMPNY02.KUCCOID; /* save current company id*/
  ;
   /* *******************************************************/
   /* -----  read/format credit contact info       ---------*/
   /* *******************************************************/
  ;
  KM07-240(); /* get credit contact name and phone*/
  KM07-245(); /* format credit contact name*/
  ;
   /* *******************************************************/
   /* -----  read/bill to address ---------*/
   /* *******************************************************/
  ;
  set KULREC empty; /* clear out address    record*/
  ;
  ;
  KULREC.KUCCOID = VCMPNY02.KUCCOID; /* set address key*/
  KULREC.KULAAID = VCMPNY02.KUCBLAID; /* set address id*/
  KM07290(); /* READ THE ADDRESS RECORD*/
  ;
  if (KM07W01.KM07WERR == "N")
    ;
    KM07M100.XXX-ADDR1 = KULREC.XXX-ADDR1;
    KM07M100.XXX-ADDR2 = KULREC.XXX-ADDR2;
    KM07M100.XXX-ADDR3 = KULREC.XXX-ADDR3;
    KM07M100.XXXCITY = KULREC.XXXCITY;
    KM07M100.XSTCD = KULREC.XSTCD;
    KM07M100.XXXZIP = KULREC.XXXZIP;
  else
    /* next sentence*/
  end
  ;
  ;
   /* ************************************************/
   /* -----  read/fmt principals---- (credit dept)*/
   /* ************************************************/
  ;
  set KUHREC empty; /* clear out principals record*/
  KUHREC.KUCCOID = VCMPNY02.KUCCOID; /* set company key*/
  KM07W01.KM07WSUB = 1;
  ;
  while (KM07WSUB <= 3)
      /* clear screen*/
    ;
    KM07M100.KM07MPDL[KM07WSUB] = " ";
    KM07M100.XXXSSN[KM07WSUB] = " ";
    KM07M100.KUHPRNM[KM07WSUB] = " ";
    KM07M100.KUHPRTLT[KM07WSUB] = " ";
    KM07M100.KUHGUAR[KM07WSUB] = " ";
    KM07M100.KUHSGUAR[KM07WSUB] = " ";
    KM07M100.KM07MGYY[KM07WSUB] = 0;
    KM07M100.KM07MGMM[KM07WSUB] = 0;
    KM07M100.KM07MGDD[KM07WSUB] = 0;
    ;
    KM07W01.KM07W-SSN-NUM[KM07WSUB] = 0;
    KM07W01.KM07W-SSN[KM07WSUB] = " ";
    KM07W01.KUHPRNM[KM07WSUB] = " ";
    KM07W01.KUHPRTLT[KM07WSUB] = " ";
    KM07W01.KUHGUAR[KM07WSUB] = " ";
    KM07W01.KUHSGUAR[KM07WSUB] = " ";
    KM07W01.KM07WEYY[KM07WSUB] = 0;
    KM07W01.KM07WEMM[KM07WSUB] = 0;
    KM07W01.KM07WEDD[KM07WSUB] = 0;
    KM07W01.KM07WPMD[KM07WSUB] = " "; /* clear row modified flag*/
    ;
    KM07295(); /* read principals*/
    if (VAGen_SQLCODE == 100)
       /* next sentence*/
    else
      ;
      KM07M100.XXXSSN[KM07WSUB] = "000000000"; /* zero fill*/
      KM07W01.KM07W-SSN-NUM[KM07WSUB] = KUHREC.XXXSSN; /* soc. sec*/
      KM07M100.XXXSSN[KM07WSUB] = KM07W01.KM07W-SSN[KM07WSUB];
      if (KM07W01.KM07W-SSN-NUM[KM07WSUB] == 0)
        KM07M100.XXXSSN[KM07WSUB] = "         "; /* space fill*/
      end
      KM07M100.KUHPRNM[KM07WSUB] = KUHREC.KUHPRNM; /* name*/
      KM07M100.KUHPRTLT[KM07WSUB] = KUHREC.KUHPRTLT; /* title*/
      KM07M100.KUHGUAR[KM07WSUB] = KUHREC.KUHGUAR;
                                   /* guarantee flag*/
      KM07M100.KUHSGUAR[KM07WSUB] = KUHREC.KUHSGUAR; /* sp guar fl*/
      KM07W01.KM07WGDT = KUHREC.KUHGEDT; /* guarantee date*/
      KM07M100.KM07MGYY[KM07WSUB] = KM07W01.KM07WGYY;
      KM07M100.KM07MGMM[KM07WSUB] = KM07W01.KM07WGMM;
      KM07M100.KM07MGDD[KM07WSUB] = KM07W01.KM07WGDD;
      KM07W01.KM07WEYY[KM07WSUB] = KM07W01.KM07WGYY;
      KM07W01.KM07WEMM[KM07WSUB] = KM07W01.KM07WGMM;
      KM07W01.KM07WEDD[KM07WSUB] = KM07W01.KM07WGDD;
      KM07W01.KM07WSPR[KM07WSUB] = KUHREC.KUHGRP;
    end
    KM07W01.KM07WSUB = KM07W01.KM07WSUB + 1;
  end
  ;
   /* ************************************************/
   /* -----  read/fmt comment  ----- (credit dept)*/
   /* ************************************************/
  ;
  KM07M100.KUECOMNT = " "; /* clear comment*/
  KM07W01.KM07WCMT = " "; /* clear comment*/
  set KUEREC empty; /* clear out comment record*/
  ;
  KUEREC.KUECMTID = VCMPNY02.KUCCOID; /* set comment key*/
  KUEREC.KUECTYP = "C";
  ;
  KM07260(); /* select set on comments within dept*/
  KM07270(); /* select next on comments within dept*/
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    if (KUEREC.XNDCD == "CRMN") /* credit comment?*/
      SQLCA.VAGen_SQLCODE = 100;
      KM07W01.KM07WCMT = KUEREC.KUEGRP;
      KM07M100.KUECOMNT = KUEREC.KUECOMNT; /* format to screen*/
    else
      KM07270(); /* read next comment*/
    end
  end
  ;
  KM07280(); /* close set*/
  ;
  ;
  ;
  if (KM07W01.KM07WUPM == "Y") /* in update mode*/
    KM07401(); /* set fields modified*/
  else
    KM07402(); /* set fields protected*/
  end
  ;
end // end KM07200

// read company
Function KM07210()
  ;
   /* *************************************************/
   /* get company record   kucrec*/
   /* *************************************************/
  ;
  set SQLCA empty;
  ;
  call "VCMPNY02" ("S ", SQLCA, VCMPNY02) {isNoRefresh = yes, isExternal = yes}; /* read cmpny02*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KM07M100.KUCCOID initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(25); /* company not found*/
      KM07W01.KM07WERR = "Y"; /* set error message.*/
      set KM07M100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY02";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07210";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
   /* ***********************************/
   /* edit for account class code*/
   /* ***********************************/
  ;
  if (VCMPNY02.XAUCD in XAUTBL.XAUCD)
    if (XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      KM07W01.XATCD = XAUTBL.XATCD[sysVar.arrayIndex];
    else
      KM07W01.XATCD = " ";
    end
  else
    KM07W01.XATCD = " ";
  end
  ;
   /* **********************************************/
   /* edit account type for allowance of user groups*/
   /* **********************************************/
  ;
  if (KM07W01.XATCD == "08") /* edit for cole haan user*/
    if (COMMAREA.CADLVL[1] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM07W01.KM07WUPM = "N"; /* update flag = n*/
    end
  else
    if (KM07W01.XATCD == "03") /* edit for nil users*/
      if (COMMAREA.CADLVL[2] == "Y")
        /* next sentence*/
      else
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KM07W01.KM07WUPM = "N"; /* update flag = n*/
      end
    else
      if (COMMAREA.CADLVL[1] == "Y"
       || COMMAREA.CADLVL[2] == "Y")
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KM07W01.KM07WUPM = "N"; /* update flag = n*/
      end
    end
  end
                      /* Edit for Nike Canada user*/
  ;
  if (VCMPNY02.XLECD == "03") /* Edit for Nike Canada users*/
    if (COMMAREA.CADLVL[3] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM07W01.KM07WUPM = "N"; /* update flag = n*/
    end
  else
    if (COMMAREA.CADLVL[3] == "Y")
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM07W01.KM07WUPM = "N"; /* update flag = n*/
    end
  end
  ;
end // end KM07210

// load company to screen
Function KM07220()
  ;
   /* **************************/
   /* format company update*/
   /* **************************/
  ;
  KM07M100.KUCCONM = VCMPNY02.KUCCONM; /* company name*/
  KM07W01.KM07WFDT = VCMPNY02.KUCFINDT; /* fin date*/
  KM07M100.KM07MFIY = KM07W01.KM07WFIY; /* fin year*/
  KM07M100.KM07MFIM = KM07W01.KM07WFIM;
  KM07W01.KM07WEDT = VCMPNY02.KUCLCEDT;
  KM07M100.KM07MLEY = KM07W01.KM07WLEY;
  KM07M100.KM07MLEM = KM07W01.KM07WLEM;
  KM07M100.KM07MLED = KM07W01.KM07WLED;
  KM07W01.KM07WXDT = VCMPNY02.KUCLCXDT;
  KM07M100.KM07MLXY = KM07W01.KM07WLXY;
  KM07M100.KM07MLXM = KM07W01.KM07WLXM;
  KM07M100.KM07MLXD = KM07W01.KM07WLXD;
  ;
  KM07W01.KM07W-LST-DAB-RPT-DT = VCMPNY02.CU-LST-DAB-RPT-DT;
  KM07M100.KM07M-LST-DAB-RPT-MM = KM07W01.KM07W-LST-DAB-RPT-MM;
  KM07M100.KM07M-LST-DAB-RPT-YY = KM07W01.KM07W-LST-DAB-RPT-YY;
  KM07W01.KM07W-CR-APPL-DT = VCMPNY02.CU-CR-APPL-DT;
  KM07M100.KM07M-CR-APPL-MM = KM07W01.KM07W-CR-APPL-MM;
  KM07M100.KM07M-CR-APPL-YY = KM07W01.KM07W-CR-APPL-YY;
  ;
  KM07M100.XLGCD = VCMPNY02.XLGCD;
  KM07M100.XLECD = VCMPNY02.XLECD;
  KM07M100.KUCPOFL = VCMPNY02.KUCPOFL;
  KM07M100.KUCYPOAP = VCMPNY02.KUCYPOAP;
  KM07M100.KUCYPOFT = VCMPNY02.KUCYPOFT;
  KM07M100.KUCASMT = VCMPNY02.KUCASMT;
  KM07M100.XCCCD = VCMPNY02.XCCCD;
  KM07M100.XCUCD[1] = VCMPNY02.XCUCD[1];
  KM07M100.XCUCD[2] = VCMPNY02.XCUCD[2];
  KM07M100.XCECD = VCMPNY02.XCECD;
  KM07M100.KUCLCAMT = VCMPNY02.KUCLCAMT;
  KM07M100.XIECD = VCMPNY02.XIECD;
  KM07M100.YVICD[1] = VCMPNY02.YVICD[1];
  KM07M100.YVICD[2] = VCMPNY02.YVICD[2];
  KM07M100.YVICD[3] = VCMPNY02.YVICD[3];
  KM07M100.KUCCSHNF = VCMPNY02.KUCCSHNF;
  KM07M100.KUCATCSH = VCMPNY02.KUCATCSH;
  KM07M100.KUCSTMT = VCMPNY02.KUCSTMT;
  KM07M100.KUCXCSFL = VCMPNY02.KUCXCSFL;
  KM07M100.KUCALERT = VCMPNY02.KUCALERT;
  KM07M100.CU-IVC-PRT-IND = VCMPNY02.CU-IVC-PRT-IND;
  KM07M100.CU-VEND-NBR = VCMPNY02.CU-VEND-NBR;
  KM07W01.KM07WGDT = VCMPNY02.ZZZSDT;
  KM07W-SDT-YY = KM07W01.KM07WGYY;
  KM07W-SDT-MM = KM07W01.KM07WGMM;
  KM07W-SDT-SLASH = "/";
  KM07M-SET-UP-DATE = KM07W01.KM07W-SET-UP-DATE;
  ;
end // end KM07220

// open cursor comment
Function KM07260()
  ;
   /* ***********************************************/
   /* open cursor for comments*/
   /* ***********************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0250" ("SS", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM07W01.KM07WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM07W01.KM07WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
    TA1REC.TA1PGMNM = "KM07260";
    TA1REC.TA1LOC = "SS ON VCOMNT01   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM07260

// read comment
Function KM07270()
  ;
   /* ******************************/
   /* getnext comment*/
   /* ******************************/
  ;
  set SQLCA empty;
  ;
  call "IO0250" ("SN", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM07W01.KM07WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM07W01.KM07WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
    TA1REC.TA1PGMNM = "KM07270";
    TA1REC.TA1LOC = "SN ON VCOMNT01   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM07270

// close cursor comment
Function KM07280()
  ;
   /* ***************************************/
   /* close cursor*/
   /* ***************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0250" ("CS", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM07W01.KM07WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM07W01.KM07WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
    TA1REC.TA1PGMNM = "KM07280";
    TA1REC.TA1LOC = "CS ON VCOMNT01   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM07280

// read address record
Function KM07290()
  ;
  ;
   /* **********************************************/
   /* -----  read/fmt address record ------*/
   /* **********************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0170" ("S ", SQLCA, KULREC) {isNoRefresh = yes, isExternal = yes}; /* read vaddr001*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KM07M100.XXX-ADDR1 initialAttributes;
    set KM07M100.XXX-ADDR2 initialAttributes;
    set KM07M100.XXX-ADDR3 initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(340); /* address record not found*/
      KM07W01.KM07WERR = "Y"; /* set error message*/
      set KM07M100.XXX-ADDR1 cursor, bold;
      set KM07M100.XXX-ADDR2 cursor, bold;
      set KM07M100.XXX-ADDR3 cursor, bold;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VADDR001";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07290";
      TA1REC.TA1LOC = "READING DB2 VADDR001";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07290

// load principals
Function KM07295()
  ;
  ;
  ;
  ;
     /* read principal*/
  ;
  KUHREC.KUHSEQNO = KM07W01.KM07WSUB;
  call "IO0320" ("S ", SQLCA, KUHREC) {isNoRefresh = yes, isExternal = yes}; /* read principal*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VPRINC01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = KUHREC.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07295";
      TA1REC.TA1LOC = "READING PRINC01 SEQ";
      KM07W01.KM07WKEY = KUHREC.KUHSEQNO;
      TA1REC.TA1LOCAT[4] = KM07W01.KM07WKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07295

// process pf keys
Function KM07400()
  ;
   /* ************************************************/
     /* edit all special entry keys                **/
   /* ************************************************/
  ;
   /* *************************************************************/
  ;
    /* Maintenance History:*/
    /* 10-11-91 CHELLM Dinstalled CUTAG record creation (KUXREC).*/
  ;
  ;
   /* *************************************************************/
  ;
  ;
   /* **************************************/
   /* edit pa2 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pa2)
    KM07200(); /* refresh the screen*/
    KM07W01.KM07WERR = "Y"; /* set error flagto display screen*/
    KM07W01.KM07WMD1 = "N";
    KM07W01.KM07WMD2 = "N";
    KM07W01.KM07WMD3 = "N";
    KM07W01.KM07WEFL = "N";
    return;
  end
  ;
   /* **************************************/
   /* edit enter  key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is enter)
    if (KM07M100.CATOAP > " ") /* fast path*/
      COMMAREA.CATOAP = KM07M100.CATOAP;
      if (KM07M100.CAITEM == " ")
        COMMAREA.CAUSERA = KM07M100.KUCCOID;
      else
        COMMAREA.CAITEM = KM07M100.CAITEM;
      end
      COMMAREA.CAFROMAP = "KM07";
      XSEXIT();
      KM07M100.VAGen_EZEMSG = COMMAREA.CAMSG;
      KM07W01.KM07WERR = "Y";
      set KM07M100.CATOAP cursor, bold;
    else
      set KM07M100.CATOAP initialAttributes;
    end
    return;
  else
    if (KM07M100.CATOAP > " ")
      KM07W01.KM07WERR = "Y";
      converseLib.validationFailed(90); /* can not fast path and use pf keys*/
      set KM07M100.CATOAP cursor, bold;
      return;
    else
      set KM07M100.CATOAP modified;
    end
  end
  ;
  ;
   /* **************************************/
   /* edit pf2 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf2) /* update/inquiry tagle*/
    if (KM07W01.KM07WUPM == "N") /* in inquiry mode*/
      if (COMMAREA.CACHGFL == "Y") /* allow to maintenance*/
        KM07W01.KM07WUPM = "Y"; /* change to update mode*/
        KM07401(); /* set fields for update*/
        KM07200(); /* refresh screen*/
        KM07W01.KM07WERR = "Y"; /* display screen*/
        KM07W01.KM07WMD1 = "N";
        KM07W01.KM07WMD2 = "N";
        KM07W01.KM07WMD3 = "N";
        KM07W01.KM07WEFL = "N";
        return;
      else
        converseLib.validationFailed(330);
        KM07W01.KM07WERR = "Y"; /* display screen*/
        return;
      end
    else
      KM07W01.KM07WUPM = "N"; /* change to inquiry mode*/
      KM07402(); /* set fields for inquiry*/
      KM07200(); /* refresh screen*/
      KM07W01.KM07WERR = "Y"; /* display screen*/
      KM07W01.KM07WMD1 = "N";
      KM07W01.KM07WMD2 = "N";
      KM07W01.KM07WMD3 = "N";
      KM07W01.KM07WEFL = "N";
      return;
    end
  end
  ;
   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf3) /* back to company update*/
    COMMAREA.CAUSERA = KM07M100.KUCCOID;
    COMMAREA.CAITEM = " ";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CAFROMAP = "KM07";
    XSEXIT();
    KM07M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM07W01.KM07WERR = "Y";
    return;
  end
  ;
   /* **************************************/
   /* edit pf4 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf4) /* back to goal menu*/
    COMMAREA.CAFROMAP = "KM07";
    XSPF4();
    KM07M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM07W01.KM07WERR = "Y";
    return;
  end
  ;
  ;
   /* **************************************/
   /* edit pf12 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf12 /* update key*/
   && KM07W01.KM07WEFL == "Y"      /* all edits ok*/
   && KM07W01.KM07WERR == "N")     /* no errors*/
    ;
    KM07500(); /* edit screen*/
    ;
    if (KM07W01.KM07WMD1 == "Y" /* if company data updated*/
     && KM07W01.KM07WERR == "N") /* no errors*/
      KM07420(); /* process kucrec update*/
    end
    ;
    if (KM07W01.KM07WMD2 == "Y" /* if principals data updated*/
     && KM07W01.KM07WERR == "N") /* no errors*/
      KM07440(); /* process kulrec update*/
    end
    ;
    if (KM07W01.KM07WMD3 == "Y" /* if comments data updated*/
     && KM07W01.KM07WERR == "N") /* no errors*/
      KM07460(); /* process kuerec update*/
    end
    ;
    if (KM07W01.KM07WERR == "N") /* no errors*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
    end
    ;
    if (KM07W01.KM07WERR == "N") /* no errors*/
      converseLib.validationFailed(279); /* all updates ok*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      KM07W01.KM07WEFL = "N"; /* updates ok set =n*/
      KM07W01.KM07WMD1 = "N"; /* reset cmpny update*/
      KM07W01.KM07WMD2 = "N"; /* reset princ update*/
      KM07W01.KM07WMD3 = "N"; /* reset cmtn  update*/
    else
      KM07W01.KM07WEFL = "N"; /* reset update ok flag*/
    end
    ;
  end
  ;
  if (converseVar.eventKey is pf12 /* update key*/
   && KM07W01.KM07WEFL == "N"      /* edits not ok*/
   && KM07W01.KM07WERR == "N")     /* error flag*/
    KM07W01.KM07WERR = "Y"; /* error flag*/
    converseLib.validationFailed(280); /* can pf12 without pressing enter*/
  end
  ;
  if (KM07W01.KM07WERR == "N")
    converseLib.validationFailed(281); /* invalid pf key message*/
    KM07W01.KM07WERR = "Y";
  end
  ;
  ;
  ;
end // end KM07400

// set fields for update
Function KM07401()
  ;
  ;
  ;
   /* *****************************/
   /* set fields for update*/
   /* *****************************/
  ;
  KM07M100.KM07MTTL = "UPDATE ";
  set KM07M100.KM07MTTL initialAttributes;
  ;
  set KM07M100.KUCCOID cursor, initialAttributes;
  ;
  set KM07M100.KUCCONM initialAttributes; /* company name*/
  set KM07M100.KM07M-PHONE initialAttributes; /* phone number*/
  set KM07M100.KM07M-CREDIT-CONTACT-NM initialAttributes; /* contact*/
  set KM07M100.KM07MFIY initialAttributes;
  set KM07M100.KM07MFIM initialAttributes;
  set KM07M100.XLGCD initialAttributes; /* legal organization code*/
  set KM07M100.KUCASMT initialAttributes; /* cr mgr assessment*/
  set KM07M100.XCCCD initialAttributes; /* cr status code*/
  set KM07M100.KM07MLEY initialAttributes;
  set KM07M100.KM07MLEM initialAttributes;
  set KM07M100.KM07MLED initialAttributes;
  set KM07M100.KM07MLXY initialAttributes;
  set KM07M100.KM07MLXM initialAttributes;
  set KM07M100.KM07MLXD initialAttributes;
  set KM07M100.KUCLCAMT initialAttributes; /* letter of credit amount*/
  set KM07M100.KM07M-LST-DAB-RPT-MM initialAttributes;
  set KM07M100.KM07M-LST-DAB-RPT-YY initialAttributes;
  set KM07M100.KM07M-CR-APPL-MM initialAttributes;
  set KM07M100.KM07M-CR-APPL-YY initialAttributes;
  set KM07M100.XIECD initialAttributes; /* internal/external flag*/
  set KM07M100.YVICD[1] initialAttributes; /* notice code 1*/
  set KM07M100.YVICD[2] initialAttributes; /* notice code 2*/
  set KM07M100.YVICD[3] initialAttributes; /* notice code 3*/
  set KM07M100.KUCCSHNF initialAttributes; /* cash notify flag*/
  set KM07M100.KUCATCSH initialAttributes; /* autocash flag*/
  set KM07M100.KUCSTMT initialAttributes; /* statement notify indic*/
  set KM07M100.KUCXCSFL initialAttributes; /* excess discount*/
  set KM07M100.KUCALERT initialAttributes; /* collections alert code*/
  set KM07M100.CU-IVC-PRT-IND initialAttributes; /* invoice print indicator*/
  ;
  ;
   /* ******************************/
   /* comment*/
   /* ******************************/
  ;
  set KM07M100.KUECOMNT initialAttributes;
  ;
   /* ******************************/
   /* principal information*/
   /* ******************************/
  ;
  KM07W01.KM07WSUB = 1;
  ;
  while (KM07W01.KM07WSUB <= 3)
    ;
    set KM07M100.XXXSSN[KM07WSUB] initialAttributes;
    set KM07M100.KUHPRNM[KM07WSUB] initialAttributes;
    set KM07M100.KUHPRTLT[KM07WSUB] initialAttributes;
    set KM07M100.KUHGUAR[KM07WSUB] initialAttributes;
    set KM07M100.KM07MGMM[KM07WSUB] initialAttributes;
    set KM07M100.KM07MGDD[KM07WSUB] initialAttributes;
    set KM07M100.KM07MGYY[KM07WSUB] initialAttributes;
    set KM07M100.KUHSGUAR[KM07WSUB] initialAttributes;
    set KM07M100.KM07MPDL[KM07WSUB] initialAttributes;
    KM07W01.KM07WSUB = KM07W01.KM07WSUB + 1;
  end
  ;
end // end KM07401

// set fields to inquiry
Function KM07402()
  ;
  ;
   /* *****************************/
   /* set fields for inquiry*/
   /* *****************************/
  ;
  KM07M100.KM07MTTL = "INQUIRY";
  set KM07M100.KM07MTTL skip;
  ;
  set KM07M100.KUCCOID cursor, initialAttributes;
  ;
  set KM07M100.KUCCONM skip; /* company name*/
  set KM07M100.KM07M-PHONE skip; /* phone number*/
  set KM07M100.KM07M-CREDIT-CONTACT-NM skip; /* contact*/
  set KM07M100.KM07MFIY skip;
  set KM07M100.KM07MFIM skip;
  set KM07M100.XLGCD skip; /* legal organization code*/
  set KM07M100.KUCASMT skip; /* cr mgr assessment*/
  set KM07M100.XCCCD skip; /* cr status code*/
  set KM07M100.KM07MLEY skip;
  set KM07M100.KM07MLEM skip;
  set KM07M100.KM07MLED skip;
  set KM07M100.KM07MLXY skip;
  set KM07M100.KM07MLXM skip;
  set KM07M100.KM07MLXD skip;
  set KM07M100.KUCLCAMT skip; /* letter of credit amount*/
  set KM07M100.KM07M-LST-DAB-RPT-MM skip;
  set KM07M100.KM07M-LST-DAB-RPT-YY skip;
  set KM07M100.KM07M-CR-APPL-MM skip;
  set KM07M100.KM07M-CR-APPL-YY skip;
  set KM07M100.XIECD skip; /* internal/external flag*/
  set KM07M100.YVICD[1] skip; /* notice code 1*/
  set KM07M100.YVICD[2] skip; /* notice code 2*/
  set KM07M100.YVICD[3] skip; /* notice code 3*/
  set KM07M100.KUCCSHNF skip; /* cash notify flag*/
  set KM07M100.KUCATCSH skip; /* autocash flag*/
  set KM07M100.KUCSTMT skip; /* statement notify indic*/
  set KM07M100.KUCXCSFL skip; /* excess discount*/
  set KM07M100.KUCALERT skip; /* collections alert code*/
  set KM07M100.CU-IVC-PRT-IND skip; /* invoice print indicator*/
  ;
  ;
   /* ******************************/
   /* comment*/
   /* ******************************/
  ;
  set KM07M100.KUECOMNT skip;
  ;
   /* ******************************/
   /* principal information*/
   /* ******************************/
  ;
  KM07W01.KM07WSUB = 1;
  ;
  while (KM07W01.KM07WSUB <= 3)
    ;
    set KM07M100.XXXSSN[KM07WSUB] skip;
    set KM07M100.KUHPRNM[KM07WSUB] skip;
    set KM07M100.KUHPRTLT[KM07WSUB] skip;
    set KM07M100.KUHGUAR[KM07WSUB] skip;
    set KM07M100.KM07MGMM[KM07WSUB] skip;
    set KM07M100.KM07MGDD[KM07WSUB] skip;
    set KM07M100.KM07MGYY[KM07WSUB] skip;
    set KM07M100.KUHSGUAR[KM07WSUB] skip;
    set KM07M100.KM07MPDL[KM07WSUB] skip;
    KM07W01.KM07WSUB = KM07W01.KM07WSUB + 1;
  end
  ;
  ;
end // end KM07402

// process company update
Function KM07420()
  ;
   /* *************************************************/
   /* update company and create audit trail*/
   /* *************************************************/
  ;
   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();
  ;
  ;
   /* ****************************/
   /* prepare before look audit*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = VCMPNY02.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCMPNY02.VCMPNY02-GROUP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
    KUZREC.XXXTBLNM = "VCMPNY01"; /* changed to 02 for added*/
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM07   ";
    TA1REC.TA1LOCAT[1] = "KM07420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM07M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
  KM07422(); /* add audit before image for cmpny01*/
  ;
  KM07424(); /* format cmpny general data update*/
  ;
  KM07426(); /* update company*/
  ;
   /* ****************************/
   /* format after look audit*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = VCMPNY02.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = VCMPNY02.VCMPNY02-GROUP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
    KUZREC.XXXTBLNM = "VCMPNY01"; /* *//*reset to contain add fields*/
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM07   ";
    TA1REC.TA1LOCAT[1] = "KM07420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM07M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
  KM07422(); /* write audit trail after image*/
  ;
  ;
  ;
end // end KM07420

// insert audit before
Function KM07422()
  ;
   /* **********************/
    /* add before image*/
   /* **********************/
  ;
  set SQLCA empty;
  ;
  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KM07422";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM07422

// format company
Function KM07424()
  ;
   /* **************************/
   /* format company update*/
   /* **************************/
  ;
  if (KM07M100.KM07MFIY > 70)
    KM07W01.KM07WFIC = 19;
  else
    KM07W01.KM07WFIC = 20;
  end
  KM07W01.KM07WFID = 00;
  KM07W01.KM07WFIY = KM07M100.KM07MFIY;
  KM07W01.KM07WFIM = KM07M100.KM07MFIM;
  VCMPNY02.KUCFINDT = KM07W01.KM07WFDT;
                                   /* finance. stmt issue date*/
  VCMPNY02.XLGCD = KM07M100.XLGCD;
                                   /* legal organization code*/
  VCMPNY02.KUCASMT = KM07M100.KUCASMT; /* cr mgr assessment*/
  VCMPNY02.XCCCD = KM07M100.XCCCD; /* cr status code*/
  VCMPNY02.XCUCD[1] = KM07M100.XCUCD[1]; /* credit service rep*/
  VCMPNY02.XCUCD[2] = KM07M100.XCUCD[2]; /* credit collect rep*/
  VCMPNY02.XCECD = KM07M100.XCECD; /* credit analyst rep*/
  if (KM07M100.KM07MLEY > 70)
    KM07W01.KM07WLEC = 19;
  else
    KM07W01.KM07WLEC = 20;
  end
  KM07W01.KM07WLEY = KM07M100.KM07MLEY;
  KM07W01.KM07WLEM = KM07M100.KM07MLEM;
  KM07W01.KM07WLED = KM07M100.KM07MLED;
  VCMPNY02.KUCLCEDT = KM07W01.KM07WEDT;
                                   /* letter/credit entry date*/
  if (KM07M100.KM07MLXY > 70)
    KM07W01.KM07WLXC = 19;
  else
    KM07W01.KM07WLXC = 20;
  end
  KM07W01.KM07WLXY = KM07M100.KM07MLXY;
  KM07W01.KM07WLXM = KM07M100.KM07MLXM;
  KM07W01.KM07WLXD = KM07M100.KM07MLXD;
  VCMPNY02.KUCLCXDT = KM07W01.KM07WXDT;
                                   /* last D&B report date*/
  if (KM07M100.KM07M-LST-DAB-RPT-YY > 70)
    KM07W01.KM07W-LST-DAB-RPT-CC = 19;
  else
    KM07W01.KM07W-LST-DAB-RPT-CC = 20;
  end
  KM07W01.KM07W-LST-DAB-RPT-YY = KM07M100.KM07M-LST-DAB-RPT-YY;
  KM07W01.KM07W-LST-DAB-RPT-MM = KM07M100.KM07M-LST-DAB-RPT-MM;
  KM07W01.KM07W-LST-DAB-RPT-DD = 00;
  VCMPNY02.CU-LST-DAB-RPT-DT = KM07W01.KM07W-LST-DAB-RPT-DT;
                                   /* Credit Application date*/
  if (KM07M100.KM07M-CR-APPL-YY > 70)
    KM07W01.KM07W-CR-APPL-CC = 19;
  else
    KM07W01.KM07W-CR-APPL-CC = 20;
  end
  KM07W01.KM07W-CR-APPL-YY = KM07M100.KM07M-CR-APPL-YY;
  KM07W01.KM07W-CR-APPL-MM = KM07M100.KM07M-CR-APPL-MM;
  KM07W01.KM07W-CR-APPL-DD = 00;
  VCMPNY02.CU-CR-APPL-DT = KM07W01.KM07W-CR-APPL-DT;
                                   /* letter/credit exp. date*/
  VCMPNY02.KUCLCAMT = KM07M100.KUCLCAMT;
                                   /* letter of credit amount*/
  VCMPNY02.XIECD = KM07M100.XIECD;
                                   /* internal/external flag*/
  VCMPNY02.YVICD[1] = KM07M100.YVICD[1]; /* notice code 1*/
  VCMPNY02.YVICD[2] = KM07M100.YVICD[2]; /* notice code 2*/
  VCMPNY02.YVICD[3] = KM07M100.YVICD[3]; /* notice code 3*/
  VCMPNY02.KUCCSHNF = KM07M100.KUCCSHNF; /* cash notify flag*/
  VCMPNY02.KUCATCSH = KM07M100.KUCATCSH; /* autocash flag*/
  VCMPNY02.KUCSTMT = KM07M100.KUCSTMT; /* statement notify indic*/
  VCMPNY02.KUCXCSFL = KM07M100.KUCXCSFL; /* excess discount*/
  VCMPNY02.KUCALERT = KM07M100.KUCALERT; /* alert flag*/
  VCMPNY02.CU-IVC-PRT-IND = KM07M100.CU-IVC-PRT-IND; /* simplex or duplex print*/
  ;
  ;
  ;
  if (KM07M100.KUECOMNT > " ")
    VCMPNY02.KUCCOMNT = "Y"; /* comment indicator*/
  end
  ;
  ;
  VCMPNY02.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
  VCMPNY02.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/
  ;
  ;
  ;
end // end KM07424

// update company
Function KM07426()
  ;
   /* **************************/
   /* update company*/
   /* **************************/
  ;
  set SQLCA empty;
  ;
  call "VCMPNY02" ("U ", SQLCA, VCMPNY02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(31); /* cmpny upt since last request msg*/
      KM07W01.KM07WERR = "Y"; /* set error msg*/
      KM07200(); /* refresh the screen*/
      return;
    else
      KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM07W01.KM07WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY02";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07426";
      TA1REC.TA1LOC = "UPDATE DB2 DCUST.VCMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07426

// process principal update
Function KM07440()
  ;
  XX0XS01(); /* get time stamp*/
  ;
  ;
   /* *****************************************/
   /* process pricipal updates*/
   /* *****************************************/
  ;
  KM07W01.KM07WSUB = 1;
  while (KM07WSUB <= 3)
    ;
    KM07295(); /* determine if add or  update*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0 /* row already exists*/
     && KM07W01.KM07WPMD[KM07WSUB] != " ") /* principal(n) row modified?*/
      ;
      KM07610(); /* fmt/write principal before audit*/
      ;
      if (KM07M100.KM07MPDL[KM07WSUB] == " ") /* update?*/
        KM07615(); /* fmt km07m100 to principal*/
        KM07620(); /* update principal/check if interim*/
                                   /* update*/
        KM07625(); /* fmt/write principal after audit*/
      else
        KM07630(); /* delete principal/check if interim*/
                                   /* update*/
      end
      ;
    else
      /* ----    add new principals  ------------*/
      ;
      if (SQLCA.VAGen_SQLCODE == 100 /* new row record doesn't already exist*/
       && KM07W01.KM07WPMD[KM07WSUB] > " ")
                                   /* principal(n) row modified?*/
        KM07615(); /* fmt km07m100 to principal*/
        KM07635(); /* add principal*/
        KM07625(); /* fmt/write principal after audit*/
      end
      ;
    end
    KM07W01.KM07WSUB = KM07W01.KM07WSUB + 1;
  end
  ;
  ;
  ;
end // end KM07440

// process comment update
Function KM07460()
  ;
   /* *******************************************/
   /* process comment maintenance*/
   /* *******************************************/
   /* **********format the date to update the "zz" family ****/
  XX0XS01();
  ;
  ;
  if (KM07W01.KM07WCMT == " ") /* if it is a new comment*/
    set KUEREC empty; /* empty out the comment record*/
    KUEREC.KUECMTID = KM07M100.KUCCOID;
  else /* ; if it is an old comment*/
    KUEREC.KUEGRP = KM07W01.KM07WCMT; /* before image*/
  end
  ;
   /* *******************************/
   /* insert before comment audit*/
   /* *******************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCOMNT01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUEREC.KUECMTID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUEREC.KUEGRP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM07   ";
    TA1REC.TA1LOCAT[1] = "KM07460  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOMNT01 ";
    TA1REC.TA1MAP = "KM07M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  KM07422(); /* insert before image of comment*/
  ;
  KM07464(); /* format comment record*/
  ;
  if (KM07W01.KM07WCMT == " ") /* if it is a new comment*/
    KM07466(); /* insert comment*/
  else
    KM07468(); /* update comment*/
  end
  ;
   /* ************************************/
   /* format audit trail record (after)*/
   /* ************************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C";
  KUZREC.KUZBFCD = "A"; /* change/after*/
  KUZREC.XXXTBLNM = "VCOMNT01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUEREC.KUECMTID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUEREC.KUEGRP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM07   ";
    TA1REC.TA1LOCAT[1] = "KM07460  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOMNT01 ";
    TA1REC.TA1MAP = "KM07M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  KM07422(); /* insert after image of comment*/
  ;
  ;
  ;
end // end KM07460

// prepare comment record
Function KM07464()
  ;
   /* **************************************/
   /* prepare comment record*/
   /* **************************************/
  ;
  KUEREC.KUECMTID = KM07M100.KUCCOID; /* comment id*/
  KUEREC.KUECTYP = "C";
  KUEREC.KUECSEQ = 1;
  KUEREC.XNDCD = "CRMN"; /* internal dept.*/
  KUEREC.KUECOMNT = KM07M100.KUECOMNT; /* comment*/
  ;
  KUEREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp add date*/
  KUEREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/
  ;
  ;
  ;
end // end KM07464

// inser comment
Function KM07466()
  ;
   /* ********************************************/
   /* insert comment record*/
   /* ********************************************/
  ;
  set SQLCA empty;
  ;
  KM07W01.KM07WCMT = KUEREC.KUEGRP;
  ;
  call "IO0250" ("A ", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM07W01.KM07WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM07W01.KM07WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
    TA1REC.TA1PGMNM = "KM07466";
    TA1REC.TA1LOC = "ADD VCOMNT01 DEPT-";
    TA1REC.TA1LOCAT[4] = KUEREC.XNDCD;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM07466

// update comment
Function KM07468()
  ;
   /* **********************/
    /* update comment*/
   /* **********************/
  ;
  set SQLCA empty;
  ;
  call "IO0250" ("U ", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* different change count?*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(32); /* comment upt since last ref. msg*/
      KM07W01.KM07WERR = "Y"; /* set error msg*/
      KM07200(); /* refresh the screen*/
      return;
    else
      KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM07W01.KM07WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCOMNT01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = KUEREC.KUECMTID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07468";
      TA1REC.TA1LOC = "UPDATE VCOMNT01 DEPT-";
      TA1REC.TA1LOCAT[4] = KUEREC.XNDCD;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07468

// edit fields in the screen
Function KM07500()
  ;
  ;
  ;
   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/
  ;
   /* note: edits are performed in reverse sequence of field*/
         /* appearance.  edit criteria are found in stmt grps.*/
   /* ***********************************************************/
  ;
  set KM07M100.KUCCOID initialAttributes;
  if (KM07M100.KUCCOID == KM07W01.KM07WCID
   && KM07M100.KUCCOID != 0)
    /* next sentence*/
  else
    KM07200(); /* refresh screen*/
    KM07W01.KM07WERR = "Y"; /* set error flag*/
    KM07W01.KM07WEFL = "N"; /* set update flag*/
    KM07W01.KM07WMD1 = "N"; /* set update flag*/
    KM07W01.KM07WMD2 = "N"; /* set update flag*/
    KM07W01.KM07WMD3 = "N"; /* set update flag*/
    return;
  end
  ;
  if (KM07W01.KM07WUPM == "Y") /* if in update mode*/
    KM07401(); /* set fields defined*/
  else
    return;
  end
  ;
   /* **********************/
   /* show pop-up windows*/
   /* **********************/
  ;
  KM07510(); /* show pop-up windows*/
  ;
   /* *******************************************************/
      /* edit principals                  ----------------*/
   /* *******************************************************/
  ;
  KM07W01.KM07WSUB = 1; /* init subscript*/
  while (KM07WSUB <= 3)
    KM07515(); /* edit principals*/
    KM07W01.KM07WSUB = KM07W01.KM07WSUB + 1;
  end
  ;
   /* ******************************************************/
   /* edits: financial dates                              **/
   /* km07mfim  km07mfiy                                 **/
   /* km07m-lst-dab-rpt-mm km07m-lst-dab-rpt-yy          **/
                                                      /* **/
  KM07520();
  ;
   /* ******************************************************/
   /* edits: letter of credit dates                       **/
   /* km07mlem  km07mled  km07mley  kuclcamt             **/
   /* km07mlxm  km07mlxd  km07mlxy                       **/
   /* km07m-cr-appl-mm    km07m-cr-appl-yy               **/
                                                      /* **/
  KM07525();
  ;
   /* ******************************************************/
  ;
   /* ******************************************************/
   /* edits: screen lines 13 thru 20                      **/
   /* kucstmt            yvicd(1)    yvicd(2)    yvicd(3)**/
                      /* kucatcsh    kuccshnf kucasmt    **/
   /* xiecd              kucalert    xcrcd               **/
   /* kucuphn                                            **/
                                                      /* **/
  KM07528();
  ;
   /* ******************************************************/
  ;
   /* *******************************************************/
      /* edit comment                     ----------------*/
   /* *******************************************************/
  ;
  if (KM07M100.KUECOMNT != KUEREC.KUECOMNT) /* comment field check*/
    KM07W01.KM07WMD3 = "Y"; /* comnt data modified*/
    if (VCMPNY02.KUCCOMNT != "Y")
      KM07W01.KM07WMD1 = "Y"; /* cmpny comment flag changes*/
    end
  end
   /* ******************************************************/
   /* edits: credit representatives                       **/
   /* xcucd(1)  xcucd(2) xcucd(3)                        **/
                                                      /* **/
  KM07530();
  ;
   /* ******************************************************/
  ;
  ;
  ;
end // end KM07500

// check pop-up windows
Function KM07510()
  ;
  ;
   /* ***********************************/
    /* legal organization table*/
   /* ***********************************/
  ;
  if (KM07M100.XLGCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXLG01();
    end
    set KM07M100.XLGCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM07M100.XLGCD = XLGTBL.XLGCD[XX0XWPIX];
    end
  end
  ;
   /* ***********************************/
    /* remit indicators*/
   /* ***********************************/
  ;
  if (KM07M100.YVICD[1] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYVI01();
    end
    set KM07M100.YVICD[1] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM07M100.YVICD[1] = YVITBL.YVICD[XX0XWPIX];
    end
  end
  ;
  if (KM07M100.YVICD[2] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYVI01();
    end
    set KM07M100.YVICD[2] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM07M100.YVICD[2] = YVITBL.YVICD[XX0XWPIX];
    end
  end
  ;
  if (KM07M100.YVICD[3] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYVI01();
    end
    set KM07M100.YVICD[3] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM07M100.YVICD[3] = YVITBL.YVICD[XX0XWPIX];
    end
  end
  ;
   /* *******************************************************/
        /* Collections Alert Indicator*/
   /* *******************************************************/
  if (KM07M100.KUCALERT == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      KM07-511();
    end
    set KM07M100.KUCALERT cursor;
  end
  ;
  ;
  converseLib.clearScreen();
  
end // end KM07510

// edit principals
Function KM07515()
  ;
   /* *******************************************************/
   /* if any principals data on row modified, set princ01*/
   /* modified flag, edit data.*/
   /* *******************************************************/
  ;
  if ((KM07M100.XXXSSN[KM07WSUB] == KM07W01.KM07W-SSN[KM07WSUB]
   || KM07M100.XXXSSN[KM07WSUB] == " ")
   && KM07M100.KUHPRNM[KM07WSUB] == KM07W01.KUHPRNM[KM07WSUB]
   && KM07M100.KUHPRTLT[KM07WSUB] == KM07W01.KUHPRTLT[KM07WSUB]
   && KM07M100.KUHGUAR[KM07WSUB] == KM07W01.KUHGUAR[KM07WSUB]
   && KM07M100.KUHSGUAR[KM07WSUB] == KM07W01.KUHSGUAR[KM07WSUB]
   && KM07M100.KM07MGYY[KM07WSUB] == KM07W01.KM07WEYY[KM07WSUB]
   && KM07M100.KM07MGMM[KM07WSUB] == KM07W01.KM07WEMM[KM07WSUB]
   && KM07M100.KM07MGDD[KM07WSUB] == KM07W01.KM07WEDD[KM07WSUB]
   && KM07M100.KM07MPDL[KM07WSUB] == " ")
    return;
  else
    KM07W01.KM07WIND = "Y"; /* principal was updated*/
  end
  ;
   /* *****************************************/
    /* check spouses guarantee code*/
   /* *****************************************/
  ;
  if (KM07M100.KUHSGUAR[KM07WSUB] != KM07W01.KUHSGUAR[KM07WSUB])
    if (KM07M100.KUHSGUAR[KM07WSUB] != "Y"
     && KM07M100.KUHSGUAR[KM07WSUB] != "N")
      set KM07M100.KUHSGUAR[KM07WSUB] cursor, modified, bold;
      converseLib.validationFailed(331); /* spouses flag must be 'y' ,'n'*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      KM07W01.KM07WIND = " "; /* update principal*/
    end
  end
  ;
   /* *****************************************/
    /* check guarantee date*/
   /* *****************************************/
  ;
  if (KM07M100.KM07MGYY[KM07WSUB] != KM07W01.KM07WEYY[KM07WSUB]
   || KM07M100.KM07MGMM[KM07WSUB] != KM07W01.KM07WEMM[KM07WSUB]
   || KM07M100.KM07MGDD[KM07WSUB] != KM07W01.KM07WEDD[KM07WSUB])
    if (KM07M100.KM07MGMM[KM07WSUB] > 0 /* any date field entered?*/
     || KM07M100.KM07MGDD[KM07WSUB] > 0 
     || KM07M100.KM07MGYY[KM07WSUB] > 0)
      ;
      KM07M100.KUHGUAR[KM07WSUB] = "Y"; /* if date present, set guar*/
      set KM07M100.KUHGUAR[KM07WSUB] initialAttributes; /* code to 'y'*/
      ;
   /* ---------- y2k out begin ----------*/
     /* IF KM07M100.KM07MGYY(KM07WSUB) GT 0;/* check year*/
       /* ;/* next sentence*/
     /* ELSE;*/
       /* SET KM07M100.KM07MGYY(KM07WSUB) CURSOR,MODIFIED,BRIGHT;*/
       /* MOVE 332 TO EZEMNO;        /* guag year required*/
       /* MOVE 'Y' TO KM07W01.KM07WERR;/* set error flag*/
       /* MOVE ' ' TO KM07W01.KM07WIND;/* update principal*/
     /* END;*/
   /* ---------- y2k out end ------------*/
      if (KM07M100.KM07MGDD[KM07WSUB] >= 1 /* check day*/
       && KM07M100.KM07MGDD[KM07WSUB] <= 31)
        /* next sentence*/
      else
        set KM07M100.KM07MGDD[KM07WSUB] cursor, modified, bold;
        converseLib.validationFailed(333); /* day out of range*/
        KM07W01.KM07WERR = "Y"; /* work indicator*/
        KM07W01.KM07WIND = " "; /* update principal*/
      end
      if (KM07M100.KM07MGMM[KM07WSUB] >= 1 /* check month*/
       && KM07M100.KM07MGMM[KM07WSUB] <= 12)
        /* next sentence*/
      else
        set KM07M100.KM07MGMM[KM07WSUB] cursor, modified, bold;
        converseLib.validationFailed(334); /* month out of range*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        KM07W01.KM07WIND = " "; /* update principal*/
      end
      ;
    else
      KM07M100.KUHGUAR[KM07WSUB] = "N";
    end
  end
  ;
   /* **************************************/
    /* check guarantee code*/
   /* **************************************/
  ;
  if (KM07M100.KUHGUAR[KM07WSUB] != KM07W01.KUHGUAR[KM07WSUB])
    if (KM07M100.KUHGUAR[KM07WSUB] != "Y"
     && KM07M100.KUHGUAR[KM07WSUB] != "N")
      set KM07M100.KUHGUAR[KM07WSUB] cursor, modified, bold;
      converseLib.validationFailed(335); /* guarantee flag  MUST BE Y OR N'*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      KM07W01.KM07WIND = " "; /* update principal*/
    end
  end
  ;
   /* ********************************************************/
    /* title and name must be present if other data present*/
   /* ********************************************************/
  ;
  if (KM07M100.XXXSSN[KM07WSUB] > " "
   || KM07M100.KUHPRNM[KM07WSUB] > " "
   || KM07M100.KUHPRTLT[KM07WSUB] > " "
   || KM07M100.KUHGUAR[KM07WSUB] > " "
   || KM07M100.KUHSGUAR[KM07WSUB] > " "
   || KM07M100.KM07MGYY[KM07WSUB] > 0
   || KM07M100.KM07MGMM[KM07WSUB] > 0
   || KM07M100.KM07MGDD[KM07WSUB] > 0)
    if (KM07M100.KUHPRTLT[KM07WSUB] == " ") /* title present?*/
      set KM07M100.KUHPRTLT[KM07WSUB] cursor, modified, bold;
      converseLib.validationFailed(336); /* title is required*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      KM07W01.KM07WIND = " "; /* update principal*/
    end
    if (KM07M100.KUHPRNM[KM07WSUB] == " ") /* name present?*/
      set KM07M100.KUHPRNM[KM07WSUB] cursor, modified, bold;
      converseLib.validationFailed(337); /* name required*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      KM07W01.KM07WIND = " "; /* update principal*/
    end
  end
  ;
   /* ***************************************/
    /* soc sec number must be 9 digits*/
   /* ***************************************/
  ;
  if (KM07M100.XXXSSN[KM07WSUB] > "01000000"
   && KM07M100.XXXSSN[KM07WSUB] is numeric || 
  KM07M100.XXXSSN[KM07WSUB] == " ")
    KM07W01.KM07W-SSN[KM07WSUB] = KM07M100.XXXSSN[KM07WSUB];
  else
    set KM07M100.XXXSSN[KM07WSUB] cursor, modified, bold;
    converseLib.validationFailed(338); /* invalid social security*/
    KM07W01.KM07WERR = "Y"; /* set error flag*/
    KM07W01.KM07WIND = " "; /* update principal*/
  end
  ;
   /* *******************************************/
   /* check delete code - 'd' or ' '*/
   /* *******************************************/
  ;
  if (KM07M100.KM07MPDL[KM07WSUB] == " "
   || KM07M100.KM07MPDL[KM07WSUB] == "D")
    set KM07M100.KM07MPDL[KM07WSUB] initialAttributes;
  else
    set KM07M100.KM07MPDL[KM07WSUB] cursor, modified, bold;
    converseLib.validationFailed(339); /* must be 'd' or BLANK*/
    KM07W01.KM07WERR = "Y"; /* set error flag*/
    KM07W01.KM07WIND = " "; /* update principal*/
  end
  ;
   /* **************************************************/
   /* check delete code - must be principal to delete*/
   /* **************************************************/
  ;
  if (KM07M100.KM07MPDL[KM07WSUB] == "D")
    if (KM07W01.KUHPRNM[KM07WSUB] != " ")
      set KM07M100.KM07MPDL[KM07WSUB] initialAttributes;
    else
      set KM07M100.KM07MPDL[KM07WSUB] cursor, modified, bold;
      converseLib.validationFailed(341); /* nothing to be deleted*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      KM07W01.KM07WIND = " "; /* update principal*/
    end
  end
  ;
  if (KM07W01.KM07WIND == "Y")
    KM07W01.KM07WMD2 = "Y"; /* update principal*/
    KM07W01.KM07WPMD[KM07WSUB] = "Y";
  end
end // end KM07515

// edit financial dates
Function KM07520()
  ;
   /* ***********************************************/
   /* financial stmt*/
    /* range check month/year*/
    /* stmt date must be less than call date*/
   /* ***********************************************/
  ;
  ;
  if (KM07M100.KM07MFIM != KM07W01.KM07WFIM
   || KM07M100.KM07MFIY != KM07W01.KM07WFIY)
    KM07W01.KM07WMD1 = "Y"; /* cmpny01 modified flag*/
    set KM07M100.KM07MFIY initialAttributes;
    set KM07M100.KM07MFIM initialAttributes;
    if (KM07M100.KM07MFIM > 0)
      if (KM07M100.KM07MFIM >= 1
       && KM07M100.KM07MFIM <= 12)
        /* next sentence*/
        /* ---------- y2k out begin --------*/
        /* IF KM07M100.KM07MFIY GT 0;*/
         /* ;/* next sentence*/
        /* ELSE;*/
         /* MOVE 297 TO EZEMNO;      /* financial issue year invalid*/
         /* MOVE 'Y' TO KM07W01.KM07WERR;/* set error flag*/
         /* SET KM07M100.KM07MFIY CURSOR,MODIFIED,BRIGHT;*/
        /* END;*/
        /* ---------- y2k out begin --------*/
      else
        set KM07M100.KM07MFIM cursor, modified, bold;
        converseLib.validationFailed(298); /* financial issue month invalid*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
      end
    else
      /* -------- y2k out begin ------*/
      /* IF KM07M100.KM07MFIY GT 0;*/
      /* -------- y2k out end --------*/
      /* -------- y2k in begin -------*/
      if (KM07M100.KM07MFIM != KM07W01.KM07WFIM
      ) /* -------- y2k in  end --------*/
        converseLib.validationFailed(298); /* financial issue month invalid*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KM07MFIM cursor, modified, bold;
      end
    end
  end
  ;
  ;
   /* *********************************************/
    /* Last D&B Report Date*/
   /* *********************************************/
  ;
  ;
  if (KM07M100.KM07M-LST-DAB-RPT-YY != KM07W01.KM07W-LST-DAB-RPT-YY
   || KM07M100.KM07M-LST-DAB-RPT-MM != KM07W01.KM07W-LST-DAB-RPT-MM)
    KM07W01.KM07WMD1 = "Y"; /* cmpny01 modified flag*/
    ;
    /* ---------- y2k out begin ----------*/
    /* IF KM07M100.KM07M-LST-DAB-RPT-YY GT 0*/
     /* AND KM07M100.KM07M-LST-DAB-RPT-YY LE XX0XW01.XX0XWYY*/
     /* AND KM07M100.KM07M-LST-DAB-RPT-YY GT 60;*/
    /* ---------- y2k out end ------------*/
    /* ---------- y2k in  begin ----------*/
    KM07W01.KM07W-DT-MYY = KM07M100.KM07M-LST-DAB-RPT-YY;
    if (KM07W01.KM07W-DT-MYY > 65)
      KM07W01.KM07W-DT-MCC = 19;
    else
      KM07W01.KM07W-DT-MCC = 20;
    end
    KM07W01.KM07W-DT-XCC = XX0XW01.XX0XW19;
    KM07W01.KM07W-DT-XYY = XX0XW01.XX0XWYY;
    if (KM07W01.KM07W-DT-MCCYY <= KM07W01.KM07W-DT-XCCYY)
      /* ---------- y2k in  end ------------*/
      set KM07M100.KM07M-LST-DAB-RPT-YY initialAttributes;
    else
      converseLib.validationFailed(429);
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.KM07M-LST-DAB-RPT-YY cursor, modified, bold;
    end
    ;
    if (KM07M100.KM07M-LST-DAB-RPT-MM > 0
     && KM07M100.KM07M-LST-DAB-RPT-MM <= 12)
      if (KM07M100.KM07M-LST-DAB-RPT-YY == XX0XW01.XX0XWYY
       && KM07M100.KM07M-LST-DAB-RPT-MM > XX0XW01.XX0XWMM)
        converseLib.validationFailed(428); /* d&d month not 1-12*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KM07M-LST-DAB-RPT-MM cursor, modified, bold;
      else
        set KM07M100.KM07M-LST-DAB-RPT-MM initialAttributes;
      end
    else
      converseLib.validationFailed(428); /* d&d month not 1-12*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.KM07M-LST-DAB-RPT-MM cursor, modified, bold;
    end
    ;
  end
  ;
  ;
  ;
end // end KM07520

// edits loc dates
Function KM07525()
  ;
   /* ************************************************************/
   /* edit letter of credit*/
   /* ************************************************************/
  ;
  set KM07M100.KM07MLEM initialAttributes;
  set KM07M100.KM07MLED initialAttributes;
  set KM07M100.KM07MLEY initialAttributes;
  set KM07M100.KM07MLXM initialAttributes;
  set KM07M100.KM07MLXD initialAttributes;
  set KM07M100.KM07MLXY initialAttributes;
  set KM07M100.KUCLCAMT initialAttributes;
  set KM07M-CR-APPL-MM initialAttributes;
  set KM07M-CR-APPL-YY initialAttributes;
  ;
  if (KM07M100.KM07MLEM != KM07W01.KM07WLEM
   || KM07M100.KM07MLED != KM07W01.KM07WLED
   || KM07M100.KM07MLEY != KM07W01.KM07WLEY
   || KM07M100.KM07MLXM != KM07W01.KM07WLXM
   || KM07M100.KM07MLXD != KM07W01.KM07WLXD
   || KM07M100.KM07MLXY != KM07W01.KM07WLXY
   || KM07M100.KUCLCAMT != VCMPNY02.KUCLCAMT
   || KM07M-CR-APPL-MM != KM07W-CR-APPL-MM
   || KM07M-CR-APPL-YY != KM07W-CR-APPL-YY)
    KM07W01.KM07WMD1 = "Y"; /* cmpny01 modified flag*/
  else
    return; /* no change/no edit*/
  end
  ;
   /* *********************************************/
    /* Credit Application Date*/
   /* *********************************************/
  ;
  ;
  if (KM07M100.KM07M-CR-APPL-YY != KM07W01.KM07W-CR-APPL-YY
   || KM07M100.KM07M-CR-APPL-MM != KM07W01.KM07W-CR-APPL-MM)
    ;
    /* ---------- y2k out begin ---------*/
    /* IF KM07M100.KM07M-CR-APPL-YY GT 0*/
     /* AND KM07M100.KM07M-CR-APPL-YY LE XX0XW01.XX0XWYY*/
     /* AND KM07M100.KM07M-CR-APPL-YY GT 60;*/
    /* ---------- y2k out begin ---------*/
    /* ---------- y2k in  begin ---------*/
    KM07W01.KM07W-DT-MYY = KM07M100.KM07M-CR-APPL-YY;
    if (KM07W01.KM07W-DT-MYY > 65)
      KM07W01.KM07W-DT-MCC = 19;
    else
      KM07W01.KM07W-DT-MCC = 20;
    end
    KM07W01.KM07W-DT-XCC = XX0XW01.XX0XW19;
    KM07W01.KM07W-DT-XYY = XX0XW01.XX0XWYY;
    if (KM07W01.KM07W-DT-MCCYY <= KM07W01.KM07W-DT-XCCYY)
      /* ---------- y2k in  end -----------*/
      set KM07M100.KM07M-CR-APPL-YY initialAttributes;
    else
      converseLib.validationFailed(427);
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.KM07M-CR-APPL-YY cursor, modified, bold;
    end
    ;
    if (KM07M100.KM07M-CR-APPL-MM > 0
     && KM07M100.KM07M-CR-APPL-MM <= 12)
      if (KM07M100.KM07M-CR-APPL-YY == XX0XW01.XX0XWYY
       && KM07M100.KM07M-CR-APPL-MM > XX0XW01.XX0XWMM)
        converseLib.validationFailed(426); /* d&d month not 1-12*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KM07M-CR-APPL-MM cursor, modified, bold;
      else
        set KM07M100.KM07M-CR-APPL-MM initialAttributes;
      end
    else
      converseLib.validationFailed(426); /* d&d month not 1-12*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.KM07M-CR-APPL-MM cursor, modified, bold;
    end
    ;
  end
  ;
   /* *********************************************/
    /* check if all letter of credit fields zeroed.*/
    /* (fields not required unless one  ne km07w01.km07w present)*/
   /* *********************************************/
  ;
  if (KM07M100.KM07MLEM > 0
   || KM07M100.KM07MLED > 0
   || KM07M100.KM07MLEY > 0
   || KM07M100.KM07MLXM > 0
   || KM07M100.KM07MLXD > 0
   || KM07M100.KM07MLXY > 0
   || KM07M100.KUCLCAMT > 0)
    /* next sentence*/
  else
    return; /* all zeros - no edit required*/
  end
  ;
   /* *********************************************/
    /* expiration date - range check month/day/year*/
   /* *********************************************/
  ;
   /* --------- y2k out begin --------*/
   /* IF KM07M100.KM07MLXY NE KM07W01.KM07WLXY;*/
   /* IF KM07M100.KM07MLXY GT 0;*/
     /* SET KM07M100.KM07MLXY DEFINED;*/
   /* ELSE;*/
     /* SET KM07M100.KM07MLXY CURSOR,MODIFIED,BRIGHT;*/
     /* MOVE 308 TO EZEMNO;          /* letter of credit year is required*/
     /* MOVE 'Y' TO KM07W01.KM07WERR;/* set error flag*/
   /* END;*/
   /* END;*/
   /* --------- y2k out end ----------*/
   /* --------- y2k in begin ---------*/
  set KM07M100.KM07MLXY initialAttributes;
   /* --------- y2k in  end ----------*/
  ;
  if (KM07M100.KM07MLXD != KM07W01.KM07WLXD)
    if (KM07M100.KM07MLXD >= 1
     && KM07M100.KM07MLXD <= 31)
      set KM07M100.KM07MLXD initialAttributes;
    else
      set KM07M100.KM07MLXD cursor, modified, bold;
      converseLib.validationFailed(309); /* letter of credit day is out ofrange*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
    end
  end
  ;
  if (KM07M100.KM07MLXM != KM07W01.KM07WLXM)
    if (KM07M100.KM07MLXM >= 1
     && KM07M100.KM07MLXM <= 12)
      set KM07M100.KM07MLXM initialAttributes;
    else
      set KM07M100.KM07MLXM cursor, modified, bold;
      converseLib.validationFailed(310);
                                   /* letter of credit month is out ofrange*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
    end
  end
  ;
  ;
   /* *********************************************/
    /* entry date - range check month/day/year*/
    /* must be less than exp date*/
   /* *********************************************/
  ;
  if (KM07M100.KM07MLEY != KM07W01.KM07WLEY
   || KM07M100.KM07MLEM != KM07W01.KM07WLEM
   || KM07M100.KM07MLED != KM07W01.KM07WLED)
    set KM07M100.KM07MLEY initialAttributes;
    set KM07M100.KM07MLEM initialAttributes;
    set KM07M100.KM07MLED initialAttributes;
    /* ------ y2k out begin -------*/
    /* IF KM07M100.KM07MLEY GT KM07M100.KM07MLXY;*/
    /* ------ y2k out begin -------*/
    /* ------ y2k in begin---------*/
    KM07W01.KM07W-DT-XYY = KM07M100.KM07MLEY;
    if (KM07W01.KM07W-DT-XYY > 65)
      KM07W01.KM07W-DT-XCC = 19;
    else
      KM07W01.KM07W-DT-XCC = 20;
    end
    KM07W01.KM07W-DT-MYY = KM07M100.KM07MLXY;
    if (KM07W01.KM07W-DT-MYY > 65)
      KM07W01.KM07W-DT-MCC = 19;
    else
      KM07W01.KM07W-DT-MCC = 20;
    end
    if (KM07W01.KM07W-DT-XCCYY > KM07W01.KM07W-DT-MCCYY)
      /* ------ y2k in end ----------*/
      set KM07M100.KM07MLXY modified, bold; /* exp date*/
      set KM07M100.KM07MLXD modified, bold;
      set KM07M100.KM07MLXM modified, bold;
      set KM07M100.KM07MLEY modified, bold; /* entry date*/
      set KM07M100.KM07MLED modified, bold;
      set KM07M100.KM07MLEM cursor, modified, bold;
      converseLib.validationFailed(311); /* l.o.c. eff date must be < exp date*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
    else
      if (KM07M100.KM07MLEY == KM07M100.KM07MLXY
       && KM07M100.KM07MLEM > KM07M100.KM07MLXM)
        set KM07M100.KM07MLXY modified, bold; /* exp date*/
        set KM07M100.KM07MLXD modified, bold;
        set KM07M100.KM07MLXM modified, bold;
        set KM07M100.KM07MLEY modified, bold; /* entry date*/
        set KM07M100.KM07MLED modified, bold;
        set KM07M100.KM07MLEM cursor, modified, bold;
        converseLib.validationFailed(311); /* l.o.c. eff date must be < exp date*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
      else
        if (KM07M100.KM07MLEY == KM07M100.KM07MLXY
         && KM07M100.KM07MLEM >= KM07M100.KM07MLXM
         && KM07M100.KM07MLED >= KM07M100.KM07MLXD)
          set KM07M100.KM07MLXY modified, bold; /* exp date*/
          set KM07M100.KM07MLXD modified, bold;
          set KM07M100.KM07MLXM modified, bold;
          set KM07M100.KM07MLEY modified, bold; /* entry date*/
          set KM07M100.KM07MLEM cursor, modified, bold;
          set KM07M100.KM07MLED modified, bold;
          converseLib.validationFailed(311); /* l.o.c. eff date must be < exp date*/
          KM07W01.KM07WERR = "Y"; /* set error flag*/
        end
      end
    end
  end
  ;
   /* ---------- y2k out begin -----------*/
   /* IF KM07M100.KM07MLEY NE KM07W01.KM07WLEY;*/
    /* IF KM07M100.KM07MLEY GT 0;*/
      /* ;/* next sentence*/
    /* ELSE;*/
      /* SET KM07M100.KM07MLEY CURSOR,MODIFIED,BRIGHT;*/
      /* MOVE 308 TO EZEMNO;          /* letter of credit year is required*/
      /* MOVE 'Y' TO KM07W01.KM07WERR;/* set error flag*/
    /* END;*/
   /* END;*/
   /* ---------- y2k out end -------------*/
  ;
  if (KM07M100.KM07MLED != KM07W01.KM07WLED)
    if (KM07M100.KM07MLED >= 1
     && KM07M100.KM07MLED <= 31)
      /* next sentence*/
    else
      set KM07M100.KM07MLED cursor, modified, bold;
      converseLib.validationFailed(309); /* letter of credit day is out of range*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
    end
  end
  ;
  if (KM07M100.KM07MLEM != KM07W01.KM07WLEM)
    if (KM07M100.KM07MLEM >= 1
     && KM07M100.KM07MLEM <= 12)
      /* next sentence*/
    else
      set KM07M100.KM07MLEM cursor, modified, bold;
      converseLib.validationFailed(310);
                                   /* letter of credit month is out ofrange*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
    end
  end
  ;
   /* *********************************************/
    /* amount - must gt 0*/
   /* *********************************************/
  ;
  if (KM07M100.KUCLCAMT != VCMPNY02.KUCLCAMT)
    if (KM07M100.KUCLCAMT > 0)
      set KM07M100.KUCLCAMT initialAttributes;
    else
      set KM07M100.KUCLCAMT cursor, modified, bold;
      converseLib.validationFailed(312); /* letter of credit amount is required*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
    end
  end
  ;
  ;
  ;
end // end KM07525

// edits all flags and codes
Function KM07528()
  ;
   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/
   /* ***********************************************************/
   /* ** maintenance log:                                      **/
   /* ***********************************************************/
   /* 10/23/97  KClark  changed processing for xcccd           **/
   /* ***********************************************************/
   /* 08/11/96  KClark  allow 'r' in xcccd                     **/
   /* ***********************************************************/
   /* 04/15/96  KClark  added cu-ivc-prt-ind edit              **/
   /* ***********************************************************/
   /* 02/10/94  BCourt  Revise 'xcc' edit to allow for one code**/
   /* having 'A'ctive and 'I'nactive statuses.     **/
   /* Use only active value.                       **/
   /* Copy OP0CS-check-credit.                     **/
   /* ***********************************************************/
  ;
   /* first set of flags codes and indicators*/
   /* ***********************************************************/
   /* **********************************************/
   /* *****     check if company changes        ****/
   /* **********************************************/
  ;
  if (KM07M100.XIECD != VCMPNY02.XIECD
   || KM07M100.YVICD[1] != VCMPNY02.YVICD[1]
   || KM07M100.YVICD[2] != VCMPNY02.YVICD[2]
   || KM07M100.YVICD[3] != VCMPNY02.YVICD[3]
   || KM07M100.KUCATCSH != VCMPNY02.KUCATCSH
   || KM07M100.KUCXCSFL != VCMPNY02.KUCXCSFL
   || KM07M100.KUCCSHNF != VCMPNY02.KUCCSHNF
   || KM07M100.KUCALERT != VCMPNY02.KUCALERT
   || KM07M100.KUCSTMT != VCMPNY02.KUCSTMT
   || KM07M100.KUCASMT != VCMPNY02.KUCASMT
   || KM07M100.XLGCD != VCMPNY02.XLGCD
   || KM07M100.XCCCD != VCMPNY02.XCCCD
   || KM07M100.CU-IVC-PRT-IND != VCMPNY02.CU-IVC-PRT-IND)
    KM07W01.KM07WMD1 = "Y"; /* cmpny01 modified*/
  end
  ;
  ;
  if (KM07W01.KM07WMD1 == "Y")
    /* NEXT SENTENCE*/
  else
    return;
  end
  ;
  ;
   /* **********************************************/
   /* *****     edit internal/external flag   ******/
   /* **********************************************/
  ;
  if (KM07M100.XIECD != VCMPNY02.XIECD)
    if (KM07M100.XIECD == " ")
      KM07M100.XIECD = "E "; /* external*/
    end
    ;
    if (VCMPNY02.KUCCOLCD == "Y")
      KM07M100.XIECD = "I"; /* internal*/
    end
    ;
    if (KM07M100.XIECD in XIETBL.XIECD)
      if (XIETBL.XXXSTAT[sysVar.arrayIndex] != "A")
        converseLib.validationFailed(71);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.XIECD cursor, bold;
      else
        set KM07M100.XIECD initialAttributes;
      end
    else
      converseLib.validationFailed(17);
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.XIECD cursor, modified, bold;
    end
  end
  ;
   /* *****************************************/
    /* check excess discount flag*/
   /* *****************************************/
  ;
  if (KM07M100.KUCXCSFL != VCMPNY02.KUCXCSFL)
    if (KM07M100.KUCXCSFL != " ")
      if (KM07M100.KUCXCSFL == "Y"
       || KM07M100.KUCXCSFL == "N")
        set KM07M100.KUCXCSFL initialAttributes;
      else
        converseLib.validationFailed(20);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KUCXCSFL cursor, modified, bold;
      end
    else
      KM07M100.KUCXCSFL = "N";
      set KM07M100.KUCXCSFL initialAttributes;
    end
  end
  ;
   /* *****************************************/
    /* edit notification codes tc400*/
   /* *****************************************/
  ;
  if (KM07M100.YVICD[2] != VCMPNY02.YVICD[2])
    if (KM07M100.YVICD[2] == " ")
      set KM07M100.YVICD[2] initialAttributes;
    else
      if (KM07M100.YVICD[2] in YVITBL.YVICD)
        if (YVITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM07M100.YVICD[2] initialAttributes;
        else
          converseLib.validationFailed(71);
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.YVICD[2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.YVICD[2] cursor, modified, bold;
      end
    end
  end
  ;
   /* *************************************/
    /* managers assessment must be 01-30 if present*/
   /* *************************************/
  ;
  if (KM07M100.KUCASMT != VCMPNY02.KUCASMT)
    set KM07M100.KUCASMT initialAttributes;
    if (KM07M100.KUCASMT > 0)
      if (KM07M100.KUCASMT >= 1
       && KM07M100.KUCASMT <= 30)
        /* next sentence*/
      else
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        converseLib.validationFailed(291); /* managers asmt not 01-30*/
        set KM07M100.KUCASMT cursor, modified, bold;
      end
    end
  end
  ;
   /* *****************************************/
    /* check alert collection flag*/
   /* *****************************************/
  ;
  if (KM07M100.KUCALERT != VCMPNY02.KUCALERT)
    if (KM07M100.KUCALERT != " ")
      if (KM07M100.KUCALERT == "1"
       || KM07M100.KUCALERT == "2"
       || KM07M100.KUCALERT == "3"
       || KM07M100.KUCALERT == "4"
       || KM07M100.KUCALERT == "5"
       || KM07M100.KUCALERT == "6")
        set KM07M100.KUCALERT initialAttributes;
      else
        converseLib.validationFailed(292);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KUCALERT cursor, modified, bold;
      end
    else
      set KM07M100.KUCALERT initialAttributes;
    end
  end
  ;
   /* *****************************************/
    /* edit notification codes tc430*/
   /* *****************************************/
  ;
  if (KM07M100.YVICD[1] != VCMPNY02.YVICD[1])
    if (KM07M100.YVICD[1] == " ")
      set KM07M100.YVICD[1] initialAttributes;
    else
      if (KM07M100.YVICD[1] in YVITBL.YVICD)
        if (YVITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM07M100.YVICD[1] initialAttributes;
        else
          converseLib.validationFailed(71);
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.YVICD[1] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.YVICD[1] cursor, modified, bold;
      end
    end
  end
  ;
   /* *****************************************/
    /* check cash notify flag*/
   /* *****************************************/
  ;
  if (KM07M100.KUCCSHNF != VCMPNY02.KUCCSHNF)
    if (KM07M100.KUCCSHNF != " ")
      if (KM07M100.KUCCSHNF == "Y"
       || KM07M100.KUCCSHNF == "N")
        set KM07M100.KUCCSHNF initialAttributes;
      else
        converseLib.validationFailed(20);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KUCCSHNF cursor, modified, bold;
      end
    else
      KM07M100.KUCCSHNF = "N";
      set KM07M100.KUCCSHNF initialAttributes;
    end
  end
  ;
   /* ***************************/
   /* legal organization*/
   /* ***************************/
  ;
    /* check legal organization type - req, valid tbl entry*/
  if (KM07M100.XLGCD != VCMPNY02.XLGCD)
    if (KM07M100.XLGCD != " ")
      ;
      if (KM07M100.XLGCD in XLGTBL.XLGCD)
        ;
        if (XLGTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM07M100.XLGCD initialAttributes;
        else
          converseLib.validationFailed(304); /* legal org code is inactive*/
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.XLGCD cursor, modified, bold;
        end
        ;
      else
        converseLib.validationFailed(305); /* legal org code is invalid*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.XLGCD cursor, modified, bold;
      end
      ;
    else
      converseLib.validationFailed(306); /* legal org code is required*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.XLGCD cursor, modified, bold;
    end
  end
  ;
   /* *****************************************/
    /* check auto cash flag*/
   /* *****************************************/
  ;
  if (KM07M100.KUCATCSH != VCMPNY02.KUCATCSH)
    if (KM07M100.KUCATCSH != " ")
      if (KM07M100.KUCATCSH == "Y"
       || KM07M100.KUCATCSH == "N")
        set KM07M100.KUCATCSH initialAttributes;
      else
        converseLib.validationFailed(20);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KUCATCSH cursor, modified, bold;
      end
    else
      KM07M100.KUCATCSH = "N";
      set KM07M100.KUCATCSH initialAttributes;
    end
  end
  ;
   /* *****************************************/
    /* edit notification codes tc330*/
   /* *****************************************/
  ;
  if (KM07M100.YVICD[3] != VCMPNY02.YVICD[3])
    if (KM07M100.YVICD[3] == " ")
      set KM07M100.YVICD[3] initialAttributes;
    else
      if (KM07M100.YVICD[3] in YVITBL.YVICD)
        if (YVITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM07M100.YVICD[3] initialAttributes;
        else
          converseLib.validationFailed(71);
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.YVICD[3] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.YVICD[3] cursor, modified, bold;
      end
    end
  end
  ;
   /* *****************************************/
    /* check send statement indicator*/
   /* *****************************************/
  ;
  if (KM07M100.KUCSTMT != VCMPNY02.KUCSTMT)
    if (KM07M100.KUCSTMT != " ")
      if (KM07M100.KUCSTMT == "1"
       || KM07M100.KUCSTMT == "2"
       || KM07M100.KUCSTMT == "3"
       || KM07M100.KUCSTMT == "4"
       || KM07M100.KUCSTMT == "5")
        set KM07M100.KUCSTMT initialAttributes;
      else
        converseLib.validationFailed(320);
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.KUCSTMT cursor, modified, bold;
      end
    else
      KM07M100.KUCSTMT = "1";
      set KM07M100.KUCSTMT initialAttributes;
    end
  end
  ;
   /* ************************************************************/
   /* check credit status*/
   /* ************************************************************/
  ;
  if (KM07M100.XCCCD == VCMPNY02.XCCCD)
  /* next sentence*/
  else
    KM07529();
  end
  ;
  if (KM07M100.CU-IVC-PRT-IND != VCMPNY02.CU-IVC-PRT-IND)
    if (KM07M100.CU-IVC-PRT-IND == "1"
     || KM07M100.CU-IVC-PRT-IND == "2")
      set KM07M100.CU-IVC-PRT-IND initialAttributes;
    else
      converseLib.validationFailed(467);
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.CU-IVC-PRT-IND cursor, modified, bold;
    end
  end
  ;
  ;
end // end KM07528

// edits all flags and codes
Function KM07529()
  ;
   /* ***********************************************************/
   /* ------- edit fields from xcc code           ------*/
   /* ***********************************************************/
   /* originally cloned from km07527 ****/
   /* ** maintenance log:                                      **/
   /* ***********************************************************/
   /* 01/22/98  KClark  edit xcc-cd  only                    **/
   /* ***********************************************************/
   /* 08/11/96  KClark  allow 'r' in xcccd                     **/
   /* ***********************************************************/
   /* 02/10/94  BCourt  Revise 'xcc' edit to allow for one code**/
   /* having 'A'ctive and 'I'nactive statuses.     **/
   /* Use only active value.                       **/
   /* Copy OP0CS-check-credit.                     **/
   /* ************************************************************/
  ;
   /* ************************************************************/
   /* check for blanks in credit status*/
   /* ************************************************************/
  if (KM07M100.XCCCD == " ")
    converseLib.validationFailed(301); /* credit status code is required*/
    KM07W01.KM07WERR = "Y"; /* set error flag*/
    set KM07M100.XCCCD cursor, modified, bold;
    return;
  end
   /* *************************************************************/
   /* check security for update*/
   /* **************************************************************/
  if (KM07M100.XCCCD != VCMPNY02.XCCCD && 
  COMMAREA.CACHGFL == "N")
    converseLib.validationFailed(240); /* security violation on xcccd;*/
    KM07W01.KM07WERR = "Y"; /* set error flag;*/
    set KM07M100.XCCCD cursor, modified, bold;
    return;
  end
  ;
  KM07W01.KM07W2CH = KM07M100.XCCCD;
  ;
        /* GET OP0CS-CHECK-CREDIT... 2/10/94 copy to replace 'if-in' code*/
  sysVar.arrayIndex = 1; /* Reset Subscript*/
  ;
  while (sysVar.arrayIndex < 99
   && XCCTBL.XCCCD[sysVar.arrayIndex] != "99") /* until end of XCCTBL*/
    if (XCCTBL.XCCCD[sysVar.arrayIndex] == KM07W01.KM07W2CH /* xcc code found*/
     && XCCTBL.XXXSTAT[sysVar.arrayIndex] == "A")           /* code is active*/
  /* ****************************************************************/
  /* ***    SECOND & third LEVEL SECURITY*/
  /* ****************************************************************/
      if (((VCMPNY02.XCCCD == "Q" ||  /* q  t,u,v,w,x,y,z*/
      VCMPNY02.XCCCD == "W" ||        /**/
      VCMPNY02.XCCCD == "X" ||        /**/
      VCMPNY02.XCCCD == "Y" ||        /**/
      VCMPNY02.XCCCD == "Z") ||       /**/
      (KM07M100.XCCCD == "A" ||       /* do not allow change to*/
      KM07M100.XCCCD == "P" ||        
      KM07M100.XCCCD == "Q" ||        
      KM07M100.XCCCD == "U" ||        
      KM07M100.XCCCD == "V" ||        
      KM07M100.XCCCD == "W" ||        
      KM07M100.XCCCD == "X" ||        
      KM07M100.XCCCD == "Y" ||        
      KM07M100.XCCCD == "Z")))       
        converseLib.validationFailed(240); /* security violation on xcccd;*/
        KM07W01.KM07WERR = "Y"; /* set error flag;*/
        set KM07M100.XCCCD cursor, modified, bold;
        return;
      end
  /* *************************************************************/
  /* ***    SECOND LEVEL SECURITY ONLY*/
  /* *************************************************************/
      if (COMMAREA.CACLVL[1] != "Y") /* level two security*/
        if ((VCMPNY02.XCCCD == "U" ||  /**/
        VCMPNY02.XCCCD == "V") ||      /**/
        (KM07M100.XCCCD == "B" &&      
        VCMPNY02.XCCCD != "A"))       
          converseLib.validationFailed(240); /* security violation on xcccd;*/
          KM07W01.KM07WERR = "Y"; /* set error flag;*/
          set KM07M100.XCCCD cursor, modified, bold;
          return;
        end
      end
      sysVar.arrayIndex = 99; /* mark as found*/
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment subscript*/
  end
  /*  */
  if (sysVar.arrayIndex < 99) /* no active code found*/
          /* GET OP0CS-CHECK-CREDIT... 2/10/94 copy to replace 'if-in' code*/
    sysVar.arrayIndex = 1; /* Reset Subscript*/
    while (sysVar.arrayIndex < 99
     && XCCTBL.XCCCD[sysVar.arrayIndex] != "99") /* until end of XCCTBL*/
      if (XCCTBL.XCCCD[sysVar.arrayIndex] == KM07W01.KM07W2CH /* xcc code found*/
       && XCCTBL.XXXSTAT[sysVar.arrayIndex] == "I")           /* code is NOT active*/
        converseLib.validationFailed(299); /* credit status code is inactive*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.XCCCD cursor, modified, bold;
        sysVar.arrayIndex = 99; /* mark as found*/
        return;
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment subscript*/
    end
    if (sysVar.arrayIndex < 99) /* no valid code found*/
      converseLib.validationFailed(300); /* credit status code is invalid*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.XCCCD cursor, modified, bold;
      return;
    end
  end
  ;
end // end KM07529

// edits credit reps
Function KM07530()
  ;
  ;
   /* ************************************/
   /* edit reps*/
   /* ************************************/
  ;
  if (KM07M100.XCUCD[1] != VCMPNY02.XCUCD[1]
   || KM07M100.XCUCD[2] != VCMPNY02.XCUCD[2]
   || KM07M100.XCECD != VCMPNY02.XCECD)
    KM07W01.KM07WMD1 = "Y"; /* cmpny01 modified flag*/
  else
    return; /* no change/no edit*/
  end
  ;
   /* ***********************************************************/
    /* check credit service reps - must be valid if entered*/
    /* 1st entry - credit service rep - must be present*/
    /* 2nd entry - credit collections rep - optional*/
    /* 3rd entry - credit analyst rep - must be present*/
   /* ***********************************************************/
  ;
  if (KM07M100.XCECD != VCMPNY02.XCECD)
    if (KM07M100.XCECD > " ")
      if (KM07M100.XCECD in XCETBL.XCECD)
        if (XCETBL.XXXSTAT[sysVar.arrayIndex] == "A") /* status active?*/
          set KM07M100.XCECD initialAttributes;
        else
          converseLib.validationFailed(283); /* inactive code*/
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.XCECD cursor, modified, bold;
        end
      else
        converseLib.validationFailed(282); /* invalid code*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.XCECD cursor, modified, bold;
      end
    else
      converseLib.validationFailed(284); /* required code*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.XCECD cursor, modified, bold;
    end
  end
  ;
   /* **************************/
   /* edit collections code*/
   /* **************************/
  ;
  if (KM07M100.XCUCD[2] != VCMPNY02.XCUCD[2])
    set KM07M100.XCUCD[2] initialAttributes;
    if (KM07M100.XCUCD[2] > " ")
      if (KM07M100.XCUCD[2] in XCUTBL.XCUCD)
        if (XCUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          if (XCUTBL.XCURMGR[sysVar.arrayIndex] == "JS70") /* title code collections?*/
            set KM07M100.XCUCD[2] initialAttributes;
          else
            converseLib.validationFailed(285); /* invalid code*/
            KM07W01.KM07WERR = "Y"; /* set error flag*/
            set KM07M100.XCUCD[2] cursor, modified, bold;
          end
        else
          converseLib.validationFailed(286); /* inactive code*/
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.XCUCD[2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(285); /* invalid code*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.XCUCD[2] cursor, modified, bold;
      end
    end
  end
  ;
   /* *****************************/
   /* edit credit service rep code*/
   /* *****************************/
  ;
  if (KM07M100.XCUCD[1] != VCMPNY02.XCUCD[1])
    if (KM07M100.XCUCD[1] > " ")
      if (KM07M100.XCUCD[1] in XCUTBL.XCUCD)
        if (XCUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          if (XCUTBL.XCURMGR[sysVar.arrayIndex] == "AA" /* c & a rep*/
           || XCUTBL.XCURMGR[sysVar.arrayIndex] == "JS70") /* coll rep*/
            converseLib.validationFailed(287); /* invalid code*/
            KM07W01.KM07WERR = "Y"; /* set error flag*/
            set KM07M100.XCUCD[1] cursor, modified, bold;
          else
            set KM07M100.XCUCD[1] initialAttributes;
          end
        else
          converseLib.validationFailed(288); /* inactive code*/
          KM07W01.KM07WERR = "Y"; /* set error flag*/
          set KM07M100.XCUCD[1] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(287); /* invalid code*/
        KM07W01.KM07WERR = "Y"; /* set error flag*/
        set KM07M100.XCUCD[1] cursor, modified, bold;
      end
    else
      converseLib.validationFailed(289); /* required code*/
      KM07W01.KM07WERR = "Y"; /* set error flag*/
      set KM07M100.XCUCD[1] cursor, modified, bold;
    end
  end
  ;
  ;
  ;
end // end KM07530

// write principal bfor audit
Function KM07610()
  ;
  ;
  ;
   /* ********************************/
     /* format before audit image*/
   /* ********************************/
  ;
  set KUZREC empty;
  if (KM07M100.KM07MPDL[KM07WSUB] == " ")
    KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
    KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  else
    KUZREC.KUZTYPE = "D"; /* a-add,c-change,d-delete,i-inactivate*/
  end
  KUZREC.XXXTBLNM = "VPRINC01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUHREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KM07W01.KM07WSPR[KM07WSUB];
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM07   ";
    TA1REC.TA1LOCAT[1] = "KM07610  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VPRINC01 ";
    TA1REC.TA1MAP = "KM07M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VPRINC01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
     /* write before audit for principal*/
  ;
  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM07W01.KM07WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KM07610";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
end // end KM07610

// format princ record
Function KM07615()
  ;
  ;
  ;
  ;
    /* set db2 stamps if change*/
  if (KM07W01.KUHPRNM[KM07WSUB] != " " /* PRINCIPAL(N) READ?*/
   && KM07W01.KM07WPMD[KM07WSUB] > " ") /* principal(n) row modified?*/
    KUHREC.KUHGRP = KM07W01.KM07WSPR[KM07WSUB]; /* before image*/
    KUHREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
    KUHREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/
  end
  ;
    /* set db2 stamps and key if add*/
  if (KM07W01.KUHPRNM[KM07WSUB] == " " /* principal(n) not read?*/
   && KM07W01.KM07WPMD[KM07WSUB] > " ") /* principal(n) row modified?*/
    set KUHREC empty;
    KUHREC.ZZZSDT = XX0XW01.XX0XWDAT; /* stamp add date*/
    KUHREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
    KUHREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/
    KUHREC.KUCCOID = VCMPNY02.KUCCOID; /* company id*/
    KUHREC.KUHSEQNO = KM07WSUB; /* principal sequence*/
  end
  ;
  ;
  KM07W01.KM07W-SSN[KM07WSUB] = KM07M100.XXXSSN[KM07WSUB]; /* ssn*/
  if (KM07W01.KM07W-SSN[KM07WSUB] not numeric)
    KM07W-SSN-NUM[KM07WSUB] = 0;
  end
  KUHREC.XXXSSN = KM07W01.KM07W-SSN-NUM[KM07WSUB]; /* soc. sec #*/
  KUHREC.KUHPRNM = KM07M100.KUHPRNM[KM07WSUB]; /* name*/
  KUHREC.KUHPRTLT = KM07M100.KUHPRTLT[KM07WSUB]; /* title*/
  KUHREC.KUHGUAR = KM07M100.KUHGUAR[KM07WSUB]; /* guarantee flag*/
  KUHREC.KUHSGUAR = KM07M100.KUHSGUAR[KM07WSUB];
                                   /* spouses guar. flag*/
   /* ---------- y2k out begin -------*/
   /* MOVE 19 TO KM07W01.KM07WGCC;*/
   /* ---------- y2k out end ---------*/
  ;
  KM07W01.KM07WGYY = KM07M100.KM07MGYY[KM07WSUB];
   /* ---------- y2k in  begin -------*/
  if (KM07W01.KM07WGYY > 65)
    KM07W01.KM07WGCC = 19;
  else
    KM07W01.KM07WGCC = 20;
  end
   /* ---------- y2k in end ----------*/
  KM07W01.KM07WGMM = KM07M100.KM07MGMM[KM07WSUB];
  KM07W01.KM07WGDD = KM07M100.KM07MGDD[KM07WSUB];
  KUHREC.KUHGEDT = KM07W01.KM07WGDT; /* guarantee date*/
  ;
  ;
  ;
end // end KM07615

// update principal
Function KM07620()
  ;
  ;
  ;
  ;
  KM07W01.KM07WSPR[KM07WSUB] = KUHREC.KUHGRP; /* save new image*/
  KM07W01.KM07WPMD[KM07WSUB] = " "; /* clear row modified tag*/
  ;
    /* update principal*/
  call "IO0320" ("U ", SQLCA, KUHREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(29); /* data updated*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(33); /* princ updated since last reference*/
      exit stack;
    else
      KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM07W01.KM07WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VPRINC01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = KUHREC.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07620";
      TA1REC.TA1LOC = "UPDATE VPRINC01 SEQ";
      KM07W01.KM07WKEY = KUHREC.KUHSEQNO;
      TA1REC.TA1LOCAT[4] = KM07W01.KM07WKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07620

// format principal after audit
Function KM07625()
  ;
  ;
     /* format after audit image*/
  ;
  set KUZREC empty;
  if (KM07W01.KUHPRNM[KM07WSUB] == " "
   && KM07W01.KM07WPMD[KM07WSUB] > " ")
    KUZREC.KUZTYPE = "A"; /* a-add,c-change,d-delete,i-inactivate*/
    KUZREC.KUZBFCD = " "; /* blank-add, b-before, a-after*/
  else
    KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
    KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  end
  KUZREC.XXXTBLNM = "VPRINC01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUHREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUHREC.KUHGRP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM07   ";
    TA1REC.TA1LOCAT[1] = "KM07625  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VPRINC01 ";
    TA1REC.TA1MAP = "KM07M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VPRINC01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
     /* write after audit for principal*/
  ;
  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM07W01.KM07WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KM07625";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM07625

// delete principals
Function KM07630()
  ;
    /* clear row*/
  ;
  KM07M100.KM07MPDL[KM07WSUB] = " ";
  KM07M100.XXXSSN[KM07WSUB] = " ";
  KM07M100.KUHPRNM[KM07WSUB] = " ";
  KM07M100.KUHPRTLT[KM07WSUB] = " ";
  KM07M100.KUHGUAR[KM07WSUB] = " ";
  KM07M100.KUHSGUAR[KM07WSUB] = " ";
  KM07M100.KM07MGYY[KM07WSUB] = 0;
  KM07M100.KM07MGMM[KM07WSUB] = 0;
  KM07M100.KM07MGDD[KM07WSUB] = 0;
  ;
  ;
    /* delete principal*/
  ;
    /* move before image to kuhrec for key values*/
  KUHREC.KUHGRP = KM07W01.KM07WSPR[KM07WSUB];
  KM07W01.KM07W-SSN[KM07WSUB] = " ";
  KM07W01.KUHPRNM[KM07WSUB] = " ";
  KM07W01.KUHPRTLT[KM07WSUB] = " ";
  KM07W01.KUHGUAR[KM07WSUB] = " ";
  KM07W01.KUHSGUAR[KM07WSUB] = " ";
  KM07W01.KM07WEYY[KM07WSUB] = 0;
  KM07W01.KM07WEMM[KM07WSUB] = 0;
  KM07W01.KM07WEDD[KM07WSUB] = 0;
  KM07W01.KM07WPMD[KM07WSUB] = " "; /* clear row modified flag*/
  ;
  call "IO0320" ("D ", SQLCA, KUHREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(29); /* data updated*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(33); /* princ updated since last reference*/
      exit stack;
    else
      KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM07W01.KM07WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VPRINC01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = KUHREC.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07630";
      TA1REC.TA1LOC = "DEL VPRINC01 SEQ";
      KM07W01.KM07WKEY = KUHREC.KUHSEQNO;
      TA1REC.TA1LOCAT[4] = KM07W01.KM07WKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07630

// add principal
Function KM07635()
  ;
  ;
  ;
  ;
  KM07W01.KM07WSPR[KM07WSUB] = KUHREC.KUHGRP; /* save new image*/
  KM07W01.KM07WPMD[KM07WSUB] = " "; /* clear row modified flag*/
  ;
    /* add to principal*/
  ;
  call "IO0320" ("A ", SQLCA, KUHREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(29); /* data updated*/
  else
    if (SQLCA.VAGen_SQLCODE == -803)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(33); /* princ updated since last reference*/
      exit stack;
    else
      KM07W01.KM07WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM07W01.KM07WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VPRINC01";
      TA1REC.TA1MAP = " ";
      KM07W01.KM07WKEY = KUHREC.KUCCOID;
      TA1REC.TA1TBLKE = KM07W01.KM07WKEY;
      TA1REC.TA1PGMNM = "KM07635";
      TA1REC.TA1LOC = "ADD VPRINC01 SEQ ";
      KM07W01.KM07WKEY = KUHREC.KUHSEQNO;
      TA1REC.TA1LOCAT[4] = KM07W01.KM07WKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM07635

// Init records
Function KM07S-INIT-RECS()
  /* *********************************************************************/
  /* Initialize records used by KM07*/
  /* *********************************************************************/
  ;
  set VCMPNY02 empty;
  set KUKREC empty;
  set KULREC empty;
  set KUEREC empty;
  set KUHREC empty;
  set KUZREC empty;
  set VCTACT01 empty;
  set KM07W01 empty;
  set KU0XW10 empty;
  set KU0XW30 empty;
  set XX0XW01 empty;
  set XX0XW01 empty;
  set XX0XW02 empty;
  set SQLCA empty;
  set TA1REC empty;
end // end KM07S-INIT-RECS

//*** RECORD=KM07W01 ****
// this record contains work fields used entirely within km07.
// ************************************************************
// *                Maintenance Log
// ************************************************************
// *
// *  29-june-1993      dlegg     Add character redefinition
// *                              of company number.
// *  17-august-1993    dlegg     DB changes. Increase size of
// *                              KM07WCMT.
// *  11-NOVEMBER-1995  Kclark    change soc-security to char
// *                              to zero fill when soc-sec-num
// *                              less than 9 and blank when
// *                              zero
// ***********************
Record KM07W01 type basicRecord
  10 KM07WUSR KM07WUSR ; 
    15 KM07WCNO KM07WCNO ; 
      20 KM07WCNO-CHAR KM07WCNO-CHAR ; 
    15 * char(8) ; 
  10 KM07WIND KM07WIND ; 
  10 KM07WCID KM07WCID ; 
  10 KM07WKEY KM07WKEY ; 
  10 KM07WERR KM07WERR ; 
  10 KM07WMD1 KM07WMD1 ; 
  10 KM07WMD2 KM07WMD2 ; 
  10 KM07WMD3 KM07WMD3 ; 
  10 KM07WUPM KM07WUPM ; 
  10 KM07WEFL KM07WEFL ; 
  10 KM07W2CH KM07W2CH ; 
  10 KM07WSUB KM07WSUB ; 
  10 KM07WFDT KM07WFDT ; 
    15 KM07WFIC KM07WFIC ; 
    15 KM07WFIY KM07WFIY ; 
    15 KM07WFIM KM07WFIM ; 
    15 KM07WFID KM07WFID ; 
  10 KM07WGDT KM07WGDT ; 
    15 KM07WGCC KM07WGCC ; 
    15 KM07WGYY KM07WGYY ; 
    15 KM07WGMM KM07WGMM ; 
    15 KM07WGDD KM07WGDD ; 
  10 KM07WRDT KM07WRDT [3] ; 
    15 KM07WECC KM07WECC ; 
    15 KM07WEYY KM07WEYY ; 
    15 KM07WEMM KM07WEMM ; 
    15 KM07WEDD KM07WEDD ; 
  10 KM07WEDT KM07WEDT ; 
    15 KM07WLEC KM07WLEC ; 
    15 KM07WLEY KM07WLEY ; 
    15 KM07WLEM KM07WLEM ; 
    15 KM07WLED KM07WLED ; 
  10 KM07WXDT KM07WXDT ; 
    15 KM07WLXC KM07WLXC ; 
    15 KM07WLXY KM07WLXY ; 
    15 KM07WLXM KM07WLXM ; 
    15 KM07WLXD KM07WLXD ; 
  10 KM07W-LST-DAB-RPT-DT KM07W-LST-DAB-RPT-DT ; 
    15 KM07W-LST-DAB-RPT-CC KM07W-LST-DAB-RPT-CC ; 
    15 KM07W-LST-DAB-RPT-YY KM07W-LST-DAB-RPT-YY ; 
    15 KM07W-LST-DAB-RPT-MM KM07W-LST-DAB-RPT-MM ; 
    15 KM07W-LST-DAB-RPT-DD KM07W-LST-DAB-RPT-DD ; 
  10 KM07W-CR-APPL-DT KM07W-CR-APPL-DT ; 
    15 KM07W-CR-APPL-CC KM07W-CR-APPL-CC ; 
    15 KM07W-CR-APPL-YY KM07W-CR-APPL-YY ; 
    15 KM07W-CR-APPL-MM KM07W-CR-APPL-MM ; 
    15 KM07W-CR-APPL-DD KM07W-CR-APPL-DD ; 
  10 KM07WSQL KM07WSQL ; 
  10 KM07WCMT KM07WCMT ; 
  10 KM07WSPR KM07WSPR [3] ; 
    15 KUCCOID KUCCOID ; 
    15 KUHSEQNO KUHSEQNO ; 
    15 XXXSSN XXXSSN ; 
    15 KUHPRNM KUHPRNM ; 
    15 KUHPRTLT KUHPRTLT ; 
    15 KUHGUAR KUHGUAR ; 
    15 KUHGEDT KUHGEDT ; 
    15 KUHSGUAR KUHSGUAR ; 
    15 * char(12) ; 
  10 KM07WPMD KM07WPMD [3] ; 
  10 XATCD XATCD ; 
  10 KM07W-SET-UP-DATE KM07W-SET-UP-DATE ; 
    15 KM07W-SDT-MM KM07W-SDT-MM ; 
    15 KM07W-SDT-SLASH KM07W-SDT-SLASH ; 
    15 KM07W-SDT-YY KM07W-SDT-YY ; 
  10 XXXLSTNM XXXLSTNM ; 
  10 XXXFSTNM XXXFSTNM ; 
  10 XXXMDINT XXXMDINT ; 
  10 KM07W-FIRST-LAST-NAME KM07W-FIRST-LAST-NAME ; 
    15 KM07W-FLNAME-ARRAY KM07W-FLNAME-ARRAY [30] ; 
  10 KM07W-LAST-NAME KM07W-LAST-NAME ; 
    15 KM07W-LNAME-ARRAY KM07W-LNAME-ARRAY [25] ; 
  10 KM07W-IX1 KM07W-IX1 ; 
  10 KM07W-IX2 KM07W-IX2 ; 
  10 XXXPHN XXXPHN ; 
    15 XXXPHNA XXXPHNA ; 
    15 XXXPHNP XXXPHNP ; 
    15 XXXPHNN XXXPHNN ; 
  10 KM07W-PHONE KM07W-PHONE ; 
    15 KM07W-PHN-AREA-CD KM07W-PHN-AREA-CD ; 
    15 KM07W-PHN-DASH1 KM07W-PHN-DASH1 ; 
    15 KM07W-PHN-PREFIX KM07W-PHN-PREFIX ; 
    15 KM07W-PHN-DASH2 KM07W-PHN-DASH2 ; 
    15 KM07W-PHN-NUMBER KM07W-PHN-NUMBER ; 
  10 KM07W-SSN-GRP KM07W-SSN-GRP [3] ; 
    15 KM07W-SSN KM07W-SSN ; 
      20 KM07W-SSN-NUM KM07W-SSN-NUM ; 
  10 KM07W-IVC-PRT-IND KM07W-IVC-PRT-IND ; 
  10 KM07W-DT-XDATE KM07W-DT-XDATE ; 
    15 KM07W-DT-XCCYY KM07W-DT-XCCYY ; 
      20 KM07W-DT-XCC KM07W-DT-XCC ; 
      20 KM07W-DT-XYY KM07W-DT-XYY ; 
    15 KM07W-DT-XMM KM07W-DT-XMM ; 
  10 KM07W-DT-MDATE KM07W-DT-MDATE ; 
    15 KM07W-DT-MCCYY KM07W-DT-MCCYY ; 
      20 KM07W-DT-MCC KM07W-DT-MCC ; 
      20 KM07W-DT-MYY KM07W-DT-MYY ; 
    15 KM07W-DT-MMM KM07W-DT-MMM ; 
end // end KM07W01

//   work century
DataItem KM07W-CR-APPL-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07W-CR-APPL-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM07W-CR-APPL-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM07W-CR-APPL-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM07W-CR-APPL-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-MCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-MCCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// use for comparing map dates
DataItem KM07W-DT-MDATE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-MMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-MYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-XCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-XCCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-XDATE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-XMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-DT-XYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Credit Contact First+Last name
DataItem KM07W-FIRST-LAST-NAME char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Credit Contact F+L name array
DataItem KM07W-FLNAME-ARRAY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX_SSN
DataItem KM07W-IVC-PRT-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index
DataItem KM07W-IX1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem KM07W-IX2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Credit Contact Last name
DataItem KM07W-LAST-NAME char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Credit Contact L name array
DataItem KM07W-LNAME-ARRAY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work century
DataItem KM07W-LST-DAB-RPT-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07W-LST-DAB-RPT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM07W-LST-DAB-RPT-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM07W-LST-DAB-RPT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM07W-LST-DAB-RPT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format phone area code
DataItem KM07W-PHN-AREA-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone dash
DataItem KM07W-PHN-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone dash
DataItem KM07W-PHN-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone number
DataItem KM07W-PHN-NUMBER char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone prefix
DataItem KM07W-PHN-PREFIX char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted phone number
DataItem KM07W-PHONE char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM07W-SDT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM07W-SDT-SLASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM07W-SDT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// set up date
DataItem KM07W-SET-UP-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX_SSN
DataItem KM07W-SSN char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX_SSN
DataItem KM07W-SSN-GRP char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XXX_SSN
DataItem KM07W-SSN-NUM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// 2 character work
DataItem KM07W2CH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current id
DataItem KM07WCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save area comment b4 image
DataItem KM07WCMT char(77)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   company number
DataItem KM07WCNO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number-redefined
DataItem KM07WCNO-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work century
DataItem KM07WECC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07WEDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM07WEDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen updated flag
DataItem KM07WEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work month
DataItem KM07WEMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// error flag
DataItem KM07WERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work year
DataItem KM07WEYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM07WFDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM07WFIC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07WFID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM07WFIM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM07WFIY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM07WGCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07WGDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM07WGDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM07WGMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM07WGYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work indicator
DataItem KM07WIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work key
DataItem KM07WKEY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM07WLEC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07WLED num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM07WLEM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM07WLEY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM07WLXC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM07WLXD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM07WLXM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM07WLXY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vcmpny01 modified flag
DataItem KM07WMD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// vblgrp01 modified flag
DataItem KM07WMD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// vcomnt01 modified flag
DataItem KM07WMD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// principal row modified flags
DataItem KM07WPMD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work year/month/day
DataItem KM07WRDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save area for principals
DataItem KM07WSPR char(64)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save area for sqlca/reset
DataItem KM07WSQL char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index
DataItem KM07WSUB num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update/inquiry flag
DataItem KM07WUPM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reformat area for causera
DataItem KM07WUSR char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work year/month/day
DataItem KM07WXDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

