package km0u;

import corpcom2.XX0XW01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import kl.common.KIZTBL;
import ku.common.KUCREC;
import ku.common.KUZREC;
import ta.common.TA1REC;
//*** PROGRAM=KM0U ****
// ----------------  km0u - change/inquiry company ------------
// 
// overview:  this application performs change functions for
//            general booking company information
// 
// date written: 03/91
// author:       kevin Johnson
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
//  04/08/91  dsalzw  db changes & clean up
//  05/16/91  dsalzw  changed pf3 to use from appl
//  03/13/92  chellm  db changes; create new copy of km0uw04
//  09/13/93  CHELLM  CSP 4.1 Conversion.
//                    - Chg TA0020 functions
//                    -       from ABND to RETN w/XSPF4
//  11/12/93  chellm  db changes; create new copy of km0uw04
// *Y2KFIX   12/05/97  DKENNY  Y2K MODIFICATIONS MADE:
// *                   Application regenerated to pick up new
// *                   XX0XS01.
// *********************
Program KM0U type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KM0UW01 KM0UW01; // record
  KUCREC KUCREC; // record
  KUZREC KUZREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KIZTBL {deleteAfterUse = yes}; // table
  use KM0UM.KM0UM100 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KM0U000: KM0U000();
    goto KM0U100; /* converse A/R maintenance screen*/
    ;
    KM0U100: KM0U100();
    ;
    goto KM0U100; /* A/R maintenance screen*/
    ;
  end // end main
end // end KM0U

// init chg company processing
Function KM0U000()
   /* *********************************************/
    /* initialization of variables used in the  **/
    /* processing of the special bookings cust  **/
    /* update screen.                           **/
   /* *********************************************/
  ;
  XSENTRY();
  ;
  XSSEGTR(); /* set segmented transaction id*/
  ;
  set KM0UM100 initial; /* spcl bking maintenance screen*/
  set KM0UW01 empty; /* working storage 1*/
  set SQLCA empty;
  set KUCREC empty; /* company record*/
  set KUZREC empty; /* audit record*/
  KM0UW01.KM0UWCNO = 0;
  ;
  KM0UW01.KM0UWMD1 = "N"; /* init cmpny update flag*/
  KM0UW01.KM0UWEFL = "N"; /* init ready to update flag*/
  KM0UW01.KM0UWERR = "N"; /* error flag*/
  ;
   /* ****************************/
   /* Set initial map to inquiry*/
   /* ****************************/
  ;
  KM0UW01.KM0UWUPM = "N"; /* inquiry move*/
  KM0U402(); /* set fields for inquiry*/
  ;
  ;
  KM0UW01.KM0UWUSR = COMMAREA.CAUSERA; /* key from add menu*/
  if (COMMAREA.CAITEM != " ")
    KM0UW01.KM0UWUSR = COMMAREA.CAITEM; /* key from fastpath*/
    if (KM0UW01.KM0UWCNO-CHAR is numeric)
      KM0UM100.KUCCOID = KM0UW01.KM0UWCNO;
    else
      KM0UW01.KM0UWCNO = 0;
      KM0UM100.KUCCOID = 0;
    end
  else
    if (KM0UW01.KM0UWCNO-CHAR is numeric)
      KM0UM100.KUCCOID = KM0UW01.KM0UWCNO;
    else
      KM0UW01.KM0UWCNO = 0;
      KM0UM100.KUCCOID = 0;
    end
  end
  ;
  XX0XS01(); /* get todays date*/
  ;
  ;
  if (KM0UM100.KUCCOID > 0) /* if a company is available*/
    KM0U200(); /* read/format basic company screen*/
  end
  ;
end // end KM0U000

// converse map
Function KM0U100()
   /* *******************************************/
   /* customer special bookings screen        **/
   /* 1. prepares working variables           **/
   /* 2. presents screen                      **/
   /* 3. edits special keys                   **/
   /* 4. edit screen data                     **/
                                           /* **/
   /* *******************************************/
  ;
  KM0UW01.KM0UWERR = "N"; /* init error flag*/
  KM0UM100.KM0UMDAT = VGVar.currentShortGregorianDate; /* set screen date*/
  ;
  ;
  converse KM0UM100 ;
  ;
  KM0U400(); /* edit pf and special keys*/
  ;
  if (KM0UW01.KM0UWERR == "N") /* no errors*/
    KM0U500(); /* edit screen*/
  end
  ;
  if (KM0UW01.KM0UWERR == "N" /* no errors*/
   && KM0UW01.KM0UWUPM == "Y") /* update mode*/
    if (KM0UW01.KM0UWMD1 == "Y")
      converseLib.validationFailed(277); /* good edit*/
      KM0UW01.KM0UWEFL = "Y"; /* setup update flag*/
    end
  end
end // end KM0U100

// read/format basic screen
Function KM0U200()
  ;
  ;
  ;
   /* *********************************************************/
     /* read and format company screen data*/
   /* *********************************************************/
  ;
  set KUCREC empty; /* clear out company record*/
  KM0UW01.KM0UWCID = 0;
  ;
  KUCREC.KUCCOID = KM0UM100.KUCCOID; /* set company key*/
  ;
  KM0U210(); /* read vcmpny01*/
  if (KM0UW01.KM0UWERR == "Y") /* not found?*/
    set KM0UM100 initial;
    KM0UM100.KUCCOID = KUCREC.KUCCOID; /* set company key*/
    set KM0UM100.KUCCOID cursor, bold;
    return;
  end
  ;
  KM0UW01.KM0UWCID = KUCREC.KUCCOID; /* save current company id*/
  ;
  ;
   /* *******************************/
   /* *******************************/
   /* FORMAT MAP KM0UM100*/
   /* *******************************/
   /* *******************************/
  ;
  KM0UM100.KUCCONM = KUCREC.KUCCONM; /* move company name to map*/
  KM0UM100.KUCSBKFL = KUCREC.KUCSBKFL; /* move spcl bking flag to map*/
  ;
  if (KM0UW01.KM0UWUPM == "Y")
    KM0U401(); /* SET UPDATE FIELDS*/
  else
    KM0U402(); /* SET FIELDS FOR INQUIRY*/
  end
  ;
end // end KM0U200

// read company
Function KM0U210()
   /* *************************************************/
   /* get company record   kucrec*/
   /* *************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KM0UM100.KUCCOID initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(25); /* company not found*/
      KM0UW01.KM0UWERR = "Y"; /* set error message.*/
      set KM0UM100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KM0UW01.KM0UWKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM0UW01.KM0UWKEY;
      TA1REC.TA1PGMNM = "KM0U210";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
  ;
  ;
  ;
end // end KM0U210

// process special and pfkeys
Function KM0U400()
   /* ************************************************/
     /* EDIT ALL SPECIAL ENTRY KEYS                **/
   /* ************************************************/
  ;
  ;
   /* **************************************/
   /* EDIT PA2 KEY*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pa2)
    KM0U200(); /* refresh the screen*/
    KM0UW01.KM0UWERR = "Y"; /* set error flagto display screen*/
    KM0UW01.KM0UWMD1 = "N";
    KM0UW01.KM0UWEFL = "N";
    return;
  end
  ;
   /* **************************************/
   /* edit enter  key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is enter)
    if (KM0UM100.CATOAP > " ") /* fast path*/
      COMMAREA.CATOAP = KM0UM100.CATOAP;
      if (KM0UM100.CAITEM == " ")
        COMMAREA.CAUSERA = KM0UM100.KUCCOID;
      else
        COMMAREA.CAITEM = KM0UM100.CAITEM;
      end
      COMMAREA.CAFROMAP = "KM0U";
      XSEXIT();
      KM0UM100.VAGen_EZEMSG = COMMAREA.CAMSG;
      KM0UW01.KM0UWERR = "Y";
      set KM0UM100.CATOAP cursor, bold;
    else
      set KM0UM100.CATOAP initialAttributes;
    end
    return;
  else
    if (KM0UM100.CATOAP > " ")
      KM0UW01.KM0UWERR = "Y";
      converseLib.validationFailed(90); /* can not fast path and use pf keys*/
      set KM0UM100.CATOAP cursor, bold;
      return;
    else
      set KM0UM100.CATOAP modified;
    end
  end
  ;
  ;
   /* **************************************/
   /* edit pf2 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf2) /* update/inquiry tagle*/
    if (KM0UW01.KM0UWUPM == "N") /* in inquiry mode*/
      if (COMMAREA.CACHGFL == "Y") /* allow to maintenance*/
        KM0UW01.KM0UWUPM = "Y"; /* change to update mode*/
        KM0U200(); /* refresh screen/setup update mode*/
        KM0UW01.KM0UWERR = "Y"; /* display screen*/
        KM0UW01.KM0UWMD1 = "N";
        KM0UW01.KM0UWEFL = "N";
        return;
      else
        converseLib.validationFailed(330);
        KM0UW01.KM0UWERR = "Y"; /* display screen*/
        return;
      end
    else
      KM0UW01.KM0UWUPM = "N"; /* change to inquiry mode*/
      KM0U200(); /* refresh screen/set up inquiry screen*/
      KM0UW01.KM0UWERR = "Y"; /* display screen*/
      KM0UW01.KM0UWMD1 = "N";
      KM0UW01.KM0UWEFL = "N";
      return;
    end
  end
  ;
   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf3) /* back to company update*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CACURRAP = COMMAREA.CAFROMAP;
    XSEXIT();
    KM0UM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM0UW01.KM0UWERR = "Y";
    return;
  end
  ;
   /* **************************************/
   /* edit pf4 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf4) /* back to goal menu*/
    COMMAREA.CAFROMAP = "KM0U";
    XSPF4();
    KM0UM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM0UW01.KM0UWERR = "Y";
    return;
  end
  ;
   /* **************************************/
   /* edit pf5 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf5) /* back to goal menu*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CATOAP = "AF0A";
    COMMAREA.CACURRAP = COMMAREA.CAFROMAP;
    XSEXIT();
    KM0UM100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM0UW01.KM0UWERR = "Y";
    return;
  end
  ;
   /* **************************************/
   /* edit pf12 key*/
   /* **************************************/
  ;
  if (converseVar.eventKey is pf12 /* update key*/
   && KM0UW01.KM0UWEFL == "Y"      /* all edits ok*/
   && KM0UW01.KM0UWERR == "N")     /* no errors*/
    ;
    KM0U500(); /* edit screen*/
    ;
    if (KM0UW01.KM0UWMD1 == "Y") /* if company data updated*/
      if (KM0UW01.KM0UWERR == "N") /* no errors*/
        KM0U420(); /* process kucrec update*/
      end
    end
    ;
    if (KM0UW01.KM0UWERR == "N") /* no errors*/
      converseLib.validationFailed(279); /* all updates ok*/
      KM0UW01.KM0UWERR = "Y"; /* set error flag*/
      KM0UW01.KM0UWEFL = "N"; /* updates ok set =n*/
      KM0UW01.KM0UWMD1 = "N"; /* reset cmpny update*/
    else
      KM0UW01.KM0UWEFL = "N"; /* reset update ok flag*/
    end
    ;
  end
  ;
  if (converseVar.eventKey is pf12 /* update key*/
   && KM0UW01.KM0UWEFL == "N"      /* edits not ok*/
   && KM0UW01.KM0UWERR == "N")     /* error flag*/
    KM0UW01.KM0UWERR = "Y"; /* error flag*/
    converseLib.validationFailed(280); /* can pf12 without pressing enter*/
  end
  ;
  if (KM0UW01.KM0UWERR == "N")
    converseLib.validationFailed(281); /* invalid pf key message*/
    KM0UW01.KM0UWERR = "Y";
  end
  ;
  ;
  ;
end // end KM0U400

// set fields to update mode
Function KM0U401()
   /* *****************************/
   /* set update fields*/
   /* *****************************/
  ;
  KM0UM100.KM0UMFUN = "UPDATE "; /* current function*/
  set KM0UM100.KUCCOID cursor, initialAttributes; /* company id*/
  set KM0UM100.KUCCONM skip; /* company name*/
  ;
   /* *********************************/
   /* set up map for valid users*/
   /* *********************************/
  if (COMMAREA.CACLVL[1] == "Y") /* change flag level 1*/
    set KM0UM100.KUCSBKFL initialAttributes; /* spcl bkings cd*/
  end
  ;
end // end KM0U401

// set fields for inquiry mode
Function KM0U402()
   /* *****************************/
   /* SET FIELDS FOR INQUIRY*/
   /* *****************************/
  ;
  KM0UM100.KM0UMFUN = "INQUIRY";
  ;
  set KM0UM100.KUCCOID cursor, initialAttributes;
  ;
  set KM0UM100.KUCCONM skip; /* company name*/
  set KM0UM100.KUCSBKFL skip; /* spcl bking fl*/
  ;
end // end KM0U402

// update company kucrec
Function KM0U420()
   /* *************************************************/
   /* update company and create audit trail*/
   /* *************************************************/
  ;
   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();
  ;
  ;
   /* ****************************/
   /* prepare before look audit*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUCREC.KUCGRP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM0U   ";
    TA1REC.TA1LOCAT[1] = "KM0U420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM0UM000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
  KM0U422(); /* add audit before image for cmpny01*/
  ;
  KM0U424(); /* format cmpny general data update*/
  ;
  KM0U426(); /* update company*/
  ;
   /* ****************************/
   /* format after look audit*/
   /* ****************************/
  ;
  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUCREC.KUCGRP;
  ;
  ;
  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM06   ";
    TA1REC.TA1LOCAT[1] = "KM06420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM06M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end
  ;
  ;
  KM0U422(); /* write audit trail after image*/
  ;
  ;
end // end KM0U420

// inser before cmpny audit
Function KM0U422()
   /* **********************/
    /* add before image*/
   /* **********************/
  ;
  set SQLCA empty;
  ;
  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KM0U422";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
  ;
  ;
  ;
end // end KM0U422

// prepare cmpny record
Function KM0U424()
   /* **************************/
   /* format company update*/
   /* **************************/
  ;
   /* references to kuccoidn are temporary for side 1 fixes*/
  ;
  KUCREC.KUCSBKFL = KM0UM100.KUCSBKFL; /* company name*/
  ;
  KUCREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
  KUCREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/
  ;
  ;
  ;
end // end KM0U424

// update cmpny record
Function KM0U426()
   /* **************************/
   /* update company*/
   /* **************************/
  ;
  set SQLCA empty;
  ;
  call "IO0240" ("U ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(31); /* cmpny upt since last request msg*/
      KM0UW01.KM0UWERR = "Y"; /* set error msg*/
      KM0U200(); /* refresh the screen*/
      return;
    else
      KM0UW01.KM0UWSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM0UW01.KM0UWSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KM0UW01.KM0UWKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM0UW01.KM0UWKEY;
      TA1REC.TA1PGMNM = "KM0U426";
      TA1REC.TA1LOC = "UPDATE DB2 DCUST.VCMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end
  ;
  ;
  ;
end // end KM0U426

// edit screen data
Function KM0U500()
  ;
  ;
   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/
  ;
   /* note: edits are performed in reverse sequence of field*/
         /* appearance.  edit criteria are found in stmt grps.*/
   /* ***********************************************************/
  ;
  set KM0UM100.KUCCOID initialAttributes;
  if (KM0UM100.KUCCOID == KM0UW01.KM0UWCID
   && KM0UM100.KUCCOID != 0)
    /* next sentence*/
  else
    KM0U200(); /* refresh screen*/
    KM0UW01.KM0UWERR = "Y"; /* set error flag*/
    KM0UW01.KM0UWEFL = "N"; /* set update flag*/
    KM0UW01.KM0UWMD1 = "N"; /* set update flag*/
    return;
  end
  ;
  if (KM0UW01.KM0UWUPM == "Y") /* if in update mode*/
    KM0U401(); /* set fields defined*/
  else
    return;
  end
  ;
  ;
   /* **********************************************/
   /* *****     check company changes        ****/
   /* **********************************************/
  ;
  if (KM0UM100.KUCSBKFL != KUCREC.KUCSBKFL)
    if (KM0UM100.KUCSBKFL == "Y"
     || KM0UM100.KUCSBKFL == "N")
      KM0UW01.KM0UWMD1 = "Y"; /* cmpny01 modified*/
    else
      set KM0UM100.KUCSBKFL cursor, bold;
      converseLib.validationFailed(20); /* y/n only*/
      KM0UW01.KM0UWERR = "Y"; /* set error flag*/
      KM0UW01.KM0UWEFL = "N"; /* set update flag*/
      KM0UW01.KM0UWMD1 = "N"; /* set update flag*/
      return;
    end
  end
  ;
  ;
end // end KM0U500

//*** RECORD=KM0UW01 ****
// this record contains work fields used entirely within km0u.
// ***********************
Record KM0UW01 type basicRecord
  10 KM0UWUSR KM0UWUSR ; 
    15 KM0UWCNO-CHAR KM0UWCNO-CHAR ; 
      20 KM0UWCNO KM0UWCNO ; 
    15 * char(8) ; 
  10 KM0UWCID KM0UWCID ; 
  10 KM0UWKEY KM0UWKEY ; 
  10 KM0UWERR KM0UWERR ; 
  10 KM0UWMD1 KM0UWMD1 ; 
  10 KM0UWUPM KM0UWUPM ; 
  10 KM0UWEFL KM0UWEFL ; 
  10 KM0UWSQL KM0UWSQL ; 
end // end KM0UW01

// current id
DataItem KM0UWCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KM0UWCNO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KM0UWCNO-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen updated flag
DataItem KM0UWEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KM0UWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work key
DataItem KM0UWKEY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vcmpny01 modified flag
DataItem KM0UWMD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save area for sqlca/reset
DataItem KM0UWSQL char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update/inquiry flag
DataItem KM0UWUPM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reformat area for causera
DataItem KM0UWUSR char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

