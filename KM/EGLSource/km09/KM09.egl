package km09;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPXAU01;
import corpcom3.XPXCT01;
import corpcom3.XPXLA01;
import corpcom3.XPXX001;
import corpcom3.XPZAR01;
import corpcom3.XPZFL01;
import corpcom3.XPZRG01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom5.CU-BILL-IND;
import corpcom6.SQLCA;
import corpcom7.XXX-INTL-PHONE-NBR;
import corpcom7.XXXSTAT;
import corpx1.XACTBL;
import corpx1.XATCD;
import corpx1.XATTBL;
import corpx1.XAUCD;
import corpx1.XAUTBL;
import corpx1.XCACD;
import corpx1.XCATBL;
import corpx1.XCCCD;
import corpx1.XCCTBL;
import corpx1.XCECD;
import corpx1.XCETBL;
import corpx1.XCRCD;
import corpx1.XCTCD;
import corpx1.XCTTBL;
import corpx1.XCUCD;
import corpx1.XCUTBL;
import corpx1.XDZ-DATA-DIST-CD;
import corpx1.XDZTBL;
import corpx1.XIECD;
import corpx1.XLATBL;
import corpx1.XLBCD;
import corpx1.XLECD;
import corpx1.XLGCD;
import corpx2.XOPCD;
import corpy2.YCH-CHNL-CLS-CD;
import corpy2.YCPCD;
import corpy2.YCU-CRTN-USE-CD;
import corpy2.YLICD;
import corpy2.YPOTBL;
import corpy2.YVICD;
import corpz3.ZARTBL;
import corpz3.ZFLTBL;
import corpz3.ZRGTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import kl.common.KIZTBL;
import ku.common.KU0XW10;
import ku.common.KU0XW30;
import ku.common.KUCACYDT;
import ku.common.KUCACYNR;
import ku.common.KUCACYRT;
import ku.common.KUCALERT;
import ku.common.KUCAPDEX;
import ku.common.KUCAPRDT;
import ku.common.KUCASMT;
import ku.common.KUCATCSH;
import ku.common.KUCBLAID;
import ku.common.KUCBPIND;
import ku.common.KUCCCAID;
import ku.common.KUCCNSCD;
import ku.common.KUCCNTCT;
import ku.common.KUCCOAID;
import ku.common.KUCCOANM;
import ku.common.KUCCOBDT;
import ku.common.KUCCOID;
import ku.common.KUCCOIDN;
import ku.common.KUCCOLCD;
import ku.common.KUCCOMNT;
import ku.common.KUCCONM;
import ku.common.KUCCRLEF;
import ku.common.KUCCRLEX;
import ku.common.KUCCRLIN;
import ku.common.KUCCSHNF;
import ku.common.KUCCSTDT;
import ku.common.KUCECODY;
import ku.common.KUCFINDT;
import ku.common.KUCFPRDT;
import ku.common.KUCFRTPD;
import ku.common.KUCFTRTI;
import ku.common.KUCGRP;
import ku.common.KUCGRPID;
import ku.common.KUCIDIND;
import ku.common.KUCINSPD;
import ku.common.KUCJSRFL;
import ku.common.KUCLBOFL;
import ku.common.KUCLCAMT;
import ku.common.KUCLCEDT;
import ku.common.KUCLCXDT;
import ku.common.KUCLVIND;
import ku.common.KUCMADID;
import ku.common.KUCMAGCT;
import ku.common.KUCMSTID;
import ku.common.KUCNSCNT;
import ku.common.KUCPDSPD;
import ku.common.KUCPHN;
import ku.common.KUCPOFL;
import ku.common.KUCPRPTI;
import ku.common.KUCPRVRT;
import ku.common.KUCPSFL;
import ku.common.KUCRAUTH;
import ku.common.KUCREC;
import ku.common.KUCSBKFL;
import ku.common.KUCSKIND;
import ku.common.KUCSSCNT;
import ku.common.KUCSTMT;
import ku.common.KUCSTYNT;
import ku.common.KUCUNTCS;
import ku.common.KUCVNDFL;
import ku.common.KUCWHSFL;
import ku.common.KUCXCSFL;
import ku.common.KUCYPOAP;
import ku.common.KUCYPOFT;
import ku.common.KUHREC;
import ku.common.KUKPCOID;
import ku.common.KUKREC;
import ku.common.KUNREC;
import ku.common.KUZREC;
import ta.common.TA1REC;
import vv.common.VDSTRB01;
import vv.common.VZFC0001;
//*** PROGRAM=KM09 ****
// ----------------  km09 - change/inquiry company ------------
// 
// overview:  this application performs change functions for
//            general NIL company information.
// 
// date written: 01/90
// author:       Juan Fiat
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
//  03/15/90  dsalzw  remove kuerec, record was not being used
//  06/12/90  dsalzw  use xcurmgr instead of xcuttlcd
//  09/10/90  dsalzw  added kiztbl for audit trail
//  10/02/90  dsalzw  db changes
//  10/15/90  dsalzw  update blgrp on cmpny
//  12/10/90  dsalzw  add allocation fields from vcust001
//  02/04/91  dsalzw  db changes
//  05/08/91  dsalzw  removed km0m from setting security
//  05/16/91  dsalzw  changed pf3 to use from appl
//  06/09/91  dsalzw  db changes
//  06/19/91  dsalzw  require ftwr & aprl alloc fields
//  07/18/91  dsalzw  add group by id to the screen
//  10/11/91  CHELLM  DB changes:
//                    Deinstalled CUTAG record creation KUXREC.
//                    Added company short name update logic.
//  03/13/92  CHELLM  DB changes:
//                    Added new DNILO.VDSTRB01 fields.
//  10/12/92  cvo     DB changes:
//                    Changed to use dcorp.vzfc0001 db2 table
//                    instead of csp internal table, zfctbl.
//                    Turn-off pop-up window for 'Foreign $$'
//                    field.  km09502.
//  11/19/92  CHELLM  KM09505 -
//                    Changed to use dcorp.vzfc0001 db2 table
//                    instead of csp internal table, zfctbl.
//                    Removed ZFCTBL from application
//  03/03/93  CHELLM  KM09M100 removed phone from map.
//  05/27/93  CHELLM  Removed Allocation Code (XAC) and Sequenc
//                    (OP1ALSEQ) from the map.  They are now
//                    maintained only on KG0D.
//  07/28/93  CHELLM  Update VDSTRB01 status whenever VCMPNY01
//                    status is updated.
//  10/01/93  CHELLM  CSP 4.1 Conversion.
//  11/12/93  CHELLM  Database Changes.
//                     Added xdz-data-dist-cd to map.
//  03/11/94  CHELLM  Database Changes.
//  04/10/95  CHELLM  Added edits for Nike Canada users
// *Y2KFIX   12/02/97  DKENNY  Y2K MODIFICATIONS MADE TO:
// *                   KM09M100, KM09424, KM06505, KM06520.
// *********************
Program KM09 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KM09W01 KM09W01; // record
  KM09W04 KM09W04; // record
  KU0XW10 KU0XW10; // record
  KU0XW30 KU0XW30; // record
  KUCREC KUCREC; // record
  KUHREC KUHREC; // record
  KUKREC KUKREC; // record
  KUNREC KUNREC; // record
  KUZREC KUZREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  VDSTRB01 VDSTRB01; // record
  VZFC0001 VZFC0001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KIZTBL {deleteAfterUse = yes}; // table
  use XDZTBL {deleteAfterUse = yes}; // table
  use XATTBL {deleteAfterUse = yes}; // table
  use XACTBL {deleteAfterUse = yes}; // table
  use XCETBL {deleteAfterUse = yes}; // table
  use XCUTBL {deleteAfterUse = yes}; // table
  use XCCTBL {deleteAfterUse = yes}; // table
  use XCATBL {deleteAfterUse = yes}; // table
  use XAUTBL {deleteAfterUse = yes}; // table
  use XLATBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use YPOTBL {deleteAfterUse = yes}; // table
  use ZARTBL {deleteAfterUse = yes}; // table
  use ZFLTBL {deleteAfterUse = yes}; // table
  use ZRGTBL {deleteAfterUse = yes}; // table
  use KM09M.KM09M100, // form
  	KM09M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KM09000: KM09000();
    goto KM09100; /* converse nil maintenance screen*/

    KM09100: KM09100();

    goto KM09100; /* nil maintenance screen*/

  end // end main
end // end KM09

// init chg company processing
Function KM09000()
   /* *********************************************/
    /* initialization of variables used in the  **/
    /* processing of the A/R company screen     **/
   /* *********************************************/

   /* TEMP001;*/

  XSENTRY();

  XSSEGTR(); /* set segmented transaction id*/

  set KM09M100 initial; /* nil maintenance screen*/
  set KM09W01 empty; /* working storage 1*/
  set SQLCA empty;
  set KUCREC empty; /* company record*/
  set KUKREC empty; /* parent record*/
  set KUZREC empty; /* audit record*/

  KM09W01.KM09WMD1 = "N"; /* init cmpny update flag*/
  KM09W01.KM09WMD3 = "N"; /* init cmmnt update flag*/
  KM09W01.KM09WEFL = "N"; /* init ready to update flag*/
  KM09W01.KM09WERR = "N"; /* error flag*/

   /* ****************************/
   /* check fast path entry*/
   /* ****************************/

  if (COMMAREA.CACHGFL == "Y")
    KM09W01.KM09WUPM = "Y"; /* update mode*/
    KM09401(); /* set fields for update*/
  else
    KM09W01.KM09WUPM = "N"; /* inquiry move*/
    KM09402(); /* set fields for inquiry*/
  end


  KM09W01.KM09WUSR = COMMAREA.CAUSERA; /* key from add menu*/
  if (COMMAREA.CAITEM != " ")
    KM09W01.KM09WUSR = COMMAREA.CAITEM; /* key from fastpath*/
    if (KM09W01.KM09WCNO-CHAR is numeric)
      KM09M100.KUCCOID = KM09W01.KM09WCNO;
    else
      KM09M100.KUCCOID = 0;
      KM09W01.KM09WCNO = 0;
    end
  else
    KM09M100.KUCCOID = 0; /* key from chg menu*/
    KM09W01.KM09WCNO = 0; /* key from chg menu*/
  end

  if (KM09M100.KUCCOID > 0) /* if a company is available*/
    KM09200(); /* read/format basic company screen*/
  end

end // end KM09000

// converse map
Function KM09100()
   /* *******************************************/
   /* customer nil screen process             **/
   /* 1. prepares working variables           **/
   /* 2. presents screen                      **/
   /* 3. edits special keys                   **/
   /* 4. edit screen data                     **/
                                           /* **/
   /* *******************************************/

  KM09W01.KM09WERR = "N"; /* init error flag*/
  KM09M100.KM09MDAT = VGVar.currentShortGregorianDate; /* set screen date*/


  converse KM09M100 ;

  KM09400(); /* edit pf and special keys*/

  if (KM09W01.KM09WERR == "N") /* no errors*/
    KM09500(); /* edit screen*/
  end

  if (KM09W01.KM09WERR == "N" /* no errors*/
   && KM09W01.KM09WUPM == "Y") /* update mode*/
    if (KM09W01.KM09WMD1 == "Y")
      converseLib.validationFailed(277); /* good edit*/
      KM09W01.KM09WEFL = "Y"; /* setup update flag*/
    end
  end
end // end KM09100

// read records cmpny
Function KM09200()



   /* *********************************************************/
     /* read and format Company/NIL screen data*/
   /* *********************************************************/

  set KUCREC empty; /* clear out company record*/
  set VDSTRB01 empty; /* clear out NIL record*/
  KM09W01.KM09WCID = 0;

  KUCREC.KUCCOID = KM09M100.KUCCOID; /* set company key*/

  KM09210(); /* read vcmpny01*/
  if (KM09W01.KM09WERR == "Y") /* not found?*/
    set KM09M100 initial;
    KM09M100.KUCCOID = KUCREC.KUCCOID; /* set company key*/
    set KM09M100.KUCCOID cursor, bold;
    return;
  end

  VDSTRB01.KUCCOID = KM09M100.KUCCOID; /* set NIL key*/

  KM09240(); /* read vdstrb01*/
  if (KM09W01.KM09WERR == "Y") /* not found?*/
    set KM09M100 initial;
    KM09M100.KUCCOID = VDSTRB01.KUCCOID; /* set NIL key*/
    set KM09M100.KUCCOID cursor, bold;
    return;
  end

  KM09220(); /* format cmpny01 to map km09m100*/

  KM09W01.KM09WCID = KUCREC.KUCCOID; /* save current company id*/

   /* *******************************************************/
   /* --------  read/fmt parent  --------------*/
   /* *******************************************************/

  KM09M100.KUKPCOID = 0; /* clear parent id*/
  KM09M100.KUKPCONM = " "; /* clear parent name*/
  set KUKREC empty; /* clear  out parent record*/

  if (KUCREC.KUKPCOID != 0) /* there is a parent id*/
    KUKREC.KUKPCOID = KUCREC.KUKPCOID; /* set parent key*/
    KM09230(); /* read parent*/
    if (VAGen_SQLCODE == 0)
      KM09M100.KUKPCOID = KUKREC.KUKPCOID;
      KM09M100.KUKPCONM = KUKREC.KUKPCONM;
    else
      converseLib.validationFailed(329);
      KM09W01.KM09WERR = "Y";
      set KM09M100.KUKPCOID cursor, modified, bold;
    end
  end


  if (KM09W01.KM09WUPM == "Y")
    KM09401(); /* set fields defined*/
  else
    KM09402(); /* set fields to inquiry*/
  end

end // end KM09200

// read company
Function KM09210()
   /* *************************************************/
   /* get company record   kucrec*/
   /* *************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KM09M100.KUCCOID initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(25); /* company not found*/
      KM09W01.KM09WERR = "Y"; /* set error message.*/
      set KM09M100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KM09W01.KM09WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM09W01.KM09WKEY;
      TA1REC.TA1PGMNM = "KM09210";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end

   /* ***********************************/
   /* edit for account class code*/
   /* ***********************************/

  if (KUCREC.XAUCD in XAUTBL.XAUCD)
    if (XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      KM09W01.XATCD = XAUTBL.XATCD[sysVar.arrayIndex];
    else
      KM09W01.XATCD = " ";
    end
  else
    KM09W01.XATCD = " ";
  end

   /* **********************************************/
   /* edit account type for allowance of user groups*/
   /* **********************************************/

  if (KM09W01.XATCD == "08") /* edit for cole haan user*/
    if (COMMAREA.CADLVL[1] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM09W01.KM09WUPM = "N"; /* set error msg*/
    end
  else
    if (KM09W01.XATCD == "03") /* edit for nil user*/
      if (COMMAREA.CADLVL[2] == "Y")
        /* next sentence*/
      else
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KM09W01.KM09WUPM = "N"; /* set error msg*/
      end
    else
      if (COMMAREA.CADLVL[1] == "Y"
       || COMMAREA.CADLVL[2] == "Y")
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KM09W01.KM09WUPM = "N"; /* set error msg*/
      end
    end
  end
                   /* Edit for Nike Canada Uses*/

  if (KUCREC.XLECD == "03") /* edit for Nike Canada user*/
    if (COMMAREA.CADLVL[3] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM09W01.KM09WUPM = "N"; /* set error msg*/
    end
  else
    if (COMMAREA.CADLVL[3] == "Y")
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM09W01.KM09WUPM = "N"; /* set error msg*/
    end
  end

end // end KM09210

// format company
Function KM09220()
   /* **************************/
   /* format company update*/
   /* **************************/

  KM09M100.KUKPCOID = KUCREC.KUKPCOID; /* parent id*/
  KM09M100.KUCGRPID = KUCREC.KUCGRPID; /* group by id*/
  KM09M100.KUCCONM = KUCREC.KUCCONM; /* company name*/
  KM09M100.KUCCOANM = KUCREC.KUCCOANM; /* company alt name*/
  KM09M100.XLECD = KUCREC.XLECD; /* legal entity*/
  KM09W01.KM09WBDT = KUCREC.KUCCOBDT; /* bus date*/
  KM09M100.KM09MSBY = KM09W01.KM09WSBY; /* bus year*/
  KM09M100.KM09MSBM = KM09W01.KM09WSBM; /* bus month*/
  KM09M100.XXXSTAT = KUCREC.XXXSTAT; /* company status*/
  KM09M100.XCTCD = KUCREC.XCTCD; /* country code*/
  KM09M100.XCCCD = KUCREC.XCCCD; /* credit status*/
  KM09M100.XCUCD = KUCREC.XCUCD[1]; /* credit resp*/
  KM09M100.XCECD = KUCREC.XCECD; /* credit analyst*/
  KM09M100.KUCIDIND = KUCREC.KUCIDIND; /* invoice delay flag*/
  KM09M100.XAUCD = KUCREC.XAUCD; /* account class*/
   /* *MOVE KUCREC.ZARCD TO KM09M100.ZARCD;             /* account region*/
   /* *MOVE KUCREC.ZFLCD TO KM09M100.ZFLCD;             /* foreign language*/
   /* *moVE KUCREC.ZFCCD TO KM09M100.ZFCCD;             /* foreign currency*/
  KM09M100.KUCINSPD = KUCREC.KUCINSPD; /* insurance flag*/
  KM09M100.KUCFRTPD = KUCREC.KUCFRTPD; /* freight flag*/
  KM09M100.XLBCD = KUCREC.XLBCD; /* lock box*/

  KM09M100.KUCPOFL = KUCREC.KUCPOFL; /* po required fl*/
  KM09M100.KUCYPOAP = KUCREC.KUCYPOAP; /* aprl - po required*/
  KM09M100.KUCYPOFT = KUCREC.KUCYPOFT; /* ftwr - po required*/
  KM09M100.XDZ-DATA-DIST-CD = KUCREC.XDZ-DATA-DIST-CD; /* data dist cd*/
   /* *MOVE KUCREC.KUCPWFL TO KM09M100.KUCPWFL; /* print weight*/

   /* ************* Move NIL Distributor Table Info ***********************/

  KM09M100.ZARCD = VDSTRB01.ZARCD; /* account region*/
  KM09M100.ZRGCD = VDSTRB01.ZRGCD; /* sales region*/
  KM09M100.ZFLCD = VDSTRB01.ZFLCD; /* foreign language*/
  KM09M100.ZFCCD = VDSTRB01.ZFCCD; /* foreign currency*/
  KM09M100.NL-PRT-MUL-PRO-FL = VDSTRB01.NL-PRT-MUL-PRO-FL;
  KM09M100.NL-PRT-WT-PRO-FL = VDSTRB01.NL-PRT-WT-PRO-FL;
  KM09M100.NL-PRT-SECR-PRO-FL = VDSTRB01.NL-PRT-SECR-PRO-FL;
  KM09M100.NL-PRT-XMC-IND = VDSTRB01.NL-PRT-XMC-IND;
  KM09M100.NL-PRT-UNT-PRC-FL = VDSTRB01.NL-PRT-UNT-PRC-FL;
  KM09M100.NL-DSTR-FCST-IND = VDSTRB01.NL-DSTR-FCST-IND;
  KM09M100.NL-CRTF-ADDR-IND = VDSTRB01.NL-CRTF-ADDR-IND;
end // end KM09220

// get parent
Function KM09230()
   /* *************************/
   /* get parent*/
   /* *************************/

  set SQLCA empty;

  call "IO0030" ("S ", SQLCA, KUKREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    KM09W01.KM09WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM09W01.KM09WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VPARNT01";
    TA1REC.TA1MAP = " ";
    KM09W01.KM09WKEY = KUCREC.KUKPCOID;
    TA1REC.TA1TBLKE = KM09W01.KM09WKEY;
    TA1REC.TA1PGMNM = "KM09230";
    TA1REC.TA1LOC = "READ DB2 DCUST.VPARNT01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KM09230

// Read VDSTRB01
Function KM09240()
   /* *************************************************/
   /* get NIL Distributor record  VDSTRB01*/
   /* *************************************************/

  set SQLCA empty;

  call "IO4600" ("S ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KM09M100.KUCCOID initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(25); /* distributor not found*/
      KM09W01.KM09WERR = "Y"; /* set error message.*/
      set KM09M100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DNILO";
      TA1REC.TA1TBLVU = "VDSTRB01";
      TA1REC.TA1MAP = " ";
      KM09W01.KM09WKEY = VDSTRB01.KUCCOID;
      TA1REC.TA1TBLKE = KM09W01.KM09WKEY;
      TA1REC.TA1PGMNM = "KM09210";
      TA1REC.TA1LOC = "READING DB2 DSTRB01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end

end // end KM09240

// edit pf keys
Function KM09400()
   /* ************************************************/
     /* edit all special entry keys                **/
   /* ************************************************/

   /* *************************************************************/

    /* Maintenance History:*/
    /* 10-11-91 CHELLM Deinstalled CUTAG record creation (kuxrec)*/


   /* *************************************************************/


   /* **************************************/
   /* edit pa2 key*/
   /* **************************************/

  if (converseVar.eventKey is pa2)
    KM09200(); /* refresh the screen*/
    KM09W01.KM09WERR = "Y"; /* set error flagto display screen*/
    KM09W01.KM09WMD1 = "N";
    KM09W01.KM09WEFL = "N";
    return;
  end

   /* **************************************/
   /* edit enter  key*/
   /* **************************************/

  if (converseVar.eventKey is enter)
    if (KM09M100.CATOAP > " ") /* fast path*/
      COMMAREA.CATOAP = KM09M100.CATOAP;
      if (KM09M100.CAITEM == " ")
        COMMAREA.CAUSERA = KM09M100.KUCCOID;
      else
        COMMAREA.CAITEM = KM09M100.CAITEM;
      end
      COMMAREA.CAFROMAP = "KM09";
      XSEXIT();
      KM09M100.VAGen_EZEMSG = COMMAREA.CAMSG;
      KM09W01.KM09WERR = "Y";
      set KM09M100.CATOAP cursor, bold;
    else
      set KM09M100.CATOAP initialAttributes;
    end
    return;
  else
    if (KM09M100.CATOAP > " ")
      KM09W01.KM09WERR = "Y";
      converseLib.validationFailed(90); /* can not fast path and use pf keys*/
      set KM09M100.CATOAP cursor, bold;
      return;
    else
      set KM09M100.CATOAP modified;
    end
  end


   /* **************************************/
   /* edit pf2 key*/
   /* **************************************/

  if (converseVar.eventKey is pf2) /* update/inquiry tagle*/
    if (KM09W01.KM09WUPM == "N") /* in inquiry mode*/
      if (COMMAREA.CACHGFL == "Y") /* allow to maintenance*/
        KM09W01.KM09WUPM = "Y"; /* change to update mode*/
        KM09401(); /* set fields for update*/
        KM09200(); /* refresh screen*/
        KM09W01.KM09WERR = "Y"; /* display screen*/
        KM09W01.KM09WMD1 = "N";
        KM09W01.KM09WEFL = "N";
        return;
      else
        converseLib.validationFailed(330);
        KM09W01.KM09WERR = "Y"; /* display screen*/
        return;
      end
    else
      KM09W01.KM09WUPM = "N"; /* change to inquiry mode*/
      KM09402(); /* set fields for inquiry*/
      KM09200(); /* refresh screen*/
      KM09W01.KM09WERR = "Y"; /* display screen*/
      KM09W01.KM09WMD1 = "N";
      KM09W01.KM09WEFL = "N";
      return;
    end
  end

   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/

  if (converseVar.eventKey is pf3) /* back to company update*/
    COMMAREA.CAUSERA = KM09M100.KUCCOID;
    COMMAREA.CAITEM = " ";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CAFROMAP = "KM0C";
    XSEXIT();
    KM09M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM09W01.KM09WERR = "Y";
    return;
  end

   /* **************************************/
   /* edit pf4 key*/
   /* **************************************/

  if (converseVar.eventKey is pf4) /* back to goal menu*/
    COMMAREA.CAFROMAP = "KM09";
    XSPF4();
    KM09M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM09W01.KM09WERR = "Y";
    return;
  end


   /* **************************************/
   /* edit pf12 key*/
   /* **************************************/

  if (converseVar.eventKey is pf12 /* update key*/
   && KM09W01.KM09WEFL == "Y"      /* all edits ok*/
   && KM09W01.KM09WERR == "N")     /* no errors*/

    KM09500(); /* edit screen*/

    if (KM09W01.KM09WMD1 == "Y") /* if company data updated*/
      if (KM09W01.KM09WERR == "N") /* no errors*/
        KM09420(); /* process kucrec update*/
      end
    end

    if (KM09W01.KM09WERR == "N") /* no errors*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
    end

    if (KM09W01.KM09WERR == "N") /* no errors*/
      converseLib.validationFailed(279); /* all updates ok*/
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      KM09W01.KM09WEFL = "N"; /* updates ok set =n*/
      KM09W01.KM09WMD1 = "N"; /* reset cmpny update*/
    else
      KM09W01.KM09WEFL = "N"; /* reset update ok flag*/
    end

  end

  if (converseVar.eventKey is pf12 /* update key*/
   && KM09W01.KM09WEFL == "N"      /* edits not ok*/
   && KM09W01.KM09WERR == "N")     /* error flag*/
    KM09W01.KM09WERR = "Y"; /* error flag*/
    converseLib.validationFailed(280); /* can pf12 without pressing enter*/
  end

  if (KM09W01.KM09WERR == "N")
    converseLib.validationFailed(281); /* invalid pf key message*/
    KM09W01.KM09WERR = "Y";
  end



end // end KM09400

// set fields for update
Function KM09401()


   /* *****************************/
   /* set fields for update*/
   /* *****************************/

  KM09M100.KM09MTTL = "UPDATE ";
  set KM09M100.KM09MTTL initialAttributes;

  set KM09M100.KUCCOID cursor, initialAttributes;

  set KM09M100.KUKPCOID initialAttributes; /* parent id*/
  set KM09M100.KUKPCONM initialAttributes; /* parent name*/
  set KM09M100.KUCGRPID initialAttributes; /* group by id*/
  set KM09M100.KUCCONM initialAttributes; /* company name*/
  set KM09M100.KUCCOANM initialAttributes; /* company alt name*/
  set KM09M100.XXXSTAT initialAttributes; /* company stat*/
  set KM09M100.XCUCD initialAttributes; /* credit service rep.*/
  set KM09M100.XCECD initialAttributes; /* credit analyst rep.*/
  set KM09M100.XCTCD initialAttributes; /* country code*/
  set KM09M100.XAUCD initialAttributes; /* account class*/
  set KM09M100.XCCCD initialAttributes; /* cr status code*/
  set KM09M100.ZARCD initialAttributes; /* accounting region*/
  set KM09M100.ZRGCD initialAttributes; /* sales region*/
  set KM09M100.ZFLCD initialAttributes; /* foreign language code*/
  set KM09M100.ZFCCD initialAttributes; /* foreign currency code*/
  set KM09M100.KUCINSPD initialAttributes; /* insurance prepaid lfag*/
  set KM09M100.KUCFRTPD initialAttributes; /* freight prepaid lfag*/
  set KM09M100.KM09MSBM initialAttributes; /* begin bus month*/
  set KM09M100.KM09MSBY initialAttributes; /* begin bus month*/
  set KM09M100.KUCIDIND initialAttributes; /* invoice delay flag*/
  set KM09M100.XDZ-DATA-DIST-CD initialAttributes; /* data distribution*/
  set KM09M100.NL-PRT-MUL-PRO-FL initialAttributes; /* print mult pro*/
  set KM09M100.NL-PRT-WT-PRO-FL initialAttributes; /* print weight*/
  set KM09M100.NL-PRT-SECR-PRO-FL initialAttributes; /* print secure pro*/
  set KM09M100.NL-PRT-UNT-PRC-FL initialAttributes; /* print unit price*/
  set KM09M100.NL-PRT-XMC-IND initialAttributes; /* print secure pro*/
  set KM09M100.NL-DSTR-FCST-IND initialAttributes; /* print distr forcast ind*/
  set KM09M100.NL-CRTF-ADDR-IND initialAttributes; /* certificate origin addr ind*/
  set KM09M100.KUCPOFL initialAttributes; /* po required flag*/
  set KM09M100.KUCYPOAP initialAttributes; /* aprl - po required*/
  set KM09M100.KUCYPOFT initialAttributes; /* ftwr - po required*/
  set KM09M100.XLBCD initialAttributes; /* lock box code*/


end // end KM09401

// set fields for inquiry
Function KM09402()


   /* *****************************/
   /* set fields for update*/
   /* *****************************/

  KM09M100.KM09MTTL = "INQUIRY";
  set KM09M100.KM09MTTL skip;

  set KM09M100.KUCCOID cursor, initialAttributes;

  set KM09M100.KUKPCOID skip; /* parent id*/
  set KM09M100.KUKPCONM skip; /* parent name*/
  set KM09M100.KUCGRPID skip; /* group by id*/
  set KM09M100.KUCCONM skip; /* company name*/
  set KM09M100.KUCCOANM skip; /* company alt name*/
  set KM09M100.XXXSTAT skip; /* company stat*/
  set KM09M100.XCUCD skip; /* credit service rep.*/
  set KM09M100.XCECD skip; /* credit analyst rep.*/
  set KM09M100.XCTCD skip; /* country code*/
  set KM09M100.XAUCD skip; /* account class*/
  set KM09M100.XCCCD skip; /* cr status code*/
  set KM09M100.ZARCD skip; /* accounting region*/
  set KM09M100.ZRGCD skip; /* sales region*/
  set KM09M100.ZFLCD skip; /* foreign language code*/
  set KM09M100.ZFCCD skip; /* foreign currency code*/
  set KM09M100.KUCINSPD skip; /* insurance prepaid lfag*/
  set KM09M100.KUCFRTPD skip; /* freight prepaid lfag*/
  set KM09M100.KM09MSBM skip; /* begin bus month*/
  set KM09M100.KM09MSBY skip; /* begin bus month*/
  set KM09M100.KUCIDIND skip; /* invoice delay flag*/
  set KM09M100.XDZ-DATA-DIST-CD skip; /* data distribution*/
  set KM09M100.NL-PRT-MUL-PRO-FL skip; /* print mult pro*/
  set KM09M100.NL-PRT-WT-PRO-FL skip; /* print wieght*/
  set KM09M100.NL-PRT-SECR-PRO-FL skip; /* print secure pro*/
  set KM09M100.NL-PRT-UNT-PRC-FL skip; /* print unit price*/
  set KM09M100.NL-PRT-XMC-IND skip; /* print mat content*/
  set KM09M100.NL-DSTR-FCST-IND skip; /* distr forcast*/
  set KM09M100.NL-CRTF-ADDR-IND skip; /* certif of origin addr ind*/
  set KM09M100.KUCPOFL skip; /* po required flag*/
  set KM09M100.KUCYPOAP skip; /* aprl - po required*/
  set KM09M100.KUCYPOFT skip; /* ftwr - po required*/
  set KM09M100.XLBCD skip; /* lock box code*/


end // end KM09402

// process company update
Function KM09420()
   /* *************************************************/
   /* update company and create audit trail*/
   /* *************************************************/

   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();


   /* ****************************/
   /* prepare before look audit*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUCREC.KUCGRP;


  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM09   ";
    TA1REC.TA1LOCAT[1] = "KM09420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM09M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


  KM09422(); /* add audit before image for cmpny01*/

  KM09424(); /* format cmpny general data update*/

  KM09426(); /* update company*/

  KM09428(); /* update distributor*/

   /* ****************************/
   /* format after look audit*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUCREC.KUCGRP;


  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM09   ";
    TA1REC.TA1LOCAT[1] = "KM09420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM09M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


  KM09422(); /* write audit trail after image*/



end // end KM09420

// write audit record
Function KM09422()
   /* **********************/
    /* add before image*/
   /* **********************/

  set SQLCA empty;

  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KM09422";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end



end // end KM09422

// format company and distributor
Function KM09424()
   /* **************************/
   /* format company update*/
   /* **************************/

   /* *************************************************************/

    /* Maintenance History:*/
    /* 10-11-91 CHELLM Added update logic for CU-CO-SHORT-NM.*/
    /* 02-13-92 CHELLM Added DNILO.VDISTR01 table fields.*/
    /* 05-27-93 CHELLM Removed Allocation fieids from the map.*/
    /* 11-12-93 CHELLM Added data distribution*/


   /* *************************************************************/

  KUCREC.KUCGRPID = KM09M100.KUCGRPID; /* group by id*/
  KUCREC.KUCCONM = KM09M100.KUCCONM; /* company name*/
  KU0XW10.KU0XW1GP = " ";
  KU0XW30.KU0XW3GP = " ";
  KU0XW30.KU0XW3GP = KUCREC.KUCCONM;
  call "KU0X" (KU0XW30, KU0XW10) {isNoRefresh = yes};
  KUCREC.CU-CO-SHORT-NM = KU0XW10.KU0XW1GP;
  KUCREC.KUCCOANM = KM09M100.KUCCOANM; /* company alt name*/
  KUCREC.KUKPCOID = KM09M100.KUKPCOID; /* parent id*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM09W01.KM09WSBC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM09M100.KM09MSBM > 0)
    if (KM09M100.KM09MSBY > 60)
      KM09W01.KM09WSBC = 19;
    else
      KM09W01.KM09WSBC = 20;
    end
  else
    KM09W01.KM09WSBC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  KM09W01.KM09WSBD = 00;
  KM09W01.KM09WSBY = KM09M100.KM09MSBY;
  KM09W01.KM09WSBM = KM09M100.KM09MSBM;
  KUCREC.KUCCOBDT = KM09W01.KM09WBDT; /* started business date*/
  KUCREC.XXXSTAT = KM09M100.XXXSTAT; /* company stat*/
  KUCREC.XCTCD = KM09M100.XCTCD; /* country code*/
  KUCREC.XAUCD = KM09M100.XAUCD; /* account class*/
  KUCREC.XCCCD = KM09M100.XCCCD; /* cr status code*/
  KUCREC.XCUCD[1] = KM09M100.XCUCD; /* credit service rep*/
  KUCREC.XCECD = KM09M100.XCECD; /* credit analyst rep*/
  KUCREC.KUCIDIND = KM09M100.KUCIDIND; /* inv delay flag*/
  KUCREC.KUCINSPD = KM09M100.KUCINSPD; /* insurance prepaid*/
  KUCREC.KUCFRTPD = KM09M100.KUCFRTPD; /* freight   prepaid*/
  KUCREC.KUCPOFL = KM09M100.KUCPOFL; /* po required flag*/
  KUCREC.KUCYPOAP = KM09M100.KUCYPOAP; /* aprl - po required*/
  KUCREC.KUCYPOFT = KM09M100.KUCYPOFT; /* ftwr - po required*/
  KUCREC.XLBCD = KM09M100.XLBCD; /* lockbox code*/
  KUCREC.XDZ-DATA-DIST-CD = KM09M100.XDZ-DATA-DIST-CD; /* data dist*/

  KUCREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
  KUCREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/

   /* *************** Move to NIL Distributor table *******************/

  VDSTRB01.NL-PRT-MUL-PRO-FL = KM09M100.NL-PRT-MUL-PRO-FL;
  VDSTRB01.NL-PRT-WT-PRO-FL = KM09M100.NL-PRT-WT-PRO-FL;
  VDSTRB01.NL-PRT-SECR-PRO-FL = KM09M100.NL-PRT-SECR-PRO-FL;
  VDSTRB01.NL-PRT-XMC-IND = KM09M100.NL-PRT-XMC-IND;
  VDSTRB01.NL-PRT-UNT-PRC-FL = KM09M100.NL-PRT-UNT-PRC-FL;
  VDSTRB01.NL-DSTR-FCST-IND = KM09M100.NL-DSTR-FCST-IND;
  VDSTRB01.NL-CRTF-ADDR-IND = KM09M100.NL-CRTF-ADDR-IND;
  VDSTRB01.XXXSTAT = KM09M100.XXXSTAT; /* company stat*/
  VDSTRB01.ZARCD = KM09M100.ZARCD; /* account region*/
  VDSTRB01.ZRGCD = KM09M100.ZRGCD; /* sales region*/
  VDSTRB01.ZFLCD = KM09M100.ZFLCD; /* foreign language*/
  VDSTRB01.ZFCCD = KM09M100.ZFCCD; /* foreign currency*/

  VDSTRB01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
  VDSTRB01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/


end // end KM09424

// update company
Function KM09426()
   /* **************************/
   /* update company*/
   /* **************************/

  set SQLCA empty;

  call "IO0240" ("U ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(31); /* cmpny upt since last request msg*/
      KM09W01.KM09WERR = "Y"; /* set error msg*/
      KM09200(); /* refresh the screen*/
      return;
    else
      KM09W01.KM09WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM09W01.KM09WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KM09W01.KM09WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM09W01.KM09WKEY;
      TA1REC.TA1PGMNM = "KM09426";
      TA1REC.TA1LOC = "UPDATE DB2 DCUST.VCMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end



end // end KM09426

// update distributor
Function KM09428()
   /* **************************/
   /* update company*/
   /* **************************/

  set SQLCA empty;

  call "IO4600" ("U ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(31); /* cmpny upt since last request msg*/
      KM09W01.KM09WERR = "Y"; /* set error msg*/
      KM09200(); /* refresh the screen*/
      return;
    else
      KM09W01.KM09WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM09W01.KM09WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "ABND";
      TA1REC.TA1DBASE = "DNILO";
      TA1REC.TA1TBLVU = "VDSTRB01";
      TA1REC.TA1MAP = " ";
      KM09W01.KM09WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM09W01.KM09WKEY;
      TA1REC.TA1PGMNM = "KM09428";
      TA1REC.TA1LOC = "UPDATE DB2 DNILO.VDSTRB01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end



end // end KM09428

// edit screen
Function KM09500()


   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/

   /* note: edits are performed in reverse sequence of field*/
         /* appearance.  edit criteria are found in stmt grps.*/
   /* ***********************************************************/

  set KM09M100.KUCCOID initialAttributes;
  if (KM09M100.KUCCOID == KM09W01.KM09WCID
   && KM09M100.KUCCOID != 0)
    /* next sentence*/
  else
    KM09200(); /* refresh screen*/
    KM09W01.KM09WERR = "Y"; /* set error flag*/
    KM09W01.KM09WEFL = "N"; /* set update flag*/
    KM09W01.KM09WMD1 = "N"; /* set update flag*/
    return;
  end

  if (KM09W01.KM09WUPM == "Y") /* if in update mode*/
    KM09401(); /* set fields defined*/
  else
    return;
  end

   /* **********************/
   /* show pop-up windows*/
   /* **********************/

  KM09502(); /* show pop-up windows*/



   /* ******************************************************/
   /* edits:                                              **/
   /* kucpofl, kucypoap, kucypoft                        **/
                                                      /* **/
  KM09513();

   /* ******************************************************/


   /* ******************************************************/
   /* edits: screen lines 13 thru 20                      **/
   /* kucstat   xcccd    xaucd   zarcd  xctcd  zflcd     **/
   /* zfccd     kucinspd kucfrtpd xlbcd kucidind         **/
   /* km09msbm  km09msby kucmpmfl kucmwfl                **/
                                                      /* **/
  KM09520();

   /* ******************************************************/


   /* ******************************************************/
   /* edits: screen lines 1, 2 3, and 4                   **/
   /* kukpcoid  kucconm  kuccoanm  kucphn kucgrpid       **/
                                                      /* **/
  KM09530();

   /* ******************************************************/



end // end KM09500

// process pop-ups windows
Function KM09502()

   /* ***********************************/
    /* lock box table*/
   /* ***********************************/

  if (KM09M100.XLBCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXLA01();
    end
    set KM09M100.XLBCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM09M100.XLBCD = XLATBL.XLBCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* country codes table*/
   /* ***********************************/

  if (KM09M100.XCTCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01();
    end
    set KM09M100.XCTCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM09M100.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* account class*/
   /* ***********************************/

  if (KM09M100.XAUCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXAU01();
    end
    set KM09M100.XAUCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM09M100.XAUCD = XAUTBL.XAUCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* accounting region*/
   /* ***********************************/

  if (KM09M100.ZARCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPZAR01();
    end
    set KM09M100.ZARCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM09M100.ZARCD = ZARTBL.ZARCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* sales region*/
   /* ***********************************/

  if (KM09M100.ZRGCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPZRG01();
    end
    set KM09M100.ZRGCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM09M100.ZRGCD = ZRGTBL.ZRGCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* foreign language*/
   /* ***********************************/

  if (KM09M100.ZFLCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPZFL01();
    end
    set KM09M100.ZFLCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM09M100.ZFLCD = ZFLTBL.ZFLCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* foreign currency*/
   /* ***********************************/
   /* ZFCTBL csp table will be deleted in October 92.  db2 table changes.*/

   /* IF KM09M100.ZFCCD = '?';*/
    /* PERFORM XPXX001;*/
    /* WHILE XX0XW02.XX0XWEND EQ 'N';*/
      /* PERFORM XPZFC01;*/
    /* END;*/
    /* SET KM09M100.ZFCCD CURSOR;*/
    /* IF XX0XW02.XX0XWPIX GT 0;*/
      /* MOVE ZFCTBL.ZFCCD(XX0XWPIX) TO KM09M100.ZFCCD;*/
    /* END;*/
   /* END;*/

  converseLib.clearScreen();
  
end // end KM09502

// edit po req fields
Function KM09513()
   /* ***********************************************************/
   /* ------- edit fields from upt basic sales map ------*/

   /* edit po required fl & codes*/
   /* ***********************************************************/
   /* **********************************************/
   /* *****     check if company changes        ****/
   /* **********************************************/

  if (KM09M100.KUCPOFL != KUCREC.KUCPOFL
   || KM09M100.KUCYPOAP != KUCREC.KUCYPOAP
   || KM09M100.KUCYPOFT != KUCREC.KUCYPOFT)
    KM09W01.KM09WMD1 = "Y"; /* cmpny01 modified*/
  else
    return;
  end


   /* ********************************************/
    /* check p.o. required code - footwear*/
   /* ********************************************/

  if (KM09M100.KUCYPOFT != KUCREC.KUCYPOFT)
    if (KM09M100.KUCYPOFT in YPOTBL.YPOCD)
      if (YPOTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM09M100.KUCYPOFT initialAttributes;
      else
        KM09W01.KM09WERR = "Y";
        converseLib.validationFailed(71); /* code is inactive*/
        set KM09M100.KUCYPOFT initialAttributes;
      end
    else
      KM09W01.KM09WERR = "Y";
      converseLib.validationFailed(17); /* invalid value*/
      set KM09M100.KUCYPOFT cursor, modified, bold;
    end
  end


   /* ********************************************/
    /* check p.o. required code - apparel*/
   /* ********************************************/

  if (KM09M100.KUCYPOAP != KUCREC.KUCYPOAP)
    if (KM09M100.KUCYPOAP in YPOTBL.YPOCD)
      if (YPOTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM09M100.KUCYPOAP initialAttributes;
      else
        KM09W01.KM09WERR = "Y";
        converseLib.validationFailed(71); /* code is inactive*/
        set KM09M100.KUCYPOAP initialAttributes;
      end
    else
      KM09W01.KM09WERR = "Y";
      converseLib.validationFailed(17); /* invalid value*/
      set KM09M100.KUCYPOAP cursor, modified, bold;
    end
  end


   /* ********************************************/
    /* check po required flag*/
   /* ********************************************/

  if (KM09M100.KUCPOFL != KUCREC.KUCPOFL)
    if (KM09M100.KUCPOFL == "Y"
     || KM09M100.KUCPOFL == "N")
      set KM09M100.KUCPOFL initialAttributes;
    else
      KM09W01.KM09WERR = "Y";
      converseLib.validationFailed(20); /* must be y or n*/
      set KM09M100.KUCPOFL cursor, modified, bold;
    end
  end


   /* ********************************************/
    /* check po required flag - combinations*/
   /* ********************************************/

  if (KM09M100.KUCPOFL == "N")
    if (KM09M100.KUCYPOAP == "00"
     && KM09M100.KUCYPOFT == "00")
       /* next sentence*/
    else
      KM09W01.KM09WERR = "Y";
      converseLib.validationFailed(17); /* invalid combination*/
      set KM09M100.KUCYPOAP cursor, modified, bold;
      set KM09M100.KUCYPOFT modified, bold;
    end
  else
    if (KM09M100.KUCPOFL == "Y")
      if (KM09M100.KUCYPOAP == "00"
       || KM09M100.KUCYPOFT == "00")
        KM09W01.KM09WERR = "Y";
        converseLib.validationFailed(17); /* invalid combination*/
        set KM09M100.KUCYPOAP cursor, modified, bold;
        set KM09M100.KUCYPOFT modified, bold;
      end
    end
  end


end // end KM09513

// edit part of screen
Function KM09520()
   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/

   /* first set of flags codes and indicators*/
   /* ***********************************************************/
   /* **********************************************/
   /* *****     check if company changes        ****/
   /* **********************************************/

  if (KM09M100.XCTCD != KUCREC.XCTCD
   || KM09M100.KUCIDIND != KUCREC.KUCIDIND
   || KM09M100.KUCINSPD != KUCREC.KUCINSPD
   || KM09M100.KUCFRTPD != KUCREC.KUCFRTPD
   || KM09M100.XAUCD != KUCREC.XAUCD
   || KM09M100.ZARCD != VDSTRB01.ZARCD
   || KM09M100.ZRGCD != VDSTRB01.ZRGCD
   || KM09M100.ZFLCD != VDSTRB01.ZFLCD
   || KM09M100.ZFCCD != VDSTRB01.ZFCCD
   || KM09M100.XCCCD != KUCREC.XCCCD
   || KM09M100.XXXSTAT != KUCREC.XXXSTAT
   || KM09M100.KM09MSBM != KM09W01.KM09WSBM
   || KM09M100.KM09MSBY != KM09W01.KM09WSBY
   || KM09M100.XCUCD != KUCREC.XCUCD[1]
   || KM09M100.XCECD != KUCREC.XCECD
   || KM09M100.XLBCD != KUCREC.XLBCD
   || KM09M100.XDZ-DATA-DIST-CD != KUCREC.XDZ-DATA-DIST-CD
   || KM09M100.NL-PRT-MUL-PRO-FL != VDSTRB01.NL-PRT-MUL-PRO-FL
   || KM09M100.NL-PRT-WT-PRO-FL != VDSTRB01.NL-PRT-WT-PRO-FL
   || KM09M100.NL-PRT-SECR-PRO-FL != VDSTRB01.NL-PRT-SECR-PRO-FL
   || KM09M100.NL-PRT-XMC-IND != VDSTRB01.NL-PRT-XMC-IND
   || KM09M100.NL-PRT-UNT-PRC-FL != VDSTRB01.NL-PRT-UNT-PRC-FL
   || KM09M100.NL-DSTR-FCST-IND != VDSTRB01.NL-DSTR-FCST-IND)
    KM09W01.KM09WMD1 = "Y"; /* cmpny01 modified*/
  end


  if (KM09W01.KM09WMD1 == "Y")
    /* NEXT SENTENCE*/
  else
    return;
  end

   /* ******************************************************/
    /* check account class code - req, valid table entry*/
   /* ******************************************************/

  if (KM09M100.XAUCD != KUCREC.XAUCD)
    if (KM09M100.XAUCD != " ")
      if (KM09M100.XAUCD in XAUTBL.XAUCD)
        if (XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM09M100.XAUCD initialAttributes;
        else
          converseLib.validationFailed(343); /* account class code is inactive*/
          set KM09M100.XAUCD cursor, modified, bold;
          KM09W01.KM09WERR = "Y"; /* set error flag*/
        end
      else
        converseLib.validationFailed(344); /* invalid account class*/
        set KM09M100.XAUCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    else
      converseLib.validationFailed(345); /* account class is required*/
      set KM09M100.XAUCD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  end


   /* *****************************************/
    /* company status must be a or i*/
   /* *****************************************/

  if (KM09M100.XXXSTAT != KUCREC.XXXSTAT)
    if (KM09M100.XXXSTAT == "A"
     || KM09M100.XXXSTAT == "I")
      set KM09M100.XXXSTAT initialAttributes;
    else
      set KM09M100.XXXSTAT cursor, modified, bold;
      converseLib.validationFailed(307); /* company status is not 'a' or 'i'*/
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  end


   /* *************************************************/
    /* started business month must be 1-12 if present*/
   /* *************************************************/

  if (KM09M100.KM09MSBM != KM09W01.KM09WSBM
   || KM09M100.KM09MSBY != KM09W01.KM09WSBY)
    if (KM09M100.KM09MSBM > 0
    )
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* OR KM09M100.KM09MSBY GT 0;*/
  /* IF KM09M100.KM09MSBY GT 0;*/
  /* SET KM09M100.KM09MSBY DEFINED;*/
  /* ELSE;*/
  /* SET KM09M100.KM09MSBY CURSOR,MODIFIED,BRIGHT;*/
  /* MOVE 302 TO EZEMNO;         /* started business year required*/
  /* MOVE 'Y' TO KM09W01.KM09WERR;      /* set error flag*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
      set KM09M100.KM09MSBY initialAttributes;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

    end
    if (KM09M100.KM09MSBM >= 1
     && KM09M100.KM09MSBM <= 12)
      set KM09M100.KM09MSBM initialAttributes;
    else
      set KM09M100.KM09MSBM cursor, modified, bold;
      set KM09M100.KM09MSBY cursor, modified, bold;
      converseLib.validationFailed(303); /* started business month not 1-12*/
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  end

   /* *****************************************/
    /* edit Country Code*/
   /* *****************************************/

  if (KM09M100.XCTCD != KUCREC.XCTCD)
    if (KM09M100.XCTCD in XCTTBL.XCTCD)
      if (XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM09M100.XCTCD initialAttributes;
      else
        converseLib.validationFailed(71);
        KM09W01.KM09WERR = "Y"; /* set error flag*/
        set KM09M100.XCTCD cursor, modified, bold;
      end
    else
      converseLib.validationFailed(17);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.XCTCD cursor, modified, bold;
    end
  end

   /* ************************************************************/
   /* check credit status*/
   /* ************************************************************/

  if (KM09M100.XCCCD != KUCREC.XCCCD)
    if (KM09M100.XCCCD != " ")

      KM09W01.KM09W2CH = KM09M100.XCCCD;
      if (KM09W01.KM09W2CH in XCCTBL.XCCCD)

        if (XCCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM09M100.XCCCD initialAttributes;
        else
          converseLib.validationFailed(299); /* credit status code is inactive*/
          KM09W01.KM09WERR = "Y"; /* set error flag*/
          set KM09M100.XCCCD cursor, modified, bold;
        end

      else
        converseLib.validationFailed(300); /* credit status code is invalid*/
        KM09W01.KM09WERR = "Y"; /* set error flag*/
        set KM09M100.XCCCD cursor, modified, bold;
      end

    else
      converseLib.validationFailed(301); /* credit status code is required*/
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.XCCCD cursor, modified, bold;
    end
  end

   /* **********************************/
    /* check lock box code*/
   /* **********************************/

  if (KM09M100.XLBCD != KUCREC.XLBCD)
    if (KM09M100.XLBCD != " ")
      if (KM09M100.XLBCD in XLATBL.XLBCD)
        set KM09M100.XLBCD initialAttributes;
      else
        converseLib.validationFailed(17);
        KM09W01.KM09WERR = "Y"; /* set error flag*/
        set KM09M100.XLBCD cursor, modified, bold;
      end
    end
  end


   /* ******************************************************/
    /* check data distribution code*/
   /* ******************************************************/

  if (KM09M100.XDZ-DATA-DIST-CD != KUCREC.XDZ-DATA-DIST-CD)
    if (KM09M100.XDZ-DATA-DIST-CD != " ")
      if (KM09M100.XDZ-DATA-DIST-CD in XDZTBL.XDZ-DATA-DIST-CD)
        if (XDZTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM09M100.XDZ-DATA-DIST-CD initialAttributes;
        else
          converseLib.validationFailed(461); /* Data Dist Code is inactive*/
          set KM09M100.XDZ-DATA-DIST-CD cursor, modified, bold;
          KM09W01.KM09WERR = "Y"; /* set error flag*/
        end
      else
        converseLib.validationFailed(462); /* Data Dist is invalid*/
        set KM09M100.XDZ-DATA-DIST-CD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    else
      converseLib.validationFailed(463); /* Data Dist is required*/
      set KM09M100.XDZ-DATA-DIST-CD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  end


   /* **************************************/
    /* edit NIL Accounting Region*/
   /* **************************************/

  if (KM09M100.ZARCD != " ")
    if (KM09M100.ZARCD in ZARTBL.ZARCD)
      if (ZARTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM09M100.ZARCD initialAttributes;
      else
        converseLib.validationFailed(71);
        set KM09M100.ZARCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    else
      converseLib.validationFailed(17);
      set KM09M100.ZARCD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  else
    if (KUCREC.XAUCD in XAUTBL.XAUCD)
      if (XAUTBL.XATCD[sysVar.arrayIndex] == "03")
        converseLib.validationFailed(348); /* REGION REQUIRED*/
        set KM09M100.ZARCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    end
  end


   /* **************************************/
    /* edit NIL Sales Region*/
   /* **************************************/

  if (KM09M100.ZRGCD != " ")
    if (KM09M100.ZRGCD in ZRGTBL.ZRGCD)
      if (ZRGTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM09M100.ZRGCD initialAttributes;
      else
        converseLib.validationFailed(71);
        set KM09M100.ZRGCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    else
      converseLib.validationFailed(17);
      set KM09M100.ZRGCD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  else
    if (KUCREC.XAUCD in XAUTBL.XAUCD)
      if (XAUTBL.XATCD[sysVar.arrayIndex] == "03")
        converseLib.validationFailed(421); /* REGION REQUIRED*/
        set KM09M100.ZRGCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    end
  end


   /* *****************************/
   /* edit credit service rep code*/
   /* *****************************/

  if (KM09M100.XCUCD != KUCREC.XCUCD[1])
    if (KM09M100.XCUCD > " ")
      if (KM09M100.XCUCD in XCUTBL.XCUCD)
        if (XCUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          if (XCUTBL.XCURMGR[sysVar.arrayIndex] == "AA" /* C & A REP*/
           || XCUTBL.XCURMGR[sysVar.arrayIndex] == "JS70") /* Coll Rep*/
            converseLib.validationFailed(287); /* invalid code*/
            KM09W01.KM09WERR = "Y"; /* set error flag*/
            set KM09M100.XCUCD cursor, modified, bold;
          else
            set KM09M100.XCUCD initialAttributes;
          end
        else
          converseLib.validationFailed(288); /* inactive code*/
          KM09W01.KM09WERR = "Y"; /* set error flag*/
          set KM09M100.XCUCD cursor, modified, bold;
        end
      else
        converseLib.validationFailed(287); /* invalid code*/
        KM09W01.KM09WERR = "Y"; /* set error flag*/
        set KM09M100.XCUCD cursor, modified, bold;
      end
    else
      converseLib.validationFailed(289); /* required code*/
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.XCUCD cursor, modified, bold;
    end
  end

   /* ****************************************/
    /* check NIL Insurance Prepaid flag*/
   /* ****************************************/

  if (KM09M100.KUCINSPD != " ")
    if (KM09M100.KUCINSPD == "Y"
     || KM09M100.KUCINSPD == "N")
      set KM09M100.KUCINSPD initialAttributes;
    else
      converseLib.validationFailed(20);
      set KM09M100.KUCINSPD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  else /* set up default values*/
    if (KUCREC.XAUCD in XAUTBL.XAUCD)
      if (XAUTBL.XATCD[sysVar.arrayIndex] == "03")
        KM09M100.KUCINSPD = "Y";
        set KM09M100.KUCINSPD initialAttributes;
      else
        KM09M100.KUCINSPD = "N";
        set KM09M100.KUCINSPD initialAttributes;
      end
    else
      set KM09M100.KUCINSPD initialAttributes;
    end
  end

   /* *****************************************/
    /* edit NIL Foreign Language Code*/
   /* *****************************************/

  if (KM09M100.ZFLCD != " ")
    if (KM09M100.ZFLCD in ZFLTBL.ZFLCD)
      if (ZFLTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM09M100.ZFLCD initialAttributes;
      else
        converseLib.validationFailed(71);
        set KM09M100.ZFLCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    else
      converseLib.validationFailed(17);
      set KM09M100.ZFLCD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  else
    set KM09M100.ZFLCD initialAttributes;
  end

   /* ***********************************************************/
    /* check credit service reps - must be valid if entered*/
   /* ***********************************************************/

  if (KM09M100.XCECD != KUCREC.XCECD)
    if (KM09M100.XCECD > " ")
      if (KM09M100.XCECD in XCETBL.XCECD)
        if (XCETBL.XXXSTAT[sysVar.arrayIndex] == "A") /* status active?*/
          set KM09M100.XCECD initialAttributes;
        else
          converseLib.validationFailed(283); /* inactive code*/
          KM09W01.KM09WERR = "Y"; /* set error flag*/
          set KM09M100.XCECD cursor, modified, bold;
        end
      else
        converseLib.validationFailed(282); /* invalid code*/
        KM09W01.KM09WERR = "Y"; /* set error flag*/
        set KM09M100.XCECD cursor, modified, bold;
      end
    else
      converseLib.validationFailed(284); /* required code*/
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.XCECD cursor, modified, bold;
    end
  end

   /* ******************************************/
    /* check NIL Freight Prepaid flag*/
   /* ******************************************/

  if (KM09M100.KUCFRTPD != " ")
    if (KM09M100.KUCFRTPD == "Y"
     || KM09M100.KUCFRTPD == "N")
      set KM09M100.KUCFRTPD initialAttributes;
    else
      converseLib.validationFailed(20);
      set KM09M100.KUCFRTPD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  else
    KM09M100.KUCFRTPD = "N";
    set KM09M100.KUCFRTPD initialAttributes;
  end

   /* ****************************************/
    /* edit NIL Foreign Currency Code*/
   /* ****************************************/

  if (KM09M100.ZFCCD == " ")
    set KM09M100.ZFCCD initialAttributes;
  else
    KM09522(); /* select foreign currency code*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (KM09M100.ZFCCD == VZFC0001.ZFC-CRCY-CD)
        if (VZFC0001.XXX-STAT == "A")
          set KM09M100.ZFCCD initialAttributes;
        else
          converseLib.validationFailed(71);
          set KM09M100.ZFCCD cursor, modified, bold;
          KM09W01.KM09WERR = "Y"; /* set error flag*/
        end
      else
        converseLib.validationFailed(17);
        set KM09M100.ZFCCD cursor, modified, bold;
        KM09W01.KM09WERR = "Y"; /* set error flag*/
      end
    else
      converseLib.validationFailed(17);
      set KM09M100.ZFCCD cursor, modified, bold;
      KM09W01.KM09WERR = "Y"; /* set error flag*/
    end
  end

   /* ***************************************/
   /* *****     edit inv delay flag    ******/
   /* ***************************************/

  if (KM09M100.KUCIDIND != KUCREC.KUCIDIND)
    if (KM09M100.KUCIDIND != " ")
      if (KM09M100.KUCIDIND == "Y"
       || KM09M100.KUCIDIND == "N")
        set KM09M100.KUCIDIND initialAttributes;
      else
        converseLib.validationFailed(20);
        KM09W01.KM09WERR = "Y"; /* set error flag*/
        set KM09M100.KUCIDIND cursor, modified, bold;
      end
    else
      KM09M100.KUCIDIND = "N";
      set KM09M100.KUCIDIND initialAttributes;
    end
  end


   /* ***************************************/
   /* *****  edit print mult pro       ******/
   /* ***************************************/

  if (KM09M100.NL-PRT-MUL-PRO-FL != VDSTRB01.NL-PRT-MUL-PRO-FL
   || KM09M100.NL-PRT-MUL-PRO-FL == " ")
    if (KM09M100.NL-PRT-MUL-PRO-FL == "Y"
     || KM09M100.NL-PRT-MUL-PRO-FL == "N")
      set KM09M100.NL-PRT-MUL-PRO-FL initialAttributes;
    else
      converseLib.validationFailed(20);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-PRT-MUL-PRO-FL cursor, modified, bold;
    end
  end


   /* ***************************************/
   /* *****  edit print wieght         ******/
   /* ***************************************/

  if (KM09M100.NL-PRT-WT-PRO-FL != VDSTRB01.NL-PRT-WT-PRO-FL
   || KM09M100.NL-PRT-WT-PRO-FL == " ")
    if (KM09M100.NL-PRT-WT-PRO-FL == "Y"
     || KM09M100.NL-PRT-WT-PRO-FL == "N")
      set KM09M100.NL-PRT-WT-PRO-FL initialAttributes;
    else
      converseLib.validationFailed(20);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-PRT-WT-PRO-FL cursor, modified, bold;
    end
  end


   /* ***************************************/
   /* *****  edit print unit price     ******/
   /* ***************************************/

  if (KM09M100.NL-PRT-UNT-PRC-FL != VDSTRB01.NL-PRT-UNT-PRC-FL
   || KM09M100.NL-PRT-UNT-PRC-FL == " ")
    if (KM09M100.NL-PRT-UNT-PRC-FL == "Y"
     || KM09M100.NL-PRT-UNT-PRC-FL == "N")
      set KM09M100.NL-PRT-UNT-PRC-FL initialAttributes;
    else
      converseLib.validationFailed(20);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-PRT-UNT-PRC-FL cursor, modified, bold;
    end
  end


   /* ***************************************/
   /* *****  edit secure proforma      ******/
   /* ***************************************/

  if (KM09M100.NL-PRT-SECR-PRO-FL != VDSTRB01.NL-PRT-SECR-PRO-FL
   || KM09M100.NL-PRT-SECR-PRO-FL == " ")
    if (KM09M100.NL-PRT-SECR-PRO-FL == "Y"
     || KM09M100.NL-PRT-SECR-PRO-FL == "N")
      set KM09M100.NL-PRT-SECR-PRO-FL initialAttributes;
    else
      converseLib.validationFailed(20);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-PRT-SECR-PRO-FL cursor, modified, bold;
    end
  end


   /* ***************************************/
   /* *****  edit material content ind ******/
   /* ***************************************/

  if (KM09M100.NL-PRT-XMC-IND != VDSTRB01.NL-PRT-XMC-IND
   || KM09M100.NL-PRT-XMC-IND == " ")
    if (KM09M100.NL-PRT-XMC-IND == "1"
     || KM09M100.NL-PRT-XMC-IND == "2"
     || KM09M100.NL-PRT-XMC-IND == "3"
     || KM09M100.NL-PRT-XMC-IND == "4")
      set KM09M100.NL-PRT-XMC-IND initialAttributes;
    else
      converseLib.validationFailed(420);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-PRT-XMC-IND cursor, modified, bold;
    end
  end


   /* ***************************************/
   /* *****  edit cert of origin addr ind ***/
   /* ***************************************/

  if (KM09M100.NL-CRTF-ADDR-IND != VDSTRB01.NL-CRTF-ADDR-IND
   || KM09M100.NL-CRTF-ADDR-IND == " ")
    if (KM09M100.NL-CRTF-ADDR-IND == "S"
     || KM09M100.NL-CRTF-ADDR-IND == "B")
      set KM09M100.NL-CRTF-ADDR-IND initialAttributes;
    else
      converseLib.validationFailed(419);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-CRTF-ADDR-IND cursor, modified, bold;
    end
  end

   /* ***************************************/
   /* *****  edit distributor forcast ind ***/
   /* ***************************************/

  if (KM09M100.NL-DSTR-FCST-IND != VDSTRB01.NL-DSTR-FCST-IND
   || KM09M100.NL-DSTR-FCST-IND == " ")
    if (KM09M100.NL-DSTR-FCST-IND == "B"
     || KM09M100.NL-DSTR-FCST-IND == "N"
     || KM09M100.NL-DSTR-FCST-IND == "P"
     || KM09M100.NL-DSTR-FCST-IND == "T")
      set KM09M100.NL-DSTR-FCST-IND initialAttributes;
    else
      converseLib.validationFailed(418);
      KM09W01.KM09WERR = "Y"; /* set error flag*/
      set KM09M100.NL-DSTR-FCST-IND cursor, modified, bold;
    end
  end


end // end KM09520

Function KM09522()
   /* *************************************************/
   /* get foreign currency record  vzfc0001*/
   /* *************************************************/

  set SQLCA empty;
  set VZFC0001 empty;

  VZFC0001.ZFC-CRCY-CD = KM09M100.ZFCCD;

  call "DC0060" ("S ", SQLCA, VZFC0001) {isNoRefresh = yes, isExternal = yes}; /* read dcorp.vzfc0001*/
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
      /* NEXT SENTENCE*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCORP";
    TA1REC.TA1TBLVU = "VZFC0001";
    TA1REC.TA1MAP = " ";
    KM09W01.KM09WKEY = KUCREC.KUCCOID;
    TA1REC.TA1TBLKE = VZFC0001.ZFC-CRCY-CD;
    TA1REC.TA1PGMNM = "KM09522";
    TA1REC.TA1LOC = "READING DB2 VZFC0001";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KM09522

// edit names and parent
Function KM09530()

   /* *************************************************************/

   /* edit company name , phone, parent id and name*/
   /* *************************************************************/

  if (KM09M100.KUCCONM != KUCREC.KUCCONM
   || KM09M100.KUCCOANM != KUCREC.KUCCOANM
   || KM09M100.KUCGRPID != KUCREC.KUCGRPID
   || KM09M100.KUKPCOID != KUCREC.KUKPCOID)
    KM09W01.KM09WMD1 = "Y"; /* cmpny01 data modified flag*/
  else
    return; /* no change/no edit*/
  end

   /* *************************************/
     /* group company id - optional*/
   /* *************************************/

  if (KM09M100.KUCGRPID != KUCREC.KUCGRPID)
    set KM09M100.KUCGRPID initialAttributes;
    if (KM09M100.KUCGRPID > 0)
      if (KM09M100.KUCGRPID != KUCREC.KUCGRPID)
        KM09W04.KUCCOID = KM09M100.KUCGRPID;
        KM09600(); /* get company record to edit group*/
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        /* next sentence;*/
      else
        converseLib.validationFailed(325);
        KM09W01.KM09WERR = "Y";
        set KM09M100.KUCGRPID cursor, modified, bold;
      end
    end
  end


   /* *************************************/
    /* company name - required field*/
   /* *************************************/

  if (KM09M100.KUCCONM != KUCREC.KUCCONM)
    if (KM09M100.KUCCONM > " ")
      set KM09M100.KUCCONM initialAttributes;
    else
      converseLib.validationFailed(5);
      KM09W01.KM09WERR = "Y";
      set KM09M100.KUCCONM cursor, modified, bold;
    end
  end

   /* *****************************/
   /* company alt name - no edit*/
   /* *****************************/


   /* **********************/
    /* phone - no edit*/
   /* **********************/

   /* ********************************************************/
        /* check parent id*/
   /* ********************************************************/

  set KM09M100.KUKPCOID initialAttributes;
  if (KM09M100.KUKPCOID != KUCREC.KUKPCOID)

    if (KM09M100.KUKPCOID == 0)
      KM09M100.KUKPCONM = " "; /* decode name*/

    else
      KUKREC.KUKPCOID = KM09M100.KUKPCOID;
      KM09230(); /* read parent record*/
      if (SQLCA.VAGen_SQLCODE == 0) /* found*/
        KM09M100.KUKPCONM = KUKREC.KUKPCONM; /* decode name*/
      else
        converseLib.validationFailed(329);
        KM09W01.KM09WERR = "Y";
        set KM09M100.KUKPCOID cursor, modified, bold;
      end
    end
  end


end // end KM09530

// get company for group id
Function KM09600()
   /* *************************************************/
   /* get company record   km09w04 record*/
   /* *************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KM09W04) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ABND";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1REC.TA1MAP = " ";
    KM09W01.KM09WKEY = KUCREC.KUCCOID;
    TA1REC.TA1TBLKE = KM09W01.KM09WKEY;
    TA1REC.TA1PGMNM = "KM09600";
    TA1REC.TA1LOC = "READING DB2 CMPNY01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


end // end KM09600

//*** RECORD=KM09W01 ****
// this record contains work fields used entirely within km06.
// ***********************
Record KM09W01 type basicRecord
  10 KM09WUSR KM09WUSR ; 
    15 KM09WCNO KM09WCNO ; 
      20 KM09WCNO-CHAR KM09WCNO-CHAR ; 
    15 * char(8) ; 
  10 KM09WCID KM09WCID ; 
  10 KM09WKEY KM09WKEY ; 
  10 KM09WERR KM09WERR ; 
  10 KM09WMD1 KM09WMD1 ; 
  10 KM09WMD3 KM09WMD3 ; 
  10 KM09WCUS KM09WCUS ; 
  10 KM09WUPM KM09WUPM ; 
  10 KM09WEFL KM09WEFL ; 
  10 KM09W2CH KM09W2CH ; 
  10 KM09WBDT KM09WBDT ; 
    15 KM09WSBC KM09WSBC ; 
    15 KM09WSBY KM09WSBY ; 
    15 KM09WSBM KM09WSBM ; 
    15 KM09WSBD KM09WSBD ; 
  10 KM09WSQL KM09WSQL ; 
  10 XATCD XATCD ; 
end // end KM09W01

//*** RECORD=KM09W04 ****
// this is the csp working storage format company table.  the
// table contains data that is specific to the company level
// of the customer data base.
// 
// db2 table:        dcust.vcmpny01
// 
// dclgen:           dcl0021
// 
// i/o mod:          io0240
// 
// key to table:     kuccoid   -   cu-co-id
// 
// date created:     4/4/86
// 
// maintanence log:
//   who       when     why
// --------- --------  ---------------------------------------
// CHELLM    03/11/94  Database changes.
//                     Rnm: CU-MAX-YNT-CD to CU-MAX-FTWR-YNT-CD
//                     Add: CU-MAX-APRL-YNT-CD
//                          CU-CO-SELF-NBR, CU-VEND-NBR
//                          xxx-intl-phone-nbr
// ***********************
Record KM09W04 type basicRecord
  5 KUCGRP KUCGRP ; 
    10 KUCCOID KUCCOID ; 
    10 KUKPCOID KUKPCOID ; 
    10 KUCGRPID KUCGRPID ; 
    10 KUCCOIDN KUCCOIDN ; 
    10 KUCCONM KUCCONM ; 
    10 CU-CO-SHORT-NM CU-CO-SHORT-NM ; 
    10 KUCCOANM KUCCOANM ; 
    10 KUCCOAID KUCCOAID ; 
    10 KUCCCAID KUCCCAID ; 
    10 KUCBLAID KUCBLAID ; 
    10 KUCPHN KUCPHN ; 
    10 XLECD XLECD ; 
    10 XCTCD XCTCD ; 
    10 KUCCNTCT KUCCNTCT ; 
    10 KUCCOBDT KUCCOBDT ; 
    10 KUCFINDT KUCFINDT ; 
    10 KUCSSCNT KUCSSCNT ; 
    10 KUCNSCNT KUCNSCNT ; 
    10 KUCMSTID KUCMSTID ; 
    10 KUCMADID KUCMADID ; 
    10 XLGCD XLGCD ; 
    10 XCRCD XCRCD ; 
    10 XCUCD XCUCD [2] ; 
    10 XCECD XCECD ; 
    10 XAUCD XAUCD ; 
    10 YCH-CHNL-CLS-CD YCH-CHNL-CLS-CD ; 
    10 YCPCD YCPCD ; 
    10 KUCCOLCD KUCCOLCD ; 
    10 KUCBPIND KUCBPIND ; 
    10 KUCLBOFL KUCLBOFL ; 
    10 KUCIDIND KUCIDIND ; 
    10 XIECD XIECD ; 
    10 CU-PRT-XREF-FL CU-PRT-XREF-FL ; 
    10 XXXSTAT XXXSTAT ; 
    10 KUCATCSH KUCATCSH ; 
    10 KUCCSHNF KUCCSHNF ; 
    10 KUCPOFL KUCPOFL ; 
    10 KUCYPOFT KUCYPOFT ; 
    10 KUCYPOAP KUCYPOAP ; 
    10 KUCWHSFL KUCWHSFL ; 
    10 KUCVNDFL KUCVNDFL ; 
    10 KUCSTMT KUCSTMT ; 
    10 YVICD YVICD [3] ; 
    10 YLICD YLICD ; 
    10 KUCXCSFL KUCXCSFL ; 
    10 KUCINSPD KUCINSPD ; 
    10 KUCFRTPD KUCFRTPD ; 
    10 KUCALERT KUCALERT ; 
    10 KUCMAGCT KUCMAGCT ; 
    10 KUCCNSCD KUCCNSCD ; 
    10 KUCPSFL KUCPSFL ; 
    10 CU-CR-APPL-DT CU-CR-APPL-DT ; 
    10 KUCCRLEF KUCCRLEF ; 
    10 KUCCRLEX KUCCRLEX ; 
    10 KUCCRLIN KUCCRLIN ; 
    10 KUCASMT KUCASMT ; 
    10 XCCCD XCCCD ; 
    10 KUCCSTDT KUCCSTDT ; 
    10 XCACD XCACD ; 
    10 KUCACYNR KUCACYNR ; 
    10 KUCACYDT KUCACYDT ; 
    10 KUCAPDEX KUCAPDEX ; 
    10 KUCACYRT KUCACYRT ; 
    10 KUCPRVRT KUCPRVRT ; 
    10 KUCLVIND KUCLVIND ; 
    10 CU-LST-DAB-RPT-DT CU-LST-DAB-RPT-DT ; 
    10 KUCLCEDT KUCLCEDT ; 
    10 KUCLCXDT KUCLCXDT ; 
    10 KUCLCAMT KUCLCAMT ; 
    10 KUCJSRFL KUCJSRFL ; 
    10 KUCRAUTH KUCRAUTH ; 
    10 CU-BILL-IND CU-BILL-IND ; 
    10 CU-PO-DT-FL CU-PO-DT-FL ; 
    10 KUCECODY KUCECODY ; 
    10 KUCPDSPD KUCPDSPD ; 
    10 XLBCD XLBCD ; 
    10 CU-HANG-DFLT-FL CU-HANG-DFLT-FL ; 
    10 KUCSTYNT KUCSTYNT ; 
    10 CU-MAX-FTWR-YNT-CD CU-MAX-FTWR-YNT-CD ; 
    10 CU-MAX-APRL-YNT-CD CU-MAX-APRL-YNT-CD ; 
    10 YCU-CRTN-USE-CD YCU-CRTN-USE-CD ; 
    10 KUCUNTCS KUCUNTCS ; 
    10 CU-PL-STYNM-PRT-FL CU-PL-STYNM-PRT-FL ; 
    10 CU-DOC-BY-ORD-FL CU-DOC-BY-ORD-FL ; 
    10 KUCFTRTI KUCFTRTI ; 
    10 KUCPRPTI KUCPRPTI ; 
    10 XOPCD XOPCD [4] ; 
    10 KUCAPRDT KUCAPRDT ; 
    10 KUCFPRDT KUCFPRDT ; 
    10 KUCSBKFL KUCSBKFL ; 
    10 KUCCOMNT KUCCOMNT ; 
    10 KUCSKIND KUCSKIND ; 
    10 CU-CUSKU-SZ-FL CU-CUSKU-SZ-FL ; 
    10 CU-EDI-CUST-IND CU-EDI-CUST-IND ; 
    10 XDZ-DATA-DIST-CD XDZ-DATA-DIST-CD ; 
    10 CU-CO-SELF-NBR CU-CO-SELF-NBR ; 
    10 CU-VEND-NBR CU-VEND-NBR ; 
    10 XXX-INTL-PHONE-NBR XXX-INTL-PHONE-NBR ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end KM09W04

// 2 character work
DataItem KM09W2CH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work year/month/day
DataItem KM09WBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current id
DataItem KM09WCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KM09WCNO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KM09WCNO-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update all vcust rows
DataItem KM09WCUS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen updated flag
DataItem KM09WEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KM09WERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work key
DataItem KM09WKEY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vcmpny01 modified flag
DataItem KM09WMD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// vcomnt01 modified flag
DataItem KM09WMD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work century
DataItem KM09WSBC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM09WSBD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM09WSBM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM09WSBY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save area for sqlca/reset
DataItem KM09WSQL char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update/inquiry flag
DataItem KM09WUPM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reformat area for causera
DataItem KM09WUSR char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

