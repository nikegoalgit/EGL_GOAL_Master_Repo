package km0a;

import corpcom1.CAMSG;
import corpcom1.CATOAP;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.*;
//*** PROGRAM=KM0A ****
// ;***********************************************************
// ;*         Menu for Customer Address Maintenance
// ;*
// ;*   the options available from this menu are:
// ;*
// ;*             1. address inquiry (km0b)
// ;*             2. view a particualr address (km0e)
// ;*             3. change/add an address id (km0f)
// ;*             4. change address id (km0g)
// ;*             5. change parent address (km0h)
// ;*             6. address association (km0i)
// ;*
// ;*   branching to the selected application is done in
// ;*         km0as01.
// ;*   pfkeys are handled by km0as70 and km0as72.
// ;*   fast-path option is handled by km0as71
// ;*
// ;*----------------------------------------------------------
// ;*                maintenance log
// ;*   date     init            comments
// ;*----------------------------------------------------------
// ;* 01/28/88   clt    added km0i - address association
// ;* 11/16/88   jbw    checked for adding noncsp opt to calls
// ;* 11/16/88   jbw    added xssegtr logic
// ;* 05/16/91   dsalzw changed pf3 to use from appl
// ;* 10/01/93   CHELLM Conversion to CSP 4.1
// ;***********************************************************
// *********************
Program KM0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KM0AW01 KM0AW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KM0AM.KM0AM000 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KM0A000: KM0A000();
    goto KM0A010;
    KM0A010: KM0A010();

    goto KM0A010;

  end // end main
end // end KM0A

// km0a initialization
Function KM0A000()

  XSENTRY(); /* check if entered properly*/

  XSSEGTR(); /* 11/88 jw - set segmented trans id*/

  set KM0AW01 empty;


  KM0AS00(); /* handle fast-path entry*/

  if (COMMAREA.CAFROMAP == "KM0B"
   || COMMAREA.CAFROMAP == "KM0E"
   || COMMAREA.CAFROMAP == "KM0F"
   || COMMAREA.CAFROMAP == "KM0G"
   || COMMAREA.CAFROMAP == "KM0H"
   || COMMAREA.CAFROMAP == "KM0I")
    exit stack;
  end

  COMMAREA.CAUSERA = COMMAREA.CAFROMAP;

end // end KM0A000

// credit menu
Function KM0A010()

   /* initialize the screen variables*/


  if (converseVar.validationMsgNum == 0 /* if there are no errors*/
   && COMMAREA.CASECRC == 0)            /* outstanding*/
    set KM0AM000 initial; /* then clear the screen*/
  else
    if (COMMAREA.CASECRC != 0) /* if an xsexit failed*/
      KM0AM000.CAMSG = COMMAREA.CAMSG; /* move the message*/
      set KM0AM000 alarm;
    else
      set KM0AM000 alarm;
    end
  end


  KM0AM000.XXXSCRDT = VGVar.currentShortGregorianDate;


  converse KM0AM000 ;


  KM0AM000.CAMSG = " ";
  KM0AM000.VAGen_EZEMSG = " ";
  COMMAREA.CASECRC = 0;


  KM0AS70(); /* handle special entry (fast-path, pf-keys)*/


  if (converseVar.validationMsgNum == 0
   && COMMAREA.CASECRC == 0)
    KM0AS05(); /* edit screen entry*/
  end


  exit stack;


end // end KM0A010

// handle fast-path entry to km0a
Function KM0AS00()
   /* ************************************************************/
   /* *   handle fast-path entry into km0a...commarea.caitem*/
   /* *   contains the option for this screen plus, optionally,*/
   /* *data to pass on to the next application.*/
   /* *   the 1st letter of commarea.caitem is moved to the*/
   /* *   option field of km0am000.  this allows the regular*/
   /* *km0am000 edit to control the branching.*/
   /* *if there is data present to pass on to the next appl-*/
   /* *   ication, it is moved letter by letter to the front*/
   /* *   of the caitem field (removing the km0am000 option).*/
   /* *the presence of data to pass is indicated by a period*/
   /* *   (.) as the 2nd character of the caitem field.*/
   /* *   so, if we were fast-pathing thru this application on*/
   /* *our way to km0b, and we wanted to pass customer 185*/
   /* *   to km0b, the commarea.caitem will look like this:*/
   /* *when it gets here:     "1.0000185"*/
   /* *when it leaves here:   "0000185"*/
   /* **/
   /* **/
   /* **/
   /* **/
   /* ************************************************************/
  if (COMMAREA.CAITEM != " ") /* if there is data present*/
    KM0AM000.XXXSCROP = COMMAREA.CAITMLTR[1]; /* set up screen option*/
    if (COMMAREA.CAITMLTR[2] == ".") /* if data to pass*/
      KM0AW01.KM0AWIN1 = 3; /* move data to the*/
      KM0AW01.KM0AWIN2 = 1; /* front of the caitem*/
      while (KM0AW01.KM0AWIN1 < 21 /* field*/
       && COMMAREA.CAITMLTR[KM0AWIN1] != " ")
        COMMAREA.CAITMLTR[KM0AWIN2] = COMMAREA.CAITMLTR[KM0AWIN1];
        KM0AW01.KM0AWIN1 = KM0AW01.KM0AWIN1 + 1;
        KM0AW01.KM0AWIN2 = KM0AW01.KM0AWIN2 + 1;
      end
      while (KM0AW01.KM0AWIN1 >= KM0AW01.KM0AWIN2) /* and blank out*/
        COMMAREA.CAITMLTR[KM0AWIN2] = " "; /* any characters remaing*/
        KM0AW01.KM0AWIN2 = KM0AW01.KM0AWIN2 + 1; /* at the end of caitem*/
      end /* after the move*/
    else
      COMMAREA.CAITEM = " "; /* no passed data; clear caitem*/
    end
    KM0AS05(); /* validate the fast-path option(s)*/
    exit stack; /* there was an error...go display message*/
  end
end // end KM0AS00

// edit entry
Function KM0AS05()
   /* ************************************************************/
   /* *   validate that the option is valid and branch*/
   /* *   to the chosen application.*/
   /* *   if the option is not valid, show error.*/
   /* **/
   /* *   note that, in the event xsexit fails, the error message*/
   /* *   is not moved to the screen until the before stage of*/
   /* *   km0a010.*/
   /* **/
   /* **/
   /* **/
   /* ************************************************************/


  set KM0AM000.XXXSCROP normal;
  set KM0AM000.CATOAP normal;


  if (KM0AM000.XXXSCROP == "1")
    COMMAREA.CATOAP = "KM0B";
    XSEXIT();
  else
    if (KM0AM000.XXXSCROP == "2")
      COMMAREA.CATOAP = "KM0E";
      XSEXIT();
    else
      if (KM0AM000.XXXSCROP == "3")
        COMMAREA.CATOAP = "KM0F";
        XSEXIT();
      else
        if (KM0AM000.XXXSCROP == "4")
          COMMAREA.CATOAP = "KM0G";
          XSEXIT();
        else
          if (KM0AM000.XXXSCROP == "5")
            COMMAREA.CATOAP = "KM0H";
            XSEXIT();
          else
            if (KM0AM000.XXXSCROP == "6")
              COMMAREA.CATOAP = "KM0I";
              XSEXIT();
            else
              set KM0AM000.XXXSCROP cursor, bold;
              converseLib.validationFailed(115);
              exit stack;
            end
          end
        end
      end
    end
  end
   /* **/
   /* *   we should only get to this point if something is wrong*/
   /* *   either;  1. xsexit failed in which case commarea.casecrc*/
   /* *                   will not be equal 0*/
   /* *        or  2. the selected option was invalid.*/
   /* **/
   /* **/
  if (COMMAREA.CASECRC != 0) /* xsexit failed*/
    set KM0AM000.XXXSCROP cursor, bold;
  end


  exit stack;

end // end KM0AS05

// handle any special entries
Function KM0AS70()
   /* ************************************************************/
   /* *    handle entry of fast-path option and/or entry of any*/
   /* *    pf/pa key.*/
   /* **/
   /* **/
   /* **/
   /* **/
   /* **/
   /* **/
   /* **/
   /* **/
   /* ************************************************************/


  KM0AW01.CATOAP = KM0AM000.CATOAP;

  if (converseVar.eventKey is enter)
    if (KM0AW01.CATOAP != " ")
      KM0AS71(); /* handle fast-path option entry*/
    else
      return; /* no special functions...go back*/
    end
  else /* something other that 'enter' was pressed*/
    if (converseVar.eventKey is pa2) /* for pa2 all we want to do is*/
      COMMAREA.CATOAP = "KM0A"; /* clear the screen by re-entering*/
      XSEXIT(); /* the application*/
    else
      if (KM0AW01.CATOAP != " ") /* must be blank to use pf-key*/
        converseLib.validationFailed(29); /* can't use fast-path and pf-key*/
        set KM0AM000.CATOAP cursor, bold;
      else
        KM0AS72(); /* handle pf key entry*/
      end
    end
  end



end // end KM0AS70

// handle fast-path option entry
Function KM0AS71()
   /* ************************************************************/
   /* *   we got here because 'enter' was pressed and there*/
   /* *   was an entry in the screen's fast-path option field.*/
   /* *   we try to branch to the application...if unsuccessful,*/
   /* *   set the screen's catoap field to bright.  note that*/
   /* *   the message returned by the menu system will be moved*/
   /* *   to the screen in the before-stage of km0a010.*/
   /* **/
   /* **/
   /* **/
   /* **/
   /* ************************************************************/


  if (KM0AM000.CATOAP != " ")
    COMMAREA.CATOAP = KM0AM000.CATOAP;
    COMMAREA.CAITEM = KM0AM000.CAITEM;
    XSEXIT(); /* transfer to requested appl.*/
    set KM0AM000.CATOAP cursor, bold;
    exit stack;
  end

end // end KM0AS71

// handle any pf key entry
Function KM0AS72()


  if (converseVar.eventKey is pf3)
    KM0AS73();
  end
  if (converseVar.eventKey is pf4)
    XSPF4();
  end
  if (converseVar.eventKey is pf5)
    KM0AS75();
  end
  if (converseVar.eventKey is pf1)
    XSPF1();
  end


  if (COMMAREA.CASECRC == 0)
    converseLib.validationFailed(3); /* pfkey not supported*/
  end


  exit stack;

end // end KM0AS72

// handle pf3 key
Function KM0AS73()
   /* ************************************************************/
   /* *   For this application, pf3 takes you back to*/
   /* *   the prior menu.*/
   /* **/
   /* ************************************************************/

  COMMAREA.CATOAP = COMMAREA.CAUSERA; /* move prior program*/
  COMMAREA.CAUSERA = " ";
  COMMAREA.CATOAP = COMMAREA.CAFROMAP;

  XSEXIT(); /* and go to the customer maint. menu*/

  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  KM0AM000.CAMSG = COMMAREA.CAMSG;
  exit stack;

end // end KM0AS73

// handle pf5 entry
Function KM0AS75()
   /* ************************************************************/
   /* *   For this application, pf5 takes you back to*/
   /* *   the Customer Main Menu (ku0m).*/
   /* **/
   /* ************************************************************/

  COMMAREA.CATOAP = "KU0M"; /* set up the commarea to-application*/
  XSEXIT(); /* and go to the customer main menu*/

end // end KM0AS75

Record KM0AW01 type basicRecord
  5 KM0AWREC KM0AWREC ; 
    10 KM0AWGRP KM0AWGRP ; 
    10 CAMSG CAMSG ; 
    10 KM0AWIN1 KM0AWIN1 ; 
    10 KM0AWIN2 KM0AWIN2 ; 
    10 CATOAP CATOAP ; 
end // end KM0AW01

// statement group name
DataItem KM0AWGRP char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index
DataItem KM0AWIN1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem KM0AWIN2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// km0a working storage
DataItem KM0AWREC char(97)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

