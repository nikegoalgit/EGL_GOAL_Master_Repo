package km0y;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom6.SQLCA;
import corpx2.XSOCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import ku.common.KUCCOID;
import ku.common.KUCREC;
import ta.common.TA1REC;
//*** PROGRAM=KM0Y ****
// 06/26/96 - kclar1 - created to provide online access to the
//            DCUST.VEDITP01 Table
// 09/18/96 - kclar1 - expand  array to 300
// 09/18/96 - kclar1 - expand  array to 400
// 02/05/97 - kclar1 - put 0 in the cu_edi_notcfmt_ind
// *********************
Program KM0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KM0YW01 KM0YW01; // record
  KM0YW04 KM0YW04; // record
  KUCREC KUCREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  VEDITP01 VEDITP01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KM0YM.KM0YM100 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KM0Y-INIT: KM0Y-INIT();
  end // end main
end // end KM0Y

// enter
Function KM0Y-ENTER()

  KM0YW01.KM0YWIDX = 1;
  KM0YW01.KM0YWERR = "N"; /* set flags*/
  KM0YW01.KM0YW-UPDT = "N";
  if (KM0YW-PAGE-INDEX == 0)
    KM0YW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move KM0YW-PAGE-INDEX to KM0YW-CNT withV60Compat;
  while (KM0YW01.KM0YWIDX <= 12)
    if (KM0YM100.KM0YMSEL[KM0YWIDX] == "X" || 
    KM0YM100.KM0YMSEL[KM0YWIDX] == " ")
      /* next sentence*/
    else
      if (KM0YM100.KM0YMSEL[KM0YWIDX] == "A")
        KM0YW-MAX = KM0YW-MAX + 1;
        KM0YW04-CU-CO-ID[KM0YW-CNT] = KM0YM100.CU-CO-ID[KM0YWIDX];
        KM0YW04-CU-EDI-TRADPT-ID[KM0YW-CNT] = KM0YM100.EDI-TRADPT-ID[KM0YWIDX];
      end
      KM0YS-EDITP-SEL();
      KM0YS-VALID-SCRN(); /* verify screen input*/
      if (KM0YW01.KM0YWERR == "Y")
        KM0YWIDX = 12;
        KM0YW-UPDT = "N";
      else
        KM0YW-UPDT = "Y";
      end
    end
    KM0YW-CNT = KM0YW-CNT + 1; /* add 1 to count*/
    KM0YW01.KM0YWIDX = KM0YW01.KM0YWIDX + 1;
  end

end // end KM0Y-ENTER

// main process
Function KM0Y-INIT()
   /* **************************************************/
   /* ***  km0y initialization process*/
   /* **************************************************/

  XSENTRY();

  XSSEGTR(); /* set segmented trans id*/

  set KM0YM100 initial; /* clear map*/
  set KM0YW01 empty; /* work record*/
  set KM0YW04 empty; /* work record*/
  set KUCREC empty; /* company table*/
  set SQLCA empty; /* sqlcode table*/
  set TA1REC empty; /* ta1 table*/
  set VEDITP01 empty; /* edi trading partner table*/

  if (COMMAREA.CACHGFL != "Y"
   && COMMAREA.CAINQFL != "Y")
    XSPF4();
  end

  KM0YW01.KM0YWKEY = COMMAREA.CAUSERA;
  if (COMMAREA.CAITEM != " ")
    KM0YW01.KM0YWKEY = COMMAREA.CAITEM;
  end

  if (KM0YW01.KM0YWCID-CHAR is numeric)
    if (KM0YW01.KM0YWCID == 0)
      KM0YW01.KM0YWKEY = COMMAREA.CAUSERA;
    end
  end

  if (KM0YW01.KM0YWCID-CHAR is numeric
   && KM0YW01.KM0YWCID > 0)
    KM0YM100.KUCCOID = KM0YW01.KM0YWCID;
    KUCREC.KUCCOID = KM0YW01.KM0YWCID;
    KM0YW-KUCCOID = KM0YW01.KM0YWCID;
    KM0YW-CU-EDI-TRADPT-ID = " ";
    KM0YM100.CU-EDI-TRADPT-ID = " ";
    KM0YS-GET-CO-NM(); /* get co name*/
    KM0YM100.KUCCONM = KUCREC.KUCCONM;
    KM0YW-KUCCONM = KUCREC.KUCCONM;
    if (VAGen_SQLCODE == 100)
      KM0YM100.KUCCONM = " ";
      KM0YW-KUCCONM = " ";
    end
    if (VAGen_SQLCODE == 0)
      VEDITP01.KUCCOID = KUCREC.KUCCOID;
      KM0YS-GET-EDI-CO(); /* get edi trad partner using co num*/
      KM0YS-LD-WRK-STO();
      KM0YW-CNT = 1;
      KM0YW-PAGE-INDEX = 1;
      KM0YS-DSPLY-SCRN();
      KM0YW-PAGE-CNT = 1;
      set KM0YM100.KM0YMSEL[1] cursor;
    end
  end

  COMMAREA.CAITEM = " ";
  COMMAREA.CAUSERA = " ";

  if (KM0YM100.KUCCOID > 0)
    KM0YW01.KM0YWFST = "Y";
  end

  KM0YM100.KM0YMDT = VGVar.currentShortGregorianDate;
  KM0YW01.KM0YWHDT = VGVar.currentShortGregorianDate;
  KM0YW01.KM0YWCCT = 19;
  if (KM0YW01.KM0YWCYR < 60)
    KM0YW01.KM0YWCCT = 20;
  end

  converseVar.commitOnConverse = 1;
  VGVar.handleHardIOErrors = 1;
  KM0YW01.KM0YWEAF = "Y";
  KM0YW01.KM0YWERR = "N";

  while (KM0YW01.KM0YWEAF == "Y")
    KM0Y-MAIN();
  end

  COMMAREA.CATOAP = COMMAREA.CAFROMAP;
  XSEXIT();

end // end KM0Y-INIT

// trading partner update
Function KM0Y-MAIN()

  if (KM0YW01.KM0YWFST == "Y")
    KM0YW01.KM0YWFST = "N";
  end

  KM0YW-PAGE-CHG = "N"; /* SET FLAG TO NO*/

   /* set map*/

  KM0YW01.KM0YWIDX = 1; /* set index to 1*/
  while (KM0YWIDX <= 12 && KM0YWERR == "N")
    set KM0YM100.KM0YMSEL[KM0YWIDX] skip;
    set KM0YM100.EDI-TRADPT-ID[KM0YWIDX] skip;
    set KM0YM100.CU-CO-ID[KM0YWIDX] skip;
    set KM0YM100.EDI-ASN-IND[KM0YWIDX] skip;
    set KM0YM100.EDI-IVC-IND[KM0YWIDX] skip;
    set KM0YM100.EDI-PO-IND[KM0YWIDX] skip;
    if (COMMAREA.CACHGFL == "Y") /* edi users*/
      if (KM0YM100.KM0YMSEL[KM0YWIDX] == " ")
        set KM0YM100.KM0YMSEL[KM0YWIDX] initialAttributes;
      else
        set KM0YM100.KM0YMSEL[KM0YWIDX] skip;
      end
      if (KM0YM100.CU-CO-ID[KM0YWIDX] == 0)
        set KM0YM100.EDI-TRADPT-ID[KM0YWIDX] initialAttributes;
        set KM0YM100.CU-CO-ID[KM0YWIDX] initialAttributes;
        set KM0YM100.EDI-TRADPT-ID[KM0YWIDX] initialAttributes;
        set KM0YM100.EDI-ASN-IND[KM0YWIDX] initialAttributes;
        set KM0YM100.EDI-IVC-IND[KM0YWIDX] initialAttributes;
        set KM0YM100.EDI-PO-IND[KM0YWIDX] initialAttributes;
      end
      if (KM0YM100.CU-CO-ID[KM0YWIDX] > 0)
        set KM0YM100.EDI-ASN-IND[KM0YWIDX] initialAttributes;
        set KM0YM100.EDI-IVC-IND[KM0YWIDX] initialAttributes;
        set KM0YM100.EDI-PO-IND[KM0YWIDX] initialAttributes;
      end
    end
    KM0YWIDX = KM0YWIDX + 1;
  end

  if (COMMAREA.CACHGFL != "Y") /* exclude non edi users*/
    set KM0YM100.KUCCOID cursor;
  end

  if (KM0YW01.KM0YWERR == "N" && KM0YW-UPDT == "Y") /* update message*/
    set KM0YM100.KUCCOID cursor;
    converseLib.validationFailed(467);
  end

  converse KM0YM100 ;

  KM0YW-SQLCODE = 0;
  KM0YM100.KM0YMMSG = " ";
  KM0YWIDX = 1;
  KM0YM100.KM0YMMSG = KM0YW01.KM0YWMSG;
  KM0YW01.KM0YWMSG = " ";

  if (KM0YM100.KUCCOID is modified && KM0YM100.KUCCOID == 0)
    KM0YM100.KUCCONM = " ";
    KM0YW-KUCCONM = " ";
  end

  if ((KM0YM100.KUCCOID is modified /* co id modified*/
   && KM0YM100.KUCCOID > 0) ||      
  (KM0YM100.CU-EDI-TRADPT-ID is modified && 
  KM0YM100.CU-EDI-TRADPT-ID > " ") || converseVar.eventKey is pa2)
    KM0YW-KUCCOID = KM0YM100.KUCCOID; /* move info to work rec*/
    KM0YW-CU-EDI-TRADPT-ID = KM0YM100.CU-EDI-TRADPT-ID;
    if ((KM0YM100.KUCCOID is modified && KM0YW-KUCCOID > 0) || 
    (KM0YM100.KUCCOID > 0 && converseVar.eventKey is pa2))
      KM0YM100.KUCCOID = KM0YW-KUCCOID; /* move info to map*/
      KUCREC.KUCCOID = KM0YW-KUCCOID;
      KM0YW-CU-EDI-TRADPT-ID = " ";
      KM0YM100.CU-EDI-TRADPT-ID = " ";
      KM0YS-GET-CO-NM(); /* get co name*/
      KM0YM100.KUCCONM = KUCREC.KUCCONM;
      KM0YW-KUCCONM = KUCREC.KUCCONM;
      if (VAGen_SQLCODE == 100) /* company not on table*/
        if (KM0YM100.KUCCOID > 0)
          KM0YM100.KUCCONM = " ";
          KM0YW-KUCCONM = " ";
        end
      else
        KM0YM100.KUCCONM = KUCREC.KUCCONM;
        KM0YW-KUCCONM = KUCREC.KUCCONM;
      end
      VEDITP01.KUCCOID = KUCREC.KUCCOID;
      KM0YS-GET-EDI-CO(); /* get info via company*/
    end
    if ((KM0YM100.CU-EDI-TRADPT-ID is modified
     && KM0YW-CU-EDI-TRADPT-ID != " ") || 
    (KM0YW-CU-EDI-TRADPT-ID != " " && converseVar.eventKey is pa2))
      KM0YM100.CU-EDI-TRADPT-ID = KM0YW-CU-EDI-TRADPT-ID;
      move KM0YW-CU-EDI-TRADPT-ID to KM0YW-CU-EDI-TRADPT-ID-QUERY withV60Compat;
      KM0YWIDX = 1; /* set index to one*/
      while (KM0YWIDX <= 15) /* scan trading partner for spaces*/
        if (KM0YW-CU-EDI-TRADPT-ID-ITEM[KM0YWIDX] == " ")
          KM0YW-CU-EDI-TRADPT-ID-ITEM[KM0YWIDX] = "_";
        end
        KM0YWIDX = KM0YWIDX + 1;
      end
      VEDITP01.CU-EDI-TRADPT-ID = KM0YW-CU-EDI-TRADPT-ID-QUERY;
      KM0YW-KUCCOID = 0;
      KM0YW-KUCCONM = " ";
      KM0YS-GET-EDI-TP(); /* get info via trading partner*/
    end
    set KM0YM100 initial; /* clear map*/
    set KM0YW04 empty; /* empty working storage*/
    KM0YS-LD-WRK-STO(); /* load working storage*/
    KM0YW-CNT = 1;
    KM0YW-PAGE-INDEX = 1;
    KM0YS-DSPLY-SCRN(); /* load screen*/
    KM0YM-PAGE-CNT = 1;
    set KM0YM100.KM0YMSEL[1] cursor;
    return;
  end

  KM0YW01.KM0YWCID = KM0YM100.KUCCOID;
  COMMAREA.CATOAP = KM0YM100.CATOAP;
  COMMAREA.CAITEM = KM0YM100.CAITEM;

  KM0YS-FPATH-PFK(); /* check fastpath and pf keys*/


  if (converseVar.eventKey is pf8) /* scroll forward*/
    KM0Y-PF8();
    return;
  end

  if (converseVar.eventKey is pf7) /* scroll backward*/
    KM0Y-PF7();
    return;
  end

  if (converseVar.eventKey is enter && 
  KM0YM100.KM0YM-PAGE-CNT is modified) /* set page if entered*/
    move KM0YM-PAGE-CNT to KM0YW-PAGE-CNT withV60Compat;
    if (KM0YW-PAGE-CNT > KM0YW-PAGE-TOT)
      KM0YWERR = "Y";
      KM0YMMSG = "PAGE NUMBER MUST BE LESS THAN TOTAL";
      set KM0YM100.KM0YM-PAGE-CNT cursor, bold;
      return;
    else
      move KM0YM-PAGE-CNT to KM0YW-PAGE-CNT withV60Compat;
      KM0YW-PAGE-CNT = KM0YW-PAGE-CNT - 1;
      if (KM0YW-PAGE-CNT == 0)
        KM0YW-PAGE-INDEX = 1;
      else
        KM0YW-PAGE-INDEX = (KM0YW-PAGE-CNT * 12) + 1;
      end
      KM0YS-DSPLY-SCRN();
      KM0YW-PAGE-CHG = "Y"; /* set page if entered*/
    end
  end

  if (converseVar.eventKey is enter && 
  COMMAREA.CACHGFL == "Y") /* only edi users*/
    if ((KM0YM100.KUCCOID is modified ||       /* IF CO ID IS CHANGED and*/
    KM0YM100.CU-EDI-TRADPT-ID is modified) ||  /* TRAD ID DO NOT EDIT*/
    KM0YW-PAGE-CHG == "Y")                     /* set page if entered*/
      /* skip update*/
    else
      KM0Y-ENTER();
    end
  end

  if (converseVar.eventKey is pf12 && KM0YW01.KM0YWERR == "N"
   && KM0YW-UPDT == "Y" && 
  COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* get chng date and time*/
    KM0YW01.KM0YW-CNT = 1;
    while (KM0YW01.KM0YW-CNT <= 400) /* update info to database*/
      if (KM0YW04-SEL[KM0YW-CNT] == "A")
        KM0YS-EDITP-ADD();
      end
      if (KM0YW04-SEL[KM0YW-CNT] == "C")
        KM0YS-EDITP-CHNG();
      end
      if (KM0YW04-SEL[KM0YW-CNT] == "D")
        KM0YS-EDITP-DEL();
      end
      if (KM0YW04-SEL[KM0YW-CNT] != " ")
        KM0YW04-SEL[KM0YW-CNT] = "X";
      end
      KM0YW01.KM0YW-CNT = KM0YW01.KM0YW-CNT + 1;
    end
    if (KM0YW01.KM0YWERR == "N")
      KM0YW-UPDT = "N"; /* set update flag to n*/
      converseLib.validationFailed(29); /* record updated message*/
      KM0YS-DSPLY-SCRN(); /* load screen*/
      set KM0YM100.KUCCOID cursor;
      return;
    end
  end

   /* ***   nothing entered in any field*/
  if ((KM0YM100.KUCCOID is modified || 
  KM0YM100.CU-EDI-TRADPT-ID is modified) && 
  KM0YM100.KUCCOID == 0 && KM0YM100.CU-EDI-TRADPT-ID == " "
   && (KM0YM100.KM0YMSEL[1] == " " || KM0YM100.KM0YMSEL[1] == "X"))
    KM0YW-KUCCOID = 0;
    KM0YW-CU-EDI-TRADPT-ID = " ";
    set KM0YM100 initial; /* clear map*/
    set KM0YW04 empty; /* empty work work records*/
    converseLib.validationFailed(5); /* enter co id or trd partner*/
    set KM0YM100.KUCCOID cursor;
    return;
  end

  if (converseVar.eventKey is pa2 && 
  KM0YM100.KUCCOID == 0 && KM0YM100.CU-EDI-TRADPT-ID == " ")
    set KM0YM100 initial; /* clear map*/
    set KM0YW04 empty; /* load working storage*/
    KM0YW-CNT = 1;
    KM0YW-PAGE-INDEX = 1;
    KM0YS-DSPLY-SCRN(); /* load screen*/
    KM0YM-PAGE-CNT = 1;
    set KM0YM100.KUCCOID cursor;
    return;
  end

end // end KM0Y-MAIN

// page back - pf7
Function KM0Y-PF7()
   /* **************************************/
   /* page back - pf7 for scrolling**/
   /* **************************************/

  KM0YWIDX = 1;

  move KM0YW-PAGE-INDEX to KM0YW-CNT withV60Compat;
  while (KM0YWIDX <= 12 && KM0YW-CNT <= 400)
    KM0YW04-SEL[KM0YW-CNT] = KM0YM100.KM0YMSEL[KM0YWIDX];
    KM0YS-EDITP-SEL();
    KM0YS-VALID-SCRN();
    if (KM0YM100.KM0YMSEL[KM0YWIDX] == " " && 
    (KM0YM100.EDI-TRADPT-ID[KM0YWIDX] == " " || 
    KM0YM100.CU-CO-ID[KM0YWIDX] == " "))
      KM0YW-CNT = 401; /* end loop if no more rows*/
      KM0YWIDX = 13;
    end
    KM0YW-CNT = KM0YW-CNT + 1;
    KM0YWIDX = KM0YWIDX + 1;
  end

  KM0YW01.KM0YW-PAGE-INDEX = KM0YW01.KM0YW-PAGE-INDEX - 12;
  if (KM0YW01.KM0YW-PAGE-INDEX < 1) /* set internal top of page*/
    KM0YW-PAGE-INDEX = 1;
  end

  KM0YW01.KM0YW-PAGE-CNT = KM0YW01.KM0YW-PAGE-CNT - 1; /* page counter*/
  KM0YM100.KM0YM-PAGE-CNT = KM0YW01.KM0YW-PAGE-CNT;
  KM0YS-DSPLY-SCRN(); /* move wk sto to screen*/

  if (KM0YW-PAGE-INDEX == 1)
    converseLib.validationFailed(208);
  end

end // end KM0Y-PF7

// page forward for trd prtnr
Function KM0Y-PF8()
   /* *********************************************************/
   /* * km0y-page-frwrd pf8 to display trading partner info*/
   /* *********************************************************/

  if (KM0YW01.KM0YW-CNT > 1)
    KM0YW01.KM0YW-PAGE-CNT = KM0YW01.KM0YW-PAGE-CNT - 1;
    KM0YM100.KM0YM-PAGE-CNT = KM0YW01.KM0YW-PAGE-CNT;
    move KM0YW-PAGE-INDEX to KM0YW-CNT withV60Compat;
    KM0YWIDX = 1;
    while (KM0YWIDX <= 12 && KM0YW-CNT <= 400)
      KM0YS-EDITP-SEL();
      KM0YS-VALID-SCRN();
      KM0YWIDX = KM0YWIDX + 1;
      KM0YW-CNT = KM0YW-CNT + 1;
    end
    KM0YW-PAGE-INDEX = KM0YW-PAGE-INDEX + 12;
    if (KM0YW-PAGE-INDEX > KM0YW-MAX)
      KM0YW-PAGE-INDEX = KM0YW-PAGE-INDEX - 12;
    end
    KM0YS-DSPLY-SCRN(); /* move trading part info to scrn*/
  end

end // end KM0Y-PF8

// display screen
Function KM0YS-DSPLY-SCRN()
  set KM0YM100 initial; /* clear  map*/

  KM0YM100.KUCCOID = KM0YW-KUCCOID;
  KM0YM100.KUCCONM = KM0YW-KUCCONM;
  KM0YM100.CU-EDI-TRADPT-ID = KM0YW-CU-EDI-TRADPT-ID;
  KM0YM100.KM0YMDT = VGVar.currentShortGregorianDate;

  if (KM0YW-PAGE-INDEX == 0)
    KM0YW-PAGE-INDEX = 1;
  end

  if (KM0YW-MAX == 0)
    KM0YW-MAX = 12;
  end

  KM0YWIDX = 1;
  move KM0YW-PAGE-INDEX to KM0YW-CNT withV60Compat;

  while (KM0YWIDX <= 12 && KM0YW-CNT <= KM0YW-MAX)
    KM0YM100.KM0YMSEL[KM0YWIDX] = KM0YW04-SEL[KM0YW-CNT];
    KM0YM100.CU-CO-ID[KM0YWIDX] = KM0YW04-CU-CO-ID[KM0YW-CNT];
    KM0YM100.CU-CO-SHORT-NM[KM0YWIDX] = KM0YW04-CU-CO-SHORT-NM[KM0YW-CNT];
    KM0YM100.EDI-TRADPT-ID[KM0YWIDX] = KM0YW04.KM0YW04-CU-EDI-TRADPT-ID[KM0YW-CNT];
    KM0YM100.EDI-PO-IND[KM0YWIDX] = KM0YW04-CU-EDI-PO-IND[KM0YW-CNT];
    KM0YM100.EDI-ASN-IND[KM0YWIDX] = KM0YW04-CU-EDI-ASN-IND[KM0YW-CNT];
    KM0YM100.EDI-IVC-IND[KM0YWIDX] = KM0YW04-CU-EDI-IVC-IND[KM0YW-CNT];
    KM0YWIDX = KM0YWIDX + 1;
    KM0YW-CNT = KM0YW-CNT + 1;
  end

  KM0YW-PAGE-TOT = KM0YW-MAX / 12; /* set page total*/
  KM0YW-PAGE-TOT = KM0YW-PAGE-TOT * 12;
  if (KM0YW-PAGE-TOT != KM0YW-MAX)
    KM0YW-PAGE-TOT = (KM0YW-PAGE-TOT / 12) + 1;
  else
    KM0YW-PAGE-TOT = (KM0YW-PAGE-TOT / 12);
  end

  if (KM0YW-CNT > KM0YW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(206); /* end of record*/
  end

  if (KM0YW-MAX == 0)
    converseLib.validationFailed(205); /* no records found*/
  end

   /* display page tot = 1*/

  if (KM0YW-PAGE-TOT == 0)
    KM0YW-PAGE-TOT = 1;
  end
  move KM0YW-PAGE-TOT to KM0YM-PAGE-TOT withV60Compat;

  KM0YW-PAGE-CNT = (KM0YW-PAGE-INDEX / 12) + 1;

  move KM0YW-PAGE-CNT to KM0YM-PAGE-CNT withV60Compat;
end // end KM0YS-DSPLY-SCRN

// add editp
Function KM0YS-EDITP-ADD()

  KM0YS-EDITP-SEL();

  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(194);
    KM0YW01.KM0YWERR = "Y";
    return;
  end

  VEDITP01.CU-EDI-NOTCFMT-IND = "0";
  VEDITP01.CU-EDI-IVC-IND = KM0YW04-CU-EDI-IVC-IND[KM0YW-CNT];
  VEDITP01.CU-EDI-PO-IND = KM0YW04-CU-EDI-PO-IND[KM0YW-CNT];
  VEDITP01.CU-EDI-NOTC-IND = KM0YW04-CU-EDI-ASN-IND[KM0YW-CNT];
  VEDITP01.XSOCD = "  ";

  VEDITP01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VEDITP01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VEDITP01.ZZZCHGCT = 1;

  call "IO6340" ("A ", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1LOCAT = "ADD ";
    TA1REC.TA1FUNC = "ADD ";
    TA1REC.TA1PGMNM = "KM0YS-ADD-EDITP";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VEDITP01";
    TA1REC.TA1TBLKE = VEDITP01.CU-EDI-TRADPT-ID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end KM0YS-EDITP-ADD

// change editp /update
Function KM0YS-EDITP-CHNG()

  KM0YS-EDITP-SEL();

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(137);
    KM0YW01.KM0YWERR = "Y";
    return;
  end

  VEDITP01.CU-EDI-IVC-IND = KM0YW04-CU-EDI-IVC-IND[KM0YW-CNT];
  VEDITP01.CU-EDI-PO-IND = KM0YW04-CU-EDI-PO-IND[KM0YW-CNT];
  VEDITP01.CU-EDI-NOTC-IND = KM0YW04-CU-EDI-ASN-IND[KM0YW-CNT];

  VEDITP01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VEDITP01.ZZZCHGTM = XX0XW01.XX0XWTIM;

  call "IO6340" ("U ", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CHNG";
    TA1REC.TA1LOC = "CHNG";
    TA1REC.TA1PGMNM = "KM0YS-EDITP-CHNG";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VEDITP01";
    TA1REC.TA1TBLKE = VEDITP01.CU-EDI-TRADPT-ID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end KM0YS-EDITP-CHNG

// del editp
Function KM0YS-EDITP-DEL()

  KM0YS-EDITP-SEL();

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(194);
    KM0YW01.KM0YWERR = "Y";
    return;
  end

  VEDITP01.CU-EDI-IVC-IND = KM0YW04-CU-EDI-IVC-IND[KM0YW-CNT];
  VEDITP01.CU-EDI-PO-IND = KM0YW04-CU-EDI-PO-IND[KM0YW-CNT];
  VEDITP01.CU-EDI-NOTC-IND = KM0YW04-CU-EDI-ASN-IND[KM0YW-CNT];

  call "IO6340" ("D ", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "DEL ";
    TA1REC.TA1LOC = "DEL ";
    TA1REC.TA1PGMNM = "KM0YS-EDITP-DEL";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VEDITP01";
    TA1REC.TA1TBLKE = VEDITP01.CU-EDI-TRADPT-ID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end KM0YS-EDITP-DEL

// get editp via co
Function KM0YS-EDITP-NXT-CO()

   /* fetch next*/

  call "IO6340" ("N3", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to KM0YW-SQLCODE withV60Compat;

  if (KM0YW-SQLCODE == 0)
    KM0YS-GET-TP-INFO();
  else
    if (KM0YW-SQLCODE == 100)
      call "IO6340" ("C3", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-CO-NXT";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VEDITP01";
      KM0YWCID = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM0YWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end KM0YS-EDITP-NXT-CO

// get editp via tp
Function KM0YS-EDITP-NXT-TP()

   /* fetch next*/

  call "IO6340" ("N1", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to KM0YW-SQLCODE withV60Compat;

  if (KM0YW-SQLCODE == 0)
    KM0YS-GET-TP-INFO();
  else
    if (KM0YW-SQLCODE == 100)
      call "IO6340" ("C2", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VEDITP01";
      KM0YWCID = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM0YWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end KM0YS-EDITP-NXT-TP

// select unique editp
Function KM0YS-EDITP-SEL()

  VEDITP01.KUCCOID = KM0YW04-CU-CO-ID[KM0YW-CNT];
  VEDITP01.CU-EDI-TRADPT-ID = KM0YW04-CU-EDI-TRADPT-ID[KM0YW-CNT];

  call "IO6340" ("S ", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SEL ";
    TA1REC.TA1LOC = "SEL ";
    TA1REC.TA1PGMNM = "KM0YS-EDITP-SEL";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VEDITP01";
    TA1REC.TA1TBLKE = VEDITP01.CU-EDI-TRADPT-ID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end KM0YS-EDITP-SEL

// check fastpath and pf keys
Function KM0YS-FPATH-PFK()

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP != " ") /* fastpath out*/
      if (COMMAREA.CAITEM == " ")
        COMMAREA.CAITEM = KM0YW01.KM0YWKEY;
      end
      XSEXIT();
      KM0YW01.KM0YWMSG = COMMAREA.CAMSG;
    end
    return;
  end


  if (converseVar.eventKey is pf1) /* help*/
    XSPF1();
    KM0YW01.KM0YWMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf3) /* prior screen*/
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
    KM0YW01.KM0YWMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf4) /* main menu*/
    XSPF4();
    KM0YW01.KM0YWMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf12
   && COMMAREA.CACHGFL == "Y")
    return;
  end

  if (converseVar.eventKey is pf8 || converseVar.eventKey is pf7 || converseVar.eventKey is pa2)
    return;
  end

  converseLib.validationFailed(3); /* invalid pf key*/

end // end KM0YS-FPATH-PFK

// sel unique editp
Function KM0YS-GET-CO-NM()

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "SEL ";
      TA1REC.TA1PGMNM = "KM0YS-GET-CO-NM";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      KM0YWCID = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM0YWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end KM0YS-GET-CO-NM

// fetch edi rows via co
Function KM0YS-GET-EDI-CO()

   /* open cursor*/

  call "IO6340" ("S3", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(29);
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "OPEN";
      TA1REC.TA1PGMNM = "GET-EDI-CO";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VEDITP01";
      KM0YWCID = KUCREC.KUCCOID;
      move KM0YWKEY to TA1TBLKE withV60Compat;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end KM0YS-GET-EDI-CO

// fetch edi rows via co
Function KM0YS-GET-EDI-TP()

   /* open cursor*/

  call "IO6340" ("S1", SQLCA, VEDITP01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(29);
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "OPEN";
      TA1REC.TA1PGMNM = "GET-EDI-TP";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VEDITP01";
      TA1REC.TA1TBLKE = VEDITP01.CU-EDI-TRADPT-ID;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end KM0YS-GET-EDI-TP

// load map info
Function KM0YS-GET-TP-INFO()
   /* **************************************************/
     /* load working storage will all rows*/
   /* *************************************************/

  KM0YW04-SEL[KM0YWIDX] = " ";
  KM0YW04-CU-CO-ID[KM0YWIDX] = VEDITP01.KUCCOID;
  KUCREC.KUCCOID = VEDITP01.KUCCOID;

  KM0YS-GET-CO-NM(); /* get company name from vcmpny01*/

  KM0YW04-CU-CO-SHORT-NM[KM0YWIDX] = KUCREC.CU-CO-SHORT-NM;

  /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
  if (VAGen_SQLCODE == 100)
    KM0YW04-CU-CO-SHORT-NM[KM0YWIDX] = " ";
  end

  KM0YW04-CU-EDI-TRADPT-ID[KM0YWIDX] = VEDITP01.CU-EDI-TRADPT-ID;
  KM0YW04-CU-EDI-PO-IND[KM0YWIDX] = VEDITP01.CU-EDI-PO-IND;
  KM0YW04-CU-EDI-ASN-IND[KM0YWIDX] = VEDITP01.CU-EDI-NOTC-IND;
  KM0YW04-CU-EDI-IVC-IND[KM0YWIDX] = VEDITP01.CU-EDI-IVC-IND;
end // end KM0YS-GET-TP-INFO

// fetch edi rows via co
Function KM0YS-LD-WRK-STO()

   /* load working storage*/

  KM0YWIDX = 1;

  while (KM0YWIDX <= 400 && KM0YW-SQLCODE == 0)
    if (KM0YW-CU-EDI-TRADPT-ID != " ")
      KM0YS-EDITP-NXT-TP();
    end

    if (KM0YW-KUCCOID > 0) /**/
      KM0YS-EDITP-NXT-CO();
    end

    if (KM0YW-CU-EDI-TRADPT-ID == " " && 
    KM0YW-KUCCOID == 0)
      KM0YW-SQLCODE = 100;
    end
    KM0YWIDX = KM0YWIDX + 1;

  end


  KM0YWIDX = KM0YWIDX - 1;
  move KM0YWIDX to KM0YW-MAX withV60Compat; /* set maximum*/
  KM0YW-PAGE-TOT = KM0YWIDX / 12;
  KM0YW-PAGE-TOT = KM0YWIDX * KM0YW-PAGE-TOT;
  if (KM0YW-PAGE-TOT <= KM0YWIDX)
    KM0YW-PAGE-TOT = (KM0YWIDX / 12) + 1;
  end

  if (KM0YW-PAGE-TOT == 0)
    KM0YW-PAGE-TOT = 1;
  end
  KM0YM100.KM0YM-PAGE-TOT = KM0YW-PAGE-TOT;
end // end KM0YS-LD-WRK-STO

// fetch edi rows via co
Function KM0YS-VALID-SCRN()

   /* validate screen*/

  if (KM0YM100.KM0YMSEL[KM0YWIDX] == "A" || 
  KM0YM100.KM0YMSEL[KM0YWIDX] == "C" || 
  KM0YM100.KM0YMSEL[KM0YWIDX] == "D" || 
  KM0YM100.KM0YMSEL[KM0YWIDX] == " ")
    KM0YW04-SEL[KM0YW-CNT] = KM0YM100.KM0YMSEL[KM0YWIDX];
    if (KM0YM100.KM0YMSEL[KM0YWIDX] != " ")
      set KM0YM100.KM0YMSEL[KM0YWIDX] skip;
    end
    if (KM0YM100.KM0YMSEL[KM0YWIDX] == "A")
      if (CU-CO-ID[KM0YWIDX] == 0)
        KM0YM100.KM0YMMSG = " ENTER A VALID COMPANY ID ID ";
        set CU-CO-ID[KM0YWIDX] cursor, bold;
        KM0YWERR = "Y";
        return;
      end
      if (EDI-TRADPT-ID[KM0YWIDX] == " ")
        KM0YM100.KM0YMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set EDI-TRADPT-ID[KM0YWIDX] cursor, bold;
        KM0YWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(108);
        KM0YWERR = "Y";
        set KM0YM100.KM0YMSEL[KM0YWIDX] bold, cursor;
        set KM0YM100.CU-CO-ID[KM0YWIDX] bold;
        set KM0YM100.EDI-TRADPT-ID[KM0YWIDX] bold;
        return;
      else
        KUCREC.KUCCOID = KM0YM100.CU-CO-ID[KM0YWIDX];
        KM0YS-GET-CO-NM(); /* get company name*/
        KM0YM100.CU-CO-SHORT-NM[KM0YWIDX] = KUCREC.CU-CO-SHORT-NM;
        if (SQLCA.VAGen_SQLCODE == 100)
          KM0YM100.CU-CO-SHORT-NM[KM0YWIDX] = " ";
        end
        KM0YW04-CU-CO-ID[KM0YW-CNT] = KM0YM100.CU-CO-ID[KM0YWIDX];
        KM0YW04-CU-EDI-TRADPT-ID[KM0YW-CNT] = KM0YM100.EDI-TRADPT-ID[KM0YWIDX];
        KM0YW04-CU-CO-SHORT-NM[KM0YW-CNT] = KM0YM100.CU-CO-SHORT-NM[KM0YWIDX];
      end
      KM0YW-MAX = KM0YW-MAX + 1;
    end
    if (KM0YM100.KM0YMSEL[KM0YWIDX] == "C"
     && EDI-TRADPT-ID[KM0YWIDX] == " ")
      KM0YWERR = "Y";
      set KM0YM100.KM0YMSEL[KM0YWIDX] bold, cursor;
      converseLib.validationFailed(425);
      return;
    end
    if (KM0YM100.KM0YMSEL[KM0YWIDX] == "D"
     && EDI-TRADPT-ID[KM0YWIDX] == " ")
      KM0YWERR = "Y";
      set KM0YM100.KM0YMSEL[KM0YWIDX] bold, cursor;
      converseLib.validationFailed(424);
    end
    if ((KM0YM100.KM0YMSEL[KM0YWIDX] == "D" || 
    KM0YM100.KM0YMSEL[KM0YWIDX] == "C") && 
    SQLCA.VAGen_SQLCODE == 100)
      KM0YWERR = "Y";
      set KM0YM100.KM0YMSEL[KM0YWIDX] bold, cursor;
      converseLib.validationFailed(137);
      return;
    end
    if ((KM0YM100.KM0YMSEL[KM0YWIDX] == "A" ||  /* validate invoice ind*/
    KM0YM100.KM0YMSEL[KM0YWIDX] == "C"))       
      if (EDI-IVC-IND[KM0YWIDX] == "0" || 
      EDI-IVC-IND[KM0YWIDX] == "1" || 
      EDI-IVC-IND[KM0YWIDX] == "2")
        KM0YW04-CU-EDI-IVC-IND[KM0YW-CNT] = EDI-IVC-IND[KM0YWIDX];
        set EDI-IVC-IND[KM0YWIDX] initialAttributes;
      else
        KM0YM100.KM0YMMSG = " VALID CODES ARE 0=N/A, 1=TESTING, 2=PRODUCTION ";
        set EDI-IVC-IND[KM0YWIDX] cursor, bold;
        KM0YWERR = "Y";
        return;
      end
      if (EDI-PO-IND[KM0YWIDX] == "0" ||  /* validate po indicator*/
      EDI-PO-IND[KM0YWIDX] == "1" ||      
      EDI-PO-IND[KM0YWIDX] == "2")       
        KM0YW04-CU-EDI-PO-IND[KM0YW-CNT] = EDI-PO-IND[KM0YWIDX];
        set EDI-PO-IND[KM0YWIDX] initialAttributes;
      else
        KM0YM100.KM0YMMSG = " VALID CODES ARE 0=N/A, 1=TESTING, 2=PRODUCTION ";
        set EDI-PO-IND[KM0YWIDX] cursor, bold;
        KM0YWERR = "Y";
        return;
      end
      if (EDI-ASN-IND[KM0YWIDX] == "0" ||  /* validate adv ship notice*/
      EDI-ASN-IND[KM0YWIDX] == "1" ||      
      EDI-ASN-IND[KM0YWIDX] == "2" ||      
      EDI-ASN-IND[KM0YWIDX] == "3" ||      
      EDI-ASN-IND[KM0YWIDX] == "4" ||      
      EDI-ASN-IND[KM0YWIDX] == "5" ||      
      EDI-ASN-IND[KM0YWIDX] == "6" ||      
      EDI-ASN-IND[KM0YWIDX] == "7" ||      
      EDI-ASN-IND[KM0YWIDX] == "8" ||      
      EDI-ASN-IND[KM0YWIDX] == "9")       
        KM0YW04-CU-EDI-ASN-IND[KM0YW-CNT] = EDI-ASN-IND[KM0YWIDX];
        set EDI-ASN-IND[KM0YWIDX] initialAttributes;
      else
        KM0YM100.KM0YMMSG = " VALID CODES ARE 0,1,2,3,4,5,6,7,8,9 ";
        set EDI-ASN-IND[KM0YWIDX] cursor, bold;
        KM0YWERR = "Y";
        return;
      end
    end
  else
    KM0YM100.KM0YMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set KM0YM100.KM0YMSEL[KM0YWIDX] cursor, bold;
    KM0YWERR = "Y";
    return;
  end

end // end KM0YS-VALID-SCRN

//*** RECORD=KM0YW01 ****
// ************************************************************
// *           ***   KM0y Work Record   ***
// ************************************************************
// *  Maintenace Log
// ************************************************************
// *
// *   25 JUNE 1996  kclar1   created
// ***********************
Record KM0YW01 type basicRecord
  5 KM0YWEAF KM0YWEAF ; 
  5 KM0YWKEY KM0YWKEY ; 
    10 KM0YWCID KM0YWCID ; 
      15 KM0YWCID-CHAR KM0YWCID-CHAR ; 
    10 KM0YWAID KM0YWAID ; 
      15 KM0YWAID-CHAR KM0YWAID-CHAR ; 
  5 KM0YWIDX KM0YWIDX ; 
  5 KM0YWMSG KM0YWMSG ; 
  5 KM0YWDT KM0YWDT ; 
    10 KM0YWCTY KM0YWCTY ; 
    10 KM0YWYR KM0YWYR ; 
    10 KM0YWMTH KM0YWMTH ; 
    10 KM0YWDAY KM0YWDAY ; 
  5 KM0YWCDT KM0YWCDT ; 
    10 KM0YWCCT KM0YWCCT ; 
    10 KM0YWHDT KM0YWHDT ; 
      15 KM0YWCYR KM0YWCYR ; 
      15 KM0YWCMT KM0YWCMT ; 
      15 KM0YWCDY KM0YWCDY ; 
  5 KM0YWMOD KM0YWMOD ; 
  5 KM0YWERR KM0YWERR ; 
  5 KM0YW-UPDT KM0YW-UPDT ; 
  5 KM0YWFST KM0YWFST ; 
  5 KM0YW-SQLCODE KM0YW-SQLCODE ; 
  5 KM0YW-PAGE-CNT KM0YW-PAGE-CNT ; 
  5 KM0YW-PAGE-TOT KM0YW-PAGE-TOT ; 
  5 KM0YW-CNT KM0YW-CNT ; 
  5 KM0YW-TOT-CNT KM0YW-TOT-CNT ; 
  5 KM0YW-PAGE-INDEX KM0YW-PAGE-INDEX ; 
  5 KM0YW-PAGE-CHG KM0YW-PAGE-CHG ; 
  5 KM0YW-FOUND KM0YW-FOUND ; 
  5 KM0YW-MAX KM0YW-MAX ; 
  5 KM0YW-KUCCOID KM0YW-KUCCOID ; 
  5 KM0YW-KUCCONM KM0YW-KUCCONM ; 
  5 KM0YW-CU-EDI-TRADPT-ID KM0YW-CU-EDI-TRADPT-ID ; 
  5 KM0YW-CU-EDI-TRADPT-ID-QUERY KM0YW-CU-EDI-TRADPT-ID-QUERY ; 
    10 KM0YW-CU-EDI-TRADPT-ID-ITEM KM0YW-CU-EDI-TRADPT-ID-ITEM [15] ; 
end // end KM0YW01

Record KM0YW04 type basicRecord
  5 KM0YW04-GROUP KM0YW04-GROUP [401] ; 
    10 KM0YW04-SEL KM0YW04-SEL ; 
    10 KM0YW04-CU-CO-ID KM0YW04-CU-CO-ID ; 
    10 KM0YW04-CU-CO-SHORT-NM KM0YW04-CU-CO-SHORT-NM ; 
    10 KM0YW04-CU-EDI-TRADPT-ID KM0YW04-CU-EDI-TRADPT-ID ; 
    10 KM0YW04-CU-EDI-IVC-IND KM0YW04-CU-EDI-IVC-IND ; 
    10 KM0YW04-CU-EDI-PO-IND KM0YW04-CU-EDI-PO-IND ; 
    10 KM0YW04-CU-EDI-ASN-IND KM0YW04-CU-EDI-ASN-IND ; 
end // end KM0YW04

//*** RECORD=VEDITP01 ****
// THIS IS THE CSP RECORD FOR THE EDI TRADING PARTNER TABLE
// 
// DB2 TABLE:     DCUST.VEDITP01
// DCLGEN:        DCL00737
// IO/MOD:
// KEY TO TABLE:  KUCCOID CU-CO-ID
// 
// MAINTENANCE LOG:
// ---------------
// WHO     WHEN      WHY
// -----------------------------------------------------------
// CHELLM 04/09/92   CREATED.
// 
// 
// ************************
Record VEDITP01 type basicRecord
  10 CU-EDI-TRADPT-ID CU-EDI-TRADPT-ID ; 
  10 KUCCOID KUCCOID ; 
  10 CU-EDI-TRADPT-SEQ CU-EDI-TRADPT-SEQ ; 
  10 XSOCD XSOCD ; 
  10 CU-EDI-IVC-IND CU-EDI-IVC-IND ; 
  10 CU-EDI-PO-IND CU-EDI-PO-IND ; 
  10 CU-EDI-NOTC-IND CU-EDI-NOTC-IND ; 
  10 CU-EDI-NOTCFMT-IND CU-EDI-NOTCFMT-IND ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end VEDITP01

// CU_EDI_NOTC_IND
DataItem CU-EDI-NOTC-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_NOTCFMT_IND
DataItem CU-EDI-NOTCFMT-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_PO_IND
DataItem CU-EDI-PO-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_TRADPT_SEQ
DataItem CU-EDI-TRADPT-SEQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen detail counter
DataItem KM0YW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem KM0YW-CU-EDI-TRADPT-ID char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM0YW-CU-EDI-TRADPT-ID-ITEM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem KM0YW-CU-EDI-TRADPT-ID-QUERY char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM0YW-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_CO_ID
DataItem KM0YW-KUCCOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// CU_CO_NM
DataItem KM0YW-KUCCONM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM0YW-MAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update mode flag
DataItem KM0YW-PAGE-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sql return code
DataItem KM0YW-PAGE-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dept index
DataItem KM0YW-PAGE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM0YW-PAGE-TOT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sql return code
DataItem KM0YW-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen detail counter
DataItem KM0YW-TOT-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// modified switch
DataItem KM0YW-UPDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer company id
DataItem KM0YW04-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// CU_CO_SHORT_NM
DataItem KM0YW04-CU-CO-SHORT-NM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM0YW04-CU-EDI-ASN-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_IVC_IND
DataItem KM0YW04-CU-EDI-IVC-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_PO_IND
DataItem KM0YW04-CU-EDI-PO-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem KM0YW04-CU-EDI-TRADPT-ID char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM0YW04-GROUP char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM0YW04-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address id
DataItem KM0YWAID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// address id redefined char
DataItem KM0YWAID-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// century
DataItem KM0YWCCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem KM0YWCDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem KM0YWCDY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company
DataItem KM0YWCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company redefined
DataItem KM0YWCID-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// month
DataItem KM0YWCMT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem KM0YWCTY num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem KM0YWCYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem KM0YWDAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date
DataItem KM0YWDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end of application flag
DataItem KM0YWEAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified switch
DataItem KM0YWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first switch
DataItem KM0YWFST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold date
DataItem KM0YWHDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem KM0YWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work key field
DataItem KM0YWKEY char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified switch
DataItem KM0YWMOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message line
DataItem KM0YWMSG char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// month
DataItem KM0YWMTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem KM0YWYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

