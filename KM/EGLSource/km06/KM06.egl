package km06;

import as1.common.ARCORHLD;
import as1.common.ARCORPRO;
import as1.common.ARCSBNAR;
import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPXCT01;
import corpcom3.XPXLG01;
import corpcom3.XPXX001;
import corpcom3.XPYVI01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.*;
import corpcom6.SQLCA;
import corpcom7.XXX-INTL-PHONE-NBR;
import corpcom7.XXXFSTNM;
import corpcom7.XXXLSTNM;
import corpcom7.XXXMDINT;
import corpcom7.XXXSTAT;
import corpx1.XATCD;
import corpx1.XATTBL;
import corpx1.XAUCD;
import corpx1.XAUTBL;
import corpx1.XCACD;
import corpx1.XCATBL;
import corpx1.XCCCD;
import corpx1.XCCTBL;
import corpx1.XCECD;
import corpx1.XCETBL;
import corpx1.XCRCD;
import corpx1.XCTCD;
import corpx1.XCTTBL;
import corpx1.XCUCD;
import corpx1.XCUTBL;
import corpx1.XDZ-DATA-DIST-CD;
import corpx1.XIECD;
import corpx1.XIETBL;
import corpx1.XLATBL;
import corpx1.XLBCD;
import corpx1.XLECD;
import corpx1.XLGCD;
import corpx1.XLGTBL;
import corpx2.XOPCD;
import corpx2.XXXPHN;
import corpx2.XXXPHNA;
import corpx2.XXXPHNN;
import corpx2.XXXPHNP;
import corpy2.YCH-CHNL-CLS-CD;
import corpy2.YCPCD;
import corpy2.YCU-CRTN-USE-CD;
import corpy2.YLICD;
import corpy2.YLITBL;
import corpy2.YVICD;
import corpy2.YVITBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import kl.common.KIZTBL;
import ku.common.KU0XW10;
import ku.common.KU0XW30;
import ku.common.KUCACYDT;
import ku.common.KUCACYNR;
import ku.common.KUCACYRT;
import ku.common.KUCALERT;
import ku.common.KUCAPDEX;
import ku.common.KUCAPRDT;
import ku.common.KUCASMT;
import ku.common.KUCATCSH;
import ku.common.KUCBLAID;
import ku.common.KUCBPIND;
import ku.common.KUCCCAID;
import ku.common.KUCCNSCD;
import ku.common.KUCCNTCT;
import ku.common.KUCCOAID;
import ku.common.KUCCOANM;
import ku.common.KUCCOBDT;
import ku.common.KUCCOID;
import ku.common.KUCCOIDN;
import ku.common.KUCCOLCD;
import ku.common.KUCCOMNT;
import ku.common.KUCCONM;
import ku.common.KUCCRLEF;
import ku.common.KUCCRLEX;
import ku.common.KUCCRLIN;
import ku.common.KUCCSHNF;
import ku.common.KUCCSTDT;
import ku.common.KUCECODY;
import ku.common.KUCFINDT;
import ku.common.KUCFPRDT;
import ku.common.KUCFRTPD;
import ku.common.KUCFTRTI;
import ku.common.KUCGRP;
import ku.common.KUCGRPID;
import ku.common.KUCIDIND;
import ku.common.KUCINSPD;
import ku.common.KUCJSRFL;
import ku.common.KUCLBOFL;
import ku.common.KUCLCAMT;
import ku.common.KUCLCEDT;
import ku.common.KUCLCXDT;
import ku.common.KUCLVIND;
import ku.common.KUCMADID;
import ku.common.KUCMAGCT;
import ku.common.KUCMSTID;
import ku.common.KUCNSCNT;
import ku.common.KUCPDSPD;
import ku.common.KUCPHN;
import ku.common.KUCPOFL;
import ku.common.KUCPRPTI;
import ku.common.KUCPRVRT;
import ku.common.KUCPSFL;
import ku.common.KUCRAUTH;
import ku.common.KUCREC;
import ku.common.KUCSBKFL;
import ku.common.KUCSKIND;
import ku.common.KUCSSCNT;
import ku.common.KUCSTMT;
import ku.common.KUCSTYNT;
import ku.common.KUCUNTCS;
import ku.common.KUCVNDFL;
import ku.common.KUCWHSFL;
import ku.common.KUCXCSFL;
import ku.common.KUCYPOAP;
import ku.common.KUCYPOFT;
import ku.common.KUEREC;
import ku.common.KUHREC;
import ku.common.KUKPCOID;
import ku.common.KUKREC;
import ku.common.KUZREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VCTACT01;
import vv.common.VCULVL01;
import vv.common.VDSTRB01;
import xa.common.XA0AW02;
//*** PROGRAM=KM06 ****
// ----------------  km06 - change/inquiry company ------------
// 
// overview:  this application performs change functions for
//            general A/R company information.
// 
// date written: 01/90
// author:       Juan Fiat
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
//  03/15/90  dsalzw  changed to allow new comment type in db
//  03/29/90  dsalzw  db changes
//  06/12/90  dsalzw  replace xcuttlcd with xcurmgr
//  07/17/90  jhemme  increase kucasmt/cu-cr-mgr-asmt to 2 char
//  08/10/90  dsalzw  remove fin-stmt-call date
//  09/05/90  schyno  add credit manager change security
//  09/10/90  dsalzw  added kiztbl for audit trail
//  10/02/90  dsalzw  db changes
//  10/15/90  dsalzw  update blgrp on cmpny
//  11/26/90  dsalzw  no update message when changing max aging
//                    count
//  12/10/90  dsalzw  add po-req-ind to map
//  02/04/91  dsalzw  remove billgroup (kuarec)
//  03/22/91  twatso  add edit to kucecody and kucpdspd
//                    (eom-bill-ind and dsct-pay-day)
//  03/22/91  twatso  add edit between in-coll and coll-rep
//                    on map km06m100
//  05/08/91  dsalzw  removed km0m from setting security
//  05/16/91  dsalzw  changed pf3 to use from appl
//  06/09/91  dsalzw  db changes
//  10/11/91  CHELLM  Deinstalled CUTAG records (KUXREC)
//                    Added CU-CO-SHORT-NM logic.
//  03/13/92  CHELLM  DB2 changes, Added Last D&B Rpt date,
//                    and Credit Application date.
//  03/16/92  CHELLM  Add ^GT curr-dt edit to D&B Rpt date,
//                    and Credit Application date.
//  06/12/92  CHELLM  Added check for xxxstat in xlatbl when
//                    editing xlbcd.
//                    DB2 changes June 92 :
//                     Renamed kuceom to cu-bill-ind
//                             kucpdind to cu-po-dt-fl
//  10/07/92  CHELLM  Insert Vculvl01 row if customer is re-
//                    activated and no vculvl01 row exits.
//  05/19/93  CHELLM  Change Customer Contact selection from
//                    VCMPNY01 to DACRCV.VCTACT01.
// 29-june-1993       dlegg     Check for numeric value before
//                              move in km06000.
// 12-JULY-1993       DLEGG     Change call to TA0020 with
//                              ABND to RETN. KM06210,230,215,
//                              260,270,280,240,660,422,426,
//                              427,431,434,466,468.
// 16-JULY-1993       DLEGG     Add sgrp to initialize all
//                              records used by appl.
//  10/01/93  CHELLM  CSP 4.1 Converion.
//                    Allowd for cu-cust-stmt-ind 4 & 5.
//  11/12/93  CHELLM  Database Changes. VCMPNY01
//  02-10-94  BCourt  Fix edit on XCC table to allow for one
//              code to have both active & inactive rows.
//              See process KM06522.
//  11/10/94  CHELLM  Add Customer Vendor ID number w/update.
//  04/10/95  CHELLM  Add user Security for Nike Canada.
//  03/17/97  kclar1  add open to buy amount and date
//  07/17/97  CHELLM  Fix edit logic in KM06522.
//  07/28/97  kclar1  Fix edit logic in KM06522.
// *Y2KFIX   12/01/97  DKENNY  Y2K MODIFICATIONS MADE TO:
// *                   KM06M100, KM06W01, KM06424, KM06520,
// *                   KM06522, KM06525, KM06530, KM06535
// *ar2dcms  12/01/99  ovazqu display msg when no data found
//                     in BL6200.
// *RGOMAT   10/03/00  Changed D&B rating to D&b Score in
// *                   the screen km06m100.
// *********************
Program KM06 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KM06W01 KM06W01; // record
  KM06W04 KM06W04; // record
  KM06W20 KM06W20; // record
  KU0XW10 KU0XW10; // record
  KU0XW30 KU0XW30; // record
  KUCREC KUCREC; // record
  KUEREC KUEREC; // record
  KUHREC KUHREC; // record
  KUKREC KUKREC; // record
  KUZREC KUZREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VCRCHK02 VCRCHK02; // record
  VCTACT01 VCTACT01; // record
  VCULVL01 VCULVL01; // record
  VDSTRB01 VDSTRB01; // record
  XA0AW02 XA0AW02; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KIZTBL {deleteAfterUse = yes}; // table
  use XATTBL {deleteAfterUse = yes}; // table
  use XCETBL {deleteAfterUse = yes}; // table
  use XCUTBL {deleteAfterUse = yes}; // table
  use XCCTBL {deleteAfterUse = yes}; // table
  use XLGTBL {deleteAfterUse = yes}; // table
  use XCATBL {deleteAfterUse = yes}; // table
  use XAUTBL {deleteAfterUse = yes}; // table
  use XLATBL {deleteAfterUse = yes}; // table
  use XIETBL {deleteAfterUse = yes}; // table
  use YVITBL {deleteAfterUse = yes}; // table
  use YLITBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use KM06M.KM06M100,  // forms
      KM06M.KM06M125, 
      KM06M.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KM06000: KM06000();
    goto KM06100; /* converse A/R maintenance screen*/

    KM06100: KM06100();

    goto KM06100; /* A/R maintenance screen*/

  end // end main
end // end KM06

// Get Credit Contact
Function KM06-240()

   /* *********************************************************/
                          /* km06-240*/
   /* Get the Credit Contact from the AR Contact table.*/
   /* *********************************************************/

      /* First try the Customer level Credit Contact.*/
      /* If a Customer level doen't exist, try the Group level*/

   /* **********************************************************/


  set SQLCA empty;
  set VCTACT01 empty;
  VCTACT01.KUCCOID = KM06M100.KUCCOID;
  VCTACT01.XXXSTAT = "A";
  VCTACT01.AR-CTCT-PRTY-IND = "1";
  VCTACT01.KUNCGIND = "C";

  call "IO3980" ("SA", SQLCA, VCTACT01) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KM06W01.XXXLSTNM = VCTACT01.XXXLSTNM; /* last name*/
    KM06W01.XXXFSTNM = VCTACT01.XXXFSTNM; /* first name*/
    KM06W01.XXXMDINT = VCTACT01.XXXMDINT; /* middle initial*/
    KM06W01.XXXPHN = VCTACT01.XXXPHN; /* format phone number*/
    KM06W01.KM06W-PHN-AREA-CD = KM06W01.XXXPHNA; /* phone*/
    KM06W-PHN-DASH1 = "-";
    KM06W01.KM06W-PHN-PREFIX = KM06W01.XXXPHNP; /* phone*/
    KM06W-PHN-DASH2 = "-";
    KM06W01.KM06W-PHN-NUMBER = KM06W01.XXXPHNN; /* phone*/
    KM06M100.KM06M-PHONE = KM06W01.KM06W-PHONE; /* phone*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KM06M100.KM06M-PHONE = " "; /* phone*/
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DACRCV";
      TA1REC.TA1TBLVU = "VCTACT01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06-240";
      TA1REC.TA1LOC = "READING DB2 CTACT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end


  set SQLCA empty;
  set VCTACT01 empty;
  VCTACT01.KUCCOID = KM06M100.KUCCOID;
  VCTACT01.XXXSTAT = "A";
  VCTACT01.AR-CTCT-PRTY-IND = 1;
  VCTACT01.KUNCGIND = "G";

  call "IO3980" ("SA", SQLCA, VCTACT01) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KM06W01.XXXLSTNM = VCTACT01.XXXLSTNM; /* last name*/
    KM06W01.XXXFSTNM = VCTACT01.XXXFSTNM; /* first name*/
    KM06W01.XXXMDINT = VCTACT01.XXXMDINT; /* middle initial*/
    KM06W01.XXXPHN = VCTACT01.XXXPHN; /* phone*/
    KM06W01.KM06W-PHN-AREA-CD = KM06W01.XXXPHNA; /* phone*/
    KM06W-PHN-DASH1 = "-";
    KM06W01.KM06W-PHN-PREFIX = KM06W01.XXXPHNP; /* phone*/
    KM06W-PHN-DASH2 = "-";
    KM06W01.KM06W-PHN-NUMBER = KM06W01.XXXPHNN; /* phone*/
    KM06M100.KM06M-PHONE = KM06W01.KM06W-PHONE; /* phone*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DACRCV";
      TA1REC.TA1TBLVU = "VCTACT01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06-240";
      TA1REC.TA1LOC = "READING DB2 CTACT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end


  set SQLCA empty;
  set VCTACT01 empty;
  VCTACT01.KUCCOID = KM06M100.KUCGRPID;
  VCTACT01.XXXSTAT = "A";
  VCTACT01.AR-CTCT-PRTY-IND = 1;
  VCTACT01.KUNCGIND = "G";

  call "IO3980" ("SA", SQLCA, VCTACT01) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    KM06W01.XXXLSTNM = VCTACT01.XXXLSTNM; /* last name*/
    KM06W01.XXXFSTNM = VCTACT01.XXXFSTNM; /* first name*/
    KM06W01.XXXMDINT = VCTACT01.XXXMDINT; /* middle initial*/
    KM06W01.XXXPHN = VCTACT01.XXXPHN; /* phone*/
    KM06W01.KM06W-PHN-AREA-CD = KM06W01.XXXPHNA; /* phone*/
    KM06W-PHN-DASH1 = "-";
    KM06W01.KM06W-PHN-PREFIX = KM06W01.XXXPHNP; /* phone*/
    KM06W-PHN-DASH2 = "-";
    KM06W01.KM06W-PHN-NUMBER = KM06W01.XXXPHNN; /* phone*/
    KM06M100.KM06M-PHONE = KM06W01.KM06W-PHONE; /* phone*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KM06M100.KM06M-PHONE = " "; /* phone*/
      /* next sentence*/
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DACRCV";
      TA1REC.TA1TBLVU = "VCTACT01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06-240";
      TA1REC.TA1LOC = "READING DB2 CTACT01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end


   /* ********************** END OF km06-240 *********************/
end // end KM06-240

// FORMAT CREDIT CONTACT NAME
Function KM06-245()
   /* *************************************************************/
   /* *          maintenance log                                ***/
   /* 8/9/93 bcourt abend at bad subscript value 26 on last-nm.*/
   /* (First nm had only 1 char, last name had all 25 char.)*/
   /* Add code to check max value for ix2.*/
   /* *************************************************************/
   /* FORMAT CREDIT CONTACT NAME INTO 30 CHARACTERS.*/

  if (VCTACT01.XXXFSTNM == " ")
    KM06M100.KM06M-CREDIT-CONTACT-NM = VCTACT01.XXXLSTNM;
    return;
  end

  KM06W01.KM06W-FIRST-LAST-NAME = VCTACT01.XXXFSTNM;
  KM06W01.KM06W-LAST-NAME = VCTACT01.XXXLSTNM;
  KM06W01.KM06W-IX1 = 1;
  while (KM06W01.KM06W-IX1 < 30
   && KM06W01.KM06W-FLNAME-ARRAY[KM06W-IX1] != "^")
    if (KM06W01.KM06W-FLNAME-ARRAY[KM06W-IX1] == " ")
      KM06W01.KM06W-IX1 = KM06W01.KM06W-IX1 + 1;
      if (KM06W01.KM06W-FLNAME-ARRAY[KM06W-IX1] == " ")
        KM06W01.KM06W-FLNAME-ARRAY[KM06W-IX1] = "^";
        KM06W01.KM06W-IX1 = KM06W01.KM06W-IX1 - 1;
      else
        KM06W01.KM06W-IX1 = KM06W01.KM06W-IX1 - 1;
      end
    end
    KM06W01.KM06W-IX1 = KM06W01.KM06W-IX1 + 1;
  end

  KM06W01.KM06W-IX2 = 1;
  while (KM06W01.KM06W-IX1 < 30
   && KM06W01.KM06W-IX2 < 26) /* 8/9/93 ok to move if 25 or less.*/
    KM06W01.KM06W-FLNAME-ARRAY[KM06W-IX1] = KM06W01.KM06W-LNAME-ARRAY[KM06W-IX2];
    if (KM06W01.KM06W-FLNAME-ARRAY[KM06W-IX1] == " ")
      KM06W01.KM06W-IX2 = KM06W01.KM06W-IX2 + 1; /* check end of source*/
      if (KM06W01.KM06W-IX2 > 25 /* 8/9/93 add max check*/
       || KM06W01.KM06W-LNAME-ARRAY[KM06W-IX2] == " ")
        KM06W01.KM06W-IX1 = KM06W01.KM06W-IX1 + 30; /* force end of loop*/
      else
        KM06W01.KM06W-IX2 = KM06W01.KM06W-IX2 - 1;
      end
    end
    KM06W01.KM06W-IX1 = KM06W01.KM06W-IX1 + 1;
    KM06W01.KM06W-IX2 = KM06W01.KM06W-IX2 + 1;
  end
  KM06M100.KM06M-CREDIT-CONTACT-NM = KM06W01.KM06W-FIRST-LAST-NAME;
end // end KM06-245

// Get Credit OTB information
Function KM06-250()
   /* *********************************************************/
                          /* km06-250*/
   /* Get the Credit OTB information from credit check table*/
   /* *********************************************************/

  set SQLCA empty;

  call "VCRCHK02" ("S ", SQLCA, VCRCHK02) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
   /* NEXT SENTENCE*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DACRCV";
    TA1REC.TA1TBLVU = "VCRCHK02";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUCREC.KUCCOID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06-254 ";
    TA1REC.TA1LOC = "READING DB2 CRCHK02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



   /* ********************** END OF km06-250 *********************/
end // end KM06-250

// format screen - credit otb
Function KM06-255()

   /* *********************************************************/
                          /* km06-255*/
   /* format screen with credit otb information*/
   /* *********************************************************/

  KM06M100.AR-OTB-CRCK-AMT = VCRCHK02.AR-OTB-CRCK-AMT;
  KM06W01.KM06W-OTB-WORK-DATE = VCRCHK02.AR-OTB-AMT-CHNG-DT;
  KM06M100.AR-OTB-EDT-MM = KM06W01.KM06W-OTB-WORK-MM;
  KM06M100.AR-OTB-EDT-DD = KM06W01.KM06W-OTB-WORK-DD;
  KM06M100.AR-OTB-EDT-YY = KM06W01.KM06W-OTB-WORK-YY;

   /* ********************** END OF km06-255 *********************/
end // end KM06-255

// Check for CULVL update
Function KM06-430()
   /* *************************************************/
   /* insert new customer level table row if none exists*/
   /* *************************************************/

  KM06W-CULVL-FOUND-FL = "N";

  KM06-431(); /* select culvl row*/

  if (KM06W-CULVL-FOUND-FL == "Y")
    return;
  else
     /* next sentence*/
  end




end // end KM06-430

// Select VCULVL01 row
Function KM06-431()
   /* ****************************************************/
   /* select vculvl01 row*/
   /* ****************************************************/

  set VCULVL01 empty;
  set SQLCA empty;

  VCULVL01.KUCCOID = KUCREC.KUCCOID;
  VCULVL01.KUMSTRID = -1;
  VCULVL01.XNXCD = -1;
  VCULVL01.XGPCD = "**";

  call "IO0990" ("S ", SQLCA, VCULVL01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    KM06W-CULVL-FOUND-FL = "Y"; /* set row found flag*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      KM06W-CULVL-FOUND-FL = "N"; /* set no row found*/
    else
      KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCULVL01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06-431";
      TA1REC.TA1LOC = "UPDATE DB2 DCUST.VCULVL01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end



end // end KM06-431

// update otb infor to oracle
Function KM06-450()
   /* *********************************************************/
                          /* km06-450*/
   /* *********************************************************/
  set KM06W20 empty;

  KM06W20.KUCCOID-NUM = KUCREC.KUCCOID;
  KM06W20.KM06W-AR-OTB-CRCK-AMT = KM06W01.KM06W-OTB-CRCK-AMT-NUM;
  if (KM06W01.KM06W-OTB-CRCK-AMT-NUM == 0)
    KM06W20.KM06W-AR-OTB-MTD-AMT = "00000000000000";
  else
    KM06W20.KM06W-AR-OTB-MTD-AMT = " ";
  end

  call "BL6200" (KM06W20) {isNoRefresh = yes, isExternal = yes}; /**/

  if (KM06W20.KM06W-BL6200-RTN-CD == 0)
    /* next sentence*/
  else
    KM06M100.KM06MMSG = KM06W20.KM06W-MSG-OUT;
    KM06M100.KM06MMSG2 = "AUTO REPLEN OTB FAILED, IF A/R CUST - CALL HELP DESK";
  end

  set SQLCA empty;

  XX0XS01();

  VCRCHK02.ZZZSDT = XX0XW01.XX0XWDAT;
  VCRCHK02.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VCRCHK02.ZZZCHGTM = XX0XW01.XX0XWTIM;

  VCRCHK02.AR-OTB-CRCK-AMT = KM06W-OTB-CRCK-AMT-NUM;

  if (KM06W-OTB-WORK-YY < 57 && 
  KM06W-OTB-WORK-MM != 0)
    KM06W-OTB-WORK-CC = 20;
  else
    KM06W-OTB-WORK-CC = 19;
  end

  move KM06W-OTB-WORK-DATE to AR-OTB-AMT-CHNG-DT withV60Compat;

  call "VCRCHK02" ("U ", SQLCA, VCRCHK02) {isNoRefresh = yes, isExternal = yes}; /* read vctact01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    /* NEXT SENTENCE*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "UPD";
    TA1REC.TA1DBASE = "DACRCV";
    TA1REC.TA1TBLVU = "VCRCHK02";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUCREC.KUCCOID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06-450";
    TA1REC.TA1LOC = "UPDATE  DB2 CRCHK02";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

   /* ********************** END OF km06-450 *********************/
end // end KM06-450

// init chg company processing
Function KM06000()
   /* *********************************************/
    /* initialization of variables used in the  **/
    /* processing of the A/R company screen     **/
   /* *********************************************/

   /* TEMP001;*/

  XSENTRY();

  XSSEGTR(); /* set segmented transaction id*/

  set KM06M100 initial; /* A/R maintenance screen*/

  KM06S-INIT-RECS();

  KM06W01.KM06WMD1 = "N"; /* init cmpny update flag*/
  KM06W01.KM06WMD3 = "N"; /* init cmmnt update flag*/
  KM06W01.KM06WEFL = "N"; /* init ready to update flag*/
  KM06W01.KM06WERR = "N"; /* error flag*/

   /* ****************************/
   /* check fast path entry*/
   /* ****************************/

  if (COMMAREA.CACHGFL == "Y")
    KM06W01.KM06WUPM = "Y"; /* update mode*/
    KM06401(); /* set fields for update*/
  else
    KM06W01.KM06WUPM = "N"; /* inquiry move*/
    KM06402(); /* set fields for inquiry*/
  end


  KM06W01.KM06WUSR = COMMAREA.CAUSERA; /* key from add menu*/
  if (COMMAREA.CAITEM != " ")
    KM06W01.KM06WUSR = COMMAREA.CAITEM; /* key from fastpath*/
    if (KM06W01.KM06WCNO-CHAR is numeric)
      KM06M100.KUCCOID = KM06W01.KM06WCNO;
    end
  else
    if (KM06W01.KM06WCNO-CHAR is numeric)
      KM06M100.KUCCOID = KM06W01.KM06WCNO; /* key from chg menu*/
    end
  end

  XX0XS01(); /* get todays date*/


  if (KM06M100.KUCCOID > 0) /* if a company is available*/
    KM06200(); /* read/format basic company screen*/
  end

end // end KM06000

// converse map
Function KM06100()
   /* *******************************************/
   /* customer A/R screen process             **/
   /* 1. prepares working variables           **/
   /* 2. presents screen                      **/
   /* 3. edits special keys                   **/
   /* 4. edit screen data                     **/
                                  /* **/
   /* *******************************************/

  KM06W01.KM06WERR = "N"; /* init error flag*/
  KM06M100.KM06MDAT = VGVar.currentShortGregorianDate; /* set screen date*/


  converse KM06M100 ;

  KM06M100.KM06MMSG = " "; /* set message to nulls*/
  KM06M100.KM06MMSG2 = " "; /* set message to nulls*/

  KM06400(); /* edit pf and special keys*/

  if (KM06W01.KM06WERR == "N") /* no errors*/
    KM06500(); /* edit screen*/
  end

  if (KM06W01.KM06WERR == "N" /* no errors*/
   && KM06W01.KM06WUPM == "Y") /* update mode*/
    if (KM06W01.KM06WMD1 == "Y"
     || KM06W01.KM06WMD3 == "Y")
      converseLib.validationFailed(277); /* good edit*/
      KM06W01.KM06WEFL = "Y"; /* setup update flag*/
    end
  end
end // end KM06100

// read/format basic screen
Function KM06200()
   /* *********************************************************/
     /* read and format company screen data*/
   /* *********************************************************/

   /* *********************************************************/
   /* 03/17/97 kclar1 add otb date and amount*/
   /* *********************************************************/

  set KUCREC empty; /* clear out company record*/

  KM06W01.KM06WCID = 0;

  KUCREC.KUCCOID = KM06M100.KUCCOID; /* set company key*/

  KM06210(); /* read vcmpny01*/
  if (KM06W01.KM06WERR == "Y") /* not found?*/
    set KM06M100 initial;
    KM06M100.KUCCOID = KUCREC.KUCCOID; /* set company key*/
    set KM06M100.KUCCOID cursor, bold;
    return;
  end

  KM06220(); /* format cmpny01 to map km06m100*/

  KM06W01.KM06WCID = KUCREC.KUCCOID; /* save current company id*/

   /* *******************************************************/
   /* --------  read/fmt parent  --------------*/
   /* *******************************************************/

  KM06M100.KUKPCOID = 0; /* clear parent id*/
  KM06M100.KUKPCONM = " "; /* clear parent name*/
  set KUKREC empty; /* clear  out parent record*/

  if (KUCREC.KUKPCOID != 0) /* there is a parent id*/
    KUKREC.KUKPCOID = KUCREC.KUKPCOID; /* set parent key*/
    KM06230(); /* read parent*/
    if (VAGen_SQLCODE == 0)
      KM06M100.KUKPCOID = KUKREC.KUKPCOID;
      KM06M100.KUKPCONM = KUKREC.KUKPCONM;
    else
      converseLib.validationFailed(329);
      KM06W01.KM06WERR = "Y";
      set KM06M100.KUKPCOID cursor, modified, bold;
    end
  end

   /* *******************************************************/
   /* -----------  read NIL DSTRB  --------------*/
   /* *******************************************************/

  set VDSTRB01 empty; /* clear  out NIL Distributor Rec*/

  if (KUCREC.XLECD == "02") /* if a NIL company*/
    VDSTRB01.KUCCOID = KUCREC.KUCCOID; /* set dstrb key*/
    KM06215(); /* read distributor table*/
    if (VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      set KM06M100 initial;
      KM06M100.KUCCOID = KUCREC.KUCCOID; /* set company key*/
      set KM06M100.KUCCOID cursor, bold;
      converseLib.validationFailed(433); /* distributor table entry not found*/
      KM06W01.KM06WERR = "Y";
      return;
    end
  end

   /* ************************************************/
   /* -----  read/fmt coment  ----- (credit dept)*/
   /* ************************************************/

  KM06M100.KUECOMNT = " "; /* clear comment*/
  KM06W01.KM06WCMT = " "; /* clear comment*/
  set KUEREC empty; /* clear out comment record*/

  if (KUCREC.KUCCOMNT != "Y") /* check comment indicator*/
    /* next sentence*/
  else

    KUEREC.KUECMTID = KUCREC.KUCCOID; /* set comment key*/
    KUEREC.KUECTYP = "C";

    KM06260(); /* select set on comments within dept*/
    KM06270(); /* select next on comments within dept*/

    while (SQLCA.VAGen_SQLCODE == 0)
      if (KUEREC.XNDCD == "CRMN") /* credit comment?*/
        SQLCA.VAGen_SQLCODE = 100;
        KM06W01.KM06WCMT = KUEREC.KUEGRP;
        KM06M100.KUECOMNT = KUEREC.KUECOMNT; /* format to screen*/
      else
        KM06270(); /* read next comment*/
      end
    end

    KM06280(); /* close set*/

  end


   /* *******************************************************/
   /* --------  read/fmt credit contact info  --------------*/
   /* *******************************************************/

  set VCTACT01 empty; /* clear  out contact record*/
  VCTACT01.KUCCOID = KUCREC.KUCCOID; /* set contact table key*/
  VCTACT01.AR-CTCT-PRTY-IND = "1"; /* priority indicator*/
  VCTACT01.KUNCGIND = "C"; /* company'group indicator*/

 /**IALAM - CHANGE BEGINS, REMOVED DIVESTED TABLE DACRCV.VCTACT01 **/
 /**KM06-240(); /* read DACRCV.VCTACT01 for credit*/
                                   /* contact info*/
                              
 /* KM06-245(); /* format credit contact name*/
 /**IALAM - CHANGE ENDS, REMOVED DIVESTED TABLE DACRCV.VCTACT01 **/    

  if (KM06W01.KM06WUPM == "Y")
    KM06401(); /* set fields defined*/
  else
    KM06402(); /* set fields protected*/
  end

   /* ************************************************************/
   /* read format screen for credit check*/
   /* ************************************************************/

  set VCRCHK02 empty; /* clear out credit check rec*/
  VCRCHK02.KUCCOID = KUCREC.KUCCOID;
  KM06-250(); /* read dacrcv.vcrchk02*/
  KM06-255(); /* format credit otb fields*/

   /* ************************************************************/
   /* end - km06200*/
   /* ************************************************************/
end // end KM06200

// read company
Function KM06210()
   /* *************************************************/
   /* get company record   kucrec*/
   /* *************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    set KM06M100.KUCCOID initialAttributes;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(25); /* company not found*/
      KM06W01.KM06WERR = "Y"; /* set error message.*/
      set KM06M100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06210";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

   /* ***********************************/
   /* edit for account class code*/
   /* ***********************************/

  if (KUCREC.XAUCD in XAUTBL.XAUCD)
    if (XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      KM06W01.XATCD = XAUTBL.XATCD[sysVar.arrayIndex];
    else
      KM06W01.XATCD = " ";
    end
  else
    KM06W01.XATCD = " ";
  end

   /* **********************************************/
   /* edit account type for allowance of user groups*/
   /* **********************************************/

  if (KM06W01.XATCD == "08") /* edit for cole haan user*/
    if (COMMAREA.CADLVL[1] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM06W01.KM06WUPM = "N"; /* update flag= n*/
    end
  else
    if (KM06W01.XATCD == "03") /* edit for nil user*/
      if (COMMAREA.CADLVL[2] == "Y")
        /* next sentence*/
      else
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KM06W01.KM06WUPM = "N"; /* updtae flag = n*/
      end
    else
      if (COMMAREA.CADLVL[1] == "Y"
       || COMMAREA.CADLVL[2] == "Y")
        converseLib.validationFailed(272); /* not authorized to maint this acct*/
        KM06W01.KM06WUPM = "N"; /* update flag = n*/
      end
    end
  end
                   /* Edit for Nike Canada User*/

  if (KUCREC.XLECD == "03") /* edit for Nike Canada user*/
    if (COMMAREA.CADLVL[3] == "Y")
      /* next sentence*/
    else
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM06W01.KM06WUPM = "N"; /* updtae flag = n*/
    end
  else
    if (COMMAREA.CADLVL[3] == "Y")
      converseLib.validationFailed(272); /* not authorized to maint this acct*/
      KM06W01.KM06WUPM = "N"; /* update flag = n*/
    end
  end

end // end KM06210

// read distributor
Function KM06215()
   /* *************************************************/
   /* get distributor table record VDSTRB01*/
   /* *************************************************/

  set SQLCA empty;

  call "IO4600" ("S ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes}; /* read vdstrb01*/
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(433); /* distributor not found*/
      KM06W01.KM06WERR = "Y"; /* set error message.*/
      set KM06M100.KUCCOID cursor, bold;
      return;
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DNILO";
      TA1REC.TA1TBLVU = "VDSTRB01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06210";
      TA1REC.TA1LOC = "READING DB2 CMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end



end // end KM06215

// prepare cmpny record
Function KM06220()
   /* **************************/
   /* format company update*/
   /* **************************/

   /* references to kuccoidn are temporary for side 1 fixes*/

  KM06M100.KUCGRPID = KUCREC.KUCGRPID; /* group id*/
  KM06M100.KUCCOIDN = KUCREC.KUCCOIDN; /* ref company name*/
  KM06M100.CU-VEND-NBR = KUCREC.CU-VEND-NBR; /* vendor id number*/
  KM06M100.KUKPCOID = KUCREC.KUKPCOID; /* parent id*/
   /* Credit Contact now taken from DACRCV.VCTACT01*/
   /* MOVE KUCREC.KUCCNTCT TO KM06M100.KUCCNTCT;       /* contact*/
  KM06M100.KUCCONM = KUCREC.KUCCONM; /* company name*/
  KM06M100.KUCCOANM = KUCREC.KUCCOANM; /* company dba name*/
   /* Credit Contact Phone now taken from DACRCV.VCTACT01*/
   /* MOVE KUCREC.KUCPHN TO KM06M100.KUCPHN;             /* phone number*/
  KM06M100.KUCACYRT = KUCREC.KUCACYRT; /* d&b rating*/
  KM06M100.KUCAPDEX = KUCREC.KUCAPDEX; /* d&b paydex*/
  KM06W01.KM06WDBD = KUCREC.KUCACYDT; /* d&b date*/
  KM06M100.KM06MDBY = KM06W01.KM06WDBY; /* d&b year*/
  KM06M100.KM06MDBM = KM06W01.KM06WDBM; /* d&b month*/
  KM06W01.KM06WBDT = KUCREC.KUCCOBDT; /* bus date*/
  KM06M100.KM06MSBY = KM06W01.KM06WSBY; /* bus year*/
  KM06M100.KM06MSBM = KM06W01.KM06WSBM; /* bus month*/
  KM06W01.KM06WFDT = KUCREC.KUCFINDT; /* fin date*/
  KM06M100.KM06MFIY = KM06W01.KM06WFIY; /* fin year*/
  KM06M100.KM06MFIM = KM06W01.KM06WFIM;
  KM06W01.KM06WLEX = KUCREC.KUCCRLEX;
  KM06M100.KM06MCXY = KM06W01.KM06WCXY;
  KM06M100.KM06MCXM = KM06W01.KM06WCXM;
  KM06W01.KM06WLEF = KUCREC.KUCCRLEF;
  KM06M100.KM06MCFY = KM06W01.KM06WCFY;
  KM06M100.KM06MCFM = KM06W01.KM06WCFM;
  KM06W01.KM06WEDT = KUCREC.KUCLCEDT;
  KM06M100.KM06MLEY = KM06W01.KM06WLEY;
  KM06M100.KM06MLEM = KM06W01.KM06WLEM;
  KM06M100.KM06MLED = KM06W01.KM06WLED;
  KM06W01.KM06WXDT = KUCREC.KUCLCXDT;
  KM06M100.KM06MLXY = KM06W01.KM06WLXY;
  KM06M100.KM06MLXM = KM06W01.KM06WLXM;
  KM06M100.KM06MLXD = KM06W01.KM06WLXD;

  KM06W01.KM06W-LST-DAB-RPT-DT = KUCREC.CU-LST-DAB-RPT-DT;
  KM06M100.KM06M-LST-DAB-RPT-MM = KM06W01.KM06W-LST-DAB-RPT-MM;
  KM06M100.KM06M-LST-DAB-RPT-YY = KM06W01.KM06W-LST-DAB-RPT-YY;
  KM06W01.KM06W-CR-APPL-DT = KUCREC.CU-CR-APPL-DT;
  KM06M100.KM06M-CR-APPL-MM = KM06W01.KM06W-CR-APPL-MM;
  KM06M100.KM06M-CR-APPL-YY = KM06W01.KM06W-CR-APPL-YY;

  KM06M100.XLGCD = KUCREC.XLGCD;
  KM06M100.XLECD = KUCREC.XLECD;
  KM06M100.KUCPOFL = KUCREC.KUCPOFL;
  KM06M100.KUCYPOAP = KUCREC.KUCYPOAP;
  KM06M100.KUCYPOFT = KUCREC.KUCYPOFT;
  KM06M100.KUCWHSFL = KUCREC.KUCWHSFL;
  KM06M100.XCRCD = KUCREC.XCRCD;
  KM06M100.KUCCOLCD = KUCREC.KUCCOLCD;
  KM06M100.XXXSTAT = KUCREC.XXXSTAT;
  KM06M100.KUCCRLIN = KUCREC.KUCCRLIN;
  KM06M100.KUCASMT = KUCREC.KUCASMT;
  KM06M100.XCTCD = KUCREC.XCTCD;
  KM06M100.XCCCD = KUCREC.XCCCD;
  KM06M100.XCUCD[1] = KUCREC.XCUCD[1];
  KM06M100.XCUCD[2] = KUCREC.XCUCD[2];
  KM06M100.XCECD = KUCREC.XCECD;
  KM06M100.KUCACYNR = KUCREC.KUCACYNR;
  KM06M100.KUCLVIND = KUCREC.KUCLVIND;
  KM06M100.KUCLCAMT = KUCREC.KUCLCAMT;
  KM06M100.KUCIDIND = KUCREC.KUCIDIND;
  KM06M100.KUCBPIND = KUCREC.KUCBPIND;
  KM06M100.XIECD = KUCREC.XIECD;
  KM06M100.KUCLBOFL = KUCREC.KUCLBOFL;
  KM06M100.YVICD[1] = KUCREC.YVICD[1];
  KM06M100.YVICD[2] = KUCREC.YVICD[2];
  KM06M100.YVICD[3] = KUCREC.YVICD[3];
  KM06M100.YLICD = KUCREC.YLICD;
  KM06M100.KUCCSHNF = KUCREC.KUCCSHNF;
  KM06M100.KUCATCSH = KUCREC.KUCATCSH;
  KM06M100.KUCSTMT = KUCREC.KUCSTMT;
  KM06M100.KUCMAGCT = KUCREC.KUCMAGCT;
  KM06M100.KUCXCSFL = KUCREC.KUCXCSFL;
  KM06M100.KUCJSRFL = KUCREC.KUCJSRFL;
  KM06M100.KUCRAUTH = KUCREC.KUCRAUTH;
  KM06M100.CU-BILL-IND = KUCREC.CU-BILL-IND;
  KM06M100.CU-PO-DT-FL = KUCREC.CU-PO-DT-FL;
  KM06M100.KUCECODY = KUCREC.KUCECODY;
  KM06M100.KUCPDSPD = KUCREC.KUCPDSPD;
  KM06M100.XLBCD = KUCREC.XLBCD;

end // end KM06220

// read parent
Function KM06230()
   /* *************************/
   /* get parent*/
   /* *************************/

  set SQLCA empty;

  call "IO0030" ("S ", SQLCA, KUKREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM06W01.KM06WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VPARNT01";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUCREC.KUKPCOID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06230";
    TA1REC.TA1LOC = "READ DB2 DCUST.VPARNT01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end


end // end KM06230

// prepare cursor comment
Function KM06260()
   /* ***********************************************/
   /* open cursor for comments*/
   /* ***********************************************/

  set SQLCA empty;

  call "IO0250" ("SS", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM06W01.KM06WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06260";
    TA1REC.TA1LOC = "SS ON VCOMNT01   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



end // end KM06260

// read next comment
Function KM06270()
   /* ******************************/
   /* getnext comment*/
   /* ******************************/

  set SQLCA empty;

  call "IO0250" ("SN", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM06W01.KM06WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06270";
    TA1REC.TA1LOC = "SN ON VCOMNT01   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



end // end KM06270

// close coments cursor
Function KM06280()
   /* ***************************************/
   /* close cursor*/
   /* ***************************************/

  set SQLCA empty;

  call "IO0250" ("CS", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM06W01.KM06WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06280";
    TA1REC.TA1LOC = "CS ON VCOMNT01   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



end // end KM06280

// process special and pfkeys
Function KM06400()
   /* ************************************************/
     /* edit all special entry keys                **/
   /* ************************************************/

   /* *************************************************************/

    /* Maintenance History:*/
    /* 10-11-91 CHELLM Deinstalled CUTAG record (KUXREC) creation*/

   /* *************************************************************/


   /* **************************************/
   /* edit pa2 key*/
   /* **************************************/

  if (converseVar.eventKey is pa2)
    KM06200(); /* refresh the screen*/
    KM06W01.KM06WERR = "Y"; /* set error flagto display screen*/
    KM06W01.KM06WMD1 = "N";
    KM06W01.KM06WMD3 = "N";
    KM06W01.KM06WEFL = "N";
    return;
  end

   /* **************************************/
   /* edit enter  key*/
   /* **************************************/

  if (converseVar.eventKey is enter)
    if (KM06M100.CATOAP > " ") /* fast path*/
      COMMAREA.CATOAP = KM06M100.CATOAP;
      if (KM06M100.CAITEM == " ")
        COMMAREA.CAUSERA = KM06M100.KUCCOID;
      else
        COMMAREA.CAITEM = KM06M100.CAITEM;
      end
      COMMAREA.CAFROMAP = "KM06";
      XSEXIT();
      KM06M100.VAGen_EZEMSG = COMMAREA.CAMSG;
      KM06W01.KM06WERR = "Y";
      set KM06M100.CATOAP cursor, bold;
    else
      set KM06M100.CATOAP initialAttributes;
    end
    return;
  else
    if (KM06M100.CATOAP > " ")
      KM06W01.KM06WERR = "Y";
      converseLib.validationFailed(90); /* can not fast path and use pf keys*/
      set KM06M100.CATOAP cursor, bold;
      return;
    else
      set KM06M100.CATOAP modified;
    end
  end


   /* **************************************/
   /* edit pf2 key*/
   /* **************************************/

  if (converseVar.eventKey is pf2) /* update/inquiry tagle*/
    if (KM06W01.KM06WUPM == "N") /* in inquiry mode*/
      if (COMMAREA.CACHGFL == "Y") /* allow to maintenance*/
        KM06W01.KM06WUPM = "Y"; /* change to update mode*/
        KM06401(); /* set fields for update*/
        KM06200(); /* refresh screen*/
        KM06W01.KM06WERR = "Y"; /* display screen*/
        KM06W01.KM06WMD1 = "N";
        KM06W01.KM06WMD3 = "N";
        KM06W01.KM06WEFL = "N";
        return;
      else
        converseLib.validationFailed(330);
        KM06W01.KM06WERR = "Y"; /* display screen*/
        return;
      end
    else
      KM06W01.KM06WUPM = "N"; /* change to inquiry mode*/
      KM06402(); /* set fields for inquiry*/
      KM06200(); /* refresh screen*/
      KM06W01.KM06WERR = "Y"; /* display screen*/
      KM06W01.KM06WMD1 = "N";
      KM06W01.KM06WMD3 = "N";
      KM06W01.KM06WEFL = "N";
      return;
    end
  end

   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/

  if (converseVar.eventKey is pf3) /* back to company update*/
    COMMAREA.CAUSERA = KM06M100.KUCCOID;
    COMMAREA.CAITEM = " ";
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    COMMAREA.CAFROMAP = "KM06";
    XSEXIT();
    KM06M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM06W01.KM06WERR = "Y";
    return;
  end

   /* **************************************/
   /* edit pf4 key*/
   /* **************************************/

  if (converseVar.eventKey is pf4) /* back to goal menu*/
    COMMAREA.CAFROMAP = "KM06";
    XSPF4();
    KM06M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM06W01.KM06WERR = "Y";
    return;
  end

   /* **************************************/
   /* edit pf5 key*/
   /* **************************************/

  if (converseVar.eventKey is pf5) /* back to goal menu*/
    KM06800(); /* show addresses*/
    return;
  end

   /* **************************************/
   /* edit pf12 key*/
   /* **************************************/

  if (converseVar.eventKey is pf12 /* update key*/
   && KM06W01.KM06WEFL == "Y"      /* all edits ok*/
   && KM06W01.KM06WERR == "N")     /* no errors*/

    KM06500(); /* edit screen*/

    if (KM06W01.KM06WMD1 == "Y") /* if company data updated*/
      if (KM06W01.KM06WERR == "N") /* no errors*/
        KM06420(); /* process kucrec update*/
      end
    end

    if (KM06W01.KM06WMD3 == "Y" /* if comments data updated*/
     && KM06W01.KM06WERR == "N") /* no errors*/
      KM06460(); /* process kuerec update*/
    end

    if (KM06W01.KM06WERR == "N") /* no errors*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
    end

    if (KM06W01.KM06WERR == "N") /* no errors*/
      converseLib.validationFailed(279); /* all updates ok*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      KM06W01.KM06WEFL = "N"; /* updates ok set =n*/
      KM06W01.KM06WMD1 = "N"; /* reset cmpny update*/
      KM06W01.KM06WMD3 = "N"; /* reset cmtn  update*/
    else
      KM06W01.KM06WEFL = "N"; /* reset update ok flag*/
    end

  end

  if (converseVar.eventKey is pf12 /* update key*/
   && KM06W01.KM06WEFL == "N"      /* edits not ok*/
   && KM06W01.KM06WERR == "N")     /* error flag*/
    KM06W01.KM06WERR = "Y"; /* error flag*/
    converseLib.validationFailed(280); /* can pf12 without pressing enter*/
  end

  if (KM06W01.KM06WERR == "N")
    converseLib.validationFailed(281); /* invalid pf key message*/
    KM06W01.KM06WERR = "Y";
  end



end // end KM06400

// set fields to update mode
Function KM06401()
   /* *****************************/
   /* set update fields*/
   /* *****************************/
   /* 03/18/97 - kclar1 - added otb amount and date*/
   /* *****************************/

   /* all references to kuccoidn are temporary for side 1 fixes*/

  KM06M100.KM06MTTL = "UPDATE ";
  set KM06M100.KM06MTTL initialAttributes;

  set KM06M100.KUCCOID cursor, initialAttributes; /* company id*/
  set KM06M100.KM06M-CREDIT-CONTACT-NM initialAttributes;
  set KM06M100.KM06M-PHONE initialAttributes;
  set KM06M100.KUECOMNT initialAttributes;

   /* *********************************/
   /* set up map for users with flags*/
   /* 1 & 2 set to 'y'*/
   /* *********************************/
  if (COMMAREA.CACLVL[1] == "Y" /* change flag level 1*/
   && COMMAREA.CACLVL[2] == "Y") /* change flag level 2*/
    set KM06M100.KUKPCOID initialAttributes; /* parent id*/
    set KM06M100.KUKPCONM initialAttributes; /* parent id*/
    set KM06M100.KUCCONM initialAttributes; /* company name*/
    set KM06M100.KUCGRPID initialAttributes; /* group id*/
    set KM06M100.KUCCOIDN initialAttributes; /* reference company id*/
    set KM06M100.CU-VEND-NBR initialAttributes; /* vendor id number*/
    set KM06M100.KUCCOANM initialAttributes; /* company dba name*/
    set KM06M100.KUCACYRT initialAttributes; /* d&b rating*/
    set KM06M100.XCUCD[1] initialAttributes; /* credit service rep.*/
    set KM06M100.XCTCD initialAttributes; /* country code*/
    set KM06M100.XIECD initialAttributes; /* internal/external flag*/
    set KM06M100.KM06MCFM initialAttributes; /* cr ln eff dt month*/
    set KM06M100.KM06MCFY initialAttributes; /* cr ln eff dt year*/
    set KM06M100.XCTCD initialAttributes; /* country*/
    set KM06M100.KUCAPDEX initialAttributes; /* d&b paydex*/
    set KM06M100.KM06MDBY initialAttributes; /* d&b year*/
    set KM06M100.KM06MDBM initialAttributes; /* d&b month*/
    set KM06M100.KM06MSBY initialAttributes; /* bussines month*/
    set KM06M100.KM06MSBM initialAttributes; /* bussines year*/
    set KM06M100.KM06MFIY initialAttributes; /* financial dates*/
    set KM06M100.KM06MFIM initialAttributes;

    set KM06M100.KM06M-LST-DAB-RPT-MM initialAttributes;
    set KM06M100.KM06M-LST-DAB-RPT-YY initialAttributes;
    set KM06M100.KM06M-CR-APPL-MM initialAttributes;
    set KM06M100.KM06M-CR-APPL-YY initialAttributes;

    set KM06M100.XLGCD initialAttributes; /* legal organization code*/
    set KM06M100.XCRCD initialAttributes; /* credit region id code*/
    set KM06M100.KUCCOLCD initialAttributes; /* collection code*/
    set KM06M100.XXXSTAT initialAttributes; /* company stat*/
    set KM06M100.XCUCD[2] initialAttributes; /* credit collect rep.*/
    set KM06M100.XCECD initialAttributes; /* credit analyst rep.*/
    set KM06M100.KM06MCXY initialAttributes;
    set KM06M100.KM06MCXM initialAttributes;
    set KM06M100.KUCCRLIN initialAttributes; /* credit line amount*/
    set KM06M100.KUCASMT initialAttributes; /* cr mgr assessment*/
    set KM06M100.XCCCD initialAttributes; /* cr status code*/
    set KM06M100.KUCACYNR initialAttributes; /* cr agency cust no (d&b)*/
    set KM06M100.KUCLVIND initialAttributes; /* cr agency level code*/
    set KM06M100.KM06MLEY initialAttributes;
    set KM06M100.KM06MLEM initialAttributes;
    set KM06M100.KM06MLED initialAttributes;
    set KM06M100.KM06MLXY initialAttributes;
    set KM06M100.KM06MLXM initialAttributes;
    set KM06M100.KM06MLXD initialAttributes;
    set KM06M100.KUCLCAMT initialAttributes; /* letter of credit amount*/
    set KM06M100.KUCIDIND initialAttributes; /* inv delay flag*/
    set KM06M100.KUCBPIND initialAttributes; /* bk dt price override flag*/
    set KM06M100.KUCLBOFL initialAttributes; /* leverage buyout*/
    set KM06M100.YVICD[1] initialAttributes; /* notice code 1*/
    set KM06M100.YVICD[2] initialAttributes; /* notice code 2*/
    set KM06M100.YVICD[3] initialAttributes; /* notice code 3*/
    set KM06M100.YLICD initialAttributes; /* late interest code*/
    set KM06M100.KUCCSHNF initialAttributes; /* cash notify flag*/
    set KM06M100.KUCATCSH initialAttributes; /* autocash flag*/
    set KM06M100.KUCSTMT initialAttributes; /* statement notify indic*/
    set KM06M100.KUCMAGCT initialAttributes; /* aging records count*/
    set KM06M100.KUCXCSFL initialAttributes; /* excess discount*/
    set KM06M100.KUCRAUTH initialAttributes; /* Clms Rtn Auth*/
    set KM06M100.KUCWHSFL initialAttributes; /* Whse Agreement*/
    /* ******************************/
     /* bill group*/
    /* ******************************/
    set KM06M100.CU-BILL-IND initialAttributes; /* end of month flag*/
    set KM06M100.CU-PO-DT-FL initialAttributes; /* po dating ind*/
    set KM06M100.KUCECODY initialAttributes; /* eom cutoff day*/
    set KM06M100.KUCPDSPD initialAttributes; /* pref disc pymnt day*/
    set KM06M100.KUCJSRFL initialAttributes; /* subdivision flag*/
    set KM06M100.XLBCD initialAttributes; /* lock box code*/
    /* ******************************/
     /* comment*/
    /* ******************************/
    set KM06M100.KUECOMNT initialAttributes;
    /* *********************************/
    /* set up fields for open to buy*/
    /* *********************************/
    set KM06M100.AR-OTB-EDT-MM initialAttributes; /* obt month*/
    set KM06M100.AR-OTB-EDT-DD initialAttributes; /* obt day*/
    set KM06M100.AR-OTB-EDT-YY initialAttributes; /* obt year*/
    set KM06M100.AR-OTB-CRCK-AMT initialAttributes; /* obt amount*/

    /* *********************************/
    /* set up map for users with only*/
    /* only flag 2 set to 'y'*/
    /* allows changes to cr analyst & cm i/e fields*/
    /* **********************************/
  else
    if (COMMAREA.CACLVL[1] == "N" /* change flag level 1*/
     && COMMAREA.CACLVL[2] == "Y") /* change flag level 2*/
      set KM06M100.KUKPCOID skip; /* parent id*/
      set KM06M100.KUKPCONM skip; /* parent id*/
      set KM06M100.KUCGRPID skip; /* group id*/
      set KM06M100.KUCCOIDN skip; /* reference company id*/
      set KM06M100.CU-VEND-NBR skip; /* vendor id number*/
      set KM06M100.KUCCONM skip; /* company name*/
      set KM06M100.KUCCOANM skip; /* company dba name*/
      set KM06M100.KM06MCFM skip; /* cr ln eff dt month*/
      set KM06M100.KM06MCFY skip; /* cr ln eff dt year*/
      set KM06M100.KUCAPDEX skip; /* d&b paydex*/
      set KM06M100.KM06MDBY skip; /* d&b year*/
      set KM06M100.KUCACYRT skip; /* d&b rating*/
      set KM06M100.XCUCD[1] skip; /* credit service rep.*/
      set KM06M100.XCTCD skip; /* country code*/
      set KM06M100.XIECD initialAttributes; /* internal/external flag*/
      set KM06M100.KM06MDBM skip; /* d&b month*/
      set KM06M100.KM06MSBY skip; /* business month*/
      set KM06M100.KM06MSBM skip; /* business year*/
      set KM06M100.KM06MFIY skip; /* financial dates*/
      set KM06M100.KM06MFIM skip;

      set KM06M100.KM06M-LST-DAB-RPT-MM skip;
      set KM06M100.KM06M-LST-DAB-RPT-YY skip;
      set KM06M100.KM06M-CR-APPL-MM skip;
      set KM06M100.KM06M-CR-APPL-YY skip;

      set KM06M100.XLGCD skip; /* legal organization code*/
      set KM06M100.XCRCD skip; /* credit region id code*/
      set KM06M100.KUCCOLCD skip; /* collection code*/
      set KM06M100.XXXSTAT skip; /* company stat*/
      set KM06M100.XCUCD[2] skip; /* credit collect rep.*/
      set KM06M100.XCECD initialAttributes; /* credit analyst rep.*/
      set KM06M100.KM06MCXY skip;
      set KM06M100.KM06MCXM skip;
      set KM06M100.KUCCRLIN skip; /* credit line amount*/
      set KM06M100.KUCASMT skip; /* cr mgr assessment*/
      set KM06M100.XCCCD skip; /* cr status code*/
      set KM06M100.KUCACYNR skip; /* cr agency cust no (d&b)*/
      set KM06M100.KUCLVIND skip; /* cr agency level code*/
      set KM06M100.KM06MLEY skip;
      set KM06M100.KM06MLEM skip;
      set KM06M100.KM06MLED skip;
      set KM06M100.KM06MLXY skip;
      set KM06M100.KM06MLXM skip;
      set KM06M100.KM06MLXD skip;
      set KM06M100.KUCLCAMT skip; /* letter of credit amount*/
      set KM06M100.KUCIDIND skip; /* inv delay flag*/
      set KM06M100.KUCBPIND skip; /* bk dt price override flag*/
      set KM06M100.KUCLBOFL skip; /* leverage buyout*/
      set KM06M100.YVICD[1] skip; /* notice code 1*/
      set KM06M100.YVICD[2] skip; /* notice code 2*/
      set KM06M100.YVICD[3] skip; /* notice code 3*/
      set KM06M100.YLICD skip; /* late interest code*/
      set KM06M100.KUCCSHNF skip; /* cash notify flag*/
      set KM06M100.KUCATCSH skip; /* autocash flag*/
      set KM06M100.KUCSTMT skip; /* statement notify indic*/
      set KM06M100.KUCMAGCT skip; /* aging records count*/
      set KM06M100.KUCXCSFL skip; /* excess discount*/
      set KM06M100.KUCRAUTH initialAttributes; /* Clms Rtn Auth*/
      set KM06M100.KUCWHSFL skip; /* Whse Agreement*/
      /* ******************************/
       /* bill group*/
      /* ******************************/
      set KM06M100.CU-BILL-IND skip; /* end of month flag*/
      set KM06M100.CU-PO-DT-FL skip; /* po dating ind*/
      set KM06M100.KUCECODY skip; /* eom cutoff day*/
      set KM06M100.KUCPDSPD skip; /* pref disc pymnt day*/
      set KM06M100.KUCJSRFL skip; /* subdivision flag*/
      set KM06M100.XLBCD skip; /* lock box code*/
      /* ******************************/
       /* credit contact, phone, comment*/
      /* ******************************/

    end
  end


end // end KM06401

// set fields for inquiry mode
Function KM06402()
   /* *****************************/
   /* set fields for inquiry*/
   /* *****************************/
   /* 03/18/97 - kclar1 - added otb amount and date*/

    /* all references to kuccoidn are temporary fixes for side 1*/

  KM06M100.KM06MTTL = "INQUIRY";
  set KM06M100.KM06MTTL skip;

  set KM06M100.KUCCOID cursor, initialAttributes;

  set KM06M100.KUKPCOID skip; /* parent id*/
  set KM06M100.KUCCOIDN skip; /* reference company id*/
  set KM06M100.CU-VEND-NBR skip; /* vendor id number*/
  set KM06M100.KUCGRPID skip; /* group id*/
  set KM06M100.KUCCONM skip; /* company name*/
  set KM06M100.KUCCOANM skip; /* company dba name*/
  set KM06M100.KUCACYRT skip; /* d&b rating*/
  set KM06M100.KUCAPDEX skip; /* d&b paydex*/
  set KM06M100.KM06MDBY skip; /* d&b year*/
  set KM06M100.KM06MDBM skip; /* d&b month*/
  set KM06M100.KM06MSBY skip; /* bussines date*/
  set KM06M100.KM06MSBM skip;
  set KM06M100.KM06MFIY skip; /* financial date*/
  set KM06M100.KM06MFIM skip;

  set KM06M100.KM06M-LST-DAB-RPT-MM skip;
  set KM06M100.KM06M-LST-DAB-RPT-YY skip;
  set KM06M100.KM06M-CR-APPL-MM skip;
  set KM06M100.KM06M-CR-APPL-YY skip;

  set KM06M100.XLGCD skip; /* legal organization code*/
  set KM06M100.XCRCD skip; /* credit region id code*/
  set KM06M100.KUCCOLCD skip; /* collection code*/
  set KM06M100.XXXSTAT skip; /* company stat*/
  set KM06M100.XCUCD[1] skip; /* credit service rep.*/
  set KM06M100.XCUCD[2] skip; /* credit collect rep.*/
  set KM06M100.XCECD skip; /* credit analyst rep.*/
  set KM06M100.KM06MCXY skip;
  set KM06M100.KM06MCXM skip;
  set KM06M100.KUCCRLIN skip; /* credit line amount*/
  set KM06M100.KUCASMT skip; /* cr mgr assessment*/
  set KM06M100.XCTCD skip; /* country code*/
  set KM06M100.XCCCD skip; /* cr status code*/
  set KM06M100.KUCACYNR skip; /* cr agency cust no (d&b)*/
  set KM06M100.KUCLVIND skip; /* cr agency level code*/
  set KM06M100.KM06MLEY skip;
  set KM06M100.KM06MLEM skip;
  set KM06M100.KM06MLED skip;
  set KM06M100.KM06MLXY skip;
  set KM06M100.KM06MLXM skip;
  set KM06M100.KM06MLXD skip;
  set KM06M100.KUCLCAMT skip; /* letter of credit amount*/
  set KM06M100.KUCIDIND skip; /* inv delay flag*/
  set KM06M100.KUCBPIND skip; /* bk dt price override flag*/
  set KM06M100.XIECD skip; /* internal/external flag*/
  set KM06M100.KUCLBOFL skip; /* leverage buyout*/
  set KM06M100.YVICD[1] skip; /* notice code 1*/
  set KM06M100.YVICD[2] skip; /* notice code 2*/
  set KM06M100.YVICD[3] skip; /* notice code 3*/
  set KM06M100.YLICD skip; /* late interest code*/
  set KM06M100.KUCCSHNF skip; /* cash notify flag*/
  set KM06M100.KUCATCSH skip; /* autocash flag*/
  set KM06M100.KUCSTMT skip; /* statement notify indic*/
  set KM06M100.KUCMAGCT skip; /* aging records count*/
  set KM06M100.KUCXCSFL skip; /* excess discount*/
  set KM06M100.KUCRAUTH skip; /* Clms Rtn Auth*/
  set KM06M100.KUCWHSFL skip; /* Whse Agreement*/

   /* ******************************/
   /* bill group*/
   /* ******************************/

  set KM06M100.CU-BILL-IND skip; /* end of month flag*/
  set KM06M100.CU-PO-DT-FL skip; /* po dating ind*/
  set KM06M100.KUCECODY skip; /* eom cutoff day*/
  set KM06M100.KUCPDSPD skip; /* pref disc pymnt day*/
  set KM06M100.KUCJSRFL skip; /* subdivision flag*/
  set KM06M100.XLBCD skip; /* lock box code*/

   /* ******************************/
   /* Credit Contact*/
   /* ******************************/

  set KM06M100.KM06M-CREDIT-CONTACT-NM skip; /* Contact Name*/
  set KM06M100.KM06M-PHONE skip; /* Contact Phone*/
  set KM06M100.KUECOMNT skip; /* Credit Comment*/

   /* ******************************/
   /* otb information*/
   /* ******************************/

  set KM06M100.AR-OTB-EDT-MM skip;
  set KM06M100.AR-OTB-EDT-DD skip;
  set KM06M100.AR-OTB-EDT-YY skip;
  set KM06M100.AR-OTB-CRCK-AMT skip;

end // end KM06402

// update company kucrec
Function KM06420()
   /* *************************************************/
   /* update company and create audit trail*/
   /* *************************************************/

   /* convert csp time/date format to db2 time/date stamp format*/
  XX0XS01();


   /* ****************************/
   /* prepare before look audit*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUCREC.KUCGRP;


  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM06   ";
    TA1REC.TA1LOCAT[1] = "KM06420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM06M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


  KM06422(); /* add audit before image for cmpny01*/

  KM06424(); /* format cmpny general data update*/

  KM06426(); /* update company*/

   /* ****************************/
   /* format after look audit*/
   /* ****************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "A"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCMPNY01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUCREC.KUCCOID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUCREC.KUCGRP;


  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM06   ";
    TA1REC.TA1LOCAT[1] = "KM06420  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCMPNY01 ";
    TA1REC.TA1MAP = "KM06M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end


  KM06422(); /* write audit trail after image*/

   /* ****************************/
   /* Update NIL Distributor table*/
   /* ****************************/

  if (KUCREC.XLECD == "02")
    if (KUCREC.XXXSTAT != VDSTRB01.XXXSTAT)
      KM06427(); /* update NIL Distributor*/
    end
  end

   /* ******************************************/
   /* check for possible insert to culvl table*/
   /* ******************************************/

  KM06-430();


   /* ******************************************/
   /* check open to buy fl for update*/
   /* ******************************************/

  if (KM06W01.KM06W-VCRCHK02-MODIFIED-FL == "Y")
    KM06-450(); /* update vcrchk02 table*/
  end

end // end KM06420

// inser before cmpny audit
Function KM06422()
   /* **********************/
    /* add before image*/
   /* **********************/

  set SQLCA empty;

  call "IO0500" ("A ", SQLCA, KUZREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCUAUD01";
    TA1REC.TA1MAP = " ";
    TA1REC.TA1PGMNM = "KM06422";
    TA1REC.TA1LOC = "ADD DB2 DCUST.VCUAUD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



end // end KM06422

// prepare cmpny record
Function KM06424()
   /* **************************/
   /* format company update*/
   /* **************************/
   /*  */
   /* *************************************************************/

    /* Maintenance History:*/
    /* 10-11-91 CHELLM Added update of company short name.*/

   /* *************************************************************/


   /* references to kuccoidn are temporary for side 1 fixes*/

  KUCREC.KUCCONM = KM06M100.KUCCONM; /* company name*/
  KU0XW30.KU0XW3GP = " ";
  KU0XW30.KU0XW3GP = KM06M100.KUCCONM;
  call "KU0X" (KU0XW30, KU0XW10) {isNoRefresh = yes};
  KUCREC.CU-CO-SHORT-NM = KU0XW10.KU0XW1GP;
  KUCREC.KUCCOANM = KM06M100.KUCCOANM; /* company dba name*/
  KUCREC.KUCACYRT = KM06M100.KUCACYRT; /* d&b rating*/
  KUCREC.KUCAPDEX = KM06M100.KUCAPDEX; /* d&b paydex*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WDBC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MDBM > 0) /* d&b month exists*/
    if (KM06M100.KM06MDBY > 60)
      KM06W01.KM06WDBC = 19;
    else
      KM06W01.KM06WDBC = 20;
    end
  else
    KM06W01.KM06WDBC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06WDBG = 00;
  KM06W01.KM06WDBY = KM06M100.KM06MDBY; /* d&b year*/
  KM06W01.KM06WDBM = KM06M100.KM06MDBM; /* d&b month*/
  KUCREC.KUCACYDT = KM06W01.KM06WDBD; /* d&b date*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06W-LST-DAB-RPT-CC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06M-LST-DAB-RPT-MM > 0)
    if (KM06M100.KM06M-LST-DAB-RPT-YY > 60)
      KM06W01.KM06W-LST-DAB-RPT-CC = 19;
    else
      KM06W01.KM06W-LST-DAB-RPT-CC = 20;
    end
  else
    KM06W01.KM06W-LST-DAB-RPT-CC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06W-LST-DAB-RPT-DD = 00;
  KM06W01.KM06W-LST-DAB-RPT-YY = KM06M100.KM06M-LST-DAB-RPT-YY;
  KM06W01.KM06W-LST-DAB-RPT-MM = KM06M100.KM06M-LST-DAB-RPT-MM;
  KUCREC.CU-LST-DAB-RPT-DT = KM06W01.KM06W-LST-DAB-RPT-DT;

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06W-CR-APPL-CC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06M-CR-APPL-MM > 0)
    if (KM06M100.KM06M-CR-APPL-YY > 60)
      KM06W01.KM06W-CR-APPL-CC = 19;
    else
      KM06W01.KM06W-CR-APPL-CC = 20;
    end
  else
    KM06W01.KM06W-CR-APPL-CC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06W-CR-APPL-DD = 00;
  KM06W01.KM06W-CR-APPL-YY = KM06M100.KM06M-CR-APPL-YY;
  KM06W01.KM06W-CR-APPL-MM = KM06M100.KM06M-CR-APPL-MM;
  KUCREC.CU-CR-APPL-DT = KM06W01.KM06W-CR-APPL-DT;

  KUCREC.KUCGRPID = KM06M100.KUCGRPID; /* group company id*/
  KUCREC.KUCCOIDN = KM06M100.KUCCOIDN; /* ref company id*/
  KUCREC.CU-VEND-NBR = KM06M100.CU-VEND-NBR; /* vendor id number*/
  KUCREC.KUKPCOID = KM06M100.KUKPCOID; /* parent id*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WSBC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  KM06W01.KM06WSBD = 00;
  KM06W01.KM06WSBY = KM06M100.KM06MSBY;
  KM06W01.KM06WSBM = KM06M100.KM06MSBM;
  KUCREC.KUCCOBDT = KM06W01.KM06WBDT; /* started business date*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WFIC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MFIM > 0)
    if (KM06M100.KM06MFIY > 60)
      KM06W01.KM06WFIC = 19;
    else
      KM06W01.KM06WFIC = 20;
    end
  else
    KM06W01.KM06WFIC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06WFID = 00;
  KM06W01.KM06WFIY = KM06M100.KM06MFIY;
  KM06W01.KM06WFIM = KM06M100.KM06MFIM;
  KUCREC.KUCFINDT = KM06W01.KM06WFDT;
                                   /* finance. stmt issue date*/
  KUCREC.XLGCD = KM06M100.XLGCD;
                                   /* legal organization code*/
  KUCREC.XCRCD = KM06M100.XCRCD; /* credit region id code*/
  KUCREC.KUCCOLCD = KM06M100.KUCCOLCD; /* collection code*/
  KUCREC.XXXSTAT = KM06M100.XXXSTAT; /* company stat*/
   /* MOVE KM06M100.KUCMJRID TO KUCREC.KUCMJRID*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WCFC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MCFM > 0)
    if (KM06M100.KM06MCFY > 60)
      KM06W01.KM06WCFC = 19;
    else
      KM06W01.KM06WCFC = 20;
    end
  else
    KM06W01.KM06WCFC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06WCFD = 00;
  KM06W01.KM06WCFY = KM06M100.KM06MCFY;
  KM06W01.KM06WCFM = KM06M100.KM06MCFM;
  KUCREC.KUCCRLEF = KM06W01.KM06WLEF;
                                   /* credit line eff date*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WCXC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MCXM > 0)
    if (KM06M100.KM06MCXY > 60)
      KM06W01.KM06WCXC = 19;
    else
      KM06W01.KM06WCXC = 20;
    end
  else
    KM06W01.KM06WCXC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06WCXD = 00;
  KM06W01.KM06WCXY = KM06M100.KM06MCXY;
  KM06W01.KM06WCXM = KM06M100.KM06MCXM;
  KUCREC.KUCCRLEX = KM06W01.KM06WLEX;
                                   /* credit line exp date*/
  KUCREC.KUCCRLIN = KM06M100.KUCCRLIN; /* credit line amount*/
  KUCREC.KUCASMT = KM06M100.KUCASMT; /* cr mgr assessment*/
  KUCREC.XCTCD = KM06M100.XCTCD; /* country code*/

  if (KM06M100.XCCCD == KUCREC.XCCCD) /* cr status code*/
    /* next sentence*/
  else
    KUCREC.KUCCSTDT = XX0XW01.XX0XWDAT; /* credit change dt*/
  end

  KUCREC.XCCCD = KM06M100.XCCCD; /* cr status code*/
  KUCREC.XCUCD[1] = KM06M100.XCUCD[1]; /* credit service rep*/
  KUCREC.XCUCD[2] = KM06M100.XCUCD[2]; /* credit collect rep*/
  KUCREC.XCECD = KM06M100.XCECD; /* credit analyst rep*/
  KUCREC.KUCACYNR = KM06M100.KUCACYNR; /* cr agency cust no (d&b)*/
  KUCREC.KUCLVIND = KM06M100.KUCLVIND; /* cr agency level code*/
                                   /* credit line eff date*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WLEC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MLEM > 0)
    if (KM06M100.KM06MLEY > 60)
      KM06W01.KM06WLEC = 19;
    else
      KM06W01.KM06WLEC = 20;
    end
  else
    KM06W01.KM06WLEC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06WLEY = KM06M100.KM06MLEY;
  KM06W01.KM06WLEM = KM06M100.KM06MLEM;
  KM06W01.KM06WLED = KM06M100.KM06MLED;
  KUCREC.KUCLCEDT = KM06W01.KM06WEDT;
                                   /* letter/credit entry date*/
  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* MOVE 19 TO KM06W01.KM06WLXC;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/
  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MLXM > 0)
    if (KM06M100.KM06MLXY > 60)
      KM06W01.KM06WLXC = 19;
    else
      KM06W01.KM06WLXC = 20;
    end
  else
    KM06W01.KM06WLXC = 0;
  end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/
  KM06W01.KM06WLXY = KM06M100.KM06MLXY;
  KM06W01.KM06WLXM = KM06M100.KM06MLXM;
  KM06W01.KM06WLXD = KM06M100.KM06MLXD;
  KUCREC.KUCLCXDT = KM06W01.KM06WXDT;
                                   /* letter/credit exp. date*/
  KUCREC.KUCLCAMT = KM06M100.KUCLCAMT;
                                   /* letter of credit amount*/
  KUCREC.KUCIDIND = KM06M100.KUCIDIND; /* inv delay flag*/
  KUCREC.KUCBPIND = KM06M100.KUCBPIND; /* bk dt price override flag*/
  KUCREC.XIECD = KM06M100.XIECD;
                                   /* internal/external flag*/
  KUCREC.KUCLBOFL = KM06M100.KUCLBOFL; /* leverage buyout flag*/
  KUCREC.YVICD[1] = KM06M100.YVICD[1]; /* notice code 1*/
  KUCREC.YVICD[2] = KM06M100.YVICD[2]; /* notice code 2*/
  KUCREC.YVICD[3] = KM06M100.YVICD[3]; /* notice code 3*/
  KUCREC.YLICD = KM06M100.YLICD; /* late interest code*/
  KUCREC.KUCCSHNF = KM06M100.KUCCSHNF; /* cash notify flag*/
  KUCREC.KUCATCSH = KM06M100.KUCATCSH; /* autocash flag*/
  KUCREC.KUCSTMT = KM06M100.KUCSTMT; /* statement notify indic*/
  KUCREC.KUCMAGCT = KM06M100.KUCMAGCT; /* aging records count*/
  KUCREC.KUCXCSFL = KM06M100.KUCXCSFL; /* excess discount*/


   /* ***********************************************/
    /* format bill grp changes to blgrp record*/
   /* ***********************************************/

  KUCREC.CU-BILL-IND = KM06M100.CU-BILL-IND; /* end of month flag*/
  KUCREC.CU-PO-DT-FL = KM06M100.CU-PO-DT-FL; /* po dating ind*/
  KUCREC.KUCECODY = KM06M100.KUCECODY; /* eom cutoff day*/
  KUCREC.KUCPDSPD = KM06M100.KUCPDSPD; /* pref disc pymnt day*/
  KUCREC.KUCJSRFL = KM06M100.KUCJSRFL; /* subdivision flag*/
  KUCREC.XLBCD = KM06M100.XLBCD; /* lock box code*/
  KUCREC.KUCRAUTH = KM06M100.KUCRAUTH; /* clm return auth*/
  KUCREC.KUCWHSFL = KM06M100.KUCWHSFL; /* warehousing account*/



  if (KM06M100.KUECOMNT > " ")
    KUCREC.KUCCOMNT = "Y"; /* comment indicator*/
  end


  KUCREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp chg date*/
  KUCREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/



end // end KM06424

// update cmpny record
Function KM06426()
   /* **************************/
   /* update company*/
   /* **************************/

  set SQLCA empty;

  call "IO0240" ("U ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(31); /* cmpny upt since last request msg*/
      KM06W01.KM06WERR = "Y"; /* set error msg*/
      KM06200(); /* refresh the screen*/
      return;
    else
      KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM06W01.KM06WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUCREC.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06426";
      TA1REC.TA1LOC = "UPDATE DB2 DCUST.VCMPNY01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end



end // end KM06426

// Update NIL Distributor rec
Function KM06427()
   /* ***************************************/
   /* Update NIL Distributor table VDSTRB01*/
   /* ***************************************/

  set SQLCA empty;
  VDSTRB01.XXXSTAT = KUCREC.XXXSTAT;
  VDSTRB01.ZZZCHGDT = KUCREC.ZZZCHGDT;
  VDSTRB01.ZZZCHGTM = KUCREC.ZZZCHGTM;


  call "IO4600" ("U ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(31); /* cmpny upt since last request msg*/
      KM06W01.KM06WERR = "Y"; /* set error msg*/
      KM06200(); /* refresh the screen*/
      return;
    else
      KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM06W01.KM06WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DNILO";
      TA1REC.TA1TBLVU = "VDSTRB01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = VDSTRB01.KUCCOID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06426";
      TA1REC.TA1LOC = "UPDATE DB2 DNILO.VDSTRB01";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end



end // end KM06427

// update comments kuerec
Function KM06460()
   /* *******************************************/
   /* process comment maintenance*/
   /* *******************************************/
   /* **********format the date to update the "zz" family ****/
  XX0XS01();


  if (KM06W01.KM06WCMT == " ") /* if it is a new comment*/
    set KUEREC empty; /* empty out the comment record*/
    KUEREC.KUECMTID = KM06M100.KUCCOID;
  else /* ; if it is an old comment*/
    KUEREC.KUEGRP = KM06W01.KM06WCMT; /* before image*/
  end

   /* *******************************/
   /* insert before comment audit*/
   /* *******************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C"; /* a-add,c-change,d-delete,i-inactivate*/
  KUZREC.KUZBFCD = "B"; /* blank-add, b-before, a-after*/
  KUZREC.XXXTBLNM = "VCOMNT01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUEREC.KUECMTID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUEREC.KUEGRP;


  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM06   ";
    TA1REC.TA1LOCAT[1] = "KM06460  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOMNT01 ";
    TA1REC.TA1MAP = "KM06M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  KM06422(); /* insert before image of comment*/

  KM06464(); /* format comment record*/

  if (KM06W01.KM06WCMT == " ") /* if it is a new comment*/
    KM06466(); /* insert comment*/
  else
    KM06468(); /* update comment*/
  end

   /* ************************************/
   /* format audit trail record (after)*/
   /* ************************************/

  set KUZREC empty;
  KUZREC.KUZTYPE = "C";
  KUZREC.KUZBFCD = "A"; /* change/after*/
  KUZREC.XXXTBLNM = "VCOMNT01";
  KUZREC.XXXUSER = COMMAREA.CAUSERID;
  KUZREC.KUCCOID = KUEREC.KUECMTID;
  KUZREC.ZZZSDT = XX0XW01.XX0XWDAT;
  KUZREC.ZZHHMMSS = XX0XW01.XX0XWHMS;
  KUZREC.KUZDATA = KUEREC.KUEGRP;


  if (KUZREC.XXXTBLNM in KIZTBL.XXXTBLNM)
    KUZREC.KUZSSEQ = KIZTBL.KUZSSEQ[sysVar.arrayIndex];
    KUZREC.KUZLEN = KIZTBL.KUZLEN[sysVar.arrayIndex];
  else
    KUZREC.KUZSSEQ = 0;
    KUZREC.KUZLEN = 0;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1PGMNM = "KM06   ";
    TA1REC.TA1LOCAT[1] = "KM06460  ";
    TA1REC.TA1LOCAT[2] = "KIZTBL   ";
    TA1REC.TA1LOCAT[3] = "VCOMNT01 ";
    TA1REC.TA1MAP = "KM06M000";
    TA1REC.TA1DBASE = "DCUST.";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1TBLKE = "TABLE NOT FOUND";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
  end

  KM06422(); /* insert after image of comment*/



end // end KM06460

// prepare comment record
Function KM06464()
   /* **************************************/
   /* prepare comment record*/
   /* **************************************/

  KUEREC.KUECMTID = KM06M100.KUCCOID; /* comment id*/
  KUEREC.KUECTYP = "C";
  KUEREC.KUECSEQ = 1;
  KUEREC.XNDCD = "CRMN"; /* internal dept.*/
  KUEREC.KUECOMNT = KM06M100.KUECOMNT; /* comment*/

  KUEREC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* stamp add date*/
  KUEREC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* stamp chg time*/



end // end KM06464

// insert comment record
Function KM06466()
   /* ********************************************/
   /* insert comment record*/
   /* ********************************************/

  set SQLCA empty;

  KM06W01.KM06WCMT = KUEREC.KUEGRP;

  call "IO0250" ("A ", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* syncpoint rollback*/
    SQLCA.SQLCAREC = KM06W01.KM06WSQL;
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCOMNT01";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUEREC.KUECMTID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06466";
    TA1REC.TA1LOC = "ADD VCOMNT01 DEPT-";
    TA1REC.TA1LOCAT[4] = KUEREC.XNDCD;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



end // end KM06466

// update comment record
Function KM06468()
   /* **********************/
    /* update comment*/
   /* **********************/

  set SQLCA empty;

  call "IO0250" ("U ", SQLCA, KUEREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* different change count?*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      converseLib.validationFailed(32); /* comment upt since last ref. msg*/
      KM06W01.KM06WERR = "Y"; /* set error msg*/
      KM06200(); /* refresh the screen*/
      return;
    else
      KM06W01.KM06WSQL = SQLCA.SQLCAREC; /* hold error sqlca*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* syncpoint rollback*/
      SQLCA.SQLCAREC = KM06W01.KM06WSQL;
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCOMNT01";
      TA1REC.TA1MAP = " ";
      KM06W01.KM06WKEY = KUEREC.KUECMTID;
      TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
      TA1REC.TA1PGMNM = "KM06468";
      TA1REC.TA1LOC = "UPDATE VCOMNT01 DEPT-";
      TA1REC.TA1LOCAT[4] = KUEREC.XNDCD;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end



end // end KM06468

// edit screen data
Function KM06500()


   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/

   /* note: edits are performed in reverse sequence of field*/
         /* appearance.  edit criteria are found in stmt grps.*/
   /* ***********************************************************/

  set KM06M100.KUCCOID initialAttributes;
  if (KM06M100.KUCCOID == KM06W01.KM06WCID
   && KM06M100.KUCCOID != 0)
    /* next sentence*/
  else
    KM06200(); /* refresh screen*/
    KM06W01.KM06WERR = "Y"; /* set error flag*/
    KM06W01.KM06WEFL = "N"; /* set update flag*/
    KM06W01.KM06WMD1 = "N"; /* set update flag*/
    KM06W01.KM06WMD3 = "N"; /* set update flag*/
    return;
  end

  if (KM06W01.KM06WUPM == "Y") /* if in update mode*/
    KM06401(); /* set fields defined*/
  else
    return;
  end

   /* **********************/
   /* show pop-up windows*/
   /* **********************/

  KM06502(); /* show pop-up windows*/

   /* *******************************************************/
      /* edit comment                     ----------------*/
   /* *******************************************************/

  if (KM06M100.KUECOMNT != KUEREC.KUECOMNT) /* comment field check*/
    KM06W01.KM06WMD3 = "Y"; /* comnt data modified*/
    if (KUCREC.KUCCOMNT != "Y")
      KM06W01.KM06WMD1 = "Y"; /* cmpny comment flag changes*/
    end
  end

   /* ******************************************************/
   /* edits: screen lines 13 thru 20                      **/
   /* kucstmt   ylicd    yvicd(1)    yvicd(2)    yvicd(3)**/
   /* kucdunfl  xctcd    kucatcsh    kuccshnf    kucjsrfl**/
   /* xiecd     kuclbofl kucidind                kucrauth**/
   /* kuainvtp  kucbpind kuceom      kucpdspd    kucecody**/
                                              /* kucwhsfl**/
  KM06505();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen line 12                               **/
   /* xcucd(1)  xcucd(2) xcucd(3)                        **/
                                                      /* **/
  KM06510();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen line 11                               **/
   /* kuccolcd  kucasmt  xcrcd                           **/
                                                      /* **/
  KM06515();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen part of line 10                       **/
   /* km06mfim  km06mfiy km06mfcm   km06mfcy             **/
   /* km06m-cr-appl-mm   km06m-cr-appl-yy                **/
                                                      /* **/
  KM06520();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen part of line 10 and 9                 **/
   /* kucstat  xlgcd  km06msbm  km06msby  xlbcd  xcccd   **/
                                                      /* **/
  KM06522();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen line 7                                **/
   /* km06mlem  km06mled  km06mley  kuclcamt             **/
   /* km06mlxm  km06mlxd  km06mlxy                       **/
                                                      /* **/
  KM06525();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen line 6 and part of 5                  **/
   /* kucapdex  kucacynr  kucacyrt  km06mdbm  km06mdby   **/
   /* kuclvind                                           **/
                                                      /* **/
  KM06530();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen part of line 5                        **/
   /* kuccrlin  km06mcfm  km06mcfy  km06mcxm  km06mcxy   **/
                                                      /* **/
  KM06535();

   /* ******************************************************/

   /* ******************************************************/
   /* edits: screen lines 1, 2 and 3                      **/
   /* kukpcoid  kucconm  kucuphn  kucgrpid  kuccoanm     **/
                                                      /* **/
  KM06540();

   /* ******************************************************/





end // end KM06500

// show pop-up windows
Function KM06502()

   /* ***********************************/
    /* legal organization table*/
   /* ***********************************/

  if (KM06M100.XLGCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXLG01();
    end
    set KM06M100.XLGCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.XLGCD = XLGTBL.XLGCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* lock box table*/
   /* ***********************************/

  if (KM06M100.XLBCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXLA02();
    end
    set KM06M100.XLBCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.XLBCD = XLATBL.XLBCD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* late interest*/
   /* ***********************************/

  if (KM06M100.YLICD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYLI01();
    end
    set KM06M100.YLICD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.YLICD = YLITBL.YLICD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* remit indicators*/
   /* ***********************************/

  if (KM06M100.YVICD[1] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYVI01();
    end
    set KM06M100.YVICD[1] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.YVICD[1] = YVITBL.YVICD[XX0XWPIX];
    end
  end

  if (KM06M100.YVICD[2] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYVI01();
    end
    set KM06M100.YVICD[2] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.YVICD[2] = YVITBL.YVICD[XX0XWPIX];
    end
  end

  if (KM06M100.YVICD[3] == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPYVI01();
    end
    set KM06M100.YVICD[3] cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.YVICD[3] = YVITBL.YVICD[XX0XWPIX];
    end
  end

   /* ***********************************/
    /* country codes table*/
   /* ***********************************/

  if (KM06M100.XCTCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPXCT01();
    end
    set KM06M100.XCTCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      KM06M100.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
    end
  end

  converseLib.clearScreen();
  
end // end KM06502

// edit some flags codes inds
Function KM06505()
   /* ***********************************************************/
   /* ------- edit fields from upt basic co/cr map ------*/

   /* first set of flags codes and indicators*/
   /* ***********************************************************/
   /* **********************************************/
   /* *****     check if company changes        ****/
   /* **********************************************/

  if (KM06M100.XIECD != KUCREC.XIECD
   || KM06M100.XCTCD != KUCREC.XCTCD
   || KM06M100.YVICD[1] != KUCREC.YVICD[1]
   || KM06M100.YVICD[2] != KUCREC.YVICD[2]
   || KM06M100.YVICD[3] != KUCREC.YVICD[3]
   || KM06M100.YLICD != KUCREC.YLICD
   || KM06M100.KUCBPIND != KUCREC.KUCBPIND
   || KM06M100.KUCIDIND != KUCREC.KUCIDIND
   || KM06M100.KUCLBOFL != KUCREC.KUCLBOFL
   || KM06M100.KUCATCSH != KUCREC.KUCATCSH
   || KM06M100.KUCXCSFL != KUCREC.KUCXCSFL
   || KM06M100.KUCCSHNF != KUCREC.KUCCSHNF
   || KM06M100.KUCSTMT != KUCREC.KUCSTMT
   || KM06M100.KUCJSRFL != KUCREC.KUCJSRFL
   || KM06M100.CU-BILL-IND != KUCREC.CU-BILL-IND
   || KM06M100.CU-PO-DT-FL != KUCREC.CU-PO-DT-FL
   || KM06M100.KUCECODY != KUCREC.KUCECODY
   || KM06M100.KUCPDSPD != KUCREC.KUCPDSPD
   || KM06M100.KUCRAUTH != KUCREC.KUCRAUTH
   || KM06M100.KUCWHSFL != KUCREC.KUCWHSFL)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified*/
  end

  if (KM06W01.KM06W-VCRCHK02-MODIFIED-FL == "Y")
    KM06W01.KM06WMD1 = "Y";
  end


  if (KM06W01.KM06WMD1 == "Y")
    /* NEXT SENTENCE*/
  else
    return;
  end

   /* **********************************************/
   /* check eom cutoff day*/
   /* **********************************************/

  if (KM06M100.KUCECODY != KUCREC.KUCECODY)
    if (KM06M100.CU-BILL-IND == "Y"
     || KM06M100.CU-PO-DT-FL == "Y")
      if (KM06M100.KUCECODY == 0)
        converseLib.validationFailed(190); /* day range problem*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCECODY cursor, modified, bold;
      else
        if (KM06M100.KUCECODY > 1
         && KM06M100.KUCECODY < 29)
          set KM06M100.KUCECODY initialAttributes;
        else
          converseLib.validationFailed(190); /* day range problem*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.KUCECODY cursor, modified, bold;
        end
      end
    else
      if (KM06M100.KUCECODY == 0)
        set KM06M100.KUCECODY initialAttributes;
      else
        converseLib.validationFailed(191); /* day must be zero*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCECODY cursor, modified, bold;
      end
    end
  end

   /* *****************************************/
   /* check preferred d ne kucrec.count payment day*/
   /* *****************************************/

  if (KM06M100.KUCPDSPD != KUCREC.KUCPDSPD)
    if (KM06M100.CU-BILL-IND == "Y")
      if (KM06M100.KUCPDSPD == 0)
        converseLib.validationFailed(190);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCPDSPD cursor, modified, bold;
      else
        if (KM06M100.KUCPDSPD > 1
         && KM06M100.KUCPDSPD < 29)
          set KM06M100.KUCPDSPD initialAttributes;
        else
          converseLib.validationFailed(190);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.KUCPDSPD cursor, modified, bold;
        end
      end
    else
      if (KM06M100.KUCPDSPD == 0)
        set KM06M100.KUCPDSPD initialAttributes;
      else
        converseLib.validationFailed(191);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCPDSPD cursor, modified, bold;
      end
    end
  end

   /* *****************************************/
    /* check end of month flag*/
   /* *****************************************/

  if (KM06M100.CU-BILL-IND != KUCREC.CU-BILL-IND)
    if (KM06M100.CU-BILL-IND != " ")
      if (KM06M100.CU-BILL-IND == "Y"
       || KM06M100.CU-BILL-IND == "N")
        set KM06M100.CU-BILL-IND initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.CU-BILL-IND cursor, modified, bold;
      end
    else
      KM06M100.CU-BILL-IND = "N";
      set KM06M100.CU-BILL-IND initialAttributes;
    end
  end
   /* added 3-26-91  as an extra edit   (tw)*/
  if (KM06M100.CU-BILL-IND == "Y")
    if (KM06M100.KUCPDSPD == 0) /* so if eom cut off day is yes*/
      converseLib.validationFailed(190); /* day must be >0 <29*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.CU-BILL-IND cursor, modified, bold;
      set KM06M100.KUCPDSPD cursor, modified, bold;
    end
  end

  if (KM06M100.CU-BILL-IND == "N")
    if (KM06M100.KUCPDSPD != 0)
      converseLib.validationFailed(191); /* day must be  0*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.CU-BILL-IND cursor, modified, bold;
      set KM06M100.KUCPDSPD cursor, modified, bold;
    end
  end


   /* *****************************************/
    /* check Warehouse Agreement flag*/
   /* *****************************************/

  if (KM06M100.KUCWHSFL != KUCREC.KUCWHSFL)
    if (KM06M100.KUCWHSFL != " ")
      if (KM06M100.KUCWHSFL == "Y"
       || KM06M100.KUCWHSFL == "N")
        set KM06M100.KUCWHSFL initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCWHSFL cursor, modified, bold;
      end
    else
      KM06M100.KUCWHSFL = "N";
      set KM06M100.KUCWHSFL initialAttributes;
    end
  end


   /* ****************************************************/
   /* *****     edit book dt price override flag    ******/
   /* ****************************************************/

  if (KM06M100.KUCBPIND != KUCREC.KUCBPIND)
    if (KM06M100.KUCBPIND != " ")
      if (KM06M100.KUCBPIND == "Y"
       || KM06M100.KUCBPIND == "N")
        set KM06M100.KUCBPIND initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCBPIND cursor, modified, bold;
      end
    else
      KM06M100.KUCBPIND = "N";
      set KM06M100.KUCBPIND initialAttributes;
    end
  end

   /* *****************************************/
    /* check p.o. dating indicator*/
   /* *****************************************/

  if (KM06M100.CU-PO-DT-FL != KUCREC.CU-PO-DT-FL)
    if (KM06M100.CU-PO-DT-FL == " ")
      KM06M100.CU-PO-DT-FL = "N";
      set KM06M100.CU-PO-DT-FL initialAttributes;
    else
      if (KM06M100.CU-PO-DT-FL == "Y"
       || KM06M100.CU-PO-DT-FL == "N")
        set KM06M100.CU-PO-DT-FL initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.CU-PO-DT-FL cursor, modified, bold;
      end
    end
  end


   /* *****************************************/
    /* check Claims Return Auth Flag*/
   /* *****************************************/

  if (KM06M100.KUCRAUTH != KUCREC.KUCRAUTH)
    if (KM06M100.KUCRAUTH != " ")
      if (KM06M100.KUCRAUTH == "Y"
       || KM06M100.KUCRAUTH == "N")
        set KM06M100.KUCRAUTH initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCRAUTH cursor, modified, bold;
      end
    else
      KM06M100.KUCRAUTH = "Y";
      set KM06M100.KUCRAUTH initialAttributes;
    end
  end


   /* ***************************************/
   /* *****     edit inv delay flag    ******/
   /* ***************************************/

  if (KM06M100.KUCIDIND != KUCREC.KUCIDIND)
    if (KM06M100.KUCIDIND != " ")
      if (KM06M100.KUCIDIND == "Y"
       || KM06M100.KUCIDIND == "N")
        set KM06M100.KUCIDIND initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCIDIND cursor, modified, bold;
      end
    else
      KM06M100.KUCIDIND = "N";
      set KM06M100.KUCIDIND initialAttributes;
    end
  end

   /* ***************************************/
   /* *****  edit leverage buyout flag ******/
   /* ***************************************/

  if (KM06M100.KUCLBOFL != KUCREC.KUCLBOFL)
    if (KM06M100.KUCLBOFL != " ")
      if (KM06M100.KUCLBOFL == "Y"
       || KM06M100.KUCLBOFL == "N")
        set KM06M100.KUCLBOFL initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCLBOFL cursor, modified, bold;
      end
    else
      KM06M100.KUCLBOFL = "N";
      set KM06M100.KUCLBOFL initialAttributes;
    end
  end

   /* **********************************************/
   /* *****     edit internal/external flag   ******/
   /* **********************************************/

  if (KM06M100.XIECD != KUCREC.XIECD)
    if (KM06M100.XIECD == " ")
      KM06M100.XIECD = "E "; /* external*/
    end

    if (KM06M100.KUCCOLCD == "Y")
      KM06M100.XIECD = "I"; /* internal*/
    end

    if (KM06M100.XIECD in XIETBL.XIECD)
      if (XIETBL.XXXSTAT[sysVar.arrayIndex] != "A")
        converseLib.validationFailed(71);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XIECD cursor, bold;
      else
        set KM06M100.XIECD initialAttributes;
      end
    else
      converseLib.validationFailed(17);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XIECD cursor, modified, bold;
    end
  end

   /* *****************************************/
    /* check subdiv ne kucrec.ion flag*/
   /* *****************************************/

  if (KM06M100.KUCJSRFL != KUCREC.KUCJSRFL)
    if (KM06M100.KUCJSRFL != " ")
      if (KM06M100.KUCJSRFL == "Y"
       || KM06M100.KUCJSRFL == "N")
        set KM06M100.KUCJSRFL initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCJSRFL cursor, modified, bold;
      end
    else
      KM06M100.KUCJSRFL = "N";
      set KM06M100.KUCJSRFL initialAttributes;
    end
  end

   /* *****************************************/
    /* check auto cash flag*/
   /* *****************************************/

  if (KM06M100.KUCATCSH != KUCREC.KUCATCSH)
    if (KM06M100.KUCATCSH != " ")
      if (KM06M100.KUCATCSH == "Y"
       || KM06M100.KUCATCSH == "N")
        set KM06M100.KUCATCSH initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCATCSH cursor, modified, bold;
      end
    else
      KM06M100.KUCATCSH = "N";
      set KM06M100.KUCATCSH initialAttributes;
    end
  end

   /* *****************************************/
    /* check excess d ne kucrec.count flag*/
   /* *****************************************/

  if (KM06M100.KUCXCSFL != KUCREC.KUCXCSFL)
    if (KM06M100.KUCXCSFL != " ")
      if (KM06M100.KUCXCSFL == "Y"
       || KM06M100.KUCXCSFL == "N")
        set KM06M100.KUCXCSFL initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCXCSFL cursor, modified, bold;
      end
    else
      KM06M100.KUCXCSFL = "N";
      set KM06M100.KUCXCSFL initialAttributes;
    end
  end

   /* *****************************************/
    /* check cash notify flag*/
   /* *****************************************/

  if (KM06M100.KUCCSHNF != KUCREC.KUCCSHNF)
    if (KM06M100.KUCCSHNF != " ")
      if (KM06M100.KUCCSHNF == "Y"
       || KM06M100.KUCCSHNF == "N")
        set KM06M100.KUCCSHNF initialAttributes;
      else
        converseLib.validationFailed(20);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCCSHNF cursor, modified, bold;
      end
    else
      KM06M100.KUCCSHNF = "N";
      set KM06M100.KUCCSHNF initialAttributes;
    end
  end

   /* *****************************************/
    /* edit Country Code*/
   /* *****************************************/

  if (KM06M100.XCTCD != KUCREC.XCTCD)
    if (KM06M100.XCTCD in XCTTBL.XCTCD)
      if (XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM06M100.XCTCD initialAttributes;
      else
        converseLib.validationFailed(71);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XCTCD cursor, modified, bold;
      end
    else
      converseLib.validationFailed(17);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XCTCD cursor, modified, bold;
    end
  end

   /* *****************************************/
    /* edit notification codes tc330*/
   /* *****************************************/

  if (KM06M100.YVICD[3] != KUCREC.YVICD[3])
    if (KM06M100.YVICD[3] == " ")
      set KM06M100.YVICD[3] initialAttributes;
    else
      if (KM06M100.YVICD[3] in YVITBL.YVICD)
        if (YVITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM06M100.YVICD[3] initialAttributes;
        else
          converseLib.validationFailed(71);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.YVICD[3] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.YVICD[3] cursor, modified, bold;
      end
    end
  end

   /* *****************************************/
    /* edit notification codes tc400*/
   /* *****************************************/

  if (KM06M100.YVICD[2] != KUCREC.YVICD[2])
    if (KM06M100.YVICD[2] == " ")
      set KM06M100.YVICD[2] initialAttributes;
    else
      if (KM06M100.YVICD[2] in YVITBL.YVICD)
        if (YVITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM06M100.YVICD[2] initialAttributes;
        else
          converseLib.validationFailed(71);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.YVICD[2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.YVICD[2] cursor, modified, bold;
      end
    end
  end

   /* *****************************************/
    /* edit notification codes tc430*/
   /* *****************************************/

  if (KM06M100.YVICD[1] != KUCREC.YVICD[1])
    if (KM06M100.YVICD[1] == " ")
      set KM06M100.YVICD[1] initialAttributes;
    else
      if (KM06M100.YVICD[1] in YVITBL.YVICD)
        if (YVITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM06M100.YVICD[1] initialAttributes;
        else
          converseLib.validationFailed(71);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.YVICD[1] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.YVICD[1] cursor, modified, bold;
      end
    end
  end

   /* *****************************************/
    /* edit late interest code*/
   /* *****************************************/

  if (KM06M100.YLICD != KUCREC.YLICD)
    if (KM06M100.YLICD == " ")
      set KM06M100.YLICD initialAttributes;
    else
      if (KM06M100.YLICD in YLITBL.YLICD)
        if (YLITBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM06M100.YLICD initialAttributes;
        else
          converseLib.validationFailed(71);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.YLICD cursor, modified, bold;
        end
      else
        converseLib.validationFailed(17);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.YLICD cursor, modified, bold;
      end
    end
  end

   /* *****************************************/
    /* check send statement indicator*/
   /* *****************************************/

  if (KM06M100.KUCSTMT != KUCREC.KUCSTMT)
    if (KM06M100.KUCSTMT != " ")
      if (KM06M100.KUCSTMT == "1"
       || KM06M100.KUCSTMT == "2"
       || KM06M100.KUCSTMT == "3"
       || KM06M100.KUCSTMT == "4"
       || KM06M100.KUCSTMT == "5")
        set KM06M100.KUCSTMT initialAttributes;
      else
        converseLib.validationFailed(320);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCSTMT cursor, modified, bold;
      end
    else
      KM06M100.KUCSTMT = "1";
      set KM06M100.KUCSTMT initialAttributes;
    end
  end



end // end KM06505

// edit credit representatives
Function KM06510()
   /* ************************************/
   /* edit reps*/
   /* ************************************/

  if (KM06M100.XCUCD[1] != KUCREC.XCUCD[1]
   || KM06M100.XCUCD[2] != KUCREC.XCUCD[2]
   || KM06M100.XCECD != KUCREC.XCECD
   || KM06M100.KUCCOLCD != KUCREC.KUCCOLCD)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/
  else
    return; /* no change/no edit*/
  end

   /* ***********************************************************/
    /* check credit service reps - must be valid if entered*/
    /* 1st entry - credit service rep - must be present*/
    /* 2nd entry - credit collections rep - optional*/
    /* 3rd entry - credit analyst rep - must be present*/
   /* ***********************************************************/


  if (KM06M100.XCECD != KUCREC.XCECD)
    set KM06M100.XCECD initialAttributes;
    if (KM06M100.XCECD > " ")
      if (KM06M100.XCECD in XCETBL.XCECD)
        if (XCETBL.XXXSTAT[sysVar.arrayIndex] == "A") /* status active?*/
          set KM06M100.XCECD initialAttributes;
        else
          converseLib.validationFailed(283); /* inactive code*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.XCECD cursor, modified, bold;
        end
      else
        converseLib.validationFailed(282); /* invalid code*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XCECD cursor, modified, bold;
      end
    else
      converseLib.validationFailed(284); /* required code*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XCECD cursor, modified, bold;
    end
  end

   /* ***********************************************************/
   /* collection code must be y or n*/
   /* edit collections code*/
   /* then edit reps for collection codes*/
   /* ***********************************************************/
   /* this is the paragraph to change with a new edit rule*/
    /* if kuccolcd = ''y'*/
      /* xcucd(2) must be entered and valid*/
    /* if kuccolcd = n*/
      /* xcucd(2) must be spaces*/
    /* if xcucd(2) > spaces*/
      /* xcucd(2) must be valid*/
      /* kuccolcd must be 'y'*/
    /* if xcucd(2) =  spaces*/
      /* kuccolcd must be 'n'*/
   /* changed 3/28/91 tw*/
   /* ***********************************************************/

  if (KM06M100.KUCCOLCD != KUCREC.KUCCOLCD)
    if (KM06M100.KUCCOLCD == "Y"
     || KM06M100.KUCCOLCD == "N")
      set KM06M100.KUCCOLCD initialAttributes;
    else
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      converseLib.validationFailed(292); /* invalid collections code*/
      set KM06M100.KUCCOLCD cursor, modified, bold;
    end
  end


  if (KM06M100.XCUCD[2] != KUCREC.XCUCD[2])
    set KM06M100.XCUCD[2] initialAttributes;
  end

  if (KM06M100.KUCCOLCD == "Y")
    if (KM06M100.XCUCD[2] > " ")
      if (KM06M100.XCUCD[2] in XCUTBL.XCUCD)
        if (XCUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          if (XCUTBL.XCURMGR[sysVar.arrayIndex] == "JS70") /* title code collections?*/
            set KM06M100.XCUCD[2] initialAttributes;
          else
            converseLib.validationFailed(285); /* invalid code*/
            KM06W01.KM06WERR = "Y"; /* set error flag*/
            set KM06M100.XCUCD[2] cursor, modified, bold;
          end
        else
          converseLib.validationFailed(286); /* inactive code*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.XCUCD[2] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(285); /* invalid code*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XCUCD[2] cursor, modified, bold;
      end
    else
      converseLib.validationFailed(285); /* invalid code*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XCUCD[2] cursor, modified, bold;
    end
  end

  if (KM06M100.KUCCOLCD == "N")
    if (KM06M100.XCUCD[2] > " ")
      converseLib.validationFailed(127); /* invalid code*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XCUCD[2] cursor, modified, bold;
    end
  end

   /* *****************************/
   /* edit credit service rep code*/
   /* *****************************/

  if (KM06M100.XCUCD[1] != KUCREC.XCUCD[1])
    if (KM06M100.XCUCD[1] > " ")
      if (KM06M100.XCUCD[1] in XCUTBL.XCUCD)
        if (XCUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          if (XCUTBL.XCURMGR[sysVar.arrayIndex] == "AA" /* c & a rep*/
           || XCUTBL.XCURMGR[sysVar.arrayIndex] == "JS70") /* coll rep*/
            converseLib.validationFailed(287); /* invalid code*/
            KM06W01.KM06WERR = "Y"; /* set error flag*/
            set KM06M100.XCUCD[1] cursor, modified, bold;
          else
            if (XCUTBL.XCRCD[sysVar.arrayIndex] == KM06M100.XCRCD)
              set KM06M100.XCUCD[1] initialAttributes;
            else
              KM06W01.KM06WERR = "Y"; /* set error flag*/
              converseLib.validationFailed(290); /* region code invalid*/
              set KM06M100.XCRCD modified, bold;
              set KM06M100.XCUCD[1] cursor, modified, bold;
            end
          end
        else
          converseLib.validationFailed(288); /* inactive code*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.XCUCD[1] cursor, modified, bold;
        end
      else
        converseLib.validationFailed(287); /* invalid code*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XCUCD[1] cursor, modified, bold;
      end
    else
      converseLib.validationFailed(289); /* required code*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XCUCD[1] cursor, modified, bold;
    end
  end



end // end KM06510

// edit xcr, asmt, coll cd, aging
Function KM06515()
   /* ***********************************************/
   /* edit credit region, credit assement,*/
    /* credit collections code, max aging count*/
   /* ***********************************************/

   /* F KM06M100.KUCCOLCD NE KUCREC.KUCCOLCD;*/
  if (KM06M100.KUCASMT != KUCREC.KUCASMT
   || KM06M100.XCRCD != KUCREC.XCRCD
   || KM06M100.KUCMAGCT != KUCREC.KUCMAGCT)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/
  else
    return; /* no change/no edit*/
  end


   /* *************************************/
    /* credit region id - must be in xcr table*/
   /* *************************************/

  if (KM06M100.XCRCD != KUCREC.XCRCD)
    if (KM06M100.XCUCD[1] in XCUTBL.XCUCD
     && XCUTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && XCUTBL.XCRCD[sysVar.arrayIndex] == KM06M100.XCRCD)
      set KM06M100.XCRCD initialAttributes;
    else
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      converseLib.validationFailed(290); /* region code invalid*/
      set KM06M100.XCRCD cursor, modified, bold;
      set KM06M100.XCUCD[1] modified, bold;
    end
  end


   /* *************************************/
    /* managers assessment must be 01-30 if present*/
   /* *************************************/

  if (KM06M100.KUCASMT != KUCREC.KUCASMT)
    set KM06M100.KUCASMT initialAttributes;
    if (KM06M100.KUCASMT > 0)
      if (KM06M100.KUCASMT >= 1
       && KM06M100.KUCASMT <= 30)
        /* next sentence*/
      else
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        converseLib.validationFailed(291); /* managers asmt not 01-30*/
        set KM06M100.KUCASMT cursor, modified, bold;
      end
    end
  end

   /* *************************************/
   /* collection code must be y or n*/
   /* *************************************/
   /* this goes along with the same edit rule in*/
   /* module before this (3-27-91)*/
   /* *************************************/
   /* this module moved to km06510 3-28-91*/
   /* *************************************/


   /* *************************************/
   /* a/r max aging count*/
   /* *************************************/

  if (KM06M100.KUCMAGCT != KUCREC.KUCMAGCT)
    if (KM06M100.KUCMAGCT >= 0)
      set KM06M100.KUCMAGCT initialAttributes;
    else
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      converseLib.validationFailed(17); /* invalid code*/
      set KM06M100.KUCMAGCT cursor, modified, bold;
    end
  end



end // end KM06515

// edit financial dates
Function KM06520()

   /* ***********************************************/
   /* Financial Issue Date - required*/
    /* range check month/year*/
   /* Credit Application Date - required*/
    /* range check month/year*/
   /* Dun & Bradstreet Last Report date - Not Required*/
    /* range check month/year*/
   /* ***********************************************/
   /* **/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  /* This gives access to today's century, year and month for date*/
  /* editing.*/

  KM06W01.KM06W-XXDAT = XX0XW01.XX0XWDAT;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  if (KM06M100.KM06MFIM != KM06W01.KM06WFIM
   || KM06M100.KM06MFIY != KM06W01.KM06WFIY)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/
    set KM06M100.KM06MFIY initialAttributes;
    set KM06M100.KM06MFIM initialAttributes;
    if (KM06M100.KM06MFIM > 0)
      if (KM06M100.KM06MFIM >= 1
       && KM06M100.KM06MFIM <= 12)

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06MFIY GT 0;*/
  /* ;/* next sentence*/
  /* ELSE;*/
  /* MOVE 297 TO EZEMNO;      /* financial issue year invalid*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;/* set error flag*/
  /* SET KM06M100.KM06MFIY CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
        /* next sentence*/
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

      else
        set KM06M100.KM06MFIM cursor, modified, bold;
        converseLib.validationFailed(298); /* financial issue month invalid*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
      end
    else
      if (KM06M100.KM06MFIY != 0)
        converseLib.validationFailed(298); /* financial issue month invalid*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KM06MFIM cursor, modified, bold;
      end
    end
  end

   /* -------------------------------------------------*/
      /* Credit Application Date*/
   /* -------------------------------------------------*/

  if (KM06M100.KM06M-CR-APPL-YY != KM06W01.KM06W-CR-APPL-YY
   || KM06M100.KM06M-CR-APPL-MM != KM06W01.KM06W-CR-APPL-MM)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06M-CR-APPL-YY GT 0*/
  /* AND KM06M100.KM06M-CR-APPL-YY LE XX0XW01.XX0XWYY*/
  /* AND KM06M100.KM06M-CR-APPL-YY GT 60;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    KM06W01.KM06W-WRK-YY = KM06M100.KM06M-CR-APPL-YY;
    if (KM06M100.KM06M-CR-APPL-YY > 60)
      KM06W01.KM06W-WRK-CC = 19;
    else
      KM06W01.KM06W-WRK-CC = 20;
    end
    if (KM06W01.KM06W-WRK-CCYY <= KM06W01.KM06W-XXCCYY)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

      set KM06M100.KM06M-CR-APPL-YY initialAttributes;
      KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/
    else
      converseLib.validationFailed(427);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.KM06M-CR-APPL-YY cursor, modified, bold;
    end

    if (KM06M100.KM06M-CR-APPL-MM > 0
     && KM06M100.KM06M-CR-APPL-MM <= 12)

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06M-CR-APPL-YY EQ XX0XW01.XX0XWYY*/
  /* AND KM06M100.KM06M-CR-APPL-MM GT XX0XW01.XX0XWMM;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
      KM06W01.KM06W-WRK-MM = KM06M100.KM06M-CR-APPL-MM;
      if (KM06W01.KM06W-WRK-CCYYMM > KM06W01.KM06W-XXCCYYMM)
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

        converseLib.validationFailed(426); /* d&d month not 1-12*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KM06M-CR-APPL-MM cursor, modified, bold;
      else
        set KM06M100.KM06M-CR-APPL-MM initialAttributes;
      end
    else
      converseLib.validationFailed(426); /* d&d month not 1-12*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.KM06M-CR-APPL-MM cursor, modified, bold;
    end

  end


   /* -----------------------------------------*/
   /* edit d&b report date*/
   /* -----------------------------------------*/

  if (KM06M100.KM06M-LST-DAB-RPT-YY != KM06W01.KM06W-LST-DAB-RPT-YY
   || KM06M100.KM06M-LST-DAB-RPT-MM != KM06W01.KM06W-LST-DAB-RPT-MM)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06M-LST-DAB-RPT-YY GT 0*/
  /* AND KM06M100.KM06M-LST-DAB-RPT-YY LE XX0XW01.XX0XWYY*/
  /* AND KM06M100.KM06M-LST-DAB-RPT-YY GT 60;*/
  /* SET KM06M100.KM06M-LST-DAB-RPT-YY DEFINED;*/
  /* ELSE;*/
  /* MOVE 429 TO EZEMNO;*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;/* set error flag*/
  /* SET KM06M100.KM06M-LST-DAB-RPT-YY CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /* ;*/
  /* IF KM06M100.KM06M-LST-DAB-RPT-MM GT 0*/
  /* AND KM06M100.KM06M-LST-DAB-RPT-MM LE 12;*/
  /* IF KM06M100.KM06M-LST-DAB-RPT-YY EQ XX0XW01.XX0XWYY*/
  /* AND KM06M100.KM06M-LST-DAB-RPT-MM GT XX0XW01.XX0XWMM;*/
  /* MOVE 428 EZEMNO;           /* d&d month not 1-12*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;/* set error flag*/
  /* SET KM06M100.KM06M-LST-DAB-RPT-MM CURSOR,MODIFIED,BRIGHT;*/
  /* ELSE;*/
  /* SET KM06M100.KM06M-LST-DAB-RPT-MM DEFINED;*/
  /* END;*/
  /* ELSE;*/
  /* MOVE 428 EZEMNO;             /* d&d month not 1-12*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;/* set error flag*/
  /* SET KM06M100.KM06M-LST-DAB-RPT-MM CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    KM06W01.KM06W-WRK-YY = KM06M100.KM06M-LST-DAB-RPT-YY;
    if (KM06M100.KM06M-LST-DAB-RPT-YY > 60)
      KM06W01.KM06W-WRK-CC = 19;
    else
      KM06W01.KM06W-WRK-CC = 20;
    end
    if (KM06W01.KM06W-WRK-CCYY <= KM06W01.KM06W-XXCCYY)
      set KM06M100.KM06M-LST-DAB-RPT-YY initialAttributes;
      if (KM06M100.KM06M-LST-DAB-RPT-MM > 0
       && KM06M100.KM06M-LST-DAB-RPT-MM <= 12)
        KM06W01.KM06W-WRK-MM = KM06M100.KM06M-LST-DAB-RPT-MM;
        if (KM06W01.KM06W-WRK-CCYYMM > KM06W01.KM06W-XXCCYYMM)
          converseLib.validationFailed(428); /* d&d month not valid*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.KM06M-LST-DAB-RPT-MM cursor, modified, bold;
        else
          set KM06M100.KM06M-LST-DAB-RPT-MM initialAttributes;
        end
      else
        converseLib.validationFailed(428); /* d&d month not 1-12*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KM06M-LST-DAB-RPT-MM cursor, modified, bold;
      end
    else
      converseLib.validationFailed(429);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.KM06M-LST-DAB-RPT-YY cursor, modified, bold;
    end

  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  end


end // end KM06520

// more edits
Function KM06522()
   /* *********************************************************************/
   /* maintenance log:                                                  **/
   /* 02/10/94 BCourt Revise 'XCC' edit to allow for one code to have both*/
   /* 'A'ctive and 'I'nactive values.  Use only active code. **/
   /* Copy from OP0CS-check-credit, replace 'if-in' code.    **/
   /* 03/17/97 kclar1 add otb date and amount                            **/
   /* 07/28/97 kclar1 removed otb edit to another statement group        **/
   /* Y2KFIX   12/04/97  DKENNY  Y2K modification made to increase size  **/
   /* of KM06MSBY to 4 bytes to reflect change**/
   /* from YY to CCYY.  Edit for range 1800 to**/
   /* 2100.                                   **/
   /* *********************************************************************/

   /* *********************************************************************/
   /* make sure that any of the fields edited in this*/
   /* statement have been modified*/
   /* *********************************************************************/
  KM06W01.KM06W-VCRCHK02-MODIFIED-FL = "N"; /* initialize update fl*/


  if (KM06M100.XCCCD != KUCREC.XCCCD             
   || KM06M100.XLGCD != KUCREC.XLGCD             
   || KM06M100.XXXSTAT != KUCREC.XXXSTAT         
   || KM06M100.KM06MSBM != KM06W01.KM06WSBM      
   || KM06M100.KM06MSBY != KM06W01.KM06WSBY      
   || KM06M100.XLBCD != KUCREC.XLBCD             
   || KM06M100.CU-VEND-NBR != KUCREC.CU-VEND-NBR /* vendor id number*/
   || KM06M100.AR-OTB-CRCK-AMT != VCRCHK02.AR-OTB-CRCK-AMT
   || KM06M100.AR-OTB-EDT-MM != KM06W01.KM06W-OTB-WORK-MM
   || KM06M100.AR-OTB-EDT-DD != KM06W01.KM06W-OTB-WORK-DD
   || KM06M100.AR-OTB-EDT-YY != KM06W01.KM06W-OTB-WORK-YY)
    KM06W01.KM06WMD1 = "Y";
  end

  if (KM06W01.KM06WMD1 == "Y")
    /* next sentence*/
  else
    return;
  end

   /* ************************************************************/
   /* check credit status*/
   /* ************************************************************/

  if (KM06M100.XCCCD != KUCREC.XCCCD)
    if (KM06M100.XCCCD != " ")

      KM06W01.KM06W2CH = KM06M100.XCCCD;
      /* GET OP0CS-CHECK-CREDIT (copy method of checking A&I rows)*/
      sysVar.arrayIndex = 1; /* change edit 2/10/94*/
      while (sysVar.arrayIndex < 99
       && XCCTBL.XCCCD[sysVar.arrayIndex] != "99") /* until end of XCCTBL*/
        if (XCCTBL.XCCCD[sysVar.arrayIndex] == KM06W01.KM06W2CH /* xcc code found*/
         && XCCTBL.XXXSTAT[sysVar.arrayIndex] == "A")           /* code is active*/
          set KM06M100.XCCCD initialAttributes;
          sysVar.arrayIndex = 99; /* mark as found*/
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment subscript*/
      end
      if (sysVar.arrayIndex < 99) /* not found*/
        /* GET OP0CS-CHECK-CREDIT (copy method of checking A&I rows)*/
        sysVar.arrayIndex = 1; /* 2/10/94 changed*/
        while (sysVar.arrayIndex < 99
         && XCCTBL.XCCCD[sysVar.arrayIndex] != "99") /* until end of XCCTBL*/
          if (XCCTBL.XCCCD[sysVar.arrayIndex] == KM06W01.KM06W2CH /* xcc code found*/
           && XCCTBL.XXXSTAT[sysVar.arrayIndex] == "I")           /* code is not active*/
            converseLib.validationFailed(299); /* cred stat code inactive*/
            KM06W01.KM06WERR = "Y"; /* set error flag*/
            set KM06M100.XCCCD cursor, modified, bold;
            sysVar.arrayIndex = 99;
          end
          sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment subscript*/
        end
        if (sysVar.arrayIndex < 99) /* no code found*/
          converseLib.validationFailed(300); /* credit status code is invalid*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.XCCCD cursor, modified, bold;
        end
      end
    else
      converseLib.validationFailed(301); /* credit status code is required*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XCCCD cursor, modified, bold;
    end
  end

   /* **********************************/
    /* check lock box code*/
   /* **********************************/

  if (KM06M100.XLBCD != KUCREC.XLBCD)
    if (KM06M100.XLBCD != " ")
      if (KM06M100.XLBCD in XLATBL.XLBCD
       && XLATBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set KM06M100.XLBCD initialAttributes;
      else
        converseLib.validationFailed(17);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XLBCD cursor, modified, bold;
      end
    end
  end

   /* *************************************************/
    /* started business month must be 1-12 if present*/
   /* *************************************************/

  if (KM06M100.KM06MSBM != KM06W01.KM06WSBM
   || KM06M100.KM06MSBY != KM06W01.KM06WSBY)
    if (KM06M100.KM06MSBM > 0
     || KM06M100.KM06MSBY > 0)
      if (KM06M100.KM06MSBY > 0)

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
        if (KM06M100.KM06MSBY > 1799
         && KM06M100.KM06MSBY < 2100)
          set KM06M100.KM06MSBY initialAttributes;
        else
          set KM06M100.KM06MSBY cursor, modified, bold;
          converseLib.validationFailed(302); /* started business year required*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
        end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

      else
        set KM06M100.KM06MSBY cursor, modified, bold;
        converseLib.validationFailed(302); /* started business year required*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
      end
    end
    if (KM06M100.KM06MSBM >= 1
     && KM06M100.KM06MSBM <= 12)
      set KM06M100.KM06MSBM initialAttributes;
    else
      set KM06M100.KM06MSBM cursor, modified, bold;
      set KM06M100.KM06MSBY cursor, modified, bold;
      converseLib.validationFailed(303); /* started business month not 1-12*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end

   /* ***************************/
   /* legal organization*/
   /* ***************************/

    /* check legal organization type - req, valid tbl entry*/
  if (KM06M100.XLGCD != KUCREC.XLGCD)
    if (KM06M100.XLGCD != " ")

      if (KM06M100.XLGCD in XLGTBL.XLGCD)

        if (XLGTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          set KM06M100.XLGCD initialAttributes;
        else
          converseLib.validationFailed(304); /* legal org code is inactive*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.XLGCD cursor, modified, bold;
        end

      else
        converseLib.validationFailed(305); /* legal org code is invalid*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.XLGCD cursor, modified, bold;
      end

    else
      converseLib.validationFailed(306); /* legal org code is required*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.XLGCD cursor, modified, bold;
    end
  end

   /* *****************************************/
    /* company status must be a or i*/
   /* *****************************************/

  if (KM06M100.XXXSTAT != KUCREC.XXXSTAT)
    if (KM06M100.XXXSTAT == "A"
     || KM06M100.XXXSTAT == "I")
      set KM06M100.XXXSTAT initialAttributes;
      if (KUCREC.XXXSTAT == "I" /* if company is being activated*/
       && KM06M100.XXXSTAT == "A") /* set a flag to insert a vculvl01 row*/
        KM06W-NEED-CULVL-FL = "N";
        KM06-431(); /* CHECK FOR ALOCATION DATA IN CULVL01*/
        if (KM06W-NEED-CULVL-FL == "Y")
          set KM06M100.XXXSTAT cursor, modified, bold;
          converseLib.validationFailed(307); /* company status is not 'a' or 'i'*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
        else
          set KM06M100.XXXSTAT initialAttributes;
        end
      end
    else
      set KM06M100.XXXSTAT cursor, modified, bold;
      converseLib.validationFailed(307); /* company status is not 'a' or 'i'*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end

  if (KM06M100.AR-OTB-CRCK-AMT != VCRCHK02.AR-OTB-CRCK-AMT
   || KM06M100.AR-OTB-EDT-MM != KM06W01.KM06W-OTB-WORK-MM
   || KM06M100.AR-OTB-EDT-DD != KM06W01.KM06W-OTB-WORK-DD
   || KM06M100.AR-OTB-EDT-YY != KM06W01.KM06W-OTB-WORK-YY)
    KM06523();
  end

end // end KM06522

// more edits
Function KM06523()
   /* *********************************************************************/
   /* 07/28/97 kclar1 created                                            **/
   /* *********************************************************************/


  if (KM06M100.AR-OTB-CRCK-AMT == 0 && 
  KM06M100.AR-OTB-EDT-MM == 0 && 
  KM06M100.AR-OTB-EDT-DD == 0 && 
  KM06M100.AR-OTB-EDT-YY == 0)
      /* Customers OTB is being removed*/
    KM06W01.KM06W-VCRCHK02-MODIFIED-FL = "Y"; /* set flag for updat*/
    KM06W01.KM06WMD1 = "Y";
    KM06W-OTB-CRCK-AMT-NUM = KM06M100.AR-OTB-CRCK-AMT;
    set KM06M100.AR-OTB-CRCK-AMT initialAttributes;
    set KM06M100.AR-OTB-EDT-MM initialAttributes;
    set KM06M100.AR-OTB-EDT-DD initialAttributes;
    set KM06M100.AR-OTB-EDT-YY initialAttributes;
    return;
  end
  if (KM06M100.AR-OTB-CRCK-AMT < 0)
    set KM06M100.AR-OTB-CRCK-AMT cursor, modified, bold;
    converseLib.validationFailed(470); /* Open to buy must be a positive number*/
    KM06W01.KM06WERR = "Y"; /* set error flag*/
    return;
  else
    KM06W-OTB-CRCK-AMT-NUM = KM06M100.AR-OTB-CRCK-AMT;
  end

  if (KM06M100.AR-OTB-CRCK-AMT >= 0)
    if (KM06M100.AR-OTB-EDT-MM > 0 || 
    KM06M100.AR-OTB-EDT-DD > 0 || 
    KM06M100.AR-OTB-EDT-YY > 0)
       /* Customer is an active Basics Customer*/
       /* edit open to buy change date*/
      KM06W01.KM06W-OTB-WORK-MM = KM06M100.AR-OTB-EDT-MM;
      KM06W01.KM06W-OTB-WORK-DD = KM06M100.AR-OTB-EDT-DD;
      KM06W01.KM06W-OTB-WORK-YY = KM06M100.AR-OTB-EDT-YY;
      if (KM06W01.KM06W-OTB-WORK-YY < 57)
        KM06W-OTB-WORK-CC = 20;
      else
        KM06W-OTB-WORK-CC = 19;
      end
      TA2REC.TA2GRGGN = KM06W-OTB-WORK-DATE;
      TA2REC.TA2GRTYP = "G"; /* date format is ccyymmdd*/
      TA2REC.TA2DTOPT = "GREGGREG"; /* func request*/
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* call date module*/
      if (TA2REC.TA2RTNCD != 0) /* check for invalid rc*/
        set KM06M100.AR-OTB-EDT-MM cursor, modified, bold;
        set KM06M100.AR-OTB-EDT-DD modified, bold;
        set KM06M100.AR-OTB-EDT-YY modified, bold;
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        converseLib.validationFailed(469); /* bad date*/
        return;
      else
        KM06W01.KM06W-VCRCHK02-MODIFIED-FL = "Y"; /* set flag for u*/
        KM06W01.KM06WMD1 = "Y";
        set KM06M100.AR-OTB-EDT-MM initialAttributes;
        set KM06M100.AR-OTB-EDT-DD initialAttributes;
        set KM06M100.AR-OTB-EDT-YY initialAttributes;
      end
    else
       /* default to current date*/
      AR-OTB-EDT-YY = XX0XW01.XX0XWYY;
      AR-OTB-EDT-MM = XX0XW01.XX0XWMM;
      AR-OTB-EDT-DD = XX0XW01.XX0XWDD;
      KM06W01.KM06W-VCRCHK02-MODIFIED-FL = "Y"; /* set flag for updat*/
      KM06W01.KM06WMD1 = "Y";
    end
  end


end // end KM06523

// edit letter of credit fields
Function KM06525()
   /* ************************************************************/
   /* edit letter of credit*/
   /* ************************************************************/

   /* all references to kuccoidn are tempory for side 1*/
   /* fixes*/

  if (KM06M100.KM06MLEM != KM06W01.KM06WLEM
   || KM06M100.KM06MLED != KM06W01.KM06WLED
   || KM06M100.KM06MLEY != KM06W01.KM06WLEY
   || KM06M100.KM06MLXM != KM06W01.KM06WLXM
   || KM06M100.KM06MLXD != KM06W01.KM06WLXD
   || KM06M100.KM06MLXY != KM06W01.KM06WLXY
   || KM06M100.KUCLCAMT != KUCREC.KUCLCAMT
   || KM06M100.KUCCOIDN != KUCREC.KUCCOIDN) /* temp company id*/
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/
  else
    return; /* no change/no edit*/
  end

   /* *********************************************/
    /* check if all letter of credit fields zeroed.*/
    /* (fields not required unless one  ne km06w01.km06w present)*/
   /* *********************************************/

  if (KM06M100.KM06MLEM > 0
   || KM06M100.KM06MLED > 0
   || KM06M100.KM06MLEY > 0
   || KM06M100.KM06MLXM > 0
   || KM06M100.KM06MLXD > 0
   || KM06M100.KM06MLXY > 0
   || KM06M100.KUCLCAMT > 0
   || KM06M100.KUCCOIDN > 0) /* temp company id*/
    /* next sentence*/
  else
    return; /* all zeros - no edit required*/
  end

   /* *************************************************/
   /* get company record   kucrec*/
   /* *************************************************/

   /* temp code for referencing new to old side 1 company id's*/

  if (KM06M100.KUCCOIDN != KUCREC.KUCCOIDN
   && KM06M100.KUCCOIDN > 0)
    KM06W04.KUCCOID = KM06M100.KUCCOIDN;
    KM06600(); /* get company record to edit reference number*/
    if (SQLCA.VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      converseLib.validationFailed(25); /* company does not exist*/
      KM06W01.KM06WERR = "Y";
      set KM06M100.KUCCOIDN cursor, bold;
    end
  end

   /* *********************************************/
    /* expiration date - range check month/day/year*/
   /* *********************************************/

  if (KM06M100.KM06MLXY != KM06W01.KM06WLXY)

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06MLXY GT 0;*/
  /* SET KM06M100.KM06MLXY DEFINED;*/
  /* ELSE;*/
  /* SET KM06M100.KM06MLXY CURSOR,MODIFIED,BRIGHT;*/
  /* MOVE 308 TO EZEMNO;           /* letter of credit year is required*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;        /* set error flag*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    set KM06M100.KM06MLXY initialAttributes;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  end

  if (KM06M100.KM06MLXD != KM06W01.KM06WLXD)
    if (KM06M100.KM06MLXD >= 1
     && KM06M100.KM06MLXD <= 31)
      set KM06M100.KM06MLXD initialAttributes;
    else
      set KM06M100.KM06MLXD cursor, modified, bold;
      converseLib.validationFailed(309); /* letter of credit day is out ofrange*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end

  if (KM06M100.KM06MLXM != KM06W01.KM06WLXM)
    if (KM06M100.KM06MLXM >= 1
     && KM06M100.KM06MLXM <= 12)
      set KM06M100.KM06MLXM initialAttributes;
    else
      set KM06M100.KM06MLXM cursor, modified, bold;
      converseLib.validationFailed(310);
                                   /* letter of credit month is out ofrange*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end


   /* *********************************************/
    /* entry date - range check month/day/year*/
    /* must be less than exp date*/
   /* *********************************************/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06MLEY NE KM06W01.KM06WLEY*/
  /* OR KM06M100.KM06MLEM NE KM06W01.KM06WLEM*/
  /* OR KM06M100.KM06MLED NE KM06W01.KM06WLED;*/
  /* SET KM06M100.KM06MLEY DEFINED;*/
  /* SET KM06M100.KM06MLEM DEFINED;*/
  /* SET KM06M100.KM06MLED DEFINED;*/
  /* IF KM06M100.KM06MLEY GT KM06M100.KM06MLXY;*/
  /* SET KM06M100.KM06MLXY MODIFIED,BRIGHT;  /* exp date*/
  /* SET KM06M100.KM06MLXD MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLXM MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLEY MODIFIED,BRIGHT;  /* entry date*/
  /* SET KM06M100.KM06MLED MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLEM CURSOR,MODIFIED,BRIGHT;*/
  /* MOVE 311 TO EZEMNO;           /* l.o.c. eff date must be < exp date*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;        /* set error flag*/
  /* ELSE;*/
  /* IF KM06M100.KM06MLEY EQ KM06M100.KM06MLXY*/
  /* AND KM06M100.KM06MLEM GT KM06M100.KM06MLXM;*/
  /* SET KM06M100.KM06MLXY MODIFIED,BRIGHT;  /* exp date*/
  /* SET KM06M100.KM06MLXD MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLXM MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLEY MODIFIED,BRIGHT;  /* entry date*/
  /* SET KM06M100.KM06MLED MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLEM CURSOR,MODIFIED,BRIGHT;*/
  /* MOVE 311 TO EZEMNO;         /* l.o.c. eff date must be < exp date*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;      /* set error flag*/
  /* ELSE;*/
  /* IF KM06M100.KM06MLEY EQ KM06M100.KM06MLXY*/
  /* AND KM06M100.KM06MLEM GE KM06M100.KM06MLXM*/
  /* AND KM06M100.KM06MLED GE KM06M100.KM06MLXD;*/
  /* SET KM06M100.KM06MLXY MODIFIED,BRIGHT;  /* exp date*/
  /* SET KM06M100.KM06MLXD MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLXM MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLEY MODIFIED,BRIGHT;  /* entry date*/
  /* SET KM06M100.KM06MLEM CURSOR,MODIFIED,BRIGHT;*/
  /* SET KM06M100.KM06MLED MODIFIED,BRIGHT;*/
  /* MOVE 311 TO EZEMNO;       /* l.o.c. eff date must be < exp date*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;    /* set error flag*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* ;*/
  /* IF KM06M100.KM06MLEY NE KM06W01.KM06WLEY;*/
  /* IF KM06M100.KM06MLEY GT 0;*/
  /* ;/* next sentence*/
  /* ELSE;*/
  /* SET KM06M100.KM06MLEY CURSOR,MODIFIED,BRIGHT;*/
  /* MOVE 308 TO EZEMNO;           /* letter of credit year is required*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;        /* set error flag*/
  /* END;*/
  /* END;*/
  /*  */
  /* -----------------------  Y2K OUT END  --------------------------*/

  if (KM06M100.KM06MLED != KM06W01.KM06WLED)
    if (KM06M100.KM06MLED >= 1
     && KM06M100.KM06MLED <= 31)
      /* next sentence*/
    else
      set KM06M100.KM06MLED cursor, modified, bold;
      converseLib.validationFailed(309); /* letter of credit day is out of range*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end

  if (KM06M100.KM06MLEM != KM06W01.KM06WLEM)
    if (KM06M100.KM06MLEM >= 1
     && KM06M100.KM06MLEM <= 12)
      /* next sentence*/
    else
      set KM06M100.KM06MLEM cursor, modified, bold;
      converseLib.validationFailed(310);
                                   /* letter of credit month is out ofrange*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MLEY != KM06W01.KM06WLEY
   || KM06M100.KM06MLEM != KM06W01.KM06WLEM
   || KM06M100.KM06MLED != KM06W01.KM06WLED
   || KM06M100.KM06MLXY != KM06W01.KM06WLXY
   || KM06M100.KM06MLXM != KM06W01.KM06WLXM
   || KM06M100.KM06MLXD != KM06W01.KM06WLXD)
    set KM06M100.KM06MLEY initialAttributes;
    set KM06M100.KM06MLEM initialAttributes;
    set KM06M100.KM06MLED initialAttributes;
    set KM06M100.KM06MLXY initialAttributes;
    set KM06M100.KM06MLXM initialAttributes;
    set KM06M100.KM06MLXD initialAttributes;

    KM06W01.KM06W-WRK-YY = KM06M100.KM06MLXY;
    if (KM06M100.KM06MLXY > 60)
      KM06W01.KM06W-WRK-CC = 19;
    else
      KM06W01.KM06W-WRK-CC = 20;
    end
    KM06W01.KM06W-WRK-MM = KM06M100.KM06MLXM;
    KM06W01.KM06W-WRK-DD = KM06M100.KM06MLXD;
    KM06W01.KM06W-SAV-CCYYMMDD = KM06W01.KM06W-WRK-CCYYMMDD;

    KM06W01.KM06W-WRK-YY = KM06M100.KM06MLEY;
    if (KM06M100.KM06MLEY > 60)
      KM06W01.KM06W-WRK-CC = 19;
    else
      KM06W01.KM06W-WRK-CC = 20;
    end
    KM06W01.KM06W-WRK-MM = KM06M100.KM06MLEM;
    KM06W01.KM06W-WRK-DD = KM06M100.KM06MLED;
    if (KM06W01.KM06W-WRK-CCYYMMDD >= KM06W01.KM06W-SAV-CCYYMMDD)
      set KM06M100.KM06MLXY modified, bold; /* exp date*/
      set KM06M100.KM06MLXD modified, bold;
      set KM06M100.KM06MLXM modified, bold;
      set KM06M100.KM06MLEY modified, bold; /* entry date*/
      set KM06M100.KM06MLED modified, bold;
      set KM06M100.KM06MLEM cursor, modified, bold;
      converseLib.validationFailed(311); /* l.o.c. eff date must be < exp date*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end
  /*  */
  /* -----------------------  Y2K IN END  ---------------------------*/

   /* *********************************************/
    /* amount - must gt 0*/
   /* *********************************************/

  if (KM06M100.KUCLCAMT != KUCREC.KUCLCAMT)
    if (KM06M100.KUCLCAMT > 0)
      set KM06M100.KUCLCAMT initialAttributes;
    else
      set KM06M100.KUCLCAMT cursor, modified, bold;
      converseLib.validationFailed(312); /* letter of credit amount is required*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    end
  end

end // end KM06525

// edit duns information
Function KM06530()
   /* ******************************************************/
    /* duns fields - if one present, both must be present*/
    /* credit level code - must be p or c, if p parent must*/
      /* be present.  agency number must be gt 0.*/
   /* ******************************************************/

  if (KM06M100.KUCLVIND != KUCREC.KUCLVIND
   || KM06M100.KM06MDBY != KM06W01.KM06WDBY
   || KM06M100.KM06MDBM != KM06W01.KM06WDBM
   || KM06M100.KUCACYRT != KUCREC.KUCACYRT
   || KM06M100.KUCACYNR != KUCREC.KUCACYNR
   || KM06M100.KUCAPDEX != KUCREC.KUCAPDEX)
    KM06W01.KM06WMD1 = "Y";
  else
    return;
  end

   /* *********************/
   /* edit parent code*/
   /* *********************/

  set KM06M100.KUCLVIND initialAttributes;
  set KM06M100.KUCACYNR initialAttributes;
  if (KM06M100.KUCLVIND > " "
   || KM06M100.KUCACYNR > 0)

    if (KM06M100.KUCLVIND == "C")
      /* next sentence*/
    else
      if (KM06M100.KUCLVIND == "P")
        if (KM06M100.KUKPCOID > 0)
          /* next sentence*/
        else
          converseLib.validationFailed(313); /* credit level p, but not parent*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.KUCLVIND cursor, modified, bold;
        end /* end if parent set up for company*/
      else
        converseLib.validationFailed(314); /* credit level not p or c*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCLVIND cursor, modified, bold;
      end /* end if lvl eq 'p'*/
    end /* end if lvl eq 'c'*/
    if (KM06M100.KUCACYNR > 0)
      /* next sentence*/
    else
      converseLib.validationFailed(316); /* duns number required*/
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.KUCACYNR cursor, modified, bold;
    end
  end

   /* **************************/
   /* edit d&b date*/
   /* *************************/

  if (KM06M100.KM06MDBY != KM06W01.KM06WDBY)

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06MDBY GT 0;*/
  /* SET KM06M100.KM06MDBY DEFINED;*/
  /* ELSE;*/
  /* IF KM06M100.KM06MDBY = 0*/
  /* AND KM06M100.KUCACYRT GT ' ';*/
  /* MOVE 5 TO EZEMNO;*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;      /* set error flag*/
  /* SET KM06M100.KM06MDBY CURSOR,MODIFIED,BRIGHT;*/
  /* ELSE;*/
  /* IF KM06M100.KUCACYRT = ' '*/
  /* AND KM06M100.KM06MDBY = 0;*/
  /* SET KM06M100.KM06MDBY DEFINED;*/
  /* ELSE;*/
  /* END;*/
  /* END;*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    set KM06M100.KM06MDBY initialAttributes;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

  end

  if (KM06M100.KM06MDBM != KM06W01.KM06WDBM)
    if (KM06M100.KM06MDBM > 0
     && KM06M100.KM06MDBM <= 12)
      set KM06M100.KM06MDBM initialAttributes;
    else
      if (KM06M100.KM06MDBM == 0
       && KM06M100.KUCACYRT > " ")
        converseLib.validationFailed(5);
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KM06MDBM cursor, modified, bold;
      else
        if (KM06M100.KUCACYRT == " "
         && KM06M100.KM06MDBM == 0)
          set KM06M100.KM06MDBM initialAttributes;
        else
          set KM06M100.KM06MDBM cursor, modified, bold;
          converseLib.validationFailed(315); /* d&d month not 1-12*/
          KM06W01.KM06WERR = "Y"; /* set error flag*/
        end
      end
    end
  end

   /* ************************/
    /* dba name - no edit*/
   /* ************************/

  if (KM06M100.KUCACYRT != KUCREC.KUCACYRT)
    if (KM06M100.KUCACYRT != " ")
      set KM06M100.KUCACYRT initialAttributes;
    else
      if (KM06M100.KUCACYRT == " ")
        if (KM06M100.KM06MDBM > 0
         || KM06M100.KM06MDBY > 0)
          converseLib.validationFailed(5);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
          set KM06M100.KUCACYRT cursor, modified, bold;
        end
      end
    end
  end

   /* *************************/
   /* edit duns number*/
   /* *************************/

  set KM06M100.KUCACYNR initialAttributes;
  if (KM06M100.KUCACYNR != KUCREC.KUCACYNR)
    if (KM06M100.KUCLVIND > " ")
      if (KM06M100.KUCACYNR > 0)
        /* next sentence*/
      else
        converseLib.validationFailed(316); /* duns number required*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCACYNR cursor, modified, bold;
      end

    end
  end

   /* *****************************/
    /* check d&b paydex code*/
   /* *****************************/

  if (KM06M100.KUCAPDEX != KUCREC.KUCAPDEX)
    if (KM06M100.KUCAPDEX >= "000"
     && KM06M100.KUCAPDEX <= "100")
      set KM06M100.KUCAPDEX initialAttributes;
    else
      if (KM06M100.KUCAPDEX == " UN"
       || KM06M100.KUCAPDEX == "INV"
       || KM06M100.KUCAPDEX == "   ")
        set KM06M100.KUCAPDEX initialAttributes;
      else
        converseLib.validationFailed(317);
                                   /* paydex not 000 - 100 or "un" or "inv"*/
        KM06W01.KM06WERR = "Y"; /* set error flag*/
        set KM06M100.KUCAPDEX cursor, modified, bold;
      end
    end
  end




end // end KM06530

// edit credit line data
Function KM06535()

   /* ***************************************/
    /* check company credit line - required*/
   /* ***************************************/

  if (KM06M100.KUCCRLIN != KUCREC.KUCCRLIN)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/
    if (KM06M100.KUCCRLIN > 0)
      set KM06M100.KUCCRLIN initialAttributes;
      KM06W01.KM06WDAT = XX0XW01.XX0XWDAT;
      KM06M100.KM06MCFY = KM06W01.KM06WDYY;
      KM06M100.KM06MCFM = KM06W01.KM06WDMM;
    else
      converseLib.validationFailed(324);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.KUCCRLIN cursor, modified, bold;
    end
  end

   /* *******************************************/
    /* check credit line exp date - required*/
   /* *******************************************/

  if (KM06M100.KM06MCXM != KM06W01.KM06WCXM
   || KM06M100.KM06MCXY != KM06W01.KM06WCXY)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 modified flag*/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06MCXY GT 0;*/
  /* SET KM06M100.KM06MCXY DEFINED;*/
  /* ELSE;*/
  /* MOVE 318 TO EZEMNO;*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;        /* set error flag*/
  /* SET KM06M100.KM06MCXY CURSOR,MODIFIED,BRIGHT;*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
    set KM06M100.KM06MCXY initialAttributes;
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

    if (KM06M100.KM06MCXM >= 1
     && KM06M100.KM06MCXM <= 12)
      set KM06M100.KM06MCXM initialAttributes;
    else
      converseLib.validationFailed(319);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
      set KM06M100.KM06MCXM cursor, modified, bold;
    end
  end

   /* ************************************************/
    /* check credit line effective date - required*/
     /* must be less than exp date*/
   /* ************************************************/

  /* -----------------------  Y2K OUT BEGIN  ------------------------*/
  /*  */
  /* IF KM06M100.KM06MCFM NE KM06W01.KM06WCFM*/
  /* OR KM06M100.KM06MCFY NE KM06W01.KM06WCFY;*/
  /* MOVE 'Y' TO KM06W01.KM06WMD1;   /* cmpny01 modified flag*/
  /* IF KM06M100.KM06MCFY GT KM06M100.KM06MCXY;*/
  /* SET KM06M100.KM06MCXY CURSOR,MODIFIED,BRIGHT;   /* exp date*/
  /* SET KM06M100.KM06MCXM MODIFIED,BRIGHT;*/
  /* MOVE 319 TO EZEMNO;*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;        /* set error flag*/
  /* ELSE;*/
  /* IF KM06M100.KM06MCFY EQ KM06M100.KM06MCXY*/
  /* AND KM06M100.KM06MCFM GE KM06M100.KM06MCXM;*/
  /* SET KM06M100.KM06MCXY MODIFIED,BRIGHT;   /* exp date*/
  /* SET KM06M100.KM06MCXM CURSOR,MODIFIED,BRIGHT;*/
  /* MOVE 319 TO EZEMNO;*/
  /* MOVE 'Y' TO KM06W01.KM06WERR;      /* set error flag*/
  /* END;*/
  /*  */
  /* ------------------------  Y2K OUT END  -------------------------*/

  /* -----------------------  Y2K IN BEGIN  -------------------------*/
  /*  */
  if (KM06M100.KM06MCFM != KM06W01.KM06WCFM
   || KM06M100.KM06MCFY != KM06W01.KM06WCFY
   || KM06M100.KM06MCXM != KM06W01.KM06WCXM
   || KM06M100.KM06MCXY != KM06W01.KM06WCXY)
    KM06W01.KM06W-WRK-YY = KM06M100.KM06MCXY;
    if (KM06M100.KM06MCXY > 60)
      KM06W01.KM06W-WRK-CC = 19;
    else
      KM06W01.KM06W-WRK-CC = 20;
    end
    KM06W-WRK-MM = KM06M100.KM06MCXM;
    move KM06W-WRK-CCYYMM to KM06W-SAV-CCYYMM withV60Compat;

    KM06W01.KM06W-WRK-YY = KM06M100.KM06MCFY;
    if (KM06M100.KM06MCFY > 60)
      KM06W01.KM06W-WRK-CC = 19;
    else
      KM06W01.KM06W-WRK-CC = 20;
    end
    KM06W-WRK-MM = KM06M100.KM06MCFM;

    if (KM06W-WRK-CCYY > KM06W-SAV-CCYY)
      set KM06M100.KM06MCXY cursor, modified, bold; /* exp date*/
      set KM06M100.KM06MCXM modified, bold;
      converseLib.validationFailed(321);
      KM06W01.KM06WERR = "Y"; /* set error flag*/
    else
      if (KM06W-WRK-CCYY == KM06W-SAV-CCYY)
        if (KM06W-WRK-MM == 12)
          set KM06M100.KM06MCXY cursor, modified, bold; /* exp date*/
          set KM06M100.KM06MCXM modified, bold;
          converseLib.validationFailed(321);
          KM06W01.KM06WERR = "Y"; /* set error flag*/
        else
          if (KM06W-WRK-CCYYMM >= KM06W-SAV-CCYYMM)
            set KM06M100.KM06MCXM cursor, modified, bold; /* exp date*/
            set KM06M100.KM06MCXY modified, bold;
            converseLib.validationFailed(321);
            KM06W01.KM06WERR = "Y"; /* set error flag*/
          end
        end
      end
  /*  */
  /* ------------------------  Y2K IN END  --------------------------*/

    end
  end

end // end KM06535

// comp name parent group-id
Function KM06540()

   /* *************************************************************/

   /* edit dba name,date,rating,co name,paydex,phone*/
       /* group company id, major group id, credit contact*/
   /* *************************************************************/

  if (KM06M100.KUCCOANM != KUCREC.KUCCOANM
   || KM06M100.KUCCONM != KUCREC.KUCCONM
   || KM06M100.KUCGRPID != KUCREC.KUCGRPID
   || KM06M100.KUKPCOID != KUCREC.KUKPCOID
   || KM06M100.KUKPCONM != KUKREC.KUKPCONM)
    KM06W01.KM06WMD1 = "Y"; /* cmpny01 data modified flag*/
  else
    return; /* no change/no edit*/
  end

   /* *************************************/
    /* company name - required field*/
   /* *************************************/

  if (KM06M100.KUCCONM != KUCREC.KUCCONM)
    if (KM06M100.KUCCONM > " ")
      set KM06M100.KUCCONM initialAttributes;
    else
      converseLib.validationFailed(5);
      KM06W01.KM06WERR = "Y";
      set KM06M100.KUCCONM cursor, modified, bold;
    end
  end

   /* *************************************/
     /* group company id - optional*/
   /* *************************************/

  if (KM06M100.KUCGRPID != KUCREC.KUCGRPID)
    set KM06M100.KUCGRPID initialAttributes;
    if (KM06M100.KUCGRPID > 0)
      if (KM06M100.KUCGRPID != KUCREC.KUCGRPID)
        KM06W04.KUCCOID = KM06M100.KUCGRPID;

        KM06600(); /* get company record to edit group*/
      end

      if (SQLCA.VAGen_SQLCODE == 0)
        /* next sentence;*/
      else
        converseLib.validationFailed(325);
        KM06W01.KM06WERR = "Y";
        set KM06M100.KUCGRPID cursor, modified, bold;
      end
    end
  end

   /* ***********************************/
     /* check major group company id*/
   /* ***********************************/

   /* SET KM06M100.KUCMJRID DEFINED;*/
   /* IF KM06M100.KUCMJRID GT 0;*/
    /* IF KM06M100.KUCMJRID  ne kucrec. MODIFIED;*/
      /* MOVE KM06M100.KUCMJRID TO KM06W04.KUCCOID;*/
      /* PERFORM KM06600             ;get company*/
      /* IF SQLCA.SQLCODE EQ 0;*/
        /* ;next sentence*/
      /* ELSE ;*/
        /* MOVE 326 TO EZEMNO;*/
        /* MOVE 'Y' TO KM06W01.KM06WERR;*/
        /* SET KM06M100.KUCMJRID CURSOR,MODIFIED,BRIGHT;*/
      /* END ;*/
    /* END ;*/
   /* END ;*/

   /* **********************/
    /* phone - no edit*/
   /* **********************/

   /* ********************************************************/
        /* check parent id*/
   /* ********************************************************/

  set KM06M100.KUKPCOID initialAttributes;
  if (KM06M100.KUKPCOID != KUCREC.KUKPCOID)

    if (KM06M100.KUKPCOID == 0)

      if (KUCREC.KUCSKIND == "P") /* prod xref sw*/
        converseLib.validationFailed(327);
        KM06W01.KM06WERR = "Y";
        KM06M100.KUKPCOID = KUCREC.KUKPCOID;
      else
        if (KM06M100.KUCLVIND == "P") /* duns lvl*/
          converseLib.validationFailed(328);
          KM06W01.KM06WERR = "Y";
          KM06M100.KUKPCOID = KUCREC.KUKPCOID;
        else
          KM06M100.KUKPCONM = " "; /* decode name*/
        end
      end

    else
      KUKREC.KUKPCOID = KM06M100.KUKPCOID;
      KM06230(); /* read parent record*/
      if (SQLCA.VAGen_SQLCODE == 0) /* found*/
        KM06M100.KUKPCONM = KUKREC.KUKPCONM; /* decode name*/
      else
        converseLib.validationFailed(329);
        KM06W01.KM06WERR = "Y";
        set KM06M100.KUKPCOID cursor, modified, bold;
      end
    end
  end





end // end KM06540

// read company for groups
Function KM06600()
   /* *************************************************/
   /* get company record   km06w04 record*/
   /* *************************************************/

  set SQLCA empty;

  call "IO0240" ("S ", SQLCA, KM06W04) {isNoRefresh = yes, isExternal = yes}; /* read cmpny01*/
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCMPNY01";
    TA1REC.TA1MAP = " ";
    KM06W01.KM06WKEY = KUCREC.KUCCOID;
    TA1REC.TA1TBLKE = KM06W01.KM06WKEY;
    TA1REC.TA1PGMNM = "KM06600";
    TA1REC.TA1LOC = "READING DB2 CMPNY01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end




end // end KM06600

// show address
Function KM06800()

  set KM06M125 initial;

  KM06810(); /* get address information*/

  KM06W01.KM06WPF3 = "N";

  while (KM06W01.KM06WPF3 == "N")
    KM06820(); /* display screen*/
  end

end // end KM06800

// read addresses
Function KM06810()

  set KM06M125.KUCCOID initialAttributes;

  KM06M125.KUCCOID = KUCREC.KUCCOID;
  KM06M125.KUCCONM = KUCREC.KUCCONM;
  KM06M125.KUCCOANM = KUCREC.KUCCOANM;

   /* -----  read/fmt co address's -------*/
  set KM06M125.KUCCOAID initialAttributes;
  if (KUCREC.KUCCOAID != 0)
    KM06M125.KUCCOAID = KUCREC.KUCCOAID;
    XA0AW02.KULAAID = KUCREC.KUCCOAID;
    XA0AW02.KUCCOID = KUCREC.KUCCOID;
    XA0AW02.XA0AWFNC = "G";
    call "XA0A" (XA0AW02) {isNoRefresh = yes};
    if (XA0AW02.XA0AWERR[1] == 0)
      KM06M125.XXX-ADDR1[1] = XA0AW02.XXX-ADDR1;
      KM06M125.XXX-ADDR2[1] = XA0AW02.XXX-ADDR2;
      KM06M125.XXX-ADDR3[1] = XA0AW02.XXX-ADDR3;
      KM06M125.XXXCITY[1] = XA0AW02.XXXCITY;
      KM06M125.XSTCD[1] = XA0AW02.XSTCD;
      KM06M125.XXXZIP[1] = XA0AW02.XXXZIP;
      KM06M125.XCTCD[1] = XA0AW02.XCTCD;
    else
      if (XA0AWERR[1] == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(XA0AWERR[1]);
      end
      set KM06M125.KUCCOAID bold;
    end
  end

  set KM06M125.KUCCCAID initialAttributes;
  if (KUCREC.KUCCCAID != 0)
    KM06M125.KUCCCAID = KUCREC.KUCCCAID;
    XA0AW02.KULAAID = KUCREC.KUCCCAID;
    XA0AW02.KUCCOID = KUCREC.KUCCOID;
    XA0AW02.XA0AWFNC = "G";
    call "XA0A" (XA0AW02) {isNoRefresh = yes};
    if (XA0AW02.XA0AWERR[1] == 0)
      KM06M125.XXX-ADDR1[2] = XA0AW02.XXX-ADDR1;
      KM06M125.XXX-ADDR2[2] = XA0AW02.XXX-ADDR2;
      KM06M125.XXX-ADDR3[2] = XA0AW02.XXX-ADDR3;
      KM06M125.XXXCITY[2] = XA0AW02.XXXCITY;
      KM06M125.XSTCD[2] = XA0AW02.XSTCD;
      KM06M125.XXXZIP[2] = XA0AW02.XXXZIP;
      KM06M125.XCTCD[2] = XA0AW02.XCTCD;
    else
      if (XA0AWERR[1] == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(XA0AWERR[1]);
      end
      set KM06M125.KUCCCAID bold;
    end
  end


end // end KM06810

// display screen
Function KM06820()
  KM06M125.KM06MDAT = VGVar.currentShortGregorianDate;
  KM06W01.KM06WERR = "N";
  converse KM06M125 ;

  KM06830(); /* check pf keys*/

end // end KM06820

// check pf keys
Function KM06830()

   /* ************************************************/
     /* edit all special entry keys                **/
   /* ************************************************/

   /* **************************************/
   /* edit enter  key*/
   /* **************************************/

  if (converseVar.eventKey is enter)
    if (KM06M100.CATOAP > " ") /* fast path*/
      COMMAREA.CATOAP = KM06M100.CATOAP;
      if (KM06M100.CAITEM == " ")
        COMMAREA.CAUSERA = KM06M100.KUCCOID;
      else
        COMMAREA.CAITEM = KM06M100.CAITEM;
      end
      COMMAREA.CAFROMAP = "KM06";
      XSEXIT();
      KM06M100.VAGen_EZEMSG = COMMAREA.CAMSG;
      KM06W01.KM06WERR = "Y";
      set KM06M100.CATOAP cursor, bold;
    else
      set KM06M100.CATOAP initialAttributes;
    end
    return;
  else
    if (KM06M100.CATOAP > " ")
      KM06W01.KM06WERR = "Y";
      converseLib.validationFailed(90); /* can not fast path and use pf keys*/
      set KM06M100.CATOAP cursor, bold;
      return;
    else
      set KM06M100.CATOAP modified;
    end
  end


   /* **************************************/
   /* edit pf3 key*/
   /* **************************************/

  if (converseVar.eventKey is pf3) /* back to company update*/
    KM06W01.KM06WPF3 = "Y";
    return;
  end

   /* **************************************/
   /* edit pf4 key*/
   /* **************************************/

  if (converseVar.eventKey is pf4) /* back to goal menu*/
    COMMAREA.CAFROMAP = "KM06";
    XSPF4();
    KM06M100.VAGen_EZEMSG = COMMAREA.CAMSG;
    KM06W01.KM06WERR = "Y";
    return;
  end


  if (KM06W01.KM06WERR == "N")
    converseLib.validationFailed(281); /* invalid pf key message*/
    KM06W01.KM06WERR = "Y";
  end



end // end KM06830

// Init records
Function KM06S-INIT-RECS()
  /* *****************************************************************/
  /* *              Initialize records used by KM06*/
  /* *****************************************************************/

  set KUCREC empty;
  set KUKREC empty;
  set KUEREC empty;
  set KUHREC empty;
  set KUZREC empty;
  set VDSTRB01 empty;
  set VCULVL01 empty;
  set VCTACT01 empty;
  set KM06W01 empty;
  set KM06W04 empty;
  set KU0XW10 empty;
  set KU0XW30 empty;
  set XX0XW01 empty;
  set XX0XW02 empty;
  set SQLCA empty;
  set TA1REC empty;
end // end KM06S-INIT-RECS

// converse pop up window
Function XPXLA02()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Clear map and set up header for new scroll screen ****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "             SELECT & ENTER            ";
    XX0XM001.XX0XMTR2 = "    PF7:BACK                PF8:FRWD   ";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XLATBL.XLBCD[XX0XWCT1] != "99") /* Or end of data*/
        if (XLATBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XLATBL.XLBCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XLATBL.XXXCITY[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (XLATBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = XLATBL.XLBCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = XLATBL.XXXCITY[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XLATBL.XLBCD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] < XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          else
            XX0XM001.XX0XMSEL[XX0XWCT2] = " ";
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end

      else
        if (converseVar.eventKey not pf7 /* If any other attention ident*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPXLA02

// converse yliTBL pop up window
Function XPYLI01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && YLITBL.YLICD[XX0XWCT1] != "99") /* Or end of data*/
        if (YLITBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YLITBL.YLICD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YLITBL.YLIDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (YLITBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YLITBL.YLICD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YLITBL.YLIDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && YLITBL.YLICD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPYLI01

//*** RECORD=KM06W01 ****
// this record contains work fields used entirely within km06.
// **********************************************************
// *         Maintenance Log
// **********************************************************
// *
// *  29-june-1993      dlegg     Add character redefinition
// *                              of company number.
// *  17-august-1993    dlegg     DB changes. Increase size
// *                              of KM06WCMT field.
// *Y2KFIX   12/01/97  DKENNY  Y2K MODIFICATIONS MADE:
// *                   Added elements KM06W-XXDAT,
// *                   KM06W-WRK-DATE and KM06W-SAV-CCYYMMDD
// *                   for date editing.  Removed element
// *                   KM06WSBC, (begin business century) and
// *                   changed size of KM06WSBY to 4 to reflect
// *                   change from a YY field to CCYY. This
// *                   allows begin business year to range from
// *                   1800 to 2100 and matches with new map
// *                   definition of the field.
// ***********************
Record KM06W01 type basicRecord
  10 KM06WUSR KM06WUSR ; 
    15 KM06WCNO KM06WCNO ; 
      20 KM06WCNO-CHAR KM06WCNO-CHAR ; 
    15 * char(8) ; 
  10 KM06WPF3 KM06WPF3 ; 
  10 KM06WCID KM06WCID ; 
  10 KM06WKEY KM06WKEY ; 
  10 KM06WERR KM06WERR ; 
  10 KM06WMD1 KM06WMD1 ; 
  10 KM06WMD3 KM06WMD3 ; 
  10 KM06WUPM KM06WUPM ; 
  10 KM06WEFL KM06WEFL ; 
  10 KM06W2CH KM06W2CH ; 
  10 KM06WDAT KM06WDAT ; 
    15 KM06WDCC KM06WDCC ; 
    15 KM06WDYY KM06WDYY ; 
    15 KM06WDMM KM06WDMM ; 
    15 KM06WDDD KM06WDDD ; 
  10 KM06WDBD KM06WDBD ; 
    15 KM06WDBC KM06WDBC ; 
    15 KM06WDBY KM06WDBY ; 
    15 KM06WDBM KM06WDBM ; 
    15 KM06WDBG KM06WDBG ; 
  10 KM06W-LST-DAB-RPT-DT KM06W-LST-DAB-RPT-DT ; 
    15 KM06W-LST-DAB-RPT-CC KM06W-LST-DAB-RPT-CC ; 
    15 KM06W-LST-DAB-RPT-YY KM06W-LST-DAB-RPT-YY ; 
    15 KM06W-LST-DAB-RPT-MM KM06W-LST-DAB-RPT-MM ; 
    15 KM06W-LST-DAB-RPT-DD KM06W-LST-DAB-RPT-DD ; 
  10 KM06W-CR-APPL-DT KM06W-CR-APPL-DT ; 
    15 KM06W-CR-APPL-CC KM06W-CR-APPL-CC ; 
    15 KM06W-CR-APPL-YY KM06W-CR-APPL-YY ; 
    15 KM06W-CR-APPL-MM KM06W-CR-APPL-MM ; 
    15 KM06W-CR-APPL-DD KM06W-CR-APPL-DD ; 
  10 KM06WBDT KM06WBDT ; 
    15 * num(1) ; 
    15 KM06WSBY KM06WSBY ; 
    15 KM06WSBM KM06WSBM ; 
    15 KM06WSBD KM06WSBD ; 
  10 KM06WFDT KM06WFDT ; 
    15 KM06WFIC KM06WFIC ; 
    15 KM06WFIY KM06WFIY ; 
    15 KM06WFIM KM06WFIM ; 
    15 KM06WFID KM06WFID ; 
  10 KM06WLEX KM06WLEX ; 
    15 KM06WCXC KM06WCXC ; 
    15 KM06WCXY KM06WCXY ; 
    15 KM06WCXM KM06WCXM ; 
    15 KM06WCXD KM06WCXD ; 
  10 KM06WLEF KM06WLEF ; 
    15 KM06WCFC KM06WCFC ; 
    15 KM06WCFY KM06WCFY ; 
    15 KM06WCFM KM06WCFM ; 
    15 KM06WCFD KM06WCFD ; 
  10 KM06WEDT KM06WEDT ; 
    15 KM06WLEC KM06WLEC ; 
    15 KM06WLEY KM06WLEY ; 
    15 KM06WLEM KM06WLEM ; 
    15 KM06WLED KM06WLED ; 
  10 KM06WXDT KM06WXDT ; 
    15 KM06WLXC KM06WLXC ; 
    15 KM06WLXY KM06WLXY ; 
    15 KM06WLXM KM06WLXM ; 
    15 KM06WLXD KM06WLXD ; 
  10 KM06WSQL KM06WSQL ; 
  10 KM06WCMT KM06WCMT ; 
  10 XATCD XATCD ; 
  10 KM06W-NEED-CULVL-FL KM06W-NEED-CULVL-FL ; 
  10 KM06W-CULVL-FOUND-FL KM06W-CULVL-FOUND-FL ; 
  10 XXXLSTNM XXXLSTNM ; 
  10 XXXFSTNM XXXFSTNM ; 
  10 XXXMDINT XXXMDINT ; 
  10 KM06W-FIRST-LAST-NAME KM06W-FIRST-LAST-NAME ; 
    15 KM06W-FLNAME-ARRAY KM06W-FLNAME-ARRAY [30] ; 
  10 KM06W-LAST-NAME KM06W-LAST-NAME ; 
    15 KM06W-LNAME-ARRAY KM06W-LNAME-ARRAY [25] ; 
  10 KM06W-IX1 KM06W-IX1 ; 
  10 KM06W-IX2 KM06W-IX2 ; 
  10 XXXPHN XXXPHN ; 
    15 XXXPHNA XXXPHNA ; 
    15 XXXPHNP XXXPHNP ; 
    15 XXXPHNN XXXPHNN ; 
  10 KM06W-PHONE KM06W-PHONE ; 
    15 KM06W-PHN-AREA-CD KM06W-PHN-AREA-CD ; 
    15 KM06W-PHN-DASH1 KM06W-PHN-DASH1 ; 
    15 KM06W-PHN-PREFIX KM06W-PHN-PREFIX ; 
    15 KM06W-PHN-DASH2 KM06W-PHN-DASH2 ; 
    15 KM06W-PHN-NUMBER KM06W-PHN-NUMBER ; 
  10 KM06W-OTB-MTD-AMT-NUM KM06W-OTB-MTD-AMT-NUM ; 
    15 KM06W-OTB-MTD-AMT-CHA KM06W-OTB-MTD-AMT-CHA ; 
  10 KM06W-OTB-CRCK-AMT-NUM KM06W-OTB-CRCK-AMT-NUM ; 
    15 KM06W-OTB-CRCK-AMT-CHA KM06W-OTB-CRCK-AMT-CHA ; 
  10 KM06W-OTB-WORK-DATE KM06W-OTB-WORK-DATE ; 
    15 KM06W-OTB-WORK-CC KM06W-OTB-WORK-CC ; 
    15 KM06W-OTB-WORK-YMD KM06W-OTB-WORK-YMD ; 
      20 KM06W-OTB-WORK-YY KM06W-OTB-WORK-YY ; 
      20 KM06W-OTB-WORK-MM KM06W-OTB-WORK-MM ; 
      20 KM06W-OTB-WORK-DD KM06W-OTB-WORK-DD ; 
  10 KM06W-VCRCHK02-MODIFIED-FL KM06W-VCRCHK02-MODIFIED-FL ; 
  10 KM06W-XXDAT KM06W-XXDAT ; 
    15 KM06W-XXCCYYMM KM06W-XXCCYYMM ; 
      20 KM06W-XXCCYY KM06W-XXCCYY ; 
      20 * num(2) ; 
    15 * num(2) ; 
  10 KM06W-WRK-DATE KM06W-WRK-DATE ; 
    15 * num(1) ; 
    15 KM06W-WRK-CCYYMMDD KM06W-WRK-CCYYMMDD ; 
      20 KM06W-WRK-CCYYMM KM06W-WRK-CCYYMM ; 
        25 KM06W-WRK-CCYY KM06W-WRK-CCYY ; 
          30 KM06W-WRK-CC KM06W-WRK-CC ; 
          30 KM06W-WRK-YY KM06W-WRK-YY ; 
        25 KM06W-WRK-MM KM06W-WRK-MM ; 
      20 KM06W-WRK-DD KM06W-WRK-DD ; 
  10 KM06W-SAV-CCYYMMDD KM06W-SAV-CCYYMMDD ; 
    15 KM06W-SAV-CCYYMM KM06W-SAV-CCYYMM ; 
      20 KM06W-SAV-CCYY KM06W-SAV-CCYY ; 
      20 KM06W-SAV-MM KM06W-SAV-MM ; 
    15 * char(2) ; 
end // end KM06W01

//*** RECORD=KM06W04 ****
// this is the csp working storage format company table.  the
// table contains data that is specific to the company level
// of the customer data base.
// 
// db2 table:        dcust.vcmpny01
// 
// dclgen:           dcl0021
// 
// i/o mod:          io0240
// 
// key to table:     kuccoid   -   cu-co-id
// 
// date created:     4/4/86
// 
// maintanence log:
//   who       when     why
// --------- --------  ---------------------------------------
// CHELLM    03/11/94  Database changes.
//                     Rnm: CU-MAX-YNT-CD to CU-MAX-FTWR-YNT-CD
//                     Add: CU-MAX-APRL-YNT-CD
//                          CU-CO-SELF-NBR, CU-VEND-NBR
//                          xxx-intl-phone-nbr
// ***********************
Record KM06W04 type basicRecord
  5 KUCGRP KUCGRP ; 
    10 KUCCOID KUCCOID ; 
    10 KUKPCOID KUKPCOID ; 
    10 KUCGRPID KUCGRPID ; 
    10 KUCCOIDN KUCCOIDN ; 
    10 KUCCONM KUCCONM ; 
    10 CU-CO-SHORT-NM CU-CO-SHORT-NM ; 
    10 KUCCOANM KUCCOANM ; 
    10 KUCCOAID KUCCOAID ; 
    10 KUCCCAID KUCCCAID ; 
    10 KUCBLAID KUCBLAID ; 
    10 KUCPHN KUCPHN ; 
    10 XLECD XLECD ; 
    10 XCTCD XCTCD ; 
    10 KUCCNTCT KUCCNTCT ; 
    10 KUCCOBDT KUCCOBDT ; 
    10 KUCFINDT KUCFINDT ; 
    10 KUCSSCNT KUCSSCNT ; 
    10 KUCNSCNT KUCNSCNT ; 
    10 KUCMSTID KUCMSTID ; 
    10 KUCMADID KUCMADID ; 
    10 XLGCD XLGCD ; 
    10 XCRCD XCRCD ; 
    10 XCUCD XCUCD [2] ; 
    10 XCECD XCECD ; 
    10 XAUCD XAUCD ; 
    10 YCH-CHNL-CLS-CD YCH-CHNL-CLS-CD ; 
    10 YCPCD YCPCD ; 
    10 KUCCOLCD KUCCOLCD ; 
    10 KUCBPIND KUCBPIND ; 
    10 KUCLBOFL KUCLBOFL ; 
    10 KUCIDIND KUCIDIND ; 
    10 XIECD XIECD ; 
    10 CU-PRT-XREF-FL CU-PRT-XREF-FL ; 
    10 XXXSTAT XXXSTAT ; 
    10 KUCATCSH KUCATCSH ; 
    10 KUCCSHNF KUCCSHNF ; 
    10 KUCPOFL KUCPOFL ; 
    10 KUCYPOFT KUCYPOFT ; 
    10 KUCYPOAP KUCYPOAP ; 
    10 KUCWHSFL KUCWHSFL ; 
    10 KUCVNDFL KUCVNDFL ; 
    10 KUCSTMT KUCSTMT ; 
    10 YVICD YVICD [3] ; 
    10 YLICD YLICD ; 
    10 KUCXCSFL KUCXCSFL ; 
    10 KUCINSPD KUCINSPD ; 
    10 KUCFRTPD KUCFRTPD ; 
    10 KUCALERT KUCALERT ; 
    10 KUCMAGCT KUCMAGCT ; 
    10 KUCCNSCD KUCCNSCD ; 
    10 KUCPSFL KUCPSFL ; 
    10 CU-CR-APPL-DT CU-CR-APPL-DT ; 
    10 KUCCRLEF KUCCRLEF ; 
    10 KUCCRLEX KUCCRLEX ; 
    10 KUCCRLIN KUCCRLIN ; 
    10 KUCASMT KUCASMT ; 
    10 XCCCD XCCCD ; 
    10 KUCCSTDT KUCCSTDT ; 
    10 XCACD XCACD ; 
    10 KUCACYNR KUCACYNR ; 
    10 KUCACYDT KUCACYDT ; 
    10 KUCAPDEX KUCAPDEX ; 
    10 KUCACYRT KUCACYRT ; 
    10 KUCPRVRT KUCPRVRT ; 
    10 KUCLVIND KUCLVIND ; 
    10 CU-LST-DAB-RPT-DT CU-LST-DAB-RPT-DT ; 
    10 KUCLCEDT KUCLCEDT ; 
    10 KUCLCXDT KUCLCXDT ; 
    10 KUCLCAMT KUCLCAMT ; 
    10 KUCJSRFL KUCJSRFL ; 
    10 KUCRAUTH KUCRAUTH ; 
    10 CU-BILL-IND CU-BILL-IND ; 
    10 CU-PO-DT-FL CU-PO-DT-FL ; 
    10 KUCECODY KUCECODY ; 
    10 KUCPDSPD KUCPDSPD ; 
    10 XLBCD XLBCD ; 
    10 CU-HANG-DFLT-FL CU-HANG-DFLT-FL ; 
    10 KUCSTYNT KUCSTYNT ; 
    10 CU-MAX-FTWR-YNT-CD CU-MAX-FTWR-YNT-CD ; 
    10 CU-MAX-APRL-YNT-CD CU-MAX-APRL-YNT-CD ; 
    10 YCU-CRTN-USE-CD YCU-CRTN-USE-CD ; 
    10 KUCUNTCS KUCUNTCS ; 
    10 CU-PL-STYNM-PRT-FL CU-PL-STYNM-PRT-FL ; 
    10 CU-DOC-BY-ORD-FL CU-DOC-BY-ORD-FL ; 
    10 KUCFTRTI KUCFTRTI ; 
    10 KUCPRPTI KUCPRPTI ; 
    10 XOPCD XOPCD [4] ; 
    10 KUCAPRDT KUCAPRDT ; 
    10 KUCFPRDT KUCFPRDT ; 
    10 KUCSBKFL KUCSBKFL ; 
    10 KUCCOMNT KUCCOMNT ; 
    10 KUCSKIND KUCSKIND ; 
    10 CU-CUSKU-SZ-FL CU-CUSKU-SZ-FL ; 
    10 CU-EDI-CUST-IND CU-EDI-CUST-IND ; 
    10 XDZ-DATA-DIST-CD XDZ-DATA-DIST-CD ; 
    10 CU-CO-SELF-NBR CU-CO-SELF-NBR ; 
    10 CU-VEND-NBR CU-VEND-NBR ; 
    10 XXX-INTL-PHONE-NBR XXX-INTL-PHONE-NBR ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end KM06W04

Record KM06W20 type basicRecord
  5 KM06W20-GROUP KM06W20-GROUP ; 
    10 KM06W-BL6200-RTN-CD KM06W-BL6200-RTN-CD ; 
    10 KUCCOID-NUM KUCCOID-NUM ; 
    10 KM06W-AR-OTB-MTD-AMT KM06W-AR-OTB-MTD-AMT ; 
    10 KM06W-AR-OTB-CRCK-AMT KM06W-AR-OTB-CRCK-AMT ; 
    10 * char(59) ; 
    10 KM06W-MSG-OUT KM06W-MSG-OUT ; 
    10 * char(2300) ; 
end // end KM06W20

//*** RECORD=VCRCHK02 ****
// ************************************************************
// 
//  DB2 TABLE:          DACRCV.VCRCHK01
// 
//  COPYLIB MEMBER:     DCRCHK02
// 
//  I/O Mod:            IO6010
// 
//  Key to DB2 table:   kuccoid
// 
//  Date Created:       01/07/97
// 
// 
// Record contains information relative to a company's order
// in processs, orders on hold, and shipped but not billed
// amounts.
// ------------------------------------------------------------
//                    Maintenance History
// ------------------------------------------------------------
// 010797  CHELLM Record created.
// 
// ************************
Record VCRCHK02 type basicRecord
  10 KUCCOID KUCCOID ; 
  10 ARCORHLD ARCORHLD ; 
  10 ARCORPRO ARCORPRO ; 
  10 ARCSBNAR ARCSBNAR ; 
  10 AR-OTB-CRCK-AMT AR-OTB-CRCK-AMT ; 
  10 AR-OTB-AMT-CHNG-DT AR-OTB-AMT-CHNG-DT ; 
  10 AR-OTB-MTD-AMT AR-OTB-MTD-AMT ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end VCRCHK02

DataItem AR-OTB-AMT-CHNG-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AR-OTB-CRCK-AMT decimal(11)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem AR-OTB-MTD-AMT decimal(11)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-AR-OTB-CRCK-AMT char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM06W-AR-OTB-MTD-AMT char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM06W-BL6200-RTN-CD num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06W-CR-APPL-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06W-CR-APPL-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ccyymmdd cu-cr-apl-dt
DataItem KM06W-CR-APPL-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06W-CR-APPL-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06W-CR-APPL-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Customer Level row found fl
DataItem KM06W-CULVL-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Credit Contact First+Last name
DataItem KM06W-FIRST-LAST-NAME char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Credit Contact F+L name array
DataItem KM06W-FLNAME-ARRAY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index
DataItem KM06W-IX1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem KM06W-IX2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Credit Contact Last name
DataItem KM06W-LAST-NAME char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Credit Contact L name array
DataItem KM06W-LNAME-ARRAY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work century
DataItem KM06W-LST-DAB-RPT-CC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06W-LST-DAB-RPT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ccyymmdd cu-lst-dab-rpt-dt
DataItem KM06W-LST-DAB-RPT-DT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06W-LST-DAB-RPT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06W-LST-DAB-RPT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-MSG-OUT char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// need customer level flag
DataItem KM06W-NEED-CULVL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM06W-OTB-CRCK-AMT-CHA char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM06W-OTB-CRCK-AMT-NUM num(14)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-MTD-AMT-CHA char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KM06W-OTB-MTD-AMT-NUM num(14)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-WORK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-WORK-DATE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-WORK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-WORK-YMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-OTB-WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format phone area code
DataItem KM06W-PHN-AREA-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone dash
DataItem KM06W-PHN-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone dash
DataItem KM06W-PHN-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone number
DataItem KM06W-PHN-NUMBER char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format phone prefix
DataItem KM06W-PHN-PREFIX char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted phone number
DataItem KM06W-PHONE char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   save date ccyy
DataItem KM06W-SAV-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   save date ccyymm
DataItem KM06W-SAV-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save date ccyymmdd
DataItem KM06W-SAV-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   save date mm
DataItem KM06W-SAV-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W-VCRCHK02-MODIFIED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work date cc
DataItem KM06W-WRK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work date ccyy
DataItem KM06W-WRK-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work date ccyymm
DataItem KM06W-WRK-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work date ccyymmdd
DataItem KM06W-WRK-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date xccyymmdd
DataItem KM06W-WRK-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work date dd
DataItem KM06W-WRK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

//   work date mm
DataItem KM06W-WRK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work date yy
DataItem KM06W-WRK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   ccyy
DataItem KM06W-XXCCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   ccyymm
DataItem KM06W-XXCCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XX0XWDAT ccyymmdd
DataItem KM06W-XXDAT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KM06W20-GROUP char(2500)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2 character work
DataItem KM06W2CH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work year/month/day
DataItem KM06WBDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06WCFC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WCFD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WCFM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WCFY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current id
DataItem KM06WCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save area comment b4 image
DataItem KM06WCMT char(77)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   company number
DataItem KM06WCNO num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company number
DataItem KM06WCNO-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work century
DataItem KM06WCXC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WCXD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WCXM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WCXY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM06WDAT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06WDBC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM06WDBD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WDBG num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WDBM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WDBY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06WDCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WDDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WDMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WDYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM06WEDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen updated flag
DataItem KM06WEFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KM06WERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work year/month/day
DataItem KM06WFDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06WFIC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WFID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WFIM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WFIY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work key
DataItem KM06WKEY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06WLEC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WLED num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM06WLEF num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WLEM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work year/month/day
DataItem KM06WLEX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WLEY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century
DataItem KM06WLXC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work day
DataItem KM06WLXD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WLXM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work year
DataItem KM06WLXY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// vcmpny01 modified flag
DataItem KM06WMD1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// vcomnt01 modified flag
DataItem KM06WMD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf3 pressed
DataItem KM06WPF3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   work day
DataItem KM06WSBD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work month
DataItem KM06WSBM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   work century/year
DataItem KM06WSBY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save area for sqlca/reset
DataItem KM06WSQL char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update/inquiry flag
DataItem KM06WUPM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reformat area for causera
DataItem KM06WUSR char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work year/month/day
DataItem KM06WXDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_CO_ID
DataItem KUCCOID-NUM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

