package ob0g;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import oz.common.*;
import pc.common.*;
import pg.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=OB0G ****
// APPLICATION OVERVIEW:
// 
//   This application will be entered through the use of the
//   PF5 key from any one of three (3) applications:
//     OB0F - Product Summary
//     OB0H - Product Detail Availability
//     OB0P - Product Detail Prices
//   It will display Product Header information for the Item
//   selected.
// 
//   It can also be entered from the Error and/or Hold screens
//   by selecting an error or hold message that can be fixed
//   by this application.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 05/18/90   ZLEFKO   Created
// 09/26/90   GWELLS   Changed the map attributes of customer
//                     product to unprotect - E023.
// 01/31/91   craine   use current date to determine life cycle
//                     since this is how life cycle is determin
//                     in ob1050 - batch edit.
// 02/15/91   dmeier   regen for database changes
// 03/20/91   swatso   replaced source of product description
//                     s06 calls sycrec now instead of sy2rec.
//                     formatted product descript uses short
//                     style number + style color abbrev. life-
//                     cycle now from sycrec also. s06,w01,s06.
// 05/13/91   gwells   Menu of Services - m001,s04,s05,s07,s08,
//                     s14,s19. add handling code 4 & 5, and
//                     label codes 1,2 to map.
// 06/11/91   tfox     june db chgs. map,s04,s05,s14,s19
// 06/26/91   dharri   set the cust prod id to askip.
// 08/07/91   jhecke   672 - do not require csr to enter
//                     handling charge. s08,s14
// 10/09/91   craine   db changes - add xgp to xhdtbl for key
//                     s04, s08, w01.
// 02/12/92   bbake2   log#740 - replaced all references to
//                     sy2rec (the read for which was removed
//                     march 91) with references to sycrec.
//                     s04, s06, table and add'l records list
// 03/12/92   jhecke   changed where sytle description is
//                     derived from. s04,s05,s06.
// 03/20/92   tmorri   modified 000, 010, s02, & spf.  Created
//                     s20.  Updates not allowed for order
//                     status codes 'cl' or 'ca'.
// 05/19/94   scantr   virtual airspeed project: chgd obwrec,
//                     xsobs02, xsobs03, added xsobs10
// 05/24/94   scantr   changed xsobs03
// 06/03/94   DBRUIH   VAS:  Removed scaledown percent.
//                     Added customer product description,
//                     product type and product category.
//                     Modules changed:  ob0gs04, s05, s06, s07
//                     s14, s16, s20, w01.
//                     Added ob0gs-ed-sls-pgm to s07.
// 06/15/94   CRAINE   REWRITE TO CALL RELATIONAL EDIT
// 08/18/94   craine   changes to xsobs-limited-edit,
//                     xsobs-full-edit.
// 08/30/94   craine   change to xsobs-full-edit, and block
//                     'dl' and 'ld' orders from updating
// 09/06/94   craine   change to obwrec, chg to edit two orders
//                     when sub order split to new order
// 10/06/94   craine   add new xsobs-add-new-oba
// 10/25/94   craine   change to obwrec
// 11/15/94   craine   change to xsobp24
// 01/30/94   craine   chg to xsobs-upd-oba-edit
// 02/23/95   dcassi   chg xqa-qual-cd to be an editable field.
//                     add 5 as edit function on coordinate
//                     group code & move sales pgm edit after
//                     gpc edit setup in ob0gs14.
// 04/27/95   craine   allow for new yobcd 'pd' and 'lp'.
// 05/23/95   craine   add pf11 and use cu1700 to get cu-cust
//                     prod-id info
// 072095     CRAINE   DISPLAY OB3REC.KUIPRDID WHEN WCU1700 NOT
//                     FOUND
// 07/27/95   DLIDDL   Modified to incorporate Nike Canada into
//                     AIRSPEED - OB0GS06, OB0GS04,
//                     OB0GS-ED-NIKE-PRD.
// 08/07/95   CRAINE   Database chnages.
// 02/14/96   CBRINE   Chg return code from 1 to 2 in
//                     OB0GS-GET-PRD-XREF.
// 05/06/96   wleong   Add OP-CASE-LOT-NBR to show up on
//                     product header screen.
// 10/01/96   CBRINE   Apply changes to xref tables, allow up-
//                     dating to OP-CASE-LOT-NBR.
// 03/03/97   CBRINE   Add edit to not allow invalid product to
//                     be added to VCUCPX01.
// 03/03/97   wleong   changed to update prepack with valid
//                     style and color
// 07/28/97   CBRINE   Allow updating to OP-CASE-LOT-NBR when
//                     nothing else on map changed (ob0gs13)
// 09/01/97   RFREY    OCD Changes - update vocitm01.delt-fl
//                     when an item is deleted/reinstated
// 10/03/97   CBRINE   Delete override & companion records
//                     if item is deleted. OB0GS-DEL-VOBXRF01
//                     and OB0GS-DEL-VBCPOX02.
// 11/24/97   JOLDIN   Require ocd change reason for a cancel
//                     and write a dordcd.vososcr01.
// 12/15/97   klee     hardcoded oo in the owner grp if chaged
//                     to spaces.
// 03/01/98   wleong   delete prepack if item is deleted.
//                     ob0gspf.
// 10/02/98   svargh   updated ob0gs21 and added ob0gs-check-vb
//                     ulks01,ob0gs-updte-vbulk to update
//                     bulk quantities in vbulks02 table when
//                     header is updated.
// 03/22/99   kramse   Modified statement groups OB0GS06 and
//                     OB0GS-ED-NIKE-PRD to call SY2000 if the
//                     order is an GPC 03 regardless of order
//                     origin.
// *********************
Program OB0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OB0GW01 OB0GW01; // record
  OB1REC OB1REC; // record
  OB3REC OB3REC; // record
  OB7REC OB7REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBKREC OBKREC; // record
  OBLEREC OBLEREC; // record
  OBSFREC OBSFREC; // record
  OBSOREC OBSOREC; // record
  OBSSREC OBSSREC; // record
  OBWREC OBWREC; // record
  OBZREC OBZREC; // record
  PC2REC PC2REC; // record
  PWRREC PWRREC; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBCPOX02 VBCPOX02; // record
  VBCSPR01 VBCSPR01; // record
  VBULKS02 VBULKS02; // record
  VCUCPX01 VCUCPX01; // record
  VOBXRF01 VOBXRF01; // record
  VOCITM01 VOCITM01; // record
  WCU1700 WCU1700; // record
  WCU1710 WCU1710; // record
  WOZ2090 WOZ2090; // record
  WSY2000 WSY2000; // record
  XOWREC XOWREC; // record
  XSOBW01 XSOBW01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDSTBL; // table
  use XHDTBL; // table
  use XOTTBL; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XEGTBL; // table
  use XOCTBL; // table
  use XLCTBL; // table
  use XOWTBL; // table
  use XPGTBL; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use XPRTBL {deleteAfterUse = yes}; // table
  use XQATBL; // table
  use XUMTBL; // table
  use XWHTBL; // table
  use OB0GM.OB0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0G000: OB0G000();
    goto OB0G010;
    OB0G010: OB0G010();
    goto OB0G010;
  end // end main
end // end OB0G

// ORDER BATCH PRODUCT HEADER
Function OB0G000()
     /* Check csp and order batch security*/

  XSENTRY();
  XSOBS01();

     /* Initialize application - init records, get zz date/time,*/
                              /* save map name for XSOBE## sgrp's*/
  OB0GS01();

     /* Set -911 processing flag*/

  OBWREC.OBWER911 = "N";

     /* Determine if batch edit is running*/

  XSOBS02();

     /* Read current order header*/

  XSOBS03();

     /* Read company record*/

  OB0GS-SEL-VCMPNY01();

     /* Display commarea message*/

  OB0GM001.CAMSG = OBWREC.CAMSG;
  OBWREC.CAMSG = " ";


     /* Build map for display*/

  OB0GS02();


  if (OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "LP" /* not lost demand*/
   && OB1REC.YOBCD != "PD") /* not postponed demand*/
    OB0GS07(); /* edit map*/
  end

end // end OB0G000

// CONVERSE OB0G010
Function OB0G010()

  converseLib.clearScreen();
   /* set map page number*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 display message flag*/

  converse OB0GM001 ;

     /* Init error stuff*/

  OBWREC.OBWERRFL = "N";
  converseLib.validationFailed(0);
  OBWREC.OBWHELP = OB0GM001.CAMSG; /* save for help screen*/
  OB0GM001.CAMSG = " "; /* initialize commarea msg line*/


     /* Reset field attributes*/

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    OB0GS20(); /* set fields autoskip*/
  else
    OB0GS05(); /* set fields defined*/
  end


     /* Edit map*/

  if (OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "LP" /* lost demand reported*/
   && OB1REC.YOBCD != "PD") /* postponed demand reported*/
    OB0GS07(); /* edit*/

    if (OBWREC.OBWERRFL == "N"
     && converseVar.eventKey is enter)
      OB0GS13(); /* update*/
    end

    if (OBWREC.OBWERRFL == "N"
     && OB0GW01.OB0GWCHG == "Y"
     && converseVar.eventKey is enter)
      XSOBS-ONLINE-EDIT(); /* relational edits*/
      if (OB0GW01.OP1CUOID != OBWREC.OP1CUOID
       && OB0GW01.OP1CUOID != 0
       && OB0GW01.OB0GW-NEW-ORD-SUB > 0)
        OB0GS50(); /* edit second order*/
      end
    end

  end

     /* Edit PF Keys*/

  OB0GSPF();
end // end OB0G010

// UPDATE OB7REC VIA OB5210
Function OB0GS-ADD-OB7REC()

   /* add message record*/

  set OB7REC empty;

  OB7REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB7REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB7REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/
  OB7REC.OP2LNINB = OB3REC.OP2LNINB; /* line item nbr*/
  OB7REC.OB6MSGNB = OB0GW01.MSG-NBR; /* message nbr*/
  OB7REC.OB7MSGTP = "H"; /* message type*/

  OB7REC.ZZZSDT = OBWREC.ZZZCHGDT;
  OB7REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB7REC.ZZZSTM = OBWREC.ZZZCHGTM;
  OB7REC.ZZZCHGTM = OBWREC.ZZZCHGTM;
  OB7REC.ZZZCHGCT = 0;

  set SQLCA empty;

  call "IO5210" ("A ", SQLCA, OB7REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == -803)
      /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "A       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5210  "; /* i/omod*/
    TA1REC.TA1LOCAT[3] = "OB0GS-ADD-OB7REC"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* statement group*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0GS-ADD-OB7REC

// INSERT VBCPOX02
Function OB0GS-ADD-VBCPOX02()

  set SQLCA empty;

  VBCPOX02.SY1STNBR = OB3REC.SY1STNBR;
  VBCPOX02.SY2CLRID = OB3REC.SY2CLRID;
  VBCPOX02.XDMCD = OB3REC.XDMCD;

  if (KUCREC.CU-CUSKU-SZ-FL == "Y")
    VBCPOX02.SY5SZID = WCU1710.SY-SZ-ID[OB0GWSB5];
  else
    VBCPOX02.SY5SZID = 0;
  end

  VBCPOX02.ZZZSDT = OBWREC.ZZZCHGDT;
  VBCPOX02.ZZZSTM = OBWREC.ZZZCHGTM;
  VBCPOX02.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VBCPOX02.ZZZCHGTM = OBWREC.ZZZCHGTM;
  VBCPOX02.ZZZCHGCT = 0;

  call "VBCPOX02" ("A ", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == -803) /* check for duplicate*/
    OB0GW01.MSG-NBR = "305";
    OB0GS-ADD-OB7REC();
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "A       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS-AD"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "D-VBCPOX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0GS-ADD-VBCPOX02

// INSERT VCUCPX01
Function OB0GS-ADD-VCUCPX01()

  VCUCPX01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VCUCPX01.ZZZCHGTM = OBWREC.ZZZCHGTM;

  set SQLCA empty;

  call "VCUCPX01" ("A ", SQLCA, VCUCPX01) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == -803) /* record already exists*/
    OB0GW01.MSG-NBR = "306";
    OB0GS-ADD-OB7REC();
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCUCPX01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "A       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VCUCPX01"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS-AD"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "D-VCUCPX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end



end // end OB0GS-ADD-VCUCPX01

// update case lot nbr
Function OB0GS-ADD-VOBXRF01()

  set VOBXRF01 empty;

  VOBXRF01.OP1PARTN = OB3REC.OP1PARTN; /* part char*/
  VOBXRF01.OP1CUOID = OB3REC.OP1CUOID; /* order number*/
  VOBXRF01.OP1NORID = OB3REC.OP1NORID; /* sub-order number*/
  VOBXRF01.OP2LNINB = OB3REC.OP2LNINB; /* line item nbr*/
  VOBXRF01.OP-CASE-LOT-NBR = OB0GM001.OP-CASE-LOT-NBR; /* case lot nbr*/
  VOBXRF01.SY5SZID = 0; /* size (for now VOBXRF01 is at product*/
                                   /* level*/
      /* change date/time*/
  VOBXRF01.ZZZSDT = OBWREC.ZZZCHGDT;
  VOBXRF01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VOBXRF01.ZZZSTM = OBWREC.ZZZCHGTM;
  VOBXRF01.ZZZCHGTM = OBWREC.ZZZCHGTM;
  VOBXRF01.ZZZCHGCT = 0;


  call "VOBXRF01" ("A ", SQLCA, VOBXRF01) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -803)
     /* OB0GS-UPD-VOBXRF01;*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBXRF01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "A       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "VOBXRF01"; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0GS22 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB0GW01.OB0GWMS4; /* order number*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end




end // end OB0GS-ADD-VOBXRF01

// INSERT VBCPOX02
Function OB0GS-BUILD-VBCPOX()


  set VBCPOX02 empty;

  VBCPOX02.OP1PARTN = OB3REC.OP1PARTN;
  VBCPOX02.OP1CUOID = OB3REC.OP1CUOID;
  VBCPOX02.OP1NORID = OB3REC.OP1NORID;
  VBCPOX02.OP2LNINB = OB3REC.OP2LNINB;
  VBCPOX02.CU-CUSKU-ID = WCU1710.CU-CUSKU-ID[OB0GWSB5];
  VBCPOX02.SY1STNBR = OB3REC.SY1STNBR;
  VBCPOX02.SY2CLRID = OB3REC.SY2CLRID;
  VBCPOX02.XDMCD = OB3REC.XDMCD;
  VBCPOX02.CU-CUST-PROD-ID = WCU1710.CU-CUST-PROD-ID[OB0GWSB5];

  if (KUCREC.CU-CUSKU-SZ-FL == "Y")
    VBCPOX02.SY5SZID = WCU1710.SY-SZ-ID[OB0GWSB5];
  else
    VBCPOX02.SY5SZID = 0;
  end

  VBCPOX02.ZZZSDT = OBWREC.ZZZCHGDT;
  VBCPOX02.ZZZSTM = OBWREC.ZZZCHGTM;
  VBCPOX02.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VBCPOX02.ZZZCHGTM = OBWREC.ZZZCHGTM;
  VBCPOX02.ZZZCHGCT = 0;

  if (WCU1710.CU-CUST-PROD-ID[OB0GWSB5] != VCUCPX01.CU-CUST-PROD-ID)
    VBCPOX02.CU-PROD-ID-OVRDFL = "Y";
    VBCPOX02.CU-CUST-PROD-ID = WCU1710.CU-CUST-PROD-ID[OB0GWSB5];
  else
    VBCPOX02.CU-PROD-ID-OVRDFL = "N";
  end
  if (WCU1710.CU-PROD-NM[OB0GWSB5] != VCUCPX01.CU-PROD-NM)
    VBCPOX02.CU-PROD-NM-OVRDFL = "Y";
    VBCPOX02.CU-PROD-NM = WCU1710.CU-PROD-NM[OB0GWSB5];
  else
    VBCPOX02.CU-PROD-NM-OVRDFL = "N";
  end
  if (WCU1710.CU-PROD-COLR-NM[OB0GWSB5] != VCUCPX01.CU-PROD-COLR-NM)
    VBCPOX02.CU-COLR-NM-OVRDFL = "Y";
    VBCPOX02.CU-PROD-COLR-NM = WCU1710.CU-PROD-COLR-NM[OB0GWSB5];
  else
    VBCPOX02.CU-PROD-ID-OVRDFL = "N";
  end
  if (WCU1710.CU-PROD-SZ-ID[OB0GWSB5] != VCUCPX01.CU-PROD-SZ-ID)
    VBCPOX02.CU-SZ-ID-OVRDFL = "Y";
    VBCPOX02.CU-PROD-SZ-ID = WCU1710.CU-PROD-SZ-ID[OB0GWSB5];
  else
    VBCPOX02.CU-SZ-ID-OVRDFL = "N";
  end
  if (WCU1710.CU-PROD-SZ-NM[OB0GWSB5] != VCUCPX01.CU-PROD-SZ-NM)
    VBCPOX02.CU-SZ-NM-OVRDFL = "Y";
    VBCPOX02.CU-PROD-SZ-NM = WCU1710.CU-PROD-SZ-NM[OB0GWSB5];
  else
    VBCPOX02.CU-SZ-NM-OVRDFL = "N";
  end
  if (WCU1710.CU-VEND-CLS-ID[OB0GWSB5] != VCUCPX01.CU-VEND-CLS-ID)
    VBCPOX02.CU-VEND-CLS-OVRDFL = "Y";
    VCUCPX01.CU-VEND-CLS-ID = WCU1710.CU-VEND-CLS-ID[OB0GWSB5];
  else
    VBCPOX02.CU-VEND-CLS-OVRDFL = "N";
  end
  if (WCU1710.CU-CUST-RTL-PRC[OB0GWSB5] != VCUCPX01.CU-CUST-RTL-PRC)
    VBCPOX02.CU-RTL-PRC-OVRDFL = "Y";
    VBCPOX02.CU-CUST-RTL-PRC = WCU1710.CU-CUST-RTL-PRC[OB0GWSB5];
  else
    VBCPOX02.CU-RTL-PRC-OVRDFL = "N";
  end
  if (WCU1710.CU-CUST-SPCL-PRC[OB0GWSB5] != VCUCPX01.CU-CUST-SPCL-PRC)
    VBCPOX02.CU-SPCL-PRC-OVRDFL = "Y";
    VBCPOX02.CU-CUST-SPCL-PRC = WCU1710.CU-CUST-SPCL-PRC[OB0GWSB5];
  else
    VBCPOX02.CU-SPCL-PRC-OVRDFL = "N";
  end
  if (WCU1710.CU-SPCL-PRC-EDT[OB0GWSB5] != VCUCPX01.CU-SPCL-PRC-EDT)
    VBCPOX02.CU-SPCL-EDT-OVRDFL = "Y";
    VBCPOX02.CU-SPCL-PRC-EDT = WCU1710.CU-SPCL-PRC-EDT[OB0GWSB5];
  else
    VBCPOX02.CU-SPCL-EDT-OVRDFL = "N";
  end
  if (WCU1710.CU-SUGG-RTL-PRC[OB0GWSB5] != VCUCPX01.CU-SUGG-RTL-PRC)
    VBCPOX02.CU-SUGG-PRC-OVRDFL = "Y";
    VBCPOX02.CU-SUGG-RTL-PRC = WCU1710.CU-SUGG-RTL-PRC[OB0GWSB5];
  else
    VBCPOX02.CU-SUGG-PRC-OVRDFL = "N";
  end
  if (WCU1710.CU-SKU-COMNT1[OB0GWSB5] != VCUCPX01.CU-SKU-COMNT1)
    VBCPOX02.CU-COMNT1-OVRDFL = "Y";
    VBCPOX02.CU-SKU-COMNT1 = WCU1710.CU-SKU-COMNT1[OB0GWSB5];
  else
    VBCPOX02.CU-COMNT1-OVRDFL = "N";
  end
  if (WCU1710.CU-SKU-COMNT2[OB0GWSB5] != VCUCPX01.CU-SKU-COMNT2)
    VBCPOX02.CU-COMNT2-OVRDFL = "Y";
    VBCPOX02.CU-SKU-COMNT2 = WCU1710.CU-SKU-COMNT2[OB0GWSB5];
  else
    VBCPOX02.CU-COMNT2-OVRDFL = "N";
  end
  if (WCU1710.CU-SKU-COMNT3[OB0GWSB5] != VCUCPX01.CU-SKU-COMNT3)
    VBCPOX02.CU-COMNT3-OVRDFL = "Y";
    VBCPOX02.CU-SKU-COMNT3 = WCU1710.CU-SKU-COMNT3[OB0GWSB5];
  else
    VBCPOX02.CU-COMNT3-OVRDFL = "N";
  end

end // end OB0GS-BUILD-VBCPOX

// BUILD VCUCPX01 FOR INSERT
Function OB0GS-BUILD-VCUCPX()

  set VCUCPX01 empty;

  VCUCPX01.CU-CUSKU-ID = OB0GW01.XREF-CU-CUSKU-ID;
  VCUCPX01.XNX-DEPT-ID-XREF = 0;
  VCUCPX01.CU-PROD-XREF-EDT = OB1REC.OP1CUNDT;

  VCUCPX01.SY1STNBR = OB3REC.SY1STNBR;
  VCUCPX01.SY2CLRID = OB3REC.SY2CLRID;
  VCUCPX01.XDMCD = OB3REC.XDMCD;
  VCUCPX01.XGPCD = OB3REC.XGPCD;
  VCUCPX01.XQACD = OB3REC.XQACD;
  VCUCPX01.SY5SZID = 0;
  VCUCPX01.CU-CUST-PROD-ID = OB0GW01.XREF-CU-CUST-PROD-ID;
  VCUCPX01.CU-PROD-NM = OB0GW01.XREF-CU-PROD-NM;
  VCUCPX01.CU-PROD-COLR-NM = OB0GW01.XREF-CU-PROD-COLR-NM;
  VCUCPX01.CU-PROD-SZ-ID = OB0GW01.XREF-CU-PROD-SZ-ID;
  VCUCPX01.CU-PROD-SZ-NM = OB0GW01.XREF-CU-PROD-SZ-NM;
  VCUCPX01.CU-CUST-RTL-PRC = OB0GW01.XREF-CU-CUST-RTL-PRC;
  VCUCPX01.CU-CUST-SPCL-PRC = OB0GW01.XREF-CU-CUST-SPCL-PRC;
  VCUCPX01.CU-SUGG-RTL-PRC = OB0GW01.XREF-CU-SUGG-RTL-PRC;
  VCUCPX01.CU-SPCL-PRC-EDT = OB0GW01.XREF-CU-SPCL-PRC-EDT;
  VCUCPX01.CU-VEND-CLS-ID = OB0GW01.XREF-CU-VEND-CLS-ID;
  VCUCPX01.CU-SKU-COMNT1 = OB0GW01.XREF-CU-SKU-COMNT1;
  VCUCPX01.CU-SKU-COMNT2 = OB0GW01.XREF-CU-SKU-COMNT2;
  VCUCPX01.CU-SKU-COMNT3 = OB0GW01.XREF-CU-SKU-COMNT3;

  VCUCPX01.XXX-STAT = "A";
  VCUCPX01.XDZ-DATA-DIST-CD = OB1REC.XDZ-DATA-DIST-CD;

  VCUCPX01.ZZZSDT = OBWREC.ZZZCHGDT;
  VCUCPX01.ZZZSTM = OBWREC.ZZZCHGTM;
  VCUCPX01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VCUCPX01.ZZZCHGTM = OBWREC.ZZZCHGTM;
  VCUCPX01.ZZZCHGCT = 0;


end // end OB0GS-BUILD-VCUCPX

// update ocd size item
Function OB0GS-CALL-OZ2090()

      /* use OZ2090 to update the VOCSIZ01 record*/

  set WOZ2090 empty;

  WOZ2090.OZ2090-OP-ORD-PART-CHAR = OB1REC.OP1PARTN;
  WOZ2090.OZ2090-OP-CUST-ORD-ID = OB1REC.OP1CUOID;
  WOZ2090.OZ2090-OP-NIKE-ORD-ID = OB1REC.OP1NORID;
  WOZ2090.OZ2090-OP-LINE-ITEM-NBR = OBWREC.OBWLNINB;
  WOZ2090.OZ2090-XOM-ORD-MNTN-CD = OB0GM001.XOMCD;
  WOZ2090.OZ2090-SOCD-APPL-SRC-CD = "OB";
  WOZ2090.OZ2090-SOCD-GLBL-MNTN-FL = "N";
  WOZ2090.OZ2090-SOCD-SZ-RSN-TXT = OB0GM001.SOCD-SZ-RSN-TXT;
  WOZ2090.OZ2090-XXX-USER-ID = COMMAREA.CAUSERID;


  call "OZ2090" (WOZ2090) {isNoRefresh = yes, isExternal = yes};


  if (WOZ2090.OZ2090-RETURN-CD == "00") /* good return*/
     /* ok - next sentence*/
  else
    converseLib.validationFailed(238);
    OBWREC.OBWERRFL = "Y";
  end

end // end OB0GS-CALL-OZ2090

// CHECK FOR BULKS ORDER
Function OB0GS-CHECK-VBULK()

   /* ********TCS INCLUDE BEGIN**************/

   /* STATEMENT GROUP TO SELECT BULK TABLE*/
  set SQLCA empty;
  set OBFREC empty;
  OBFREC.OBFTASK = "S";
  call "VBULKS02" (OBFREC, SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0GS-UPDTE-VBULK();
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "VBULKS02";
      TA1REC.TA1LOCAT[3] = "OB0GS-CHECK-";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VBULKS02"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end
     /* ********TCS INCLUDE END**************/


end // end OB0GS-CHECK-VBULK

// CHECK CUST PROD XREF
Function OB0GS-CHECK-XREF()

   /* if either the NIKE style/color or customer product id changed,*/
   /* we need to reflect these changes to the customer product cross*/
   /* reference tables.*/

   /* If the NIKE style/color was not not valid, then we have*/
   /* overrride record(s). If this is a product level customer,*/
   /* take the information from the override record and if the*/
   /* VCUCPX01 doesn't exist, add it and delete the override.*/
   /* If VCUCPX01 exists, compare the two. If the information is*/
   /* the same, delete the override, otherwise, update override with*/
   /* new style and color.*/
   /* If this is a size level customer, update all the overrides.*/

   /* If the NIKE style/color was valid, then we delete any override*/
   /* record(s) that exist. (per Sandi Clark)*/

  if (OB0GW01.OB0GW-SPCL-MK-FL == "Y")
    if (OB0GW01.OB0GW-VALID-PROD-FL == "Y")
      if (OB0GW01.CU-CUSKU-SZ-FL == "N")
        OB0GS-UPD-CUSTXREF();
      else
        OB0GS-UPD-OVERRIDE();
      end
    else
      OB0GS-UPD-OVERRIDE();
    end
  else
    OB0GS-DEL-OVERRIDE();
  end

end // end OB0GS-CHECK-XREF

// CHECK FOR PREPACK
Function OB0GS-CHK-PREPACK()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set VBCSPR01 empty;
  set SQLCA empty;

  VBCSPR01.XWHCD = OB1REC.XWHCD; /* WAREHOUSE*/
  VBCSPR01.OP1PARTN = OB1REC.OP1PARTN; /* PART CHAR*/
  VBCSPR01.OP1CUOID = OB1REC.OP1CUOID; /* ORDER NUM*/
  VBCSPR01.OP1NORID = OB1REC.OP1NORID; /* NIKE ORD ID*/
  VBCSPR01.OP2LNINB = OBWREC.OBWLNINB; /* LINE ITEM NBR*/

  call "VBCSPR01" ("S ", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0GS-UPDT-PREPACK(); /* prepack exists*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence;              /* prepack doesn't exist*/
    else
      set SQLCA empty;
      TA1REC.TA1DBASE = "DORDB   ";
      TA1REC.TA1TBLVU = "VBCSPR01";
      TA1REC.TA1LOCAT[1] = "SE      ";
      TA1REC.TA1LOCAT[2] = "VBCSPR01";
      TA1REC.TA1LOCAT[3] = "OB0GS-CHK-PREPACK";
      TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

end // end OB0GS-CHK-PREPACK

// COMPARE VCUCPX01 & WCU1710
Function OB0GS-COMPARE-XREF()

   /* Compare the order specific data (saved in OB0GW01) and the VCUCPX01*/
   /* data returned from CU1710 with option 2. If the information*/
   /* is the same, we don't need the override, so delete it.*/
   /* If they are different, we need to update the override with the*/
   /* new style and color. Since this is key data, we first delete, then*/
   /* re-add it.*/


  if (OB0GW01.XREF-CU-CUST-PROD-ID > " "
   && OB0GW01.XREF-CU-CUST-PROD-ID != WCU1710.CU-CUST-PROD-ID)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-PROD-NM > " "
   && OB0GW01.XREF-CU-PROD-NM != WCU1710.CU-PROD-NM)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-PROD-COLR-NM > " "
   && OB0GW01.XREF-CU-PROD-COLR-NM != WCU1710.CU-PROD-COLR-NM)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-PROD-SZ-ID > " "
   && OB0GW01.XREF-CU-PROD-SZ-ID != WCU1710.CU-PROD-SZ-ID)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-PROD-SZ-NM > " "
   && OB0GW01.XREF-CU-PROD-SZ-NM != WCU1710.CU-PROD-SZ-NM)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-VEND-CLS-ID > " "
   && OB0GW01.XREF-CU-VEND-CLS-ID != WCU1710.CU-VEND-CLS-ID)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-CUST-RTL-PRC > 0
   && OB0GW01.XREF-CU-CUST-RTL-PRC != WCU1710.CU-CUST-RTL-PRC)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-CUST-SPCL-PRC > 0
   && OB0GW01.XREF-CU-CUST-SPCL-PRC != WCU1710.CU-CUST-SPCL-PRC)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-SPCL-PRC-EDT > 0
   && OB0GW01.XREF-CU-SPCL-PRC-EDT != WCU1710.CU-SPCL-PRC-EDT)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-SUGG-RTL-PRC > 0
   && OB0GW01.XREF-CU-SUGG-RTL-PRC != WCU1710.CU-SUGG-RTL-PRC)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-SKU-COMNT1 > " "
   && OB0GW01.XREF-CU-SKU-COMNT1 != WCU1710.CU-SKU-COMNT1)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-SKU-COMNT2 > " "
   && OB0GW01.XREF-CU-SKU-COMNT2 != WCU1710.CU-SKU-COMNT2)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  if (OB0GW01.XREF-CU-SKU-COMNT3 > " "
   && OB0GW01.XREF-CU-SKU-COMNT3 != WCU1710.CU-SKU-COMNT3)
    OB0GS-UPD-OVERRIDE();
    return;
  end

  OB0GS-DEL-VBCPOX02();

end // end OB0GS-COMPARE-XREF

// GET CUST PROD XREF
Function OB0GS-CU1710-OPT1()

   /* build record to pass to select xref item info*/

  set WCU1710 empty;

  WCU1710.WCU1710-IN-DORDB-IND = "Y";
  WCU1710.WCU1710-INQUIRY-OPTION = 1; /* xref info w/ovrds*/
  WCU1710-IN-CU-CO-ID = OB1REC.KUCCOID;
  WCU1710-XNX-DEPT-ID-XREF = OB1REC.XNXCD;
  WCU1710-CU-PROD-XREF-EDT = OB1REC.OP1CUNDT;
  WCU1710-IN-OP-ORD-PART-CHAR = OB1REC.OP1PARTN;
  WCU1710-IN-OP-CUST-ORD-ID = OB1REC.OP1CUOID;
  WCU1710-IN-OP-NIKE-ORD-ID = OB1REC.OP1NORID;
  WCU1710-IN-OP-LINE-ITEM-NBR = OB3REC.OP2LNINB;

  if (OB3REC.XGPCD != " "
   && OB3REC.SY1STNBR != " "
   && OB3REC.SY2CLRID != " "
   && OB3REC.XDMCD != " "
   && OB3REC.XQACD != " ")
    WCU1710.WCU1710-IN-XGP-GPC-CD = OB3REC.XGPCD;
    WCU1710.WCU1710-IN-SY-STY-NBR = OB3REC.SY1STNBR;
    WCU1710.WCU1710-IN-SY-COLR-CD-ID = OB3REC.SY2CLRID;
    WCU1710.WCU1710-IN-XDM-DIM-CD = OB3REC.XDMCD;
    WCU1710.WCU1710-IN-XQA-QUAL-CD = OB3REC.XQACD;
    WCU1710.WCU1710-IN-SY-SZ-ID = 0;
  else
    WCU1710.WCU1710-IN-CU-CUST-PROD-ID = OB3REC.CU-CUST-PROD-ID;
    WCU1710.WCU1710-IN-CU-PROD-SZ-ID = " ";
  end

  WCU1710-RETURN-CODE = 99;

   /* get all the xref info for the item or size*/


  call "CU1710" (WCU1710) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (WCU1710.WCU1710-RETURN-CODE == 0
   || WCU1710.WCU1710-RETURN-CODE == 10) /* check for good rc*/
    OB0GW01.OB0GW-WCU1710-EXISTS-FL = "Y";
  else
    if (WCU1710.WCU1710-RETURN-CODE == 1) /* check for not found*/
      if (WCU1710.SY-STY-NBR[1] > " " /* if product is invalid, there would*/
       || WCU1710.SY-SZ-ID[1] > 0)    /* be no xref records, but there would*/
        OB0GW01.OB0GW-WCU1710-EXISTS-FL = "Y"; /* be ovrd info*/
      else
        OB0GW01.OB0GW-WCU1710-EXISTS-FL = "N";
      end
    else
      if (WCU1710.WCU1710-RETURN-CODE == 9 /* check for no cu-cusku-ind*/
       || WCU1710.WCU1710-RETURN-CODE == 6) /* check for no cu-cusku-ind*/
        OB0GW01.OB0GW-WCU1710-EXISTS-FL = "N";
      else
        TA1REC.TA1LOCAT[1] = "CU1710  "; /* i/o mod name*/
        TA1REC.TA1LOCAT[2] = "OB0GS-CU"; /* statement group*/
        TA1REC.TA1LOCAT[3] = "1710-OPT"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "1       "; /* statement group*/
        TAEREC.TAEDESC1 = "BAD RETURN FROM CU1710 - RETURN CODE=";
        TAEREC.TAEDESC2 = WCU1710.WCU1710-RETURN-CODE;
        XSOBENR(); /* application return go to main menu*/
      end
    end
  end

  if (OB0GW01.OB0GW-WCU1710-EXISTS-FL == "Y")
    OB0GW01.OB0GWSB5 = 1;
    if (WCU1710-RETURN-CODE == 0)
      OB0GM001.CU-CUST-PROD-ID = WCU1710.CU-CUST-PROD-ID[OB0GWSB5];
      OB0GM001.OP-CASE-LOT-NBR = WCU1710.OP-CASE-LOT-NBR[OB0GWSB5];
      OB0GW01.OB0GW-ORIG-CASE-LOT-NBR = WCU1710.OP-CASE-LOT-NBR[OB0GWSB5];
      OB0GM001.WCU1710-CU-OVRD-EXISTS-FL = WCU1710.WCU1710-CU-OVRD-EXISTS-FL[OB0GWSB5];
      OB0GS-SAVE-XREF();
    else
      while (OB0GW01.OB0GWSB5 <= 24)
        if (WCU1710.SY-STY-NBR[OB0GWSB5] > " "
         || WCU1710.SY-SZ-ID[OB0GWSB5] > 0)
          OB0GM001.CU-CUST-PROD-ID = WCU1710.CU-CUST-PROD-ID[OB0GWSB5];
          OB0GM001.OP-CASE-LOT-NBR = WCU1710.OP-CASE-LOT-NBR[OB0GWSB5];
          OB0GW01.OB0GW-ORIG-CASE-LOT-NBR = WCU1710.OP-CASE-LOT-NBR[OB0GWSB5];
          OB0GM001.WCU1710-CU-OVRD-EXISTS-FL = WCU1710.WCU1710-CU-OVRD-EXISTS-FL[OB0GWSB5];
          OB0GS-SAVE-XREF();
          OB0GWSB5 = 25;
        end
        OB0GW01.OB0GWSB5 = OB0GW01.OB0GWSB5 + 1;
      end
    end
  end

  if (OB0GM001.CU-CUST-PROD-ID == " ")
    OB0GM001.CU-CUST-PROD-ID = OB3REC.CU-CUST-PROD-ID;
  end

end // end OB0GS-CU1710-OPT1

// CALL CU1710 WITH OPTION 2
Function OB0GS-CU1710-OPT2()

   /* build record to pass to select xref item info*/

  set WCU1710 empty;

  WCU1710-IN-DORDB-IND = "Y";
  WCU1710-INQUIRY-OPTION = 2; /* xref info w/ovrds*/
  WCU1710-IN-CU-CO-ID = OB1REC.KUCCOID;
  WCU1710-XNX-DEPT-ID-XREF = OB0GW01.XREF-XNX-DEPT-ID-XREF;
  WCU1710-CU-PROD-XREF-EDT = OB0GW01.XREF-CU-PROD-XREF-EDT;
  WCU1710-IN-XGP-GPC-CD = OB3REC.XGPCD;
  WCU1710-IN-SY-STY-NBR = OB3REC.SY1STNBR;
  WCU1710-IN-SY-COLR-CD-ID = OB3REC.SY2CLRID;
  WCU1710-IN-XDM-DIM-CD = OB3REC.XDMCD;
  WCU1710-IN-XQA-QUAL-CD = OB3REC.XQACD;
   /* since this logic is only done for special make-up or*/
   /* invalid product at the product level, we will pass size 0.*/
  WCU1710-IN-SY-SZ-ID = 0;

  WCU1710-RETURN-CODE = 99;

   /* get the xref info for the one size*/


  call "CU1710" (WCU1710) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (WCU1710-RETURN-CODE == 0)
    OB0GW01.OB0GW-VCUCPX01-EXISTS-FL = "Y";
  else
    if (WCU1710-RETURN-CODE == 1)
      OB0GW01.OB0GW-VCUCPX01-EXISTS-FL = "N";
    else
      TA1REC.TA1LOCAT[1] = "CU1710  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[2] = "OB0GS-CU"; /* statement group*/
      TA1REC.TA1LOCAT[3] = "1710-OPT"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "2       "; /* statement group*/
      TAEREC.TAEDESC1 = "BAD RETURN FROM CU1710 - RETURN CODE=";
      TAEREC.TAEDESC2 = WCU1710.WCU1710-RETURN-CODE;
      XSOBENR(); /* application return go to main menu*/
    end
  end


end // end OB0GS-CU1710-OPT2

// DELETE ALL OVERRIDES
Function OB0GS-DEL-OVERRIDE()

  set SQLCA empty;

  VBCPOX02.OP1PARTN = OB3REC.OP1PARTN;
  VBCPOX02.OP1CUOID = OB3REC.OP1CUOID;
  VBCPOX02.OP1NORID = OB3REC.OP1NORID;
  VBCPOX02.OP2LNINB = OB3REC.OP2LNINB;

  call "VBCPOX02" ("D2", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* NEXT SENTENCE*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D2      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "OB0GS-DE"; /* statement group*/
    TA1REC.TA1LOCAT[3] = "L-OVERRI"; /* extra key*/
    TA1REC.TA1LOCAT[4] = "DE      "; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0GS-DEL-OVERRIDE

// DELETE PREPACK
Function OB0GS-DEL-PREPACK()

   /* THIS STATEMENT GROUP DELETES THE PREPACK RECORD IF*/
   /* IT EXISTS*/

  call "VBCSPR01" ("D ", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;*/
  else
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "DELETE  ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0GS-DELETE-PREPK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0GS-DEL-PREPACK

// DELETE VBCPOX02
Function OB0GS-DEL-VBCPOX02()

  set SQLCA empty;

  VBCPOX02.OP1PARTN = OB3REC.OP1PARTN;
  VBCPOX02.OP1CUOID = OB3REC.OP1CUOID;
  VBCPOX02.OP1NORID = OB3REC.OP1NORID;
  VBCPOX02.OP2LNINB = OB3REC.OP2LNINB;

  if (KUCREC.CU-CUSKU-SZ-FL == "Y")
    if (OB0GW01.OB0GW-DEL-ZERO-OVRD == "Y")
      VBCPOX02.SY5SZID = 0;
    else
      VBCPOX02.SY5SZID = WCU1710.SY-SZ-ID[OB0GWSB5];
    end
  else
    VBCPOX02.SY5SZID = 0;
  end

  call "VBCPOX02" ("D1", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* NEXT SENTENCE*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS-DE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "L-VBCPOX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0GS-DEL-VBCPOX02

// DELETE COMPANION RECORD
Function OB0GS-DEL-VOBXRF01()

  set VOBXRF01 empty;

  VOBXRF01.OP1PARTN = OB3REC.OP1PARTN; /* part char*/
  VOBXRF01.OP1CUOID = OB3REC.OP1CUOID; /* order number*/
  VOBXRF01.OP1NORID = OB3REC.OP1NORID; /* sub-order number*/
  VOBXRF01.OP2LNINB = OB3REC.OP2LNINB; /* line item nbr*/
  VOBXRF01.SY5SZID = 0; /* size (currently at product level)*/


  call "VOBXRF01" ("D ", SQLCA, VOBXRF01) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == +100)
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOBXRF01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D   VOBX"; /* calling option*/
    TA1REC.TA1LOCAT[2] = "RF01  OB"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "0GS-DEL-"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "VOBXRF01"; /* statement group*/
    TA1REC.TA1LOCAT[4] = OB0GW01.OB0GWMS4; /* order number*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC(); /* abort routine - no reset*/
    end
  end




end // end OB0GS-DEL-VOBXRF01

// EDIT NIKE PRODUCT AND GPC
Function OB0GS-ED-NIKE-PRD()

  SYCREC.XGPCD = OB0GM001.XGPCD; /* gpc code*/

  OB0GW01.OB0GMPRD = OB0GM001.OB0GMPRD;
  SYCREC.SY1STNBR = OB0GW01.SY1STNBR; /* style number*/
  SYCREC.SY2CLRID = OB0GW01.SY2CLRID; /* color id*/
  SYCREC.XDMCD = OB0GW01.XDMCD; /* dimension cd*/

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

      /* CANADA 07/27/95*/
      /* Added all orders with GPC '03' - 3/22/99*/

    if (OB1REC.XDZ-DATA-DIST-CD == "CA" /* This is a Canadian order*/
     || SYCREC.XGPCD == "03")           /* This is a apparel order*/

        /* format ta1rec in case of bad return code from call to SY2000*/

      TA1REC.TA1PGMNM = "OB0G"; /* program name*/
      TA1REC.TA1LOC = "OB0GS-ED-NIKE-PRD"; /* sgrp name*/
      TA1REC.TA1MAP = "OB0GM001"; /* map name*/

      XSOB-CALL-SY2000(); /* call SY2000 to get*/
                                   /* product/region record*/

      if (WSY2000.WSY2000-RETURN-CODE == 0) /* row found*/
        OB0GW01.OB0GW-VALID-PROD-FL = "Y"; /* is a valid product*/
        OB0GW01.OB0GWSSN = SYCREC.SY1SSTNM; /* short style number*/
        OB0GW01.OB0GWSPC = " ";
        OB0GW01.OB0GWSCA = SYCREC.SY2CLRAB; /* style color abbrev*/
        OB0GM001.OB0GWPDS = OB0GW01.OB0GWPDS;
                                   /* formatted prod descrpt*/
      else
        OB0GM001.OB0GWPDS = "INVALID PRODUCT FOR REGION";
        OB0GW01.OB0GW-VALID-PROD-FL = "N"; /* not a valid product*/
      end
    else
      OB0GW01.OB0GW-VALID-PROD-FL = "Y"; /* is a valid product*/
      OB0GW01.OB0GWSSN = SYCREC.SY1SSTNM; /* short style number*/
      OB0GW01.OB0GWSPC = " ";
      OB0GW01.OB0GWSCA = SYCREC.SY2CLRAB; /* style color abbrev*/
      OB0GM001.OB0GWPDS = OB0GW01.OB0GWPDS; /* formatted prod descrpt*/
    end
  else
    OB0GM001.OB0GWPDS = "UNKNOWN PRODUCT";
    OB0GW01.OB0GW-VALID-PROD-FL = "N"; /* not a valid product*/
  end




end // end OB0GS-ED-NIKE-PRD

// EDIT OWNER GROUP
Function OB0GS-ED-OWNER-GRP()

  sysVar.arrayIndex = 1; /* initialize index*/
  XOWREC.XWHCD = OB1REC.XWHCD;
  XOWREC.XOWCD = OB0GM001.XOWCD;
  if (XOWREC.XOWCD == "  ") /* no not allow grp cd to be blank*/
    XOWREC.XOWCD = "00";
    OB0GM001.XOWCD = "00";
  end
  if (XOWREC.XOWKEY in XOWTBL.XOWKEY)
    OB0GM001.XOWABRV = XOWTBL.XOWABRV[sysVar.arrayIndex];
  else
    if (OB3REC.XOWCD == "00")
      OB0GM001.XOWABRV = " ";
    else
      converseLib.validationFailed(55); /* owner group is invalid or inactive*/
      OBWREC.OBWERRFL = "Y";
      set OB0GM001.XOWCD cursor, bold;
      OB0GM001.XOWABRV = "UNKNWN";
    end
  end



end // end OB0GS-ED-OWNER-GRP

// EDIT QUALITY CODE
Function OB0GS-ED-QUALITY()
       /* **************************************************/
       /* *  EDIT QUALITY CODE                            **/
       /* **************************************************/

  sysVar.arrayIndex = 1;
  if (OB0GM001.XQACD in XQATBL.XQACD /* search xqatbl*/
   && XQATBL.XXXSTAT[sysVar.arrayIndex] == "A") /* verify status*/
    OB0GM001.XQAABRV = XQATBL.XQAABRV[sysVar.arrayIndex];
  else
    converseLib.validationFailed(187); /* quality code invalid or inactive*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0GM001.XQACD cursor, bold;
    OB0GM001.XQAABRV = "UNKNWN";
  end


end // end OB0GS-ED-QUALITY

// EDIT SALES PROGRAM ID
Function OB0GS-ED-SALES-PGM()

  if (OB0GM001.SP1ID == " ")
    return;
  end

  SP1REC.SP1ID = OB0GM001.SP1ID;
  call "IO0070" ("S ", SQLCA, SP1REC); /* (nomaps, noncsp;*/
  if (SQLCA.VAGen_SQLCODE == 0
   && SP1REC.SP1STAT == "A") /* inactive status*/
        /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100
     || SP1REC.SP1STAT != "A") /* inactive status*/
      converseLib.validationFailed(9); /* sls pgm id invalid or inactive*/
      OBWREC.OBWERRFL = "Y";
      set OB0GM001.SP1ID cursor, bold;
    else
      TA1REC.TA1DBASE = "DSPGM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSPGM001"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0070  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0GS22 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB0GM001.SP1ID; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end
end // end OB0GS-ED-SALES-PGM

// EDIT CHANGE RSN CODE
Function OB0GS-EDIT-XL-RSN()

   /* check for a valid change reason code*/

  if (OB0GM001.XOMCD != "  ")
      /* test for a valid change code*/
    if (OB0GM001.XOMCD in XOMTBL.XOMCD /* valid maint reason*/
     && XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active maint reason*/
      if (XOMTBL.XOMCANCF[sysVar.arrayIndex] == "B" /* both add/decrease*/
       || XOMTBL.XOMCANCF[sysVar.arrayIndex] == "D") /* decrease product reason*/
         /* next sentence*/
      else
        OBWREC.OBWERRFL = "Y"; /* set error flg*/
        converseLib.validationFailed(235); /* rsn not valid for cancel*/
        set OB0GM001.XOMCD cursor, bold;
      end
    else
      OBWREC.OBWERRFL = "Y"; /* set error flg*/
      converseLib.validationFailed(234); /* rsn not valid*/
      set OB0GM001.XOMCD cursor, bold;
    end
  else
    OBWREC.OBWERRFL = "Y"; /* set error flg*/
    converseLib.validationFailed(237); /* enter chg rsn and PF24*/
    set OB0GM001.XOMCD cursor, bold;
  end



end // end OB0GS-EDIT-XL-RSN

// CHECK AND DELETE PREPKS
Function OB0GS-GET-PREPACK()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set VBCSPR01 empty;
  set SQLCA empty;

  VBCSPR01.XWHCD = OB1REC.XWHCD; /* WAREHOUSE*/
  VBCSPR01.OP1PARTN = OB1REC.OP1PARTN; /* PART CHAR*/
  VBCSPR01.OP1CUOID = OB1REC.OP1CUOID; /* ORDER NUM*/
  VBCSPR01.OP1NORID = OB1REC.OP1NORID; /* NIKE ORD ID*/
  VBCSPR01.OP2LNINB = OBWREC.OBWLNINB; /* LINE ITEM NBR*/

  call "VBCSPR01" ("S ", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* prepack exist*/
    OB0GS-DEL-PREPACK(); /* delete prepack*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence;              /* prepack doesn't exist*/
    else
      set SQLCA empty;
      TA1REC.TA1DBASE = "DORDB   ";
      TA1REC.TA1TBLVU = "VBCSPR01";
      TA1REC.TA1LOCAT[1] = "SE      ";
      TA1REC.TA1LOCAT[2] = "VBCSPR01";
      TA1REC.TA1LOCAT[3] = "OB0GS-CHK-PREPACK";
      TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

end // end OB0GS-GET-PREPACK

// SELECT LIFE CYCLE
Function OB0GS-LIFECYCLE()
  if (OBWREC.ZZZCHGDT >= SYCREC.SY2CEDT1)
    OB0GW01.XLCCD = SYCREC.XLCCD1;
  else
    if (OBWREC.ZZZCHGDT >= SYCREC.SY2CEDT2)
      OB0GW01.XLCCD = SYCREC.XLCCD2;
    else
      if (OBWREC.ZZZCHGDT >= SYCREC.SY2CEDT3)
        OB0GW01.XLCCD = SYCREC.XLCCD3;
      else
        if (OBWREC.ZZZCHGDT >= SYCREC.SY2CEDT4)
          OB0GW01.XLCCD = SYCREC.XLCCD4;
        end
      end
    end
  end

end // end OB0GS-LIFECYCLE

// SAVE WCU1710 VALUES
Function OB0GS-SAVE-XREF()

   /* Save data for use in updating the xref or override table when a new*/
   /* size is populated on the screen.*/

  OB0GW01.XREF-CU-CUSKU-ID = WCU1710.CU-CUSKU-ID[OB0GWSB5];
  OB0GW01.XREF-XNX-DEPT-ID-XREF = WCU1710.XNX-DEPT-ID-XREF[OB0GWSB5];
  OB0GW01.XREF-CU-PROD-XREF-EDT = WCU1710.CU-PROD-XREF-EDT[OB0GWSB5];
  OB0GW01.XREF-CU-CUST-PROD-ID = WCU1710.CU-CUST-PROD-ID[OB0GWSB5];
  OB0GW01.XREF-CU-PROD-NM = WCU1710.CU-PROD-NM[OB0GWSB5];
  OB0GW01.XREF-CU-PROD-SNM = WCU1710.CU-PROD-SNM[OB0GWSB5];
  OB0GW01.XREF-CU-PROD-COLR-NM = WCU1710.CU-PROD-COLR-NM[OB0GWSB5];
  OB0GW01.XREF-CU-PROD-SZ-ID = WCU1710.CU-PROD-SZ-ID[OB0GWSB5];
  OB0GW01.XREF-CU-PROD-SZ-NM = WCU1710.CU-PROD-SZ-NM[OB0GWSB5];
  OB0GW01.XREF-XGP-GPC-CD = WCU1710.XGP-GPC-CD[OB0GWSB5];
  OB0GW01.XREF-SY-STY-NBR = WCU1710.SY-STY-NBR[OB0GWSB5];
  OB0GW01.XREF-SY-COLR-CD-ID = WCU1710.SY-COLR-CD-ID[OB0GWSB5];
  OB0GW01.XREF-XDM-DIM-CD = WCU1710.XDM-DIM-CD[OB0GWSB5];
  OB0GW01.XREF-XQA-QUAL-CD = WCU1710.XQA-QUAL-CD[OB0GWSB5];
  OB0GW01.XREF-CU-CUST-RTL-PRC = WCU1710.CU-CUST-RTL-PRC[OB0GWSB5];
  OB0GW01.XREF-CU-CUST-SPCL-PRC = WCU1710.CU-CUST-SPCL-PRC[OB0GWSB5];
  OB0GW01.XREF-CU-SPCL-PRC-EDT = WCU1710.CU-SPCL-PRC-EDT[OB0GWSB5];
  OB0GW01.XREF-CU-SUGG-RTL-PRC = WCU1710.CU-SUGG-RTL-PRC[OB0GWSB5];
  OB0GW01.XREF-CU-HANG-XGP-CD = WCU1710.CU-HANG-XGP-CD[OB0GWSB5];
  OB0GW01.XREF-CU-HANG-STY-NBR = WCU1710.CU-HANG-STY-NBR[OB0GWSB5];
  OB0GW01.XREF-PK-LABL-CD1 = WCU1710.PK-LABL-CD1[OB0GWSB5];
  OB0GW01.XREF-PK-LABL-CD2 = WCU1710.PK-LABL-CD2[OB0GWSB5];
  OB0GW01.XREF-YLA-LABL-ATCH-CD1 = WCU1710.YLA-LABL-ATCH-CD1[OB0GWSB5];
  OB0GW01.XREF-YLA-LABL-ATCH-CD2 = WCU1710.YLA-LABL-ATCH-CD2[OB0GWSB5];
  OB0GW01.XREF-CU-HANG-CRTN-CLS = WCU1710.CU-HANG-CRTN-CLS[OB0GWSB5];
  OB0GW01.XREF-CU-VEND-CLS-ID = WCU1710.CU-VEND-CLS-ID[OB0GWSB5];
  OB0GW01.XREF-CU-SKU-COMNT1 = WCU1710.CU-SKU-COMNT1[OB0GWSB5];
  OB0GW01.XREF-CU-SKU-COMNT2 = WCU1710.CU-SKU-COMNT2[OB0GWSB5];
  OB0GW01.XREF-CU-SKU-COMNT3 = WCU1710.CU-SKU-COMNT3[OB0GWSB5];

end // end OB0GS-SAVE-XREF

// SELECT VBCPOX02
Function OB0GS-SEL-VBCPOX02()

  set SQLCA empty;
  set VBCPOX02 empty;

  VBCPOX02.OP1PARTN = OB3REC.OP1PARTN;
  VBCPOX02.OP1CUOID = OB3REC.OP1CUOID;
  VBCPOX02.OP1NORID = OB3REC.OP1NORID;
  VBCPOX02.OP2LNINB = OB3REC.OP2LNINB;

  if (KUCREC.CU-CUSKU-SZ-FL == "Y")
    if (OB0GW01.OB0GW-FIRST-TRY == "Y")
      VBCPOX02.SY5SZID = WCU1710.SY-SZ-ID[OB0GWSB5];
    else
      VBCPOX02.SY5SZID = 0;
    end
  else
    VBCPOX02.SY5SZID = 0;
  end

  call "VBCPOX02" ("S ", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0GW01.OB0GW-VBCPOX02-EXISTS-FL = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0GW01.OB0GW-VBCPOX02-EXISTS-FL = "N";
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
      TA1REC.TA1LOCAT[1] = "D       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0GS-DE"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "L-VBCPOX"; /* extra key*/
      if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
        OBWREC.OBWER911 = "Y"; /* show err*/
        XSOBS04(); /* no rollback, restart appl*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end


end // end OB0GS-SEL-VBCPOX02

// SELECT CUSTOMER
Function OB0GS-SEL-VCMPNY01()

     /* build KUCREC key - company*/
     /* read company table to get company's cu-cusku-sz-fl*/

  set KUCREC empty;
  set SQLCA empty;
  KUCREC.KUCCOID = OB1REC.KUCCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0GW01.CU-CUSKU-SZ-FL = KUCREC.CU-CUSKU-SZ-FL; /* save flag*/
  else
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0240  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS-SE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "L-VCMPNY"; /* statement group*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC(); /* abort routine - no reset*/
    end
  end

end // end OB0GS-SEL-VCMPNY01

// update case lot nbr
Function OB0GS-UPD-CASE-LOT()

  VOBXRF01.OP1PARTN = OB3REC.OP1PARTN; /* part char*/
  VOBXRF01.OP1CUOID = OB3REC.OP1CUOID; /* order number*/
  VOBXRF01.OP1NORID = OB3REC.OP1NORID; /* sub-order number*/
  VOBXRF01.OP2LNINB = OB3REC.OP2LNINB; /* line item nbr*/
  VOBXRF01.SY5SZID = 0; /* size (for now VOBXRF01 is at product*/
                                   /* level*/

  call "VOBXRF01" ("S ", SQLCA, VOBXRF01) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0)
    if (OB0GM001.OP-CASE-LOT-NBR == " " /* if companion record exists*/
     && VOBXRF01.OP-SMPL-RQT-ID == " "  /* and case lot is being changed*/
     && VOBXRF01.CU-BUY-SESN-ID == " "  /* to blank and other fields on*/
     && VOBXRF01.CU-COST-ID == " ")     /* companion record are blank*/
      OB0GS-DEL-VOBXRF01(); /* then delete this guy!!*/
    else
      OB0GS-UPD-VOBXRF01(); /* otherwise, update it...*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0GS-ADD-VOBXRF01();
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBXRF01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "VOBXRF01"; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0GS22 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB0GW01.OB0GWMS4; /* order number*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end

   /* *  do msr edit if caselot is changed 10/17/97*/

  OBW-EDIT-FUNCTION = "2";
  XSOBS-ONLINE-EDIT();

end // end OB0GS-UPD-CASE-LOT

// UPDATE VCUCPX01
Function OB0GS-UPD-CUSTXREF()

   /* if the VCUCPX01 doesn't exist, add it and delete*/
   /* the override. If VCUCPX01 exists, compare VCUCPX01( current WCU1710)*/
   /* & VBCPOX02 (saved in OB0GW01).*/

  OB0GS-CU1710-OPT2();

  if (OB0GW01.OB0GW-VCUCPX01-EXISTS-FL == "Y")
    OB0GS-COMPARE-XREF();
  else
    OB0GS-BUILD-VCUCPX();
    OB0GS-ADD-VCUCPX01();
    OB0GS-DEL-VBCPOX02();
  end

end // end OB0GS-UPD-CUSTXREF

// UPDATE OVERRIDE REC(S)
Function OB0GS-UPD-OVERRIDE()

  OB0GW01.OB0GWSB5 = 1;

  while (OB0GW01.OB0GWSB5 <= 24)
    if (WCU1710.SY-STY-NBR[OB0GWSB5] > " "
     || WCU1710.SY-SZ-ID[OB0GWSB5] > 0)
      OB0GW01.OB0GW-FIRST-TRY = "Y";
      OB0GS-SEL-VBCPOX02(); /* select existing override to get the data*/
      if (OB0GW01.OB0GW-VBCPOX02-EXISTS-FL == "Y")
        OB0GS-DEL-VBCPOX02(); /* for the new override, delete this one*/
      else /**/
        OB0GW01.OB0GW-FIRST-TRY = "N";
        OB0GS-SEL-VBCPOX02(); /* select 0 override to get the data*/
        if (OB0GW01.OB0GW-VBCPOX02-EXISTS-FL == "Y")
          OB0GW01.OB0GW-DEL-ZERO-OVRD = "Y"; /* set fl to del ovrd*/
        else /**/
          OB0GS-BUILD-VBCPOX(); /* move new key values to VBCPOX02 record*/
        end
      end
      OB0GS-ADD-VBCPOX02(); /* then add with new NIKE style or cust prod id*/
    end
    if (KUCREC.CU-CUSKU-SZ-FL == "Y")
      OB0GW01.OB0GWSB5 = OB0GW01.OB0GWSB5 + 1;
    else
      OB0GW01.OB0GWSB5 = OB0GW01.OB0GWSB5 + 24; /* only do once if customer*/
    end /* has xref at product level*/
  end

  if (OB0GW01.OB0GW-DEL-ZERO-OVRD == "Y")
    OB0GS-DEL-VBCPOX02(); /* now we can delete the zero size override*/
  end
end // end OB0GS-UPD-OVERRIDE

// update case lot nbr
Function OB0GS-UPD-VOBXRF01()

  VOBXRF01.OP-CASE-LOT-NBR = OB0GM001.OP-CASE-LOT-NBR;

      /* change date/time*/
  VOBXRF01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VOBXRF01.ZZZCHGTM = OBWREC.ZZZCHGTM;


  call "VOBXRF01" ("U ", SQLCA, VOBXRF01) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOBXRF01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VOBXRF01"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS22 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OB0GW01.OB0GWMS4; /* order number*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC(); /* abort routine - no reset*/
    end
  end




end // end OB0GS-UPD-VOBXRF01

// UPDATE PREPACK
Function OB0GS-UPDT-PREPACK()

   /* THIS STATEMENT GROUP UPDATES THE PREPACK RECORD IF*/
   /* IT EXISTS*/

  VBCSPR01.SY1STNBR = OB0GW01.SY1STNBR;
  VBCSPR01.SY2CLRID = OB0GW01.SY2CLRID;
  VBCSPR01.XDMCD = OB0GW01.XDMCD;
  VBCSPR01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VBCSPR01.ZZZCHGTM = OBWREC.ZZZCHGTM;

  call "VBCSPR01" ("U2", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;*/
  else
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "UPDATE  ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0GS-UPDT-PREPK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0GS-UPDT-PREPACK

// BUILD VCUCPX01 FOR INSERT
Function OB0GS-UPDTE-VBULK()

   /* *************TCS INCLUDE BEGIN****************/

   /* STATEMENT GROUP TO UPDATE BULK TABLE*/

  set SQLCA empty;
  set OBFREC empty;
  VBULKS02.KUMSTRID = OB1REC.KUMSTRID;
  VBULKS02.XNXCD = OB1REC.XNXCD;
  VBULKS02.XBDCD = OB1REC.XBDCD;
  VBULKS02.OP1CUPO = OB1REC.OP1CUPO;
  VBULKS02.XDVCD = OB1REC.XDVCD;
  VBULKS02.XGPCD = OB1REC.XGPCD;
  VBULKS02.XSOCD = OB1REC.XSOCD;
  VBULKS02.XWHCD = OB1REC.XWHCD;
  VBULKS02.OP1CUNDT = OB1REC.OP1CUNDT;
  VBULKS02.OP1DSADT = OB1REC.OP1DSADT;
  VBULKS02.SP1ID = OB1REC.SP1ID;
  VBULKS02.SM4REPID = OB1REC.SM4REPID;

  OBFREC.OBFTASK = "U";
  call "VBULKS02" (OBFREC, SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      XSOBP00();
    else
      TA1REC.TA1LOCAT[1] = "U ";
      TA1REC.TA1LOCAT[2] = "VBULKS02";
      TA1REC.TA1LOCAT[3] = "OB0GS-UPDTE-VBULK";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VBULKS02"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

   /* *******TCS INCLUDE END***********************/

end // end OB0GS-UPDTE-VBULK

// INITIALIZE OB0G APPLICATION
Function OB0GS01()
       /* ***************************************************/
       /* *  INITIALIZE OB0G APPLICATION.                  **/
       /* ***************************************************/

  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OBKREC empty;
  set OB1REC empty;
  set OB3REC empty;
  set OB8REC empty;
  set OBFEREC empty;
  set OBLEREC empty;
  set OBSFREC empty;
  set OBSOREC empty;
  set OBSSREC empty;
  set PC2REC empty;
  set PWRREC empty;
  set SP1REC empty;
  set SYCREC empty;
  set TAEREC empty;
  set TA1REC empty;
  set TA5REC empty;
  set XOWREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;

  set OB0GM001 empty;
  set OB0GW01 empty;

  XX0XS01();
  OBWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OBWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  TA1REC.TA1MAP = "OB0GM001"; /* map name*/


end // end OB0GS01

// BUILD OB0G MAP
Function OB0GS02()
       /* ****************************************************/
       /* *  BUILD OB0G MAP.                                **/
       /* ****************************************************/

  OB0GS03(); /* select database records*/

  OB0GS04(); /* move fields to map*/

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    OB0GS20(); /* reset field attributes autoskip*/
  else
    OB0GS05(); /* reset field attributes defined*/
  end


end // end OB0GS02

// SELECT DATABASE RECORDS
Function OB0GS03()
       /* **************************************************/
       /* *    SELECT ITEM /SIZE RECORD                   **/
       /* **************************************************/
  set OB3REC empty;
  set OBSFREC empty;
  set SQLCA empty;


  OB3REC.OP1PARTN = OB1REC.OP1PARTN; /* op-ord-part-char*/
  OB3REC.OP1CUOID = OB1REC.OP1CUOID; /* op-cust-ord-id*/
  OB3REC.OP1NORID = OB1REC.OP1NORID; /* op-nike-ord-id*/
  OB3REC.OP2LNINB = OBWREC.OBWLNINB; /* op-line-item-nbr*/


  OBSFREC.OBSF-TASK = "S ";
  OBSFREC.OBSF-CALLER-LOC-1 = "S       ";
  OBSFREC.OBSF-CALLER-LOC-2 = "OB1690  ";
  OBSFREC.OBSF-CALLER-LOC-3 = "OB0GS03 ";
  OBSFREC.OBSF-CALLING-APPL = "OB0G";
  OBSFREC.OB3GROUP = OB3REC.OB3GROUP;
  OBSFREC.OBSF-RETURN-CD = 99;

  call "OB1690" (OBSFREC) {isNoRefresh = yes, isExternal = yes};

  OB3REC.OB3GROUP = OBSFREC.OB3GROUP;

  if (OBSFREC.OBSF-RETURN-CD == 0 /* good return*/
   || OBSFREC.OBSF-RETURN-CD == 11) /* or no sizes*/
    OB0GS06(); /* select product info*/
  else
    if (OBSFREC.OBSF-RETURN-CD == 1) /* not found*/
      if (OBWREC.CAMSG == " ")
        OBWREC.CAMSG = "PRODUCT NO LONGER ON ORDER";
      end
      COMMAREA.CAUSERA = OBWREC.OBWGROUP;
      XSOBP09(); /* transfer to product summary*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "OB1690  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0GS09 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OBSFREC.OBSF-RETURN-CD; /* return code*/
      TA1REC.TA1TBLKE = OBSFREC.OBSF-DIAG-KEY; /* table key*/

      if (OBSFREC.OBSF-RETURN-CD == 14 /* -911 on item*/
       || OBSFREC.OBSF-RETURN-CD == 15) /* -911 on size*/
        XSOBS04(); /* 911 - no rollback*/
      else
        XSOBEDC(); /* retn - no rollback*/
      end
    end
  end



end // end OB0GS03

// MOVE FIELDS TO MAP
Function OB0GS04()

       /* ****************************************************/
       /* *  MOVE ITEM RECORD INFORMATION TO MAP.           **/
       /* ****************************************************/

  OB0GM001.OB0GMPRC = "OB0G010"; /* process name*/
  OB0GM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

  OB0GM001.OBWORDER = OBWREC.OBWORDER; /* formatted order number*/
  OB0GM001.OBWCUST = OBWREC.OBWCUST; /* formatted customer number*/
  OB0GM001.OP1CUPO = OBWREC.OP1CUPO; /* purchase order number*/
  OB0GM001.KUMSTRNM = OBWREC.KUMSTRNM; /* customer store name*/

  OB0GM001.XGPCD = OB3REC.XGPCD;


  OB0GW01.SY1STNBR = OB3REC.SY1STNBR; /* product number*/
  OB0GW01.OB0GWPR1 = "-";
  OB0GW01.SY2CLRID = OB3REC.SY2CLRID; /* color id*/
  OB0GW01.OB0GWPR2 = "-";
  OB0GW01.XDMCD = OB3REC.XDMCD; /* dimension cd*/

  if (OB3REC.SY1STNBR == " ")
    OB0GM001.OB0GMPRD = " "; /* formatted product id*/
  else
    OB0GM001.OB0GMPRD = OB0GW01.OB0GMPRD; /* formatted product id*/
  end


  if (OB3REC.SY1STNBR == " ") /* nike style not translated*/
    OB0GM001.OB0GWPDS = "UNKNOWN PRODUCT";
  else
    OB0GM001.OB0GWPDS = OB0GW01.OB0GWPDS; /* STYLE DESCRIPTION*/
  end

  OB0GM001.OP2TONOQ = OB3REC.OP2TONOQ; /* totl on order qty*/


  OB0GS-CU1710-OPT1(); /* GET CUST PROD XREF INFO*/

  OB0GM001.OB0GM-XREF-OVRD-LIT = "XREF OVRD: "; /* xref literal*/

  OB0GM001.OP2AUPRC = OB3REC.OP2AUPRC; /* avg unit price*/

   /* CANADA 07/27/95*/

  OB0GM001.ZFC-CRCY-CD = OB1REC.ZFC-CRCY-CD; /* CANA currency code*/

  OBWREC.OBWDT8 = OB1REC.OP1CUNDT; /* format cust need dt*/
  XSOBDCM();
  OB0GM001.OB0GMNDT = OBWREC.OBWDT6;

  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB1REC.XWHCD in XWHTBL.XWHCD)
    OB0GM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex]; /* warehouse abrev.*/
  else
    OB0GM001.XWHABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB1REC.XDSCD in XDSTBL.XDSCD)
    OB0GM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex]; /* direct ship abrev.*/
  else
    OB0GM001.XDSABRV = "UNKNWN";
  end

   /* system order type*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB1REC.XOTCD in XOTTBL.XOTCD)
    OB0GM001.XOTABRV = XOTTBL.XOTABRV[sysVar.arrayIndex]; /* system order type.*/
  else
    OB0GM001.XOTABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB1REC.XOCCD in XOCTBL.XOCCD)
    OB0GM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex]; /* order class abrev.*/
  else
    OB0GM001.XOCABRV = " ";
  end

  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB3REC.XUMCD in XUMTBL.XUMCD)
    OB0GM001.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
                                   /* unit of measure desc*/
  else
    OB0GM001.XUMDESC = "UNKNWN";
  end

  OB0GM001.XOWCD = OB3REC.XOWCD; /* owner group code*/
   /* move owner group abreviated description to map*/
  sysVar.arrayIndex = 1; /* initialize index*/
  XOWREC.XWHCD = OB1REC.XWHCD;
  XOWREC.XOWCD = OB3REC.XOWCD;
  if (XOWREC.XOWKEY in XOWTBL.XOWKEY)
    OB0GM001.XOWABRV = XOWTBL.XOWABRV[sysVar.arrayIndex];
  else
    if (OB3REC.XOWCD == "00")
      OB0GM001.XOWABRV = " ";
    else
      OB0GM001.XOWABRV = "UNKNWN";
    end
  end

  OB0GM001.PC2INSEG = OB3REC.PC2INSEG; /* cust invty seg cd*/

  OB0GM001.XPGCD = OB3REC.XPGCD; /* package type code*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB3REC.XPGCD in XPGTBL.XPGCD)
    OB0GM001.XPGABRV = XPGTBL.XPGABRV[sysVar.arrayIndex];
                                   /* package type abrev.*/
  else
    OB0GM001.XPGABRV = "UNKNWN";
  end

  OB0GM001.OP1BOFL = OB3REC.OP1BOFL; /* back order flag*/

   /* get booking sesn code and year:*/
  OB0GM001.XBK-BK-SESN-CD = OB3REC.XBK-BK-SESN-CD;
  if (OB3REC.XBK-BK-SESN-CD != " ")
    OB0GW01.OB0GW-OP-BK-CCYY = OB3REC.OP-BK-YR;
    OB0GM001.OB0GM-OP-BK-YY = OB0GW01.OB0GW-OP-BK-YY;
    if (OB3REC.OP-BK-MO != 0)
      OB0GW01.OB0GW-OP-BK-00MM = OB3REC.OP-BK-MO;
      OB0GM001.OB0GM-OP-BK-MM = OB0GW01.OB0GW-OP-BK-MM;
    end
  end

  OB0GM001.SP1ID = OB1REC.SP1ID; /* sales prgm*/

  OB0GM001.OP2CGPCD = OB3REC.OP2CGPCD; /* coordinate grp cd*/

  OB0GM001.XEGCD = OB3REC.XEGCD; /* eng difference code*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB3REC.XEGCD in XEGTBL.XEGCD)
    OB0GM001.XEGABRV = XEGTBL.XEGABRV[sysVar.arrayIndex]; /* eng diff abrev.*/
  else
    OB0GM001.XEGABRV = "UNKNWN";
  end

  OB0GM001.XLCCD = OB0GW01.XLCCD; /* lifecycle code*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB0GW01.XLCCD in XLCTBL.XLCCD)
    OB0GM001.XLCABRV = XLCTBL.XLCABRV[sysVar.arrayIndex]; /* life cycle abrv*/
  else
    OB0GM001.XLCABRV = "UNKNWN";
  end

  OB0GM001.XQACD = OB3REC.XQACD; /* quality code*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB3REC.XQACD in XQATBL.XQACD)
    OB0GM001.XQAABRV = XQATBL.XQAABRV[sysVar.arrayIndex];
                                   /* quality code abrev.*/
  else
    OB0GM001.XQAABRV = "UNKNWN";
  end

  OB0GM001.XPRCD = OB0GW01.XPRCD; /* product type code*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB0GW01.XPRCD in XPRTBL.XPRCD)
    OB0GM001.XPRABRV = XPRTBL.XPRABRV[sysVar.arrayIndex];
                                   /* product type abrev.*/
  else
    OB0GM001.XPRABRV = "UNKNWN";
  end

  OB0GM001.XPCCD = OB0GW01.XPCCD; /* product category code*/
  sysVar.arrayIndex = 1; /* initialize index*/
  if (OB0GW01.XPCCD in XPCTBL.XPCCD)
    OB0GM001.XPCABRV = XPCTBL.XPCABRV[sysVar.arrayIndex];
                                   /* product category abrev*/
  else
    OB0GM001.XPCABRV = "UNKNWN";
  end

  OB0GM001.XHDCD[1] = OB3REC.XHDCD[1]; /* handling code 1*/
  OB0GM001.XHDCD[2] = OB3REC.XHDCD[2]; /* handling code 2*/
  OB0GM001.XHDCD[3] = OB3REC.XHDCD[3]; /* handling code 3*/
  OB0GM001.XHDCD[4] = OB3REC.XHDCD[4]; /* handling code 4*/
  OB0GM001.XHDCD[5] = OB3REC.XHDCD[5]; /* handling code 5*/

  if (OB3REC.XHDCD[1] > " ")
    sysVar.arrayIndex = 1; /* initialize index*/
    OB0GW01.XHDCD = OB3REC.XHDCD[1];
    OB0GW01.XGPCD = OB3REC.XGPCD;
    if (OB0GW01.XHDKEY in XHDTBL.XHDKEY)
      OB0GM001.XHDABRV[1] = XHDTBL.XHDABRV[sysVar.arrayIndex]; /* hdlg cd abrv1*/
    else
      OB0GM001.XHDABRV[1] = "UNKNWN";
    end
  end

  if (OB3REC.XHDCD[2] > " ")
    sysVar.arrayIndex = 1; /* initialize index*/
    OB0GW01.XHDCD = OB3REC.XHDCD[2];
    OB0GW01.XGPCD = OB3REC.XGPCD;
    if (OB0GW01.XHDKEY in XHDTBL.XHDKEY)
      OB0GM001.XHDABRV[2] = XHDTBL.XHDABRV[sysVar.arrayIndex]; /* hdlg cd abrv2*/
    else
      OB0GM001.XHDABRV[2] = "UNKNWN";
    end
  end

  if (OB3REC.XHDCD[3] > " ")
    sysVar.arrayIndex = 1; /* initialize index*/
    OB0GW01.XHDCD = OB3REC.XHDCD[3];
    OB0GW01.XGPCD = OB3REC.XGPCD;
    if (OB0GW01.XHDKEY in XHDTBL.XHDKEY)
      OB0GM001.XHDABRV[3] = XHDTBL.XHDABRV[sysVar.arrayIndex]; /* hdlg cd abrv3*/
    else
      OB0GM001.XHDABRV[3] = "UNKNWN";
    end
  end

  if (OB3REC.XHDCD[4] > " ")
    sysVar.arrayIndex = 1; /* initialize index*/
    OB0GW01.XHDCD = OB3REC.XHDCD[4];
    OB0GW01.XGPCD = OB3REC.XGPCD;
    if (OB0GW01.XHDKEY in XHDTBL.XHDKEY)
      OB0GM001.XHDABRV[4] = XHDTBL.XHDABRV[sysVar.arrayIndex]; /* hdlg cd abrv4*/
    else
      OB0GM001.XHDABRV[4] = "UNKNWN";
    end
  end

  if (OB3REC.XHDCD[5] > " ")
    sysVar.arrayIndex = 1; /* initialize index*/
    OB0GW01.XHDCD = OB3REC.XHDCD[5];
    OB0GW01.XGPCD = OB3REC.XGPCD;
    if (OB0GW01.XHDKEY in XHDTBL.XHDKEY)
      OB0GM001.XHDABRV[5] = XHDTBL.XHDABRV[sysVar.arrayIndex]; /* hdlg cd abrv5*/
    else
      OB0GM001.XHDABRV[5] = "UNKNWN";
    end
  end

  OB0GM001.XHDCHG[1] = OB3REC.XHDCHG[1]; /* handling charge 1*/
  OB0GM001.XHDCHG[2] = OB3REC.XHDCHG[2]; /* handling charge 2*/
  OB0GM001.XHDCHG[3] = OB3REC.XHDCHG[3]; /* handling charge 3*/
  OB0GM001.XHDCHG[4] = OB3REC.XHDCHG[4]; /* handling charge 4*/
  OB0GM001.XHDCHG[5] = OB3REC.XHDCHG[5]; /* handling charge 5*/

  if (OB3REC.OP2HCHGO[1] == "Y")
    OB0GM001.OP2HCHGO[1] = "*"; /* hndlng chg ovrd 1*/
  end
  if (OB3REC.OP2HCHGO[2] == "Y")
    OB0GM001.OP2HCHGO[2] = "*"; /* hndlng chg ovrd 2*/
  end
  if (OB3REC.OP2HCHGO[3] == "Y")
    OB0GM001.OP2HCHGO[3] = "*"; /* hndlng chg ovrd 3*/
  end
  if (OB3REC.OP2HCHGO[4] == "Y")
    OB0GM001.OP2HCHGO[4] = "*"; /* hndlng chg ovrd 4*/
  end
  if (OB3REC.OP2HCHGO[5] == "Y")
    OB0GM001.OP2HCHGO[5] = "*"; /* hndlng chg ovrd 5*/
  end

  OB0GM001.PWRLBCD[1] = OB3REC.PWRLBCD[1]; /* cust label code 1*/
  if (OB0GM001.PWRLBCD[1] != " ") /* label code exists*/
      /* get label code abbreviation*/
    set PWRREC empty;
    set SQLCA empty;
    PWRREC.PWRLBCD = OB0GM001.PWRLBCD[1]; /* setup key*/

    call "IO5750" ("S ", SQLCA, PWRREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0) /* label code found*/
      OB0GM001.PWRLBABR[1] = PWRREC.PWRLBABR; /* move abrv*/
    else
      OB0GM001.PWRLBABR[1] = "UNKNWN";
    end
  else
    OB0GM001.PWRLBABR[1] = "      "; /* cust label code abrv*/
  end

  OB0GM001.PWRLBCD[2] = OB3REC.PWRLBCD[2]; /* cust label code 2*/
  if (OB0GM001.PWRLBCD[2] != " ") /* label code exists*/
      /* get label code abbreviation*/
    set PWRREC empty;
    set SQLCA empty;
    PWRREC.PWRLBCD = OB0GM001.PWRLBCD[2]; /* setup key*/

    call "IO5750" ("S ", SQLCA, PWRREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0) /* label code found*/
      OB0GM001.PWRLBABR[2] = PWRREC.PWRLBABR; /* move abrv*/
    else
      OB0GM001.PWRLBABR[2] = "UNKNWN";
    end
  else
    OB0GM001.PWRLBABR[2] = "      "; /* cust label code abrv*/
  end
end // end OB0GS04

// RESET ALL MAP FIELD ATTR DEFND
Function OB0GS05()
       /* **************************************************/
       /* *  RESET ALL FIELD ATTRIBUTES DEFINED ON MAP.   **/
       /* **************************************************/

  set OB0GM001.OBWORDER initialAttributes;
  set OB0GM001.OBWCUST initialAttributes;
  set OB0GM001.OP1CUPO initialAttributes;
  set OB0GM001.KUMSTRNM initialAttributes;



  set OB0GM001.OB0GMPRD initialAttributes;
  set OB0GM001.XGPCD initialAttributes;


  set OB0GM001.OB0GWPDS initialAttributes;
  set OB0GM001.OP2TONOQ initialAttributes;

  if (OB0GM001.CU-CUST-PROD-ID == " ")
    set OB0GM001.OB0GM-XREF-OVRD-LIT invisible;
    set OB0GM001.WCU1710-CU-OVRD-EXISTS-FL invisible;
  else
    set OB0GM001.OB0GM-XREF-OVRD-LIT initialAttributes;
    set OB0GM001.WCU1710-CU-OVRD-EXISTS-FL initialAttributes;
  end

  set OB0GM001.OP2AUPRC initialAttributes;

  set OB0GM001.OB0GMNDT initialAttributes;
  set OB0GM001.XWHABRV initialAttributes;
  set OB0GM001.XDSABRV initialAttributes;
  set OB0GM001.XOTABRV initialAttributes;
  set OB0GM001.XOCABRV initialAttributes;
  set OB0GM001.XUMDESC initialAttributes;

   /* SET OB0GM001.XOWCD DEFINED;*/
  set OB0GM001.XOWABRV initialAttributes;
  set OB0GM001.PC2INSEG initialAttributes;
  set OB0GM001.PC2SEGAB initialAttributes;
  set OB0GM001.XPGCD initialAttributes;
  set OB0GM001.XPGABRV initialAttributes;
  set OB0GM001.OP1BOFL initialAttributes;

   /* only international may change booking season for a product:*/
  if (OB1REC.YOCCD == "05")
    set OB0GM001.XBK-BK-SESN-CD initialAttributes;
    set OB0GM001.OB0GM-OP-BK-YY initialAttributes;
    set OB0GM001.OB0GM-OP-BK-MM initialAttributes;
  else
    set OB0GM001.XBK-BK-SESN-CD skip;
    set OB0GM001.OB0GM-OP-BK-YY skip;
    set OB0GM001.OB0GM-OP-BK-MM skip;
  end

  set OB0GM001.SP1ID initialAttributes;

  set OB0GM001.OP2CGPCD initialAttributes;
  set OB0GM001.XEGCD initialAttributes;
  set OB0GM001.XEGABRV initialAttributes;
  set OB0GM001.XLCCD initialAttributes;
  set OB0GM001.XLCABRV initialAttributes;
  set OB0GM001.XQACD initialAttributes;
  set OB0GM001.XQAABRV initialAttributes;
  set OB0GM001.XPRCD initialAttributes;
  set OB0GM001.XPRABRV initialAttributes;
  set OB0GM001.XPCCD initialAttributes;
  set OB0GM001.XPCABRV initialAttributes;

  set OB0GM001.XHDCD[1] initialAttributes;
  set OB0GM001.XHDABRV[1] initialAttributes;
  set OB0GM001.XHDCHG[1] initialAttributes;
  set OB0GM001.OP2HCHGO[1] initialAttributes;
  set OB0GM001.XHDCD[2] initialAttributes;
  set OB0GM001.XHDABRV[2] initialAttributes;
  set OB0GM001.XHDCHG[2] initialAttributes;
  set OB0GM001.OP2HCHGO[2] initialAttributes;
  set OB0GM001.XHDCD[3] initialAttributes;
  set OB0GM001.XHDABRV[3] initialAttributes;
  set OB0GM001.XHDCHG[3] initialAttributes;
  set OB0GM001.OP2HCHGO[3] initialAttributes;
  set OB0GM001.XHDCD[4] initialAttributes;
  set OB0GM001.XHDABRV[4] initialAttributes;
  set OB0GM001.XHDCHG[4] initialAttributes;
  set OB0GM001.OP2HCHGO[4] initialAttributes;
  set OB0GM001.XHDCD[5] initialAttributes;
  set OB0GM001.XHDABRV[5] initialAttributes;
  set OB0GM001.XHDCHG[5] initialAttributes;
  set OB0GM001.OP2HCHGO[5] initialAttributes;
  set OB0GM001.PWRLBCD[1] initialAttributes;
  set OB0GM001.PWRLBCD[2] initialAttributes;
  set OB0GM001.PWRLBABR[1] initialAttributes;
  set OB0GM001.PWRLBABR[2] initialAttributes;

end // end OB0GS05

// get product file info
Function OB0GS06()

  SYCREC.XGPCD = OB3REC.XGPCD; /* gpc code*/
  SYCREC.SY1STNBR = OB3REC.SY1STNBR; /* style number*/
  SYCREC.SY2CLRID = OB3REC.SY2CLRID; /* color id*/
  SYCREC.XDMCD = OB3REC.XDMCD; /* dimension cd*/

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};

  OB0GW01.XLCCD = 0; /* initialize life cycle code*/
  OB0GW01.XPRCD = 0; /* initialize product type cd*/
  OB0GW01.XPCCD = 0; /* initialize product category cd*/

  if (SQLCA.VAGen_SQLCODE == 0)

    /* CANADA 07/27/95*/
    /* Added call to SY2000 for all apparel orders - gpc 03 - 3/22/99*/

    if (OB1REC.XDZ-DATA-DIST-CD == "CA" /* This is a Canadian order*/
     || SYCREC.XGPCD == "03")           /* This is a apparel order*/

      /* format ta1rec in case of bad return code from call to SY2000*/

      TA1REC.TA1PGMNM = "OB0G"; /* program name*/
      TA1REC.TA1LOC = "OB0GS06"; /* statement group name*/
      TA1REC.TA1MAP = "OB0GM001"; /* map name*/

      XSOB-CALL-SY2000(); /* call SY2000 to get*/
                                   /* product/region record*/

      if (WSY2000.WSY2000-RETURN-CODE == 0) /* row found*/
        OB0GS-LIFECYCLE(); /* get active lifecycle code*/
        OB0GW01.XPRCD = SYCREC.XPRCD; /* get product type*/
        OB0GW01.XPCCD = SYCREC.XPCCD; /* get product category*/
        OB0GW01.OB0GWSSN = SYCREC.SY1SSTNM; /* short style number*/
        OB0GW01.OB0GWSPC = " ";
        OB0GW01.OB0GWSCA = SYCREC.SY2CLRAB; /* style color abbrev*/
        OB0GM001.OB0GWPDS = OB0GW01.OB0GWPDS;
                                   /* formatted prod descrpt*/
      else
        OB0GM001.OB0GWPDS = "INVALID PRODUCT FOR REGION";
      end
    else
      OB0GS-LIFECYCLE(); /* get active lifecycle code*/
      OB0GW01.XPRCD = SYCREC.XPRCD; /* get product type*/
      OB0GW01.XPCCD = SYCREC.XPCCD; /* get product category*/
      OB0GW01.OB0GWSSN = SYCREC.SY1SSTNM; /* short style number*/
      OB0GW01.OB0GWSPC = " ";
      OB0GW01.OB0GWSCA = SYCREC.SY2CLRAB; /* style color abbrev*/
      OB0GM001.OB0GWPDS = OB0GW01.OB0GWPDS; /* formatted prod descrpt*/
    end
  else
    OB0GM001.OB0GWPDS = "UNKNOWN PRODUCT";
    OB0GW01.OB0GW-SPCL-MK-FL = "Y"; /* set flag for special make-up*/
  end /* or invalid product*/




end // end OB0GS06

// EDIT MAP FIELDS
Function OB0GS07()
       /* **************************************************/
       /* *  EDIT MAP FIELDS.                             **/
       /* **************************************************/


    /* EDIT CUSTOMER LABEL CODES*/
  OB0GS19();

    /* EDIT HANDLING CODES (1-5) AND HANDLING CHARGES (1-5)*/
  OB0GS08();

    /* EDIT SALES PROGRAM*/
  OB0GS-ED-SALES-PGM();

    /* EDIT quality code*/
  OB0GS-ED-QUALITY();

    /* EDIT BACK ORDER FLAG*/
  OB0GS12();

    /* EDIT PACKAGE TYPE CODE*/
  OB0GS10();

    /* EDIT ENGINEERING DIFFERENCE CODE*/
  OB0GS18();

    /* EDIT CUSTOMER INVENTORY SEG CODE*/
  OB0GS11();

    /* EDIT owner group*/
  OB0GS-ED-OWNER-GRP();

    /* EDIT nike product*/
  OB0GS-ED-NIKE-PRD();



end // end OB0GS07

// EDIT HANDLING CODE
Function OB0GS08()
       /* **************************************************/
       /* *  EDIT HANDLING CODES (1-5) & CHARGES (1-5)    **/
       /* **************************************************/

  OB0GW01.OB0GWSB1 = 5; /* set subscript to 5*/
  while (OB0GW01.OB0GWSB1 > 0) /* while subscript not 0*/

    if (OB0GM001.XHDCD[OB0GWSB1] > " ") /* if handling code entered*/

      if (OB0GM001.XHDCD[OB0GWSB1] == OB3REC.XHDCD[OB0GWSB1])
        if (OB0GM001.XHDCHG[OB0GWSB1] == OB3REC.XHDCHG[OB0GWSB1])

        else
          OB3REC.OP2HCHGO[OB0GWSB1] = "Y";
        end
      else
        sysVar.arrayIndex = 1;
        OB0GW01.XHDCD = OB0GM001.XHDCD[OB0GWSB1];
        OB0GW01.XGPCD = OB3REC.XGPCD;
        if (OB0GW01.XHDKEY in XHDTBL.XHDKEY /* search xhdtbl*/
         && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* verify status*/
          OB0GM001.XHDABRV[OB0GWSB1] = XHDTBL.XHDABRV[sysVar.arrayIndex];
          if (OB0GM001.XHDCHG[OB0GWSB1] == 0) /* ;  amount not entered*/
            OB0GM001.XHDCHG[OB0GWSB1] = XHDTBL.XHDCHG[sysVar.arrayIndex];
          end
        else
          converseLib.validationFailed(3); /* handling code is invalid or inactive*/
          OBWREC.OBWERRFL = "Y"; /* set error flag*/
          set OB0GM001.XHDCD[OB0GWSB1] cursor, bold;
          OB0GM001.XHDABRV[OB0GWSB1] = "UNKNWN";
        end
      end


    else
      OB0GM001.XHDABRV[OB0GWSB1] = " ";
    end

    if (OB0GM001.XHDCD[OB0GWSB1] == " " /* if hndlg code not entered*/
     && OB0GM001.XHDCHG[OB0GWSB1] > 0)  /* and charge is entered*/
      converseLib.validationFailed(3); /* handling code is invalid or inactive*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0GM001.XHDCD[OB0GWSB1] cursor, bold;
    end

    OB0GW01.OB0GWSB1 = OB0GW01.OB0GWSB1 - 1; /* decrement subscript by 1*/
  end


end // end OB0GS08

// EDIT PACKAGE TYPE CODE
Function OB0GS10()
       /* **************************************************/
       /* *  EDIT PACKAGE TYPE CODE                       **/
       /* **************************************************/

  if (OB0GM001.XPGCD == " ") /* if package type code not entered*/
    OB0GM001.XPGCD = "00";
  end

  sysVar.arrayIndex = 1;
  if (OB0GM001.XPGCD in XPGTBL.XPGCD /* search xpgtbl*/
   && XPGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* verify status*/
    OB0GM001.XPGABRV = XPGTBL.XPGABRV[sysVar.arrayIndex];
  else
    converseLib.validationFailed(6); /* package type invalid or inactive*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0GM001.XPGCD cursor, bold;
    OB0GM001.XPGABRV = "UNKNWN";
  end


end // end OB0GS10

// EDIT CUST INVENTORY SEG
Function OB0GS11()
       /* **************************************************/
       /* *  EDIT CUSTOMER INVENTORY SEG CODE             **/
       /* **************************************************/

  if (OB0GM001.PC2INSEG == " ") /* cust inventory seg not entered*/
    OB0GM001.PC2INSEG = "000";
  end

  OB0GS17(); /* read inventory segment*/
  if (PC2REC.PC2SEGAB == "UNKNWN")
    converseLib.validationFailed(7); /* inventory segment code invalid*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0GM001.PC2INSEG cursor, bold;
    OB0GM001.PC2SEGAB = "UNKNWN";
  else
    OB0GM001.PC2SEGAB = PC2REC.PC2SEGAB; /* segment abrv.*/
  end


end // end OB0GS11

// EDIT BACK ORDER FLAG
Function OB0GS12()
       /* **************************************************/
       /* *  EDIT BACK ORDER FLAG                         **/
       /* **************************************************/

  if (OB0GM001.OP1BOFL == "Y" /* if back order flag is 'y'*/
   || OB0GM001.OP1BOFL == "N") /* if back order flag is 'n'*/
      /* continue*/
  else
    converseLib.validationFailed(8); /* back order flag must be 'y' or 'n'*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0GM001.OP1BOFL cursor, bold;
  end


end // end OB0GS12

// UPDATE ROUTINE
Function OB0GS13()
       /* **************************************************/
       /* *    UPDATE ROUTINE                             **/
       /* **************************************************/

    /* MOVE MAP TO RECORD*/

  OB0GS14();

    /* UPDATE ITEM RECORD*/

  if (OB0GW01.OB0GWCHG == "Y") /* update only if any field changed*/
    OB0GS15(); /* update item*/
    OB0GS21(); /* update header*/
    if (OB0GW01.OB0GW-VALID-PROD-FL == "Y") /* updt prepk if prod is valid*/
      OB0GS-CHK-PREPACK(); /* check prepack*/
    end
    if (OB0GW01.OB0GW-WCU1710-EXISTS-FL == "Y" /* only update case lot nbr*/
     || OB0GM001.WCU1710-CU-OVRD-EXISTS-FL == "Y") /* if cust has cust xref*/
      if (OB0GW01.OB0GW-CASE-LOT-CHG == "Y") /* and case lot has chged*/
        OB0GS-UPD-CASE-LOT();
      end
    end
    if (OB0GW01.OB0GWUPD == "Y") /* need to split*/
      OB0GS16(); /* split item to a new order*/
    end
  else /* if nothing else changed,*/
    if (OB0GW01.OB0GW-WCU1710-EXISTS-FL == "Y" /* update case lot nbr*/
     || OB0GM001.WCU1710-CU-OVRD-EXISTS-FL == "Y") /* if cust has cust xref*/
      if (OB0GW01.OB0GW-CASE-LOT-CHG == "Y") /* and case lot has chged*/
        OB0GS-UPD-CASE-LOT();
      end
    end
  end


end // end OB0GS13

// MOVE MAP TO RECORD
Function OB0GS14()

  OB0GW01.OB0GWUPD = "N"; /* initialize item needs to split flag*/
  OB0GW01.OB0GWCHG = "N"; /* initialize item record updt flag*/

      /* move label codes to map*/
  if (OB0GM001.PWRLBCD[1] != OB3REC.PWRLBCD[1])
    OB3REC.PWRLBCD[1] = OB0GM001.PWRLBCD[1];
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

  if (OB0GM001.PWRLBCD[2] != OB3REC.PWRLBCD[2])
    OB3REC.PWRLBCD[2] = OB0GM001.PWRLBCD[2];
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* handling code (1-5) & handling charge (1-5) - compressed*/

  OB0GW01.OB0GWSB1 = 1; /* set line subscript TO 1*/
  OB0GW01.OB0GWSB2 = 1; /* set record subscript TO 1*/
  while (OB0GW01.OB0GWSB1 < 6)
    if (OB0GM001.XHDCD[OB0GWSB1] > " ")
      if (OB0GM001.XHDCD[OB0GWSB1] != OB3REC.XHDCD[OB0GWSB2]
       || OB0GM001.XHDCHG[OB0GWSB1] != OB3REC.XHDCHG[OB0GWSB2])
        OB3REC.OP2HCHGO[OB0GWSB2] = "Y";
        OB3REC.XHDCD[OB0GWSB2] = OB0GM001.XHDCD[OB0GWSB1];
        OB3REC.XHDCHG[OB0GWSB2] = OB0GM001.XHDCHG[OB0GWSB1];
        OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
        OBWREC.OBW-EDIT-FUNCTION = "5";
      end
      OB0GW01.OB0GWSB2 = OB0GW01.OB0GWSB2 + 1; /* increment record sub*/
    end
    OB0GW01.OB0GWSB1 = OB0GW01.OB0GWSB1 + 1; /* increment line subscript*/
  end

  while (OB0GW01.OB0GWSB2 < 6) /* if any hndlg flds in OB2 not*/
                                   /* processed*/
    if (OB3REC.XHDCD[OB0GWSB2] == " ") /* if hndlg flds don't need clearing*/
      if (OB3REC.OP2HCHGO[OB0GWSB2] == "Y")
        OB3REC.OP2HCHGO[OB0GWSB2] = "N";
        OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
        OBWREC.OBW-EDIT-FUNCTION = "5";
      end
    else
      OB3REC.OP2HCHGO[OB0GWSB2] = "N"; /* clear remaining flds*/
      OB3REC.XHDCD[OB0GWSB2] = " ";
      OB3REC.XHDCHG[OB0GWSB2] = 0;
      OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
      OBWREC.OBW-EDIT-FUNCTION = "5";
    end
    OB0GW01.OB0GWSB2 = OB0GW01.OB0GWSB2 + 1; /* increment record sub*/
  end

      /* owner group code*/
  if (OB0GM001.XOWCD != OB3REC.XOWCD)
    OB3REC.XOWCD = OB0GM001.XOWCD;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* customer inventory seg code*/
  if (OB0GM001.PC2INSEG != OB3REC.PC2INSEG)
    OB3REC.PC2INSEG = OB0GM001.PC2INSEG;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* package type code*/
  if (OB0GM001.XPGCD != OB3REC.XPGCD)
    OB3REC.XPGCD = OB0GM001.XPGCD;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* back order flag*/
  if (OB0GM001.OP1BOFL != OB3REC.OP1BOFL)
    OB3REC.OP1BOFL = OB0GM001.OP1BOFL;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* booking season code*/
  if (OB0GM001.XBK-BK-SESN-CD != OB3REC.XBK-BK-SESN-CD)
    OB3REC.XBK-BK-SESN-CD = OB0GM001.XBK-BK-SESN-CD;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

       /* booking season year*/
       /* format the booking year for comparison:*/
  OB0GW01.OB0GW-OP-BK-YY = OB0GM001.OB0GM-OP-BK-YY;
  if (OB0GW01.OB0GW-OP-BK-YY > 90)
    OB0GW01.OB0GW-OP-BK-CC = 19;
  else
    OB0GW01.OB0GW-OP-BK-CC = 20;
  end
       /* compare:*/
  if (OB0GW01.OB0GW-OP-BK-CCYY != OB3REC.OP-BK-YR)
    OB3REC.OP-BK-YR = OB0GW01.OB0GW-OP-BK-CCYY;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

       /* booking season month*/
      /* format the booking month for comparison:*/
  OB0GW01.OB0GW-OP-BK-MM = OB0GM001.OB0GM-OP-BK-MM;
      /* compare:*/
  if (OB0GW01.OB0GW-OP-BK-00MM != OB3REC.OP-BK-MO)
    OB3REC.OP-BK-MO = OB0GW01.OB0GW-OP-BK-00MM;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end


      /* coordinate group code*/
  if (OB0GM001.OP2CGPCD != OB3REC.OP2CGPCD)
    OB3REC.OP2CGPCD = OB0GM001.OP2CGPCD;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* engineering difference code*/
  if (OB0GM001.XEGCD != OB3REC.XEGCD)
    OB3REC.XEGCD = OB0GM001.XEGCD;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* quality code*/
  if (OB0GM001.XQACD != OB3REC.XQACD)
    OB3REC.XQACD = OB0GM001.XQACD;
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "5";
  end

      /* case lot number*/
  if (OB0GM001.OP-CASE-LOT-NBR != OB0GW01.OB0GW-ORIG-CASE-LOT-NBR)
    OB0GW01.OB0GW-CASE-LOT-CHG = "Y"; /* set case lot updt flag on*/
  end

   /* unformat the product*/

  OB0GW01.OB0GMPRD = OB0GM001.OB0GMPRD;
  SYCREC.SY1STNBR = OB0GW01.SY1STNBR; /* style number*/
  SYCREC.SY2CLRID = OB0GW01.SY2CLRID; /* color id*/
  SYCREC.XDMCD = OB0GW01.XDMCD; /* dimension cd*/
  OB0GW01.OB0GW-NIKE-STY-CHG = "N";

  if (OB0GW01.SY1STNBR != " ") /* style number not spaces*/
    if (OB0GW01.SY1STNBR != OB3REC.SY1STNBR /* style number*/
     || OB0GW01.SY2CLRID != OB3REC.SY2CLRID /* color id*/
     || OB0GW01.XDMCD != OB3REC.XDMCD)      /* dimension cd*/

      OB0GW01.OB0GW-NIKE-STY-CHG = "Y";
      OB3REC.SY1STNBR = OB0GW01.SY1STNBR; /* style number*/
      OB3REC.SY2CLRID = OB0GW01.SY2CLRID; /* color id*/
      OB3REC.XDMCD = OB0GW01.XDMCD; /* dimension cd*/
      OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
      OBWREC.OBW-EDIT-FUNCTION = "5";
   /* if special make-up product, keep the cu-cust-prod-id that came in*/
      if (OB0GW01.OB0GW-SPCL-MK-FL != "Y")
        OB3REC.CU-CUST-PROD-ID = " "; /* set empty - edit will convert*/
      end
    end
  end

  if (OB0GW01.OB0GW-NIKE-STY-CHG == "N") /* edit cust prod if nike sty*/
                                  /* didn't chg*/
    if (OB0GM001.CU-CUST-PROD-ID != OB3REC.CU-CUST-PROD-ID)
      OB3REC.CU-CUST-PROD-ID = OB0GM001.CU-CUST-PROD-ID;
      OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
      OBWREC.OBW-EDIT-FUNCTION = "5";
      OB0GW01.OB0GW-NIKE-STY-CHG = "Y";
      if (OB0GM001.CU-CUST-PROD-ID != " "     /* customer product nbr not blank*/
       && OB0GW01.SY1STNBR == OB3REC.SY1STNBR /* style number*/
       && OB0GW01.SY2CLRID == OB3REC.SY2CLRID /* color id*/
       && OB0GW01.XDMCD == OB3REC.XDMCD)      /* dimension cd*/
        OB3REC.SY1STNBR = " "; /* set style, color, dim blank*/
        OB3REC.SY2CLRID = " "; /* so the edit OB1600 will*/
        OB3REC.XDMCD = " "; /* convert from the customer prod*/
      end
    end
  end


  if (OB3REC.XGPCD != OB0GM001.XGPCD)
    OB3REC.XGPCD = OB0GM001.XGPCD; /* gpc code*/
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    if (OB3REC.XGPCD != OB1REC.XGPCD)
      if (OB1REC.XGPCD == " ")
        OB1REC.XGPCD = OB0GM001.XGPCD; /* gpc code*/
        OBWREC.OBW-EDIT-FUNCTION = "5";
      else
        OB0GW01.OB0GWUPD = "Y"; /* split item to new order*/
        OBWREC.OBW-EDIT-FUNCTION = "1";
      end
    else
      OBWREC.OBW-EDIT-FUNCTION = "5";
    end
  end

  if (OB1REC.SP1ID != OB0GM001.SP1ID)
    OB0GW01.OB0GWUPD = "Y"; /* split item to new order*/
    OB0GW01.OB0GWCHG = "Y"; /* set item record updt flag on*/
    OBWREC.OBW-EDIT-FUNCTION = "1";
  end

      /* change date/time*/
  OB3REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB3REC.ZZZCHGTM = OBWREC.ZZZCHGTM;

  OB1REC.YOBCD = "NC";

end // end OB0GS14

// UPDATE ITEM RECORD
Function OB0GS15()

  set OBSFREC empty;
  set SQLCA empty;

  OBSFREC.OBSF-TASK = "U ";
  OBSFREC.OBSF-CALLER-LOC-1 = "U       ";
  OBSFREC.OBSF-CALLER-LOC-2 = "OB1690  ";
  OBSFREC.OBSF-CALLER-LOC-3 = "OB0GS15 ";
  OBSFREC.OBSF-CALLING-APPL = "OB0H";
  OBSFREC.OB3GROUP = OB3REC.OB3GROUP;
  OBSFREC.OBSF-RETURN-CD = 99;

    /* io mod handles the change count*/
  call "OB1690" (OBSFREC) {isNoRefresh = yes, isExternal = yes};

  OB3REC.OB3GROUP = OBSFREC.OB3GROUP;

  if (OBSFREC.OBSF-RETURN-CD == 0) /* good return*/
    if (OB0GW01.OB0GW-NIKE-STY-CHG == "Y") /* if either NIKE style/color or*/
      if (OB0GW01.OB0GW-WCU1710-EXISTS-FL == "Y" /* cust prod id chged*/
       || OB0GM001.WCU1710-CU-OVRD-EXISTS-FL == "Y") /* & cust has xref*/
        OB0GS-CHECK-XREF(); /* need to check xref*/
      end
    end
  else
    if (OBSFREC.OBSF-RETURN-CD == 1) /* not found*/
      OBWREC.CAMSG = "ORDER MODIFIED BY ANOTHER SERVICE REP";
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* rollback any changes*/
      XSOBP00(); /* transfer to self*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "OB1690  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0HS15 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OBSFREC.OBSF-RETURN-CD; /* return code*/
      TA1REC.TA1TBLKE = OBSFREC.OBSF-DIAG-KEY; /* table key*/
      if (OBSFREC.OBSF-RETURN-CD == 14 /* -911 on item*/
       || OBSFREC.OBSF-RETURN-CD == 15) /* -911 on size*/
        XSOBS05(); /* 911 - rollback*/
      else
        XSOBEDR(); /* retn - rollback*/
      end
    end
  end


      /* update temp storage*/

  XSOBT4R();
   /* unformat the product*/

  OB0GW01.OB0GMPRD = OB0GM001.OB0GMPRD;
  OBDREC.OBDPRD[OBWTSF4S] = OB0GM001.OB0GMPRD;
  OBDREC.OBDPRDNM[OBWTSF4S] = SYCREC.SY1SSTNM; /* sty description*/
  OBDREC.SY2CLRAB[OBWTSF4S] = SYCREC.SY2CLRAB; /* clr abrv*/
  OBDREC.OP2CGPCD[OBWTSF4S] = OB0GM001.OP2CGPCD;

  if (OB3REC.SY1STNBR == " ") /* nike style is blank*/
    OBDREC.OBDPRD[OBWTSF4S] = OB3REC.CU-CUST-PROD-ID;
    OBDREC.OBDPRDNM[OBWTSF4S] = "UNKNOWN CUST    ";
    OBDREC.SY2CLRAB[OBWTSF4S] = "PRODUCT";
  end

  if (OBDREC.OBDPRDNM[OBWTSF4S] == " ") /* sty description*/
    OBDREC.OBDPRDNM[OBWTSF4S] = "INVALID PRODUCT";
    OBDREC.SY2CLRAB[OBWTSF4S] = " ";
  end

  OBDREC.OBDMSEL[OBWTSF4S] = "U "; /* current product*/
  XSOBT4U();

  XSOBT1R();
  if (OBAREC.YOBCD[OBWTSF1S] == "DL")
    OBAREC.OBAMSEL[OBWTSF1S] = "* "; /* current order*/
  else
    OBAREC.OBAMSEL[OBWTSF1S] = "U "; /* current order*/
  end
  XSOBT1U();

  XSOBT2C(); /* current error*/

end // end OB0GS15

// SPLIT UPDATED ITEM
Function OB0GS16()

   /* sales program or gpc code changed*/
   /* so the item needs to be split to a new order.*/


  OB0GS30(); /* update - split item to new subord*/
  OB0GS40(); /* update - split subord to new order*/
  OB0GS43(); /* update temp storage with new order*/

end // end OB0GS16

// SELECT INVENTORY SEG
Function OB0GS17()
       /* **************************************************/
       /* *    SELECT INVENTORY SEGMENT CODE              **/
       /* **************************************************/

  PC2REC.XGPCD = OB0GM001.XGPCD; /* gpc code*/
  PC2REC.PC2INSEG = OB0GM001.PC2INSEG; /* cust invty seg cd*/

  call "IO3340" ("SG", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* OK, continue*/
  else
    PC2REC.PC2SEGAB = "UNKNWN";
  end


end // end OB0GS17

// EDIT ENGR DIFF CODE
Function OB0GS18()

    /* EDIT ENGINEERING DIFFERENCE CODE*/

  if (OB0GM001.XEGCD == " ") /* field is blank*/
    OB0GM001.XEGCD = "000"; /* move in default*/
  end

  if (OB0GM001.XEGCD in XEGTBL.XEGCD /* found in table*/
   && XEGTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and active*/
    OB0GM001.XEGABRV = XEGTBL.XEGABRV[sysVar.arrayIndex]; /* abbreviation*/
  else
    OB0GM001.XEGABRV = "UNKNWN"; /* abbreviation*/
    set OB0GM001.XEGCD cursor, bold; /* highlight field in error*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(104); /* Engr diff cd is invalid or inactive*/
  end


end // end OB0GS18

// EDIT CUSTOMER LABEL CODES
Function OB0GS19()
       /* **************************************************/
       /* *  EDIT CUSTOMER LABEL CODES                    **/
       /* **************************************************/

  if (OB0GM001.PWRLBCD[1] > " ") /* if label code entered*/
      /* get label code abbreviation*/
    set PWRREC empty;
    set SQLCA empty;
    PWRREC.PWRLBCD = OB0GM001.PWRLBCD[1]; /* SETUP KEY*/

    call "IO5750" ("S ", SQLCA, PWRREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0 /* label code found*/
     && PWRREC.XXXSTAT == "A")   /* label code active*/
      OB0GM001.PWRLBABR[1] = PWRREC.PWRLBABR; /* move abrv*/
    else
      converseLib.validationFailed(154); /* label code invalid or inactive*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0GM001.PWRLBCD[1] cursor, bold;
      OB0GM001.PWRLBABR[1] = "UNKNWN";
    end
  else
    OB0GM001.PWRLBABR[1] = "      "; /* cust label code abrv*/
  end


  if (OB0GM001.PWRLBCD[2] > " ") /* if label code entered*/
      /* get label code abbreviation*/
    set PWRREC empty;
    set SQLCA empty;
    PWRREC.PWRLBCD = OB0GM001.PWRLBCD[2]; /* setup key*/

    call "IO5750" ("S ", SQLCA, PWRREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0 /* label code found*/
     && PWRREC.XXXSTAT == "A")   /* label code active*/
      OB0GM001.PWRLBABR[2] = PWRREC.PWRLBABR; /* move abrv*/
    else
      converseLib.validationFailed(154); /* label code invalid or inactive*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0GM001.PWRLBCD[2] cursor, bold;
      OB0GM001.PWRLBABR[2] = "UNKNWN";
    end
  else
    OB0GM001.PWRLBABR[2] = "      "; /* cust label code abrv*/
  end

end // end OB0GS19

// SET FIELDS AUTOSKIP
Function OB0GS20()
       /* **************************************************/
       /* *  RESET field attributes autoskip on map.      **/
       /* **************************************************/

  set OB0GM001.OBWORDER skip;
  set OB0GM001.OBWCUST skip;
  set OB0GM001.OP1CUPO skip;
  set OB0GM001.KUMSTRNM skip;
  set OB0GM001.XGPCD skip;
  set OB0GM001.OB0GMPRD skip;
  set OB0GM001.OB0GWPDS skip;
  set OB0GM001.OP2TONOQ skip;
  set OB0GM001.CU-CUST-PROD-ID skip;

  if (OB0GM001.CU-CUST-PROD-ID == " ")
    set OB0GM001.OB0GM-XREF-OVRD-LIT skip, invisible;
    set OB0GM001.WCU1710-CU-OVRD-EXISTS-FL skip, invisible;
  else
    set OB0GM001.OB0GM-XREF-OVRD-LIT initialAttributes; /* AUTOSKIP*/
    set OB0GM001.WCU1710-CU-OVRD-EXISTS-FL initialAttributes;
  end

  set OB0GM001.OP2AUPRC skip;
  set OB0GM001.OB0GMNDT skip;
  set OB0GM001.XWHABRV skip;
  set OB0GM001.XDSABRV skip;
  set OB0GM001.XOTABRV skip;
  set OB0GM001.XOCABRV skip;
  set OB0GM001.XUMDESC skip;

  set OB0GM001.XOWCD skip;
  set OB0GM001.XOWABRV skip;
  set OB0GM001.PC2INSEG skip;
  set OB0GM001.PC2SEGAB skip;
  set OB0GM001.XPGCD skip;
  set OB0GM001.XPGABRV skip;
  set OB0GM001.OP1BOFL skip;
  set OB0GM001.XBK-BK-SESN-CD skip;
  set OB0GM001.OB0GM-OP-BK-YY skip;
  set OB0GM001.OB0GM-OP-BK-MM skip;
  set OB0GM001.SP1ID skip;

  set OB0GM001.OP2CGPCD skip;
  set OB0GM001.XEGCD skip;
  set OB0GM001.XEGABRV skip;
  set OB0GM001.XLCCD skip;
  set OB0GM001.XLCABRV skip;
  set OB0GM001.XQACD skip;
  set OB0GM001.XQAABRV skip;
  set OB0GM001.XPRCD skip;
  set OB0GM001.XPRABRV skip;
  set OB0GM001.XPCCD skip;
  set OB0GM001.XPCABRV skip;

  set OB0GM001.XHDCD[1] skip;
  set OB0GM001.XHDABRV[1] skip;
  set OB0GM001.XHDCHG[1] skip;
  set OB0GM001.OP2HCHGO[1] skip;
  set OB0GM001.XHDCD[2] skip;
  set OB0GM001.XHDABRV[2] skip;
  set OB0GM001.XHDCHG[2] skip;
  set OB0GM001.OP2HCHGO[2] skip;
  set OB0GM001.XHDCD[3] skip;
  set OB0GM001.XHDABRV[3] skip;
  set OB0GM001.XHDCHG[3] skip;
  set OB0GM001.OP2HCHGO[3] skip;
  set OB0GM001.XHDCD[4] skip;
  set OB0GM001.XHDABRV[4] skip;
  set OB0GM001.XHDCHG[4] skip;
  set OB0GM001.OP2HCHGO[4] skip;
  set OB0GM001.XHDCD[5] skip;
  set OB0GM001.XHDABRV[5] skip;
  set OB0GM001.XHDCHG[5] skip;
  set OB0GM001.OP2HCHGO[5] skip;
  set OB0GM001.PWRLBCD[1] skip;
  set OB0GM001.PWRLBCD[2] skip;
  set OB0GM001.PWRLBABR[1] skip;
  set OB0GM001.PWRLBABR[2] skip;

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    if (OB0GM001.CAMSG == " ")
      OB0GM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end

end // end OB0GS20

// UPDATE HEADER
Function OB0GS21()

  OB1REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB1REC.ZZZCHGTM = OBWREC.ZZZCHGTM;

  set OBFREC empty;
  set SQLCA empty;
  set VBULKS02 empty;

  OBFREC.OBFTASK = "U ";

  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

     /* *******TCS INCLUDE BEGIN**************/

    VBULKS02.OP1PARTN = OB1REC.OP1PARTN;
    VBULKS02.OP1CUOID = OB1REC.OP1CUOID;
    VBULKS02.OP1NORID = OB1REC.OP1NORID;
    OB0GS-CHECK-VBULK();

    /* *******TCS INCLUDE END****************/

      /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OBWREC.CAMSG = "THE ORDER HAS BEEN MODIFIED BY ANOTHER SERVICE REP";
      XSOBP00();
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBHDR01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5160  "; /* i/omod*/
      TA1REC.TA1LOCAT[3] = "OB0GS21 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "        "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end



end // end OB0GS21

// SPLIT ITEM TO NEW SUBORD
Function OB0GS30()


     /* build OB1620 pass record*/

  OB0GS31();

  call "OB1620" (OBSSREC) {isNoRefresh = yes, isExternal = yes};

     /* process the return code*/

  OB0GS32();


end // end OB0GS30

// BUILD OBSSREC FOR OB1620
Function OB0GS31()

  set OBSSREC empty;

  OBSSREC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OBSSREC.OP1CUOID = OB1REC.OP1CUOID; /* cust order id*/
  OBSSREC.OP1NORID = OB1REC.OP1NORID; /* nike order id*/
  OBSSREC.OP2LNINB = OB3REC.OP2LNINB; /* line item nbr*/
  OBSSREC.KUCCOID = OB1REC.KUCCOID; /* company*/
  OBSSREC.KUMSTRID = OB1REC.KUMSTRID; /* store*/
  OBSSREC.XNXCD = OB1REC.XNXCD; /* department*/
  OBSSREC.XGPCD = OB3REC.XGPCD; /* gpc code*/
  OBSSREC.XDVCD = OB1REC.XDVCD; /* division*/
  OBSSREC.XBCCD = OB1REC.XBCCD; /* brand*/
  OBSSREC.XSOCD = OB1REC.XSOCD; /* sales office*/
  OBSSREC.XOTCD = OB1REC.XOTCD; /* system order type*/
  OBSSREC.XOBCD = OB1REC.XOBCD; /* base order type*/
  OBSSREC.OB1ACCSF = OB1REC.OB1ACCSF; /* accessory flag*/
  OBSSREC.XOCCD = OB1REC.XOCCD; /* order class*/
  OBSSREC.SP1ID = OB0GM001.SP1ID; /* sales program*/
  OBSSREC.SM1AGYID = OB1REC.SM1AGYID; /* agency*/
  OBSSREC.SM4REPID = OB1REC.SM4REPID; /* agency*/
  OBSSREC.XBDCD = OB1REC.XBDCD; /* bulk/draw code*/
  OBSSREC.XWHCD = OB1REC.XWHCD; /* warehouse code*/
  OBSSREC.OP1CUNDT = OB1REC.OP1CUNDT; /* need date*/
  OBSSREC.XDSCD = OB1REC.XDSCD; /* direct ship cd*/
  OBSSREC.OP1BLKID = OB1REC.OP1BLKID; /* bulk ord id*/

  OBSSREC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OBSSREC.ZZZCHGTM = OBWREC.ZZZCHGTM;

  OBSSREC.OBSS-SPLIT-TO-CA-STAT-FL = "N";


end // end OB0GS31

// PROCESS OB1620 RETURN-CODES
Function OB0GS32()

  if (OBSSREC.OBSS-RETURN-CODE == 0
  )
    /* update temp storage for current order*/

    XSOBT1R();
    sysVar.arrayIndex = OBWREC.OBWTSF1S;
    OB0GS45(); /* load the temp storage obarec*/
    XSOBT1U(); /* update temp storage record*/

    /* save original order*/

    OB0GW01.OP1CUOID = OBWREC.OP1CUOID;
    OB0GW01.OP1NORID = OBWREC.OP1NORID;
    OB0GW01.OP1PARTN = OBWREC.OP1PARTN;


    /* save new nike ord id for next ob1rec read*/

    OBWREC.OP1NORID = OBSSREC.OBSS-NEW-NIKE-ORD-ID;
    OBWREC.OBWNOID = OBSSREC.OBSS-NEW-NIKE-ORD-ID;

  else /* process error return codes*/
    TA1REC.TA1LOCAT[1] = "        "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "OB1620  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS32 "; /* statement group*/
    TAEREC.TAEDESC1 = OBSSREC.OBSS-ERRDIAG-KEY; /* error key*/
    if (OBSSREC.OBSS-RETURN-CODE == 2) /* record not found on update*/
      OBWREC.CAMSG = "ORDER UPDATED BY BATCH SYSTEM OR ANOTHER CSR - PLEASE TRY AGAIN";
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      XSOBP00();
    end
    if (OBSSREC.OBSS-RETURN-CODE == 3
     || OBSSREC.OBSS-RETURN-CODE == 5
    ) /* db2 deadlock occured in ob1620*/
      OBWREC.CAMSG = "DATABASE BUSY - PLEASE TRY AGAIN";
      XSOBP00();
    end
    if (OBSSREC.OBSS-RETURN-CODE == 4
    ) /* fatal dbr error in ob1620*/
      TAEREC.TAEDESC2 = "FATAL DB2 ERROR IN OB1620";
    else
      if (OBSSREC.OBSS-RETURN-CODE == 6
      ) /* fatal dbr error in ob1690 from ob1620*/
        TAEREC.TAEDESC2 = "FATAL DB2 ERROR IN OB1690 FROM OB1620";
      else /* unexpected return code from ob1620*/
        TAEREC.TAEDESC2 = "UNEXPECTED RETURN CODE FROM OB1620";
      end
    end
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    XSOBENP(); /* post*/
    XSOBP04(); /* main menu*/
  end


end // end OB0GS32

// split subord to new order
Function OB0GS40()

    /* The sales program and/or gpc code changed*/
    /* so we are here to split the item to a new*/
    /* order. (currently it's on a suborder by itself).*/


     /* build OB1630 pass record*/

  OB0GS41();

  call "OB1630" (OBSOREC) {isNoRefresh = yes, isExternal = yes};

     /* process the return code*/

  OB0GS42();


end // end OB0GS40

// BUILD OBSOREC FOR OB1630
Function OB0GS41()

  set OBSOREC empty;

  OBSOREC.OP1PARTN = OBWREC.OP1PARTN; /* part char*/
  OBSOREC.OP1CUOID = OBWREC.OP1CUOID; /* cust order id*/
  OBSOREC.OP1NORID = OBWREC.OP1NORID; /* nike order id*/

  OBSOREC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OBSOREC.ZZZCHGTM = OBWREC.ZZZCHGTM;


end // end OB0GS41

// PROCESS OB1630 RETURN CODES
Function OB0GS42()

  if (OBSOREC.OBSO-RETURN-CODE == 0
  )
    /* save new order id for next ob1rec read*/

    OBWREC.OP1PARTN = OBSOREC.OBSO-OP1PARTN-NEW;
    OBWREC.OP1CUOID = OBSOREC.OBSO-OP1CUOID-NEW;
    OBWREC.OP1NORID = OBSOREC.OBSO-OP1NORID-NEW;

    OBWREC.OBWCUOID = OBSOREC.OBSO-OP1CUOID-NEW;
    OBWREC.OBWNOID = OBSOREC.OBSO-OP1NORID-NEW;
    OBWREC.OBWFMT = OBWREC.OBWORDER;
    XSOBS06();
    OBWREC.OBWORDER = OBWREC.OBWFMT;

  else /* process error return codes*/
    TA1REC.TA1LOCAT[1] = "        "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "OB1630  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0GS42 "; /* statement group*/
    TAEREC.TAEDESC1 = OBSOREC.OBSO-ERRDIAG-KEY; /* error key*/
    if (OBSOREC.OBSO-RETURN-CODE == 1) /* original order not found*/
      TAEREC.TAEDESC2 = "ORDER NOT FOUND IN OB1630 ";
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      XSOBENP(); /* post*/
      XSOBP04(); /* main menu*/
    end
    if (OBSOREC.OBSO-RETURN-CODE == 2
     || OBSOREC.OBSO-RETURN-CODE == 4
    ) /* db2 deadlock occured in ob1630*/
      OBWREC.CAMSG = "DATABASE BUSY - PLEASE TRY AGAIN";
      XSOBP00();
    end
    if (OBSOREC.OBSO-RETURN-CODE == 3
    ) /* fatal dbr error in ob1630*/
      TAEREC.TAEDESC2 = "FATAL DB2 ERROR IN OB1630";
    else
      if (OBSOREC.OBSO-RETURN-CODE == 5
      ) /* application error in ob1630*/
        TAEREC.TAEDESC2 = "APPLICATION ERROR OCCURED IN OB1630";
      else /* unexpected return code from ob1630*/
        TAEREC.TAEDESC2 = "UNEXPECTED RETURN CODE FROM OB1630";
      end
    end
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    XSOBENP(); /* post*/
    XSOBP04(); /* main menu*/
  end



end // end OB0GS42

// CLEAN UP TS AND OBWREC
Function OB0GS43()

    /* format message*/

  OB0GW01.OB0GWMS1 = "PRODUCT ";
  OB0GW01.OB0GWMS2 = OB0GM001.OB0GMPRD; /* formatted product*/
  OB0GW01.OB0GWMS3 = " IS NOW ON ORDER ";
  OB0GW01.OB0GWMS4 = OBWREC.OBWORDER; /* formatted order*/
  OBWREC.CAMSG = OB0GW01.OB0GWMSG; /* move in formatted msg*/

    /* add new order to selected suborders temp storage (OBAREC)*/

  OB0GS44(); /* add to temp storage*/


end // end OB0GS43

// ADD NEW ORDER TO TEMP STORAGE
Function OB0GS44()

  OB0GW01.OBWTSF1P = OBWREC.OBWTSF1P; /* save current page*/


   /* Read order temp storage record*/

  OBWREC.OBWTSF1P = OBWREC.OBWTSF1M; /* get last page*/
  XSOBT1R();


   /* Find available slot in last page for added order*/

  sysVar.arrayIndex = 1; /* init subscript*/
  while (sysVar.arrayIndex <= 12 /* still within the page*/
   && OBAREC.OBACUOID[sysVar.arrayIndex] != 0) /* slot not vacant*/
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increment subscript*/
  end


   /* If there is a no slot available in the last page,*/
   /* then you will be adding a new record, so empty the*/
   /* record, init the subscript, load the obarec, and add*/
   /* the new record.  Otherwise, just load the obarec and*/
   /* do an update.*/

  if (sysVar.arrayIndex == 13) /* need to add new page*/
    set OBAREC empty; /* clear for new page*/
    sysVar.arrayIndex = 1; /* set subscript to first line*/
    OB0GS45(); /* load the temp storage obarec*/
    XSOBT1W(); /* add temp storage record*/
  else /* vacant slot found on same page*/
    OB0GS45(); /* load the temp storage obarec*/
    XSOBT1U(); /* update temp storage record*/
  end

   /* decide which order is to be the current order*/

  if (OBAREC.OBAMSEL[OBWTSF1S] == "*") /* deleted or loaded order*/
    OBWREC.OBWTSF1P = OBWREC.OBWTSF1M; /* restore last page*/
    OBWREC.OBWTSF1S = sysVar.arrayIndex; /* and subscript for new order*/
    /* obwrec contains the new order*/
  else
    OBWREC.OBWTSF1P = OB0GW01.OBWTSF1P; /* restore current page*/
    OB0GW01.OB0GW-NEW-ORD-SUB = sysVar.arrayIndex; /* subscript for new order*/
    OB0GS46(); /* restore original order to obwrec*/
  end

  XSOBT1R();

  OBWREC.OBW-GET-ITEMS-FL = "Y"; /* reload items to temp storage*/
                                  /* in ob0f*/



end // end OB0GS44

// BUILD TEMP STORAGE (OBAREC)
Function OB0GS45()

  XSOBS03(); /* read the new order*/

  if (OB1REC.YOBCD == "DL")
    OBAREC.OBAMSEL[sysVar.arrayIndex] = "*"; /* select option*/
  else
    OBAREC.OBAMSEL[sysVar.arrayIndex] = "U"; /* select option*/
  end

  OBAREC.OBAORDER[sysVar.arrayIndex] = OBWREC.OBWORDER; /* formatted order*/
  OBAREC.OBANORID[sysVar.arrayIndex] = OB1REC.OP1NORID; /* nike order id*/
  OBAREC.OP1PARTN[sysVar.arrayIndex] = OB1REC.OP1PARTN; /* part char*/

  OBAREC.OB1PARLF[sysVar.arrayIndex] = OB1REC.OB1PARLF; /* partial load flag*/
  OBAREC.SP1ID[sysVar.arrayIndex] = OB1REC.SP1ID; /* sales program*/
  OBAREC.XOBCD[sysVar.arrayIndex] = OB1REC.XOBCD; /* base ot code*/

  OBWREC.OBWDT8 = OB1REC.OP1CUNDT; /* reformat need date*/
  XSOBDCM(); /* db2 date to map date*/
  OBAREC.OBACUNDT[sysVar.arrayIndex] = OBWREC.OBWDT6;
                                   /* reformatted need date*/

  OBAREC.YOBCD[sysVar.arrayIndex] = OB1REC.YOBCD; /* yob code*/

  OBAREC.OB1ERRFL[sysVar.arrayIndex] = OB1REC.OB1ERRFL; /* error flag*/
  OBAREC.OBAFILL[sysVar.arrayIndex] = "/"; /* slash*/
  OBAREC.OB1HLDFL[sysVar.arrayIndex] = OB1REC.OB1HLDFL; /* hold flag*/

  OBAREC.OBACUST[sysVar.arrayIndex] = OBWREC.OBWCUST; /* formatted cust*/

  OBAREC.KUMSTSNM[sysVar.arrayIndex] = "NEW ORDER "; /* short store name*/

end // end OB0GS45

// PROCESS OB1630 RETURN CODES
Function OB0GS46()

  OB1REC.OP1PARTN = OBWREC.OP1PARTN; /* save new order*/
  OB1REC.OP1CUOID = OBWREC.OP1CUOID; /**/
  OB1REC.OP1NORID = OBWREC.OP1NORID; /**/

  OBWREC.OP1PARTN = OB0GW01.OP1PARTN; /* restore orig order*/
  OBWREC.OP1CUOID = OB0GW01.OP1CUOID; /**/
  OBWREC.OP1NORID = OB0GW01.OP1NORID; /**/

  OB0GW01.OP1PARTN = OB1REC.OP1PARTN; /* save new order*/
  OB0GW01.OP1CUOID = OB1REC.OP1CUOID; /**/
  OB0GW01.OP1NORID = OB1REC.OP1NORID; /**/

  OB1REC.OP1PARTN = OBWREC.OP1PARTN; /* restore orig order*/
  OB1REC.OP1CUOID = OBWREC.OP1CUOID; /**/
  OB1REC.OP1NORID = OBWREC.OP1NORID; /**/

  OBWREC.OBWCUOID = OBWREC.OP1CUOID;
  OBWREC.OBWNOID = OBWREC.OP1NORID;
  OBWREC.OBWFMT = OBWREC.OBWORDER;
  XSOBS06(); /* suppress leading zeros*/
  OBWREC.OBWORDER = OBWREC.OBWFMT;




end // end OB0GS46

Function OB0GS50()

  OB1REC.OP1PARTN = OB0GW01.OP1PARTN; /* move new order*/
  OB1REC.OP1CUOID = OB0GW01.OP1CUOID; /* to ob1rec for*/
  OB1REC.OP1NORID = OB0GW01.OP1NORID; /* edit*/

  OB0GW01.OB0GWSB1 = OBWREC.OBWTSF1S; /* save orig subscript*/
  OB0GW01.OB0GWSB2 = OBWREC.OBWTSF1P; /* save orig page*/
  OBWREC.OBWTSF1P = OBWREC.OBWTSF1M; /* restore new order page*/
  OBWREC.OBWTSF1S = OB0GW01.OB0GW-NEW-ORD-SUB; /* restore new ord sub*/

  OBWREC.OBW-EDIT-FUNCTION = 2;
  XSOBS-ONLINE-EDIT();

  OB1REC.OP1PARTN = OBWREC.OP1PARTN; /* restore first order*/
  OB1REC.OP1CUOID = OBWREC.OP1CUOID;
  OB1REC.OP1NORID = OBWREC.OP1NORID;
  OBWREC.OBWTSF1S = OB0GW01.OB0GWSB1;
  OBWREC.OBWTSF1P = OB0GW01.OB0GWSB2;

  OB0GW01.OP1PARTN = " ";
  OB0GW01.OP1CUOID = 0;
  OB0GW01.OP1NORID = 0;

end // end OB0GS50

// EDIT PFKEYS FOR OB0G
Function OB0GSPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    XSOBP01();
    OB0GM001.CAMSG = OBWREC.OBWHELP; /* redisplay msg if no help*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf6)
    XSOBP06();
  end

  if (converseVar.eventKey is pf9)
    XSOBP09();
  end

  if (converseVar.eventKey is pf10)
    XSOBP10();
  end

  if (converseVar.eventKey is pf11)
    if (KUCREC.KUCSKIND == " ")
      converseLib.validationFailed(212); /* customer does not have xref data*/
      OBWREC.OBWERRFL = "Y";
      return;
    else
      if (OB0GW01.OB0GW-VALID-PROD-FL == "N")
        converseLib.validationFailed(210); /* can't go to xref screen w/invalid*/
        OBWREC.OBWERRFL = "Y"; /* product*/
        return;
      else
        XSOBP11();
      end
    end
  end

  if (converseVar.eventKey is pf13)
    XSOBP13();
  end

  if (converseVar.eventKey is pf14)
    XSOBP14();
  end

  if (converseVar.eventKey is pf15)
    XSOBP15();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf18)
    XSOBP18();
  end

  if (converseVar.eventKey is pf19)
    XSOBP19();
  end

  if (converseVar.eventKey is pf20) /* add product*/
    if (OB1REC.YOBCD != "PD" /* postponed demand report*/
     && OB1REC.YOBCD != "LP") /* lost demand reported*/
      XSOBP20();
    else
      converseLib.validationFailed(164); /* order status doesn't allow changes*/
      OBWREC.OBWERRFL = "Y";
    end
  end

  if (converseVar.eventKey is pf22)
    XSOBP22();
  end

  if (converseVar.eventKey is pf24
   && OBWREC.OBWERRFL == "N") /* NO ERRS*/
    OB0GS-EDIT-XL-RSN(); /* edit cancel reason*/
    if (OB1REC.YOBCD == "CA" /* cleared availability*/
     || OB1REC.YOBCD == "PD" /* postponed demand report*/
     || OB1REC.YOBCD == "LP") /* lost demand reported*/
      converseLib.validationFailed(164); /* order status doesn't allow changes*/
      OBWREC.OBWERRFL = "Y";
    else
      if (OBWREC.OBWERRFL != "Y") /* no errs*/
        OBWREC.OBWXLIND = "I";
        OB0GS-CALL-OZ2090();
        XSOBP24(); /* cancel item*/
        OB0GS-DEL-OVERRIDE(); /* delete all ovrd recs for item*/
        OB0GS-DEL-VOBXRF01(); /* delete all companion recs for item*/
        OB0GS-GET-PREPACK(); /* delete prepks if item is deleted 03/01/98*/
        XSOB-UPD-VOCITM01();
        COMMAREA.CAUSERA = OBWREC.OBWGROUP; /* save obwrec to commarea*/
        VGVar.handleSysLibraryErrors = 0;
        sysLib.commit(); /* commit any prior work*/
        XSOBP09(); /* product summary*/
      end
    end
  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf20
   || converseVar.eventKey is pf24)
     /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end


  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    if (OB0GW01.OB0GWCHG == "Y")
      XSOBP00();
    else
      XSOBP09();
    end
  end


end // end OB0GSPF

//*** RECORD=OB0GW01 ****
// 03/20/91  swatso  added product description - ob0gwpds
// ***********************
Record OB0GW01 type basicRecord
  10 OB0GMPRD OB0GMPRD ; 
    15 SY1STNBR SY1STNBR ; 
    15 OB0GWPR1 OB0GWPR1 ; 
    15 SY2CLRID SY2CLRID ; 
    15 OB0GWPR2 OB0GWPR2 ; 
    15 XDMCD XDMCD ; 
  10 XLCCD XLCCD ; 
  10 OB0GWSB1 OB0GWSB1 ; 
  10 OB0GWSB2 OB0GWSB2 ; 
  10 OB0GWSB5 OB0GWSB5 ; 
  10 OBWTSF1P OBWTSF1P ; 
  10 OB0GWUPD OB0GWUPD ; 
  10 OB0GWCHG OB0GWCHG ; 
  10 OB0GWPDS OB0GWPDS ; 
    15 OB0GWSSN OB0GWSSN ; 
    15 OB0GWSPC OB0GWSPC ; 
    15 OB0GWSCA OB0GWSCA ; 
  10 XHDKEY XHDKEY ; 
    15 XHDCD XHDCD ; 
    15 XGPCD XGPCD ; 
  10 XPRCD XPRCD ; 
  10 XPCCD XPCCD ; 
  10 OB0GW-OP-BK-CCYY OB0GW-OP-BK-CCYY ; 
    15 OB0GW-OP-BK-CC OB0GW-OP-BK-CC ; 
    15 OB0GW-OP-BK-YY OB0GW-OP-BK-YY ; 
  10 OB0GW-OP-BK-00MM OB0GW-OP-BK-00MM ; 
    15 OB0GW-OP-BK-00 OB0GW-OP-BK-00 ; 
    15 OB0GW-OP-BK-MM OB0GW-OP-BK-MM ; 
  10 OB0GW-NIKE-STY-CHG OB0GW-NIKE-STY-CHG ; 
  10 OB0GW-CASE-LOT-CHG OB0GW-CASE-LOT-CHG ; 
  10 OB0GW-UPD-CASE-LOT OB0GW-UPD-CASE-LOT ; 
  10 OB0GW-ORIG-CASE-LOT-NBR OB0GW-ORIG-CASE-LOT-NBR ; 
  10 OB0GWMSG OB0GWMSG ; 
    15 OB0GWMS1 OB0GWMS1 ; 
    15 OB0GWMS2 OB0GWMS2 ; 
    15 OB0GWMS3 OB0GWMS3 ; 
    15 OB0GWMS4 OB0GWMS4 ; 
  10 OP1PARTN OP1PARTN ; 
  10 OP1CUOID OP1CUOID ; 
  10 OP1NORID OP1NORID ; 
  10 OB0GW-NEW-ORD-SUB OB0GW-NEW-ORD-SUB ; 
  10 CU-CUSKU-SZ-FL CU-CUSKU-SZ-FL ; 
  10 OB0GW-WCU1710-EXISTS-FL OB0GW-WCU1710-EXISTS-FL ; 
  10 OB0GW-VCUCPX01-EXISTS-FL OB0GW-VCUCPX01-EXISTS-FL ; 
  10 OB0GW-VBCPOX02-EXISTS-FL OB0GW-VBCPOX02-EXISTS-FL ; 
  10 OB0GW-VALID-PROD-FL OB0GW-VALID-PROD-FL ; 
  10 OB0GW-SPCL-MK-FL OB0GW-SPCL-MK-FL ; 
  10 OB0GW-FIRST-TRY OB0GW-FIRST-TRY ; 
  10 OB0GW-DEL-ZERO-OVRD OB0GW-DEL-ZERO-OVRD ; 
  10 MSG-NBR MSG-NBR ; 
  10 * char(1) ; 
  10 XREF-CU-CUSKU-ID XREF-CU-CUSKU-ID ; 
  10 XREF-XNX-DEPT-ID-XREF XREF-XNX-DEPT-ID-XREF ; 
  10 XREF-CU-PROD-XREF-EDT XREF-CU-PROD-XREF-EDT ; 
  10 XREF-CU-CUST-PROD-ID XREF-CU-CUST-PROD-ID ; 
  10 XREF-CU-PROD-NM XREF-CU-PROD-NM ; 
  10 XREF-CU-PROD-SNM XREF-CU-PROD-SNM ; 
  10 XREF-CU-PROD-COLR-NM XREF-CU-PROD-COLR-NM ; 
  10 XREF-CU-PROD-SZ-ID XREF-CU-PROD-SZ-ID ; 
  10 XREF-CU-PROD-SZ-NM XREF-CU-PROD-SZ-NM ; 
  10 XREF-XGP-GPC-CD XREF-XGP-GPC-CD ; 
  10 XREF-SY-STY-NBR XREF-SY-STY-NBR ; 
  10 XREF-SY-COLR-CD-ID XREF-SY-COLR-CD-ID ; 
  10 XREF-XDM-DIM-CD XREF-XDM-DIM-CD ; 
  10 XREF-XQA-QUAL-CD XREF-XQA-QUAL-CD ; 
  10 XREF-CU-CUST-RTL-PRC XREF-CU-CUST-RTL-PRC ; 
  10 XREF-CU-CUST-SPCL-PRC XREF-CU-CUST-SPCL-PRC ; 
  10 XREF-CU-SPCL-PRC-EDT XREF-CU-SPCL-PRC-EDT ; 
  10 XREF-CU-SUGG-RTL-PRC XREF-CU-SUGG-RTL-PRC ; 
  10 XREF-CU-HANG-XGP-CD XREF-CU-HANG-XGP-CD ; 
  10 XREF-CU-HANG-STY-NBR XREF-CU-HANG-STY-NBR ; 
  10 XREF-PK-LABL-CD1 XREF-PK-LABL-CD1 ; 
  10 XREF-PK-LABL-CD2 XREF-PK-LABL-CD2 ; 
  10 XREF-YLA-LABL-ATCH-CD1 XREF-YLA-LABL-ATCH-CD1 ; 
  10 XREF-YLA-LABL-ATCH-CD2 XREF-YLA-LABL-ATCH-CD2 ; 
  10 XREF-CU-HANG-CRTN-CLS XREF-CU-HANG-CRTN-CLS ; 
  10 XREF-CU-VEND-CLS-ID XREF-CU-VEND-CLS-ID ; 
  10 XREF-CU-SKU-COMNT1 XREF-CU-SKU-COMNT1 ; 
  10 XREF-CU-SKU-COMNT2 XREF-CU-SKU-COMNT2 ; 
  10 XREF-CU-SKU-COMNT3 XREF-CU-SKU-COMNT3 ; 
end // end OB0GW01

//*** RECORD=WCU1700 ****
//  * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//                     PANVALET INCLUDE WCU1700
// 
//  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//   THIS INCLUDE MEMBER IS A NIKEBOTH MEMBER WITH A TOTAL
//   LENGTH OF 8192.
// 
//   THIS INCLUDE HAS THE SAME LAYOUT AS THE CSP RECORD,
//   WCU1700 USED BY ANY CSP PROGRAM THAT CALLS THE CUSTOMER
//   PRODUCT CROSS-REFERENCE INQUIRY.
// 
//   WCU1700-INQUIRY-TYPE:
//       '1' - ORDER RELATED FOR PRODUCT/SIZES WITH OVERRIDES
//       '2' - ORDER RELATED FOR PRODUCT/SIZES W/O OVERRIDES
//       '3' - NON-ORDER RELATED FOR PRODUCT/SIZES
// 
//   REQUIRED FIELDS:
//        WCU1700-IN-INQUIRY-TYPE
//        WCU1700-IN-CU-CO-ID
//        WCU1700-IN-XNX-DEPT-ID-XREF
//        WCU1700-IN-CU-PROD-XREF-EDT (DEFAULTS TO CURRENT DATE
//                (SHOULD BE ORDER NEED DATE OR RECEIVED DATE)
//        WCU1700-IN-DORDB-IND (DEFAULTS TO 'N')
//          ('Y' WILL ACCESS DORDB - 'N' WILL ACCESS DORDER)
//     IF USING INQUIRY-TYPE = '1' OR '2'
//        PASS THE FOLLOWING DATA:
//             WCU1700-IN-OP-ORD-PART-CHAR
//             WCU1700-IN-OP-CUST-ORD-ID
//             WCU1700-IN-OP-CU-PO-LINE-NBR
//        AND
//        WCU1700-IN-SY-STY-NBR   OR WCU1700-IN-CU-PROD-ID
//        WCU1700-IN-SY-COLR-CD-ID   WCU1700-IN-CU-PROD-COLR-NM
//        WCU1700-IN-XDM-DIM-CD      WCU1700-IN-CU-PROD-SZ-ID
//        WCU1700-IN-SY-SZ-ID
//        WCU1700-IN-XQA-QUAL-CD
//        WCU1700-IN-XGP-GPC-CD
//     IF USING INQUIRY-TYPE = '3'
//        PASS THE FOLLOWING DATA:
//        WCU1700-IN-SY-STY-NBR   OR WCU1700-IN-CU-PROD-ID
//        WCU1700-IN-SY-COLR-CD-ID   WCU1700-IN-CU-PROD-COLR-NM
//        WCU1700-IN-XDM-DIM-CD      WCU1700-IN-CU-PROD-SZ-ID
//        WCU1700-IN-SY-SZ-ID
//        WCU1700-IN-XQA-QUAL-CD
//        WCU1700-IN-XGP-GPC-CD
// 
//     IF THE SIZE FIELD(STYLE-SIZE-ID OR CUST-PROD-SZ-ID) IS
//     ZERO, INFO FOR ALL EXISTING SIZES IS RETURNED. TO GET A
//     SPECIFIC SIZE ENTER THAT SIZE IN THE SIZE FIELD AND IT'S
//     INFO WILL BE RETURNED IN THE FIRST OCCURENCE.
//   RETURN INFO:
// 
//    THIS PROGRAM WILL ALWAYS RETURN TO THE CALLING PROGRAM.
//    ALL ROLLBACKS WILL BE PERFORMED BY THE CALLING PROGRAMS,
//    EXCEPT FOR -911 IN WHICH CASES ROLLBACKS ARE PERFORMED
//    AUTOMATICALLY.
// 
//    POSSIBLE RETURN CODES:
//        0 - GOOD RETURN
//        1 - DCUST.VCUCPX01 NOT FOUND ON SELECT (+100)
//        2 - NOT FOUND (+100) ON ANY OTHER ACCESSED DB2 TABLE
//        3 - DEADLOCK OR TIME-OUT IN A DATABASE (-911)
//        4 - ANY OTHER SQL RETURN CODE IN A DATABASE
//            CU1700
//        6 - INVALID OR MISSING DATA FOR OPTION
//        7 - INVALID INQUIRY OPTION SENT TO CU1700
//        8 - DCUST.VCMPNY01 NOT FOUND ON SELECT (+100)
//        9 - UNABLE TO DETERMINE CU-CUSKU-ID
// 
//    WCU1700-MORE-SIZES-FL:
// 
//         'Y' MORE THAN 24 SIZES EXIST FOR THIS STYLE
//             (CALL WCU1700 WITH WCU1700-GET-XTRA-SIZES-FL =
//             'Y' TO GET REMAINING SIZES)
//             EITHER WCU1700-IN-NEXT-STYLE-SIZE OR
//             WCU1700-IN-NEXT-CU-PROD-SIZE SHOULD BE POPULATED
//             WITH THE NEXT SIZE THAT WILL BE RETRIEVED ON THE
//             SECOND CALL TO CU1700. DO NOT INITIALIZE THIS
//             FILE THAT WOULD CAUSE CU1700 TO GET THE SAME
//             SIZES AS THE FIRST CALL.
//         'N' ALL VALID SIZES FOR THIS STYLE HAVE BEEN PASSED
// 
//  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
//  ***********************************************************
//      M A I N T E N A N C E     L O G
//  ***********************************************************
// 
//  DATE        NAME            DESCRIPTION OF CHANGE
// 
//  05/11/95    CRAINE          CREATE
// 
//  05/06/96    wleong          Add OP-CASE-LOT-NBR
//                              Add WCU1700-MORE-SIZES-FL
//                              Change occurs clause from 25
//                              to 24
//  ***********************************************************
// ***********************
Record WCU1700 type basicRecord
  5 WCU1700-PASSING-RECORD WCU1700-PASSING-RECORD ; 
    10 WCU1700-PASSING-INFO WCU1700-PASSING-INFO ; 
      15 WCU1700-INQUIRY-OPTION WCU1700-INQUIRY-OPTION ; 
      15 WCU1700-IN-DORDB-IND WCU1700-IN-DORDB-IND ; 
      15 WCU1700-IN-CU-CO-ID WCU1700-IN-CU-CO-ID ; 
      15 WCU1700-XNX-DEPT-ID-XREF WCU1700-XNX-DEPT-ID-XREF ; 
      15 WCU1700-CU-PROD-XREF-EDT WCU1700-CU-PROD-XREF-EDT ; 
      15 WCU1700-IN-OP-ORD-PART-CHAR WCU1700-IN-OP-ORD-PART-CHAR ; 
      15 WCU1700-IN-OP-CUST-ORD-ID WCU1700-IN-OP-CUST-ORD-ID ; 
      15 WCU1700-IN-CU-PO-LINE-NBR WCU1700-IN-CU-PO-LINE-NBR ; 
      15 WCU1700-IN-XGP-GPC-CD WCU1700-IN-XGP-GPC-CD ; 
      15 WCU1700-IN-SY-STY-NBR WCU1700-IN-SY-STY-NBR ; 
      15 WCU1700-IN-SY-COLR-CD-ID WCU1700-IN-SY-COLR-CD-ID ; 
      15 WCU1700-IN-XDM-DIM-CD WCU1700-IN-XDM-DIM-CD ; 
      15 WCU1700-IN-SY-SZ-ID WCU1700-IN-SY-SZ-ID ; 
      15 WCU1700-IN-XQA-QUAL-CD WCU1700-IN-XQA-QUAL-CD ; 
      15 WCU1700-IN-CU-CUST-PROD-ID WCU1700-IN-CU-CUST-PROD-ID ; 
      15 WCU1700-IN-CU-PROD-COLR-NM WCU1700-IN-CU-PROD-COLR-NM ; 
      15 WCU1700-IN-CU-PROD-SZ-ID WCU1700-IN-CU-PROD-SZ-ID ; 
      15 WCU1700-IN-GET-XTRA-SIZE-FL WCU1700-IN-GET-XTRA-SIZE-FL ; 
      15 WCU1700-IN-NEXT-STYLE-SIZE WCU1700-IN-NEXT-STYLE-SIZE ; 
      15 WCU1700-IN-NEXT-CU-PROD-SIZE WCU1700-IN-NEXT-CU-PROD-SIZE ; 
    10 WCU1700-RETURN-INFO WCU1700-RETURN-INFO ; 
      15 WCU1700-RETURN-CODE WCU1700-RETURN-CODE ; 
      15 WCU1700-RETURN-MSG WCU1700-RETURN-MSG ; 
      15 WCU1700-MORE-SIZES-FL WCU1700-MORE-SIZES-FL ; 
      15 WCU1700-VCUCPX01-DATA WCU1700-VCUCPX01-DATA [24] ; 
        20 CU-CUSKU-ID CU-CUSKU-ID ; 
        20 XNX-DEPT-ID-XREF XNX-DEPT-ID-XREF ; 
        20 CU-PROD-XREF-EDT CU-PROD-XREF-EDT ; 
        20 CU-CUST-PROD-ID CU-CUST-PROD-ID ; 
        20 CU-PROD-NM CU-PROD-NM ; 
        20 CU-PROD-SNM CU-PROD-SNM ; 
        20 CU-PROD-COLR-NM CU-PROD-COLR-NM ; 
        20 CU-PROD-SZ-ID CU-PROD-SZ-ID ; 
        20 CU-PROD-SZ-NM CU-PROD-SZ-NM ; 
        20 XGP-GPC-CD XGP-GPC-CD ; 
        20 SY-STY-NBR SY-STY-NBR ; 
        20 SY-COLR-CD-ID SY-COLR-CD-ID ; 
        20 XDM-DIM-CD XDM-DIM-CD ; 
        20 SY-SZ-ID SY-SZ-ID ; 
        20 XQA-QUAL-CD XQA-QUAL-CD ; 
        20 CU-CUST-RTL-PRC CU-CUST-RTL-PRC ; 
        20 CU-CUST-SPCL-PRC CU-CUST-SPCL-PRC ; 
        20 CU-SPCL-PRC-EDT CU-SPCL-PRC-EDT ; 
        20 CU-SUGG-RTL-PRC CU-SUGG-RTL-PRC ; 
        20 CU-HANG-XGP-CD CU-HANG-XGP-CD ; 
        20 CU-HANG-STY-NBR CU-HANG-STY-NBR ; 
        20 PK-LABL-CD1 PK-LABL-CD1 ; 
        20 PK-LABL-CD2 PK-LABL-CD2 ; 
        20 YLA-LABL-ATCH-CD1 YLA-LABL-ATCH-CD1 ; 
        20 YLA-LABL-ATCH-CD2 YLA-LABL-ATCH-CD2 ; 
        20 CU-HANG-CRTN-CLS CU-HANG-CRTN-CLS ; 
        20 CU-VEND-CLS-ID CU-VEND-CLS-ID ; 
        20 CU-SKU-COMNT1 CU-SKU-COMNT1 ; 
        20 CU-SKU-COMNT2 CU-SKU-COMNT2 ; 
        20 CU-SKU-COMNT3 CU-SKU-COMNT3 ; 
        20 XDZ-DATA-DIST-CD XDZ-DATA-DIST-CD ; 
        20 OP-SMPL-RQT-ID OP-SMPL-RQT-ID ; 
        20 CU-BUY-SESN-ID CU-BUY-SESN-ID ; 
        20 CU-COST-ID CU-COST-ID ; 
        20 OP-CASE-LOT-NBR OP-CASE-LOT-NBR ; 
        20 WCU1700-CU-OVRD-EXISTS-FL WCU1700-CU-OVRD-EXISTS-FL ; 
      15 WCU1700-ERRDIAG-KEY WCU1700-ERRDIAG-KEY ; 
    10 WCU1700-FILLER WCU1700-FILLER ; 
end // end WCU1700

// formatted product nbr
DataItem OB0GMPRD char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0GW-CASE-LOT-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-DEL-ZERO-OVRD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-FIRST-TRY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ts subscript for new ord
DataItem OB0GW-NEW-ORD-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OB0GW-NIKE-STY-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// booking season year - cc
DataItem OB0GW-OP-BK-00 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// booking season year - cc
DataItem OB0GW-OP-BK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// booking season year - yy
DataItem OB0GW-OP-BK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// booking season year - yy
DataItem OB0GW-OP-BK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-SPCL-MK-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0GW-UPD-CASE-LOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-VALID-PROD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-VBCPOX02-EXISTS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-VCUCPX01-EXISTS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wcu1700 found fl
DataItem OB0GW-WCU1710-EXISTS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change flag
DataItem OB0GWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product
DataItem OB0GWMS1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted product
DataItem OB0GWMS2 char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// is now on suborder
DataItem OB0GWMS3 char(19)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted order
DataItem OB0GWMS4 char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formatted camsg
DataItem OB0GWMSG char(52)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product description
DataItem OB0GWPDS char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// period 1
DataItem OB0GWPR1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// period 2
DataItem OB0GWPR2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript 1
DataItem OB0GWSB1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript 2
DataItem OB0GWSB2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript 5
DataItem OB0GWSB5 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// style color abbrev.
DataItem OB0GWSCA char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// value ' '
DataItem OB0GWSPC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// short style number
DataItem OB0GWSSN char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SPLIT ITEM FLAG
DataItem OB0GWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// overrides exist for size
DataItem WCU1700-CU-OVRD-EXISTS-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu-prod-xref-edt
DataItem WCU1700-CU-PROD-XREF-EDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// formatted error diag key
DataItem WCU1700-ERRDIAG-KEY char(75)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler for rec size 8192
DataItem WCU1700-FILLER char(170)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer company id
DataItem WCU1700-IN-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// CU-CUST-PROD-ID
DataItem WCU1700-IN-CU-CUST-PROD-ID char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-cu-po-line-nbr
DataItem WCU1700-IN-CU-PO-LINE-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cu-prod-colr-nm
DataItem WCU1700-IN-CU-PROD-COLR-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu-prod-sz-id
DataItem WCU1700-IN-CU-PROD-SZ-ID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// look at dordb flag
DataItem WCU1700-IN-DORDB-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// get extra sizes flag
DataItem WCU1700-IN-GET-XTRA-SIZE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// next cust size to get
DataItem WCU1700-IN-NEXT-CU-PROD-SIZE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// next size to get
DataItem WCU1700-IN-NEXT-STYLE-SIZE smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CUST ORD ID
DataItem WCU1700-IN-OP-CUST-ORD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PART CHAR
DataItem WCU1700-IN-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_COLR_CD_ID
DataItem WCU1700-IN-SY-COLR-CD-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_STY_NBR
DataItem WCU1700-IN-SY-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_SZ_ID
DataItem WCU1700-IN-SY-SZ-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XDM_DIM_CD
DataItem WCU1700-IN-XDM-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XGP_GPC_CD
DataItem WCU1700-IN-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XQA_QUAL_CD
DataItem WCU1700-IN-XQA-QUAL-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu1700 inquiry option
DataItem WCU1700-INQUIRY-OPTION char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// more sizes flag
DataItem WCU1700-MORE-SIZES-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// info to pass to cu1700
DataItem WCU1700-PASSING-INFO char(104)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// passing record for cu1700
DataItem WCU1700-PASSING-RECORD char(8158)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu1700 return key
DataItem WCU1700-RETURN-CODE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// info retruned from cu1700
DataItem WCU1700-RETURN-INFO char(7884)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu1700 error message
DataItem WCU1700-RETURN-MSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cust xref data
DataItem WCU1700-VCUCPX01-DATA char(322)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer department id
DataItem WCU1700-XNX-DEPT-ID-XREF smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

