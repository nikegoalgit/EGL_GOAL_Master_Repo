package ob0z;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ob.common.*;
import ta.common.*;
//*** PROGRAM=OB0Z ****
// ; update dordb.vbmsgd01 table with airspeed messages
// ;
// ;
// ; maintenance:
// ;
// ; 06/15/94  craine  change to reflect new virtual airspeed
// ;                   source programs, and add levels 4, 5.
// ; 10/26/94  schase  change to obwrec.
// ; 06/02/95  CRAINE  change to obwrec.
// ; 08/07/95  craine  DATABASE CHANGES
// ; 06/03/97  rgilli  YR2000 - Regen to ensure correct ver.
// ;                            of xx0xs01 is included.
// *********************
Program OB0Z type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OB0ZW01 OB0ZW01; // record
  OB6REC OB6REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OB0ZM.OB0ZM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0Z000: OB0Z000();
    goto OB0Z010;
    OB0Z010: OB0Z010();
    goto OB0Z010;
  end // end main
end // end OB0Z

// MAIN EXECUTE PROCESS
Function OB0Z000()

  OB0ZS01(); /* initialize OB0x application*/


end // end OB0Z000

// CONVERSE/ AFTER PROCESS
Function OB0Z010()

  converseLib.clearScreen();
  
  converseVar.segmentedMode = 1; /* force segmented converse mode*/

  converse OB0ZM001 ;

  OB0ZW01.OB0ZWERR = "N"; /* init error flag*/
  converseLib.validationFailed(0); /* init error msg*/


    /* RESET FIELD ATTRIBUTES*/

  OB0ZS05();


    /* EDIT MAP*/

  if (OB0ZM001.OB0ZMCTX != OB6REC.OB6MSGDS /* message desc changed*/
   || OB0ZM001.OB0ZMFAP != OB6REC.XXXPGMNO /* or pgm changed*/
   || OB0ZM001.OB0ZMTYP != OB6REC.OB7MSGTP /* or message type*/
   || OB0ZM001.OB6MSPGM != OB6REC.OB6MSPGM /* or source pgm chg'd*/
   || OB0ZM001.OB6MSLVL != OB6REC.OB6MSLVL) /* or level changed*/
    OB0ZS10();
  end


    /* BUILD MAP/UPDATE DATABASE*/

  if (converseVar.eventKey is enter
   && OB0ZW01.OB0ZWERR == "N") /* no errors*/
    if (OB0ZM001.OB0ZMCTX != OB6REC.OB6MSGDS /* message desc changed*/
     || OB0ZM001.OB0ZMFAP != OB6REC.XXXPGMNO /* program number changed*/
     || OB0ZM001.OB0ZMTYP != OB6REC.OB7MSGTP /* or message type*/
     || OB0ZM001.OB6MSPGM != OB6REC.OB6MSPGM /* or source pgm chg'd*/
     || OB0ZM001.OB6MSLVL != OB6REC.OB6MSLVL) /* or level changed*/
      OB0ZS30(); /* update database with new message*/
    else
      if (OB0ZM001.OB0ZMMNO != " ") /* a message number exists*/
        OB0ZS02(); /* build new map*/
      end
    end
  end

    /* EDIT PFKEYS*/

  OB0ZSPF();


end // end OB0Z010

// INITIALIZE OB0F APPLICATION
Function OB0ZS01()

    /* SET RECORDS EMPTY*/

  set OB6REC empty;
  set OB0ZW01 empty;
  set ERRSQLCA empty;
  set SQLCA empty;
  set TA1REC empty;
  set XX0XW01 empty;

  XX0XS01();

  OB6REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OB6REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  set OB0ZM001 empty;


end // end OB0ZS01

// BUILD MAP
Function OB0ZS02()

  OB6REC.OB6MSGNB = OB0ZM001.OB0ZMMNO; /* format message number*/


  call "IO5200" ("S ", SQLCA, OB6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* good update*/
    OB0ZM001.OB0ZMFAP = OB6REC.XXXPGMNO; /* format map fix appl*/
    OB0ZM001.OB0ZMTXT = OB6REC.OB6MSGDS; /* format map message text*/
    OB0ZM001.OB0ZMCTX = OB6REC.OB6MSGDS; /* format map message text*/
    OB0ZM001.OB0ZMTYP = OB6REC.OB7MSGTP; /* format map message type*/
    OB0ZM001.OB6MSPGM = OB6REC.OB6MSPGM; /* format message source pgm*/
    OB0ZM001.OB6MSLVL = OB6REC.OB6MSLVL; /* format message level*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
      OB0ZW01.OB0ZWERR = "Y"; /* set error flag on*/
      set OB0ZM001.OB0ZMMNO cursor; /* set cursor*/
      OB0ZM001.VAGen_EZEMSG = "NO MESSAGE FOUND";
    else
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5200  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0ZS02 "; /* statement group*/
    end
  end


end // end OB0ZS02

// RESET FIELD ATTRIBUTES
Function OB0ZS05()

  set OB0ZM001.OB0ZMMNO cursor, initialAttributes; /* message number*/
  set OB0ZM001.OB0ZMTYP initialAttributes; /* message type*/
  set OB0ZM001.OB0ZMFAP initialAttributes; /* error fix application*/
  set OB0ZM001.OB0ZMTXT initialAttributes; /* message text displayed*/
  set OB0ZM001.OB0ZMCTX initialAttributes; /* new/changed message text*/
  set OB0ZM001.OB6MSPGM initialAttributes; /* new/changed message text*/
  set OB0ZM001.OB6MSLVL initialAttributes; /* new/changed message text*/


end // end OB0ZS05

// EDIT MAP FIELDS
Function OB0ZS10()

    /* EDIT FIX APPLICATION*/

  OB0ZS15();


    /* EDIT MESSAGE TYPE*/

  OB0ZS20();

    /* EDIT MESSAGE SOURCE*/

  OB0ZS22();

    /* EDIT MESSAGE LEVEL*/

  OB0ZS24();
end // end OB0ZS10

// EDIT ERROR FIX APPLICATION
Function OB0ZS15()

  if (OB0ZM001.OB0ZMTYP != " ") /* a message type was entered*/
    OB0ZW01.OB0ZWFAP = OB0ZM001.OB0ZMFAP; /* format appl name*/

    if (OB0ZW01.OB0ZWSYS == "OB0") /* verify 'OB0' system*/
       /* next sentence*/
    else
      OB0ZW01.OB0ZWERR = "Y"; /* set error flag on*/
      OB0ZM001.VAGen_EZEMSG = "INVALID APPLICATION NAME FOR FIX";
      set OB0ZM001.OB0ZMFAP cursor, bold;
    end
  end


end // end OB0ZS15

// EDIT MESSAGE TYPE
Function OB0ZS20()

  if (OB0ZM001.OB0ZMMNO == " ") /* no message number entered*/
    return;
  end

  if (OB0ZM001.OB0ZMTYP == "E" /* error message*/
   || OB0ZM001.OB0ZMTYP == "H") /* hold message*/
     /* next sentence*/
  else
    OB0ZW01.OB0ZWERR = "Y"; /* set error flag on*/
    OB0ZM001.VAGen_EZEMSG = "MESSAGE TYPE MUST BE E OR H";
    set OB0ZM001.OB0ZMTYP cursor, bold;
    return;
  end


  if (OB0ZM001.OB0ZMTYP == "E" /* error message*/
   && OB0ZM001.OB0ZMTYP == " ") /* and fix program missing*/
    OB0ZW01.OB0ZWERR = "Y"; /* set error flag on*/
    OB0ZM001.VAGen_EZEMSG = "APPLICATION NAME FOR FIX IS REQUIRED";
    set OB0ZM001.OB0ZMFAP cursor, bold;
  end


end // end OB0ZS20

// edit message source
Function OB0ZS22()

  if (OB0ZM001.OB0ZMMNO == " ") /* no message number entered*/
    return;
  end


  if (OB0ZM001.OB6MSPGM == "OP2830"
   || OB0ZM001.OB6MSPGM == "OB1040"
   || OB0ZM001.OB6MSPGM == "OB1380"
   || OB0ZM001.OB6MSPGM == "OB1390"
   || OB0ZM001.OB6MSPGM == "OB1430"
   || OB0ZM001.OB6MSPGM == "OB1600"
   || OB0ZM001.OB6MSPGM == "OB1610"
   || OB0ZM001.OB6MSPGM == "OB1640"
   || OB0ZM001.OB6MSPGM == "OB1650"
   || OB0ZM001.OB6MSPGM == "OB1810"
   || OB0ZM001.OB6MSPGM == "OB1830"
   || OB0ZM001.OB6MSPGM == "OB1840"
   || OB0ZM001.OB6MSPGM == "OB1880")
     /* ok*/
  else
    OB0ZW01.OB0ZWERR = "Y"; /* set error flag on*/
    OB0ZM001.VAGen_EZEMSG = "INVALID SOURCE PROGRAM FOR AIRSPEED SYSTEM  ";
    set OB0ZM001.OB6MSPGM cursor, bold;
  end


end // end OB0ZS22

// edit message level
Function OB0ZS24()

  if (OB0ZM001.OB0ZMMNO == " ") /* no message number entered*/
    return;
  end


  if (OB0ZM001.OB6MSLVL == "1"
   || OB0ZM001.OB6MSLVL == "2"
   || OB0ZM001.OB6MSLVL == "3"
   || OB0ZM001.OB6MSLVL == "4"
   || OB0ZM001.OB6MSLVL == "5")
     /* ok*/
  else
    OB0ZW01.OB0ZWERR = "Y"; /* set error flag on*/
    OB0ZM001.VAGen_EZEMSG = "USE 1, 2, 3, 4, OR 5 FOR MSG LEVEL";
    set OB0ZM001.OB6MSLVL cursor, bold;
  end


end // end OB0ZS24

// UPDATE MESSAGE ON DATABASE
Function OB0ZS30()

    /* MOVE MAP FIELDS TO OB6REC FOR DATABASE UPDATE*/

  OB0ZS35();


  call "IO5200" ("U ", SQLCA, OB6REC) {isNoRefresh = yes, isExternal = yes};

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();

  if (SQLCA.VAGen_SQLCODE == 0) /* good update*/
    OB0ZM001.VAGen_EZEMSG = "MESSAGE SUCCESSFULLY UPDATED";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* message not found*/
      OB0ZS40(); /* add new message*/
    else
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5200  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0ZS30 "; /* statement group*/
    end
  end


end // end OB0ZS30

// FORMAT OB6REC FIELDS
Function OB0ZS35()

  OB6REC.OB6MSGNB = OB0ZM001.OB0ZMMNO; /* message number*/
  OB6REC.XXXPGMNO = OB0ZM001.OB0ZMFAP; /* fix program number*/
  OB6REC.OB6MSGDS = OB0ZM001.OB0ZMCTX; /* new/changed message text*/
  OB6REC.OB7MSGTP = OB0ZM001.OB0ZMTYP; /* new/changed message type*/
  OB6REC.OB6MSPGM = OB0ZM001.OB6MSPGM; /* new/changed source pgm*/
  OB6REC.OB6MSLVL = OB0ZM001.OB6MSLVL; /* new/changed level ind*/
  OB6REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* change date*/
  OB6REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* change time*/

end // end OB0ZS35

// ADD NEW MESSAGE TO DATABASE
Function OB0ZS40()

  OB6REC.ZZZSDT = XX0XW01.XX0XWDAT; /* setup date*/
  OB6REC.ZZZSTM = XX0XW01.XX0XWTIM; /* setup time*/
  OB6REC.ZZZCHGCT = 0;

  call "IO5200" ("A ", SQLCA, OB6REC) {isNoRefresh = yes, isExternal = yes};

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit();

  if (SQLCA.VAGen_SQLCODE == 0) /* good update*/
    OB0ZM001.VAGen_EZEMSG = "MESSAGE SUCCESSFULLY ADDED";
  else
    TA1REC.TA1DBASE = "DORDB"; /* database name*/
    TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5200  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0ZS30 "; /* statement group*/
  end


end // end OB0ZS40

// EDIT PFKEYS FOR OB0X
Function OB0ZSPF()


  if (converseVar.eventKey is pf3)
    XSPF4();
  end

  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OB0ZW01.OB0ZWERR = "Y"; /* set 'OB' error flag*/
  end


end // end OB0ZSPF

Record OB0ZW01 type basicRecord
  10 OB0ZWERR OB0ZWERR ; 
  10 OB0ZWFAP OB0ZWFAP ; 
    15 OB0ZWSYS OB0ZWSYS ; 
    15 OB0ZWAPP OB0ZWAPP ; 
end // end OB0ZW01

// application xref
DataItem OB0ZWAPP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ob0x appl error flag
DataItem OB0ZWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error fix appl name
DataItem OB0ZWFAP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// system prefix
DataItem OB0ZWSYS char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

