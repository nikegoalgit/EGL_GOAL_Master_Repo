package ob0j;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
//*** PROGRAM=OB0J ****
// APPLICATION OVERVIEW:
// 
// This application is entered through the use of the PF15
// key, from one of eleven applications.
// 
// It will display all of the NIKE Department Codes allowed
// for the Customer and Order being displayed.
// 
// It will display and update any Special Instructions and
// Labels for the Order.
// 
//   DATE      NAME    DESCRIPTION
// --------   ------   ----------------------------------------
// 06/27/90   ZLEFKO   Create Program
// 02/15/91   dmeier   regen for database changes
// 12/09/91   JLoyer   Hold ob4rec.op4txtof in w01 so we don't
//                     lose the ovrd-fl values when text is
//                     updated.
//                     Chgd: s14, s20, s42, s50, s52, 60, w01.
// 03/20/92   tmorri   modified 000, 010, s30 - updates not
//                     allowed for order status 'ca' or 'cl'.
// 05/19/94   scantr   virtual airspeed project: chgd obwrec,
//                     xsobs02, xsobs03, added xsobs10
// 05/24/94   scantr   changed xsobs03
// 06/15/94   CRAINE   REWRITE TO CALL RELATIONAL EDIT
// 08/18/94   craine   changes to xsobs-limited-edit,
//                     xsobs-full-edit.
// 08/30/94   craine   changes to xsobs-full-edit and block dl
//                     and ld orders from updating
// 09/06/94   craine   change to obwrec
// 10/11/94   schase   changed overide flag from 'n' to 'y'.s42
// 10/25/94   craine   change to obwrec
// 01/30/94   craine   chg to xsobs-upd-oba-edit
// 04/27/95   craine   allow for new yobcd 'pd' and 'lp'.
// 08/07/95   craine   DATABASE CHANGES
// 06/03/97   rgilli   YR2000 - Regen to ensure correct ver.
//                              of xx0xs01 is included.
// *********************
Program OB0J type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OB0JW01 OB0JW01; // record
  OB1REC OB1REC; // record
  OB4REC OB4REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBKREC OBKREC; // record
  OBLEREC OBLEREC; // record
  OBWREC OBWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XNDTBL; // table
  use OB0JM.OB0JM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0J000: OB0J000();
    goto OB0J010;
    OB0J010: OB0J010();
    goto OB0J010;
  end // end main
end // end OB0J

Function OB0J000()
     /* Check csp and order batch security*/

  XSENTRY();
  XSOBS01();

     /* Initialize application - init records, get zz date/time,*/
                              /* save map name for XSOBE## sgrp's*/
  OB0JS01();

     /* Set -911 processing flag*/

  OBWREC.OBWER911 = "N";

     /* Determine if batch edit is running*/

  XSOBS02();

     /* Read current order header*/

  XSOBS03();


     /* Display commarea message*/

  OB0JM001.CAMSG = OBWREC.CAMSG;
  OBWREC.CAMSG = " ";


     /* Build map for display*/

  OB0JS05();


     /* Edit map*/

  if (OB1REC.OB1PARLF != "Y" /* not partial load*/
   && OB1REC.YOBCD != "XL"   /* not cancelled*/
   && OB1REC.YOBCD != "CA"   /* not cleared availability*/
   && OB1REC.YOBCD != "LP"   /* not lost demand reported*/
   && OB1REC.YOBCD != "PD")  /* not postponed demand reported*/
    OB0JS35();
  end


end // end OB0J000

Function OB0J010()

  converseLib.clearScreen();
   /* replace mapname and uncomment*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/

  converse OB0JM001 ;

     /* Init error stuff*/

  OBWREC.OBWERRFL = "N";
  converseLib.validationFailed(0);
  OBWREC.OBWHELP = OB0JM001.CAMSG; /* save for help screen*/
  OB0JM001.CAMSG = " "; /* replace mapname and uncomment*/


     /* Reset field attributes*/

  OB0JS30();


     /* Edit map(no matter what pfkey is used)*/

  if (OB1REC.YOBCD != "XL" /* not cancelled*/
   && OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "LP" /* not lost demand reported*/
   && OB1REC.YOBCD != "PD") /* not postponed demand reported*/
    OB0JS35();

       /* Update database*/

    if (OBWREC.OBWERRFL == "N"
     && converseVar.eventKey is enter)
      OB0JS40();

      /* if something changed on the order*/
      /* call relational edit subprogram*/
      if (OB0JW01.OB0JWUPD == "Y")
        OBWREC.OBW-EDIT-FUNCTION = "4"; /* edit text records*/
        XSOBS-ONLINE-EDIT();
      end

    end

  end


     /* Edit PF Keys*/

  OB0JSPF();

end // end OB0J010

// INITIALIZE OB0J APPLICATION
Function OB0JS01()
       /* ***************************************************/
       /* *  INITIALIZE OB0J APPLICATION.                  **/
       /* ***************************************************/

  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OB1REC empty;
  set OB4REC empty;
  set OB8REC empty;
  set OBFEREC empty;
  set OBLEREC empty;
  set TAEREC empty;
  set TA1REC empty;
  set TA5REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set XX0XW01 empty;

  set OB0JM001 empty;
  set OB0JW01 empty;

  XX0XS01();
  OBWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OBWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  TA1REC.TA1MAP = "OB0JM001"; /* map name*/


end // end OB0JS01

// BUILD MAP
Function OB0JS05()
       /* ****************************************************/
       /* *         BUILD MAP                               **/
       /* ****************************************************/

  OB0JM001.OB0JMPRC = "OB0J010"; /* process name*/
  OB0JM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

  OB0JM001.OBWORDER = OBWREC.OBWORDER; /* formatted order number*/
  OB0JM001.OBWCUST = OBWREC.OBWCUST; /* formatted customer number*/
  OB0JM001.OP1CUPO = OBWREC.OP1CUPO; /* purchase order number*/
  OB0JM001.KUMSTRNM = OBWREC.KUMSTRNM; /* customer store name*/

  OB0JS10(); /* get instructions*/

  OB0JS16(); /* get labels*/

  OB0JS25(); /* build NIKE department codes list*/

  OB0JS30(); /* reset field attributes*/


end // end OB0JS05

// GET INSTRUCTIONS
Function OB0JS10()
       /* **************************************************/
       /* *    GET INSTRUCTIONS                           **/
       /* **************************************************/

  OB0JS12(); /* open cursor text database*/

  if (SQLCA.VAGen_SQLCODE == 0) /* successful open*/
    OB0JS14(); /* get next text rec, move to map*/
  end

  set OBKREC empty;
  OBKREC.OBKTASK = "CS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/


end // end OB0JS10

// OPEN CURSOR, INSTRUCTIONS
Function OB0JS12()
       /* **************************************************/
       /* *    OPEN CURSOR TEXT DATABASE                  **/
       /* **************************************************/

  set OBKREC empty;
  set SQLCA empty;
  set OB4REC empty;
  OBKREC.OBKTASK = "SS";
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "I";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* continue                    ;    OK*/
  else
    TA1REC.TA1LOCAT[1] = "SS"; /* transaction*/
    TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
    TA1REC.TA1LOCAT[3] = "OB0JS12"; /* stmt group*/
    TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
    TA1REC.TA1DBASE = "DORDB"; /* database name*/
    TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      XSOBS04();
    else /* all other codes - abort*/
      XSOBEDC();
    end
  end


end // end OB0JS12

// GET NEXT INST, MOVE TO MAP
Function OB0JS14()
       /* ****************************************************/
       /* *  GET NEXT INSTRUCTION, MOVE TO MAP              **/
       /* ****************************************************/

  OB0JS22(); /* select next text record*/

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  while (SQLCA.VAGen_SQLCODE == 0
   && OB0JW01.OB0JWSUB <= 10)
    OB0JM001.OB0JMDPT[OB0JWSUB] = OB4REC.XNDCD; /* department code*/
    OB0JM001.OP4TXT[OB0JWSUB] = OB4REC.OP4TXT; /* text*/
    OB0JW01.OB0JWIOF[OB0JWSUB] = OB4REC.OP4TXTOF; /* ovrd-flag*/
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1; /* increment index*/

    OB0JS22(); /* select next text record*/
  end


end // end OB0JS14

// GET LABELS
Function OB0JS16()
       /* **************************************************/
       /* *    GET LABELS                                 **/
       /* **************************************************/

  OB0JS18(); /* open cursor text database*/

  if (SQLCA.VAGen_SQLCODE == 0) /* successful open*/
    OB0JS20(); /* get next text rec, move to map*/
  end

  set OBKREC empty;
  OBKREC.OBKTASK = "CS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/


end // end OB0JS16

// OPEN CURSOR FOR LABELS
Function OB0JS18()
       /* **************************************************/
       /* *    OPEN CURSOR TEXT DATABASE                  **/
       /* **************************************************/

  set OBKREC empty;
  set SQLCA empty;
  set OB4REC empty;
  OBKREC.OBKTASK = "SS";
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "L";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* continue                    ;    OK*/
  else
    TA1REC.TA1LOCAT[1] = "SS"; /* transaction*/
    TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
    TA1REC.TA1LOCAT[3] = "OB0JS18"; /* stmt group*/
    TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
    TA1REC.TA1DBASE = "DORDB"; /* database name*/
    TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      XSOBS04();
    else /* all other codes - abort*/
      XSOBEDC();
    end
  end


end // end OB0JS18

// GET NEXT LBL, MOVE TO MAP
Function OB0JS20()
       /* ****************************************************/
       /* *    GET NEXT LABEL, MOVE TO MAP                  **/
       /* ****************************************************/

  OB0JS22(); /* select next text record*/

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  while (SQLCA.VAGen_SQLCODE == 0
   && OB0JW01.OB0JWSUB <= 2)
    OB0JM001.OB0JMSPL[OB0JWSUB] = OB4REC.OP4TXT; /* special label*/
    OB0JW01.OB0JWLOF[OB0JWSUB] = OB4REC.OP4TXTOF; /* ovrd-flag*/
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1; /* increment index*/

    OB0JS22(); /* select next text record*/
  end


end // end OB0JS20

// SELECT NECT TEXT RECORD
Function OB0JS22()
       /* ****************************************************/
       /* *    SELECT NEXT TEXT RECORD                      **/
       /* ****************************************************/

  set OBKREC empty;
  OBKREC.OBKTASK = "SN";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue                    ;    OK*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* continue                    ;    EXIT*/
    else
      TA1REC.TA1LOCAT[1] = "SN"; /* transaction*/
      TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
      TA1REC.TA1LOCAT[3] = "OB0JS22"; /* stmt group*/
      TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
      if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
        XSOBS04();
      else /* all other codes - abort*/
        XSOBEDC();
      end
    end
  end


end // end OB0JS22

// BUILD NIKE DEPT CODES
Function OB0JS25()
       /* ****************************************************/
       /* *    BUILD NIKE DEPARTMENT CODES LIST             **/
       /* ****************************************************/

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  sysVar.arrayIndex = 1; /* initialize table index*/
  while (OB0JW01.OB0JWSUB <= 26
   && XNDTBL.XNDCD[sysVar.arrayIndex] != "99") /* end of table*/
    if (XNDTBL.XNDINSTF[sysVar.arrayIndex] == "Y"
     && XNDTBL.XNDSOFL[sysVar.arrayIndex] == "Y")
      OB0JM001.XNDCD[OB0JWSUB] = XNDTBL.XNDCD[sysVar.arrayIndex];
      OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1;
    end
    if (XNDTBL.XNDCD[sysVar.arrayIndex] == "INVO" /* exeception*/
     || XNDTBL.XNDCD[sysVar.arrayIndex] == "DIST" /* exeception*/
     || XNDTBL.XNDCD[sysVar.arrayIndex] == "TRAF") /* exeception*/
      OB0JM001.XNDCD[OB0JWSUB] = XNDTBL.XNDCD[sysVar.arrayIndex];
      OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1;
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end


end // end OB0JS25

// RESET FIELD ATTRIBUTES
Function OB0JS30()
       /* **************************************************/
       /* *      RESET FIELD ATTRIBUTES                   **/
       /* **************************************************/

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  while (OB0JW01.OB0JWSUB <= 10)
    if (OB1REC.YOBCD == "XL" /* cancelled*/
     || OB1REC.YOBCD == "CA" /* cleared availability*/
     || OB1REC.YOBCD == "LP" /* lost demand reported*/
     || OB1REC.YOBCD == "PD") /* postponed demand reported*/
      set OB0JM001.OB0JMDPT[OB0JWSUB] skip;
      set OB0JM001.OP4TXT[OB0JWSUB] skip;
    else
      set OB0JM001.OB0JMDPT[OB0JWSUB] initialAttributes;
      set OB0JM001.OB0JMDPT[1] cursor, initialAttributes;
      set OB0JM001.OP4TXT[OB0JWSUB] initialAttributes;
    end
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1; /* increment screen index*/
  end

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  while (OB0JW01.OB0JWSUB <= 26)
    set OB0JM001.XNDCD[OB0JWSUB] initialAttributes;
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1; /* increment screen index*/
  end

  if (OB1REC.YOBCD == "XL" /* cancelled*/
   || OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    set OB0JM001.OB0JMSPL[1] skip;
    set OB0JM001.OB0JMSPL[2] skip;
  else
    set OB0JM001.OB0JMSPL[1] initialAttributes;
    set OB0JM001.OB0JMSPL[2] initialAttributes;
  end


  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    if (OB0JM001.CAMSG == " ")
      OB0JM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end

end // end OB0JS30

// EDIT MAP
Function OB0JS35()
       /* **************************************************/
       /* *    EDIT DEPARTMENT CODES ONLY                 **/
       /* **************************************************/

  OB0JW01.OB0JWSUB = 10; /* initialize screen index*/
  while (OB0JW01.OB0JWSUB > 0)
    if (OB0JM001.OB0JMDPT[OB0JWSUB] == " ") /* department code is blanks*/
      if (OB0JM001.OP4TXT[OB0JWSUB] != " ") /* text is present*/
        converseLib.validationFailed(130); /* department code required*/
        OBWREC.OBWERRFL = "Y"; /* set error flag*/
        set OB0JM001.OB0JMDPT[OB0JWSUB] cursor, bold;
      end
    else
      sysVar.arrayIndex = 1; /* initialize index*/
      if (OB0JM001.OB0JMDPT[OB0JWSUB] in XNDTBL.XNDCD /* search xndtbl*/
       && XNDTBL.XXXSTAT[sysVar.arrayIndex] == "A")   /* verify status*/
        if (XNDTBL.XNDINSTF[sysVar.arrayIndex] == "Y" /* verify flags*/
         && XNDTBL.XNDSOFL[sysVar.arrayIndex] == "Y")
            /* OK - continue*/
        else
          if (OB0JM001.OB0JMDPT[OB0JWSUB] == "INVO"
           || OB0JM001.OB0JMDPT[OB0JWSUB] == "DIST"
           || OB0JM001.OB0JMDPT[OB0JWSUB] == "TRAF")
              /* OK - continue*/
          else
            converseLib.validationFailed(131); /* dept code invalid for spcl inst*/
            OBWREC.OBWERRFL = "Y"; /* set error flag*/
            set OB0JM001.OB0JMDPT[OB0JWSUB] cursor, bold;
          end
        end
      else
        converseLib.validationFailed(82); /* invalid department code*/
        OBWREC.OBWERRFL = "Y"; /* set error flag*/
        set OB0JM001.OB0JMDPT[OB0JWSUB] cursor, bold;
      end
    end
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB - 1; /* decrement screen index*/
  end


end // end OB0JS35

// UPDATE ROUTINE
Function OB0JS40()
       /* ****************************************************/
       /* *         UPDATE ROUTINE                          **/
       /* ****************************************************/

  OB0JW01.OB0JWUPD = "N";

  OB0JW01.OB0JWCHG = "N";
  OB0JS41(); /* check for change to labels*/

  if (OB0JW01.OB0JWCHG == "Y") /* need to update labels*/
    OB1REC.OP1SPLBF = "N"; /* initialize Header flags*/
    OB0JS45(); /* delete special labels (1 & 2)*/
    OB0JS50(); /* add special labels (1 & 2)*/
    OB0JW01.OB0JWUPD = "Y"; /* order will be updated*/
  end

  OB0JW01.OB0JWCHG = "N";
  OB0JS51(); /* check for change to instructions*/

  if (OB0JW01.OB0JWCHG == "Y") /* need to update instructions*/
    OB1REC.OP1SPINF = "N";
    OB0JS55();
                                   /* delete special instructions (1-10)*/
    OB0JS60(); /* add special instructions (1-10)*/
    OB0JW01.OB0JWUPD = "Y"; /* order will be updated*/
  end

  if (OB0JW01.OB0JWUPD == "Y") /* need to update instructions*/
    OB0JS65(); /* update Header special flags*/
    XSOBT2C(); /* update temp storage for errors*/
  end

end // end OB0JS40

// CHECK FOR LABEL CHANGE
Function OB0JS41()
       /* **************************************************/
       /* *    GET LABELS - CHECK IF LABELS CHANGED       **/
       /* **************************************************/

  OB0JS18(); /* open cursor text database*/

  if (SQLCA.VAGen_SQLCODE == 0) /* successful open*/
    OB0JS42(); /* get label, compare to map*/
  end

  set OBKREC empty;
  OBKREC.OBKTASK = "CS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/


end // end OB0JS41

// GET LABEL, COMPARE TO MAP
Function OB0JS42()
       /* ****************************************************/
       /* *    GET NEXT LABEL, COMPARE TO MAP               **/
       /* ****************************************************/

   /* ***************************************************************/
   /* 12/09/91 JLoyer: Ob0jwlof is used to store the text record's **/
   /* Log #438         override-flag.  In airspeed, this flag      **/
   /* identifies text that has defaulted from a   **/
   /* bulk-order.  If the text is changed, reset  **/
   /* this flag to 'n'.                           **/
   /* ***************************************************************/

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  while (OB0JW01.OB0JWSUB <= 2)

    if (SQLCA.VAGen_SQLCODE == 0)
      OB0JS22(); /* select next text record*/
    end
    if (SQLCA.VAGen_SQLCODE != 0)
      set OB4REC empty;
    end

    if (OB4REC.OP4TXT != OB0JM001.OB0JMSPL[OB0JWSUB]) /* special label*/
      OB0JW01.OB0JWLOF[OB0JWSUB] = "Y"; /* ovrd-flag*/
      OB0JW01.OB0JWCHG = "Y"; /* label has changed*/
    end

    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1; /* increment index*/

  end

end // end OB0JS42

// DELETE SPECIAL LABELS
Function OB0JS45()
       /* **************************************************/
       /* *    DELETE SPECIAL LABELS (1 & 2)              **/
       /* **************************************************/

  set OBKREC empty;
  set SQLCA empty;
  set OB4REC empty;
  OBKREC.OBKTASK = "D";
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "L";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue                    ;    OK*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* continue                    ;    OK*/
    else
      TA1REC.TA1LOCAT[1] = "D "; /* transaction*/
      TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
      TA1REC.TA1LOCAT[3] = "OB0JS45"; /* stmt group*/
      TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
      if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
        XSOBS05();
      else /* all other codes - abort*/
        XSOBEDR();
      end
    end
  end


end // end OB0JS45

// ADD SPECIAL LABELS
Function OB0JS50()
       /* **************************************************/
       /* *    ADD NEW SPECIAL LABELS (1 & 2)             **/
       /* **************************************************/

  set SQLCA empty;
  set OB4REC empty;
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "L";
  OB4REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB4REC.ZZZCHGTM = OBWREC.ZZZCHGTM;
  OB0JW01.OB0JWCNT = 0;

  OB0JW01.OB0JWSUB = 1; /* initialize index*/
  while (OB0JW01.OB0JWSUB <= 2)
    if (OB0JM001.OB0JMSPL[OB0JWSUB] != " ")
      OB4REC.OP4TXT = OB0JM001.OB0JMSPL[OB0JWSUB];
      OB4REC.OP4TXTOF = OB0JW01.OB0JWLOF[OB0JWSUB]; /* ovrd-flag*/
      OB0JW01.OB0JWCNT = OB0JW01.OB0JWCNT + 1;
      OB4REC.OP4TRSEQ = OB0JW01.OB0JWCNT;
      set OBKREC empty;
      OBKREC.OBKTASK = "A";
      call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

      if (SQLCA.VAGen_SQLCODE == 0)
        OB1REC.OP1SPLBF = "Y"; /* update Header flag*/
      else
        TA1REC.TA1LOCAT[1] = "A "; /* transaction*/
        TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
        TA1REC.TA1LOCAT[3] = "OB0JS50"; /* stmt group*/
        TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
        TA1REC.TA1DBASE = "DORDB"; /* database name*/
        TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
        if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
          XSOBS05();
        else /* all other codes - abort*/
          XSOBEDR();
        end
      end
    end
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1;
  end


end // end OB0JS50

// CHECK FOR CHG TO INXTRUCTIONS
Function OB0JS51()
       /* **************************************************/
       /* *    GET INSTRUCTIONS                           **/
       /* **************************************************/

  OB0JS12(); /* open cursor text database*/

  if (SQLCA.VAGen_SQLCODE == 0) /* successful open*/
    OB0JS52(); /* get next text rec, compare to map*/
  end

  set OBKREC empty;
  OBKREC.OBKTASK = "CS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/


end // end OB0JS51

// GET INST, COMPARE TO MAP
Function OB0JS52()
       /* ****************************************************/
       /* *  GET NEXT INSTRUCTION, COMPARE TO MAP           **/
       /* ****************************************************/

   /* *******************************************************************/
   /* 12/09/91 JLoyer: Ob0jwiof is used to store the text records's   **/
   /* Log #438         over-flag.  In airspeed, this identifies text  **/
   /* that has defaulted from a bulk order.  If the  **/
   /* text is changed, reset ob0jwiof to 'n'.        **/
   /* *******************************************************************/

  OB0JW01.OB0JWSUB = 1; /* initialize screen index*/
  while (OB0JW01.OB0JWSUB <= 10)
    if (SQLCA.VAGen_SQLCODE == 0)
      OB0JS22(); /* select next text record*/
    end
    if (SQLCA.VAGen_SQLCODE == 100)
      set OB4REC empty;
    end

    if (OB4REC.XNDCD != OB0JM001.OB0JMDPT[OB0JWSUB] /* department code*/
     || OB4REC.OP4TXT != OB0JM001.OP4TXT[OB0JWSUB]) /* text*/
      OB0JW01.OB0JWIOF[OB0JWSUB] = "N"; /* ovrd-flag*/
      OB0JW01.OB0JWCHG = "Y";
    end

    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1; /* increment index*/

  end


end // end OB0JS52

// DELETE SPECIAL INSTRUCTIONS
Function OB0JS55()
       /* **************************************************/
       /* *    DELETE SPECIAL INSTRUCTIONS (10)           **/
       /* **************************************************/

  set OBKREC empty;
  set SQLCA empty;
  set OB4REC empty;
  OBKREC.OBKTASK = "D";
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "I";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* continue                    ;    OK*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* continue                    ;    OK*/
    else
      TA1REC.TA1LOCAT[1] = "D "; /* transaction*/
      TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
      TA1REC.TA1LOCAT[3] = "OB0JS55"; /* stmt group*/
      TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
      if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
        XSOBS05();
      else /* all other codes - abort*/
        XSOBEDR();
      end
    end
  end


end // end OB0JS55

// ADD SPECIAL INSTRUCTIONS
Function OB0JS60()
       /* **************************************************/
       /* *    ADD NEW SPECIAL INSTRUCTIONS (10)          **/
       /* **************************************************/

  set SQLCA empty;
  set OB4REC empty;
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "I";
  OB4REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB4REC.ZZZCHGTM = OBWREC.ZZZCHGTM;
  OB0JW01.OB0JWCNT = 0;

  OB0JW01.OB0JWSUB = 1; /* initialize index*/
  while (OB0JW01.OB0JWSUB <= 10)
    if (OB0JM001.OP4TXT[OB0JWSUB] != " ")
      OB4REC.XNDCD = OB0JM001.OB0JMDPT[OB0JWSUB];
      OB4REC.OP4TXT = OB0JM001.OP4TXT[OB0JWSUB];
      OB4REC.OP4TXTOF = OB0JW01.OB0JWIOF[OB0JWSUB]; /* ovrd-flag*/
      OB0JW01.OB0JWCNT = OB0JW01.OB0JWCNT + 1;
      OB4REC.OP4TRSEQ = OB0JW01.OB0JWCNT;
      set OBKREC empty;
      OBKREC.OBKTASK = "A";
      call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

      if (SQLCA.VAGen_SQLCODE == 0)
        OB1REC.OP1SPINF = "Y"; /* update Header flag*/
      else
        TA1REC.TA1LOCAT[1] = "A "; /* transaction*/
        TA1REC.TA1LOCAT[2] = "IO5180"; /* i/o mod*/
        TA1REC.TA1LOCAT[3] = "OB0JS60"; /* stmt group*/
        TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* type of text*/
        TA1REC.TA1DBASE = "DORDB"; /* database name*/
        TA1REC.TA1TBLVU = "VBTEXT01"; /* database view name*/
        if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
          XSOBS05();
        else /* all other codes - abort*/
          XSOBEDR();
        end
      end
    end
    OB0JW01.OB0JWSUB = OB0JW01.OB0JWSUB + 1;
  end


end // end OB0JS60

// UPDATE HEADER SPCL FLAGS
Function OB0JS65()

      /* UPDATE HEADER*/


  OB1REC.YOBCD = "NC";

  set OBFREC empty;
  set SQLCA empty;
  OB1REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB1REC.ZZZCHGTM = OBWREC.ZZZCHGTM;

  OBFREC.OBFTASK = "U ";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-update*/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* successful update*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record not found*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      OBWREC.CAMSG = "ORDER HAS BEEN MODIFIED BY ANOTHER SERVICE REP";
      XSOBP00();
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBHDR01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5160  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0JS65 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = " "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS05();
      else
        XSOBEDR(); /* abort routine - with rollback*/
      end
    end
  end

    /* set temp storage order selection to updated*/

  XSOBT1R();
  OBAREC.OBAMSEL[OBWTSF1S] = "U";
  XSOBT1U();

  OBWREC.CAMSG = "ORDER SUCCESSFULLY UPDATED";

end // end OB0JS65

// EDIT PFKEYS FOR OB0J
Function OB0JSPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    XSOBP01();
    OB0JM001.CAMSG = OBWREC.OBWHELP; /* redisplay if no help*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf6)
    XSOBP06();
  end

  if (converseVar.eventKey is pf9)
    XSOBP09();
  end

  if (converseVar.eventKey is pf13)
    XSOBP13();
  end

  if (converseVar.eventKey is pf14)
    XSOBP14();
  end

  if (converseVar.eventKey is pf15)
    XSOBP15();
  end

  if (converseVar.eventKey is pf16)
    XSOBP16();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf18)
    XSOBP18();
  end

  if (converseVar.eventKey is pf19)
    XSOBP19();
  end



  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1)
    /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end



  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    if (OB0JW01.OB0JWUPD == "Y")
      XSOBP00();
    else
      XSOBP09();
    end
  end

end // end OB0JSPF

Record OB0JW01 type basicRecord
  10 OB0JWSUB OB0JWSUB ; 
  10 OB0JWCNT OB0JWCNT ; 
  10 OB0JWCHG OB0JWCHG ; 
  10 OB0JWUPD OB0JWUPD ; 
  10 OB0JWTOF OB0JWTOF ; 
    15 OB0JWIOF OB0JWIOF [10] ; 
    15 OB0JWLOF OB0JWLOF [2] ; 
end // end OB0JW01

// inst/lbl change flag
DataItem OB0JWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sequence counter
DataItem OB0JWCNT decimal(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// spec-instr op-txt-ovrd-fl
DataItem OB0JWIOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// spec-label op-txt-ovrd-fl
DataItem OB0JWLOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript
DataItem OB0JWSUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// text override flags
DataItem OB0JWTOF char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update occured flag
DataItem OB0JWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

