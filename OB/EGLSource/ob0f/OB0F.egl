package ob0f;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import oz.common.*;
import pc.common.*;
import pg.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=OB0F ****
// ;
// ; OVERVIEW: The product summary is a list of all products on
// ;           a suborder.  The list of products was created in
// ;           temp storage when the order was selected in
// ;           OB0B.  Nine of the Order Batch applications use
// ;           the enter key to access this application.  Most
// ;           of the other applications access Product Summary
// ;           with PF9.  This application will transfer to
// ;           Product Detail Availability when products are
// ;           selected and the enter key is used.  If nothing
// ;           is selected this application will transfer back
// ;           to OB0B - Order Select.
// ;
// ; DATABASE TABLES:
// ;
// ; Order Header     DORDB.VOBHDR01    OB1REC     Input
// ; Temp Storage 4   OBF4              OBDREC     Input/Output
// ;
// ; CORPORATE TABLES:
// ;
// ; Base Order Type  DCORP.VXOB0001    XOBTBL     Input
// ; Warehouse        DCORP.VXWH0001    XWHTBL     Input
// ;
// ; PROCESSES/STATEMENT GROUPS:
// ;
// ;   OB0F000    PROC   Application entry validation
// ;   OB0F010    PROC   Converse OB0FM001 map
// ;   OB0FSUT    STMT   Update temp storage
// ;   OB0FS01    STMT   Initialization of OB0F application
// ;   OB0FS02    STMT   Build Map
// ;   OB0FS05    STMT   Load map headings
// ;   OB0FS10    STMT   Build product array
// ;   OB0FS15    STMT   Reset field attributes
// ;   OB0FS16    STMT   Set fields defined
// ;   OB0FS17    STMT   Set fields autoskip,dark
// ;   OB0FS20    STMT   Update from execute
// ;   OB0FS25    STMT   Update from converse
// ;   OB0FS26    STMT   Move map fields to temp storage
// ;   OB0FS30    STMT   Edit map fields
// ;   OB0FS35    STMT   Edit select options
// ;   OB0FS40    STMT   Edit delete select option
// ;   OB0FS45    STMT   Edit page number
// ;   OB0FS50    STMT   Edit PF7 and PF8
// ;   OB0FS55    STMT   Edit PF24
// ;   OB0FS60    STMT   Edit PF5, PF22, PF23, & Enter
// ;
// ;***********************************************************
// ;          M A I N T E N A N C E   L O G
// ;***********************************************************
// ;
// ;   DATE     NAME      DESCRIPTION OF CHANGE
// ; --------  ------    --------------------------------------
// ; 06/05/90  schase    Created.
// ; 09/21/90  craine    change to use pf13 instead of pf14
// ; 02/15/91  dmeier    regen for database changes
// ; 03/20/92  tmorri    modified s35, s55, spf, s15 - updates
// ;                     not allowed for order status 'ca' or
// ;                     'cl'.
// ; 05/19/94  scantr    virtual airspeed project: chgd obwrec,
// ;                     xsobs02, xsobs03, added xsobs10
// ; 05/19/94  scantr    changed xsobs03
// ; 06/08/94  scantr    virtual airspeed - obwrec,xsobs03
// ; 06/15/94  CRAINE    REWRITE FOR RELATIONAL EDIT
// ; 08/18/94  craine    changes to xsobs-limited-edit,
// ;                      xsobs-full-edit.
// ; 09/06/94  craine    add s70 -s79 to rebuild item temp stor
// ; 10/06/94  craine    add new xsobs-add-new-oba
// ; 10/25/94  craine    change to obwrec
// ; 11/15/94  craine    change to xsobp24
// ; 01/03/95  craine    change to obwrec
// ; 01/30/94  craine    chg to xsobs-upd-oba-edit
// ; 04/27/95  craine    allow for new yobcd 'pd' and 'lp'.
// ; 05/23/95  craine    add pf11 - map spf, s25, s27, s30, s60
// ; 07/26/95  DLIDDL    Modified to incorporate Nike Canada
// ;                     into AIRSPEED - OB0FS05.
// ; 08/07/95  CRAINE    DATABASE CHANGES.
// ; 10/21/96  DLIDDL    Prevent transferring to OB0U if nike
// ;                     product is not valid - OB0FS60/OB0FS65
// ; 02/13/97  wleong    changes to delete prepack record if
// ;                     item is deleted.  ob0fs-get-prepack
// ;                     and ob0fs-delete-prepk. added pf21 to
// ;                     go to prepack screen.
// ; 06/23/97  joldin    When a tracked ocd field is changed
// ;                     write a VSOHCR01 record
// ; 08/29/97  wleong    do not allow more than one item per
// ;                     header for msr order
// ; 10/03/97  CBRINE    Delete override & companion records
// ;                     if item is deleted. OB0FS-DEL-OVERRIDE
// ;                     and OB0FS-DEL-VOBXRF01.
// ; 11/24/97  JOLDIN    Require an ocd change reason for a
// ;                     cancel and write an dordcd.vsoscr01
// *********************
Program OB0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OB0FW01 OB0FW01; // record
  OB1REC OB1REC; // record
  OB2REC OB2REC; // record
  OB7REC OB7REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBKREC OBKREC; // record
  OBLEREC OBLEREC; // record
  OBWREC OBWREC; // record
  OBZREC OBZREC; // record
  SQLCA SQLCA; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBCPOX02 VBCPOX02; // record
  VBCSPR01 VBCSPR01; // record
  VOBXRF01 VOBXRF01; // record
  VOCITM01 VOCITM01; // record
  VSOHCR01 VSOHCR01; // record
  WOZ2090 WOZ2090; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XOBTBL; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XWHTBL; // table
  use OB0FM.OB0FM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0F000: OB0F000();

       /* flow to ob0f010*/

    goto OB0F010;


    OB0F010: OB0F010();
    goto OB0F010;
  end // end main
end // end OB0F

// MAIN EXECUTE PROCESS
Function OB0F000()

  XSENTRY(); /* check csp security*/

  XSOBS01(); /* check batch order security*/

  OB0FS01(); /* initialize OB0F application*/

  OBWREC.OBWER911 = "N"; /* init -911 flag*/

  XSOBS02(); /* check if batch edit is running*/

  if (OBWREC.OBW-GET-ITEMS-FL == "Y")
    OB0FS70(); /* reload temp storage with items for*/
                                   /* current order*/
    OBWREC.OBW-GET-ITEMS-FL = "N";
  end
  OB0FS06(); /* read company record*/

  XSOBT4R(); /* read temp storage*/

  if (OBWREC.CAMSG == " ")
    OB0FS20(); /* execute update*/
  end

  OB0FM001.CAMSG = OBWREC.CAMSG; /* format ob0fm001 camsg*/
  OBWREC.CAMSG = " "; /* clear obwrec camsg*/

  OB0FS02(); /* build map*/


end // end OB0F000

// CONVERSE/ AFTER PROCESS
Function OB0F010()

  converseLib.clearScreen();
  
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/

  converse OB0FM001 ;

  OBWREC.OBWERRFL = "N"; /* init error flag*/
  OB0FW01.OB0FWSEL = "N"; /* init select option flag*/
  converseLib.validationFailed(0); /* init error msg*/
  OBWREC.OBWHELP = OB0FM001.CAMSG; /* save for help screen*/
  OB0FM001.CAMSG = " "; /* clear map camsg*/

    /* RESET FIELD ATTRIBUTES*/

  OB0FS15();

    /* EDIT MAP*/

  OB0FS30();

    /* CONVERSE UPDATE*/

  if (OBWREC.OBWERRFL == "N") /* no errors*/
    OB0FS25();
  end

    /* EDIT PFKEYS*/

  OB0FSPF();


end // end OB0F010

// update ocd size item
Function OB0FS-CALL-OZ2090()

      /* use OZ2090 to update the VOCSIZ01 record*/

  set WOZ2090 empty;

  WOZ2090.OZ2090-OP-ORD-PART-CHAR = OB1REC.OP1PARTN;
  WOZ2090.OZ2090-OP-CUST-ORD-ID = OB1REC.OP1CUOID;
  WOZ2090.OZ2090-OP-NIKE-ORD-ID = OB1REC.OP1NORID;
  WOZ2090.OZ2090-OP-LINE-ITEM-NBR = OBWREC.OBWLNINB;
  WOZ2090.OZ2090-XOM-ORD-MNTN-CD = OB0FM001.XOMCD;
  WOZ2090.OZ2090-SOCD-APPL-SRC-CD = "OB";
  WOZ2090.OZ2090-SOCD-GLBL-MNTN-FL = "N";
  WOZ2090.OZ2090-SOCD-SZ-RSN-TXT = OB0FM001.SOCD-SZ-RSN-TXT;
  WOZ2090.OZ2090-XXX-USER-ID = COMMAREA.CAUSERID;


  call "OZ2090" (WOZ2090) {isNoRefresh = yes, isExternal = yes};


  if (WOZ2090.OZ2090-RETURN-CD == "00") /* good return*/
     /* ok - next sentence*/
  else
    converseLib.validationFailed(238);
    OBWREC.OBWERRFL = "Y";
  end

end // end OB0FS-CALL-OZ2090

// chk # of items for this msr
Function OB0FS-CHK-MSR-ITM()

  OB0FW-MSRITM-FL = "N"; /* reset msr item flag*/

   /* build record to pass to select order errors*/


  set OB2REC empty;


  OB2REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB2REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB2REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/

   /* get all the items for the order*/

  set SQLCA empty;
  set OBKREC empty; /* task record*/

  OBKREC.OBKTASK = "S1"; /* select task*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0FS72 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end

   /* select next item for loading temp storage 4 - obf4*/


  set SQLCA empty;
  set OBKREC empty;

  OBKREC.OBKTASK = "N1"; /* select next*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* select next*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OB0FW-MSRITM-FL = "Y"; /* has at least one msr item*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* next sentence;*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "N1      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0FS73 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "        "; /* extra key*/
      if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
        OBWREC.OBWERRFL = "Y"; /* show error msg*/
        XSOBS04(); /* post routine - no reset done*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end

  set SQLCA empty;
  set SQLCA empty;

  OBKREC.OBKTASK = "C1"; /* close set*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-close*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "C1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0FS75 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* extra space*/
    XSOBEDC(); /* abort routine - no reset done*/
  end

end // end OB0FS-CHK-MSR-ITM

// DELETE ALL OVERRIDES
Function OB0FS-DEL-OVERRIDE()

  set SQLCA empty;

  VBCPOX02.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  VBCPOX02.OP1CUOID = OB1REC.OP1CUOID; /* order number*/
  VBCPOX02.OP1NORID = OB1REC.OP1NORID; /* sub-order number*/
  VBCPOX02.OP2LNINB = OBDREC.OP2LNINB[OBWTSF4S]; /* line item nbr*/

  call "VBCPOX02" ("D2", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* NEXT SENTENCE*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D2      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "OB0FS-DE"; /* statement group*/
    TA1REC.TA1LOCAT[3] = "L-OVERRI"; /* extra key*/
    TA1REC.TA1LOCAT[4] = "DE      "; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0FS-DEL-OVERRIDE

// DELETE COMPANION RECORD
Function OB0FS-DEL-VOBXRF01()

  set VOBXRF01 empty;

  VOBXRF01.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  VOBXRF01.OP1CUOID = OB1REC.OP1CUOID; /* order number*/
  VOBXRF01.OP1NORID = OB1REC.OP1NORID; /* sub-order number*/
  VOBXRF01.OP2LNINB = OBDREC.OP2LNINB[OBWTSF4S]; /* line item nbr*/
  VOBXRF01.SY5SZID = 0; /* size (currently only at product level)*/


  call "VOBXRF01" ("D ", SQLCA, VOBXRF01) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == +100)
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOBXRF01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D   VOBX"; /* calling option*/
    TA1REC.TA1LOCAT[2] = "RF01  OB"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "0FS-DEL-"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "VOBXRF01"; /* statement group*/
    TA1REC.TA1LOCAT[4] = OBWREC.OBWORDER; /* order number*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC(); /* abort routine - no reset*/
    end
  end


end // end OB0FS-DEL-VOBXRF01

// DELETE PREPACK
Function OB0FS-DELETE-PREPK()

   /* THIS STATEMENT GROUP DELETES THE PREPACK RECORD IF*/
   /* IT EXISTS*/

  call "VBCSPR01" ("D ", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;*/
  else
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "DELETE  ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0FS-DELETE-PREPK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0FS-DELETE-PREPK

// EDIT CHANGE RSN CODE
Function OB0FS-EDIT-XL-RSN()

   /* check for a valid change reason code*/

  if (OB0FM001.XOMCD != "  ")
      /* test for a valid change code*/
    if (OB0FM001.XOMCD in XOMTBL.XOMCD /* valid maint reason*/
     && XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active maint reason*/
      if (XOMTBL.XOMCANCF[sysVar.arrayIndex] == "B" /* both add/decrease*/
       || XOMTBL.XOMCANCF[sysVar.arrayIndex] == "D") /* decrease product reason*/
         /* next sentence*/
      else
        OBWREC.OBWERRFL = "Y"; /* set error flg*/
        converseLib.validationFailed(235); /* rsn not valid for cancel*/
        set OB0FM001.XOMCD cursor, bold;
      end
    else
      OBWREC.OBWERRFL = "Y"; /* set error flg*/
      converseLib.validationFailed(234); /* rsn not valid*/
      set OB0FM001.XOMCD cursor, bold;
    end
  else
    OBWREC.OBWERRFL = "Y"; /* set error flg*/
    converseLib.validationFailed(237); /* enter chg rsn and PF24*/
    set OB0FM001.XOMCD cursor, bold;
  end



end // end OB0FS-EDIT-XL-RSN

// CHECK FOR PREPACK
Function OB0FS-GET-PREPACK()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set VBCSPR01 empty;
  set SQLCA empty;

  VBCSPR01.XWHCD = OB1REC.XWHCD; /* WAREHOUSE*/
  VBCSPR01.OP1PARTN = OB1REC.OP1PARTN; /* PART CHAR*/
  VBCSPR01.OP1CUOID = OB1REC.OP1CUOID; /* ORDER NUM*/
  VBCSPR01.OP1NORID = OB1REC.OP1NORID; /* NIKE ORD ID*/
  VBCSPR01.OP2LNINB = OBDREC.OP2LNINB[OBWTSF4S]; /* LINE ITEM NBR*/

  call "VBCSPR01" ("S ", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0FS-DELETE-PREPK(); /* prepack exists*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence;              /* prepack doesn't exist*/
    else
      set SQLCA empty;
      TA1REC.TA1DBASE = "DORDB   ";
      TA1REC.TA1TBLVU = "VBCSPR01";
      TA1REC.TA1LOCAT[1] = "SE      ";
      TA1REC.TA1LOCAT[2] = "VBCSPR01";
      TA1REC.TA1LOCAT[3] = "OB0FS-GET-PREPACK";
      TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

end // end OB0FS-GET-PREPACK

// INSERT THE PRODUCT HOLD MSG
Function OB0FS-PROD-HOLD()

  /* INSERT THE PRODUCT HOLD MESSAGE*/

  set OB7REC empty;

  OB7REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB7REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB7REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/
  OB7REC.OP2LNINB = OBDREC.OP2LNINB[OBWTSF4S]; /* line item nbr*/
  OB7REC.OB6MSGNB = "405";
  OB7REC.OB7MSGTP = "H";
  OB7REC.OB7MSGRF = " "; /* format message released flag*/

  OB7REC.ZZZSDT = OBWREC.ZZZCHGDT; /* setup date*/
  OB7REC.ZZZSTM = OBWREC.ZZZCHGTM; /* setup time*/

  OB7REC.ZZZCHGDT = 0; /* init change date*/
  OB7REC.ZZZCHGTM = 0; /* init change time*/
  OB7REC.ZZZCHGCT = 0; /* init change count*/

  set SQLCA empty;

  set OBKREC empty;

  OBKREC.OBKTASK = "A";

  call "IO5210" (OBKREC, SQLCA, OB7REC) {isNoRefresh = yes, isExternal = yes}; /* i/omod-select existance*/

  if (SQLCA.VAGen_SQLCODE == 0 /* good return*/
   || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -803) /* already exists*/
      OBKREC.OBKTASK = "S";
      call "IO5210" (OBKREC, SQLCA, OB7REC) {isNoRefresh = yes, isExternal = yes};
      OB7REC.OB7MSGRF = " "; /* unrelease the hold*/
      OBKREC.OBKTASK = "U";
      call "IO5210" (OBKREC, SQLCA, OB7REC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0 /* good return*/
       || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
        /* next sentence*/
      else
        TA1REC.TA1DBASE = "DORDB"; /* database name*/
        TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
        TA1REC.TA1LOCAT[1] = "U"; /* calling option*/
        TA1REC.TA1LOCAT[2] = "IO5210"; /* i/o mod name*/
        TA1REC.TA1LOCAT[3] = "XSOB003"; /* statement group*/
        if (SQLCA.VAGen_SQLCODE == -911)
          XSOBS04(); /* post and restart*/
        else
          XSOBEDC(); /* abort routine - no reset done*/
        end
      end
    else
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "A"; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5210"; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "XSOB003"; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04(); /* post and restart*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end


end // end OB0FS-PROD-HOLD

// move the prod hold msg to map
Function OB0FS-PRODHOLD-MSG()

   /* move prod hold option to the map*/

  set SQLCA empty;

  OB7REC.OP1PARTN = OBWREC.OP1PARTN; /* part char*/
  OB7REC.OP1CUOID = OBWREC.OP1CUOID; /* order nbr*/
  OB7REC.OP1NORID = OBWREC.OP1NORID; /* nike ord id*/
  OB7REC.OB6MSGNB = "405"; /* format message number*/
  OB7REC.OB7MSGTP = "H"; /* format message type*/

  set OBKREC empty;

  OBKREC.OBKTASK = "S";

  call "IO5210" (OBKREC, SQLCA, OB7REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
    set OB0FM001.PROD-HOLD-MSG invisible, protect; /* otherwise, send message*/
    OB0FM001.OBDMSEL[OBWTSF4S] = "H";
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* or not found*/
      OBWREC.OBW-PHMSG = "N";
    else
      TA1REC.TA1DBASE = "DORDB"; /* database name*/
      TA1REC.TA1TBLVU = "VOBMSG01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S"; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5210"; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "XSOB003"; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04(); /* post and restart*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end

   /* ***********************************************************************/
end // end OB0FS-PRODHOLD-MSG

// INITIALIZE OB0F APPLICATION
Function OB0FS01()

    /* SET RECORDS EMPTY*/

  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OBKREC empty;
  set OB1REC empty;
  set OB2REC empty;
  set OB7REC empty;
  set SYCREC empty;
  set OB8REC empty;
  set OB0FW01 empty;
  set ERRSQLCA empty;
  set SQLCA empty;
  set TAEREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;
  set XX0XW01 empty;

  set OB0FM001 empty;

  XX0XS01();

  TA1REC.TA1MAP = "OB0FM001";


end // end OB0FS01

// BUILD MAP
Function OB0FS02()

    /* LOAD MAP HEADINGS*/

  OB0FS05();


    /* BUILD PRODUCT ARRAY*/

  OB0FS10();


    /* RESET FIELD ATTRIBUTES*/

  OB0FS15();


end // end OB0FS02

// LOAD MAP HEADINGS
Function OB0FS05()

    /* READ ORDER HEADER*/

  XSOBS03();


    /* PROCESS NAME*/

  OB0FM001.OB0FMPRC = "OB0F010"; /* process name*/


    /* CURRENT DATE*/

  OB0FM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/


    /* ORDER NUMBER*/

  OB0FM001.OBWORDER = OBWREC.OBWORDER; /* order number*/


    /* CUSTOMER NUMBER*/

  OB0FM001.OBWCUST = OBWREC.OBWCUST; /* customer number*/


    /* CUSTOMER PO NUMBER*/

  OB0FM001.OP1CUPO = OBWREC.OP1CUPO; /* po number*/


    /* CUSTOMER STORE NAME*/

  OB0FM001.KUMSTRNM = OBWREC.KUMSTRNM; /* customer store name*/


    /* ORDER TYPE*/

  if (OB1REC.XOBCD in XOBTBL.XOBCD) /* if xobcd exists*/
    OB0FM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex]; /* format xob abrev*/
  else
    OB0FM001.XOBABRV = "UNKNWN"; /* format with unknwn*/
  end


    /* TOTAL UNITS*/

  OB0FM001.OP1OTUNT = OB1REC.OP1OTUNT; /* total units*/


    /* WAREHOUSE*/

  if (OB1REC.XWHCD in XWHTBL.XWHCD) /* if xwhcd exists*/
    OB0FM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex]; /* format xwh abrev*/
  else
    OB0FM001.XWHABRV = "UNKNWN"; /* format with unknwn*/
  end


    /* CURRENT PAGE NUMBER*/

  OB0FM001.OBWTSF4P = OBWREC.OBWTSF4P; /* current page number*/


    /* MAXIMUM PAGE NUMBER*/

  OB0FM001.OBWTSF4M = OBWREC.OBWTSF4M; /* max page number*/


    /* NEED DATE CONVERSION*/

  OBWREC.OBWDT8 = OB1REC.OP1CUNDT; /* format convert date*/

  XSOBDCM(); /* format need date into mmddyy format*/

  OB0FM001.OB0FMNDT = OBWREC.OBWDT6; /* need date*/

    /* CANADA 07/26/95*/

    /* CURRENCY CODE*/

  OB0FM001.ZFC-CRCY-CD = OB1REC.ZFC-CRCY-CD; /* CANA currency code*/

    /* ORDER VALUE*/

  OB0FM001.OP1OVALU = OB1REC.OP1OVALU; /* order value*/


end // end OB0FS05

// READ COMPANY RECORD
Function OB0FS06()
  set SQLCA empty;

  OB0FW01.OB0FW-XREFCUST = "N"; /* init customer xref flag*/
  KUCREC.KUCCOID = OBWREC.OBWCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
    if (KUCREC.KUCSKIND != " ") /* xref customer*/
      OB0FW01.OB0FW-XREFCUST = "Y"; /* set customer xref flag*/
    end
  else
    TA1REC.TA1DBASE = "DCUST";
    TA1REC.TA1TBLVU = "VCMPNY";
    TA1REC.TA1LOCAT[1] = "S "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO0240"; /* i/o mod*/
    TA1REC.TA1LOCAT[3] = "OB0FDL"; /* statement group*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end
end // end OB0FS06

// BUILD PRODUCT ARRAY
Function OB0FS10()

  OBWREC.OBW-PHMSG = "Y"; /* Initialize the prod hold msg*/

  OBWREC.OBWTSF4S = 1; /* init subscript*/

  while (OBWREC.OBWTSF4S < 11) /* less than 11*/
    OB0FM001.OBDMSEL[OBWTSF4S] = OBDREC.OBDMSEL[OBWTSF4S];
    OB0FM001.OBDPRD[OBWTSF4S] = OBDREC.OBDPRD[OBWTSF4S];
    OB0FM001.SY1SSTNM[OBWTSF4S] = OBDREC.OBDPRDNM[OBWTSF4S];
    OB0FM001.SY2CLRAB[OBWTSF4S] = OBDREC.SY2CLRAB[OBWTSF4S];
    OB0FM001.OP2TONOQ[OBWTSF4S] = OBDREC.OP2TONOQ[OBWTSF4S];
    OB0FM001.OP2AUPRC[OBWTSF4S] = OBDREC.OP2AUPRC[OBWTSF4S];
    OB0FM001.OBDERHDF[OBWTSF4S] = OBDREC.OBDERHDF[OBWTSF4S];
    OB0FM001.OP2CGPCD[OBWTSF4S] = OBDREC.OP2CGPCD[OBWTSF4S];

    set OB7REC empty;
    OB7REC.OP2LNINB = OBDREC.OP2LNINB[OBWTSF4S];
    if (OB7REC.OP2LNINB != 0)
      OB0FS-PRODHOLD-MSG();
    end
    if (OBWREC.OBW-PHMSG == "N")
      OB0FM001.PROD-HOLD-MSG = "IF PROD HOLD IS NEEDED, ENTER \"H\" ON THE SELECT OPTION";
      set OB0FM001.PROD-HOLD-MSG initialAttributes;
    end
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
  end

  if (OB0FM001.OBDPRD[1] == " ") /* and eof*/
    OB0FM001.CAMSG = "NO PRODUCTS FOR THIS ORDER";
  end


end // end OB0FS10

// RESET FIELD ATTRIBUTES
Function OB0FS15()

    /* set cursor at page in case of no enterable select codes*/

  set OB0FM001.OBWTSF4P cursor, initialAttributes; /* page number*/

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LD" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    if (OB0FM001.CAMSG == " ")
      OB0FM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end

  OBWREC.OBWTSF4S = 10; /* init subscript*/

  while (OBWREC.OBWTSF4S >= 1)
    if (OB0FM001.OBDPRD[OBWTSF4S] == " ")
      OB0FS17(); /* set row autoskip,dark*/
    else
      OB0FS16(); /* set row defined*/
      if (OB0FM001.OBDMSEL[OBWTSF4S] == "*")
        set OB0FM001.OBDMSEL[OBWTSF4S] skip; /* set sel opt autoskip*/
      else
        set OB0FM001.OBDMSEL[OBWTSF4S] cursor, initialAttributes;
      end
    end
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S - 1; /* decrement by +1*/
  end

end // end OB0FS15

// SET FIELDS DEFINED
Function OB0FS16()

  set OB0FM001.OBDMSEL[OBWTSF4S] initialAttributes; /* select option*/
  set OB0FM001.OBDPRD[OBWTSF4S] initialAttributes; /* product number*/
  set OB0FM001.SY1SSTNM[OBWTSF4S] initialAttributes; /* style name*/
  set OB0FM001.SY2CLRAB[OBWTSF4S] initialAttributes; /* color abrv*/
  set OB0FM001.OP2TONOQ[OBWTSF4S] initialAttributes; /* on order units*/
  set OB0FM001.OP2AUPRC[OBWTSF4S] initialAttributes; /* avg price*/
  set OB0FM001.OBDERHDF[OBWTSF4S] initialAttributes; /* error/hold flag*/
  set OB0FM001.OP2CGPCD[OBWTSF4S] initialAttributes; /* coordinate group code*/


end // end OB0FS16

// SET FIELDS AUTOSKIP,DARK
Function OB0FS17()

  set OB0FM001.OBDMSEL[OBWTSF4S] skip, invisible; /* select option*/
  set OB0FM001.OBDPRD[OBWTSF4S] skip, invisible; /* product number*/
  set OB0FM001.SY1SSTNM[OBWTSF4S] skip, invisible; /* style name*/
  set OB0FM001.SY2CLRAB[OBWTSF4S] skip, invisible; /* color abrv*/
  set OB0FM001.OP2TONOQ[OBWTSF4S] skip, invisible; /* on order units*/
  set OB0FM001.OP2AUPRC[OBWTSF4S] skip, invisible; /* avg price*/
  set OB0FM001.OBDERHDF[OBWTSF4S] skip, invisible; /* error/hold flag*/
  set OB0FM001.OP2CGPCD[OBWTSF4S] skip, invisible; /* coordinate group code*/


end // end OB0FS17

// EXECUTE UPDATE
Function OB0FS20()

    /* UPDATE TEMP STORAGE AND TRANSFER TO OB0H*/

  OBWREC.OBWTSF4S = 1; /* init subscript*/

  while (OBWREC.OBWTSF4S < 11 /* while > 11*/
   && OBDREC.OBDPRD != " ") /* and not eof*/
    if (OBDREC.OBDMSEL[OBWTSF4S] == "S") /* selection found*/
      OB0FSUT(); /* update temp storage*/
      OBWREC.CAMSG = "NEXT PRODUCT";
      COMMAREA.CAUSERA = OBWREC.OBWGROUP; /* transfer data*/
      if (OBWREC.OBWOB0F > " ") /* transfer to OB0H*/
        COMMAREA.CATOAP = OBWREC.OBWOB0F;
        XSEXIT();
      else
        XSOBP10();
      end
    end
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
  end


end // end OB0FS20

// UPDATE FROM CONVERSE
Function OB0FS25()

   /* MOVE MAP FIELDS TO TEMP STORAGE*/

  OBWREC.PRODHOLD-SEL-FLAG = "N";

  OB0FS26();

  if (OBWREC.PRODHOLD-SEL-FLAG == "Y")
    OBWREC.CAMSG = "PRODUCT HOLD SUCCESSFULLY APPLIED TO ALL SELECTED PRODUCTS";
  end

    /* UPDATE TEMP STORAGE*/

  OBWTSF4S = 1; /* init subscript*/

  while (OBWREC.OBWTSF4S < 11) /* while < 11*/
    if (OBDREC.OBDMSEL[OBWTSF4S] == "S") /* first valid selection*/
      OB0FSUT(); /* update the entire page for temp storage*/
      OB0FS27(); /* if enter,pf5,pf11,pf22,pf23 save to appl*/
      return;
    end
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
  end


    /* CHECK FOR PAGING*/

  if (converseVar.eventKey is pf7)
    OBWREC.OBWTSF4P = OBWREC.OBWTSF4P - 1; /* subtract 1 from page*/
  end

  if (converseVar.eventKey is pf8)
    OBWREC.OBWTSF4P = OBWREC.OBWTSF4P + 1; /* add 1 to page*/
  end


    /* CHECK FOR ENTER KEY*/

  if (converseVar.eventKey is enter
   && OBWREC.PRODHOLD-SEL-FLAG == "Y")
    XSOBP00(); /* restart ob0f*/
  end


  if (converseVar.eventKey is enter
   && OB0FW01.OB0FWSEL == "N" /* no selects*/
   && OB0FM001.OBWTSF4P == OBWREC.OBWTSF4P) /* no page change*/
    COMMAREA.CAUSERA = OBWREC.OBWGROUP;
    XSOBP03(); /* transfer to ob0b*/
  end


  if (converseVar.eventKey is enter
   && OB0FM001.OBWTSF4P != OBWREC.OBWTSF4P) /* page changed*/
    OBWREC.OBWTSF4P = OB0FM001.OBWTSF4P; /* format current page #*/
    XSOBP00(); /* restart ob0f*/
  end


  if (converseVar.eventKey is pf24)
    OBWREC.OBWTSF4S = OB0FW01.OB0FWDEL; /* format saved subscript*/
    OBWREC.OBWLNINB = OBDREC.OP2LNINB[OBWTSF4S]; /* format line #*/
  end


end // end OB0FS25

// MOVE MAP FIELDS TO TEMP STORAG
Function OB0FS26()

  OBWREC.OBWTSF4S = 1; /* init subscript*/

  while (OBWREC.OBWTSF4S < 11) /* less than 11*/
    if (OB0FM001.OBDMSEL[OBWTSF4S] == "H"
     && OB0FM001.OBDMSEL[OBWTSF4S] is modified
     && converseVar.eventKey is enter)
      OBWREC.PRODHOLD-SEL-FLAG = "Y";
      OBDREC.OBDMSEL[OBWTSF4S] = "H";
      OB0FS-PROD-HOLD();
    end
    OBDREC.OBDMSEL[OBWTSF4S] = OB0FM001.OBDMSEL[OBWTSF4S];
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
  end


end // end OB0FS26

// MOVE MAP FIELDS TO TEMP STORAG
Function OB0FS27()

  if (converseVar.eventKey is enter
   && OBWREC.PRODHOLD-SEL-FLAG == "Y")
    XSOBP00(); /* restart ob0f*/
  else
    if (converseVar.eventKey is enter)
      OBWREC.OBWOB0F = "OB0H"; /* save to app for multiple selects*/
    end
  end


  if (converseVar.eventKey is pf5)
    OBWREC.OBWOB0F = "OB0G"; /* save to app for multiple selects*/
  end


  if (converseVar.eventKey is pf11)
    OBWREC.OBWOB0F = "OB0U"; /* save to app for multiple selects*/
  end


  if (converseVar.eventKey is pf22)
    OBWREC.OBWOB0F = "OB0P"; /* save to app for multiple selects*/
  end


  if (converseVar.eventKey is pf23)
    OBWREC.OBWOB0F = "OB0Q"; /* save to app for multiple selects*/
  end




end // end OB0FS27

// EDIT MAP FIELDS
Function OB0FS30()

   /* EDIT SELECT OPTIONS*/

  OBWREC.OBWTSF4S = 10; /* init subscript*/

  while (OBWREC.OBWTSF4S > 0) /* greater than 0*/
    OB0FS35();
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S - 1; /* decrement by -1*/
  end

    /* EDIT MULTIPLE DELETE SELECT OPTIONS*/

  OB0FW01.OB0FWDEL = 0; /* init delete option subscript*/
  OBWREC.OBWTSF4S = 1; /* init subscript*/

  while (OBWREC.OBWTSF4S < 11) /* less than 11*/
    OB0FS40();
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
  end


    /* EDIT PAGE NUMBER*/

  OB0FS45();

  if (OBWREC.OBWERRFL == "Y") /* error exists*/
    return;
  end


    /* EDIT PF7/PF8*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    OB0FS50();
  end


    /* EDIT PF24*/

  if (converseVar.eventKey is pf24) /* cancel product*/
    OB0FS55();
  end


    /* EDIT PF5,PF11,PF22,PF23*/

  if (converseVar.eventKey is pf5
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf22
   || converseVar.eventKey is pf23)
    OB0FS60();
  end


end // end OB0FS30

// EDIT SELECT OPTIONS
Function OB0FS35()

   /* CHECK TEMP STORAGE FOR MATCH*/

  if (OBDREC.OBDMSEL[OBWTSF4S] == OB0FM001.OBDMSEL[OBWTSF4S])
    /* next sentence*/
  else
    if (OB0FM001.OBDMSEL[OBWTSF4S] == "S"
     || OB0FM001.OBDMSEL[OBWTSF4S] == "D"
     || OB0FM001.OBDMSEL[OBWTSF4S] == "H"
     || OB0FM001.OBDMSEL[OBWTSF4S] == " ")
       /* next sentence*/
    else
      converseLib.validationFailed(083); /* select option is invalid*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
    end
  end


  if (OB0FM001.OBDMSEL[OBWTSF4S] == "S"
   || OB0FM001.OBDMSEL[OBWTSF4S] == "D")
    OB0FW01.OB0FWSEL = "Y"; /* set selection flag on*/
  end


  if (converseVar.eventKey not pf24
   && OB0FM001.OBDMSEL[OBWTSF4S] == "D")
    converseLib.validationFailed(089); /* use pf24 key to delete*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
  end


         /* deletes are not allowed for these order status codes*/

  if (OB1REC.YOBCD == "CL" /* cleared edit*/
   || OB1REC.YOBCD == "CA") /* cleared availability*/
    if (OB0FM001.OBDMSEL[OBWTSF4S] == "D")
      converseLib.validationFailed(164); /* order status doesn't allow changes*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
    end
  end
end // end OB0FS35

// EDIT DELETE SELECT OPTION
Function OB0FS40()

    /* CHECK FOR MULTIPLE DELETE'S (Edit top to bottom)*/

  if (OB0FM001.OBDMSEL[OBWTSF4S] == "D") /* if delete option*/
    if (OB0FW01.OB0FWDEL == 0) /* and no previous delete*/
      OB0FW01.OB0FWDEL = OBWREC.OBWTSF4S;
                                   /* save the delete subscript*/
    else
      converseLib.validationFailed(091); /* only one product at a time may be deleted*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
    end
  end


end // end OB0FS40

// EDIT PAGE NUMBER
Function OB0FS45()

    /* DETERMINE IF CURRENT PAGE NUMBER IS WITHIN RANGE*/

  if (OB0FM001.OBWTSF4P > OB0FM001.OBWTSF4M /* page # > max page #*/
   || OB0FM001.OBWTSF4P < 1)                /* or less than 1*/
    converseLib.validationFailed(084); /* page number must be between 1 and last page #*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0FM001.OBWTSF4P cursor, bold;
    OB0FM001.OBWTSF4P = OBWREC.OBWTSF4P; /* reset page number*/
    return;
  end


    /* TRYING TO USE SELECTIONS WHEN CHANGING PAGE NUMBER*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || OB0FM001.OBWTSF4P != OBWREC.OBWTSF4P) /* page number changes*/
    if (OB0FW01.OB0FWSEL == "Y") /* a selection was made*/
      converseLib.validationFailed(097); /* cannot make selections while changing pages*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0FM001.OBWTSF4P cursor, bold;
      OB0FM001.OBWTSF4P = OBWREC.OBWTSF4P; /* reset page number*/
    end
  end


end // end OB0FS45

// EDIT PF7 AND PF8
Function OB0FS50()

    /* PF7 EDIT*/

  if (converseVar.eventKey is pf7
   && OB0FM001.OBWTSF4P == 1) /* page 1*/
    converseLib.validationFailed(086); /* cannot scroll backward*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
  end


    /* PF8 EDIT*/

  if (converseVar.eventKey is pf8
   && OB0FM001.OBWTSF4P == OB0FM001.OBWTSF4M) /* current page = last page*/
    converseLib.validationFailed(087); /* cannot scroll forward*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
  end


    /* CHECK FOR PAGE # CHANGING WHEN PF7 OR PF8*/

  if (OB0FM001.OBWTSF4P != OBWREC.OBWTSF4P) /* current page has changed*/
    converseLib.validationFailed(085); /* cannot chg page # and pf7/pf8 at same time*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0FM001.OBWTSF4P cursor, bold;
    OB0FM001.OBWTSF4P = OBWREC.OBWTSF4P; /* reset page number*/
  end


end // end OB0FS50

// EDIT PF24
Function OB0FS55()

    /* EDIT AGAINST NO DELETE SELECT OPTION*/

  if (OB0FW01.OB0FWDEL == 0) /* no delete select option*/
    converseLib.validationFailed(092); /* enter 'd' to delete a product*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0FM001.OBDMSEL[1] cursor; /* position cursor*/
  end


    /* EDIT FOR PAGE # CHANGE AND PF24*/

  if (OB0FM001.OBWTSF4P != OBWREC.OBWTSF4P) /* page # changed*/
    converseLib.validationFailed(095); /* cannot delete and change page at same*/
                                   /* time*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0FM001.OBWTSF4P cursor, bold; /* position cursor*/
    OB0FM001.OBWTSF4P = OBWREC.OBWTSF4P; /* reset original page #*/
  end


    /* delete not allowed for these order status codes*/

  if (OB1REC.YOBCD == "CL" /* cleared edit*/
   || OB1REC.YOBCD == "CA") /* cleared availability*/
    converseLib.validationFailed(164); /* order status doesn't allow changes*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0FM001.OBDMSEL[1] cursor; /* position cursor*/
  end

end // end OB0FS55

// EDIT PF5,PF11,PF22,PF23
Function OB0FS60()

  if (OB0FW01.OB0FWSEL == "N") /* no select options*/
    converseLib.validationFailed(093); /* pfkey requires a selected product -*/
                                   /* enter 's'*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    if (OB0FM001.OBDPRD[1] == " ") /* no products*/
      set OB0FM001.OBWTSF4P cursor;
      OB0FM001.CAMSG = "NO PRODUCTS FOR THIS ORDER";
    else
      set OB0FM001.OBDMSEL[1] cursor, bold;
    end
  else /* select options*/
    if (converseVar.eventKey is pf11) /* pf11 pressed*/
      OB0FS65(); /* edit selection against nike prod*/
    end
  end


end // end OB0FS60

// EDIT SELECT AGAINST NIKE PROD
Function OB0FS65()

  OBWTSF4S = 1; /* init subscript*/

  while (OBWREC.OBWTSF4S < 11) /* while < 11*/
    if (OB0FM001.OBDMSEL[OBWTSF4S] == "S") /* selection made*/
      if (OB0FW01.OB0FW-XREFCUST == "N") /* not an xref cust*/
        converseLib.validationFailed(212); /* customer not an xref customer*/
        OBWREC.OBWERRFL = "Y";
        set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
        return;
      else
        if (OB0FM001.SY1SSTNM[OBWTSF4S] == "INVALID PRODUCT")
                                   /* style not valid*/
          converseLib.validationFailed(210); /* cannot PF11 with an invalid product*/
          OBWREC.OBWERRFL = "Y";
          set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
          return;
        end
      end
    end
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
  end


end // end OB0FS65

// select and load obf4 - items
Function OB0FS70()

   /* select all items for the selected order*/
   /* write a temporary storage record (temp storage 4) for*/
   /* each map full of items, map holds 10 items*/

  XSOBT4P(); /* purge temp storage 4 to start clean*/

  XSOBS03(); /* read order header*/

   /* build record to pass to select items*/

  OB0FS71();


   /* get all the items for the order*/

  OB0FS72();


  OB0FW01.OB0FWEOF = "N"; /* set end of file flag to no*/

  OB0FS73(); /* select next for temp storage 4*/


  if (OB0FW01.OB0FWEOF == "Y") /* no items*/
    set OBDREC empty;
    XSOBT4W(); /* write one empty line*/
  else
    while (OB0FW01.OB0FWEOF == "N") /* while there are messages selected*/
      OB0FS74(); /* load and write temp storage 4*/
    end
  end
  OBWREC.OBWTSF4P = 1; /* set page number*/
  OBWREC.OBWTSF4S = 1; /* position cursor on first message*/
   /* total number of pages was set in write statement group*/


   /* close scan*/

  OB0FS75();

   /* *************************************************************/
end // end OB0FS70

// build record to pass to db2
Function OB0FS71()


   /* build record to pass to select order errors*/


  set OB2REC empty;


  OB2REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB2REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB2REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/


   /* *************************************************************/
end // end OB0FS71

// get order items to display
Function OB0FS72()


   /* get all the items for the order*/

  set SQLCA empty;
  set OBKREC empty; /* task record*/

  OBKREC.OBKTASK = "S1"; /* select task*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0FS72 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end



   /* *************************************************************/
end // end OB0FS72

// select next for obf4 - items
Function OB0FS73()



   /* select next item for loading temp storage 4 - obf4*/


  set SQLCA empty;
  set OBKREC empty;

  OBKREC.OBKTASK = "N1"; /* select next*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* select next*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0FW01.OB0FWEOF = "Y";
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "N1      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0FS73 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "        "; /* extra key*/
      if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
        OBWREC.OBWERRFL = "Y"; /* show error msg*/
        XSOBS04(); /* post routine - no reset done*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end





   /* *************************************************************/
end // end OB0FS73

// load & write obf4 - items
Function OB0FS74()



   /* load and write temp storage 4 - obf4*/

  set OBDREC empty; /* init temp storage record*/

  OBWREC.OBWTSF4S = 1;

  while (OBWREC.OBWTSF4S <= 10
   && OB0FW01.OB0FWEOF == "N")

    OB0FS76(); /* build temp storage 4*/
    OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment storage sub*/

    OB0FS73(); /* select next item*/

  end


   /* write temp storage 4*/

  XSOBT4W();



   /* *************************************************************/
end // end OB0FS74

// close itm set
Function OB0FS75()


   /* close scan*/

  set SQLCA empty;
  set SQLCA empty;

  OBKREC.OBKTASK = "C1"; /* close set*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-close  scan*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "C1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0FS75 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* extra space*/
    XSOBEDC(); /* abort routine - no reset done*/
  end



   /* *************************************************************/
end // end OB0FS75

// build obf4 - items for order
Function OB0FS76()



   /* load temp storage 4 - obf4*/

  OBDREC.OBDMSEL[OBWTSF4S] = " ";
  OBDREC.OP2LNINB[OBWTSF4S] = OB2REC.OP2LNINB; /* line item nbr*/
  OBDREC.OP2TONOQ[OBWTSF4S] = OB2REC.OP2TONOQ; /* total qty*/
  OBDREC.OP2AUPRC[OBWTSF4S] = OB2REC.OP2AUPRC; /* avg unit prc*/
  OBDREC.OP2CGPCD[OBWTSF4S] = OB2REC.OP2CGPCD; /* coor grp*/

     /* read style/color file for short style nm and color abrv*/

  if (OB2REC.SY1STNBR == " ") /* style nbr not translated*/
    OBDREC.OBDPRD[OBWTSF4S] = OB2REC.CU-CUST-PROD-ID; /* cust style*/
    OBDREC.OBDPRDNM[OBWTSF4S] = "UNKNOWN CUST";
    OBDREC.SY2CLRAB[OBWTSF4S] = "PRODUCT ";
  else
    OBDREC.SY1STNBR[OBWTSF4S] = OB2REC.SY1STNBR; /* style number*/
    OBDREC.OBDPER1[OBWTSF4S] = "-"; /* period*/
    OBDREC.SY2CLRID[OBWTSF4S] = OB2REC.SY2CLRID; /* color id*/
    OBDREC.OBDPER2[OBWTSF4S] = "-"; /* period*/
    OBDREC.XDMCD[OBWTSF4S] = OB2REC.XDMCD; /* dimension*/
    OB0FS77(); /* read db2 style and color nms*/
  end

  OB0FS78();
                                   /* see if errors or holds exist for item*/

   /* *************************************************************/
end // end OB0FS76

// get style and color nms
Function OB0FS77()



    /* get style and color names*/

  set SYCREC empty;
  set SQLCA empty;


  SYCREC.SY1STNBR = OB2REC.SY1STNBR; /* style number*/
  SYCREC.SY2CLRID = OB2REC.SY2CLRID; /* color id*/
  SYCREC.XDMCD = OB2REC.XDMCD; /* dimension*/
  SYCREC.XGPCD = OB2REC.XGPCD; /* gpc*/


   /* read dprod.vcolor02*/

  call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/

   /* check db2 return code*/


  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OBDREC.OBDPRDNM[OBWTSF4S] = SYCREC.SY1SSTNM; /* move short nm*/
    OBDREC.SY2CLRAB[OBWTSF4S] = SYCREC.SY2CLRAB; /* move colr abrv*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* product not found*/
      OBDREC.OBDPRDNM[OBWTSF4S] = "INVALID PRODUCT";
      OBDREC.SY2CLRAB[OBWTSF4S] = "     ";
    else
      TA1REC.TA1DBASE = "DPROD   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCOLOR02"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0560  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0FS77 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB2REC.SY1STNBR; /* style nbr*/
      if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
        OBDREC.OBDPRDNM[OBWTSF4S] = "PRODUCT BUSY";
        OBDREC.SY2CLRAB[OBWTSF4S] = "     ";
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end




end // end OB0FS77

// see if msgs exist for item
Function OB0FS78()



   /* see if error  messages exist for an item*/
   /* if at least one exists,*/
   /* set the error flag on the item list in temp storage to 'y'*/
   /* do the same for the hold messages*/

        /* build the key to message file*/

   /* build record to pass to select order messages*/

  set OB7REC empty;

  OB7REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB7REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB7REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/
  OB7REC.OP2LNINB = OB2REC.OP2LNINB; /* line item nbr*/


  OB7REC.OB7MSGTP = "E"; /* only errs*/

   /* get error messages for the item*/

  OB0FS79();

   /* check db2 return code*/

  OBDREC.OBDFILL[OBWTSF4S] = "/"; /* slash*/

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == -811) /* or more than one found*/
    OBDREC.OB1ERRFL[OBWTSF4S] = "Y"; /* err flag*/
  else
    OBDREC.OB1ERRFL[OBWTSF4S] = "N"; /* err flag*/
  end


   /* get hold messages for the item*/

  OB7REC.OB7MSGTP = "H"; /* only errs*/

  OB0FS79();

  if (SQLCA.VAGen_SQLCODE == 0 /* check for good rc*/
   || SQLCA.VAGen_SQLCODE == -811) /* or more than one found*/
    OBDREC.OB1HLDFL[OBWTSF4S] = "Y"; /* err flag*/
  else
    OBDREC.OB1HLDFL[OBWTSF4S] = "N"; /* err flag*/
  end

   /* *************************************************************/
end // end OB0FS78

// see if msgs exist for item
Function OB0FS79()


   /* see if error or hold messages exist for item*/

  set SQLCA empty;

  OBKREC.OBKTASK = "SE";

  call "IO5210" (OBKREC, SQLCA, OB7REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code in calling stmnt group*/

   /* *************************************************************/
end // end OB0FS79

// Edit pfkeys for OB0F
Function OB0FSPF()

  if (converseVar.eventKey is pf19)
   /* EDIT MULTIPLE SELECT OPTIONS*/

    OBWREC.OBWMSEL = 0; /* init select option subscript*/
    OBWREC.OBWTSF4S = 1; /* init subscript*/
    OBWREC.OBW-GET-HOLDS-FL = "Y";

    while (OBWREC.OBWTSF4S < 11) /* less than 11*/

      /* CHECK FOR MULTIPLE SELECTS (Edit top to bottom)*/

      if (OB0FM001.OBDMSEL[OBWTSF4S] == "S") /* if select option*/
        if (OBWREC.OBWMSEL == 0) /* and no previous select*/
          OBWREC.OBWMSEL = OBWREC.OBWTSF4S;
                                   /* save the select subscript*/
          OBWREC.OBWLNINB = OBDREC.OP2LNINB[OBWTSF4S]; /* sav lin itm*/
        else
          converseLib.validationFailed(248); /* only one product at a time may be selected*/
          OBWREC.OBWERRFL = "Y"; /* set error flag*/
          set OB0FM001.OBDMSEL[OBWTSF4S] cursor, bold;
        end
      end
      OBWREC.OBWTSF4S = OBWREC.OBWTSF4S + 1; /* increment by +1*/
    end
  end


  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    XSOBP01();
    OB0FM001.CAMSG = OBWREC.OBWHELP; /* to display if no help*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf5
   && OBWREC.OBWERRFL == "N")
    XSOBP05();
  end

  if (converseVar.eventKey is pf6)
    XSOBP06();
  end

  if (converseVar.eventKey is pf7
   && OBWREC.OBWERRFL == "N")
    XSOBP00();
  end

  if (converseVar.eventKey is pf8
   && OBWREC.OBWERRFL == "N")
    XSOBP00();
  end

  if (converseVar.eventKey is pf11
   && OBWREC.OBWERRFL == "N")
    XSOBP11();
  end

  if (converseVar.eventKey is pf13)
    XSOBP13();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf18)
    XSOBP18();
  end

  if (converseVar.eventKey is pf19
   && OBWREC.OBWERRFL == "N")
    XSOBP19();
  end

  if (converseVar.eventKey is pf20 /* add product*/
   && OB1REC.YOBCD != "LP"         /* lost demand reported*/
   && OB1REC.YOBCD != "PD")        /* postponed demand reported*/
    if (OB1REC.XPACD == "MS" ||  /* can't have more than one item*/
    OB1REC.XPACD == "CU")        /* for ms or cu orders*/
      OB0FS-CHK-MSR-ITM(); /* per header for msr order 08/29/97*/
      if (OB0FW-MSRITM-FL == "Y")
        converseLib.validationFailed(240);
        OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
      else
        XSOBP20();
      end
    else
      XSOBP20();
    end
  end

  if (converseVar.eventKey is pf21 /* prepack screen*/
   && OBWREC.OBWERRFL == "N")     
    XSOBP21();
  end

  if (converseVar.eventKey is pf22
   && OBWREC.OBWERRFL == "N")
    XSOBP22();
  end

  if (converseVar.eventKey is pf23
   && OBWREC.OBWERRFL == "N")
    if (OB1REC.YOBCD == "FA") /* cleared availability*/
      XSOBP23();
    else
      converseLib.validationFailed(188); /* order status doesn't allow changes*/
      OBWREC.OBWERRFL = "Y";
    end
  end

  if (converseVar.eventKey is pf24)
    OB0FS-EDIT-XL-RSN();
    if (OB1REC.YOBCD == "CA"
     || OB1REC.YOBCD == "CL")
      converseLib.validationFailed(164);
      OBWREC.OBWERRFL = "Y";
    else
      if (OBWREC.OBWERRFL == "N"
       && OB1REC.YOBCD != "CA" /* cleared availability*/
       && OB1REC.YOBCD != "PD" /* lost demand reported*/
       && OB1REC.YOBCD != "LP") /* postponed demand reported*/
        OBWREC.OBWXLIND = "I"; /* format cancel indicator type (item)*/
        OB0FS-CALL-OZ2090(); /* call oz2090 to write vsoscr01*/
        XSOBP24();
        OB0FS-DEL-OVERRIDE();
        OB0FS-DEL-VOBXRF01();
        XSOB-UPD-VOCITM01();
        OB0FS-GET-PREPACK(); /* delete prepack record if it exists*/
        XSOBP00(); /* restart ob0f*/
      end
    end
  end



  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf5
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf20
   || converseVar.eventKey is pf21
   || converseVar.eventKey is pf22
   || converseVar.eventKey is pf23
   || converseVar.eventKey is pf24)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf19
     && OBWREC.OBWERRFL == "Y")
      converseLib.validationFailed(248); /* only one product at a time may be selected*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
    else
      converseLib.validationFailed(1); /* invalid pf key*/
      OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
    end
  end


  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    XSOBP10();
  end


end // end OB0FSPF

// UPDATE TEMP STORAGE
Function OB0FSUT()

   /* CHANGE "S" TO "V"*/

  OBDREC.OBDMSEL[OBWTSF4S] = "V";


    /* SAVE LINE NUMBER ON OBWREC*/

  OBWREC.OBWLNINB = OBDREC.OP2LNINB[OBWTSF4S];


    /* UPDATE TEMP STORAGE*/

  XSOBT4U();


end // end OB0FSUT

Record OB0FW01 type basicRecord
  10 OB0FWDEL OB0FWDEL ; 
  10 OB0FWSEL OB0FWSEL ; 
  10 OB0FWEOF OB0FWEOF ; 
  10 OB0FW-XREFCUST OB0FW-XREFCUST ; 
  10 OB0FW-MSRITM-FL OB0FW-MSRITM-FL ; 
end // end OB0FW01

DataItem OB0FW-MSRITM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0FW-XREFCUST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// delete option subscript
DataItem OB0FWDEL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end-of-file-flag
DataItem OB0FWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select option flag
DataItem OB0FWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

