package ob0k;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
//*** PROGRAM=OB0K ****
//   This program displays comments about the order and the
// date that each comment was entered or changed. The screen
// is not in the mainline of the system but is reached by
// pressing pf18 from most of the other applications. By press-
// ing enter, this application will flow to the Product Summary
// screen.
//   Miscellaneous information about the order that does not
// fit in predefined fields can be displayed and updated on
// this screen. The screen displays 12 lines of comments and
// the date that each line was added or updated. Paging is used
// to display more than 12 comments. Temp storage is used for
// the paging. PF7 and PF8 can be used to page, or the desired
// page number can be entered. After the last existing comment,
// one full blank page is in temp storage and will be displayed
// so that new comments can be added. However, most comments
// will have come in with the original order from the customer
// and will have been added by the batch program.
// 
//       I/O MODS               USED IN
// 
//       IO5160                 ob0ks59   xsobs03
//       IO5180                 ob0ksc1   ob0ksn1   ob0kss1
//                              ob0ks52   ob0ks54
// ;
// maintenance log
// ;
// 02/15/91  dmeier  regen for database changes
// ;
// 03/30/92  tmorri  modified 010, s16, s18, s50 -
//                   updates not allowed for order status 'ca'
//                   or 'cl'.
// 05/11/94  scantr  changed s50 to always update the hdr when
//                   the cmt changes to catch problems with
//                   simultaneous update with the batch edit;
//                   also added a rollback to s59; also obwrec,
//                   xsobs02, xsobs03, added xsobs10
// 05/24/94  scantr  changed xsobs03
// 06/15/94  CRAINE  REWRITE TO CALL RELATIONAL EDIT
// 08/18/94  craine  changes to xsobs-limited-edit,
//                   xsobs-full-edit.
// 08/30/94  craine  changes to xsobs-full-edit, and block dl
//                   and ld orders from updating
// 09/06/94  craine  change to obwrec
// 10/06/94  craine  add new xsobs-add-new-oba
// 10/25/94  craine  change to obwrec
// 01/30/94  craine  chg to xsobs-upd-oba-edit
// 04/27/95  craine  allow for new yobcd 'pd' and 'lp'.
// 08/07/95  craine  DATABASE CHANGES
// 06/03/97  rgilli  YR2000 - Regen to ensure correct ver.
//                            of xx0xs01 is included.
// 
// *********************
Program OB0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OB0KW01 OB0KW01; // record
  OB1REC OB1REC; // record
  OB4REC OB4REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBKREC OBKREC; // record
  OBLEREC OBLEREC; // record
  OBWREC OBWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OB0KM.OB0KM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0K000: OB0K000();
    goto OB0K010;
    OB0K010: OB0K010();
    goto OB0K010;
  end // end main
end // end OB0K

// EXECUTE PROCESS
Function OB0K000()
     /* Check csp and order batch security*/

  XSENTRY();
  XSOBS01();

     /* Initialize application*/

  OB0KS01();

     /* Set -911 processing flag*/

  OBWREC.OBWER911 = "N";

     /* Determine if batch edit is running*/

  XSOBS02();

     /* Read current order header*/

  XSOBS03();


     /* Display commarea message*/

  OB0KM001.CAMSG = OBWREC.CAMSG;
  OBWREC.CAMSG = " ";


     /* Build map for display*/

  OB0KS10();


end // end OB0K000

// CONVERSE OB0KM001
Function OB0K010()

  converseLib.clearScreen();
   /* replace mapname and uncomment*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/

  converse OB0KM001 ;

     /* Init error stuff*/

  OBWREC.OBWERRFL = "N";
  converseLib.validationFailed(0);
  OBWREC.OBWHELP = OB0KM001.CAMSG; /* save for help*/
  OB0KM001.CAMSG = " ";


     /* Reset field attributes*/

  OB0KS16();


     /* Edit map(no matter what pfkey is used)*/

  OB0KS20();


     /* update temp storage*/

  if (OBWREC.OBWERRFL == "N") /* no errors*/
    if (OB1REC.YOBCD != "XL" /* not cancelled*/
     && OB1REC.YOBCD != "CA" /* not cleared availability*/
     && OB1REC.YOBCD != "LP" /* not lost demand reported*/
     && OB1REC.YOBCD != "PD") /* not postponed demand reported*/
      OB0KS30(); /* move fields to temp storage and*/
                                   /* update*/
    end
  end

   /* check for paging*/

  if (OBWREC.OBWERRFL == "N") /* no errors*/
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
      OB0KS40();
    end
  end


     /* Update*/

  OB0KS50();

    /* / call online relational edit*/

  if (OBWREC.OBWERRFL == "N"
   && OB0KW01.OB0KWTCG == "Y")
    OBWREC.OBW-EDIT-FUNCTION = "4";
    XSOBS-ONLINE-EDIT();
  end


     /* Edit PF Keys*/

  OB0KSPF();

end // end OB0K010

// INITILIZE APPLICATION
Function OB0KS01()

  set OB1REC empty;
  set OB4REC empty;
  set OB8REC empty;
  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OBFEREC empty;
  set OBLEREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;
  set TAEREC empty;
  set OB0KW01 empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set OB0KM001 empty;
  set XX0XW01 empty;

  XX0XS01();
  OBWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OBWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  TA1REC.TA1MAP = "OB0KM001"; /* map name*/
  OB0KW01.OB0KWCMT = "N";
  OB0KW01.OB0KWCHG = "N";

end // end OB0KS01

// BUILD MAP
Function OB0KS10()

   /* build temp storage*/

  OB0KS11();

   /* move headings to map*/

  OB0KS12();

   /* move comment array to map*/

  OB0KS13();

   /* reset field attributes*/

  OB0KS16();

  if (OB0KM001.OP4TXT[1] == " ")
    OB0KM001.CAMSG = "NO COMMENTS FOR THIS ORDER";
  end

end // end OB0KS10

// select and load obf5 - comment
Function OB0KS11()



   /* select all order comments*/
   /* write a temporary storage record (obf5) for*/
   /* each map full of comments - 12 msgs per screen*/

  XSOBT5P(); /* purge temp storage 5 to start clean*/

   /* build record to pass to select comments*/

  OB0KSB1();

   /* get all the comments for the order*/

  OB0KSS1();


  OB0KW01.OB0KWEOF = "N"; /* set end of file flag to no*/

  OB0KSN1(); /* select next for temp storage 5*/


  while (OB0KW01.OB0KWEOF == "N") /* while there are comments selected*/
    OB0KSL1(); /* load and write temp storage 5*/
  end

  if (OB1REC.OB1PARLF == "N") /* order not partially loaded*/
    set OBEREC empty; /* either as the last page or if no comments*/
    XSOBT5W(); /* write one blank record*/
  end

  OBWREC.OBWTSF5P = 1; /* set page number*/
  OBWREC.OBWTSF5S = 1; /* position cursor on first message*/
   /* total number of pages was set in write statement group*/


   /* close scan*/

  OB0KSC1();

   /* *************************************************************/
end // end OB0KS11

// MOVE DATA TO MAP
Function OB0KS12()

     /* move map headings*/

  OB0KM001.OB0KMPRC = "OB0K010"; /* process name*/
  OB0KM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/
  OB0KM001.OBWORDER = OBWREC.OBWORDER; /* formatted order num*/
  OB0KM001.OBWCUST = OBWREC.OBWCUST; /* formatted company number*/
  OB0KM001.OP1CUPO = OBWREC.OP1CUPO; /* purchase order*/
  OB0KM001.KUMSTRNM = OBWREC.KUMSTRNM; /* store name*/
  OB0KM001.OBWTSF5M = OBWREC.OBWTSF5M; /* max pages*/

  OB0KM001.OBWTSF5P = OBWREC.OBWTSF5P; /* current page*/

end // end OB0KS12

// MOVE COMMENTS TO MAP
Function OB0KS13()

   /* read temp storage page*/

  XSOBT5R();

   /* move comments*/

  OB0KS15();

end // end OB0KS13

// MOVE COMMENTS TO MAP
Function OB0KS15()

  OB0KM001.OBWTSF5P = OBWREC.OBWTSF5P;
  OBWREC.OBWTSF5S = 1; /* init sub to 1*/

  while (OBWREC.OBWTSF5S <= 12)
    OB0KM001.ZZZCHGDT[OBWTSF5S] = OBEREC.ZZZCHGDT[OBWTSF5S];
    OB0KM001.OP4TXT[OBWTSF5S] = OBEREC.OP4TXT[OBWTSF5S];
    OBWREC.OBWTSF5S = OBWREC.OBWTSF5S + 1;
  end


end // end OB0KS15

// RESET FIELD ATTRIBUTES
Function OB0KS16()

  if (OB1REC.YOBCD == "XL" /* canceled*/
   || OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    OB0KS18(); /* set fields autoskip*/
  else
    OB0KS17(); /* set fields defined*/
  end

  if (OB0KM001.OP4TXT[1] == " ")
    set OB0KM001.OP4TXT[1] cursor;
  else
    set OB0KM001.OBWTSF5P cursor;
  end
end // end OB0KS16

// SET FIELDS DEFINED
Function OB0KS17()

  set OB0KM001.OBWTSF5P initialAttributes;

  OBWREC.OBWTSF5S = 1;
  while (OBWREC.OBWTSF5S <= 12)
    set OB0KM001.OP4TXT[OBWTSF5S] initialAttributes;
    set OB0KM001.ZZZCHGDT[OBWTSF5S] initialAttributes;
    OBWREC.OBWTSF5S = OBWREC.OBWTSF5S + 1;
  end

end // end OB0KS17

// SET FIELDS AUTOSKIP
Function OB0KS18()

  set OB0KM001.OBWTSF5P initialAttributes;

  OBWREC.OBWTSF5S = 1;
  while (OBWREC.OBWTSF5S <= 12)
    if (OB0KM001.OP4TXT[OBWTSF5S] == " ")
      set OB0KM001.OP4TXT[OBWTSF5S] skip, invisible;
      set OB0KM001.ZZZCHGDT[OBWTSF5S] skip, invisible;
    else
      set OB0KM001.OP4TXT[OBWTSF5S] skip;
      set OB0KM001.ZZZCHGDT[OBWTSF5S] skip;
    end
    OBWREC.OBWTSF5S = OBWREC.OBWTSF5S + 1;
  end

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    if (OB0KM001.CAMSG == " ")
      OB0KM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end

end // end OB0KS18

// EDIT MAP
Function OB0KS20()

   /* edit page number*/

  OB0KS21();

   /* edit pf7/pf8*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    OB0KS22();
  end

end // end OB0KS20

// EDIT PAGE NUMBER
Function OB0KS21()

   /* determine if current page is within range*/

  if (OB0KM001.OBWTSF5P > OB0KM001.OBWTSF5M /* page # > max page #*/
   || OB0KM001.OBWTSF5P < 1)                /* or less than 1*/
    converseLib.validationFailed(084); /* page # must be between 1 and max page #*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0KM001.OBWTSF5P cursor, bold;
    OB0KM001.OBWTSF5P = OBWREC.OBWTSF5P; /* reset page number*/
  end

end // end OB0KS21

// EDIT PF7/PF8
Function OB0KS22()

    /* pf7 edit*/

  if (converseVar.eventKey is pf7
   && OB0KM001.OBWTSF5P == 1) /* page 1*/
    converseLib.validationFailed(086); /* cannot scroll backward*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0KM001.OBWTSF5P cursor, bold;
  end

   /* pf8 edit*/

  if (converseVar.eventKey is pf8
   && OB0KM001.OBWTSF5P == OB0KM001.OBWTSF5M) /* current page = last page*/
    converseLib.validationFailed(087); /* cannot scroll forwardd*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0KM001.OBWTSF5P cursor, bold;
  end

   /* check for page chang when pf7 or pf8*/

  if (OB0KM001.OBWTSF5P != OBWREC.OBWTSF5P) /* current page has changed*/
    converseLib.validationFailed(085); /* cannot chg page # and fp7/pf8 at same time*/
    set OB0KM001.OBWTSF5P cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    OB0KM001.OBWTSF5P = OBWREC.OBWTSF5P; /* reset page number*/
  end


end // end OB0KS22

// MOVE MAP TO TEMP STORAGE
Function OB0KS30()

    /* move map fields to temp storage*/

  OBWREC.OBWTSF5S = 1; /* init subscript*/
  OB0KW01.OB0KWTCG = "N"; /* text changed flag*/

  while (OBWREC.OBWTSF5S <= 12)
    if (OB0KM001.OP4TXT[OBWTSF5S] != OBEREC.OP4TXT[OBWTSF5S])
      OBEREC.OP4TXT[OBWTSF5S] = OB0KM001.OP4TXT[OBWTSF5S];
      OBEREC.ZZZCHGDT[OBWTSF5S] = OBWREC.ZZZCHGDT;
      OB0KM001.ZZZCHGDT[OBWTSF5S] = OBWREC.OBWCDATE;
      OB0KW01.OB0KWTCG = "Y"; /* set comments changed flag*/
    end
    OBWREC.OBWTSF5S = OBWREC.OBWTSF5S + 1;
  end

  if (OB0KW01.OB0KWTCG == "Y")
    XSOBT5U(); /* update temp storage*/
  end

end // end OB0KS30

// CHECK FOR PAGING
Function OB0KS40()

  OB0KW01.OB0KWPAG = "N"; /* init paging flag*/

  if (converseVar.eventKey is pf7)
    OBWREC.OBWTSF5P = OBWREC.OBWTSF5P - 1; /* subtract 1 from page*/
    OB0KW01.OB0KWPAG = "Y"; /* page changed flag*/
  end

  if (converseVar.eventKey is pf8)
    OBWREC.OBWTSF5P = OBWREC.OBWTSF5P + 1; /* add 1 to to page*/
    OB0KW01.OB0KWPAG = "Y"; /* page changed flag*/
  end

  if (converseVar.eventKey is enter)
    if (OB0KM001.OBWTSF5P != OBWREC.OBWTSF5P) /* new page*/
      OBWREC.OBWTSF5P = OB0KM001.OBWTSF5P; /* format new page number*/
      OB0KW01.OB0KWPAG = "Y"; /* page changed flag*/
    end
  end


end // end OB0KS40

// UPDATE
Function OB0KS50()

  if (OBWREC.OBWERRFL == "Y") /* order has error*/
    return;
  end

  if (OB1REC.OB1PARLF == "Y") /* partially loaded order*/
    return;
  end

  if (OB1REC.YOBCD == "XL" /* order is canceled*/
   || OB1REC.YOBCD == "CA" /* order cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    return;
  end

  if (OB0KW01.OB0KWTCG == "N") /* no changes*/
    return;
  end

  if (OB0KW01.OB0KWPAG == "Y") /* page number changed*/
    return;
  end

  OB0KS51(); /* update ob4rec*/

  OB0KS59(); /* update the header*/

  XSOBT2C(); /* update temp storage for errors*/

  OBWREC.CAMSG = "COMMENTS SUCCESSFULLY UPDATED";

end // end OB0KS50

// UPDATE OB4REC
Function OB0KS51()

   /* delete existing comment records*/

  OB0KS52();

   /* update ob4rec from temp storage (oberec)*/

  OB0KW01.OP4TRSEQ = 1;
  OBWREC.OBWTSF5P = 1; /* set temp storage page to 1*/

  while (OBWREC.OBWTSF5P <= OBWREC.OBWTSF5M) /* current page < max pages*/
    OB0KS53(); /* read temp storage and update ob4rec*/
    OBWREC.OBWTSF5P = OBWREC.OBWTSF5P + 1; /* increment page number*/
  end

end // end OB0KS51

// DELETE ALL COMMENTS (OB4REC)
Function OB0KS52()

   /* delete all the comment records for the current order*/

  set OBKREC empty;
  set OB4REC empty;
  set SQLCA empty;

   /* build the key*/

  OBKREC.OBKTASK = "D";
  OB4REC.OP1PARTN = OB1REC.OP1PARTN; /* move part char*/
  OB4REC.OP1CUOID = OB1REC.OP1CUOID; /* move cust ord id*/
  OB4REC.OP1NORID = OB1REC.OP1NORID; /* move nike ord id*/
  OB4REC.OP4TRTYP = "C"; /* move 'comments' to rec type*/

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 /* good return*/
   || SQLCA.VAGen_SQLCODE == 100) /* none found*/
       /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBTEXT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0KS52 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* key to record*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS05();
    else
      XSOBEDR();
    end
  end


end // end OB0KS52

// READ TEMP and UPDATE OB4REC
Function OB0KS53()

    /* read a page of temp storage*/

  XSOBT5R();

  OBWREC.OBWTSF5S = 1; /* init subscript to 1*/

  set SQLCA empty;

  while (OBWREC.OBWTSF5S <= 12) /* sub le 12 comment lines*/
    OB0KS54(); /* move and write ob4rec*/
    OBWREC.OBWTSF5S = OBWREC.OBWTSF5S + 1;
  end


end // end OB0KS53

// MOVE AND WRITE OB4REC
Function OB0KS54()

  set OBKREC empty;
  set SQLCA empty;
  set OB4REC empty;

  if (OBEREC.OP4TXT[OBWTSF5S] == " ")
    return;
  end

   /* comments are only written if text exists*/

  if (OBEREC.OP4TXT[OBWTSF5S] != " ")
    set OBKREC empty;
    set SQLCA empty;
    set OB4REC empty;
    OBKREC.OBKTASK = "A";
    OB4REC.OP1PARTN = OB1REC.OP1PARTN; /* move part char*/
    OB4REC.OP1CUOID = OB1REC.OP1CUOID; /* move cust ord id*/
    OB4REC.OP1NORID = OB1REC.OP1NORID; /* move nike ord id*/
    OB4REC.OP4TRTYP = "C"; /* move 'comments' to rec type*/
    OB4REC.OP4TXT = OBEREC.OP4TXT[OBWTSF5S]; /* move map text*/
    OB4REC.ZZZCHGDT = OBEREC.ZZZCHGDT[OBWTSF5S];
                                   /* set up to chg date*/
    OB4REC.OP4TRSEQ = OB0KW01.OP4TRSEQ; /* sequence number*/

    call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
      OB0KW01.OB0KWCMT = "Y"; /* set comments exist flag*/
      OB0KW01.OP4TRSEQ = OB0KW01.OP4TRSEQ + 1;
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBTEXT01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "A        "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0KS54 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* key to record*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS05();
      else
        XSOBEDR();
      end
    end
  end

end // end OB0KS54

// UPDATE OB1REC
Function OB0KS59()

  OB1REC.YOBCD = "NC";


  set SQLCA empty;
  set OBFREC empty;

  OB1REC.OP1OMCMF = OB0KW01.OB0KWCMT;
  OB1REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB1REC.ZZZCHGTM = OBWREC.ZZZCHGTM;

  OBFREC.OBFTASK = "U ";

  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
       /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
         /* flag will be set in batch edit*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBHDR01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "U        "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5160  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0KS59 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "        "; /* key to record*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBEDP();
      else
        XSOBEDR();
      end
    end
  end

end // end OB0KS59

// build record to pass to db2
Function OB0KSB1()


   /* build record to pass to select order comments*/


  set OB4REC empty;


  OB4REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB4REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB4REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/
  OB4REC.OP4TRTYP = "C"; /* text record type*/



   /* *************************************************************/
end // end OB0KSB1

// build obf5 - comments
Function OB0KSB2()



   /* load temp storage 5 - obf5*/

  OBEREC.OBEMSEL[OBWTSF5S] = " ";
  OBEREC.OP4TXT[OBWTSF5S] = OB4REC.OP4TXT; /* comment*/
  OBEREC.OP4TRSEQ[OBWTSF5S] = OB4REC.OP4TRSEQ; /* sequence nbr*/
  OBEREC.ZZZCHGDT[OBWTSF5S] = OB4REC.ZZZCHGDT; /* set up date*/
                /* ; date will be formatted for screen later*/

   /* *************************************************************/
end // end OB0KSB2

// close comment set
Function OB0KSC1()


   /* close scan*/

  set OBKREC empty;
  set SQLCA empty;
  OBKREC.OBKTASK = "CS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-close  scan*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOBTXT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "CS      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0KSC1 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* extra key*/
    XSOBEDC(); /* abort routine - no reset done*/
  end



   /* *************************************************************/
end // end OB0KSC1

// load & write obf5 - comments
Function OB0KSL1()



   /* load and write temp storage 5 - obf5*/

  set OBEREC empty; /* init temp storage record*/

  OBWREC.OBWTSF5S = 1; /* init sub to first comment*/

  while (OBWREC.OBWTSF5S <= 12
   && OB0KW01.OB0KWEOF == "N")

    OB0KSB2(); /* build temp storage 5*/
    OBWREC.OBWTSF5S = OBWREC.OBWTSF5S + 1; /* increment storage sub*/

    OB0KSN1(); /* select next comment*/

  end


   /* write temp storage 5*/

  XSOBT5W();



   /* *************************************************************/
end // end OB0KSL1

// select next for obf5 - cmts
Function OB0KSN1()



   /* select next comments for loading temp storage 5*/


  set OBKREC empty;
  set SQLCA empty;
  OBKREC.OBKTASK = "SN";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* select next*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0KW01.OB0KWEOF = "Y";
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBTXT01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "SN      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0KSN1 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* record type*/
      if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
        XSOBEDP(); /* post routine - no reset done*/
        OBWREC.CAMSG = "DATABASE BUSY - REENTER CHANGES AND TRY AGAIN";
        XSOBP00(); /* start appl over*/

      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end





   /* *************************************************************/
end // end OB0KSN1

// Edit pfkeys for OB0K
Function OB0KSPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    XSOBP01();
    OB0KM001.CAMSG = OBWREC.OBWHELP; /* redisplay if no help*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf6)
    XSOBP06();
  end

  if (converseVar.eventKey is pf7
   && OBWREC.OBWERRFL == "N")
    OB0KS13();
    OB0KS16();
  end

  if (converseVar.eventKey is pf8
   && OBWREC.OBWERRFL == "N")
    OB0KS13();
    OB0KS16();
  end

  if (converseVar.eventKey is pf9)
    XSOBP09();
  end

  if (converseVar.eventKey is pf13)
    XSOBP13();
  end

  if (converseVar.eventKey is pf14)
    XSOBP14();
  end

  if (converseVar.eventKey is pf15)
    XSOBP15();
  end

  if (converseVar.eventKey is pf16)
    XSOBP16();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf19)
    XSOBP19();
  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end



  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    if (OB0KW01.OB0KWPAG == "Y")
      OB0KS13();
      OB0KS16();
    else
      if (OB0KW01.OB0KWTCG == "Y") /* comments were updated*/
        XSOBP00();
      else
        XSOBP09();
      end
    end
  end

end // end OB0KSPF

// get cmts to display
Function OB0KSS1()


   /* get all the comments for the order*/

  set OBKREC empty;
  set SQLCA empty;
  OBKREC.OBKTASK = "SS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VOBTXT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0KSS1 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* text rec type*/
    XSOBEDC(); /* abort routine - no reset done*/
  end



   /* *************************************************************/
end // end OB0KSS1

// read temp storage 5 - comments
Function XSOBT5R()



   /* read temporary storage 5*/

  set OBEREC empty;

  TA5REC.TA5APPID = "OBF5"; /* appl identification*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = OBWREC.OBWTSF5P; /* current page*/
  OBEREC.OBETSLEN = 808; /* length of record*/

  call "TA0050" (OBEREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "READ TS5";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    XSOBENP(); /* post, no rollback, non db2 diags*/


  end
end // end XSOBT5R

// update temp storage 5 - comnts
Function XSOBT5U()



   /* update temporary storage 5*/

  TA5REC.TA5APPID = "OBF5"; /* appl identification*/
  TA5REC.TA5FNCCD = "U"; /* function code*/
  TA5REC.TA5TSQIX = OBWREC.OBWTSF5P; /* current page*/
  OBEREC.OBETSLEN = 808; /* length of record*/

  call "TA0050" (OBEREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "UPD TS5";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    XSOBENP(); /* post, no rollback, non db2 diags*/


  end
end // end XSOBT5U

// write temp storage 5 - comnts
Function XSOBT5W()



   /* write temporary storage 5*/

  TA5REC.TA5APPID = "OBF5"; /* appl identification*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  OBEREC.OBETSLEN = 808; /* length of record*/

  call "TA0050" (OBEREC, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD == 0)
    OBWREC.OBWTSF5M = TA5REC.TA5TSQIX;
  else
    TA1REC.TA1LOCAT[1] = "ADD TS5";
    TA1REC.TA1LOCAT[2] = "TA0050"; /* io mod called*/
    TA1REC.TA1LOCAT[3] = TA5REC.TA5RTNCD; /* return code*/
    TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* subroutine parms*/
    XSOBENP(); /* post, no rollback, non db2 diags*/


  end
end // end XSOBT5W

Record OB0KW01 type basicRecord
  10 OB0KWCHG OB0KWCHG ; 
  10 OB0KWPAG OB0KWPAG ; 
  10 OB0KWCMT OB0KWCMT ; 
  10 OB0KWTCG OB0KWTCG ; 
  10 OB0KWEOF OB0KWEOF ; 
  10 OP4TRSEQ OP4TRSEQ ; 
end // end OB0KW01

// changes made flag
DataItem OB0KWCHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// comments exist flag
DataItem OB0KWCMT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of file flag
DataItem OB0KWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// page change flag
DataItem OB0KWPAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// text changed flag
DataItem OB0KWTCG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

