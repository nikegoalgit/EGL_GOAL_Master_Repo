package ob0w;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ob.common.*;
import ta.common.*;
//*** PROGRAM=OB0W ****
//   This program maintains information about a selected error
// message.  This screen can be accessed entering 'OB0W' on any
// screen that allows fastpathing and security permits entry to
// this application.
//   To transfer out of this screen, use pf3 or pf4.
// 
// 102694   schase   chg to obwrec.
// 060295   CRAINE   chg to obwrec.
// 060397   rgilli   YR2000 - Regen to ensure correct ver.
//                            of xx0xs01 is included.
// *********************
Program OB0W type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OB0WW01 OB0WW01; // record
  OB6REC OB6REC; // record
  OBLREC OBLREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OB0WM.OB0WM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0W000: OB0W000();
    goto OB0W010;
    OB0W010: OB0W010();
    goto OB0W010;
  end // end main
end // end OB0W

// EXECUTE PROCESS
Function OB0W000()
     /* Check csp and order batch security*/

  XSENTRY();

     /* Initialize application*/

  OB0WS01();


end // end OB0W000

// CONVERSE OB0WM001
Function OB0W010()

  converseLib.clearScreen();
   /* replace mapname and uncomment*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/

  converse OB0WM001 ;

     /* Init error stuff*/

  set OB0WM001.OB6MSGNB initialAttributes;
  OB0WM001.CAMSG = " ";
  OB0WW01.OB0WWERR = "N";
  converseLib.validationFailed(0);

  OB0WS10(); /* get messages*/

  if (converseVar.eventKey is enter
   && OB0WW01.OB0WWERR == "N")
    OB0WS20(); /* update*/
  end

     /* Edit PF Keys*/

  OB0WSPF();

end // end OB0W010

// INITIALIZE APPLICATION
Function OB0WS01()

  set OBLREC empty;
  set OBLREC empty;
  set TA1REC empty;
  set TAEREC empty;
  set TA5REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set OB0WW01 empty;


  set XX0XW01 empty;
  XX0XS01();
  OB0WW01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OB0WW01.ZZZCHGTM = XX0XW01.XX0XWTIM;

  set OB0WM001 empty;

  TA1REC.TA1MAP = "OB0WM001"; /* map name*/
  OB0WM001.OB0WMPRC = "OB0W010"; /* process name*/
  OB0WM001.OBWCDATE = VGVar.currentShortGregorianDate; /* current date*/

end // end OB0WS01

// DISPLAY HELP MESSAGES
Function OB0WS10()


   /* get the message description*/

  OB0WS12();

  if (OB0WW01.OB0WWERR == "Y")
    return;
  end

   /* display help messages*/


  if (OBLREC.OB6MSGNB != OB0WM001.OB6MSGNB)
    OB0WS11(); /* it changed so read the messages*/
    set OB0WM001.OBLMSGTX[1] cursor, initialAttributes;
    OB0WW01.OB0WWERR = "Y";
  end






end // end OB0WS10

// READ INFORMATION RECORDS
Function OB0WS11()

    /* clear the map*/


  OB0WW01.OB0WWSUB = 1;
  while (OB0WW01.OB0WWSUB <= 16)
    OB0WM001.OBLMSGTX[OB0WWSUB] = " ";
    OB0WW01.OB0WWSUB = OB0WW01.OB0WWSUB + 1;
  end

   /* get the message description*/

  OB0WS12();

  if (OB0WW01.OB0WWERR == "Y")
    return;
  end

  OBLREC.OB6MSGNB = OB6REC.OB6MSGNB; /* record key*/

    /* select set of information records for message*/

  OB0WW01.OB0WWFND = "N"; /* messages found flag*/

  OB0WSS1();

    /* select next information record for message*/

  while (SQLCA.VAGen_SQLCODE == 0) /* end of file*/
    OB0WSN1();
  end

    /* close set*/

  OB0WSC1();

end // end OB0WS11

// GET ERR/HOLD DESCRIPTION
Function OB0WS12()

   /* First get the message description*/

  set OB6REC empty;
  set SQLCA empty;


  OB6REC.OB6MSGNB = OB0WM001.OB6MSGNB; /* map msg nbr*/

  call "IO5200" ("S ", SQLCA, OB6REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OB0WM001.OB6MSGDS = OB6REC.OB6MSGDS;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(136);
      set OB0WM001.OB6MSGNB cursor, bold;
      OB0WW01.OB0WWERR = "Y";
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5200  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0WS12 "; /* statement group*/
      TA1REC.TA1TBLKE = OB6REC.OB6KEY; /* move system key*/
      OB0WS99();
    end
  end


end // end OB0WS12

// REWRITE HELP MESSAGES
Function OB0WS20()
    /* This routine will try to delete all messages first.*/
    /* Then insert a message line for each message on the map*/
    /* The map subscript is use for the sequence number.*/

  OB0WW01.OB0WWUPD = "N"; /* init update flag*/


  OB0WS25(); /* delete existing messages*/

  OB0WWSUB = 1; /* start with first message*/

  while (OB0WW01.OB0WWSUB <= 16)
    if (OB0WM001.OBLMSGTX[OB0WWSUB] == " ") /* skip blank lines*/
       /* skip it*/
    else
      OB0WS30(); /* insert message*/
    end
    OB0WW01.OB0WWSUB = OB0WW01.OB0WWSUB + 1;
  end


  if (OB0WW01.OB0WWUPD == "Y")
    OB0WM001.CAMSG = "HELP TEXT SUCCESSFULLY UPDATED";
  end

end // end OB0WS20

// DELETE EXISTING MESSAGES
Function OB0WS25()

   /* delete all help message lines.*/

  set OBLREC empty;
  OBLREC.OB6MSGNB = OB6REC.OB6MSGNB;

  call "IO5260" ("D ", SQLCA, OBLREC); /* nomaps,noncsp*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* all is well*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0WS25 "; /* statement group*/
    TA1REC.TA1TBLKE = OBLREC.OB6MSGNB; /* key*/
    if (SQLCA.VAGen_SQLCODE == -911)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* rollback just in case*/
      OB0WS99(); /* abort routine - no reset done*/
    else
      OB0WS99(); /* abort routine - no reset done*/
    end
  end



   /* *************************************************************/

end // end OB0WS25

// INSERT HELP MESSAGES
Function OB0WS30()

   /* Build and insert help message line. The map subscript is*/
   /* used for the sequence number.*/

  set OBLREC empty;
  OBLREC.OBLMSGTX = OB0WM001.OBLMSGTX[OB0WWSUB];
  OBLREC.OBLMSSEQ = OB0WW01.OB0WWSUB;
  OBLREC.OB6MSGNB = OB6REC.OB6MSGNB;
  OBLREC.ZZZCHGDT = OB0WW01.ZZZCHGDT;
  OBLREC.ZZZCHGTM = OB0WW01.ZZZCHGTM;
  OBLREC.ZZZCHGCT = 0;
  OBLREC.ZZZSDT = OB0WW01.ZZZCHGDT;
  OBLREC.ZZZSTM = OB0WW01.ZZZCHGTM;



  call "IO5260" ("A ", SQLCA, OBLREC); /* nomaps,noncsp*/

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0WW01.OB0WWUPD = "Y";
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0WSS1 "; /* statement group*/
    TA1REC.TA1TBLKE = OBLREC.OB6MSGNB; /* key*/
    if (SQLCA.VAGen_SQLCODE == -911)
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* rollback*/
      OB0WS99(); /* abort routine - no reset done*/
    else
      OB0WS99(); /* abort routine - no reset done*/
    end
  end



   /* *************************************************************/

end // end OB0WS30

// DB2 DIAG'S
Function OB0WS99()

   /* common routine use for all db2 non zero or 100 returns*/


  set ERRSQLCA empty;
  move SQLCA to ERRSQLCA withV60Compat;
  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RETN";
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* to close cursors*/
  try
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  end
  XSPF4(); /* master menu*/
  exit program; /* master menu failure*/


end // end OB0WS99

// CLOSE SET
Function OB0WSC1()

   /* close scan*/

  set SQLCA empty;

  call "IO5260" ("C1", SQLCA, OBLREC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-close  scan*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "C1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0WSC1 "; /* statement group*/
    TA1REC.TA1TBLKE = OBLREC.OB6MSGNB; /* key*/
    OB0WS99(); /* abort routine - no reset done*/
  end


end // end OB0WSC1

// SELECT NEXT ON MSG INFO
Function OB0WSN1()

   /* select next comments*/

  set SQLCA empty;

  call "IO5260" ("N1", SQLCA, OBLREC) {isNoRefresh = yes, isExternal = yes}; /* select next*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OB0WM001.OBLMSGTX[OBLMSSEQ] = OBLREC.OBLMSGTX;
    OB0WW01.OB0WWFND = "Y"; /* found some messages*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* end of file*/
       /* next sentence*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "N1      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0WSN1 "; /* statement group*/
      TA1REC.TA1TBLKE = OBLREC.OB6MSGNB; /* key*/
      OB0WS99();
    end
  end


end // end OB0WSN1

// EDIT AND PROCESS PFKEYS
Function OB0WSPF()



   /* Transfer control to the Main Menu.*/

  if (converseVar.eventKey is pf4)
    XSPF4();
  end

   /* Application will transfer to from application*/

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = COMMAREA.CAFROMAP;
    XSEXIT();
  end

   /* Application will transfer to itself*/

  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
  end

end // end OB0WSPF

// SELECT SET ON MSG INFO
Function OB0WSS1()

   /* get all the comments for the error*/

  set SQLCA empty;

  call "IO5260" ("S1", SQLCA, OBLREC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0WSS1 "; /* statement group*/
    TA1REC.TA1TBLKE = OBLREC.OB6MSGNB; /* key*/
    OB0WS99(); /* abort routine - no reset done*/
  end



   /* *************************************************************/
end // end OB0WSS1

//*** RECORD=OB0WW01 ****
// OB0S record workarea
// ***********************
Record OB0WW01 type basicRecord
  10 OB0WWERR OB0WWERR ; 
  10 OB0WWUPD OB0WWUPD ; 
  10 OB0WWFND OB0WWFND ; 
  10 OB0WWSUB OB0WWSUB ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
end // end OB0WW01

// error flag
DataItem OB0WWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// messages found flag
DataItem OB0WWFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map subscript
DataItem OB0WWSUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update flag
DataItem OB0WWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

