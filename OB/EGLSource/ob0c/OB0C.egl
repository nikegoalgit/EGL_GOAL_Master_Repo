package ob0c;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import vv.common.*;
import ww.common.*;
//*** PROGRAM=OB0C ****
// this application will read, display and allow changes to the
// need date, division, gpc, brand when they are invalid.
// changes will also be allowed for the po number and bulk cd
// customer number(company, store and dept), order class, bulk
// id, sales program, agency/rep, sales office, and vbase ord.
// when thew all suborders flag is set to 'y' all changes are
// applied to all suborders for the order. when 'n' only the
// displayed suborder is updated.uctions for the customer.
// ;
// ************************************************************
// *      M A I N T E N A N C E   L O G                       *
// ************************************************************
// * DATE     NAME      DESCRIPTION OF CHANGE
// * 9/20/90  CRAINE    ADDED ORDER WRITTEN DATE TO MAP
// *10/23/90  jloyer    bug#386: ob0cs29 - changed if statement
// *                    from "if xsocd = '9'" to '09'
// *11/14/90  CBECK     Bug #415: ob0cs31 - reformat customer
// *                    number if store updated; update OBWREC.
// *                    split ob0cs13 into two statement groups
// *                    (ob0cs13 to format order id, ob0cs1a to
// *                    format customer number). ob0cs32 - add
// *                    call to ob0cs1a and ob0cs1b.  write
// *                    ob0cs1b to update new cust info.
// *01/25/91  tfox      remove line of code in s22 tha called
// *                    s29 edit accessories. all sales pgm
// *                    edits will be done in ob1050 with a
// *                    call to op1670.
// *02/14/91  dmeier    ob0cs1b - get ship to address id from
// *                    kumrec instead of kunrec (db changes)
// *04/16/91  craine    dept code changes - log # 592, move map
// *                    dept code to objrec, pass record for
// *                    OB1220.
// *05/06/91  craine    Add edit for department code. s21, s29
// *05/22/91  schen     log #554 - data base changes
// *                    changed kunrec.kuncrfl to kucrec.
// *                    kucvndfl in ob0cs1b.
// *05/28/91  dflesh    log #624 add received date to map. s50.
// *06/11/91  dharri    database chgs -kuncrfl renamed kucvndfl
// *                    stmt ob0cs1b.
// *08/09/91  JLoyer    Log #671-A: Add repnet-file-nbr to map,
// *                    (ob1xrefn).  Changed ob0cm001, ob0cs50.
// *10/08/91  dmeier    db2 changes - removed op1owrdt. changed
// *                    ob0cm001, obocs12, ob0cs31, ob0cs50,
// *                    and ob0hw03.
// *0113/92   gwells    724 - if gpc is 01, gpc is considered
// *                          valid for customer if any gpc
// *                          exists for customer. s21,s51 and
// *                          s52 (new).
// *03/20/92  tmorri    modified 000, 010, s40, s42 -
// *                    updates not allowed for order status
// *                    'cl' or 'ca'.
// *03/02/93  skott     s26 - added source '07' for SST
// *05/27/93  clenni    ob0cs45 - changed view name to vobhdr01
// *05/19/94  scantr    virtual airspeed project: chgd obwrec,
// *                    xsobs02,s03, added xsobs10
// *05/24/94  scantr    changed xsobs03
// *06/03/94  dbruih    VAS: Added agency, sales rep, bulk type
// *                    bulk order ID to pgm for entry.  Also
// *                    allowed entry of gpc, div brand and
// *                    order class.
// *                    Modified modules: OB0CM001, OB0CS21, 31
// *                    41, 42, 40, OB0CS-AGCY-REP,
// *                    OB0CS-SALEREPNM, OB0CW01.
// *06/08/94   craine   rewrite to call relational edit.
// *08/08/94   CRAINE   add s34 to delete/insert when company
// *                    has changed.
// *08/16/94   craine   chg s32 to not update when order in xl,
// *                    'dl', ld, or ca status, add to update
// *                    only when ob0cmupf is 'y' or 'n' - s30
// *08/30/94   craine   change to xsobs-full-edit, add online
// *                    edit to pf12, block 'dl', 'ld' orders
// *                    from update and online edit
// *09/06/94   craine   change to obwrec
// *10/06/94   craine   add xsobs-add-new-oba
// *10/25/94   craine   change to obwrec
// *11/02/94   craine   change to not overlay need date unless
// *                    the ob1rec need date is 0 - S34, S31
// *                    also init agency and rep when company
// *                    changes so it will be recalculated -S31
// *11/15/84   craine   chg to xsobp24
// *01/30/94   craine   chg to xsobs-upd-oba-edit
// *04/27/95   craine   allow for new yobcd 'pd' and 'lp'.
// *08/07/95   craine   DATABASE CHANGES
// *10/25/95   CBRINE   Don't allow cust change from one with
// *                    xref at product level to one with xref
// *                    at size level (OB0CS21). Also added
// *                    code to OB0CS28 to by-pass check for y
// *                    or n if errors exist.
// *02/07/96   CBRINE   When checking if bulk order id exists,
// *                    also make sure that it is a bulk -
// *                    OB0CS-EDIT-BULK-ID
// *11/11/96   CBRINE   If company number changes from 0 to new
// *                    number, upd ovrd records, otherwise
// *                    delete ovrd records. (OB0CS31)
// *12/07/96   csawki   Added Product Category for Equipment
// *06/24/95   joldin   If any tracked ocd fields are changed
// *                    write a VSOHCR01 record.
// *09/23/97   jnaemu   created OB0CS-ONLINE-EDIT and OB0CS-
// *                    FULL-EDIT. these are copies of XSOBS-
// *                    ONLINE-EDIT AND XSOBS-FULL-EDIT. This
// *                    is to correct the abend when an order
// *                    bridges to the order processing side
// *                    and the original order is deleted from
// *                    the Airspeed side. After returning from
// *                    OB1670, the original order is read and
// *                    when the not found condition occurs,
// *                    returns to the order select screen.
// 
// *01/28/98   SATYAM   Modified OB0C000 and OB0C010 sgrps to
//                      to update all the modified fields, as
//                      ob1670 is overlaying the modified
//                      fields with customer defaults.
// 
//  02/11/98   dsmit0   changed ob0cs-edit-chg-rsn and ob0cspf
//                      to require an xomcd when cancelling
//                      order (pf24).
//  03/24/98   vsanka   Removed use of xvotbl and added code
//                      to access dcorp.vxvo0001 using the
//                      iomod vxvo0001.
//                      The statement group changed is: S39
//  04/01/98   sgopal   Removed the commented code that
//                      accessed XVOTBL in OB0CS39 as a clean-
//                      up process.
// 11/04/98    vswam1   added code in ob0cs24 to diable order
//                      type changes from 'r1' to others
//                      and from other ordertypes to 'r1'.
// 11/6/98     svargh   changed ob0cs33 so that when the bulk
//                      quantities are updated in the header
//                      table, they are correspondingly
//                      updated in the vbulks02 table.added 2
//                      new stmtgrps: ob0cs-check-vbulk and
//                      ob0cs-updte-vbulk.
// 09/27/99    SBHARA   Timing changes
//                      added logic in Obocs24
//                      These changes will check if the order
//                      has any timing product and do the
//                      validation while editing the order
//                      type.It will allow to change only to
//                      " P1" from "P2"
// 10/27/99    SBHARA   Timing validation is been removed as
//                      the users request
// *********************
Program OB0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  KUYREC KUYREC; // record
  OB0CW01 OB0CW01; // record
  OB1REC OB1REC; // record
  OB4REC OB4REC; // record
  OB6REC OB6REC; // record
  OB7REC OB7REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBKREC OBKREC; // record
  OBLEREC OBLEREC; // record
  OBWREC OBWREC; // record
  OBZREC OBZREC; // record
  OP1REC OP1REC; // record
  OPWREC01 OPWREC01; // record
  SP1REC SP1REC; // record
  SQLCA SQLCA; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBCPOX02 VBCPOX02; // record
  VBULKS02 VBULKS02; // record
  VOCHDR01 VOCHDR01; // record
  VRAGCY02 VRAGCY02; // record
  VSOHCR01 VSOHCR01; // record
  VXVO0001 VXVO0001; // record
  WEU0100 WEU0100; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XBCTBL; // table
  use XBDTBL {deleteAfterUse = yes}; // table
  use XDVTBL; // table
  use XGPTBL; // table
  use XNDTBL; // table
  use XOBTBL; // table
  use XOCTBL; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XOTTBL; // table
  use XSOTBL; // table
  use YOBTBL; // table
  use OB0CM.OB0CM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0C000: OB0C000();
    goto OB0C010;
    OB0C010: OB0C010();
    goto OB0C010;
  end // end main
end // end OB0C

Function OB0C000()

  XSENTRY();
  XSOBS01();

    /* initalize application - init records, set zzdate/time*/
                            /* save map name for xsobe## sgrp's*/
  OB0CS01();

     /* set -911 processing flag*/

  /* TCS CHANGES BEGIN 01/28/98 **/
  OBWREC.OBW-APPLY-MODIFIED-FL = "N";
  /* TCS CHANGES END 01/28/98 **/
  OBWREC.OBWER911 = "N";

     /* determine if batch edit is running*/

  XSOBS02();

     /* read the current order header*/

  XSOBS03();

  OB0CM001.CAMSG = OBWREC.CAMSG;
  OBWREC.CAMSG = " ";

    /* build map for display*/

  OB0CS10();

    /* edit map*/

  if (OB1REC.YOBCD == "XL" /* not cancelled*/
   || OB1REC.YOBCD == "CA" /* not cleared availability*/
   || OB1REC.YOBCD == "LP" /* not cleared availability*/
   || OB1REC.YOBCD == "PD") /* not cleared availability*/
    /* continue*/
  else
    OB0CS20();
  end
end // end OB0C000

// converse ob0cm001
Function OB0C010()
  converseLib.clearScreen();
   /* set map page number*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/
  if (COMMAREA.CAFROMAP == "OM0G")
    COMMAREA.CAFROMAP = " ";
    set OB0CM001.XOMCD cursor;
  end

  converse OB0CM001 ;


     /* init error stuff*/
  OBWREC.OBWERRFL = "N"; /* init error flag*/
  converseLib.validationFailed(0); /* init error msg*/
  OBWREC.OBWHELP = OB0CM001.CAMSG; /* save msg for help screen*/
  OB0CM001.CAMSG = " "; /* initialize commarea msg line*/

    /* reset field attributes*/

  if (OB0CM001.KUCCOID is modified
   || OB0CM001.KUMSTRID is modified
   || OB0CM001.XNXCD is modified
   || OB0CM001.XGPCD is modified
   || OB0CM001.XBDCD is modified)
    OBWREC.OBW-APPLY-MODIFIED-FL = "Y";
  end

  OB0CS40();

    /* edit map*/

  if (OB1REC.YOBCD != "XL" /* not cancelled*/
   && OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "DL" /* not deleted*/
   && OB1REC.YOBCD != "LD" /* not loaded*/
   && OB1REC.YOBCD != "LP" /* not lost demand*/
   && OB1REC.YOBCD != "PD") /* not postponed demand*/
    OB0CS20(); /* edit map*/
    if (OBWREC.OBWERRFL == "N"
     && converseVar.eventKey is enter)
      OB0CS30(); /* update*/
    end
    /* if something changed on the order*/
    /* call relational edit subprogram*/
    if (OB0CW01.OB0CWUPD == "Y"
     && OBWREC.OBWERRFL == "N"
     && converseVar.eventKey is enter)
      OB0CS-ONLINE-EDIT();
    end
  end


  /* TCS CHANGES BEGIN 01/28/98 **/
  if (OBWREC.OBW-APPLY-MODIFIED-FL == "Y"
   && OBWREC.OBWERRFL == "N")
    OBW-APPLY-MODIFIED-FL = "N";
    if (OB1REC.YOBCD != "XL" /* not cancelled*/
     && OB1REC.YOBCD != "CA" /* not cleared availability*/
     && OB1REC.YOBCD != "DL" /* not deleted*/
     && OB1REC.YOBCD != "LD" /* not loaded*/
     && OB1REC.YOBCD != "LP" /* not lost demand*/
     && OB1REC.YOBCD != "PD") /* not postponed demand*/
      OB0CS20(); /* edit map*/
      if (OBWREC.OBWERRFL == "N"
       && converseVar.eventKey is enter)
        OB0CS30(); /* update*/
      end
      /* if something changed on the order*/
      /* call relational edit subprogram*/
      if (OB0CW01.OB0CWUPD == "Y"
       && OBWREC.OBWERRFL == "N"
       && converseVar.eventKey is enter)
        OB0CS-ONLINE-EDIT();
      end
    end
  end
  /* TCS CHANGES END 01/28/98 **/

    /* EDIT PFKEYS*/
  OB0CSPF();

end // end OB0C010

// DELETE/INSERT OB1REC
Function OB0CS-ADD-VSOHCR01()

   /* BUILD OCD ORDER CHANGE REASON FROM DORDER ORDER HEADER*/

  OB0CS-MAX-VSOHCR01();

  set VSOHCR01 empty;

  VSOHCR01.OP1PARTN = OB1REC.OP1PARTN;
  VSOHCR01.OP1CUOID = OB1REC.OP1CUOID;
  VSOHCR01.OP1NORID = OB1REC.OP1NORID;
  VSOHCR01.XOMCD = OB0CM001.XOMCD;
  VSOHCR01.SOCD-HDR-RSN-SEQ = OB0CW01.OB0CW-MAX-SEQ;
  VSOHCR01.SOCD-APPL-SRC-CD = "OB";
  VSOHCR01.SOCD-GLBL-MNTN-FL = "N";
  VSOHCR01.SOCD-HDR-RSN-TXT = OB0CM001.SOCD-HDR-RSN-TXT;
  if (OB0CW01.OB0CW-UPD-PO-FL == "Y")
    VSOHCR01.OP1CUPO = OB1REC.OP1CUPO;
  end
  if (OB0CW01.OB0CW-UPD-ND-FL == "Y")
    VSOHCR01.OP1CUNDT = OB1REC.OP1CUNDT;
  end
  VSOHCR01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSOHCR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VSOHCR01.ZZZSTM = XX0XW01.XX0XWTIM;
  VSOHCR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VSOHCR01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* ADD RECORD TO VSOHCR01*/

  call "VSOHCR01" ("A ", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};

end // end OB0CS-ADD-VSOHCR01

// EDIT AGENCY AND REP
Function OB0CS-AGCY-REP()

    /* EDIT AGENCY AND REP*/


  if (OB0CM001.SM4REPID == 0 /* rep-id*/
   && OB0CM001.SM1AGYID == " ") /* sales agency*/
    return;
  end


  set VRAGCY02 empty;
  set SQLCA empty;
  VRAGCY02.SM4REPID = OB0CM001.SM4REPID; /* rep-id*/
  VRAGCY02.SM1AGYID = OB0CM001.SM1AGYID; /* sales agency*/

  TA1REC.TA1DBASE = "DSLSMN  ";
  TA1REC.TA1TBLVU = "VRAGCY02";
  TA1REC.TA1LOCAT[2] = "IO0400  ";
  TA1REC.TA1LOCAT[3] = "OB0CS3H ";
  OB0CW01.OB0CWRID = OB0CM001.SM4REPID;
  OB0CW01.SM1AGYID = OB0CM001.SM1AGYID;
  TA1REC.TA1LOCAT[4] = OB0CW01.OB0CWSM5;

  call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "S3      ";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

  call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0CSRN(); /* reformat sales rep name to map*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0CM001.OB0CMREP = "UNKNOWN";
      set OB0CM001.SM1AGYID cursor, bold;
      set OB0CM001.SM4REPID bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(026); /* sales agency and rep are invalid*/
    else
      TA1REC.TA1LOCAT[1] = "N3      ";
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

  call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "C3      ";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end
end // end OB0CS-AGCY-REP

// check for equipment product
Function OB0CS-CHECK-EQMT()
   /* --------------------- ob0cs-check-eqmt ---------------------------*/

   /* determine whether or not this is an equipment product*/

  set WEU0100 empty; /* initialize the passing record*/
  set SQLCA empty; /* initialize sqlca record*/

  WEU0100.WEU0100-EQUIP-PROD-FL = "N";
  WEU0100.WEU0100-CALLING-APPL = "OB0C";
  WEU0100.SQLCAREC = SQLCA.SQLCAREC;

  WEU0100.XGPCD = SYCREC.XGPCD;
  WEU0100.SY1STNBR = SYCREC.SY1STNBR;
  WEU0100.SY2CLRID = SYCREC.SY2CLRID;
  WEU0100.XDMCD = SYCREC.XDMCD;

  OB0CS-EU0100-SU(); /* select unique*/

end // end OB0CS-CHECK-EQMT

// EDIT BULK ORDER ID
Function OB0CS-CHECK-VBULK()

   /* *************TCS INCLUDE BEGIN***********/
  set SQLCA empty;
  set OBFREC empty;
  OBFREC.OBFTASK = "S";

  call "VBULKS02" (OBFREC, SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0CS-UPDTE-VBULK();
  else
    if (SQLCA.VAGen_SQLCODE == 100)

    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "VBULKS02";
      TA1REC.TA1LOCAT[3] = "OB0CS33";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VBULKS02"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

   /* ***********TCS INCLUDE END*****************/
end // end OB0CS-CHECK-VBULK

// close VBCPOX02 cursor
Function OB0CS-CLS-VBCPOX02()


   /* close scan*/

  set SQLCA empty;
  set VBCPOX02 empty;

  call "VBCPOX02" ("C1", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes};
                                   /* i/o mod-close  scan*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "C1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0CS-CL"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "S-VBCPOX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0CS-CLS-VBCPOX02

// DELETE VBCPOX02
Function OB0CS-DEL-VBCPOX02()

   /* delete all the overrides for the order*/

  set SQLCA empty;
  set VBCPOX02 empty;

  VBCPOX02.OP1PARTN = OB1REC.OP1PARTN;
  VBCPOX02.OP1CUOID = OB1REC.OP1CUOID;
  VBCPOX02.OP1NORID = OB1REC.OP1NORID;


  call "VBCPOX02" ("D3", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* NEXT SENTENCE*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "D3      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0CS-DE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "L-VBCPOX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0CS-DEL-VBCPOX02

// EDIT BULK ORDER ID
Function OB0CS-EDIT-BULK-ID()

  if (OB0CM001.OP1BLKID == 0)
    return;
  end

    /* CHECK FOR BULK ORD ID*/

  set OP1REC empty;
  set SQLCA empty;
  OB0CW01.OB0CWORD = OB0CM001.OP1BLKID; /* set upd key*/
  OP1REC.OP1PARTN = OB0CW01.OP1PARTN; /* for op1rec*/
  OP1REC.OP1CUOID = OB0CM001.OP1BLKID; /* bulk record*/
  OP1REC.OP1NORID = 0;

  TA1REC.TA1DBASE = "DORDER  ";
  TA1REC.TA1TBLVU = "VORHDR01";
  TA1REC.TA1LOCAT[2] = "IO0430  ";
  TA1REC.TA1LOCAT[3] = "OB0CS-ED";
  TA1REC.TA1LOCAT[4] = "IT-BULK-";

  call "IO0430" ("SS", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SS      ";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

  call "IO0430" ("SN", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    sysVar.arrayIndex = 1;
    if (OP1REC.XBDCD in XBDTBL.XBDCD
     && XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y") /* make sure order is bulk*/
  /* NEXT SENTENCE*/
    else
      set OB0CM001.OP1BLKID cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(075); /* bulk not found*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set OB0CM001.OP1BLKID cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(075); /* bulk not found*/
    else
      TA1REC.TA1LOCAT[1] = "SN      ";
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

  call "IO0430" ("CS", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "CS      ";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end


end // end OB0CS-EDIT-BULK-ID

// EDIT CHANGE RSN CODE
Function OB0CS-EDIT-CHG-RSN()

   /* check for a valid change reason code*/

  if (OB1REC.YOBCD != "XL") /* if it's not already cancelled*/

    if (OB0CM001.XOMCD != "  ") /* test for a valid change code*/

      if (OB0CM001.XOMCD in XOMTBL.XOMCD /* valid maint reason*/
       && XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active maint reason*/
        if (XOMTBL.XOMCANCF[sysVar.arrayIndex] == "D" /* del product reason*/
         || XOMTBL.XOMCANCF[sysVar.arrayIndex] == "B" /* both add/decrease*/
        )                                             /* next sentence*/
        else
          OBWREC.OBWERRFL = "Y"; /* set error flg*/
          converseLib.validationFailed(234); /* rsn not valid for change*/
          set OB0CM001.XOMCD cursor, bold;
        end
      else
        OBWREC.OBWERRFL = "Y"; /* set error flg*/
        converseLib.validationFailed(234); /* rsn not valid*/
        set OB0CM001.XOMCD cursor, bold;
      end
    else
      OBWREC.OBWERRFL = "Y"; /* set error flg*/
      converseLib.validationFailed(232); /* change reason required*/
      set OB0CM001.XOMCD cursor, bold;
    end

  else

    if (OB0CM001.XOMCD != "  ") /* test for a valid change code*/

      if (OB0CM001.XOMCD in XOMTBL.XOMCD /* valid maint reason*/
       && XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active maint reason*/
        if (XOMTBL.XOMCANCF[sysVar.arrayIndex] == "A" /* add product reason*/
         || XOMTBL.XOMCANCF[sysVar.arrayIndex] == "B" /* both add/decrease*/
        )                                             /* next sentence*/
        else
          OBWREC.OBWERRFL = "Y"; /* set error flg*/
          converseLib.validationFailed(234); /* rsn not valid for change*/
          set OB0CM001.XOMCD cursor, bold;
        end
      else
        OBWREC.OBWERRFL = "Y"; /* set error flg*/
        converseLib.validationFailed(234); /* rsn not valid*/
        set OB0CM001.XOMCD cursor, bold;
      end
    else
      OBWREC.OBWERRFL = "Y"; /* set error flg*/
      converseLib.validationFailed(232); /* change reason required*/
      set OB0CM001.XOMCD cursor, bold;
    end

  end



end // end OB0CS-EDIT-CHG-RSN

// EDIT GPC CODE
Function OB0CS-EDIT-GPC()

  if (OB0CM001.XGPCD == " ")
    return;
  else
    sysVar.arrayIndex = 1;
    if (OB0CM001.XGPCD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OB0CM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
    else
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      converseLib.validationFailed(012); /* gpc code invalid or inactive*/
      OB0CM001.XGPABRV = "UNKNWN";
      set OB0CM001.XGPCD cursor, bold;
    end
  end

end // end OB0CS-EDIT-GPC

// EDIT BRAND CODE
Function OB0CS-EDIT-XBC()

  if (OB0CM001.XBCCD == " ")
    return;
  else
    sysVar.arrayIndex = 1;
    if (OB0CM001.XBCCD in XBCTBL.XBCCD
     && XBCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OB0CM001.XBCABRV = XBCTBL.XBCABRV[sysVar.arrayIndex];
    else
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      converseLib.validationFailed(012); /* brand id invalid or inactive*/
      OB0CM001.XBCABRV = "UNKNWN";
      set OB0CM001.XBCCD cursor, bold;
    end
  end

end // end OB0CS-EDIT-XBC

// EDIT BULK/DRAW CD
Function OB0CS-EDIT-XBD()

  if (OB0CM001.XBDCD == " ")
    OB0CM001.XBDCD = "0";
  end

  sysVar.arrayIndex = 1;
  if (OB0CM001.XBDCD in XBDTBL.XBDCD
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OB0CM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
    OB0CW01.XBDRWOFL = XBDTBL.XBDRWOFL[sysVar.arrayIndex];
  else
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(012); /* bulk/draw cd invalid or inactive*/
    OB0CM001.XBDABRV = "UNKNWN";
    OB0CW01.XBDRWOFL = " ";
    set OB0CM001.XBDCD cursor, bold;
    return;
  end

  if (OB0CW01.XBDRWOFL != "Y") /* if not a draw*/
    OB0CM001.OP1BLKID = 0;
  end


end // end OB0CS-EDIT-XBD

// EDIT DIVISION
Function OB0CS-EDIT-XDV()

  if (OB0CM001.XDVCD == " ")
    return;
  else
    sysVar.arrayIndex = 1;
    if (OB0CM001.XDVCD in XDVTBL.XDVCD
     && XDVTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OB0CM001.XDVABRV = XDVTBL.XDVABRV[sysVar.arrayIndex];
    else
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      converseLib.validationFailed(012); /* division cd invalid or inactive*/
      OB0CM001.XDVABRV = "UNKNWN";
      set OB0CM001.XDVCD cursor, bold;
    end
  end

end // end OB0CS-EDIT-XDV

// EDIT ORDER CLASS
Function OB0CS-EDIT-XOC()

  if (OB0CM001.XOCCD == " ")
    return;
  else
    sysVar.arrayIndex = 1;
    if (OB0CM001.XOCCD in XOCTBL.XOCCD
     && XOCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OB0CM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
    else
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      converseLib.validationFailed(012); /* order class is invalid or inactive*/
      OB0CM001.XOCABRV = "UNKNWN";
      set OB0CM001.XOCCD cursor, bold;
    end
  end

end // end OB0CS-EDIT-XOC

// EDIT CHANGE RSN CODE
Function OB0CS-EDIT-XOMCD()

   /* if any errors exist don't need to check*/
   /* whether flag is Y or N.*/

  if (OBWREC.OBWERRFL == "Y")
    return;
  end

   /* if the company changed, a new order will be written*/
   /* so we don't need get a change rsn.*/

  if (OB0CM001.KUCCOID == OB1REC.KUCCOID)
   /* NEXT SENTENCE*/
  else
    return;
  end
   /* see if any tracked OCD fields changed. If they*/
   /* did a change reason must be entered.*/

  OBWREC.OBWDT6 = OB0CM001.OB0CMNDT;
  XSOBDMC();

  if (OBWREC.OBWDT8 == OB1REC.OP1CUNDT
   && OB0CM001.OP1CUPO == OB1REC.OP1CUPO
  ) /* nothing changed*/
  else
    OB0CS-EDIT-CHG-RSN(); /* check for a valid chg rsn*/
  end



end // end OB0CS-EDIT-XOMCD

// call eu0100 select unique
Function OB0CS-EU0100-SU()
   /* ------------------- ob0cs-eu0100-su -------------------------*/

  WEU0100.WEU0100-TASK = "S ";
  WEU0100.WEU0100-CALLER-LOCATION = "OB0CS-EU0100-SU";

  try
    call "EU0100" (WEU0100) {isNoRefresh = yes, isExternal = yes};
  end /* select unique*/

  SQLCA.SQLCAREC = WEU0100.SQLCAREC;

  if (WEU0100.WEU0100-RETURN-CODE == 0) /* call successful*/
    return; /* return to ob0cs-check-eqmt*/
  end

  TA1REC.TA1MAP = WEU0100.WEU0100-RETURN-CODE; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  if (WEU0100.WEU0100-RETURN-CODE == 8) /* resource not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
  end

  TA1REC.TA1TYPE = "DB2"; /* type of error*/
  TA1REC.TA1LOC = "OB0CS-EU0100-SU"; /* program location*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* program application*/
  TA1REC.TA1PGMNO = "EU0100"; /* called program*/
  TA1REC.TA1DBASE = "DEQUIP"; /* database name*/
  TA1REC.TA1TBLVU = "VEQPRD01"; /* table view name*/
  TA1REC.TA1TBLKE = SYCREC.SYCKEY; /* table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* error diagnosis routine*/


end // end OB0CS-EU0100-SU

// CALL FULL EDIT - OB1670
Function OB0CS-FULL-EDIT()
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
  /* BUILD PASSING RECORD FOR OB1670*/
  /* CALL OB1670*/
  /* PROCESS RETURN CODES*/
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
  /*  */
  /* THIS IS A COPY OF XSOBS-FULL-EDIT. IF ANY CHANGES TO XSOBS-*/
  /* FULL EDIT, MUST BE DONE HERE.*/
  /*  */
  set OBFEREC empty;
  OBFEREC.OBFE-EDIT-OPTION = OBWREC.OBW-EDIT-FUNCTION;
  OBFEREC.OP1PARTN = OB1REC.OP1PARTN;
  OBFEREC.OP1CUOID = OB1REC.OP1CUOID;
  if (OBWREC.OBW-CHG-ALL-SUBORDS-FL == "Y")
    OBFEREC.OP1NORID = 0;
    OBWREC.OBW-CHG-ALL-SUBORDS-FL = "N";
  else
    OBFEREC.OP1NORID = OB1REC.OP1NORID;
  end
  if (COMMAREA.CACURRAP == "OB0G"
   || COMMAREA.CACURRAP == "OB0H")
    OBFEREC.OP2LNINB = OBWREC.OBWLNINB;
  else
    OBFEREC.OP2LNINB = 0;
  end
  OBFEREC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OBFEREC.ZZZCHGTM = OBWREC.ZZZCHGTM;
  OBFEREC.OBFE-APPLY-DEFAULTS-FL = OBWREC.OBW-APPLY-DEFAULTS-FL;
  OBFEREC.OBFE-OBWTSF1P = OBWREC.OBWTSF1P;
  OBFEREC.OBFE-OBWTSF1S = OBWREC.OBWTSF1S;
  OBFEREC.OBFE-OBWTSF1M = OBWREC.OBWTSF1M;
  OBFEREC.OBFE-RETURN-CD = 99;

  call "OB1670" (OBFEREC) {isNoRefresh = yes, isExternal = yes};

  TA1REC.TA1LOCAT[2] = "OB1670";
  TA1REC.TA1LOCAT[3] = "XSOBS-FU";
  TA1REC.TA1LOCAT[4] = "LL-EDIT ";
  TAEREC.TAEDESC1 = "OB1670 RETURN CODE IS ";
  TAEREC.TAEDESC2 = OBFEREC.OBFE-RETURN-CD;

  if (OBFEREC.OBFE-RETURN-CD == 0)
    /* continue at the end of this if statement*/
  else
    if (OBFEREC.OBFE-RETURN-CD == 1)
  /* HEADER NOT FOUND - when it should have been*/
      OBWREC.CAMSG = OBFEREC.OBFE-RETURN-MSG;
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* rollback updates since last commit*/
      XSOBENR(); /* appl retn - go to main menu*/
    else
      if (OBFEREC.OBFE-RETURN-CD == 2)
  /* NOT FOUND ON UPDATE - ORDER UPDATED BY BATCH OR ANOTHER CSR*/
        OBWREC.CAMSG = "ORDER UPDATED BY BATCH SYSTEM OR ANOTHER CSR -PLEASE REVIEW";
        XSOBAPR(); /* post, rollback, restart appl*/
      else
        if (OBFEREC.OBFE-RETURN-CD == 3)
  /* DATABASE DEADLOCK - DATABASE BUSY TRY AGAIN*/
          OBWREC.CAMSG = "DATABASE BUSY - PLEASE TRY AGAIN";
          XSOBAPR(); /* post, rollback, restart appl*/
        else
          if (OBFEREC.OBFE-RETURN-CD == 4)
  /* OTHER DATABASE PROBLEM - ABEND W/ROLLBACK*/
            VGVar.handleSysLibraryErrors = 0;
            sysLib.rollback(); /* rollback updates to last commit*/
            XSOBENR(); /* appl retn - go to main menu*/
          else
            if (OBFEREC.OBFE-RETURN-CD == 5)
  /* DEADLOCK IN SUBPROGRAM CALLED FROM OB1670- BUSY TRY AGAIN*/
              OBWREC.CAMSG = "DATABASE BUSY - PLEASE TRY AGAIN";
              XSOBAPR(); /* post, rollback, restart appl*/
            else
              if (OBFEREC.OBFE-RETURN-CD == 6)
  /* SUBPROGRAM CALLED FROM OB1670 FAILED*/
                VGVar.handleSysLibraryErrors = 0;
                sysLib.rollback(); /* rollback updates to last commit*/
                XSOBENR(); /* appl retn - go to main menu*/
              else
                if (OBFEREC.OBFE-RETURN-CD == 99)
  /* CALL TO OB1670 DIDN'T WORK*/
                  VGVar.handleSysLibraryErrors = 0;
                  sysLib.rollback(); /* rollback updates to last commit*/
                  XSOBENR(); /* appl retn - go to main menu*/
                else
  /* MAJOR PROBLEM WITH OB1670*/
                  VGVar.handleSysLibraryErrors = 0;
                  sysLib.rollback(); /* rollback updates to last commit*/
                  XSOBENR(); /* appl retn - go to main menu*/
                end
              end
            end
          end
        end
      end
    end
  end

   /* return code from OB1670 was good so update obwrec*/
   /* the OBAREC temp storage was updated in OB1670*/

   /* format new order number in OBWREC*/

  if (OBFEREC.OBFE-NEW-CUST-ORD-ID != 0)
    OBWREC.OP1CUOID = OBFEREC.OBFE-NEW-CUST-ORD-ID; /* db2 ord id*/
    OBWREC.OP1PARTN = OBFEREC.OBFE-NEW-ORD-PART-CHAR;
  end
  if (OBFEREC.OBFE-NEW-NIKE-ORD-ID != 0)
    OBWREC.OP1NORID = OBFEREC.OBFE-NEW-NIKE-ORD-ID;
  end

   /* now format displayed order number in OBWREC*/

  if (OBFEREC.OBFE-NEW-CUST-ORD-ID != 0
   || OBFEREC.OBFE-NEW-NIKE-ORD-ID != 0)
    OBWREC.OBWCUOID = OBWREC.OP1CUOID;
    OBWREC.OBWNOID = OBWREC.OP1NORID;
    OBWREC.OBWFMT = OBWREC.OBWORDER;
    XSOBS06();
    OBWREC.OBWORDER = OBWREC.OBWFMT;
  end

   /* re-read ob1rec*/

  /* THIS READ WAS ADDED TO THE FULL EDIT TO CHECK FOR NOT FOUND*/
  /* CONDITION. THIS CORRECTS THE ABEND WHEN THE ORDER BRIDGES TO*/
  /* THE ORDER PROCESSING SIDE AND THE ORIGINAL ORDER IN AIRSPEED IS*/
  /* DELETED. THIS READ REPLACES THE CALL TO PROCESS XSOBS03.*/

  set OB1REC empty;
  set OBFREC empty;
  set SQLCA empty;

  OB1REC.OP1CUOID = OBWREC.OP1CUOID;
  OB1REC.OP1NORID = OBWREC.OP1NORID;
  OB1REC.OP1PARTN = OBWREC.OP1PARTN;

  OBFREC.OBFTASK = "S ";

  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/

   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* check for not found. assumes order*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit all changes*/
      XSOBP03(); /* has cleared. returns to ord sel scrn*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBHDR01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5160  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "XSOBS03 "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end

   /* now update the remaining OBWREC fields for the order*/

  OBWREC.OBW-GET-ERRORS-FL = "Y";
  OBWREC.OBW-GET-HOLDS-FL = "Y";
  OBWREC.OBW-GET-ITEMS-FL = "Y";

   /* obrrec temp storage info - current page, subscript, max page*/

  if (OBWREC.OBWTSF1M != OBFEREC.OBFE-OBWTSF1M)
    OBWREC.OBWTSF1M = OBFEREC.OBFE-OBWTSF1M;
  end

  if (OBWREC.OBWTSF1S != OBFEREC.OBFE-OBWTSF1S)
    OBWREC.OBWTSF1S = OBFEREC.OBFE-OBWTSF1S;
  end

  if (OBWREC.OBWTSF1P != OBFEREC.OBFE-OBWTSF1P)
    OBWREC.OBWTSF1P = OBFEREC.OBFE-OBWTSF1P;
  end

  XSOBT1R(); /* read current temp storage fro*/
                                   /* selected orders*/

   /* the order status*/

  if (OBWREC.CAMSG == " ")
    if (OBFEREC.YOBCD == "CK")
      OBWREC.CAMSG = "ORDER EDIT SUCCESSFUL - PLEASE CHECK FOR NEW ERRORS/HOLDS";
    end
    if (OBFEREC.YOBCD == "CL")
      OBWREC.CAMSG = "ORDER EDIT SUCCESSFUL - ORDER HAS CLEARED";
    end
    if (OBFEREC.YOBCD == "DL")
      OBWREC.CAMSG = "ALL PRODUCTS HAVE MOVED TO A NEW SUBORDER/ORDER";
      OBFEREC.YOBCD = OB1REC.YOBCD;
    end
  end


  if (OBFEREC.YOBCD != OBWREC.YOBCD)
    if (OBWREC.YOBCD == "FA"
     || OBWREC.YOBCD == "LP"
     || OBWREC.YOBCD == "PD")
      if (OBFEREC.YOBCD == "CL")
         /* next sentence - keep the 'fa' status*/
      else
        OBWREC.YOBCD = OBFEREC.YOBCD;
      end
    else
      OBWREC.YOBCD = OBFEREC.YOBCD;
    end
  end



end // end OB0CS-FULL-EDIT

// MOVE FIELDS TO MAP FROM OBZREC
Function OB0CS-LDMAP-OBZREC()
  OBZREC.OBZGROUP = COMMAREA.CA-USER-WORKAREA-2K-C;

  OB0CM001.OB0CMPRC = "OB0C010"; /* process name*/
  OB0CM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

  OB0CM001.OBWORDER = OBWREC.OBWORDER; /* formatted ord num*/

  OB0CM001.KUCCOID = OBZREC.KUCCOID; /* company number*/
  OB0CM001.KUMSTRID = OBZREC.KUMSTRID; /* store id*/
  OB0CM001.XNXCD = OBZREC.XNXCD; /* department code*/
  OB0CM001.OP1CUPO = OBZREC.OP1CUPO; /* purchase order num*/
  OB0CM001.KUMSTRNM = OBWREC.KUMSTRNM; /* store name*/

  OB0CM001.OB0CMUPF = OBZREC.OP-ALL-ORDERS-FL; /* all suborders flag*/


  OB0CM001.XGPCD = OBZREC.XGPCD; /* gpc code*/
  sysVar.arrayIndex = 1;
  if (OBZREC.XGPCD in XGPTBL.XGPCD)
    OB0CM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    OB0CM001.XGPABRV = "UNKNWN";
  end

  OB0CM001.XDVCD = OBZREC.XDVCD; /* division code*/
  sysVar.arrayIndex = 1;
  if (OBZREC.XDVCD in XDVTBL.XDVCD)
    OB0CM001.XDVABRV = XDVTBL.XDVABRV[sysVar.arrayIndex];
  else
    OB0CM001.XDVABRV = "UNKNWN";
  end

   /* brand code*/
  OB0CM001.XBCCD = OBZREC.XBCCD;
  sysVar.arrayIndex = 1;
  if (OBZREC.XBCCD in XBCTBL.XBCCD)
    OB0CM001.XBCABRV = XBCTBL.XBCABRV[sysVar.arrayIndex];
  else
    OB0CM001.XBCABRV = "UNKNWN";
  end

   /* sales office*/
  OB0CM001.XSOCD = OBZREC.XSOCD;
  sysVar.arrayIndex = 1;
  if (OBZREC.XSOCD in XSOTBL.XSOCD)
    OB0CM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex];
  else
    OB0CM001.XSOABRV = "UNKNWN";
  end

   /* base order type*/
  OB0CM001.XOBCD = OBZREC.XOBCD;
  sysVar.arrayIndex = 1;
  if (OBZREC.XOBCD in XOBTBL.XOBCD)
    OB0CM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
  else
    OB0CM001.XOBABRV = "UNKNWN";
  end

   /* system order type*/
  OB0CM001.XOTCD = OB1REC.XOTCD;
  sysVar.arrayIndex = 1;
  if (OB1REC.XOTCD in XOTTBL.XOTCD)
    OB0CM001.XOTABRV = XOTTBL.XOTABRV[sysVar.arrayIndex];
  else
    OB0CM001.XOTABRV = "UNKNWN";
  end

  OB0CM001.SM1AGYID = OBZREC.SM1AGYID; /* sales agency*/
  OB0CM001.SM4REPID = OBZREC.SM4REPID; /* sales rep id*/

  if (OBZREC.SM4REPID == 0)
    OB0CM001.OB0CMREP = " ";
  else
    OB0CS-SALESREPNM(); /* get sales rep name*/
  end

   /* convert need date*/
  OB0CM001.OB0CMNDT = OBZREC.OP1CUNDT;

  OB0CM001.XBDCD = OBZREC.XBDCD; /* move bulk draw code*/
   /* get bulk draw code description;*/
  sysVar.arrayIndex = 1;
  if (OBZREC.XBDCD in XBDTBL.XBDCD)
    OB0CM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
  else
    OB0CM001.XBDABRV = "UNKNWN";
  end

  OB0CM001.OP1BLKID = OBZREC.OP1BLKID; /* move bulk order id*/

  OB0CM001.SP1ID = OBZREC.SP1ID; /* sales program id*/

   /* order class code*/
  OB0CM001.XOCCD = OBZREC.XOCCD; /* sales program id*/
  sysVar.arrayIndex = 1;
  if (OBZREC.XOCCD == " ")
    OB0CM001.XOCABRV = " ";
  else
    if (OBZREC.XOCCD in XOCTBL.XOCCD)
      OB0CM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
    else
      OB0CM001.XOCABRV = "UNKNWN";
    end
  end

   /* order status*/
  sysVar.arrayIndex = 1;
  if (OB1REC.YOBCD in YOBTBL.YOBCD)
    OB0CM001.YOBABRV = YOBTBL.YOBABRV[sysVar.arrayIndex];
  else
    OB0CM001.YOBABRV = "UNKNWN";
  end

   /* entered date*/
  OBWREC.OBWDT8 = OB1REC.OP1ENTDT;
  XSOBDCM();
  OB0CM001.OB0CMEDT = OBWREC.OBWDT6;


  OB0CS16(); /* get entered by rep*/

  OB0CS17(); /* get taken by rep*/

   /* last change date*/
  OBWREC.OBWDT8 = OB1REC.ZZZCHGDT;
  XSOBDCM();
  OB0CM001.OB0CMCDT = OBWREC.OBWDT6;

   /* recieve date*/
  OBWREC.OBWDT8 = OB1REC.OP1ORCDT;
  XSOBDCM();
  OB0CM001.OP1ORCDT = OBWREC.OBWDT6;

  OB0CM001.OB1XREFN = OB1REC.OB1XREFN; /* repnet file nbr*/

  OB0CM001.OP1SPINF = OB1REC.OP1SPINF; /* instructions flag*/

  OB0CM001.OP1OMCMF = OB1REC.OP1OMCMF; /* comments flag*/

  OB0CM001.OP1SPLBF = OB1REC.OP1SPLBF; /* label flag*/

  OB0CM001.CAMSG = OBZREC.CAMSG;
  OB0CM001.VAGen_EZEMSG = OBZREC.CAMSG; /* ;*/
  OB0CS15(); /* get special instructions*/

end // end OB0CS-LDMAP-OBZREC

// GET MAX SOCD-HRR-RSN-SEQ
Function OB0CS-MAX-VSOHCR01()

   /* BUILD KEY TO READ VSOHCR01*/

  set VSOHCR01 empty;

  VSOHCR01.OP1PARTN = OB1REC.OP1PARTN;
  VSOHCR01.OP1CUOID = OB1REC.OP1CUOID;
  VSOHCR01.OP1NORID = OB1REC.OP1NORID;
  VSOHCR01.SOCD-APPL-SRC-CD = "OB";
  VSOHCR01.XOMCD = OB0CM001.XOMCD;
  VSOHCR01.SOCD-HDR-RSN-SEQ = 1;

   /* / DO A SEQLECT UNIQUE TO SEE IF THE ROW EXISTS*/

  call "VSOHCR01" ("S ", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    OB0CW01.OB0CW-MAX-SEQ = 1;
  else
    if (SQLCA.VAGen_SQLCODE == 0)
      call "VSOHCR01" ("SM", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0
       || SQLCA.VAGen_SQLCODE == 100)
        OB0CW01.OB0CW-MAX-SEQ = VSOHCR01.SOCD-HDR-RSN-SEQ + 1;
      end
    end
  end

end // end OB0CS-MAX-VSOHCR01

// select next VBCPOX02
Function OB0CS-NXT-VBCPOX02()



  set SQLCA empty;
  set VBCPOX02 empty;

  call "VBCPOX02" ("N1", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /* select next*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OB0CW01.OB0CW-OVRD-EOF-FL = "N";
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0CW01.OB0CW-OVRD-EOF-FL = "Y";
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
      TA1REC.TA1LOCAT[1] = "N1      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0CS-NX"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "T-VBCPOX"; /* extra key*/
      if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
        OBWREC.OBWER911 = "Y"; /* show err*/
        XSOBS04(); /* no rollback, restart appl*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end




   /* *************************************************************/
end // end OB0CS-NXT-VBCPOX02

// prepare for relational edit
Function OB0CS-ONLINE-EDIT()
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
  /* This statement group calls one of two edit subprograms*/
  /* depending on the edit function. The edit function is*/
  /* determined and placed in OBWREC by each Airspeed APPL*/
  /* that needs to do relational edits. Before using this*/
  /* statement group fill in the TA1REC.ta1map with the calling*/
  /* APPL mapname, and ta1re.ta1llocat (1) with the statement group*/
  /* used to call this statement group. Any abends, rollbacks*/
  /* etc. will be done in xsobs-full-edit or xsob-limited edit*/
  /* depending on the edit option. See OBFEREC or OBLEREC for*/
  /* return code info.*/
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
  /*  */
  /* THIS IS A COPY OF XSOBS-ONLINE-EDIT. ANY CHANGES TO XS0BS-*/
  /* ONLINE-EDIT MUST BE DONE HERE ALSO.*/


  if (OBWREC.OBW-EDIT-FUNCTION == "1")
    OB0CS-FULL-EDIT(); /* edit entire order (all subs)*/
  else
    XSOBS-LIMITED-EDIT(); /* edit suborder header/items*/
  end

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* commit all work done from edits*/

  OBWREC.OBW-EDIT-FUNCTION = " ";

end // end OB0CS-ONLINE-EDIT

// open VBCPOX02 cursor
Function OB0CS-OPN-VBCPOX02()


   /* get all the overrides for the order*/

  set SQLCA empty;
  set VBCPOX02 empty;

  VBCPOX02.OP1PARTN = OB1REC.OP1PARTN;
  VBCPOX02.OP1CUOID = OB1REC.OP1CUOID;
  VBCPOX02.OP1NORID = OB1REC.OP1NORID;

  call "VBCPOX02" ("S1", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes};


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0CS-OP"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "N-VBCPOX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0CS-OPN-VBCPOX02

// GET SALES REP NAME
Function OB0CS-SALESREPNM()

    /* get sales rep name (initial and last name) and*/
    /* move to screen*/

  set VRAGCY02 empty;
  set SQLCA empty;
  VRAGCY02.SM4REPID = OB0CM001.SM4REPID;
  VRAGCY02.SM1AGYID = OB0CM001.SM1AGYID;

  call "IO0400" ("S3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    OB0CM001.OB0CMREP = "UNKNOWN";
    return;
  end

  call "IO0400" ("N3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0CSRN(); /* reformat rep name into the map*/
  else
    OB0CM001.OB0CMREP = "UNKNOWN";
  end

  call "IO0400" ("C3", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

end // end OB0CS-SALESREPNM

// SAVE MAP FIELDS TO WS
Function OB0CS-SAVE-MAP()

  set OBZREC empty;

  OBZREC.KUCCOID = OB0CM001.KUCCOID; /* company number*/
  OBZREC.KUMSTRID = OB0CM001.KUMSTRID; /* store id*/
  OBZREC.XNXCD = OB0CM001.XNXCD; /* department code*/
  OBZREC.OP1CUPO = OB0CM001.OP1CUPO; /* purchase order num*/

   /* all suborders flag*/
  OBZREC.OP-ALL-ORDERS-FL = OB0CM001.OB0CMUPF;

  OBZREC.XGPCD = OB0CM001.XGPCD; /* gpc code*/

  OBZREC.XDVCD = OB0CM001.XDVCD; /* division code*/
   /* brand code*/
  OBZREC.XBCCD = OB0CM001.XBCCD;
   /* sales office*/
  OBZREC.XSOCD = OB0CM001.XSOCD;
   /* base order type*/
  OBZREC.XOBCD = OB0CM001.XOBCD;

  OBZREC.SM1AGYID = OB0CM001.SM1AGYID; /* sales agency*/
  OBZREC.SM4REPID = OB0CM001.SM4REPID; /* sales rep id*/

  OBZREC.OP1CUNDT = OB0CM001.OB0CMNDT;
  OBZREC.XBDCD = OB0CM001.XBDCD; /* move bulk draw code*/

  OBZREC.OP1BLKID = OB0CM001.OP1BLKID; /* move bulk order id*/

  OBZREC.SP1ID = OB0CM001.SP1ID; /* sales program id*/

   /* order class code*/
  OBZREC.XOCCD = OB0CM001.XOCCD; /* sales program id*/
  OBZREC.CAMSG = OB0CM001.CAMSG;
  OBZREC.ERRMSG = OB0CM001.VAGen_EZEMSG;

  COMMAREA.CA-USER-WORKAREA-2K-C = OBZREC.OBZGROUP;

end // end OB0CS-SAVE-MAP

// EDIT AGENCY AND REP
Function OB0CS-UPD-ALL-OVRD()

    /* GET CU-CUSKU-ID FOR NEW CU-CO-ID*/


  if (KUCREC.KUCSKIND == "C"
   || KUCREC.KUCSKIND == "T")
    OB0CW01.CU-CUSKU-ID = KUCREC.KUCCOID;
  else
    if (KUCREC.KUCSKIND == "P")
      OB0CW01.CU-CUSKU-ID = KUCREC.KUKPCOID;
    else
      if (KUCREC.KUCSKIND == "R")
        OB0CW01.CU-CUSKU-ID = KUCREC.KUCGRPID;
      else
        if (KUCREC.KUCSKIND == "G")
          OB0CW01.CU-CUSKU-ID = 0;
        else
          OB0CS-DEL-VBCPOX02();
        end
      end
    end
  end


    /* GET ALL OVERRIDES FOR THE ORDER*/

  OB0CS-OPN-VBCPOX02(); /* open cursor*/

  OB0CS-NXT-VBCPOX02(); /* get first override*/

  while (OB0CW01.OB0CW-OVRD-EOF-FL == "N")
    OB0CS-UPD-VBCPOX02(); /* update cu-cusku-id*/
    OB0CS-NXT-VBCPOX02(); /* get next override*/
  end

  OB0CS-CLS-VBCPOX02(); /* close cursor*/

end // end OB0CS-UPD-ALL-OVRD

// UPDATE VBCPOX02
Function OB0CS-UPD-VBCPOX02()

  VBCPOX02.CU-CUSKU-ID = OB0CW01.CU-CUSKU-ID;
  VBCPOX02.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VBCPOX02.ZZZCHGTM = OBWREC.ZZZCHGTM;

  set SQLCA empty;

  call "VBCPOX02" ("U1", SQLCA, VBCPOX02) {isNoRefresh = yes, isExternal = yes}; /**/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
   /* NEXT SENTENCE*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBCPOX02"; /* table view*/
    TA1REC.TA1LOCAT[1] = "U1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "VBCPOX02"; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0CS-UP"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "D-VBCPOX"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end


end // end OB0CS-UPD-VBCPOX02

// EDIT BULK ORDER ID
Function OB0CS-UPDTE-VBULK()

   /* ***** TCS INCLUDE BEGIN****************/

  set SQLCA empty;
  set OBFREC empty;
  VBULKS02.KUMSTRID = OB1REC.KUMSTRID;
  VBULKS02.XNXCD = OB1REC.XNXCD;
  VBULKS02.XBDCD = OB1REC.XBDCD;
  VBULKS02.OP1CUPO = OB1REC.OP1CUPO;
  VBULKS02.XDVCD = OB1REC.XDVCD;
  VBULKS02.XGPCD = OB1REC.XGPCD;
  VBULKS02.XSOCD = OB1REC.XSOCD;
  VBULKS02.XWHCD = OB1REC.XWHCD;
  VBULKS02.OP1CUNDT = OB1REC.OP1CUNDT;
  VBULKS02.OP1DSADT = OB1REC.OP1DSADT;
  VBULKS02.SP1ID = OB1REC.SP1ID;
  VBULKS02.SM4REPID = OB1REC.SM4REPID;
  OBFREC.OBFTASK = "U";
  call "VBULKS02" (OBFREC, SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      XSOBP00();
    else
      TA1REC.TA1LOCAT[1] = "U ";
      TA1REC.TA1LOCAT[2] = "VBULKS02";
      TA1REC.TA1LOCAT[3] = "OB0CS-UPDTE-VBULK";
      TA1REC.TA1DBASE = "DORDB "; /* data base name*/
      TA1REC.TA1TBLVU = "VBULKS02"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

   /* ************* TCS INCLUDE END**************/

end // end OB0CS-UPDTE-VBULK

// INITILIZE OB0C APPLICATION
Function OB0CS01()

  set OB1REC empty;
  set OB4REC empty;
  set OB8REC empty;
  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OBKREC empty;
  set OBFEREC empty;
  set OBLEREC empty;
  set OP1REC empty;
  set SP1REC empty;
  set VSOHCR01 empty;
  set VOCHDR01 empty;
  set KUCREC empty;
  set KUJREC empty;
  set KUNREC empty;
  set KUMREC empty;
  set KUYREC empty;
  set VRAGCY02 empty;
  set TA2REC empty;
  set TA1REC empty;
  set TA5REC empty;
  set TAEREC empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set OB0CM001 empty;

  set XX0XW01 empty;
  XX0XS01();
  OBWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OBWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  TA1REC.TA1MAP = "OB0CM001"; /* map name*/
  COMMAREA.CAFROMAP = "OB0C";


end // end OB0CS01

// BUILD MAP
Function OB0CS10()

     /* move fields to map*/

  if (COMMAREA.CACURRAP == "OM0G")
    OB0CS-LDMAP-OBZREC();
    COMMAREA.CACURRAP = "OB0C";
  else
    OB0CS50();
  end
     /* reset field attributes*/

  OB0CS40();

end // end OB0CS10

// SELECT NEXT INSTRUCTION
Function OB0CS11()

   /* read the next special instruction*/

  set OBKREC empty;
  OBKREC.OBKTASK = "SN";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    sysVar.arrayIndex = 1;
    if (OB4REC.XNDCD in XNDTBL.XNDCD             
     && XNDTBL.XXXSTAT[sysVar.arrayIndex] == "A" /* active*/
     && XNDTBL.XNDSOFL[sysVar.arrayIndex] == "Y")
      OB0CM001.XNDCD[OB0CWSUB] = OB4REC.XNDCD; /* dept code*/
      OB0CM001.OP4TXT[OB0CWSUB] = OB4REC.OP4TXT; /* text*/
    end
    OB0CW01.OB0CWSUB = OB0CW01.OB0CWSUB + 1;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
              /* next sentence*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBTEXT01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "SS      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod*/
      TA1REC.TA1LOCAT[3] = "OB0CS15 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* rec type*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDP();
      end
    end
  end

end // end OB0CS11

// READ CUSTOMER REC (KUMREC)
Function OB0CS14()

  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0CM001.KUMSTRNM = KUMREC.KUMSTRNM;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      converseLib.validationFailed(039); /* store invalid or inactive for cust*/
      OB0CM001.KUMSTRNM = "UNKNOWN STORE";
      set OB0CM001.KUMSTRID cursor, bold;
      set OB0CM001.XNXCD bold;
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSTORE01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0340  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0CS14 "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end
end // end OB0CS14

// GET SPECIAL INSTRUCTIONS
Function OB0CS15()

   /* build the instructions rec key*/

  set OBKREC empty;
  set OB4REC empty;
  set SQLCA empty;
  OBKREC.OBKTASK = "SS";
  OB4REC.OP1PARTN = OB1REC.OP1PARTN;
  OB4REC.OP1CUOID = OB1REC.OP1CUOID;
  OB4REC.OP1NORID = OB1REC.OP1NORID;
  OB4REC.OP4TRTYP = "I";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
      /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBTEXT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "SS      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5180  "; /* i/o mod*/
    TA1REC.TA1LOCAT[3] = "OB0CS15 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OB4REC.OP4TRTYP; /* statement group*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDP();
    end
  end

  if (SQLCA.VAGen_SQLCODE == 0) /* good rtn frm 'ss'*/
    set SQLCA empty;
    OB0CW01.OB0CWSUB = 1;
    while (SQLCA.VAGen_SQLCODE != 100
     && OB0CW01.OB0CWSUB < 6)
      OB0CS11(); /* select the next instruction*/
    end
  end

  set OBKREC empty;
  OBKREC.OBKTASK = "CS";

  call "IO5180" (OBKREC, SQLCA, OB4REC) {isNoRefresh = yes, isExternal = yes};

end // end OB0CS15

// READ SERVICE REP
Function OB0CS16()

  KUYREC.KUYSVRID = OB1REC.OP1ENREP;

  call "IO0550" ("S ", SQLCA, KUYREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0CM001.OB0CMENR = KUYREC.XXXUSRID;
  else
    OB0CM001.OB0CMENR = "UNKNOWN";
  end

end // end OB0CS16

// GET TAKEN BY REP
Function OB0CS17()

  KUYREC.KUYSVRID = OB1REC.OP1TBREP;

  call "IO0550" ("S ", SQLCA, KUYREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0CM001.OB0CMTBR = KUYREC.XXXUSRID;
  else
    OB0CM001.OB0CMTBR = "UNKNOWN";
  end

end // end OB0CS17

// READ CUSTOMER KUCREC
Function OB0CS18()

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
      /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(023); /* cust invalid*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      OB0CM001.KUMSTRNM = "UNKNOWN CUSTOMER";
      set OB0CM001.KUCCOID cursor, bold;
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0240  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0CS18 "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end
end // end OB0CS18

// READ CUSTOMER REC (KUNREC)
Function OB0CS19()

  call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
      /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(017); /* cust invalid or inact for gpc*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      OB0CM001.KUMSTRNM = "UNKNOWN CUSTOMER";
      set OB0CM001.KUMSTRID bold;
      set OB0CM001.XNXCD bold;
      set OB0CM001.KUCCOID cursor, bold;
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0280  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0CS19 "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end
end // end OB0CS19

// format customer number
Function OB0CS1A()

   /* reformat cust num*/

  OBWREC.OBWCOID = OB0CM001.KUCCOID; /* company*/
  OBWREC.OBWFILL2 = ".";
  OBWREC.OBWSTRID = OB0CM001.KUMSTRID; /* store id*/
  OBWREC.OBWFILL3 = ".";
   /* dept*/
  OBWREC.OBWXNXCD = OB0CM001.XNXCD;
   /* suppress leading zeros*/

  OBWREC.OBWFMT = OBWREC.OBWCUST; /* 16 digits*/
  XSOBS06(); /* strip leading zeros*/
  OBWREC.OBWCUST = OBWREC.OBWFMT;

  OBWREC.KUMSTRNM = OB0CM001.KUMSTRNM; /* store name*/

end // end OB0CS1A

// EDIT MAP
Function OB0CS20()



  OB0CS-EDIT-XOC(); /* edit order class*/
  OB0CS22(); /* edit sales program*/
  OB0CS-EDIT-XBD(); /* edit bulk/draw code*/
  OB0CS-EDIT-BULK-ID(); /* edit bulk order id*/
  OB0CS25(); /* edit need date*/
  OB0CS-AGCY-REP(); /* edit sales agency and rep*/
  OB0CS24(); /* edit base order type*/
  OB0CS23(); /* edit sales office*/
  OB0CS-EDIT-XBC(); /* edit brand*/
  OB0CS-EDIT-XDV(); /* edit division*/
  OB0CS-EDIT-GPC(); /* edit gpc code*/
  OB0CS26(); /* edit p.o number*/
  OB0CS21(); /* edit customer*/
  OB0CS28(); /* edit all suborders flag*/
  OB0CS-EDIT-XOMCD(); /* edit change reason*/


end // end OB0CS20

// EDIT CUSTOMER
Function OB0CS21()

     /* build KUCREC key - company*/
     /* if original company number is not zero*/
     /* read company table to get original company's cu-cusku-sz-fl*/

  set KUCREC empty;
  set SQLCA empty;

  if (OB1REC.KUCCOID > 0)
    KUCREC.KUCCOID = OB1REC.KUCCOID;
    OB0CS18(); /* edit company*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OB0CW01.CU-CUSKU-SZ-FL = KUCREC.CU-CUSKU-SZ-FL; /* save flag*/
    end
  end

     /* build KUCREC key - company*/

  set KUCREC empty;
  set SQLCA empty;
  KUCREC.KUCCOID = OB0CM001.KUCCOID;

  OB0CS18(); /* edit company*/

  if (OB0CW01.CU-CUSKU-SZ-FL == "N") /* cannot change from cu-co-id with*/
    if (KUCREC.CU-CUSKU-SZ-FL == "Y") /* xref at product level to cu-co-id*/
      converseLib.validationFailed(195); /* with xref at size level*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0CM001.KUCCOID cursor, bold;
      return;
    end
  end

    /* build KUMREC key - store*/

  set KUMREC empty;
  set SQLCA empty;
  KUMREC.KUCCOID = OB0CM001.KUCCOID;
  KUMREC.KUMSTRID = OB0CM001.KUMSTRID;

  OB0CS14(); /* edit store*/


   /* build KUJREC key - department*/

  set KUJREC empty;
  set SQLCA empty;
  KUJREC.KUCCOID = OB0CM001.KUCCOID;
  KUJREC.XNXCD = OB0CM001.XNXCD;

  OB0CS29(); /* read kujrec edit dept*/


  if (OBWREC.OBWERRFL == "Y")
    return;
  end


   /* build KUNREC key - CUSTOMER*/

  set KUNREC empty;
  set SQLCA empty;

  KUNREC.KUCCOID = OB0CM001.KUCCOID;
  KUNREC.KUMSTRID = OB0CM001.KUMSTRID;
  KUNREC.XNXCD = OB0CM001.XNXCD;

  if (OB0CM001.XGPCD == "01") /* in-store promo*/
    KUNREC.XGPCD = "**";
    OB0CS51(); /* read kunrec edit cust vs any gpc*/
  else
    KUNREC.XGPCD = OB0CM001.XGPCD;
    OB0CS19(); /* read kunrec edit cust vs specific gpc*/
  end


end // end OB0CS21

// EDIT SALES PROGRAM ID
Function OB0CS22()
   /* ob1050 will now do the product level sales program edits*/

  if (OB0CM001.SP1ID == " ")
    return;
  end

  SP1REC.SP1ID = OB0CM001.SP1ID;
  call "IO0070" ("S ", SQLCA, SP1REC) {isExternal = yes}; /* (nomaps, noncsp;*/
  if (SQLCA.VAGen_SQLCODE == 0)
        /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100
     || SP1REC.SP1STAT != "A") /* inactive status*/
      converseLib.validationFailed(009); /* sls pgm id invalid or inactive*/
      OBWREC.OBWERRFL = "Y";
      set OB0CM001.SP1ID cursor, bold;
    else
      TA1REC.TA1DBASE = "DSPGM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSPGM001"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0070  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0CS22 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OB0CM001.SP1ID; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end
end // end OB0CS22

// EDIT SALES OFFICE ID
Function OB0CS23()

  if (OB0CM001.XSOCD == " ")
    return;
  else
    sysVar.arrayIndex = 1;
    if (OB0CM001.XSOCD in XSOTBL.XSOCD
     && XSOTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OB0CM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex];
    else
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      converseLib.validationFailed(012); /* sls office id invalid or inactive*/
      OB0CM001.XSOABRV = "UNKNWN";
      set OB0CM001.XSOCD cursor, bold;
    end
  end

end // end OB0CS23

// EDIT BASE ORDER TYPE
Function OB0CS24()

   /* ***** WIPRO INCLUDE BEGIN 09/24/99 ******/
   /* timing validation been commented out*/
   /* IF OB0CM001.XOBCD IS MODIFIED;*/
   /* IF OB1REC.XOBCD EQ 'P2'*/
   /* AND OB0CM001.XOBCD NE 'P1';*/
   /* XSOBS03;*/
   /* IF OB1REC.XPCCD = 'KN'*/
   /* OR OB1REC.XPCCD = 'ST';*/
   /* MOVE 256 TO EZEMNO;        /*ORDER TYPE CAN CHANGED  FROM*/
   /* MOVE 'Y' TO OBWREC.OBWERRFL;/*set error flag*/
   /* MOVE OB1REC.XOBCD TO OB0CM001.XOBCD;/*move old ordertype*/
   /* SET OB0CM001.XOBCD CURSOR,MODIFIED,BRIGHT;*/
   /* EZERTN;*/
   /* ELSE;*/
   /* END;*/
   /* END;*/
   /* END;*/

     /* WIPRO INCLUDE END 09/24/99 SBHARA*/
   /* ***** TCS INCLUDE BEGIN 11/04/98 ******/

  if (OB1REC.XOBCD == "R1"
   && OB0CM001.XOBCD != "R1")
    converseLib.validationFailed(254); /* such a change is not permissible*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    OB0CM001.XOBCD = OB1REC.XOBCD; /* move old ordertype back*/
    set OB0CM001.XOBCD cursor, modified, bold;
    return;
  else

    if (OB0CM001.XOBCD == "R1"
     && OB1REC.XOBCD != "R1")
      converseLib.validationFailed(254); /* such a change is not permissible*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      OB0CM001.XOBCD = OB1REC.XOBCD; /* move old ordertype back*/
      set OB0CM001.XOBCD cursor, modified, bold;
      return;
    end
  end

   /* ***** TCS INCLUDE END   11/04/98 ******/

  if (OB0CM001.XOBCD == " ")
    return;
  else
    sysVar.arrayIndex = 1;
    if (OB0CM001.XOBCD in XOBTBL.XOBCD
     && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active status*/
      OB0CM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
    else
      OB0CM001.XOBABRV = "UNKNWN";
      converseLib.validationFailed(014); /* order type invalid or anactive*/
      OBWREC.OBWERRFL = "Y";
      set OB0CM001.XOBCD cursor, bold;
    end
  end

end // end OB0CS24

// EDIT NEED DATE
Function OB0CS25()

  if (OB0CM001.OB0CMNDT == 0)
    return;
  else
    OBWREC.OBWDT6 = OB0CM001.OB0CMNDT;
    XSOBDED();
    if (TA2REC.TA2RTNCD == 0)
     /* NEXT SENTENCE*/
    else
      converseLib.validationFailed(015); /* needdate is not a valid date*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0CM001.OB0CMNDT cursor, bold;
    end
  end

end // end OB0CS25

// EDIT PO NUMBER
Function OB0CS26()

  if (OB0CM001.OP1CUPO == " ")
    if (OB1REC.YOCCD == "01") /* edi order*/
      converseLib.validationFailed(016); /* po required for edi orders*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0CM001.OP1CUPO cursor, bold;
    end
    if (OB1REC.YOCCD == "07") /* sst order*/
      converseLib.validationFailed(016); /* po required for edi orders*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0CM001.OP1CUPO cursor, bold;
    end
  end

end // end OB0CS26

// EDIT ALL SUBS FLAG
Function OB0CS28()

   /* if any errors exist don't need to check*/
   /* whether flag is Y or N.*/

  if (OBWREC.OBWERRFL == "Y")
    return;
  end

   /* see if anything changed first. if it did the*/
   /* all subs flag must be Y or N.*/

  OBWREC.OBWDT6 = OB0CM001.OB0CMNDT;
  XSOBDMC();

  if (OBWREC.OBWDT8 == OB1REC.OP1CUNDT     
   && OB0CM001.OP1CUPO == OB1REC.OP1CUPO   
   && OB0CM001.OP1BLKID == OB1REC.OP1BLKID 
   && OB0CM001.KUCCOID == OB1REC.KUCCOID   
   && OB0CM001.KUMSTRID == OB1REC.KUMSTRID 
   && OB0CM001.XNXCD == OB1REC.XNXCD       
   && OB0CM001.XGPCD == OB1REC.XGPCD       
   && OB0CM001.SM1AGYID == OB1REC.SM1AGYID /* sales agency id*/
   && OB0CM001.SM4REPID == OB1REC.SM4REPID /* rep id*/
   && OB0CM001.XOBCD == OB1REC.XOBCD       
   && OB0CM001.XDVCD == OB1REC.XDVCD       
   && OB0CM001.XBCCD == OB1REC.XBCCD       
   && OB0CM001.XOCCD == OB1REC.XOCCD       
   && OB0CM001.XBDCD == OB1REC.XBDCD       
   && OB0CM001.XSOCD == OB1REC.XSOCD       
   && OB0CM001.SP1ID == OB1REC.SP1ID       
  )                                        /* nothing changed*/
  else

    if (OB0CM001.OB0CMUPF == "Y"
     || OB0CM001.OB0CMUPF == "N")
      /* next sentence*/
    else
      OBWREC.OBWERRFL = "Y"; /* set error flg*/
      converseLib.validationFailed(040); /* chg all subs?*/
      set OB0CM001.OB0CMUPF cursor, bold;
    end
  end



end // end OB0CS28

// READ CUSTOMER REC (KUNREC)
Function OB0CS29()

  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
      /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(156); /* department is invalid for cmpny*/
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
      set OB0CM001.XNXCD bold;
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VDEPT001"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0290  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0CS29 "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC(); /* abort routine - no reset*/
      end
    end
  end
end // end OB0CS29

// UPDATE
Function OB0CS30()

  if (OB0CM001.OB0CMUPF == "N") /* update displayed suborder only*/
    OB0CS31(); /* update displayed suborder*/
  else
    if (OB0CM001.OB0CMUPF == "Y") /* update displayed suborder only*/
      OB0CS32(); /* update all suborders*/
      OBWREC.OBW-EDIT-FUNCTION = "1"; /* update all suborders;*/
    end
  end



end // end OB0CS30

// MOVE CHANGES TO OB1REC
Function OB0CS31()

  OB0CW01.OB0CWCMP = "N";
  OB0CW01.OB0CWUPD = "N";
  OB0CW01.OB0CW-UPD-PO-FL = "N";
  OB0CW01.OB0CW-UPD-ND-FL = "N";
  OBWREC.OBW-APPLY-DEFAULTS-FL = "N"; /* apply new cust defaults*/
  OBWREC.OBW-EDIT-FUNCTION = "0"; /* header edit*/

  if (OB1REC.YOBCD == "DL"
   || OB1REC.YOBCD == "XL"
   || OB1REC.YOBCD == "CA"
   || OB1REC.YOBCD == "LD"
   || OB1REC.YOBCD == "LP"
   || OB1REC.YOBCD == "PD")
    return;
  end

   /* move level two data elements first and set edit option*/
   /* then move the level one data elements. if there are any*/
   /* changes to level one data elements a full edit is done*/


   /* update purchase order number*/
  if (OB0CM001.OP1CUPO != OB1REC.OP1CUPO)
    OB1REC.OP1CUPO = OB0CM001.OP1CUPO;
    OBWREC.OP1CUPO = OB0CM001.OP1CUPO; /* update obwrec*/
    VSOHCR01.OP1CUPO = OB0CM001.OP1CUPO; /* update vsohcr01 record*/
    OB0CW01.OB0CWUPD = "Y";
    OB0CW01.OB0CW-UPD-PO-FL = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end


   /* update need date*/
  OBWREC.OBWDT6 = OB0CM001.OB0CMNDT;
  XSOBDMC();
  if (OBWREC.OBWDT8 != OB1REC.OP1CUNDT
   && OB1REC.OP1CUNDT == 0) /* CHG ONLY IF NEED DATE IS ZERO*/
    OB1REC.OP1CUNDT = OBWREC.OBWDT8;
    OB0CW01.OB0CWUPD = "Y";
    OB0CW01.OB0CW-UPD-ND-FL = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end


   /* update bulk order id*/
  if (OB0CM001.OP1BLKID != OB1REC.OP1BLKID)
    OB1REC.OP1BLKID = OB0CM001.OP1BLKID;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end

  if (OB0CM001.KUCCOID != OB1REC.KUCCOID
   || OB0CM001.KUMSTRID != OB1REC.KUMSTRID
   || OB0CM001.XNXCD != OB1REC.XNXCD
   || OB0CM001.XGPCD != OB1REC.XGPCD)
    OB0CS1A(); /* format customer id for OBWREC*/
  end


   /* if company number came in as 0, update all override records with*/
   /* new cu-sku-id, otherwise, if this is a change from one number*/
   /* to another, delete the override records*/
  if (OB0CM001.KUCCOID != OB1REC.KUCCOID)
    if (OB1REC.KUCCOID == 0)
      OB0CS-UPD-ALL-OVRD();
    else
      OB0CS-DEL-VBCPOX02();
    end
  end


   /* update company id*/
  if (OB0CM001.KUCCOID != OB1REC.KUCCOID)
    OB1REC.KUCCOID = OB0CM001.KUCCOID;
    OB0CW01.OB0CWCMP = "Y";
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-APPLY-DEFAULTS-FL = "Y"; /* apply new cust defaults*/
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update store id*/
  if (OB0CM001.KUMSTRID != OB1REC.KUMSTRID)
    OB1REC.KUMSTRID = OB0CM001.KUMSTRID;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-APPLY-DEFAULTS-FL = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update department*/
  if (OB0CM001.XNXCD != OB1REC.XNXCD)
    OB1REC.XNXCD = OB0CM001.XNXCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-APPLY-DEFAULTS-FL = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update gpc code*/
  if (OB0CM001.XGPCD != OB1REC.XGPCD)
    OB1REC.XGPCD = OB0CM001.XGPCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-APPLY-DEFAULTS-FL = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update sales agency*/
  if (OB0CM001.SM1AGYID != OB1REC.SM1AGYID) /* sales agency id*/
    OB1REC.SM1AGYID = OB0CM001.SM1AGYID;
    OB1REC.OP-SREP-OVRD-FL = "Y"; /* rep/agency override*/
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end

   /* default agcy when customer /gpc has changed -*/
   /* if the apply defaults flag is 'y' then the customer has changed*/

  if (OBWREC.OBW-APPLY-DEFAULTS-FL == "Y")
    OB1REC.SM1AGYID = " ";
    OB1REC.OP-SREP-OVRD-FL = "N"; /* rep/agency override*/
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update sale rep*/
  if (OB0CM001.SM4REPID != OB1REC.SM4REPID) /* rep id*/
    OB1REC.SM4REPID = OB0CM001.SM4REPID;
    OB1REC.OP-SREP-OVRD-FL = "Y"; /* rep/agency override*/
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* default srep when customer /gpc has changed -*/
   /* if the apply defaults flag is 'y' then the customer has changed*/

  if (OBWREC.OBW-APPLY-DEFAULTS-FL == "Y")
    OB1REC.SM4REPID = 0;
    OB1REC.OP-SREP-OVRD-FL = "N"; /* rep/agency override*/
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update base order type*/
  if (OB0CM001.XOBCD != OB1REC.XOBCD)
    OB1REC.XOBCD = OB0CM001.XOBCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update division*/
  if (OB0CM001.XDVCD != OB1REC.XDVCD)
    OB1REC.XDVCD = OB0CM001.XDVCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update brand*/
  if (OB0CM001.XBCCD != OB1REC.XBCCD)
    OB1REC.XBCCD = OB0CM001.XBCCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update order class*/
  if (OB0CM001.XOCCD != OB1REC.XOCCD)
    OB1REC.XOCCD = OB0CM001.XOCCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update bulk/draw cd*/
  if (OB0CM001.XBDCD != OB1REC.XBDCD)
    OBWREC.OBW-APPLY-DEFAULTS-FL = "Y";
    OB1REC.XBDCD = OB0CM001.XBDCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end


   /* update sales office*/
  if (OB0CM001.XSOCD != OB1REC.XSOCD)
    OB1REC.XSOCD = OB0CM001.XSOCD;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* full edit*/
  end


   /* update sales program*/
  if (OB0CM001.SP1ID != OB1REC.SP1ID)
    OB1REC.SP1ID = OB0CM001.SP1ID;
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* header edit*/
  end

  if (OB0CW01.XBDRWOFL == "Y" /* draw order*/
   && OB1REC.OP1BLKID == 0    /* and no bulk id*/
   && OB0CW01.OB0CWUPD == "N") /* nothing was changed*/
    OB0CW01.OB0CWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* do edit (to assign bulk)*/
  end

  OB0CS39(); /* determine system xotcd*/

   /* do full edit when something changed on a partially loaded order*/
   /* OB1670 will move the suborders to a new order number*/

  if (OB0CW01.OB0CWUPD == "Y"
   && OB1REC.OB1PARLF == "Y")
    OBWREC.OBW-EDIT-FUNCTION = "1"; /* do edit (to assign bulk)*/
  end


  if (OB0CW01.OB0CWUPD == "Y")
    OB1REC.YOBCD = "NC";
    OB1REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
    OB1REC.ZZZCHGTM = OBWREC.ZZZCHGTM;
    if (OB0CW01.OB0CWCMP == "Y") /* company changed*/
      OB0CS34(); /* delete and insert header*/
      if (OB0CW01.OB0CW-UPD-PO-FL == "Y" /* if an ocd field changed*/
       || OB0CW01.OB0CW-UPD-ND-FL == "Y")
        OB0CS-ADD-VSOHCR01(); /* add ocd header change reason*/
      end
    else
      OB0CS33(); /* updt header*/
      if (OB0CW01.OB0CW-UPD-PO-FL == "Y" /* if an ocd field changed*/
       || OB0CW01.OB0CW-UPD-ND-FL == "Y")
        OB0CS-ADD-VSOHCR01(); /* add ocd header change reason*/
      end
    end
  end

  if (OB0CM001.OB0CMUPF == "Y")
    OBWREC.OBW-CHG-ALL-SUBORDS-FL = "Y";
  else
    OBWREC.OBW-CHG-ALL-SUBORDS-FL = "N";
  end

end // end OB0CS31

// UPDATE ALL SUBORDERS
Function OB0CS32()

   /* SELECT ALL SUBORDERS AND UPDATE EACH ONE WITH ANY CHANGES*/



  OB1REC.OP1CUOID = OBWREC.OP1CUOID;
  OB1REC.OP1PARTN = OBWREC.OP1PARTN;
  OBFREC.OBFTASK = "S1";

  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  while (SQLCA.VAGen_SQLCODE == 0)

    OBFREC.OBFTASK = "N1";
    set SQLCA empty;
    call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
      if (OB1REC.YOBCD == "XL"
       || OB1REC.YOBCD == "LD"
       || OB1REC.YOBCD == "DL"
       || OB1REC.YOBCD == "CA"
       || OB1REC.YOBCD == "LP"
       || OB1REC.YOBCD == "PD")
        /* next sentence*/
      else
        OB0CS31(); /* move changes and update the suborder*/
      end
    end
  end

  OBFREC.OBFTASK = "C1";

  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

end // end OB0CS32

// UPDATE OB1REC
Function OB0CS33()
  set VBULKS02 empty;
  OBFREC.OBFTASK = "U ";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)

    /* **********TCS INCLUDE BEGIN*************/

    VBULKS02.OP1PARTN = OB1REC.OP1PARTN;
    VBULKS02.OP1CUOID = OB1REC.OP1CUOID;
    VBULKS02.OP1NORID = OB1REC.OP1NORID;
    OB0CS-CHECK-VBULK();

    /* **********TCS INCLUDE END***************/

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OBWREC.CAMSG = "ORDER HAS BEEN MODIFIED BY ANOTHER SERVICE REP";
      XSOBP00();
    else
      TA1REC.TA1LOCAT[1] = "U ";
      TA1REC.TA1LOCAT[2] = "IO5160";
      TA1REC.TA1LOCAT[3] = "OB0CS33";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VORHDR01"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

end // end OB0CS33

// DELETE/INSERT OB1REC
Function OB0CS34()

  OBFREC.OBFTASK = "D ";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
        /* NEXT SENTENCE*/
  else
    TA1REC.TA1LOCAT[1] = "D ";
    TA1REC.TA1LOCAT[2] = "IO5160";
    TA1REC.TA1LOCAT[3] = "OB0CS34";
    TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* data base view*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

  OBFREC.OBFTASK = "A ";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
        /* NEXT SENTENCE*/
  else
    TA1REC.TA1LOCAT[1] = "A ";
    TA1REC.TA1LOCAT[2] = "IO5160";
    TA1REC.TA1LOCAT[3] = "OB0CS34";
    TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* data base view*/
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end
end // end OB0CS34

// get sys ord type via vxvo0001
Function OB0CS39()

   /* ----------------------------------------------------------*/
   /* equipment check*/
   /* ----------------------------------------------------------*/

  OPWREC01.XPCCK = "  ";

  OB0CS-CHECK-EQMT(); /* call to eu0100*/
  if (WEU0100.WEU0100-EQUIP-PROD-FL == "Y")
    OPWREC01.XPCCK = WEU0100.XPCCD;
  else
    OPWREC01.XPCCK = "  ";
  end

  OB0CW01.OB0CWOTF = "N"; /* reset flag*/
  OB1REC.XOTCD = " ";

   /* *************** TCS INCLUDE************/
  set VXVO0001 empty;
  set SQLCA empty;
  set OBKREC empty;
  VXVO0001.XOBCD = OB1REC.XOBCD;
  VXVO0001.XGPCD = OB1REC.XGPCD;
  VXVO0001.XSOCD = OB1REC.XSOCD;
  VXVO0001.XDVCD = OB1REC.XDVCD;
  VXVO0001.XBCCD = OB1REC.XBCCD;
  VXVO0001.XPC-PROD-CAT-CD = OPWREC01.XPCCK;
  VXVO0001.XXXSTAT = "A";

  OBKREC.OBKTASK = "S4";

  call "VXVO0001" (OBKREC, SQLCA, VXVO0001) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DCORP";
    TA1REC.TA1TBLVU = "VXVO0001";
    TA1REC.TA1TBLKE = VXVO0001-KEY;
    TA1REC.TA1LOCAT[3] = "OB0CS39";
    TA1REC.TA1LOCAT[4] = "VXVO0001";
    XSOBEDC();
  else
    OBKREC.OBKTASK = "N4";
    call "VXVO0001" (OBKREC, SQLCA, VXVO0001) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
      if (VXVO0001.XOTCD != OB1REC.XOTCD)
        OB1REC.XOTCD = VXVO0001.XOTCD;
        OB0CW01.OB0CWUPD = "Y";
        OBWREC.OBW-EDIT-FUNCTION = "1"; /* full edit*/
      end
      OB0CW01.OB0CWOTF = "Y"; /* reset flag*/
    else
      if (SQLCA.VAGen_SQLCODE == +100)
        /* next sentence*/
      else
        TA1REC.TA1DBASE = "DCORP";
        TA1REC.TA1TBLVU = "VXVO0001";
        TA1REC.TA1TBLKE = VXVO0001-KEY;
        TA1REC.TA1LOCAT[3] = "OB0CS39";
        TA1REC.TA1LOCAT[4] = "VXVO0001";
        XSOBEDC();
      end
    end
  end

  OBKREC.OBKTASK = "C4";
  call "VXVO0001" (OBKREC, SQLCA, VXVO0001) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1DBASE = "DCORP";
    TA1REC.TA1TBLVU = "VXVO0001";
    TA1REC.TA1TBLKE = VXVO0001-KEY;
    TA1REC.TA1LOCAT[3] = "OB0CS39";
    TA1REC.TA1LOCAT[4] = "VXVO0001";
    XSOBEDC();
  end


   /* ****************** TCS INCLUDE END ********************/
end // end OB0CS39

// RESET FIELD ATTRIBUTES
Function OB0CS40()

  if (OB1REC.YOBCD == "XL" /* not cancelled*/
   || OB1REC.YOBCD == "CA" /* not cleared availability*/
   || OB1REC.YOBCD == "LP" /* not cleared availability*/
   || OB1REC.YOBCD == "PD") /* not cleared availability*/
    OB0CS42(); /* set fields autoskip*/
  else
    OB0CS41(); /* set fields defined*/
  end

  OB0CS43(); /* check all suborders for partial load*/

  set OB0CM001.KUCCOID cursor;

  OB0CW01.OB0CWSUB = 1;
  while (OB0CW01.OB0CWSUB < 6)
    if (OB0CM001.OP4TXT == " ")
      set OB0CM001.XNDCD[OB0CWSUB] skip, invisible;
      set OB0CM001.OP4TXT[OB0CWSUB] skip, invisible;
    end
    OB0CW01.OB0CWSUB = OB0CW01.OB0CWSUB + 1;
  end
end // end OB0CS40

// SET FIELD ATTRIBUTES DEFINED
Function OB0CS41()

  if (OB1REC.OB1PARLF == "Y")
    OB0CM001.OB0CMPLL = "ORDER IS PARTIALLY LOADED";
  else
    set OB0CM001.OB0CMPLL skip, invisible; /* partial load flag*/
  end


  set OB0CM001.KUCCOID initialAttributes; /* company*/
  set OB0CM001.KUMSTRID initialAttributes; /* store*/
  set OB0CM001.XNXCD initialAttributes; /* department*/
  set OB0CM001.OP1CUPO initialAttributes; /* po number*/

   /* The some fields are set defined only if they are invalid*/

   /* gpc code*/
  if (OB0CM001.XGPABRV == "UNKNWN")
    set OB0CM001.XGPCD initialAttributes;
  else
    set OB0CM001.XGPCD skip;
  end


   /* division*/
  if (OB0CM001.XDVABRV == "UNKNWN")
    set OB0CM001.XDVCD initialAttributes;
  else
    set OB0CM001.XDVCD skip;
  end


   /* brand*/
  if (OB0CM001.XBCABRV == "UNKNWN")
    set OB0CM001.XBCCD initialAttributes;
  else
    set OB0CM001.XBCCD skip;
  end

  set OB0CM001.XSOCD initialAttributes; /* sales office*/

  set OB0CM001.XOBCD initialAttributes; /* base order type*/

  set OB0CM001.SM1AGYID initialAttributes; /* agency*/
  set OB0CM001.SM4REPID initialAttributes; /* sales rep*/


   /* need date*/
  if (OB0CM001.OB0CMNDT == 0)
    set OB0CM001.OB0CMNDT initialAttributes;
  else
    set OB0CM001.OB0CMNDT skip;
  end

  set OB0CM001.XBDCD initialAttributes; /* bulk/draw code*/
  set OB0CM001.OP1BLKID initialAttributes; /* bulk order id*/

  set OB0CM001.XOCCD initialAttributes; /* order class*/
  set OB0CM001.SP1ID initialAttributes; /* sales program*/

  set OB0CM001.OB0CMEDT initialAttributes; /* enter date - defined autoskip*/
  set OB0CM001.OB0CMCDT initialAttributes; /* received date - defined autoskip*/

  set OB0CM001.OB0CMUPL initialAttributes; /* all suborders literal*/
  OB0CM001.OB0CMUPL = "ALL SUBORDERS?";
  set OB0CM001.OB0CMUPF initialAttributes; /* all suborders flag*/
  set OB0CM001.XOMCD initialAttributes; /* change reason*/
  set OB0CM001.SOCD-HDR-RSN-TXT initialAttributes; /* ocd change rsn comment*/


end // end OB0CS41

// SET FIELDS PROTECT
Function OB0CS42()

  if (OB1REC.OB1PARLF == "Y")
    OB0CM001.OB0CMPLL = "ORDER IS PARTIALLY LOADED";
  end


  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    if (OB0CM001.CAMSG == " ")
      OB0CM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end

  set OB0CM001.OB0CMPLL initialAttributes;
  set OB0CM001.KUCCOID skip;
  set OB0CM001.KUMSTRID skip;
  set OB0CM001.XNXCD skip;
  set OB0CM001.OB0CMUPL skip, invisible;
  set OB0CM001.OB0CMUPF skip, invisible;
  set OB0CM001.XOMCD skip;
  set OB0CM001.SOCD-HDR-RSN-TXT skip;
  set OB0CM001.OP1CUPO skip;

  set OB0CM001.XGPCD skip;
  set OB0CM001.XDVCD skip;
  set OB0CM001.XBCCD skip;
  set OB0CM001.XSOCD skip;
  set OB0CM001.XOBCD skip;
  set OB0CM001.SM1AGYID skip;
  set OB0CM001.SM4REPID skip;

  set OB0CM001.OB0CMNDT skip;
  set OB0CM001.XBDCD skip;
  set OB0CM001.OP1BLKID skip;
  set OB0CM001.SP1ID skip;
  set OB0CM001.XOCCD skip;

  set OB0CM001.XNDCD[1] initialAttributes;
  set OB0CM001.OP4TXT[1] initialAttributes;
  set OB0CM001.XNDCD[1] initialAttributes;
  set OB0CM001.OP4TXT[1] initialAttributes;
  set OB0CM001.XNDCD[2] initialAttributes;
  set OB0CM001.OP4TXT[2] initialAttributes;
  set OB0CM001.XNDCD[3] initialAttributes;
  set OB0CM001.OP4TXT[3] initialAttributes;
  set OB0CM001.XNDCD[4] initialAttributes;
  set OB0CM001.OP4TXT[5] initialAttributes;
  set OB0CM001.XNDCD[5] initialAttributes;
  set OB0CM001.OP4TXT[4] initialAttributes;
end // end OB0CS42

// CHECK ALL SUBORD FOR PART LOAD
Function OB0CS43()

  OB0CS44(); /* select all suborders for the order*/

  OB0CS45(); /* select first suborder*/

  while (SQLCA.VAGen_SQLCODE == 0)
    if (OB1REC.OB1PARLF == "Y")
      set OB0CM001.KUCCOID skip;
    end
    OB0CS45(); /* select next suborder*/
  end

  OB0CS46(); /* close cursor*/

  XSOBS03(); /* get orignial ob1rec*/


end // end OB0CS43

// SELECT ALL SUBORDERS FOR ORDER
Function OB0CS44()

  OBFREC.OBFTASK = "S1";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "S1";
    TA1REC.TA1LOCAT[2] = "IO5160";
    TA1REC.TA1LOCAT[3] = "OB0CS44";
    TA1REC.TA1DBASE = "DORDB";
    TA1REC.TA1TBLVU = "VORHDR01";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end


end // end OB0CS44

// SELECT NEXT SUBORDER - OB1REC
Function OB0CS45()

  OBFREC.OBFTASK = "N1";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "N1";
    TA1REC.TA1LOCAT[2] = "IO5160";
    TA1REC.TA1LOCAT[3] = "OB0CS45";
    TA1REC.TA1DBASE = "DORDB";
    TA1REC.TA1TBLVU = "VOBHDR01";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end


end // end OB0CS45

// CLOSE CURSOR - OB1REC
Function OB0CS46()

  OBFREC.OBFTASK = "C1";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "C1";
    TA1REC.TA1LOCAT[2] = "IO5160";
    TA1REC.TA1LOCAT[3] = "OB0CS46";
    TA1REC.TA1DBASE = "DORDB";
    TA1REC.TA1TBLVU = "VORHDR01";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end


end // end OB0CS46

// MOVE FIELDS TO MAP
Function OB0CS50()

  OB0CM001.OB0CMPRC = "OB0C010"; /* process name*/
  OB0CM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

  OB0CM001.OBWORDER = OBWREC.OBWORDER; /* formatted ord num*/

  OB0CM001.KUCCOID = OB1REC.KUCCOID; /* company number*/
  OB0CM001.KUMSTRID = OB1REC.KUMSTRID; /* store id*/
  OB0CM001.XNXCD = OB1REC.XNXCD; /* department code*/
  OB0CM001.OP1CUPO = OB1REC.OP1CUPO; /* purchase order num*/
  OB0CM001.KUMSTRNM = OBWREC.KUMSTRNM; /* store name*/

  OB0CM001.OB0CMUPF = " "; /* all suborders flag*/


  OB0CM001.XGPCD = OB1REC.XGPCD; /* gpc code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XGPCD in XGPTBL.XGPCD)
    OB0CM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    OB0CM001.XGPABRV = "UNKNWN";
  end

  OB0CM001.XDVCD = OB1REC.XDVCD; /* division code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XDVCD in XDVTBL.XDVCD)
    OB0CM001.XDVABRV = XDVTBL.XDVABRV[sysVar.arrayIndex];
  else
    OB0CM001.XDVABRV = "UNKNWN";
  end

   /* brand code*/
  OB0CM001.XBCCD = OB1REC.XBCCD;
  sysVar.arrayIndex = 1;
  if (OB1REC.XBCCD in XBCTBL.XBCCD)
    OB0CM001.XBCABRV = XBCTBL.XBCABRV[sysVar.arrayIndex];
  else
    OB0CM001.XBCABRV = "UNKNWN";
  end

   /* sales office*/
  OB0CM001.XSOCD = OB1REC.XSOCD;
  sysVar.arrayIndex = 1;
  if (OB1REC.XSOCD in XSOTBL.XSOCD)
    OB0CM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex];
  else
    OB0CM001.XSOABRV = "UNKNWN";
  end

   /* base order type*/
  OB0CM001.XOBCD = OB1REC.XOBCD;
  sysVar.arrayIndex = 1;
  if (OB1REC.XOBCD in XOBTBL.XOBCD)
    OB0CM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
  else
    OB0CM001.XOBABRV = "UNKNWN";
  end

   /* system order type*/
  OB0CM001.XOTCD = OB1REC.XOTCD;
  sysVar.arrayIndex = 1;
  if (OB1REC.XOTCD in XOTTBL.XOTCD)
    OB0CM001.XOTABRV = XOTTBL.XOTABRV[sysVar.arrayIndex];
  else
    OB0CM001.XOTABRV = "UNKNWN";
  end

  OB0CM001.SM1AGYID = OB1REC.SM1AGYID; /* sales agency*/
  OB0CM001.SM4REPID = OB1REC.SM4REPID; /* sales rep id*/

  if (OB1REC.SM4REPID == 0)
    OB0CM001.OB0CMREP = " ";
  else
    OB0CS-SALESREPNM(); /* get sales rep name*/
  end

   /* convert need date*/
  OBWREC.OBWDT8 = OB1REC.OP1CUNDT;
  XSOBDCM();
  OB0CM001.OB0CMNDT = OBWREC.OBWDT6;

  OB0CM001.XBDCD = OB1REC.XBDCD; /* move bulk draw code*/
   /* get bulk draw code description;*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XBDCD in XBDTBL.XBDCD)
    OB0CM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
  else
    OB0CM001.XBDABRV = "UNKNWN";
  end

  OB0CM001.OP1BLKID = OB1REC.OP1BLKID; /* move bulk order id*/

  OB0CM001.SP1ID = OB1REC.SP1ID; /* sales program id*/

   /* order class code*/
  OB0CM001.XOCCD = OB1REC.XOCCD; /* sales program id*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XOCCD == " ")
    OB0CM001.XOCABRV = " ";
  else
    if (OB1REC.XOCCD in XOCTBL.XOCCD)
      OB0CM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
    else
      OB0CM001.XOCABRV = "UNKNWN";
    end
  end

   /* order status*/
  sysVar.arrayIndex = 1;
  if (OB1REC.YOBCD in YOBTBL.YOBCD)
    OB0CM001.YOBABRV = YOBTBL.YOBABRV[sysVar.arrayIndex];
  else
    OB0CM001.YOBABRV = "UNKNWN";
  end

   /* entered date*/
  OBWREC.OBWDT8 = OB1REC.OP1ENTDT;
  XSOBDCM();
  OB0CM001.OB0CMEDT = OBWREC.OBWDT6;


  OB0CS16(); /* get entered by rep*/

  OB0CS17(); /* get taken by rep*/

   /* last change date*/
  OBWREC.OBWDT8 = OB1REC.ZZZCHGDT;
  XSOBDCM();
  OB0CM001.OB0CMCDT = OBWREC.OBWDT6;

   /* recieve date*/
  OBWREC.OBWDT8 = OB1REC.OP1ORCDT;
  XSOBDCM();
  OB0CM001.OP1ORCDT = OBWREC.OBWDT6;

  OB0CM001.OB1XREFN = OB1REC.OB1XREFN; /* repnet file nbr*/

  OB0CM001.OP1SPINF = OB1REC.OP1SPINF; /* instructions flag*/

  OB0CM001.OP1OMCMF = OB1REC.OP1OMCMF; /* comments flag*/

  OB0CM001.OP1SPLBF = OB1REC.OP1SPLBF; /* label flag*/

  OB0CS15(); /* get special instructions*/

end // end OB0CS50

// EDIT CUST VS ANY GPC
Function OB0CS51()


     /* SELECT CURSOR SET*/

  call "IO0280" ("SS", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
    OB0CS52(); /* fetch first record*/
  else
    TA1REC.TA1LOCAT[1] = "SS"; /* transaction*/
    TA1REC.TA1LOCAT[2] = "IO0280"; /* i/o mod*/
    TA1REC.TA1LOCAT[3] = "OB0CS51"; /* stmt group*/
    TA1REC.TA1DBASE = "DCUST"; /* database name*/
    TA1REC.TA1TBLVU = "VCUST001"; /* database view name*/
    TA1REC.TA1MAP = "OB0CM001"; /* map name*/
    if (SQLCA.VAGen_SQLCODE == -911)
      OB0CM001.CAMSG = "DATABASE BUSY - TRY AGAIN";
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
    else
      XSOBEDC(); /* db2 retn routine no rollback*/
    end
  end


     /* CLOSE CURSOR*/

  call "IO0280" ("CS", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
      /* next sentence*/
  else
    TA1REC.TA1LOCAT[1] = "CS"; /* transaction*/
    TA1REC.TA1LOCAT[2] = "IO0280"; /* i/o mod*/
    TA1REC.TA1LOCAT[3] = "OB0CS51"; /* stmt group*/
    TA1REC.TA1DBASE = "DCUST"; /* database name*/
    TA1REC.TA1TBLVU = "VCUST001"; /* database view name*/
    TA1REC.TA1MAP = "OB0CM001"; /* map name*/
    if (SQLCA.VAGen_SQLCODE == -911)
      OB0CM001.CAMSG = "DATABASE BUSY - TRY AGAIN";
      OBWREC.OBWERRFL = "Y"; /* set error flag*/
    else
      XSOBEDC(); /* db2 retn routine no rollback*/
    end
  end


end // end OB0CS51

// FETCH CUSTOMER RECORD
Function OB0CS52()

  call "IO0280" ("SN", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};


  if (SQLCA.VAGen_SQLCODE == 0) /* good return*/
    /* next sentence*/
  else
    converseLib.validationFailed(017); /* cust invalid or inact for gpc*/
    OB0CM001.KUMSTRNM = "UNKNOWN CUSTOMER"; /**/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0CM001.KUCCOID cursor, bold;
    set OB0CM001.KUMSTRID bold;
    set OB0CM001.XNXCD bold;
  end


end // end OB0CS52

// Edit pfkeys for OB0C
Function OB0CSPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    OB0CS-SAVE-MAP();
    XSOBP01();
    OB0CM001.CAMSG = OBWREC.OBWHELP; /* msg to screen if no help*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf9)
    XSOBP09();
  end

  if (converseVar.eventKey is pf12)
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* HEADER EDIT*/
    XSOBS-ONLINE-EDIT();
  end

  if (converseVar.eventKey is pf13)
    XSOBP13();
  end

  if (converseVar.eventKey is pf14)
    XSOBP14();
  end

  if (converseVar.eventKey is pf15)
    XSOBP15();
  end

  if (converseVar.eventKey is pf16)
    XSOBP16();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf18)
    XSOBP18();
  end

  if (converseVar.eventKey is pf19)
    XSOBP19();
  end

  if (converseVar.eventKey is pf24)
    set OB0CM001.SOCD-HDR-RSN-TXT initialAttributes;
    if (OB1REC.YOBCD == "CA") /* cleared availability*/
      converseLib.validationFailed(164); /* order status doesn't allow cancel*/
      OBWREC.OBWERRFL = "Y";
    else
      OB0CS-EDIT-CHG-RSN();

      if (OBWREC.OBWERRFL != "Y")
        OBWREC.OBWXLIND = "H";
        XSOBP24();
        XSOB-UPD-VOCHDR01();
  /* IF VOCHDR01.SOCD-ORD-DELT-FL = 'Y';*/
        OB0CS-ADD-VSOHCR01();
  /* END;*/
        XSOBP00();
      end

    end
  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf24)
     /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end

  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    if (OB0CW01.OB0CWUPD == "Y")
      XSOBP00();
    else
      XSOBP13();
    end
  end


end // end OB0CSPF

// REFORMAT REP NAME
Function OB0CSRN()

    /* reformat repname into the map*/

  OB0CW01.OB0CWREP = " ";
  OB0CW01.XXXFSTNM = VRAGCY02.XXXFSTNM; /* first-name into workarea*/
  OB0CW01.OB0CWRFI = OB0CW01.OB0CWFNI; /* set 1st char of first-name*/
  OB0CW01.XXXLSTNM = VRAGCY02.XXXLSTNM; /* set-up last name*/
  OB0CM001.OB0CMREP = OB0CW01.OB0CWREP; /* move reformatted name to map*/

end // end OB0CSRN

Record OB0CW01 type basicRecord
  10 OB0CWSUB OB0CWSUB ; 
  10 OB0CWORD OB0CWORD ; 
    15 * char(8) ; 
    15 OP1PARTN OP1PARTN ; 
  10 OB0CWUPD OB0CWUPD ; 
  10 OB0CWCMP OB0CWCMP ; 
  10 OB0CWOTF OB0CWOTF ; 
  10 OB0CWSM5 OB0CWSM5 ; 
    15 OB0CWRID OB0CWRID ; 
    15 SM1AGYID SM1AGYID ; 
  10 XXXFSTNM XXXFSTNM ; 
    15 OB0CWFNI OB0CWFNI ; 
    15 * char(14) ; 
  10 OB0CWREP OB0CWREP ; 
    15 OB0CWRFI OB0CWRFI ; 
    15 * char(1) ; 
    15 XXXLSTNM XXXLSTNM ; 
    15 * char(8) ; 
  10 XBDRWOFL XBDRWOFL ; 
  10 CU-CUSKU-SZ-FL CU-CUSKU-SZ-FL ; 
  10 OB0CW-OVRD-EOF-FL OB0CW-OVRD-EOF-FL ; 
  10 CU-CUSKU-ID CU-CUSKU-ID ; 
  10 OB0CW-UPD-PO-FL OB0CW-UPD-PO-FL ; 
  10 OB0CW-UPD-ND-FL OB0CW-UPD-ND-FL ; 
  10 OB0CW-MAX-SEQ OB0CW-MAX-SEQ ; 
end // end OB0CW01

DataItem OB0CW-MAX-SEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_CUSKU_SZ_FL
DataItem OB0CW-OVRD-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0CW-UPD-ND-FL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0CW-UPD-PO-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company changed flag
DataItem OB0CWCMP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FIRST NAME INITIAL
DataItem OB0CWFNI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work ord num
DataItem OB0CWORD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// system ord typ found flag
DataItem OB0CWOTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// REP INITIAL AND LAST NAME
DataItem OB0CWREP char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// REP FIRST NAME INITIAL
DataItem OB0CWRFI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SREP_ID
DataItem OB0CWRID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// AGENCY/REP FOR DISPLAY
DataItem OB0CWSM5 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work sub1
DataItem OB0CWSUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update needed flag
DataItem OB0CWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

