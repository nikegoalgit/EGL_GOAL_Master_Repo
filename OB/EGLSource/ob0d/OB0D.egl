package ob0d;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import in1.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import pc.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=OB0D ****
// OB0D -  Order Batch - Header
// 
// 
// Application overview:
//   This map displays all of the most accessed information
//   about the order in general.  It is in the mainstream of
//   the system.  It flows from OB0C, the customer Information
//   Screen and by pressing pf13, it can be accessed from most
//   other screens in the system.  When enter is pressed, the
//   Product Summary Screen is displayed.
// 
// Application Objective:
//   This map will show all pertinent information about the
//   order without getting into details.  Elements such as
//   customer, batch order status, purchase order, sales
//   office, order type, general product class, order class,
//   total order units and value are displayed but cannot be
//   changed.  If the order is not partially loaded elements
//   such as sales agency, sales rep, and customer terms
//   can be overridden here.
// 
//   MAINT#    DATE    USERID     DESCRIPTION
//   -----   --------  ------   -------------------------------
//           06/13/90  rcoron   program creation
//           09/10/90  craine   allow bulk cd to be changed to
//                              '1', '0' or '5', and apply the
//                              change to all the suborders.
//           09/13/90  craine   change yobcd to 'nc' when updat
//                              ing all suborders for xbdcd chg
//           02/15/91  dmeier   regen for database changes
//   624     05/28/91  dflesh   add received date to map. s21.
//                              change date move to 'entered'
//                              field from zzzsdt to op1entdt.
//   438     12/09/91  JLoyer   Added OB1350 to update values
//                              defaulted from the bulk if a
//                              an order's bulk-ord-id changes.
//                              All the related sub-orders will
//                              also have defaults updated.
//                              Chgd: OB0D, s10, s30, w01
//   xxx     02/12/92 JSHANN    Remove division code edit on
//                              XWHCD for international ords.
//                              Chgd: S3A
//           03/11/92 jwils1    database changes. removed use
//                              of op1dsdcf from map and state-
//                              ment group s21.
//           03/19/92 jhecke    added code and changed screen
//                              to accomodate the shipping dis-
//                              count percent.s39
//           03/30/92 tmorri    modified 000, 010, s40, s41
//                              updates not allowed for order
//                              status 'cl' or 'ca'.
//           04/28/92 jhecke    added code to fix small problem
//                              with direct ship discount pct.
//                              s39.
//           06/09/92 bbake2    database changes, s3a to use
//                              xwhtbl.xdvcd1 (instead of xdvcd
//  904      08/12/92 gwells    Set sales rep override flag to
//                              'y' when agency or rep changes
//                              - s50.
//  db2      10/12/92 bbake2   replaced sm5rec with vragcy02 in
//                             s10, s22, srn, s3h
// 913       11/04/92 jather   added special override percents
//                             to direct ship codes (ob0ds39)
//           05/19/94 scantr   virtual airspeed project: chgd
//                             obwrec,xsobs02,03, added xsobs10
//           05/24/94 scantr   changed xsobs03
//  VAS      06/03/94 dbruih   Removed agency, sales rep,
//                             sales rep name and entered date.
//                             added needdate.
//                             Modified modules:  ob0ds21, s3x,
//                             s30, s39, s41, s42, s43, s50,
//                             ob0ds-needdate, ob0dm0001
//  VAS      06/15/94 craine   REWRITE TO CALL RELATIONAL EDIT
//  vas      08/18/94 craine   changes to xsobs-limited-edit,
//                             xsobs-full-edit.
//  vas      08/30/94 craine   change to xsobs-full-edit, chg
//                             pf12 to do online edit, block
//                             'DL'and 'LD' orders from update
//  vas      09/06/94 craine   change to obwrec
//  vas      10/06/94 craine   add new xsobs-add-new-oba
//  vas      10/25/94 craine   change to obwrec
//  VAS      11/03/94 CRAINE   Remove need date can't be less
//                             than set up date edit in
//                             OB0DS-NEEDDATE
//  vas      11/15/94 craine   chg to xsobp24
//  vas      12/20/94 craine   chg to allow changes if cleared
//  vas      01/30/94 craine   chg to xsobs-upd-oba-edit
//  vas      04/27/95 craine   allow for new yobcd 'pd' and 'lp
//           07/22/95 DLIDDL   Modified to incorporate Nike
//                             Canada into AIRSPEED - OB0DS21.
//           08/07/95 CRAINE   DATABASE CHANGES.
//           09/10/95 CRAINE   ADD PO MONEY MONTH TO MAP FOR
//                             KINNEY ACCOUNTS.
//           02/07/96 CBRINE   Added edit for bulk order id -
//                             OB0DS-EDIT-BULK-ID
//           01/05/96 wleong   added pf21 for prepack order
//                             added changes to update prepack
//                             if warehouse is changed
//           06/23/97 joldin   When a tracked ocd field is
//                             changed write a VSOHCR01 record
//           09/19/97 jnaemu   added vcutof01 for need dt edit
//           11/05/97 KLEE     changed vcutof01 to use new need
//                             date in edit instead of old need
//                             date if changed.
//           04/01/98 DSMITH   Added edit to require DNSB date
//                             for warehouse 51.
//           04/14/98 SATYAM   Added a sgrp ob0ds55 & modified
//                             ob0ds50, ob0ds51 & ob0ds54 to
//                             update the dordb.vbitem01 when
//                             ever a bulk id or a need date
//                             is changed on the cust draw.
//           10/02/98 svargh   added changes to ob0ds51,
//                             ob0ds-check-vbulk,ob0ds-updte-vb
//                             to update vbulks02 table when
//                             the header is updated
//  2903     03/29/99 SCHAPY   Added changes in ob0dspf so that
//                             when an order is cancelled
//                             change reason is recorded.
// *********************
Program OB0D type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OB0DW01 OB0DW01; // record
  OB1REC OB1REC; // record
  OB2REC OB2REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBLEREC OBLEREC; // record
  OBWREC OBWREC; // record
  OBZREC OBZREC; // record
  OP1REC OP1REC; // record
  OPJREC OPJREC; // record
  OPLREC OPLREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VBCSPR01 VBCSPR01; // record
  VBULKS02 VBULKS02; // record
  VOCHDR01 VOCHDR01; // record
  VSOHCR01 VSOHCR01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XAATBL {deleteAfterUse = yes}; // table
  use XBDTBL {deleteAfterUse = yes}; // table
  use XDATBL {deleteAfterUse = yes}; // table
  use XDSTBL {deleteAfterUse = yes}; // table
  use XDVTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XOATBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use XOCTBL {deleteAfterUse = yes}; // table
  use XOMTBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use XTDTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use OB0DM.OB0DM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0D000: OB0D000();
    goto OB0D010;
    OB0D010: OB0D010();
    goto OB0D010;
  end // end main
end // end OB0D

// ORDER HEADER INIT
Function OB0D000()
     /* Check csp and order batch security*/

  XSENTRY();
  XSOBS01();

     /* Initialize application - init records, get zz date/time,*/
                              /* save map name for XSOBE## sgrp's*/
  OB0DS10();

     /* Set -911 processing flag*/

  OBWREC.OBWER911 = "N";

     /* Determine if batch edit is running*/

  XSOBS02();

     /* Read current order header*/

  XSOBS03();


     /* Display commarea message*/

  OB0DM001.CAMSG = OBWREC.CAMSG;
  OBWREC.CAMSG = " ";


     /* Build map for display*/

  OB0DS20();


     /* Edit map*/

  if (OB1REC.OB1PARLF != "Y" /* not partially loaded*/
   && OB1REC.YOBCD != "XL"   /* not cancelled*/
   && OB1REC.YOBCD != "CA"   /* not cleared availability*/
   && OB1REC.YOBCD != "LP"   /* not lost demand*/
   && OB1REC.YOBCD != "PD")  /* not postponed demand*/
    OB0DS30();
  end

end // end OB0D000

// ORDER HEADER CONVERSE
Function OB0D010()

  converseLib.clearScreen();
   /* replace mapname and uncomment*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/
  if (COMMAREA.CAFROMAP == "OMOG")
    COMMAREA.CAFROMAP = " ";
    set OB0DM001.XOMCD cursor;
  end


  converse OB0DM001 ;

     /* Init error stuff*/

  OBWREC.OBWERRFL = "N";
  converseLib.validationFailed(0);
  OBWREC.OBWHELP = OB0DM001.CAMSG; /* save for help screen*/
  OB0DM001.CAMSG = " "; /* replace mapname and uncomment*/


     /* Reset field attributes*/

  OB0DS40();


     /* Edit map (no matter what pfkey is used, except*/
               /* partially loaded orders)*/

  if (OB1REC.YOBCD != "XL" /* not cancelled*/
   && OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "DL" /* not deleted*/
   && OB1REC.YOBCD != "LD" /* not loaded*/
   && OB1REC.YOBCD != "LP" /* not lost demand*/
   && OB1REC.YOBCD != "PD") /* not postponed demand*/

    OB0DS30(); /* EDIT MAP*/

    if (OBWREC.OBWERRFL == "N"
     && converseVar.eventKey is enter)
      OB0DS50(); /* UPDATE*/
    end

    /* if something changed on the order*/
    /* call relational edit subprogram*/
    if (OB0DW01.OB0DWUPD == "Y"
     && OBWREC.OBWERRFL == "N"
     && converseVar.eventKey is enter)
      XSOBS-ONLINE-EDIT();
    end

  end

     /* Edit PF Keys*/

  OB0DSPF();
end // end OB0D010

// DELETE/INSERT OB1REC
Function OB0DS-ADD-VSOHCR01()

   /* BUILD OCD ORDER CHANGE REASON FROM DORDER ORDER HEADER*/

  OB0DS-GET-MAX-SEQ();

  set VSOHCR01 empty;

  VSOHCR01.OP1PARTN = OB1REC.OP1PARTN;
  VSOHCR01.OP1CUOID = OB1REC.OP1CUOID;
  VSOHCR01.OP1NORID = OB1REC.OP1NORID;
  VSOHCR01.XOMCD = OB0DM001.XOMCD;
  VSOHCR01.SOCD-HDR-RSN-SEQ = OB0DW01.OB0DW-MAX-SEQ;
  VSOHCR01.SOCD-APPL-SRC-CD = "OB";
  VSOHCR01.SOCD-GLBL-MNTN-FL = "N";
  VSOHCR01.SOCD-HDR-RSN-TXT = OB0DM001.SOCD-HDR-RSN-TXT;
  if (OB0DW01.OB0DW-UPD-SA-FL == "Y")
    VSOHCR01.OP1DSADT = OB1REC.OP1DSADT;
  else
    if (OB0DW01.OB0DW-UPD-SB-FL == "Y")
      VSOHCR01.OP1DSBDT = OB1REC.OP1DSBDT;
    else
      if (OB0DW01.OB0DW-UPD-ND-FL == "Y")
        VSOHCR01.OP1CUNDT = OB1REC.OP1CUNDT;
      end
    end
  end
  VSOHCR01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSOHCR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VSOHCR01.ZZZSTM = XX0XW01.XX0XWTIM;
  VSOHCR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VSOHCR01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* ADD RECORD TO VSOHCR01*/

  call "VSOHCR01" ("A ", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};

end // end OB0DS-ADD-VSOHCR01

// DELETE/INSERT OB1REC
Function OB0DS-CHECK-VBULK()

   /* ************ TCS INCLUDE BEGIN************/

   /* STATEMENT GROUP TO SELECT FROM  BULK TABLE*/

  set SQLCA empty;
  set OBFREC empty;
  OBFREC.OBFTASK = "S";

  call "VBULKS02" (OBFREC, SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OB0DS-UPDTE-VBULK();
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      TA1REC.TA1LOCAT[1] = "S ";
      TA1REC.TA1LOCAT[2] = "VBULKS02";
      TA1REC.TA1LOCAT[3] = "OB0DS-CHECK-VBULK";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VBULKS02"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

   /* **************TCS INCLUDE END***************************/

end // end OB0DS-CHECK-VBULK

// CHECK FOR PREPACK
Function OB0DS-CHK-PREPACK()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set VBCSPR01 empty;
  set SQLCA empty;

  VBCSPR01.XWHCD = OB1REC.XWHCD; /* WAREHOUSE*/
  VBCSPR01.OP1PARTN = OB1REC.OP1PARTN; /* PART CHAR*/
  VBCSPR01.OP1CUOID = OB1REC.OP1CUOID; /* ORDER NUM*/
  VBCSPR01.OP1NORID = OB1REC.OP1NORID; /* NIKE ORD ID*/

  call "VBCSPR01" ("S1", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;              /* prepack doesn't exist*/
  else
    set SQLCA empty;
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "S1      ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0DS-CHK-PREPACK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

  while (SQLCA.VAGen_SQLCODE == 0)
    call "VBCSPR01" ("N1", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      OB0DS-UPDT-PREPACK(); /* prepack exists*/
    else
      if (SQLCA.VAGen_SQLCODE == +100)
           /* next sentence;*/
      else
        set SQLCA empty;
        TA1REC.TA1DBASE = "DORDB   ";
        TA1REC.TA1TBLVU = "VBCSPR01";
        TA1REC.TA1LOCAT[1] = "SE      ";
        TA1REC.TA1LOCAT[2] = "VBCSPR01";
        TA1REC.TA1LOCAT[3] = "OB0DS-CHK-PREPACK";
        TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
        if (SQLCA.VAGen_SQLCODE == -911)
          XSOBS04();
        else
          XSOBEDC();
        end
      end
    end
  end
end // end OB0DS-CHK-PREPACK

// EDIT BULK ORDER ID
Function OB0DS-EDIT-BULK-ID()

  if (OB0DM001.OP1BLKID == 0)
    return;
  end

    /* CHECK FOR BULK ORD ID*/

  set OP1REC empty;
  set SQLCA empty;
  OB0DW01.OB0DW-ORD-ID = OB0DM001.OP1BLKID; /* set upd key*/
  OP1REC.OP1PARTN = OB0DW01.OP1PARTN; /* for op1rec*/
  OP1REC.OP1CUOID = OB0DM001.OP1BLKID; /* bulk record*/
  OP1REC.OP1NORID = 0;

  TA1REC.TA1DBASE = "DORDER  ";
  TA1REC.TA1TBLVU = "VORHDR01";
  TA1REC.TA1LOCAT[2] = "IO0430  ";
  TA1REC.TA1LOCAT[3] = "OB0DS-ED";
  TA1REC.TA1LOCAT[4] = "IT-BULK-";

  call "IO0430" ("SS", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "SS      ";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

  call "IO0430" ("SN", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    sysVar.arrayIndex = 1;
    if (OP1REC.XBDCD in XBDTBL.XBDCD
     && XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y") /* make sure order is bulk*/
  /* NEXT SENTENCE*/
    else
      set OB0DM001.OP1BLKID cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(075); /* bulk not found*/
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set OB0DM001.OP1BLKID cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(075); /* bulk not found*/
    else
      TA1REC.TA1LOCAT[1] = "SN      ";
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

  call "IO0430" ("CS", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "CS      ";
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end


end // end OB0DS-EDIT-BULK-ID

// EDIT CHANGE RSN CODE
Function OB0DS-EDIT-CHG-RSN()

   /* check for a valid change reason code*/


  if (OB0DM001.XOMCD != "  ")
      /* test for a valid change code*/
    if (OB0DM001.XOMCD in XOMTBL.XOMCD /* valid maint reason*/
     && XOMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* active maint reason*/
      if (XOMTBL.XOMCANCF[sysVar.arrayIndex] == "A" /* add product reason*/
       || XOMTBL.XOMCANCF[sysVar.arrayIndex] == "B" /* both add/decrease*/
       || XOMTBL.XOMCANCF[sysVar.arrayIndex] == "D") /* decrease product reason*/
         /* next sentence*/
      else
        OBWREC.OBWERRFL = "Y"; /* set error flg*/
        converseLib.validationFailed(234); /* rsn not valid for change*/
        set OB0DM001.XOMCD cursor, bold;
      end
    else
      OBWREC.OBWERRFL = "Y"; /* set error flg*/
      converseLib.validationFailed(234); /* rsn not valid*/
      set OB0DM001.XOMCD cursor, bold;
    end
  else
    OBWREC.OBWERRFL = "Y"; /* set error flg*/
    converseLib.validationFailed(232); /* change reason required*/
    set OB0DM001.XOMCD cursor, bold;
  end



end // end OB0DS-EDIT-CHG-RSN

// EDIT CHANGE RSN CODE
Function OB0DS-EDIT-XOMCD()

   /* if any errors exist don't need to check*/
   /* change reason.*/

  if (OBWREC.OBWERRFL == "Y")
    return;
  end

   /* see if any tracked OCD fields changed. If they*/
   /* did a change reason must be entered.*/

  OBWREC.OBWDT6 = OB0DM001.OB0DMNDT; /* check for need date change*/
  XSOBDMC();

  if (OBWREC.OBWDT8 != OB1REC.OP1CUNDT)
    OB0DS-EDIT-CHG-RSN(); /* check for a valid chg rsn*/
  else
    OBWREC.OBWDT6 = OB0DM001.OB0DMDSA; /* check dnsa date*/
    XSOBDMC();
    if (OBWREC.OBWDT8 != OB1REC.OP1DSADT)
      OB0DS-EDIT-CHG-RSN(); /* check for a valid chg rsn*/
    else
      OBWREC.OBWDT6 = OB0DM001.OB0DMDSB; /* check dnsb date*/
      XSOBDMC();
      if (OBWREC.OBWDT8 != OB1REC.OP1DSBDT)
        OB0DS-EDIT-CHG-RSN(); /* check for a valid chg rsn*/
      end
    end
  end



end // end OB0DS-EDIT-XOMCD

// GET MAX SOCD-HRR-RSN-SEQ
Function OB0DS-GET-MAX-SEQ()

   /* BUILD KEY TO READ VSOHCR01*/

  set VSOHCR01 empty;

  VSOHCR01.OP1PARTN = OB1REC.OP1PARTN;
  VSOHCR01.OP1CUOID = OB1REC.OP1CUOID;
  VSOHCR01.OP1NORID = OB1REC.OP1NORID;
  VSOHCR01.SOCD-APPL-SRC-CD = "OB";
  VSOHCR01.XOMCD = OB0DM001.XOMCD;
  VSOHCR01.SOCD-HDR-RSN-SEQ = 1;

   /* / DO A SEQLECT UNIQUE TO SEE IF THE ROW EXISTS*/

  call "VSOHCR01" ("S ", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 100)
    OB0DW01.OB0DW-MAX-SEQ = 1;
  else
    if (SQLCA.VAGen_SQLCODE == 0)
      call "VSOHCR01" ("SM", SQLCA, VSOHCR01) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0
       || SQLCA.VAGen_SQLCODE == 100)
        OB0DW01.OB0DW-MAX-SEQ = VSOHCR01.SOCD-HDR-RSN-SEQ + 1;
      end
    end
  end

end // end OB0DS-GET-MAX-SEQ

// MOVE FIELDS TO MAP
Function OB0DS-LDMAP-OBZREC()

  OBZREC.OBZGROUP = COMMAREA.CA-USER-WORKAREA-2K-C;

  OB0DM001.OB0DMPRC = "OB0D010"; /* process name*/
  OB0DM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

  OB0DM001.OBWORDER = OBWREC.OBWORDER; /* formatted ord num*/
  OB0DM001.OBWCUST = OBWREC.OBWCUST; /* formatted cust*/
  OB0DM001.YOBCD = OB1REC.YOBCD; /* order status*/

  OB0DM001.OP1CUPO = OBWREC.OP1CUPO; /* purchase order number*/
  OB0DM001.KUMSTRNM = OBWREC.KUMSTRNM; /* customer name*/

  sysVar.arrayIndex = 1;
  if (OB1REC.XSOCD in XSOTBL.XSOCD) /* SALES OFFICE abbreviation*/
    OB0DM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex];
  else
    OB0DM001.XSOABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XOBCD in XOBTBL.XOBCD) /* BASE ORDER TYPE abbreviation*/
    OB0DM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
  else
    OB0DM001.XOBABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XGPCD in XGPTBL.XGPCD) /* GPC abbreviation*/
    OB0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    OB0DM001.XGPABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XDVCD in XDVTBL.XDVCD) /* DIVISION abbreviation*/
    OB0DM001.XDVABRV = XDVTBL.XDVABRV[sysVar.arrayIndex];
  else
    OB0DM001.XDVABRV = "UNKNWN";
  end

  OB0DM001.SP1ID = OB1REC.SP1ID; /* sales program id*/

  if (OB1REC.XOCCD == " ") /* ORDER CLASS abbreviation*/
    OB0DM001.XOCABRV = " ";
  else
    sysVar.arrayIndex = 1;
    if (OB1REC.XOCCD in XOCTBL.XOCCD)
      OB0DM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
    else
      OB0DM001.XOCABRV = "UNKNWN";
    end
  end

  OB0DM001.OB0DMDSB = OBZREC.OP1DSBDT;

  OB0DM001.OB0DMDSA = OBZREC.OP1DSADT;

  OB0DM001.OB0DMCDT = OBZREC.OP1CALDT;

  OB0DM001.OB0DMECD = OBZREC.OP1ECADT; /* extended cancel date*/

  OB0DM001.OP1ECANM = OBZREC.OP1ECANM; /* authorized by*/

  OB0DM001.XBDCD = OBZREC.XBDCD; /* bulk/draw code*/

  sysVar.arrayIndex = 1;
  if (OB1REC.XBDCD in XBDTBL.XBDCD) /* BULK/DRAW CODE abbreviation*/
    OB0DM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
  else
    OB0DM001.XBDABRV = "UNKNWN";
  end

  OB0DM001.OP1BLKID = OBZREC.OP1BLKID; /* bulk ord id*/

  OB0DM001.OP1BOFL = OBZREC.OP1BOFL; /* backorder flag*/

  OBWREC.OBWDT8 = OB1REC.OP1ORCDT; /* received date*/
  XSOBDCM();
  OB0DM001.OP1ORCDT = OBWREC.OBWDT6;

  OB0DM001.OP1OTUNT = OB1REC.OP1OTUNT; /* order total units*/
  OB0DM001.OP1OVALU = OB1REC.OP1OVALU; /* order total value*/


  OB0DM001.ZFC-CRCY-CD = OB1REC.ZFC-CRCY-CD; /* CANA currency code*/

  OB0DM001.OB0DM-PO-MONEY-MON = OB1REC.OP1WIPIN;

  OB0DM001.OB0DMNDT = OBZREC.OP1CUNDT;

  OB0DM001.XWHCD = OBZREC.XWHCD; /* warehouse code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XWHCD in XWHTBL.XWHCD) /* WAREHOUSE abbreviation*/
    OB0DM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
  else
    OB0DM001.XWHABRV = "UNKNWN";
  end

  if (OB1REC.OP1OWHMF == "Y") /* RESTRICTED WAREHOUSE literal*/
    OB0DM001.OB0DMRWH = "R-WHSE";
  else
    OB0DM001.OB0DMRWH = " ";
  end

  OB0DM001.XDSCD = OBZREC.XDSCD; /* direct ship code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XDSCD in XDSTBL.XDSCD) /* DIRECT SHIP abbreviation*/
    OB0DM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex];
  else
    OB0DM001.XDSABRV = "UNKNWN";
  end

  OB0DW01.OB0DWDPC = OBZREC.OP-DIRSHP-DSCT-PCT; /* direct ship pct*/
  OB0DM001.OB0DMDPC = OB0DW01.OB0DWDPC; /* direct ship pct*/
  if (OB0DM001.XDSCD == " "
   && OB0DM001.OB0DMDPC == "0")
    OB0DM001.OB0DMDPC = " ";
  end

  OB0DM001.XPTCD = OBZREC.XPTCD; /* payment term code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XPTCD in XPTTBL.XPTCD) /* PAYMENT TERM DESCRIPTION*/
    OB0DM001.XPTDESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
  else
    OB0DM001.XPTDESC = "UNKNWN";
  end

  OB0DM001.XDAPCT = OBZREC.XDAPCT; /* def alw pcnt*/
  OB0DM001.XTDPCT = OBZREC.XTDPCT; /* trade discount pcnt*/
  OB0DM001.OP1TDFCP = OBZREC.OP1TDFCP; /* trd dsct face pcnt*/
  OB0DM001.OP1TDBKP = OBZREC.OP1TDBKP; /* trd dsct bank pcnt*/

  OB0DM001.XAAPCT = OBZREC.XAAPCT; /* ad alw pcnt dsct*/
  OB0DM001.OP1AAFCP = OBZREC.OP1AAFCP; /* ad alw face pcnt*/
  OB0DM001.OP1AABKP = OBZREC.OP1AABKP; /* ad alw bank pcnt*/
  OB0DM001.XCPPCT = OB1REC.XCPPCT; /* coop code pcnt*/

  OB0DM001.XOACD = OBZREC.XOACD; /* override authorization code*/
  OB0DM001.OB1CPTCD = OB1REC.OB1CPTCD; /* customer payment terms*/

                     /* BUILD TERM OVERRIDE FLAGS AND DESCRIPTION*/

  if (OB1REC.OP1PTOF == "Y") /* PAYMENT TERM OVRD FLAG*/
    OB0DM001.OP1PTOF = "*";
  else
    OB0DM001.OP1PTOF = " ";
  end

  if (OB1REC.OP1DFAOF == "Y") /* DEF ALW OVRD FLAG*/
    OB0DM001.OP1DFAOF = "*";
  else
    OB0DM001.OP1DFAOF = " ";
  end

  if (OB1REC.OP1TDOF == "Y") /* TRADE DISCOUNT OVRD FL*/
    OB0DM001.OP1TDOF = "*";
  else
    OB0DM001.OP1TDOF = " ";
  end

  if (OB1REC.OP1AAOF == "Y") /* AD ALW OVRD FLAG*/
    OB0DM001.OP1AAOF = "*";
  else
    OB0DM001.OP1AAOF = " ";
  end

  if (OB1REC.OP1COPOF == "Y") /* COOP CODE OVRD FLAG*/
    OB0DM001.OP1COPOF = "*";
  else
    OB0DM001.OP1COPOF = " ";
  end

  OB0DM001.CAMSG = OBZREC.CAMSG;
  OB0DM001.VAGen_EZEMSG = OBZREC.ERRMSG;

end // end OB0DS-LDMAP-OBZREC

// EDIT PO MONEY MONTH
Function OB0DS-MONEY-MONTH()

  if (OB0DM001.OB0DM-PO-MONEY-MON == "  "
   || OB0DM001.OB0DM-PO-MONEY-MON == "00")
    return;
  end

  if (OB0DM001.OB0DM-PO-MONEY-MON >= "01"
   && OB0DM001.OB0DM-PO-MONEY-MON <= "12")
     /* OK*/
  else
    converseLib.validationFailed(194);
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0DM001.OB0DM-PO-MONEY-MON cursor, bold;
  end


end // end OB0DS-MONEY-MONTH

// EDIT NEED DATE
Function OB0DS-NEEDDATE()

  if (OB0DM001.OB0DMNDT == 0)
    converseLib.validationFailed(038); /* need date required*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0DM001.OB0DMNDT cursor, bold;
    return;
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMNDT;
  XSOBDED();
  if (TA2REC.TA2RTNCD != 0)
    converseLib.validationFailed(015); /* needdate is not a valid date*/
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    set OB0DM001.OB0DMNDT cursor, bold;
    return;
  end

  if (TA2REC.TA2GRGGN == OB1REC.OP1CUNDT)
    return;
  end

   /* verify need date in same season*/

  OB0DW01.OP1CUNDT = TA2REC.TA2GRGGN;
  OB0DS-VCUTOF01();

end // end OB0DS-NEEDDATE

// MOVE FIELDS TO MAP
Function OB0DS-SAVE-MAP()
  set OBZREC empty;

  OBZREC.OP1DSBDT = OB0DM001.OB0DMDSB;

  OBZREC.OP1DSADT = OB0DM001.OB0DMDSA;
  OBZREC.OP1CALDT = OB0DM001.OB0DMCDT;
  OBZREC.OP1ECANM = OB0DM001.OP1ECANM;
  OBZREC.XBDCD = OB0DM001.XBDCD; /* bulk/draw code*/
  OBZREC.OP1BLKID = OB0DM001.OP1BLKID; /* bulk ord id*/

  OBZREC.OP1ECADT = OB0DM001.OB0DMECD;
  OBZREC.XOACD = OB0DM001.XOACD;
  OBZREC.OP1BOFL = OB0DM001.OP1BOFL; /* backorder flag*/
  OBZREC.OP1CUNDT = OB0DM001.OB0DMNDT;
  OBZREC.XWHCD = OB0DM001.XWHCD; /* warehouse code*/
  OBZREC.XDSCD = OB0DM001.XDSCD; /* direct ship code*/
  OB0DW01.OB0DWDPC = OB0DM001.OB0DMDPC;
  OBZREC.OP-DIRSHP-DSCT-PCT = OB0DW01.OB0DWDPC;
  OBZREC.XPTCD = OB0DM001.XPTCD; /* payment term code*/

  OBZREC.XDAPCT = OB0DM001.XDAPCT; /* def alw pcnt*/
  OBZREC.XTDPCT = OB0DM001.XTDPCT; /* trade discount pcnt*/
  OBZREC.OP1TDFCP = OB0DM001.OP1TDFCP; /* trd dsct face pcnt*/
  OBZREC.OP1TDBKP = OB0DM001.OP1TDBKP; /* trd dsct bank pcnt*/

  OBZREC.XAAPCT = OB0DM001.XAAPCT; /* ad alw pcnt dsct*/
  OBZREC.OP1AAFCP = OB0DM001.OP1AAFCP; /* ad alw face pcnt*/
  OBZREC.OP1AABKP = OB0DM001.OP1AABKP;

  OBZREC.CAMSG = OB0DM001.CAMSG;
  OBZREC.ERRMSG = OB0DM001.VAGen_EZEMSG;

  COMMAREA.CA-USER-WORKAREA-2K-C = OBZREC.OBZGROUP;

end // end OB0DS-SAVE-MAP

// UPDATE PREPACK
Function OB0DS-UPDT-PREPACK()

   /* THIS STATEMENT GROUP UPDATES THE PREPACK RECORD IF*/
   /* IT EXISTS*/

  VBCSPR01.XPACD = OB1REC.XPACD;
  VBCSPR01.XWHCD = OB0DM001.XWHCD;
  VBCSPR01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VBCSPR01.ZZZCHGTM = OBWREC.ZZZCHGTM;

  call "VBCSPR01" ("U3", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;*/
  else
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "UPDATE  ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0DS-UPDT-PREPK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0DS-UPDT-PREPACK

// DELETE/INSERT OB1REC
Function OB0DS-UPDTE-VBULK()

   /* *********** TCS INCLUDE BEGIN *****************/

   /* STATEMENT GROUP TO UPDATE BULK TABLE*/

  set SQLCA empty;
  set OBFREC empty;
  VBULKS02.KUMSTRID = OB1REC.KUMSTRID;
  VBULKS02.XNXCD = OB1REC.XNXCD;
  VBULKS02.XBDCD = OB1REC.XBDCD;
  VBULKS02.OP1CUPO = OB1REC.OP1CUPO;
  VBULKS02.XDVCD = OB1REC.XDVCD;
  VBULKS02.XGPCD = OB1REC.XGPCD;
  VBULKS02.XSOCD = OB1REC.XSOCD;
  VBULKS02.XWHCD = OB1REC.XWHCD;
  VBULKS02.OP1CUNDT = OB1REC.OP1CUNDT;
  VBULKS02.OP1DSADT = OB1REC.OP1DSADT;
  VBULKS02.SP1ID = OB1REC.SP1ID;
  VBULKS02.SM4REPID = OB1REC.SM4REPID;
  OBFREC.OBFTASK = "U";
  call "VBULKS02" (OBFREC, SQLCA, VBULKS02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      XSOBP00();
    else
      TA1REC.TA1LOCAT[1] = "U ";
      TA1REC.TA1LOCAT[2] = "VBULKS02";
      TA1REC.TA1LOCAT[3] = "OB0DS-UPDTE-VBULK";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VBULKS02"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

   /* ***********TCS INCLUDE END*******************/

end // end OB0DS-UPDTE-VBULK

// verify need dt in same season
Function OB0DS-VCUTOF01()

   /* *************************************************/
   /* * if the need date has been modified, find the*/
   /* * production deadline. find out if the new need*/
   /* * date is within the same season.*/
   /* **************************************************/

   /* get the draw code*/

  sysVar.arrayIndex = 1;
  OB0DW01.XBDRWOFL = "N"; /* draw code in ws*/
  if (OB1REC.XBDCD in XBDTBL.XBDCD /* BULK/DRAW CODE TABLE*/
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* ACTIVE STATUS*/
    OB0DW01.XBDRWOFL = XBDTBL.XBDRWOFL[sysVar.arrayIndex];
  else
    return;
  end

  set TA1REC empty;
  set TA2REC empty;
  set OPJREC empty;
  set OPLREC empty;
  set SQLCA empty;

   /* if futures non-draw, checks the production cutoff date*/

  if (OB1REC.XOTCD in XOTTBL.XOTCD from sysVar.arrayIndex /* order type in table*/
   && XOTTBL.XOTFUTRF[sysVar.arrayIndex] == "Y"           /* futures*/
   && OB1REC.XGPCD == "03"                                /* apparel*/
   && OB0DW01.XBDRWOFL == "N")                            /* and not a draw*/
    OPJREC.XOTCD = OB1REC.XOTCD; /* order type code*/
    OPLREC.OPLSOP = "SF"; /* selection option*/
    OPLREC.OPJCNDTB = OB0DW01.OP1CUNDT; /* need date*/

    call "IO2560" (OPLREC, SQLCA, OPJREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0) /* record found*/

       /* new need date greater than prod cutof end need dt*/

      if (OB0DW01.OP1CUNDT > OPJREC.OPJCNDTX) /* need date*/
        converseLib.validationFailed(242); /* need date not in same season*/
        OBWREC.OBWERRFL = "Y";
        set OB0DM001.OB0DMNDT cursor, modified, bold;
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* not found*/
        converseLib.validationFailed(241); /* record not found; can't add*/
        OBWREC.OBWERRFL = "Y";
        set OB0DM001.OB0DMNDT cursor, modified, bold;
        return;
      else
        if (SQLCA.VAGen_SQLCODE != 0) /* any other sql*/
          TA1REC.TA1TYPE = "DB2";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "OB0D";
          TA1REC.TA1LOCAT[1] = "SF";
          TA1REC.TA1LOCAT[2] = "OB0DS-VCUTOF01";
          TA1REC.TA1LOCAT[3] = "IO2560 ";
          TA1REC.TA1LOCAT[4] = " ";
          TA1REC.TA1LOCAT[4] = "OB0DM001";
          TA1REC.TA1DBASE = "DORDER.";
          TA1REC.TA1TBLVU = "VCUTOF01";
          XSOPS02();
        end
      end
    end
  end

end // end OB0DS-VCUTOF01

// INITIALIZE OB0D APPLICATION
Function OB0DS10()
       /* ***************************************************/
       /* *  INITIALIZE OB0D APPLICATION.                  **/
       /* ***************************************************/

  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OB1REC empty;
  set OP1REC empty;
  set OB8REC empty;
  set KUCREC empty;
  set OBLEREC empty;
  set OBFEREC empty;
  set TAEREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set VSOHCR01 empty;
  set XX0XW01 empty;

  set OB0DM001 empty;
  set OB0DW01 empty;

  XX0XS01();
  OBWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OBWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;
  OB0DW01.OB0DWCD8 = XX0XW01.XX0XWDAT; /* save current date ccyymmdd*/
  OBWREC.OBWDT8 = OB0DW01.OB0DWCD8;
  XSOBDCM(); /* convert ccyymmdd to mmddyy*/
  OB0DW01.OB0DWCD6 = OBWREC.OBWDT6; /* save current date mmddyy*/

  TA1REC.TA1MAP = "OB0DM001"; /* map name*/
  COMMAREA.CAFROMAP = "OB0D";

   /* This is will initialize a workarea flag which indicates*/
   /* that the EXTEND DATE AUTHORIZED BY NAME on the map came*/
   /* from the OB1REC.  If the dont-ship-after-date is altered*/
   /* on the map, this AUTHORIZED BY field is required.  This*/
   /* flag will help OB0DS3B know when the AUTHORIZED BY field*/
   /* came from OB1REC or was replaced on the map. (Note that*/
   /* the new NAME could be the same as the one in OB1REC.  The*/
   /* important thing is it was RE-TYPED on the map when it was*/
   /* required.)*/

  OB0DW01.OB0DWOLD = "Y"; /* auth-by is old value from ob1rec*/


end // end OB0DS10

// BUILD OB0DM001 MAP
Function OB0DS20()

     /* move fields to map*/

  if (COMMAREA.CACURRAP == "OM0G")
    OB0DS-LDMAP-OBZREC();
    COMMAREA.CACURRAP = "OB0D";
  else
    OB0DS21();
  end

     /* get customer company record to get the account class*/

  OB0DSCU();


     /* reset field attributes*/

  OB0DS40();

end // end OB0DS20

// MOVE FIELDS TO MAP
Function OB0DS21()

  OB0DM001.OB0DMPRC = "OB0D010"; /* process name*/
  OB0DM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

  OB0DM001.OBWORDER = OBWREC.OBWORDER; /* formatted ord num*/
  OB0DM001.OBWCUST = OBWREC.OBWCUST; /* formatted cust*/
  OB0DM001.YOBCD = OB1REC.YOBCD; /* order status*/

  OB0DM001.OP1CUPO = OBWREC.OP1CUPO; /* purchase order number*/
  OB0DM001.KUMSTRNM = OBWREC.KUMSTRNM; /* customer name*/

  sysVar.arrayIndex = 1;
  if (OB1REC.XSOCD in XSOTBL.XSOCD) /* SALES OFFICE abbreviation*/
    OB0DM001.XSOABRV = XSOTBL.XSOABRV[sysVar.arrayIndex];
  else
    OB0DM001.XSOABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XOBCD in XOBTBL.XOBCD) /* BASE ORDER TYPE abbreviation*/
    OB0DM001.XOBABRV = XOBTBL.XOBABRV[sysVar.arrayIndex];
  else
    OB0DM001.XOBABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XGPCD in XGPTBL.XGPCD) /* GPC abbreviation*/
    OB0DM001.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    OB0DM001.XGPABRV = "UNKNWN";
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XDVCD in XDVTBL.XDVCD) /* DIVISION abbreviation*/
    OB0DM001.XDVABRV = XDVTBL.XDVABRV[sysVar.arrayIndex];
  else
    OB0DM001.XDVABRV = "UNKNWN";
  end

  OB0DM001.SP1ID = OB1REC.SP1ID; /* sales program id*/

  if (OB1REC.XOCCD == " ") /* ORDER CLASS abbreviation*/
    OB0DM001.XOCABRV = " ";
  else
    sysVar.arrayIndex = 1;
    if (OB1REC.XOCCD in XOCTBL.XOCCD)
      OB0DM001.XOCABRV = XOCTBL.XOCABRV[sysVar.arrayIndex];
    else
      OB0DM001.XOCABRV = "UNKNWN";
    end
  end

  OBWREC.OBWDT8 = OB1REC.OP1DSBDT; /* dont ship before date*/
  XSOBDCM();
  OB0DM001.OB0DMDSB = OBWREC.OBWDT6;

  OBWREC.OBWDT8 = OB1REC.OP1DSADT; /* dont ship after date*/
  XSOBDCM();
  OB0DM001.OB0DMDSA = OBWREC.OBWDT6;

  OBWREC.OBWDT8 = OB1REC.OP1CALDT; /* call out date*/
  XSOBDCM();
  OB0DM001.OB0DMCDT = OBWREC.OBWDT6;

  OBWREC.OBWDT8 = OB1REC.OP1ECADT; /* extended cancel date*/
  XSOBDCM();
  OB0DM001.OB0DMECD = OBWREC.OBWDT6;

  OB0DM001.OP1ECANM = OB1REC.OP1ECANM; /* authorized by*/

  OB0DM001.XBDCD = OB1REC.XBDCD; /* bulk/draw code*/

  sysVar.arrayIndex = 1;
  if (OB1REC.XBDCD in XBDTBL.XBDCD) /* BULK/DRAW CODE abbreviation*/
    OB0DM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
  else
    OB0DM001.XBDABRV = "UNKNWN";
  end

  OB0DM001.OP1BLKID = OB1REC.OP1BLKID; /* bulk ord id*/

  OB0DM001.OP1BOFL = OB1REC.OP1BOFL; /* backorder flag*/

  OBWREC.OBWDT8 = OB1REC.OP1ORCDT; /* received date*/
  XSOBDCM();
  OB0DM001.OP1ORCDT = OBWREC.OBWDT6;

  OB0DM001.OP1OTUNT = OB1REC.OP1OTUNT; /* order total units*/
  OB0DM001.OP1OVALU = OB1REC.OP1OVALU; /* order total value*/


  OB0DM001.ZFC-CRCY-CD = OB1REC.ZFC-CRCY-CD; /* CANA currency code*/

  OB0DM001.OB0DM-PO-MONEY-MON = OB1REC.OP1WIPIN;

   /* convert need date*/
  OBWREC.OBWDT8 = OB1REC.OP1CUNDT;
  XSOBDCM();
  OB0DM001.OB0DMNDT = OBWREC.OBWDT6;

  OB0DM001.XWHCD = OB1REC.XWHCD; /* warehouse code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XWHCD in XWHTBL.XWHCD) /* WAREHOUSE abbreviation*/
    OB0DM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
  else
    OB0DM001.XWHABRV = "UNKNWN";
  end

  if (OB1REC.OP1OWHMF == "Y") /* RESTRICTED WAREHOUSE literal*/
    OB0DM001.OB0DMRWH = "R-WHSE";
  else
    OB0DM001.OB0DMRWH = " ";
  end

  OB0DM001.XDSCD = OB1REC.XDSCD; /* direct ship code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XDSCD in XDSTBL.XDSCD) /* DIRECT SHIP abbreviation*/
    OB0DM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex];
  else
    OB0DM001.XDSABRV = "UNKNWN";
  end

  OB0DW01.OB0DWDPC = OB1REC.OP-DIRSHP-DSCT-PCT; /* direct ship pct*/
  OB0DM001.OB0DMDPC = OB0DW01.OB0DWDPC; /* direct ship pct*/
  if (OB0DM001.XDSCD == " "
   && OB0DM001.OB0DMDPC == "0")
    OB0DM001.OB0DMDPC = " ";
  end

  OB0DM001.XPTCD = OB1REC.XPTCD; /* payment term code*/
  sysVar.arrayIndex = 1;
  if (OB1REC.XPTCD in XPTTBL.XPTCD) /* PAYMENT TERM DESCRIPTION*/
    OB0DM001.XPTDESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
  else
    OB0DM001.XPTDESC = "UNKNWN";
  end

  OB0DM001.XDAPCT = OB1REC.XDAPCT; /* def alw pcnt*/
  OB0DM001.XTDPCT = OB1REC.XTDPCT; /* trade discount pcnt*/
  OB0DM001.OP1TDFCP = OB1REC.OP1TDFCP; /* trd dsct face pcnt*/
  OB0DM001.OP1TDBKP = OB1REC.OP1TDBKP; /* trd dsct bank pcnt*/

  OB0DM001.XAAPCT = OB1REC.XAAPCT; /* ad alw pcnt dsct*/
  OB0DM001.OP1AAFCP = OB1REC.OP1AAFCP; /* ad alw face pcnt*/
  OB0DM001.OP1AABKP = OB1REC.OP1AABKP; /* ad alw bank pcnt*/
  OB0DM001.XCPPCT = OB1REC.XCPPCT; /* coop code pcnt*/

  OB0DM001.XOACD = " "; /* override authorization code*/
  OB0DM001.OB1CPTCD = OB1REC.OB1CPTCD; /* customer payment terms*/

                     /* BUILD TERM OVERRIDE FLAGS AND DESCRIPTION*/

  if (OB1REC.OP1PTOF == "Y") /* PAYMENT TERM OVRD FLAG*/
    OB0DM001.OP1PTOF = "*";
  else
    OB0DM001.OP1PTOF = " ";
  end

  if (OB1REC.OP1DFAOF == "Y") /* DEF ALW OVRD FLAG*/
    OB0DM001.OP1DFAOF = "*";
  else
    OB0DM001.OP1DFAOF = " ";
  end

  if (OB1REC.OP1TDOF == "Y") /* TRADE DISCOUNT OVRD FL*/
    OB0DM001.OP1TDOF = "*";
  else
    OB0DM001.OP1TDOF = " ";
  end

  if (OB1REC.OP1AAOF == "Y") /* AD ALW OVRD FLAG*/
    OB0DM001.OP1AAOF = "*";
  else
    OB0DM001.OP1AAOF = " ";
  end

  if (OB1REC.OP1COPOF == "Y") /* COOP CODE OVRD FLAG*/
    OB0DM001.OP1COPOF = "*";
  else
    OB0DM001.OP1COPOF = " ";
  end

end // end OB0DS21

// EDIT OB0DM001 MAP
Function OB0DS30()

                         /* EDIT OB0DM001 map fields*/

  if (OB1REC.SP1ID != " "  /* sales program present or*/
   || KUCREC.XAUCD == "26" /* salesman orders or samples,*/
   || KUCREC.XAUCD == "27" /* then terms cannot be changed*/
   || KUCREC.XAUCD == "64")
  else
    OB0DS31(); /* edit override authority code*/
    OB0DS32(); /* edit ad alw face & bank pct*/
    OB0DS33(); /* edit ad alw pct*/
    OB0DS34(); /* edit trd dsct face & bank pct*/
    OB0DS35(); /* edit trd dsct pct*/
    OB0DS36(); /* edit def alw pct*/
    OB0DS37(); /* edit payment terms cd*/
  end

  OB0DS39(); /* edit direct ship code & pct*/
  OB0DS3A(); /* edit warehouse code*/
  OB0DS-NEEDDATE(); /* edit need date*/
  OB0DS-MONEY-MONTH(); /* EDIT PO MONEY MONTH*/
  OB0DS3G(); /* edit callout date*/
  OB0DS38(); /* edit backorder flag*/
  OB0DS3C(); /* edit dont ship after date*/
  OB0DS-EDIT-BULK-ID(); /* edit bulk order id*/
  OB0DS3E(); /* edit dont ship before date*/
  OB0DS3F(); /* edit bulk code*/
  OB0DS-EDIT-XOMCD(); /* edit change rsn code*/

    /* This routine will be done only if there were no*/
    /* previous errors.*/

  if (OBWREC.OBWERRFL == "N")
    OB0DS3B(); /* edit extended by name*/
  end

end // end OB0DS30

// EDIT OVRD AUTH CODE
Function OB0DS31()

    /* EDIT XOACD*/

  if (OB1REC.XAAPCT != OB0DM001.XAAPCT /* if any of the terms*/
   || OB1REC.XTDPCT != OB0DM001.XTDPCT /* changed, excluding*/
   || OB1REC.XDAPCT != OB0DM001.XDAPCT /* the face and banked*/
   || OB1REC.XPTCD != OB0DM001.XPTCD)  /* percents*/
    if (OB0DM001.XOACD == " ")
      set OB0DM001.XOACD cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(064); /* override auth is required*/
    else
      if (OB0DM001.XOACD in XOATBL.XOACD)
        if (OB0DW01.OB0DWCD8 >= XOATBL.XOABEGDT[sysVar.arrayIndex] /* chk against*/
         && OB0DW01.OB0DWCD8 <= XOATBL.XOAENDDT[sysVar.arrayIndex]) /* curr date*/
          OB0DW01.OP1OSRID = XOATBL.KUYSVRID[sysVar.arrayIndex];
        else
          set OB0DM001.XOACD cursor, bold;
          OBWREC.OBWERRFL = "Y";
          converseLib.validationFailed(119); /* ovrd auth code has expired*/
        end
      else
        set OB0DM001.XOACD cursor, bold;
        OBWREC.OBWERRFL = "Y";
        converseLib.validationFailed(118); /* ovrd auth code is not valid*/
      end
    end
  else
    OB0DW01.OP1OSRID = 0;
    OB0DM001.XOACD = " ";
  end
end // end OB0DS31

// EDIT AD ALW FACE & BANK PCT
Function OB0DS32()

    /* EDIT AD ALLOWANCE FACE and BANK percents*/

  OB0DW01.OB0DWPCT = OB0DM001.OP1AABKP + OB0DM001.OP1AAFCP;
  if (OB0DW01.OB0DWPCT != OB0DM001.XAAPCT)
    set OB0DM001.OP1AABKP bold;
    set OB0DM001.OP1AAFCP cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(065); /* ad alw face/bank pcnts must equal ad alw pct*/
  end
end // end OB0DS32

// EDIT AD ALW PCT
Function OB0DS33()

    /* EDIT AD ALLOWANCE percent*/

  if (OB0DM001.XAAPCT != 0)
    sysVar.arrayIndex = 1;
    if (OB0DM001.XAAPCT in XAATBL.XAAPCT
     && XAATBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* next sentence*/
    else
      set OB0DM001.XAAPCT cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(066); /* ad alw pct is not valid*/
    end
  end
end // end OB0DS33

// EDIT TRD DSCT FACE & BANK PCT
Function OB0DS34()

    /* EDIT TRADE DISCOUNT FACE and BANK percents*/

  OB0DW01.OB0DWPCT = OB0DM001.OP1TDBKP + OB0DM001.OP1TDFCP;
  if (OB0DW01.OB0DWPCT != OB0DM001.XTDPCT)
    set OB0DM001.OP1TDBKP bold;
    set OB0DM001.OP1TDFCP cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(067); /* trd dsct face/bank pcnts must eq trd dsct pct*/
  end
end // end OB0DS34

// EDIT TRD DSCT PCT
Function OB0DS35()

    /* EDIT TRADE DISCOUNT percent*/

  if (OB0DM001.XTDPCT != 0)
    sysVar.arrayIndex = 1;
    if (OB0DM001.XTDPCT in XTDTBL.XTDPCT
     && XTDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* next sentence*/
    else
      set OB0DM001.XTDPCT cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(068); /* trd dsct pct is not valid*/
    end
  end
end // end OB0DS35

// EDIT DEF ALW PCT
Function OB0DS36()

    /* EDIT DEFECTIVE ALLOWANCE percent*/

  if (OB0DM001.XDAPCT != 0)
    sysVar.arrayIndex = 1;
    if (OB0DM001.XDAPCT in XDATBL.XDAPCT
     && XDATBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* next sentence*/
    else
      set OB0DM001.XDAPCT cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(069); /* def alw pct is not valid*/
    end
  end
end // end OB0DS36

// EDIT PAYMENT TERMS CD
Function OB0DS37()

    /* EDIT PAYMENT TERMS code*/

  sysVar.arrayIndex = 1;
  if (OB0DM001.XPTCD in XPTTBL.XPTCD
   && XPTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OB0DM001.XPTDESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
  else
    if (OB0DM001.XPTCD == " ")
       /* ok the batch edit will determine the error mgg to use*/
    else
      OB0DM001.XPTDESC = "UNKNOWN";
      set OB0DM001.XPTCD cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(070); /* payment term is invalid or inactive*/
    end
  end
end // end OB0DS37

// EDIT BACKORDER FLAG
Function OB0DS38()

    /* EDIT BACKORDER flag*/

  if (OB0DM001.OP1BOFL == "Y"
   || OB0DM001.OP1BOFL == "N")
  else
    set OB0DM001.OP1BOFL cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(018); /* correct response is Y or N*/
  end
end // end OB0DS38

// EDIT DIRECT SHIP CODE
Function OB0DS39()
    /* EDIT DIRECT SHIP code and percentage*/

  if (OB0DM001.OB0DMDPC >= "0") /* direct ship discount percentage*/
  /* next sentence*/
  else
    if (OB0DM001.OB0DMDPC == " ")
  /* next sentence*/
    else
      set OB0DM001.OB0DMDPC cursor, bold;
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(163); /**/
      return;
    end
  end


  OB0DW01.OB0DWDPC = OB0DM001.OB0DMDPC;

  if (OB0DM001.XDSCD in XDSTBL.XDSCD
   && XDSTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* direct ship code is valid*/
    OB0DM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex];
  else
    OB0DM001.XDSABRV = "UNKNWN";
    set OB0DM001.XDSCD cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(071); /* direct ship code is invalid or*/
    return;
  end



  if (OB0DM001.XDSCD != " ") /* changing from space to value*/
    if (OB0DM001.OB0DMDPC == " ") /* has percent been entered?*/
      if (OB1REC.XOTCD == "01" /* ftwr fut 1*/
       || OB1REC.XOTCD == "02" /* ftwr fut 2*/
       || OB1REC.XOTCD == "84") /* national accts ftwr fut 1*/
        OB0DW01.OB0DWDPC = 1; /* if special override percents*/
      else
        OB0DW01.OB0DWDPC = XDSTBL.XDSPCT[sysVar.arrayIndex]; /* no, use default*/
      end
    else
      OB0DS3X(); /* yes,edit and use entered percent*/
      if (OBWREC.OBWERRFL == "Y")
        return;
      end
    end
  else /* order is not a direct ship*/
    OB0DM001.OB0DMDPC = " "; /* blank out screen*/
    OB0DW01.OB0DWDPC = 0; /* but move zero to database*/
  end



  if (OB0DM001.XDSCD == " " /* changing from value to space*/
   && OB1REC.XDSCD == " ")  /* changing from value to space*/
    if (OB0DM001.OB0DMDPC > "0") /* and value in percent*/
      set OB0DM001.OB0DMDPC cursor, bold;
      converseLib.validationFailed(168);
      OBWREC.OBWERRFL = "Y";
      return;
    end
  end


end // end OB0DS39

// EDIT WAREHOUSE CODE
Function OB0DS3A()

    /* EDIT WAREHOUSE code*/

  if (OB1REC.OP1OWHMF == "Y" /* one warehouse model (field askiped)*/
   || OB1REC.XDVCD == "02")  /* or NIL order (field is autoskip)*/
    return; /* no reason to edit*/
  end

  if (OB0DM001.XWHCD == " ") /* no warehouse entered*/
    OB0DM001.XWHABRV = " "; /* no reson to edit*/
    return;
  end

  sysVar.arrayIndex = 1;
  if (OB0DM001.XWHCD in XWHTBL.XWHCD
   && XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OB0DM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
  else
    OB0DM001.XWHABRV = "UNKNWN";
    set OB0DM001.XWHCD cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(057); /* warehouse is invalid or inactive*/
  end
end // end OB0DS3A

// EDIT EXTENDED BY NAME
Function OB0DS3B()

    /* EDIT EXTENDED BY NAME*/

   /* if dsadt will be changed for the first time*/
   /* from 0,  don't require and extend-by-date*/

  if (OB1REC.OP1DSADT == 0 /* dont ship after date*/
   && OB1REC.OP1ECADT == 0) /* extend cancel date*/
    return;
  end

  OBWREC.OBWDT8 = OB1REC.OP1DSADT;
  XSOBDCM(); /* convert dsadt into mmddyy format*/
  if (OBWREC.OBWDT6 == OB0DM001.OB0DMDSA)
    return;
                                   /* dsadt did not change, skip name edit*/
  end

   /* After this point, it has been determined that dsadt*/
   /* changed from a valid date (non-zero value) to a new*/
   /* date value.  This means an Extended-by name is*/
   /* required.*/



  if (OB0DW01.OB0DWOLD == "Y") /* Ext-by-name came from ob1rec, so*/
    OB0DM001.OP1ECANM = " ";
                                   /* init map value to prompt for new name*/
    OB0DW01.OB0DWOLD = "N"; /* Disable flag first time thru flag*/
  end

  if (OB0DM001.OP1ECANM == " ") /* required ext-by-name is empty*/
    set OB0DM001.OP1ECANM cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(072); /* enter name of person auth'g dsadt ext'n*/
  else /* required ext-by-name is filled*/
    OB0DM001.OB0DMECD = OB0DW01.OB0DWCD6; /* curr dt to ext-cncl-dt*/
  end
end // end OB0DS3B

// EDIT DONT SHIP AFTER DATE
Function OB0DS3C()

    /* EDIT DONT SHIP AFTER DATE*/

  OB0DW01.OB0DWDSA = 99999999;
                                   /* init save-dsadt for rel test w/ dsbdt*/

  if (OB0DM001.OB0DMDSA == 0) /* dsadt is not present*/
    return;
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMDSA;
  XSOBDED(); /* convert mmddyy to ccyymmdd w/ edit*/
  if (TA2REC.TA2RTNCD != 0) /* invalid date*/
    set OB0DM001.OB0DMDSA cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(073); /* dsadt is not a valid date*/
    return;
  end

   /* save valid format of dsadt to work area for rel test*/
   /* w/ dsbdt*/
  OB0DW01.OB0DWDSA = TA2REC.TA2GRGGN;

  if (TA2REC.TA2GRGGN < OB1REC.ZZZSDT)
                                   /* Dsadt is before the setup date*/
    set OB0DM001.OB0DMDSA cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* Set error flag*/
    converseLib.validationFailed(127); /* dsadt must not be before entered dt*/
    return;
  end
end // end OB0DS3C

// EDIT DONT SHIP BEFORE DATE
Function OB0DS3E()

    /* EDIT DONT SHIP BEFORE DATE*/

  if ((OB0DM001.OB0DMDSB == 0 /* zero value on the map*/
   || OB0DM001.OB0DMDSB == "MMDDYY")
   && OB0DM001.XWHCD == "51") /* whse 51*/
    set OB0DM001.OB0DMDSB cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(249); /* dsbdt required for whse 51*/
    return;
  end

  if (OB0DM001.OB0DMDSB == 0) /* zero value on the map*/
    return;
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMDSB;
  XSOBDED(); /* convert date yymmdd to ccyymmdd w/*/
                                   /* edit*/
  if (TA2REC.TA2RTNCD != 0) /* invalid date*/
    set OB0DM001.OB0DMDSB cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(076); /* dsbdt is not a valid date*/
    return;
  end

  if (TA2REC.TA2GRGGN >= OB0DW01.OB0DWDSA) /* dsadt is not after dsbdt*/
    set OB0DM001.OB0DMDSB cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(078); /* dsbdt must be before dsadt*/
    return;
  end

  if (TA2REC.TA2DYWK == "SATURDAY" /* dsbdt falls on a saturday*/
   || TA2REC.TA2DYWK == "SUNDAY")  /* dsbdt falls on a sunday*/
    set OB0DM001.OB0DMDSB cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(077); /* dsbdt falls on a weekend*/
  end
end // end OB0DS3E

// EDIT BULK DRAW CODE
Function OB0DS3F()

    /* EDIT BULK/DRAW code*/

  sysVar.arrayIndex = 1; /* get bulk draw description*/
  if (OB0DM001.XBDCD in XBDTBL.XBDCD /* if found, move abrv to map*/
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OB0DM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
  else
    OB0DM001.XBDABRV = "UNKNWN"; /* if not found, then it is*/
    set OB0DM001.XBDCD cursor, bold; /* invalid and mark it as an*/
    OBWREC.OBWERRFL = "Y"; /* error*/
    converseLib.validationFailed(079); /* bulk/draw order code is not valid*/
    return;
  end


end // end OB0DS3F

// EDIT CALLOUT DATE
Function OB0DS3G()

    /* EDIT CALLOUT DATE*/

  if (OB0DM001.OB0DMCDT == 0) /* callout date is not present*/
    return;
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMCDT;
  XSOBDED(); /* convert mmddyy to ccyymmdd w/ edit*/
  if (TA2REC.TA2RTNCD != 0) /* date is invalid*/
    set OB0DM001.OB0DMCDT cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(080); /* callout date is not a valid date*/
    return;
  end

  if (TA2REC.TA2GRGGN <= OB0DW01.OB0DWCD8) /* call dt is not > today*/
    set OB0DM001.OB0DMCDT cursor, bold;
    OBWREC.OBWERRFL = "Y"; /* set error flag*/
    converseLib.validationFailed(081); /* callout date must be after today*/
  end
end // end OB0DS3G

// EDIT DIRECT SHIP CODE percent
Function OB0DS3X()

    /* EDIT DIRECT SHIP PERCENT*/

  if (OB0DM001.OB0DMDPC >= "0"
   && OB0DW01.OB0DWDPC <= XDSTBL.XDS-MAX-DIRSHP-PCT[sysVar.arrayIndex]
  ) /* next sentence*/
  else
    set OB0DM001.OB0DMDPC cursor, bold;
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(163); /**/
  end

end // end OB0DS3X

// RESET ATTRIBUTES
Function OB0DS40()

  if (OB1REC.YOBCD == "XL" /* cancelled order*/
   || OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* cleared availability*/
   || OB1REC.YOBCD == "PD") /* cleared availability*/
    OB0DS41(); /* set fields autoskip*/
  else
    OB0DS42(); /* set fields defined*/
  end

end // end OB0DS40

// SET FIELDS AUTOSKIP
Function OB0DS41()

    /* SET FIELDS AUTOSKIP*/

  set OB0DM001.XBDCD skip;
  set OB0DM001.OB0DMDSB skip;
  set OB0DM001.OB0DMDSA skip;
  set OB0DM001.OB0DMCDT skip;
  set OB0DM001.OB0DMECD skip;
  set OB0DM001.OP1ECANM skip;

  set OB0DM001.OP1BLKID skip;

  if (OB1REC.XBDCD == "5") /* draw order*/
    set OB0DM001.OP1BLKID skip; /* bulk ord id*/
  else
    set OB0DM001.OP1BLKID skip, invisible; /* bulk order id*/
  end

  set OB0DM001.OB0DMNDT skip;
  set OB0DM001.XWHCD skip;
  set OB0DM001.XDSCD skip;
  set OB0DM001.OB0DMDPC skip;
  set OB0DM001.OP1BOFL skip;
  set OB0DM001.OB0DM-PO-MONEY-MON skip;
  set OB0DM001.XOMCD skip;
  set OB0DM001.SOCD-HDR-RSN-TXT skip;

  OB0DS43(); /* set terms autoskip*/

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD" /* postponed demand reported*/
   || OB1REC.YOBCD == "XL") /* cancelled*/
    if (OB0DM001.CAMSG == " ")
      OB0DM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end

end // end OB0DS41

// SET FIELDS DEFINED
Function OB0DS42()

    /* SET FIELDS DEFINED*/

  set OB0DM001.OB0DMCDT initialAttributes;
  set OB0DM001.OB0DMDSB initialAttributes;
  set OB0DM001.OB0DMDSA initialAttributes;
  set OB0DM001.OP1ECANM initialAttributes;

  set OB0DM001.OB0DMNDT initialAttributes;
  set OB0DM001.XDSCD initialAttributes;
  set OB0DM001.OB0DMDPC initialAttributes;
  set OB0DM001.OP1BOFL initialAttributes;
  set OB0DM001.XBDCD initialAttributes;
  set OB0DM001.XOMCD initialAttributes;
  set OB0DM001.SOCD-HDR-RSN-TXT initialAttributes;


  if (KUCREC.KUCGRPID == 217710) /* KINNEY ACCOUNT*/
    set OB0DM001.OB0DM-PO-MONEY-MON initialAttributes;
  else
    set OB0DM001.OB0DM-PO-MONEY-MON skip;
  end

  sysVar.arrayIndex = 1;
  if (OB1REC.XBDCD in XBDTBL.XBDCD) /* originally a bulk order or*/
    if (XBDTBL.XBDRWOFL[sysVar.arrayIndex] == "Y") /* order is a draw*/
      set OB0DM001.OP1BLKID initialAttributes; /* bulk order id needed*/
    else
      set OB0DM001.OP1BLKID skip; /* bulk order id not needed*/
    end
  else
    set OB0DM001.OP1BLKID initialAttributes; /* bulk order id may be needed*/
  end

  if (OB1REC.OP1OWHMF == "Y") /* one warehouse model*/
    set OB0DM001.XWHCD skip;
  else
    set OB0DM001.XWHCD initialAttributes;
  end

  if (OB1REC.SP1ID != " "  /* order has a sales program or a*/
   || KUCREC.XAUCD == "26" 
   /* salesman order or salesman sample,*/
   || KUCREC.XAUCD == "27" /* cannot change terms of the order*/
   || KUCREC.XAUCD == "64")
    OB0DS43(); /* set term fields protected*/
  else
    OB0DS44(); /* set term fields defined*/
  end


end // end OB0DS42

// SET TERMS AUTOSKIP
Function OB0DS43()

    /* set terms fields protect (autoskip)*/

  set OB0DM001.OB0DMDPC skip;
  set OB0DM001.XPTCD skip;
  set OB0DM001.XDAPCT skip;
  set OB0DM001.XTDPCT skip;
  set OB0DM001.OP1TDFCP skip;
  set OB0DM001.OP1TDBKP skip;
  set OB0DM001.XAAPCT skip;
  set OB0DM001.OP1AAFCP skip;
  set OB0DM001.OP1AABKP skip;
  set OB0DM001.XOACD skip;
end // end OB0DS43

// SET TERMS DEFINED
Function OB0DS44()

    /* SET TERM FIELDS DEFINED*/

  set OB0DM001.XPTCD initialAttributes;
  set OB0DM001.XDAPCT initialAttributes;
  set OB0DM001.XTDPCT initialAttributes;
  set OB0DM001.OP1TDFCP initialAttributes;
  set OB0DM001.OP1TDBKP initialAttributes;
  set OB0DM001.XAAPCT initialAttributes;
  set OB0DM001.OP1AAFCP initialAttributes;
  set OB0DM001.OP1AABKP initialAttributes;
  set OB0DM001.XOACD initialAttributes;

end // end OB0DS44

// UPDATE
Function OB0DS50()

    /* Update order header when something has changed*/
    /* and determine the edit function (full edit or header edit).*/

  OB0DW01.OB0DWUPD = "N";
  OBWREC.OBW-EDIT-FUNCTION = " ";
  OB0DW01.OB0DW-UPD-ND-FL = "N";
  OB0DW01.OB0DW-UPD-SA-FL = "N";
  OB0DW01.OB0DW-UPD-SB-FL = "N";

  OBWREC.OBWDT6 = OB0DM001.OB0DMCDT; /* call date*/
  XSOBDMC(); /* convert mmddyy to ccyymmdd*/
  if (OBWREC.OBWDT8 != OB1REC.OP1CALDT)
    OB1REC.OP1CALDT = OBWREC.OBWDT8;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.OP1BLKID != OB1REC.OP1BLKID) /* bulk order id*/
    OB1REC.OP1BLKID = OB0DM001.OP1BLKID;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMDSB; /* dont ship before date*/
  XSOBDMC(); /* convert mmddyy to ccyymmdd*/
  if (OBWREC.OBWDT8 != OB1REC.OP1DSBDT)
    OB1REC.OP1DSBDT = OBWREC.OBWDT8;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
    OB0DW01.OB0DW-UPD-SB-FL = "Y";
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMDSA; /* dont ship after date*/
  XSOBDMC(); /* convert mmddyy to ccyymmdd*/
  if (OBWREC.OBWDT8 != OB1REC.OP1DSADT)
    OB1REC.OP1DSADT = OBWREC.OBWDT8;
    if (OB0DM001.OP1ECANM != " ") /* ext-by-name has a value*/
      OB1REC.OP1ECANM = OB0DM001.OP1ECANM;
      OB1REC.OP1ECADT = OB0DW01.OB0DWCD8; /* move curr dt to cncl dt*/
    end
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
    OB0DW01.OB0DW-UPD-SA-FL = "Y";
  end

  if (OB0DM001.OB0DM-PO-MONEY-MON != OB1REC.OP1WIPIN) /* PO MONEY MONTH*/
    OB1REC.OP1WIPIN = OB0DM001.OB0DM-PO-MONEY-MON;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  OBWREC.OBWDT6 = OB0DM001.OB0DMNDT; /* need date*/
  XSOBDMC();
  if (OBWREC.OBWDT8 != OB1REC.OP1CUNDT /* if nddt modified for a cust draw*/
   && OB0DM001.XBDCD == 5)             /* default the bulk ord id on the*/
    OB0DM001.OP1BLKID = 0;
    OB1REC.OP1BLKID = 0; /* draw to 0. trying to get assign*/
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end /* bulk ord id to the draw*/
  if (OBWREC.OBWDT8 != OB1REC.OP1CUNDT)
    OB1REC.OP1CUNDT = OBWREC.OBWDT8;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
    OB0DW01.OB0DW-UPD-ND-FL = "Y";
  end

  if (OB0DM001.XWHCD != OB1REC.XWHCD) /* warehouse code*/
    OB0DS-CHK-PREPACK(); /* updt prepk if exists*/
    OB1REC.XWHCD = OB0DM001.XWHCD;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XDSCD != OB1REC.XDSCD) /* direct ship code*/
    OB1REC.XDSCD = OB0DM001.XDSCD;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  OB0DW01.OB0DWDP2 = OB0DW01.OB0DWDPC;
  if (OB0DW01.OB0DWDP2 != OB1REC.OP-DIRSHP-DSCT-PCT) /* direct ship pct*/
    OB1REC.OP-DIRSHP-DSCT-PCT = OB0DW01.OB0DWDP2;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.OP1BOFL != OB1REC.OP1BOFL) /* back order flag*/
    OB1REC.OP1BOFL = OB0DM001.OP1BOFL;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XPTCD != OB1REC.XPTCD) /* payment terms code*/
    OB1REC.OP1PTOF = "Y"; /* payment terms  ovrd fl*/
    OB1REC.XPTCD = OB0DM001.XPTCD;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XDAPCT != OB1REC.XDAPCT) /* defective allowance percent*/
    OB1REC.OP1DFAOF = "Y"; /* def alw pcnt ovrd fl*/
    OB1REC.XDAPCT = OB0DM001.XDAPCT;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XTDPCT != OB1REC.XTDPCT) /* trade discount percent*/
    OB1REC.OP1TDOF = "Y"; /* trade discount pcnt ovrd fl*/
    OB1REC.XTDPCT = OB0DM001.XTDPCT;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.OP1TDFCP != OB1REC.OP1TDFCP) /* trade discount face percent*/
    OB1REC.OP1TDFCP = OB0DM001.OP1TDFCP;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.OP1TDBKP != OB1REC.OP1TDBKP) /* trade discount bank percent*/
    OB1REC.OP1TDBKP = OB0DM001.OP1TDBKP;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XAAPCT != OB1REC.XAAPCT) /* ad allow percent*/
    OB1REC.OP1AAOF = "Y"; /* ad allow pcnt ovrd fl*/
    OB1REC.XAAPCT = OB0DM001.XAAPCT;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.OP1AAFCP != OB1REC.OP1AAFCP) /* ad allow face percent*/
    OB1REC.OP1AAFCP = OB0DM001.OP1AAFCP;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.OP1AABKP != OB1REC.OP1AABKP) /* ad allow bank percent*/
    OB1REC.OP1AABKP = OB0DM001.OP1AABKP;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XOACD != " ") /* authorization code present on map*/
    OB1REC.OP1ORADT = OB0DW01.OB0DWCD8;
    OB1REC.OP1OSRID = OB0DW01.OP1OSRID;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2";
  end

  if (OB0DM001.XBDCD != OB1REC.XBDCD) /* bulk/draw code*/
    OB1REC.XBDCD = OB0DM001.XBDCD;
    OB0DW01.OB0DWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "1";
  end


  if (OB0DW01.OB0DWUPD == "Y") /* some fields changed*/
    OB1REC.YOBCD = "NC"; /* chg to status so order will edit*/
    OB0DS51(); /* update header (ob1rec)*/
    if (OB0DW01.OB0DW-UPD-SA-FL == "Y") /* if any ocd tracked fields change*/
      OB0DS-ADD-VSOHCR01();
      OB0DW01.OB0DW-UPD-SA-FL = "N";
    end
    if (OB0DW01.OB0DW-UPD-SB-FL == "Y")
      OB0DS-ADD-VSOHCR01();
      OB0DW01.OB0DW-UPD-SB-FL = "N";
    end
    if (OB0DW01.OB0DW-UPD-ND-FL == "Y")
      OB0DS-ADD-VSOHCR01(); /* add a vsohcr01 record*/
      OB0DW01.OB0DW-UPD-ND-FL = "N";
    end
    OB0DS52(); /* update temp storage*/
    XSOBT2C(); /* update temp storage for errors*/
  end


end // end OB0DS50

// UPDATE HEADER (OB1REC)
Function OB0DS51()

    /* Update OB order header (OB1REC)*/

  set OBFREC empty;
  set SQLCA empty;
  set VBULKS02 empty;
  OBFREC.OBFTASK = "U ";
  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)

    /* ******TCS INCLUDE BEGIN**************/

    VBULKS02.OP1PARTN = OB1REC.OP1PARTN;
    VBULKS02.OP1CUOID = OB1REC.OP1CUOID;
    VBULKS02.OP1NORID = OB1REC.OP1NORID;
    OB0DS-CHECK-VBULK();

    /* *****TCS INCLUDE END*****************/

    OB0DS55(); /* Update the bulk nike ord id on all*/
                                  /* the draw items*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OBWREC.CAMSG = "ORDER HAS BEEN MODIFIED BY ANOTHER SERVICE REP";
      XSOBP00();
    else
      TA1REC.TA1LOCAT[1] = "U      ";
      TA1REC.TA1LOCAT[2] = "IO5160 ";
      TA1REC.TA1LOCAT[3] = "OB0DS51";
      TA1REC.TA1LOCAT[4] = "       ";
      TA1REC.TA1DBASE = "DORDB  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBHDR01"; /* data base view*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end


end // end OB0DS51

// UPDATE TEMP STORAGE
Function OB0DS52()

    /* UPDATE TEMP STORAGE*/

   /* Read Temp Storage*/

  XSOBT1R();

   /* Update Temp Storage*/

  OBAREC.OBAMSEL[OBWTSF1S] = "U";

  XSOBT1U();

end // end OB0DS52

// Update VBITEM
Function OB0DS55()

   /* Update VBITEM*/

  set OB2REC empty;
  set SQLCA empty;

  if (OB0DM001.OP1BLKID is modified
   && OB0DM001.OP1BLKID != 0
   && OB0DM001.XBDCD == 5)
  /* AND OB0DM001.OB0DMNDT NOT MODIFIED;*/
    OB2REC.OPRBNOID = 0;
  else
    if (OB0DM001.OB0DMNDT is modified
     && OB0DM001.OP1BLKID == 0
     && OB0DM001.XBDCD == 5)
      OB2REC.OPRBNOID = 9999;
    end
  end

  OB2REC.OP1PARTN = OB1REC.OP1PARTN;
  OB2REC.OP1CUOID = OB1REC.OP1CUOID;
  OB2REC.OP1NORID = OB1REC.OP1NORID;

  /* Updt bulk nike ord id on all itms on draw*/
  call "OB1270" ("U2", SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 /* good return*/
   || SQLCA.VAGen_SQLCODE == +100) /* item not found*/
       /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0DS55 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = "        "; /* spaces*/
    if (SQLCA.VAGen_SQLCODE == -911) /* -911*/
      XSOBS05(); /* 911 - rollback*/
    else
      XSOBEDR(); /* retn - rollback*/
    end
  end

end // end OB0DS55

// GET COMPANY RECORD FOR XAUCD
Function OB0DSCU()

    /* get company record to determine the account class*/
    /* this will be used to determine if the terms could*/
    /* be changed because sales man orders and samples*/
    /* cannot change terms.*/

  set KUCREC empty;
  set SQLCA empty;
  KUCREC.KUCCOID = OB1REC.KUCCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod for inquiry*/

  if (SQLCA.VAGen_SQLCODE == 0)
  else
    if (SQLCA.VAGen_SQLCODE == +100)
       /* kucrec will still be empty and xaucd will be blanks*/
    else
      TA1LOCAT[1] = "S ";
      TA1LOCAT[2] = "IO0240";
      TA1LOCAT[3] = "OB0DSCU";
      TA1LOCAT[4] = " ";
      TA1DBASE = "DCUST";
      TA1TBLVU = "VCMPNY01";
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end
end // end OB0DSCU

// Edit pfkeys for OB0D
Function OB0DSPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    OB0DS-SAVE-MAP();
    XSOBP01();
    OB0DM001.CAMSG = OBWREC.OBWHELP; /* to display msg again*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf6)
    XSOBP06();
  end

  if (converseVar.eventKey is pf9)
    XSOBP09();
  end

  if (converseVar.eventKey is pf12)
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* HEADER EDIT*/
    XSOBS-ONLINE-EDIT();
  end

  if (converseVar.eventKey is pf14)
    XSOBP14();
  end

  if (converseVar.eventKey is pf15)
    XSOBP15();
  end

  if (converseVar.eventKey is pf16)
    XSOBP16();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf18)
    XSOBP18();
  end

  if (converseVar.eventKey is pf19)
    XSOBP19();
  end

  if (converseVar.eventKey is pf21)
    XSOBP21();
  end

  if (converseVar.eventKey is pf24)
    set OB0DM001.SOCD-HDR-RSN-TXT initialAttributes;
    if (OB1REC.YOBCD == "CA" /* cleared availability*/
     || OB1REC.YOBCD == "CL") /* cleared edit*/
      converseLib.validationFailed(164); /* order status doesn't allow changes*/
      OBWREC.OBWERRFL = "Y";
    else
      OB0DS-EDIT-CHG-RSN();
      if (OBWREC.OBWERRFL != "Y")
        OBWREC.OBWXLIND = "H"; /* format cancel indicator*/
        XSOBP24();
        XSOB-UPD-VOCHDR01();
  /* IF VOCHDR01.SOCD-ORD-DELT-FL = 'Y';*/
        OB0DS-ADD-VSOHCR01();
  /* END;*/
        XSOBP00();
      end
    end
  end



  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf24)
     /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end


  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    if (OB0DW01.OB0DWUPD == "Y")
      XSOBP00();
    else
      XSOBP09();
    end
  end


end // end OB0DSPF

//*** RECORD=OB0DW01 ****
// OB0D record workarea
// ***********************
Record OB0DW01 type basicRecord
  10 OB0DWDPC OB0DWDPC ; 
  10 OB0DWDP2 OB0DWDP2 ; 
  10 OB0DWUPD OB0DWUPD ; 
  10 OB0DWOLD OB0DWOLD ; 
  10 OB0DWCD6 OB0DWCD6 ; 
  10 OB0DWCD8 OB0DWCD8 ; 
  10 OP1OSRID OP1OSRID ; 
  10 OB0DWPCT OB0DWPCT ; 
  10 OB0DWDSA OB0DWDSA ; 
  10 OB0DW-ORD-ID num(9) ; // op-bulk-ord-id (num)
    15 * char(8) ; // save valid dont ship after dt
    15 OP1PARTN OP1PARTN ; 
  10 OB0DW-UPD-SA-FL OB0DW-UPD-SA-FL ; 
  10 OB0DW-UPD-SB-FL OB0DW-UPD-SB-FL ; 
  10 OB0DW-UPD-ND-FL OB0DW-UPD-ND-FL ; 
  10 OB0DW-MAX-SEQ OB0DW-MAX-SEQ ; 
  10 OP1CUNDT OP1CUNDT ; 
  10 XBDRWOFL XBDRWOFL ; 
end // end OB0DW01

DataItem OB0DW-MAX-SEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OB0DW-UPD-ND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0DW-UPD-SA-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OB0DW-UPD-SB-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save date mmddyy
DataItem OB0DWCD6 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save date ccyymmdd
DataItem OB0DWCD8 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric direct ship discount %
DataItem OB0DWDP2 num(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// discount percent hold field
DataItem OB0DWDPC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// save valid dont ship after dt
DataItem OB0DWDSA num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ext auth nm 1st time fl
DataItem OB0DWOLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work percent area
DataItem OB0DWPCT decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update needed flag
DataItem OB0DWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

