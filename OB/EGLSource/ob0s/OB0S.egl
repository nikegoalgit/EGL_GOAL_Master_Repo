package ob0s;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=OB0S ****
//   This program displays information about a selected error
// message.  This screen can be accessed by pressing PF1 from
// applications where an error exists.  Or by entering a '?'
// next to an error or hold on OB0L or OB0M.
//   To transfer out of this screen, just hit enter, it is the
// only valid key, besides PF4.
// 
// * 05/19/94  scantr  virtual airspeed project: chgd obwrec
// * 06/08/94  scantr  virtual airspeed project: chgd obwrec
// * 09/06/94  craine  virtual airspeed project: chgd obwrec
// * 10/26/94  schase  virtual airspeed project: chgd obwrec
// * 01/03/95  craine  virtual airspeed project: chgd obwrec
// * 06/02/95  craine  virtual airspeed project: chgd obwrec
// * 08/07/95  craine  DATABASE CHANGES
// * 06/03/97  rgilli  YR2000 - Regen to ensure correct ver.
// *                            of xx0xs01 is included.
// *********************
Program OB0S type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OB0SW01 OB0SW01; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBLREC OBLREC; // record
  OBWREC OBWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OB0SM.OB0SM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0S000: OB0S000();
    goto OB0S010;
    OB0S010: OB0S010();
    goto OB0S010;
  end // end main
end // end OB0S

// EXECUTE PROCESS
Function OB0S000()
     /* Check csp and order batch security*/

  XSENTRY();
  XSOBS01();

     /* Initialize application*/

  OB0SS01();

     /* Set -911 processing flag*/

  OBWREC.OBWER911 = "N";


     /* Build map for display*/

  OB0SS10();


end // end OB0S000

// CONVERSE OB0SM001
Function OB0S010()

  converseLib.clearScreen();
   /* replace mapname and uncomment*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/

  converse OB0SM001 ;

     /* Init error stuff*/

  OBWREC.OBWERRFL = "N";
  converseLib.validationFailed(0);


     /* Edit PF Keys*/

  OB0SSPF();

end // end OB0S010

// INITIALIZE APPLICATION
Function OB0SS01()

  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBLREC empty;
  set TA1REC empty;
  set TAEREC empty;
  set TA5REC empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set OB0SW01 empty;


  set OB0SM001 empty;
  TA1REC.TA1MAP = "OB0SM001"; /* map name*/

end // end OB0SS01

// BUILD MAP
Function OB0SS10()

   /* move headings to map*/
  OB0SS12();

   /* read msg information records*/
  OB0SS11();


  if (OB0SW01.OB0SWFND == "N")
    OB0SW01.OB0SWPT1 = "             INFORMATION UNAVAILABLE";
    OB0SW01.OB0SWPT2 = "FOR THIS MESSAGE";
    OB0SM001.OBLMSGTX[10] = OB0SW01.OB0SWRTN; /* rtn msg*/
  end

end // end OB0SS10

// READ INFORMATION RECORDS
Function OB0SS11()

  OB0SM001.OB6MSGNB = OBWREC.OB6MSGNB; /* map msg nbr*/
  OB0SM001.OB6MSGDS = OBWREC.OB6MSGDS; /* map msg txt*/

  OBLREC.OB6MSGNB = OBWREC.OB6MSGNB; /* record key*/

  OB0SW01.OB0SWFND = "N"; /* init found flag*/

    /* select set of information records for message*/
  OB0SSS1();

    /* select next information record for message*/
  while (SQLCA.VAGen_SQLCODE == 0) /* not end of file*/
    OB0SSN1();
  end

    /* close set*/
  OB0SSC1();

end // end OB0SS11

// BUILD HEADINGS
Function OB0SS12()

     /* move map headings*/

  OB0SM001.OB0SMPRC = "OB0S010"; /* process name*/
  OB0SM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/

end // end OB0SS12

// CLOSE SET
Function OB0SSC1()

   /* close scan*/

  set SQLCA empty;


  call "IO5260" ("C1", SQLCA, OBLREC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-close  scan*/


      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "C1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0SSC1 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OBLREC.OB6MSGNB; /* extra key*/
    XSOBEDC(); /* abort routine - no reset done*/
  end


end // end OB0SSC1

// SELECT NEXT ON MSG INFO
Function OB0SSN1()

   /* select next comments*/

  set SQLCA empty;

  call "IO5260" ("N1", SQLCA, OBLREC) {isNoRefresh = yes, isExternal = yes}; /* select next*/

      /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
    OB0SM001.OBLMSGTX[OBLMSSEQ] = OBLREC.OBLMSGTX;
    OB0SW01.OB0SWFND = "Y"; /* found some*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* end of file*/
       /* next sentence*/
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "N1      "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
      TA1REC.TA1LOCAT[3] = "OB0SSN1 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = OBLREC.OB6MSGNB; /* key number*/
      if (SQLCA.VAGen_SQLCODE == -911) /* database busy*/
        XSOBEDP(); /* post routine - no reset done*/
        OBWREC.CAMSG = "DATABASE BUSY - REENTER CHANGES AND TRY AGAIN";
        XSOBP99(); /* start appl over*/
      else
        XSOBEDC(); /* abort routine - no reset done*/
      end
    end
  end


   /* *************************************************************/
end // end OB0SSN1

// Edit pfkeys for OB0S
Function OB0SSPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is enter)
    if (COMMAREA.CAFROMAP == "OB0L" /* error screen*/
     || COMMAREA.CAFROMAP == "OB0M") /* hold screen*/
      /* next sentence*/
    else
      OBWREC.CAMSG = OBWREC.OBWHELP; /* return orig msg to screen*/
    end
    XSOBP99(); /* return to prev screen*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end



end // end OB0SSPF

// SELECT SET ON MSG INFO
Function OB0SSS1()

   /* get all the comments for the error*/

  set SQLCA empty;


  call "IO5260" ("S1", SQLCA, OBLREC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBMSGT01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "S1      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5260  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0SSS1 "; /* statement group*/
    TA1REC.TA1LOCAT[4] = OBLREC.OB6MSGNB; /* msg nbr*/
    XSOBEDC(); /* abort routine - no reset done*/
  end



   /* *************************************************************/
end // end OB0SSS1

//*** RECORD=OB0SW01 ****
// OB0S record workarea
// ***********************
Record OB0SW01 type basicRecord
  10 OB0SWFND OB0SWFND ; 
  10 OB0SWRTN OB0SWRTN ; 
    15 OB0SWPT1 OB0SWPT1 ; 
    15 OB0SWPT2 OB0SWPT2 ; 
end // end OB0SW01

// found flag
DataItem OB0SWFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// part 1
DataItem OB0SWPT1 char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// part 2
DataItem OB0SWPT2 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg to return
DataItem OB0SWRTN char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

