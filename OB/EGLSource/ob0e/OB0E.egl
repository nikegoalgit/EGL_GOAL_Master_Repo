package ob0e;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import in1.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import pc.common.*;
import pk.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=OB0E ****
// This program displays miscellaneous header information,
// specifics of the order that don't fit on the header screen
// and don't need to be viewed in the mainline system flow. It
// is entered by pressing pf14 from other applications. Enter
// flows to the product summary screen. Information about the
// order such as picking, traffic, and vendor authorization is
// displayed on the screen. All fields are protected from entry
// if the order is partially loaded.
// 
//      IOMODS              USED IN STATEMENT GROUP
//      IO0430 OP1REC       ob0es23
//      IO5160 OB1REC       ob0es23 ob0es42 xsobs03
//      IO0860 TF1REC       ob0es25
// ;
// maintenance log
// ;
// 02/15/91  dmeier   regen for database changes
// 03/20/91  dflesh   add min alloc pct to map; add s32 edit
//                    min alloc pct.  log #436.
// 05/08/91  gwells   Menu of Services - added pack code and
//                    abrv - m001,s03,s04,s12,s20,s33(new),s41
// 05/28/91  dflesh   log #624 add received date to map. change
//                    date that was moved to 'entered' field
//                    from zzzsdt to op1entdt.  s12.
//                    chg map definition for whse & entered
//                    date to askip.
// 06/11/91  craine   db2 changes - s12, s32, s41, map, renamed
//                    kuncrfl to kucvndfl, op1mnalp to kunmapct
// 03/11/92  jwils1   database changes - s12, s41, s03,s04,map:
//                    deleted use of op1rplor.
// 03/20/92  tmorri   modified 000, 010, s02, s04
//                    updates not allowed for order status 'ca'
//                    or 'cl'.
// 01/10/94  dmeier   Log #971 - musical size run changes.
//                    oboes-ms-xpacd, s33
// 05/19/94  scantr   virtual airspeed project: chgd obwrec,
//                    xsobs02, xsobs03, added xsobs10
// 05/19/94  scantr   changed xsobs03
// 06/15/94  craine   REWRITE TO CALL RELATIONAL EDIT
// 08/18/94  craine   changes to xsobs-limited-edit,
//                    xsobs-full-edit.
// 08/30/94  craine   changes to xsobs-full-edit, chg pf12 to
//                    call online edit. block 'dl' and 'ld'
//                    orders from updating
// 09/06/94  craine   change to obwrec
// 10/06/94  craine   add new xsobs-add-new-oba
// 10/25/94  craine   change to obwrec
// 12/20/94  craine   chg to allow changes to cleared orders
// 01/30/94  craine   chg to xsobs-upd-oba-edit
// 04/27/95  craine   allow for new yobcd 'pd' and 'lp'.
// 08/07/95  craine   DATABASE CHANGES
// 11/06/96  wleong   removed opmsrec
// 03/06/97  wleong   update prepack if xpacd is changed.
// 09/26/97  wleong   added changes to restrict one product per
//                    msr order.  ob0es-chk-xpacd and
//                    ob0es-chk-msr-itm.
// 10/16/97  wleong   added changes to tighten msr rules on
//                    pack code assignment.
//                    apply msr rules to cu orders.
//                    ob0es-chk-pack-code.
// 04/01/98  wleong   when pack code 'ms' is changed to 'cu',
//                    call pk4420 or dcust.vcmpny01 to get ctn
//                    type code.  ob0es-updt-prepack.
// 12/08/98  svargh   made changes in ob0es-get-ctn-type stmt
//                    grp.Added new error message display incas
//                    -e invalid crtn_typ_cd is entered.
// 05/25/99  rshaik   Commented the stmt group(OB0ES-ALT-CTN-
//                    TYPE)which gets the alternate carton type
//                    from VCMPNY01 and changed it to display
//                    relevant messages.Changes are in
//                    OB0ES-GET-CTN-TYPE.
// 12/01/00 Rshaik  Picking code 20 is not valid for any XWH 07
// TT#9179          Order.An error message will be generated in
//                  the above condition for any XWH 07 order.
//                  Please look for changes in OB0ES29.
// *********************
Program OB0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OB00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OB0EW01 OB0EW01; // record
  OB1REC OB1REC; // record
  OB2REC OB2REC; // record
  OB8REC OB8REC; // record
  OBAREC OBAREC; // record
  OBBREC OBBREC; // record
  OBCREC OBCREC; // record
  OBDREC OBDREC; // record
  OBEREC OBEREC; // record
  OBFEREC OBFEREC; // record
  OBFREC OBFREC; // record
  OBKREC OBKREC; // record
  OBLEREC OBLEREC; // record
  OBWREC OBWREC; // record
  OP1REC OP1REC; // record
  PWSREC PWSREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TF1REC TF1REC; // record
  VBCSPR01 VBCSPR01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XOATBL; // table
  use XPATBL; // table
  use XPPTBL; // table
  use XPKTBL; // table
  use XWHTBL; // table
  use OB0EM.OB0EM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OB0E000: OB0E000();
    goto OB0E010;
    OB0E010: OB0E010();
    goto OB0E010;
  end // end main
end // end OB0E

Function OB0E000()
     /* Check csp and order batch security*/

  XSENTRY();
  XSOBS01();

     /* Initialize application - init records, get zz date/time,*/
                              /* save map name for XSOBE## sgrp's*/
  OB0ES01();

     /* Set -911 processing flag*/

  OBWREC.OBWER911 = "N";

     /* Determine if batch edit is running*/

  XSOBS02();

     /* Read current order header*/

  XSOBS03();


     /* Display commarea message*/

  OB0EM001.CAMSG = OBWREC.CAMSG;
  OBWREC.CAMSG = " ";


     /* Build map for display*/

  OB0ES10();


     /* Edit map*/

  if (OB1REC.YOBCD != "XL" /* not cancelled*/
   && OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "LP" /* not lost demand*/
   && OB1REC.YOBCD != "PD") /* not postponed demand*/
    OB0ES20();
  end

end // end OB0E000

Function OB0E010()

  converseLib.clearScreen();
   /* set map page number*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/
  OBWREC.OBWER911 = "Y"; /* -911 processing flag*/

  converse OB0EM001 ;

     /* Init error stuff*/

  OBWREC.OBWERRFL = "N";
  converseLib.validationFailed(0);
  OBWREC.OBWHELP = OB0EM001.CAMSG; /* for help screen*/
  OB0EM001.CAMSG = " "; /* replace mapname and uncomment*/


     /* Reset field attributes*/

  OB0ES02();


     /* Edit map(no matter what pfkey is used)*/

  if (OB1REC.YOBCD != "XL" /* not cancelled*/
   && OB1REC.YOBCD != "CA" /* not cleared availability*/
   && OB1REC.YOBCD != "DL" /* not deleted*/
   && OB1REC.YOBCD != "LD" /* not loaded*/
   && OB1REC.YOBCD != "LP" /* not lost demand*/
   && OB1REC.YOBCD != "PD") /* not postponed demand*/

    OB0ES20(); /* edit map*/

    if (OBWREC.OBWERRFL == "N" /* no errors*/
     && converseVar.eventKey is enter)
      OB0ES40(); /* update records*/
    end

    /* if something changed on the order*/
    /* call relational edit subprogram*/
    if (OB0EW01.OB0EWUPD == "Y")
      XSOBS-ONLINE-EDIT();
    end

  end


     /* Edit PF Keys*/

  OB0ESPF();

end // end OB0E010

// chk # of items for this msr
Function OB0ES-CHK-MSR-ITM()

   /* build record to pass*/


  set OB2REC empty;


  OB2REC.OP1PARTN = OB1REC.OP1PARTN; /* part char*/
  OB2REC.OP1CUOID = OB1REC.OP1CUOID; /* order nbr*/
  OB2REC.OP1NORID = OB1REC.OP1NORID; /* nike ord id*/

   /* get the count of items for the order*/

  set SQLCA empty;
  set OBKREC empty; /* task record*/

  OBKREC.OBKTASK = "MC"; /* select task*/

  call "IO5170" (OBKREC, SQLCA, OB2REC) {isNoRefresh = yes, isExternal = yes}; /* i/o mod-select scan*/


   /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check for good rc*/
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
    TA1REC.TA1TBLVU = "VBITEM01"; /* table view*/
    TA1REC.TA1LOCAT[1] = "MC      "; /* calling option*/
    TA1REC.TA1LOCAT[2] = "IO5170  "; /* i/o mod name*/
    TA1REC.TA1LOCAT[3] = "OB0ES-CH"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "K-MSR-IT"; /* extra key*/
    if (SQLCA.VAGen_SQLCODE == -911) /* deadlock*/
      OBWREC.OBWER911 = "Y"; /* show err*/
      XSOBS04(); /* no rollback, restart appl*/
    else
      XSOBEDC(); /* abort routine - no reset done*/
    end
  end

   /*  */
   /* check to see if there are more than one msr items  09/25/97*/
   /*  */
  if (OBKREC.OBKCOUNT > 1)
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(240); /* pack cd is invalid*/
    set OB0EM001.XPACD cursor, bold;
  end

end // end OB0ES-CHK-MSR-ITM

// CHECK FOR PREPACK
Function OB0ES-CHK-PREPACK()

   /* THIS STATEMENT GROUP CHECKS THE PREPACK DATABASE*/
   /* TO SEE IF THE ORDER EXISTS*/

   /* BUILD THE KEY TO SPECIFIED PREPACK TABLE*/

  set VBCSPR01 empty;
  set SQLCA empty;

  VBCSPR01.XWHCD = OB1REC.XWHCD; /* WAREHOUSE*/
  VBCSPR01.OP1PARTN = OB1REC.OP1PARTN; /* PART CHAR*/
  VBCSPR01.OP1CUOID = OB1REC.OP1CUOID; /* ORDER NUM*/
  VBCSPR01.OP1NORID = OB1REC.OP1NORID; /* NIKE ORD ID*/

  call "VBCSPR01" ("S1", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* open cursor successful*/
    /* next sentence*/
  else
    set SQLCA empty;
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "S1      ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0ES-CHK-PREPACK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

  while (SQLCA.VAGen_SQLCODE == 0)
    call "VBCSPR01" ("N1", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (OB0EM001.XPACD == " ") /* pack code is blanked out*/
        OB0ES-DEL-PREPACK(); /* delete prepack*/
      else
        OB0ES-UPDT-PREPACK(); /* update prepack*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100)
              /* next sentence*/
      else
        set SQLCA empty;
        TA1REC.TA1DBASE = "DORDB   ";
        TA1REC.TA1TBLVU = "VBCSPR01";
        TA1REC.TA1LOCAT[1] = "N1      ";
        TA1REC.TA1LOCAT[2] = "VBCSPR01";
        TA1REC.TA1LOCAT[3] = "OB0ES-CHK-PREPACK";
        TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
        if (SQLCA.VAGen_SQLCODE == -911)
          XSOBS04();
        else
          XSOBEDC();
        end
      end
    end
  end
end // end OB0ES-CHK-PREPACK

// edit pack code
Function OB0ES-CHK-XPACD()

  if (OB0EM001.XPACD == "MS")
    if (OB1REC.XDSCD == "1")
        /* next sentence*/
    else
   /* MOVE 'PACK CODE INVALID FOR NON-DIRECT SHIP' TO OB0EM001.CAMSG;*/
   /* SET OB0EM001.XPACD CURSOR,BRIGHT;*/
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(246); /* pack cd invalid for non-direct ship*/
      set OB0EM001.XPACD cursor, bold;
    end
    if (OB1REC.XWHCD != " ")
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(247); /* pack cd invalid for warehouse*/
      set OB0EM001.XPACD cursor, bold;
    end
    OB0ES-CHK-MSR-ITM(); /* restrict one product per msr order*/
  else
    if (OB0EM001.XPACD == "CU")
      if (OB1REC.XDSCD == "1")
   /* MOVE 'PACK CODE INVALID FOR DIRECT SHIP' TO OB0EM001.CAMSG;*/
   /* SET OB0EM001.XPACD CURSOR,BRIGHT;*/
        OBWREC.OBWERRFL = "Y";
        converseLib.validationFailed(178); /* pack cd invalid for non-direct ship*/
        set OB0EM001.XPACD cursor, bold;
      end
      if (OB1REC.XWHCD == " ")
        OBWREC.OBWERRFL = "Y";
        converseLib.validationFailed(247); /* pack cd invalid for warehouse*/
        set OB0EM001.XPACD cursor, bold;
      end
      OB0ES-CHK-MSR-ITM(); /* restrict one product per msr order*/
    end
  end

end // end OB0ES-CHK-XPACD

// DELETE PREPACK
Function OB0ES-DEL-PREPACK()

   /* THIS STATEMENT GROUP DELETES THE PREPACK RECORD IF*/
   /* IT EXISTS*/

  call "VBCSPR01" ("D ", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;*/
  else
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "DELETE  ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0ES-DEL-PREPACK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0ES-DEL-PREPACK

// GET CARTON TYPE
Function OB0ES-GET-CTN-TYPE()
   /* since a 'cu' order must have a carton type code, we call pk4420*/
   /* to calculate the carton type code.  if pk4420 does not return a*/
   /* good value, get it from dcust.vcmpny01*/

  set PWSREC empty;
  PWSREC.KUCCOID = OB1REC.KUCCOID;
  PWSREC.OP1PARTN = VBCSPR01.OP1PARTN;
  PWSREC.OP1CUOID = VBCSPR01.OP1CUOID;
  PWSREC.OP1NORID = VBCSPR01.OP1NORID;
  PWSREC.XWHCD = VBCSPR01.XWHCD;
  PWSREC.XGPCD = VBCSPR01.XGPCD;
  PWSREC.XBCCD = OB1REC.XBCCD;
  PWSREC.OP2LNINB[1] = VBCSPR01.OP2LNINB;
  PWSREC.SY1STNBR[1] = VBCSPR01.SY1STNBR;
  PWSREC.SY2CLRID[1] = VBCSPR01.SY2CLRID;
  PWSREC.XDMCD[1] = VBCSPR01.XDMCD;
  PWSREC.PWSPPQ01[1] = VBCSPR01.PKTPPQTY[01];
  PWSREC.PWSPPQ02[1] = VBCSPR01.PKTPPQTY[02];
  PWSREC.PWSPPQ03[1] = VBCSPR01.PKTPPQTY[03];
  PWSREC.PWSPPQ04[1] = VBCSPR01.PKTPPQTY[04];
  PWSREC.PWSPPQ05[1] = VBCSPR01.PKTPPQTY[05];
  PWSREC.PWSPPQ06[1] = VBCSPR01.PKTPPQTY[06];
  PWSREC.PWSPPQ07[1] = VBCSPR01.PKTPPQTY[07];
  PWSREC.PWSPPQ08[1] = VBCSPR01.PKTPPQTY[08];
  PWSREC.PWSPPQ09[1] = VBCSPR01.PKTPPQTY[09];
  PWSREC.PWSPPQ10[1] = VBCSPR01.PKTPPQTY[10];
  PWSREC.PWSPPQ11[1] = VBCSPR01.PKTPPQTY[11];
  PWSREC.PWSPPQ12[1] = VBCSPR01.PKTPPQTY[12];
  PWSREC.PWSPPQ13[1] = VBCSPR01.PKTPPQTY[13];
  PWSREC.PWSPPQ14[1] = VBCSPR01.PKTPPQTY[14];
  PWSREC.PWSPPQ15[1] = VBCSPR01.PKTPPQTY[15];
  PWSREC.PWSPPQ16[1] = VBCSPR01.PKTPPQTY[16];
  PWSREC.PWSPPQ17[1] = VBCSPR01.PKTPPQTY[17];
  PWSREC.PWSPPQ18[1] = VBCSPR01.PKTPPQTY[18];
  PWSREC.PWSPPQ19[1] = VBCSPR01.PKTPPQTY[19];
  PWSREC.PWSPPQ20[1] = VBCSPR01.PKTPPQTY[20];
  PWSREC.PWSPPQ21[1] = VBCSPR01.PKTPPQTY[21];
  PWSREC.PWSPPQ22[1] = VBCSPR01.PKTPPQTY[22];
  PWSREC.PWSPPQ23[1] = VBCSPR01.PKTPPQTY[23];
  PWSREC.PWSPPQ24[1] = VBCSPR01.PKTPPQTY[24];
  PWSREC.PWSPPQ25[1] = VBCSPR01.PKTPPQTY[25];
  PWSREC.PWSPPQ26[1] = VBCSPR01.PKTPPQTY[26];
  PWSREC.PWSPPQ27[1] = VBCSPR01.PKTPPQTY[27];
  PWSREC.PWSPPQ28[1] = VBCSPR01.PKTPPQTY[28];
  PWSREC.PWSPPQ29[1] = VBCSPR01.PKTPPQTY[29];
  PWSREC.PWSPPQ30[1] = VBCSPR01.PKTPPQTY[30];
  PWSREC.PWSPPQ31[1] = VBCSPR01.PKTPPQTY[31];
  PWSREC.PWSPPQ32[1] = VBCSPR01.PKTPPQTY[32];
  PWSREC.PWSPPQ33[1] = VBCSPR01.PKTPPQTY[33];
  PWSREC.PWSPPQ34[1] = VBCSPR01.PKTPPQTY[34];
  PWSREC.PWSPPQ35[1] = VBCSPR01.PKTPPQTY[35];
  PWSREC.PWSPPQ36[1] = VBCSPR01.PKTPPQTY[36];
  PWSREC.PWSPPQ37[1] = VBCSPR01.PKTPPQTY[37];
  PWSREC.PWSPPQ38[1] = VBCSPR01.PKTPPQTY[38];
  PWSREC.PWSPPQ39[1] = VBCSPR01.PKTPPQTY[39];
  PWSREC.PWSPPQ40[1] = VBCSPR01.PKTPPQTY[40];

  try
    call "PK4420" (SQLCA, PWSREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == -911)
    XSOBS04();
    return;
  end

  if (PWSREC.PWSRTNCD == 0)
    VBCSPR01.YNTCD = PWSREC.YNTCD;
  else
    if (PWSREC.PWSRTNCD == 3)
      /* tcs begin*/
      OB0EM001.VAGen_EZEMSG = " NO CARTONS LARGE ENOUGH - RETRY";
      converseLib.validationFailed(255);
      exit stack;
      /* EZERTN;*/
      /* OB0ES-ALT-CTN-TYPE;*/
      /* end tcs*/
    else
      if (PWSREC.PWSRTNCD == 4)
        /* Wipro change begin#05/25/99 #*/
        OB0EM001.VAGen_EZEMSG = " PACKAGE REQUIRES MATCHING CARTON TYPES";
        exit stack;
        /* EZERTN;*/
        /* OB0ES-ALT-CTN-TYPE;*/
        /* Wipro change end*/
      else
        if (PWSREC.PWSRTNCD == 5)
          /* Wipro change begin#05/25/99 #*/
          OB0EM001.VAGen_EZEMSG = " NOT SET UP WITH CARTON CLASS";
          exit stack;
          /* EZERTN;*/
          /* OB0ES-ALT-CTN-TYPE;*/
          /* Wipro change end*/
        else
          if (PWSREC.PWSRTNCD == 6)
            /* Wipro change Begin#05/25/99 #*/
            OB0EM001.VAGen_EZEMSG = " NOT SET UP WITH CARTON CLASS RECORD";
            exit stack;
            /* EZERTN;*/
            /* OB0ES-ALT-CTN-TYPE;*/
            /* Wipro change End*/
          else
            if (PWSREC.PWSRTNCD == 7)
              /* Wipro change Begin#05/25/99 #*/
              OB0EM001.VAGen_EZEMSG = " NEEDS HANGING CARTON CLASS";
              exit stack;
              /* EZERTN;*/
              /* OB0ES-ALT-CTN-TYPE;*/
              /* Wipro change End*/
            else
              if (PWSREC.PWSRTNCD == 8)
                /* Wipro change begin#05/25/99 #*/
                OB0EM001.VAGen_EZEMSG = " NO ITEM PASSED";
                exit stack;
                /* EZERTN;*/
                /* OB0ES-ALT-CTN-TYPE;*/
                /* Wipro change End*/
              else
                if (PWSREC.PWSRTNCD == 9)
                  /* Wipro change begin#05/25/99 #*/
                  OB0EM001.VAGen_EZEMSG = " NO PREPACK QUANTITIES";
                  exit stack;
                  /* EZERTN;*/
                  /* OB0ES-ALT-CTN-TYPE;*/
                  /* Wipro change end*/
                else
                  TA1REC.TA1DBASE = "DORDER  ";
                  TA1REC.TA1TBLVU = "VCSPRP01";
                  TA1REC.TA1TBLKE = "PK4420";
                  TA1REC.TA1LOCAT[2] = "OB0ES-GET-CTN-TYPE";
                  XSOBEDC();
                end
              end
            end
          end
        end
      end
    end
  end

end // end OB0ES-GET-CTN-TYPE

// UPDATE PREPACK
Function OB0ES-UPDT-PREPACK()

   /* THIS STATEMENT GROUP UPDATES THE PREPACK RECORD IF*/
   /* IT EXISTS*/

  if (OB0EM001.XPACD == "CU") /* cu pack code needs to have ctn type cd*/
    OB0ES-GET-CTN-TYPE();
  else
    VBCSPR01.YNTCD = " ";
  end

  VBCSPR01.XWHCD = OB1REC.XWHCD;
  VBCSPR01.XPACD = OB0EM001.XPACD;
  VBCSPR01.ZZZCHGDT = OBWREC.ZZZCHGDT;
  VBCSPR01.ZZZCHGTM = OBWREC.ZZZCHGTM;

  call "VBCSPR01" ("U4", SQLCA, VBCSPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence;*/
  else
    TA1REC.TA1DBASE = "DORDB   ";
    TA1REC.TA1TBLVU = "VBCSPR01";
    TA1REC.TA1LOCAT[1] = "UPDATE  ";
    TA1REC.TA1LOCAT[2] = "VBCSPR01";
    TA1REC.TA1LOCAT[3] = "OB0ES-UPDT-PREPK";
    TA1REC.TA1LOCAT[4] = VBCSPR01.VBCSPRP01-KEY;
    if (SQLCA.VAGen_SQLCODE == -911)
      XSOBS04();
    else
      XSOBEDC();
    end
  end

end // end OB0ES-UPDT-PREPACK

// INITILIZE OB0E APPLICATION
Function OB0ES01()

  set OB1REC empty;
  set OB8REC empty;
  set OBAREC empty;
  set OBBREC empty;
  set OBCREC empty;
  set OBDREC empty;
  set OBEREC empty;
  set OBFREC empty;
  set OP1REC empty;
  set OBFEREC empty;
  set OBLEREC empty;
  set TA1REC empty;
  set TA2REC empty;
  set TA5REC empty;
  set TAEREC empty;
  set TF1REC empty;
  set OB0EW01 empty;
  set SQLCA empty;
  set ERRSQLCA empty;
  set OB0EM001 empty;
  set XX0XW01 empty;

  XX0XS01();
  OBWREC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  OBWREC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  TA1REC.TA1MAP = "OB0CM001"; /* map name*/

end // end OB0ES01

// RESET FIELD ATTRIBUTES
Function OB0ES02()

  if (OB1REC.YOBCD == "XL" /* cancelled*/
   || OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    OB0ES04(); /* set fields autoskip*/
  else
    OB0ES03(); /* set fields defined*/
  end

end // end OB0ES02

// SET FIELDS DEFINED
Function OB0ES03()

  set OB0EM001.XOACD initialAttributes;
  set OB0EM001.OP1VAUNB initialAttributes;
  set OB0EM001.KUCVNDFL initialAttributes;
  set OB0EM001.OP1SWORD initialAttributes;
  set OB0EM001.OB0EMIDT initialAttributes;
  set OB0EM001.TF1CARCD initialAttributes;
  set OB0EM001.OP1ACNLF initialAttributes;
  set OB0EM001.OP1EXPDF initialAttributes;
  set OB0EM001.OP1ASHDF initialAttributes;
  set OB0EM001.XPACD initialAttributes;
  set OB0EM001.XPKCD initialAttributes;
  set OB0EM001.XPPCD initialAttributes;
  set OB0EM001.KUNMAPCT initialAttributes;

  set OB0EM001.XPPCD cursor;

end // end OB0ES03

// SET FIELDS AUTOSKIP
Function OB0ES04()

  set OB0EM001.XOACD skip;
  set OB0EM001.OP1VAUNB skip;
  set OB0EM001.KUCVNDFL skip;
  set OB0EM001.OP1SWORD skip;
  set OB0EM001.OB0EMIDT skip;
  set OB0EM001.TF1CARCD skip;
  set OB0EM001.OP1ACNLF skip;
  set OB0EM001.OP1EXPDF skip;
  set OB0EM001.OP1ASHDF skip;
  set OB0EM001.XPACD skip;
  set OB0EM001.XPKCD skip;
  set OB0EM001.XPPCD skip;
  set OB0EM001.KUNMAPCT skip;

  if (OB1REC.YOBCD == "CA" /* cleared availability*/
   || OB1REC.YOBCD == "LP" /* lost demand reported*/
   || OB1REC.YOBCD == "PD") /* postponed demand reported*/
    if (OB0EM001.CAMSG == " ")
      OB0EM001.CAMSG = "ORDERS IN THIS STATUS ARE VIEW ONLY";
    end
  end
end // end OB0ES04

// BUILD MAP
Function OB0ES10()

   /* move fields to the map*/

  OB0ES12();

   /* reset field attributes*/

  OB0ES02();

end // end OB0ES10

// GET CARRIER CODE ABBREVIATION
Function OB0ES11()

  if (OB0EM001.TF1CARCD == " ")
    OB0EM001.TF1ABRV = " ";
    return;
  end

  TF1REC.TF1CARCD = OB0EM001.TF1CARCD;

  call "IO0860" ("S ", SQLCA, TF1REC) {isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (TF1REC.XXXSTAT == "A")
      OB0EM001.TF1ABRV = TF1REC.TF1ABRV;
    else
      OB0EM001.TF1ABRV = "UNKNWN";
    end
  end

end // end OB0ES11

// MOVE FIELDS TO MAP
Function OB0ES12()

  OB0EM001.OB0EMPRC = "OB0E010"; /* process name*/
  OB0EM001.OBWCDATE = OBWREC.OBWCDATE; /* current date*/
  OB0EM001.OBWORDER = OBWREC.OBWORDER; /* formatted order num*/
  OB0EM001.OBWCUST = OBWREC.OBWCUST; /* formatted company number*/
  OB0EM001.OP1CUPO = OBWREC.OP1CUPO; /* purchase order*/
  OB0EM001.KUMSTRNM = OBWREC.KUMSTRNM; /* store name*/


   /* if pick priority code is present get pick priority abrv*/

  OB0EM001.XPPCD = OB1REC.XPPCD; /* pick priority code*/

  if (OB0EM001.XPPCD == " ")
    OB0EM001.XPPABRV = " "; /* space out abbrev*/
  else
    sysVar.arrayIndex = 1;
    if (OB1REC.XPPCD in XPPTBL.XPPCD)
      OB0EM001.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
    else
      OB0EM001.XPPABRV = "UNKNWN";
    end
  end


   /* if pick code is present get pick code abbrevation*/

  OB0EM001.XPKCD = OB1REC.XPKCD; /* picking code*/

  if (OB0EM001.XPKCD == " ")
    OB0EM001.XPKABRV = " "; /* space out abbrev*/
  else
    sysVar.arrayIndex = 1;
    if (OB1REC.XPKCD in XPKTBL.XPKCD)
      OB0EM001.XPKABRV = XPKTBL.XPKABRV[sysVar.arrayIndex];
    else
      OB0EM001.XPKABRV = "UNKNWN";
    end
  end


   /* if pack code is present get pack code abbrevation*/

  OB0EM001.XPACD = OB1REC.XPACD; /* pack code*/

  if (OB0EM001.XPACD == " ")
    OB0EM001.XPAABRV = " "; /* space out abbrev*/
  else
    sysVar.arrayIndex = 1;
    if (OB1REC.XPACD in XPATBL.XPACD)
      OB0EM001.XPAABRV = XPATBL.XPAABRV[sysVar.arrayIndex];
    else
      OB0EM001.XPAABRV = "UNKNWN";
    end
  end


    /* warehouse abrev to map*/

  sysVar.arrayIndex = 1;
  if (OB1REC.XWHCD in XWHTBL.XWHCD)
    OB0EM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
  else
    OB0EM001.XWHABRV = "UNKNWN";
  end


    /* entered date to map*/

  OBWREC.OBWDT8 = OB1REC.OP1ENTDT;
  XSOBDCM(); /* convert enter date comp to map*/
  OB0EM001.OB0EMEDT = OBWREC.OBWDT6;

  OBWREC.OBWDT8 = OB1REC.OP1ORCDT;
  XSOBDCM(); /* convert received date comp to map*/
  OB0EM001.OP1ORCDT = OBWREC.OBWDT6;


    /* flags to map*/

  OB0EM001.OP1ASHDF = OB1REC.OP1ASHDF; /* allow shading flag*/

  OB0EM001.OP1EXPDF = OB1REC.OP1EXPDF; /* expedite flag*/

  OB0EM001.OP1ACNLF = OB1REC.OP1ACNLF; /* allow cancel flag*/


    /* carrier code to map*/

  OB0EM001.TF1CARCD = OB1REC.TF1CARCD; /* carrier code*/

  OB0ES11(); /* read carrier database for*/
                                   /* abbreviation*/


    /* invoice as of date to map*/

  if (OB1REC.OP1IVADT == 0)
     /* next sentence*/
  else
    OBWREC.OBWDT8 = OB1REC.OP1IVADT;
    XSOBDCM(); /* convert date comp to map*/
    OB0EM001.OB0EMIDT = OBWREC.OBWDT6;
  end


    /* ship with order number to map*/

  OB0EM001.OP1SWORD = OB1REC.OP1SWORD; /* ship with order number*/


    /* / * special handling codes message to map*/

  if (OB1REC.OP1SPHDF == "Y")
    OB0EM001.OB0EMSHM = "PRODUCT(S) HAVE SPECIAL HANDLING CODES";
  end


    /* vendor authorization information to map*/

  OB0EM001.KUCVNDFL = OB1REC.KUCVNDFL; /* vendor auth required flag*/

  OB0EM001.OP1VAUNB = OB1REC.OP1VAUNB; /* vendor auth number*/


    /* minumum allocation percent to map*/

  OB0EM001.KUNMAPCT = OB1REC.KUNMAPCT; /* min alloc pct*/

end // end OB0ES12

// EDIT MAP
Function OB0ES20()

  OB0ES21(); /* edit ovrd auth code*/

  OB0ES22(); /* edit vendor augh req flag*/

  OB0ES24(); /* edit invoice as of date*/

  OB0ES25(); /* edit carrier code*/

  OB0ES26(); /* edit allow cancel flag*/

  OB0ES27(); /* edit expedite flag*/

  OB0ES28(); /* edit allow shading flag*/

  OB0ES33(); /* edit pack code*/

  OB0ES29(); /* edit picking code*/

  OB0ES30(); /* edit pick priority flag*/

  OB0ES32(); /* edit minimum alloc pct*/

end // end OB0ES20

// EDIT OVERRIDE AUTH CODE
Function OB0ES21()

   /* convert the ob1rec date and compare it*/
   /* with the map.*/

  OBWREC.OBWDT8 = OB1REC.OP1IVADT;
  XSOBDCM();
  if (OB0EM001.OB0EMIDT == OBWREC.OBWDT6)
    return;
  end

  if (OB0EM001.XOACD == " ")
    converseLib.validationFailed(41); /* ovrd auth needed when date is chged*/
    set OB0EM001.XOACD cursor, bold;
    OBWREC.OBWERRFL = "Y";
    return;
  end

   /* validate authorization code; must be between begin and end*/
   /* dates in xoatbl. save service rep id for later use*/

  sysVar.arrayIndex = 1;
  if (OB0EM001.XOACD in XOATBL.XOACD)
    if (XX0XW01.XX0XWDAT >= XOATBL.XOABEGDT[sysVar.arrayIndex] /* current & begin date*/
     && XX0XW01.XX0XWDAT <= XOATBL.XOAENDDT[sysVar.arrayIndex]) /* current & end date*/
      OB0EW01.OB0EWREP = XOATBL.KUYSVRID[sysVar.arrayIndex]; /* save service rep id*/
    else
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(119);
      set OB0EM001.XOACD cursor, bold;
    end
  else
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(118);
    set OB0EM001.XOACD cursor, bold;
  end

end // end OB0ES21

// EDIT VENDOR AUTH REQ FLAG
Function OB0ES22()

  if (OB0EM001.KUCVNDFL == "Y"
   || OB0EM001.KUCVNDFL == "N")
     /* next sentence*/
  else
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(18); /* correct response y or n*/
    set OB0EM001.KUCVNDFL cursor, bold;
  end

end // end OB0ES22

// EDIT INVOICE AS OF DATE
Function OB0ES24()

  if (OB0EM001.OB0EMIDT == 0)
    return;
  end

  OBWREC.OBWDT6 = OB0EM001.OB0EMIDT;
  XSOBDED();
  if (TA2REC.TA2RTNCD == 0)
      /* next sentence*/
  else
    converseLib.validationFailed(30); /* invoice as of date invalid*/
    OBWREC.OBWERRFL = "Y";
    set OB0EM001.OB0EMIDT cursor, bold;
  end

end // end OB0ES24

// EDIT CARRIER CODE
Function OB0ES25()

  if (OB0EM001.TF1CARCD == " ")
    OB0EM001.TF1ABRV = " ";
    return;
  end

  TF1REC.TF1CARCD = OB0EM001.TF1CARCD;

  call "IO0860" ("S ", SQLCA, TF1REC) {isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    if (TF1REC.XXXSTAT == "A")
      OB0EM001.TF1ABRV = TF1REC.TF1ABRV;
    else
      OB0EM001.TF1ABRV = "UNKNWN";
      converseLib.validationFailed(31); /* carrier code invalid*/
      OBWREC.OBWERRFL = "Y";
      set OB0EM001.TF1CARCD cursor, bold;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OB0EM001.TF1ABRV = "UNKNWN";
      converseLib.validationFailed(31); /* carrier code invalid*/
      OBWREC.OBWERRFL = "Y";
      set OB0EM001.TF1CARCD cursor, bold;
    else
      TA1REC.TA1DBASE = "DPICK   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCARR001"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO0860  "; /* i/o mod*/
      TA1REC.TA1LOCAT[3] = "OB0ES25 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = TF1REC.TF1CARCD; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

end // end OB0ES25

// EDIT ALLOW CANCEL FLAG
Function OB0ES26()

  if (OB0EM001.OP1ACNLF == "Y"
   || OB0EM001.OP1ACNLF == "N")
     /* next sentence*/
  else
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(18); /* correct response y or n*/
    set OB0EM001.OP1ACNLF cursor, bold;
  end

end // end OB0ES26

// EDIT EXPEDITE FLAG
Function OB0ES27()

  if (OB0EM001.OP1EXPDF == "Y"
   || OB0EM001.OP1EXPDF == "N")
     /* next sentence*/
  else
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(18); /* correct response y or n*/
    set OB0EM001.OP1EXPDF cursor, bold;
  end

end // end OB0ES27

// EDIT ALLOW SHADING FLAG
Function OB0ES28()

  if (OB0EM001.OP1ASHDF == "Y"
   || OB0EM001.OP1ASHDF == "N")
     /* next sentence*/
  else
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(18); /* correct response y or n*/
    set OB0EM001.OP1ASHDF cursor, bold;
  end

end // end OB0ES28

// EDIT PICKING CODE
Function OB0ES29()
   /*  */
   /* TT#9179: Change added to prevent Warehouse '07' users from entering*/
   /* Pick code 20.*/
   /*  */

  if (OB0EM001.XPKCD == " ")
    OB0EM001.XPKABRV = " ";
    return;
  end

  sysVar.arrayIndex = 1;
  if (OB0EM001.XPKCD in XPKTBL.XPKCD)
    OB0EM001.XPKABRV = XPKTBL.XPKABRV[sysVar.arrayIndex];
    if (XPKTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          /* next sentence*/
    else
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(32); /* picking cd is invalid*/
      set OB0EM001.XPKCD cursor, bold;
    end
  else
    OB0EM001.XPKABRV = "UNKNWN";
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(32); /* picking cd is invalid*/
    set OB0EM001.XPKCD cursor, bold;
  end

   /* TT#9179 Change begin      12/01/00*/
  if (OB0EM001.XPKCD == "20") /* picking code*/
    if (OB1REC.XWHCD == "07") /* Ware house 07*/
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(260); /* picking cd is invalid*/
      set OB0EM001.XPKCD cursor, bold;
    end
  end
   /* TT#9179 Change begin      12/01/00*/

end // end OB0ES29

// EDIT PICK PRIORITY FLAG
Function OB0ES30()

  if (OB0EM001.XPPCD == " ")
    OB0EM001.XPPABRV = " ";
    return;
  end

  sysVar.arrayIndex = 1;
  if (OB0EM001.XPPCD in XPPTBL.XPPCD)
    OB0EM001.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
    if (XPPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
         /* next sentence*/
    else
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(34); /* pick priority invalid or inactive*/
      set OB0EM001.XPPCD cursor, bold;
    end
  else
    OB0EM001.XPPABRV = "UNKNWN";
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(34); /* pick priority invalid or inactive*/
    set OB0EM001.XPPCD cursor, bold;
  end

end // end OB0ES30

// edit min alloc pct
Function OB0ES32()
  if (OB0EM001.KUNMAPCT == OB1REC.KUNMAPCT) /* min alloc pct*/
    /* next sentence*/
  else
    if (OB0EM001.KUNMAPCT > 100)
      converseLib.validationFailed(149);
      OBWREC.OBWERRFL = "Y";
      set OB0EM001.KUNMAPCT cursor, bold;
      return;
    end
  end
end // end OB0ES32

// edit pack code
Function OB0ES33()

  if (OB0EM001.XPACD == " ")
    OB0EM001.XPAABRV = " ";
    return;
  end

  sysVar.arrayIndex = 1;
  if (OB0EM001.XPACD in XPATBL.XPACD)
    OB0EM001.XPAABRV = XPATBL.XPAABRV[sysVar.arrayIndex];
    if (XPATBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* next sentence*/
    else
      OBWREC.OBWERRFL = "Y";
      converseLib.validationFailed(153); /* pack cd is invalid*/
      set OB0EM001.XPACD cursor, bold;
    end
    OB0ES-CHK-XPACD(); /* check for pack code*/
  else
    OB0EM001.XPAABRV = "UNKNWN";
    OBWREC.OBWERRFL = "Y";
    converseLib.validationFailed(153); /* pack cd is invalid*/
    set OB0EM001.XPACD cursor, bold;
  end

end // end OB0ES33

// UPDATE
Function OB0ES40()

  OB0ES41(); /* move fields to ob1rec*/

  if (OB0EW01.OB0EWUPD == "Y")
    OB0ES42(); /* update header*/
    OB0ES43(); /* update temp storage*/
    XSOBT2C(); /* update temp storage for errors*/
  end

end // end OB0ES40

// MOVE FIELDS TO OB1REC
Function OB0ES41()

  OB0EW01.OB0EWUPD = "N"; /* init update flag*/


   /* move picking priority code to header*/

  if (OB0EM001.XPPCD != OB1REC.XPPCD)
    OB1REC.XPPCD = OB0EM001.XPPCD;
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end

   /* move picking code to header*/

  if (OB0EM001.XPKCD != OB1REC.XPKCD)
    OB1REC.XPKCD = OB0EM001.XPKCD;
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end

   /* move pack code to header*/

  if (OB0EM001.XPACD != OB1REC.XPACD)
    OB0ES-CHK-PREPACK(); /* updt prepack if exists*/
    OB1REC.XPACD = OB0EM001.XPACD;
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end

   /* move allow shading flg to header*/

  if (OB0EM001.OP1ASHDF != OB1REC.OP1ASHDF)
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.OP1ASHDF = OB0EM001.OP1ASHDF;
  end

   /* move expedite flag to header*/

  if (OB0EM001.OP1EXPDF != OB1REC.OP1EXPDF)
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.OP1EXPDF = OB0EM001.OP1EXPDF;
  end

   /* move allow cancel flag to header*/

  if (OB0EM001.OP1ACNLF != OB1REC.OP1ACNLF)
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.OP1ACNLF = OB0EM001.OP1ACNLF;
  end

   /* move carrier code to header*/

  if (OB0EM001.TF1CARCD != OB1REC.TF1CARCD)
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.TF1CARCD = OB0EM001.TF1CARCD;
  end

   /* move invoive as of date to header*/

  OBWREC.OBWDT6 = OB0EM001.OB0EMIDT;
  XSOBDMC();

  if (OBWREC.OBWDT8 != OB1REC.OP1IVADT)
    OB1REC.OP1IVADT = OBWREC.OBWDT8;
    OB1REC.OP1ORADT = XX0XW01.XX0XWDAT;
    OB1REC.OP1OSRID = OB0EW01.OB0EWREP;
    OB0EW01.OB0EWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
  end

   /* move ship with order number*/

  if (OB0EM001.OP1SWORD != OB1REC.OP1SWORD)
    OB0EW01.OB0EWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.OP1SWORD = OB0EM001.OP1SWORD;
  end

   /* move vendor authorization required flag to header*/

  if (OB0EM001.KUCVNDFL != OB1REC.KUCVNDFL)
    OB0EW01.OB0EWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.KUCVNDFL = OB0EM001.KUCVNDFL;
  end

   /* if vendor auth number changed move current date to header*/

  if (OB0EM001.OP1VAUNB != OB1REC.OP1VAUNB)
    OB0EW01.OB0EWUPD = "Y";
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.OP1VAUNB = OB0EM001.OP1VAUNB;
    OB1REC.OP1VAUDT = XX0XW01.XX0XWDAT;
  end

  if (OB0EM001.KUNMAPCT != OB1REC.KUNMAPCT) /* min alloc pct*/
    OB0EW01.OB0EWUPD = "Y"; /* set update flag*/
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* header edit*/
    OB1REC.KUNMAPCT = OB0EM001.KUNMAPCT;
  end

  OB1REC.YOBCD = "NC";


end // end OB0ES41

// UPDATE HEADER
Function OB0ES42()

  OB1REC.ZZZCHGDT = OBWREC.ZZZCHGDT;
  OB1REC.ZZZCHGTM = OBWREC.ZZZCHGTM;

  set OBFREC empty;
  set SQLCA empty;

  OBFREC.OBFTASK = "U ";

  call "IO5160" (OBFREC, SQLCA, OB1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
      /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OBWREC.CAMSG = "THE ORDER HAS BEEN MODIFIED BY ANOTHER SERVICE REP";
      XSOBP00();
    else
      TA1REC.TA1DBASE = "DORDB   "; /* data base name*/
      TA1REC.TA1TBLVU = "VOBHDR01"; /* table view*/
      TA1REC.TA1LOCAT[1] = "U       "; /* calling option*/
      TA1REC.TA1LOCAT[2] = "IO5160  "; /* i/omod*/
      TA1REC.TA1LOCAT[3] = "OB0ES42 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "        "; /* statement group*/
      if (SQLCA.VAGen_SQLCODE == -911)
        XSOBS04();
      else
        XSOBEDC();
      end
    end
  end

end // end OB0ES42

// UPDATE TEMP STORAGE OBAREC
Function OB0ES43()

  XSOBT1R(); /* read temp storage*/

   /* update temp storage*/

  OBAREC.OBAMSEL[OBWTSF1S] = "U";

  XSOBT1U(); /* update temp storage*/

end // end OB0ES43

// Edit pfkeys for OB0E
Function OB0ESPF()

  COMMAREA.CAUSERA = OBWREC.OBWGROUP;


  if (converseVar.eventKey is pf1)
    XSOBP01();
    OB0EM001.CAMSG = OBWREC.OBWHELP; /* to display msg if no help*/
  end

  if (converseVar.eventKey is pf3)
    XSOBP03();
  end

  if (converseVar.eventKey is pf4)
    XSOBP04();
  end

  if (converseVar.eventKey is pf6)
    XSOBP06();
  end

  if (converseVar.eventKey is pf9)
    XSOBP09();
  end

  if (converseVar.eventKey is pf12)
    OBWREC.OBW-EDIT-FUNCTION = "2"; /* HEADER EDIT*/
    XSOBS-ONLINE-EDIT();
  end

  if (converseVar.eventKey is pf13)
    XSOBP13();
  end

  if (converseVar.eventKey is pf15)
    XSOBP15();
  end

  if (converseVar.eventKey is pf16)
    XSOBP16();
  end

  if (converseVar.eventKey is pf17)
    XSOBP17();
  end

  if (converseVar.eventKey is pf18)
    XSOBP18();
  end

  if (converseVar.eventKey is pf19)
    XSOBP19();
  end


  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf1
   || converseVar.eventKey is pf12)
     /* next sentence*/
  else
    converseLib.validationFailed(1); /* invalid pf key*/
    OBWREC.OBWERRFL = "Y"; /* set 'OB' error flag*/
  end


  if (converseVar.eventKey is enter
   && OBWREC.OBWERRFL == "N")
    if (OB0EW01.OB0EWUPD == "Y")
      XSOBP00();
    else
      XSOBP09();
    end
  end



end // end OB0ESPF

Record OB0EW01 type basicRecord
  10 OB0EWUPD OB0EWUPD ; 
  10 OB0EWREP OB0EWREP ; 
end // end OB0EW01

// save service rep
DataItem OB0EWREP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update ob1rec flag
DataItem OB0EWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

