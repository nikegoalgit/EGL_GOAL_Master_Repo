package ka0m;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.*;
//*** PROGRAM=KA0M ****
// this is the main 'customer' menu. all processing in the
// customer 'sub'-system is controled through this menu.
// ************************************************************
//  date    int              comments
// ------------------------------------------------------------
// 121587   clt   ka0m010    fixed fastpath
// 111188   jbw              checked for adding noncsp option
// 111188   jbw              added xssegtr logic
// 012489   clt   ka0mt      changed ka0mt table
// 041191 twatso  ka0mw01    increased dept to 4 rather than 2
// 012992 CHELLM  KA0M010    Initialize KA0MW01 before moving
//                           Fastpath data to it.
// 100193 CHELLM             CSP 4.1 Conversion.
// 120293 CHELLM             Correct dept field screen attrb.
//                            changed from cha to num.
// *********************
Program KA0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KA0MW01 KA0MW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KA0MT {deleteAfterUse = yes}; // table
  use KA0MM.KA0MM020 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KA0M010: KA0M010();
     /* *************************************************************/
     /* *****          f  l  o  w      s  t  a  g  e           ******/
     /* *************************************************************/


    goto KA0M020; /* proceed to next process*/


     /* *************************************************************/
     /* *****   e  n  d       f  l  o  w       s  t  a  g  e   ******/
     /* *************************************************************/
    KA0M020: KA0M020();
    goto KA0M020;
  end // end main
end // end KA0M

// initialize
Function KA0M010()


   /* *************************************************************/
   /* *****     i n i t i a l i z e    m e n u    a p p      ******/
   /* *************************************************************/


  XSENTRY();

  XSSEGTR(); /* 11/88 jw - set segmented trans id*/

  set KA0MW01 empty;

  if (COMMAREA.CAITEM != " ")
    KA0MW01.KA0MWKEY = COMMAREA.CAITEM;
  else
    KA0MW01.KA0MWGRP = COMMAREA.CAUSERA;
  end

  COMMAREA.CAITEM = " ";

  if (KA0MW01.KA0MWCID-CHAR is numeric)
    KA0MM020.KUCCOID = KA0MW01.KA0MWCID;
  else
    KA0MM020.KUCCOID = 0;
  end
  if (KA0MW01.KA0MWSID-CHAR is numeric)
    KA0MM020.KUMSTRID = KA0MW01.KA0MWSID;
  else
    KA0MM020.KUMSTRID = 0;
  end
  if (KA0MW01.KA0MWDID-CHAR is numeric)
    KA0MM020.XNXCD = KA0MW01.KA0MWDID;
  else
    KA0MM020.XNXCD = 0;
  end
  KA0MM020.XGPCD = KA0MW01.KA0MWGID;
  if (KA0MW01.KA0MWERR-CHAR is numeric)
    if (KA0MW01.KA0MWERR == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(KA0MW01.KA0MWERR);
    end
  else
    converseLib.validationFailed(0);
  end
  KA0MM020.KA0MMPNM = "KA0M020 "; /* move proces name to map*/
  KA0MM020.KA0MMNM = "KA0MM020"; /* move map name to map*/
  KA0MM020.KA0MMDT = VGVar.currentShortGregorianDate; /* move date to map*/
  KA0MW01.KA0MWNDX = 01; /* initialize subscript to 1*/
  while (KA0MW01.KA0MWNDX <= 20 /* format menu from table*/
                             
   && KA0MT.KA0MTOCD[KA0MWNDX] != 99)
    KA0MM020.KA0MTOCD[KA0MWNDX] = KA0MT.KA0MTOCD[KA0MWNDX];
    KA0MM020.KA0MTCDD[KA0MWNDX] = KA0MT.KA0MTCDD[KA0MWNDX];

    KA0MWNDX = KA0MWNDX + 1; /* increment subscript*/
  end /* end of 'while'*/
  if (KA0MWNDX <= 10) /* if no second column*/
    set KA0MM020.KA0MMHD1 skip, invisible; /* remove second column header*/
    set KA0MM020.KA0MMHD2 skip, invisible; /* remove second column header*/
  end /* end of 'if'*/





end // end KA0M010

Function KA0M020()



  converse KA0MM020 ;



      /* clear message fields*/

  KA0MM020.VAGen_EZEMSG = " "; /* clear err msg*/
  KA0MM020.KA0MMMSG = " "; /* clear err msg*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - abort*/
        /* pf1 - transfer to help application*/
        /* pf3 - transfer to next level up application*/
        /* pf4 - transfer to master menu application*/

   /* *************************************************************/
   /* *****                   new code                       ******/
   /* *************************************************************/
  KA0MW01.KA0MWCID = KA0MM020.KUCCOID;
  KA0MW01.KA0MWSID = KA0MM020.KUMSTRID;
  KA0MW01.KA0MWDID = KA0MM020.XNXCD;
  KA0MW01.KA0MWGID = KA0MM020.XGPCD;
  KA0MW01.KA0MWXLE = KA0MM020.XLECD;
  KA0MW01.KA0MMOCP = KA0MM020.KA0MMOCP;
   /* *************************************************************/
   /* *****             end of new code                       *****/
   /* *************************************************************/
  if (converseVar.eventKey is enter)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pa2) /* check for system exit*/
      exit program;
    else
      if (converseVar.eventKey is pf1) /* check for system help*/
        XSPF1(); /* help facility*/
        KA0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
        COMMAREA.CATOAP = " "; /* clear app*/
        exit stack;
      else
        if (converseVar.eventKey is pf3) /* check for master menu level*/
          COMMAREA.CATOAP = "KU0M";
          XSEXIT();
          KA0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
          COMMAREA.CATOAP = " "; /* clear app*/
          exit stack;
        else
          if (converseVar.eventKey is pf4) /* check for master menu*/
            XSPF4(); /* invoke master menu request*/
            KA0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
            COMMAREA.CATOAP = " "; /* clear app*/
            exit stack;
          else
            KA0MM020.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY";
            exit stack;
          end
        end
      end
    end
  end


      /* reset map attributes*/

  set KA0MM020.KA0MMSEL cursor, normal;
  set KA0MM020.KA0MMOPT normal;
  set KA0MM020.KA0MMITM normal;


      /* save next item if entered*/

  if (KA0MM020.KA0MMITM is modified) /* has field been changed?*/
    COMMAREA.CAITEM = KA0MM020.KA0MMITM; /* save reqstd item*/
  end


      /* process selected application*/

  if (KA0MM020.KA0MMSEL == 0) /* null?*/
      /* ** next sentence ** ignore field ***/
  else
    if (KA0MM020.KA0MMSEL in KA0MT.KA0MTOCD)
      COMMAREA.CATOAP = KA0MT.KA0MTTAP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0) /* test for not found in table*/
      KA0MM020.VAGen_EZEMSG = "INVALID APPLICATION SELECTED - REENTER";
      set KA0MM020.KA0MMSEL modified, bold; /* field error*/
      exit stack; /* branch to flow*/
    end
  end


      /* if no application was selected and fast path was not*/
      /* entered, then ask user to select an application*/

  if (KA0MM020.KA0MMSEL <= 0 /* if no selection then tell user*/
   && KA0MM020.KA0MMOPT <= " ")
    KA0MM020.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    exit stack; /* branch to flow*/
  end


      /* if application selected and fast path entered,*/
      /* then ask user to erase one*/

  if (KA0MM020.KA0MMSEL > 0 /* if both selected then tell user*/
   && KA0MM020.KA0MMOPT > " ")
    set KA0MM020.KA0MMSEL modified, bold; /* field error*/
    set KA0MM020.KA0MMOPT modified, bold; /* field error*/
    KA0MM020.KA0MMMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
    KA0MM020.VAGen_EZEMSG = "PLEASE ERASE ONE";
    COMMAREA.CATOAP = " "; /* clear appl*/
    exit stack; /* branch to flow*/
  end


      /* all edits are good at this point*/

      /* if an applicaton was not selected and the fast*/
      /* path was entered, then use the fast path*/

  if (COMMAREA.CATOAP <= " ") /* if appl not selected*/
    COMMAREA.CATOAP = KA0MM020.KA0MMOPT; /* set application*/
  end


      /* all is good; check for transfer*/


  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP > " ") /* transfer to appl?*/
      COMMAREA.CAUSERA = KA0MW01.KA0MWGRP;
      XSEXIT(); /* pass control to exit routine*/
      KA0MM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      if (KA0MM020.KA0MMOPT > " ") /* was appl entered*/
        set KA0MM020.KA0MMOPT cursor, modified, bold; /* yes, set option*/
        exit stack;
      else
        set KA0MM020.KA0MMSEL modified, bold; /* set select*/
        exit stack;
      end
    end
  end



end // end KA0M020

//*** RECORD=KA0MW01 ****
// this is the working storage for the csp application ku0a
// ***********************************************************
// *              MAINTENANCE LOG                            *
// ***********************************************************
// 
//   6/22/93   DLEGG    Added character redefinitions of
//                      numeric fields.
// ***********************
Record KA0MW01 type basicRecord
  5 KA0MWNDX KA0MWNDX ; 
  5 KA0MWGRP KA0MWGRP ; 
    7 KA0MWKEY KA0MWKEY ; 
      10 KA0MWCID KA0MWCID ; 
        15 KA0MWCID-CHAR KA0MWCID-CHAR ; 
      10 KA0MWSID KA0MWSID ; 
        15 KA0MWSID-CHAR KA0MWSID-CHAR ; 
      10 KA0MWDID KA0MWDID ; 
        15 KA0MWDID-CHAR KA0MWDID-CHAR ; 
      10 KA0MWGID KA0MWGID ; 
      10 KA0MWXLE KA0MWXLE ; 
      10 KA0MMOCP KA0MMOCP ; 
        15 KA0MMOCP-CHAR KA0MMOCP-CHAR ; 
    7 KA0MWERR KA0MWERR ; 
      15 KA0MWERR-CHAR KA0MWERR-CHAR ; 
end // end KA0MW01

// old company id
DataItem KA0MMOCP num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KA0MMOCP-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company id
DataItem KA0MWCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KA0MWCID-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dept id
DataItem KA0MWDID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KA0MWDID-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezemno error number
DataItem KA0MWERR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KA0MWERR-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gen prod class code
DataItem KA0MWGID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group name
DataItem KA0MWGRP char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer key
DataItem KA0MWKEY char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table index
DataItem KA0MWNDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// store id
DataItem KA0MWSID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KA0MWSID-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// legal entity cd
DataItem KA0MWXLE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

