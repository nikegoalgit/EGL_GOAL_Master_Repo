package ku0x;

import corpcom5.*;
import KU0X.KU0X010;
import KU0X.KU0X020;
import KU0X.KU0X030;
import KU0X.KU0XT;
import KU0X.KU0XW01;
import KU0X.KU0XWADX;
import KU0X.KU0XWBDX;
import ku.common.KU0XW10;
import ku.common.KU0XW30;
//*** PROGRAM=KU0X ****
// this application will accept two parameters, the first is
// 30 bytes of character data which will be compressed into
// the second 10 byte character parameter which is passed back
// to the calling application. the compress consists of
// removing all blanks and puncuation.
// ;
// 11/18/88   jbw checked for adding noncsp opt to calls
// 11/18/88   jbw xssegtr not used in this application
// 09/26/89 dsalz fix bug that was not clearing the last char
//                on the short name.
// 10/01/93 CHELLM CSP 4.1 Conversion.
// *********************
Program KU0X type basicProgram //VAGen Info - called batch program
  (
   KU0XW30 KU0XW30, // record
   KU0XW10 KU0XW10 // record
  )
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "CU00"
  }

  // Data Declarations
  KU0XW01 KU0XW01 { initialized = yes }; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KU0XT {deleteAfterUse = yes}; // table

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KU0X010: KU0X010();
    goto KU0X020;
    KU0X020: KU0X020();
    goto KU0X030;
    KU0X030: KU0X030();
    ;
     /* *************************************************************/
     /* *****         n o    f l o w    s t a g e              ******/
     /* *************************************************************/
    ;
  end // end main
end // end KU0X

// compress first time thru
Function KU0X010()
  ;
  ;
   /* *************************************************************/
   /* *****  f i r s t    t i m e    t h r u    s t u f f    ******/
   /* *************************************************************/
  ;
  ;
  KU0XW01.KU0XWADX = 1;
  KU0XW01.KU0XWBDX = 1;
  ;
  ;
  ;
  ;
  ;
  ;
end // end KU0X010

// compress 30 chars to 10
Function KU0X020()
  ;
  ;
   /* *************************************************************/
   /* *****          c o m p r e s s    f i e l d s          ******/
   /* *************************************************************/
  ;
  ;
  while (KU0XW01.KU0XWBDX <= 10
   && KU0XW01.KU0XWADX <= 30)
    if (KU0XW30.KU0XWCHA[KU0XWADX] in KU0XT.KU0XWCHA)
      KU0XW10.KU0XWCHA[KU0XWBDX] = KU0XT.KU0XTFIL[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex != 0)
      KU0XW01.KU0XWBDX = KU0XW01.KU0XWBDX + 1;
    else
      /* next sentence*/
    end
    KU0XW01.KU0XWADX = KU0XW01.KU0XWADX + 1;
  end
  ;
   /* IF KU0XWBDX LT 10; removed 9/26/89 to space out last char*/
  while (KU0XW01.KU0XWBDX <= 10)
    KU0XW10.KU0XWCHA[KU0XWBDX] = " ";
    KU0XW01.KU0XWBDX = KU0XW01.KU0XWBDX + 1;
  end
   /* END ;*/
  ;
  ;
  ;
  ;
  ;
end // end KU0X020

// exit application
Function KU0X030()
  ;
  ;
   /* *************************************************************/
   /* *****        e x i t    a p p l i c a t i o n          ******/
   /* *************************************************************/
  ;
  ;
  exit program;
  ;
  ;
  ;
  ;
  ;
end // end KU0X030

//*** RECORD=KU0XW01 ****
// this is the working storage record for the compress
// application.
// ***********************
Record KU0XW01 type basicRecord
  10 KU0XWADX KU0XWADX ; 
  10 KU0XWBDX KU0XWBDX ; 
end // end KU0XW01

// index
DataItem KU0XWADX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem KU0XWBDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

