package rd0m;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom5.COMMAREA;
import rd.common.RDWREC;
Program RD0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  RD0MW1 RD0MW1; // record
  RDWREC RDWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use RD0MM.RD0MM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    RD0M001: RD0M001();


         /* *** branch to converse*/

    goto RD0M002;


    RD0M002: RD0M002();


         /* *** return to converse*/

    goto RD0M002;

  end // end main
end // end RD0M

// first time thru logic
Function RD0M001()


     /* *** appl entry validation*/

   /* XSTEMP;***temp fix to bypass security system*/
  XSENTRY();

end // end RD0M001

// report dist screen
Function RD0M002()


       /* ***initialize screen variables*/

  RD0MM001.RD0MMDTE = VGVar.currentShortGregorianDate;
  RD0MM001.RD0MMPRC = "RD0M002";
  RD0MM001.CATOAP = " ";
  RD0MM001.CAITEM = " ";

  RDWREC.RDWERFLG = "N";
  RDWREC.RDWUPFLG = "N";

  converseVar.segmentedMode = 1;

  converse RD0MM001 ;


  RD0MM001.VAGen_EZEMSG = " ";
  RD0MM001.RD0MMMSG = " ";

       /* *** process keys*/

  RD0MS10();

       /* *** if no errors, process menu option*/

  if (RDWREC.RDWERFLG != "Y")
    RD0MS12();
  end

       /* *** if errors, set map fields modified*/

  if (RDWREC.RDWERFLG == "Y")
    RD0MS15();
  end


end // end RD0M002

// process keys
Function RD0MS10()


       /* *** process the KEY pressed*/


  if (converseVar.eventKey is pf1) /* *** process PF1 key*/
    XSPF1();
    RD0MM001.RD0MMMSG = COMMAREA.CAMSG;
    set RD0MM001 alarm;
    RDWREC.RDWERFLG = "Y";
    return;
  end

  if (converseVar.eventKey is pf3) /* *** process PF3 key*/
    COMMAREA.CATOAP = "MN0N";
    XSEXIT();
    RD0MM001.RD0MMMSG = COMMAREA.CAMSG;
    set RD0MM001 alarm;
    RDWREC.RDWERFLG = "Y";
    return;
  end

  if (converseVar.eventKey is pf4) /* *** process PF4 key*/
    XSPF4();
    RD0MM001.RD0MMMSG = COMMAREA.CAMSG;
    set RD0MM001 alarm;
    RDWREC.RDWERFLG = "Y";
    return;
  end

  if (converseVar.eventKey is pa2) /* *** process PA2 key*/
    COMMAREA.CATOAP = "RD0M";
    XSEXIT();
    RD0MM001.RD0MMMSG = COMMAREA.CAMSG;
    set RD0MM001 alarm;
    RDWREC.RDWERFLG = "Y";
    return;
  end

  if (converseVar.eventKey is enter) /* *** process ENTER key*/
       /* next sentence*/
  else
    RD0MM001.RD0MMMSG = "THAT KEY IS NOT SUPPORTED";
    set RD0MM001 alarm;
    RDWREC.RDWERFLG = "Y";
    return;
  end


  if (RD0MM001.CATOAP != " ")
    RD0MS11();
    if (RDWREC.RDWUPFLG == "Y")
      RD0MM001.RD0MMMSG = "CANNOT MIX OPTION WITH MAP DATA";
      set RD0MM001 alarm;
      RDWREC.RDWERFLG = "Y";
      return;
    else
      move RD0MM001 to COMMAREA withV60Compat;
      XSEXIT();
      RD0MM001.RD0MMMSG = COMMAREA.CAMSG;
      set RD0MM001 alarm;
      RDWREC.RDWERFLG = "Y";
      return;
    end
  end

  if (RD0MM001.RD0MMOPT is modified)
    RD0MS1A();
    return;
  else
    RD0MM001.RD0MMMSG = "ENTER ONE OF THE ABOVE OPTIONS";
    set RD0MM001.RD0MMOPT cursor, bold;
    set RD0MM001 alarm;
    RDWREC.RDWERFLG = "Y";
    return;
  end


end // end RD0MS10

// set update flag
Function RD0MS11()


       /* *** set update flag*/


  if (RD0MM001.RD0MMOPT is modified)
    RDWREC.RDWUPFLG = "Y";
    return;
  end


end // end RD0MS11

// transfer to application
Function RD0MS12()


     /* *** transfer to application*/

  if (RD0MM001.RD0MMOPT == 1)
    COMMAREA.CATOAP = "RD0A";
  else
    if (RD0MM001.RD0MMOPT == 2)
      COMMAREA.CATOAP = "RD0B";
    else
      if (RD0MM001.RD0MMOPT == 3)
        COMMAREA.CATOAP = "RD0C";
      else
        COMMAREA.CATOAP = "RD0D";
      end
    end
  end

  XSEXIT();
  RD0MM001.RD0MMMSG = COMMAREA.CAMSG;
  set RD0MM001 alarm;
  RDWREC.RDWERFLG = "Y";

  return;

end // end RD0MS12

// set map fields modified
Function RD0MS15()


       /* ***  set map fields as modified*/

  if (RD0MM001.RD0MMOPT is modified)
    set RD0MM001.RD0MMOPT modified;
    return;
  end


end // end RD0MS15

// validate menu option
Function RD0MS1A()


       /* *** process menu option*/


  if (RD0MM001.RD0MMOPT > 0
   && RD0MM001.RD0MMOPT < 5)
    return;
  end

  RD0MM001.RD0MMMSG = "ENTER ONE OF THE ABOVE OPTIONS";
  set RD0MM001.RD0MMOPT cursor, bold;
  set RD0MM001 alarm;
  RDWREC.RDWERFLG = "Y";

  return;


end // end RD0MS1A

Record RD0MW1 type basicRecord
end // end RD0MW1

