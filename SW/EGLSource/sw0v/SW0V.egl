package sw0v;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import pc.common.*;
import sw.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=SW0V ****
// * **********************************************************
// *
// *        Program:      SW0V (CSP Sub-program)
// *        Date Written: 11/29/90
// *        By:           J. Campbell
// *
// * **********************************************************
// *
// *  Maintaince Log
// *
// *  Change #   Pgmr   Change
// *  --------   ----   ---------------------------------------
// *
// *
// *
// * **********************************************************
// *********************
Program SW0V type textUIProgram //VAGen Info - called text program
  (
   SQLCA SQLCA, // record
   SWVREC SWVREC // record
  )
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  FY1REC FY1REC; // record
  PC3REC PC3REC; // record
  PC4REC PC4REC; // record
  PCFREC PCFREC; // record
  PCYREC PCYREC; // record
  SW0VW00 SW0VW00; // record
  TA1REC TA1REC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  //  use  SW0VM // VAGen Info - unused formGroup    {
  //    pfKeyEquate = no
  //  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    SW0V000: SW0V000();
     /* ------------------------------------------------------------*/
     /* Return to Calling application*/
     /* ------------------------------------------------------------*/
    exit program;
     /* ------------------------------------------------------------*/
  end // end main
end // end SW0V

// main process
Function SW0V000()
   /* =========================================================*/
   /* PURPOSE/SYNOPSIS:*/
      /* This module is called by several functions in the*/
      /* Memphis Apparel/Stock Locate system.  Using the*/
      /* function code and either GPC/PO Number or PO ID/Type,*/
      /* this routine converts one to the other. It also sets*/
      /* a flag to indicate when multiple PO Numbers exist for*/
      /* a single PO ID.*/
   /* ---------------------------------------------------------*/
   /* HOW TO USE THIS UTILITY PROGRAM*/

      /* Use statement group XSSLS10to call this utility*/
      /* and for a complete description of call's.*/

   /* ============================================================*/

   /* ------------------------------------------------------------*/
   /* initialize all records used by this application*/
   /* ------------------------------------------------------------*/

  set SW0VW00 empty;
  set PC3REC empty;
  set PCYREC empty;

  SWVREC.SWVWRTN = 0; /* Default: '00' Return Code*/
                                   /* (Successful)*/
  SWVREC.SWVWPOF = "N"; /* Default: 'N'  for Multipe POs Flag*/

  if (SWVREC.SWVWFNC == "T1")
    /* ------------------------------------------------------------*/
      /* Convert PO ID/Type to its elements(gpc:02 only)*/
    /* -----------------------------------------------------------*/
    SW0V100();
  else
    if (SWVREC.SWVWFNC == "T2")
      /* ------------------------------------------------------------*/
       /* Else, Convert elements of PO ID/Type into PO ID/Type*/
      /* -----------------------------------------------------------*/
      SW0V200();
    else
      /* ------------------------------------------------------------*/
       /* Else, If calling application has requested a GPC/PO Number*/
       /* be converted to PO ID/Type,*/
      /* -----------------------------------------------------------*/
      if (SWVREC.SWVWFNC == "ID") /* if id from number*/
        SW0V300(); /* convert PO #/GPC ---> PO ID/Type*/
      else
        /* -----------------------------------------------------------*/
         /* Else, if the calling application has requested PO ID/Type*/
         /* be converted to PO Number and GPC,*/
        /* -----------------------------------------------------------*/
        if (SWVREC.SWVWFNC == "NO") /* if number to id*/
          SW0V400(); /* convert PO ID/Type ---> PO #/GPC*/
        else
          /* ------------------------------------------------------------*/
           /* Invalid function requested*/
          /* ------------------------------------------------------------*/
          SWVREC.SWVWRTN = "01"; /* return code for Invalid Function*/
        end
      end
    end
  end


end // end SW0V000

// convert PO ID/Type to elements
Function SW0V100()
   /* ------------------------------------------------------------*/

     /* Convert POID/Type into its elements*/

     /* Verify:  1) Xgpcd = '02'.*/
              /* 2) Factory code passed.*/
              /* 3) Delivery month passed and valid.*/
              /* 4) Month passed and valid.*/
              /* 5) Year passed and valid.*/

   /* ------------------------------------------------------------*/


  if (SWVREC.XGPCD != "02")
    SWVREC.SWVWRTN = 2;
    return;
  else
    if (SWVREC.SWVWPOID == " ")
      SWVREC.SWVWRTN = 3;
      return;
    end
  end


   /* ------------------------------------------------------------*/
   /* FACTORY CODE CHECK--REQUIRED*/
   /* ------------------------------------------------------------*/

  if (SWVREC.SWVWFCTY == " ") /* Nothing there*/
    SWVREC.SWVWRTN = 8; /* Indicate invalid factory*/
    return;
  end

   /* ------------------------------------------------------------*/
   /* DELIVERY MONTH CHECK--REQUIRED*/
   /* ------------------------------------------------------------*/

  if (SWVREC.SWVWPODM >= "01" /* If valid month entered*/
   && SWVREC.SWVWPODM <= "12")
    /* next sentence*/
  else
    SWVREC.SWVWRTN = 9; /* delivery month1 invalid*/
    return;
  end

   /* ------------------------------------------------------------*/
   /* MONTH CHECK--REQUIRED*/
   /* ------------------------------------------------------------*/

  if (SWVREC.SWVWPOPM >= "01" /* Something there*/
   && SWVREC.SWVWPOPM <= "12")
     /* next sentence*/
  else
    SWVREC.SWVWRTN = 10; /* delivery month2 invalid*/
    return;
  end

   /* ------------------------------------------------------------*/
   /* YEAR CHECK--REQUIRED*/
   /* ------------------------------------------------------------*/

  if (SWVREC.SWVWPOSE >= "00"
   && SWVREC.SWVWPOSE <= "99")
    SW0VW00.SW0VWYY = SWVREC.SWVWPOSE;
    if (SWVREC.SWVWPOSE > "70")
      SW0VW00.SW0VWCC = 19;
    else
      SW0VW00.SW0VWCC = 20;
    end
  else
    SWVREC.SWVWRTN = 11; /* year invalid*/
    return;
  end


  SW0VW00.SW0VWMM = SWVREC.SWVWPOMR;
  SWVREC.PC3POIDT = SW0VW00.SW0VWIDT;
  SWVREC.FY1FCTYC = SWVREC.SWVWFCTY;
end // end SW0V100

// convert elements to PO ID/Type
Function SW0V200()

  if (SWVREC.XGPCD == "02")
    if (SWVREC.PC3POIDT == 0
     || SWVREC.FY1FCTYC == " ")
      SWVREC.SWVWRTN = 4; /* Missing element*/
      return;
    end
  else
    if (SWVREC.PC3POIDT == 0
     || SWVREC.FY1FCTYC == " "
     || SWVREC.PCFSECD == " ")
      SWVREC.SWVWRTN = 4; /* Missing element*/
      return;
    end
  end

  SW0VW00.SW0VWIDT = SWVREC.PC3POIDT;
  SW0VW00.PCFSECD = SWVREC.PCFSECD;
  SW0VW00.FY1FCTYC = SWVREC.FY1FCTYC;
  if (SWVREC.XGPCD == "02")
    SWVREC.SWVWPOSE = SW0VW00.SW0VWYY;
    SWVREC.SWVWPOMR = SW0VW00.SW0VWMM;
    SWVREC.SWVWFCTY = SW0VW00.FY1FCTYC;
  else
    SW0VW00.SW0VWYY1 = SW0VW00.SW0VWSE1;
    SWVREC.SWVWPOSE = SW0VW00.SW0VWYY;
    SWVREC.SWVWPOMR = SW0VW00.SW0VWMM;
    SWVREC.SWVWFCTY = SW0VW00.FY1FCTYC;
  end


end // end SW0V200

// convert PO# to PO/ID
Function SW0V300()

   /* =========================================================*/
   /* PURPOSE/SYNOPSIS:*/
      /* This module is called by sw0v to convert the*/
      /* current PO Number and GPC to a PO ID and Type.*/
   /* =========================================================*/

  set PCYREC empty;
  set PC3REC empty;

  PC3REC.XGPCD = SWVREC.XGPCD; /* gpc*/
  PC3REC.PC3PONBR = SWVREC.PC3PONBR; /* po number*/
  PCYREC.PCYFUNC = "S "; /* select unique*/

  SW0VS01(); /* select unique po hdr (pcyrec)*/

  if (SWVREC.SWVWRTN != 0) /* If error in db2 call*/
    return; /* return to calling application*/
  else
    if (SQLCA.VAGen_SQLCODE == -811)
      SQLCA.VAGen_SQLCODE = 0;
      SWVREC.SWVWPOF = "Y";
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* if no po nbr or not found*/
        SQLCA.VAGen_SQLCODE = 0;
        SWVREC.SWVWRTN = 05; /* set return code*/
        return; /* return to calling application*/
      end
    end
  end

  SWVREC.PC3POIDT = PC3REC.PC3POIDT;
  SWVREC.PCFSECD = PC3REC.PCFSECD;
  SWVREC.FY1FCTYC = PC3REC.FY1FCTYC;
  SWVREC.PC4ORTYP = PC3REC.PC4ORTYP;

  if (PC3REC.PC3POIDT == 0) /* no po date*/
    /* ------------------------------------------------------------*/
     /* show spaces when po id equals 0 ... no po date*/
    /* ------------------------------------------------------------*/
    SWVREC.SWVWPOID = " "; /* po month range*/
    SWVREC.SWVWRTN = "06"; /* return code*/
    return;
  else
    /* ------------------------------------------------------------*/
      /* * * *   format the po id/type/nbr depending on gpc   * * **/
    /* ------------------------------------------------------------*/
    if (SWVREC.XGPCD == "03") /* apparel*/
      SW0VW00.SW0VWIDT = PC3REC.PC3POIDT;
      SW0VW00.PCFSECD = PC3REC.PCFSECD;
      SW0VW00.SW0VWSE2 = SW0VW00.SW0VWYY2;
      SWVREC.SWVWPOSE = SW0VW00.PCFSECD;
      SWVREC.SWVWPOMR = SW0VW00.SW0VWMM;
      SWVREC.SWVWFCTY = PC3REC.FY1FCTYC;
    else
      if (SWVREC.XGPCD == "02") /* footwear*/
        SW0VW00.SW0VWIDT = PC3REC.PC3POIDT; /* WORK MO RNG AREA*/
        SWVREC.SWVWPOSE = SW0VW00.SW0VWYY; /* format current po id*/
        SWVREC.SWVWPOMR = SW0VW00.SW0VWMM;
        SWVREC.SWVWFCTY = PC3REC.FY1FCTYC;

      else /* if not footwear (gpc = 02) and not apparel (gpc = 03)*/
        SWVREC.SWVWRTN = "02"; /* return code for invalid gpc*/
        return; /* return to calling application*/
      end

    end
  end

   /* ------------------------------------------------------------*/
   /* remove leading 0s from po nbr to display in char map field*/
   /* ------------------------------------------------------------*/

  SW0VW00.SW0VWPNB = SWVREC.PC3PONBR; /* unpack po nbr*/
  SW0VW00.SW0VWIDX = 1; /* initialize idx*/
  while (SW0VW00.SW0VWIDX <= 9 /* chars to search*/
   && SW0VW00.SW0VWCHR[SW0VWIDX] == "0") /* leading 0*/
    SW0VW00.SW0VWCHR[SW0VWIDX] = " "; /* replace 0 with space*/
    SW0VW00.SW0VWIDX = SW0VW00.SW0VWIDX + 1; /* increment idx*/
  end
  SWVREC.SWVWPODF = SW0VW00.SW0VWPFF; /* format po nbr*/


end // end SW0V300

// Convert PO ID/Type to PO#
Function SW0V400()
   /* =========================================================*/
   /* PURPOSE/SYNOPSIS:*/
      /* This module is called by sw0v to convert the*/
      /* current PO Number and GPC to a PO ID and Type.*/
   /* =========================================================*/

   /* ------------------------------------------------------------*/
     /* VERIFY INCOMING PARAMETERS - EXAMINE EACH PO ID FIELD*/
   /* ------------------------------------------------------------*/
  SW0V410();
  if (SWVREC.SWVWRTN == 0)
    set PCYREC empty;
    set PC3REC empty;

    PC3REC.XGPCD = SWVREC.XGPCD; /* gpc*/
    PC3REC.PC3POIDT = SWVREC.PC3POIDT; /* po number*/
    PC3REC.FY1FCTYC = SWVREC.FY1FCTYC;
    PC3REC.PC4ORTYP = SWVREC.PC4ORTYP;
    PCYREC.PCYFUNC = "SA"; /* select unique*/

    SW0VS01(); /* select unique po hdr (pcyrec)*/

    if (SWVREC.SWVWRTN != 0) /* If error in db2 call*/
      return; /* return to calling application*/
    else
      if (SQLCA.VAGen_SQLCODE == -811)
        SWVREC.SWVWRTN = 20;
        SWVREC.SWVWPOF = "Y";
      else
        if (SQLCA.VAGen_SQLCODE == 100) /* if no po nbr or not found*/
          SQLCA.VAGen_SQLCODE = 0;
          SWVREC.SWVWRTN = 05; /* set return code*/
          return; /* return to calling application*/
        end
      end
    end

    SWVREC.PC3POIDT = PC3REC.PC3POIDT;
    SWVREC.PCFSECD = PC3REC.PCFSECD;
    SWVREC.PC3PONBR = PC3REC.PC3PONBR;

    /* ------------------------------------------------------------*/
     /* remove leading 0s from po nbr to display in char map field*/
    /* ------------------------------------------------------------*/

    SW0VW00.SW0VWPNB = SWVREC.PC3PONBR; /* unpack po nbr*/
    SW0VW00.SW0VWIDX = 1; /* initialize idx*/
    while (SW0VW00.SW0VWIDX <= 9 /* chars to search*/
     && SW0VW00.SW0VWCHR[SW0VWIDX] == "0") /* leading 0*/
      SW0VW00.SW0VWCHR[SW0VWIDX] = " "; /* replace 0 with space*/
      SW0VW00.SW0VWIDX = SW0VW00.SW0VWIDX + 1; /* increment idx*/
    end
    SWVREC.SWVWPODF = SW0VW00.SW0VWPFF; /* format po nbr*/

  end

end // end SW0V400

// Verify incoming data
Function SW0V410()
   /* ------------------------------------------------------------*/

     /* VERIFY INCOMING PARAMETERS - EXAMINE EACH PO ID FIELD*/

     /* Verify:  1) Factory code passed and correct.*/
              /* 2) Delivery month passed and correct.*/
              /* 3) Month passed and correct.*/
              /* 4) Year passed and correct.*/

   /* ------------------------------------------------------------*/


  if (SWVREC.PC4ORTYP != " " /* order type*/
   || SWVREC.XGPCD != " "    /* gen prod class cd*/
   || SWVREC.SWVWPOID != " ") /* and po id sent*/

    /* ------------------------------------------------------------*/
     /* CHECK pc4ortyp*/
    /* ------------------------------------------------------------*/

    if (SWVREC.PC4ORTYP == "  ") /* Nothing there*/
      SWVREC.SWVWRTN = 7; /* missing pc4ortyp*/
      return;
    end

    /* ------------------------------------------------------------*/
     /* CHECK xgpcd*/
    /* ------------------------------------------------------------*/

    if (SWVREC.XGPCD == "  ") /* Nothing there*/
      SWVREC.SWVWRTN = 2; /* missing gpc code*/
      return;
    else
      if (SWVREC.XGPCD != "02") /* not footwear*/
        SWVREC.SWVWRTN = 2; /* option not valid for gpc*/
        return;
      end
    end

    /* ------------------------------------------------------------*/
     /* CHECK PO TYPE*/
    /* ------------------------------------------------------------*/

    if (SWVREC.SWVWPOID == "  ") /* Nothing there*/
      SWVREC.SWVWRTN = 3; /* missing PO ID/Type*/
      return;
    end

    /* ------------------------------------------------------------*/
     /* FACTORY CODE CHECK--REQUIRED*/
    /* ------------------------------------------------------------*/

    if (SWVREC.SWVWFCTY == " ") /* Nothing there*/
      SWVREC.SWVWRTN = 8; /* Indicate invalid factory*/
      return;
    end
    SWVREC.FY1FCTYC = SWVREC.SWVWFCTY;

    /* ------------------------------------------------------------*/
     /* DELIVERY MONTH CHECK--REQUIRED*/
    /* ------------------------------------------------------------*/

    if (SWVREC.SWVWPODM >= "01" /* If valid month entered*/
     && SWVREC.SWVWPODM <= "12")
      /* next sentence*/
    else
      SWVREC.SWVWRTN = 9; /* delivery month1 invalid*/
      return;
    end

    /* ------------------------------------------------------------*/
     /* MONTH CHECK--REQUIRED*/
    /* ------------------------------------------------------------*/

    if (SWVREC.SWVWPOPM >= "01" /* Something there*/
     && SWVREC.SWVWPOPM <= "12")
       /* next sentence*/
    else
      SWVREC.SWVWRTN = 10; /* delivery month2 invalid*/
      return;
    end
    SW0VW00.SW0VWMM = SWVREC.SWVWPOMR;

    /* ------------------------------------------------------------*/
     /* YEAR CHECK--REQUIRED*/
    /* ------------------------------------------------------------*/

    if (SWVREC.SWVWPOSE >= "00"
     && SWVREC.SWVWPOSE <= "99")
      SW0VW00.SW0VWYY = SWVREC.SWVWPOSE;
      if (SWVREC.SWVWPOSE > "70")
        SW0VW00.SW0VWCC = 19;
      else
        SW0VW00.SW0VWCC = 20;
      end
    else
      SWVREC.SWVWRTN = 11; /* year invalid*/
      return;
    end
  end

  SWVREC.PC3POIDT = SW0VW00.SW0VWIDT;


end // end SW0V410

// Select from DPRODC.VPOHDR01
Function SW0VS01()
   /* ------------------------------------------------------------*/
   /* Select a unique row from the SW1REC*/
   /* If any error but not found set return codes and return*/
   /* to the calling application.*/
   /* ------------------------------------------------------------*/


  try
    call "IO3270" (PCYREC, SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good call*/
    if (SQLCA.VAGen_SQLCODE == 0   /* Row found*/
     || SQLCA.VAGen_SQLCODE == 100 /* Row not found*/
     || SQLCA.VAGen_SQLCODE == -811) /* multiple rows found*/
      return; /* Return to previous process*/
    end
  end

  if (sysVar.errorCode == "00000000" /* Good call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    SWVREC.SWVWRTN = "98"; /* Indicate DB2/SQL error*/
  else
    SWVREC.SWVWRTN = "99"; /* Indicate fatal error*/
  end

  exit stack;


end // end SW0VS01

//*** RECORD=SW0VW00 ****
// -------------------XSSLW01------------------
// Called routine working storage.
//     Includes fields accessed by more than
//     one application function:
//         Used by GPC/PO No. --->  PO ID/Type
//         and  by PO/ID Type --->  GPC/PONo.
//         conversion routine.
// --------------------------------------------
// ***********************
Record SW0VW00 type basicRecord
  5 SW0VWGRP SW0VWGRP ; 
    10 * char(17) ; 
      15 SW0VWIDT SW0VWIDT ; 
        20 SW0VWCC SW0VWCC ; 
        20 SW0VWYMM SW0VWYMM ; 
          25 SW0VWYY SW0VWYY ; 
            30 SW0VWYY1 SW0VWYY1 ; 
            30 SW0VWYY2 SW0VWYY2 ; 
          25 SW0VWMM SW0VWMM ; 
      15 PCFSECD PCFSECD ; 
        20 SW0VWSE1 SW0VWSE1 ; 
        20 SW0VWSE2 SW0VWSE2 ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 PC4ORTYP PC4ORTYP ; 
    10 * char(9) ; 
      15 SW0VWPFF SW0VWPFF ; 
        20 SW0VWPNB SW0VWPNB ; 
          25 SW0VWCHR SW0VWCHR [9] ; 
    10 SW0VWIDX SW0VWIDX ; 
end // end SW0VW00

// century
DataItem SW0VWCC num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem SW0VWCHR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sw0vw00 group level
DataItem SW0VWGRP char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PC_PO_ID_MO_RNG
DataItem SW0VWIDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem SW0VWIDX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// prod delivery months
DataItem SW0VWMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// formatted po number
DataItem SW0VWPFF char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// unformatted po number
DataItem SW0VWPNB num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first chr of sesn_cd
DataItem SW0VWSE1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second chr of sesn_cd
DataItem SW0VWSE2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SW0VWYMM char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SW0VWYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// decade
DataItem SW0VWYY1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// year of decade
DataItem SW0VWYY2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

