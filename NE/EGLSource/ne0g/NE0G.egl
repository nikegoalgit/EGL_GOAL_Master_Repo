package ne0g;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPNL001;
import corpcom3.XPNL002;
import corpcom3.XPNL004;
import corpcom3.XPNL005;
import corpcom3.XPXGP01;
import corpcom3.XPXQA01;
import corpcom3.XPXX001;
import corpcom4.XSENTRY;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XATCD;
import corpx1.XAUTBL;
import corpx1.XCLTBL;
import corpx1.XDMTBL;
import corpx1.XGPTBL;
import corpx1.XQATBL;
import ku.common.KUCREC;
import ne.common.*;
import nl.common.NLXREC;
import op.common.OP1REC;
import op.common.OP2REC;
import sy.common.SY1REC;
import sy.common.SY2REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
//*** PROGRAM=NE0G ****
// NE0G - International Sales Cutoff Selection Criteria Entry
//      This application will be used to enter the selection
//   criteria for the editting of accruals, inventory and
//   sales cutoff data. It will edit entries to insure they
//   are valid and all required entries were made. Once the
//   data is correct it will transfer to one of three process
//   applications: 1) NE0E 2) NE0D or 3) NE0C.
// Maintenance
//   Date     User Id  Remarks
// --------   -------  ----------------------------------------
// 02/01/94   JJUDKI   Created.
// 08/03/94   JSHANN   Fixed and installed.
// 10/07/94   ahowar   Moving to prod
// 11/01/94   ahowar   Moving to prod again
// 12/13/94   ahowar   Finally fixed post month being zero from
//                     ne0g. ne0g would rebuild the commarea
//                     from the map when returning to ne0g. The
//                     problem with that is the current post
//                     month is not on the map. Thus causing
//                     0 to be passed. Few other quirks but
//                     was the major one.
// 04/18/95   ahowar   ne0g-120 would edit dorder.vorhdr01 to
//                     verify if a valid order was entered.
//                     What the problem was the order no longer
//                     existed in the dorder database so the
//                     edit would fail causing the order lookup
//                     not to work. I commented out the edit
//                     of if a valid order was entered. This
//                     allows searching for orders on the SCO
//                     system when the no longer exist on the
//                     orders database.
// CONTROL   DATE    NAME  DESCRIPTION OF CHANGE
// ------- -------- ------ ------------------------------------
// Y2KFIX  03/02/98 WSQUIR Y2K MODIFICATIONS MADE TO: NE0GW01,
//                         NE0G-120 & NE0G-130.
// *********************
Program NE0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NE00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  NE0GW01 NE0GW01; // record
  NEWREC NEWREC; // record
  NLXREC NLXREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XAUTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XCLTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XQATBL {deleteAfterUse = yes}; // table
  use NE0GM.NE0GM100, // form
  		NE0GM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NE0G-000: NE0G-000();


    exit program;



  end // end main
end // end NE0G

// Application main logic
Function NE0G-000()
   /* ------------------------------------------------------------*/
      /* This is the "main logic" for the application.*/

      /* xsentry checks to ensure that this application was*/
            /* entered from another csp application.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0G-000";

  NE0G-001(); /* Initialize the application*/

  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/

  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NE0G-050(); /* screen branch control*/
  end

  XSPF4();

end // end NE0G-000

// Initialize application
Function NE0G-001()
   /* ------------------------------------------------------------*/
         /* Initialize the application working storage*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0G-001";

  converseVar.commitOnConverse = 1; /* Force db2 to commit on each screen*/
                                  /* converse*/
  VGVar.handleHardIOErrors = 1; /* Return control to program if hard db2*/
                                  /* error*/

  XSENTRY(); /* Check entry thru main menu*/
  XSSEGTR(); /* Set segmented transaction id*/

  set SQLCA empty; /* Clear out the SQL return record*/

  set ERRSQLCA empty; /* Clear out the "common" error record*/

  set TA1REC empty; /* Clear out the "common" abend record*/

  set NEWREC empty; /* Clear out the "common" working*/
                                  /* storage*/
  set NE0GW01 empty; /* Clear application working storage*/


  NE0GW-01-SL = "N"; /* user security flag*/
  NE0GS-SEC-LVL();

  NE0GW-01-PF9-CNFM-FLAG = "N";
  if (COMMAREA.CAFRMSYS != "NE")
    COMMAREA.CAUSERA = " ";
  end

  NLXREC.NLXEOAF = "N"; /* set end-of-application flag 'no'*/
  NLXREC.NLXERRF = "N"; /* set error-flag to 'no'*/

   /* ------------------------------------------------------*/
    /* Set up working-storage array of screen names*/
   /* ------------------------------------------------------*/

  NLXREC.NLXCSCRN = "NE0GM100"; /* first header*/

  NLXREC.NLXSNAME[1] = "NE0GM100";

   /* **********************************************/
   /* Was this application entered via 'fastpath'?*/
   /* Yes if the item is non-blank.*/
   /* **********************************************/

  if (COMMAREA.CAITEM != " ") /* 'Item' will be non-blank if fastpath*/
    XPNL004(); /* Validate caitem numeric*/
    if (NLXREC.NLXERRF == "Y") /* If error in 'item'*/
      NEWREC.NEW-MSG-NBR = 98; /* Not a valid item*/
      COMMAREA.CATOAP = "NE0A";
      COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
      XPNL002();
    end
    COMMAREA.CATOAP = " "; /* Clear commarea*/
    COMMAREA.CAITEM = " ";
  else
    if (COMMAREA.CAFROMAP == "NE0C"
     || COMMAREA.CAFROMAP == "NE0D"
     || COMMAREA.CAFROMAP == "NE0E")
      NEW-GROUP = COMMAREA.CAUSERA;
    end
  end


end // end NE0G-001

// Screen branch control
Function NE0G-050()
   /* ------------------------------------------------------------*/
      /* Control process the application screen(s)*/

     /* Note that this process is being performed in a*/
     /* "while loop" until the end-of-application flag is set*/
     /* to 'y'.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0G-050"; /* set current process name*/

  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;

  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME)
     /* if current-screen-name is in the screen-array, then set*/
     /* the screen-index*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex;
  end
   /* XSNKS-MAP-MODE;                  /* Get map mode flag*/
  NLXREC.NLXEOSF = "N"; /* Set end-of-screen flag to 'no'*/
  NLXREC.NLXBLDSC = "Y"; /* Set build screen flag to 'yes'*/
  NLXREC.NLXERRF = "N"; /* Clear error flag*/

  if (NLXREC.NLXSCRNX == 1) /* If screen NE0_M100*/
    while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
      NE0G-100();
    end
  end


   /* at this point;*/
       /* if the end-of-application flag (nlxeoaf ) = 'n'*/
         /* the perform will return to the top of NE0G050...*/
       /* else*/
         /* the perform will auto return to NE0G000.*/


end // end NE0G-050

// header screen 1
Function NE0G-100()
   /* ------------------------------------------------------------*/
       /* Process screen NE0GM100*/

     /* note - this process is being performed in a*/
        /* "while loop" from NE0G050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0G-100";

  if (NLXREC.NLXBLDSC == "Y")
    NE0G-101();
    NLXREC.NLXBLDSC = "N";
  end


  converse NE0GM100 ;

  NE0GM100.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";


  NE0G-110(); /* check attention identifier*/

  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0G-120(); /* process entered option*/
  end

  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0G-130(); /* determine next action...*/
  end


end // end NE0G-100

// Build screen
Function NE0G-101()
   /* ***************************************/
   /* Build MAP NE0GM100                 **/
   /* **************************************/


  NLXREC.NLXCPROC = "NE0G101";

  converseLib.clearScreen();
  set NE0GM100 initial;

  if (NE0GW-01-SL == "N")
    set NE0GM100.NE0GM-100-OPTION skip;
    set NE0GM100.KUCCOID skip;
    set NE0GM100.KUMSTRID protect, invisible;
    set NE0GM100.OP1CUOID skip;
    set NE0GM100.OP1NORID skip;
    set NE0GM100.XGPCD skip;
    set NE0GM100.SY1STNBR skip;
    set NE0GM100.SY2CLRID skip;
    set NE0GM100.XDMCD skip;
    set NE0GM100.XQACD skip;
    set NE0GM100.NE0GM-100-POST-MONTH skip;
    set NE0GM100.CATOAP cursor;
  else
    set NE0GM100.KUCCOID normal;
    set NE0GM100.KUMSTRID protect, invisible;
    set NE0GM100.OP1CUOID normal;
    set NE0GM100.OP1NORID normal;
    set NE0GM100.XGPCD normal;
    set NE0GM100.SY1STNBR normal;
    set NE0GM100.SY2CLRID normal;
    set NE0GM100.XDMCD normal;
    set NE0GM100.XQACD normal;
    set NE0GM100.NE0GM-100-POST-MONTH normal;
  end

  NE0GM100.XXXRVNBR = "00"; /* revision nbr*/
  NE0GM100.XXXMAPNM = "NE0GM100"; /* map name*/
  NE0GM100.XXXPRCNM = "NE0G-100"; /* process name*/
  NE0GM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/

  set TA2REC empty;
  TA2DTOPT = "GETDATE";
  TA2GRTYP = "E";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  NE0GM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  move TA2GRCYM to NE0GW-01-GL-CCYYMM withV60Compat;
  move TA2GRCYM to NE0GW-01-TODAY-CCYYMM withV60Compat;

  if (NE0GW-01-GL-MM == 1)
    NE0GW-01-GL-MM = 12;
    NE0GW-01-GL-CCYY = NE0GW-01-GL-CCYY - 1;
  else
    NE0GW-01-GL-MM = NE0GW-01-GL-MM - 1;
  end
  move NE0GW-01-GL-CCYYMM to NEW-CURR-POST-MONTH withV60Compat;
  move TA2GRCYM to NE0GW-01-GL-CCYYMM withV60Compat;

  if ((COMMAREA.CAFROMAP == "NE0C"
   || COMMAREA.CAFROMAP == "NE0D"
   || COMMAREA.CAFROMAP == "NE0E")
   && (NEWREC.NEW-XGPCD == "02"
   || NEWREC.NEW-XGPCD == "03"))
  /* AND NEW-POSTING-MONTH > 0; /**/
    NE0GM100.KUCCOID = NEWREC.NEW-KUCCOID;
    NE0GM100.OP1CUOID = NEWREC.NEW-CUST-ORDID;
    NE0GM100.OP1NORID = NEWREC.NEW-NIKE-ORDID;
    NE0GM100.XGPCD = NEWREC.NEW-XGPCD;
    NE0GM100.SY1STNBR = NEWREC.NEW-STYLE-CD;
    NE0GM100.SY2CLRID = NEWREC.NEW-COLOR-CD;
    NE0GM100.XDMCD = NEWREC.NEW-DIM-CD;
    NE0GM100.XQACD = NEWREC.NEW-QUALITY-CD;
    NE0GM100.NE0GM-100-POST-MONTH = NEWREC.NEW-POSTING-MONTH;
    if (COMMAREA.CAFROMAP == "NE0E")
      NE0GM-100-OPTION = 1;
    else
      set NEWREC empty;
      if (COMMAREA.CAFROMAP == "NE0D")
        NE0GM-100-OPTION = 2;
      else
        if (COMMAREA.CAFROMAP == "NE0C")
          NE0GM-100-OPTION = 3;
        else
          NE0GM-100-OPTION = 1;
        end
      end
    end
  else

    NE0GM-100-OPTION = 1;

    if (NE0GW-01-GL-MM == 1)
      NE0GW-01-GL-MM = 12;
      NE0GW-01-GL-CCYY = NE0GW-01-GL-CCYY - 1;
    else
      NE0GW-01-GL-MM = NE0GW-01-GL-MM - 1;
    end
    move NE0GW-01-GL-CCYYMM to NE0GM-100-POST-MONTH withV60Compat;
  end

  if (NE0GM-100-OPTION == 1)
    set NE0GM100.NE0GM-100-POST-MONTH protect, invisible;
  end

end // end NE0G-101

// Validate PF keys; act on some
Function NE0G-110()
   /* *-----------------------------------------------------------*/
     /* Validate PF keys*/

     /* Active PF keys: 1, 3, 4, 12, ENTER*/
   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0G-110";

  set NE0GM100.CATOAP initialAttributes;
  set NE0GM100.CAITEM initialAttributes;


   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/

  if (NE0GM100.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0GM100.CATOAP;
      COMMAREA.CAITEM = NE0GM100.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0GM100.CAITEM cursor, bold; /* exit failed*/
      converseLib.validationFailed(9); /* transfer failed*/
      return;
    end
  end


  if (converseVar.eventKey is enter /* Valid exit pf keys*/
   || converseVar.eventKey is pf1   
   || converseVar.eventKey is pf3   
   || converseVar.eventKey is pf4   
   || converseVar.eventKey is pf12)
      /* next sentence *********************/
  else
    converseLib.validationFailed(2);
    NLXREC.NLXERRF = "Y";
    return;
  end


  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSPF1(); /* exit*/
  end


  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0A";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(9); /* transfer failed*/
    return;
  end


  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end


  if (converseVar.eventKey is enter /**/
   || converseVar.eventKey is pf12) /* Edit only*/
    return;
  end

      /* pf key not valid*/

  converseLib.validationFailed(2); /* pf key not valid*/
  NLXREC.NLXERRF = "Y"; /* mark with error*/


end // end NE0G-110

// Edit/Act on function keys
Function NE0G-120()
   /* *************************************/
   /* Edit Screen Entries*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0G-120";

  converseLib.clearScreen();
  
  set NE0GM-100-OPTION cursor, normal;
  set NE0GM100.KUCCOID normal;
  set NE0GM100.KUMSTRID skip, invisible;
  set NE0GM100.OP1CUOID normal;
  set NE0GM100.OP1NORID normal;
  set NE0GM100.XGPCD normal;
  set NE0GM100.SY1STNBR normal;
  set NE0GM100.SY2CLRID normal;
  set NE0GM100.XDMCD normal;
  set NE0GM100.XQACD normal;
  set NE0GM-100-POST-MONTH normal;

  if (NE0GM-100-OPTION == 1)
    set NE0GM-100-POST-MONTH protect, invisible;
  end

   /* *****************************************************/
   /* Edit posting month*/
   /* *****************************************************/

  set TA2REC empty;
  TA2DTOPT = "GETDATE";
  TA2GRTYP = "E";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  NE0GM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  move TA2GRCYM to NE0GW-01-GL-CCYYMM withV60Compat;
  move TA2GRCYM to NE0GW-01-TODAY-CCYYMM withV60Compat;
  move TA2GRCYM to NE0GW-01-TODAY-YYMM withV60Compat;

  if (NE0GM-100-POST-MONTH == 0)
    if (NE0GM-100-OPTION == 1)
  /* next sentence*/
    else
      set NE0GM-100-POST-MONTH cursor, bold;
      converseLib.validationFailed(89); /* post date is mandetory*/
      NLXERRF = "Y";
    end
  end
  if (NE0GM-100-OPTION == 1)
    NE0GM-100-POST-MONTH = 0;
  /* next sentence*/
  else
    if (NE0GM-100-POST-MONTH != 0)
      set TA2REC empty;
      move NE0GM-100-POST-MONTH to NE0GW-01-PMY withV60Compat;
      move NE0GW-01-PYR to NE0GW-01-YER withV60Compat;
  /*  */
  /* **************************** Y2K IN BEGIN ******************************/
  /*  */
      if (NE0GW-01-PYR > 60)
  /*  */
  /* **************************** Y2K IN END ********************************/
  /*  */
        NE0GW-01-PCN = 19;
  /*  */
  /* **************************** Y2K IN BEGIN ******************************/
  /*  */
      else
        NE0GW-01-PCN = 20;
      end
  /*  */
  /* **************************** Y2K IN END ********************************/
  /*  */
      move NE0GW-01-PMO to NE0GW-01-MON withV60Compat;
      NE0GW-01-DAY = "01";
      NLXREC.NLXVALDT = "Y";
      NLXREC.XXXED8C = NE0GW-01-DAT;
      XPNL001();
      if (NLXREC.NLXVALDT == "N")
        set NE0GM-100-POST-MONTH cursor, bold;
        converseLib.validationFailed(5); /* not a valid date*/
        NLXERRF = "Y";
      else
  /*  */
  /* ******************************** Y2K OUT BEGIN *************************/
  /*  */
  /* IF NE0GM-100-POST-MONTH LT 9206*/
  /* AND NE0GW-01-YER NE 00;*/
  /*  */
  /* ******************************** Y2K OUT END ***************************/
  /*  */
  /*  */
  /* ******************************** Y2K IN BEGIN **************************/
  /*  */
        move NE0GM-100-POST-MONTH to NE0GW-01-TEMP-YYMM withV60Compat;
        if (NE0GW-01-TEMP-YY > 60)
          NE0GW-01-TEMP-CC = 19;
        else
          NE0GW-01-TEMP-CC = 20;
        end
        if (NE0GW-01-TEMP-CCYYMM < 199206)
  /*  */
  /* ******************************** Y2K IN END ****************************/
  /*  */
          set NE0GM-100-POST-MONTH cursor, bold;
          converseLib.validationFailed(58); /* must be ge 199206*/
          NLXERRF = "Y";
        else
          if (NE0GM-100-POST-MONTH == NE0GW-01-TODAY-YYMM)
            set NE0GM-100-POST-MONTH cursor, bold;
            converseLib.validationFailed(59); /* cannot be todays date*/
            NLXERRF = "Y";
          else
            /* SET NE0GM-100-POST-MONTH NORMAL;*/
          end
        end
      end
    else
      /* SET NE0GM-100-POST-MONTH NORMAL;*/
    end
  end


   /* *****************************************************/
   /* Edit Gpc, Style, Color, Dimension, Quality Codes*/
   /* *****************************************************/

   /* *****************************************************/
   /* Request for Dimension pop-up choices*/
   /* *****************************************************/
  if (NE0GM100.XQACD == "? "
   || NE0GM100.XQACD == " ?"
   || NE0GM100.XQACD == "??")
    XPXX001();
    XX0XW02.XX0XWHDR = "DIMENSION CODE OPTIONS";
    while (XX0XW02.XX0XWEND == "N")
      XPXQA01();
    end
    set NE0GM100.XQACD cursor;
    if (XX0XW02.XX0XWPIX != 0)
      NE0GM100.XQACD = XQATBL.XQACD[XX0XWPIX];
    else
      NE0GM100.XQACD = "  ";
    end
    NLXREC.NLXERRF = "Y";
    converseLib.clearScreen();
    
  end

   /* *****************************************************/
   /* Edit Quality Code*/
   /* *****************************************************/
  if (NE0GM100.XQACD > "  ") /* Quality entered*/
    if (NE0GM100.XQACD in XQATBL.XQACD
     && XQATBL.XQACD[sysVar.arrayIndex] != "99"
     && XQATBL.XXXSTAT[sysVar.arrayIndex] == "A")
      /* SET NE0GM100.XQACD NORMAL;*/
    else
      set NE0GM100.XQACD cursor, bold;
      converseLib.validationFailed(63); /* quality code not valid*/
      NLXERRF = "Y";
    end
  end

   /* *****************************************************/
   /* Edit Dimension Code*/
   /* *****************************************************/
  if (NE0GM100.XDMCD > "  " /* Dimension entered*/
   && NE0GM100.SY1STNBR == "  ") /* Style not entered*/
    set NE0GM100.SY1STNBR cursor, bold;
    converseLib.validationFailed(62); /* style code is required*/
    NLXERRF = "Y";
  else
    if (NE0GM100.XDMCD > "  ") /* Dimension entered*/
      if (NE0GM100.XDMCD in XDMTBL.XDMCD
       && XDMTBL.XDMCD[sysVar.arrayIndex] != "99"
       && XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        /* SET NE0GM100.XDMCD NORMAL;*/
      else
        set NE0GM100.XDMCD cursor, bold;
        converseLib.validationFailed(64); /* Dimension code not valid*/
        NLXERRF = "Y";
      end
    end
  end

   /* *****************************************************/
   /* Edit Color Code*/
   /* *****************************************************/
  if (NE0GM100.SY2CLRID > "  ") /* color entered*/
    if (NE0GM100.SY1STNBR == "  ") /* Style not entered*/
      set NE0GM100.SY1STNBR cursor, bold;
      converseLib.validationFailed(61); /* style code is required with color*/
      NLXERRF = "Y";
    end
    if (NE0GM100.XDMCD == "  ") /* Dimension not entered*/
      set NE0GM100.XDMCD cursor, bold;
      converseLib.validationFailed(86); /* dimension is required with color*/
      NLXERRF = "Y";
    end
  else
    if (NE0GM100.SY2CLRID > "  ") /* color entered*/
      if (NE0GM100.SY2CLRID in XCLTBL.XCLCD
       && XCLTBL.XCLCD[sysVar.arrayIndex] != "99"
       && XCLTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        /* SET NE0GM100.SY2CLRID NORMAL;*/
      else
        /* SET NE0GM100.SY2CLRID CURSOR,BRIGHT;*/
        /* MOVE 65 TO EZEMNO;         /* Color code not valid*/
        /* MOVE 'Y' TO NLXERRF;*/
      end
    end
  end

   /* *****************************************************/
   /* Edit Style*/
   /* *****************************************************/
  if (NE0GM100.SY1STNBR > "  ")
    if (NE0GM100.XGPCD == "  ")
      set NE0GM100.XGPCD cursor, bold;
      converseLib.validationFailed(60); /* gpc required*/
      NLXERRF = "Y";
    else
      set SY1REC empty;
      SY1REC.XGPCD = NE0GM100.XGPCD;
      SY1REC.SY1STNBR = NE0GM100.SY1STNBR;
      NE0GS-S-VSTYLE01();
      if (SQLCA.VAGen_SQLCODE != 0)
        set NE0GM100.SY1STNBR cursor, bold;
        converseLib.validationFailed(66); /* Style code not valid*/
        NLXERRF = "Y";
      else
        /* SET NE0GM100.XGPCD NORMAL;*/
      end
    end
  end

   /* *****************************************************/
   /* Edit Style and Color and Dimension*/
   /* *****************************************************/
  if (NE0GM100.SY1STNBR > "  "
   && NE0GM100.SY2CLRID > "  "
   && NE0GM100.XDMCD > "  ")
    set SY2REC empty;
    SY2REC.XGPCD = NE0GM100.XGPCD;
    SY2REC.SY1STNBR = NE0GM100.SY1STNBR;
    SY2REC.SY2CLRID = NE0GM100.SY2CLRID;
    SY2REC.XDMCD = NE0GM100.XDMCD;
    NE0GS-S-VCOLOR01();
    if (SQLCA.VAGen_SQLCODE != 0)
      /* SET NE0GM100.XGPCD CURSOR,BRIGHT;*/
      set NE0GM100.SY1STNBR cursor, bold;
      set NE0GM100.SY2CLRID bold;
      set NE0GM100.XDMCD bold;
      converseLib.validationFailed(67); /* s/c/d not valid*/
      NLXERRF = "Y";
    else
      /* SET NE0GM100.XGPCD NORMAL;*/
      /* SET NE0GM100.SY1STNBR NORMAL;*/
      /* SET NE0GM100.SY2CLRID NORMAL;*/
      /* SET NE0GM100.XDMCD NORMAL;*/
    end
  end

   /* *****************************************************/
   /* Request for gpc pop-up*/
   /* *****************************************************/
  if (NE0GM100.XGPCD == "? "
   || NE0GM100.XGPCD == " ?"
   || NE0GM100.XGPCD == "??")
    XPXX001();
    XX0XW02.XX0XWHDR = "GPC CODE OPTIONS";
    while (XX0XW02.XX0XWEND == "N")
      XPXGP01();
    end
    set NE0GM100.XGPCD cursor;
    if (XX0XW02.XX0XWPIX != 0)
      NE0GM100.XGPCD = XGPTBL.XGPCD[XX0XWPIX];
    else
      NE0GM100.XGPCD = "  ";
    end
    NLXREC.NLXERRF = "Y";
    converseLib.clearScreen();
    
  end

  /* ****************************************************/
  /* Edit gpc*/
  /* ****************************************************/

  if (NE0GM100.XGPCD > "  ")
    if (NE0GM100.XGPCD == "02"
     || NE0GM100.XGPCD == "03")
    else
      set NE0GM100.XGPCD cursor, bold;
      converseLib.validationFailed(81); /* gpc not valid*/
      NLXERRF = "Y";
    end
  end

  /* *****************************************************/
  /* Edit order number*/
  /* *****************************************************/

  if (NE0GM100.OP1CUOID == 0
   && NE0GM100.OP1NORID != 0)
    NLXERRF = "Y";
    set NE0GM100.OP1CUOID cursor, bold;
    set NE0GM100.OP1NORID bold;
    converseLib.validationFailed(68); /* order not found*/
  end

  /* IF NE0GM100.OP1CUOID NE 0;*/
  /* SET OP1REC EMPTY;*/
  /* SET OP2REC EMPTY;*/
  /* MOVE NE0GM100.OP1CUOID TO OP1REC.OP1CUOID;*/
  /* MOVE NE0GM100.OP1CUOID TO OP2REC.OP1CUOID;*/
  /* IF NE0GM100.OP1NORID EQ 0;*/
  /* MOVE 1 TO OP1REC.OP1NORID;*/
  /* MOVE 1 TO OP2REC.OP1NORID;*/
  /* ELSE;*/
  /* MOVE NE0GM100.OP1NORID TO OP1REC.OP1NORID;*/
  /* MOVE NE0GM100.OP1NORID TO OP2REC.OP1NORID;*/
  /* END;*/
  /* MOVE NE0GM100.OP1CUOID TO NE0GW-01-ORD;*/
  /* MOVE NE0GW-01-PTN TO OP1REC.OP1PARTN;*/
  /* MOVE NE0GW-01-PTN TO OP2REC.OP1PARTN;*/
  /* ;*/
  /* MOVE NE0GM100.XGPCD TO OP2REC.XGPCD;*/
  /* MOVE NE0GM100.SY1STNBR TO OP2REC.SY1STNBR;*/
  /* MOVE NE0GM100.SY2CLRID TO OP2REC.SY2CLRID;*/
  /* MOVE NE0GM100.XDMCD TO OP2REC.XDMCD;*/
  /* ;*/
  /* NE0GS-S-VORHDR01;*/
  /* IF SQLCA.SQLCODE EQ 0;*/
  /* IF NE0GM100.KUCCOID EQ 0;*/
  /* MOVE OP1REC.KUCCOID TO NE0GM100.KUCCOID;*/
  /* ELSE;*/
  /* IF OP1REC.KUCCOID NE NE0GM100.KUCCOID*/
  /* AND NE0GM100.KUCCOID NE 0;*/
  /* MOVE 'Y' TO NLXERRF;*/
  /* SET NE0GM100.KUCCOID CURSOR,BRIGHT;*/
  /* MOVE 83 TO EZEMNO;       /* customer not on order*/
  /* END;*/
  /* END;*/
  /* IF NE0GM100.XGPCD = ' ';*/
  /* MOVE OP1REC.XGPCD TO NE0GM100.XGPCD;*/
  /* ELSE;*/
  /* IF OP1REC.XGPCD NE NE0GM100.XGPCD;*/
  /* MOVE 'Y' TO NLXERRF;*/
  /* SET NE0GM100.XGPCD CURSOR,BRIGHT;*/
  /* MOVE 84 TO EZEMNO;       /* gpc not on order*/
  /* END;*/
  /* END;*/
  /* ELSE;*/
  /* IF SQLCA.SQLCODE EQ 100;*/
  /* MOVE 'Y' TO NLXERRF;*/
  /* SET NE0GM100.OP1CUOID CURSOR,BRIGHT;*/
  /* SET NE0GM100.OP1NORID BRIGHT;*/
  /* MOVE 68 TO EZEMNO;         /* order not found*/
  /* END;*/
  /* END;*/
  /* IF NE0GM100.SY1STNBR GT '   ';*/
  /* NE0GS-S-VITEM001;*/
  /* IF SQLCA.SQLCODE EQ 0;*/
  /* ELSE;*/
  /* IF SQLCA.SQLCODE EQ 100;*/
  /* MOVE 'Y' TO NLXERRF;*/
  /* SET NE0GM100.OP1CUOID CURSOR,BRIGHT;*/
  /* SET NE0GM100.OP1NORID BRIGHT;*/
  /* SET NE0GM100.SY1STNBR BRIGHT;*/
  /* SET NE0GM100.SY2CLRID BRIGHT;*/
  /* SET NE0GM100.XDMCD BRIGHT;*/
  /* MOVE 69 TO EZEMNO;       /* order/style combination not found*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* END;*/

  /* ************************************************************************/
  /* GPC Mandetory*/
  /* ************************************************************************/

  if (NE0GM100.XGPCD == "  ")
    set NE0GM100.XGPCD cursor, bold;
    converseLib.validationFailed(90); /* gpc mandetory*/
    NLXERRF = "Y";
    if (NE0GM-100-OPTION == 2)
      converseLib.validationFailed(82); /* gpc needed for option 2*/
    end
  end

  /* *****************************************************/
  /* Edit customer number*/
  /* *****************************************************/

  if (NE0GM100.KUCCOID == 0)
    if (NE0GM100.NE0GM-100-OPTION == 2)
      NLXERRF = "Y";
      set NE0GM100.KUCCOID cursor, bold;
      converseLib.validationFailed(73); /* customer must be entered*/
    else
      /* SET NE0GM100.KUCCOID NORMAL;*/
    end
  else
    set KUCREC empty;
    KUCREC.KUCCOID = NE0GM100.KUCCOID;
    NE0GS-S-VCMPNY01();
    if (SQLCA.VAGen_SQLCODE != 0)
      NLXERRF = "Y";
      set NE0GM100.KUCCOID cursor, bold;
      converseLib.validationFailed(74); /* customer not found*/
    else
      if (KUCREC.XAUCD != "31"
       && KUCREC.XAUCD != "32"
       && KUCREC.XAUCD != "33")
        if (KUCREC.XAUCD in XAUTBL.XAUCD)
          if (XAUTBL.XATCD[sysVar.arrayIndex] == "06")
              /* NEXT SENTENCE*/
          else
            NLXERRF = "Y";
            set NE0GM100.KUCCOID cursor, bold;
            converseLib.validationFailed(54); /* customer has wrong acct class*/
          end
        else
          NLXERRF = "Y";
          set NE0GM100.KUCCOID cursor, bold;
          converseLib.validationFailed(54); /* customer has wrong acct class*/
        end
      end
    end
  end

  /* ******************************************************/
  /* Edit option number*/
  /* ******************************************************/

  if (NE0GM-100-OPTION != 1
   && NE0GM-100-OPTION != 2
   && NE0GM-100-OPTION != 3)
    NLXERRF = "Y";
    set NE0GM-100-OPTION cursor, bold;
    converseLib.validationFailed(71); /* option must be 1,2 or 3*/
  else
    /* SET NE0GM100.NE0GM-100-OPTION NORMAL;*/
  end


  if (converseVar.eventKey is pf12
   && NLXERRF == "N")
    NLXERRF = "Y";
    converseLib.validationFailed(77); /* passed all edits. no changes made*/
  end


end // end NE0G-120

// Determine next action
Function NE0G-130()
   /* ***************************************/
   /* Determine next action*/
   /* **************************************/

  NLXREC.NLXCPROC = "NE0G-130";

  if (converseVar.eventKey not enter
   && converseVar.eventKey not pf12)
    NLXERRF = "Y";
    converseLib.validationFailed(2); /* invalid pf key*/
    return;
  end

  if (converseVar.eventKey is pf12)
    return;
  end

  if (converseVar.eventKey is enter)
    NEWREC.NEW-KUCCOID = NE0GM100.KUCCOID;
    NEWREC.NEW-KUCCONM = KUCREC.KUCCONM;
    NEWREC.NEW-CUST-ORDID = NE0GM100.OP1CUOID;
    NEWREC.NEW-NIKE-ORDID = NE0GM100.OP1NORID;
    NEWREC.NEW-XGPCD = NE0GM100.XGPCD;
    NEWREC.NEW-STYLE-CD = NE0GM100.SY1STNBR;
    NEWREC.NEW-COLOR-CD = NE0GM100.SY2CLRID;
    NEWREC.NEW-DIM-CD = NE0GM100.XDMCD;
    NEWREC.NEW-QUALITY-CD = NE0GM100.XQACD;
  /*  */
  /* ************************** Y2K IN BEGIN ********************************/
  /*  */
    if (NE0GM-100-POST-MONTH > 6000)
  /*  */
  /* ************************** Y2K IN END **********************************/
  /*  */
      NEWREC.NEW-POSTING-MONTH = NE0GM-100-POST-MONTH + 190000;
  /*  */
  /* ************************** Y2K IN BEGIN ********************************/
  /*  */
    else
      NEWREC.NEW-POSTING-MONTH = NE0GM-100-POST-MONTH + 200000;
    end
  /*  */
  /* ************************** Y2K IN END **********************************/
  /*  */

    set TA2REC empty;
    TA2DTOPT = "GETDATE";
    TA2GRTYP = "E";
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    move TA2GRCYM to NE0GW-01-GL-CCYYMM withV60Compat;
    if (NE0GW-01-GL-MM == 1)
      NE0GW-01-GL-MM = 12;
      NE0GW-01-GL-CCYY = NE0GW-01-GL-CCYY - 1;
    else
      NE0GW-01-GL-MM = NE0GW-01-GL-MM - 1;
    end
    move NE0GW-01-GL-CCYYMM to NEW-CURR-POST-MONTH withV60Compat;

    NEWREC.NEW-FROM-APP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    COMMAREA.CAFROMAP = "NE0G";
    if (NE0GM-100-OPTION == 1)
      COMMAREA.CATOAP = "NE0E";
    else
      if (NE0GM-100-OPTION == 2)
        COMMAREA.CATOAP = "NE0D";
      else
        if (NE0GM-100-OPTION == 3)
          COMMAREA.CATOAP = "NE0C";
        end
      end
    end
    XPNL002();
    NLXERRF = "Y";
    converseLib.validationFailed(9); /* transfer failed*/
  end


end // end NE0G-130

// Select Unique - KUCREC
Function NE0GS-S-VCMPNY01()
   /* ************************/
   /* KUCREC - Select Unique*/
   /* ************************/

  NLXREC.NLXCPROC = "NE0ES-S-VCMPNY01";

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* Read Customer*/

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0240 "; /* io module*/
    TA1REC.TA1DBASE = "DCUST"; /* database*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NE0GS-S-VCMPNY01

// Select Unique - SY1REC
Function NE0GS-S-VCOLOR01()
   /* ************************/
   /* SY2REC - Select Unique*/
   /* ************************/

  NLXREC.NLXCPROC = "NE0GS-S-VCOLOR01";

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* Read Color*/

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0130 "; /* io module*/
    TA1REC.TA1DBASE = "DPROD"; /* database*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NE0GS-S-VCOLOR01

// Select Unique - VSTYLE01
Function NE0GS-S-VSTYLE01()
   /* ************************/
   /* SY1REC - Select Unique*/
   /* ************************/

  NLXREC.NLXCPROC = "NE0GS-S-VSTYLE01";

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes}; /* Read Style*/

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0120 "; /* io module*/
    TA1REC.TA1DBASE = "DPROD"; /* database*/
    TA1REC.TA1TBLVU = "VSTYLE01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NE0GS-S-VSTYLE01

// Check Security Lvl For User Id
Function NE0GS-SEC-LVL()
   /*  */
  NLXREC.NLXCPROC = "NE0GS-SEC-LVL";

  if (COMMAREA.CAADDFL == "Y"
   || COMMAREA.CACHGFL == "Y"
   || COMMAREA.CADELFL == "Y")
    NE0GW-01-SL = "Y";
  else
    NE0GW-01-SL = "N";
  end


end // end NE0GS-SEC-LVL

//*** RECORD=NE0GW01 ****
// ********** NE0G APPLICATION WORKING STORAGE RECORD *********
// 
// Maintenence log.
// who       when      why
// ------    --------  ----------------------------------------
// JJUDKI    02/02/94  New
// 
// ***********************
Record NE0GW01 type basicRecord
  5 NE0GW-01-GROUP NE0GW-01-GROUP ; 
    10 NE0GW-01-FULL-POST-DATE NE0GW-01-FULL-POST-DATE ; 
      15 * num(3) ; // Filler
      15 NE0GW-01-POST-YEAR NE0GW-01-POST-YEAR ; 
      15 NE0GW-01-POST-MONTH NE0GW-01-POST-MONTH ; 
      15 * num(2) ; // Filler
    10 NE0GW-01-DISPLAY-POST-DATE NE0GW-01-DISPLAY-POST-DATE ; 
      15 NE0GW-01-DISPLAY-POST-MONTH NE0GW-01-DISPLAY-POST-MONTH ; 
      15 NE0GW-01-DISPLAY-DASH NE0GW-01-DISPLAY-DASH ; 
      15 NE0GW-01-DISPLAY-POST-YEAR NE0GW-01-DISPLAY-POST-YEAR ; 
    10 XATCD XATCD ; 
    10 NE0GW-01-KEY NE0GW-01-KEY ; 
      15 NE0GW-01-LRG-NBR NE0GW-01-LRG-NBR ; 
      15 * char(1) ; // Filler
      15 NE0GW-01-IND NE0GW-01-IND ; 
      15 * char(1) ; // Filler
      15 NE0GW-01-SML-NBR NE0GW-01-SML-NBR ; 
    10 NE0GW-01-ADDR-POP-UP-DONE NE0GW-01-ADDR-POP-UP-DONE ; 
    10 NE0GW-01-ADDR-CNT NE0GW-01-ADDR-CNT ; 
    10 NE0GW-01-ADDR-INX NE0GW-01-ADDR-INX ; 
    10 NE0GW-01-ADDR-ID NE0GW-01-ADDR-ID [200] ; 
    10 NE0GW-01-LAST-PAGE NE0GW-01-LAST-PAGE ; 
    10 NE0GW-01-MAP-INX NE0GW-01-MAP-INX ; 
    10 NE0GW-01-NUM-NLAADRID NE0GW-01-NUM-NLAADRID ; 
      15 NE0GW-01-CHR-NLAADRID NE0GW-01-CHR-NLAADRID ; 
        20 NE0GW-01-CHR-PARTS NE0GW-01-CHR-PARTS [3] ; 
    10 NE0GW-01-MAX-PAGE NE0GW-01-MAX-PAGE ; 
    10 NE0GW-01-CUR-PAGE NE0GW-01-CUR-PAGE ; 
    10 NE0GW-01-MOD-FLAGS NE0GW-01-MOD-FLAGS ; 
      15 NE0GW-01-ZCR-MOD-FLAG NE0GW-01-ZCR-MOD-FLAG ; 
      15 NE0GW-01-COM-MOD-FLAG NE0GW-01-COM-MOD-FLAG ; 
      15 NE0GW-01-XGP-MOD-FLAG NE0GW-01-XGP-MOD-FLAG ; 
      15 NE0GW-01-ADD-MOD-FLAG NE0GW-01-ADD-MOD-FLAG ; 
      15 NE0GW-01-OP1-MOD-FLAG NE0GW-01-OP1-MOD-FLAG ; 
      15 NE0GW-01-GL-MOD-FLAG NE0GW-01-GL-MOD-FLAG ; 
      15 NE0GW-01-GLPMO-MOD-FLAG NE0GW-01-GLPMO-MOD-FLAG ; 
      15 NE0GW-01-IVCORD-MOD-FLAG NE0GW-01-IVCORD-MOD-FLAG ; 
    10 NE0GW-01-PF19-FLAG NE0GW-01-PF19-FLAG ; 
    10 NE0GW-01-IVC-BAL NE0GW-01-IVC-BAL ; 
    10 NE0GW-01-PF9-CNFM-FLAG NE0GW-01-PF9-CNFM-FLAG ; 
    10 NE0GW-01-CHAR-POST-DATE NE0GW-01-CHAR-POST-DATE ; 
      15 NE0GW-01-CHAR-POST-MONTH NE0GW-01-CHAR-POST-MONTH ; 
      15 NE0GW-01-CHAR-DASH NE0GW-01-CHAR-DASH ; 
      15 NE0GW-01-CHAR-POST-YEAR NE0GW-01-CHAR-POST-YEAR ; 
    10 NE0GW-01-CLM-STAT-DESC-DT char(16) ; // *
      15 NE0GW-01-CLM-STAT-DESC NE0GW-01-CLM-STAT-DESC ; 
      15 NE0GW-01-CLM-STAT-SEP NE0GW-01-CLM-STAT-SEP ; 
      15 NE0GW-01-CLM-STAT-CHG-DT NE0GW-01-CLM-STAT-CHG-DT ; 
    10 NE0GW-01-TODAY-CCYYMM NE0GW-01-TODAY-CCYYMM ; 
    10 NE0GW-01-TODAY-YYMM NE0GW-01-TODAY-YYMM ; 
    10 NE0GW-01-GL-CCYYMM NE0GW-01-GL-CCYYMM ; 
      15 NE0GW-01-GL-CCYY NE0GW-01-GL-CCYY ; 
      15 NE0GW-01-GL-MM NE0GW-01-GL-MM ; 
    10 NE0GW-01-ORD NE0GW-01-ORD ; 
      15 NE0GW-01-ORD-ID NE0GW-01-ORD-ID ; 
      15 NE0GW-01-PTN NE0GW-01-PTN ; 
    10 NE0GW-01-SL NE0GW-01-SL ; 
    10 NE0GW-01-PMY NE0GW-01-PMY ; 
      15 NE0GW-01-PCN NE0GW-01-PCN ; 
      15 NE0GW-01-PYR NE0GW-01-PYR ; 
      15 NE0GW-01-PMO NE0GW-01-PMO ; 
    10 NE0GW-01-DAT NE0GW-01-DAT ; 
      15 NE0GW-01-MON NE0GW-01-MON ; 
      15 NE0GW-01-DAY NE0GW-01-DAY ; 
      15 NE0GW-01-YER NE0GW-01-YER ; 
    10 NE0GW-01-TEMP-CCYYMM NE0GW-01-TEMP-CCYYMM ; 
      15 NE0GW-01-TEMP-CC NE0GW-01-TEMP-CC ; 
      15 NE0GW-01-TEMP-YYMM NE0GW-01-TEMP-YYMM ; 
        20 NE0GW-01-TEMP-YY NE0GW-01-TEMP-YY ; 
        20 NE0GW-01-TEMP-MM NE0GW-01-TEMP-MM ; 
end // end NE0GW01

// *l-addr-id modified flag
DataItem NE0GW-01-ADD-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *ount of address ids in arrary
DataItem NE0GW-01-ADDR-CNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *ddress indicator
DataItem NE0GW-01-ADDR-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *ddress arrary index
DataItem NE0GW-01-ADDR-INX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *lag showes address popup done
DataItem NE0GW-01-ADDR-POP-UP-DONE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *lways '-'
DataItem NE0GW-01-CHAR-DASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *haracter only post date
DataItem NE0GW-01-CHAR-POST-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *haracter only GL post month
DataItem NE0GW-01-CHAR-POST-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *haracter only GL post year
DataItem NE0GW-01-CHAR-POST-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *ddress id character 3 bytes
DataItem NE0GW-01-CHR-NLAADRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *ddress id parts
DataItem NE0GW-01-CHR-PARTS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-CLM-STAT-CHG-DT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-CLM-STAT-DESC char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-CLM-STAT-SEP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *l-clm-comnt modified flag
DataItem NE0GW-01-COM-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *urrent page number
DataItem NE0GW-01-CUR-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *
DataItem NE0GW-01-DAT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *
DataItem NE0GW-01-DAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Always a '-'
DataItem NE0GW-01-DISPLAY-DASH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display GL post date yymm
DataItem NE0GW-01-DISPLAY-POST-DATE char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display GL post month mm
DataItem NE0GW-01-DISPLAY-POST-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Display GL post year yy
DataItem NE0GW-01-DISPLAY-POST-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Full size GL post month date
DataItem NE0GW-01-FULL-POST-DATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting ccyy
DataItem NE0GW-01-GL-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting month ccyymm
DataItem NE0GW-01-GL-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting mm
DataItem NE0GW-01-GL-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l code    modified flag
DataItem NE0GW-01-GL-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *l po mo mod flag
DataItem NE0GW-01-GLPMO-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group item
DataItem NE0GW-01-GROUP char(937)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment type indicator *
DataItem NE0GW-01-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *alance of invoice item
DataItem NE0GW-01-IVC-BAL num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *nvoice/Order # Mod flag
DataItem NE0GW-01-IVCORD-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment Error Key *
DataItem NE0GW-01-KEY char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *ax address id in arrary
DataItem NE0GW-01-LAST-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Comment claim number *
DataItem NE0GW-01-LRG-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *ap index
DataItem NE0GW-01-MAP-INX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *ast page number
DataItem NE0GW-01-MAX-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *
DataItem NE0GW-01-MOD-FLAGS char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-MON num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *ddress id numberic 3 bytes
DataItem NE0GW-01-NUM-NLAADRID num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *omp num   modified flag
DataItem NE0GW-01-OP1-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *rder number
DataItem NE0GW-01-ORD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *p_cust_ord_id
DataItem NE0GW-01-ORD-ID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *
DataItem NE0GW-01-PCN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *F19 last key pressed
DataItem NE0GW-01-PF19-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *F19 last key pressed
DataItem NE0GW-01-PF9-CNFM-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-PMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *
DataItem NE0GW-01-PMY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Posting month mm
DataItem NE0GW-01-POST-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Posting year ccyy
DataItem NE0GW-01-POST-YEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *p_ord_part_char_id
DataItem NE0GW-01-PTN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-PYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *ser security level
DataItem NE0GW-01-SL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Comment sequence number *
DataItem NE0GW-01-SML-NBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting ccyy
DataItem NE0GW-01-TEMP-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting month ccyymm
DataItem NE0GW-01-TEMP-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting ccyy
DataItem NE0GW-01-TEMP-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting ccyy
DataItem NE0GW-01-TEMP-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *l posting mm
DataItem NE0GW-01-TEMP-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *odays date
DataItem NE0GW-01-TODAY-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *odays date
DataItem NE0GW-01-TODAY-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *gp-gpc-cd modified flag
DataItem NE0GW-01-XGP-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// *
DataItem NE0GW-01-YER num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// *cr-clm-rsn-cd modified flag
DataItem NE0GW-01-ZCR-MOD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

