package ne0c;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPNL-006;
import corpcom3.XPNL002;
import corpcom3.XPNL005;
import corpcom3.XPXGP01;
import corpcom3.XPXX001;
import corpcom4.XSENTRY;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom5.GLAENT;
import corpcom5.GLANTAC;
import corpcom5.GLAPRJ;
import corpcom5.GLARCID;
import corpcom5.GLASUB;
import corpcom6.SQLCA;
import corpx1.XAUTBL;
import corpx1.XCTTBL;
import corpx1.XDMCD;
import corpx1.XGPCD;
import corpx1.XGPTBL;
import corpx1.XLATBL;
import corpx1.XUMTBL;
import corpx1.XWHTBL;
import corpx2.XQACD;
import corpx2.XSECD;
import corpx2.XUMCD;
import corpx2.XWHCD;
import corpz3.ZPSCD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import fy.common.FY1FCTYC;
import fy.common.FY1REC;
import ku.common.KUCCOID;
import ku.common.KUCREC;
import ku.common.KUMSTRID;
import ku.common.KUNREC;
import ne.common.*;
import ni.common.NIDIVCID;
import nl.common.NL-CLM-ID;
import nl.common.NL-PMT-MTHD-CD;
import nl.common.NLXREC;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP1REC;
import op.common.OP2REC;
import pc.common.PC2CUXID;
import pc.common.PC2REC;
import pc.common.PC3POIDT;
import pc.common.PC3PONBR;
import pc.common.PC3REC;
import pc.common.PC6REC;
import pc.common.PCFSEYR;
import pg.common.PG2REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import ts.common.TSFSHPID;
import vv.common.VDSTRB01;
import vv.common.VINTGL02;
import vv.common.VNEACR01;
import vv.common.VNESCO01;
import vv.common.VNLGLA01;
import vv.common.VPIHDR01;
import vv.common.VPIITM01;
import vv.common.VSTYGL01;
//*** PROGRAM=NE0C ****
// Shell Application
// 
// 
// Maintenance
//   Date     User Id  Remarks
// --------   -------  ----------------------------------------
// 10/25/93   kshaw    Created.
// 06/25/94   jdemar   installed.
// 10/07/93   jshann   fix edit for add on cost accruals
// 11/04/94   ahowar   remove pf18 w/o functionality
// 12/06/94   jshann   corrected history reclass logic
// 12/13/94   ahowar   Change reclass logic to handle no acr
// 12/30/94   ahowar   ne0c-220 ne0cw-01-xatcd need to be
//                     initialized each time. It allowed a zero
//                     cu-co-id to be put on dnilo.vnesco01.
// 
// 04/18/95   ahowar   ne0c-220 added logic to keep from
//                     re-classing comp to comp customer. also
//                     validates that the comp customer is
//                     setup for the gpc in question.
// 07/18/95   kshaw    ne0c-320 logic stmt    group ne0cs-sa-
//                     vprdcu01 for accepting sqlcodes of 0
//                     and 100. used to abend for 100s.
// --------   -------  ----------------------------------------
// 02/25/98   ngango   Y2K Modifications - changed Map NE0CM200
//                     and NE0CM400 to remove leading zero supp
//                     ression of year fields.
// 09/01/00   RGOMAT   Code has been modified for x-ref field
//                     Change in dprodc.vprdcu table
// --------   -------  ----------------------------------------
// *********************
Program NE0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NE00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  KUCREC KUCREC; // record
  KUNREC KUNREC; // record
  NE0CW01 NE0CW01; // record
  NE0CW02 NE0CW02; // record
  NE0CW03 NE0CW03; // record
  NE0CW04-PARMS NE0CW04-PARMS; // record
  NE0CW05-RECLASS NE0CW05-RECLASS; // record
  NEWREC NEWREC; // record
  NLXREC NLXREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  PC2REC PC2REC; // record
  PC3REC PC3REC; // record
  PC6REC PC6REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VDSTRB01 VDSTRB01; // record
  VINTGL02 VINTGL02; // record
  VNEACR01 VNEACR01; // record
  VNESCO01 VNESCO01; // record
  VNLGLA01 VNLGLA01; // record
  VPIHDR01 VPIHDR01; // record
  VPIITM01 VPIITM01; // record
  VSTYGL01 VSTYGL01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XAUTBL {deleteAfterUse = yes}; // table
  use XLATBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use NE0CM.NE0CM101,  // forms
      NE0CM.NE0CM102, 
      NE0CM.NE0CM103, 
      NE0CM.NE0CM200, 
      NE0CM.NE0CM300,
      NE0CM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NE0C-000: NE0C-000();
    ;
    ;
    exit program;
    ;
    ;
    ;
  end // end main
end // end NE0C

// application main logic
Function NE0C-000()
   /* -----------------------------------------------------------*/
      /* This is the "main logic" for the application.*/
  ;
      /* xsentry checks to ensure that this application was*/
            /* entered from another csp application.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-000";
  COMMAREA.CACURRAP = "NE0C";
  ;
  NE0C-001(); /* Initilize the application*/
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/
  ;
  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NE0C-050(); /* screen branch control*/
  end
  ;
  XSPF4();
  ;
end // end NE0C-000

// Initialize application
Function NE0C-001()
   /* -----------------------------------------------------------*/
         /* Initialize the application working storage*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-001";
  ;
  converseVar.commitOnConverse = 1; /* Force db2 to commit on each screen*/
                                  /* converse*/
  VGVar.handleHardIOErrors = 1; /* Return control to program if hard db2*/
                                  /* error*/
  ;
  XSENTRY(); /* Check entry thru main menu*/
  XSSEGTR(); /* Set segmented transaction id*/
  ;
  set SQLCA empty; /* Clear out the SQL return record*/
  ;
  set ERRSQLCA empty; /* Clear out the "common" error record*/
  ;
  set TA1REC empty; /* Clear out the "common" abend record*/
  ;
  set TA5REC empty; /* Clear out the tmp storage record*/
  ;
  set NEWREC empty; /* Clear out the "common" working*/
                                  /* storage*/
  set NE0CW01 empty; /* Clear application working storage*/
  set NE0CW02 empty; /* Clear application working storage*/
  set NE0CW03 empty; /* Clear application working storage*/
  set VNESCO01 empty; /* Clear table record*/
  ;
  ;
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag 'no'*/
  NLXREC.NLXERRF = "N"; /* set error-flag to 'no'*/
  ;
   /* ------------------------------------------------------*/
    /* Set up working-storage array of screen names*/
   /* ------------------------------------------------------*/
  ;
  NLXREC.NLXCSCRN = "NE0CM101"; /* first header*/
  NLXREC.NLXSCRNX = 1;
  ;
  NLXREC.NLXSNAME[1] = "NE0CM101";
  NLXREC.NLXSNAME[2] = "NE0CM102";
  NLXREC.NLXSNAME[3] = "NE0CM103";
  NLXREC.NLXSNAME[4] = "NE0CM200";
  NLXREC.NLXSNAME[5] = "NE0CM300";
  ;
   /* **********************************************/
   /* Was this application entered via 'fastpath'?*/
   /* Yes if the item is non-blank.*/
   /* **********************************************/
     /* fastpath (entry) option is not allowed.*/
  if (COMMAREA.CAFROMAP != "NE0G")
    COMMAREA.CATOAP = "NE0G"; /* set NE0G as app to return to.*/
    COMMAREA.CAITEM = " ";
    XPNL002(); /* exit*/
  end
  ;
  /* ************************************************************************/
  /* Move commarea contents to NEWREC and set up SCO record for fetches*/
  /* size of NE0CW03 from record definition.*/
  /* ************************************************************************/
  NEWREC.NEW-GROUP = COMMAREA.CAUSERA;
  ;
  NE0CW-CUR-PAGE-NBR = 1;
  NE0CW-MAP-PAGE-NBR = 1;
  NE0CW-W03-SIZE = 1852;
  ;
  if (COMMAREA.CAFROMAP != "NE0G")
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    COMMAREA.CATOAPP = "NE0G";
    COMMAREA.CAITEM = " ";
    XPNL002();
  end
  ;
  NE0CW-01-CURR-POST-MO = NEWREC.NEW-CURR-POST-MONTH;
  ;
  NE0CS-INIT-TMP-STG();
  ;
end // end NE0C-001

// Screen branch control
Function NE0C-050()
   /* -----------------------------------------------------------*/
      /* Control process the application screen(s)*/
  ;
     /* Note that this process is being performed in a*/
     /* "while loop" until the end-of-application flag is set*/
     /* to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-050"; /* set current process name*/
  ;
  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;
  ;
  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME)
     /* if current-screen-name is in the screen-array, then set*/
     /* the screen-index*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex;
  end
   /* XSNKS-MAP-MODE;                  /* Get map mode flag*/
  NE0CW-01-EOSF = "N"; /* Set end-of-screen flag to 'no'*/
  NLXREC.NLXBLDSC = "Y"; /* Set build screen flag to 'yes'*/
  NLXREC.NLXERRF = "N"; /* Clear error flag*/
  ;
  if (NLXREC.NLXSCRNX == 1) /* If screen NE0CM101*/
    while (NE0CW-01-EOSF == "N") /* While not end-of-screen*/
      NE0C-10001();
    end
  else
    if (NLXREC.NLXSCRNX == 2) /* If screen NE0CM102*/
      while (NE0CW-01-EOSF == "N") /* While not end-of-screen*/
        NE0C-10002();
      end
    else
      if (NLXREC.NLXSCRNX == 3) /* If screen NE0CM103*/
        while (NE0CW-01-EOSF == "N") /* While not end-of-screen*/
          NE0C-10003();
        end
      else
        if (NLXREC.NLXSCRNX == 4) /* If screen NE0CM200*/
          while (NE0CW-01-EOSF == "N") /* While not end-of-screen*/
            NE0C-200();
          end
        else
          if (NLXREC.NLXSCRNX == 5) /* If screen NE0CM300*/
            while (NE0CW-01-EOSF == "N") /* While not end-of-screen*/
              NE0C-300();
            end
          end
        end
      end
    end
  end
  ;
  ;
   /* at this point;*/
       /* if the end-of-application flag (nlxeoaf ) = 'n'*/
         /* the perform will return to the top of NE0C050...*/
       /* else*/
         /* the perform will auto return to NE0C000.*/
  ;
  ;
end // end NE0C-050

// Maint select screen 1
Function NE0C-10001()
   /* -----------------------------------------------------------*/
       /* Process screen NE0CM101*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from NE0C050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-10001";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0C-10101();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0CM101 ;
  ;
  NE0CM101.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  NE0CW-MAP-PAGE-NBR = NE0CM101.NE0CM-FM-PAGE;
  ;
  ;
  NE0C-11001(); /* check attention identifier*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-12001(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-13001(); /* determine next action...*/
  end
  ;
  ;
end // end NE0C-10001

// Maint select screen 2
Function NE0C-10002()
   /* -----------------------------------------------------------*/
       /* Process screen NE0CM102*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from NE0C050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-10002";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0C-10102();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  ;
  converse NE0CM102 ;
  ;
  NE0CM102.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  NE0CW-MAP-PAGE-NBR = NE0CM102.NE0CM-FM-PAGE;
  ;
  ;
  NE0C-11002(); /* check attention identifier*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-12002(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-13002(); /* determine next action...*/
  end
  ;
  ;
end // end NE0C-10002

// Maint select screen 3
Function NE0C-10003()
   /* -----------------------------------------------------------*/
       /* Process screen NE0CM103*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from NE0C050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-10003";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0C-10103();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0CM103 ;
  ;
  NE0CM103.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  NE0CW-MAP-PAGE-NBR = NE0CM103.NE0CM-FM-PAGE;
  ;
  ;
  NE0C-11003(); /* check attention identifier*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-12003(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-13003(); /* determine next action...*/
  end
  ;
  ;
end // end NE0C-10003

// Build screen
Function NE0C-10101()
   /* **************************************/
   /* Build MAP NE0CM101                 **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0C-101";
  ;
  converseLib.clearScreen();
  set NE0CM101 initial;
  ;
  if (NEW-MSG-NBR == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(NEW-MSG-NBR);
  end
  NEW-MSG-NBR = 0;
  NE0CM101.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM101.XXXMAPNM = "NE0CM101"; /* map name*/
  NE0CM101.XXXPRCNM = "NE0C-101"; /* process name*/
  NE0CM101.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  NE0CS-BLD-MAP101();
  ;
  ;
end // end NE0C-10101

// Build screen
Function NE0C-10102()
   /* **************************************/
   /* Build MAP NE0CM102                 **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0C-102";
  ;
  converseLib.clearScreen();
  set NE0CM102 initial;
  ;
  if (NEW-MSG-NBR == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(NEW-MSG-NBR);
  end
  NEW-MSG-NBR = 0;
  NE0CM102.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM102.XXXMAPNM = "NE0CM102"; /* map name*/
  NE0CM102.XXXPRCNM = "NE0C-102"; /* process name*/
  NE0CM102.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  NE0CS-BLD-MAP102();
  ;
  ;
end // end NE0C-10102

// Build screen
Function NE0C-10103()
   /* **************************************/
   /* Build MAP NE0CM103                 **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0C-103";
  ;
  converseLib.clearScreen();
  set NE0CM103 initial;
  ;
  if (NEW-MSG-NBR == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(NEW-MSG-NBR);
  end
  NEW-MSG-NBR = 0;
  NE0CM103.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM103.XXXMAPNM = "NE0CM103"; /* map name*/
  NE0CM103.XXXPRCNM = "NE0C-103"; /* process name*/
  NE0CM103.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  NE0CS-BLD-MAP103();
  ;
  ;
end // end NE0C-10103

// Validate PF keys act on some
Function NE0C-11001()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 7, 8, 9, 10, 11, 12*/
  ;
     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-11001";
  ;
  set NE0CM101.CATOAP initialAttributes;
  set NE0CM101.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0CM101.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0CM101.CATOAP;
      COMMAREA.CAITEM = NE0CM101.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0CM101.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* process pf keys*/
   /* ***********************************/
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
  if (converseVar.eventKey is pf20)
    return;
  else
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf11
     || converseVar.eventKey is pf12
     || converseVar.eventKey is pf15
     || converseVar.eventKey is pf20
     || converseVar.eventKey is enter)
      if (NE0CW-HIGH-PAGE-NBR > 0)
        return;
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(100);
      end
    end
  end
  ;
  converseLib.validationFailed(2);
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  ;
  ;
end // end NE0C-11001

// Validate PF keys act on some
Function NE0C-11002()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 7, 8, 9, 10, 11, 12*/
  ;
     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-11002";
  ;
  set NE0CM102.CATOAP initialAttributes;
  set NE0CM102.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0CM102.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0CM102.CATOAP;
      COMMAREA.CAITEM = NE0CM102.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0CM102.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* process pf keys*/
   /* ***********************************/
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
  if (converseVar.eventKey is pf20)
    return;
  else
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf10
     || converseVar.eventKey is pf11
     || converseVar.eventKey is pf12
     || converseVar.eventKey is pf15
     || converseVar.eventKey is pf18
     || converseVar.eventKey is pf20
     || converseVar.eventKey is enter)
      if (NE0CW-HIGH-PAGE-NBR > 0)
        return;
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(2);
      end
    end
  end
  ;
  converseLib.validationFailed(2);
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  ;
  ;
end // end NE0C-11002

// Validate PF keys act on some
Function NE0C-11003()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 7, 8, 9, 10, 11, 12*/
  ;
     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-11003";
  ;
  set NE0CM103.CATOAP initialAttributes;
  set NE0CM103.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0CM103.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0CM103.CATOAP;
      COMMAREA.CAITEM = NE0CM103.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0CM103.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* process pf keys*/
   /* ***********************************/
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
  if (converseVar.eventKey is pf20)
    return;
  else
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8
     || converseVar.eventKey is pf10
     || converseVar.eventKey is pf12
     || converseVar.eventKey is pf15
     || converseVar.eventKey is pf18
     || converseVar.eventKey is pf20
     || converseVar.eventKey is enter)
      if (NE0CW-HIGH-PAGE-NBR > 0)
        return;
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(100);
      end
    end
  end
  ;
  converseLib.validationFailed(2);
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  ;
  ;
end // end NE0C-11003

// Edit/Act on function keys
Function NE0C-12001()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-12001";
  ;
  if (NE0CW-HIGH-PAGE-NBR <= 0)
    return;
  end
  ;
  NE0CS-CHK-M100-NBR(); /* validate page number entered on map.*/
  if (NLXREC.NLXERRF == "Y") /* If error was returned from*/
    if (converseVar.validationMsgNum == 21 /* NE0CS-CHK-M100-NBR then*/
     || converseVar.validationMsgNum == 22) /* set field highlighted.*/
      set NE0CM101.NE0CM-FM-PAGE bold, cursor, modified;
    end
  end
  ;
  if (NLXREC.NLXERRF != "Y")
     /* ********************************************************************/
     /* There are 14 occurances of items on each map.  The edits are per-*/
     /* formed in a while loop from the bottom up.*/
     /* ********************************************************************/
    ;
    NE0CW-INX2 = 14; /* map index*/
    ;
    while (NE0CW-INX2 > 0)
      NE0CW03.NE0CW-03-SEL[NE0CW-INX2] = " ";
      if (NE0CM101.NE0CM-101-SEL[NE0CW-INX2] == "S"
       || NE0CM101.NE0CM-101-SEL[NE0CW-INX2] == " ") /* check valid entries*/
   /* Move selects to WS*/
        NE0CW03.NE0CW-03-SEL[NE0CW-INX2] = NE0CM101.NE0CM-101-SEL[NE0CW-INX2];
      else
        set NE0CM101.NE0CM-101-SEL[NE0CW-INX2] bold, modified, cursor;
        converseLib.validationFailed(18);
        NLXREC.NLXERRF = "Y";
      end
      ;
      NE0CW-INX2 = NE0CW-INX2 - 1;
    end /* END WHILE*/
  end
  ;
  ;
end // end NE0C-12001

// Edit/Act on function keys
Function NE0C-12002()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-12002";
  ;
  if (NE0CW-HIGH-PAGE-NBR <= 0)
    return;
  end
  ;
  ;
  NE0CS-CHK-M100-NBR();
  if (NLXREC.NLXERRF != "Y")
    if (converseVar.validationMsgNum == 21
     || converseVar.validationMsgNum == 22)
      set NE0CM102.NE0CM-FM-PAGE bold, cursor, modified;
    end
  end
  ;
  if (NLXREC.NLXERRF != "Y")
    NE0CW-INX2 = 14; /* map index*/
    ;
     /* ********************************************************************/
     /* There are 14 occurances of items on each map.  The edits are per-*/
     /* formed in a while loop from the bottom up.*/
     /* ********************************************************************/
    ;
    while (NE0CW-INX2 > 0)
      if (NE0CM102.NE0CM-102-SEL[NE0CW-INX2] == "S"
       || NE0CM102.NE0CM-102-SEL[NE0CW-INX2] == " ") /* check valid entries*/
   /* move sel to WS*/
        NE0CW03.NE0CW-03-SEL[NE0CW-INX2] = NE0CM102.NE0CM-102-SEL[NE0CW-INX2];
      else
        set NE0CM102.NE0CM-102-SEL[NE0CW-INX2] bold, modified, cursor;
        converseLib.validationFailed(18);
        NLXREC.NLXERRF = "Y";
      end
      ;
      NE0CW-INX2 = NE0CW-INX2 - 1;
    end /* END WHILE*/
  end
end // end NE0C-12002

// Edit/Act on function keys
Function NE0C-12003()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-12003";
  ;
  if (NE0CW-HIGH-PAGE-NBR <= 0)
    return;
  end
  ;
  NE0CS-CHK-M100-NBR();
  if (NLXREC.NLXERRF != "Y")
    if (converseVar.validationMsgNum == 21
     || converseVar.validationMsgNum == 22)
      set NE0CM103.NE0CM-FM-PAGE bold, cursor, modified;
    end
  end
  ;
  if (NLXREC.NLXERRF != "Y")
    NE0CW-INX2 = 14; /* map index*/
    ;
     /* ********************************************************************/
     /* There are 14 occurances of items on each map.  The edits are per-*/
     /* formed in a while loop from the bottom up.*/
     /* ********************************************************************/
    ;
    while (NE0CW-INX2 > 0)
      if (NE0CM103.NE0CM-103-SEL[NE0CW-INX2] == "S"
       || NE0CM103.NE0CM-103-SEL[NE0CW-INX2] == " ") /* check valid entries*/
        NE0CW03.NE0CW-03-SEL[NE0CW-INX2] = NE0CM103.NE0CM-103-SEL[NE0CW-INX2];
      else
        set NE0CM103.NE0CM-103-SEL[NE0CW-INX2] bold, modified, cursor;
        converseLib.validationFailed(18);
        NLXREC.NLXERRF = "Y";
      end
      ;
      NE0CW-INX2 = NE0CW-INX2 - 1;
    end /* END WHILE*/
  end
  ;
end // end NE0C-12003

// Determine next action
Function NE0C-13001()
   /* **************************************/
   /* Determine next action from hdr 1*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-13001";
  ;
  if (converseVar.eventKey is pf12)
    return;
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
      converseLib.validationFailed(2);
      return;
    end
    NE0CS-UPDT-TMP-STG(); /* write selections from MAP to storage*/
    if (converseVar.eventKey is pf8)
      NE0CS-MAP100-PF8(); /* set new page number*/
    else
      if (converseVar.eventKey is pf7)
        NE0CS-MAP100-PF7();
      end
    end
    NLXREC.NLXBLDSC = "Y";
  end
  ;
  if (NLXREC.NLXERRF != "Y")
    if (converseVar.eventKey is enter /* If enter or PF11 pressed.*/
     || converseVar.eventKey is pf11)
      NE0CS-UPDT-TMP-STG(); /* write working stg to Temp Storage*/
      if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
        move NE0CW-MAP-PAGE-NBR to NE0CW-CUR-PAGE-NBR withV60Compat;
        NLXREC.NLXBLDSC = "Y";
      end
      if (converseVar.eventKey is pf11
       && NLXREC.NLXERRF != "Y")
        NLXREC.NLXSCRNX = 2;
        NLXREC.NLXCSCRN = "NE0CM102";
        NE0CW-01-EOSF = "Y";
      end
    end
  end
  ;
  if (converseVar.eventKey is pf15
   && NLXREC.NLXERRF != "Y")
    NE0CS-UPDT-TMP-STG(); /* write new selections to ws*/
    NE0CS-VAL-SELECT(); /* verify there is a selection*/
    if (NLXREC.NLXERRF != "Y")
      NLXREC.NLXSCRNX = 4;
      NLXREC.NLXCSCRN = "NE0CM200";
      NE0CW-01-EOSF = "Y";
    end
  end
  ;
  if (converseVar.eventKey is pf18
   && NLXREC.NLXERRF != "Y")
    NE0CS-UPDT-TMP-STG(); /* write new selections to ws*/
    NE0CS-VAL-SELECT(); /* verify there is a selection*/
    if (NLXREC.NLXERRF != "Y")
      NE0CS-WRITEOFF();
      NE0CS-INIT-TMP-STG();
      NLXREC.NLXCSCRN = "NE0CM101";
      NE0CW-01-EOSF = "Y";
    end
  end
  ;
  if (converseVar.eventKey is pf20
   && NLXREC.NLXERRF != "Y")
    NLXREC.NLXSCRNX = 5;
    NLXREC.NLXCSCRN = "NE0CM300";
    NE0CW-01-EOSF = "Y";
  end
  ;
end // end NE0C-13001

// Determine next action
Function NE0C-13002()
   /* **************************************/
   /* Determine next action from hdr 1*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-13002";
  ;
  if (converseVar.eventKey is pf12)
    return;
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
      converseLib.validationFailed(2);
      return;
    end
    NE0CS-UPDT-TMP-STG(); /* write selections from MAP to storage*/
    if (converseVar.eventKey is pf8)
      NE0CS-MAP100-PF8(); /* set new page number*/
    else
      if (converseVar.eventKey is pf7)
        NE0CS-MAP100-PF7();
      end
    end
    NLXREC.NLXBLDSC = "Y";
  end
  ;
  if (NLXREC.NLXERRF != "Y")
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf10
     || converseVar.eventKey is pf11)
      NE0CS-UPDT-TMP-STG();
      if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
        move NE0CW-MAP-PAGE-NBR to NE0CW-CUR-PAGE-NBR withV60Compat;
        NLXREC.NLXBLDSC = "Y";
      end
      if (converseVar.eventKey is pf10)
        NLXREC.NLXSCRNX = "1";
        NLXREC.NLXCSCRN = "NE0CM101";
        NE0CW-01-EOSF = "Y";
      end
      if (converseVar.eventKey is pf11)
        NLXREC.NLXSCRNX = "3";
        NLXREC.NLXCSCRN = "NE0CM103";
        NE0CW-01-EOSF = "Y";
      end
    end
  end
  ;
  if (converseVar.eventKey is pf15
   && NLXREC.NLXERRF != "Y")
    NE0CS-UPDT-TMP-STG(); /* write new selections to ws*/
    NE0CS-VAL-SELECT(); /* verify there is a selection*/
    if (NLXREC.NLXERRF != "Y")
      NLXREC.NLXSCRNX = 4;
      NLXREC.NLXCSCRN = "NE0CM200";
      NE0CW-01-EOSF = "Y";
    end
  end
  ;
  if (converseVar.eventKey is pf18
   && NLXREC.NLXERRF != "Y")
    NE0CS-UPDT-TMP-STG(); /* write new selections to ws*/
    NE0CS-VAL-SELECT(); /* verify there is a selection*/
    if (NLXREC.NLXERRF != "Y")
      NE0CS-WRITEOFF();
      NE0CS-INIT-TMP-STG();
      NLXREC.NLXCSCRN = "NE0FM101";
      NE0CW-01-EOSF = "Y";
    end
  end
  ;
  if (converseVar.eventKey is pf20
   && NLXREC.NLXERRF != "Y")
    NLXREC.NLXSCRNX = 5;
    NLXREC.NLXCSCRN = "NE0CM300";
    NE0CW-01-EOSF = "Y";
  end
  ;
end // end NE0C-13002

// Determine next action
Function NE0C-13003()
   /* **************************************/
   /* Determine next action from hdr 1*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-13003";
  ;
  if (converseVar.eventKey is pf12)
    return;
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
    if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
      converseLib.validationFailed(2);
      return;
    end
    NE0CS-UPDT-TMP-STG(); /* write selections from MAP to storage*/
    if (converseVar.eventKey is pf8)
      NE0CS-MAP100-PF8(); /* set new page number*/
    else
      if (converseVar.eventKey is pf7)
        NE0CS-MAP100-PF7();
      end
    end
    NLXREC.NLXBLDSC = "Y";
  end
  ;
  if (NLXREC.NLXERRF != "Y")
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf10)
      NE0CS-UPDT-TMP-STG();
      if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
        move NE0CW-MAP-PAGE-NBR to NE0CW-CUR-PAGE-NBR withV60Compat;
        NLXREC.NLXBLDSC = "Y";
      end
      if (converseVar.eventKey is pf10)
        NLXREC.NLXSCRNX = "2";
        NLXREC.NLXCSCRN = "NE0CM102";
        NE0CW-01-EOSF = "Y";
      end
    end
  end
  ;
  if (converseVar.eventKey is pf15
   && NLXREC.NLXERRF != "Y")
    NE0CS-UPDT-TMP-STG(); /* write new selections to ws*/
    NE0CS-VAL-SELECT(); /* verify there is a selection*/
    if (NLXREC.NLXERRF != "Y")
      NLXREC.NLXSCRNX = 4;
      NLXREC.NLXCSCRN = "NE0CM200";
      NE0CW-01-EOSF = "Y";
    end
  end
  ;
  if (converseVar.eventKey is pf18
   && NLXREC.NLXERRF != "Y")
    NE0CS-UPDT-TMP-STG(); /* write new selections to ws*/
    NE0CS-VAL-SELECT(); /* verify there is a selection*/
    if (NLXREC.NLXERRF != "Y")
      NE0CS-WRITEOFF();
      NE0CS-INIT-TMP-STG();
      NLXREC.NLXCSCRN = "NE0FM101";
      NE0CW-01-EOSF = "Y";
    end
  end
  ;
  if (converseVar.eventKey is pf20
   && NLXREC.NLXERRF != "Y")
    NLXREC.NLXSCRNX = 5;
    NLXREC.NLXCSCRN = "NE0CM300";
    NE0CW-01-EOSF = "Y";
  end
  ;
end // end NE0C-13003

// Process M200 Reclass Logic
Function NE0C-200()
   /* -----------------------------------------------------------*/
     /* Process screen NE0CM200*/
     /* SALES/cost    RECLASS PROCESSING.*/
     /* note - this process is being performed in a*/
     /* "while loop" from NE0C050 until the end-of-screen*/
     /* flag is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-200";
  move NE0CW-CUR-PAGE-NBR to NE0CW-HOLD-PAGE-NBR withV60Compat;
  NE0CW-CUR-PAGE-NBR = 1;
  ;
  set NE0CW03 empty;
  NE0CW-01-RCLS-COUNT = 0;
  ;
  while (NE0CW-CUR-PAGE-NBR <= NE0CW-HIGH-PAGE-NBR)
    ;
    NE0CM200.VAGen_EZEMSG = " ";
    NLXREC.NLXERRF = "N";
    ;
    NE0CS-GET-TMP-STG();
    ;
    NE0CW-INX = 1;
    ;
      /* process each row of temp storage*/
    ;
    while (NE0CW-INX <= 14 /* 14 rows per temp page*/
    )
      if (NE0CW03.NE0CW-03-SEL[NE0CW-INX] == "S") /* row selected*/
        if (NLXREC.NLXERRF == "N")
          NE0C-201(); /* build screen 200*/
        end
        ;
        converse NE0CM200 ;
        ;
        NE0CM200.VAGen_EZEMSG = " ";
        NLXREC.NLXERRF = "N";
        ;
        ;
        NE0C-210(); /* validate pf keys*/
        if (NE0CW-01-EOSF == "Y")
          return;
        end
        ;
        if (NLXREC.NLXERRF == "N") /* check for error*/
          NE0C-220(); /* process entered option*/
        end
        ;
        if (NLXREC.NLXERRF == "N") /* check for error*/
          NE0C-230(); /* determine CUR action...*/
        end
        ;
      end /* end if row selected*/
      ;
      if (NLXREC.NLXERRF == "N") /* check for error*/
        NE0CW-INX = NE0CW-INX + 1; /* get next row*/
      end
      ;
    end /* 14 rows per temp storage*/
    ;
    NE0CW-CUR-PAGE-NBR = NE0CW-CUR-PAGE-NBR + 1; /* get CUR page of temp*/
  end /* end while CUR page le high page*/
  ;
   /* ****************************************************/
   /* rebuild temporary storage*/
   /* ****************************************************/
  NE0CS-INIT-TMP-STG();
  ;
  if (NLXREC.NLXERRF != "Y")
    if (NE0CW-01-RCLS-COUNT > 0)
      converseLib.validationFailed(97);
    end
  end
  ;
  NLXREC.NLXSCRNX = 1;
  NLXREC.NLXCSCRN = "NE0CM101"; /* go back to calling map*/
  NE0CW-01-EOSF = "Y"; /* when done process all of temp*/
                                  /* storage*/
  ;
end // end NE0C-200

// Validate PF keys; act on some
Function NE0C-201()
   /* *****************************************************/
   /* Build map from temp storage.*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-201";
  ;
  set KUCREC empty;
  converseLib.clearScreen();
  set NE0CM200 initial;
  ;
  NE0CM200.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM200.XXXMAPNM = "NE0CM200"; /* map name*/
  NE0CM200.XXXPRCNM = "NE0C200"; /* process name*/
  NE0CM200.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  VNESCO01.VNESCO01-GROUP = NE0CW-03-SCO-GROUP[NE0CW-INX];
  ;
   /* **************************************/
   /* Build header of MAP200*/
   /* **************************************/
  ;
  NE0CM200.NE0CM-200-PYM = VNESCO01.NE-GL-POST-MO;
  NE0CM200.NE0CM-200-KUCCOID = VNESCO01.KUCCOID;
  ;
       /* get customer name description*/
  ;
  KUCREC.KUCCOID = VNESCO01.KUCCOID;
  NE0CS-S-VCMPNY01();
  NE0CM200.NE0CM-200-KUCCONM = KUCREC.KUCCONM;
  ;
       /* format order number*/
  ;
  NE0CW-02O-OP1CUOID = VNESCO01.OP1CUOID;
  NE0CW-02O-OP1NORID = VNESCO01.OP1NORID;
  NE0CM200.NE0CM-200-ORDER = NE0CW-02-ORDER;
  ;
  NE0CM200.NE0CM-200-NIDIVCID = VNESCO01.NIDIVCID;
  ;
  NE0CM200.NE0CM-200-CST-SRC = VNESCO01.NE-CST-SRC-ID;
  NE0CM200.NE0CM-200-XGPCD = VNESCO01.XGPCD;
  ;
       /* format style*/
  ;
  NE0CW-02S-STY = VNESCO01.SY1STNBR;
  NE0CW-02S-COL = VNESCO01.SY2CLRID;
  NE0CW-02S-DIM = VNESCO01.XDMCD;
  NE0CM200.NE0CM-200-STYLE = NE0CW-02-STYLE;
  ;
  NE0CM200.NE0CM-200-SLSQTY = VNESCO01.NE-CST-SLS-UNT-QTY;
  NE0CM200.NE0CM-200-SLSPRC = VNESCO01.NE-UNT-SLS-PRC;
  NE0CM200.NE0CM-200-CSTQTY = VNESCO01.NE-CST-UNT-QTY;
  NE0CM200.NE0CM-200-CSTPRC = VNESCO01.NE-UNT-CST;
  ;
  NE0CM200.NE0CM-200-SLSQTY-A = VNESCO01.NE-ACR-SLS-UNT-QTY;
  NE0CM200.NE0CM-200-SLSPRC-A = VNESCO01.NE-ACR-UNT-SLS-PRC;
  NE0CM200.NE0CM-200-CSTQTY-A = VNESCO01.NE-ACR-CST-UNT-QTY;
  NE0CM200.NE0CM-200-CSTPRC-A = VNESCO01.NE-ACR-UNT-CST;
  ;
  ;
  ;
end // end NE0C-201

// Validate PF keys; act on some
Function NE0C-210()
   /* -----------------------------------------------------------*/
     /* Validate PF keys*/
     /* Active PF keys: 1, 3, 4, 5, 6, 12, 13, 17, 19, 20, and 21*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-210";
  ;
  set NE0CM200.CATOAP initialAttributes;
  set NE0CM200.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0CM200.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0CM200.CATOAP;
      COMMAREA.CAITEM = NE0CM200.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0CM200.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* process pf keys*/
   /* ***********************************/
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    converseLib.validationFailed(0);
    NLXREC.NLXCSCRN = "NE0CM101";
    NE0CW-01-EOSF = "Y";
    NE0CS-INIT-TMP-STG();
    return;
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf12
   || converseVar.eventKey is enter)
    return;
  end
  ;
      /* pf key not valid*/
  ;
  converseLib.validationFailed(2); /* pf key not valid*/
  NLXREC.NLXERRF = "Y"; /* mark with error*/
  ;
  ;
end // end NE0C-210

// Edit/Act on fctn keys -RECLASS
Function NE0C-220()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-220";
  ;
  if (converseVar.eventKey is pf3)
    return;
  end
  ;
  VNESCO01.VNESCO01-GROUP = NE0CW-03-SCO-GROUP[NE0CW-INX];
  ;
  converseLib.clearScreen();
  
  ;
  set NE0CM-200-RCLS-KUCCOID initialAttributes;
  set NE0CM-200-RCLS-OP1CUOID initialAttributes;
  set NE0CM-200-RCLS-OP1NORID initialAttributes;
  set NE0CM-200-RCLS-NIDIVCID initialAttributes;
  NE0CM-200-RCLS-KUCCONM = " ";
  NE0CW-01-XATCD = " ";
  ;
   /* *******************************************/
   /* validate correct customer number entered*/
   /* *******************************************/
  if (NE0CM-200-RCLS-KUCCOID != 0)
    if (NE0CM-200-RCLS-KUCCOID > 799999 && 
    NE0CM-200-KUCCOID > 799999)
      set NE0CM-200-RCLS-KUCCOID cursor, modified, bold;
      converseLib.validationFailed(191);
      NLXREC.NLXERRF = "Y";
    else
      set VINTGL02 empty;
      VINTGL02.KUCCOID = NE0CM-200-RCLS-KUCCOID;
      VINTGL02.XGPCD = NE0CM-200-XGPCD;
      NE0CS-SF-VINTGL02();
      if (SQLCA.VAGen_SQLCODE == 100)
        set NE0CM-200-RCLS-KUCCOID cursor, modified, bold;
        converseLib.validationFailed(192);
        NLXREC.NLXERRF = "Y";
      else
        set KUCREC empty;
        KUCREC.KUCCOID = NE0CM-200-RCLS-KUCCOID;
        NE0CS-S-VCMPNY01(); /* validate entered customer number*/
        if (SQLCA.VAGen_SQLCODE == 100
         || KUCREC.XXXSTAT == "I")
          set NE0CM-200-RCLS-KUCCOID cursor, modified, bold;
          converseLib.validationFailed(53);
          NLXREC.NLXERRF = "Y";
        else
          if (KUCREC.XAUCD == "31"
           || KUCREC.XAUCD == "32"
           || KUCREC.XAUCD == "33")
            NE0CM-200-RCLS-KUCCONM = KUCREC.KUCCONM;
          else
            if (KUCREC.XAUCD in XAUTBL.XAUCD)
              if (XAUTBL.XATCD[sysVar.arrayIndex] == "06") /* valid comp number.*/
                NE0CM-200-RCLS-KUCCONM = KUCREC.KUCCONM;
                NE0CW-01-XATCD = XAUTBL.XATCD[sysVar.arrayIndex];
              else
                set NE0CM-200-RCLS-KUCCOID cursor, modified, bold;
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(54);
              end
            end
          end
        end
      end
    end
  end
  ;
   /* *******************************************/
   /* validate correct invoice number entered*/
   /* *******************************************/
  if (NE0CM-200-RCLS-NIDIVCID != 0)
    set VPIHDR01 empty;
    if (NE0CW-01-XATCD == "06")
      set NE0CM-200-RCLS-NIDIVCID cursor, modified, bold;
      set NE0CM-200-RCLS-OP1CUOID modified, bold;
      set NE0CM-200-RCLS-OP1NORID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(136);
      return;
    end
    VPIHDR01.NIDIVCID = NE0CM-200-RCLS-NIDIVCID;
    NE0CS-S-VPIHDR01();
    if (SQLCA.VAGen_SQLCODE == 100
     || VPIHDR01.ZDTCD != "PI")
      set NE0CM-200-RCLS-NIDIVCID cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(108);
    end
  end
  ;
   /* *******************************************/
   /* validate correct s.o. number entered*/
   /* *******************************************/
  if (NE0CM-200-RCLS-OP1CUOID != 0 /* s.o. is not required, can derive from*/
   && NE0CM-200-RCLS-OP1NORID != 0) /* ivc*/
    if (NE0CW-01-XATCD == "06")
      set NE0CM-200-RCLS-NIDIVCID cursor, modified, bold;
      set NE0CM-200-RCLS-OP1CUOID modified, bold;
      set NE0CM-200-RCLS-OP1NORID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(136);
      return;
    end
    set OP1REC empty;
    OP1REC.OP1CUOID = NE0CM-200-RCLS-OP1CUOID;
    OP1REC.OP1NORID = NE0CM-200-RCLS-OP1NORID;
    move NE0CM-200-RCLS-OP1CUOID to NE0CW-02O-OP1CUOID withV60Compat;
    OP1REC.OP1PARTN = NE0CW-02-OP1PARTN;
    NE0CS-S-VORHDR01();
    if (SQLCA.VAGen_SQLCODE == 100)
      set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
      set NE0CM-200-RCLS-OP1NORID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(12);
    end
  else
    if (NE0CM-200-RCLS-OP1CUOID == 0
     && NE0CM-200-RCLS-OP1NORID == 0)
      /* accept blank and continue*/
    else /* op1cuoid or op1norid is empty*/
      set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
      set NE0CM-200-RCLS-OP1NORID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(140);
    end
  end
  ;
   /* *******************************************/
   /* if an error occured validating entries, don't continue.*/
   /* *******************************************/
  if (NLXREC.NLXERRF == "Y"
   || NE0CW-01-XATCD == "06")
    return;
  end
  ;
   /* *******************************************/
   /* perform necessary relational edits.*/
   /* *******************************************/
  if (NE0CM-200-RCLS-OP1CUOID == 0
   && NE0CM-200-RCLS-NIDIVCID == 0)
    set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
    set NE0CM-200-RCLS-OP1NORID modified, bold;
    set NE0CM-200-RCLS-NIDIVCID modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(138);
    return;
  end
  ;
   /* *******************************************/
   /* invoice entered - match s.o. and customer*/
   /* *******************************************/
  if (NE0CM-200-RCLS-NIDIVCID != 0) /* invoice no. entered, no sale accrual*/
    if (NE0CM-200-RCLS-OP1CUOID == 0) /* no s.o. number entered.*/
      NE0CM-200-RCLS-OP1CUOID = VPIHDR01.OP1CUOID;
      NE0CM-200-RCLS-OP1NORID = VPIHDR01.OP1NORID;
      set OP1REC empty;
      OP1REC.OP1CUOID = VPIHDR01.OP1CUOID;
      OP1REC.OP1NORID = VPIHDR01.OP1NORID;
      NE0CW-02O-OP1CUOID = VPIHDR01.OP1CUOID;
      OP1REC.OP1PARTN = NE0CW-02-OP1PARTN;
      NE0CS-S-VORHDR01();
      if (SQLCA.VAGen_SQLCODE == 100)
        set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
        set NE0CM-200-RCLS-OP1NORID modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(12);
        return;
      end
    else /* invoice and s.o. both entered.*/
      if (VPIHDR01.OP1CUOID != OP1REC.OP1CUOID
       || VPIHDR01.OP1NORID != OP1REC.OP1NORID)
        set NE0CM-200-RCLS-NIDIVCID cursor, modified, bold;
        set NE0CM-200-RCLS-OP1CUOID modified, bold;
        set NE0CM-200-RCLS-OP1NORID modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(145);
        return;
      end
    end
    if (NE0CM-200-RCLS-KUCCOID == 0) /* no customer number entered.*/
      KUCREC.KUCCOID = VPIHDR01.KUCCOID;
      NE0CS-S-VCMPNY01();
      if (SQLCA.VAGen_SQLCODE == 0)
        NE0CM-200-RCLS-KUCCOID = KUCREC.KUCCOID;
        NE0CM-200-RCLS-KUCCONM = KUCREC.KUCCONM;
      else
        set NE0CM-200-RCLS-KUCCOID cursor, modified, bold;
        set NE0CM-200-RCLS-NIDIVCID modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(53);
        return;
      end
    else /* cust number and invc both entered*/
      if (NE0CM-200-RCLS-KUCCOID != VPIHDR01.KUCCOID)
        set NE0CM-200-RCLS-NIDIVCID cursor, modified, bold;
        set NE0CM-200-RCLS-KUCCOID modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(103);
        return;
      end
    end
  end
  ;
   /* *********************************************/
   /* validate s.o./customer relation.*/
   /* *********************************************/
  if (NE0CM-200-RCLS-OP1CUOID != 0) /* s.o. was entered*/
    if (NE0CM-200-RCLS-KUCCOID == 0) /* and no customer number entered*/
      set KUCREC empty;
      KUCREC.KUCCOID = OP1REC.KUCCOID;
      NE0CS-S-VCMPNY01();
      if (SQLCA.VAGen_SQLCODE == 0)
        NE0CM-200-RCLS-KUCCOID = KUCREC.KUCCOID;
        NE0CM-200-RCLS-KUCCONM = KUCREC.KUCCONM;
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(53);
        set NE0CM-200-RCLS-KUCCOID cursor, modified, bold;
        set NE0CM-200-RCLS-OP1CUOID modified, bold;
        set NE0CM-200-RCLS-OP1NORID modified, bold;
        return;
      end
    else /* customer and s.o. entered.*/
      if (NE0CM-200-RCLS-KUCCOID != OP1REC.KUCCOID)
        set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
        set NE0CM-200-RCLS-OP1NORID modified, bold;
        set NE0CM-200-RCLS-KUCCOID modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(104);
        return;
      end
    end
  end
  ;
   /* ************************************************************/
   /* s.o. is filled now, either from entry or derived from ivc.*/
   /* ************************************************************/
  if (NE0CM-200-RCLS-OP1CUOID == VNESCO01.OP1CUOID
   && NE0CM-200-RCLS-OP1NORID == VNESCO01.OP1NORID
   && NE0CM-200-RCLS-NIDIVCID == VNESCO01.NIDIVCID
   && NE0CM-200-RCLS-KUCCOID == VNESCO01.KUCCOID)
    set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
    set NE0CM-200-RCLS-OP1NORID modified, bold;
    set NE0CM-200-RCLS-NIDIVCID modified, bold;
    set NE0CM-200-RCLS-KUCCOID modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(156);
    return;
  end
  ;
  if (NE0CW-01-XATCD != "06")
    set OP2REC empty;
    move NE0CM-200-RCLS-OP1CUOID to NE0CW-02O-OP1CUOID withV60Compat;
    OP2REC.OP1CUOID = NE0CM-200-RCLS-OP1CUOID;
    OP2REC.OP1PARTN = NE0CW-02-OP1PARTN;
    OP2REC.OP1NORID = NE0CM-200-RCLS-OP1NORID;
    OP2REC.XGPCD = VNESCO01.XGPCD;
    OP2REC.SY1STNBR = VNESCO01.SY1STNBR;
    OP2REC.SY2CLRID = VNESCO01.SY2CLRID;
    ;
    NE0CS-SE-VITEM001();
    ;
    if (SQLCA.VAGen_SQLCODE == 100)
      set NE0CM-200-RCLS-OP1CUOID cursor, modified, bold;
      set NE0CM-200-RCLS-OP1NORID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(164);
      return;
    else
      NE0CS-S2-VITEM001();
      ;
      NE0CS-N2-VITEM001();
      if (SQLCA.VAGen_SQLCODE == 100)
    /* continue*/
      end
      ;
      NE0CS-C2-VITEM001();
      ;
      if (OP2REC.XUMCD in XUMTBL.XUMCD)
    /* continue...*/
      end
    /* determine unit price...*/
      NE0CW-01-UNT-PRC = OP2REC.OP2AUPRC / XUMTBL.XUMCONVF[sysVar.arrayIndex];
    end
  end
  ;
end // end NE0C-220

// Determine next RECLASS action
Function NE0C-230()
   /* **************************************/
   /* Determine next action from MAP200*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NE0C-230";
  ;
  if (converseVar.eventKey is pf3)
    NE0CS-INIT-TMP-STG();
    NLXREC.NLXBLDSC = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is pf12)
    if (NLXREC.NLXERRF != "Y")
      converseLib.validationFailed(77);
      NLXREC.NLXERRF = "Y";
      return;
    end
  end
  ;
  if (converseVar.eventKey is enter) /* reclass sco record.*/
    NE0CS-RCLS-LOGIC();
  end
  ;
end // end NE0C-230

// Add screen
Function NE0C-300()
   /* -----------------------------------------------------------*/
       /* Process screen NE0CM300*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from NE0C050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-300";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0C-301();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0CM300 ;
  ;
  NE0CM300.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  ;
  ;
  NE0C-310(); /* check attention identifier*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-320(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0C-330(); /* determine next action...*/
  end
  ;
  ;
end // end NE0C-300

// Build screen
Function NE0C-301()
   /* **************************************/
   /* Build MAP NE0CM300                 **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0C-301";
  ;
  converseLib.clearScreen();
  set NE0CM300 initial;
  ;
  if (NEW-MSG-NBR == 9999)
    converseLib.validationFailed();
  else
    converseLib.validationFailed(NEW-MSG-NBR);
  end
  NEW-MSG-NBR = 0;
  NE0CM300.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM300.XXXMAPNM = "NE0CM300"; /* map name*/
  NE0CM300.XXXPRCNM = "NE0C-300"; /* process name*/
  NE0CM300.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  VNESCO01.NE-STAT-CD = "AA";
  NE0CM-300-XQACD = "01";
  NE0CM-300-XDMCD = "00";
  move NE0CW-01-CURR-POST-MO to NE0CM-300-PYM withV60Compat;
  ;
  set NE0CM-300-ZPSCD protect;
  NE0CM-300-NE-STAT-CD = "AC"; /* default status code to AC*/
  NE0CM-300-NL-PMT-MTHD-CD = "NL"; /* dflt payment mthd*/
  ;
end // end NE0C-301

// Validate PF keys; act on some
Function NE0C-310()
   /* -----------------------------------------------------------*/
     /* Validate PF keys*/
  ;
     /* Active PF keys: 1, 3, 4, 12*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0C-310";
  ;
  set NE0CM300.CATOAP initialAttributes;
  set NE0CM300.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0CM300.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0CM300.CATOAP;
      COMMAREA.CAITEM = NE0CM300.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0CM300.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* process pf keys*/
   /* ***********************************/
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    NLXREC.NLXSCRNX = 1;
    NLXREC.NLXCSCRN = "NE0CM101";
    NE0CW-01-EOSF = "Y";
    return;
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
   /* ***********************************/
      /* continue processing on valid function keys.*/
   /* ***********************************/
  if (converseVar.eventKey is pf12
   || converseVar.eventKey is enter)
    return;
  end
  ;
  if (converseVar.eventKey is pf1)
    return;
  end
  ;
      /* pf key not valid*/
  ;
  converseLib.validationFailed(2); /* pf key not valid*/
  NLXREC.NLXERRF = "Y"; /* mark with error*/
  ;
  ;
end // end NE0C-310

// Determine next action M300
Function NE0C-320()
  /* **********************************/
  /* Edit/act on function keys.*/
  /* **********************************/
  ;
  NLXREC.NLXCPROC = "NE0C-320";
  ;
  if (converseVar.eventKey is pf3)
    return;
  end
  ;
  set NE0CM-300-XGPCD initialAttributes;
  set NE0CM-300-SY1STNBR initialAttributes;
  set NE0CM-300-SY2CLRID initialAttributes;
  set NE0CM-300-XDMCD initialAttributes;
  set NE0CM-300-KUCCOID initialAttributes;
  set NE0CM-300-KUCCONM initialAttributes;
  set NE0CM-300-XWHCD initialAttributes;
  set NE0CM-300-XUMCD initialAttributes;
  set NE0CM-300-XQACD initialAttributes;
  set NE0CM-300-NIDIVCID initialAttributes;
  set NE0CM-300-PC3PONBR initialAttributes;
  set NE0CM-300-OP1CUOID initialAttributes;
  set NE0CM-300-OP1NORID initialAttributes;
  set NE0CM-300-CST-SRC-ID initialAttributes;
  set NE0CM-300-GLAENT initialAttributes;
  set NE0CM-300-GLARCID initialAttributes;
  set NE0CM-300-GLANTAC initialAttributes;
  set NE0CM-300-GLASUB initialAttributes;
  set NE0CM-300-GLAPRJ initialAttributes;
  set NE0CM-300-NIJGLDES initialAttributes;
  set NE0CM-300-SLS-QTY initialAttributes;
  set NE0CM-300-SLS-PRC initialAttributes;
  set NE0CM-300-CST-QTY initialAttributes;
  set NE0CM-300-CST initialAttributes;
  set NE0CM-300-ACR-SLS-QTY initialAttributes;
  set NE0CM-300-ACR-SLS-PRC initialAttributes;
  set NE0CM-300-ACR-CST-QTY initialAttributes;
  set NE0CM-300-ACR-CST initialAttributes;
  set NE0CM-300-NE-STAT-CD initialAttributes;
  set NE0CM-300-NL-PMT-MTHD-CD initialAttributes;
  ;
  /* *********************************/
  /* Validate Status Code Entry*/
  /* *********************************/
  if (NE0CM-300-NE-STAT-CD == " ")
    set NE0CM-300-NE-STAT-CD cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(177);
  else
    if (NE0CM-300-NE-STAT-CD != "AC"
     && NE0CM-300-NE-STAT-CD != "PR")
      set NE0CM-300-NE-STAT-CD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(177);
    end
  end
  ;
  /* *********************************/
  /* Validate G/L entry*/
  /* *********************************/
  if (NE0CM-300-GLAENT == 0 /* blank g/l is not allowed.*/
   || NE0CM-300-GLARCID == 0
   || NE0CM-300-GLANTAC == 0
   || NE0CM-300-GLASUB == 0)
    set NE0CM-300-GLAENT cursor, modified, bold;
    set NE0CM-300-GLARCID modified, bold;
    set NE0CM-300-GLANTAC modified, bold;
    set NE0CM-300-GLASUB modified, bold;
    set NE0CM-300-GLAPRJ modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(170);
  else /* validate entered g/l nbr.*/
    VNLGLA01.GLAENT = NE0CM-300-GLAENT;
    VNLGLA01.GLARCID = NE0CM-300-GLARCID;
    VNLGLA01.GLANTAC = NE0CM-300-GLANTAC;
    VNLGLA01.GLASUB = NE0CM-300-GLASUB;
    VNLGLA01.GLAPRJ = NE0CM-300-GLAPRJ;
    NE0CS-S-VNLGLA01();
    if (SQLCA.VAGen_SQLCODE != 100)
      NE0CM-300-NIJGLDES = VNLGLA01.NIJGLDES;
    else
      set NE0CM-300-GLAENT cursor, modified, bold;
      set NE0CM-300-GLARCID modified, bold;
      set NE0CM-300-GLANTAC modified, bold;
      set NE0CM-300-GLASUB modified, bold;
      set NE0CM-300-GLAPRJ modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(172);
    end
  end
  /* *********************************/
  /* Validate GPC entry*/
  /* *********************************/
  if (NE0CM-300-XGPCD == "?") /* popup requested for GPC*/
    XPXX001(); /* initialize the storage*/
    XX0XW02.XX0XWHDR = " GPC CODE";
    while (XX0XW02.XX0XWEND == "N")
      XPXGP01();
    end
    if (XX0XW02.XX0XWPIX > 0)
      NE0CM-300-XGPCD = XGPTBL.XGPCD[XX0XWPIX];
    else
      NE0CM-300-XGPCD = " ";
      set NE0CM-300-XGPCD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(90);
    end
  end
  if (NE0CM-300-XGPCD != " ")
    if (NE0CM-300-XGPCD in XGPTBL.XGPCD)
      if (NE0CM-300-XGPCD == "02"
       || NE0CM-300-XGPCD == "03")
        /* continue*/
      else
        set NE0CM-300-XGPCD cursor, modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(81);
      end
    else
      set NE0CM-300-XGPCD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(47);
    end
  else /* no gpc was entered*/
    /* derive gpc from order header.*/
  end
  ;
  /* *********************************/
  /* Validate Payment Method Code entry*/
  /* *********************************/
  if (NE0CM-300-NL-PMT-MTHD-CD == " ")
    set NE0CM-300-NL-PMT-MTHD-CD cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(166); /* change err number to new*/
  else
    if (NE0CM-300-NL-PMT-MTHD-CD == "NL"
     || NE0CM-300-NL-PMT-MTHD-CD == "NI")
      VNESCO01.NL-PMT-MTHD-CD = NE0CM-300-NL-PMT-MTHD-CD;
    else
      set NE0CM-300-NL-PMT-MTHD-CD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(166);
    end
  end
  ;
   /* **************************************************/
   /* validate warehouse code*/
   /* **************************************************/
  if (NE0CM-300-XWHCD != " ")
    if (NE0CM-300-XWHCD in XWHTBL.XWHCD
     && XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      /* continue*/
    else
      set NE0CM-300-XWHCD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(109);
    end
  end
  ;
   /* **************************************************/
   /* validate invoice number*/
   /* **************************************************/
  if (NE0CM-300-NIDIVCID != 0)
    set VPIHDR01 empty;
    VPIHDR01.NIDIVCID = NE0CM-300-NIDIVCID;
    NE0CS-S-VPIHDR01();
    if (SQLCA.VAGen_SQLCODE == 0
     && VPIHDR01.ZDTCD == "PI")
      NE0CM-300-KUMSTRID = VPIHDR01.KUMSTRID;
      if (NE0CM-300-OP1CUOID == 0
       && NE0CM-300-OP1NORID == 0)
        NE0CM-300-OP1CUOID = VPIHDR01.OP1CUOID;
        NE0CM-300-OP1NORID = VPIHDR01.OP1NORID;
      end
      if (NE0CM-300-KUCCOID == 0)
        NE0CM-300-KUCCOID = VPIHDR01.KUCCOID;
      end
      if (NE0CM-300-XWHCD == " ")
        NE0CM-300-XWHCD = VPIHDR01.XWHCD;
      end
    else
      set NE0CM-300-NIDIVCID cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(108);
    end
  end
  ;
   /* **************************************************/
   /* validate s.o. number*/
   /* **************************************************/
  ;
  if (NE0CM-300-OP1CUOID != 0)
    if (NE0CM-300-OP1NORID == 0)
      set NE0CM-300-OP1NORID cursor, modified, bold;
      set NE0CM-300-OP1NORID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(106);
    else
      set OP1REC empty;
      OP1REC.OP1CUOID = NE0CM-300-OP1CUOID;
      move NE0CM-300-OP1CUOID to NE0CW-02O-OP1CUOID withV60Compat;
      OP1REC.OP1PARTN = NE0CW-02-OP1PARTN;
      OP1REC.OP1NORID = NE0CM-300-OP1NORID;
      NE0CS-S-VORHDR01();
      if (SQLCA.VAGen_SQLCODE == 100)
        set NE0CM-300-OP1CUOID cursor, modified, bold;
        set NE0CM-300-OP1NORID modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(12);
      else
        if (NE0CM-300-XGPCD == " ")
          NE0CM-300-XGPCD = OP1REC.XGPCD;
        end
        if (NE0CM-300-KUCCOID == 0)
          NE0CM-300-KUCCOID = OP1REC.KUCCOID;
        end
      end
    end
  else
    if (NE0CM-300-OP1NORID == 0)
      /* continue*/
    else
      set NE0CM-300-OP1CUOID cursor, modified, bold;
      set NE0CM-300-OP1NORID modified, bold;
      set NE0CM-300-NIDIVCID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(138);
    end
  end
  ;
   /* **************************************************/
   /* validate p.o. number*/
   /* **************************************************/
  if (NE0CM-300-PC3PONBR != 0)
    set PC3REC empty;
    PC3REC.PC3PONBR = NE0CM-300-PC3PONBR;
    PC3REC.XGPCD = NE0CM-300-XGPCD;
    NE0CS-S-VPOHDR01();
    if (SQLCA.VAGen_SQLCODE == 0)
      if (PC3REC.YPUCD == "IN"
       || PC3REC.YPUCD == "TN"
       || PC3REC.YPUCD == "CX")
        set NE0CM-300-PC3PONBR cursor, modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(137);
      end
    else
      set NE0CM-300-PC3PONBR cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(123);
    end
  end
  ;
   /* ***********************************************/
   /* Validate Style Number entry*/
   /* ***********************************************/
  if (NE0CM-300-SY1STNBR == " "
   || NE0CM-300-SY2CLRID == " "
   || NE0CM-300-XDMCD == " ")
    set NE0CM-300-SY1STNBR cursor, modified, bold;
    set NE0CM-300-SY2CLRID modified, bold;
    set NE0CM-300-XDMCD modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(67);
  else
    PG2REC.XGPCD = NE0CM-300-XGPCD;
    PG2REC.SY1STNBR = NE0CM-300-SY1STNBR;
    PG2REC.SY2CLRID = NE0CM-300-SY2CLRID;
    PG2REC.XDMCD = NE0CM-300-XDMCD;
    NE0CS-S-VSYCLR01();
    if (SQLCA.VAGen_SQLCODE == 100)
      set NE0CM-300-XGPCD cursor, modified, bold;
      set NE0CM-300-SY1STNBR modified, bold;
      set NE0CM-300-SY2CLRID modified, bold;
      set NE0CM-300-XDMCD modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(67);
    end
  end
  ;
   /* **************************************************/
   /* validate customer number entry*/
   /* **************************************************/
  if (NE0CM-300-KUCCOID != 0)
    set KUCREC empty;
    KUCREC.KUCCOID = NE0CM-300-KUCCOID;
    NE0CS-S-VCMPNY01();
    if (SQLCA.VAGen_SQLCODE == 100)
      set NE0CM-300-KUCCOID cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(53);
    else
      if (KUCREC.XAUCD == "31"
       || KUCREC.XAUCD == "32"
       || KUCREC.XAUCD == "33")
        NE0CM-300-KUCCONM = KUCREC.KUCCONM;
      else
        if (KUCREC.XAUCD in XAUTBL.XAUCD)
          if (XAUTBL.XATCD[sysVar.arrayIndex] == "06")
            NE0CM-300-KUCCONM = KUCREC.KUCCONM;
            NE0CW-01-XATCD = XAUTBL.XATCD[sysVar.arrayIndex];
          else
            set NE0CM-300-KUCCOID cursor, modified, bold;
            NLXREC.NLXERRF = "Y";
            converseLib.validationFailed(54);
          end
        end
      end
      NE0CM-300-KUCCOID = KUCREC.KUCCOID;
      NE0CM-300-KUCCONM = KUCREC.KUCCONM;
    end
  else
    NE0CM-300-KUCCONM = " ";
  end
  converseLib.clearScreen();
  
   /* **************************************************/
   /* if field entries don't all check out, return before relation test.*/
   /* **************************************************/
  if (NLXREC.NLXERRF == "Y")
    return;
  end
  ;
   /* **************************************************/
   /* check s.o./invoice relation*/
   /* **************************************************/
  ;
  if (NE0CM-300-NIDIVCID != 0) /* VPIHDR01 still has valid info.*/
    if (VPIHDR01.OP1CUOID != OP1REC.OP1CUOID) /* ivc doesn't match s.o.*/
      set NE0CM-300-OP1CUOID cursor, modified, bold;
      set NE0CM-300-OP1NORID modified, bold;
      set NE0CM-300-NIDIVCID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(145);
      return;
    end
    if (NE0CM-300-XWHCD == " ")
      NE0CM-300-XWHCD = VPIHDR01.XWHCD;
    end
  end
  ;
   /* *********************************************/
   /* validate customer relates correctly to s.o.*/
   /* *********************************************/
  if (NE0CM-300-KUCCOID != 0) /* customer number was entered.*/
    if (OP1REC.KUCCOID != NE0CM-300-KUCCOID) /* cust doesn't match s.o.*/
      set NE0CM-300-OP1CUOID cursor, modified, bold;
      set NE0CM-300-OP1NORID modified, bold;
      set NE0CM-300-KUCCOID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(83);
      return;
    end
  else /* fill blank customer number from s.o.*/
    NE0CM-300-KUCCOID = OP1REC.KUCCOID;
  end
  ;
  set KUCREC empty;
  KUCREC.KUCCOID = OP1REC.KUCCOID;
  NE0CS-S-VCMPNY01();
  if (SQLCA.VAGen_SQLCODE == 100)
    set NE0CM-300-KUCCOID cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(83);
    return;
  else
    NE0CM-300-KUCCONM = KUCREC.KUCCONM;
  end
  ;
   /* **************************************************/
   /* validate that item exists on s.o.*/
   /* **************************************************/
  set OP2REC empty;
  OP2REC.OP1CUOID = OP1REC.OP1CUOID;
  OP2REC.OP1PARTN = OP1REC.OP1PARTN;
  OP2REC.OP1NORID = OP1REC.OP1NORID;
  OP2REC.XGPCD = NE0CM-300-XGPCD;
  OP2REC.SY1STNBR = NE0CM-300-SY1STNBR;
  OP2REC.SY2CLRID = NE0CM-300-SY2CLRID;
  ;
  NE0CS-SE-VITEM001();
  ;
  if (SQLCA.VAGen_SQLCODE == 100) /* reclass item not found as s.o. item.*/
    set NE0CM-300-OP1CUOID cursor, modified, bold;
    set NE0CM-300-OP1NORID modified, bold;
    set NE0CM-300-XGPCD modified, bold;
    set NE0CM-300-SY1STNBR modified, bold;
    set NE0CM-300-SY2CLRID modified, bold;
    set NE0CM-300-XDMCD modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(164);
    return;
  else
    NE0CS-S2-VITEM001(); /* open cursor on s.o. item table*/
    ;
    NE0CS-N2-VITEM001(); /* fetch on cursor 2*/
    ;
    if (SQLCA.VAGen_SQLCODE != 100)
      NE0CW-01-UNT-PRC = OP2REC.OP2AUPRC; /* unit price*/
      if (NE0CM-300-XUMCD == " ")
        NE0CM-300-XUMCD = OP2REC.XUMCD;
      else
        if (NE0CM-300-XUMCD != OP2REC.XUMCD)
          NLXREC.NLXERRF = "Y";
          set NE0CM-300-XUMCD cursor, modified, bold;
          converseLib.validationFailed(178);
          return;
        end
      end
    else /* s.o. item not found.*/
      set NE0CM-300-XGPCD cursor, modified, bold;
      set NE0CM-300-SY1STNBR modified, bold;
      set NE0CM-300-SY2CLRID modified, bold;
      set NE0CM-300-XDMCD modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(164);
    end
    ;
    NE0CS-C2-VITEM001(); /* close cursor 2 on vitem001*/
  end
  ;
   /* ***************************************************/
   /* Find customer cross reference.*/
   /* ***************************************************/
  if (NLXREC.NLXERRF != "Y")
    set PC2REC empty;
    PC2REC.XGPCD = OP1REC.XGPCD;
    PC2REC.KUCCOID = OP1REC.KUCCOID;
    PC2REC.KUMSTRID = OP1REC.KUMSTRID;
    PC2REC.XNXCD = 0;
    NE0CS-SA-VPRDCU01();
    if (SQLCA.VAGen_SQLCODE == 0)
      NE0CM-300-KUMSTRID = PC2REC.KUMSTRID;
      /* TCS change begin 08/24/00*/
      if (PC2REC.PC2CUXID == "CNFTL" || 
      PC2REC.PC2CUXID == "CANFL" || 
      PC2REC.PC2CUXID == "CAFTL")
        NE0CM-300-PC2CUXID = "FT1SA";
      end
      if (PC2REC.PC2CUXID == "CMFTL")
        NE0CM-300-PC2CUXID = "FT2SA";
      end
      if (PC2REC.PC2CUXID == "CBATA")
        NE0CM-300-PC2CUXID = "BT1SA";
      end
      if (PC2REC.PC2CUXID == "CCHAM" || 
      PC2REC.PC2CUXID == "CANCH")
        NE0CM-300-PC2CUXID = "CH1SA";
      end
      if (PC2REC.PC2CUXID == "CANAW")
        NE0CM-300-PC2CUXID = "AW1SA";
      end
      if (PC2REC.PC2CUXID == "CAN06")
        NE0CM-300-PC2CUXID = "APLSS";
      end
      if (PC2REC.PC2CUXID == "CAN07")
        NE0CM-300-PC2CUXID = "EQPSS";
      end
      if (PC2REC.PC2CUXID == "CAN18" || 
      PC2REC.PC2CUXID == "CAN23")
        NE0CM-300-PC2CUXID = "FTWSS";
      end
      if (PC2REC.PC2CUXID == "NAT42")
        NE0CM-300-PC2CUXID = "CANRG";
      end
      if (PC2REC.PC2CUXID == "MIS90")
        NE0CM-300-PC2CUXID = "MISC1";
      end
      if (PC2REC.PC2CUXID == "MIS91")
        NE0CM-300-PC2CUXID = "MISC2";
      end
      /* TCS change end   08/24/00*/
      NE0CM-300-PC2CUXID = PC2REC.PC2CUXID;
    else
      set NE0CM-300-OP1CUOID cursor, modified, bold;
      set NE0CM-300-OP1NORID modified, bold;
      set NE0CM-300-NIDIVCID modified, bold;
      set NE0CM-300-PC2CUXID modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(161);
      return;
    end
  end
  ;
   /* **************************************************/
   /* validate p.o. warehouse relation*/
   /* note that one or the other is required entry*/
   /* UNLESS a cost accrual is entered.*/
   /* **************************************************/
  if (NE0CM-300-PC3PONBR != 0) /* p.o. number was entered.*/
    /* fill map fields from p.o.*/
    NE0CM-300-FY1FCTYC = PC3REC.FY1FCTYC;
    NE0CM-300-XSECD = PC3REC.XSECD;
    NE0CM-300-PCFSEYR = PC3REC.PCFSEYR;
    NE0CM-300-PC3POIDT = PC3REC.PC3POIDT;
    ;
    set PC6REC empty;
    PC6REC.PC3PONBR = PC3REC.PC3PONBR;
    PC6REC.XGPCD = PC3REC.XGPCD;
    PC6REC.SY1STNBR = PG2REC.SY1STNBR;
    PC6REC.SY2CLRID = PG2REC.SY2CLRID;
    PC6REC.XDMCD = PG2REC.XDMCD;
    PC6REC.XQACD = NE0CM-300-XQACD;
    PC6REC.PC2CUXID = PC2REC.PC2CUXID;
    NE0CS-SC-VPOITM01();
    /* IF SQLCA.SQLCODE EQ 100;*/
     /* SET NE0CM-300-PC3PONBR CURSOR,MODIFIED,BRIGHT;*/
     /* SET NE0CM-300-XGPCD MODIFIED,BRIGHT;*/
     /* SET NE0CM-300-SY1STNBR MODIFIED,BRIGHT;*/
     /* SET NE0CM-300-SY2CLRID MODIFIED,BRIGHT;*/
     /* SET NE0CM-300-XDMCD MODIFIED,BRIGHT;*/
     /* SET NE0CM-300-XQACD MODIFIED,BRIGHT;*/
     /* SET NE0CM-300-XWHCD MODIFIED,BRIGHT;*/
     /* MOVE 'Y' TO NLXREC.NLXERRF;*/
     /* MOVE 133 TO EZEMNO;*/
     /* EZERTN;*/
    /* ELSE;*/
     /* IF NE0CM-300-OP1CUOID EQ 0;*/
       /* IF NE0CM-300-XUMCD EQ ' ';*/
         /* MOVE PC6REC.XUMCD TO NE0CM-300-XUMCD;*/
       /* ELSE;*/
         /* IF NE0CM-300-XUMCD NE PC6REC.XUMCD;*/
           /* MOVE 'Y' TO NLXREC.NLXERRF;*/
           /* SET NE0CM-300-XUMCD CURSOR,MODIFIED,BRIGHT;*/
           /* MOVE 178 TO EZEMNO;*/
           /* EZERTN;*/
         /* END;*/
       /* END;*/
     /* END;*/
     /* IF NE0CM-300-XWHCD EQ ' ';*/
       /* MOVE PC6REC.XWHCD TO NE0CM-300-XWHCD;*/
     /* ELSE;*/
       /* IF PC6REC.XWHCD EQ NE0CM-300-XWHCD;*/
         /* p.o. item and warehouse relate properly.*/
       /* ELSE;*/
         /* SET NE0CM-300-PC3PONBR CURSOR,MODIFIED,BRIGHT;*/
         /* SET NE0CM-300-XGPCD MODIFIED,BRIGHT;*/
         /* SET NE0CM-300-SY1STNBR MODIFIED,BRIGHT;*/
         /* SET NE0CM-300-SY2CLRID MODIFIED,BRIGHT;*/
         /* SET NE0CM-300-XDMCD MODIFIED,BRIGHT;*/
         /* SET NE0CM-300-XQACD MODIFIED,BRIGHT;*/
         /* MOVE 'Y' TO NLXREC.NLXERRF;*/
         /* MOVE 137 TO EZEMNO;*/
         /* EZERTN;*/
       /* END;*/
     /* END;*/
    /* END;*/
  else /* no p.o. number was entered.*/
    NE0CM-300-FY1FCTYC = " ";
    NE0CM-300-XSECD = " ";
    NE0CM-300-PCFSEYR = 0;
    NE0CM-300-PC3POIDT = 0;
    NE0CM-300-PC2CUXID = " ";
    if (NE0CM-300-XWHCD == " "
     && NE0CM-300-CST-QTY > 0)
      set NE0CM-300-PC3PONBR cursor, modified, bold;
      set NE0CM-300-XWHCD modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(139);
      return;
    else
      if (NE0CM-300-OP1CUOID == 0
      ) /* validate unit of measure against*/
                                   /* vsty01?*/
      end
      /* o.k. don't need p.o. information if warehouse entered.*/
    end
  end
  ;
   /* *******************/
   /* set zps source code*/
   /* *******************/
  if (NE0CM-300-PC3PONBR != 0)
    set NE0CM-300-ZPSCD protect;
    set FY1REC empty;
    FY1REC.XGPCD = PC3REC.XGPCD;
    FY1REC.FY1FCTYC = PC3REC.FY1FCTYC;
    NE0CS-S-VFCTY001();
    if (FY1REC.XCTCD in XCTTBL.XCTCD)
      NE0CM-300-ZPSCD = XCTTBL.ZPSCD[sysVar.arrayIndex];
    else
      set NE0CM-300-PC3PONBR cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(123);
      return;
    end
  else /* no p.o. entered, derive from invoice.*/
    if (NE0CM-300-NIDIVCID != 0)
      NE0CM-300-ZPSCD = VPIHDR01.ZPSCD;
    else
      NE0CM-300-ZPSCD = "US";
    end
  end
  ;
  NE0CS-VAL-SLS-CST();
  if (NLXREC.NLXERRF == "Y")
    return;
  end
  ;
   /* ***************************************************/
   /* validate cost-src with cost entry.*/
   /* ***************************************************/
  if (NE0CM-300-CST-QTY > 0
   && NE0CM-300-CST-SRC-ID == " ")
    set NE0CM-300-CST-SRC-ID cursor, modified, bold;
    set NE0CM-300-CST-QTY modified, bold;
    set NE0CM-300-CST modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(159);
    return;
  end
  ;
   /* ***************************************************/
   /* validate status code with entries.*/
   /* ***************************************************/
  if (NE0CM-300-NE-STAT-CD == "PR"
   && (NE0CM-300-ACR-SLS-QTY != 0
   || NE0CM-300-SLS-QTY != 0))
    set NE0CM-300-NE-STAT-CD cursor, modified, bold;
    set NE0CM-300-SLS-QTY modified, bold;
    set NE0CM-300-ACR-SLS-QTY modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(176);
  end
  ;
  NE0CS-FILL-SCOREC();
  ;
  converseLib.clearScreen();
  
  ;
end // end NE0C-320

// Determine next action M300
Function NE0C-330()
  /* **********************************/
  /* Determine next action*/
  /* **********************************/
  ;
  NLXREC.NLXCPROC = "NE0C-330";
  ;
  if (converseVar.eventKey is pf3)
    NE0CS-INIT-TMP-STG();
    return;
  end
  ;
  if (converseVar.eventKey is pf12) /* edit screen, make no updates*/
    converseLib.validationFailed(77); /* edits performed*/
    NLXREC.NLXERRF = "Y";
    return;
  end
  ;
  /* *********************************/
  /* insert new row if enter was hit*/
  /* *********************************/
  ;
  if (converseVar.eventKey is enter)
    ;
    NE0CS-FILL-ACRREC();
    if (NE0CM-300-ACR-CST-QTY != 0)
      VNEACR01.NE-ACR-TYP-CD = "CS";
      VNEACR01.NE-ACR-UNT = NE0CM-300-ACR-CST-QTY;
      VNEACR01.NE-ACR-UNT-PRC-CST = NE0CM-300-ACR-CST;
      NE0CS-A-VNEACR01();
    end
    if (NE0CM-300-ACR-SLS-QTY != 0)
  /* Get Sale G/L code from VSTYGL01.*/
      NE0CS-GET-SL-GL();
      ;
      VNEACR01.NE-ACR-TYP-CD = "SL";
      VNEACR01.NE-ACR-UNT = NE0CM-300-ACR-SLS-QTY;
      VNEACR01.NE-ACR-UNT-PRC-CST = NE0CM-300-ACR-SLS-PRC;
      NE0CS-A-VNEACR01();
    end
    NE0CS-ADD-VNESCO01();
  end
  ;
  ;
end // end NE0C-330

// Open cursor 1 on VNCADJ01
Function NE0CS-A-VNEACR01()
  /* ************************************************************************/
  /* Add a new row to VNEACR01*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-A-VNEACR01";
  ;
  XX0XS01(); /* get current date and time for*/
                                  /* zz-change-family*/
  VNEACR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEACR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEACR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
   /* Add row to - VNACRO01*/
  ;
  call "IO6940" ("A ", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes}; /* Add row to VNEACR*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNEACR01";
    NE0CW-01LRG-NBR = VNEACR01.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-A-VNEACR01

// Open cursor 1 on VNCADJ01
Function NE0CS-A-VNESCO01()
  /* ************************************************************************/
  /* Add a new row to VNESCO01*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-A-VNESCO01";
  ;
  XX0XS01(); /* get current date and time for*/
                                  /* zz-change family*/
  VNESCO01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO6980" ("A ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes}; /* Add row to VNESCO*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    NE0CW-01LRG-NBR = VNESCO01.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-A-VNESCO01

// Add temp storage
Function NE0CS-ADD-TMP-STG()
  /* ***********************************************************************/
  /* Write temp storage*/
  /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-ADD-TMP-STG";
  ;
  move NE0CW-W03-SIZE to NE0CW-03-LENGTH withV60Compat;
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application id*/
  ;
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (NE0CW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
  /* ***********************************************************************/
  /* If successful, return to previous process.*/
  /* ***********************************************************************/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* normal return code*/
    NE0CW-HIGH-PAGE-NBR = TA5REC.TA5TSQIX; /* Save high page Nbr*/
    return; /* Return*/
  else
    ;
    /* *********************************************************************/
    /* Otherwise, indicate that a system error occurred.*/
    /* *********************************************************************/
    ;
    converseLib.validationFailed(299); /* Indicate system error*/
    ;
    XPNL-006(); /* abend routine*/
    ;
  end
  ;
end // end NE0CS-ADD-TMP-STG

// ADD VNESCO01 record
Function NE0CS-ADD-VNESCO01()
  /* ******************************************************************/
  /* This statement group is used to format the the VNECSO01 in order*/
  /* to Insert a VNESCO01 record with a ne-stat-cd of of 'AC'.*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-ADD-VNESCO01";
  ;
  set VNESCO01 empty;
  ;
  VNESCO01.ZZZCHGCT = 0;
  ;
  NE0CS-FILL-SCOREC(); /* fills sco record from map300(mostly)*/
  ;
  NE0CS-S-VNESCO01();
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(142); /* row already exists*/
    return;
  else /* row not found, OK to insert*/
    NE0CS-A-VNESCO01();
    ;
    if (SQLCA.VAGen_SQLCODE == 0)
      NE0C-301(); /* REBUILD BLANK SCREEN*/
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(143); /* add successful*/
      return;
    end
  end
  ;
  ;
end // end NE0CS-ADD-VNESCO01

// Build map from temp storage
Function NE0CS-BLD-MAP101()
   /* *****************************************************/
   /* Build map from temp storage.*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-BLD-MAP101";
  ;
  set NE0CW03 empty;
  ;
  converseLib.clearScreen();
  set NE0CM101 initial;
  ;
  NE0CM101.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM101.XXXMAPNM = "NE0CM101"; /* map name*/
  NE0CM101.XXXPRCNM = "NE0C-10001"; /* process name*/
  NE0CM101.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* Build header of map.................*/
  ;
  NE0CM-101-CUST = NEWREC.NEW-KUCCOID;
  NE0CM-101-CUST-NM = NEWREC.NEW-KUCCONM;
  NE0CM101.NE0CM-101-PYM = NEWREC.NEW-POSTING-MONTH;
   /* Format Order Number then move to MAP101*/
  NE0CW-02O-OP1CUOID = NEWREC.NEW-CUST-ORDID;
  NE0CW-02O-OP1NORID = NEWREC.NEW-NIKE-ORDID;
  NE0CM101.NE0CM-101-ORDER = NE0CW-02-ORDER;
  NE0CM101.NE0CM-101-GPC = NEWREC.NEW-XGPCD;
   /* Format Style Number then move to MAP101*/
  if (NEW-STYLE-CD != " ")
    NE0CW-02S-STY = NEWREC.NEW-STYLE-CD;
    NE0CW-02S-COL = NEWREC.NEW-COLOR-CD;
    NE0CW-02S-DIM = NEWREC.NEW-DIM-CD;
    NE0CW-02S-H1 = "-";
    NE0CW-02S-H2 = "-";
    NE0CM101.NE0CM-101-STYLE = NE0CW-02-STYLE;
  else
    NE0CM101.NE0CM-101-STYLE = " ";
  end
  ;
  NE0CM-101-XQACD = NEWREC.NEW-QUALITY-CD;
  ;
  if (NE0CW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0CW-CUR-PAGE-NBR <= NE0CW-HIGH-PAGE-NBR)
    NE0CS-GET-TMP-STG(); /* Get current page*/
    NE0CM101.NE0CM-FM-PAGE = NE0CW-CUR-PAGE-NBR;
    NE0CM101.NE0CM-TO-PAGE = NE0CW-HIGH-PAGE-NBR;
  else
    NE0CM101.NE0CM-FM-PAGE = 0;
    NE0CM101.NE0CM-TO-PAGE = 0;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(100);
  end
  ;
  ;
  NE0CW-INX = 14;
  while (NE0CW-INX >= 1)
    VNESCO01.VNESCO01-GROUP = NE0CW03.NE0CW-03-SCO-GROUP[NE0CW-INX];
    ;
    NE0CW-02-STYLE = " ";
    NE0CW-02-ORDER = 0;
    ;
    NE0CM101.NE0CM-101-SEL[NE0CW-INX] = NE0CW03.NE0CW-03-SEL[NE0CW-INX];
    if (VNESCO01.NE-STAT-CD != "AC"
     && VNESCO01.NE-STAT-CD != "RC")
      set NE0CM101.NE0CM-101-SEL[NE0CW-INX] invisible, protect;
    else
      set NE0CM-101-SEL[NE0CW-INX] initialAttributes, cursor;
    end
    NE0CM101.NE0CM-101-KUC[NE0CW-INX] = VNESCO01.KUCCOID;
    ;
    if (VNESCO01.SY1STNBR == " ")
      NE0CM101.NE0CM-101-STYL[NE0CW-INX] = " ";
    else
      NE0CW02.NE0CW-02S-STY = VNESCO01.SY1STNBR;
      NE0CW02.NE0CW-02S-COL = VNESCO01.SY2CLRID;
      NE0CW02.NE0CW-02S-DIM = VNESCO01.XDMCD;
      NE0CW-02S-H1 = "-";
      NE0CW-02S-H2 = "-";
      NE0CM101.NE0CM-101-STYL[NE0CW-INX] = NE0CW-02-STYLE;
    end
    ;
    NE0CM101.NE0CM-101-QUAL[NE0CW-INX] = VNESCO01.XQACD;
    NE0CM101.NE0CM-101-STAT[NE0CW-INX] = VNESCO01.NE-STAT-CD;
    ;
    if (VNESCO01.OP1CUOID == 0)
      NE0CW-02-ORDER = 0;
    else
      NE0CW-02O-OP1CUOID = VNESCO01.OP1CUOID;
      NE0CW-02O-OP1NORID = VNESCO01.OP1NORID;
    end
    NE0CM101.NE0CM-101-ORD[NE0CW-INX] = NE0CW-02-ORDER;
    ;
    NE0CM101.NE0CM-101-IVC[NE0CW-INX] = VNESCO01.NIDIVCID;
    NE0CM101.NE0CM-101-XUMCD[NE0CW-INX] = VNESCO01.XUMCD;
    NE0CM101.NE0CM-101-QCST[NE0CW-INX] = VNESCO01.NE-CST-UNT-QTY;
    NE0CM101.NE0CM-101-QSLS[NE0CW-INX] = VNESCO01.NE-CST-SLS-UNT-QTY;
    NE0CM-101-QACST[NE0CW-INX] = VNESCO01.NE-ACR-CST-UNT-QTY;
    NE0CM-101-QASLS[NE0CW-INX] = VNESCO01.NE-ACR-SLS-UNT-QTY;
    ;
    NE0CW-INX = NE0CW-INX - 1;
  end
  ;
end // end NE0CS-BLD-MAP101

// Build map from temp storage
Function NE0CS-BLD-MAP102()
   /* *****************************************************/
   /* Build map from temp storage.*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-BLD-MAP102";
  ;
  set NE0CW03 empty;
  ;
  converseLib.clearScreen();
  set NE0CM102 initial;
  ;
  NE0CM102.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM102.XXXMAPNM = "NE0CM102"; /* map name*/
  NE0CM102.XXXPRCNM = "NE0C-10002"; /* process name*/
  NE0CM102.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* Build header of map.................*/
  ;
  NE0CM-102-CUST = NEWREC.NEW-KUCCOID;
  NE0CM-102-CUST-NM = NEWREC.NEW-KUCCONM;
  NE0CM102.NE0CM-102-PYM = NEWREC.NEW-POSTING-MONTH;
   /* Format Order Number then move to MAP102*/
  NE0CW-02O-OP1CUOID = NEWREC.NEW-CUST-ORDID;
  NE0CW-02O-OP1NORID = NEWREC.NEW-NIKE-ORDID;
  NE0CM102.NE0CM-102-ORDER = NE0CW-02-ORDER;
  NE0CM102.NE0CM-102-GPC = NEWREC.NEW-XGPCD;
  if (NEWREC.NEW-STYLE-CD == " ")
    NE0CM102.NE0CM-102-STYLE = " ";
  else
   /* Format Style Number then move to MAP102*/
    NE0CW-02S-STY = NEWREC.NEW-STYLE-CD;
    NE0CW-02S-COL = NEWREC.NEW-COLOR-CD;
    NE0CW-02S-DIM = NEWREC.NEW-DIM-CD;
    NE0CW-02S-H1 = "-";
    NE0CW-02S-H2 = "-";
    NE0CM102.NE0CM-102-STYLE = NE0CW-02-STYLE;
  end
  ;
  NE0CM-102-XQACD = NEWREC.NEW-QUALITY-CD;
  ;
  if (NE0CW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0CW-CUR-PAGE-NBR <= NE0CW-HIGH-PAGE-NBR)
    NE0CS-GET-TMP-STG(); /* Get current page*/
    NE0CM102.NE0CM-FM-PAGE = NE0CW-CUR-PAGE-NBR;
    NE0CM102.NE0CM-TO-PAGE = NE0CW-HIGH-PAGE-NBR;
  else
    NE0CM102.NE0CM-FM-PAGE = 0;
    NE0CM102.NE0CM-TO-PAGE = 0;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(100);
    return;
  end
  ;
  NE0CW-INX = 14;
  while (NE0CW-INX >= 1)
    VNESCO01.VNESCO01-GROUP = NE0CW03.NE0CW-03-SCO-GROUP[NE0CW-INX];
    NE0CW-02-STYLE = " ";
    if (VNESCO01.NE-STAT-CD != "AC"
     && VNESCO01.NE-STAT-CD != "RC")
      set NE0CM102.NE0CM-102-SEL[NE0CW-INX] invisible, protect;
    else
      set NE0CM-102-SEL[NE0CW-INX] initialAttributes, cursor;
    end
    NE0CM102.NE0CM-102-SEL[NE0CW-INX] = NE0CW03.NE0CW-03-SEL[NE0CW-INX];
    NE0CM102.NE0CM-102-KUC[NE0CW-INX] = VNESCO01.KUCCOID;
    if (VNESCO01.SY1STNBR == " ")
      NE0CM102.NE0CM-102-STYL[NE0CW-INX] = " ";
    else
      NE0CW02.NE0CW-02S-STY = VNESCO01.SY1STNBR;
      NE0CW02.NE0CW-02S-COL = VNESCO01.SY2CLRID;
      NE0CW02.NE0CW-02S-DIM = VNESCO01.XDMCD;
      NE0CW-02S-H1 = "-";
      NE0CW-02S-H2 = "-";
      NE0CM102.NE0CM-102-STYL[NE0CW-INX] = NE0CW-02-STYLE;
    end
    ;
    NE0CM102.NE0CM-102-CST-SRC[NE0CW-INX] = VNESCO01.NE-CST-SRC-ID;
    NE0CM102.NE0CM-102-SRC-IVC[NE0CW-INX] = VNESCO01.NE-SRC-IVC-ID;
    NE0CM102.NE0CM-102-PCST[NE0CW-INX] = VNESCO01.NE-UNT-CST;
    NE0CM102.NE0CM-102-PSLS[NE0CW-INX] = VNESCO01.NE-UNT-SLS-PRC;
    NE0CM-102-PACST[NE0CW-INX] = VNESCO01.NE-ACR-UNT-CST;
    NE0CM-102-PASLS[NE0CW-INX] = VNESCO01.NE-ACR-UNT-SLS-PRC;
    ;
    NE0CW-INX = NE0CW-INX - 1;
  end
  ;
end // end NE0CS-BLD-MAP102

// Build map from temp storage
Function NE0CS-BLD-MAP103()
   /* *****************************************************/
   /* Build map from temp storage.*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-BLD-MAP103";
  ;
  set NE0CW03 empty;
  ;
  converseLib.clearScreen();
  set NE0CM103 initial;
  ;
  NE0CM103.XXXRVNBR = "00"; /* revision nbr*/
  NE0CM103.XXXMAPNM = "NE0CM103"; /* map name*/
  NE0CM103.XXXPRCNM = "NE0C-10003"; /* process name*/
  NE0CM103.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* Build header of map.................*/
  ;
  NE0CM-103-CUST = NEWREC.NEW-KUCCOID;
  NE0CM-103-CUST-NM = NEWREC.NEW-KUCCONM;
  NE0CM103.NE0CM-103-PYM = NEWREC.NEW-POSTING-MONTH;
   /* Format Order Number then move to MAP103*/
  NE0CW-02O-OP1CUOID = NEWREC.NEW-CUST-ORDID;
  NE0CW-02O-OP1NORID = NEWREC.NEW-NIKE-ORDID;
  NE0CM103.NE0CM-103-ORDER = NE0CW-02-ORDER;
  NE0CM103.NE0CM-103-GPC = NEWREC.NEW-XGPCD;
  if (NEWREC.NEW-STYLE-CD == " ")
    NE0CM103.NE0CM-103-STYLE = " ";
  else
   /* Format Style Number then move to MAP103*/
    NE0CW-02S-STY = NEWREC.NEW-STYLE-CD;
    NE0CW-02S-COL = NEWREC.NEW-COLOR-CD;
    NE0CW-02S-DIM = NEWREC.NEW-DIM-CD;
    NE0CW-02S-H1 = "-";
    NE0CW-02S-H2 = "-";
    NE0CM103.NE0CM-103-STYLE = NE0CW-02-STYLE;
  end
  ;
  NE0CM-103-XQACD = NEWREC.NEW-QUALITY-CD;
  ;
  if (NE0CW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0CW-CUR-PAGE-NBR <= NE0CW-HIGH-PAGE-NBR)
    NE0CS-GET-TMP-STG(); /* Get current page*/
    NE0CM103.NE0CM-FM-PAGE = NE0CW-CUR-PAGE-NBR;
    NE0CM103.NE0CM-TO-PAGE = NE0CW-HIGH-PAGE-NBR;
  else
    NE0CM103.NE0CM-FM-PAGE = 0;
    NE0CM103.NE0CM-TO-PAGE = 0;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(100);
  end
  ;
  NE0CW-INX = 14;
  while (NE0CW-INX >= 1)
    VNESCO01.VNESCO01-GROUP = NE0CW03.NE0CW-03-SCO-GROUP[NE0CW-INX];
    if (VNESCO01.NE-STAT-CD != "AC"
     && VNESCO01.NE-STAT-CD != "RC")
      set NE0CM103.NE0CM-103-SEL[NE0CW-INX] invisible, protect;
    else
      set NE0CM-103-SEL[NE0CW-INX] initialAttributes, cursor;
    end
    NE0CM103.NE0CM-103-SEL[NE0CW-INX] = NE0CW03.NE0CW-03-SEL[NE0CW-INX];
    NE0CM103.NE0CM-103-KUC[NE0CW-INX] = VNESCO01.KUCCOID;
    NE0CW-02-STYLE = " ";
    if (VNESCO01.SY1STNBR == " ")
      NE0CM103.NE0CM-103-STYL[NE0CW-INX] = " ";
    else
      NE0CW02.NE0CW-02S-STY = VNESCO01.SY1STNBR;
      NE0CW02.NE0CW-02S-COL = VNESCO01.SY2CLRID;
      NE0CW02.NE0CW-02S-DIM = VNESCO01.XDMCD;
      NE0CW-02S-H1 = "-";
      NE0CW-02S-H2 = "-";
      NE0CM103.NE0CM-103-STYL[NE0CW-INX] = NE0CW-02-STYLE;
    end
    ;
    NE0CM103.NE0CM-103-PRDCU[NE0CW-INX] = VNESCO01.PC2CUXID;
    NE0CM103.NE0CM-103-SRC-CD[NE0CW-INX] = VNESCO01.ZPSCD;
    NE0CM-103-POST[NE0CW-INX] = VNESCO01.NE-GL-POST-MO;
    NE0CM-103-XWHCD[NE0CW-INX] = VNESCO01.XWHCD;
    NE0CM-103-PO[NE0CW-INX] = VNESCO01.PC3PONBR;
    NE0CM-103-PO-ID[NE0CW-INX] = VNESCO01.PC3POIDT;
    NE0CM-103-SESN[NE0CW-INX] = VNESCO01.XSECD;
    NE0CM-103-FCTY[NE0CW-INX] = VNESCO01.FY1FCTYC;
    ;
    NE0CW-INX = NE0CW-INX - 1;
  end
  ;
end // end NE0CS-BLD-MAP103

// Build VNESCO temp storage
Function NE0CS-BLD-TMP-STG()
   /* ***********************************************************************/
   /* Build temp storage*/
   /*  */
   /* As charges are fetched, they are move to map working storage*/
   /* NE0CW03.  14 occurances of charges appear on the screen*/
   /* thus 14 rows will be moved to the map working storage.  Once*/
   /* 14 occurances have been moved to working storage, the record will*/
   /* written to temp storage one page at a time.*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-BLD-TMP-STG";
  ;
  NE0CW-INX = NE0CW-INX + 1;
  ;
  NE0CW-03-SCO-GROUP[NE0CW-INX] = VNESCO01.VNESCO01-GROUP;
  ;
  /* ***********************************************************************/
  /* Set receivable type for misc*/
  /* ***********************************************************************/
  ;
  if (NE0CW-INX == 14)
    NE0CS-ADD-TMP-STG();
    set NE0CW03 empty;
    NE0CW-INX = 0;
  end
  ;
end // end NE0CS-BLD-TMP-STG

// Close C1 on VNESCO01
Function NE0CS-C1-VNESCO01()
   /* *****************************************************/
   /* Close cursor C1 on VNESCO01*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-C1-VNESCO01";
  ;
   /* close cursor on - VNESCO01*/
  ;
  call "IO6980" ("C1", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes}; /* close C1 on VNESCO*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    NE0CW-01LRG-NBR = VNESCO01.NIDIVCID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-C1-VNESCO01

// Close C1 on VITEM001
Function NE0CS-C2-VITEM001()
   /* *****************************************************/
   /* Close cursor C2 on VITEM001*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-C2-VITEM001";
  ;
   /* close cursor on - VITEM001*/
  ;
  call "IO0440" ("C2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* close C2 on VITEM*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    NE0CW-01LRG-NBR = OP2REC.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-C2-VITEM001

// Edit the page number on M200
Function NE0CS-CHK-M100-NBR()
  /* ******************************************************************/
  /* This edit test the changing of the from page number to cause*/
  /* paging to a specific page.  this will only be done if enter was*/
  /* pressed*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-CHK-M100-NBR";
  ;
  if (NE0CW-MAP-PAGE-NBR > NE0CW-HIGH-PAGE-NBR
   || NE0CW-MAP-PAGE-NBR == 0)
    converseLib.validationFailed(21);
    NLXREC.NLXERRF = "Y";
  else
    if (converseVar.eventKey not enter
     && converseVar.eventKey not pf10
     && converseVar.eventKey not pf11)
      if (NE0CW-MAP-PAGE-NBR != NE0CW-CUR-PAGE-NBR)
        converseLib.validationFailed(22);
        NLXREC.NLXERRF = "Y";
      end
    end
  end
  ;
  ;
end // end NE0CS-CHK-M100-NBR

// PURGE TEMP STORAGE
Function NE0CS-DEL-TMP-STG()
   /* ***********************************************************************/
   /* PURGE temp storage*/
   /*  */
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-DEL-TMP-STG";
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (NE0CW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(299); /* Indicate system error*/
  ;
  XPNL-006(); /* abend routine*/
  ;
  ;
end // end NE0CS-DEL-TMP-STG

// Move MAP300 entries to VNEACR
Function NE0CS-FILL-ACRREC()
   /* ***********************************************************************/
   /* Move MAP300 to VNEACR01 record*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-FILL-ACRREC";
  ;
  set VNEACR01 empty;
  VNEACR01.KUCCOID = NE0CM-300-KUCCOID;
  VNEACR01.OP1CUOID = NE0CM-300-OP1CUOID;
  move NE0CM-300-OP1CUOID to NE0CW-02O-OP1CUOID withV60Compat;
  VNEACR01.OP1PARTN = NE0CW-02-OP1PARTN;
  VNEACR01.OP1NORID = NE0CM-300-OP1NORID;
   /* accrual type ----*/
  VNEACR01.NE-CST-SRC-ID = NE0CM-300-CST-SRC-ID;
  VNEACR01.NE-SRC-IVC-ID = COMMAREA.CAUSERID;
  VNEACR01.XGPCD = NE0CM-300-XGPCD;
  VNEACR01.SY1STNBR = NE0CM-300-SY1STNBR;
  VNEACR01.SY2CLRID = NE0CM-300-SY2CLRID;
  VNEACR01.XDMCD = NE0CM-300-XDMCD;
  VNEACR01.XQACD = NE0CM-300-XQACD;
  VNEACR01.NIDIVCID = NE0CM-300-NIDIVCID;
  VNEACR01.KUMSTRID = NE0CM-300-KUMSTRID;
  VNEACR01.PC2CUXID = NE0CM-300-PC2CUXID;
  VNEACR01.PC3PONBR = NE0CM-300-PC3PONBR;
  VNEACR01.NE-STAT-CD = "AC";
  VNEACR01.XUMCD = NE0CM-300-XUMCD;
  VNEACR01.XWHCD = NE0CM-300-XWHCD;
   /* NE-ACR-UNT-PRC-CST --------*/
  VNEACR01.NE-ACR-GL-POST-MO = NE0CW-01-CURR-POST-MO;
  VNEACR01.ZPSCD = NE0CM-300-ZPSCD;
  VNEACR01.NL-PMT-MTHD-CD = NE0CM-300-NL-PMT-MTHD-CD;
  VNEACR01.GLAENT = NE0CM-300-GLAENT;
  VNEACR01.GLARCID = NE0CM-300-GLARCID;
  VNEACR01.GLANTAC = NE0CM-300-GLANTAC;
  VNEACR01.GLASUB = NE0CM-300-GLASUB;
  VNEACR01.GLAPRJ = NE0CM-300-GLAPRJ;
  ;
end // end NE0CS-FILL-ACRREC

// Move MAP300 entries to VNESCO
Function NE0CS-FILL-SCOREC()
   /* ***********************************************************************/
   /* Move MAP300 to VNESCO01 record*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-FILL-SCOREC";
  ;
  set VNESCO01 empty;
  VNESCO01.NE-SRC-IVC-ID = COMMAREA.CAUSERID;
  VNESCO01.NE-GL-POST-MO = NE0CW-01-CURR-POST-MO;
  move NE0CM-300-OP1CUOID to NE0CW-02O-OP1CUOID withV60Compat;
  VNESCO01.OP1PARTN = NE0CW-02-OP1PARTN;
  VNESCO01.NE-STAT-CD = NE0CM-300-NE-STAT-CD;
  VNESCO01.KUCCOID = NE0CM-300-KUCCOID;
  VNESCO01.KUMSTRID = NE0CM-300-KUMSTRID;
  VNESCO01.XGPCD = NE0CM-300-XGPCD;
  VNESCO01.SY1STNBR = NE0CM-300-SY1STNBR;
  VNESCO01.SY2CLRID = NE0CM-300-SY2CLRID;
  VNESCO01.XDMCD = NE0CM-300-XDMCD;
  VNESCO01.XQACD = NE0CM-300-XQACD;
  VNESCO01.XUMCD = NE0CM-300-XUMCD;
  VNESCO01.OP1CUOID = NE0CM-300-OP1CUOID;
  VNESCO01.OP1NORID = NE0CM-300-OP1NORID;
  VNESCO01.NIDIVCID = NE0CM-300-NIDIVCID;
  VNESCO01.NE-CST-SRC-ID = NE0CM-300-CST-SRC-ID;
  VNESCO01.NE-CST-UNT-QTY = NE0CM-300-CST-QTY;
  VNESCO01.NE-UNT-CST = NE0CM-300-CST;
  VNESCO01.NE-CST-SLS-UNT-QTY = NE0CM-300-SLS-QTY;
  VNESCO01.NE-UNT-SLS-PRC = NE0CM-300-SLS-PRC;
  VNESCO01.NE-ACR-CST-UNT-QTY = NE0CM-300-ACR-CST-QTY;
  VNESCO01.NE-ACR-SLS-UNT-QTY = NE0CM-300-ACR-SLS-QTY;
  VNESCO01.NE-ACR-UNT-CST = NE0CM-300-ACR-CST;
  VNESCO01.NE-ACR-UNT-SLS-PRC = NE0CM-300-ACR-SLS-PRC;
  VNESCO01.PC2CUXID = NE0CM-300-PC2CUXID;
  VNESCO01.ZPSCD = NE0CM-300-ZPSCD;
  VNESCO01.XWHCD = NE0CM-300-XWHCD;
  VNESCO01.PC3PONBR = NE0CM-300-PC3PONBR;
  VNESCO01.XSECD = NE0CM-300-XSECD;
  VNESCO01.PCFSEYR = NE0CM-300-PCFSEYR;
  VNESCO01.FY1FCTYC = NE0CM-300-FY1FCTYC;
  VNESCO01.GLAENT = NE0CM-300-GLAENT;
  VNESCO01.GLARCID = NE0CM-300-GLARCID;
  VNESCO01.GLANTAC = NE0CM-300-GLANTAC;
  VNESCO01.GLASUB = NE0CM-300-GLASUB;
  VNESCO01.GLAPRJ = NE0CM-300-GLAPRJ;
  VNESCO01.NL-PMT-MTHD-CD = NE0CM-300-NL-PMT-MTHD-CD;
  ;
end // end NE0CS-FILL-SCOREC

// Get Sales G/L code from stygl
Function NE0CS-GET-SL-GL()
   /* ***********************************************************************/
   /* Get G/L code for sale accrual from VSTYGL01*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-GET-SL-GL";
  TA1REC.TA1LOC = "NE0CS-GET-SL-GL";
  ;
  set VSTYGL01 empty;
  ;
  set VDSTRB01 empty;
  VDSTRB01.KUCCOID = VNESCO01.KUCCOID;
  NE0CS-S-VDSTRB01();
  VSTYGL01.ZARCD = VDSTRB01.ZARCD;
  ;
  VSTYGL01.XGPCD = VNESCO01.XGPCD;
  if (VNESCO01.NL-PMT-MTHD-CD == "NI")
    VSTYGL01.ZPSCD = "NI";
  else
    VSTYGL01.ZPSCD = VNESCO01.ZPSCD;
  end
  ;
  NE0CS-SF-VSTYGL01();
  if (VSTYGL01.NIEENT1 == " ")
    if (KUCREC.XLBCD in XLATBL.XLBCD)
      VSTYGL01.NIEENT1 = XLATBL.GLAENT[sysVar.arrayIndex];
    end
  end
  ;
  VNEACR01.GLAENT = VSTYGL01.NIEENT1;
  VNEACR01.GLARCID = VSTYGL01.NIERCID1;
  VNEACR01.GLANTAC = VSTYGL01.NIENTAC1;
  VNEACR01.GLASUB = VSTYGL01.NIESUB1;
  VNEACR01.GLASUB = VSTYGL01.NIEPRJ1;
  ;
end // end NE0CS-GET-SL-GL

// Get m100 temp storage
Function NE0CS-GET-TMP-STG()
   /* ***********************************************************************/
   /*  */
   /* Get temp storage for current page*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-GET-TMP-STG";
  TA1REC.TA1LOC = "NE0CS-GET-TMP-STG";
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  set NE0CW03 empty;
  move NE0CW-W03-SIZE to NE0CW-03-LENGTH withV60Compat;
  TA5REC.TA5TSQIX = NE0CW-CUR-PAGE-NBR; /* Page number to fetch*/
  ;
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (NE0CW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  else
    ;
   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
    ;
    converseLib.validationFailed(299); /* Indicate system error*/
    ;
    XPNL-006(); /* abend routine*/
    ;
  end
  ;
end // end NE0CS-GET-TMP-STG

// Build VNCADJ temp storage
Function NE0CS-INIT-TMP-STG()
   /* ***********************************************************************/
   /* Initialize temp storage*/
   /*  */
   /* Initialize temporary storage for the application map100.*/
   /* NE0CW03.*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-INIT-TMP-STG";
  ;
  NE0CW-INX = 0;
  NE0CW-CUR-PAGE-NBR = 1;
  NE0CW-MAP-PAGE-NBR = 1;
  NE0CW-W03-SIZE = 2254;
  ;
  set NE0CW03 empty;
  set VNESCO01 empty;
  ;
  if (NEWREC.NEW-KUCCOID == 0)
    VNESCO01.KUCCOID = -1;
  else
    VNESCO01.KUCCOID = NEWREC.NEW-KUCCOID;
  end
  if (NEWREC.NEW-CUST-ORDID == 0)
    VNESCO01.OP1CUOID = -1;
  else
    VNESCO01.OP1CUOID = NEWREC.NEW-CUST-ORDID;
  end
  if (NEWREC.NEW-NIKE-ORDID == 0)
    VNESCO01.OP1NORID = -1;
  else
    VNESCO01.OP1NORID = NEWREC.NEW-NIKE-ORDID;
  end
  if (NEWREC.NEW-XGPCD == " ")
    VNESCO01.XGPCD = "*";
  else
    VNESCO01.XGPCD = NEWREC.NEW-XGPCD;
  end
  if (NEWREC.NEW-STYLE-CD == " ")
    VNESCO01.SY1STNBR = "*";
  else
    VNESCO01.SY1STNBR = NEWREC.NEW-STYLE-CD;
  end
  if (NEWREC.NEW-COLOR-CD == " ")
    VNESCO01.SY2CLRID = "*";
  else
    VNESCO01.SY2CLRID = NEWREC.NEW-COLOR-CD;
  end
  if (NEWREC.NEW-DIM-CD == " ")
    VNESCO01.XDMCD = "*";
  else
    VNESCO01.XDMCD = NEWREC.NEW-DIM-CD;
  end
  if (NEWREC.NEW-QUALITY-CD == " ")
    VNESCO01.XQACD = "*";
  else
    VNESCO01.XQACD = NEWREC.NEW-QUALITY-CD;
  end
  if (NEWREC.NEW-POSTING-MONTH == 0)
    VNESCO01.NE-GL-POST-MO = -1;
  else
    VNESCO01.NE-GL-POST-MO = NEWREC.NEW-POSTING-MONTH;
  end
  VNESCO01.NE-STAT-CD = "*";
  ;
  NE0CW-01-MATCHF = "N";
  ;
  set SQLCA empty;
  ;
  NE0CS-DEL-TMP-STG();
  ;
  NE0CS-S1-VNESCO01();
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    NE0CS-N1-VNESCO01();
    if (SQLCA.VAGen_SQLCODE == 0)
      NE0CS-BLD-TMP-STG(); /* records to temp storage*/
      NE0CW-01-MATCHF = "Y";
    else
      /* stop here for testing purposes only.*/
    end
  end
  ;
  NE0CS-C1-VNESCO01();
  ;
  if (NE0CW-INX > 0)
    NE0CS-ADD-TMP-STG();
    NE0CW-01-MATCHF = "Y";
  end
  ;
end // end NE0CS-INIT-TMP-STG

// Page BACKWARD logic
Function NE0CS-MAP100-PF7()
   /* ***********************************************************************/
   /* Page BACKWARD logic*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-MAP100-PF7";
  ;
  if (NE0CW-CUR-PAGE-NBR == 1)
    converseLib.validationFailed(318);
    return;
  else
    NE0CW-CUR-PAGE-NBR = NE0CW-CUR-PAGE-NBR - 1;
  end
  ;
end // end NE0CS-MAP100-PF7

// Page forward logic
Function NE0CS-MAP100-PF8()
   /* ***********************************************************************/
   /* Page forward logic*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-MAP100-PF8";
  ;
  if (NE0CW-CUR-PAGE-NBR >= NE0CW-HIGH-PAGE-NBR)
    converseLib.validationFailed(317);
    return;
  end
  NE0CW-CUR-PAGE-NBR = NE0CW-CUR-PAGE-NBR + 1;
  ;
end // end NE0CS-MAP100-PF8

// Fetch cursor 1 on VNESCO01
Function NE0CS-N1-VNESCO01()
  /* ************************************************************************/
  /* Fetch cursor on VNESCO01*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-N1-VNESCO01";
  ;
   /* Fetch cursor on - VNESCO01*/
  ;
  call "IO6980" ("N1", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes}; /* fetch next VNESCO01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* or a not found condtion*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    NE0CW-01LRG-NBR = VNESCO01.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-N1-VNESCO01

// Fetch cursor 1 on VITEM001
Function NE0CS-N2-VITEM001()
  /* ************************************************************************/
  /* Fetch cursor on VITEM001*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-N2-VITEM001";
  ;
   /* Fetch cursor on - VITEM001*/
  ;
  call "IO0440" ("N2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* fetch next VITEM001*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* or a not found condtion*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    NE0CW-01LRG-NBR = OP2REC.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-N2-VITEM001

// Reclass Logic of ACR and SCO
Function NE0CS-RCLS-ACCRUAL()
  /* ***************************************************************/
  /* This statement group will update the accrual based on the type.*/
  /* it will over look not finding an accual for history. The user will*/
  /* have to write-off the history accrual not found.*/
  /* ***************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-RCLS-ACCRUAL";
  /*  */
  if (VNESCO01.NE-ACR-SLS-UNT-QTY > 0)
    NE0CW-01-ACR-TYP-CD = "SL";
  else
    if (VNESCO01.NE-ACR-CST-UNT-QTY > 0)
      NE0CW-01-ACR-TYP-CD = "CS";
    end
  end
  /*  */
  NE0CS-SCO-TO-ACR();
  VNEACR01.NE-ACR-TYP-CD = NE0CW-01-ACR-TYP-CD;
  /*  */
  NE0CS-S-VNEACR01();
  if (SQLCA.VAGen_SQLCODE == 0)
    VNEACR01.NE-STAT-CD = "WC";
    NE0CS-U-VNEACR01();
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      if (VNEACR01.NE-SRC-IVC-ID == "HISTORY")
        converseLib.validationFailed(185);
      else
        /* continue along your merry way per jshann 12/08/94*/
      end
    else
      TA1REC.TA1DBASE = "DNILO";
      TA1REC.TA1TBLVU = "VNEACR01";
      NE0CW-01LRG-NBR = VNEACR01.OP1CUOID;
      TA1REC.TA1TBLKE = NE0CW-KEY;
      XPNL005();
    end
  end
  ;
end // end NE0CS-RCLS-ACCRUAL

// Reclass Logic of ACR and SCO
Function NE0CS-RCLS-LOGIC()
  /* ***************************************************************/
  /* This statement group separates out the logic for reclassing*/
  /* a record from VNESCO01 and any corresponding VNEACR01*/
  /* records.*/
  /* ***************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-RCLS-LOGIC";
  ;
  /* recover original sco record stored in array...*/
  VNESCO01.VNESCO01-GROUP = NE0CW-03-SCO-GROUP[NE0CW-INX];
  ;
  /* ***************************************************************/
  /* Write off old SCO record with active w/o status.*/
  /* ***************************************************************/
  if (VNESCO01.NE-STAT-CD == "AC")
    VNESCO01.NE-STAT-CD = "AW";
  else
    if (VNESCO01.NE-STAT-CD == "RC")
      VNESCO01.NE-STAT-CD = "RW";
    end
  end
  NE0CS-U-VNESCO01();
  ;
  /* ***************************************************************/
  /* Write off any old accrual records associated.*/
  /* ***************************************************************/
  NE0CW-01-ACR-TYP-CD = " ";
  if (VNESCO01.NE-ACR-SLS-UNT-QTY > 0)
    NE0CS-RCLS-ACCRUAL();
  end
  if (VNESCO01.NE-ACR-CST-UNT-QTY > 0)
    NE0CS-RCLS-ACCRUAL();
  end
  /* ***************************************************************/
  /* Create current SCO record with writeoff status for old rec.*/
  /* ***************************************************************/
  VNESCO01.NE-GL-POST-MO = NE0CW-01-CURR-POST-MO;
  VNESCO01.TSFSHPID = VNESCO01.TSFSHPID + 1;
  VNESCO01.NE-STAT-CD = "WC";
  NE0CS-A-VNESCO01();
  /* ***************************************************************/
  /* Create current SCO record with new info...*/
  /* ***************************************************************/
  NE0CS-RCLS-VNESCO();
  ;
  /* ***************************************************************/
  /* Create corresponding new accrual records...*/
  /* ***************************************************************/
  if (NLXREC.NLXERRF != "Y")
    if (VNESCO01.NE-ACR-SLS-UNT-QTY > 0)
      NE0CS-RCLS-VNEACR();
    end
    if (VNESCO01.NE-ACR-CST-UNT-QTY > 0)
      NE0CS-RCLS-VNEACR();
    end
  end
  ;
  NE0CW-01-RCLS-COUNT = NE0CW-01-RCLS-COUNT + 1;
  ;
end // end NE0CS-RCLS-LOGIC

// Reclass a VNEACR01 record.
Function NE0CS-RCLS-VNEACR()
  /* ******************************************************************/
  /* This statement group is used to format the the VNEACR01 in order*/
  /* to Insert a VNEACR01 record*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-RCLS-VNEACR";
  ;
  set VNEACR01 empty;
  ;
  VNEACR01.KUCCOID = VNESCO01.KUCCOID;
  VNEACR01.OP1CUOID = VNESCO01.OP1CUOID;
  VNEACR01.OP1NORID = VNESCO01.OP1NORID;
  VNEACR01.XGPCD = VNESCO01.XGPCD;
  VNEACR01.SY1STNBR = VNESCO01.SY1STNBR;
  VNEACR01.SY2CLRID = VNESCO01.SY2CLRID;
  VNEACR01.XDMCD = VNESCO01.XDMCD;
  VNEACR01.XQACD = VNESCO01.XQACD;
  VNEACR01.NIDIVCID = VNESCO01.NIDIVCID;
  VNEACR01.KUMSTRID = VNESCO01.KUMSTRID;
  VNEACR01.OP1PARTN = VNESCO01.OP1PARTN;
  VNEACR01.PC3PONBR = VNESCO01.PC3PONBR;
  VNEACR01.NE-STAT-CD = "AC";
  VNEACR01.NE-ACR-UNT-PRC-CST = NE0CW-01-UNT-PRC;
  ;
  VNEACR01.ZZZCHGCT = 0;
  VNEACR01.NE-ACR-GL-POST-MO = VNESCO01.NE-GL-POST-MO;
  ;
  if (VNESCO01.NE-ACR-SLS-UNT-QTY > 0)
    VNEACR01.NE-ACR-TYP-CD = "SL";
    set KUCREC empty;
    KUCREC.KUCCOID = VNEACR01.KUCCOID;
    NE0CS-S-VCMPNY01();
    NE0CS-GET-SL-GL();
  else
    if (VNESCO01.NE-ACR-CST-UNT-QTY > 0)
      VNEACR01.NE-ACR-TYP-CD = "CS";
    end
  end
  ;
  NE0CS-A-VNEACR01();
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    NE0C-201(); /* REBUILD BLANK SCREEN*/
    converseLib.validationFailed(143); /* add successful*/
    return;
  end
  ;
end // end NE0CS-RCLS-VNEACR

// reclass a vnesco01 record
Function NE0CS-RCLS-VNESCO()
  /* ******************************************************************/
  /* This statement group is used to format the the VNECSO01 in order*/
  /* to insert a VNESCO01 record as a reclass of the original sco record*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-RCLS-VNESCO";
  ;
  if (NE0CW-01-XATCD == "06") /* relcass cust is a comp nbr.*/
    VNESCO01.KUCCOID = NE0CM-200-RCLS-KUCCOID;
    VNESCO01.NE-ACR-SLS-UNT-QTY = 0;
    VNESCO01.NE-ACR-UNT-SLS-PRC = 0;
    VNESCO01.NE-ACR-CST-UNT-QTY = 0;
    VNESCO01.NE-ACR-UNT-CST = 0;
  else
    /* order header record still has data from validation NE0C220.*/
    set PC2REC empty;
    PC2REC.XGPCD = OP1REC.XGPCD;
    PC2REC.KUCCOID = OP1REC.KUCCOID;
    PC2REC.KUMSTRID = OP1REC.KUMSTRID;
    PC2REC.XNXCD = OP1REC.XNXCD;
    NE0CS-SA-VPRDCU01();
    VNESCO01.KUCCOID = PC2REC.KUCCOID;
    VNESCO01.KUMSTRID = PC2REC.KUMSTRID;
    VNESCO01.PC2CUXID = PC2REC.PC2CUXID;
    VNESCO01.OP1CUOID = NE0CM-200-RCLS-OP1CUOID;
    move NE0CM-200-RCLS-OP1CUOID to NE0CW-02O-OP1CUOID withV60Compat;
    VNESCO01.OP1PARTN = NE0CW-02-OP1PARTN;
    VNESCO01.OP1NORID = NE0CM-200-RCLS-OP1NORID;
    ;
    VNESCO01.NIDIVCID = NE0CM-200-RCLS-NIDIVCID;
    ;
    /* reclass an actual sale to an acrual if no invoice entered*/
    if (NE0CM-200-RCLS-NIDIVCID == 0
     && VNESCO01.NE-CST-SLS-UNT-QTY != 0)
      VNESCO01.NE-ACR-SLS-UNT-QTY = VNESCO01.NE-CST-SLS-UNT-QTY;
      VNESCO01.NE-ACR-UNT-SLS-PRC = NE0CW-01-UNT-PRC;
      VNESCO01.NE-CST-SLS-UNT-QTY = 0;
      VNESCO01.NE-UNT-SLS-PRC = 0;
    end
    ;
    /* reclass a sale acrual to an actual sale if invoice entered.*/
    if (NE0CM-200-RCLS-NIDIVCID != 0
     && VNESCO01.NE-CST-SLS-UNT-QTY == 0)
      VNESCO01.NE-CST-SLS-UNT-QTY = VNESCO01.NE-ACR-SLS-UNT-QTY;
      VNESCO01.NE-UNT-SLS-PRC = NE0CW-01-UNT-PRC;
      VNESCO01.NE-ACR-SLS-UNT-QTY = 0;
      VNESCO01.NE-ACR-UNT-SLS-PRC = 0;
    end
    ;
  end
  ;
  VNESCO01.NE-STAT-CD = "RC";
  ;
  NE0CS-S-VNESCO01();
  if (SQLCA.VAGen_SQLCODE == 100)
    NE0CS-A-VNESCO01();
    if (SQLCA.VAGen_SQLCODE == 0)
      /* PERFORM NE0C-201;            /* REBUILD BLANK SCREEN*/
      converseLib.validationFailed(143); /* add successful*/
      return;
    end
  else
  /* restore vnesco record... reclass row already exists.*/
    VNESCO01.VNESCO01-GROUP = NE0CW-03-SCO-GROUP[NE0CW-INX];
    NE0CS-U-VNESCO01();
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(156); /* row already exists*/
    return; /* should be screened in 220*/
  end
  ;
  ;
end // end NE0CS-RCLS-VNESCO

// select unique vcmpny01
Function NE0CS-S-VCMPNY01()
   /* *****************************************************/
   /* select unique VCMPNY01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VCMPNY01";
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO0240";
    TA1REC.TA1DBASE = "DCUST ";
    TA1REC.TA1TBLVU = "VCUST001";
    ;
    ;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VCMPNY01

// select unique VDSTRB01
Function NE0CS-S-VDSTRB01()
   /* *****************************************************/
   /* select unique VDSTRB01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VDSTRB01";
  ;
  call "IO4600" ("S ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO4600";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VDSTRB01";
    ;
    ;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VDSTRB01

// select unique VFCTY001
Function NE0CS-S-VFCTY001()
   /* *****************************************************/
   /* select unique VFCTY001*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VFCTY001";
  ;
  call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO2810";
    TA1REC.TA1DBASE = "DFCTY";
    TA1REC.TA1TBLVU = "VFCTY001";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VFCTY001

// select unique VNEACR01
Function NE0CS-S-VNEACR01()
   /* *****************************************************/
   /* select unique VNEACR01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VNEACR01";
  ;
  call "IO6940" ("S ", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO6940";
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNEACR01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VNEACR01

// select unique VNESCO01
Function NE0CS-S-VNESCO01()
   /* *****************************************************/
   /* select unique VNESCO01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VNESCO01";
  ;
  call "IO6980" ("S ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO6980";
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VNESCO01

// select unique vnlgla01
Function NE0CS-S-VNLGLA01()
   /* *****************************************************/
   /* Select Unique VNLGLA01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VNLGLA01";
  ;
  call "IO4610" ("S ", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return.*/
   || SQLCA.VAGen_SQLCODE == 100) /* or not found.*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO4610";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNLGLA01";
    ;
    ;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VNLGLA01

// select unique VORHDR01
Function NE0CS-S-VORHDR01()
   /* *****************************************************/
   /* select unique vorhdr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VORHDR01";
  ;
  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO0430";
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VORHDR01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VORHDR01

// select unique vpihdr01
Function NE0CS-S-VPIHDR01()
   /* *****************************************************/
   /* select unique vpihdr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VPIHDR01";
  ;
  call "IO4470" ("S ", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO4470";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VPIHDR01";
    ;
    ;
   /* OVE NE0CW-02-ABEND-KEY TO TA1TBLKE;*/
    ;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VPIHDR01

// select unique vpohdr01
Function NE0CS-S-VPOHDR01()
   /* *****************************************************/
   /* select unique vpohdr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VPOHDR01";
  ;
  call "IO3270" ("S ", SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO3270";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPOHDR01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VPOHDR01

// select unique vsyclr01
Function NE0CS-S-VSYCLR01()
   /* *****************************************************/
   /* select unique syclr*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-S-VSYCLR01";
  ;
  call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO3120";
    TA1REC.TA1DBASE = "DPRODG";
    TA1REC.TA1TBLVU = "VSYCLR01";
    ;
  /* MOVE ' ' TO NE0CW-02-ABEND-KEY;*/
  /* ;*/
  /* MOVE 'STY' TO NE0CW-02-ABEND-FILLER-STY;*/
  /* MOVE NE0CM-300-SY1STNBR TO NE0CW-02-ABEND-SY1STNBR;*/
  /* MOVE '-' TO NE0CW-02-ABEND-HYPEN-1;*/
  /* MOVE NE0CM-300-SY2CLRID TO NE0CW-02-ABEND-SY2CLRID;*/
  /* MOVE '-' TO NE0CW-02-ABEND-HYPHEN-2;*/
  /* MOVE NE0C-300-XDMCD TO NE0CW-02-ABEND-XDMCD;*/
  /* ;*/
  /* MOVE NE0CW-02-ABEND-KEY TO TA1TBLKE;*/
  /* ;*/
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S-VSYCLR01

// Open cursor 1 on VNESCO01
Function NE0CS-S1-VNESCO01()
  /* ************************************************************************/
  /* Open cursor on VNESCO01*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-S1-VNESCO01";
  ;
   /* Open cursor on - VNESCO01*/
  ;
  call "IO6980" ("S1", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes}; /* open cursor 1 on NESCO*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    NE0CW-01LRG-NBR = VNESCO01.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S1-VNESCO01

// Open cursor 1 on VITEM001
Function NE0CS-S2-VITEM001()
  /* ************************************************************************/
  /* Open cursor on VITEM001*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-S2-VITEM001";
  ;
   /* Open cursor on - VITEM001*/
  ;
  call "IO0440" ("S2", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* open cursor 2 on VITEM*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    NE0CW-01LRG-NBR = OP2REC.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-S2-VITEM001

// select alternate vprdcu01
Function NE0CS-SA-VPRDCU01()
   /* *****************************************************/
   /* select alternate vpohdr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-SA-VPRDCU01";
  ;
  call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SA    ";
    TA1REC.TA1LOCAT[3] = "IO3340";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPRDCU01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-SA-VPRDCU01

// select VPOITM01 occurence
Function NE0CS-SC-VPOITM01()
   /* *****************************************************/
   /* select vpoitm01 occurence for pc6rec entries.*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0DS-S-VPOITM01";
  ;
  call "IO3310" ("SC", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == -811
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SC    ";
    TA1REC.TA1LOCAT[3] = "IO3310";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPOITM01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-SC-VPOITM01

// Fill VNEACR from VNESCO fields
Function NE0CS-SCO-TO-ACR()
   /* ***********************************************************************/
   /* Fill acrual record from sco table.*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-SCO-TO-ACR";
  ;
  set VNEACR01 empty;
  VNEACR01.KUCCOID = VNESCO01.KUCCOID;
  VNEACR01.OP1CUOID = VNESCO01.OP1CUOID;
  VNEACR01.OP1PARTN = VNESCO01.OP1PARTN;
  VNEACR01.OP1NORID = VNESCO01.OP1NORID;
   /* accrual type ----*/
  VNEACR01.NE-CST-SRC-ID = VNESCO01.NE-CST-SRC-ID;
  VNEACR01.NE-SRC-IVC-ID = VNESCO01.NE-SRC-IVC-ID;
  VNEACR01.XGPCD = VNESCO01.XGPCD;
  VNEACR01.SY1STNBR = VNESCO01.SY1STNBR;
  VNEACR01.SY2CLRID = VNESCO01.SY2CLRID;
  VNEACR01.XDMCD = VNESCO01.XDMCD;
  VNEACR01.XQACD = VNESCO01.XQACD;
  VNEACR01.NIDIVCID = VNESCO01.NIDIVCID;
  VNEACR01.KUMSTRID = VNESCO01.KUMSTRID;
  VNEACR01.PC2CUXID = VNESCO01.PC2CUXID;
  VNEACR01.PC3PONBR = VNESCO01.PC3PONBR;
  VNEACR01.NE-STAT-CD = "AC";
   /* NE-ACR-UNT  ---------------*/
  VNEACR01.XUMCD = VNESCO01.XUMCD;
   /* NE-ACR-UNT-PRC-CST --------*/
   /* NE-ACTL-UNT-PRCCST --------*/
  VNEACR01.NE-ACR-GL-POST-MO = VNESCO01.NE-GL-POST-MO;
  VNEACR01.ZPSCD = VNESCO01.ZPSCD;
  VNEACR01.TSFSHPID = VNESCO01.TSFSHPID;
  ;
  VNEACR01.GLAENT = VNESCO01.GLAENT;
  VNEACR01.GLARCID = VNESCO01.GLARCID;
  VNEACR01.GLANTAC = VNESCO01.GLANTAC;
  VNEACR01.GLASUB = VNESCO01.GLASUB;
  VNEACR01.GLAPRJ = VNESCO01.GLAPRJ;
  ;
end // end NE0CS-SCO-TO-ACR

// Verify item exists in SO items
Function NE0CS-SE-VITEM001()
   /* *****************************************************/
   /* Verify an item exists in s.o. item table.*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-SE-VITEM001";
  ;
  call "IO0440" ("SE", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SE    ";
    TA1REC.TA1LOCAT[3] = "IO0440";
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-SE-VITEM001

// select unique from pfhrec
Function NE0CS-SF-VINTGL02()
  NLXREC.NLXCPROC = "NE0CS-SF-VINTGL02"; /* set current proc name*/
  ;
   /* select unique vintgl02(vintgl02)*/
  ;
  call "VINTGL02" ("SF", SQLCA, VINTGL02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SF     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "VINTGL02 "; /* io module*/
    TA1REC.TA1DBASE = "DPROFT"; /* database*/
    TA1REC.TA1TBLVU = "VINTGL02"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
end // end NE0CS-SF-VINTGL02

// Select Sales G/L code VSTYGL01
Function NE0CS-SF-VSTYGL01()
   /* *****************************************************/
   /* Select First VSTYGL01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0CS-SF-VSTYGL01";
  ;
  call "IO1610" ("SF", SQLCA, VSTYGL01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SF    ";
    TA1REC.TA1LOCAT[3] = "IO1610";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VSTYGL01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-SF-VSTYGL01

// UPDATE RECORD ON VNCADJ01
Function NE0CS-U-VNEACR01()
  /* ************************************************************************/
  /* UPDATE A ROW IN VNEACR01*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-U-VNEACR01";
  ;
  XX0XS01(); /* get current date and time for*/
                                  /* zz-change-family*/
  VNEACR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEACR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
   /* Add row to - VNACRO01*/
  ;
  call "IO6940" ("U ", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes}; /* Add row to VNEACR*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNEACR01";
    NE0CW-01LRG-NBR = VNEACR01.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-U-VNEACR01

// UPDATE SCO RECORD
Function NE0CS-U-VNESCO01()
  /* ************************************************************************/
  /* Add a new row to VNESCO01*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-U-VNESCO01";
  ;
  XX0XS01(); /* get current date and time for*/
                                  /* zz-change family*/
  VNESCO01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO6980" ("U ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes}; /* Add row to VNESCO*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    NE0CW-01LRG-NBR = VNESCO01.OP1CUOID;
    TA1REC.TA1TBLKE = NE0CW01.NE0CW-KEY;
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0CS-U-VNESCO01

// Update temp storage
Function NE0CS-UPDT-TMP-STG()
   /* ***********************************************************************/
   /* Update temp storage*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-UPTD-TMP-STG";
  TA1REC.TA1LOC = "NE0CS-UPTD-TMP-STG";
  TA5REC.TA5TSQIX = NE0CW-CUR-PAGE-NBR;
  move NE0CW-W03-SIZE to NE0CW-03-LENGTH withV60Compat;
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (NE0CW03, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  else
    ;
   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
    ;
    converseLib.validationFailed(299); /* Indicate system error*/
    ;
    XPNL-006(); /* abend routine*/
    ;
  end
  ;
end // end NE0CS-UPDT-TMP-STG

// Val tmp for at least one sel
Function NE0CS-VAL-SELECT()
   /* ******************************************************************/
   /* This statement group will process temp storage until it finds*/
   /* one 'S' in the select field, if none are found error           e*/
   /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-VAL-SELECT";
  move NE0CW-CUR-PAGE-NBR to NE0CW-HOLD-PAGE-NBR withV60Compat;
  NE0CW-CUR-PAGE-NBR = 1;
  ;
   /* Process each page in temp storage*/
  ;
  while (NE0CW-CUR-PAGE-NBR <= NE0CW-HIGH-PAGE-NBR)
    NE0CS-GET-TMP-STG();
    NE0CW-INX2 = 1;
    ;
     /* Process each row in NE0CW03*/
    ;
    while (NE0CW-INX2 <= 14) /* 14 rows per temp page*/
      ;
      if (NE0CW03.NE0CW-03-SEL[NE0CW-INX2] == "S")
        /* reset page and get the hell out of Dodge*/
        move NE0CW-HOLD-PAGE-NBR to NE0CW-CUR-PAGE-NBR withV60Compat;
        set NE0CW03 empty;
        NE0CS-GET-TMP-STG(); /* retreive current page back into ws*/
        return;
      end
      ;
      NE0CW-INX2 = NE0CW-INX2 + 1; /* fetch next row*/
      ;
    end /* end while on same page*/
    ;
    NE0CW-CUR-PAGE-NBR = NE0CW-CUR-PAGE-NBR + 1;
    ;
  end /* end while more pages*/
  ;
  converseLib.validationFailed(29); /* no items selected*/
  NLXREC.NLXERRF = "Y";
                                  /* reset next page*/
  move NE0CW-HOLD-PAGE-NBR to NE0CW-CUR-PAGE-NBR withV60Compat;
  set NE0CW03 empty;
  NE0CS-GET-TMP-STG(); /* retreive current page back into ws*/
  ;
end // end NE0CS-VAL-SELECT

// validate sales/costs entries.
Function NE0CS-VAL-SLS-CST()
   /* *****************************************************/
   /* Validate that entries are made for sales and costs*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-VAL-SLS-CST";
  ;
  set NE0CM-300-SLS-QTY initialAttributes;
  set NE0CM-300-ACR-SLS-QTY initialAttributes;
  set NE0CM-300-CST initialAttributes;
  set NE0CM-300-CST-QTY initialAttributes;
  set NE0CM-300-ACR-CST initialAttributes;
  set NE0CM-300-ACR-CST-QTY initialAttributes;
  ;
  if (NE0CM-300-SLS-QTY == 0 /* neither actual sale or accrual*/
   && NE0CM-300-ACR-SLS-QTY == 0) /* entered*/
    set NE0CM-300-SLS-QTY cursor, modified, bold;
    set NE0CM-300-ACR-SLS-QTY modified, bold;
    converseLib.validationFailed(167);
    if (NE0CM-300-NIDIVCID != 0)
      NLXREC.NLXERRF = "Y";
      return;
    else /* no ivc entered, must be acrual*/
      converseLib.validationFailed(124);
    end
  end
  if (NE0CM-300-CST-QTY == 0 /* neither actual cost or accrual*/
   && NE0CM-300-ACR-CST-QTY == 0) /* entered*/
    set NE0CM-300-CST-QTY cursor, modified, bold;
    set NE0CM-300-CST modified, bold;
    set NE0CM-300-ACR-CST-QTY modified, bold;
    set NE0CM-300-ACR-CST modified, bold;
    converseLib.validationFailed(129);
    NLXREC.NLXERRF = "Y";
    return;
  end
  if (NE0CM-300-SLS-QTY != 0 /* an actual and accrued sale entered*/
   && NE0CM-300-ACR-SLS-QTY != 0)
    set NE0CM-300-SLS-QTY cursor, modified, bold;
    set NE0CM-300-ACR-SLS-QTY modified, bold;
    converseLib.validationFailed(125);
    NLXREC.NLXERRF = "Y";
    return;
  end
  if ((NE0CM-300-CST-QTY != 0 /* an actual and accrued cost entered.*/
   || NE0CM-300-CST != 0)     
   && (NE0CM-300-ACR-CST-QTY != 0
   || NE0CM-300-ACR-CST != 0))
    set NE0CM-300-CST-QTY cursor, modified, bold;
    set NE0CM-300-CST modified, bold;
    set NE0CM-300-ACR-CST-QTY modified, bold;
    set NE0CM-300-ACR-CST modified, bold;
    converseLib.validationFailed(126);
    NLXREC.NLXERRF = "Y";
    return;
  end
  if ((NE0CM-300-ACR-CST != 0     /* Accrued cost or qty entered*/
   && NE0CM-300-ACR-CST-QTY == 0) /* without matching cost/qty*/
   || (NE0CM-300-ACR-CST-QTY != 0 
   && NE0CM-300-ACR-CST == 0))   
    set NE0CM-300-ACR-CST-QTY cursor, bold, modified;
    set NE0CM-300-ACR-CST bold, modified;
    converseLib.validationFailed(128);
    NLXREC.NLXERRF = "Y";
  end
  if ((NE0CM-300-CST != 0     /* Actual cost or cost qty entered*/
   && NE0CM-300-CST-QTY == 0) /* without matching cost/qty*/
   || (NE0CM-300-CST-QTY != 0 
   && NE0CM-300-CST == 0))   
    set NE0CM-300-CST-QTY cursor, bold, modified;
    set NE0CM-300-CST bold, modified;
    converseLib.validationFailed(128);
    NLXREC.NLXERRF = "Y";
  end
  if (NE0CM-300-NE-STAT-CD == "PR"
   && NE0CM-300-CST-QTY == 0)
    set NE0CM-300-CST-QTY cursor, modified, bold;
    set NE0CM-300-CST modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(180);
    return;
  end
  ;
   /* **********************************************/
   /* display the appropriate unit price for the sale.*/
   /* **********************************************/
  if (NE0CM-300-ACR-SLS-QTY != 0) /* accrued sale qty entered*/
    move NE0CW-01-UNT-PRC to NE0CM-300-ACR-SLS-PRC withV60Compat;
    NE0CM-300-SLS-PRC = 0;
  else
    if (NE0CM-300-SLS-QTY != 0) /* actual sale qty entered*/
      move NE0CW-01-UNT-PRC to NE0CM-300-SLS-PRC withV60Compat;
      NE0CM-300-ACR-SLS-PRC = 0;
    end
  end
  ;
   /* **********************************************/
   /* If actual sale and no invoice entered, set error.(must be acrual)*/
   /* **********************************************/
  if (NE0CM-300-SLS-QTY != 0
   && NE0CM-300-NIDIVCID == 0)
    set NE0CM-300-NIDIVCID cursor, modified, bold;
    set NE0CM-300-SLS-QTY modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(141);
    return;
  end
  ;
   /* **********************************************/
   /* If sale accrual and invoice entered, set error.(must be actual)*/
   /* **********************************************/
  if (NE0CM-300-ACR-SLS-QTY != 0
   && NE0CM-300-NIDIVCID != 0)
    set NE0CM-300-NIDIVCID cursor, modified, bold;
    set NE0CM-300-ACR-SLS-QTY modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(167);
    return;
  end
  ;
  if (NE0CM-300-SLS-QTY == 0
   && NE0CM-300-ACR-SLS-QTY == 0)
    return; /* don't do variance testing when no*/
  end /* sale entered.*/
  ;
   /* **********************************************/
   /* check amounts entered for variance tolerance*/
   /* **********************************************/
  if (NE0CM-300-CST-QTY != 0)
    move NE0CM-300-CST-QTY to NE0CW-01-COST withV60Compat;
  else
    move NE0CM-300-ACR-CST-QTY to NE0CW-01-COST withV60Compat;
  end
  ;
  if (NE0CM-300-SLS-QTY != 0)
    move NE0CM-300-SLS-QTY to NE0CW-01-SALE withV60Compat;
  else
    move NE0CM-300-ACR-SLS-QTY to NE0CW-01-SALE withV60Compat;
  end
  if (NE0CM-300-XGPCD == "03")
    NE0CW-01-VARIANCE = NE0CW-01-SALE / NE0CW-01-COST;
    if (NE0CW-01-VARIANCE <= 1.05
     && NE0CW-01-VARIANCE >= .95)
      /* o.k. passes variance testing - within 5%*/
    else
      set NE0CM-300-CST-QTY cursor, modified, bold;
      set NE0CM-300-ACR-CST-QTY modified, bold;
      set NE0CM-300-SLS-QTY modified, bold;
      set NE0CM-300-ACR-SLS-QTY modified, bold;
      converseLib.validationFailed(162);
      NLXREC.NLXERRF = "Y";
      return;
    end
  else /* gpc indicates product is footwear*/
    NE0CW-01-VARIANCE = NE0CW-01-SALE - NE0CW-01-COST;
    if (NE0CW-01-VARIANCE <= 2
     && NE0CW-01-VARIANCE >= -2
     || (NE0CM-300-SLS-QTY == 0
     && NE0CM-300-ACR-SLS-QTY == 0))
      /* o.k. passes variance testing - within 2 units*/
    else
      set NE0CM-300-CST-QTY cursor, modified, bold;
      set NE0CM-300-ACR-CST-QTY modified, bold;
      set NE0CM-300-SLS-QTY modified, bold;
      set NE0CM-300-ACR-SLS-QTY modified, bold;
      converseLib.validationFailed(163);
      NLXREC.NLXERRF = "Y";
      return;
    end
  end
  ;
  ;
end // end NE0CS-VAL-SLS-CST

// Val tmp for at least one sel
Function NE0CS-WRITEOFF()
   /* ******************************************************************/
   /* This statement group will process temp storage to write off all*/
   /* items with a 'S' in the select field.*/
   /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0CS-WRITEOFF";
  move NE0CW-CUR-PAGE-NBR to NE0CW-HOLD-PAGE-NBR withV60Compat;
  NE0CW-CUR-PAGE-NBR = 1;
  ;
   /* Process each page in temp storage*/
  ;
  while (NE0CW-CUR-PAGE-NBR <= NE0CW-HIGH-PAGE-NBR)
    set NE0CW03 empty;
    NE0CS-GET-TMP-STG();
    NE0CW-INX2 = 1;
    while (NE0CW-INX2 <= 14) /* 14 rows per temp page - NE0CW03*/
      if (NE0CW-03-SEL[NE0CW-INX2] == "S")
        set VNESCO01 empty;
        VNESCO01.VNESCO01-GROUP = NE0CW-03-SCO-GROUP[NE0CW-INX2];
        /* write off current sco record and related accruals.*/
        if (VNESCO01.NE-STAT-CD == "AC")
          VNESCO01.NE-STAT-CD = "AW";
        else
          if (VNESCO01.NE-STAT-CD == "RC") /* what if neither status?*/
            VNESCO01.NE-STAT-CD = "RW";
          end
        end
        NE0CS-U-VNESCO01(); /* updt sco record status to wo*/
        ;
        VNESCO01.NE-GL-POST-MO = NE0CW-01-CURR-POST-MO;
        VNESCO01.NE-STAT-CD = "WO";
        VNESCO01.TSFSHPID = VNESCO01.TSFSHPID + 1;
        NE0CS-A-VNESCO01(); /* add new writeoff record.*/
        ;
        VNESCO01.VNESCO01-GROUP = NE0CW-03-SCO-GROUP[NE0CW-INX2];
        NE0CS-SCO-TO-ACR(); /* fill VNEACR record from VNESCO*/
        VNEACR01.NL-PMT-MTHD-CD = "NL";
                                  /* fields.*/
        if (VNESCO01.NE-ACR-CST-UNT-QTY != 0)
          VNEACR01.NE-ACR-TYP-CD = "CS";
          NE0CS-S-VNEACR01(); /* check for cost accrual.*/
          if (SQLCA.VAGen_SQLCODE == 100)
            VNEACR01.NE-ACR-TYP-CD = "IN";
            NE0CS-S-VNEACR01(); /* check for inventory accrual.*/
            if (SQLCA.VAGen_SQLCODE == 100)
          /* MOVE 'S     ' TO TA1REC.TA1LOCAT(2);*/
          /* MOVE 'IO6940' TO TA1REC.TA1LOCAT(3);*/
          /* MOVE 'DNILO' TO TA1REC.TA1DBASE;*/
          /* MOVE 'VNEACR01' TO TA1REC.TA1TBLVU;*/
          /* PERFORM XPNL005;     /* abend routine*/
            end
          end
          if (SQLCA.VAGen_SQLCODE != 100)
            VNEACR01.NE-STAT-CD = "WO";
            NE0CS-U-VNEACR01(); /* write off cost/inven accrual.*/
          end
        end
        if (VNESCO01.NE-ACR-SLS-UNT-QTY != 0)
          VNEACR01.NE-ACR-TYP-CD = "SL";
          NE0CS-S-VNEACR01(); /* look for sale accrual.*/
          if (SQLCA.VAGen_SQLCODE == 100)
   /* MOVE 'S     ' TO TA1REC.TA1LOCAT(2);*/
   /* MOVE 'IO6940' TO TA1REC.TA1LOCAT(3);*/
   /* MOVE 'DNILO' TO TA1REC.TA1DBASE;*/
   /* MOVE 'VNEACR01' TO TA1REC.TA1TBLVU;*/
   /* PERFORM XPNL005;       /* abend routine*/
          end
          if (SQLCA.VAGen_SQLCODE != 100)
            VNEACR01.NE-STAT-CD = "WO";
            NE0CS-U-VNEACR01(); /* writeoff sale accrual.*/
          end
        end
        converseLib.validationFailed(167);
      end
      ;
      NE0CW-INX2 = NE0CW-INX2 + 1; /* fetch next row*/
      ;
    end /* end while on same page*/
    ;
    NE0CW-CUR-PAGE-NBR = NE0CW-CUR-PAGE-NBR + 1;
    ;
  end /* end while more pages*/
  ;
  set NE0CW03 empty;
  ;
end // end NE0CS-WRITEOFF

//*** RECORD=NE0CW01 ****
// ********** NK0E APPLICATION WORKING STORAGE RECORD *********
// Maintenance
// 05-06-93    KSHAW Expanded Ivc-array from 6 to 10 occurances
// ***********************
Record NE0CW01 type basicRecord
  5 NE0CW-GROUP char(152) ; // NE0CW01 group item
    10 NE0CW-ZZZCHGCT NE0CW-ZZZCHGCT ; 
    10 NE0CW-01-EOSF NE0CW-01-EOSF ; 
    10 NE0CW-01-MATCHF NE0CW-01-MATCHF ; 
    10 NE0CW-NIBLINBR NE0CW-NIBLINBR ; 
    10 NE0CW-INX NE0CW-INX ; 
    10 NE0CW-INX2 NE0CW-INX2 ; 
    10 NE0CW-INX3 NE0CW-INX3 ; 
    10 NE0CW-INX4 NE0CW-INX4 ; 
    10 NE0CW-CUR-INX NE0CW-CUR-INX ; 
    10 NE0CW-01-CURR-POST-MO NE0CW-01-CURR-POST-MO ; 
    10 NE0CW-01-XATCD NE0CW-01-XATCD ; 
    10 NE0CW-01-COST NE0CW-01-COST ; 
    10 NE0CW-01-SALE NE0CW-01-SALE ; 
    10 NE0CW-01-VARIANCE NE0CW-01-VARIANCE ; 
    10 NE0CW-01-RCLS-COUNT NE0CW-01-RCLS-COUNT ; 
    10 NE0CW-01-ACR-TYP-CD NE0CW-01-ACR-TYP-CD ; 
    10 NE0CW-01-UNT-PRC NE0CW-01-UNT-PRC ; 
    10 NE0CW-ARRAY-CNT NE0CW-ARRAY-CNT ; 
    10 NE0CW-HIGH-PAGE-NBR NE0CW-HIGH-PAGE-NBR ; 
    10 NE0CW-NEW-PAGE-NBR NE0CW-NEW-PAGE-NBR ; 
    10 NE0CW-CUR-PAGE-NBR NE0CW-CUR-PAGE-NBR ; 
    10 NE0CW-MAP-PAGE-NBR NE0CW-MAP-PAGE-NBR ; 
    10 NE0CW-NEXT-PAGE-NBR NE0CW-NEXT-PAGE-NBR ; 
    10 NE0CW-MAP100-TO-PAGE NE0CW-MAP100-TO-PAGE ; 
    10 NE0CW-MAP100-FM-PAGE NE0CW-MAP100-FM-PAGE ; 
    10 NE0CW-HOLD-PAGE-NBR NE0CW-HOLD-PAGE-NBR ; 
    10 NE0CW-INVOICE-FOUND NE0CW-INVOICE-FOUND ; 
    10 NE0CW-MULTI-CLM-ITM NE0CW-MULTI-CLM-ITM ; 
    10 NE0CW-ERR-FLAG NE0CW-ERR-FLAG ; 
    10 NE0CW-IVC-ERR-FL NE0CW-IVC-ERR-FL ; 
    10 NE0CW-SUSPENCE-GL-FL NE0CW-SUSPENCE-GL-FL ; 
    10 NE0CW-KEY NE0CW-KEY ; 
      15 NE0CW-01LRG-NBR NE0CW-01LRG-NBR ; 
      15 * char(1) ; // Filler
      15 NE0CW-CHR-IND NE0CW-CHR-IND ; 
      15 * char(1) ; // Filler
      15 NE0CW-SML-NBR NE0CW-SML-NBR ; 
    10 NE0CW-W03-SIZE NE0CW-W03-SIZE ; 
    10 NE0CW-ZRTCD NE0CW-ZRTCD ; 
    10 NE0CW-IVC-BAL NE0CW-IVC-BAL ; 
    10 NE0CW-EDIT-KEY NE0CW-EDIT-KEY ; 
      15 NE0CW-EDIT-ZCHCD NE0CW-EDIT-ZCHCD ; 
      15 NE0CW-EDIT-IVC NE0CW-EDIT-IVC ; 
      15 NE0CW-EDIT-NIBLINBR NE0CW-EDIT-NIBLINBR ; 
    10 NE0CW-MOD-FLAGS NE0CW-MOD-FLAGS ; 
      15 NE0CW-PAGE-MOD-FL NE0CW-PAGE-MOD-FL ; 
        20 NE0CW-MOD-IVC NE0CW-MOD-IVC ; 
        20 NE0CW-MOD-ZCHCD NE0CW-MOD-ZCHCD ; 
        20 NE0CW-MOD-CLM-AMT NE0CW-MOD-CLM-AMT ; 
    10 NE0CW-MAP-MISC NE0CW-MAP-MISC ; 
      15 NE0CW-MAP-ZCHCD NE0CW-MAP-ZCHCD ; 
      15 NE0CW-MAP-IVC NE0CW-MAP-IVC ; 
      15 NE0CW-MAP-NIBLINBR NE0CW-MAP-NIBLINBR ; 
    10 NE0CW-ENTER-CNFM-FL NE0CW-ENTER-CNFM-FL ; 
end // end NE0CW01

//*** RECORD=NE0CW02 ****
// ************  MAP100 temp storage record  *****************
// ***********************
Record NE0CW02 type basicRecord
  10 NE0CW-02-PAGE NE0CW-02-PAGE ; 
  10 NE0CW-02-STYLE NE0CW-02-STYLE ; 
    15 NE0CW-02S-STY NE0CW-02S-STY ; 
    15 NE0CW-02S-H1 NE0CW-02S-H1 ; 
    15 NE0CW-02S-COL NE0CW-02S-COL ; 
    15 NE0CW-02S-H2 NE0CW-02S-H2 ; 
    15 NE0CW-02S-DIM NE0CW-02S-DIM ; 
  10 NE0CW-02-ORDER NE0CW-02-ORDER ; 
    15 NE0CW-02O-OP1CUOID NE0CW-02O-OP1CUOID ; 
      20 * num(8) ; 
      20 NE0CW-02-OP1PARTN NE0CW-02-OP1PARTN ; 
    15 NE0CW-02O-OP1NORID NE0CW-02O-OP1NORID ; 
  10 NE0CW-02-POSTDT NE0CW-02-POSTDT ; 
    15 NE0CW-02-POSTCCYY NE0CW-02-POSTCCYY ; 
      20 NE0CW-02-POSTCC NE0CW-02-POSTCC ; 
      20 NE0CW-02-POSTYY NE0CW-02-POSTYY ; 
    15 NE0CW-02-POSTMM NE0CW-02-POSTMM ; 
  10 NE0CW-02-EZDT NE0CW-02-EZDT ; 
    15 NE0CW-02-EZCC NE0CW-02-EZCC ; 
    15 NE0CW-02-EZYY NE0CW-02-EZYY ; 
    15 NE0CW-02-EZMM NE0CW-02-EZMM ; 
    15 NE0CW-02-EZDD NE0CW-02-EZDD ; 
end // end NE0CW02

//*** RECORD=NE0CW03 ****
// ***********************NE0CW03******************************
// 
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  ------     ---------------------------------------
// 04-20-94  jdemar     Initial record creation
// ***********************
Record NE0CW03 type basicRecord
  5 NE0CW-03-LENGTH NE0CW-03-LENGTH ; 
  5 NE0CW-03-SEL NE0CW-03-SEL [14] ; 
  5 NE0CW-03-SCO-GROUP NE0CW-03-SCO-GROUP [14] ; 
    10 NIDIVCID NIDIVCID ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 NE-CST-SRC-ID NE-CST-SRC-ID ; 
    10 NE-SRC-IVC-ID NE-SRC-IVC-ID ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 NL-CLM-ID NL-CLM-ID ; 
    10 TSFSHPID TSFSHPID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 PC2CUXID PC2CUXID ; 
    10 ZPSCD ZPSCD ; 
    10 NL-PMT-MTHD-CD NL-PMT-MTHD-CD ; 
    10 OP1PARTN OP1PARTN ; 
    10 NE-CST-SLS-UNT-QTY NE-CST-SLS-UNT-QTY ; 
    10 NE-CST-UNT-QTY NE-CST-UNT-QTY ; 
    10 XUMCD XUMCD ; 
    10 NE-UNT-SLS-PRC NE-UNT-SLS-PRC ; 
    10 NE-UNT-CST NE-UNT-CST ; 
    10 NE-ACR-SLS-UNT-QTY NE-ACR-SLS-UNT-QTY ; 
    10 NE-ACR-UNT-SLS-PRC NE-ACR-UNT-SLS-PRC ; 
    10 NE-ACR-CST-UNT-QTY NE-ACR-CST-UNT-QTY ; 
    10 NE-ACR-UNT-CST NE-ACR-UNT-CST ; 
    10 NE-GL-POST-MO NE-GL-POST-MO ; 
    10 XWHCD XWHCD ; 
    10 PC3PONBR PC3PONBR ; 
    10 PC3POIDT PC3POIDT ; 
    10 XSECD XSECD ; 
    10 PCFSEYR PCFSEYR ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 NE-STAT-CD NE-STAT-CD ; 
    10 GLAENT GLAENT ; 
    10 GLARCID GLARCID ; 
    10 GLANTAC GLANTAC ; 
    10 GLASUB GLASUB ; 
    10 GLAPRJ GLAPRJ ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end NE0CW03

//*** RECORD=NE0CW04-PARMS ****
// ************  MAP100 temp storage record  *****************
// *****************************
Record NE0CW04-PARMS type basicRecord
  10 NE0CW-04-TASK NE0CW-04-TASK ; 
  10 NE0CW-04-COUNT NE0CW-04-COUNT ; 
  10 NE0CW-04-LO-DATE NE0CW-04-LO-DATE ; 
  10 NE0CW-04-HI-DATE NE0CW-04-HI-DATE ; 
  10 NE0CW-04-LO-CPO NE0CW-04-LO-CPO ; 
  10 NE0CW-04-HI-CPO NE0CW-04-HI-CPO ; 
end // end NE0CW04-PARMS

//*** RECORD=NE0CW05-RECLASS ****
// ************  MAP100 temp storage record  *****************
// *******************************
Record NE0CW05-RECLASS type basicRecord
  5 NE0CW-05-RCLS-GROUP NE0CW-05-RCLS-GROUP ; 
    10 NE0CW-05-RCLS-KUCCOID NE0CW-05-RCLS-KUCCOID ; 
    10 NE0CW-05-RCLS-KUMSTRID NE0CW-05-RCLS-KUMSTRID ; 
    10 NE0CW-05-RCLS-OP1CUOID NE0CW-05-RCLS-OP1CUOID ; 
    10 NE0CW-05-RCLS-OP1NORID NE0CW-05-RCLS-OP1NORID ; 
    10 NE0CW-05-RCLS-OP1PARTN NE0CW-05-RCLS-OP1PARTN ; 
    10 NE0CW-05-RCLS-XGPCD NE0CW-05-RCLS-XGPCD ; 
    10 NE0CW-05-RCLS-SY1STNBR NE0CW-05-RCLS-SY1STNBR ; 
    10 NE0CW-05-RCLS-SY2CLRID NE0CW-05-RCLS-SY2CLRID ; 
    10 NE0CW-05-RCLS-XDMCD NE0CW-05-RCLS-XDMCD ; 
    10 NE0CW-05-RCLS-XQACD NE0CW-05-RCLS-XQACD ; 
    10 NE0CW-05-RCLS-NIDIVCID NE0CW-05-RCLS-NIDIVCID ; 
    10 NE0CW-05-RCLS-PC3PONBR NE0CW-05-RCLS-PC3PONBR ; 
end // end NE0CW05-RECLASS

DataItem NE0CW-01-ACR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold field for cost qty.
DataItem NE0CW-01-COST num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hold field for xatcd.
DataItem NE0CW-01-CURR-POST-MO num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of Screen Flag - nlxeosf
DataItem NE0CW-01-EOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Screen Flag - nlxeosf
DataItem NE0CW-01-MATCHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// count of records reclassed.
DataItem NE0CW-01-RCLS-COUNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hold field for sale qty.
DataItem NE0CW-01-SALE num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Unit price hold field.
DataItem NE0CW-01-UNT-PRC num(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Variance computation field.
DataItem NE0CW-01-VARIANCE num(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hold field for xatcd.
DataItem NE0CW-01-XATCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Error key Lrg number
DataItem NE0CW-01LRG-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-EZCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-EZDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-EZDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-EZMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-EZYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-OP1PARTN num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-ORDER num(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW02 Length record
DataItem NE0CW-02-PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-POSTCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-POSTCCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-POSTDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-POSTMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02-POSTYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-02-STYLE char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0CW-02O-OP1CUOID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0CW-02O-OP1NORID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-02S-COL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-02S-DIM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-02S-H1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-02S-H2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-02S-STY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0CW-03-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// claims common working storage
DataItem NE0CW-03-SCO-GROUP char(160)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0CW-03-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-04-COUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-04-HI-CPO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-04-HI-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-04-LO-CPO char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW02 Map Quantity
DataItem NE0CW-04-LO-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW02 Length record
DataItem NE0CW-04-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0CW-05-RCLS-GROUP char(36)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reclass customer
DataItem NE0CW-05-RCLS-KUCCOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reclass store
DataItem NE0CW-05-RCLS-KUMSTRID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reclass invoice
DataItem NE0CW-05-RCLS-NIDIVCID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reclass cust ord id
DataItem NE0CW-05-RCLS-OP1CUOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reclass nike ord id
DataItem NE0CW-05-RCLS-OP1NORID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reclass order part
DataItem NE0CW-05-RCLS-OP1PARTN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reclass p.o. number
DataItem NE0CW-05-RCLS-PC3PONBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reclass style number
DataItem NE0CW-05-RCLS-SY1STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reclass style color
DataItem NE0CW-05-RCLS-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reclass dimension
DataItem NE0CW-05-RCLS-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reclass gpc
DataItem NE0CW-05-RCLS-XGPCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reclass quality
DataItem NE0CW-05-RCLS-XQACD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 array size count
DataItem NE0CW-ARRAY-CNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 Error key indicator
DataItem NE0CW-CHR-IND char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Hold field for current index.
DataItem NE0CW-CUR-INX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page number currently loaded.
DataItem NE0CW-CUR-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Dup Adj edit Invoice id
DataItem NE0CW-EDIT-IVC int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Dup Adj edit key
DataItem NE0CW-EDIT-KEY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dup Adj edit line number
DataItem NE0CW-EDIT-NIBLINBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Dup Adj edit ZCHCD
DataItem NE0CW-EDIT-ZCHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Item error flag
DataItem NE0CW-ENTER-CNFM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Item error flag
DataItem NE0CW-ERR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Highest page # in temp storage
DataItem NE0CW-HIGH-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Hold field for page number
DataItem NE0CW-HOLD-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 Invoice found in ivx
DataItem NE0CW-INVOICE-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Screen index
DataItem NE0CW-INX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 work index
DataItem NE0CW-INX2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 index for NE0CW04
DataItem NE0CW-INX3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 index for NE0CW04
DataItem NE0CW-INX4 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Balance of invoice item
DataItem NE0CW-IVC-BAL num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 Item error flag
DataItem NE0CW-IVC-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Error Key
DataItem NE0CW-KEY char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Dup Adj edit Invoice id
DataItem NE0CW-MAP-IVC int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Dup Adj edit key
DataItem NE0CW-MAP-MISC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nl-ln-itm-seq-nbr
DataItem NE0CW-MAP-NIBLINBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Page number from current map.
DataItem NE0CW-MAP-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Dup Adj edit ZCHCD
DataItem NE0CW-MAP-ZCHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map100 FROM page number
DataItem NE0CW-MAP100-FM-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Map100 TO page number
DataItem NE0CW-MAP100-TO-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 XDM mod flag
DataItem NE0CW-MOD-CLM-AMT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Group level for mod fl
DataItem NE0CW-MOD-FLAGS char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Style mod flag
DataItem NE0CW-MOD-IVC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Color mod flag
DataItem NE0CW-MOD-ZCHCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Multi claim itm flag
DataItem NE0CW-MULTI-CLM-ITM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new page number for map300
DataItem NE0CW-NEW-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next page number to converse
DataItem NE0CW-NEXT-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 current line number
DataItem NE0CW-NIBLINBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 Page number mod flag
DataItem NE0CW-PAGE-MOD-FL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0CW01 Error key small number
DataItem NE0CW-SML-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 suspence gl code flag
DataItem NE0CW-SUSPENCE-GL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size of work 02 for temp stg
DataItem NE0CW-W03-SIZE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0CW01 Receivalbe code
DataItem NE0CW-ZRTCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Change count of claim header o
DataItem NE0CW-ZZZCHGCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

