package ne0e;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPNL-006;
import corpcom3.XPNL002;
import corpcom3.XPNL003;
import corpcom3.XPNL005;
import corpcom4.XSENTRY;
import corpcom4.XSNLS01;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XCTTBL;
import ku.common.KUCREC;
import ne.common.*;
import nl.common.NLXREC;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VNEACR01;
import vv.common.VNESCO01;
//*** PROGRAM=NE0E ****
// ************************************************************
// 
//   NE0D - International Sales Cutoff Inventory Maintenence
//   -------------------------------------------------------
// This application will be used to maintain the VNEacr01
// table.  It will allow the client to add change or delete
// rows.
// 
// Maintenance
//   Date     User Id  Remarks
// --------   -------  ----------------------------------------
// 02/15/94   ahowar   cloned from ne0d -
// 05/15/94   kshaw    fine tuned cloned application
// 11/01/94   ahowar   ne0es-bld-vnesco01 newrec.cur-post-month
//                     is the proper one for ne-gl-post-mo not
//                     the post month entered on ne0g screen.
// 11/03/94   ahowar   update of vneacr01 giving wrong post-mo.
// Y2KFIX   03/06/98  ksumme  Y2K MODIFICATIONS MADE TO:
//                     chg map ne0e102 to show leading zero,
//                     regen to pick up new xx0xs01 module.
// *********************
Program NE0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NE00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  NE0EW01 NE0EW01; // record
  NE0EW02 NE0EW02; // record
  NEWREC NEWREC; // record
  NLXREC NLXREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VNEACR01 VNEACR01; // record
  VNESCO01 VNESCO01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  use NE0EM.NE0EM101,  // forms
      NE0EM.NE0EM102, 
      NE0EM.NE0EM103
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NE0E-000: NE0E-000();
    ;
    ;
    exit program;
    ;
    ;
    ;
  end // end main
end // end NE0E

// application main logic
Function NE0E-000()
   /* -----------------------------------------------------------*/
      /* This is the "main logic" for the application.*/
  ;
      /* xsentry checks to ensure that this application was*/
            /* entered from another csp application.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-000";
  COMMAREA.CACURRAP = "NE0E";
  ;
  NE0E-001(); /* Initilize the application*/
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/
  ;
  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NE0E-050(); /* screen branch control*/
  end
  ;
  XSPF4();
  ;
end // end NE0E-000

// Initialize application
Function NE0E-001()
   /* -----------------------------------------------------------*/
         /* Initialize the application working storage*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-001";
  ;
  converseVar.commitOnConverse = 1; /* Force db2 to commit on each screen*/
                                  /* converse*/
  VGVar.handleHardIOErrors = 1; /* Return control to program if hard db2*/
                                  /* error*/
  ;
  XSENTRY(); /* Check entry thru main menu*/
  XSSEGTR(); /* Set segmented transaction id*/
  ;
  set SQLCA empty; /* Clear out the SQL return record*/
  ;
  set ERRSQLCA empty; /* Clear out the "common" error record*/
  ;
  set TA1REC empty; /* Clear out the "common" abend record*/
  ;
  set NEWREC empty; /* Clear out the "common" working*/
                                  /* storage*/
  set NLXREC empty; /* Clear out the "common" working*/
                                  /* storage*/
  ;
  set VNEACR01 empty;
  ;
  set NE0EW01 empty; /* Clear application working storage*/
                                  /* for map 100*/
  ;
  set NE0EW02 empty; /* Clear application working storage*/
  ;
  if (COMMAREA.CAFRMSYS != "NE")
    COMMAREA.CAUSERA = " ";
  end
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag 'no'*/
  NLXREC.NLXERRF = "N"; /* set error-flag to 'no'*/
                                  /* allow to go to map200*/
  NE0EW-02-SIZE = 1782; /* record length used by temp storage*/
  ;
   /* ------------------------------------------------------*/
    /* Set up working-storage array of screen names*/
   /* ------------------------------------------------------*/
  ;
  ;
  NLXREC.NLXSNAME[1] = "NE0EM101";
  NLXREC.NLXSNAME[2] = "NE0EM102";
  NLXREC.NLXSNAME[3] = "NE0EM103";
  ;
   /* **********************************************/
   /* Was this application entered via 'fastpath'?*/
   /* not allowed*/
   /* **********************************************/
  ;
  if (COMMAREA.CAFROMAP == "NE0G")
  /* continue*/
  else
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = " ";
    XPNL002(); /* exit*/
  end
  ;
  NLXREC.NLXCSCRN = "NE0EM101"; /* go to map 101 Left first*/
  ;
  NEWREC.NEW-GROUP = COMMAREA.CAUSERA;
  ;
  NEW-FROM-APP = COMMAREA.CAFROMAP;
  ;
  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";
  ;
   /* **********************************************/
   /* Build Temp storage for entire application*/
   /* now.*/
   /* **********************************************/
  ;
  NE0ES-DEL-TMP-STG(); /* Delete temp storage prior to writting*/
                                  /* to it*/
  ;
  NE0EW-CURR-PAGE-NBR = 1;
  NE0EW-MAP-PAGE-NBR = 1;
  ;
  ;
  NE0ES-BUILD-TEMP();
  ;
  ;
end // end NE0E-001

// Screen branch control
Function NE0E-050()
   /* -----------------------------------------------------------*/
      /* Control process the application screen(s)*/
  ;
     /* Note that this process is being performed in a*/
     /* "while loop" until the end-of-application flag is set*/
     /* to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-050"; /* set current process name*/
  ;
  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;
  ;
  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME)
     /* if current-screen-name is in the screen-array, then set*/
     /* the screen-index*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex;
  end
  ;
  NLXREC.NLXEOSF = "N"; /* Set end-of-screen flag to 'no'*/
  NLXREC.NLXBLDSC = "Y"; /* Set build screen flag to 'yes'*/
  if (NLXREC.NLXERRF == "Y") /* set in build temp called in*/
    /* continue                      ne0d-001==> no items found*/
  else
    NLXREC.NLXERRF = "N"; /* Clear error flag*/
    converseLib.validationFailed(0);
  end
  ;
  if (NLXREC.NLXSCRNX == 1) /* If screen ne0eM101 LEFT*/
    while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
      NE0E-10001();
    end
  else
    if (NLXREC.NLXSCRNX == 2) /* If screen ne0eM102 MIDDLE*/
      while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
        NE0E-10002();
      end
    else
      if (NLXREC.NLXSCRNX == 3) /* If screen ne0eM103 RIGHT*/
        while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
          NE0E-10003();
        end
      end
    end
  end
  ;
  ;
   /* at this point;*/
       /* if the end-of-application flag (nlxeoaf ) = 'n'*/
         /* the perform will return to the top of ne0e050...*/
       /* else*/
         /* the perform will auto return to ne0e000.*/
  ;
  ;
end // end NE0E-050

// process map  101
Function NE0E-10001()
   /* -----------------------------------------------------------*/
       /* Process screen NE0EM101  LEFT*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from NE0E-050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-10001";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0E-10101();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0EM101 ;
  ;
  NE0EM101.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  ;
  ;
  NE0E-11001(); /* validate pf keys*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0E-12001(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0E-13001(); /* determine next action...*/
  end
  ;
  ;
end // end NE0E-10001

// process map  102
Function NE0E-10002()
   /* -----------------------------------------------------------*/
       /* Process screen NE0EM101  LEFT*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from NE0E-050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-10002";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0E-10102();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0EM102 ;
  ;
  NE0EM101.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  ;
  ;
  NE0E-11002(); /* validate pf keys*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0E-12002(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0E-13002(); /* determine next action...*/
  end
  ;
  ;
end // end NE0E-10002

// process map  103
Function NE0E-10003()
   /* -----------------------------------------------------------*/
       /* Process screen ne0eM101  LEFT*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from ne0e-050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-10003";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0E-10103();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0EM103 ;
  ;
  NE0EM101.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  ;
  ;
  NE0E-11003(); /* validate pf keys*/
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0E-12003(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0E-13003(); /* determine next action...*/
  end
  ;
  ;
end // end NE0E-10003

// Build screen 101
Function NE0E-10101()
   /* **************************************/
   /* Get header fields for ne0eM101     **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0E-101";
  ;
  converseLib.clearScreen();
  set NE0EM101 initial;
  ;
  NE0EM101.XXXRVNBR = "00"; /* revision nbr*/
  NE0EM101.XXXMAPNM = "NE0EM101"; /* map name*/
  NE0EM101.XXXPRCNM = "NE0E101"; /* process name*/
  NE0EM101.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* **************************************************************/
   /* Build header of MAP101 from passed fields in NEWREC*/
   /* **************************************************************/
  ;
  NE0EM-101-CU-CO-ID = NEWREC.NEW-KUCCOID;
  NE0EM-101-CU-CO-NM = NEWREC.NEW-KUCCONM;
  NE0EM-101-POSTING-MONTH = NEWREC.NEW-POSTING-MONTH;
      /* format order number*/
  NE0EW-OP-CUST-ORD-ID = NEWREC.NEW-CUST-ORDID;
  NE0EW-OP-NIKE-ORD-ID = NEWREC.NEW-NIKE-ORDID;
  ;
  move NE0EW-ORDER-NBR to NE0EM-101-ORDER-NUMBER withV60Compat;
  ;
  NE0EM-101-XGP-GPC-CD = NEWREC.NEW-XGPCD;
      /* format style*/
  if (NEWREC.NEW-STYLE-CD == " ")
    NE0EW-STYLE = " ";
  else
    NE0EW-SY-STY-NBR = NEWREC.NEW-STYLE-CD;
    NE0EW-HYPHEN-1 = "-";
    NE0EW-SY-COLR-CD-ID = NEWREC.NEW-COLOR-CD;
    NE0EW-HYPHEN-2 = "-";
    NE0EW-XDM-DIM-CD = NEWREC.NEW-DIM-CD;
  end
  ;
  move NE0EW-STYLE to NE0EM-101-STY-CLR-DIM withV60Compat;
  ;
  if (NEWREC.NEW-STYLE-CD == " ")
    set NE0EM-101-STY-CLR-DIM skip, invisible;
  end
  ;
  NE0EM-101-XQA-QUAL-CD = NEWREC.NEW-QUALITY-CD;
  ;
  NE0ES-BUILD-MAP101();
  ;
  ;
end // end NE0E-10101

// Build screen 102
Function NE0E-10102()
   /* **************************************/
   /* Get header fields for ne0eM102     **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0E-102";
  ;
  converseLib.clearScreen();
  set NE0EM102 initial;
  ;
  NE0EM102.XXXRVNBR = "00"; /* revision nbr*/
  NE0EM102.XXXMAPNM = "NE0EM102"; /* map name*/
  NE0EM102.XXXPRCNM = "NE0E102"; /* process name*/
  NE0EM102.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* **************************************************************/
   /* Build header of MAP102 from passed fields in NEWREC*/
   /* **************************************************************/
  ;
  NE0EM-102-CU-CO-ID = NEWREC.NEW-KUCCOID;
  NE0EM-102-CU-CO-NM = NEWREC.NEW-KUCCONM;
  NE0EM-102-POSTING-MONTH = NEWREC.NEW-POSTING-MONTH;
      /* format order number*/
  NE0EW-OP-CUST-ORD-ID = NEWREC.NEW-CUST-ORDID;
  NE0EW-OP-NIKE-ORD-ID = NEWREC.NEW-NIKE-ORDID;
  ;
  move NE0EW-ORDER-NBR to NE0EM-102-ORDER-NUMBER withV60Compat;
  ;
  NE0EM-102-XGP-GPC-CD = NEWREC.NEW-XGPCD;
      /* format style*/
  if (NEWREC.NEW-STYLE-CD == " ")
    NE0EW-STYLE = " ";
  else
    NE0EW-SY-STY-NBR = NEWREC.NEW-STYLE-CD;
    NE0EW-HYPHEN-1 = "-";
    NE0EW-SY-COLR-CD-ID = NEWREC.NEW-COLOR-CD;
    NE0EW-HYPHEN-2 = "-";
    NE0EW-XDM-DIM-CD = NEWREC.NEW-DIM-CD;
  end
  ;
  move NE0EW-STYLE to NE0EM-102-STY-CLR-DIM withV60Compat;
  ;
  NE0EM-102-XQA-QUAL-CD = NEWREC.NEW-QUALITY-CD;
  ;
  NE0ES-BUILD-MAP102();
  ;
  ;
end // end NE0E-10102

// Build screen 103
Function NE0E-10103()
   /* **************************************/
   /* Get header fields for ne0eM103     **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0E-103";
  ;
  converseLib.clearScreen();
  set NE0EM103 initial;
  ;
  ;
  NE0EM103.XXXRVNBR = "00"; /* revision nbr*/
  NE0EM103.XXXMAPNM = "NE0EM103"; /* map name*/
  NE0EM103.XXXPRCNM = "NE0E103"; /* process name*/
  NE0EM103.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* **************************************************************/
   /* Build header of MAP103 from passed fields in NEWREC*/
   /* **************************************************************/
  ;
  NE0EM-103-CU-CO-ID = NEWREC.NEW-KUCCOID;
  NE0EM-103-CU-CO-NM = NEWREC.NEW-KUCCONM;
  NE0EM-103-POSTING-MONTH = NEWREC.NEW-POSTING-MONTH;
      /* format order number*/
  NE0EW-OP-CUST-ORD-ID = NEWREC.NEW-CUST-ORDID;
  NE0EW-OP-NIKE-ORD-ID = NEWREC.NEW-NIKE-ORDID;
  ;
  move NE0EW-ORDER-NBR to NE0EM-103-ORDER-NUMBER withV60Compat;
  ;
  NE0EM-103-XGP-GPC-CD = NEWREC.NEW-XGPCD;
      /* format style*/
  if (NEWREC.NEW-STYLE-CD == " ")
    NE0EW-STYLE = " ";
  else
    NE0EW-SY-STY-NBR = NEWREC.NEW-STYLE-CD;
    NE0EW-HYPHEN-1 = "-";
    NE0EW-SY-COLR-CD-ID = NEWREC.NEW-COLOR-CD;
    NE0EW-HYPHEN-2 = "-";
    NE0EW-XDM-DIM-CD = NEWREC.NEW-DIM-CD;
  end
  move NE0EW-STYLE to NE0EM-103-STY-CLR-DIM withV60Compat;
  ;
  NE0EM-103-XQA-QUAL-CD = NEWREC.NEW-QUALITY-CD;
  ;
  NE0ES-BUILD-MAP103();
  ;
  ;
end // end NE0E-10103

// Validate PF keys act on some
Function NE0E-11001()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 7, 8, 11, 12, 18*/
     /*  */
     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-11001";
  ;
  set NE0EM101.CATOAP initialAttributes;
  set NE0EM101.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for security level*/
   /* ***********************************/
  ;
   /* IF COMMAREA.CACLVL(4) = 'Y';*/
    /* continue*/
   /* E;*/
   /* IF EZEAID IS PF12*/
   /* OR EZEAID IS PF18;*/
   /* MOVE 17 TO EZEMNO;           /* not authorized*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* EZERTN;*/
   /* END;*/
   /* END;*/
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0EM101.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0EM101.CATOAP;
      COMMAREA.CAITEM = NE0EM101.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0EM101.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf18
   || converseVar.eventKey is enter)
    return;
  end
  ;
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);
  ;
  ;
end // end NE0E-11001

// Validate PF keys act on some
Function NE0E-11002()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 7, 8,10, 11, 12, 18*/
     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-11002";
  ;
  set NE0EM102.CATOAP initialAttributes;
  set NE0EM102.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for security level*/
   /* ***********************************/
  ;
   /* IF COMMAREA.CACLVL(4) = 'Y';*/
    /* continue*/
   /* ELSE;*/
   /* IF EZEAID IS PF12*/
   /* OR EZEAID IS PF18;*/
   /* MOVE 17 TO EZEMNO;           /* not authorized*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* EZERTN;*/
   /* END;*/
   /* END;*/
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0EM102.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0EM102.CATOAP;
      COMMAREA.CAITEM = NE0EM102.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0EM102.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf18
   || converseVar.eventKey is enter)
    return;
  end
  ;
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);
  ;
  ;
end // end NE0E-11002

// Validate PF keys act on some
Function NE0E-11003()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 7, 8, 10, 12, 18*/
     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0E-11003";
  ;
  set NE0EM103.CATOAP initialAttributes;
  set NE0EM103.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for security level*/
   /* ***********************************/
  ;
   /* IF COMMAREA.CACLVL(4) = 'Y';*/
    /* continue*/
   /* ELSE;*/
   /* IF EZEAID IS PF12*/
   /* OR EZEAID IS PF18;*/
   /* MOVE 17 TO EZEMNO;           /* not authorized*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* EZERTN;*/
   /* END;*/
   /* END;*/
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0EM103.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0EM103.CATOAP;
      COMMAREA.CAITEM = NE0EM103.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL003(); /* exit application*/
      set NE0EM103.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0G";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end
  ;
  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf18
   || converseVar.eventKey is enter)
    return;
  end
  ;
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);
  ;
  ;
end // end NE0E-11003

// Edit Enterable fields
Function NE0E-12001()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0E-12001";
  ;
  NE0EW-02-SUB = 14; /* map index*/
  ;
   /* ********************************************************************/
   /* There are 14 occurances of items on each map.  The edits are per-*/
   /* formed in a while loop from the bottom up.*/
   /* ********************************************************************/
  ;
  while (NE0EW-02-SUB > 0)
    ;
     /* Move select field to working storage, all other map fields*/
     /* are display only and are already in temp storage.*/
    ;
   /* ne0em-101-select*/
    NE0EW-01-SEL[NE0EW-02-SUB] = NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB];
    ;
    /* ***************************/
    /* Edit only enterable Field*/
    /* ***************************/
    ;
    if (NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] == "S"
     || NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] == " ")
      if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] > " ")
        if (NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "AC"
         || NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "RC")
          set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] initialAttributes;
        else
          set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] skip, invisible;
        end
      else
        set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] skip, invisible;
      end
    else
      set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] bold, modified, cursor;
      converseLib.validationFailed(18);
      NLXREC.NLXERRF = "Y";
    end
    ;
    NE0EW-02-SUB = NE0EW-02-SUB - 1;
  end /* END WHILE*/
  ;
  ;
    /* edit from page*/
  ;
  if (NE0EM101.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
    NE0EW-MAP-PAGE-NBR = NE0EM101.NE0EM-FM-PAGE; /* move due to*/
    NE0ES-CK-PAGE-NBR(); /* this group called from three maps*/
    if (NLXREC.NLXERRF == "Y") /* maps 101, 102, 103*/
      set NE0EM101.NE0EM-FM-PAGE cursor, bold, modified;
    else
      set NE0EM101.NE0EM-FM-PAGE initialAttributes;
    end
  end
  ;
  ;
end // end NE0E-12001

// Edit Enterable fields
Function NE0E-12002()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0E-12002";
  ;
  NE0EW-02-SUB = 14; /* map index*/
  ;
   /* ********************************************************************/
   /* There are 14 occurances of items on each map.  The edits are per-*/
   /* formed in a while loop from the bottom up.*/
   /* ********************************************************************/
  ;
  while (NE0EW-02-SUB > 0)
    ;
     /* Move select field to working storage, all other map fields*/
     /* are display only and are already in temp storage.*/
    ;
   /* ne0em-102-select*/
    NE0EW-01-SEL[NE0EW-02-SUB] = NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB];
    ;
    /* ***************************/
    /* Edit only enterable Field*/
    /* ***************************/
    ;
    if (NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] == "S"
     || NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] == " ")
      if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] > " ")
        if (NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "AC"
         || NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "RC")
          set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] initialAttributes;
        else
          set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] skip, invisible;
        end
      else
        set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] skip, invisible;
      end
    else
      set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] bold, modified, cursor;
      converseLib.validationFailed(18);
      NLXREC.NLXERRF = "Y";
    end
    ;
    NE0EW-02-SUB = NE0EW-02-SUB - 1;
  end /* END WHILE*/
  ;
  ;
   /* edit from page*/
  ;
  if (NE0EM102.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
    NE0EW-MAP-PAGE-NBR = NE0EM102.NE0EM-FM-PAGE; /* move due to*/
    NE0ES-CK-PAGE-NBR(); /* this group called from three maps*/
    if (NLXREC.NLXERRF == "Y") /* maps 101, 102, 103*/
      set NE0EM102.NE0EM-FM-PAGE cursor, bold, modified;
    else
      set NE0EM102.NE0EM-FM-PAGE initialAttributes;
    end
  end
  ;
  ;
end // end NE0E-12002

// Edit Enterable fields
Function NE0E-12003()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0E-12003";
  ;
  NE0EW-02-SUB = 14; /* map index*/
  ;
   /* ********************************************************************/
   /* There are 14 occurances of items on each map.  The edits are per-*/
   /* formed in a while loop map the bottom up.*/
   /* ********************************************************************/
  ;
  while (NE0EW-02-SUB > 0)
    ;
     /* Move select field to working storage, all other map fields*/
     /* are display only and are already in temp storage.*/
    ;
    NE0EW-01-SEL[NE0EW-02-SUB] = NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB];
    ;
    /* ***************************/
    /* Edit only enterable Field*/
    /* ***************************/
    ;
    if (NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] == "S"
     || NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] == " ")
      if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] > " ")
        if (NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "AC"
         || NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "RC")
          set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] initialAttributes;
        else
          set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] skip, invisible;
        end
      else
        set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] skip, invisible;
      end
    else
      set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] bold, modified, cursor;
      converseLib.validationFailed(18);
      NLXREC.NLXERRF = "Y";
    end
    ;
    NE0EW-02-SUB = NE0EW-02-SUB - 1;
  end /* END WHILE*/
  ;
  ;
   /* edit map page*/
  ;
  ;
  if (NE0EM103.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
    NE0EW-MAP-PAGE-NBR = NE0EM103.NE0EM-FM-PAGE; /* move due to*/
    NE0ES-CK-PAGE-NBR(); /* this group called map three maps*/
    if (NLXREC.NLXERRF == "Y") /* maps 101, 103, 103*/
      set NE0EM103.NE0EM-FM-PAGE cursor, bold, modified;
    else
      set NE0EM103.NE0EM-FM-PAGE initialAttributes;
    end
  end
  ;
  ;
end // end NE0E-12003

// Determine next action M101
Function NE0E-13001()
  /* **********************************/
  /* Determine next action from hdr 1*/
  /* **********************************/
  ;
  NLXREC.NLXCPROC = "NE0E-13001";
  ;
  if (converseVar.eventKey is pf12) /* edit screen, make no updates*/
    converseLib.validationFailed(77); /* edits performed*/
    NLXREC.NLXERRF = "Y";
    return;
  end
  ;
  /* ************************************************/
  /* Update current page to the temp storage*/
  /* ************************************************/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf18)
    if (NE0EW-HIGH-PAGE-NBR > 0)
      NE0ES-UPDT-TMP-STG();
    end
  end
  ;
  /* ****************************************************************/
  /* Enter only valid when fast pathing or going to a specific page*/
  /* ****************************************************************/
  ;
  if (converseVar.eventKey is enter)
    if (NE0EM101.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
      NE0EW-CURR-PAGE-NBR = NE0EM101.NE0EM-FM-PAGE;
      NE0ES-BUILD-MAP101(); /* build new page*/
      set NE0EM-101-DTL-SEL[1] cursor; /* set cursor to first row*/
      return;
    else
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(27); /* select a pf key to update the*/
  /* /* database*/
      return;
    end
  end
  ;
  if (NE0EM101.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
    if (converseVar.eventKey is pf7 || 
    converseVar.eventKey is pf8)
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(22); /* must press enter to go*/
                                   /* to a specific page*/
      return;
    end
  end
  ;
  /* ********************/
  /* PF7 - page forward*/
  /* ********************/
  ;
  if (converseVar.eventKey is pf7)
    NE0EW-MAP-PAGE-NBR = NE0EM101.NE0EM-FM-PAGE;
    NE0ES-MAP101-PF7();
    return;
  end
  ;
  /* *****************/
  /* PF8 - page back*/
  /* *****************/
  ;
  if (converseVar.eventKey is pf8)
    NE0EW-MAP-PAGE-NBR = NE0EM101.NE0EM-FM-PAGE;
    NE0ES-MAP101-PF8();
    return;
  end
  ;
  /* ****************************************/
  /* PF11 PAGE RIGHT go to map 102 (middle)*/
  /* ****************************************/
  ;
  if (converseVar.eventKey is pf11)
    NE0EW-MAP-PAGE-NBR = NE0EM101.NE0EM-FM-PAGE;
    NLXREC.NLXCSCRN = "NE0EM102";
    NLXREC.NLXEOSF = "Y"; /* done with map101*/
    return;
  end
  ;
  /* ****************************************************/
  /* Validate temp storage for remainning*/
  /* PF keys: Search for at least 1 'S' in select field*/
  /* ****************************************************/
  ;
  NE0ES-VAL-SELECT(); /* not required for this program*/
  if (NLXREC.NLXERRF == "Y")
    return;
  end
  ;
   /* ************************/
   /* PF18 Writeoff Accruals*/
   /* ************************/
  ;
  if (converseVar.eventKey is pf18)
    NE0ES-WRITE-OFF();
    NLXREC.NLXCSCRN = "NE0EM101";
    NLXREC.NLXEOSF = "Y"; /* redisplay map 101 with updated*/
    return; /* temp storage*/
  end
  ;
  ;
  ;
end // end NE0E-13001

// Determine next action M102
Function NE0E-13002()
  /* **********************************/
  /* Determine next action from hdr 1*/
  /* **********************************/
  ;
  NLXREC.NLXCPROC = "NE0E-13002";
  ;
  if (converseVar.eventKey is pf12) /* edit screen, make no updates*/
    converseLib.validationFailed(77); /* edits performed*/
    NLXREC.NLXERRF = "Y";
    return;
  end
  ;
  /* ************************************************/
  /* Update current page to the temp storage*/
  /* ************************************************/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf11
   || converseVar.eventKey is pf18)
    if (NE0EW-HIGH-PAGE-NBR > 0)
      NE0ES-UPDT-TMP-STG();
    end
  end
  ;
  /* ****************************************************************/
  /* Enter only valid when fast pathing or going to a specific page*/
  /* ****************************************************************/
  ;
  if (converseVar.eventKey is enter)
    if (NE0EM102.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
      NE0EW-CURR-PAGE-NBR = NE0EM102.NE0EM-FM-PAGE;
      NE0ES-BUILD-MAP102(); /* build new page*/
      set NE0EM-102-DTL-SEL[1] cursor; /* set cursor to first row*/
      return;
    else
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(27); /* select a pf key to update the*/
  /* /* database*/
      return;
    end
  end
  ;
  ;
  if (NE0EM102.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
    if (converseVar.eventKey is pf7 || 
    converseVar.eventKey is pf8)
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(22); /* must press enter to go*/
                                   /* to a specific page*/
      return;
    end
  end
  ;
  /* ********************/
  /* PF7 - page forward*/
  /* ********************/
  ;
  if (converseVar.eventKey is pf7)
    NE0EW-MAP-PAGE-NBR = NE0EM102.NE0EM-FM-PAGE;
    NE0ES-MAP102-PF7();
    return;
  end
  ;
  /* *****************/
  /* PF8 - page back*/
  /* *****************/
  ;
  if (converseVar.eventKey is pf8)
    NE0EW-MAP-PAGE-NBR = NE0EM102.NE0EM-FM-PAGE;
    NE0ES-MAP102-PF8();
    return;
  end
  ;
  /* **************************************/
  /* PF10 PAGE RIGHT go to map 101 (left)*/
  /* **************************************/
  ;
  if (converseVar.eventKey is pf10)
    NE0EW-MAP-PAGE-NBR = NE0EM102.NE0EM-FM-PAGE;
    NLXREC.NLXCSCRN = "NE0EM101";
    NLXREC.NLXEOSF = "Y"; /* done with map102*/
    return;
  end
  ;
  /* *********************************************/
  /* PF11 PAGE RIGHT go to map 103 (right)*/
  /* *********************************************/
  ;
  if (converseVar.eventKey is pf11)
    NE0EW-MAP-PAGE-NBR = NE0EM102.NE0EM-FM-PAGE;
    NLXREC.NLXCSCRN = "NE0EM103";
    NLXREC.NLXEOSF = "Y"; /* done with map102*/
    return;
  end
  ;
  ;
  /* ****************************************************/
  /* Validate temp storage for remainning*/
  /* PF keys: Search for at least 1 'S' in select field*/
  /* ****************************************************/
  ;
  NE0ES-VAL-SELECT(); /* not required for this program*/
  if (NLXREC.NLXERRF == "Y")
    return;
  end
  ;
   /* ************************/
   /* PF18 Writeoff Accruals*/
   /* ************************/
  ;
  if (converseVar.eventKey is pf18)
    NE0ES-WRITE-OFF();
    NLXREC.NLXCSCRN = "NE0EM102";
    NLXREC.NLXEOSF = "Y"; /* redisplay map 101 with updated*/
    return; /* temp storage*/
  end
  ;
  ;
end // end NE0E-13002

// Determine next action M103
Function NE0E-13003()
  /* **********************************/
  /* Determine curr action from hdr 1*/
  /* **********************************/
  ;
  NLXREC.NLXCPROC = "NE0E-13003";
  ;
  if (converseVar.eventKey is pf12) /* edit screen, make no updates*/
    converseLib.validationFailed(77); /* edits performed*/
    NLXREC.NLXERRF = "Y";
    return;
  end
  ;
  /* ************************************************/
  /* Update current page to the temp storage*/
  /* ************************************************/
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf10
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf18
   || converseVar.eventKey is pf20)
    if (NE0EW-HIGH-PAGE-NBR > 0)
      NE0ES-UPDT-TMP-STG();
    end
  end
  ;
  /* ****************************************************************/
  /* Enter only valid when fast pathing or going to a specific page*/
  /* ****************************************************************/
  ;
  if (converseVar.eventKey is enter)
    if (NE0EM103.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
      NE0EW-CURR-PAGE-NBR = NE0EM103.NE0EM-FM-PAGE;
      NE0ES-BUILD-MAP103(); /* build new page*/
      set NE0EM-103-DTL-SEL[1] cursor; /* set cursor to first row*/
      return;
    else
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(27); /* select a pf key to update the*/
  /* /* database*/
      return;
    end
  end
  ;
  if (NE0EM103.NE0EM-FM-PAGE != NE0EW-CURR-PAGE-NBR)
    if (converseVar.eventKey is pf7
     || converseVar.eventKey is pf8)
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(22); /* must press enter to go*/
      return; /* to a specific page on same map*/
    end
  end
  ;
  /* ********************/
  /* PF7 - page forward*/
  /* ********************/
  ;
  if (converseVar.eventKey is pf7)
    NE0EW-MAP-PAGE-NBR = NE0EM103.NE0EM-FM-PAGE;
    NE0ES-MAP103-PF7();
    return;
  end
  ;
  /* *****************/
  /* PF8 - page back*/
  /* *****************/
  ;
  if (converseVar.eventKey is pf8)
    NE0EW-MAP-PAGE-NBR = NE0EM103.NE0EM-FM-PAGE;
    NE0ES-MAP103-PF8();
    return;
  end
  ;
  /* **************************************/
  /* PF10 PAGE Left  go to map 102 (left)*/
  /* **************************************/
  ;
  if (converseVar.eventKey is pf10)
    NE0EW-MAP-PAGE-NBR = NE0EM103.NE0EM-FM-PAGE;
    NLXREC.NLXCSCRN = "NE0EM102";
    NLXREC.NLXEOSF = "Y"; /* done with map103*/
    return;
  end
  ;
  /* ****************************************************/
  /* Validate temp storage for remainning*/
  /* PF keys: Search for at least 1 'S' in select field*/
  /* ****************************************************/
  ;
  NE0ES-VAL-SELECT();
  if (NLXREC.NLXERRF == "Y")
    return;
  end
  ;
   /* ************************/
   /* PF18 Writeoff Accruals*/
   /* ************************/
  ;
  if (converseVar.eventKey is pf18)
    NE0ES-WRITE-OFF();
    NLXREC.NLXCSCRN = "NE0EM103";
    NLXREC.NLXEOSF = "Y"; /* redisplay map 101 with updated*/
    return; /* temp storage*/
  end
  ;
  ;
  ;
  ;
end // end NE0E-13003

// add row vnesco01
Function NE0ES-A-VNESCO01()
   /* *****************************************************/
   /* add vnesco record*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-A-VNESCO01";
  ;
  call "IO6980" ("A ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "A     ";
    TA1REC.TA1LOCAT[3] = "IO6980";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNESCO01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0ES-A-VNESCO01

// Add temp storage
Function NE0ES-ADD-TMP-STG()
   /* ***********************************************************************/
   /* Write temp storage*/
   /*  */
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-ADD-TMP-STG";
  move NE0EW-02-SIZE to NE0EW-01-LENGTH withV60Compat;
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "A"; /* Function code*/
  ;
  try
    call "TA0050" (NE0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    NE0EW-HIGH-PAGE-NBR = TA5REC.TA5TSQIX; /* Save high page Nbr*/
    return; /* Return to previous process*/
    ;
  else
    ;
   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
    ;
    converseLib.validationFailed(23); /* Indicate system error*/
    ;
    XPNL-006(); /* abend routine*/
    ;
  end
  ;
end // end NE0ES-ADD-TMP-STG

// BUILD VNESCO01 RECORD
Function NE0ES-BLD-VNESCO01()
  /* ******************************************************************/
  /* This statement group is used to format the the vnesco01 in order*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-BLD-VNESCO01";
  ;
  set VNESCO01 empty;
  ;
   /* *****************************************/
   /* get current date and time for zz family*/
   /* *****************************************/
  ;
  XX0XS01();
  ;
  VNESCO01.ZZZSDT = XX0XW01.XX0XWDAT;
  ;
  VNESCO01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
   /* *******************/
   /* FORMAT POST MONTH*/
   /* *******************/
  NE0EW-02-WS-FORMAT-CC = XX0XW01.XX0XW19;
  NE0EW-02-WS-FORMAT-YY = XX0XW01.XX0XWYY;
  NE0EW-02-WS-FORMAT-MM = XX0XW01.XX0XWMM;
  ;
  VNESCO01.NIDIVCID = NE0EW-01-NL-IVC-ID[NE0EW-02-SUB];
  VNESCO01.OP1CUOID = NE0EW-01-OP-CUST-ORD-ID[NE0EW-02-SUB];
  VNESCO01.OP1NORID = NE0EW-01-OP-NIKE-ORD-ID[NE0EW-02-SUB];
  VNESCO01.NE-CST-SRC-ID = NE0EW-01-NE-CST-SRC-ID[NE0EW-02-SUB];
  VNESCO01.NE-SRC-IVC-ID = NE0EW-01-NE-SRC-IVC-ID[NE0EW-02-SUB];
  VNESCO01.XGPCD = NE0EW-01-XGP-GPC-CD[NE0EW-02-SUB];
  VNESCO01.SY1STNBR = NE0EW-01-SY-STY-NBR[NE0EW-02-SUB];
  VNESCO01.SY2CLRID = NE0EW-01-SY-COLR-CD-ID[NE0EW-02-SUB];
  VNESCO01.XDMCD = NE0EW-01-XDM-DIM-CD[NE0EW-02-SUB];
  VNESCO01.XQACD = NE0EW-01-XQA-QUAL-CD[NE0EW-02-SUB];
  VNESCO01.NL-CLM-ID = 0;
  VNESCO01.KUCCOID = NE0EW-01-CU-CO-ID[NE0EW-02-SUB];
  VNESCO01.KUMSTRID = NE0EW-01-CU-STOR-ID[NE0EW-02-SUB];
  VNESCO01.PC2CUXID = NE0EW-01-PC-PRDCU-ID[NE0EW-02-SUB];
  VNESCO01.ZPSCD = NE0EW-01-ZPS-PROD-SRC-CD[NE0EW-02-SUB];
  VNESCO01.NL-PMT-MTHD-CD = NE0EW-01-NL-PMT-MTHD-CD[NE0EW-02-SUB];
  VNESCO01.OP1PARTN = NE0EW-01-OP-ORD-PART-CHAR[NE0EW-02-SUB];
  VNESCO01.NE-CST-SLS-UNT-QTY = 0;
  VNESCO01.NE-CST-UNT-QTY = 0;
  VNESCO01.XUMCD = NE0EW-01-XUM-UOM-CD[NE0EW-02-SUB];
  VNESCO01.NE-UNT-SLS-PRC = 0;
  VNESCO01.NE-UNT-CST = 0;
  ;
   /* format the following 3 fields according to ne-acr-typ-cd*/
  ;
  if (NE0EW-01-NE-ACR-TYP-CD[NE0EW-02-SUB] == "CS")
    VNESCO01.TSFSHPID = 03;
    VNESCO01.NE-ACR-CST-UNT-QTY = NE0EW-01-NE-ACR-UNT[NE0EW-02-SUB];
    VNESCO01.NE-ACR-UNT-CST = NE0EW-01-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB];
  end
  ;
  if (NE0EW-01-NE-ACR-TYP-CD[NE0EW-02-SUB] == "IN")
    VNESCO01.TSFSHPID = 05;
    VNESCO01.NE-ACR-CST-UNT-QTY = NE0EW-01-NE-ACR-UNT[NE0EW-02-SUB];
    VNESCO01.NE-ACR-UNT-CST = NE0EW-01-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB];
  end
  ;
  if (NE0EW-01-NE-ACR-TYP-CD[NE0EW-02-SUB] == "SL")
    VNESCO01.TSFSHPID = 04;
    VNESCO01.NE-ACR-SLS-UNT-QTY = NE0EW-01-NE-ACR-UNT[NE0EW-02-SUB];
    VNESCO01.NE-ACR-UNT-SLS-PRC = NE0EW-01-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB];
  end
  ;
  VNESCO01.NE-GL-POST-MO = NEWREC.NEW-CURR-POST-MONTH;
  VNESCO01.XWHCD = NE0EW-01-XWHCD[NE0EW-02-SUB];
  VNESCO01.PC3PONBR = NE0EW-01-PC-PO-NBR[NE0EW-02-SUB];
  VNESCO01.PC3POIDT = 0;
  VNESCO01.XSECD = "  ";
  VNESCO01.PCFSEYR = 0;
  VNESCO01.FY1FCTYC = "  ";
  VNESCO01.NE-STAT-CD = "WO";
  VNESCO01.GLAENT = NE0EW-01-GL-ENTITY-CD[NE0EW-02-SUB];
  VNESCO01.GLARCID = NE0EW-01-GL-RSP-CTR-ID[NE0EW-02-SUB];
  VNESCO01.GLANTAC = NE0EW-01-GL-NATRL-ACCT-ID[NE0EW-02-SUB];
  VNESCO01.GLASUB = NE0EW-01-GL-SUB-ACCT-ID[NE0EW-02-SUB];
  VNESCO01.GLAPRJ = NE0EW-01-GL-PROJ-ID[NE0EW-02-SUB];
  ;
  VNESCO01.ZZZCHGCT = 0;
  ;
  NE0ES-A-VNESCO01();
  ;
  ;
end // end NE0ES-BLD-VNESCO01

// Build map from temp storage
Function NE0ES-BUILD-MAP101()
   /* *****************************************************/
   /* Build map from temp storage for Map 101*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-BUILD-MAP101";
  ;
  if (NE0EW-CURR-PAGE-NBR == NE0EW-MAP-PAGE-NBR)
  /* continue*/
  else
    move NE0EW-MAP-PAGE-NBR to NE0EW-CURR-PAGE-NBR withV60Compat;
  end
  ;
  set NE0EW01 empty;
  ;
  if (NE0EW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0EW-CURR-PAGE-NBR <= NE0EW-HIGH-PAGE-NBR)
    NE0ES-GET-TMP-STG(); /* Get current page*/
  end
  ;
  NE0EW-02-SUB = 1;
  while (NE0EW-02-SUB <= 14) /* 14 rows per screen*/
    ;
    NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] = NE0EW-01-SEL[NE0EW-02-SUB]; /* ne0em-101-select*/
    ;
    NE0EM101.NE0EM-101-DTL-CU-CO-ID[NE0EW-02-SUB] = NE0EW-01-CU-CO-ID[NE0EW-02-SUB];
    ;
        /* format style*/
    ;
    if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] == " ")
      NE0EW-STYLE = " ";
    else
      NE0EW-SY-STY-NBR = NE0EW-01-SY-STY-NBR[NE0EW-02-SUB];
      NE0EW-HYPHEN-1 = "-";
      NE0EW-SY-COLR-CD-ID = NE0EW-01-SY-COLR-CD-ID[NE0EW-02-SUB];
      NE0EW-HYPHEN-2 = "-";
      NE0EW-XDM-DIM-CD = NE0EW-01-XDM-DIM-CD[NE0EW-02-SUB];
    end
    NE0EM101.NE0EM-101-DTL-STY-CLR-DIM[NE0EW-02-SUB] = NE0EW-STYLE;
    ;
    NE0EM101.NE0EM-101-DTL-XQA-QUAL-CD[NE0EW-02-SUB] = NE0EW-01-XQA-QUAL-CD[NE0EW-02-SUB];
    ;
    NE0EM101.NE0EM-101-DTL-XUMCD[NE0EW-02-SUB] = NE0EW-01-XUM-UOM-CD[NE0EW-02-SUB];
    ;
    NE0EM101.NE0EM-101-DTL-NE-ACR-TYP-CD[NE0EW-02-SUB] = NE0EW-01-NE-ACR-TYP-CD[NE0EW-02-SUB];
    ;
    NE0EM101.NE0EM-101-DTL-NE-STAT-CD[NE0EW-02-SUB] = NE0EW-01-NE-STAT-CD[NE0EW-02-SUB];
    ;
    NE0EM101.NE0EM-101-DTL-PC-PO-NBR[NE0EW-02-SUB] = NE0EW-01-PC-PO-NBR[NE0EW-02-SUB];
    ;
        /* format order number*/
    ;
    NE0EW-OP-CUST-ORD-ID = NE0EW-01-OP-CUST-ORD-ID[NE0EW-02-SUB];
    NE0EW-OP-NIKE-ORD-ID = NE0EW-01-OP-NIKE-ORD-ID[NE0EW-02-SUB];
    NE0EM101.NE0EM-101-DTL-OP-CUST-NIKE-ORD[NE0EW-02-SUB] = NE0EW-ORDER-NBR;
    ;
    NE0EM101.NE0EM-101-DTL-NE-ACR-UNT[NE0EW-02-SUB] = NE0EW-01-NE-ACR-UNT[NE0EW-02-SUB];
    ;
    NE0EM101.NE0EM-101-DTL-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB] = NE0EW-01-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB];
    ;
    NE0EW-02-SUB = NE0EW-02-SUB + 1;
    ;
  end
  ;
  NE0EM101.NE0EM-FM-PAGE = NE0EW-CURR-PAGE-NBR;
  NE0EM101.NE0EM-TO-PAGE = NE0EW-HIGH-PAGE-NBR;
  if (NE0EM101.NE0EM-TO-PAGE == 0)
    NE0EM101.NE0EM-TO-PAGE = 1; /* show to page on map*/
  end
  ;
  NE0ES-MAP101-MODE();
  ;
end // end NE0ES-BUILD-MAP101

// Build map from temp storage
Function NE0ES-BUILD-MAP102()
   /* *****************************************************/
   /* Build map from temp storage*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-BUILD-MAP102";
  ;
  if (NE0EW-CURR-PAGE-NBR == NE0EW-MAP-PAGE-NBR)
  /* continue*/
  else
    move NE0EW-MAP-PAGE-NBR to NE0EW-CURR-PAGE-NBR withV60Compat;
  end
  ;
  set NE0EW01 empty;
  ;
  if (NE0EW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0EW-CURR-PAGE-NBR <= NE0EW-HIGH-PAGE-NBR)
    NE0ES-GET-TMP-STG(); /* Get current page*/
  end
  ;
  NE0EW-02-SUB = 1;
  while (NE0EW-02-SUB <= 14) /* 14 rows per screen*/
    ;
    NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] = NE0EW-01-SEL[NE0EW-02-SUB];
    ;
    NE0EM102.NE0EM-102-DTL-CU-CO-ID[NE0EW-02-SUB] = NE0EW-01-CU-CO-ID[NE0EW-02-SUB];
    ;
        /* format style*/
    ;
    if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] == " ")
      NE0EW-STYLE = " ";
    else
      NE0EW-SY-STY-NBR = NE0EW-01-SY-STY-NBR[NE0EW-02-SUB];
      NE0EW-HYPHEN-1 = "-";
      NE0EW-SY-COLR-CD-ID = NE0EW-01-SY-COLR-CD-ID[NE0EW-02-SUB];
      NE0EW-HYPHEN-2 = "-";
      NE0EW-XDM-DIM-CD = NE0EW-01-XDM-DIM-CD[NE0EW-02-SUB];
    end
    NE0EM102.NE0EM-102-DTL-STY-CLR-DIM[NE0EW-02-SUB] = NE0EW-STYLE;
    ;
    NE0EM102.NE0EM-102-DTL-NE-CST-SRC-ID[NE0EW-02-SUB] = NE0EW-01-NE-CST-SRC-ID[NE0EW-02-SUB];
    ;
    NE0EM102.NE0EM-102-DTL-NE-SRC-IVC-ID[NE0EW-02-SUB] = NE0EW-01-NE-SRC-IVC-ID[NE0EW-02-SUB];
    ;
    NE0EM102.NE0EM-102-DTL-NL-IVC-ID[NE0EW-02-SUB] = NE0EW-01-NL-IVC-ID[NE0EW-02-SUB];
    ;
    NE0EM102.NE0EM-102-DTL-NE-ACR-GL-POST-MO[NE0EW-02-SUB] = NE0EW-01-NE-ACR-GL-POST-MO[NE0EW-02-SUB];
    ;
    NE0EM102.NE0EM-102-DTL-ZPS-PROD-SRC-CD[NE0EW-02-SUB] = NE0EW-01-ZPS-PROD-SRC-CD[NE0EW-02-SUB];
    ;
    NE0EW-02-SUB = NE0EW-02-SUB + 1;
    ;
  end
  ;
  NE0EM102.NE0EM-FM-PAGE = NE0EW-CURR-PAGE-NBR;
  NE0EM102.NE0EM-TO-PAGE = NE0EW-HIGH-PAGE-NBR;
  if (NE0EM102.NE0EM-TO-PAGE == 0)
    NE0EM101.NE0EM-TO-PAGE = 1; /* show to page on map*/
  end
  ;
  NE0ES-MAP102-MODE();
  ;
end // end NE0ES-BUILD-MAP102

// Build map from temp storage
Function NE0ES-BUILD-MAP103()
   /* *****************************************************/
   /* Build map from temp storage for Map 103*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-BUILD-MAP103";
  ;
  if (NE0EW-CURR-PAGE-NBR == NE0EW-MAP-PAGE-NBR)
  /* continue*/
  else
    move NE0EW-MAP-PAGE-NBR to NE0EW-CURR-PAGE-NBR withV60Compat;
  end
  ;
  set NE0EW01 empty;
  ;
  if (NE0EW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0EW-CURR-PAGE-NBR <= NE0EW-HIGH-PAGE-NBR)
    NE0ES-GET-TMP-STG(); /* Get current page*/
  end
  ;
  NE0EW-02-SUB = 1;
  while (NE0EW-02-SUB <= 14) /* 14 rows per screen*/
    ;
    NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] = NE0EW-01-SEL[NE0EW-02-SUB]; /* ne0em-103-select*/
    ;
    NE0EM103.NE0EM-103-DTL-CU-CO-ID[NE0EW-02-SUB] = NE0EW-01-CU-CO-ID[NE0EW-02-SUB];
    ;
    NE0EM103.NE0EM-103-DTL-XGP-GPC-CD[NE0EW-02-SUB] = NE0EW-01-XGP-GPC-CD[NE0EW-02-SUB];
    ;
        /* format style*/
    ;
    if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] == " ")
      NE0EW-STYLE = " ";
    else
      NE0EW-SY-STY-NBR = NE0EW-01-SY-STY-NBR[NE0EW-02-SUB];
      NE0EW-HYPHEN-1 = "-";
      NE0EW-SY-COLR-CD-ID = NE0EW-01-SY-COLR-CD-ID[NE0EW-02-SUB];
      NE0EW-HYPHEN-2 = "-";
      NE0EW-XDM-DIM-CD = NE0EW-01-XDM-DIM-CD[NE0EW-02-SUB];
    end
    NE0EM103.NE0EM-103-DTL-STY-CLR-DIM[NE0EW-02-SUB] = NE0EW-STYLE;
    ;
         /* format G/L code*/
    ;
    if (NE0EW-01-GL-ENTITY-CD[NE0EW-02-SUB] == " ") /* blank row*/
      NE0EW-GL-CODE = " ";
    else
      NE0EW-GL-ENTITY-CD = NE0EW-01-GL-ENTITY-CD[NE0EW-02-SUB];
      NE0EW-GL-RSP-CTR-ID = NE0EW-01-GL-RSP-CTR-ID[NE0EW-02-SUB];
      NE0EW-GL-NATRL-ACCT-ID = NE0EW-01-GL-NATRL-ACCT-ID[NE0EW-02-SUB];
      NE0EW-GL-SUB-ACCT-ID = NE0EW-01-GL-SUB-ACCT-ID[NE0EW-02-SUB];
      NE0EW-GL-PROJ-ID = NE0EW-01-GL-PROJ-ID[NE0EW-02-SUB];
    end
    NE0EM103.NE0EM-103-DTL-GL-CODE[NE0EW-02-SUB] = NE0EW-GL-CODE;
    ;
    NE0EW-02-SUB = NE0EW-02-SUB + 1;
    ;
  end
  ;
  NE0EM103.NE0EM-FM-PAGE = NE0EW-CURR-PAGE-NBR;
  NE0EM103.NE0EM-TO-PAGE = NE0EW-HIGH-PAGE-NBR;
  if (NE0EM103.NE0EM-TO-PAGE == 0)
    NE0EM101.NE0EM-TO-PAGE = 1; /* show to page on map*/
  end
  ;
  NE0ES-MAP103-MODE();
  ;
end // end NE0ES-BUILD-MAP103

// BUILD TEMP STRG FROM VNEacr01
Function NE0ES-BUILD-TEMP()
  /* ******************************************************************/
  /* This statement group build temp storage from the VNEacr01 table.*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-BUILD-TEMP";
  ;
  NE0EW-02-SUB = 0; /* ne0eW01 AND MAP DETAIL INDEX*/
  set NE0EW01 empty;
  ;
   /* **************************************/
   /* Build VNEacr01 cursor key*/
   /* **************************************/
  ;
  set VNEACR01 empty;
  ;
  if (NEWREC.NEW-KUCCOID == 0)
    VNEACR01.KUCCOID = -1;
  else
    VNEACR01.KUCCOID = NEWREC.NEW-KUCCOID;
  end
  ;
  if (NEWREC.NEW-CUST-ORDID == 0)
    VNEACR01.OP1CUOID = -1;
  else
    VNEACR01.OP1CUOID = NEWREC.NEW-CUST-ORDID;
  end
  ;
  if (NEWREC.NEW-NIKE-ORDID == 0)
    VNEACR01.OP1NORID = -1;
  else
    VNEACR01.OP1NORID = NEWREC.NEW-NIKE-ORDID;
  end
  ;
  if (NEWREC.NEW-XGPCD == " ")
    VNEACR01.XGPCD = "*";
  else
    VNEACR01.XGPCD = NEWREC.NEW-XGPCD;
  end
  ;
  if (NEWREC.NEW-STYLE-CD == " ")
    VNEACR01.SY1STNBR = "*";
  else
    VNEACR01.SY1STNBR = NEWREC.NEW-STYLE-CD;
  end
  ;
  if (NEWREC.NEW-COLOR-CD == " ")
    VNEACR01.SY2CLRID = "*";
  else
    VNEACR01.SY2CLRID = NEWREC.NEW-COLOR-CD;
  end
  ;
  if (NEWREC.NEW-DIM-CD == " ")
    VNEACR01.XDMCD = "*";
  else
    VNEACR01.XDMCD = NEWREC.NEW-DIM-CD;
  end
  ;
  if (NEWREC.NEW-QUALITY-CD == " ")
    VNEACR01.XQACD = "*";
  else
    VNEACR01.XQACD = NEWREC.NEW-QUALITY-CD;
  end
  ;
  NE0ES-S1-VNEACR01(); /* Open INVENTORY cursor*/
  ;
   /* **************************************/
   /* Move Inv items to temp storage*/
   /* **************************************/
  ;
  NE0ES-N1-VNEACR01(); /* Priming Fetch (first item)*/
  ;
  if (SQLCA.VAGen_SQLCODE == 100) /* no items found*/
    NE0ES-C1-VNEACR01(); /* Close P.O. item cursor*/
    converseLib.validationFailed(105);
    NLXREC.NLXERRF = "Y";
    return;
  end
  ;
  while (SQLCA.VAGen_SQLCODE == 0)
    NE0ES-LOAD-TEMP(); /* Load item to temp storage*/
    NE0ES-N1-VNEACR01(); /* Fetch next item*/
  end
  ;
  NE0ES-C1-VNEACR01(); /* Close P.O. item cursor*/
  ;
  if (NE0EW-02-SUB > 0)
    NE0ES-ADD-TMP-STG(); /* Add last page.*/
  end
  ;
  ;
end // end NE0ES-BUILD-TEMP

// Close C1 on VNEacr01
Function NE0ES-C1-VNEACR01()
   /* *****************************************************/
   /* Close cursor C1 on vneacr01*/
   /* *****************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-C1-VNEACR01";
  ;
   /* close cursor on - vneacr01*/
  ;
  call "IO6940" ("C1", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "C1    ";
    TA1REC.TA1LOCAT[3] = "IO6940";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEACR01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0ES-C1-VNEACR01

// update vneinv01 with wo
Function NE0ES-CHG-STAT-WO()
  /* ******************************************************************/
  /* This statement group is used to format the the vneacr01 in order*/
  /* to UPDATE a vneacr01 record with a ne-stat-cd of of 'WO'.*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-CHG-STAT-WO";
  ;
  set VNEACR01 empty;
  ;
   /* *****************************************/
   /* get current date and time for zz family*/
   /* *****************************************/
  ;
  XX0XS01();
  ;
  VNEACR01.ZZZSDT = NE0EW-01-ZZ-SDT[NE0EW-02-SUB];
  ;
  VNEACR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEACR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
   /* *******************/
   /* FORMAT POST MONTH*/
   /* *******************/
  NE0EW-02-WS-FORMAT-CC = XX0XW01.XX0XW19;
  NE0EW-02-WS-FORMAT-YY = XX0XW01.XX0XWYY;
  NE0EW-02-WS-FORMAT-MM = XX0XW01.XX0XWMM;
  ;
  VNEACR01.KUCCOID = NE0EW-01-CU-CO-ID[NE0EW-02-SUB];
  VNEACR01.OP1CUOID = NE0EW-01-OP-CUST-ORD-ID[NE0EW-02-SUB];
  VNEACR01.OP1NORID = NE0EW-01-OP-NIKE-ORD-ID[NE0EW-02-SUB];
  VNEACR01.NE-ACR-TYP-CD = NE0EW-01-NE-ACR-TYP-CD[NE0EW-02-SUB];
  VNEACR01.NE-SRC-IVC-ID = NE0EW-01-NE-SRC-IVC-ID[NE0EW-02-SUB];
  VNEACR01.NE-CST-SRC-ID = NE0EW-01-NE-CST-SRC-ID[NE0EW-02-SUB];
  VNEACR01.XGPCD = NE0EW-01-XGP-GPC-CD[NE0EW-02-SUB];
  VNEACR01.SY1STNBR = NE0EW-01-SY-STY-NBR[NE0EW-02-SUB];
  VNEACR01.SY2CLRID = NE0EW-01-SY-COLR-CD-ID[NE0EW-02-SUB];
  VNEACR01.XDMCD = NE0EW-01-XDM-DIM-CD[NE0EW-02-SUB];
  VNEACR01.XQACD = NE0EW-01-XQA-QUAL-CD[NE0EW-02-SUB];
  VNEACR01.NIDIVCID = NE0EW-01-NL-IVC-ID[NE0EW-02-SUB];
  VNEACR01.KUMSTRID = NE0EW-01-CU-STOR-ID[NE0EW-02-SUB];
  VNEACR01.PC2CUXID = NE0EW-01-PC-PRDCU-ID[NE0EW-02-SUB];
  VNEACR01.OP1PARTN = NE0EW-01-OP-ORD-PART-CHAR[NE0EW-02-SUB];
  VNEACR01.PC3PONBR = NE0EW-01-PC-PO-NBR[NE0EW-02-SUB];
  VNEACR01.NE-STAT-CD = "WO";
  VNEACR01.NE-ACR-UNT = NE0EW-01-NE-ACR-UNT[NE0EW-02-SUB];
  VNEACR01.XUMCD = NE0EW-01-XUM-UOM-CD[NE0EW-02-SUB];
  VNEACR01.NE-ACR-UNT-PRC-CST = NE0EW-01-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB];
  VNEACR01.NE-ACTL-UNT-PRCCST = NE0EW-01-NE-ACTL-UNT-PRCCST[NE0EW-02-SUB];
  VNEACR01.GLAENT = NE0EW-01-GL-ENTITY-CD[NE0EW-02-SUB];
  VNEACR01.GLARCID = NE0EW-01-GL-RSP-CTR-ID[NE0EW-02-SUB];
  VNEACR01.GLANTAC = NE0EW-01-GL-NATRL-ACCT-ID[NE0EW-02-SUB];
  VNEACR01.GLASUB = NE0EW-01-GL-SUB-ACCT-ID[NE0EW-02-SUB];
  VNEACR01.GLAPRJ = NE0EW-01-GL-PROJ-ID[NE0EW-02-SUB];
  VNEACR01.NE-ACR-GL-POST-MO = NE0EW-01-NE-ACR-GL-POST-MO[NE0EW-02-SUB];
  VNEACR01.XWHCD = NE0EW-01-XWHCD[NE0EW-02-SUB];
  VNEACR01.TSFSHPID = NE0EW-01-TSFSHPID[NE0EW-02-SUB];
  VNEACR01.NL-PMT-MTHD-CD = NE0EW-01-NL-PMT-MTHD-CD[NE0EW-02-SUB];
  VNEACR01.ZPSCD = NE0EW-01-ZPS-PROD-SRC-CD[NE0EW-02-SUB];
  VNEACR01.ZZZCHGCT = NE0EW-01-ZZ-CHNG-CNT[NE0EW-02-SUB];
  ;
  NE0ES-U-VNEACR01();
  ;
  NE0ES-BLD-VNESCO01();
  ;
end // end NE0ES-CHG-STAT-WO

// Edit the page number
Function NE0ES-CK-PAGE-NBR()
  /* ******************************************************************/
  /* This edit test the changing of the from page number to cause*/
  /* paging to a specific page.  this will only be done if enter was*/
  /* pressed*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-CK-PAGE-NBR";
  if (NE0EW-MAP-PAGE-NBR > NE0EW-HIGH-PAGE-NBR
   || NE0EW-MAP-PAGE-NBR == 0)
    converseLib.validationFailed(21);
    NLXREC.NLXERRF = "Y";
  else
    if (converseVar.eventKey is enter
     || converseVar.eventKey is pf10
     || converseVar.eventKey is pf11)
  /* continue*/
    else
      if (NE0EW-MAP-PAGE-NBR != NE0EW-CURR-PAGE-NBR)
        converseLib.validationFailed(93);
        NLXREC.NLXERRF = "Y";
      end
    end
  end
  ;
end // end NE0ES-CK-PAGE-NBR

// PURGE TEMP STORAGE
Function NE0ES-DEL-TMP-STG()
   /* ***********************************************************************/
   /* PURGE temp storage*/
   /*  */
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-DEL-TMP-STG";
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "P"; /* Function code*/
  ;
  try
    call "TA0050" (NE0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    return; /* Return to previous process*/
  end
  ;
   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
  ;
  converseLib.validationFailed(23); /* Indicate system error*/
  ;
  XPNL-006(); /* abend routine*/
  ;
  ;
end // end NE0ES-DEL-TMP-STG

// Get temp storage
Function NE0ES-GET-TMP-STG()
   /* ***********************************************************************/
   /*  */
   /* Get temp storage for current page*/
   /*  */
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-GET-TMP-STG";
  TA1REC.TA1LOC = "NE0ES-GET-TMP-STG";
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  move NE0EW-02-SIZE to NE0EW-01-LENGTH withV60Compat;
  TA5REC.TA5TSQIX = NE0EW-CURR-PAGE-NBR; /* Page number to fetch*/
  ;
  TA5REC.TA5FNCCD = "R"; /* Function code*/
  ;
  try
    call "TA0050" (NE0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  else
    ;
   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
    ;
    converseLib.validationFailed(23); /* Indicate system error*/
    ;
    XPNL-006(); /* abend routine*/
    ;
  end
  ;
end // end NE0ES-GET-TMP-STG

// Build temp storage from vneacr
Function NE0ES-LOAD-TEMP()
   /* *************************************************************/
   /* Build temp storage*/
   /*  */
   /* As items are fetched, they are moved to working storage*/
   /* ne0eW01 and then loaded into temp storage.*/
   /*  */
   /* *************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-LOAD-TEMP";
  ;
  NE0EW-02-SUB = NE0EW-02-SUB + 1; /* M101 display storage*/
  ;
  NE0EW-01-SEL[NE0EW-02-SUB] = " "; /* select*/
  ;
  NE0EW-01-CU-CO-ID[NE0EW-02-SUB] = VNEACR01.KUCCOID;
  ;
  NE0EW-01-OP-CUST-ORD-ID[NE0EW-02-SUB] = VNEACR01.OP1CUOID;
  ;
  NE0EW-01-OP-NIKE-ORD-ID[NE0EW-02-SUB] = VNEACR01.OP1NORID;
  ;
  NE0EW-01-NE-ACR-TYP-CD[NE0EW-02-SUB] = VNEACR01.NE-ACR-TYP-CD;
  ;
  NE0EW-01-NE-SRC-IVC-ID[NE0EW-02-SUB] = VNEACR01.NE-SRC-IVC-ID;
  ;
  NE0EW-01-NE-CST-SRC-ID[NE0EW-02-SUB] = VNEACR01.NE-CST-SRC-ID;
  ;
  NE0EW-01-XGP-GPC-CD[NE0EW-02-SUB] = VNEACR01.XGPCD;
  ;
  NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] = VNEACR01.SY1STNBR;
  ;
  NE0EW-01-SY-COLR-CD-ID[NE0EW-02-SUB] = VNEACR01.SY2CLRID;
  ;
  NE0EW-01-XDM-DIM-CD[NE0EW-02-SUB] = VNEACR01.XDMCD;
  ;
  NE0EW-01-XQA-QUAL-CD[NE0EW-02-SUB] = VNEACR01.XQACD;
  ;
  NE0EW-01-NL-IVC-ID[NE0EW-02-SUB] = VNEACR01.NIDIVCID;
  ;
  NE0EW-01-CU-STOR-ID[NE0EW-02-SUB] = VNEACR01.KUMSTRID;
  ;
  NE0EW-01-PC-PRDCU-ID[NE0EW-02-SUB] = VNEACR01.PC2CUXID;
  ;
  NE0EW-01-OP-ORD-PART-CHAR[NE0EW-02-SUB] = VNEACR01.OP1PARTN;
  ;
  NE0EW-01-PC-PO-NBR[NE0EW-02-SUB] = VNEACR01.PC3PONBR;
  ;
  NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] = VNEACR01.NE-STAT-CD;
  ;
  NE0EW-01-NE-ACR-UNT[NE0EW-02-SUB] = VNEACR01.NE-ACR-UNT;
  ;
  NE0EW-01-XUM-UOM-CD[NE0EW-02-SUB] = VNEACR01.XUMCD;
  ;
  NE0EW-01-NE-ACR-UNT-PRC-CST[NE0EW-02-SUB] = VNEACR01.NE-ACR-UNT-PRC-CST;
  ;
  NE0EW-01-NE-ACTL-UNT-PRCCST[NE0EW-02-SUB] = VNEACR01.NE-ACTL-UNT-PRCCST;
  ;
  NE0EW-01-GL-ENTITY-CD[NE0EW-02-SUB] = VNEACR01.GLAENT;
  ;
  NE0EW-01-GL-RSP-CTR-ID[NE0EW-02-SUB] = VNEACR01.GLARCID;
  ;
  NE0EW-01-GL-NATRL-ACCT-ID[NE0EW-02-SUB] = VNEACR01.GLANTAC;
  ;
  NE0EW-01-GL-SUB-ACCT-ID[NE0EW-02-SUB] = VNEACR01.GLASUB;
  ;
  NE0EW-01-GL-PROJ-ID[NE0EW-02-SUB] = VNEACR01.GLAPRJ;
  ;
  NE0EW-01-XWHCD[NE0EW-02-SUB] = VNEACR01.XWHCD;
  ;
  NE0EW-01-NL-PMT-MTHD-CD[NE0EW-02-SUB] = VNEACR01.NL-PMT-MTHD-CD;
  ;
  NE0EW-01-TSFSHPID[NE0EW-02-SUB] = VNEACR01.TSFSHPID;
  ;
  NE0EW-01-NE-ACR-GL-POST-MO[NE0EW-02-SUB] = VNEACR01.NE-ACR-GL-POST-MO;
  ;
  NE0EW-01-ZPS-PROD-SRC-CD[NE0EW-02-SUB] = VNEACR01.ZPSCD;
  ;
  NE0EW-01-ZZ-SDT[NE0EW-02-SUB] = VNEACR01.ZZZSDT;
  ;
  NE0EW-01-ZZ-CHNG-DT[NE0EW-02-SUB] = VNEACR01.ZZZCHGDT;
  ;
  NE0EW-01-ZZ-CHNG-HHMM[NE0EW-02-SUB] = VNEACR01.ZZZCHGTM;
  ;
  NE0EW-01-ZZ-CHNG-CNT[NE0EW-02-SUB] = VNEACR01.ZZZCHGCT;
  ;
  if (NE0EW-02-SUB == 14) /* 14 rows per screen*/
    NE0ES-ADD-TMP-STG();
    set NE0EW01 empty;
    NE0EW-02-SUB = 0;
  end
  ;
  ;
end // end NE0ES-LOAD-TEMP

// Set map to inquiry mode
Function NE0ES-MAP101-MODE()
  /* ************************************************************************/
  /* Set map to an inquiry mode*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP101-MODE";
  NE0EW-02-SUB = 14;
  set NE0EM101.NE0EM-FM-PAGE cursor;
  ;
  /* ************************************************************************/
  /* Level 4 only ones allowed to select or make changes.*/
  /* ************************************************************************/
  ;
   /* IF COMMAREA.CACLVL(4) EQ 'Y';    /* if level four = y*/
  while (NE0EW-02-SUB > 0)
    if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] > " ")
      if (NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "AC"
       || NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "RC")
        set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] cursor, initialAttributes;
      else
        set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] skip, invisible;
      end
    else
      set NE0EM101.NE0EM-101-DTL-SEL[NE0EW-02-SUB] skip, invisible;
    end
    NE0EW-02-SUB = NE0EW-02-SUB - 1;
  end
   /* EZERTN;*/
   /* ELSE;*/
   /* WHILE NE0EW-02-SUB LE 14;*/
   /* SET NE0EM101.NE0EM-101-DTL-SEL(NE0EW-02-SUB) AUTOSKIP,DARK;*/
   /* IF NE0EW-01-SY-STY-NBR(NE0EW-02-SUB) = ' ';*/
   /* SET NE0EM101.NE0EM-101-DTL-STY-CLR-DIM(NE0EW-02-SUB) AUTOSKIP,*/
   /* DARK;*/
   /* END;*/
   /* NE0EW-02-SUB = NE0EW-02-SUB + 1;*/
   /* END;*/
   /* EZERTN;*/
   /* END;*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* MOVE 17 TO EZEMNO;               /* user to authorized*/
  ;
  ;
end // end NE0ES-MAP101-MODE

// Page BACKWARD logic
Function NE0ES-MAP101-PF7()
   /* ***********************************************************************/
   /* Page BACKWARD logic*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP101-PF7";
  ;
  if (NE0EW-MAP-PAGE-NBR == 1)
    converseLib.validationFailed(20);
    return;
  else
    NE0EW-MAP-PAGE-NBR = NE0EW-MAP-PAGE-NBR - 1;
  end
  set NE0EW01 empty;
  NE0ES-BUILD-MAP101();
   /* ET NE0EM101.NE0EM-101-DTL-SEL(1) CURSOR;/* set cursor to first row*/
  ;
  ;
end // end NE0ES-MAP101-PF7

// Page forward logic
Function NE0ES-MAP101-PF8()
   /* *********************/
   /* Page forward logic*/
   /* *********************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP101-PF8";
  ;
  if (NE0EW-MAP-PAGE-NBR >= NE0EW-HIGH-PAGE-NBR)
    converseLib.validationFailed(19);
    return;
  end
  set NE0EW01 empty;
  NE0EW-MAP-PAGE-NBR = NE0EW-MAP-PAGE-NBR + 1;
  NE0ES-BUILD-MAP101();
   /* SET NE0EM101.NE0EM-101-DTL-SEL(1) CURSOR;*/
  ;
  ;
end // end NE0ES-MAP101-PF8

// Set map to inquiry mode
Function NE0ES-MAP102-MODE()
  /* ************************************************************************/
  /* Set map to an inquiry mode*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP102-MODE";
  NE0EW-02-SUB = 14;
  set NE0EM102.NE0EM-FM-PAGE cursor;
  ;
  /* ************************************************************************/
  /* Level 4 only ones allowed to select or make changes.*/
  /* ************************************************************************/
  ;
   /* IF COMMAREA.CACLVL(4) EQ 'Y';    /* if level four = y*/
  while (NE0EW-02-SUB > 0)
    if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] > " ")
      if (NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "AC"
       || NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "RC")
        set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] cursor, initialAttributes;
      else
        set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] skip, invisible;
      end
    else
      set NE0EM102.NE0EM-102-DTL-SEL[NE0EW-02-SUB] skip, invisible;
    end
    NE0EW-02-SUB = NE0EW-02-SUB - 1;
  end
   /* EZERTN;*/
   /* ELSE;*/
   /* WHILE NE0EW-02-SUB LE 14;*/
   /* SET NE0EM102.NE0EM-102-DTL-SEL(NE0EW-02-SUB) AUTOSKIP,DARK;*/
   /* NE0EW-02-SUB = NE0EW-02-SUB + 1;*/
   /* END;*/
   /* EZERTN;*/
   /* END;*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* MOVE 17 TO EZEMNO;               /* user to authorized*/
  ;
  ;
end // end NE0ES-MAP102-MODE

// Page BACKWARD logic
Function NE0ES-MAP102-PF7()
   /* ***********************************************************************/
   /* Page BACKWARD logic*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP102-PF7";
  ;
  if (NE0EW-MAP-PAGE-NBR == 1)
    converseLib.validationFailed(20);
    return;
  else
    NE0EW-MAP-PAGE-NBR = NE0EW-MAP-PAGE-NBR - 1;
  end
  set NE0EW01 empty;
  NE0ES-BUILD-MAP102();
   /* ET NE0EM102.NE0EM-102-DTL-SEL(1) CURSOR;*/
  ;
  ;
end // end NE0ES-MAP102-PF7

// Page forward logic
Function NE0ES-MAP102-PF8()
   /* *********************/
   /* Page forward logic*/
   /* *********************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP102-PF8";
  ;
  if (NE0EW-MAP-PAGE-NBR >= NE0EW-HIGH-PAGE-NBR)
    converseLib.validationFailed(19);
    return;
  end
  set NE0EW01 empty;
  NE0EW-MAP-PAGE-NBR = NE0EW-MAP-PAGE-NBR + 1;
  NE0ES-BUILD-MAP102();
   /* ET NE0EM102.NE0EM-102-DTL-SEL(1) CURSOR;*/
  ;
  ;
end // end NE0ES-MAP102-PF8

Function NE0ES-MAP103-MODE()
  /* ************************************************************************/
  /* Set map to an inquiry mode*/
  /* ************************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP103-MODE";
  NE0EW-02-SUB = 14;
  set NE0EM103.NE0EM-FM-PAGE cursor;
  ;
  /* ************************************************************************/
  /* Level 4 only ones allowed to select or make changes.*/
  /* ************************************************************************/
  ;
   /* IF COMMAREA.CACLVL(4) EQ 'Y';    /* if level four = y*/
  while (NE0EW-02-SUB > 0)
    if (NE0EW-01-SY-STY-NBR[NE0EW-02-SUB] > " ")
      if (NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "AC"
       || NE0EW-01-NE-STAT-CD[NE0EW-02-SUB] == "RC")
        set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] cursor, initialAttributes;
      else
        set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] skip, invisible;
      end
    else
      set NE0EM103.NE0EM-103-DTL-SEL[NE0EW-02-SUB] skip, invisible;
    end
    NE0EW-02-SUB = NE0EW-02-SUB - 1;
  end
   /* EZERTN;*/
   /* ELSE;*/
   /* WHILE NE0EW-02-SUB LE 14;*/
   /* SET NE0EM103.NE0EM-103-DTL-SEL(NE0EW-02-SUB) AUTOSKIP,DARK;*/
   /* NE0EW-02-SUB = NE0EW-02-SUB + 1;*/
   /* END;*/
   /* EZERTN;*/
   /* END;*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* MOVE 17 TO EZEMNO;               /* user to authorized*/
  ;
  ;
end // end NE0ES-MAP103-MODE

Function NE0ES-MAP103-PF7()
   /* ***********************************************************************/
   /* Page BACKWARD logic*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP103-PF7";
  ;
  if (NE0EW-MAP-PAGE-NBR == 1)
    converseLib.validationFailed(20);
    return;
  else
    NE0EW-MAP-PAGE-NBR = NE0EW-MAP-PAGE-NBR - 1;
  end
  set NE0EW01 empty;
  NE0ES-BUILD-MAP103();
   /* ET NE0EM102.NE0EM-103-DTL-SEL(1) CURSOR;*/
  ;
  ;
end // end NE0ES-MAP103-PF7

Function NE0ES-MAP103-PF8()
   /* *********************/
   /* Page forward logic*/
   /* *********************/
  ;
  NLXREC.NLXCPROC = "NE0ES-MAP103-PF8";
  ;
  if (NE0EW-MAP-PAGE-NBR >= NE0EW-HIGH-PAGE-NBR)
    converseLib.validationFailed(19);
    return;
  end
  set NE0EW01 empty;
  NE0EW-MAP-PAGE-NBR = NE0EW-MAP-PAGE-NBR + 1;
  NE0ES-BUILD-MAP103();
   /* ET NE0EM102.NE0EM-103-DTL-SEL(1) CURSOR;*/
  ;
  ;
end // end NE0ES-MAP103-PF8

// Fetch next Vneacr01 item
Function NE0ES-N1-VNEACR01()
   /* *****************************************************/
   /* Fetch next VNEacr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0ES-N1-VNEACR01";
  ;
   /* fetch cursor on - VNEacr01*/
  ;
  call "IO6940" ("N1", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "N1    ";
    TA1REC.TA1LOCAT[3] = "IO6940";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEACR01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0ES-N1-VNEACR01

// Open cursor on Vneacr01
Function NE0ES-S1-VNEACR01()
   /* *****************************************************/
   /* Open cursor on VNEacr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0ES-S1-VNEACR01";
  ;
   /* open cursor on - vneacr01*/
  ;
  call "IO6940" ("S1", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S1    ";
    TA1REC.TA1LOCAT[3] = "IO6940";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEACR01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0ES-S1-VNEACR01

// Update row on Vneacr01
Function NE0ES-U-VNEACR01()
   /* *****************************************************/
   /* Open cursor on vneacr01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0ES-U-VNEACR01";
  ;
   /* open cursor on - vneacr01*/
  ;
  call "IO6940" ("U ", SQLCA, VNEACR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "U     ";
    TA1REC.TA1LOCAT[3] = "IO6970";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEACR01";
    ;
    NE0EW-02-ABEND-KEY = " ";
    ;
    NE0EW-02-ABEND-CUST = VNEACR01.KUCCOID;
    NE0EW-02-ABEND-FILLER-ORD = "ORD";
    NE0EW-02-ABEND-OP1CUOID = VNEACR01.OP1CUOID;
    NE0EW-02-ABEND-OP1NORID = VNEACR01.OP1NORID;
    NE0EW-02-ABEND-FILLER-STY = "STY";
    NE0EW-02-ABEND-SY1STNBR = VNEACR01.SY1STNBR;
    NE0EW-02-ABEND-HYPEN-1 = "-";
    NE0EW-02-ABEND-SY2CLRID = VNEACR01.SY2CLRID;
    NE0EW-02-ABEND-HYPHEN-2 = "-";
    NE0EW-02-ABEND-XDMCD = VNEACR01.XDMCD;
    ;
    move NE0EW-02-ABEND-KEY to TA1TBLKE withV60Compat;
    ;
    XPNL005(); /* abort routine*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
  end
  ;
end // end NE0ES-U-VNEACR01

// Update temp storage
Function NE0ES-UPDT-TMP-STG()
   /* ***********************************************************************/
   /* Update temp storage*/
   /* ***********************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-UPTD-TMP-STG";
  TA1REC.TA1LOC = "NE0ES-UPTD-TMP-STG";
  TA5REC.TA5TSQIX = NE0EW-CURR-PAGE-NBR;
  move NE0EW-02-SIZE to NE0EW-01-LENGTH withV60Compat;
  ;
  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  ;
  TA5REC.TA5FNCCD = "U"; /* Function code*/
  ;
  try
    call "TA0050" (NE0EW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/
  ;
   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/
  ;
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    ;
    return; /* Return to previous process*/
    ;
  else
    ;
   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/
    ;
    converseLib.validationFailed(23); /* Indicate system error*/
    ;
    XPNL-006(); /* abend routine*/
    ;
  end
  ;
end // end NE0ES-UPDT-TMP-STG

// Val tmp for at least one sel
Function NE0ES-VAL-SELECT()
   /* ******************************************************************/
   /* This statement group will process temp storage until it finds*/
   /* one 'S' in the select field, if none are found error           e*/
   /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-VAL-SELECT";
  move NE0EW-CURR-PAGE-NBR to NE0EW-HOLD-PAGE-NBR withV60Compat;
  NE0EW-CURR-PAGE-NBR = 1;
  ;
   /* Process each page in temp storage*/
  ;
  while (NE0EW-CURR-PAGE-NBR <= NE0EW-HIGH-PAGE-NBR)
    NE0ES-GET-TMP-STG();
    NE0EW-02-SUB = 1;
    ;
     /* Process each row in ne0eW02*/
    ;
    while (NE0EW-02-SUB <= 14) /* 14 rows per temp page*/
      ;
      if (NE0EW-01-SEL[NE0EW-02-SUB] == "S")
        /* reset page and get the hell out of Dodge*/
        move NE0EW-HOLD-PAGE-NBR to NE0EW-CURR-PAGE-NBR withV60Compat;
        return;
      end
      ;
      NE0EW-02-SUB = NE0EW-02-SUB + 1; /* fetch next row*/
      ;
    end /* end while on same page*/
    ;
    NE0EW-CURR-PAGE-NBR = NE0EW-CURR-PAGE-NBR + 1;
    ;
  end /* end while more pages*/
  ;
  converseLib.validationFailed(29); /* no items selected*/
  NLXREC.NLXERRF = "Y";
                                  /* reset next page*/
  move NE0EW-HOLD-PAGE-NBR to NE0EW-CURR-PAGE-NBR withV60Compat;
  ;
  ;
end // end NE0ES-VAL-SELECT

// write off selected inventory
Function NE0ES-WRITE-OFF()
  /* ******************************************************************/
  /* This statement group is used to write off inventory, by updating*/
  /* each selected row with an ne-stat-cd of 'WO'.*/
  /* ******************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0ES-WRITE-OFF";
  ;
  NE0EW-CURR-PAGE-NBR = 1;
  set NE0EW01 empty;
  ;
  while (NE0EW-CURR-PAGE-NBR <= NE0EW-HIGH-PAGE-NBR)
    ;
    NE0ES-GET-TMP-STG();
    ;
    NE0EW-02-SUB = 1;
    ;
      /* process each row of temp storage*/
    ;
    while (NE0EW-02-SUB <= 14 /* 14 rows per temp page*/
    )
      if (NE0EW-01-SEL[NE0EW-02-SUB] == "S") /* row selected*/
        NE0ES-CHG-STAT-WO(); /* change stat to WO*/
        NE0EW-02-WRITE-OFF-COUNT = NE0EW-02-WRITE-OFF-COUNT + 1;
      end /**/
      NE0EW-02-SUB = NE0EW-02-SUB + 1; /* get next row*/
      ;
    end /* 14 rows per temp storage*/
    ;
    NE0EW-CURR-PAGE-NBR = NE0EW-CURR-PAGE-NBR + 1; /* get curr page of temp*/
  end /* end while curr page le high page*/
  ;
  ;
   /* *******************************/
   /* Refresh temp storage*/
   /* *******************************/
  ;
  NE0ES-DEL-TMP-STG(); /* delete temp*/
  ;
  NE0EW-HIGH-PAGE-NBR = 0;
  NE0EW-CURR-PAGE-NBR = 1; /* show page one*/
  NE0EW-MAP-PAGE-NBR = 1;
  ;
  NE0ES-BUILD-TEMP();
  ;
  if (NLXREC.NLXERRF == "Y")
  /* continue*/
  else
    if (NE0EW-02-WRITE-OFF-COUNT > 0)
      NLXREC.NLXERRF = "Y"; /* show message in returning map*/
      NEW-MSG-NBR = 121; /* accruals have been writen off*/
    end /* DID'T USE EZEMNO BECAUSE*/
  end /* IT GETS WIPED OUT ON 050 LOGIC*/
                                  /* SEE 130 LOGIC, PF18 TAKES APPL*/
                                  /* ALL THE WAY BACK TO 050 LOGIC*/
  ;
  ;
end // end NE0ES-WRITE-OFF

//*** RECORD=NE0EW01 ****
// ***********************VNINVD01*****************************
// 
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  ------     ---------------------------------------
// 11-17-93  kshaw      Initial record creation
// ***********************
Record NE0EW01 type basicRecord
  5 NE0EW-01-LENGTH NE0EW-01-LENGTH ; 
  5 NE0EW-01-GROUP NE0EW-01-GROUP ; 
    10 NE0EW-01-SEL NE0EW-01-SEL [14] ; 
    10 NE0EW-01-CU-CO-ID NE0EW-01-CU-CO-ID [14] ; 
    10 NE0EW-01-OP-CUST-ORD-ID NE0EW-01-OP-CUST-ORD-ID [14] ; 
    10 NE0EW-01-OP-NIKE-ORD-ID NE0EW-01-OP-NIKE-ORD-ID [14] ; 
    10 NE0EW-01-NE-ACR-TYP-CD NE0EW-01-NE-ACR-TYP-CD [14] ; 
    10 NE0EW-01-NE-SRC-IVC-ID NE0EW-01-NE-SRC-IVC-ID [14] ; 
    10 NE0EW-01-NE-CST-SRC-ID NE0EW-01-NE-CST-SRC-ID [14] ; 
    10 NE0EW-01-XGP-GPC-CD NE0EW-01-XGP-GPC-CD [14] ; 
    10 NE0EW-01-SY-STY-NBR NE0EW-01-SY-STY-NBR [14] ; 
    10 NE0EW-01-SY-COLR-CD-ID NE0EW-01-SY-COLR-CD-ID [14] ; 
    10 NE0EW-01-XDM-DIM-CD NE0EW-01-XDM-DIM-CD [14] ; 
    10 NE0EW-01-XQA-QUAL-CD NE0EW-01-XQA-QUAL-CD [14] ; 
    10 NE0EW-01-NL-IVC-ID NE0EW-01-NL-IVC-ID [14] ; 
    10 NE0EW-01-CU-STOR-ID NE0EW-01-CU-STOR-ID [14] ; 
    10 NE0EW-01-PC-PRDCU-ID NE0EW-01-PC-PRDCU-ID [14] ; 
    10 NE0EW-01-OP-ORD-PART-CHAR NE0EW-01-OP-ORD-PART-CHAR [14] ; 
    10 NE0EW-01-PC-PO-NBR NE0EW-01-PC-PO-NBR [14] ; 
    10 NE0EW-01-NE-STAT-CD NE0EW-01-NE-STAT-CD [14] ; 
    10 NE0EW-01-NE-ACR-UNT NE0EW-01-NE-ACR-UNT [14] ; 
    10 NE0EW-01-XUM-UOM-CD NE0EW-01-XUM-UOM-CD [14] ; 
    10 NE0EW-01-NE-ACR-UNT-PRC-CST NE0EW-01-NE-ACR-UNT-PRC-CST [14] ; 
    10 NE0EW-01-NE-ACTL-UNT-PRCCST NE0EW-01-NE-ACTL-UNT-PRCCST [14] ; 
    10 NE0EW-01-GL-ENTITY-CD NE0EW-01-GL-ENTITY-CD [14] ; 
    10 NE0EW-01-GL-RSP-CTR-ID NE0EW-01-GL-RSP-CTR-ID [14] ; 
    10 NE0EW-01-GL-NATRL-ACCT-ID NE0EW-01-GL-NATRL-ACCT-ID [14] ; 
    10 NE0EW-01-GL-SUB-ACCT-ID NE0EW-01-GL-SUB-ACCT-ID [14] ; 
    10 NE0EW-01-GL-PROJ-ID NE0EW-01-GL-PROJ-ID [14] ; 
    10 NE0EW-01-NE-ACR-GL-POST-MO NE0EW-01-NE-ACR-GL-POST-MO [14] ; 
    10 NE0EW-01-ZPS-PROD-SRC-CD NE0EW-01-ZPS-PROD-SRC-CD [14] ; 
    10 NE0EW-01-XWHCD NE0EW-01-XWHCD [14] ; 
    10 NE0EW-01-NL-PMT-MTHD-CD NE0EW-01-NL-PMT-MTHD-CD [14] ; 
    10 NE0EW-01-TSFSHPID NE0EW-01-TSFSHPID [14] ; 
    10 NE0EW-01-ZZ-SDT NE0EW-01-ZZ-SDT [14] ; 
    10 NE0EW-01-ZZ-CHNG-DT NE0EW-01-ZZ-CHNG-DT [14] ; 
    10 NE0EW-01-ZZ-CHNG-HHMM NE0EW-01-ZZ-CHNG-HHMM [14] ; 
    10 NE0EW-01-ZZ-CHNG-CNT NE0EW-01-ZZ-CHNG-CNT [14] ; 
end // end NE0EW01

//*** RECORD=NE0EW02 ****
// ********** NE0d APPLICATION WORKING STORAGE RECORD *********
// ***********************
Record NE0EW02 type basicRecord
  5 NE0EW-GROUP char(123) ; // ne0ew01 group item
    10 NE0EW-02-SUB NE0EW-02-SUB ; 
    10 NE0EW-HIGH-PAGE-NBR NE0EW-HIGH-PAGE-NBR ; 
    10 NE0EW-CURR-PAGE-NBR NE0EW-CURR-PAGE-NBR ; 
    10 NE0EW-MAP-PAGE-NBR NE0EW-MAP-PAGE-NBR ; 
    10 NE0EW-HOLD-PAGE-NBR NE0EW-HOLD-PAGE-NBR ; 
    10 NE0EW-02-SIZE NE0EW-02-SIZE ; 
    10 NE0EW-KEY NE0EW-KEY ; 
      15 NE0EW-LRG-NBR NE0EW-LRG-NBR ; 
      15 * char(1) ; 
      15 NE0EW-CHG-KEY NE0EW-CHG-KEY ; 
        20 NE0EW-IND NE0EW-IND ; 
    10 NE0EW-ORDER-NBR NE0EW-ORDER-NBR ; 
      15 NE0EW-OP-CUST-ORD-ID NE0EW-OP-CUST-ORD-ID ; 
      15 NE0EW-OP-NIKE-ORD-ID NE0EW-OP-NIKE-ORD-ID ; 
    10 NE0EW-STYLE NE0EW-STYLE ; 
      15 NE0EW-SY-STY-NBR NE0EW-SY-STY-NBR ; 
      15 NE0EW-HYPHEN-1 NE0EW-HYPHEN-1 ; 
      15 NE0EW-SY-COLR-CD-ID NE0EW-SY-COLR-CD-ID ; 
      15 NE0EW-HYPHEN-2 NE0EW-HYPHEN-2 ; 
      15 NE0EW-XDM-DIM-CD NE0EW-XDM-DIM-CD ; 
    10 NE0EW-GL-CODE NE0EW-GL-CODE ; 
      15 NE0EW-GL-ENTITY-CD NE0EW-GL-ENTITY-CD ; 
      15 NE0EW-GL-RSP-CTR-ID NE0EW-GL-RSP-CTR-ID ; 
      15 NE0EW-GL-NATRL-ACCT-ID NE0EW-GL-NATRL-ACCT-ID ; 
      15 NE0EW-GL-SUB-ACCT-ID NE0EW-GL-SUB-ACCT-ID ; 
      15 NE0EW-GL-PROJ-ID NE0EW-GL-PROJ-ID ; 
    10 NE0EW-02-ABEND-KEY NE0EW-02-ABEND-KEY ; 
      15 NE0EW-02-ABEND-FILLER-CUST NE0EW-02-ABEND-FILLER-CUST ; 
      15 NE0EW-02-ABEND-CUST NE0EW-02-ABEND-CUST ; 
      15 NE0EW-02-ABEND-FILLER-ORD NE0EW-02-ABEND-FILLER-ORD ; 
      15 NE0EW-02-ABEND-ORDER-NBR NE0EW-02-ABEND-ORDER-NBR ; 
        20 NE0EW-02-ABEND-OP1CUOID NE0EW-02-ABEND-OP1CUOID ; 
        20 NE0EW-02-ABEND-OP1NORID NE0EW-02-ABEND-OP1NORID ; 
      15 NE0EW-02-ABEND-FILLER-STY NE0EW-02-ABEND-FILLER-STY ; 
      15 NE0EW-02-ABEND-STYLE NE0EW-02-ABEND-STYLE ; 
        20 NE0EW-02-ABEND-SY1STNBR NE0EW-02-ABEND-SY1STNBR ; 
        20 NE0EW-02-ABEND-HYPEN-1 NE0EW-02-ABEND-HYPEN-1 ; 
        20 NE0EW-02-ABEND-SY2CLRID NE0EW-02-ABEND-SY2CLRID ; 
        20 NE0EW-02-ABEND-HYPHEN-2 NE0EW-02-ABEND-HYPHEN-2 ; 
        20 NE0EW-02-ABEND-XDMCD NE0EW-02-ABEND-XDMCD ; 
    10 NE0EW-02-WRITE-OFF-COUNT NE0EW-02-WRITE-OFF-COUNT ; 
    10 NE0EW-02-WS-FORMAT-CCYYMM NE0EW-02-WS-FORMAT-CCYYMM ; 
    10 NE0EW-02-WS-FORMAT-CC NE0EW-02-WS-FORMAT-CC ; 
    10 NE0EW-02-WS-FORMAT-YY NE0EW-02-WS-FORMAT-YY ; 
    10 NE0EW-02-WS-FORMAT-MM NE0EW-02-WS-FORMAT-MM ; 
end // end NE0EW02

DataItem NE0EW-01-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-CU-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-GL-ENTITY-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-GL-NATRL-ACCT-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-GL-PROJ-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-GL-RSP-CTR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-GL-SUB-ACCT-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-GROUP char(1778)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-NE-ACR-GL-POST-MO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-NE-ACR-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-NE-ACR-UNT decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-NE-ACR-UNT-PRC-CST decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-NE-ACTL-UNT-PRCCST decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-NE-CST-SRC-ID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-NE-SRC-IVC-ID char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-NE-STAT-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-NL-IVC-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PAYMENT METHOD CODE (YPY)
DataItem NE0EW-01-NL-PMT-MTHD-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-OP-CUST-ORD-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-OP-NIKE-ORD-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-PC-PO-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-PC-PRDCU-ID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-SY-COLR-CD-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-SY-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TS_NIKE_SHP_ID
DataItem NE0EW-01-TSFSHPID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-XDM-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-XQA-QUAL-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-XUM-UOM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XWH_WHSE_CD
DataItem NE0EW-01-XWHCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-ZPS-PROD-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-01-ZZ-CHNG-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-ZZ-CHNG-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-ZZ-CHNG-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-01-ZZ-SDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// style number from vneinv01
DataItem NE0EW-02-ABEND-CUST num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-02-ABEND-FILLER-CUST char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-02-ABEND-FILLER-ORD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-02-ABEND-FILLER-STY char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hyphen filler
DataItem NE0EW-02-ABEND-HYPEN-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hyphen filler
DataItem NE0EW-02-ABEND-HYPHEN-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-02-ABEND-KEY char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op1cuoid from newrec
DataItem NE0EW-02-ABEND-OP1CUOID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op1norid from newrec
DataItem NE0EW-02-ABEND-OP1NORID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// composed order num
DataItem NE0EW-02-ABEND-ORDER-NBR num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-02-ABEND-STYLE char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// style number from vneinv01
DataItem NE0EW-02-ABEND-SY1STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// color code   from vneinv01
DataItem NE0EW-02-ABEND-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dimention    from vneinv01
DataItem NE0EW-02-ABEND-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-02-SIZE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-02-SUB num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-02-WRITE-OFF-COUNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CENTURY
DataItem NE0EW-02-WS-FORMAT-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CONVERT DATE TO CCYYMM
DataItem NE0EW-02-WS-FORMAT-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// MONTH
DataItem NE0EW-02-WS-FORMAT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YEAR
DataItem NE0EW-02-WS-FORMAT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-CHG-KEY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current temp page
DataItem NE0EW-CURR-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-GL-CODE char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-GL-ENTITY-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-GL-NATRL-ACCT-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-GL-PROJ-ID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-GL-RSP-CTR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-GL-SUB-ACCT-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// highest temp page
DataItem NE0EW-HIGH-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-HOLD-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-HYPHEN-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-HYPHEN-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-KEY char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-LRG-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current map page
DataItem NE0EW-MAP-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-OP-CUST-ORD-ID num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-OP-NIKE-ORD-ID num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-ORDER-NBR num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0EW-STYLE char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-SY-COLR-CD-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-SY-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0EW-XDM-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

