package ne0b;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPNL-006;
import corpcom3.XPNL002;
import corpcom3.XPNL004;
import corpcom3.XPNL005;
import corpcom4.XSENTRY;
import corpcom4.XSNLS01;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XCTCD;
import corpx1.XCTTBL;
import corpx1.XDMCD;
import corpx1.XGPCD;
import corpx2.XOSCD;
import corpx2.XQACD;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ku.common.KUCCOID;
import ku.common.KUMSTRID;
import ne.common.*;
import nl.common.NLXREC;
import op.common.OP1CUNDT;
import op.common.OP1CUOID;
import op.common.OP1NORID;
import op.common.OP1PARTN;
import op.common.OP1REC;
import op.common.OP2REC;
import pc.common.PC2CUXID;
import pc.common.PC2REC;
import pc.common.PC6REC;
import sy.common.SY1STNBR;
import sy.common.SY2CLRID;
import ta.common.TA1REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import ts.common.TSEOXCC;
//*** PROGRAM=NE0B ****
// ************************************************************
// 
//       NE0B - International Hold Items Selection
//       -----------------------------------------
// This application displays all the items of a particular
// order, to allow the business partner to select those items
// which will be placed on hold.
// 
// Maintenance
//   Date     User Id  Remarks
// --------   -------  ----------------------------------------
// 11/03/93   kshaw    Created.
// --------   -------  ----------------------------------------
// 02/25/98   ngango   Y2K Modification... recompiled to pickup
//                     XX0XS01 sub routine.
// --------   -------  ----------------------------------------
// 09/01/00   RGOMAT   Code has been modified for x-ref field
//                     Change in dprodc.vprdcu table
// *********************
Program NE0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NE00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  NE0BW01 NE0BW01; // record
  NE0BW02 NE0BW02; // record
  NE0BW03 NE0BW03; // record
  NE0BW04 NE0BW04; // record
  NE0BW05 NE0BW05; // record
  NEWREC NEWREC; // record
  NLXREC NLXREC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  PC2REC PC2REC; // record
  PC6REC PC6REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VNEHLD01 VNEHLD01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  use NE0BM.NE0BM100,  // forms
      NE0BM.NE0BM200, 
      NE0BM.NE0BM300
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NE0B-000: NE0B-000();


    exit program;



  end // end main
end // end NE0B

// application main logic
Function NE0B-000()
   /* -----------------------------------------------------------*/
      /* This is the "main logic" for the application.*/

      /* xsentry checks to ensure that this application was*/
            /* entered from another csp application.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-000";
  COMMAREA.CACURRAP = "NE0B";

  NE0B-001(); /* Initilize the application*/

  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/

  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NE0B-050(); /* screen branch control*/
  end

  XSPF4();

end // end NE0B-000

// Initialize application
Function NE0B-001()
   /* -----------------------------------------------------------*/
         /* Initialize the application working storage*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-001";

  converseVar.commitOnConverse = 1; /* Force db2 to commit on each screen*/
                                  /* converse*/
  VGVar.handleHardIOErrors = 1; /* Return control to program if hard db2*/
                                  /* error*/

  XSENTRY(); /* Check entry thru main menu*/
  XSSEGTR(); /* Set segmented transaction id*/

  set SQLCA empty; /* Clear out the SQL return record*/

  set ERRSQLCA empty; /* Clear out the "common" error record*/

  set TA1REC empty; /* Clear out the "common" abend record*/

  set NEWREC empty; /* Clear out the "common" working*/
                                  /* storage*/
  set NLXREC empty; /* Clear out the "common" working*/
                                  /* storage*/

  set OP1REC empty; /* Clear vorhdr01*/

  set PC6REC empty; /* Clear vpoitm01*/

  set PC2REC empty; /* Clear vprdcu01*/

  set NE0BW01 empty; /* Clear application working storage*/
                                  /* for map 100*/

  set NE0BW02 empty; /* Clear application working storage*/
                                  /* for map 200*/
  if (COMMAREA.CAFRMSYS != "NE")
    COMMAREA.CAUSERA = " ";
  end

  NE0BW-01-SECOND-TIME-FL = "N"; /* initialize to first*/
  NE0BW-01-LC-HOLD-OPTION = "N"; /* initialize to no*/
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag 'no'*/
  NLXREC.NLXERRF = "N"; /* set error-flag to 'no'*/
  NE0BW04.NE0BW-04-WARNFL = "N"; /* set warning flag for map 300*/
  NE0BW-01-INQ-LC-FL = "N"; /* inq user & lc hold*/
  NE0BW-01-INQ-ITM-FL = "N"; /* inq user & lc hold w/ items*/
                                  /* allow to go to map200*/
  NE0BW-W02-SIZE = 784;

   /* ------------------------------------------------------*/
    /* Set up working-storage array of screen names*/
   /* ------------------------------------------------------*/


  NLXREC.NLXSNAME[1] = "NE0BM100";
  NLXREC.NLXSNAME[2] = "NE0BM200";
  NLXREC.NLXSNAME[3] = "NE0BM300";

   /* **********************************************/
   /* Was this application entered via 'fastpath'?*/
   /*  */
   /* **********************************************/

  if (COMMAREA.CAITEM != " ") /* 'Item' will be blank if fastpath*/
    XPNL004(); /* validate caitem numeric*/
    NE0BW01.OP1NORID = 01;
    NE0BW01.OP1CUOID = NLXREC.NLXNUM8A;
    /* E NLXREC.NLXNUM8A TO NE0BM100.OP1CUOID; /* for use in stmt grps*/
    /* E 01 TO NE0BM100.OP1NORID;              /* below*/
    if (NLXREC.NLXERRF == "Y")
      converseLib.validationFailed(12);
      NLXREC.NLXCSCRN = "NE0BM100"; /* go to map 100*/
    else
      NE0BS-VAL-SLS-ID();
      if (NLXREC.NLXERRF == "N")
        NE0BS-VER-HDR-STAT();
      end
      if (NLXREC.NLXERRF == "N")
        NLXREC.NLXCSCRN = "NE0BM200"; /* go to map 200*/
      else
        NLXREC.NLXCSCRN = "NE0BM100"; /* go to map 100*/
      end
    end
  else
    NLXREC.NLXCSCRN = "NE0BM100"; /* go to map 100*/
  end

   /* MOVE COMMAREA.CAUSERA TO NEWREC.NEWGROUP;*/

  NEW-FROM-APP = COMMAREA.CAFROMAP;

  COMMAREA.CATOAP = " ";
  COMMAREA.CAITEM = " ";


end // end NE0B-001

// Screen branch control
Function NE0B-050()
   /* -----------------------------------------------------------*/
      /* Control process the application screen(s)*/

     /* Note that this process is being performed in a*/
     /* "while loop" until the end-of-application flag is set*/
     /* to 'y'.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-050"; /* set current process name*/

  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;

  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME)
     /* if current-screen-name is in the screen-array, then set*/
     /* the screen-index*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex;
  end

  NLXREC.NLXEOSF = "N"; /* Set end-of-screen flag to 'no'*/
  NLXREC.NLXBLDSC = "Y"; /* Set build screen flag to 'yes'*/
  if (NLXREC.NLXERRF == "Y") /* Fast path error*/
    /* continue*/
  else
    NLXREC.NLXERRF = "N"; /* Clear error flag*/
    converseLib.validationFailed(0);
    NE0BW-01-SECOND-TIME-FL = "N"; /* set flag off*/
  end

  if (NLXREC.NLXSCRNX == 1) /* If screen Ne0BM100*/
    while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
      NE0B-100();
    end
  else
    if (NLXREC.NLXSCRNX == 2) /* If screen Ne0BM200*/
      while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
        NE0B-200();
      end
    else
      if (NLXREC.NLXSCRNX == 3) /* If screen Ne0BM300*/
        while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
          NE0B-300();
        end
      end
    end
  end


   /* at this point;*/
       /* if the end-of-application flag (nlxeoaf ) = 'n'*/
         /* the perform will return to the top of ne0b050...*/
       /* else*/
         /* the perform will auto return to ne0b000.*/


end // end NE0B-050

// header screen 1
Function NE0B-100()
   /* -----------------------------------------------------------*/
       /* Process screen ne0bM100*/

     /* note - this process is being performed in a*/
        /* "while loop" from ne0b050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-100";


  if (NLXREC.NLXBLDSC == "Y")
    NE0B-101();
    NLXREC.NLXBLDSC = "N";
  end

  converse NE0BM100 ;

  NE0BM100.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";


  NE0B-110(); /* validate pf keys*/

  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0B-120(); /* process entered option*/
  end

  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0B-130(); /* determine next action...*/
  end


end // end NE0B-100

// Build screen
Function NE0B-101()
   /* **************************************/
   /* Build MAP ne0bM100                 **/
   /* **************************************/


  NLXREC.NLXCPROC = "NE0B101";

  converseLib.clearScreen();
  set NE0BM100 initial;

  NE0BM100.XXXRVNBR = "00"; /* revision nbr*/
  NE0BM100.XXXMAPNM = "NE0BM100"; /* map name*/
  NE0BM100.XXXPRCNM = "NE0B100"; /* process name*/
  NE0BM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/

  if (NE0BW01.OP1CUOID > 0) /* fast path*/
    NE0BM100.OP1NORID = 01;
    NE0BM100.OP1CUOID = NE0BW01.OP1CUOID;
  end

  if (NE0BW-01-INQ-LC-FL == "Y")
    set NE0BM100.OP1NORID bold;
    set NE0BM100.OP1CUOID bold;
  end

  if (NE0BW-01-SECOND-TIME-FL == "Y") /* set in ne0b-101 fast path*/
  /* continue                      /* logic*/
  else
    set NE0BM-100-PF5 protect, invisible;
    set NE0BM-100-PF9 protect, invisible;
    set NE0BM-100-PF15 protect, invisible;
  end


end // end NE0B-101

// Validate PF keys act on some
Function NE0B-110()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 5, 15*/

     /* Active PF keys: 1, 3, 4, 15 and Enter*/
   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-110";

  set NE0BM100.CATOAP initialAttributes;
  set NE0BM100.CAITEM initialAttributes;

   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/

  if (NE0BM100.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0BM100.CATOAP;
      COMMAREA.CAITEM = NE0BM100.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0BM100.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end

   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/

  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end

   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/

  if (converseVar.eventKey is pf3)
    COMMAREA.CAUSERA = " ";
    COMMAREA.CATOAP = "NE0A";
    XPNL002(); /* exit*/
    return;
  end

   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/

  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end

  if (converseVar.eventKey is pf5) /* pf5 ok when flag = yes*/
    if (NE0BW01.NE0BW-01-SECOND-TIME-FL == "Y")
      return; /* process*/
    end
  end

  if (converseVar.eventKey is pf9)
    if (NE0BW01.NE0BW-01-SECOND-TIME-FL == "Y") /* SO in vnehld tble*/
      if (COMMAREA.CACLVL[3] == "Y")
        return; /* process*/
      else
        converseLib.validationFailed(81); /* not authorized to release*/
        NLXREC.NLXERRF = "Y";
        return; /* slap hands, no authority*/
      end
    end
  end

  if (converseVar.eventKey is pf15) /* pf15 release so*/
    if (NE0BW01.NE0BW-01-SECOND-TIME-FL == "Y") /* SO in vnehld tble*/
      if (COMMAREA.CACLVL[3] == "Y")
        return; /* process*/
      else
        converseLib.validationFailed(52); /* not authorized to release*/
        NLXREC.NLXERRF = "Y";
        return; /* slap hands, no authority*/
      end
    end
  end

  if (converseVar.eventKey is enter /* FAST PATH ERROR STOP PROCESS*/
   && NE0BW-01-INQ-LC-FL == "Y")   
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(44);
    return;
  end

  if (converseVar.eventKey is enter /* user hit enter rather than selecting*/
   && NE0BW-01-SECOND-TIME-FL == "Y") /* pf5, pf15*/
    if (NE0BM100.OP1CUOID is modified
     || NE0BM100.OP1NORID is modified
     || NE0BW-01-LC-HOLD-OPTION == "Y") /* pf9*/
      /* continue to edits in 120 logic*/
    else
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(14); /* Enter key not valid*/
      return;
    end
  end

  if (converseVar.eventKey is enter) /* continue*/
    return;
  end

  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);


end // end NE0B-110

// Edit/Act on Entered order id
Function NE0B-120()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0B-120";

  if (NE0BW01.NE0BW-01-SECOND-TIME-FL == "Y")
    if (NE0BM100.OP1CUOID is modified
     || NE0BM100.OP1NORID is modified)
      set NE0BM-100-PF5 invisible;
      set NE0BM-100-PF9 invisible;
      set NE0BM-100-PF15 invisible;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(15); /* S.O. chngd Press Enter to continue*/
      NE0BW01.NE0BW-01-SECOND-TIME-FL = "N"; /* reset flag*/
      return;
    end
  end

  if (NE0BW01.NE0BW-01-SECOND-TIME-FL == "N") /* first time through*/

    /* ************************************/
    /* Validate Sales Order Id*/
    /* ************************************/

    if (NE0BM100.OP1CUOID == 0)
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(12); /* Invalid S.O.*/
      set NE0BM100.OP1CUOID cursor, modified, bold;
      return;
    end

    if (NE0BM100.OP1NORID > 0)
      /* CONTINUE*/
    else
      if (NE0BM100.OP1NORID == 0)
        NE0BM100.OP1NORID = 01;
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(12); /* Invalid S.O.*/
        set NE0BM100.OP1NORID cursor, modified, bold;
        return;
      end
    end

    NE0BW01.OP1CUOID = NE0BM100.OP1CUOID;
    NE0BW01.OP1NORID = NE0BM100.OP1NORID;

    NE0BS-VAL-SLS-ID();

    /* ************************************/
    /* Verify order not on hold, so long as*/
    /* no errors found in NE0BS-VAL-SLS-ID (sqlcode=0)*/
    /* ************************************/

    if (NLXREC.NLXERRF == "N")
      NE0BS-VER-HDR-STAT(); /* check to see if its on hold*/
    end
    if (NLXREC.NLXERRF == "N")
      if (CACHGFL == "N")
        /* See if any rows exist..items or headers*/
        NE0BS-FIND-ITMS();
      end
    end
  end

  converseLib.clearScreen();


end // end NE0B-120

// Determine next action
Function NE0B-130()
   /* **************************************/
   /* Determine next action for map 100 logic*/
   /* **************************************/

  NLXREC.NLXCPROC = "NE0B-130";

   /* ***********************************/
      /* check for Enter or PF5*/
   /* ***********************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf5)
    NLXREC.NLXCSCRN = "NE0BM200";
    NLXREC.NLXEOSF = "Y"; /* done with map100*/
  end

  if (converseVar.eventKey is pf9)
    NE0BS-LC-HOLD-SO();
    NE0B-101(); /* redefine map*/
    set NE0BM-100-PF9 protect, invisible;
    set NE0BM-100-ENTER protect, invisible;
    NE0BW-01-LC-HOLD-OPTION = "N"; /**/
  end

  if (converseVar.eventKey is pf15)
    NE0BS-RELEASE-SO();
    NE0B-101(); /* redefine map*/
    set NE0BM-100-PF5 protect, invisible;
    set NE0BM-100-PF9 initialAttributes;
    set NE0BM-100-ENTER initialAttributes;
    set NE0BM-100-PF15 protect, invisible;
    NE0BW-01-LC-HOLD-OPTION = "Y"; /* allow user to place back on hold*/
  end /* using pf9 option*/


end // end NE0B-130

// process map  200
Function NE0B-200()
   /* -----------------------------------------------------------*/
       /* Process screen NE0BM200*/

     /* note - this process is being performed in a*/
        /* "while loop" from NE0B050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-200";

  if (NLXREC.NLXBLDSC == "Y")
    NE0B-201();
    NLXREC.NLXBLDSC = "N";
  end

  converse NE0BM200 ;

  NE0BM200.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  NE0BW03.NE0BW-UPDTFL = "N"; /* items selected flag*/


  NE0B-210(); /* validate pf keys*/

  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0B-220(); /* process entered option*/
  end

  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0B-230(); /* determine next action...*/
  end


end // end NE0B-200

// Build screen
Function NE0B-201()
   /* **************************************/
   /* Get fields for NE0BM200            **/
   /* **************************************/


  NLXREC.NLXCPROC = "NE0B-201";

  converseLib.clearScreen();
  set NE0BM200 initial;

  NE0BM200.XXXRVNBR = "00"; /* revision nbr*/
  NE0BM200.XXXMAPNM = "NE0BM200"; /* map name*/
  NE0BM200.XXXPRCNM = "NE0B200"; /* process name*/
  NE0BM200.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/

   /* **************************************/
   /* Build header of MAP200*/
   /* **************************************/

  NE0BM200.KUCCOID = NE0BW01.KUCCOID;
  NE0BM200.OP1CUOID = NE0BW01.OP1CUOID;
  NE0BM200.OP1NORID = NE0BW01.OP1NORID;
  NE0BM200.OP1CUNDT = NE0BW01.OP1CUNDT;
  NE0BM200.XOSCD = NE0BW01.XOSCD;

  NE0BS-DEL-TMP-STG(); /* Delete temp storage prior to writting*/
                                  /* to it*/
   /* ***********************************/
   /* Build items from Vnehld01 first*/
   /* if no items are found build from*/
   /* Dprodc.vpoitm01, and update Vnehld01*/
   /* with items from Vpoitm01 with*/
   /* ne-hld-ordr-src-cd = '60'.*/
   /* ***********************************/

  NE0BS-BLD-NE-ITMS();


end // end NE0B-201

// Validate PF keys act on some
Function NE0B-210()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 7, 8, 9, 10, 11, 12*/

     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-210";

  set NE0BM200.CATOAP initialAttributes;
  set NE0BM200.CAITEM initialAttributes;

   /* ***********************************/
      /* check for security level*/
   /* ***********************************/

  if (CACHGFL == "N")
    if (converseVar.eventKey is pf9
     || converseVar.eventKey is pf13
     || converseVar.eventKey is pf14
     || converseVar.eventKey is pf15)
      converseLib.validationFailed(17);
      NLXREC.NLXERRF = "Y";
      return;
    end
  end

   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/

  if (NE0BM200.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0BM200.CATOAP;
      COMMAREA.CAITEM = NE0BM200.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0BM200.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end

   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/

  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end

   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0B";
    COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
    XPNL002(); /* exit*/
  end

   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/

  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end


  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15
   || converseVar.eventKey is enter) /* ADDED 01/18/94*/
    return;
  end

  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);


end // end NE0B-210

// Edit/Act on function keys
Function NE0B-220()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0B-220";

  NE0BW-INDEX = 13; /* map index*/

   /* ********************************************************************/
   /* There are 13 occurances of items on each map.  The edits are per-*/
   /* formed in a while loop from the bottom up.*/
   /* ********************************************************************/

  while (NE0BW-INDEX > 0)

     /* Move item rows to working storage.*/

   /* ne0bm-200-select*/
    NE0BW-02-SEL[NE0BW-INDEX] = NE0BM200.NE0BM-200-SEL[NE0BW-INDEX];

   /* gpc*/
    NE0BW-02-XGPCD[NE0BW-INDEX] = NE0BM200.XGPCD[NE0BW-INDEX];

   /* Style*/
    NE0BW-02-SY1STNBR[NE0BW-INDEX] = NE0BM200.SY1STNBR[NE0BW-INDEX];

   /* Color*/
    NE0BW-02-SY2CLRID[NE0BW-INDEX] = NE0BM200.SY2CLRID[NE0BW-INDEX];

   /* Dim*/
    NE0BW-02-XDMCD[NE0BW-INDEX] = NE0BM200.XDMCD[NE0BW-INDEX];

   /* Quality Code*/
    NE0BW-02-XQACD[NE0BW-INDEX] = NE0BM200.XQACD[NE0BW-INDEX];

   /* Held Status*/
    NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = NE0BM200.NE0BM-200-NE-HLD-ORD-DESC[NE0BW-INDEX];

   /* Country of Origin*/
    NE0BW-02-XCTCD[NE0BW-INDEX] = NE0BM200.XCTCD[NE0BW-INDEX];

    NE0BW-02-NE-HLD-QTY[NE0BW-INDEX] = NE0BM200.NE-HLD-QTY[NE0BW-INDEX];

    NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX] = NE0BM200.NE-DVRT-OP1CUOID[NE0BW-INDEX];

    NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX] = NE0BM200.NE-DVRT-OP1NORID[NE0BW-INDEX];

    /* ***************************/
    /* Edit only enterable Field*/
    /* ***************************/

    if (NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] == "S"
     || NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] == " ")
    /* continue*/
    else
      set NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] bold, modified, cursor;
      converseLib.validationFailed(18);
      NLXREC.NLXERRF = "Y";
    end

    NE0BW-INDEX = NE0BW-INDEX - 1;
  end /* END WHILE*/

  if (NE0BM200.NE0BM-FM-PAGE is modified)
    NE0BS-CK-M200-NBR();
  end


end // end NE0B-220

// Determine next action M200
Function NE0B-230()
  /* **********************************/
  /* Determine next action from hdr 1*/
  /* **********************************/

  NLXREC.NLXCPROC = "NE0B-230";

  /* ************************************************/
  /* Update or add current page to the temp storage*/
  /* ************************************************/

  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf13
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15)
    if (NE0BW-HIGH-PAGE-NBR > 0)
      NE0BS-UPDT-TMP-STG();
    end
  end

  /* ****************************************************************/
  /* Enter only valid when fast pathing or going to a specific page*/
  /* ****************************************************************/

  if (converseVar.eventKey is enter)
    if (NE0BM200.NE0BM-FM-PAGE is modified)
      move NE0BM-FM-PAGE to NE0BW-NEXT-PAGE-NBR withV60Compat;
      NE0BS-BUILD-MAP200(); /* build new page*/
      set NE0BM-200-SEL[1] cursor; /* set cursor to first row*/
      return;
    else
      if (NE0BM200.CATOAP != " ")
      /* continue*/
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(27); /* select a pf key to update the*/
                                   /* database*/
        return;
      end
    end
  end

  /* ********************/
  /* PF7 - page forward*/
  /* ********************/

  if (converseVar.eventKey is pf7)
    NE0BS-MAP200-PF7();
    return;
  end

  /* *****************/
  /* PF8 - page back*/
  /* *****************/

  if (converseVar.eventKey is pf8)
    NE0BS-MAP200-PF8();
    return;
  end

  /* ****************************************************/
  /* Validate temp storage for remainning*/
  /* PF keys: Search for at least 1 'S' in select field*/
  /* ****************************************************/

  NE0BS-VAL-SELECT();
  if (NLXREC.NLXERRF == "Y")
    return;
  end

  /* ************************************/
  /* PF9 Hold vnehld01 mark status = 20*/
  /* ************************************/

  if (converseVar.eventKey is pf9)
    NE0BS-HOLD-ITMS();
    NE0BS-BUILD-MAP200();
    converseLib.validationFailed(24);
    return;
  end

  /* ****************************************/
  /* PF13  Delete vnehld01 mark status = 30*/
  /* ****************************************/

  if (converseVar.eventKey is pf13)
    NE0BS-DELETE-ITMS();
    if (NLXREC.NLXERRF == "N")
                                   /* storage has been altered*/
      converseLib.validationFailed(25);
    end
    NE0B-201(); /* rebuild map from the beginning; temp*/
    return;
  end

  /* ****************************************/
  /* PF14  Divert vnehld01 mark status = 40*/
  /* ****************************************/

  if (converseVar.eventKey is pf14)
    /* NE0BS-DIVERT-ITMS;*/
    /* 0BS-BUILD-MAP200;*/
    /* MOVE 26 TO EZEMNO;*/
    NLXREC.NLXCSCRN = "NE0BM300";
    NLXREC.NLXEOSF = "Y";
    return;
  end

  /* ****************************************/
  /* PF15  Release vnehld01 mark status = 50*/
  /* ****************************************/

  if (converseVar.eventKey is pf15)
    NE0BS-RELEASE-ITMS();
    NE0BS-BUILD-MAP200();
    converseLib.validationFailed(32);
    return;
  end


end // end NE0B-230

// process map  300
Function NE0B-300()
   /* -----------------------------------------------------------*/
       /* Process screen NE0BM300*/

     /* note - this process is being performed in a*/
        /* "while loop" from NE0B050 until the end-of-screen*/
        /* flag is set to 'y'.*/

   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-300";
  move NE0BW-NEXT-PAGE-NBR to NE0BW-HOLD-PAGE-NBR withV60Compat;
  NE0BW-NEXT-PAGE-NBR = 1;
  set NE0BW02 empty;


  while (NE0BW-NEXT-PAGE-NBR <= NE0BW-HIGH-PAGE-NBR)

    NE0BM300.VAGen_EZEMSG = " ";
    NLXREC.NLXERRF = "N";

    NE0BS-GET-TMP-STG();

    NE0BW-INDEX = 1;

      /* process each row of temp storage*/

    while (NE0BW-INDEX <= 13 /* 13 rows per temp page*/
    )
      if (NE0BW-02-SEL[NE0BW-INDEX] == "S") /* row selected*/
        if (NLXREC.NLXERRF == "N"
         && NE0BW04.NE0BW-04-WARNFL == "N")
          NE0BS-BUILD-MAP300();
        end

        converse NE0BM300 ;

        NE0BM300.VAGen_EZEMSG = " ";
        NLXREC.NLXERRF = "N";


        NE0B-310(); /* validate pf keys*/

        if (NLXREC.NLXERRF == "N") /* check for error*/
          NE0B-320(); /* process entered option*/
        end

  /* IF NLXREC.NLXERRF EQ 'N';  /* check for error*/
  /* PERFORM NE0B-330;        /* determine next action...*/
  /* END;*/

      end /* end if row selected*/

      if (NLXREC.NLXERRF == "N" /* check for error*/
       && NE0BW04.NE0BW-04-WARNFL == "N")
        NE0BW-INDEX = NE0BW-INDEX + 1; /* get next row*/
      end /* 13 rows per temp storage*/

    end /* 13 rows per temp storage*/

    NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR + 1; /* get next page of temp*/
  end /* end while next page le high page*/

  move NE0BW-HOLD-PAGE-NBR to NE0BW-NEXT-PAGE-NBR withV60Compat;

  if (converseVar.eventKey is pf3)
  /* next sentence*/
  else
    NLXREC.NLXCSCRN = "NE0BM200";
    NLXREC.NLXEOSF = "Y";
  end



end // end NE0B-300

// Validate PF keys act on some
Function NE0B-310()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4*/

     /* Active PF keys: all above and Enter*/
   /* -----------------------------------------------------------*/

  NLXREC.NLXCPROC = "NE0B-310";

  set NE0BM300.CATOAP initialAttributes;
  set NE0BM300.CAITEM initialAttributes;

   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/

  if (NE0BM300.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0BM300.CATOAP;
      COMMAREA.CAITEM = NE0BM300.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0BM300.CATOAP cursor, bold; /* exit failed*/
      return;
    end
  end

   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/

  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end

   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/

  if (converseVar.eventKey is pf3)
    NLXREC.NLXCSCRN = "NE0BM200";
    NLXREC.NLXERRF = "Y";
    NLXREC.NLXEOSF = "Y";
    NE0BW-INDEX = 99; /* gt 13 to stop loop*/
    NE0BW-NEXT-PAGE-NBR = NE0BW-HIGH-PAGE-NBR + 1;
    return;
  end

   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/

  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end

  if (converseVar.eventKey is enter) /* valid non exit keys*/
    return;
  end

  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);


end // end NE0B-310

// Edit Screen Entries
Function NE0B-320()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0B-320";

  if (NE0BM300.NE0BM-300-TO-OP1CUOID[01] is modified
   || NE0BM300.NE0BM-300-TO-OP1CUOID[02] is modified
   || NE0BM300.NE0BM-300-TO-OP1CUOID[03] is modified
   || NE0BM300.NE0BM-300-TO-OP1CUOID[04] is modified
   || NE0BM300.NE0BM-300-TO-OP1CUOID[05] is modified)
    NE0BW-04-WARNFL = "N"; /* ;/* reset flag to reprocess*/
  end

   /* IF NE0BM300.NE0BM-300-TO-OP1CUOID(01) = 0*/
   /* AND NE0BM300.NE0BM-300-TO-OP1CUOID(02) = 0*/
   /* AND NE0BM300.NE0BM-300-TO-OP1CUOID(03) = 0*/
   /* AND NE0BM300.NE0BM-300-TO-OP1CUOID(04) = 0*/
   /* AND NE0BM300.NE0BM-300-TO-OP1CUOID(05) = 0;*/
   /* MOVE 'Y' TO NLXREC.NLXERRF;*/
   /* MOVE 11 TO EZEMNO;             /* Enter an S.O. number*/
   /* END;*/

  if (NLXREC.NLXERRF == "N")
    if (NE0BW-04-WARNFL == "N")
      NE0BW01.NE0BW-01-HOLDFL = NE0BW04.NE0BW-04-WARNFL;
      set NE0BW04 empty;
      NE0BW04.NE0BW-04-WARNFL = NE0BW01.NE0BW-01-HOLDFL;
      NE0BW-04-INDEX = 1; /* map index*/


      /* ********************************************************************/
      /* There are 5 occurances of X-ref on each map.  The edits are per-*/
      /* formed in a while loop from the TOP down.*/
      /* ********************************************************************/

      while (NE0BW-04-INDEX <= 5)
        set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] initialAttributes;
        set NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] initialAttributes;
        set NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX] initialAttributes;
        NE0BS-EDIT-SO();
        NE0BS-VALIDATE-SO();
        NE0BS-VALIDATE-QTY();
        NE0BW-04-INDEX = NE0BW-04-INDEX + 1;
      end /* END WHILE*/
    else
      NE0BW-04-WARNFL = "N"; /* reset  flag*/
    end /* END WHILE*/

    if (NLXREC.NLXERRF == "N"
     && NE0BW04.NE0BW-04-WARNFL == "N")
      NE0BS-UPD-SPLT-HLD();
      NE0BS-UPD-DVRT-HLD();
    end
  end

  if (NLXREC.NLXERRF == "Y") /* DON'T SHOW WARNINGS UNTIL ALL ERRORS*/
                                   /* FIXED*/
    NE0BW-04-WARNFL = "N";
  end


end // end NE0B-320

// Add temp storage
Function NE0BS-ADD-TMP-STG()
   /* ***********************************************************************/
   /* Write temp storage*/
   /*  */
   /*  */
   /* ***********************************************************************/

  NLXREC.NLXCPROC = "NE0BS-ADD-TMP-STG";
  move NE0BW-W02-SIZE to NE0BW-02-LENGTH withV60Compat;

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (NE0BW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    NE0BW-HIGH-PAGE-NBR = TA5REC.TA5TSQIX; /* Save high page Nbr*/
    return; /* Return to previous process*/

  else

   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/

    converseLib.validationFailed(23); /* Indicate system error*/

    XPNL-006(); /* abend routine*/

  end

end // end NE0BS-ADD-TMP-STG

// BUILD TEMP STRG FROM NE ITEMS
Function NE0BS-BLD-NE-ITMS()
  /* ******************************************************************/
  /* This statement group build temp storage from the Vnehld01 table.*/
  /* If no item are found, temp storage will be created by going to*/
  /* vnehld01- statement group NE0BS-BLD-PO-ITMS.*/
  /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-BLD-NE-ITMS";

  NE0BW-INDEX = 0;
  set NE0BW02 empty;

   /* **************************************/
   /* Build vnehld01 cursor key*/
   /* **************************************/

  set VNEHLD01 empty;

  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID;
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID;
  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* have to add range*/
  VNEHLD01.NE-HLD-ORD-SRC-CD = "*";
  VNEHLD01.TSEOXCC = "*";

  NE0BS-S1-VNEHLD01(); /* Open P.O. Item cursor*/

   /* **************************************/
   /* Move  P.O. items to temp storage*/
   /* **************************************/

  NE0BS-N1-VNEHLD01(); /* Priming Fetch*/
  while (SQLCA.VAGen_SQLCODE == 0
   && VNEHLD01.SY1STNBR == " ") /* CHECK FOR HEADER RECORD*/
    NE0BS-N1-VNEHLD01();
  end

  if (SQLCA.VAGen_SQLCODE == 100) /* no items found*/
    NE0BS-BLD-PO-ITMS();
    return; /* don't continue*/
  end

  while (SQLCA.VAGen_SQLCODE == 0)
    NE0BS-BLD-NE-TMP(); /* Load item to temp storage*/
    NE0BS-N1-VNEHLD01(); /* Fetch next*/
    while (SQLCA.VAGen_SQLCODE == 0
     && VNEHLD01.SY1STNBR == " ") /* CHECK FOR HEADER RECORD*/
      NE0BS-N1-VNEHLD01(); /* fetch next*/
    end
  end

  NE0BS-C1-VNEHLD01(); /* Close P.O. item cursor*/

  if (NE0BW-INDEX > 0)
    NE0BS-ADD-TMP-STG(); /* Add last page.*/
  end

  NE0BW-NEXT-PAGE-NBR = 1;

  NE0BS-BUILD-MAP200(); /* Build the map*/


end // end NE0BS-BLD-NE-ITMS

// Build Vnehld01 temp storage
Function NE0BS-BLD-NE-TMP()
   /* *************************************************************/
   /* Build temp storage*/
   /*  */
   /* As items are fetched, they are move to map working storage*/
   /* ne0bW02.*/
   /*  */
   /* *************************************************************/

  NLXREC.NLXCPROC = "NE0BS-BLD-NE-TMP";

  NE0BW-INDEX = NE0BW-INDEX + 1; /* M200 display storage*/

  NE0BW-02-SEL[NE0BW-INDEX] = " "; /* select*/
  NE0BW-02-KUCCOID[NE0BW-INDEX] = VNEHLD01.KUCCOID;
  NE0BW-02-KUMSTRID[NE0BW-INDEX] = VNEHLD01.KUMSTRID;
  NE0BW-02-PC2CUXID[NE0BW-INDEX] = VNEHLD01.PC2CUXID;
  NE0BW-02-XGPCD[NE0BW-INDEX] = VNEHLD01.XGPCD;
  NE0BW-02-SY1STNBR[NE0BW-INDEX] = VNEHLD01.SY1STNBR; /* STYLE*/
  NE0BW-02-SY2CLRID[NE0BW-INDEX] = VNEHLD01.SY2CLRID; /* COLOR*/
  NE0BW-02-XDMCD[NE0BW-INDEX] = VNEHLD01.XDMCD; /* DIM*/
  NE0BW-02-XQACD[NE0BW-INDEX] = VNEHLD01.XQACD; /* quality*/
  NE0BW-02-XCTCD[NE0BW-INDEX] = VNEHLD01.TSEOXCC; /* country*/
  NE0BW-02-NE-HLD-ORD-SRC-CD[NE0BW-INDEX] = VNEHLD01.NE-HLD-ORD-SRC-CD;

   /* **********************************/
   /* Determine what status to display*/
   /* **********************************/

  if (VNEHLD01.NE-HLD-ORD-SRC-CD == "20") /* held*/
    NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "HELD";
  end
  if (VNEHLD01.NE-HLD-ORD-SRC-CD == "30") /* deleted*/
    NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "DEL ";
  end
  if (VNEHLD01.NE-HLD-ORD-SRC-CD == "40") /* diverted*/
    NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "DVRT";
  end
  if (VNEHLD01.NE-HLD-ORD-SRC-CD == "50") /* released*/
    NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "RLSE";
  end
  if (VNEHLD01.NE-HLD-ORD-SRC-CD == "60") /* not on hold*/
    NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "    ";
  end

  NE0BW-02-NE-ORD-REL-DT[NE0BW-INDEX] = VNEHLD01.NE-ORD-REL-DT;
  NE0BW-02-NE-HLD-QTY[NE0BW-INDEX] = VNEHLD01.NE-HLD-QTY;
  NE0BW-02-NE-DVRT-PC2CUXID[NE0BW-INDEX] = VNEHLD01.NE-DVRT-PRDCU-ID;
  NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX] = VNEHLD01.NE-DVRT-CUST-ORDID;
  NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX] = VNEHLD01.NE-DVRT-NIKE-ORDID;

  if (NE0BW-INDEX == 13)
    NE0BS-ADD-TMP-STG();
    set NE0BW02 empty;
    NE0BW-INDEX = 0;
  end


end // end NE0BS-BLD-NE-TMP

// BUILD TEMP STRG FROM PO ITEMS
Function NE0BS-BLD-PO-ITMS()
  /* ******************************************************************/
  /* This edit test the changing of the from page number to cause*/
  /* paging to a specific page.  this will only be done if enter was*/
  /* pressed*/
  /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-BLD-PO-ITMS";

   /* **************************************/
   /* Build pc6rec cursor key*/
   /* **************************************/

  set PC6REC empty;

  PC6REC.OP1CUOID = NE0BW01.OP1CUOID;
  PC6REC.OP1NORID = NE0BW01.OP1NORID;
  PC6REC.OP1PARTN = NE0BW01.OP1PARTN;

  NE0BS-SR-VPOITM01(); /* Open P.O. Item cursor*/

   /* **************************************/
   /* Move  P.O. items to temp storage*/
   /* **************************************/

  set NE0BW05 empty;

  NE0BS-NR-VPOITM01(); /* Priming Fetch*/
  NE0BW-05-FOUND-FL = "N";
  NE0BS-GET-VPOITM01();

  if (NE0BW-05-FOUND-FL == "N")
    converseLib.validationFailed(28); /* No items found*/
    NLXREC.NLXERRF = "Y";
    return;
  end

  while (NE0BW-05-FOUND-FL == "Y")
    if (NE0BW-05-SY-STY-NBR == " ")
      NE0BS-MOVE-PO-ITM();
    else
      if (PC6REC.XGPCD == NE0BW-05-XGP-GPC-CD
       && PC6REC.SY1STNBR == NE0BW-05-SY-STY-NBR
       && PC6REC.SY2CLRID == NE0BW-05-SY-COLR-CD-ID
       && PC6REC.XDMCD == NE0BW-05-XDM-DIM-CD
       && PC6REC.XQACD == NE0BW-05-XQA-QUAL-CD
       && PC6REC.XCTCD == NE0BW-05-XCT-CTRY-CD)
        NE0BW-05-NE-HLD-QTY = NE0BW-05-NE-HLD-QTY         + PC6REC.PC6TORDE;
      else
        NE0BS-BLD-PO-TMP(); /* Load item to temp storage*/
        NE0BS-LOAD-ITMS(); /* load item into vnehld01 tble*/
        NE0BS-I-VNEHLD01();
        NE0BS-MOVE-PO-ITM();
      end
    end
    NE0BS-NR-VPOITM01(); /* Priming Fetch*/
    NE0BW-05-FOUND-FL = "N";
    NE0BS-GET-VPOITM01();
  end

  NE0BS-BLD-PO-TMP(); /* Load item to temp storage*/
  NE0BS-LOAD-ITMS(); /* load item into vnehld01 tble*/
  NE0BS-I-VNEHLD01();

  NE0BS-CR-VPOITM01(); /* Close P.O. item cursor*/

  if (NE0BW-INDEX > 0)
    NE0BS-ADD-TMP-STG(); /* Add last page.*/
  end

  NE0BW-NEXT-PAGE-NBR = 1;

  NE0BS-BUILD-MAP200(); /* Build the map*/


end // end NE0BS-BLD-PO-ITMS

// Build VPOITM temp storage
Function NE0BS-BLD-PO-TMP()
   /* *************************************************************/
   /* Build temp storage*/
   /*  */
   /* As items are fetched, they are move to map working storage*/
   /* ne0bW02.*/
   /*  */
   /* *************************************************************/

  NLXREC.NLXCPROC = "NE0BS-BLD-PO-TMP";

  NE0BW-INDEX = NE0BW-INDEX + 1; /* M200 display storage*/

  NE0BW-02-SEL[NE0BW-INDEX] = " "; /* select*/
  NE0BW-02-KUCCOID[NE0BW-INDEX] = NE0BW-05-CU-CO-ID;
  NE0BW-02-KUMSTRID[NE0BW-INDEX] = NE0BW-05-STORE-ID;
  NE0BW-02-PC2CUXID[NE0BW-INDEX] = NE0BW-05-PC-PRDCU-ID;
  NE0BW-02-XGPCD[NE0BW-INDEX] = NE0BW-05-XGP-GPC-CD;
  NE0BW-02-SY1STNBR[NE0BW-INDEX] = NE0BW-05-SY-STY-NBR; /* STYLE*/
  NE0BW-02-SY2CLRID[NE0BW-INDEX] = NE0BW-05-SY-COLR-CD-ID; /* COLOR*/
  NE0BW-02-XDMCD[NE0BW-INDEX] = NE0BW-05-XDM-DIM-CD; /* DIM*/
  NE0BW-02-XQACD[NE0BW-INDEX] = NE0BW-05-XQA-QUAL-CD; /* quality*/
  NE0BW-02-XCTCD[NE0BW-INDEX] = NE0BW-05-XCT-CTRY-CD; /* country*/
  NE0BW-02-NE-HLD-QTY[NE0BW-INDEX] = NE0BW-05-NE-HLD-QTY;
  NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "    ";

  if (NE0BW-INDEX == 13)
    NE0BS-ADD-TMP-STG();
    set NE0BW02 empty;
    NE0BW-INDEX = 0;
  end


end // end NE0BS-BLD-PO-TMP

// Build map from temp storage
Function NE0BS-BUILD-MAP200()
   /* *****************************************************/
   /* Build map from temp storage.*/
   /* *****************************************************/

  NLXREC.NLXCPROC = "NE0BS-BUILD-MAP200";


  set NE0BW02 empty;

  if (NE0BW-HIGH-PAGE-NBR > 0 /* If temp storage is there*/
   && NE0BW-NEXT-PAGE-NBR <= NE0BW-HIGH-PAGE-NBR)
    NE0BS-GET-TMP-STG(); /* Get current page*/
  end

  NE0BW-INDEX = 1;
  while (NE0BW-INDEX <= 13) /* 13 rows per screen*/

    NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] = NE0BW-02-SEL[NE0BW-INDEX]; /* ne0bm-200-select*/

    NE0BM200.XGPCD[NE0BW-INDEX] = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

    NE0BM200.SY1STNBR[NE0BW-INDEX] = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

    NE0BM200.SY2CLRID[NE0BW-INDEX] = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

    NE0BM200.XDMCD[NE0BW-INDEX] = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

    NE0BM200.XQACD[NE0BW-INDEX] = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

    NE0BM200.NE0BM-200-NE-HLD-ORD-DESC[NE0BW-INDEX] = NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX]; /* Held Status*/

    NE0BM200.XCTCD[NE0BW-INDEX] = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

    NE0BM200.NE-HLD-QTY[NE0BW-INDEX] = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX];

    NE0BM200.NE-DVRT-OP1CUOID[NE0BW-INDEX] = NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX];

    NE0BM200.NE-DVRT-OP1NORID[NE0BW-INDEX] = NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX];

    NE0BW-INDEX = NE0BW-INDEX + 1;

  end

  NE0BM200.NE0BM-FM-PAGE = NE0BW-NEXT-PAGE-NBR;
  NE0BM200.NE0BM-TO-PAGE = NE0BW-HIGH-PAGE-NBR;

  NE0BS-MAP200-MODE();

end // end NE0BS-BUILD-MAP200

// Build map from temp storage
Function NE0BS-BUILD-MAP300()
   /* *****************************************************/
   /* Build map from temp storage.*/
   /* *****************************************************/

  NLXREC.NLXCPROC = "NE0BS-BUILD-MAP300";

  converseLib.clearScreen();
  set NE0BM300 initial;

  NE0BM300.XXXRVNBR = "00"; /* revision nbr*/
  NE0BM300.XXXMAPNM = "NE0BM300"; /* map name*/
  NE0BM300.XXXPRCNM = "NE0B300"; /* process name*/
  NE0BM300.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/

   /* **************************************/
   /* Build header of MAP300*/
   /* **************************************/

  NE0BM300.KUCCOID = NE0BW01.KUCCOID;
  NE0BM300.OP1CUOID = NE0BW01.OP1CUOID;
  NE0BM300.OP1NORID = NE0BW01.OP1NORID;

   /* **************************************/
   /* Build item for MAP300*/
   /* **************************************/

  NE0BM300.NE0BM-300-FM-PC2CUXID = NE0BW-02-PC2CUXID[NE0BW-INDEX];

  NE0BM300.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

  NE0BM300.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

  NE0BM300.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

  NE0BM300.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

  NE0BM300.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

  NE0BM300.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

  NE0BM300.NE-HLD-QTY = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX];


end // end NE0BS-BUILD-MAP300

// Close C1 on VNehld01
Function NE0BS-C1-VNEHLD01()
   /* *****************************************************/
   /* Close cursor C1 on vnehld01*/
   /* *****************************************************/

  NLXREC.NLXCPROC = "NE0BS-C1-VNEHLD01";

   /* close cursor on - vnehld01*/

  call "IO6960" ("C1", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "C1    ";
    TA1REC.TA1LOCAT[3] = "IO6960";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEHLD01";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-C1-VNEHLD01

// check to see for items
Function NE0BS-CHECK-ITEMS()
   /* ************************************/
   /* Check to see if at least one item exists*/
   /* ************************************/
   /*  */
  NLXREC.NLXCPROC = "NE0BS-CHECK-ITEM";
   /*  */
   /* See if any rows exist..items or headers*/
   /*  */
  set VNEHLD01 empty;

  VNEHLD01.NE-HLD-ORD-SRC-CD = "*"; /* wild card*/
  VNEHLD01.TSEOXCC = "*";
  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

  NE0BS-S1-VNEHLD01(); /* declare cursor*/
  NE0BS-N1-VNEHLD01(); /* fetch*/
  while (SQLCA.VAGen_SQLCODE == 0)
    if (VNEHLD01.NE-HLD-ORD-SRC-CD == "10") /* ignore*/
      NE0BS-N1-VNEHLD01(); /* fetch*/
    else
      SQLCA.VAGen_SQLCODE = 100;
    end
  end
  NE0BS-C1-VNEHLD01(); /* close*/


end // end NE0BS-CHECK-ITEMS

// Edit the page number on M200
Function NE0BS-CK-M200-NBR()
  /* ******************************************************************/
  /* This edit test the changing of the from page number to cause*/
  /* paging to a specific page.  this will only be done if enter was*/
  /* pressed*/
  /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-CK-M200-NBR";
   /* MOVE NE0BW-NEXT-PAGE-NBR TO NE0BW-HOLD-PAGE-NBR;*/
  set NE0BM200.NE0BM-FM-PAGE initialAttributes;
  if (NE0BM200.NE0BM-FM-PAGE > NE0BW-HIGH-PAGE-NBR
   || NE0BM200.NE0BM-FM-PAGE == 0)
    converseLib.validationFailed(21);
    NLXREC.NLXERRF = "Y";
    set NE0BM200.NE0BM-FM-PAGE bold, cursor, modified;
  else
    if (converseVar.eventKey not enter
     && NE0BM200.NE0BM-FM-PAGE != NE0BW-NEXT-PAGE-NBR)
      converseLib.validationFailed(22);
      NLXREC.NLXERRF = "Y";
      set NE0BM200.NE0BM-FM-PAGE bold, cursor, modified;
    end
  end


end // end NE0BS-CK-M200-NBR

// Close C1 on Vpoitm01
Function NE0BS-CR-VPOITM01()
   /* *****************************************************/
   /* Close cursor CR on VPOITM01*/
   /* *****************************************************/

  NLXREC.NLXCPROC = "NE0BS-CR-VPOITM01";

   /* close cursor on - vpoitm01*/

  call "IO3310" ("CR", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "CR    ";
    TA1REC.TA1LOCAT[3] = "IO3310";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPOITM01";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-CR-VPOITM01

// del  vnehdr01 item
Function NE0BS-D-VNEHLD01()
   /* ****************************************/
   /* VNEHLD01 Update unique vnehld01*/
   /* ****************************************/

  NLXREC.NLXCPROC = "NE0BS-D-VNEHLD01";

  call "IO6960" ("D ", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    TA1REC.TA1LOCAT[2] = "D      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO6960 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* database*/
    TA1REC.TA1TBLVU = "VNEHLD01"; /* table view*/
    XPNL005(); /* abend routine*/
  end


end // end NE0BS-D-VNEHLD01

// PURGE TEMP STORAGE
Function NE0BS-DEL-TMP-STG()
   /* ***********************************************************************/
   /* PURGE temp storage*/
   /*  */
   /*  */
   /* ***********************************************************************/

  NLXREC.NLXCPROC = "NE0BS-DEL-TMP-STG";

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (NE0BW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(23); /* Indicate system error*/

  XPNL-006(); /* abend routine*/


end // end NE0BS-DEL-TMP-STG

// Mark Items for deletion
Function NE0BS-DELETE-ITMS()
   /* ******************************************************************/
   /* This statement group will update the vnehld01 table with a delete*/
   /* status of 30. it then updates or inserts the item into the table*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-DELETE-ITM";
  move NE0BW-NEXT-PAGE-NBR to NE0BW-HOLD-PAGE-NBR withV60Compat;
  NE0BW-NEXT-PAGE-NBR = 1;

  set VNEHLD01 empty;

   /* **************************/
   /* Build Header Information*/
   /* **************************/

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Process each page in temp storage, nk-dw-high-page-nbr times.*/

  while (NE0BW-NEXT-PAGE-NBR <= NE0BW-HIGH-PAGE-NBR)
    NE0BS-GET-TMP-STG();
    NE0BW-INDEX = 1;

     /* Process each row in ne0bW02*/

    while (NE0BW-INDEX <= 13) /* 13 rows per temp page*/

      if (NE0BW-02-SEL[NE0BW-INDEX] == "S")
        if (NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX] > 0)

          NE0BW-02-SEL[NE0BW-INDEX] = " ";

          VNEHLD01.KUCCOID = NE0BW01.KUCCOID; /* cu_co_id*/

          VNEHLD01.PC2CUXID = NE0BW-02-PC2CUXID[NE0BW-INDEX]; /* pc_prdcu_id*/

          VNEHLD01.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

          VNEHLD01.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

          VNEHLD01.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

          VNEHLD01.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

          VNEHLD01.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

          VNEHLD01.NE-HLD-ORD-SRC-CD = NE0BW-02-NE-HLD-ORD-SRC-CD[NE0BW-INDEX]; /* Held Status*/

          VNEHLD01.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

          VNEHLD01.NE-ORD-REL-DT = NE0BW-02-NE-ORD-REL-DT[NE0BW-INDEX];

          VNEHLD01.NE-HLD-QTY = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]; /* Ne hld qty*/

          VNEHLD01.NE-DVRT-PRDCU-ID = NE0BW-02-NE-DVRT-PC2CUXID[NE0BW-INDEX];

          VNEHLD01.NE-DVRT-CUST-ORDID = NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX];

          VNEHLD01.NE-DVRT-NIKE-ORDID = NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX];

          NE0BS-D-VNEHLD01(); /* delete current key*/
                                  /* build new key*/
          NE0BS-ROLLBK-QTY();

        else
          NLXREC.NLXERRF = "Y";
        end

      end /* if selected*/

      NE0BW-INDEX = NE0BW-INDEX + 1; /* fetch next row*/

    end /* end while on same page*/

    NE0BS-UPDT-TMP-STG();

    NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR + 1;
  end /* end while more pages*/
                                  /* reset next page*/
  move NE0BW-HOLD-PAGE-NBR to NE0BW-NEXT-PAGE-NBR withV60Compat;


end // end NE0BS-DELETE-ITMS

// Mark Items for divertion
Function NE0BS-DIVERT-QTY()
   /* ******************************************************************/
   /* This statement group will update the vnehld01 table with a new*/
   /* held quantuty total only if it is > = 0.  If the quantity < 0*/
   /* the row is deleted.*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-DIVERT-QTY";

  set VNEHLD01 empty;

   /* **************************/
   /* Build Header Information*/
   /* **************************/

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Process each page in temp storage, nk-dw-high-page-nbr times.*/


  VNEHLD01.KUCCOID = NE0BW01.KUCCOID; /* cu_co_id*/

  VNEHLD01.PC2CUXID = NE0BW-02-PC2CUXID[NE0BW-INDEX]; /* pc_prdcu_id*/

  VNEHLD01.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

  VNEHLD01.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

  VNEHLD01.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

  VNEHLD01.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

  VNEHLD01.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

  VNEHLD01.NE-HLD-ORD-SRC-CD = NE0BW-02-NE-HLD-ORD-SRC-CD[NE0BW-INDEX]; /* Held Status*/

  VNEHLD01.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

  VNEHLD01.NE-ORD-REL-DT = NE0BW-02-NE-ORD-REL-DT[NE0BW-INDEX];

  VNEHLD01.NE-DVRT-CUST-ORDID = NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX];

  VNEHLD01.NE-DVRT-NIKE-ORDID = NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX];

  NE0BS-S-VNEHLD01();

  if (SQLCA.VAGen_SQLCODE == 0)
    NE0BW-02-NE-HLD-QTY[NE0BW-INDEX] = VNEHLD01.NE-HLD-QTY     - NE0BW04.NE0BW-04-DVRTED-SUB-TOT;
    VNEHLD01.NE-HLD-QTY = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]; /* Ne hld qty*/
  else
    NE0BW-02-NE-HLD-QTY[NE0BW-INDEX] = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]     - NE0BW04.NE0BW-04-DVRTED-SUB-TOT;
    VNEHLD01.NE-HLD-QTY = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]; /* Ne hld qty*/
  end

  NE0BS-D-VNEHLD01(); /* delete old row and qty*/

  NE0BS-I-VNEHLD01(); /* insert new row and qty*/


end // end NE0BS-DIVERT-QTY

// Edit SO
Function NE0BS-EDIT-SO()

   /* ************************************/
   /* Edit To: S.O.*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-EDIT-SO";

  if (NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] == 0)
    if (NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] == 0)
      if (NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX] == 0)
        /* NEXT SENTENCE*/
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(31);
        set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, modified, bold;
      end
    else
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(31);
      set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, modified, bold;
    end
  else
    if (NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] > 0)
        /* CONTINUE*/
    else
      if (NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] == 0)
        NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] = 01;
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(31);
        set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, modified, bold;
      end
    end
  end

   /* Divert to can not be the same as original S.O.*/

  if (NLXREC.NLXERRF == "N")
    if (NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] > 0 && 
    NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] == 
    NE0BW01.OP1CUOID && 
    NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] == 
    NE0BW01.OP1NORID)
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(36); /* dvrt to S.O. must be dif than orig.*/
                                   /* S.O.*/
      set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, modified, bold;
      set NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] cursor, modified, bold;
    end
  end

   /* divert to and original divert can not be the same*/

  if (NLXREC.NLXERRF == "N")
    if (NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] > 0 && 
    NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] == 
    NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX] && 
    NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] == 
    NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX])
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(41); /* dvrt to S.O. must be dif than orig.*/
                                   /* divert to S.O.*/
      set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, modified, bold;
      set NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] cursor, modified, bold;
    end
  end

end // end NE0BS-EDIT-SO

// find items for inq mode
Function NE0BS-FIND-ITMS()
   /* ************************************/
   /* Find items for inq user mode*/
   /* ************************************/
   /*  */
  NLXREC.NLXCPROC = "NE0BS-FIND-ITMS ";
   /*  */
   /* See if any rows exist.*/
   /*  */
  set VNEHLD01 empty;

  VNEHLD01.NE-HLD-ORD-SRC-CD = "*"; /* wild card*/
  VNEHLD01.TSEOXCC = "*";
  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

  NE0BS-S1-VNEHLD01(); /* declare cursor*/
  NE0BS-N1-VNEHLD01(); /* fetch*/
  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    converseLib.validationFailed(13); /* no items found*/
    NLXREC.NLXERRF = "Y";
  end
  NE0BS-C1-VNEHLD01(); /* close*/


end // end NE0BS-FIND-ITMS

// Get pc2rec for map300 arry itm
Function NE0BS-GET-PC2CUXID()

   /* ************************************/
   /* Get pc2cuxid for map300 array item*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-GET-PC2CU";
  /* get pc2cuxid for map300 array item*/

  PC2REC.KUCCOID = NE0BW04.KUCCOID[NE0BW-04-INDEX];
  PC2REC.KUMSTRID = NE0BW04.KUMSTRID[NE0BW-04-INDEX];
  PC2REC.XGPCD = NE0BM300.XGPCD; /* header gpc*/
  PC2REC.XNXCD = 0;

   /* select unique alternate*/

  NE0BS-SA-PC2REC();

  if (SQLCA.VAGen_SQLCODE == 0)
    /* TCS change begin 08/24/00*/
    if (PC2REC.PC2CUXID == "CNFTL" || 
    PC2REC.PC2CUXID == "CANFL" || 
    PC2REC.PC2CUXID == "CAFTL")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "FT1SA";
    end
    if (PC2REC.PC2CUXID == "CMFTL")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "FT2SA";
    end
    if (PC2REC.PC2CUXID == "CBATA")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "BT1SA";
    end
    if (PC2REC.PC2CUXID == "CCHAM" || 
    PC2REC.PC2CUXID == "CANCH")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "CH1SA";
    end
    if (PC2REC.PC2CUXID == "CANAW")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "AW1SA";
    end
    if (PC2REC.PC2CUXID == "CAN06")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "APLSS";
    end
    if (PC2REC.PC2CUXID == "CAN07")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "EQPSS";
    end
    if (PC2REC.PC2CUXID == "CAN18" || 
    PC2REC.PC2CUXID == "CAN23")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "FTWSS";
    end
    if (PC2REC.PC2CUXID == "NAT42")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "CANRG";
    end
    if (PC2REC.PC2CUXID == "MIS90")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "MISC1";
    end
    if (PC2REC.PC2CUXID == "MIS91")
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = "MISC2";
    end
    /* TCS change end   08/24/00*/
    NE0BW04.PC2CUXID[NE0BW-04-INDEX] = PC2REC.PC2CUXID;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      NE0BW04.PC2CUXID[NE0BW-04-INDEX] = " ";
      converseLib.validationFailed(37); /* No pc2cuxid exist for this customer*/
      set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, bold;
                                /* otherwise user will not see warning*/
      NE0BW04.NE0BW-04-WARNFL = "Y"; /* set warning flag*/
    end
  end


end // end NE0BS-GET-PC2CUXID

// Get M200 temp storage
Function NE0BS-GET-TMP-STG()
   /* ***********************************************************************/
   /*  */
   /* Get temp storage for current page*/
   /*  */
   /* ***********************************************************************/

  NLXREC.NLXCPROC = "NE0BS-GET-TMP-STG";
  TA1REC.TA1LOC = "NE0BS-GET-TMP-STG";

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  move NE0BW-W02-SIZE to NE0BW-02-LENGTH withV60Compat;
  TA5REC.TA5TSQIX = NE0BW-NEXT-PAGE-NBR; /* Page number to fetch*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (NE0BW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  else

   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/

    converseLib.validationFailed(23); /* Indicate system error*/

    XPNL-006(); /* abend routine*/

  end

end // end NE0BS-GET-TMP-STG

// BUILD TEMP STRG FROM PO ITEMS
Function NE0BS-GET-VPOITM01()

  NLXREC.NLXCPROC = "NE0BS-GET-VPOITM01";

  while (NE0BW-05-FOUND-FL == "N"
   && SQLCA.VAGen_SQLCODE == 0)
    if (PC6REC.PC6STAT != "CX")
      NE0BW-05-FOUND-FL = "Y";
    else
      NE0BS-NR-VPOITM01();
    end
  end

end // end NE0BS-GET-VPOITM01

// Place Items on Hold
Function NE0BS-HOLD-ITMS()
   /* *****************************************************************/
   /* This statement group will update the vnehld01 table with a hold*/
   /* status of 20. it then updates or inserts the item into the table*/
   /* *****************************************************************/

  NLXREC.NLXCPROC = "NE0BS-UPDATE-HLD";
  move NE0BW-NEXT-PAGE-NBR to NE0BW-HOLD-PAGE-NBR withV60Compat;
  NE0BW-NEXT-PAGE-NBR = 1;

  set VNEHLD01 empty;

   /* **************************/
   /* Build Header Information*/
   /* **************************/

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Process each page in temp storage, nk-dw-high-page-nbr times.*/

  while (NE0BW-NEXT-PAGE-NBR <= NE0BW-HIGH-PAGE-NBR)
    NE0BS-GET-TMP-STG();
    NE0BW-INDEX = 1;

     /* Process each row in ne0bW02*/

    while (NE0BW-INDEX <= 13) /* 13 rows per temp page*/


      if (NE0BW-02-SEL[NE0BW-INDEX] == "S")

        NE0BW-02-SEL[NE0BW-INDEX] = " ";

        VNEHLD01.KUCCOID = NE0BW01.KUCCOID; /* cu_co_id*/

        VNEHLD01.PC2CUXID = NE0BW-02-PC2CUXID[NE0BW-INDEX]; /* pc_prdcu_id*/

        VNEHLD01.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

        VNEHLD01.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

        VNEHLD01.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

        VNEHLD01.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

        VNEHLD01.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

        VNEHLD01.NE-HLD-ORD-SRC-CD = NE0BW-02-NE-HLD-ORD-SRC-CD[NE0BW-INDEX]; /* Held Status*/

        VNEHLD01.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

        VNEHLD01.NE-ORD-REL-DT = NE0BW-02-NE-ORD-REL-DT[NE0BW-INDEX];

        VNEHLD01.NE-HLD-QTY = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]; /* Ne hld qty*/

        VNEHLD01.NE-DVRT-CUST-ORDID = NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX];

        VNEHLD01.NE-DVRT-NIKE-ORDID = NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX];

        NE0BS-D-VNEHLD01(); /* update table*/

        VNEHLD01.NE-HLD-ORD-SRC-CD = "20"; /* Held Status*/

        NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "HELD"; /* held desc*/

        NE0BS-I-VNEHLD01(); /* insert new row*/

      end /* end if selected*/

      NE0BW-INDEX = NE0BW-INDEX + 1; /* fetch next row*/

    end /* end while more rows*/

    NE0BS-UPDT-TMP-STG();

    NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR + 1;
  end /* end while more pages*/

  move NE0BW-HOLD-PAGE-NBR to NE0BW-NEXT-PAGE-NBR withV60Compat;


end // end NE0BS-HOLD-ITMS

// add  vnehdr01
Function NE0BS-I-VNEHLD01()
   /* ****************************************/
   /* VNEHLD01 insert unique vnehld01*/
   /* ****************************************/

  NLXREC.NLXCPROC = "NE0BS-A-VNEHLD01";
  /* *****************************************/
  /* get current date and time for zz family*/
  /* *****************************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

  call "IO6960" ("A ", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* continue*/
  else
    TA1REC.TA1LOCAT[2] = "A      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO6960 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* database*/
    TA1REC.TA1TBLVU = "VNEHLD01"; /* table view*/
    XPNL005(); /* abend routine*/
  end


end // end NE0BS-I-VNEHLD01

// Insert split items into Vnehld
Function NE0BS-INSERT-DVRTS()
   /* ******************************************************************/
   /* This statement group will update the vnehld01 table with a divert*/
   /* status of 40. it then updates or inserts the item into the table*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-INSERT-DVRTS";

  set VNEHLD01 empty;

   /* **************************/
   /* Build Header Information*/
   /* **************************/

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Process each page in temp storage, nk-dw-high-page-nbr times.*/

  VNEHLD01.PC2CUXID = NE0BW-02-PC2CUXID[NE0BW-INDEX]; /* pc_prdcu_id*/

  VNEHLD01.KUCCOID = NE0BW01.KUCCOID; /* cu_co_id*/

  VNEHLD01.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

  VNEHLD01.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

  VNEHLD01.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

  VNEHLD01.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

  VNEHLD01.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

  VNEHLD01.NE-HLD-ORD-SRC-CD = "40"; /* Held Status*/

  VNEHLD01.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

  VNEHLD01.NE-ORD-REL-DT = NE0BW-02-NE-ORD-REL-DT[NE0BW-INDEX];

  VNEHLD01.NE-HLD-QTY = NE0BW04.NE0BW-04-DVRTED-AMOUNT[NE0BW-04-INDEX]; /* Ne hld qty*/

  VNEHLD01.NE-DVRT-CUST-ORDID = NE0BW04.OP1CUOID[NE0BW-04-INDEX];

  VNEHLD01.NE-DVRT-NIKE-ORDID = NE0BW04.OP1NORID[NE0BW-04-INDEX];
                                  /* build new key*/
  VNEHLD01.NE-HLD-ORD-SRC-CD = "40"; /* Held Status*/

  VNEHLD01.NE-DVRT-PRDCU-ID = NE0BW04.PC2CUXID[NE0BW-04-INDEX];

  NE0BS-S-VNEHLD01();
  if (SQLCA.VAGen_SQLCODE == 0)
    VNEHLD01.NE-HLD-QTY = VNEHLD01.NE-HLD-QTY     + NE0BW04.NE0BW-04-DVRTED-AMOUNT[NE0BW-04-INDEX];
    NE0BS-D-VNEHLD01();
  end

  NE0BS-I-VNEHLD01(); /* insert new row*/


end // end NE0BS-INSERT-DVRTS

// Verify that item exists on ord
Function NE0BS-ITM-ON-ORD()

   /* ************************************/
   /* check to see if item is on order*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-ITM-ON-ORD";

  OP2REC.OP1PARTN = NE0BW04.OP1PARTN[NE0BW-04-INDEX];
  OP2REC.OP1CUOID = NE0BW04.OP1CUOID[NE0BW-04-INDEX];
  OP2REC.OP1NORID = NE0BW04.OP1NORID[NE0BW-04-INDEX];
  OP2REC.XGPCD = NE0BM300.XGPCD; /* header gpc*/
  OP2REC.SY1STNBR = NE0BM300.SY1STNBR; /* header style*/
  OP2REC.SY2CLRID = NE0BM300.SY2CLRID; /* header color*/

   /* check to see if item exists*/

  NE0BS-SE-VITEM001();

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == -811)
    /* continue*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      if (NE0BW04.NE0BW-04-WARNFL == "Y") /* might have been set to yes in*/
                                  /* previous stmt group NE0Bs-GET-PC2CUXID*/
        converseLib.validationFailed(40); /* dual warning no xref & not on order*/
      else
        converseLib.validationFailed(38); /* item not on order*/
      end
      set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, bold;
      NE0BW04.NE0BW-04-WARNFL = "Y"; /* set warning flag*/
    end
  end


end // end NE0BS-ITM-ON-ORD

// Mark SO as lc hold
Function NE0BS-LC-HOLD-SO()
   /* ******************************************************************/
   /* This statement group will update the vnehld01 table with a lc hold*/
   /* status of 10 for a given SO, so long as it has a current status of*/
   /* 50.*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-LC-HLD-SO";

  set VNEHLD01 empty;

   /* **************************/
   /* get SO fields*/
   /* **************************/
                                  /* build key, remainning fields blank*/
  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

  NE0BS-S-VNEHLD01(); /* ;/* get record to update*/

  if (SQLCA.VAGen_SQLCODE == 0)
    if (VNEHLD01.NE-HLD-ORD-SRC-CD == "50")
      /* continue*/
    else
      converseLib.validationFailed(79); /* SO not in release status*/
      NLXREC.NLXERRF = "Y";
      return;
    end
  else
    converseLib.validationFailed(12); /* Invalid SO*/
    NLXREC.NLXERRF = "Y";
    return;
  end
              /* record updated using*/
              /* key plus source code of '50' plus fields from*/
              /* previous select and dates below*/


  VNEHLD01.NE-HLD-ORD-SRC-CD = "10";
                                  /* change src cd to release*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Update header record*/

  NE0BS-U-VNEHLD01();

  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(80); /* so lc hold*/
  else /* 100*/
    converseLib.validationFailed(12); /* invalid so*/
    NLXREC.NLXERRF = "Y";
  end


end // end NE0BS-LC-HOLD-SO

// Move items from PO to NE
Function NE0BS-LOAD-ITMS()
   /* ******************************************************************/
   /* This statement group will move all the Vpoitm01 to vnehld01*/
   /* with a status code of '60', one row at a time.*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-LOAD-ITMS";

  set VNEHLD01 empty;

   /* **************************/
   /* Build Record Information*/
   /* **************************/

  VNEHLD01.KUCCOID = NE0BW01.KUCCOID; /* cu-co-id*/
  VNEHLD01.KUMSTRID = NE0BW01.KUMSTRID; /**/
  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/
  VNEHLD01.PC2CUXID = NE0BW-05-PC-PRDCU-ID; /* pc_prdcu_id*/
  VNEHLD01.XGPCD = NE0BW-05-XGP-GPC-CD; /* gpc*/
  VNEHLD01.SY1STNBR = NE0BW-05-SY-STY-NBR; /* Style*/
  VNEHLD01.SY2CLRID = NE0BW-05-SY-COLR-CD-ID; /* Color*/
  VNEHLD01.XDMCD = NE0BW-05-XDM-DIM-CD; /* Dim*/
  VNEHLD01.XQACD = NE0BW-05-XQA-QUAL-CD; /* Quality Code*/
  VNEHLD01.TSEOXCC = NE0BW-05-XCT-CTRY-CD; /* Country of Origin*/
  VNEHLD01.NE-HLD-QTY = NE0BW-05-NE-HLD-QTY; /* quantity*/
  VNEHLD01.NE-HLD-ORD-SRC-CD = "60"; /* Held Status*/

end // end NE0BS-LOAD-ITMS

// Set map to inquiry mode
Function NE0BS-MAP200-MODE()
  /* ************************************************************************/
  /* Set map to an inquiry mode*/
  /* ************************************************************************/

  NLXREC.NLXCPROC = "NE0BS-SET-INQ-MODE";
  NE0BW-INDEX = 1;

  /* ************************************************************************/
  /* If from invoicing, set map to inquiry only*/
  /* ************************************************************************/

  if (CAADDFL == "Y" /* if add flag = y*/
   || CACHGFL == "Y" /* or change flag = y*/
   || CADELFL == "Y") /* or delete flag = y*/
    while (NE0BW-INDEX <= 13)
      if (NE0BM200.XGPCD[NE0BW-INDEX] == " "
       && NE0BM200.SY1STNBR[NE0BW-INDEX] == " "
       && NE0BM200.SY2CLRID[NE0BW-INDEX] == " "
       && NE0BM200.XDMCD[NE0BW-INDEX] == " ")
        set NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] skip, invisible;
        set NE0BM200.NE-HLD-QTY[NE0BW-INDEX] skip, invisible;
      else
        set NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] initialAttributes;
        set NE0BM200.NE-HLD-QTY[NE0BW-INDEX] initialAttributes;
      end
      NE0BW-INDEX = NE0BW-INDEX + 1;
    end
    return;
  else
    if (CACHGFL == "N") /* if inq flag = y*/
      while (NE0BW-INDEX <= 13)
        set NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] skip;
        if (NE0BM200.XGPCD[NE0BW-INDEX] == " "
         && NE0BM200.SY1STNBR[NE0BW-INDEX] == " "
         && NE0BM200.SY2CLRID[NE0BW-INDEX] == " "
         && NE0BM200.XDMCD[NE0BW-INDEX] == " ")
          set NE0BM200.NE0BM-200-SEL[NE0BW-INDEX] skip, invisible;
          set NE0BM200.NE-HLD-QTY[NE0BW-INDEX] skip, invisible;
        else
          set NE0BM200.NE-HLD-QTY[NE0BW-INDEX] initialAttributes;
        end
        NE0BW-INDEX = NE0BW-INDEX + 1;
      end
    end
    return;
  end
  NLXREC.NLXERRF = "Y";
  converseLib.validationFailed(17); /* user to authorized*/


end // end NE0BS-MAP200-MODE

// Page BACKWARD logic
Function NE0BS-MAP200-PF7()
   /* ***********************************************************************/
   /* Page BACKWARD logic*/
   /* ***********************************************************************/

  NLXREC.NLXCPROC = "NE0BS-MAP200-PF7";

  if (NE0BW-NEXT-PAGE-NBR == 1)
    converseLib.validationFailed(20);
    return;
  else
    NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR - 1;
  end
  NE0BS-BUILD-MAP200();
  set NE0BM-200-SEL[1] cursor; /* set cursor to first row*/


end // end NE0BS-MAP200-PF7

// Page forward logic
Function NE0BS-MAP200-PF8()
   /* *********************/
   /* Page forward logic*/
   /* *********************/

  NLXREC.NLXCPROC = "NE0BS-MAP100-PF8";

  if (NE0BW-NEXT-PAGE-NBR >= NE0BW-HIGH-PAGE-NBR)
    converseLib.validationFailed(19);
    return;
  end
  set NE0BW02 empty;
  NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR + 1;
  NE0BS-BUILD-MAP200();
  set NE0BM-200-SEL[1] cursor;


end // end NE0BS-MAP200-PF8

// Move items from PO to NE
Function NE0BS-MOVE-PO-ITM()

  NLXREC.NLXCPROC = "NE0BS-MOVE-PO-ITM";

  set NE0BW05 empty;

   /* **************************/
   /* Build Record Information*/
   /* **************************/

  NE0BW-05-CU-CO-ID = NE0BW01.KUCCOID; /* cu-co-id*/
  NE0BW-05-STORE-ID = NE0BW01.KUMSTRID; /**/
  NE0BW-05-OP-ORD-PART-CHAR = NE0BW01.OP1PARTN; /* cust part char*/
  NE0BW-05-OP-CUST-ORD-ID = NE0BW01.OP1CUOID; /* cust ord id*/
  NE0BW-05-OP-NIKE-ORD-ID = NE0BW01.OP1NORID; /* nike ord id*/
  NE0BW-05-PC-PRDCU-ID = PC6REC.PC2CUXID; /* pc_prdcu_id*/
  NE0BW-05-XGP-GPC-CD = PC6REC.XGPCD; /* gpc*/
  NE0BW-05-SY-STY-NBR = PC6REC.SY1STNBR; /* Style*/
  NE0BW-05-SY-COLR-CD-ID = PC6REC.SY2CLRID; /* Color*/
  NE0BW-05-XDM-DIM-CD = PC6REC.XDMCD; /* Dim*/
  NE0BW-05-XQA-QUAL-CD = PC6REC.XQACD; /* Quality Code*/
  NE0BW-05-XCT-CTRY-CD = PC6REC.XCTCD;
  NE0BW-05-NE-HLD-QTY = PC6REC.PC6TORDE; /* quantity*/
  NE0BW-05-NE-HLD-ORD-SRC-CD = "60"; /* Held Status*/

end // end NE0BS-MOVE-PO-ITM

// Fetch next Vnehld01 item
Function NE0BS-N1-VNEHLD01()
   /* *****************************************************/
   /* Fetch next VNEHLD01*/
   /* *****************************************************/


  NLXREC.NLXCPROC = "NE0BS-N1-VNEHLD01";

   /* fetch cursor on - VNEHLD01*/

  call "IO6960" ("N1", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "N1    ";
    TA1REC.TA1LOCAT[3] = "IO6960";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEHLD01";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-N1-VNEHLD01

// Fetch next VPOITM01 item
Function NE0BS-NR-VPOITM01()
   /* *****************************************************/
   /* Fetch next VPOITM01*/
   /* *****************************************************/


  NLXREC.NLXCPROC = "NE0BS-NR-VPOITM01";

   /* fetch cursor on - vpoitm01*/

  call "IO3310" ("NR", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "NR    ";
    TA1REC.TA1LOCAT[3] = "IO3310";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPOITM01";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-NR-VPOITM01

// Mark Items as released
Function NE0BS-RELEASE-ITMS()
   /* ******************************************************************/
   /* This statement group will update the vnehld01 table with a release*/
   /* status of 50. it then updates or inserts the item into the table*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-RELEAS-ITM";
  move NE0BW-NEXT-PAGE-NBR to NE0BW-HOLD-PAGE-NBR withV60Compat;
  NE0BW-NEXT-PAGE-NBR = 1;

  set VNEHLD01 empty;

   /* **************************/
   /* Build Header Information*/
   /* **************************/

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Process each page in temp storage, nk-dw-high-page-nbr times.*/

  while (NE0BW-NEXT-PAGE-NBR <= NE0BW-HIGH-PAGE-NBR)
    NE0BS-GET-TMP-STG();
    NE0BW-INDEX = 1;

     /* Process each row in ne0bW02*/

    while (NE0BW-INDEX <= 13) /* 13 rows per temp page*/

      if (NE0BW-02-SEL[NE0BW-INDEX] == "S")

        NE0BW-02-SEL[NE0BW-INDEX] = " ";

        VNEHLD01.KUCCOID = NE0BW01.KUCCOID; /* cu_co_id*/

        VNEHLD01.PC2CUXID = NE0BW-02-PC2CUXID[NE0BW-INDEX]; /* pc_prdcu_id*/

        VNEHLD01.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

        VNEHLD01.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

        VNEHLD01.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

        VNEHLD01.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

        VNEHLD01.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

        VNEHLD01.NE-HLD-ORD-SRC-CD = NE0BW-02-NE-HLD-ORD-SRC-CD[NE0BW-INDEX]; /* Held Status*/

        VNEHLD01.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

        VNEHLD01.NE-ORD-REL-DT = NE0BW-02-NE-ORD-REL-DT[NE0BW-INDEX];

        VNEHLD01.NE-HLD-QTY = NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]; /* Ne hld qty*/

        VNEHLD01.NE-DVRT-CUST-ORDID = NE0BW-02-NE-DVRT-OP1CUOID[NE0BW-INDEX];

        VNEHLD01.NE-DVRT-NIKE-ORDID = NE0BW-02-NE-DVRT-OP1NORID[NE0BW-INDEX];

        NE0BS-D-VNEHLD01(); /* delete current key*/
                                  /* build new key*/
   /* set release date to current*/
        VNEHLD01.NE-ORD-REL-DT = XX0XW01.XX0XWDAT;

        VNEHLD01.NE-HLD-ORD-SRC-CD = "50"; /* Held Status*/

        NE0BW-02-NE-HLD-ORD-DESC[NE0BW-INDEX] = "RLSE"; /* Held Status*/

        NE0BS-I-VNEHLD01(); /* insert new row*/

      end /* if selected*/

      NE0BW-INDEX = NE0BW-INDEX + 1; /* fetch next row*/

    end /* end while on same page*/

    NE0BS-UPDT-TMP-STG();

    NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR + 1;
  end /* end while more pages*/
                                  /* reset next page*/
  move NE0BW-HOLD-PAGE-NBR to NE0BW-NEXT-PAGE-NBR withV60Compat;


end // end NE0BS-RELEASE-ITMS

// Mark SO as released
Function NE0BS-RELEASE-SO()
   /* ******************************************************************/
   /* This statement group will update the vnehld01 table with a release*/
   /* status of 50 for a given SO*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-RELEAS-SO";

  set VNEHLD01 empty;

   /* **************************/
   /* get SO fields*/
   /* **************************/
                                  /* build key, remainning fields blank*/
  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

  NE0BS-S-VNEHLD01(); /* ;/* get record to update*/

  if (SQLCA.VAGen_SQLCODE == 0)
    if (VNEHLD01.NE-HLD-ORD-SRC-CD == "10")
        /* continue*/
    else
      converseLib.validationFailed(46); /* SO in lc status*/
      NLXREC.NLXERRF = "Y";
      return;
    end
  else
    converseLib.validationFailed(12); /* Invalid SO*/
    NLXREC.NLXERRF = "Y";
    return;
  end
              /* record updated using*/
              /* key plus source code of '50' plus fields from*/
              /* previous select and dates below*/


  VNEHLD01.NE-HLD-ORD-SRC-CD = "50";
                                  /* change src cd to release*/

   /* *******************************/
   /* Get current date and time for*/
   /* ZZ family*/
   /* *******************************/

  XX0XS01();

  VNEHLD01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNEHLD01.ZZZCHGTM = XX0XW01.XX0XWTIM;

   /* Update header record*/

  NE0BS-U-VNEHLD01();

  if (SQLCA.VAGen_SQLCODE == 0)
    converseLib.validationFailed(45);
  else /* 100*/
    converseLib.validationFailed(46);
    NLXREC.NLXERRF = "Y";
  end


end // end NE0BS-RELEASE-SO

// Mark Items for deletion
Function NE0BS-ROLLBK-QTY()
   /* ******************************************************************/
   /* This statement group will roll back the quantity of a deleted*/
   /* line item to the original line item.*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-ROLLBK-ITM";

  set VNEHLD01 empty;

   /* **************************/
   /* Build Header Information*/
   /* **************************/

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/

  VNEHLD01.XGPCD = NE0BW-02-XGPCD[NE0BW-INDEX]; /* gpc*/

  VNEHLD01.SY1STNBR = NE0BW-02-SY1STNBR[NE0BW-INDEX]; /* Style*/

  VNEHLD01.SY2CLRID = NE0BW-02-SY2CLRID[NE0BW-INDEX]; /* Color*/

  VNEHLD01.XDMCD = NE0BW-02-XDMCD[NE0BW-INDEX]; /* Dim*/

  VNEHLD01.XQACD = NE0BW-02-XQACD[NE0BW-INDEX]; /* Quality Code*/

  VNEHLD01.TSEOXCC = NE0BW-02-XCTCD[NE0BW-INDEX]; /* Country of Origin*/

   /* zero indicate original line item*/
  VNEHLD01.NE-DVRT-CUST-ORDID = 0;

  VNEHLD01.NE-DVRT-NIKE-ORDID = 0;

  NE0BS-S-VNEHLD01(); /* get original line item*/

  if (SQLCA.VAGen_SQLCODE == 0)

    NE0BS-D-VNEHLD01(); /* delete original*/

    VNEHLD01.NE-HLD-QTY = VNEHLD01.NE-HLD-QTY     + NE0BW-02-NE-HLD-QTY[NE0BW-INDEX]; /* Rollback*/
  else
    TA1REC.TA1LOCAT[2] = "ROLLBK "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO6960 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* database*/
    TA1REC.TA1TBLVU = "VNEHLD01"; /* table view*/
    XPNL005(); /* abend routine*/
  end

  NE0BS-I-VNEHLD01(); /* insert new rolled back row*/


end // end NE0BS-ROLLBK-QTY

// Select unique - OP1REC
Function NE0BS-S-OP1REC()
   /* ************************/
   /* OP1REC - Select unique*/
   /* ************************/

  NLXREC.NLXCPROC = "NE0BS-S-OP1REC";

  call "IO0430" ("S ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* Select unique OP1REC*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* continue*/
  else
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0430 "; /* io module*/
    TA1REC.TA1DBASE = "DORDER"; /* database*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NE0BS-S-OP1REC

// Select unique vnehdr01
Function NE0BS-S-VNEHLD01()
   /* ****************************************/
   /* VNEHLD01 Select unique vnehld01*/
   /* ****************************************/

  NLXREC.NLXCPROC = "NE0BS-S-VNEHLD01";

  call "IO6960" ("S ", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* continue*/
  else
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO6960 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* database*/
    TA1REC.TA1TBLVU = "VNEHLD01"; /* table view*/
    XPNL005(); /* abend routine*/
  end


end // end NE0BS-S-VNEHLD01

// Open cursor on Vnehld01
Function NE0BS-S1-VNEHLD01()
   /* *****************************************************/
   /* Open cursor on VNEHLD01*/
   /* *****************************************************/


  NLXREC.NLXCPROC = "NE0BS-S1-VNEHLD01";

   /* open cursor on - vnehld01*/

  call "IO6960" ("S1", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S1    ";
    TA1REC.TA1LOCAT[3] = "IO6960";
    TA1REC.TA1DBASE = "DNILO ";
    TA1REC.TA1TBLVU = "VNEHLD01";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-S1-VNEHLD01

// Select unique - PC2REC
Function NE0BS-SA-PC2REC()
   /* **********************************/
   /* PC2REC - Select Unique Alternate*/
   /* **********************************/

  NLXREC.NLXCPROC = "NE0BS-SA-PC2REC";

  call "IO3340" ("SA", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes}; /* Select unique PC2REC*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
                                  /* continue*/
  else
    TA1REC.TA1LOCAT[2] = "SA     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO3340 "; /* io module*/
    TA1REC.TA1DBASE = "DPRODC"; /* database*/
    TA1REC.TA1TBLVU = "VPRDCU01"; /* table view*/
    XPNL005(); /* abend routine*/
  end


end // end NE0BS-SA-PC2REC

// select exists on vitem001
Function NE0BS-SE-VITEM001()
   /* *****************************************************/
   /* select exists on vitem001*/
   /* *****************************************************/


  NLXREC.NLXCPROC = "NE0BS-SE-VITEM001";

   /* open cursor on - vitem001*/

  call "IO0440" ("SE", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == -811
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SE    ";
    TA1REC.TA1LOCAT[3] = "IO0440";
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-SE-VITEM001

// Open cursor on Vpoitm01
Function NE0BS-SR-VPOITM01()
   /* *****************************************************/
   /* Open cursor on VPOITM01*/
   /* *****************************************************/


  NLXREC.NLXCPROC = "NE0BS-SR-VPOITM01";

   /* open cursor on - vpoitm01*/

  call "IO3310" ("SR", SQLCA, PC6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SR    ";
    TA1REC.TA1LOCAT[3] = "IO3310";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPOITM01";
    XPNL005(); /* abort routine*/
  end

end // end NE0BS-SR-VPOITM01

// update vnehdr01
Function NE0BS-U-VNEHLD01()
   /* ****************************************/
   /* VNEHLD01 Update unique vnehld01*/
   /* ****************************************/

  NLXREC.NLXCPROC = "NE0BS-U-VNEHLD01";

  call "IO6960" ("U ", SQLCA, VNEHLD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* continue*/
  else
    TA1REC.TA1LOCAT[2] = "U      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO6960 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* database*/
    TA1REC.TA1TBLVU = "VNEHLD01"; /* table view*/
    XPNL005(); /* abend routine*/
  end


end // end NE0BS-U-VNEHLD01

// Edit the page number on M200
Function NE0BS-UPD-DVRT-HLD()

   /* ************************************/
   /* update vnehld01 original record*/
   /* with divert to S.O. and updated*/
   /* held quantity and original*/
   /* ne-hld-ord-src-cd.*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-UPD-DVRT-HLD";

  NE0BS-DIVERT-QTY();

end // end NE0BS-UPD-DVRT-HLD

// Edit the page number on M200
Function NE0BS-UPD-SPLT-HLD()

   /* ************************************/
   /* update vnehld01 with split records*/
   /* with a ne-hld-ord-src-cd*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-UPD-SPLT-HLD";

  NE0BW-04-INDEX = 5;
  while (NE0BW-04-INDEX > 0)
    if (NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] > 0)
      NE0BS-INSERT-DVRTS();
    end
    NE0BW-04-INDEX = NE0BW-04-INDEX - 1;
  end

end // end NE0BS-UPD-SPLT-HLD

// Update temp storage
Function NE0BS-UPDT-TMP-STG()
   /* ***********************************************************************/
   /* Update temp storage*/
   /* ***********************************************************************/

  NLXREC.NLXCPROC = "NE0BS-UPTD-TMP-STG";
  TA1REC.TA1LOC = "NE0BS-UPTD-TMP-STG";
  TA5REC.TA5TSQIX = NE0BW-NEXT-PAGE-NBR;
  move NE0BW-W02-SIZE to NE0BW-02-LENGTH withV60Compat;

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (NE0BW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  else

   /* ------------------------------------------------------------*/
    /* Otherwise, indicate that a system error occurred.*/
   /* ------------------------------------------------------------*/

    converseLib.validationFailed(23); /* Indicate system error*/

    XPNL-006(); /* abend routine*/

  end

end // end NE0BS-UPDT-TMP-STG

// Val tmp for at least one sel
Function NE0BS-VAL-SELECT()
   /* ******************************************************************/
   /* This statement group will process temp storage until it finds*/
   /* one 'S' in the select field, if none are found error           e*/
   /* ******************************************************************/

  NLXREC.NLXCPROC = "NE0BS-VAL-SELECT";
  move NE0BW-NEXT-PAGE-NBR to NE0BW-HOLD-PAGE-NBR withV60Compat;
  NE0BW-NEXT-PAGE-NBR = 1;

   /* Process each page in temp storage*/

  while (NE0BW-NEXT-PAGE-NBR <= NE0BW-HIGH-PAGE-NBR)
    NE0BS-GET-TMP-STG();
    NE0BW-INDEX = 1;

     /* Process each row in ne0bW02*/

    while (NE0BW-INDEX <= 13) /* 13 rows per temp page*/

      if (NE0BW-02-SEL[NE0BW-INDEX] == "S")
        /* reset page and get the hell out of Dodge*/
        move NE0BW-HOLD-PAGE-NBR to NE0BW-NEXT-PAGE-NBR withV60Compat;
        return;
      end

      NE0BW-INDEX = NE0BW-INDEX + 1; /* fetch next row*/

    end /* end while on same page*/

    NE0BW-NEXT-PAGE-NBR = NE0BW-NEXT-PAGE-NBR + 1;

  end /* end while more pages*/

  converseLib.validationFailed(29); /* no items selected*/
  NLXREC.NLXERRF = "Y";
                                  /* reset next page*/
  move NE0BW-HOLD-PAGE-NBR to NE0BW-NEXT-PAGE-NBR withV60Compat;


end // end NE0BS-VAL-SELECT

// Validate Sales Order Id
Function NE0BS-VAL-SLS-ID()
   /* *********************************************************/
   /* Validate sales order exists*/
   /* *********************************************************/
   /*  */
  NLXREC.NLXCPROC = "NE0BS-VAL-SLS-ID";
   /*  */
   /* get op-ord-part-char*/
   /*  */
  NE0BW-01-WS-OP-CUST-ORD = NE0BW01.OP1CUOID; /* redefine ord id*/
   /*  */
   /* Build vorhdr01 key*/
   /*  */
  OP1REC.OP1PARTN = NE0BW-01-WS-OP-PART-NUM;
  OP1REC.OP1CUOID = NE0BW01.OP1CUOID;
  OP1REC.OP1NORID = NE0BW01.OP1NORID;
   /*  */
   /* Select unique op1rec*/
   /*  */
  NE0BS-S-OP1REC(); /* select unique op1rec*/
  if (SQLCA.VAGen_SQLCODE == 0) /* save key, cust id, need dt, & stat*/
    NE0BW01.OP1CUOID = OP1REC.OP1CUOID;
    NE0BW01.OP1NORID = OP1REC.OP1NORID;
    NE0BW01.OP1PARTN = OP1REC.OP1PARTN;
    NE0BW01.KUCCOID = OP1REC.KUCCOID;
    NE0BW01.KUMSTRID = OP1REC.KUMSTRID;
    NE0BW01.OP1CUNDT = OP1REC.OP1CUNDT;
    NE0BW01.XOSCD = OP1REC.XOSCD;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      set NE0BM100.OP1CUOID cursor, modified, bold;
      converseLib.validationFailed(12); /* invalid order id;*/
      NLXREC.NLXERRF = "Y"; /* error flag*/
      return; /* go back to calling routine*/
    end
  end
   /*  */
   /* Make sure S.O. is for an international customer*/
   /*  */

  if (OP1REC.XDVCD == "02")
    /* Continue*/
  else
    set NE0BM100.OP1CUOID cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(39); /* customer must be international*/
    return;
  end


end // end NE0BS-VAL-SLS-ID

// Edit the page number on M200
Function NE0BS-VALIDATE-QTY()

   /* ************************************/
   /* Validate To Quantity*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-VALIDATE-QTY";

  if (NE0BW04.OP1CUOID[NE0BW-04-INDEX] > 0)
    if (NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX] == 0)
      set NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX] cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(33);
    else
      if (NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX]
       > NE0BM300.NE-HLD-QTY)
        set NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX] cursor, modified, bold;
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(34);
      else
        NE0BW04.NE0BW-04-DVRTED-SUB-TOT = NE0BW04.NE0BW-04-DVRTED-SUB-TOT         + NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX];
        if (NE0BW04.NE0BW-04-DVRTED-SUB-TOT > NE0BM300.NE-HLD-QTY)
          set NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX] cursor, modified, bold;
          NLXREC.NLXERRF = "Y";
          converseLib.validationFailed(35);
        end
        NE0BW04.NE0BW-04-DVRTED-AMOUNT[NE0BW-04-INDEX] = NE0BM300.NE0BM-300-TO-QUANTITY[NE0BW-04-INDEX];
      end
    end
  end

end // end NE0BS-VALIDATE-QTY

// validate divert to SO
Function NE0BS-VALIDATE-SO()

   /* ************************************/
   /* Validate To S.O.*/
   /* ************************************/

  NLXREC.NLXCPROC = "NE0BS-VALIDATE-SO";

  if (NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] > 0
   && NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX] > 0)
  /* get op-ord-part-char*/

    NE0BW-01-WS-OP-CUST-ORD = NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX];

  /* build vorhdr01 key*/

    OP1REC.OP1PARTN = NE0BW-01-WS-OP-PART-NUM;
    OP1REC.OP1CUOID = NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX];
    OP1REC.OP1NORID = NE0BM300.NE0BM-300-TO-OP1NORID[NE0BW-04-INDEX];

  /* select unique*/

    NE0BS-S-OP1REC();

    if (SQLCA.VAGen_SQLCODE == 0) /* save item in map300 array*/
      NE0BW04.OP1PARTN[NE0BW-04-INDEX] = OP1REC.OP1PARTN;
      NE0BW04.OP1CUOID[NE0BW-04-INDEX] = OP1REC.OP1CUOID;
      NE0BW04.OP1NORID[NE0BW-04-INDEX] = OP1REC.OP1NORID;
      NE0BW04.KUCCOID[NE0BW-04-INDEX] = OP1REC.KUCCOID;
      NE0BW04.KUMSTRID[NE0BW-04-INDEX] = OP1REC.KUMSTRID;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(31);
        set NE0BM300.NE0BM-300-TO-OP1CUOID[NE0BW-04-INDEX] cursor, modified, bold;
      end
    end

    if (NLXREC.NLXERRF == "N")
      if (NE0BW04.NE0BW-04-WARNFL == "N")
        NE0BS-GET-PC2CUXID(); /* get divert to pc2cuxid*/
        NE0BS-ITM-ON-ORD(); /* check if item on divert to SO*/
      end /* if warning = no*/
    end
  end

end // end NE0BS-VALIDATE-SO

// verify vnehdr01 header stat
Function NE0BS-VER-HDR-STAT()
   /* ************************************/
   /* Verify Sales Order Not On Hold*/
   /* ************************************/
   /*  */
  NLXREC.NLXCPROC = "NE0BS-VER-HDR-STAT";
   /*  */
   /* Build vnehld01 key*/
  set VNEHLD01 empty;

  VNEHLD01.OP1PARTN = NE0BW01.OP1PARTN; /* cust part char*/
  VNEHLD01.OP1CUOID = NE0BW01.OP1CUOID; /* cust ord id*/
  VNEHLD01.OP1NORID = NE0BW01.OP1NORID; /* nike ord id*/
  VNEHLD01.NE-HLD-ORD-SRC-CD = "10";

   /* Select unique held sales order header*/
   /* With remaining key fields empty*/

  NE0BS-S-VNEHLD01();

  if (SQLCA.VAGen_SQLCODE == 0) /* order found*/
    if (VNEHLD01.NE-HLD-ORD-SRC-CD == "50") /* released*/
      converseLib.validationFailed(76); /* order in release status*/
      NE0BW01.NE0BW-01-SECOND-TIME-FL = "Y"; /* set flag to on*/
      NE0BW-01-LC-HOLD-OPTION = "Y";
      NLXREC.NLXERRF = "Y";
      set NE0BM-100-PF9 initialAttributes;
      return; /* continue as if not found*/
    end
    if (CACHGFL == "N")
      NE0BS-CHECK-ITEMS(); /* search for at least one item*/
      if (VNEHLD01.NE-HLD-ORD-SRC-CD == "10")
        converseLib.validationFailed(44); /* order on l/c hold no items*/
        NE0BW-01-INQ-LC-FL = "Y";
        NLXREC.NLXERRF = "Y";
        return;
      else
        converseLib.validationFailed(14); /* order on l/c hold status*/
                                  /* with items Inq only*/
        NE0BW01.NE0BW-01-SECOND-TIME-FL = "Y"; /* set flag to on*/
        NLXREC.NLXERRF = "Y";
        NE0BW-01-INQ-ITM-FL = "Y";
        set NE0BM-100-PF5 initialAttributes;
        set NE0BM-100-PF9 invisible;
        set NE0BM-100-PF15 initialAttributes;
        set NE0BM-100-ENTER invisible;
        return;
      end
    else
      converseLib.validationFailed(14); /* order on l/c hold status*/
      NE0BW01.NE0BW-01-SECOND-TIME-FL = "Y"; /* set flag to on*/
      NLXREC.NLXERRF = "Y";
      set NE0BM-100-PF5 initialAttributes;
      set NE0BM-100-PF9 invisible;
      set NE0BM-100-PF15 initialAttributes;
      set NE0BM-100-ENTER invisible;
      return;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* no order found on hold*/
      /* continue*/
      /* IF CACHGFL = 'N';*/
      /* MOVE 17 TO EZEMNO;         /* security error*/
      /* MOVE 'Y' TO NLXREC.NLXERRF;*/
      /* EZERTN;*/
      /* END;*/
    else
      TA1REC.TA1LOC = "NE0BS-VER-HDR-STAT - BAD SRCE CD";
      TA1REC.TA1DBASE = "DNILO "; /* database*/
      TA1REC.TA1TBLVU = "VNEHLD01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end


end // end NE0BS-VER-HDR-STAT

//*** RECORD=NE0BW01 ****
// ** NE0BW01 APPLICATION WORKING STORAGE RECORD for header  **
// ** map fields for all maps for this application           **
// Maintenence log.
// Kshaw     11/05/93  Created
// ***********************
Record NE0BW01 type basicRecord
  5 NE0BW-01-GROUP NE0BW-01-GROUP ; 
    10 NE0BW-01-WS-OP-CUST-ORD NE0BW-01-WS-OP-CUST-ORD ; 
      15 NE0BW-01-WS-OP-CUST-FIL NE0BW-01-WS-OP-CUST-FIL ; 
      15 NE0BW-01-WS-OP-PART-NUM NE0BW-01-WS-OP-PART-NUM ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 OP1PARTN OP1PARTN ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 OP1CUNDT OP1CUNDT ; 
    10 XOSCD XOSCD ; 
    10 NE0BW-01-SECOND-TIME-FL NE0BW-01-SECOND-TIME-FL ; 
    10 NE0BW-01-LC-HOLD-OPTION NE0BW-01-LC-HOLD-OPTION ; 
    10 XCTCD XCTCD ; 
    10 NE0BW-01-HOLDFL NE0BW-01-HOLDFL ; 
    10 NE0BW-01-INQ-LC-FL NE0BW-01-INQ-LC-FL ; 
    10 NE0BW-01-INQ-ITM-FL NE0BW-01-INQ-ITM-FL ; 
end // end NE0BW01

//*** RECORD=NE0BW02 ****
// ********  MAP200 & MAP300 temp storage record  ***********
// *It is used to retrieve information from temp storage    *
// *to the two maps.                                        *
// ***********************
Record NE0BW02 type basicRecord
  5 NE0BW-02-LENGTH NE0BW-02-LENGTH ; 
  5 NE0BW-02-GROUP NE0BW-02-GROUP ; 
    10 NE0BW-02-SEL NE0BW-02-SEL [13] ; 
    10 NE0BW-02-KUCCOID NE0BW-02-KUCCOID [13] ; 
    10 NE0BW-02-KUMSTRID NE0BW-02-KUMSTRID [13] ; 
    10 NE0BW-02-PC2CUXID NE0BW-02-PC2CUXID [13] ; 
    10 NE0BW-02-XGPCD NE0BW-02-XGPCD [13] ; 
    10 NE0BW-02-SY1STNBR NE0BW-02-SY1STNBR [13] ; 
    10 NE0BW-02-SY2CLRID NE0BW-02-SY2CLRID [13] ; 
    10 NE0BW-02-XDMCD NE0BW-02-XDMCD [13] ; 
    10 NE0BW-02-XQACD NE0BW-02-XQACD [13] ; 
    10 NE0BW-02-NE-HLD-ORD-DESC NE0BW-02-NE-HLD-ORD-DESC [13] ; 
    10 NE0BW-02-NE-HLD-ORD-SRC-CD NE0BW-02-NE-HLD-ORD-SRC-CD [13] ; 
    10 NE0BW-02-XCTCD NE0BW-02-XCTCD [13] ; 
    10 NE0BW-02-NE-ORD-REL-DT NE0BW-02-NE-ORD-REL-DT [13] ; 
    10 NE0BW-02-NE-HLD-QTY NE0BW-02-NE-HLD-QTY [13] ; 
    10 NE0BW-02-NE-DVRT-PC2CUXID NE0BW-02-NE-DVRT-PC2CUXID [13] ; 
    10 NE0BW-02-NE-DVRT-OP1CUOID NE0BW-02-NE-DVRT-OP1CUOID [13] ; 
    10 NE0BW-02-NE-DVRT-OP1NORID NE0BW-02-NE-DVRT-OP1NORID [13] ; 
    10 NE0BW-02-NE-CST-UNT NE0BW-02-NE-CST-UNT [13] ; 
end // end NE0BW02

//*** RECORD=NE0BW03 ****
// ********** NE0B APPLICATION WORKING STORAGE RECORD *********
// ***********************
Record NE0BW03 type basicRecord
  5 NE0BW-GROUP char(169) ; // ne0bw01 group item
    10 NE0BW-ZZZCHGCT NE0BW-ZZZCHGCT ; 
    10 NE0BW-INDEX NE0BW-INDEX ; 
    10 NE0BW-INDEX-2 NE0BW-INDEX-2 ; 
    10 NE0BW-INDEX-3 NE0BW-INDEX-3 ; 
    10 NE0BW-INX4 NE0BW-INX4 ; 
    10 NE0BW-HIGH-PAGE-NBR NE0BW-HIGH-PAGE-NBR ; 
    10 NE0BW-NEW-PAGE-NBR NE0BW-NEW-PAGE-NBR ; 
    10 NE0BW-NEXT-PAGE-NBR NE0BW-NEXT-PAGE-NBR ; 
    10 NE0BW-HOLD-PAGE-NBR NE0BW-HOLD-PAGE-NBR ; 
    10 NE0BW-MAP300-FM-PAGE NE0BW-MAP300-FM-PAGE ; 
    10 NE0BW-MAP300-TO-PAGE NE0BW-MAP300-TO-PAGE ; 
    10 NE0BW-MAP300-HD-PAGE NE0BW-MAP300-HD-PAGE ; 
    10 NE0BW-W03-ARRAY-CNT NE0BW-W03-ARRAY-CNT ; 
    10 NE0BW-STYLE-FOUND NE0BW-STYLE-FOUND ; 
    10 NE0BW-INVOICE-FOUND NE0BW-INVOICE-FOUND ; 
    10 NE0BW-ERR-FLAG NE0BW-ERR-FLAG ; 
    10 NE0BW-W02-SIZE NE0BW-W02-SIZE ; 
    10 NE0BW-W03-SIZE NE0BW-W03-SIZE ; 
    10 NE0BW-KEY NE0BW-KEY ; 
      15 NE0BW-LRG-NBR NE0BW-LRG-NBR ; 
      15 * char(1) ; 
      15 NE0BW-CHR-KEY NE0BW-CHR-KEY ; 
        20 NE0BW-IND NE0BW-IND ; 
    10 NE0BW-MOD-FLAGS NE0BW-MOD-FLAGS ; 
      15 NE0BW-PAGE-MOD-FL NE0BW-PAGE-MOD-FL ; 
      15 NE0BW-MOD-ARRAY NE0BW-MOD-ARRAY [12] ; 
    10 NE0BW-FIRST-IVC-FL NE0BW-FIRST-IVC-FL ; 
    10 NE0BW-UPDTFL NE0BW-UPDTFL ; 
end // end NE0BW03

//*** RECORD=NE0BW04 ****
// ** NE0BW01 APPLICATION WORKING STORAGE RECORD for MAP300  **
// Maintenence log.
// Kshaw     11/05/93  Created
// ***********************
Record NE0BW04 type basicRecord
  5 NE0BW-04-GROUP NE0BW-04-GROUP ; 
    10 NE0BW-04-INDEX NE0BW-04-INDEX ; 
    10 NE0BW-04-DVRTED-SUB-TOT NE0BW-04-DVRTED-SUB-TOT ; 
    10 NE0BW-04-WARNFL NE0BW-04-WARNFL ; 
    10 NE0BW-04-HOLDFL NE0BW-04-HOLDFL ; 
    10 NE0BW-04-MAP-ARRAY NE0BW-04-MAP-ARRAY ; 
      15 OP1PARTN OP1PARTN [5] ; 
      15 OP1CUOID OP1CUOID [5] ; 
      15 OP1NORID OP1NORID [5] ; 
      15 KUCCOID KUCCOID [5] ; 
      15 KUMSTRID KUMSTRID [5] ; 
      15 NE0BW-04-DVRTED-AMOUNT NE0BW-04-DVRTED-AMOUNT [5] ; 
      15 PC2CUXID PC2CUXID [5] ; 
end // end NE0BW04

//*** RECORD=NE0BW05 ****
// ** NE0BW01 APPLICATION WORKING STORAGE RECORD for MAP300  **
// Maintenence log.
// Kshaw     11/05/93  Created
// ***********************
Record NE0BW05 type basicRecord
  5 NE0BW-05-GROUP NE0BW-05-GROUP ; 
    10 NE0BW-05-CU-CO-ID NE0BW-05-CU-CO-ID ; 
    10 NE0BW-05-STORE-ID NE0BW-05-STORE-ID ; 
    10 NE0BW-05-PC-PRDCU-ID NE0BW-05-PC-PRDCU-ID ; 
    10 NE0BW-05-OP-ORD-PART-CHAR NE0BW-05-OP-ORD-PART-CHAR ; 
    10 NE0BW-05-OP-CUST-ORD-ID NE0BW-05-OP-CUST-ORD-ID ; 
    10 NE0BW-05-OP-NIKE-ORD-ID NE0BW-05-OP-NIKE-ORD-ID ; 
    10 NE0BW-05-NE-STAT-CD NE0BW-05-NE-STAT-CD ; 
    10 NE0BW-05-NE-HLD-ORD-SRC-CD NE0BW-05-NE-HLD-ORD-SRC-CD ; 
    10 NE0BW-05-XGP-GPC-CD NE0BW-05-XGP-GPC-CD ; 
    10 NE0BW-05-SY-STY-NBR NE0BW-05-SY-STY-NBR ; 
    10 NE0BW-05-SY-COLR-CD-ID NE0BW-05-SY-COLR-CD-ID ; 
    10 NE0BW-05-XDM-DIM-CD NE0BW-05-XDM-DIM-CD ; 
    10 NE0BW-05-XQA-QUAL-CD NE0BW-05-XQA-QUAL-CD ; 
    10 NE0BW-05-XCT-CTRY-CD NE0BW-05-XCT-CTRY-CD ; 
    10 NE0BW-05-NE-HLD-QTY NE0BW-05-NE-HLD-QTY ; 
    10 NE0BW-05-FOUND-FL NE0BW-05-FOUND-FL ; 
end // end NE0BW05

//*** RECORD=VNEHLD01 ****
// ***********************VNEHLD01*****************************
// 
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  ------     ---------------------------------------
// 11-17-93  kshaw      Initial record creation
// ************************
Record VNEHLD01 type basicRecord
  5 VNEHLD01-GROUP VNEHLD01-GROUP ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 TSEOXCC TSEOXCC ; 
    10 NE-DVRT-PRDCU-ID NE-DVRT-PRDCU-ID ; 
    10 NE-DVRT-CUST-ORDID NE-DVRT-CUST-ORDID ; 
    10 NE-DVRT-NIKE-ORDID NE-DVRT-NIKE-ORDID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 PC2CUXID PC2CUXID ; 
    10 OP1NORID OP1NORID ; 
    10 NE-STAT-CD NE-STAT-CD ; 
    10 NE-HLD-ORD-SRC-CD NE-HLD-ORD-SRC-CD ; 
    10 NE-ORD-REL-DT NE-ORD-REL-DT ; 
    10 NE-HLD-QTY NE-HLD-QTY ; 
    10 NE-CST-UNT-QTY NE-CST-UNT-QTY ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end VNEHLD01

// divert-to sales order number
DataItem NE-DVRT-CUST-ORDID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// divert-to sales order number
DataItem NE-DVRT-NIKE-ORDID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// divert-to cross reference
DataItem NE-DVRT-PRDCU-ID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// held order source code
DataItem NE-HLD-ORD-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE-HLD-QTY
DataItem NE-HLD-QTY decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// release dateT
DataItem NE-ORD-REL-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0BW-01-GROUP char(36)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold flag value for Map300
DataItem NE0BW-01-HOLDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ing user & lc hold w/ items
DataItem NE0BW-01-INQ-ITM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// inq user & lc hold w/no itm
DataItem NE0BW-01-INQ-LC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// place released SO back on hold
DataItem NE0BW-01-LC-HOLD-OPTION char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second time around 100 logic
DataItem NE0BW-01-SECOND-TIME-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Discarded portion of order id
DataItem NE0BW-01-WS-OP-CUST-FIL num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// WS OP-CUST-ORD-ID
DataItem NE0BW-01-WS-OP-CUST-ORD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Order partition number
DataItem NE0BW-01-WS-OP-PART-NUM num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0BW02 group item
DataItem NE0BW-02-GROUP char(780)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer
DataItem NE0BW-02-KUCCOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// store id
DataItem NE0BW-02-KUMSTRID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE0BW02 Length record
DataItem NE0BW-02-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NE cost units processed
DataItem NE0BW-02-NE-CST-UNT decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// divert to cust ord id
DataItem NE0BW-02-NE-DVRT-OP1CUOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// divert to nike ord id
DataItem NE0BW-02-NE-DVRT-OP1NORID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// divert to prdcu
DataItem NE0BW-02-NE-DVRT-PC2CUXID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// held order description
DataItem NE0BW-02-NE-HLD-ORD-DESC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// held order source code
DataItem NE0BW-02-NE-HLD-ORD-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// quantity held
DataItem NE0BW-02-NE-HLD-QTY decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// order need dt
DataItem NE0BW-02-NE-ORD-REL-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PC_PRDCU_ID
DataItem NE0BW-02-PC2CUXID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NE0BW02 Select
DataItem NE0BW-02-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sy-sty-nbr
DataItem NE0BW-02-SY1STNBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sy-colr-id
DataItem NE0BW-02-SY2CLRID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xct-ctry-cd
DataItem NE0BW-02-XCTCD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xdm-dim-cd
DataItem NE0BW-02-XDMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xgp-gpc-cd
DataItem NE0BW-02-XGPCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xqa-qual-cd
DataItem NE0BW-02-XQACD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// amount diverted to S.O.
DataItem NE0BW-04-DVRTED-AMOUNT num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sub tot for dvrtd itms Map300
DataItem NE0BW-04-DVRTED-SUB-TOT num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0BW-04-GROUP char(132)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold flag value for Map300
DataItem NE0BW-04-HOLDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-04-INDEX num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0BW-04-MAP-ARRAY char(115)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// waring flag for Map300
DataItem NE0BW-04-WARNFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0BW-05-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0BW-05-GROUP char(44)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-NE-HLD-ORD-SRC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-NE-HLD-QTY decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-NE-STAT-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-OP-CUST-ORD-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-OP-NIKE-ORD-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-OP-ORD-PART-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-PC-PRDCU-ID char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-STORE-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-SY-COLR-CD-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-SY-STY-NBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-XCT-CTRY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-XDM-DIM-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-XGP-GPC-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript for Map300
DataItem NE0BW-05-XQA-QUAL-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// char key part
DataItem NE0BW-CHR-KEY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ne0bw01 Item error flag
DataItem NE0BW-ERR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ne0bw01 First invoice flag
DataItem NE0BW-FIRST-IVC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Highest page # in temp storage
DataItem NE0BW-HIGH-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next page number to converse
DataItem NE0BW-HOLD-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// indicator
DataItem NE0BW-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ne0bw01 Screen index
DataItem NE0BW-INDEX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 work index
DataItem NE0BW-INDEX-2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 index for ne0bw04
DataItem NE0BW-INDEX-3 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 Invoice found in ivx
DataItem NE0BW-INVOICE-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ne0bw01 index for ne0bw03
DataItem NE0BW-INX4 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Abend key fields
DataItem NE0BW-KEY char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display large interger field
DataItem NE0BW-LRG-NBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 from page nbr MAP300
DataItem NE0BW-MAP300-FM-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 Hold page nbr MAP300
DataItem NE0BW-MAP300-HD-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 to page nbr MAP300
DataItem NE0BW-MAP300-TO-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 Map 200 mod flag array
DataItem NE0BW-MOD-ARRAY char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ne0bw01 Group level for mod fl
DataItem NE0BW-MOD-FLAGS char(109)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new page number for map300
DataItem NE0BW-NEW-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Next page number to converse
DataItem NE0BW-NEXT-PAGE-NBR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 Page number mod flag
DataItem NE0BW-PAGE-MOD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ne0bw01 Style found in dup arr
DataItem NE0BW-STYLE-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// items selected flag
DataItem NE0BW-UPDTFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Size of work 02 for temp stg
DataItem NE0BW-W02-SIZE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ne0bw01 Count of Invoice itms
DataItem NE0BW-W03-ARRAY-CNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Size of work 03 for temp stg
DataItem NE0BW-W03-SIZE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Change count of claim header o
DataItem NE0BW-ZZZCHGCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// claims common working storage
DataItem VNEHLD01-GROUP char(76)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

