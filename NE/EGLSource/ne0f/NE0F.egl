package ne0f;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom2.YSMREC;
import corpcom3.XPNL001;
import corpcom3.XPNL002;
import corpcom3.XPNL005;
import corpcom3.XPXAU01;
import corpcom3.XPXCT01;
import corpcom3.XPXGP01;
import corpcom3.XPXX001;
import corpcom3.XPYPY01;
import corpcom3.XPZAR01;
import corpcom4.XSENTRY;
import corpcom4.XSNLS01;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom5.NEW-FROM-DATE;
import corpcom5.NEW-RECORD-TYPE;
import corpcom5.NEW-REPORT-REQUEST;
import corpcom5.NEW-TO-DATE;
import corpcom5.NEW-TRAN-DEBIT-CREDIT;
import corpcom6.SQLCA;
import corpx1.XAUCD;
import corpx1.XAUTBL;
import corpx1.XCTCD;
import corpx1.XCTTBL;
import corpx1.XGPCD;
import corpx1.XGPTBL;
import corpx2.XWHCD;
import corpy2.YPYCD;
import corpy2.YPYTBL;
import corpy2.YSMSUMCD;
import corpz3.ZARCD;
import corpz3.ZARTBL;
import corpz3.ZPSCD;
import corpz3.ZRGCD;
import ku.common.KUCCOID;
import ku.common.KUCCONM;
import ku.common.KUCREC;
import ne.common.*;
import nl.common.NLXREC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VDSTRB01;
import vv.common.VNESCO01;
//*** PROGRAM=NE0F ****
// ************************************************************
// 
//               NE0F - Descriptive name
//               ---------------------------
// 
// General program explanation and notes
// 
// Maintenance History:
//   Date   Who    Remarks
// -------- ------ --------------------------------------------
// 01-07-94 JDEMAR INITIAL SETUP- FROM NI0J, NE0B
// 07-01-94 JDEMAR SETUP REPORT SECURITY NF120
// 09-12-94 ahowar added ne1500 to inventory selection
// 12-13-94 ahowar added ne1112 and ctl logic to handle when
//                 and if ne1112 and ne1022 can run.
// 03-08-95 kshaw  fixed from date error in 220 logic, at times
//                 it was being passed as zero.
// 07-20-95 kshaw  added ne1593 logic to verify that load
//                 has occured.
// -------- ------ --------------------------------------------
// 03-09-95 ngango y2k modifications- modified process NE0F-220
//                 Statement group NE0FS-FMAT-POST-MO and
//                 NE0FS-04.
// -------- ------ --------------------------------------------
// 05-03-99 dbrylv Changed the ne0f-220 because of a correspond
//                 ing change in io2640.
// -------- ------ --------------------------------------------
// *********************
Program NE0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NE00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  NE0FW01 NE0FW01; // record
  NE0FW02 NE0FW02; // record
  NEWREC NEWREC; // record
  NLXREC NLXREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VDSTRB01 VDSTRB01; // record
  VNESCO01 VNESCO01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NE0FT01; // table
  use NE0FT02; // table
  use XGPTBL; // table
  use XAUTBL; // table
  use XCTTBL; // table
  use YPYTBL {deleteAfterUse = yes}; // table
  use ZARTBL {deleteAfterUse = yes}; // table
  use NE0FM.NE0FM100,  // forms
      NE0FM.NE0FM200, 
      NE0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NE0F-000: NE0F-000();
    exit program;
  end // end main
end // end NE0F

// main flow
Function NE0F-000()
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* *   perform initialization, set application revision nbrs,**/
   /* *   then do main perform until done with application      **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  NLXREC.NLXCPROC = "NE0F-000";
  COMMAREA.CACURRAP = "NE0F";
  ;
  NE0F-001(); /* initilize the application*/
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/
  ;
  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NE0F-050(); /* process the application screen(s)*/
  end
  ;
  COMMAREA.CACURRAP = "NE0F";
  XPNL002();
  exit program;
end // end NE0F-000

// initialize application
Function NE0F-001()
  ;
  NLXREC.NLXCPROC = "NE0F-001";
  ;
  XSENTRY(); /* appl entry security*/
  XSSEGTR(); /* set segmented transaction id*/
  ;
   /* TEMP001;*/
  ;
  if (COMMAREA.CAFRMSYS != "NE") /* Check if SCO*/
    COMMAREA.CAUSERA = " ";
  else
    NEWREC.NEW-GROUP = COMMAREA.CAUSERA;
    if (NEWREC.NEW-MSG-NBR == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(NEWREC.NEW-MSG-NBR);
    end
    if (COMMAREA.CAFROMAP == "NE0P")
      if (NEWREC.NEW-MSG-NBR != 0) /* Error occured in NE0P submit.*/
        if (NEWREC.NEW-MSG-NBR == 9999)
          converseLib.validationFailed();
        else
          converseLib.validationFailed(NEWREC.NEW-MSG-NBR);
        end
      else
        converseLib.validationFailed(51); /* Report Submission message*/
      end
    end
  end
  ;
  ;
  set NE0FW01 empty; /* Clear Application Working Storage*/
  set NEWREC empty; /* Clear System Working Storage*/
  set NLXREC empty; /* clear common working storage*/
  set KUCREC empty; /* clear customer work record*/
  set SQLCA empty; /* clear sql area*/
  ;
  NLXREC.NLXSNAME[1] = "NE0FM100"; /* init screens used in this APP*/
  NLXREC.NLXSNAME[2] = "NE0FM200"; /* init screens used in this APP*/
  NLXREC.NLXCSCRN = "NE0FM100"; /* set first screen to display*/
  ;
  NE0FW-01-CT1 = 1;
  NE0FW-01-CT2 = 1;
  NE0FW-01FFL = "Y";
  NE0FW-01-PAGE-F = "N";
  ;
end // end NE0F-001

// Screen branch control
Function NE0F-050()
   /* -----------------------------------------------------------*/
   /* Control process the application screen(s)*/
  ;
   /* Note that this process is being performed in a*/
   /* "while loop" until the end-of-application flag is set*/
   /* to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0F-050"; /* set current process name*/
  ;
  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;
  ;
  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME)
     /* if current-screen-name is in the screen-array, then set*/
     /* the screen-index*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex;
  end
  ;
  NLXREC.NLXEOSF = "N"; /* Set end-of-screen flag to 'no'*/
  NLXREC.NLXBLDSC = "Y"; /* Set build screen flag to 'yes'*/
  NLXREC.NLXERRF = "N"; /* Clear error flag*/
  if (COMMAREA.CAFROMAP != "NE0P")
    converseLib.validationFailed(0);
  end
  ;
  if (NLXREC.NLXSCRNX == 1) /* If screen NE0FM100*/
    while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
      NE0F-100();
    end
  else
    if (NLXREC.NLXSCRNX == 2) /* If screen NE0FM200*/
      while (NLXREC.NLXEOSF == "N") /* While not end-of-screen*/
        NE0F-200();
      end
    end
  end
  ;
  ;
   /* at this point;*/
       /* if the end-of-application flag (nlxeoaf ) = 'n'*/
         /* the perform will return to the top of NE0F050...*/
       /* else*/
         /* the perform will auto return to NE0F000.*/
  ;
  ;
end // end NE0F-050

// header screen 1
Function NE0F-100()
   /* -----------------------------------------------------------*/
     /* Process screen NE0FM100*/
  ;
     /* note - this process is being performed in a*/
     /* "while loop" from NE0F050 until the end-of-screen*/
     /* flag (NLXEOSFL) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0F-100";
  ;
  NE0FW-01-PAGE-F = "N"; /* (re)set flag which indicates paging.*/
  ;
   /* COMMAREA.CACLVL(1) NE 'Y';*/
   /* ET NE0FM100.NE0FM-100SEL AUTOSKIP;*/
   /* ET NE0FM100.CATOAP CURSOR;*/
   /* OVE 17 TO EZEMNO;*/
   /* OVE 'Y' TO NLXREC.NLXERRF;*/
   /* ;*/
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0F-101();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0FM100 ;
  ;
  NE0FM100.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  NE0FW01.NE0FW-01SEL = NE0FM100.NE0FM-100SEL;
  set NE0FW02 empty;
  ;
  ;
  NE0F-110(); /* validate pf keys*/
  ;
  if (NLXREC.NLXERRF == "N" /* check for error*/
   && NE0FW-01-PAGE-F == "N") /* if just paging, don't execute.*/
    NE0F-120(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N" /* check for error*/
   && NE0FW-01-PAGE-F == "N") /* if just paging, don't execute.*/
    NE0F-130(); /* determine next action...*/
  end
  ;
  ;
end // end NE0F-100

// Build screen
Function NE0F-101()
   /* **************************************/
   /* Build MAP NE0FM100                  **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0F-101";
  ;
  converseLib.clearScreen();
  set NE0FM100 initial;
  ;
  NE0FM100.XXXRVNBR = "00"; /* revision nbr*/
  NE0FM100.XXXMAPNM = "NE0FM100"; /* map name*/
  NE0FM100.XXXPRCNM = "NE0F100"; /* process name*/
  NE0FM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  NLXITMX = 01;
  ;
  while (NLXITMX <= 13
   && NE0FT-01OPT[NLXITMX] != 99)
    NE0FM-100OPT[NLXITMX] = NE0FT-01OPT[NLXITMX];
    NE0FM-100RPT[NLXITMX] = NE0FT-01RPT[NLXITMX];
    NLXITMX = NLXITMX + 1;
  end
  ;
  ;
end // end NE0F-101

// Validate PF keys act on some
Function NE0F-110()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 1, 3, 4, 5*/
  ;
     /* Active PF keys: 1, 3, 4, and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0F-110";
  ;
  set NE0FM100.NE0FM-100SEL initialAttributes;
  set NE0FM100.CATOAP initialAttributes;
  set NE0FM100.CAITEM initialAttributes;
  ;
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0FM100.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0FM100.CATOAP;
      COMMAREA.CAITEM = NE0FM100.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0FM100.CAITEM cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is enter)
     /* Next Sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* Invalid pf key pressed.*/
    return;
  end
   /* ***********************************/
      /* check for help key option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSNLS01(); /* exit*/
  end
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "NE0A";
    XPNL002(); /* exit*/
    return;
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
  if (converseVar.eventKey is enter)
    return;
  end
  ;
  if (converseVar.eventKey is pf8 /* SCROLL DOWN AT END OF TABLE*/
   && NE0FT-01OPT[NLXITMX] == "99")
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(19); /* SET ERROR FLAG*/
  else
    if (converseVar.eventKey is pf7 /* SCROLL UP AT TOP OF TABLE*/
     && NLXITMX <= 14)             
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(20); /* SET ERROR FLAG*/
    end
  end
  ;
  if (NLXREC.NLXERRF != "Y")
    if (converseVar.eventKey is pf8
     || NE0FW-01FFL == "Y") /* first time through ???*/
      NE0FW-01-CT2 = 1;
      NE0FW-01-CT1 = NLXREC.NLXITMX;
      while (NE0FW-01-CT2 <= 13
       && NE0FT-01OPT[NE0FW-01-CT1] != "99")
        NE0FM-100OPT[NE0FW-01-CT2] = NE0FT-01OPT[NE0FW-01-CT1];
        NE0FM-100RPT[NE0FW-01-CT2] = NE0FT-01RPT[NE0FW-01-CT1];
        NE0FW-01NDX[NE0FW-01-CT2] = NE0FW-01-CT1;
        if (NE0FW-01FFL == "Y")
          move NE0FW-01-CT1 to NE0FW-01SIX withV60Compat; /* SAVE LAST INDEX*/
        end
        NE0FW-01-CT2 = NE0FW-01-CT2 + 1; /* increment screen index*/
        NE0FW-01-CT1 = NE0FW-01-CT1 + 1; /* increment table index*/
        NLXREC.NLXITMX = NE0FW-01-CT1;
      end
      while (NE0FW-01-CT2 <= 13)
        NE0FM-100OPT[NE0FW-01-CT2] = " ";
        NE0FM-100RPT[NE0FW-01-CT2] = " ";
        NE0FW-01-CT2 = NE0FW-01-CT2 + 1;
      end
      NE0FW-01FFL = "N";
      NE0FW-01-PAGE-F = "Y";
    end
    ;
    if (converseVar.eventKey is pf7
     && NLXREC.NLXERRF != "Y")
      NLXREC.NLXITMX = NE0FW-01NDX[1];
      NE0FW-01-CT1 = NE0FW-01NDX[1] - 1; /* set up table index*/
      NE0FW-01-CT2 = 13; /* set up screen index*/
      while (NE0FW-01-CT2 >= 1) /* load screen from top down.*/
        NE0FM-100OPT[NE0FW-01-CT2] = NE0FT-01OPT[NE0FW-01-CT1];
        NE0FM-100RPT[NE0FW-01-CT2] = NE0FT-01RPT[NE0FW-01-CT1];
        NE0FW-01NDX[NE0FW-01-CT2] = NE0FW-01-CT1;
        NE0FW-01-CT2 = NE0FW-01-CT2 - 1; /* screen index*/
        NE0FW-01-CT1 = NE0FW-01-CT1 - 1; /* table index*/
        set NE0FM-100SEL normal;
      end
      if (NE0FW-01-CT1 < 1)
        NE0FW-01-CT1 = 1;
      end
      NE0FW-01-PAGE-F = "Y";
    end
    ;
  end
  ;
end // end NE0F-110

// Edit/Act on Entered order id
Function NE0F-120()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0F-120";
  ;
  if (NE0FM100.NE0FM-100SEL == "01"
   || NE0FM100.NE0FM-100SEL == "1 "
   || NE0FM100.NE0FM-100SEL == " 1")
    NE0FM100.NE0FM-100SEL = "01";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "02"
   || NE0FM100.NE0FM-100SEL == "2 "
   || NE0FM100.NE0FM-100SEL == " 2")
    NE0FM100.NE0FM-100SEL = "02";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "03"
   || NE0FM100.NE0FM-100SEL == "3 "
   || NE0FM100.NE0FM-100SEL == " 3")
    NE0FM100.NE0FM-100SEL = "03";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "04"
   || NE0FM100.NE0FM-100SEL == "4 "
   || NE0FM100.NE0FM-100SEL == " 4")
    NE0FM100.NE0FM-100SEL = "04";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "05"
   || NE0FM100.NE0FM-100SEL == "5 "
   || NE0FM100.NE0FM-100SEL == " 5")
    NE0FM100.NE0FM-100SEL = "05";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "06"
   || NE0FM100.NE0FM-100SEL == "6 "
   || NE0FM100.NE0FM-100SEL == " 6")
    NE0FM100.NE0FM-100SEL = "06";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "07"
   || NE0FM100.NE0FM-100SEL == "7 "
   || NE0FM100.NE0FM-100SEL == " 7")
    NE0FM100.NE0FM-100SEL = "07";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "08"
   || NE0FM100.NE0FM-100SEL == "8 "
   || NE0FM100.NE0FM-100SEL == " 8")
    NE0FM100.NE0FM-100SEL = "08";
  end
  ;
  if (NE0FM100.NE0FM-100SEL == "09"
   || NE0FM100.NE0FM-100SEL == "9 "
   || NE0FM100.NE0FM-100SEL == " 9")
    NE0FM100.NE0FM-100SEL = "09";
  end
  ;
   /* FIND THE OCCURENCE OF NE0FM-100SEL IN NE0FT-01OPT*/
   /* SET NE0FW-01PRM-F TO VALUE FOR SELECTION IF FOUND IN TABLE*/
  if (NE0FM-100SEL in NE0FT01.NE0FT-01OPT)
    NE0FW-01PRM-F = NE0FT01.NE0FT-01PRM-F[sysVar.arrayIndex];
  end
  ;
  if (sysVar.arrayIndex == 0) /* SELECTION NOT FOUND IN OPTION COLUMN*/
    NLXREC.NLXERRF = "Y";
    set NE0FM100.NE0FM-100SEL cursor, bold, modified;
    converseLib.validationFailed(55);
    return;
  else /* IF FOUND, MOVE INDEX TO WORK RECORD*/
    NE0FW-01INX = sysVar.arrayIndex;
  end
   /* here is the security check*/
  NE0FW-01-REQ-SECURITY = NE0FT-01-SECURITY[NE0FW-01INX];
  if (COMMAREA.CACLVL[NE0FW-01-REQ-SECURITY] != "Y")
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(181);
    return;
  end
  ;
  NE0FS-FMAT-POST-MO();
  ;
  if (NE0FT-01JCL[NE0FW-01INX] == "NE1022")
    set VNESCO01 empty;
    NE0FS-S-VNESCO01();
    if (SQLCA.VAGen_SQLCODE == 0)
      if (VNESCO01.NE-GL-POST-MO == NE0FW-01-GL-CCYYMM)
        if (VNESCO01.NE-STAT-CD == 00)
          VNESCO01.NE-STAT-CD = "01";
          NE0FS-U-VNESCO01();
        else
          NLXREC.NLXERRF = "Y";
          converseLib.validationFailed(187); /* costs load can only run once in a*/
                                   /* month*/
          return;
        end
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(186); /* costs extract must run b-4 costs load*/
        return;
      end
    else
      TA1REC.TA1LOCAT[2] = "S     ";
      TA1REC.TA1LOCAT[3] = "IO6988";
      TA1REC.TA1DBASE = "DNILO ";
      TA1REC.TA1TBLVU = "VNESCO01";
      XPNL005();
    end
  end
  ;
  if (NE0FT-01JCL[NE0FW-01INX] == "NE1112")
    set VNESCO01 empty;
    NE0FS-S-VNESCO01();
    if (SQLCA.VAGen_SQLCODE == 0)
      if (VNESCO01.NE-GL-POST-MO < NE0FW-01-GL-CCYYMM)
        NE0FS-D-VNESCO01();
        set VNESCO01 empty;
        VNESCO01.NE-STAT-CD = "00";
        VNESCO01.NE-GL-POST-MO = NE0FW-01-GL-CCYYMM;
        NE0FS-A-VNESCO01();
      else
        NLXREC.NLXERRF = "Y";
        converseLib.validationFailed(188); /* costs extract can only run once a*/
                                   /* month*/
        return;
      end
    else
      VNESCO01.NE-STAT-CD = "00";
      VNESCO01.NE-GL-POST-MO = NE0FW-01-GL-CCYYMM;
      NE0FS-A-VNESCO01();
    end
  end
  ;
  if (NE0FT-01TYP-F[NE0FW-01INX] == "Y")
    NE0FW02.NEW-RECORD-TYPE = NE0FT-01-RTYPE[NE0FW-01INX];
  end
  ;
  converseLib.clearScreen();
  
  ;
end // end NE0F-120

// Determine next action
Function NE0F-130()
   /* **************************************/
   /* Determine next action for map 100 logic*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NE0F-130";
  ;
   /* ***********************************/
      /* check for Enter*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is enter)
    if (NE0FW-01PRM-F == "Y") /* additional parms needed*/
      NLXREC.NLXCSCRN = "NE0FM200"; /* go on to map200*/
      NLXREC.NLXEOSF = "Y"; /* done with map100*/
    else
      ;
      XX0XS01();
      NE0FW-01-CCYYMM = XX0XW01.XX0XWCYM;
      NE0FW-01-MONTH = NE0FW-01-MONTH - 1;
      if (NE0FW-01-MONTH == 0)
        NE0FW-01-MONTH = 12;
        NE0FW-01-CCYY = NE0FW-01-CCYY - 1;
      end
      NE0FW02.NEW-FROM-DATE = NE0FW-01-CCYYMM;
      NE0FW02.NEW-TO-DATE = NE0FW-01-CCYYMM;
      ;
      NE0FS-02(); /* Submit report jcl*/
      ;
    end
  end
  ;
end // end NE0F-130

// parm detail screen
Function NE0F-200()
   /* -----------------------------------------------------------*/
     /* Process screen NE0FM200*/
  ;
     /* note - this process is being performed in a*/
     /* "while loop" from NE0F050 until the end-of-screen*/
     /* flag (NLXEOSFL) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0F-200";
  ;
  NE0FW-01PF12 = "N"; /* reset edit key flag field.*/
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NE0F-201();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  converse NE0FM200 ;
  ;
  NE0FM200.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
   /* SET NE0FW02 EMPTY;*/
  ;
  NE0F-210(); /* validate pf keys*/
  ;
  if (NLXREC.NLXEOSF == "Y")
    return;
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0F-220(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NE0F-230(); /* determine next action...*/
  end
  ;
  ;
end // end NE0F-200

// Build screen
Function NE0F-201()
   /* **************************************/
   /* Build MAP NE0FM200                  **/
   /* **************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0F-201";
  ;
  converseLib.clearScreen();
  set NE0FM200 initial;
  ;
  NE0FM200.XXXRVNBR = "00"; /* revision nbr*/
  NE0FM200.XXXMAPNM = "NE0FM200"; /* map name*/
  NE0FM200.XXXPRCNM = "NE0F200"; /* process name*/
  NE0FM200.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  NE0FM200.NE0FM-200SEL = NE0FT01.NE0FT-01OPT[NE0FW-01INX];
  NE0FM200.NE0FM-200RPT = NE0FT01.NE0FT-01RPT[NE0FW-01INX];
  ;
  if (NE0FT-01DTE-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200LBLDT skip, invisible;
    set NE0FM200.NE0FM-200BEGDT-TXT skip, invisible;
    set NE0FM200.NE0FM-200ENDDT-TXT skip, invisible;
    set NE0FM200.NE0FM-200BEGDT skip, invisible;
    set NE0FM200.NE0FM-200ENDDT skip, invisible;
  else
    NE0FS-04(); /* set map200 default dates*/
  end
  ;
  if (NE0FT-01XGP-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200XGP-TXT skip, invisible;
    set NE0FM200.XGPCD skip, invisible;
    set NE0FM200.XGPDESC skip, invisible;
  end
  ;
  if (NE0FT-01ZAR-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200ZAR-TXT skip, invisible;
    set NE0FM200.ZARCD skip, invisible;
    set NE0FM200.ZARDESC skip, invisible;
  end
  ;
  if (NE0FT-01MGT-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200MGT-TXT skip, invisible;
    set NE0FM200.NE0FM-200MGT-CD skip, invisible;
    set NE0FM200.NE0FM-200MGT-DESC skip, invisible;
  end
  ;
  if (NE0FT-01XAU-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200XAU-TXT skip, invisible;
    set NE0FM200.XAUCD skip, invisible;
    set NE0FM200.XAUDESC skip, invisible;
  end
  ;
  if (NE0FT-01XCT-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200XCT-TXT skip, invisible;
    set NE0FM200.XCTCD skip, invisible;
    set NE0FM200.XCTDESC skip, invisible;
  end
  ;
  if (NE0FT-01CUS-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200CUS-TXT skip, invisible;
    set NE0FM200.KUCCOID skip, invisible;
    set NE0FM200.KUCCONM skip, invisible;
  end
  ;
  if (NE0FT-01YPY-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200-YPYLBL skip, invisible;
    set NE0FM200.NE0FM-200-YPYCD skip, invisible;
    set NE0FM200.NE0FM-200-YPYDESC skip, invisible;
  end
  ;
  if (NE0FT-01ACR-F[NE0FW-01INX] == "N") /* acrual type flag.*/
    set NE0FM200.NE0FM-200-RTYPLBL skip, invisible;
    set NE0FM200.NE0FM-200-RTYPCD skip, invisible;
    set NE0FM200.NE0FM-200-RTYPDESC skip, invisible;
  end
  ;
  if (NE0FT-01TRN-F[NE0FW-01INX] == "N")
    set NE0FM200.NE0FM-200-TRNLBL skip, invisible;
    set NE0FM200.NE0FM-200-TRNCD skip, invisible;
  end
                 /* SELECT FIRST FIELD AND SET CURSOR BASED ON FLAGS*/
  if (NE0FT-01XGP-F[NE0FW-01INX] == "Y")
    set NE0FM200.XGPCD cursor;
  else
    if (NE0FT-01ZAR-F[NE0FW-01INX] == "Y")
      set NE0FM200.ZARCD cursor;
    else
      if (NE0FT-01MGT-F[NE0FW-01INX] == "Y")
        set NE0FM200.NE0FM-200MGT-CD cursor;
      else
        if (NE0FT-01XAU-F[NE0FW-01INX] == "Y")
          set NE0FM200.XAUCD cursor;
        else
          if (NE0FT-01XCT-F[NE0FW-01INX] == "Y")
            set NE0FM200.XCTCD cursor;
          else
            if (NE0FT-01CUS-F[NE0FW-01INX] == "Y")
              set NE0FM200.KUCCOID cursor;
            else
              if (NE0FT-01TYP-F[NE0FW-01INX] == "Y")
                set NE0FM200.NE0FM-200-RTYPCD cursor;
              else
                if (NE0FT-01YPY-F[NE0FW-01INX] == "Y")
                  set NE0FM200.NE0FM-200-YPYCD cursor;
                else
                  if (NE0FT-01TRN-F[NE0FW-01INX] == "Y")
                    set NE0FM200.NE0FM-200-TRNCD cursor;
                  else
                    set NE0FM200.CATOAP cursor;
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  ;
end // end NE0F-201

// Validate PF keys act on some
Function NE0F-210()
   /* -----------------------------------------------------------*/
     /* Validate PF keys; act on 3, 4, 12*/
  ;
     /* Active PF keys: 3, 4, 12 and Enter*/
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NE0F-210";
  ;
  set NE0FM200.CATOAP initialAttributes;
  set NE0FM200.CAITEM initialAttributes;
  ;
  if (converseVar.eventKey is pf3)
    NLXREC.NLXCSCRN = "NE0FM100";
    NLXREC.NLXEOSF = "Y";
    converseLib.validationFailed(0);
    return;
  end
  ;
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf12
   || converseVar.eventKey is enter)
     /* Next Sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* Invalid pf key pressed.*/
    return;
  end
   /* ***********************************/
      /* check for fastpath option/item*/
   /* ***********************************/
  ;
  if (NE0FM200.CATOAP != " ") /* if fastpath option entered,*/
    if (converseVar.eventKey is enter)
      COMMAREA.CATOAP = NE0FM200.CATOAP;
      COMMAREA.CAITEM = NE0FM200.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
      set NE0FM200.CAITEM cursor, bold; /* exit failed*/
      return;
    end
  end
  ;
   /* ***********************************/
      /* check for previous level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf3)
    NLXREC.NLXEOSF = "Y";
    NLXREC.NLXCSCRN = "NE0FM100";
    return;
  end
  ;
   /* ***********************************/
      /* check for previous master level option*/
   /* ***********************************/
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " "; /* exit*/
    XSPF4();
  end
  ;
   /* ***********************************/
      /* check for edit key option*/
   /* ***********************************/
  if (converseVar.eventKey is pf12) /* edit key pressed, set edit flag.*/
    NE0FW-01PF12 = "Y";
    return;
  end
  ;
  if (converseVar.eventKey is enter)
    return;
  end
  ;
  NLXREC.NLXERRF = "Y"; /* invalid Pf key*/
  converseLib.validationFailed(2);
  ;
  ;
end // end NE0F-210

// Validate Map200 entries
Function NE0F-220()
   /* ************************************/
   /* Edit Screen Entries*/
   /* ************************************/
  ;
  NLXREC.NLXCPROC = "NE0F-220";
  ;
  NE0FW02.NEW-REPORT-REQUEST = NE0FM-100SEL;
  ;
   /* ************************************/
   /* Validate accrual type entry.*/
   /* ************************************/
  if (NE0FT01.NE0FT-01ACR-F[NE0FW-01INX] == "Y") /* If Field is required*/
    set NE0FM-200-RTYPCD initialAttributes;
    if (NE0FM-200-RTYPCD != "CS"
     && NE0FM-200-RTYPCD != "SL"
     && NE0FM-200-RTYPCD != "IN"
     && NE0FM-200-RTYPCD != " ")
      set NE0FM-200-RTYPCD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(166);
    else
      NE0FW02.NE-ACR-TYP-CD = NE0FM-200-RTYPCD;
    end
  end
  ;
   /* ************************************/
   /* Validate transaction type code (debit-credit)*/
   /* ************************************/
  if (NE0FT01.NE0FT-01TRN-F[NE0FW-01INX] == "Y") /* If Field is required*/
    set NE0FM-200-TRNCD initialAttributes;
    if (NE0FM-200-TRNCD != "CR"
     && NE0FM-200-TRNCD != "DB"
     && NE0FM-200-TRNCD != " ")
      set NE0FM-200-TRNCD cursor, modified, bold;
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(166);
    else
      NE0FW02.NEW-TRAN-DEBIT-CREDIT = NE0FM-200-TRNCD;
    end
  end
  ;
   /* ************************************/
   /* Validate Payment type Code*/
   /* ************************************/
  if (NE0FT01.NE0FT-01YPY-F[NE0FW-01INX] == "Y") /* If Field is required*/
    set NE0FM200.NE0FM-200-YPYCD initialAttributes;
    if (NE0FM-200-YPYCD == "?")
      XPXX001();
      NLXREC.NLXERRF = "Y";
      XX0XW02.XX0XWHDR = "PAYMENT TYPE"; /* pop-up heading*/
      while (XX0XW02.XX0XWEND == "N") /* until end of request*/
        XPYPY01(); /* display the list*/
      end
      if (XX0XW02.XX0XWPIX != 0) /* selection was made*/
        set NE0FM200.NE0FM-200-YPYCD initialAttributes;
        NE0FM200.NE0FM-200-YPYCD = YPYTBL.YPYCD[XX0XWPIX];
        NE0FM200.NE0FM-200-YPYDESC = YPYTBL.YPYDESC[XX0XWPIX];
        NE0FW02.YPYCD = NE0FM200.NE0FM-200-YPYCD;
      else
        NE0FM200.NE0FM-200-YPYDESC = " ";
      end
      set NE0FM200.NE0FM-200-YPYCD cursor;
    end /* Validate entered Payment Type*/
    if (NE0FM200.NE0FM-200-YPYCD != " ")
      if (NE0FM200.NE0FM-200-YPYCD in YPYTBL.YPYCD
       && NE0FM-200-YPYCD != "99")
        set NE0FM200.NE0FM-200-YPYCD initialAttributes;
        NE0FW02.YPYCD = NE0FM-200-YPYCD;
        NE0FM200.NE0FM-200-YPYDESC = YPYTBL.YPYDESC[sysVar.arrayIndex];
      else
        set NE0FM200.NE0FM-200-YPYCD cursor, modified, bold;
        converseLib.validationFailed(166); /* invalid payment method.*/
        NLXREC.NLXERRF = "Y";
        NE0FM200.NE0FM-200-YPYDESC = " ";
      end
    else /* Empty field - no entry.*/
      set NE0FM200.NE0FM-200-YPYCD initialAttributes;
      NE0FW02.YPYCD = NE0FM200.NE0FM-200-YPYCD;
      NE0FM200.NE0FM-200-YPYDESC = " ";
    end
  end
  ;
   /* ************************************/
   /* Check Customer number entry*/
   /* ************************************/
  if (NE0FT01.NE0FT-01CUS-F[NE0FW-01INX] == "Y") /* If field is requested*/
    set NE0FM200.KUCCOID initialAttributes;
    if (NE0FM200.KUCCOID != 0) /* If Customer Number was entered...*/
      KUCREC.KUCCOID = NE0FM200.KUCCOID;
      ;
      NE0FS-S-VCMPNY01(); /* execute IOMod select on kuccoid.*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0)
        if (KUCREC.XAUCD == "31"
         || KUCREC.XAUCD == "32"
         || KUCREC.XAUCD == "33")
          set NE0FM200.KUCCOID initialAttributes;
          NE0FW02.KUCCOID = KUCREC.KUCCOID; /* Save Customer No.*/
          NE0FM200.KUCCONM = KUCREC.KUCCONM; /* Display Cust. Nm*/
        else
          set NE0FM200.KUCCOID cursor, modified, bold;
          converseLib.validationFailed(54); /* Customer in wrong Account Class*/
          NLXREC.NLXERRF = "Y";
          NE0FM200.KUCCONM = KUCREC.KUCCONM; /* Display Cust. Name*/
        end
      else
        if (SQLCA.VAGen_SQLCODE == 100) /* Customer not found*/
          set NE0FM200.KUCCOID cursor, modified, bold;
          converseLib.validationFailed(53);
          NLXREC.NLXERRF = "Y";
          NE0FM200.KUCCONM = " "; /* Blank out NAME field on Map200*/
        end
      end
    else /* Nothing was entered in Customer*/
                                   /* Number field*/
      set NE0FM200.KUCCOID initialAttributes;
      NE0FW02.KUCCOID = NE0FM200.KUCCOID; /* Save Customer Number*/
      NE0FM200.KUCCONM = " ";
    end
  end
  ;
   /* ************************************/
   /* Validate Country Code*/
   /* ************************************/
  if (NE0FT01.NE0FT-01XCT-F[NE0FW-01INX] == "Y") /* If Country is Requested*/
    set NE0FM200.XCTCD initialAttributes;
    if (NE0FM200.XCTCD == "?") /* Country Popup Requested*/
      XPXX001();
      NLXREC.NLXERRF = "Y";
      XX0XW02.XX0XWHDR = "CTRY CODE"; /* HEADING*/
      while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
        XPXCT01(); /* DISPLAY THE LIST*/
      end
      if (XX0XW02.XX0XWPIX != 0) /* SELECTION MADE*/
        set NE0FM200.XCTCD initialAttributes;
        NE0FM200.XCTCD = XCTTBL.XCTCD[XX0XWPIX];
        NE0FM200.XCTDESC = XCTTBL.XCTDESC[XX0XWPIX];
        NE0FW02.XCTCD = NE0FM200.XCTCD;
      else
        NE0FM200.XCTDESC = " ";
      end
      set NE0FM200.XCTCD cursor;
    end
    if (NE0FM200.XCTCD != " ")
      if (NE0FM200.XCTCD in XCTTBL.XCTCD
       && NE0FM200.XCTCD != "99"
       && NE0FM200.XCTCD != "00")
        set NE0FM200.XCTCD initialAttributes;
        NE0FW02.XCTCD = NE0FM200.XCTCD;
        NE0FM200.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
      else
        set NE0FM200.XCTCD cursor, modified, bold;
        NE0FM200.XCTDESC = " ";
        converseLib.validationFailed(49);
        NLXREC.NLXERRF = "Y";
      end
    else /* No Country Code entered - field is*/
                                   /* blank.*/
      set NE0FM200.XCTCD initialAttributes;
      NE0FM200.XCTDESC = " ";
      NE0FW02.XCTCD = NE0FM200.XCTCD;
    end
  end
  ;
   /* ************************************/
   /* Validate Account Class Code*/
   /* ************************************/
  if (NE0FT01.NE0FT-01XAU-F[NE0FW-01INX] == "Y") /* IF FIELD IS REQUIRED*/
    set NE0FM200.XAUCD initialAttributes;
    if (NE0FM200.XAUCD == "?") /* ACCOUNT POPUP REQUESTD*/
      XPXX001();
      NLXREC.NLXERRF = "Y";
      XX0XW02.XX0XWHDR = "ACCT CLASS"; /* HEADING*/
      while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
        XPXAU01(); /* DISPLAY THE LIST*/
      end
      if (XX0XW02.XX0XWPIX != 0) /* SELECTION MADE*/
        set NE0FM200.XAUCD initialAttributes;
        NE0FM200.XAUCD = XAUTBL.XAUCD[XX0XWPIX];
        NE0FM200.XAUDESC = XAUTBL.XAUDESC[XX0XWPIX];
        NE0FW02.XAUCD = NE0FM200.XAUCD;
      else
        NE0FM200.XAUDESC = " ";
      end
      set NE0FM200.XAUCD cursor;
    end /* Validate entered ACCOUNT CLASS*/
    if (NE0FM200.XAUCD != " ")
      if (NE0FM200.XAUCD in XAUTBL.XAUCD
       && NE0FM200.XAUCD != "99")
        if (NE0FM200.XAUCD == 31
         || NE0FM200.XAUCD == 32
         || NE0FM200.XAUCD == 33)
          set NE0FM200.XAUCD initialAttributes;
          NE0FW02.XAUCD = NE0FM200.XAUCD;
          NE0FM200.XAUDESC = XAUTBL.XAUDESC[sysVar.arrayIndex];
        else
          set NE0FM200.XAUCD cursor, modified, bold;
          converseLib.validationFailed(56); /* Account Class not used by SCO*/
          NLXREC.NLXERRF = "Y";
          NE0FM200.XAUDESC = XAUTBL.XAUDESC[sysVar.arrayIndex];
        end
      else
        set NE0FM200.XAUCD cursor, modified, bold;
        converseLib.validationFailed(48); /* Invalid Account Class*/
        NLXREC.NLXERRF = "Y";
        NE0FM200.XAUDESC = " ";
      end
    else /* Empty field - no entry.*/
      set NE0FM200.XAUCD initialAttributes;
      NE0FW02.XAUCD = NE0FM200.XAUCD;
      NE0FM200.XAUDESC = " ";
    end
  end
  ;
   /* --------------------------------------*/
   /* VALIDATE MANAGEMENT REGION*/
   /* --------------------------------------*/
  if (NE0FT01.NE0FT-01MGT-F[NE0FW-01INX] == "Y") /* IF FIELD IS REQUIRED*/
    set NE0FM200.NE0FM-200MGT-CD initialAttributes;
    if (NE0FM200.NE0FM-200MGT-CD == "?") /* MGT POPUP REQUESTED*/
      XPXX001();
      NLXREC.NLXERRF = "Y";
      XX0XW02.XX0XWHDR = "  MGT REG"; /* HEADING*/
      while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
        NE0F-221(); /* DISPLAY THE LIST*/
      end
      if (XX0XW02.XX0XWPIX != 0) /* NO SELECTION MADE*/
        NE0FM-200MGT-CD = NE0FT02.NE0FT-02MGT-CD[XX0XWPIX];
        NE0FM-200MGT-DESC = NE0FT02.NE0FT-02MGT-DESC[XX0XWPIX];
      else
        NE0FM-200MGT-DESC = " ";
      end
      set NE0FM-200MGT-CD cursor;
    end /* MGT REGION WAS ENTERED*/
    if (NE0FM-200MGT-CD != " ")
      if (NE0FM-200MGT-CD in NE0FT02.NE0FT-02MGT-CD
       && NE0FM-200MGT-CD != "99")
        set NE0FM-200MGT-CD initialAttributes;
        move NE0FT-02MGT-CD to NE0FW-01MGT-CD withV60Compat;
        NE0FM200.NE0FM-200MGT-DESC = NE0FT-02MGT-DESC[sysVar.arrayIndex];
      else
        converseLib.validationFailed(50); /* MGT code not found in region table*/
        NLXREC.NLXERRF = "Y";
        NE0FM-200MGT-DESC = " ";
        set NE0FM200.NE0FM-200MGT-CD cursor, modified, bold;
      end
    else /* Blank field - no entry made*/
      set NE0FM200.NE0FM-200MGT-CD initialAttributes;
      move NE0FM-200MGT-CD to NE0FW-01MGT-CD withV60Compat;
      NE0FM-200MGT-DESC = " ";
    end
  end
  ;
   /* ************************************/
   /* Validate accounting region*/
   /* ************************************/
  if (NE0FT01.NE0FT-01ZAR-F[NE0FW-01INX] == "Y") /* If this field required*/
    set NE0FM200.ZARCD initialAttributes;
    if (NE0FM200.ZARCD == "?") /* GPC POPUP REQUESTED*/
      XPXX001();
      NLXREC.NLXERRF = "Y";
      XX0XW02.XX0XWHDR = " ACCT REGN:"; /* HEADING*/
      while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
        XPZAR01(); /* DISPLAY THE LIST*/
      end
      if (XX0XW02.XX0XWPIX != 0) /* SELECTION MADE*/
        NE0FM200.ZARCD = ZARTBL.ZARCD[XX0XWPIX];
        NE0FM200.ZARDESC = ZARTBL.ZARDESC[XX0XWPIX];
      else
        NE0FM200.ZARDESC = " ";
      end
    end /* Validate entered zar code.*/
    if (NE0FM200.ZARCD != " ")
      if (NE0FM200.ZARCD in ZARTBL.ZARCD)
        NE0FM200.ZARDESC = ZARTBL.ZARDESC[sysVar.arrayIndex];
        set NE0FM200.ZARCD initialAttributes;
        NE0FW02.ZARCD = NE0FM200.ZARCD;
      else
        converseLib.validationFailed(184); /* Invalid zar entered.*/
        NLXREC.NLXERRF = "Y";
        NE0FM200.ZARDESC = " ";
        set NE0FM200.ZARCD cursor, modified, bold;
      end
    else /* No entry in GPC field.*/
      NE0FW02.ZARCD = NE0FM200.ZARCD;
      NE0FM200.ZARDESC = " ";
    end
  end
  ;
   /* ************************************/
   /* Validate General Product Category*/
   /* ************************************/
  if (NE0FT01.NE0FT-01XGP-F[NE0FW-01INX] == "Y") /* If this field required*/
    set NE0FM200.XGPCD initialAttributes;
    if (NE0FM200.XGPCD == "?") /* GPC POPUP REQUESTED*/
      XPXX001();
      NLXREC.NLXERRF = "Y";
      XX0XW02.XX0XWHDR = " GPC CODE"; /* HEADING*/
      while (XX0XW02.XX0XWEND == "N") /* UNTIL END OF REQUEST*/
        XPXGP01(); /* DISPLAY THE LIST*/
      end
      if (XX0XW02.XX0XWPIX != 0) /* SELECTION MADE*/
        NE0FM200.XGPCD = XGPTBL.XGPCD[XX0XWPIX];
        NE0FM200.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX];
      else
        NE0FM200.XGPDESC = " ";
      end
    end /* Validate entered GPC code.*/
    if (NE0FM200.XGPCD != " ")
      if (NE0FM200.XGPCD in XGPTBL.XGPCD)
        NE0FM200.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        if (NE0FM200.XGPCD == "02"
         || NE0FM200.XGPCD == "03")
          set NE0FM200.XGPCD initialAttributes;
          NE0FW02.XGPCD = NE0FM200.XGPCD;
        else
          converseLib.validationFailed(81); /* Not GPC 02 or 03*/
          NLXREC.NLXERRF = "Y";
          set NE0FM200.XGPCD cursor, modified, bold;
        end
      else
        converseLib.validationFailed(47); /* Invalid GPC entered.*/
        NLXREC.NLXERRF = "Y";
        NE0FM200.XGPDESC = " ";
        set NE0FM200.XGPCD cursor, modified, bold;
      end
    else /* No entry in GPC field.*/
      NE0FW02.XGPCD = NE0FM200.XGPCD;
      NE0FM200.XGPDESC = " ";
    end
  end
  ;
  if (NE0FT01.NE0FT-01DTE-F[NE0FW-01INX] == "Y")
    set NE0FM200.NE0FM-200BEGDT initialAttributes;
    set NE0FM200.NE0FM-200ENDDT initialAttributes;
    ;
    /* ************************************/
    /* Validate ending date*/
    /* ************************************/
    if (NE0FM200.NE0FM-200ENDDT == 0
     && NE0FM200.NE0FM-200BEGDT != 0)
      move NE0FM-200BEGDT to NE0FM-200ENDDT withV60Compat;
    end
    ;
    if (NE0FM200.NE0FM-200ENDDT != 0)
      /*  */
      /* ------------- y2k out begin -----*/
      /*  */
      /* MOVE 0 TO NE0FW-01DT4;*/
      /* MOVE NE0FM200.NE0FM-200ENDDT TO NE0FW01.NE0FW-01DT4;*/
      /*  */
      /* ------------- y2k out end -------*/
      /*  */
      /*  */
      /* ------------- y2k in  begin -----*/
      /*  */
      NE0FW-01DT4-YYMM = 0;
      NE0FW01.NE0FW-01DT4-YYMM = NE0FM200.NE0FM-200ENDDT;
      /*  */
      /* ------------- y2k in  end -------*/
      /*  */
      ;
      NE0FS-03(); /* Perform date validation;*/
      ;
      if (NLXREC.NLXVALDT == "N")
        set NE0FM200.NE0FM-200ENDDT cursor, modified, bold;
      else
        /*  */
        /* ------------- y2k out begin -----*/
        /*  */
        /* IF NE0FW01.NE0FW-01DT4 > NE0FW-01-GL-YYMM;*/
          /*  */
          /* ------------- y2k out end -------*/
          /*  */
        /*  */
        /* ------------- y2k in  begin -----*/
        /*  */
        NE0FW01.NE0FW-BEGIN-YYMM = NE0FW01.NE0FW-01DT4-YYMM;
        if (NE0FW01.NE0FW-BEGIN-YYMM > 6000)
          NE0FW01.NE0FW-BEGIN-CC = 19;
        else
          NE0FW01.NE0FW-BEGIN-CC = 20;
        end
        NE0FW01.NE0FW-END-YYMM = NE0FW01.NE0FW-01-GL-YYMM;
        if (NE0FW01.NE0FW-END-YYMM > 6000)
          NE0FW01.NE0FW-END-CC = 19;
        else
          NE0FW01.NE0FW-END-CC = 20;
        end
        if (NE0FW01.NE0FW-BEGIN-CCYYMM > NE0FW01.NE0FW-END-CCYYMM)
          /*  */
          /* ------------- y2k in  end -------*/
          /*  */
          set NE0FM200.NE0FM-200ENDDT cursor, modified, bold;
          NLXREC.NLXERRF = "Y";
          converseLib.validationFailed(190);
        else
          NE0FW-01EDT = NLXREC.XXXWCYMD; /* Move valid dt to wrec.*/
          NE0FW02.NEW-TO-DATE = NE0FW-01ECCYYMM;
          set NE0FM200.NE0FM-200ENDDT initialAttributes;
        end
      end
    end
    ;
    /* ************************************/
    /* Validate beginning date*/
    /* ************************************/
    if (NE0FM200.NE0FM-200BEGDT != 0)
      /*  */
      /* ------------- y2k out begin -----*/
      /*  */
      /* MOVE 0 TO NE0FW-01DT4;*/
      /* MOVE NE0FM200.NE0FM-200BEGDT TO NE0FW01.NE0FW-01DT4;*/
      /*  */
      /* ------------- y2k out end   -------*/
      /*  */
      /*  */
      /* ------------- y2k in  begin -----*/
      /*  */
      NE0FW-01DT4-YYMM = 0;
      NE0FW01.NE0FW-01DT4-YYMM = NE0FM200.NE0FM-200BEGDT;
      /*  */
      /* ------------- y2k in  end     -------*/
      /*  */
      ;
      NE0FS-03(); /* Perform date validation;*/
      ;
      if (NLXREC.NLXVALDT == "N") /* Date was invalid*/
        set NE0FM-200BEGDT cursor, modified, bold;
      else
            /*  */
            /* ------------- y2k out begin ------*/
            /*  */
        /* IF NE0FW01.NE0FW-01DT4 < 9312;*/
            /*  */
            /* ------------- y2k out end --------*/
            /*  */
            /*  */
            /* ------------- y2k in begin ------*/
            /*  */
        if (NE0FW01.NE0FW-01DT4-YYMM > 6000)
          NE0FW01.NE0FW-01DT4-CC = 19;
        else
          NE0FW01.NE0FW-01DT4-CC = 20;
        end
        if (NE0FW01.NE0FW-01DT4-CCYYMM < 199312)
            /*  */
            /* ------------- y2k in  end -------*/
            /*  */
          set NE0FM-200BEGDT cursor, modified, bold;
          NLXREC.NLXERRF = "Y";
          converseLib.validationFailed(58);
        else
          /*  */
          /* ------------- y2k out begin -----*/
          /*  */
                                  /* IF NE0FW01.NE0FW-01DT4 >*/
                                   /* NE0FW-01-GL-YYMM;/* date out of range*/
          /*  */
          /* ------------- y2k out end -------*/
          /*  */
          /*  */
          /* ------------- y2k in  begin -----*/
          /*  */
          NE0FW01.NE0FW-BEGIN-YYMM = NE0FW01.NE0FW-01DT4-YYMM;
          if (NE0FW01.NE0FW-BEGIN-YYMM > 6000)
            NE0FW01.NE0FW-BEGIN-CC = 19;
          else
            NE0FW01.NE0FW-BEGIN-CC = 20;
          end
          NE0FW01.NE0FW-END-YYMM = NE0FW01.NE0FW-01-GL-YYMM;
          if (NE0FW01.NE0FW-END-YYMM > 6000)
            NE0FW01.NE0FW-END-CC = 19;
          else
            NE0FW01.NE0FW-END-CC = 20;
          end
          if (NE0FW01.NE0FW-BEGIN-CCYYMM > NE0FW01.NE0FW-END-CCYYMM)
            /*  */
            /* ------------- y2k in  end -------*/
            /*  */
            set NE0FM-200BEGDT cursor, modified, bold;
            NLXREC.NLXERRF = "Y";
            converseLib.validationFailed(190);
          else
            /*  */
            /* ------------- y2k out begin ------*/
            /*  */
            /* IF NE0FW01.NE0FW-01DT4 < 9412;*/
            /*  */
            /* ------------- y2k out end -------*/
            /*  */
            /*  */
            /* ------------- y2k in begin ------*/
            /*  */
            if (NE0FW01.NE0FW-01DT4-YYMM > 6000)
              NE0FW01.NE0FW-01DT4-CC = 19;
            else
              NE0FW01.NE0FW-01DT4-CC = 20;
            end
            if (NE0FW01.NE0FW-01DT4-CCYYMM < 199412)
              /*  */
              /* ------------- y2k in  end -------*/
              /*  */
              NE0F-DATE-PGM-CHK();
              if (NLXREC.NLXERRF == "N")
                /*  */
                /* ------------- y2k out begin -----*/
                /*  */
                                  /* IF NE0FM-200BEGDT >*/
                                  /* NE0FM-200ENDDT;/* Date range not*/
                                  /* valid*/
                /*  */
                /* ------------- y2k out end -------*/
                /*  */
                /*  */
                /* ------------- y2k in  begin -----*/
                /*  */
                NE0FW01.NE0FW-BEGIN-YYMM = NE0FM-200BEGDT;
                if (NE0FW01.NE0FW-BEGIN-YYMM > 6000)
                  NE0FW01.NE0FW-BEGIN-CC = 19;
                else
                  NE0FW01.NE0FW-BEGIN-CC = 20;
                end
                NE0FW01.NE0FW-END-YYMM = NE0FM-200ENDDT;
                if (NE0FW01.NE0FW-END-YYMM > 6000)
                  NE0FW01.NE0FW-END-CC = 19;
                else
                  NE0FW01.NE0FW-END-CC = 20;
                end
                if (NE0FW01.NE0FW-BEGIN-CCYYMM > NE0FW01.NE0FW-END-CCYYMM)
                  /*  */
                  /* ------------- y2k in end --------*/
                  /*  */
                  set NE0FM-200BEGDT cursor, modified, bold;
                  set NE0FM-200ENDDT modified, bold;
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(88);
                else
                  NE0FW-01BDT = NLXREC.XXXWCYMD;
                  NE0FW02.NEW-FROM-DATE = NE0FW-01BCCYYMM;
                  set NE0FM200.NE0FM-200BEGDT initialAttributes;
                end
              end
            else
              /*  */
              /* ------------- y2k out begin -----*/
              /*  */
                                  /* IF NE0FM-200BEGDT >*/
                                  /* NE0FM-200ENDDT;/* Date range not*/
                                  /* valid*/
              /*  */
              /* ------------- y2k out end  ------*/
              /*  */
              /*  */
              /* ------------- y2k in  begin -----*/
              /*  */
              NE0FW01.NE0FW-BEGIN-YYMM = NE0FM-200BEGDT;
              if (NE0FW01.NE0FW-BEGIN-YYMM > 6000)
                NE0FW01.NE0FW-BEGIN-CC = 19;
              else
                NE0FW01.NE0FW-BEGIN-CC = 20;
              end
              NE0FW01.NE0FW-END-YYMM = NE0FM-200ENDDT;
              if (NE0FW01.NE0FW-END-YYMM > 6000)
                NE0FW01.NE0FW-END-CC = 19;
              else
                NE0FW01.NE0FW-END-CC = 20;
              end
              if (NE0FW01.NE0FW-BEGIN-CCYYMM > NE0FW01.NE0FW-END-CCYYMM)
                /*  */
                /* ------------- y2k in  end -------*/
                /*  */
                set NE0FM-200BEGDT cursor, modified, bold;
                set NE0FM-200ENDDT modified, bold;
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(88);
              else
                NE0FW-01BDT = NLXREC.XXXWCYMD;
                NE0FW02.NEW-FROM-DATE = NE0FW-01BCCYYMM;
                set NE0FM200.NE0FM-200BEGDT initialAttributes;
              end
            end
          end
        end
      end
    end
    ;
  else
    XX0XS01();
    NE0FW-01-CCYYMM = XX0XW01.XX0XWCYM;
    NE0FW-01-MONTH = NE0FW-01-MONTH - 1;
    if (NE0FW-01-MONTH == 0)
      NE0FW-01-MONTH = 12;
      NE0FW-01-CCYY = NE0FW-01-CCYY - 1;
    end
    NE0FW02.NEW-FROM-DATE = NE0FW-01-CCYYMM;
    NE0FW02.NEW-TO-DATE = NE0FW-01-CCYYMM;
  end
  ;
   /* ************************************/
   /* Verify that all valid entries relate correctly*/
   /* ************************************/
  ;
  if (NLXREC.NLXERRF != "Y")
    if (NE0FM200.KUCCOID != 0)
      if (NE0FM200.XCTCD != " ")
        if (NE0FM200.XCTCD != KUCREC.XCTCD)
          converseLib.validationFailed(75);
          NLXREC.NLXERRF = "Y";
          set NE0FM200.XCTCD cursor, modified, bold;
          set NE0FM200.KUCCOID modified, bold;
        end
      end
      if (NE0FM200.XAUCD != " ")
        if (NE0FM200.XAUCD != KUCREC.XAUCD)
          converseLib.validationFailed(75);
          NLXREC.NLXERRF = "Y";
          set NE0FM200.XAUCD cursor, modified, bold;
          set NE0FM200.KUCCOID modified, bold;
        end
      end
      if (NE0FM200.NE0FM-200MGT-CD != " ")
        set VDSTRB01 empty;
        set YSMREC empty;
        set SQLCA empty;
        VDSTRB01.KUCCOID = KUCREC.KUCCOID;
        call "IO4600" ("S ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes}; /* READ DISTRIB.*/
        if (SQLCA.VAGen_SQLCODE == 0)
          YSMREC.YSMTBLPF = "ZRG";
          YSMREC.YSMSYSPF = "NL";
          YSMREC.YSMSUMID = 1;
          YSMREC.YSMSRCVL = VDSTRB01.ZRGCD;
          set SQLCA empty;
          call "IO2640" ("SU", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes}; /* READ SUM CODE*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (YSMREC.YSMSUMCD == NE0FM-200MGT-CD)
               /* Great! customer matches mgt region*/
            else
              set NE0FM-200MGT-CD cursor, bold, modified;
              set NE0FM200.KUCCOID bold, modified;
              converseLib.validationFailed(78);
              NLXREC.NLXERRF = "Y";
            end
          else
            set NE0FM-200MGT-CD cursor, bold, modified;
            set NE0FM200.KUCCOID bold, modified;
            converseLib.validationFailed(87);
            NLXREC.NLXERRF = "Y";
          end
        else
          converseLib.validationFailed(85);
          NLXREC.NLXERRF = "Y";
          set NE0FM200.KUCCOID cursor, modified, bold;
        end
      end
    end
  end
  ;
   /* **************************************************/
   /* For option 70 validate that load has occured.*/
   /* Load runs ne1022 and updates ne.f1111.mstr*/
   /* with ne.f1110.sort (tranaction file) cost extract file.*/
   /* **************************************************/
  ;
  if (NE0FT-01JCL[NE0FW-01INX] == "NE1592")
    NE0FW-01-CCYYMM = NE0FM200.NE0FM-200ENDDT;
    /*  */
    /* --------------  y2k in begin -----------------*/
    /*  */
    if (NE0FM200.NE0FM-200ENDDT > 6000)
      NE0FW-01-CCYYMM = NE0FW-01-CCYYMM + 190000;
    else
      NE0FW-01-CCYYMM = NE0FW-01-CCYYMM + 200000;
    end
    /*  */
    /* --------------  y2k in end -------------------*/
    /*  */
    /*  */
    /* --------------  y2k out begin ----------------*/
    /*  */
    /* NE0FW-01-CCYYMM = NE0FW-01-CCYYMM + 190000;*/
    /*  */
    /* --------------  y2k out end ------------------*/
    /*  */
    set VNESCO01 empty;
    NE0FS-S-VNESCO01();
    if (SQLCA.VAGen_SQLCODE == 0)
      if (NE0FW-01-CCYYMM == VNESCO01.NE-GL-POST-MO)
        if (VNESCO01.NE-STAT-CD == "01")
          /* continue  load has occured mod file updated*/
        else
          NLXREC.NLXERRF = "Y";
          converseLib.validationFailed(193); /* load has not occured choose end date*/
                                   /* < po*/
        end
      end
    else
      TA1REC.TA1LOCAT[2] = "S     ";
      TA1REC.TA1LOCAT[3] = "IO6980";
      TA1REC.TA1DBASE = "DNILO ";
      TA1REC.TA1TBLVU = "VNESCO01";
      XPNL005();
    end
  end
  ;
  if (converseVar.eventKey is pf12
   && NLXREC.NLXERRF != "Y")
    converseLib.validationFailed(77);
  end
  ;
  converseLib.clearScreen();
  
  ;
end // end NE0F-220

// converse pop up window
Function NE0F-221()
   /* ------------------------------------------------------------*/
  ;
  ;
              /* CONVERSE POP UP WINDOW*/
  ;
      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/
  ;
   /* ------------------------------------------------------------*/
  ;
   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/
  ;
  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/
    ;
     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/
    ;
    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end
    ;
    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";
    ;
     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/
    ;
    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && NE0FT-02MGT-CD[XX0XWCT1] != "ZZ") /* Or end of data*/
        if (NE0FT02.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = NE0FT-02MGT-CD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = NE0FT-02MGT-DESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end
    ;
     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/
    ;
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (NE0FT02.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = NE0FT-02MGT-CD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = NE0FT-02MGT-DESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end
  ;
  ;
  converse XX0XM001 ;
  ;
  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/
  ;
     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/
  ;
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end
  ;
    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/
  ;
  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && NE0FT-02MGT-CD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/
        ;
         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/
        ;
        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end
  ;
  ;
end // end NE0F-221

// Determine next action
Function NE0F-230()
   /* **************************************/
   /* Determine next action for map 200 logic*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NE0F-230";
  ;
   /* ***********************************/
      /* check for Enter or PF12*/
   /* ***********************************/
  ;
  if (NE0FW-01PF12 == "Y") /* Just editing, return to map.*/
    NLXREC.NLXCSCRN = "NE0FM200";
    NLXREC.NLXEOSF = "N"; /* Not done with map 200*/
  else
    ;
    NE0FS-02(); /* Submit report jcl*/
    ;
  end
  ;
end // end NE0F-230

// update vneinv01 with wo
Function NE0F-DATE-PGM-CHK()
  if (NE0FT-01JCL[NE0FW-01INX] == "NE1572")
    set NE0FM-200BEGDT cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(189);
  end
  ;
  if (NE0FT-01JCL[NE0FW-01INX] == "NE1582")
    set NE0FM-200BEGDT cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(189);
  end
  ;
  if (NE0FT-01JCL[NE0FW-01INX] == "NE1592")
    set NE0FM-200BEGDT cursor, modified, bold;
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(189);
  end
  ;
end // end NE0F-DATE-PGM-CHK

// Call JCL submitter - NE0P
Function NE0FS-02()
   /* ************************/
   /* NE0P - call jcl submitter with NEWREC parms.*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NE0FS-02";
  ;
  NEWREC.NEW-REPORT-PARAMETERS = NE0FW02.NE-PARM-GROUP;
  NEWREC.XXX-PGM-NBR = NE0FT01.NE0FT-01JCL[NE0FW-01INX];
  ;
  NEWREC.NEW-MSG-NBR = 0; /* Change ## back to 0 for prod.*/
  COMMAREA.CAUSERA = NEWREC.NEW-GROUP;
  ;
  COMMAREA.CATOAP = "NE0P";
  XPNL002();
  ;
  NEWREC.NEW-GROUP = COMMAREA.CAUSERA;
  NE0FW01.NE0FW-01PF12 = "N";
  if (NLXREC.NLXCSCRN == "NE0FM200")
    NLXREC.NLXEOSF = "Y"; /* done with map200*/
  end
  NLXREC.NLXCSCRN = "NE0FM100";
  NLXREC.NLXBLDSC = "Y";
  return;
end // end NE0FS-02

// Validate PO month.
Function NE0FS-03()
   /* ************************/
   /* DATE VALIDATION CODE*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NE0FS-03";
  ;
  NE0FW01.NE0FW-01MON = NE0FW01.NE0FW-01DTMO;
  NE0FW01.NE0FW-01YER = NE0FW01.NE0FW-01DTYY;
  NE0FW01.NE0FW-01DAY = "01";
  NLXREC.NLXVALDT = "Y";
  NLXREC.XXXED8C = NE0FW01.NE0FW-01DAT;
  ;
  XPNL001();
  ;
  if (NLXREC.NLXVALDT == "N")
    NE0FW01.NE0FW-01DTERR = "Y";
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(5);
  end
end // end NE0FS-03

// Set MAP200 default dates.
Function NE0FS-04()
   /* ************************/
   /* SET DEFAULT DATES FOR MAP200*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NE0FS-04";
  ;
  NE0FW-01EZDT = VGVar.currentShortGregorianDate;
  move NE0FW-01EZYY to NE0FW-01PREVYY withV60Compat;
  move NE0FW-01EZMM to NE0FW-01PREVMO withV60Compat;
  NE0FW-01PREVMO = NE0FW-01PREVMO - 1;
  ;
  if (NE0FW-01PREVMO == 0)
    NE0FW-01PREVMO = 12;
    /*  */
    /* -------------- y2k out begin -----------------*/
    /*  */
    /* NE0FW-01PREVYY = NE0FW-01PREVYY - 1;*/
    /*  */
    /* -------------- y2k out end -------------------*/
    /*  */
    /*  */
    /* -------------- y2k in  begin -----------------*/
    /*  */
    if (NE0FW-01PREVYY == 0)
      NE0FW-01PREVYY = 99;
    else
      NE0FW-01PREVYY = NE0FW-01PREVYY - 1;
    end
    /*  */
    /* -------------- y2k in  end -------------------*/
    /*  */
  end
  ;
  move NE0FW-01PREVDT to NE0FM-200BEGDT withV60Compat;
  move NE0FW-01PREVDT to NE0FM-200ENDDT withV60Compat;
  ;
end // end NE0FS-04

// select unique VNESCO01
Function NE0FS-A-VNESCO01()
   /* *****************************************************/
   /* insert        VNESCO01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0FS-A-VNESCO01";
  ;
  VNESCO01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO6980" ("A ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
  )                            /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "A     ";
    TA1REC.TA1LOCAT[3] = "IO6980";
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0FS-A-VNESCO01

// select unique VNESCO01
Function NE0FS-D-VNESCO01()
   /* *****************************************************/
   /* delete        VNESCO01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0FS-D-VNESCO01";
  ;
  call "IO6980" ("D ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
  )                            /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "D     ";
    TA1REC.TA1LOCAT[3] = "IO6980";
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0FS-D-VNESCO01

// update vneinv01 with wo
Function NE0FS-FMAT-POST-MO()
  /* ******************************************************************/
  /* This statement group formats the current gl-post-month*/
  /* ******************************************************************/
  ;
  XX0XS01();
  ;
  NE0FW-01-GL-CC = XX0XW01.XX0XW19;
  NE0FW-01-GL-YY = XX0XW01.XX0XWYY;
  NE0FW-01-GL-MM = XX0XW01.XX0XWMM;
   /*  */
   /* ------------ y2k out begin ----------*/
   /*  */
   /* IF NE0FW-01-GL-MM = 01;*/
   /* NE0FW-01-GL-YY = NE0FW-01-GL-YY - 1;*/
   /* NE0FW-01-GL-MM = 12;*/
   /* ELSE;*/
   /* NE0FW-01-GL-MM = NE0FW-01-GL-MM - 1;*/
   /* END;*/
   /*  */
   /* ------------ y2k out end ------------*/
   /*  */
  ;
   /*  */
   /* ------------ y2k in begin -----------*/
   /*  */
  if (NE0FW-01-GL-MM == 01)
    if (NE0FW-01-GL-YY == 0)
      NE0FW-01-GL-YY = 99;
      NE0FW-01-GL-CC = 19;
    else
      NE0FW-01-GL-YY = NE0FW-01-GL-YY - 1;
    end
    NE0FW-01-GL-MM = 12;
  else
    NE0FW-01-GL-MM = NE0FW-01-GL-MM - 1;
  end
   /*  */
   /* ------------ y2k in  end ------------*/
   /*  */
  ;
  move NE0FW-01-GL-CCYYMM to NE0FW-01-GL-YYMM withV60Compat;
  ;
end // end NE0FS-FMAT-POST-MO

// Select Unique - KUCREC
Function NE0FS-S-VCMPNY01()
   /* ************************/
   /* KUCREC - Select Unique*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NE0FS-S-VCMPNY01";
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* Read Customer*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0240 "; /* io module*/
    TA1REC.TA1DBASE = "DCUST"; /* database*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NE0FS-S-VCMPNY01

// select unique VNESCO01
Function NE0FS-S-VNESCO01()
   /* *****************************************************/
   /* select unique VNESCO01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0FS-S-VNESCO01";
  ;
  call "IO6980" ("S ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
   || SQLCA.VAGen_SQLCODE == 100) /* if a good return,*/
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "S     ";
    TA1REC.TA1LOCAT[3] = "IO6980";
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0FS-S-VNESCO01

// select unique VNESCO01
Function NE0FS-U-VNESCO01()
   /* *****************************************************/
   /* update        VNESCO01*/
   /* *****************************************************/
  ;
  ;
  NLXREC.NLXCPROC = "NE0FS-U-VNESCO01";
  ;
  VNESCO01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNESCO01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO6980" ("U ", SQLCA, VNESCO01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0 /* if a good return,*/
  )                            /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "U     ";
    TA1REC.TA1LOCAT[3] = "IO6980";
    TA1REC.TA1DBASE = "DNILO";
    TA1REC.TA1TBLVU = "VNESCO01";
    XPNL005(); /* abort routine*/
  end
  ;
end // end NE0FS-U-VNESCO01

//*** RECORD=NE0FW01 ****
// this is the working storage for the csp application NE0F
// ***********************
Record NE0FW01 type basicRecord
  10 NE0FW-BEGIN-CCYYMM NE0FW-BEGIN-CCYYMM ; 
    15 NE0FW-BEGIN-CC NE0FW-BEGIN-CC ; 
    15 NE0FW-BEGIN-YYMM NE0FW-BEGIN-YYMM ; 
  10 NE0FW-END-CCYYMM NE0FW-END-CCYYMM ; 
    15 NE0FW-END-CC NE0FW-END-CC ; 
    15 NE0FW-END-YYMM NE0FW-END-YYMM ; 
  10 XGPCD XGPCD ; 
  10 XAUCD XAUCD ; 
  10 XCTCD XCTCD ; 
  10 KUCCOID KUCCOID ; 
  10 KUCCONM KUCCONM ; 
  10 NE0FW-01MGT-CD NE0FW-01MGT-CD ; 
  10 NE0FW-01MGT-DESC NE0FW-01MGT-DESC ; 
  10 NE0FW-01NDX NE0FW-01NDX [13] ; 
  10 NE0FW-01SIX NE0FW-01SIX ; 
  10 NE0FW-01-CT1 NE0FW-01-CT1 ; 
  10 NE0FW-01-CT2 NE0FW-01-CT2 ; 
  10 NE0FW-01INX NE0FW-01INX ; 
  10 NE0FW-01FFL NE0FW-01FFL ; 
  10 NE0FW-01SEL NE0FW-01SEL ; 
  10 NE0FW-01PF12 NE0FW-01PF12 ; 
  10 NE0FW-01PRM-F NE0FW-01PRM-F ; 
  10 NE0FW-01BDT NE0FW-01BDT ; 
    15 NE0FW-01BCCYYMM NE0FW-01BCCYYMM ; 
    15 NE0FW-01BDAY NE0FW-01BDAY ; 
  10 NE0FW-01EDT NE0FW-01EDT ; 
    15 NE0FW-01ECCYYMM NE0FW-01ECCYYMM ; 
    15 NE0FW-01EDAY NE0FW-01EDAY ; 
  10 * char(1) ; 
  10 NE0FW-01DAT NE0FW-01DAT ; 
    15 NE0FW-01MON NE0FW-01MON ; 
    15 NE0FW-01DAY NE0FW-01DAY ; 
    15 NE0FW-01YER NE0FW-01YER ; 
  10 * char(1) ; 
  10 NE0FW-01DT4-CCYYMM NE0FW-01DT4-CCYYMM ; 
    15 NE0FW-01DT4-CC NE0FW-01DT4-CC ; 
    15 NE0FW-01DT4-YYMM NE0FW-01DT4-YYMM ; 
      20 NE0FW-01DTYY NE0FW-01DTYY ; 
      20 NE0FW-01DTMO NE0FW-01DTMO ; 
  10 * char(1) ; 
  10 NE0FW-01-CCYYMM NE0FW-01-CCYYMM ; 
    15 NE0FW-01-CCYY NE0FW-01-CCYY ; 
    15 NE0FW-01-MONTH NE0FW-01-MONTH ; 
  10 * char(1) ; 
  10 NE0FW-01PREVDT NE0FW-01PREVDT ; 
    15 NE0FW-01PREVYY NE0FW-01PREVYY ; 
    15 NE0FW-01PREVMO NE0FW-01PREVMO ; 
  10 NE0FW-01EZDT NE0FW-01EZDT ; 
    15 NE0FW-01EZYY NE0FW-01EZYY ; 
    15 NE0FW-01EZMM NE0FW-01EZMM ; 
    15 NE0FW-01EZDD NE0FW-01EZDD ; 
  10 NE0FW-01DTERR NE0FW-01DTERR ; 
  10 NE0FW-01RETURN NE0FW-01RETURN ; 
  10 NE0FW-01-PAGE-F NE0FW-01-PAGE-F ; 
  10 NE0FW-01-REQ-SECURITY NE0FW-01-REQ-SECURITY ; 
  10 * char(1) ; 
  10 NE0FW-01-GL-YYMM NE0FW-01-GL-YYMM ; 
  10 NE0FW-01-GL-CCYYMM NE0FW-01-GL-CCYYMM ; 
    15 NE0FW-01-GL-CCYY NE0FW-01-GL-CCYY ; 
      20 NE0FW-01-GL-CC NE0FW-01-GL-CC ; 
      20 NE0FW-01-GL-YY NE0FW-01-GL-YY ; 
    15 NE0FW-01-GL-MM NE0FW-01-GL-MM ; 
end // end NE0FW01

//*** RECORD=NE0FW02 ****
// ******  Intl SCO Report Parameter Storage NE0F Copy *******
// 
// This record will be used by NE0F for passing parms to
// NEWREC.
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  ------     ---------------------------------------
// 04-16-94  jdemar     Initial record creation
// ***********************
Record NE0FW02 type basicRecord
  10 NE-PARM-GROUP NE-PARM-GROUP ; 
    15 NEW-REPORT-REQUEST NEW-REPORT-REQUEST ; 
    15 NEW-RECORD-TYPE NEW-RECORD-TYPE ; 
    15 XGPCD XGPCD ; 
    15 KUCCOID KUCCOID ; 
    15 YSMSUMCD YSMSUMCD ; 
    15 ZRGCD ZRGCD ; 
    15 XCTCD XCTCD ; 
    15 NE-ACR-TYP-CD NE-ACR-TYP-CD ; 
    15 NEW-TRAN-DEBIT-CREDIT NEW-TRAN-DEBIT-CREDIT ; 
    15 NEW-FROM-DATE NEW-FROM-DATE ; 
    15 NEW-TO-DATE NEW-TO-DATE ; 
    15 NE-STAT-CD NE-STAT-CD ; 
    15 ZPSCD ZPSCD ; 
    15 XWHCD XWHCD ; 
    15 XAUCD XAUCD ; 
    15 YPYCD YPYCD ; 
    15 ZARCD ZARCD ; 
    15 * char(38) ; 
end // end NE0FW02

// Reporting parameters for SCO
DataItem NE-PARM-GROUP char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01-CCYY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-CCYYMM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Table index
DataItem NE0FW-01-CT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Screen index
DataItem NE0FW-01-CT2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-GL-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-GL-CCYY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-GL-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-GL-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-GL-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-GL-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-MONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01-PAGE-F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01-REQ-SECURITY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// To post month
DataItem NE0FW-01BCCYYMM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// To post month
DataItem NE0FW-01BDAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// To post month
DataItem NE0FW-01BDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01DAT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// begin cc
DataItem NE0FW-01DT4-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// begin ccyymm
DataItem NE0FW-01DT4-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// begin yymm
DataItem NE0FW-01DT4-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01DTERR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// begin mm
DataItem NE0FW-01DTMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// begin yy
DataItem NE0FW-01DTYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From post month
DataItem NE0FW-01ECCYYMM num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// From post month
DataItem NE0FW-01EDAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// From post month
DataItem NE0FW-01EDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01EZDD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01EZDT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01EZMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01EZYY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01FFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index of M100 sel. in Tbl-1
DataItem NE0FW-01INX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01MGT-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01MGT-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01MON char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen index for scrolling
DataItem NE0FW-01NDX num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01PF12 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01PREVDT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01PREVMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01PREVYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_CO_ID
DataItem NE0FW-01PRM-F char(1)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

DataItem NE0FW-01RETURN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NE0FW-01SEL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Last index saved
DataItem NE0FW-01SIX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NE0FW-01YER char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// begin date for map cc
DataItem NE0FW-BEGIN-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// begin date for map ccyymm
DataItem NE0FW-BEGIN-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// begin date for map yymm
DataItem NE0FW-BEGIN-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end   date for map cc
DataItem NE0FW-END-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end   date for map ccyymm
DataItem NE0FW-END-CCYYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end   date for map yymm
DataItem NE0FW-END-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

