package ff0a;
import corpcom1.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ff.common.*;
import fg.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=FF0A ****
// This application displays the Development Model Menu.
// It provides entry to the subordinate applications.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          03/27/89  jjuch   New application.
// FF254    12/16/91  LDELUH  Add 3 target wrksht selections.
// FF276    09/08/92  JJUCH   Add option 13 balance buy.
//          12/19/96  CWHIT1  REGEN FOR YR 2000
// *********************
Program FF0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FFWREC FFWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FF0AT; // table
  use FF0AM.FF0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFF001: XPFF001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set FF0AM001 initial; /* M001 input/output*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FF0A001; /* Converse the main process*/


    FF0A001: FF0A001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FF0A001; /* Converse the main process*/


  end // end main
end // end FF0A

// Main process to display a map
Function FF0A001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FF0A200(); /* Format and display the map*/

  FF0A300(); /* Check attention identifier*/

  FF0A400(); /* Reset fields to normal intensity*/

  FF0A500(); /* Verify the data that was entered*/

  FF0A600(); /* Process valid input request*/


end // end FF0A001

// Format and converse the map
Function FF0A200()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FFWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FF0AM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  FF0AM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FF0AM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FFWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FFWREC.XXXMSGNO != 0) /* Message to display*/

      if (FFWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FFWREC.XXXMSGNO);
      end /* Message number*/
    else
      FF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FF0AM001.XXXMODID = FFWREC.XXXMODID; /* Module identification*/

    set FF0AM001 alarm; /* Indicate sound alarm*/

  end

  converse FF0AM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  set FFWREC empty; /* System work record area*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FF0AM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FF0AM001.CAITEM; /* Application data*/


end // end FF0A200

// Check attention identifier
Function FF0A300()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FF0AM001 initial; /* M001 input/output*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSFFS01(); /* Exit to another application*/

      set FF0AM001.CATOAP cursor, bold; /* Highlight*/

    else

      FFWREC.XXXMODID = "300"; /* Module identification*/
      converseLib.validationFailed(36); /* Indicate PF key not valid*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP or exit to the Production Menu was requested,*/
   /* exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FF0AM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FY0M"; /* TO application*/
    end

    XSFFS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FFWREC.XXXMODID = "300"; /* Module identification*/
    converseLib.validationFailed(3); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    exit stack; /* Exit to display map*/

  end


end // end FF0A300

// Reset highlighted fields
Function FF0A400()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FF0AM001.FF0AMSEL initialAttributes; /* Menu selection*/
  set FF0AM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set FF0AM001.CAITEM initialAttributes; /* FAST PATH application data*/

end // end FF0A400

// Verify data that was entered
Function FF0A500()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    FFWREC.XXXMODID = "500"; /* Module identification*/
    set FF0AM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(40); /* Indicate only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* Verify any menu selection that was entered.*/
   /* ------------------------------------------------------------*/

  if (FF0AM001.FF0AMSEL > 0) /* Menu selection was entered*/

    if (FF0AM001.FF0AMSEL in FF0AT.FF0AMSEL) /* Selection in table*/

      COMMAREA.CATOAP = FF0AT.CATOAP[sysVar.arrayIndex]; /* TO application*/

    else

      /* ------------------------------------------------------------*/
       /* If not found, indicate selection is invalid.*/
      /* ------------------------------------------------------------*/

      FFWREC.XXXMODID = "500"; /* Module identification*/
      set FF0AM001.FF0AMSEL cursor, bold; /* Highlight*/
      converseLib.validationFailed(10); /* Indicate invalid selection*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Exit to display the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end FF0A500

// Process valid input request
Function FF0A600()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* ------------------------------------------------------------*/

  if (FF0AM001.FF0AMSEL > 0) /* Menu selection was entered*/

    XSFFS01(); /* Exit to another application*/

    /* ------------------------------------------------------------*/
     /* If the transfer failed, display the returned error message.*/
    /* ------------------------------------------------------------*/

    set FF0AM001.FF0AMSEL cursor, bold; /* Highlight*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Clear map input/output area and request data to display.*/
   /* ------------------------------------------------------------*/

  set FF0AM001 initial; /* M001 input/output*/


end // end FF0A600

