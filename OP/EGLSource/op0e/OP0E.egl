package op0e;
import av.common.*;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import in1.common.*;
import ko.common.*;
import ku.common.*;
import ob.common.*;
import oc.common.*;
import oi.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=OP0E ****
// this application displays and/or accepts data for the order
// header record.
// 
// if an order is being entered, this application will flow to:
//    1. product header & sizes screen (op0h) if the
//       flow = form,
//    2. accept or review screen (op0j) if the flow = phone.
// 
// if an order is being reviewed, this application will flow to
// back to the accept or review screen (op0j).
// 
// from this application, the user can choose to go to the
// special instructions screen (op0f) or the miscellanous order
// header screen (op0g).
// 
// 
// date created: 07/05/86
// 
// maintenance history:
//   date     by whom    overview of changes made
// --------  ---------  -------------------------------------
// 07/05/86  thuha mai  original creation
// 09/16/86  jvande     changed to use warehouse required flag
//                      from xds table when editing warehouse.
// 09/22/86  thuha mai  bulk/draw orders project --
//                      also, modified code to protect
//                      warehouse against changes in review
//                      mode.
// 11/17/86  dyoung     phase II project
// 01/23/87  jvande     changes smv so won't default customer
//                      master fields since never reads record
//                      in review mode. caused blank xaccd.
// 02/03/87  sjob       changed to protect xwhcd & xdscd on map
//                      in review mode.
// 02/09/87  sjob       change - a normal order containing any
//                      coordinate group codes can not be
//                      changed to a bulk order.
// 02/24/87  sjob       change in op0esdt- apparel special sale
//                      can enter any do-not-ship before date
//                      on at once orders (sales office 12).
// --------  jvande     hard coding for xdscd of 1 and 3 in
//                      op0esed.
// 03/18/87  tmai       changed program to allow any service
//                      rep to enter promo orders if the
//                      universal owner group code was used--
//                      --op0esog
// 04/21/87  jvande     chngd srr so if sql=0 then if, not if
//                      sql=0 and rest of test.
// 04/27/87  jvande     chngd so protect xdscd if in phone flow
//                      in op0es50.
// 04/29/87  craine     changed the default on d/s discount
//                      to 'n' when division is 02 (intl)
// 05/18/87  jvande     allow dscd on bulk/draws as long as ds
//                      code requires a warehouse.
// 06-24-87  obecke     changed cursor stop on initial entry
//                      to po number instead of sales agency.
// 07-23-87  jvande     changed to not ovrlay xaccd in smv.
// 10/14/87  tfox       added code to 010 to handle invalid pa1
//                      pa3 keys.
// 10/29/87  jvande     chngd sek so when trun to bulk chks co-
//                      or grp in in rev or phone flow.
// 03/09/88  craine     chg to default direct ship discount
//                      flag to 'y' if gpc = '02' & 'n' all
//                      others (division 2 still default to 'n'
//                      - op0e001.
// 03/23/88  obecke     added op0eskc(call company) which now
//                      holds terms indicators.  also adjusted
// 05/11/88  jbecke     remove op1smscf and op1sshpo from map.
//                      remove reference to kunrec.kunspind.
//                      move spaces to op1rec.op1smscf and
//                      op1rec.op1sshpo.  removed statement
//                      group op0eses.
//                      op0estd and op0es50 for this.
// 07/05/88  obecke     changed flow from 010 to go to op0f
//                      only if the number of spcl instructs
//                      is larger than 5.(op0c shows 1st 5)
// 07/12/88  obecke     added op0cwgti'go to special instr'
//                      flag to w01,sem and 010 flow. used
//                      to prompt display of op0f when 'y' is
//                      entered in 'more spcl inst?' field.
//                      if y already exists and less than 5
//                      inst, bypasses op0f.  however, if user
//                      types over the 'y' with another 'y'
//                      this will also take him to op0f.
// 10/13/88  jwood      changes calls to include NONCSP option
// 10/19/88  gwells     rebooking - prevent the entering of a
//                        'rebook bulk' on-line - sek, smt,
//                        swn, s50.
// 11/03/88  obecke     issue warning msg #435 when both a
//                      pick priority code of 10 or 20 and
//                      a don't ship b4 date exist.
// 12/13/88  dwalke     allow up to two year need date - sdt
//                      bug #101
// 01/03/89  schase     chg'd sdt for po date edit adjmnt and
//                      s50 for cole-haan orders only, push the
//                      dont-ship-before-date to next monday if
//                      order was established on sat or sun.
// 01/09/89  dwalke     add segemted transaction id to appl.
// 04/25/89  scantr     bug # 177.  inactivated PA2 for
//                      phone flow and review - op0e010.
// 06/09/89  craine     remove writ-rep-ind = 'w' line from
//                      op0esrr so that the rep hist can be
//                      found
// 06/12/89  mbarna     changed sdt bug #190 dnsb date on
//                      weekend.
// 8-16-89   obecke     tiered terms project.  sef,smv,ssc,
//                      st1,st2,st6,sz1,s10,s50,w01, op03.
// 9-05-89   skott      wildcard gpc if not ftwr or apparel
//                      on cust/gpc read.  scg
// 09/13/89  gwells     for accessory orders, get the srep
//                      from dorder.vtemp001.  default to
//                      customer if no access srep is found -
//                      005,s10,s50,srs(new).
// 9-18-89   mbarna     smv. fix terms logic to not drop spgm
//                      min disc% in review mode.
// 09/18/89  obecke     add nil terms logic.
//                      s10,s50,010,w01,op03.
// 11/02/89  oricha     colehan requires a don't ship before
//                      date.  sae, smp.
// 11/02/89  rcoron     colehan initializes the don't ship
//                      before date to the need date instead of
//                      'mmddyy'.  s10, s50.
// 11/07/89  schase     added ezetst to xwhtbl.xwhowngf for
//                      evaluating warehouse.   swn.
// 11/15/89  schase     renamed op1shdt to op1tlvln - tier lvl
//                      number - per db changes. smv & st4.
// 11/21/89  oricha     #265. allow cust bulks/draws to have
//                      coordinate groups.  ser.
// 11/29/89  skott      removed comment from srs.
// 12/05/89  rcoron     fixed zero tier level bug. smv.
// 12/05/89  tfox       add comp # logic to smv,s10,sdt.
// 12/11/89  rcoron     fixed terms recalc bug -- s10, s50.
// 12/13/89  dwalke     xaccd '26' '27' and '64', do not allow
//                      chgs to terms. s10, sac, 010.
// 12/18/89  tfox       chg'd sae,sdt,smt,smd add po date logic
// 03/26/90  mgatre     installed multiple-rep logic to get
//                      rep and agency from VSTORE01 & VCUREP01
//                      instead of VCUST01. agency and rep are
//                      no longer keyable fields. deleted
//                      srh, ssr, sir. changed srn, srr, srs,
//                      s10, s50, 050, w01.
// 04/20/90  scantr     bug #329 - removed omdrec from records
//                      list; no longer used. op0e
// 05/18/90  mgatre     bug #349 - added rep selection logic
//                      for effective date > order rec'd date
//                      srr
// 05/30/90  BWATSO     Brand code changes.  Changed SAE, SMD,
//                      S10, and S50.
// 07/06/90  oricha     fix logic to disallow inactive agency/
//                      rep. srh
// 08/21/90  cgrice     xowcd was not being displayed in review
//                      mode.  OP0E001
// 11/15/90  scantr     Always pick up sales agency/rep from
//                      rep table using CU1290.  Bug #405.
//                      Changed 005, srr.
// 12/29/90  jloyer     modified to process blank bulks...
//                      op0esek, ser, sew, swn, s01, s10
//                      new: op0esee; calls io5470 which
//                                    accesses davail.vblnkp01
//                      new recs; avirec; pass keys to io5480
//                                avgrec; rtn data frm io5480
// 01/14/91  mbarna     bug #468 fix error reporting in srs
// 01/31/91  tfox       remove opvtbl and access logic from
//                      005.
// 02/05/91  craine     removed kuarec, kufrec - no longer used
//                      both are being deinstalled.
// 02/14/91  dmeier     get aloc seq and asng ctrl id from
//                      cmpny01 instead of cust001 (op0esmv)
// 02/24/91  schase     added edit to dsnb date for not allow-
//                      ing dsnb date > 21 days past the need
//                      date. sdt.
// 02/28/91  dharri     t-shirts blank bulk draw logic...
//                      op0esek, smt, s10, op0ew01 (new flags),
//                      new: op0eseo - checks t-shirt cut-off
//                      dates by accessing dorder.vogcut01.
// 03/06/91  swatso     added stmt grp sd1 to exclude special
//                      customer groups NI,MB,12,BK,AA,AF from
//                      dsnb edit. Modified sdt to call sd1.
// 03/27/91  dharri     log # 445 - po # required - phase one
//                      replaced kunrec.kunporfl (cust level
//                      y/n flag) with kucrec.ypocd (company
//                      level two char code) in sae & s50.
// 03/27/91  schen      log # 530 - change to allow authorized
//                      users to change dsnb date even it is
//                      21 days past need date.
// 04/02/91  dmeier     log # 496 - change to op0escl to stop
//                      overlay of customer label instructions
// 04/05/91  craine     db2 chg's - removed XFTCD from XODTBL.
//                      chg'd SOT and removed OP0EWFTC from
//                      OP0EW01.
// 04/14/91  tfox       menu of services - m001,sae,smd,smv,
//                      s10,001.
// 04/25/91  bbake2     added edits for cust po #. changes to
//                      sae, sah, s50.
// 05/10/91  bbake2     revised edits for cust po#.  changes
//                      to map001, sah, saw, 001, 010, w/s w01,
//                      table t01.
// 05/14/91  SCHASE     Retain the original DSNB Date if a user
//                      was unsuccessful at changing the DSNB
//                      Date. SDT.
// 05/21/91  schen      log #554 - data base changes
//                      kuncrfl is moved from kunrec to kucrec,
//                      renamed as kucvndfl.  this field in
//                      op0eseh, op0esmv, and op0es50 is
//                      changed accordingly.
// 06/11/91  tmorri     Database Changes -
//                      Renamed YPOCD in KUCREC to KUCYPOFT.
//                      This field was in OP0ESAH and OP0ESAW.
//                      Renamed KUNALSEQ in OP1REC to OP1ALSEQ.
//                      This field was in OP0ESMV.  Renamed
//                      KUNCRFL in OP1REC TO KUCVNDFL.  This
//                      field was in OP0ESMV.
// 07/11/91  bbake2     log#665  protected owner group code
//                      for phone flow and draws.  Changes
//                      to s50 - set protect before converse
//                         sae - reprotect after edits
//                         smt - prevent set modified (pa1/pa3)
// 08/15/91  ORICHA     sek: correct logic to prevent turning
//                      order into blank bulk in review mode.
// 10/08/91  dmeier     db changes - renamed opurec.xxxpgmno
//                      opurec.xxxpgmnb (op0esau).
// 10/14/91  JJOHN2     Log #693.  Fixed special instruction
//                      insertion.  OP0EWSWI and OP0ESCI.
//                      Used existing field OP0EW01.OP0EWTSQ
//                      to calculate instruction sequence.
// 12/17/91  trober     rekey project.  added field "Auto
//                      Confirmation" to map and related edits.
// 01/10/92  bbake2     log # 721 - added initialization of
//                      oearec prior to 1st converse to prevent
//                      setting message 509 prior to call of
//                      op03 to check terms. (new release of
//                      cics no longer initializes w/s, and
//                      occasionally there is a 'y' in oeaerr
//                      on entry to the application.)
// 03/12/92  Jloyer     DB2 chgs: removed usage of op1dsdcf.
//                      op0e001, st5, st4, sac, smd, smt, sae,
//                      smv, and op0em001.  Deleted op0esez
//                      (edit op1dsdcf).  Added init op-dirshp-
//                      dsct-pct to zero in op0em001.  Chgd the
//                      op0em001 map label for dirshp-pct from
//                      a '?' to a '%', although dirshp is not
//                      displayed on the map yet.
// 03/23/92  jhecke     made changes to accomodate the addition
//                      of the ds discount percent.
// 04/14/92  bbake2     database changes: sm5stat changed to
//                      xxxstat - srn, srh, w01
// 04/14/92  schase     replaced call to cu1290 with a new pgm
//                      ku1350. (determine sales agency & rep)
//                      ku1350 is a cobol2 nikeboth program.
// 04/27/92  jhecke     made small changes for direct ship code
//                      processing. sae sed.
// 05/27/92  DLEGG      SR #778. Change OP0ESRS. Use order
//                      entered date to derive agcy/srep for
//                      all orders. Previously used order
//                      received date for all but certain draws
//                      for military customers. See note in
//                      OP0ESRS of details.
// 08/12/92  gwells     #904 - Set sales rep override flag to
//                      'y' when agency or rep changes - smv.
// 10/01/92  bbake2     #903 - remove logic to get allocation
//                      seq and assigment control
// 10/09/92  bbake2     database changes, replaced sm5rec with
//                      vragcy02 srn, srh
// 11/04/92  jather     added special override percentage for
//                      direct ship (op0esed)
// 12/10/92  dcaust     log #855.  if international order and
//                      order class = 'in', protect direct ship
//                      , whse, owner grp & bulk/draw codes
//                      on map.  010.
// 02/26/93  bbake2     log #868 - airborne edits s-airborne,
//                      sed, w01, voppgm01, xs0mw01, xs0ms-
//                      chk-airborne.
// 05/01/93  dlegg      log #937 - NSG changes. Add checks for
//                      whse 25 in SWN, SEK.
// 05/13/93  dcaust     log #964 international airborne phase 2
//                      if nil and order class = 'as' protect
//                      protect direct ship, whse, owner group
//                      & bulk/draw codes on map. 010.
// 07/07/93  gcalki     log #848 international divert orders
//                      check need date in 010.
// 12/13/93  craine     log#971 - add edits to direct ship code
//                      for musical size run/direct ship ftwr.
//                      Changes in SED and SMV
// 04/01/94  gcalki     Log #1003 - renamed causera to
//                      ca-user-workarea-4k so it can hold
//                      opwrec which is now 3072 bytes. (ALL)
// 10/21/94  gcalki     db2 changes - added new fields to be
//                      passed to ku1350.
// 06/06/95  pstroe     Changes added for Canada.  See "CANA"
//                      commented code for changes.
// 09/01/96  dliddl     Added warehouse edit to OP0ESEW.
// 06/24/97  satyam     Added logic in op0e001 and op0es50 to
//                      display the correct warehouse instead
//                      of displaying the default value.
// 08/18/97  jnaemu     Default owner code to 00 for whse 27.
// 09/08/97  wleong     regen for yostbl structure change
// 09/09/97  wleong     added logic to restrict 'z' bulk access
//                      op0esek
// 
// 03/16/98  dsmit0     added dnsb edit for whse 51 orders to
//                      op0esae, op0esmd.
// 05/03/99  schapy     fixed y2k bug in statement grp op0esdt
//                      so that dsnb date is updated properly.
// 
// 07/12/99  rshaik     Commented the Stmt group OP0ES51 which
//                      transfer control to OC0G application
//                      as per Scott/Diane request.This process
//                      no longer required for business.Changes
//                      are available in process groups OP0ES10
//                      OP0ES50. BL#3690.
// 04/17/00  SBHARA     GOLF CRESTING PROJECT TT4073
//                      Added a new warning message in OP0ET01
//                      To show the warning message before
//                      putting the order on allocation hold
//                      in case of sales office 59 orders.
//                      Process  group OP0E010 Modified and a
//                      new statement group added
//                      OP0ES-SLS59-WARN;
// *********************
Program OP0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  AVGREC AVGREC; // record
  AVIREC AVIREC; // record
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KU3REC KU3REC; // record
  KU5REC KU5REC; // record
  KUCREC KUCREC; // record
  KUGREC KUGREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  KUOREC KUOREC; // record
  KUPREC KUPREC; // record
  KUQREC KUQREC; // record
  KUSREC KUSREC; // record
  KUTREC KUTREC; // record
  OCGREC OCGREC; // record
  OEAREC OEAREC; // record
  OP0EW01 OP0EW01; // record
  OP0EW02 OP0EW02; // record
  OP0EW03 OP0EW03 { redefines = OP0EW02 } ; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP4REC OP4REC; // record
  OP5REC OP5REC; // record
  OPAREC OPAREC; // record
  OPUREC OPUREC; // record
  OPWREC OPWREC; // record
  SP1REC SP1REC; // record
  SP2REC SP2REC; // record
  SP6REC SP6REC; // record
  SQLCA SQLCA; // record
  SY2REC SY2REC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VOPPGM01 VOPPGM01; // record
  VRAGCY02 VRAGCY02; // record
  XOWREC XOWREC; // record
  XS0MW01 XS0MW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OP0ET01 {deleteAfterUse = yes}; // table
  use XAATBL {deleteAfterUse = yes}; // table
  use XBDTBL {deleteAfterUse = yes}; // table
  use XCPTBL {deleteAfterUse = yes}; // table
  use XDATBL {deleteAfterUse = yes}; // table
  use XDSTBL {deleteAfterUse = yes}; // table
  use XNDTBL {deleteAfterUse = yes}; // table
  use XODTBL {deleteAfterUse = yes}; // table
  use XOLTBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use XOWTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use XTDTBL {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use YOSTBL {deleteAfterUse = yes}; // table
  use OP0EM.OP0EM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OP0E001: OP0E001();



    goto OP0E005;



     /* ************************************************************/
    OP0E005: OP0E005();



    goto OP0E010;



     /* ************************************************************/
    OP0E010: OP0E010();



    if (converseVar.eventKey is pf14)
      if (OPAREC.OPAERR == "Y")
        converseLib.validationFailed(095); /* please correct errors*/
      else
        OPWREC.OP1GROUP = OP1REC.OP1GROUP;
        COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CACURRAP = "OP0G";
        transfer to program "OP0G" passing COMMAREA; /* misc order header*/
      end
    end




    if (converseVar.eventKey is pf15)
      if (OPAREC.OPAERR == "Y")
        converseLib.validationFailed(095); /* please correct errors*/
      else
        OPWREC.OP1GROUP = OP1REC.OP1GROUP;
        COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CACURRAP = "OP0F";
        transfer to program "OP0F" passing COMMAREA; /* special instructions*/
      end
    end





    if (converseVar.eventKey is enter)
      if (OPAREC.OPAERR == "Y")
         /* next sentence*/
      else
        if (OPWREC.OPWREVM > 1)
          OPWREC.OP1GROUP = OP1REC.OP1GROUP;
          COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
          COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
          COMMAREA.CACURRAP = "OP0J";
          transfer to program "OP0J" passing COMMAREA; /* accept/review*/
        else
          if (OP0EW01.OP0EWIC > 5
           || OP0EW01.OP0EWGTI == "Y")
            OPWREC.OPWOHD = OP0EM001.OP0EMMHD;
            OPWREC.OP1GROUP = OP1REC.OP1GROUP;
            COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
            COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
            COMMAREA.CACURRAP = "OP0F";
            transfer to program "OP0F" passing COMMAREA; /* special instructions*/
          else
            if (OP0EM001.OP0EMMHD == "Y") /* misc ord hdr = 'y'*/
              OPWREC.OP1GROUP = OP1REC.OP1GROUP;
              COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
              COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
              COMMAREA.CACURRAP = "OP0G";
              transfer to program "OP0G" passing COMMAREA; /* misc order header*/
            else
              if (OPWREC.OPWSFLOW == 1)
                OPWREC.OP1GROUP = OP1REC.OP1GROUP;
                COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
                COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
                COMMAREA.CACURRAP = "OP0H";
                transfer to program "OP0H" passing COMMAREA; /* product header*/
              else
                if (OPWREC.OPWSFLOW == 2)
                  OPWREC.OP1GROUP = OP1REC.OP1GROUP;
                  COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
                  COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
                  COMMAREA.CACURRAP = "OP0J";
                  transfer to program "OP0J" passing COMMAREA; /* accept/review order*/
                end
              end
            end
          end
        end
      end
    end



    if (converseVar.eventKey is pf12
     || OPAREC.OPAERR == "Y")
      goto OP0E010;
    end



     /* ************************************************************/
  end // end main
end // end OP0E

// program init
Function OP0E001()



     /* *********************************************************/
     /* *  this process initialize program work and map areas  **/
     /* *********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

  OP0ES01(); /* clear map and records*/


       /* set revision number of application*/

  OP0EM001.OPMRVN = "04"; /* bulk/draw order project 09/26/86*/


  XSENTRY(); /* check security*/
  XSOPS01(); /* check order entry security*/


   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  COMMAREA.CAEZSAP = sysVar.transactionID;
  COMMAREA.CAEZSG12 = "OP";
  COMMAREA.CAEZSG4 = "E";
  sysVar.transactionID = COMMAREA.CAEZSAP;

   /* *************************************************************/

       /* retrieve op1rec record*/

  OP1REC.OP1GROUP = OPWREC.OP1GROUP;


       /* move current date & process name to screen*/

  OP0EM001.OPMPRC = "OP0E010";
  OP0EM001.OPMDT = VGVar.currentShortGregorianDate; /* current date to screen*/


       /* save the current date*/

  OPAREC.OPACYMD = VGVar.currentShortGregorianDate;
  if (OPAREC.OPACYY > 56) /* set century based on year*/
    OPAREC.OPACCC = 19;
  else
    OPAREC.OPACCC = 20;
  end


       /* get warehouse flags for incoming order type*/

  OP0ESWF();

    /* set the po warning flag.  a value of 9 indicates*/
     /* warning message has not been displayed*/
  OP0EW01.OP0EWARN = 9;

   /* 03/12/92 JLoyer: DB2 chg - replace op1dsdcf with*/
   /* op-dirshp-dsct-pct, init with zeroes.*/

  if (OP1REC.OP-DIRSHP-DSCT-PCT < 0) /* if not numeric*/
    OP1REC.OP-DIRSHP-DSCT-PCT = 0; /* init dirshp-disc-percent*/
  end


  set OP0EM001.OP1CUPO cursor, normal;

       /* edit the incoming direct ship code*/
       /* and match it to the warehouse code*/

  OP0EM001.XDSCD = OP1REC.XDSCD;
  OP0EW01.OP0EWDPC = OP1REC.OP-DIRSHP-DSCT-PCT;
  OP0EM001.OP0EWDPC = OP0EW01.OP0EWDPC;
  if (OP0EM001.XDSCD == " "
   && OP0EM001.OP0EWDPC == 0)
    OP0EM001.OP0EWDPC = " ";
  end
  /* commented because it displays the default warehouse code*/
  /* MOVE OP1REC.XWHCD TO OP0EM001.XWHCD;*/
  /*  */
  /* displays the warehouse code entered by the user or default if it*/
  /* is not modified in op0i*/
  if (OPWREC.OPWHEXNO[1] != 0)
    OPAREC.OP1NORID = 0;
    OPAREC.OPWHEXNO = OPWREC.OPWHEXNO[1];
    OPAREC.OPASUB = OPAREC.OP1NORID;
    OP0EM001.XWHCD = OPWREC.XWHCD[OPASUB];
  else
    OP0EM001.XWHCD = OP1REC.XWHCD;
  end
  if (OPWREC.XOWCD != "00")
    OP0EM001.XOWCD = OPWREC.XOWCD;
  end
  OP0ESED();


   /* ************************************************************/
end // end OP0E001

// format order header
Function OP0E005()



       /* *******************************************************/
       /* * in review mode, format data from the op1rec        **/
       /* * record for display                                 **/
       /* * in enter mode, format dafaults from order type,    **/
       /* * customer, sales program and session default        **/
       /* *******************************************************/


  TA1REC.TA1LOCAT[1] = "OP0E005";


       /* format customer number*/

  OPAREC.OPACUCO = OP1REC.KUCCOID;
  OPAREC.OPASEP1 = ".";
  OPAREC.OPACUSR = OP1REC.KUMSTRID;
  OPAREC.OPASEP2 = ".";
  OPAREC.OPACUDP = OP1REC.XNXCD;


  set OP0EW02 empty;

       /* move customer number and name to screen*/

  OP0EM001.OPMCUNO = OPAREC.OPACUNO;
  OP0EM001.KUMSTRNM = OPWREC.KUMSTRNM;


       /* get rep and agency and move to screen*/

  if (OP1REC.SM4REPID == 0) /* if no sales agency/rep yet*/
    OP0ESRR(); /* get them*/
  end


       /* move purchase order number to screen*/

  OP0EM001.OP1CUPO = OP1REC.OP1CUPO;


       /* if order by = ' ', darken label and field*/

  if (OP1REC.OP1ORDBY == " ")
    set OP0EM001.OP0EMOBL skip, invisible;
    set OP0EM001.OP1ORDBY skip, invisible;
  else
    set OP0EM001.OP0EMOBL initialAttributes;
    set OP0EM001.OP1ORDBY initialAttributes;
    OP0EM001.OP1ORDBY = OP1REC.OP1ORDBY;
  end


       /* initialize the abend screen*/

  TA1REC.TA1TYPE = "DB2 "; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function*/
  TA1REC.TA1PGMNM = "OP0E"; /* program name*/
  TA1REC.TA1MAP = "OP0EM001"; /* map name*/

         /* format the order header*/

  if (OPWREC.OPWREVM > 1
   || OPWREC.OPWFUNC == "3")
    OP0ES10(); /* format order header for review*/
  else
    OP0ES50(); /* create order header*/
  end



   /* ************************************************************/
end // end OP0E005

// converse map and edit data
Function OP0E010()



       /* *******************************************************/
       /* * converse op0em001 - edit and accept data for the   **/
       /* * order header  record.                              **/
       /* *******************************************************/


   /* added to stop discounts on salesman orders - bug 270*/
   /* dwalke 11-28-89*/

  if (KUCREC.XAUCD == "26" /* if the order is a rep promo*/
   || KUCREC.XAUCD == "27" /* or a rep\agency personal purchase*/
   || KUCREC.XAUCD == "64") /* or a salesman sample*/
    OP0ESAC(); /* set terms and discount fields*/
                                   /* autoskip*/
  end

       /* if international order and order class = 'in' or 'as'*/
       /* or order need date less than current date (divert order)*/
       /* protect direct ship, warehouse, owner group, and*/
       /* bulk/draw codes*/

  if (OP1REC.XDVCD == "02")
    if (OP1REC.XOCCD == "IN" 
     || OP1REC.XOCCD == "AS" /* international airborne order*/
     || OP1REC.OP1CUNDT < OPAREC.OPACDT) /* implies divert order*/
      set OP0EM001.XDSCD protect;
      set OP0EM001.XDSABRV protect;
      set OP0EM001.XWHCD protect;
      set OP0EM001.XOWCD protect;
      set OP0EM001.XBDCD protect;
    end
  end

   /* ******************* divert order processing *****************/

  if (OP1REC.XDVCD == "02" /* international order*/
   && OP1REC.XOBCD == "F1" /* futures order*/
   && OP1REC.XDSCD == "1"  /* direct ship*/
   && OP1REC.OP1CUNDT < OPAREC.OPACDT) /* need dt less than order dt*/
    set OP0EM001.XDSCD protect; /* protect warehouse field*/
    set OP0EM001.XWHCD protect; /* protect direct ship*/
  end

   /* *************** end divert order processing *****************/

   /* ************************************************************/
  converse OP0EM001 ;
   /* ************************************************************/



       /* clear error message line*/

  OP0EM001.VAGen_EZEMSG = " ";
  OP0EM001.OPMMSG = " ";



       /* reset the error flag*/

  OPAREC.OPAERR = "N";

  if (OEAREC.OEAERR == "Y" /* if terms could not be processed*/
   && converseVar.eventKey not pa2) /* and user did not reject order*/
    OPAREC.OPAERR = "Y"; /* set to reconverse*/
    converseLib.validationFailed(509);
  end

       /* initialize the abend screen*/

  TA1REC.TA1LOCAT[1] = "OP0E010";

     /* check po warn flag.  conditions for setting warning may*/
      /* have changed.  a value of 9 indicates warning has not*/
      /* been displayed.*/
  if (OP0EM001.OP1CUPO is modified)
    OP0EW01.OP0EWARN = 9;
  end
       /* check and process valid aid keys*/


       /* enter:*/
            /* 1. order is being entered*/
                 /* to product header if flow = form*/
                 /* to accept/reject screen if flow = phone*/
            /* 2. order is being reviewed*/
                 /* to accept/reject screen*/

       /* pf12: edit only*/

       /* pf14: misc order header*/

       /* pf15: special instructions*/

        /* pa2: reject order (enter mode only)*/

        /* if pa2 is pressed to reject an order*/
          /* and the flow is order form*/
              /* delete the entered order header*/
              /* delete address records*/
              /* delete  label and special instruction records*/
              /* go back to the order menu screen*/



  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf12
   || converseVar.eventKey is pf14
   || converseVar.eventKey is pf15)
      /* next sentence*/
  else
    if (converseVar.eventKey is pa2 /* request to cancel order and*/
     && OPWREC.OPWSFLOW == 1        /* form flow and*/
     && OPWREC.OPWREVM < 2)         /* not in review mode*/
      OP0ESDE(); /* delete ohdr, address & text records*/
      OPWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
      COMMAREA.CACURRAP = "OP0B";
      transfer to program "OP0B" passing COMMAREA; /* back to order menu screen*/
    else
      OP0ESMD(); /* set modified fields modified*/
      converseLib.validationFailed(008); /* key pressed is not valid*/
      OPAREC.OPAERR = "Y";
      if (converseVar.eventKey is pa1 
       || converseVar.eventKey is pa2 /* pa2 invalid 4/89 shc*/
       || converseVar.eventKey is pa3)
        OP0ESMT(); /* set all fields mod*/
      end
      exit stack;
    end
  end


       /* edit fields entered*/
    /* a new statement group added for golf cresting*/
    /* to show the warning message for xso 59 allocation holds*/
    /* tt#4073 changes begin sbhara    04/17/00*/

  if (OPAREC.OPAERR == "N")
    OP0ESAE(); /* edit fields*/
  end

    /* issue po warning*/
  if (OPAREC.OPAERR == "Y" /* there is an error*/
   || OP0EW01.OP0EWARN == 0) /* or the warning has been done*/
     /* next sentence*/
  else
    OP0ESAW();
    OP0ES-SLS59-WARN(); /* xso 59 warning message*/
    if (OP0EW01.OP0EWARN != 0)
      OPAREC.OPAERR = "Y"; /* to prevent an update*/
      OP0EM001.OPMMSG = OP0ET01.OP0ETMSG[OP0EWARN];
      OP0EW01.OP0EWARN = 0;
    end
  end

    /* tt#4073 changes begin   04/17/00*/
       /* if no errors found, move data on screen to op1rec*/

  if (OPAREC.OPAERR == "N")
    OP0ESMV();
  end



   /* ************************************************************/
end // end OP0E010

// edit for trnsmted airborne ord
Function OP0ES-AIRBORNE()
    /* this edit is to determine if an airborne order is being added,*/
     /* and whether or not the airborne transmission for the need date*/
     /* has already been done.*/

     /* first we have to get the last airborne transmission date*/

  if (OP0EW01.OP0EW-VOPPGM-READ != "Y")
    VOPPGM01.XXX-PGM-NBR = "OP1920";
    call "IO6600" ("S ", SQLCA, VOPPGM01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
      OP0EW01.OP0EW-VOPPGM-READ = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1PGMNM = "OP0E   ";
      TA1REC.TA1DBASE = "DORDER";
      TA1REC.TA1TBLVU = "VOPPGM01";
      TA1REC.TA1LOC = "OP0ES-AIRBORNE";
      TA1REC.TA1LOCAT[4] = "IO6600";
      TA1REC.TA1TBLKE = "OP1920";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

   /* now perform the airbore checking stmtgrp.  if need date is on or*/
    /* before the last transmission date, then we have to put out an error*/
    /* to force a need date change*/

  XS0MW01.XS0MWDIV = OP1REC.XDVCD;
  XS0MW01.XS0MWORT = OP1REC.XOTCD;
  XS0MW01.XS0MWDIR = OP0EM001.XDSCD;
  XS0MW01.XS0MWCUS = OP1REC.KUCCOID;
  XS0MW01.XS0MWGPC = OP1REC.XGPCD;
  XS0MW01.XS0MWNDT = OP1REC.OP1CUNDT;

  XS0MS-CHK-AIRBORNE();

  if (XS0MW01.XS0MWABF == "Y") /* changes make a transmitted*/
    OPAREC.OPAERR = "Y"; /* airborne order*/
    XS0MW01.XS0MWABF = "N"; /* reset airborne flag*/
    converseLib.validationFailed(790); /* updates not allowed*/
    set OP0EM001.XDSCD cursor, modified, bold;
  end
end // end OP0ES-AIRBORNE

// sales ofc 59-alloc hold warnin
Function OP0ES-SLS59-WARN()
   /* *************************************************************/
   /* New statement group added for the golf cresting project   **/
   /* Orders for sales office will put on allocation hold '05'  **/
   /* 04/17/00 sbhara                                           **/
   /* *************************************************************/

  if (OP1REC.XSOCD == "59" /* if the sales office 59*/
   && OP0EW01.OP0EWARN == 0) /* no other warning message yet*/
    OP0EW01.OP0EWARN = 7; /* show the warning about allocation hold*/
  else
    return;
  end
end // end OP0ES-SLS59-WARN

// clear screen and records
Function OP0ES01()



       /* *******************************************************/
       /* * this statement group clears the screen and the     **/
       /* * working storage records                            **/
       /* *******************************************************/


  set OP0EM001 initial;


       /* set working storage records empty*/

  set OPWREC empty;
  set OPAREC empty;
  set OP0EW01 empty;
  set AVGREC empty;
  set AVIREC empty;
  set OEAREC empty;



   /* ************************************************************/
end // end OP0ES01

// format order header for review
Function OP0ES10()




        /* ******************************************************/
        /* * move the order header data to screen for review   **/
        /* ******************************************************/


       /* disable pa2 key in review mode*/

  set OP0EM001.OP0EMPA2 skip, invisible;


       /* get the maximum discount percent for order type*/

  sysVar.arrayIndex = 1;
  while (XODTBL.XOTCD[sysVar.arrayIndex] != "99")
    if (OP1REC.XOTCD == XODTBL.XOTCD[sysVar.arrayIndex]
     && XODTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && OP1REC.OP1CUNDT >= XODTBL.XODBENDT[sysVar.arrayIndex]
     && OP1REC.OP1CUNDT <= XODTBL.XODEENDT[sysVar.arrayIndex])
      OP0EW01.XODMXDSC = XODTBL.XODMXDSC[sysVar.arrayIndex];
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end


   /* if this is a nil (international) order, don't*/
   /* show terms*/
   /* if domestic order don't show est freight*/
   /* est ocean freight or prepaid insurance*/
   /* or prepaid freight*/

  if (OP1REC.XDVCD == "02")
    OP0EST5(); /* set terms fields dark*/
    OP0EM001.OP1IPIND = KUCREC.KUCINSPD;
    OP0EM001.OP1FTIND = KUCREC.KUCFRTPD;
  else
    set OP0EM001.OP1CPODT skip, invisible;
    set OP0EM001.OP1IPIND skip, invisible;
    set OP0EM001.OP1FTIND skip, invisible;
    set OP0EM001.OP1SHAMT skip, invisible;
    set OP0EM001.OP1IFAMT skip, invisible;
    set OP0EM001.OPMIPIND skip, invisible;
    set OP0EM001.OPMFTIND skip, invisible;
    set OP0EM001.OPMSHAMT skip, invisible;
    set OP0EM001.OPMIFAMT skip, invisible;
    set OP0EM001.OPMCPODT skip, invisible;
    OP0EST4(); /* prepare terms for initial entry*/
  end

       /* if there are special instructions for this order,*/
       /* get the instructions from the dorder.vtext001.*/

  OP0ESSI(); /* get the special instructions*/


       /* if there are special labels for this order,*/
       /* get the labels from the dorder.vtext001.*/

  if (OP1REC.OP1SPLBF == "Y")
    OP0ESSL(); /* get the special labels*/
  end



       /* disable the more special instructions field &*/
       /* misc order header field if in review mode*/


  set OP0EM001.OP0EMMSI skip, invisible;
  set OP0EM001.OP0EMMHD skip, invisible;
  set OP0EM001.OP0EMINS skip, invisible;
  set OP0EM001.OP0EMMSC skip, invisible;



  OP0EM001.OP1CUPO = OP1REC.OP1CUPO; /* customer po number*/


  OP0EW01.OP0EWDSF = "N"; /* set flag off*/
  if (OP1REC.XBCCD == "08") /* cole haan order*/
    sysVar.arrayIndex = 1;
    while (XOTTBL.XOTCD[sysVar.arrayIndex] != "99")
      if (XOTTBL.XOTCD[sysVar.arrayIndex] == OP1REC.XOTCD)
        if (XOTTBL.XOTATONF[sysVar.arrayIndex] == "Y") /* at-once order type*/
          OP0EW01.OP0EWDSF = "Y"; /* set d-s-b-d protect flag on*/
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end
  end


       /* format dont ship before date*/

  if (OP1REC.OP1DSBDT == 0)
    OP0EM001.OP1DSBDT = "MMDDYY";
  else
    OPAREC.OPAWDT = OP1REC.OP1DSBDT;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    OP0EM001.OP1DSBDT = OPAREC.OPAFDT; /* dont ship before date*/
    if (OP0EW01.OP0EWDSF == "Y")
      set OP0EM001.OP1DSBDT protect;
    end
  end


       /* format p.o date*/

  if (OP1REC.OP1CPODT == 0)
    OP0EM001.OP1CPODT = "MMDDYY";
  else
    OPAREC.OPAWDT = OP1REC.OP1CPODT;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    OP0EM001.OP1CPODT = OPAREC.OPAFDT; /* p.o. date*/
  end

       /* format dont ship after date*/

  if (OP1REC.OP1DSADT == 0)
    OP0EM001.OP1DSADT = "MMDDYY";
  else
    OPAREC.OPAWDT = OP1REC.OP1DSADT;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    OP0EM001.OP1DSADT = OPAREC.OPAFDT; /* dont ship after date*/
  end

       /* format callout date*/

  if (OP1REC.OP1CALDT == 0)
    OP0EM001.OP1CALDT = "MMDDYY";
  else
    OPAREC.OPAWDT = OP1REC.OP1CALDT;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    OP0EM001.OP1CALDT = OPAREC.OPAFDT; /* callout date*/
  end

  OP0EM001.OP1SHAMT = OP1REC.OP1SHAMT; /* inlnd freight*/
  OP0EM001.OP1IFAMT = OP1REC.OP1IFAMT; /* inlnd freight*/
  OP0EM001.OP1FTIND = OP1REC.OP1FTIND; /* prepaid freight*/
  OP0EM001.OP1IPIND = OP1REC.OP1IPIND; /* prepaid ins*/

       /* move order code to screen and protect this*/
       /* field if it is a draw order -- 09/22/86*/

       /* 02/19/91 -- set the blank bulk draw flag and protect*/
       /* order code field if xbcd is not equal '8' or 'f'*/

  if (OP1REC.XBDCD == "8" /* blank bulk draw*/
   || OP1REC.XBDCD == "F" /* finished goods bulk draw*/
   || OP1REC.XBDCD == "3") /* finished goods draw*/
    OP0EW01.OP0EWBBD = "Y"; /* set blank bulk draw flag*/
  else
    OP0EW01.OP0EWBBD = "N"; /* set blank bulk draw flag*/
  end

  OP0EM001.XBDCD = OP1REC.XBDCD; /* bulk order code*/
  if (OP1REC.XBDCD in XBDTBL.XBDCD
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    if (XBDTBL.XBDRWOFL[sysVar.arrayIndex] == "Y")
      OP0EW01.OP0EWOCD = "D"; /* it is a draw order*/
      if (OP1REC.XBDCD == "8" /* blank bulk draw*/
       || OP1REC.XBDCD == "F") /* finished goods bulk draw*/
         /* next sentence*/
      else
        set OP0EM001.XBDCD protect;
      end
    else
      if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y")
        OP0EW01.OP0EWOCD = "B"; /* it is a bulk order*/
      else
        OP0EW01.OP0EWOCD = "R"; /* it is a regular order*/
      end
    end
  end

    /* protect xbdcd code if necessary*/


    /* if blank bulk order and form flow*/
    /* don't allow the bulk code to be changed*/

  if (OPWREC.OPWSFLOW == "1"
   && OP1REC.XBDCD == "B")
    set OP0EM001.XBDCD protect;
  end

       /* get the bulk/draw order code abbreviation*/

  OP0ESOA(); /* get order code abrv  --09/22/86*/


  OP0EM001.XDSCD = OP1REC.XDSCD; /* direct ship code*/
  OP0EW01.OP0EWDPC = OP1REC.OP-DIRSHP-DSCT-PCT; /* ds discount pct*/
  OP0EM001.OP0EWDPC = OP0EW01.OP0EWDPC;

  if (OP1REC.XDSCD == " ")
    OP0EW01.XDSWHSEF = "Y";
  else
    OP0ESDS(); /* get direct ship abbreviation*/
  end


  OP0EM001.OP1BOFL = OP1REC.OP1BOFL; /* back order flag*/


       /* protect warehouse in review mode -- 09/22/86*/

   /* ;IF OP1REC.XWHCD EQ ' ';*/
    /* IF OP0EW01.XDSWHSEF EQ 'Y';*/
      /* MOVE 094 TO EZEMNO       ; required cust data is missing*/
      /* SET OP0EM001.XWHCD CURSOR,MODIFIED,BRIGHT;*/
    /* END ;*/
   /* ELSE ;*/
  OP0EW01.XWHCD = OP1REC.XWHCD;
  OP0ESWN(); /* get warehouse name*/
  set OP0EM001.XWHCD protect; /* protect warehouse in review mode*/
  set OP0EM001.XOWCD protect; /* protect owner group in review mode*/
   /* END ;*/


       /* if order by = ' ', darken the label*/

  if (OP1REC.OP1ORDBY == " ")
    set OP0EM001.OP0EMOBL skip, invisible;
    set OP0EM001.OP1ORDBY skip, invisible;
  else
    set OP0EM001.OP0EMOBL initialAttributes;
    set OP0EM001.OP1ORDBY initialAttributes;
    OP0EM001.OP1ORDBY = OP1REC.OP1ORDBY; /* ordered-by*/
  end

           /* format sales rep*/


  if (OP1REC.SM4REPID > 0)
    OP0EM001.SM1AGYID = OP1REC.SM1AGYID; /* sales agencyid*/
    OP0EM001.SM4REPID = OP1REC.SM4REPID; /* sales rep id*/
    OP0EW01.SM1AGYID = OP1REC.SM1AGYID; /* sales agencyid*/
    OP0EW01.SM4REPID = OP1REC.SM4REPID; /* sales rep id*/
    OP0ESRN(); /* get sales rep name*/
  end

  /* BL#3690 Change begin -- Rshaik  07/12/99.*/
  /* Comented as per Scott/Diane request*/
  /* This Function is no longer required for business.*/
  /* OP0ES51; /* determine if auto cnfm field should be displayed*/
  /*  */
  set OP0EM001.OP0EM001-AUTO-CNFM skip, invisible;
  set OP0EM001.OP-SND-CNFM-FL skip, invisible;
  /*  */
  /* BL#3690 Change end*/

  OP0ESKC(); /* recall cust info for check to*/
                                   /* autoskip terms*/
   /* for account class 26,27,64- primary use in review mode*/

   /* ************************************************************/
end // end OP0ES10

// display & accept ord hdr data
Function OP0ES50()



       /* ****************************************************/
       /* *  order is being entered, format customer's      **/
       /* *  defaults to display                            **/
       /* ****************************************************/


       /* if it is phone flow, disable the pa2 key*/

  if (OPWREC.OPWSFLOW == "2") /* phone flow*/
    set OP0EM001.OP0EMPA2 skip, invisible;
    set OP0EM001.XDSCD protect;
    set OP0EM001.OP0EWDPC protect;
    set OP0EM001.XDSABRV protect;
  end


       /* read the customer/gpc rec to get customer's defaults*/

  OP0ESCG(); /* read the customer/gpc rec*/

  OP0ESKC(); /* get kucrec--company*/

   /* if this is a nil (international) order, don't*/
   /* show terms*/
   /* if domestic order don't show est freight*/
   /* est ocean freight or prepaid insurance*/
   /* or prepaid freight*/

  if (OP1REC.XDVCD == "02")
    OP0EST5(); /* set terms fields dark*/
    OP0EM001.OP1IPIND = KUCREC.KUCINSPD;
    OP0EM001.OP1FTIND = KUCREC.KUCFRTPD;
  else
    set OP0EM001.OP1CPODT skip, invisible;
    set OP0EM001.OP1IPIND skip, invisible;
    set OP0EM001.OP1FTIND skip, invisible;
    set OP0EM001.OP1SHAMT skip, invisible;
    set OP0EM001.OP1IFAMT skip, invisible;
    set OP0EM001.OPMIPIND skip, invisible;
    set OP0EM001.OPMFTIND skip, invisible;
    set OP0EM001.OPMSHAMT skip, invisible;
    set OP0EM001.OPMIFAMT skip, invisible;
    set OP0EM001.OPMCPODT skip, invisible;
    OP0EST3(); /* prepare terms for initial entry*/
  end


       /* check misc order header default*/

  OP0EM001.OP0EMMHD = OPWREC.OPWDOHD;
  if (OPWREC.OPWDOHD == "N")
    if (KUCREC.KUCVNDFL == "Y") /* vendor auth required*/
      converseLib.validationFailed(082); /* cust requires vendor auth - misc ohdr*/
                                   /* screen*/
      set OP0EM001.OP0EMMHD bold; /* warning message only*/
    end
  end


       /* get the labels from the dcust.vlabel01 table*/

  if (KUNREC.KUNLABIN == "Y")
    OP0ESCL(); /* get cust labels*/
  end


       /* get the special instructions from the dcust.vinst001*/
       /* table*/

  if (KUNREC.KUNISIND == "Y")
    OP0ESCI(); /* get cust special inst*/
  else
    OP0EM001.OP0EMMSI = "N";
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value


       /* get the default warehouse--passed from op0c*/
       /* if it is draw order, this warehouse is the*/
       /* bulk order warehouse*/

  /* commented because it displays the default warehouse code*/
  /* MOVE OP1REC.XWHCD TO OP0EM001.XWHCD;*/
  /*  */
  /* displays the warehouse code entered by the user or default if it*/
  /* is not modified in op0i*/
  if (OPWREC.OPWHEXNO[1] != 0)
    OPAREC.OP1NORID = 0;
    OPAREC.OPWHEXNO = OPWREC.OPWHEXNO[1];
    OPAREC.OPASUB = OPAREC.OP1NORID;
    OP0EM001.XWHCD = OPWREC.XWHCD[OPASUB];
  else
    OP0EM001.XWHCD = OP1REC.XWHCD;
  end
  if (OP0EM001.XWHCD == " ")
    if (OP0EW01.XDSWHSEF == "Y")
      converseLib.validationFailed(094); /* required cust data is missing*/
      set OP0EM001.XWHCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
    end
  else
    OP0EW01.XWHCD = OP0EM001.XWHCD;
    OP0ESWN(); /* get warehouse name*/
  end


       /* get the bulk/draw order code and abbreviation*/

  OP0EM001.XBDCD = OP1REC.XBDCD;
  OP0ESOA(); /* get order code abbreviation --*/
                                   /* 09/22/86*/


       /* if it is a draw order, the bulk/draw order code*/
       /* cannot be changed*/

  if (OP1REC.XBDCD in XBDTBL.XBDCD
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    if (XBDTBL.XBDRWOFL[sysVar.arrayIndex] == "Y")
      OP0EW01.OP0EWOCD = "D"; /* it's a draw order*/
      set OP0EM001.XBDCD protect;
    else
      if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y")
        OP0EW01.OP0EWOCD = "B"; /* it's a bulk order*/
      else
        OP0EW01.OP0EWOCD = "R"; /* it's a regular order*/
      end
    end
  end


      /* for draws*/
      /* warehouse and owner group*/
      /* are defaulted from the bulk order and cannot be*/
      /* changed.*/

  if (OP0EW01.OP0EWOCD == "D") /* draw order*/
    set OP0EM001.XWHCD protect;
    set OP0EM001.XOWCD protect;
  end

     /* in phone flow, owner group cannot be changed, since*/
     /* item records have already been written.*/

  if (OPWREC.OPWSFLOW == 2)
    set OP0EM001.XOWCD protect;
  end

       /* check bo flag*/

  OP0EM001.OP1BOFL = OP1REC.OP1BOFL;
  if (OP0EM001.OP1BOFL == " ")
    converseLib.validationFailed(094); /* required cust data is missing*/
    set OP0EM001.OP1BOFL cursor, modified, bold;
  end


  sysVar.arrayIndex = 1;
  OP0EW01.OP0EWDSF = "N"; /* set flag off*/
  while (XOTTBL.XOTCD[sysVar.arrayIndex] != "99")
    if (XOTTBL.XOTCD[sysVar.arrayIndex] == OP1REC.XOTCD)
      if (XOTTBL.XOTATONF[sysVar.arrayIndex] == "Y") /* at-once order type forces*/
        OP0EW01.OP0EWDSF = "Y"; /* d-s-b-d protect field flag*/
        OP1REC.OP1DSBDT = OPAREC.OPACDT; /* dont-ship-before = today*/
        OPAREC.OPAWDT = OPAREC.OPACDT;
        OPAREC.OPAFYY = OPAREC.OPAWYY;
        OPAREC.OPAFMM = OPAREC.OPAWMM;
        OPAREC.OPAFDD = OPAREC.OPAWDD;
        OP0EM001.OP1DSBDT = OPAREC.OPAFDT;
      end
    end
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end

     /* if colehan, if d-s-b-dt is empty, default to need date*/

  if (OP1REC.XBCCD == "08"
   && OP1REC.OP1DSBDT == 0)
    OPAREC.OPAWDT = OP1REC.OP1CUNDT;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    OP0EM001.OP1DSBDT = OPAREC.OPAFDT; /* dont ship before date*/
    OP1REC.OP1DSBDT = OP1REC.OP1CUNDT;
  end


  if (OP1REC.XBCCD == "08")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = OP0EM001.OP1DSBDT;
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD != 0)
      converseLib.validationFailed(069); /* dont ship before date is not a valid*/
                                   /* date*/
      OP1REC.OP1DSBDT = 0;
      set OP0EM001.OP1DSBDT cursor, modified, bold;
      OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
      OPAREC.OPAERR = "Y";
    else
      if (TA2REC.TA2DYWK == "SATURDAY")
        set TA2REC empty;
        TA2REC.TA2DTOPT = "GREGGREG";
        TA2REC.TA2GRTYP = "A";
        TA2REC.TA2DYAOD = 2; /* number of days to add*/
        TA2REC.TA2GRGA = OP0EM001.OP1DSBDT;
        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
        if (TA2REC.TA2RTNCD != 0)
          converseLib.validationFailed(069); /* dont ship before date is not a valid*/
                                   /* date*/
          OP1REC.OP1DSBDT = 0;
          set OP0EM001.OP1DSBDT cursor, modified, bold;
          OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
          OPAREC.OPAERR = "Y";
        else
          OP0EM001.OP1DSBDT = TA2REC.TA2GRGAN;
          OP1REC.OP1DSBDT = TA2REC.TA2GRGGN;
          if (OP0EW01.OP0EWDSF == "Y") /* protect field for at-once ot*/
            set OP0EM001.OP1DSBDT protect;
          end
        end
      else
        if (TA2REC.TA2DYWK == "SUNDAY")
          set TA2REC empty;
          TA2REC.TA2DTOPT = "GREGGREG";
          TA2REC.TA2GRTYP = "A";
          TA2REC.TA2DYAOD = 1; /* number of days to add*/
          TA2REC.TA2GRGA = OP0EM001.OP1DSBDT;
          call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
          if (TA2REC.TA2RTNCD != 0)
            converseLib.validationFailed(069); /* dont ship before date is not a valid*/
                                   /* date*/
            OP1REC.OP1DSBDT = 0;
            set OP0EM001.OP1DSBDT cursor, modified, bold;
            OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
            OPAREC.OPAERR = "Y";
          else
            OP0EM001.OP1DSBDT = TA2REC.TA2GRGAN;
            OP1REC.OP1DSBDT = TA2REC.TA2GRGGN;
            if (OP0EW01.OP0EWDSF == "Y") /* protect field for at-once ot*/
              set OP0EM001.OP1DSBDT protect;
            end
          end
        end
      end
    end
  end


  if (OPWREC.OPWSFLOW == "2")
    sysVar.arrayIndex = 1;
    while (XOTTBL.XOTCD[sysVar.arrayIndex] != "99")
      if (XOTTBL.XOTCD[sysVar.arrayIndex] == OP1REC.XOTCD
       && XOTTBL.XOTOALOC[sysVar.arrayIndex] == "Y")
        set OP0EM001.XWHCD protect;
        set OP0EM001.XOWCD protect;
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    end
  end


  /* BL#3690 Change begin -- Rshaik  07/12/99.*/
  /* Comented as per Scott/Diane request*/
  /* This Function is no longer required for business.*/
  /* OP0ES51; /* determine if auto cnfm field should be displayed*/
  /*  */
  set OP0EM001.OP0EM001-AUTO-CNFM skip, invisible;
  set OP0EM001.OP-SND-CNFM-FL skip, invisible;
  /*  */
  /* BL#3690 Change end*/


end // end OP0ES50

// set terms/discounts autoskip
Function OP0ESAC()



      /* ********************************************************/
      /* * set terms and discount fields to autoskip if the    **/
      /* * account class is 26, 27, 64                         **/
      /* * 26 = rep promo order                                **/
      /* * 27 = rep\agency personal purchase                   **/
      /* * 64 = salesman sample                                **/
      /* ********************************************************/


   /* added to stop discounts on salesman orders - bug 270*/
   /* added by dwalke 11-28-89*/

  set OP0EM001.XPTCD skip; /* set terms and discount fields to*/
  set OP0EM001.XDAPCT skip;
  set OP0EM001.XTDPCT skip;
  set OP0EM001.OP1TDFCP skip;
  set OP0EM001.OP1TDBKP skip;
  set OP0EM001.XAAPCT skip;
  set OP0EM001.OP1AAFCP skip;
  set OP0EM001.OP1AABKP skip;
  set OP0EM001.XCPPCT skip;

   /* ************************************************************/
end // end OP0ESAC

// edit entered fields
Function OP0ESAE()



      /* ********************************************************/
      /* * edits will be done in bottom to top order on the    **/
      /* * screen.                                             **/
      /* * this will set all fields in error bright but the    **/
      /* * cursor and the error message will correspond to the **/
      /* * top most error.                                     **/
      /* ********************************************************/


  OP0EW01.OP0EWMTF = "N"; /* set modify terms flag*/


  if (OP0EM001.XCPPCT is modified)
    OP0EW01.OP0EWMTF = "Y";
    OP0ESEC(); /* edit co-op percent*/
  end


  if (OP0EM001.XAAPCT is modified
   || OP0EM001.OP1AAFCP is modified
   || OP0EM001.OP1AABKP is modified)
    OP0EW01.OP0EWMTF = "Y";
    OP0ESEA(); /* edit ad allowance percents*/
  end



  if (OP0EM001.XTDPCT is modified
   || OP0EM001.OP1TDFCP is modified
   || OP0EM001.OP1TDBKP is modified)
    OP0EW01.OP0EWMTF = "Y";
    OP0ESET(); /* edit trade disc percents*/
  end



  if (OP0EM001.XDAPCT is modified)
    OP0EW01.OP0EWMTF = "Y";
    OP0ESEF(); /* edit deffective percent*/
  end



  if (OP0EM001.XPTCD is modified)
    OP0ESEP(); /* edit payment term code*/
  end



       /* the total of all discount percents must not greater*/
       /* than the maximum discount percent(xodtbl.xodmxdsc)*/

  if (OP0EW01.OP0EWMTF == "Y")
    if (OPAREC.OPAERR == "N")
      OP0ESTL(); /* check discount percents total*/
    end
  end



  if (OP0EM001.OP0EMMHD is modified)
    OP0ESEH(); /* edit misc order header field*/
  end



  if (OP0EM001.OP0EMMSI is modified)
    OP0ESEM(); /* edit more special inst field*/
  end



  if (OP0EM001.KUSTEXT1 is modified
   || OP0EM001.KUSTEXT2 is modified)
    OP0ESEL(); /* edit special labels*/
  end



  if (OP0EM001.OP4TXT is modified
   || OP0EM001.XNDCD is modified)
    OP0ESEI(); /* edit special inst*/
  end



  if (OP0EM001.OP1BOFL is modified)
    OP0ESEB(); /* edit back ordered flag*/
  end



  if (OP0EM001.XDSCD is modified
   || OP0EM001.OP0EWDPC is modified)
    OP0ESED(); /* edit direct ship code*/
  end



  if (OP0EM001.XWHCD is modified
   || OP0EM001.XOWCD is modified)
    OP0ESEW(); /* edit warehouse, owner group*/
  end


  if (OP0EM001.XBDCD is modified)
    OP0ESEK(); /* edit bulk order code*/
  end

    /* reset map protect after edit*/

    /* for draws*/
    /* owner group and warehouse are defaulted*/
    /* from the bulk order and cannot be changed (log#665)*/

    /* also, in review mode owner group and warehouse*/
    /* cannot be changed.*/

    /* finally, in phone flow, owner group cannot be changed*/
    /* (log#665)*/

  if (OP0EW01.OP0EWOCD == "D") /* draw order*/
    set OP0EM001.XOWCD protect;
    set OP0EM001.XWHCD protect;
  else
    if (OPWREC.OPWREVM > 1 /* review mode*/
     || OPWREC.OPWFUNC == "3")
      set OP0EM001.XOWCD protect;
      set OP0EM001.XWHCD protect;
    else
      if (OPWREC.OPWSFLOW == 2)
        set OP0EM001.XOWCD protect;
      end
    end
  end

       /* relational edit -- edit bulk/draw order code vs*/
       /* direct ship code*/

  OP0ESBD(); /* edit bulk/draw vs direct ship*/


  if (OP0EM001.XWHCD == "51")
    if (OP0EM001.OP1DSBDT == " "
     || OP0EM001.OP1DSBDT == "MMDDYY"
     || OP0EM001.OP1DSBDT == "000000")
      set OP0EM001.OP1DSBDT cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(958); /* whse 51 requires dnsb*/
    end
  end

    /* if a cole-haan order, don't ship before date is required*/

  if (OP1REC.XBCCD == "08")
    if (OP0EM001.OP1DSBDT == " "
     || OP0EM001.OP1DSBDT == "MMDDYY"
     || OP0EM001.OP1DSBDT == "000000")
      set OP0EM001.OP1DSBDT cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(521); /* cole haan requires dnsb*/
    else
      if (OP0EM001.OP1CALDT is modified
       || OP0EM001.OP1DSADT is modified
       || OP0EM001.OP1DSBDT is modified)
        OP0ESDT(); /* edit dates*/
      end
    end
  else
    if (OP0EM001.OP1CALDT is modified
     || OP0EM001.OP1DSADT is modified
     || OP0EM001.OP1DSBDT is modified
     || OP0EM001.OP1CPODT is modified)
      OP0ESDT(); /* edit dates*/
    end
  end


  if (OCGREC.OCG-OC-ELIG-FOR-CNFM-FL == "Y" /* IF FIELD ENTERABLE*/
   && OP0EM001.OP-SND-CNFM-FL is modified)  /* AND CHANGED*/
    if (OP0EM001.OP-SND-CNFM-FL == "Y"
     || OP0EM001.OP-SND-CNFM-FL == "N")
      set OP0EM001.OP-SND-CNFM-FL initialAttributes;
      OP1REC.OP-SND-CNFM-FL = OP0EM001.OP-SND-CNFM-FL;
    else
      set OP0EM001.OP-SND-CNFM-FL cursor, modified, bold;
      converseLib.validationFailed(711); /* MUST BE Y OR N*/
      OPAREC.OPAERR = "Y";
    end
  end


  if (OP0EM001.SM1AGYID is modified
   || OP0EM001.SM4REPID is modified)
    OP0EW01.SM1AGYID = OP0EM001.SM1AGYID;
    OP0EW01.SM4REPID = OP0EM001.SM4REPID;
    OP0EW02.OP0EWOAG = OP1REC.SM1AGYID; /* save original agency*/
    OP0EW02.OP0EWORP = OP1REC.SM4REPID; /* save original rep*/
    OP0ESRH(); /* edit sales rep*/
  end

  OP0ESAH(); /* is cust po nbr required?*/

  OP1REC.OP1SSHPO = " "; /* init. small ship. chg ovrrd flag*/

  if (OPAREC.OPAERR == "N")
    set OP0EM001.SM4REPID cursor;
  end

end // end OP0ESAE

// edit for cust op nbr required
Function OP0ESAH()
      /* ******************************************/
   /* edit the relationship between:*/
    /* - customer purchase order number (OP1CUPO)*/
    /* - order type (XOBCD -> XOVTBL.XOTCD -> XOTTBL.XOTATONF)*/
    /* - purchase order required code (KUCYPOFT)*/

   /* For some customers, we required additional information*/
   /* before finalizing an order.  What we require is determined*/
   /* by kucypoft - 00 - nothing is required*/
                 /* 01 - customer po number is required*/
                 /* 02 - customer po number and hard copy*/
                      /* required*/
                 /* 03 - customer po number, hard copy and*/
                      /* confirmation required*/

   /* Orders that are not 'at once' orders are automatically*/
   /* placed on allocation hold until the requirements indicated*/
   /* by KUCYPOFT have been met.  This is done in OP0J.*/

   /* This sgrp edits 'at once' orders only for presence of*/
   /* po #.  if it is present, all other po requirements are*/
   /* assumed to have been met.*/
      /* ******************************************/
  set OP0EM001.OP1CUPO initialAttributes;

  if (OP1REC.XBDCD == "5" /* these types of draw orders are*/
   || OP1REC.XBDCD == "8" /* assessed on the condition of the*/
   || OP1REC.XBDCD == "3" /* bulk order, so we don't care what*/
   || OP1REC.XBDCD == "8") /* is entered on the draw*/
    OP1REC.OP1CUPO = OP0EM001.OP1CUPO;
    return;
  end

  if (OP1REC.XOTCD in XOTTBL.XOTCD              
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A"  
   && XOTTBL.XOTATONF[sysVar.arrayIndex] == "Y" /* this is an 'at once' order*/
   && KUCREC.KUCYPOFT != "00"                   /* that has po requirements*/
   && OP0EM001.OP1CUPO == " ")                  /* but no po #*/
    converseLib.validationFailed(653); /* so they will have to enter one*/
    OPAREC.OPAERR = "Y";
    set OP0EM001.OP1CUPO cursor, modified, bold;
  else
    OP1REC.OP1CUPO = OP0EM001.OP1CUPO;
  end
end // end OP0ESAH

// write audit rec for rep ovride
Function OP0ESAU()


      /* **************************************/
      /* * write audit record for rep/agency*/
      /* * override.             opurec*/
      /* **************************************/


  set OPUREC empty;
  OPUREC.XXXPGMNB = "OP1261";
  OPUREC.OPUAUDTP = "RX";
  OPUREC.OP1PARTN = OP1REC.OP1PARTN;
  OPUREC.OP1CUOID = OP1REC.OP1CUOID;
  OPUREC.OP1NORID = OP1REC.OP1NORID;
  OPUREC.XDVCD = OP1REC.XSOCD; /* sales office hiding in div*/
  OPUREC.OP2LNINB = OP0EW03.OP0EWORP; /* old rep hiding in line item*/
  OPUREC.SY1STNBR = OP0EW03.OP0EWOAG; /* old agency hiding in style*/
  OP0EW02.OP0EWNAG = OP1REC.SM1AGYID; /* reformat new agency*/
  OPUREC.SY2CLRID = OP0EW03.OP0EWAG1; /* and hide it in color*/
  OPUREC.XDMCD = OP0EW03.OP0EWAG2; /* and dimension*/
  OPUREC.OP1CUNDT = OP1REC.OP1ORCDT;
                                   /* ord rcv ddt hiding in need dt*/
  OPUREC.OPUCRNTR = "N"; /* ship addr change flag*/
  OP0EW02.OP0EWCUS = OP1REC.KUCCOID; /* reformat company number*/
  if (OP0EW02.OP0EWCSB > 0)
    OPUREC.OPUAUDQT[1] = OP0EW03.OP0EWCSE;
  else
    OPUREC.OPUAUDQT[1] = OP0EW02.OP0EWCSC;
  end
  OPUREC.OPUAUDQT[3] = OP1REC.KUMSTRID; /* store*/
  OPUREC.OPUAUDQT[4] = OP1REC.XNXCD; /* dept*/
  OPUREC.OPUAUDQT[5] = OP1REC.SM4REPID; /* new sales rep*/
  OP0ESCD();
                                   /* get current date and time*/
  OPUREC.ZZZSDT = TA2REC.TA2GRGGN;
  OPUREC.ZZZSTM = TA2REC.TA2TIMHM;

  call "IO3210" ("A ", SQLCA, OPUREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    set TA1REC empty;
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VORAUD01";
    TA1REC.TA1LOCAT[1] = "OP0ESAU";
    TA1REC.TA1LOCAT[2] = "U";
    TA1REC.TA1LOCAT[3] = "IO3210";
    OP0EW01.OP0EWTK2 = OPUREC.OP1CUOID;
    OP0EW01.OP0EWTK3 = OPUREC.OP1NORID;
    OP0EW01.OP0EWTK4 = 0;
    OP0EW01.OP0EWTK5 = OPUREC.OPUAUDTP;
    TA1REC.TA1TBLKE = OP0EW01.OP0EWTK1;
    XSOPS02(); /* common abend*/
  end



end // end OP0ESAU

// calc warning for po# allochold
Function OP0ESAW()
      /* ******************************************/
   /* For some customers, we required additional information*/
   /* before finalizing an order.  What we require is determined*/
   /* by kucypoft - 00 - nothing is required*/
                 /* 01 - customer po number is required*/
                 /* 02 - customer po number and hard copy*/
                      /* required*/
                 /* 03 - customer po number, hard copy and*/
                      /* confirmation required*/
    /* if these requirements are not met, orders are*/
    /* placed on allocation hold (code 04) by OP0J or OM0H.*/
    /* This hold can only be removed in OM0L.*/

    /* At once orders are assumed to have met all po*/
    /* requirements if the po# is entered.*/

   /* draw orders type 5,8,F  are evaluated on*/
   /* the basis of the bulk header record to determing whether*/
   /* they should be placed on hold*/

   /* this proc will set up a warning message specifying*/
    /* the kind of allocation hold the draw order will be*/
    /* put on.  The message is displayed after a clean edit*/
    /* and forces a reconverse of the screen before transferring*/
    /* out of the program.*/

      /* ******************************************/

  OP0EW01.OP0EWARN = 0; /* set off the warning flag*/

  if (OP1REC.XBDCD == "5" /* this type of draw is put*/
   || OP1REC.XBDCD == "8" /* on hold depending on the*/
   || OP1REC.XBDCD == "F" /* bulk header.*/
   || OP1REC.XBDCD == "3")
    if (OP1REC.XAHCD != " ") /* op0d has passed this value*/
      OP0EW01.OP0EWARN = 6; /* to indicate bulk is on hold*/
    end
    return;
  end

  if (KUCREC.KUCYPOFT == "00") /* there are no po# requirements*/
    return;
  end

  if (OP1REC.XOTCD in XOTTBL.XOTCD              
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A"  
   && XOTTBL.XOTATONF[sysVar.arrayIndex] == "Y" /* this is an 'at once' order*/
   && OP1REC.OP1CUPO != " ")                    /* and po# is present*/
    return;
  end

  if (KUCREC.KUCYPOFT == "01") /* po# only is required*/
    if (OP1REC.OP1CUPO == " ") /* but has not been entered*/
      OP0EW01.OP0EWARN = 1;
    else
      return; /* the requirements are satisfied*/
    end
  end
  if (KUCREC.KUCYPOFT == "02") /* po#/hardcopy is required*/
    if (OP1REC.OP1CUPO == " ") /* po # not entered*/
      OP0EW01.OP0EWARN = 2;
    else
      OP0EW01.OP0EWARN = 4; /* hard copy is required*/
    end
  end
  if (KUCREC.KUCYPOFT == "03") /* po#/hardcopy/confirm required*/
    if (OP1REC.OP1CUPO == " ") /* po # not entered*/
      OP0EW01.OP0EWARN = 3;
    else
      OP0EW01.OP0EWARN = 5; /* hardcopy/confirm required*/
    end
  end
end // end OP0ESAW

// edit bulk/draw vs direct ship
Function OP0ESBD()



        /* ******************************************************/
        /* * this statement group checks to see if direct ship **/
        /* * is allowed for this order                         **/
        /* ******************************************************/


  if (OP0EM001.XDSCD > " ")
    if (OP0EW01.OP0EWOCD == "R") /* regular order*/
       /* next sentence*/
    else
      if (OP0EM001.XDSCD in XDSTBL.XDSCD) /* if xdscd requires whs*/
        if (XDSTBL.XDSWHSEF[sysVar.arrayIndex] == "Y") /* then okay for bulk/draw*/
           /* next sentence*/
        else
          converseLib.validationFailed(296); /* cannot be direct shipped*/
          set OP0EM001.XDSCD cursor, modified, bold;
          OPAREC.OPAERR = "Y";
        end
      end
    end
  end



   /* ************************************************************/
end // end OP0ESBD

// get current date and time
Function OP0ESCD()



       /* ********************************************************/
       /* * this statement group gets the current date and time **/
       /* ********************************************************/




  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";

  call "TA0040" (TA2REC) {isExternal = yes};

  if (TA2REC.TA2RTNCD != 0)
    TA1REC.TA1DBASE = " ";
    TA1REC.TA1TBLVU = " ";
    TA1REC.TA1TBLKE = " ";
    TA1REC.TA1LOCAT[3] = "OP0JS07";
    TA1REC.TA1LOCAT[4] = "TA0040";
    TA1REC.TA1LOCAT[1] = "GETDATE";
    set SQLCA empty;
    XSOPS02(); /* abort program*/
  end


   /* ************************************************************/
end // end OP0ESCD

// get customer/gpc record
Function OP0ESCG()



       /* *******************************************************/
       /* * this statement group reads the customer/gpc record **/
       /* * (dcust.vcust001)                                   **/
       /* *******************************************************/


       /* initialize the abend record*/

  TA1REC.TA1TYPE = "DB2 "; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
  TA1REC.TA1PGMNM = "OP0E    "; /* program name*/
  TA1REC.TA1MAP = "OP0EM001"; /* map name*/
  TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
  TA1REC.TA1TBLVU = "VCUST001"; /* table view*/
  OP0EW01.KUCCOID = KUNREC.KUCCOID;
  OP0EW01.KUMSTRID = KUNREC.KUMSTRID;
  OP0EW01.XNXCD = KUNREC.XNXCD;
  OP0EW01.XGPCD = KUNREC.XGPCD;
  TA1REC.TA1TBLKE = OP0EW01.OP0EWCK1; /* table key*/
  TA1REC.TA1LOCAT[3] = "OP0ESCG"; /* statement group*/
  TA1REC.TA1LOCAT[4] = "IO0280";



       /* read the customer/gpc (vcust001) record*/

  KUNREC.KUCCOID = OP1REC.KUCCOID;
  KUNREC.KUMSTRID = OP1REC.KUMSTRID;
  KUNREC.XNXCD = OP1REC.XNXCD;
  KUNREC.XGPCD = OP1REC.XGPCD;

  call "IO0280" ("S ", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* next sentence*/
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



       /* if not found, get first gpc record for the customer,*/
       /* if there are any*/

  if (SQLCA.VAGen_SQLCODE == 100)
    KUNREC.KUCCOID = OP1REC.KUCCOID;
    KUNREC.KUMSTRID = OP1REC.KUMSTRID;
    KUNREC.XNXCD = OP1REC.XNXCD;
    if (OP1REC.XGPCD == "02" /* footwear*/
     || OP1REC.XGPCD == "03") /* apparel*/
      KUNREC.XGPCD = OP1REC.XGPCD;
    else
      KUNREC.XGPCD = "**";
    end

    call "IO0280" ("SS", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end


       /* get the first gpc record for the customer*/


  call "IO0280" ("SN", SQLCA, KUNREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
    exit program;
  end



   /* ************************************************************/
end // end OP0ESCG

// get customer special inst
Function OP0ESCI()


      /* *********************************************************/
      /* * get special instructions from dcust.vinst01 table,   **/
      /* * move the first instruction to screen and load all    **/
      /* * of the instructions to the dorder.vtext001 table     **/
      /* *********************************************************/


  KUQREC.KUCCOID = OP1REC.KUCCOID; /* load keys*/
  KUQREC.KUMSTRID = OP1REC.KUMSTRID;
  KUQREC.XNXCD = OP1REC.XNXCD;
  KUQREC.XGPCD = OP1REC.XGPCD;


  OP0EW01.OP0EWIC = 0;

  call "IO0300" ("SS", SQLCA, KUQREC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /* next sentence*/
  else
    TA1REC.TA1TYPE = "DB2 "; /* abend type*/
    TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
    TA1REC.TA1PGMNM = "OP0E    "; /* program name*/
    TA1REC.TA1MAP = "OP0EM001"; /* map name*/
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VINST001"; /* table view*/
    OP0EW01.KUCCOID = KUQREC.KUCCOID;
    OP0EW01.KUMSTRID = KUQREC.KUMSTRID;
    OP0EW01.XNXCD = KUQREC.XNXCD;
    OP0EW01.XGPCD = KUQREC.XGPCD;
    TA1REC.TA1TBLKE = OP0EW01.OP0EWCK1; /* table key*/
    TA1REC.TA1LOCAT[3] = "OP0ESCI"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0300";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
  end


  /*  */
  /* log #693  Jan Johnson  initialize special instruction sequence*/
  /*  */
  OP0EW01.OP0EWTSQ = 1; /* init instruction seq*/
  while (SQLCA.VAGen_SQLCODE == 0)
    OP0ESLI(); /* load inst onto op table*/
  end
  call "IO0470" ("CS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


       /* if there more than one special instructions, move 'y'*/
       /* to the more instructions? field*/
       /* if there is one or more instructions, set the special*/
       /* instruction flag in dorder.vorhdr01 to 'y'*/


  if (OP0EW01.OP0EWIC > 1)
    OP0EM001.OP0EMMSI = "Y";
    OP1REC.OP1SPINF = "Y"; /* set instruction flag*/
  else
    OP0EM001.OP0EMMSI = "N";
    if (OP0EW01.OP0EWIC > 0)
      OP1REC.OP1SPINF = "Y"; /* set instruction flag*/
    end
  end



   /* ************************************************************/
end // end OP0ESCI

// load labels onto op table
Function OP0ESCL()



      /* ********************************************************/
      /* * this statement group                                **/
      /* * reads the dcust.vlabel01 to get customer lables     **/
      /* * (-- there are only 2 labels for each customer)      **/
      /* * and writes these two labels to the order text record**/
      /* ********************************************************/


  OP0EW01.OP0EWLS1 = 0; /* reset label subscript*/
  OP0EW01.OP0EWLC = 0; /* reset label count*/

  KUSREC.KUCCOID = OP1REC.KUCCOID; /* load keys*/
  KUSREC.KUMSTRID = OP1REC.KUMSTRID;
  KUSREC.XNXCD = OP1REC.XNXCD;
  KUSREC.XGPCD = OP1REC.XGPCD;



  call "IO0310" ("S ", SQLCA, KUSREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OP0EM001.KUSTEXT1 = KUSREC.KUSTEXT1;
    OP0EM001.KUSTEXT2 = KUSREC.KUSTEXT2;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VINST001"; /* table view*/
      OP0EW01.KUCCOID = KUSREC.KUCCOID;
      OP0EW01.KUMSTRID = KUSREC.KUMSTRID;
      OP0EW01.XNXCD = KUSREC.XNXCD;
      OP0EW01.XGPCD = KUSREC.XGPCD;
      TA1REC.TA1TBLKE = OP0EW01.OP0EWCK1; /* table key*/
      TA1REC.TA1LOCAT[3] = "OP0ESCL"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0310";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



       /* write the first label to the order text table*/

  if (KUSREC.KUSTEXT1 == " ")
      /* next sentence*/
  else
    OP0EW01.OP0EWLS1 = OP0EW01.OP0EWLS1 + 1;

    OP4REC.OP4KEY = OP1REC.OP1KEY;
    OP4REC.OP4TRTYP = "L";
    OP4REC.OP4TXTOF = "N";
    OP4REC.OP4TRSEQ = OP0EW01.OP0EWLS1;
    OP4REC.OP4TXT = KUSREC.KUSTEXT1;
    OP4REC.XNDCD = " ";
    OP4REC.ZZZCHGDT = OPAREC.OPACDT;

         /* reformat time to move to the record*/

    OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
    OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
    OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
    OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;


    call "IO0470" ("A ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      OP0EW01.OP0EWLC = OP0EW01.OP0EWLC + 1;
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
      TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESCL"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0470";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



       /* write the second label to the order text table*/

  if (KUSREC.KUSTEXT2 == " ")
      /* next sentence*/
  else
    OP0EW01.OP0EWLS1 = OP0EW01.OP0EWLS1 + 1;

    OP4REC.OP4KEY = OP1REC.OP1KEY;
    OP4REC.OP4TRTYP = "L";
    OP4REC.OP4TXTOF = "N";
    OP4REC.OP4TRSEQ = OP0EW01.OP0EWLS1;
    OP4REC.OP4TXT = KUSREC.KUSTEXT2;
    OP4REC.XNDCD = " ";
    OP4REC.ZZZCHGDT = OPAREC.OPACDT;

         /* reformat time to move to the record*/

    OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
    OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
    OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
    OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;


    call "IO0470" ("A ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      OP0EW01.OP0EWLC = OP0EW01.OP0EWLC + 1;
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
      TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESCL"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0470";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



       /* set special labels flag*/

  if (OP0EW01.OP0EWLC > 0)
    OP1REC.OP1SPLBF = "Y";
  end



   /* ************************************************************/
end // end OP0ESCL

// check for special cust group
Function OP0ESD1()
       /* ********************************************************/
       /* * this statement group accesses the special customer  **/
       /* * group record and checks the XSG code.  Certain      **/
       /* * values are flagged as an exception to the DSNB edit **/
       /* ********************************************************/

  OP0EW01.OP0EWSGC = "N";
  KUPREC.KUCCOID = OP1REC.KUCCOID; /* Load Key: Cust Co*/
  KUPREC.KUMSTRID = OP1REC.KUMSTRID; /* Cust Store*/
  KUPREC.XNXCD = OP1REC.XNXCD; /* Cust Dept*/
  KUPREC.XGPCD = OP1REC.XGPCD; /* GPC*/

  call "IO0260" ("S ", SQLCA, KUPREC) {isNoRefresh = yes, isExternal = yes}; /* I/O mod for inquiry*/

      /* check DB2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* check rc*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if rec not found*/
      return;
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCUGRP01"; /* table view*/
      TA1REC.TA1TBLKE = KUPREC.KUPGRP; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESD1 "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0260  "; /* i/o mod name*/
      XSOPS02(); /* abend routine*/
    end
  end


  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 10)
    if (OP0EW01.OP0EWSGC == "N")
      if (KUPREC.XSGCD[sysVar.arrayIndex] == "MI"
       || KUPREC.XSGCD[sysVar.arrayIndex] == "MB"
       || KUPREC.XSGCD[sysVar.arrayIndex] == "12"
       || KUPREC.XSGCD[sysVar.arrayIndex] == "BK"
       || KUPREC.XSGCD[sysVar.arrayIndex] == "AA"
       || KUPREC.XSGCD[sysVar.arrayIndex] == "AF")
        OP0EW01.OP0EWSGC = "Y";
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1;
    else
      sysVar.arrayIndex = 11;
    end
  end

   /* ************************************************************/
end // end OP0ESD1

// delete records if reject order
Function OP0ESDE()



      /* *******************************************************/
      /* * if the order is rejected at this point in time,    **/
      /* * delete the order header record and check to see    **/
      /* * if this order has special instructions, labels     **/
      /* * and/or one time shipto or billto address.          **/
      /* *******************************************************/



       /* delete the order header record*/

  call "IO0430" ("D ", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes};

       /* check the db2 return code*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
    TA1REC.TA1TBLKE = OP1REC.OP1KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OP0ESDE"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0430";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
    exit program;
  end



       /* delete the onetime shipto address*/


  if (OP1REC.OP11TMSF == "Y")
    OP5REC.OP5KEY = OP1REC.OP1KEY;
    OP5REC.OP5SHPIN = "Y";
    OP5REC.OP5BILIN = "N";
    call "IO0460" ("D ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
       /* next sentence*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOADDR01"; /* table view*/
      TA1REC.TA1TBLKE = OP5REC.OP5KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESDE"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0460";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end




       /* delete the onetime billto address*/


  if (OP1REC.OP11TMBF == "Y")
    OP5REC.OP5KEY = OP1REC.OP1KEY;
    OP5REC.OP5BILIN = "Y";
    OP5REC.OP5SHPIN = "N";
    call "IO0460" ("D ", SQLCA, OP5REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
       /* next sentence*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VOADDR01"; /* table view*/
      TA1REC.TA1TBLKE = OP5REC.OP5KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESDE"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0460";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end




       /* delete the special instructions for this order*/

  if (OP1REC.OP1SPINF == "Y"
   || OP1REC.OP1SPLBF == "Y")
    OP4REC.OP4KEY = OP1REC.OP1KEY;
    OP4REC.OP4TRTYP = " ";
    call "IO0470" ("SS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      OP0ESDI(); /* delete*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
         /* NEXT SENTENCE*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
        TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OP0ESDE"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0470";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " ";
        XSPF4();
        exit program;
      end
    end
  end


  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value


   /* ************************************************************/
end // end OP0ESDE

// delete special inst & labels
Function OP0ESDI()



       /* *******************************************************/
       /* * this statement group deletes special instructions  **/
       /* * and labels for an rejected order                   **/
       /* *******************************************************/


  while (SQLCA.VAGen_SQLCODE == 0)
    call "IO0470" ("SN", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      call "IO0470" ("D ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0
       || SQLCA.VAGen_SQLCODE == 100)
          /* next sentence*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
        TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OP0ESDI"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0470";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " ";
        XSPF4();
        exit program;
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
         /* next sentence*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VORHDR01"; /* table view*/
        TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OP0ESDI"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0470";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " ";
        XSPF4();
        exit program;
      end
    end
  end



   /* ************************************************************/
end // end OP0ESDI

// direct ship abbreviated desc
Function OP0ESDS()



       /* *******************************************************/
       /* * this statement group validates the direct ship code**/
       /* * and gets the direct ship abbreviated desc for      **/
       /* * display                                            **/
       /* *******************************************************/



  if (OP0EM001.XDSCD in XDSTBL.XDSCD /* if direct ship cd is valid*/
   && XDSTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0EM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex];
    OP0EW01.XDSWHSEF = XDSTBL.XDSWHSEF[sysVar.arrayIndex];
  else
    converseLib.validationFailed(074); /* direct shp code not valid*/
    set OP0EM001.XDSCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
    OP0EW01.XDSWHSEF = "Y";
  end



   /* ************************************************************/
end // end OP0ESDS

// edit dates
Function OP0ESDT()



       /* *******************************************************/
       /* * this statement group edits the dont-ship-before-dt,**/
       /* * dont-ship-after-date and the callout date          **/
       /* *******************************************************/


  set TA2REC empty;

       /* callout date must greater than today's date*/

  if (OP0EM001.OP1CALDT is modified)
    if (OP0EM001.OP1CALDT == "MMDDYY"
     || OP0EM001.OP1CALDT == " "
     || OP0EM001.OP1CALDT == "000000")
      OP1REC.OP1CALDT = 0;
      set OP0EM001.OP1CALDT initialAttributes;
      set OP0EM001.OP1CALDT normal;
    else
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OP0EM001.OP1CALDT;
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(071); /* callout date is not a valid date*/
        set OP0EM001.OP1CALDT cursor, modified, bold;
        OPAREC.OPAERR = "Y";
      else
        if (TA2REC.TA2GRGGN <= OPAREC.OPACDT)
          converseLib.validationFailed(071); /* callout date is not a valid date*/
          set OP0EM001.OP1CALDT cursor, modified, bold;
          OPAREC.OPAERR = "Y";
        else
          set OP0EM001.OP1CALDT initialAttributes;
          OP1REC.OP1CALDT = TA2REC.TA2GRGGN;
        end
      end
    end
  end



       /* edit don't ship after date*/

  OP0EW01.OP0EWDER = "N"; /* set date error flag*/
  set OP0EM001.OP1DSADT initialAttributes;
  set OP0EM001.OP1DSBDT initialAttributes;


       /* dont ship after date must not less than today's date*/


  set TA2REC empty;

  if (OP0EM001.OP1DSADT is modified)
    if (OP0EM001.OP1DSADT == "MMDDYY"
     || OP0EM001.OP1DSADT == " "
     || OP0EM001.OP1DSADT == "000000")
      OP1REC.OP1DSADT = 0;
    else
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OP0EM001.OP1DSADT;
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(070); /* dont ship after date is not a valid*/
                                   /* date*/
        OP1REC.OP1DSADT = 0;
        set OP0EM001.OP1DSADT cursor, modified, bold;
        OPAREC.OPAERR = "Y";
        OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
      else
        if (TA2REC.TA2GRGGN < OPAREC.OPACDT)
          converseLib.validationFailed(070); /* d-s-after-date is not a valid date*/
          OP1REC.OP1DSADT = 0;
          set OP0EM001.OP1DSADT cursor, modified, bold;
          OPAREC.OPAERR = "Y";
          OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
        else
          OPAREC.OPAWDT = OPAREC.OPACDT + 20000; /* wk-dt = curr-dt + 2yrs*/
          if (TA2REC.TA2GRGGN > OPAREC.OPAWDT) /* more than 1yr in fut*/
            converseLib.validationFailed(070); /* d-s-after-date is not a valid date*/
            OP1REC.OP1DSADT = 0;
            set OP0EM001.OP1DSADT cursor, modified, bold;
            OPAREC.OPAERR = "Y";
            OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
          else
            OP1REC.OP1DSADT = TA2REC.TA2GRGGN;
          end
        end
      end
    end
  end




       /* edit the don't ship before date*/

   /* don't ship before date must be today's date*/
   /* if order type is at-once*/
   /* exclude sales office '12'(app.spec sales.)- ssj*/


  sysVar.arrayIndex = 1;
  if (OP1REC.XOTCD in XOTTBL.XOTCD
   && XOTTBL.XOTATONF[sysVar.arrayIndex] == "Y"
   && OP1REC.XSOCD != "12") /* exclude sales office 12- ssj*/
    set OP0EM001.OP1DSBDT initialAttributes;
    OP1REC.OP1DSBDT = OPAREC.OPACDT;
    OPAREC.OPAWDT = OPAREC.OPACDT;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    if (OPAREC.OPAFDT != OP0EM001.OP1DSBDT)
      set OP0EM001.OP1DSBDT modified, bold;
      OP0EM001.OP1DSBDT = OPAREC.OPAFDT;
      converseLib.validationFailed(387);
      OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
      OPAREC.OPAERR = "Y";
    end
  end

  set TA2REC empty;

  if (OP0EM001.OP1DSBDT is modified)
    if (OP0EM001.OP1DSBDT == "MMDDYY"
     || OP0EM001.OP1DSBDT == " "
     || OP0EM001.OP1DSBDT == "000000")
      OP1REC.OP1DSBDT = 0;
    else
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OP0EM001.OP1DSBDT;
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(069); /* dont ship before date is not a valid*/
                                   /* date*/
        OP1REC.OP1DSBDT = 0;
        set OP0EM001.OP1DSBDT cursor, modified, bold;
        OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
        OPAREC.OPAERR = "Y";
      else
        if (TA2REC.TA2GRGGN < OPAREC.OPACDT)
          converseLib.validationFailed(069); /* d-s-before-dt is not a valid date*/
          OP1REC.OP1DSBDT = 0;
          set OP0EM001.OP1DSBDT cursor, modified, bold;
          OPAREC.OPAERR = "Y";
          OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
        else
          if (TA2REC.TA2DYWK == "SUNDAY"
           || TA2REC.TA2DYWK == "SATURDAY")
            converseLib.validationFailed(493); /* dnsb date falls on a wkend*/
            set OP0EM001.OP1DSBDT cursor, modified, bold;
            OPAREC.OPAERR = "Y";
            OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
          else
            OP0ESD1(); /* check spec cust grp codes*/
            if (OPAREC.OPAERR == "Y") /* if err, (rec not found)*/
              return; /* return*/
            end
            if (OP0EW01.OP0EWSGC == "Y" /* if certain spec cust grps fnd*/
             || OP1REC.XSOCD == "07"    /* or certain sales offices*/
             || OP1REC.XSOCD == "08"    /* exclude edit check*/
             || OP1REC.XSOCD == "12"    
             || OP1REC.XSOCD == "17")  
              OP1REC.OP1DSBDT = TA2REC.TA2GRGGN;
            else
              if (TA2REC.TA2GRGGN <= OP1REC.OP1CUNDT)
                OP1REC.OP1DSBDT = TA2REC.TA2GRGGN;
              else
                set TA2REC empty;
                TA2REC.TA2DBDFN = OP1REC.OP1CUNDT; /* NEED DATE*/
                OPAREC.OPAFDT = OP0EM001.OP1DSBDT;
                if (OPAREC.OPAFYY > 56)
                  OPAREC.OPAWCC = 19;
                else
                  OPAREC.OPAWCC = 20;
                end
                OPAREC.OPAWYY = OPAREC.OPAFYY;
                OPAREC.OPAWMM = OPAREC.OPAFMM;
                OPAREC.OPAWDD = OPAREC.OPAFDD;
                TA2REC.TA2DBDTN = OPAREC.OPAWDT;
                                   /* dsnb date ccyymmdd*/
                TA2REC.TA2DTOPT = "DAYSDIFF";
                TA2REC.TA2RTNCD = 0;
                TA2REC.TA2GRTYP = "G";

                call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

                if (TA2REC.TA2RTNCD == 0)
                  if (TA2REC.TA2DBDDN > 21)
                    if (COMMAREA.CAUSERID in YOSTBL.XXXUSRID
                     && YOSTBL.YOSSPGFL[sysVar.arrayIndex] == "Y") /* authorized*/
                      OP1REC.OP1DSBDT = TA2REC.TA2DBDTN;
                    else
                      if (COMMAREA.CACHGFL == "Y"
                       && COMMAREA.CACLVL[1] == "Y") /* is allocation mgr*/
                        OP1REC.OP1DSBDT = TA2REC.TA2DBDTN;
                      else
                        OPAREC.OPAERR = "Y";
                        OP0EW01.OP0EWDER = "Y";
                        converseLib.validationFailed(633);
                                   /* DSNB DATE CAN'T BE > 21 DAYS FROM ND*/
                        if (OP1REC.OP1DSBDT == 0)
                          OP0EM001.OP1DSBDT = "MMDDYY";
                        else
                          OPAREC.OPAWDT = OP1REC.OP1DSBDT;
                          OPAREC.OPAFYY = OPAREC.OPAWYY;
                          OPAREC.OPAFMM = OPAREC.OPAWMM;
                          OPAREC.OPAFDD = OPAREC.OPAWDD;
                          OP0EM001.OP1DSBDT = OPAREC.OPAFDT;
                        end
                        set OP0EM001.OP1DSBDT cursor, modified, bold;
                      end
                    end
                  else
                    OP1REC.OP1DSBDT = TA2REC.TA2DBDTN;
                  end
                end
              end
            end
          end
        end
      end
    end
  end


   /* edit po date*/

  set TA2REC empty;

  if (OP0EM001.OP1CPODT is modified)
    if (OP0EM001.OP1CPODT == "MMDDYY"
     || OP0EM001.OP1CPODT == " "
     || OP0EM001.OP1CPODT == "000000")
      OP1REC.OP1CPODT = 0;
    else
      TA2REC.TA2DTOPT = "GREGGREG";
      TA2REC.TA2GRTYP = "A";
      TA2REC.TA2GRGA = OP0EM001.OP1CPODT;
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
      if (TA2REC.TA2RTNCD != 0)
        converseLib.validationFailed(561); /* p.o date is not a valid date*/
        OP1REC.OP1CPODT = 0;
        set OP0EM001.OP1CPODT cursor, modified, bold;
        OP0EW01.OP0EWDER = "Y"; /* set date error flag*/
        OPAREC.OPAERR = "Y";
      else
        OP1REC.OP1CPODT = TA2REC.TA2GRGGN;
      end
    end
  end



       /* dont-ship-after-date must equal or greater than*/
       /* dont-ship-before-date*/


  if (OP0EM001.OP1DSADT == "MMDDYY"
   || OP0EM001.OP1DSADT == " "
   || OP0EM001.OP1DSADT == "000000"
   || OP0EM001.OP1DSBDT == " "
   || OP0EM001.OP1DSBDT == "MMDDYY"
   || OP0EM001.OP1DSBDT == "000000"
   || OP0EW01.OP0EWDER == "Y")
     /* next sentence*/
  else
    if (OP1REC.OP1DSBDT <= OP1REC.OP1DSADT)
       /* next sentence*/
    else
      converseLib.validationFailed(099); /* dont-s-before-dt must not >*/
                                   /* d-s-after-dt*/
      set OP0EM001.OP1DSBDT cursor, modified, bold;
      set OP0EM001.OP1DSADT modified, bold;
      OPAREC.OPAERR = "Y";
    end
  end



   /* ************************************************************/
end // end OP0ESDT

// edit ad allw percents
Function OP0ESEA()



      /* ********************************************************/
      /* * the entered ad allw percent must be in the          **/
      /* * xaatbl table                                        **/
      /* * and                                                 **/
      /* * face % + bank % must = total ad allowance %         **/
      /* * the ad allowance override flag is set to 'y' only   **/
      /* * when the newly entered % is different with the old %**/
      /* ********************************************************/


  if (OP0EM001.XAAPCT is modified)
    if (OP0EM001.XAAPCT in XAATBL.XAAPCT
     && XAATBL.XXXSTAT[sysVar.arrayIndex] == "A")
      set OP0EM001.XAAPCT initialAttributes;
      if (OP0EM001.XAAPCT == OP0EW01.OP0EWAA)
         /* next sentence*/
      else
        OP1REC.OP1AAOF = "Y";
        OPWREC.OPWAUTFL = "Y";
      end
    else
      set OP0EM001.XAAPCT cursor, modified, bold;
      set OP0EM001.OP1AAFCP modified, bold;
      set OP0EM001.OP1AABKP modified, bold;
      converseLib.validationFailed(090); /* ad allw % is not setup/authorized*/
      OPAREC.OPAERR = "Y"; /* set error flag*/
      return;
    end
  end




  OP0EW01.OP0EWAAP = OP0EM001.OP1AAFCP + OP0EM001.OP1AABKP;

  if (OP0EM001.XAAPCT == OP0EW01.OP0EWAAP)
    if (OP0EM001.OP1AAFCP is modified
     || OP0EM001.OP1AABKP is modified)
      set OP0EM001.XAAPCT initialAttributes;
      set OP0EM001.OP1AAFCP initialAttributes;
      set OP0EM001.OP1AABKP initialAttributes;
    end
  else
    converseLib.validationFailed(091); /* ad allw f/b % are not correct*/
    set OP0EM001.XAAPCT cursor, modified, bold;
    set OP0EM001.OP1AAFCP modified, bold;
    set OP0EM001.OP1AABKP modified, bold;
    OPAREC.OPAERR = "Y"; /* set error flag*/
  end



   /* ***********************************************************/
end // end OP0ESEA

// edit backordered flag
Function OP0ESEB()



       /* *******************************************************/
       /* * this statement group edit the backordered flag     **/
       /* *******************************************************/


  if (OP0EM001.OP1BOFL == "Y"
   || OP0EM001.OP1BOFL == "N")
    OP1REC.OP1BOFL = OP0EM001.OP1BOFL;
    set OP0EM001.OP1BOFL initialAttributes;
  else
    converseLib.validationFailed(077); /* backorder? - correct res is 'y' or*/
                                   /* 'n'*/
    set OP0EM001.OP1BOFL cursor, modified, bold;
    OPAREC.OPAERR = "Y";
  end



   /* *******************************************************/
end // end OP0ESEB

// edit co-op percent
Function OP0ESEC()



      /* *********************************************************/
      /* * the entered co-op percent must be in the xcptbl table**/
      /* * and the co-op override flag is set to 'y' only when  **/
      /* * the entered co-op percent is different with the old  **/
      /* * percent                                              **/
      /* *********************************************************/


  if (OP0EM001.XCPPCT in XCPTBL.XCPPCT
   && XCPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP1REC.XCPPCT = OP0EM001.XCPPCT;
    set OP0EM001.XCPPCT initialAttributes;
    if (OP0EM001.XCPPCT == OP0EW01.OP0EWCOP) /* new % = old %*/
       /* next sentence*/
    else
      OPWREC.OPWAUTFL = "Y";
      OP1REC.OP1COPOF = "Y";
    end
  else
    set OP0EM001.XCPPCT cursor, modified, bold;
    converseLib.validationFailed(092); /* co-op % is not setup/authorized*/
    OPAREC.OPAERR = "Y"; /* set error flag*/
  end



   /* ***********************************************************/
end // end OP0ESEC

// edit direct ship code
Function OP0ESED()



     /* *********************************************************/
     /* * first check to see if direct ship code is allowed for**/
     /* * this order order type -- if ok, then check to see if a*/
     /* * warehouse is required with this direct ship code     **/
     /* *********************************************************/

    /* EDIT DIRECT SHIP code and percentage*/

  if (OP0EM001.OP0EWDPC >= "0")
  /* next sentence*/
  else
    if (OP0EM001.OP0EWDPC == " ")
  /* next sentence*/
    else
      set OP0EM001.OP0EWDPC cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(742); /**/
      return;
    end
  end

  OP0EW01.OP0EWDPC = OP0EM001.OP0EWDPC;
  if (OP0EM001.XDSCD in XDSTBL.XDSCD
   && XDSTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0EM001.XDSABRV = XDSTBL.XDSABRV[sysVar.arrayIndex];
    OP0EW01.XDSWHSEF = XDSTBL.XDSWHSEF[sysVar.arrayIndex];
  else
    OP0EM001.XDSABRV = "UNKNWN";
    set OP0EM001.XDSCD cursor, bold;
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(074); /* direct ship code is invalid or*/
    return;
  end



  if (OP0EM001.XDSCD != " " /* changing from space to value*/
   && OP1REC.XDSCD == " ")  /* changing from space to value*/
    if (OP0EM001.OP0EWDPC == " ") /* has percent been entered?*/
      if (OP1REC.XOTCD == "01" /* FTWR FUT 1*/
       || OP1REC.XOTCD == "02" /* FTWR FUT 2*/
       || OP1REC.XOTCD == "84" /* NATL ACCTS FTWR FUT 1*/
       || OP1REC.XOTCD == "DA") /* Canada FTWR FUT 1 - CANA*/
        OP0EW01.OP0EWDPC = 1; /* SPEC PERCENTAGE*/
        OP0EM001.OP0EWDPC = OP0EW01.OP0EWDPC;
      else
        OP0EW01.OP0EWDPC = XDSTBL.XDSPCT[sysVar.arrayIndex]; /* no, use default*/
        OP0EM001.OP0EWDPC = OP0EW01.OP0EWDPC; /* no, use default*/
      end
    else
      OP0ESEX(); /* yes,edit and use entered percent*/
    end
  end



  if (OP0EM001.XDSCD != " " /* changing from value to another value*/
   && OP1REC.XDSCD != " ")  /* changing from value to another value*/
    OP0ESEX(); /* yes,edit and use entered percent*/
  end



  if (OP0EM001.XDSCD == " " /* changing from value to space*/
   && OP1REC.XDSCD != " ")  /* changing from value to space*/
    OP0EW01.XDSWHSEF = "Y"; /* set warehouse flag*/
    OP0EM001.OP0EWDPC = " "; /* blank out screen*/
    OP0EW01.OP0EWDPC = 0; /* but move zero to database*/
  end


  if (OP0EM001.XDSCD == " " /* changing from space to space*/
   && OP1REC.XDSCD == " ")  /* changing from space to space*/
    if (OP0EM001.OP0EWDPC > "0") /* set warehouse flag*/
      set OP0EM001.OP0EWDPC cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(737); /**/
      return;
    end
  end






  if (OP0EM001.XDSCD > " ") /* if direct ship*/
    if (OP0EW01.XOTADIRS == "N") /* order type doesn't allow*/
      converseLib.validationFailed(075); /* ds is not valid for this order type*/
      set OP0EM001.XDSCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      return;
    end
  end




  if (OP0EW01.XDSWHSEF == "Y")
    if (OP0EM001.XWHCD == " ")
      set OP0EM001.XWHCD cursor, modified, bold;
      converseLib.validationFailed(098); /* whse is required for this ds code*/
      OPAREC.OPAERR = "Y";
      return;
    end
  end


  if (OP1REC.XDZ-DATA-DIST-CD == "CA") /* CANA*/
    /* skip for canada*/
  else
    OP0ES-AIRBORNE(); /* edit for airborne restrictions*/
  end

  if (OPAREC.OPAERR == "Y")
    return;
  end

  if (OP0EW01.XDSWHSEF == "N")
    if (OP0EM001.XWHCD != " ")
      set OP0EM001.XWHCD cursor, modified, bold;
      converseLib.validationFailed(336);
      OPAREC.OPAERR = "Y";
    end
  end



  set OP0EM001.XDSCD initialAttributes;
  set OP0EM001.XDSABRV initialAttributes;
  set OP0EM001.OP0EWDPC initialAttributes;



   /* ***********************************************************/
end // end OP0ESED

// validate blank program
Function OP0ESEE()


   /* this statement group validates the blank program for blank*/
   /* bulk t-shirt orders.  IO5480 is called which accesses*/
   /* davail.vblnkp01 to determine whether or not the blank*/
   /* program is valid.*/


  set SQLCA empty;
  set AVGREC empty;

  if (OP1REC.XOBCD == "M1")
    AVGREC.AVGBPIND = "M";
  else
    AVGREC.AVGBPIND = "B";
  end

  AVIREC.AVIFUNCD = "SA";
  AVIREC.OP1CUNDT = OP1REC.OP1CUNDT;

  call "IO5480" (AVIREC, SQLCA, AVGREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0)
    OPWREC.XOWCD = AVGREC.XOWCD;
    OP0EM001.XOWCD = AVGREC.XOWCD;
    set OP0EM001.XOWCD protect;
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(616); /* no active blank pgm exists for date range*/
      set OP0EM001.XBDCD cursor, modified, bold;
      OP0EM001.XBDABRV = " ";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1PGMNM = "OP0E   "; /* application*/
      TA1REC.TA1LOCAT[1] = "OP0ESEE "; /* statement group*/
      TA1REC.TA1LOCAT[2] = "IO5480  "; /* io mod called*/
      TA1REC.TA1LOCAT[3] = AVIREC.AVIFUNCD; /* function code passed*/
         /* MOVE AVIREC.OP1CUNDT TO TA1REC.TA1LOCAT(4); need date pas*/
      TA1REC.TA1MAP = "OP0EM001"; /* map*/
      TA1REC.TA1DBASE = "DAVAIL"; /* database name*/
      TA1REC.TA1TBLVU = "VBLNKP01"; /* table view*/
      TA1REC.TA1TBLKE = AVGREC.AVGKEY; /* key*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

   /* ************************************************************/
end // end OP0ESEE

// edit defective allowance
Function OP0ESEF()



      /* ********************************************************/
      /* * the entered deffective % must be in the xdatbl table**/
      /* * the deffective override flag is set to 'y' only     **/
      /* * when the new percent is different with the old %    **/
      /* ********************************************************/


  if (OP0EM001.XDAPCT in XDATBL.XDAPCT
   && XDATBL.XXXSTAT[sysVar.arrayIndex] == "A")
    set OP0EM001.XDAPCT initialAttributes;
    if (OP0EM001.XDAPCT == OP0EW01.OP0EWDEF)
       /* next sentence*/
    else
      OP1REC.OP1DFAOF = "Y";
      OPWREC.OPWAUTFL = "Y";
    end
  else
    set OP0EM001.XDAPCT cursor, modified, bold;
    converseLib.validationFailed(087); /* deffective % is not setup/authorized*/
    OPAREC.OPAERR = "Y"; /* set error flag*/
  end



   /* ***********************************************************/
end // end OP0ESEF

// edit misc ord header field
Function OP0ESEH()



      /* *******************************************************/
      /* * if (dcust.vcust001)cu-vendauth-req is 'y'          **/
      /* * and the misc ord header response is 'n',           **/
      /* *   display the warning message                      **/
      /* * if the response in not 'y' or 'n'                  **/
      /* *   display the error msg and return                 **/
      /* *******************************************************/


  if (OP0EM001.OP0EMMHD == " "
   || OP0EM001.OP0EMMHD == "Y"
   || OP0EM001.OP0EMMHD == "N")
    set OP0EM001.OP0EMMHD initialAttributes;
  else
    converseLib.validationFailed(097); /* misc ohdr? - correct response is 'y' or 'n'*/
    set OP0EM001.OP0EMMHD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
    return;
  end


       /* if (dcust.vcmpny01)cu-vendauth-req is 'y'*/
       /* and the misc ord header response is 'n',*/
         /* display the warning message*/


  if (OP0EM001.OP0EMMHD == " "
   || OP0EM001.OP0EMMHD == "N")
    if (KUCREC.KUCVNDFL == "Y")
      converseLib.validationFailed(082); /* cust requires a vendorauth # --*/
       /* -- enter on misc ord header*/
      set OP0EM001.OP0EMMHD bold;
    end
  end



   /* **********************************************************/
end // end OP0ESEH

// edit special instruction
Function OP0ESEI()



       /* ********************************************************/
       /* * if the entered department is not valid,             **/
       /* * the special instruction will not be updated         **/
       /* ********************************************************/


  if (OP0EM001.XNDCD is modified)
    if (OP0EM001.XNDCD == " ")
       /* next sentence*/
    else
      if (OP0EM001.XNDCD in XNDTBL.XNDCD
       && XNDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        set OP0EM001.XNDCD initialAttributes;
      else
        converseLib.validationFailed(080); /* nike deparment is not valid*/
        set OP0EM001.XNDCD cursor, modified, bold;
        OPAREC.OPAERR = "Y";
        return;
      end
    end
  end


  OP0ESIA(); /* update the op4rec table*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value


       /* reset the special instructions flag*/

  if (OP0EW01.OP0EWIC > 0)
    OP1REC.OP1SPINF = "Y";
  end



   /* ********************************************************/
end // end OP0ESEI

// edit bulk order code
Function OP0ESEK()


      /* *********************************************************/
      /* * this statement group edits the entered order code and**/
      /* * checks to see if this order order type allows        **/
      /* * bulk order                                           **/
      /* *********************************************************/


      /* bulk/draw order code defaults to 0 (regular order)*/

  if (OP0EM001.XBDCD == " ")
    OP0EM001.XBDCD = "0";
  end


  if (OP0EM001.XBDCD == OP1REC.XBDCD) /* no change*/
    set OP0EM001.XBDCD initialAttributes;
    return;
  end


  if (OP0EM001.XBDCD in XBDTBL.XBDCD
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y" /* bulk order*/
     && XBDTBL.XBDXRFCD[sysVar.arrayIndex] == "4") /* rebook bulk*/
      converseLib.validationFailed(432); /* can't enter a rebook bulk*/
      set OP0EM001.XBDCD cursor, modified, bold;
      OP0EM001.XBDABRV = " ";
      OPAREC.OPAERR = "Y";
      return;
    else
      set OP0EM001.XBDCD initialAttributes;
    end
  else
    converseLib.validationFailed(295); /* bulk/draw order code is not valid*/
    set OP0EM001.XBDCD cursor, modified, bold;
    OP0EM001.XBDABRV = " ";
    OPAREC.OPAERR = "Y";
    return;
  end


  if (OP0EW01.OP0EWOCD == "B" /* used to be a bulk order*/
   || OP0EW01.OP0EWOCD == "R") /* or a regular order*/
    if (XBDTBL.XBDRWOFL[sysVar.arrayIndex] == "Y") /* wanted to be draw order*/
      converseLib.validationFailed(292); /* cannot be changed to draw orders*/
      set OP0EM001.XBDCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      return;
    else
      if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y") /* wanted to be bulk order*/
        if (OP0EW01.XOTABULK == "N")
          converseLib.validationFailed(073); /* bulk order is not allowed for order type*/
          set OP0EM001.XBDCD cursor, modified, bold;
          OPAREC.OPAERR = "Y";
          return;
        end
      end
    end
  end


  if (OP0EW01.OP0EWOCD == "D") /* used to be a draw order*/
    if (OP0EW01.OP0EWBBD == "Y") /* blank bulk draw flag*/
      OP0ESEO(); /* edit blank bulk draw xbdcd*/
    end
  end


  if (OPWREC.OPWREVM > 1
   || OPWREC.OPWSFLOW == "2") /* or phone flow*/
    if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y") /* it is a bulk order*/
      OP0EW01.OP0EWFL1 = "N";
      OP0EW01.OP0EWSB1 = 1;
      OP0ESEN(); /* test for any coord.groups*/
      if (OP0EW01.OP0EWFL1 == "Y")
        converseLib.validationFailed(127); /* bulk order can't have any*/
                                   /* coord.groups*/
        set OP0EM001.XBDCD cursor, modified, bold;
        OPAREC.OPAERR = "Y";
        return;
      end
    end
  end

  if (OP0EM001.XBDCD == "B") /* if this is a blank bulk order*/
    if (OPWREC.OPWSFLOW == "1" /* if this is a form flow order*/
     && OPWREC.OPWREVM == 0    /* and not in review mode*/
     && OP1REC.XDZ-DATA-DIST-CD != "CA")
                                       /* not canadian order - CANA*/
      OP0ESEE(); /* validate the blank program*/
    else
      if (OPWREC.OPWSFLOW == "2" /* if this is a phone flow order*/
       || OPWREC.OPWREVM > 0)    /* or we're in review mode*/
        converseLib.validationFailed(615); /* can not create blank bulk*/
        set OP0EM001.XBDCD cursor, modified, bold;
        OPAREC.OPAERR = "Y";
        return;
      end
    end
  end

  if (OP0EM001.XBDCD == "B")
    if (OP0EM001.XWHCD != "51"
     && OP0EM001.XWHCD != "25"
     && OP1REC.XDZ-DATA-DIST-CD != "CA")
                                      /* not a canadian order - CANA*/
      converseLib.validationFailed(620); /* WHSE MUST BE '51' or '25' for*/
      OPAREC.OPAERR = "Y"; /* blank bulks*/
      set OP0EM001.XWHCD cursor, modified, bold;
      return;
    end
  end


  if (XBDTBL.XBDRWOFL[sysVar.arrayIndex] == "Y") /* it is draw order*/
    OP0EW01.OP0EWOCD = "D";
  else
    if (XBDTBL.XBDBKOFL[sysVar.arrayIndex] == "Y") /* it is a bulk order*/
      OP0EW01.OP0EWOCD = "B";
    else
      OP0EW01.OP0EWOCD = "R";
    end
  end


  OP0EM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];

   /* cannot enter 'z' bulk if user is not authorized  09/05/97*/

  if (OP0EM001.XBDCD == "Z") /* if 'z' bulk is requested*/
    sysVar.arrayIndex = 1;
    if (COMMAREA.CAUSERID in YOSTBL.XXXUSRID from sysVar.arrayIndex
     && YOSTBL.XXXSTAT[sysVar.arrayIndex] == "A"
     && YOSTBL.YOSZBLKFL[sysVar.arrayIndex] == "Y")
      /* next sentence;*/
    else
      converseLib.validationFailed(946); /* not authorized to enter 'z' bulk*/
      OPAREC.OPAERR = "Y";
      set OP0EM001.XBDCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      return;
    end
  end


  if (OP0EM001.XBDCD == "B") /* if this is a blank bulk order*/
    OP0ESOG(); /* validate xowcd and get xowcd abrev*/
    if (OPAREC.OPAERR == "N")
      set OP0EM001.XOWCD protect;
    end
  end

   /* ***********************************************************/
end // end OP0ESEK

// edit special label
Function OP0ESEL()



       /* *******************************************************/
       /* * this statement group checks to see if labels are   **/
       /* * modified and updates the appropriate label         **/
       /* *******************************************************/


  if (OP0EM001.KUSTEXT1 is modified)
    OP0EW01.OP4TXT = OP0EM001.KUSTEXT1;
    if (OP0EW01.OP0EWLS1 == 0)
      OP0EW01.OP0EWLS1 = 1; /* create sq num for new lb*/
    end
    OP0EW01.OP0EWLSW = OP0EW01.OP0EWLS1;
    OP0ESLA(); /* update the op4rec record*/
  end



  if (OP0EM001.KUSTEXT2 is modified)
    OP0EW01.OP4TXT = OP0EM001.KUSTEXT2;
    if (OP0EW01.OP0EWLS2 == 0)
      OP0EW01.OP0EWLS2 = OP0EW01.OP0EWLS1 + 1; /* create sq num for new lb*/
    end
    OP0EW01.OP0EWLSW = OP0EW01.OP0EWLS2;
    OP0ESLA(); /* update the op4rec record*/
  end
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value


       /* reset the special labels flag*/

  if (OP0EW01.OP0EWLC > 0)
    OP1REC.OP1SPLBF = "Y";
  end



   /* ********************************************************/
end // end OP0ESEL

// edit more special inst?
Function OP0ESEM()
  OP0EW01.OP0EWGTI = "N";


       /* ********************************************************/
       /* * this statement group edits the more special         **/
       /* * instructions? field on the screen                   **/
       /* ********************************************************/


  if (OP0EM001.OP0EMMSI == " "
   || OP0EM001.OP0EMMSI == "Y"
   || OP0EM001.OP0EMMSI == "N")
    set OP0EM001.OP0EMMSI initialAttributes;
    if (OP0EM001.OP0EMMSI == "Y") /* if screen says more instructions*/
      OP0EW01.OP0EWGTI = "Y"; /* turn on flag to kick out to op0f*/
    end
  else
    converseLib.validationFailed(081); /* more special inst? - correct res is 'y' or 'n'*/
    set OP0EM001.OP0EMMSI cursor, modified, bold;
    OPAREC.OPAERR = "Y";
  end


   /* **********************************************************/
end // end OP0ESEM

// op1rec key info to get op2rec
Function OP0ESEN()



    /* **********************************************************/
    /* *                                                       **/
    /* * purpose:  this is called when a regular order is being**/
    /* * converted to a bulk order.   bulk orders can not      **/
    /* * contain any coordinate group codes.                   **/
    /* *                                                       **/
    /* **********************************************************/


  while (OP0EW01.OP0EWSB1 < 11
   && OP0EW01.OP0EWFL1 == "N")
    if (OPWREC.OP1OTUNT[OP0EWSB1] > 0)
      OP2REC.OP1PARTN = OP1REC.OP1PARTN;
      OP2REC.OP1CUOID = OP1REC.OP1CUOID;
      OP2REC.OP1NORID = OP0EW01.OP0EWSB1;
      OP0ESER();
    end
    OP0EW01.OP0EWSB1 = OP0EW01.OP0EWSB1 + 1;
  end



end // end OP0ESEN

// EDIT BLANK BULK DRAW XBDCD
Function OP0ESEO()


      /* *********************************************************/
      /* * this statement group edits the xbdcd field           **/
      /* *********************************************************/



  if (OP1REC.OP1NDRAW > 0)
    converseLib.validationFailed(634); /* can't change xbdcd after drawn against*/
    OPAREC.OPAERR = "Y";
    set OP0EM001.XBDCD cursor, modified, bold;
  else
    if (OP1REC.XBDCD == "8"
     && OP0EM001.XBDCD == "F")
      OP1REC.XBDCD = OP0EM001.XBDCD;
      set OP0EM001.XBDCD initialAttributes;
    else
      if (OP1REC.XBDCD == "F"
       && OP0EM001.XBDCD == "8")
        OP1REC.XBDCD = OP0EM001.XBDCD;
        set OP0EM001.XBDCD initialAttributes;
      else
        converseLib.validationFailed(635); /* invalid xbdcd change*/
        OPAREC.OPAERR = "Y";
        set OP0EM001.XBDCD cursor, modified, bold;
      end
    end
  end


end // end OP0ESEO

// edit payment term code
Function OP0ESEP()



       /* *******************************************************/
       /* * the entered payment terms code must be in the      **/
       /* * xpttbl table                                       **/
       /* * the payment term override flag is set to 'y' only  **/
       /* * when the new payment term code is different with   **/
       /* * the old                                            **/
       /* *******************************************************/


  if (OP0EM001.XPTCD in XPTTBL.XPTCD
   && XPTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0EM001.XPTDESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
    set OP0EM001.XPTCD initialAttributes;
    if (OP0EM001.XPTCD == OP0EW01.OP0EWPT)
       /* next sentence*/
    else
      OP1REC.OP1PTOF = "Y";
      OPWREC.OPWAUTFL = "Y";
    end
  else
    set OP0EM001.XPTCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(086); /* terms code is not valid*/
  end



   /* **********************************************************/
end // end OP0ESEP

// op2rec key info array process
Function OP0ESER()



    /* **********************************************************/
    /* * called by op0esen for bulk order checking             **/
    /* **********************************************************/

  call "IO0450" ("SS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0)
    while (SQLCA.VAGen_SQLCODE == 0
     && OP0EW01.OP0EWFL1 == "N")
      call "IO0450" ("SN", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0)
        if (OP0EM001.XBDCD == "0" /* regular order*/
         || OP0EM001.XBDCD == "1" /* cust bulk*/
         || OP0EM001.XBDCD == "5" /* cust draw*/
         || OP0EM001.XBDCD == "B" /* blank bulk*/
         || OP0EM001.XBDCD == "8") /* blank draw*/
           /* next sentence*/
        else
          if (OP2REC.OP2CGPCD > " ")
            OP0EW01.OP0EWFL1 = "Y";
          end
        end
      else
        if (SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1TYPE = "DB2 ";
          TA1REC.TA1FUNC = "SN";
          TA1REC.TA1PGMNM = "OP0E   ";
          TA1REC.TA1LOCAT[1] = "OP0ESER ";
          TA1REC.TA1LOCAT[2] = "IO0440  ";
          TA1REC.TA1LOCAT[3] = " ";
          TA1REC.TA1LOCAT[4] = " ";
          TA1REC.TA1MAP = "     ";
          TA1REC.TA1DBASE = "DORDER";
          TA1REC.TA1TBLVU = "VITEM001";
          TA1REC.TA1TBLKE = OP2REC.OP2KEY;
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
          
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
          XSPF4();
        end
      end
    end
    call "IO0450" ("CS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "SS";
    TA1REC.TA1PGMNM = "OP0E   ";
    TA1REC.TA1LOCAT[1] = "OP0ESER ";
    TA1REC.TA1LOCAT[2] = "IO0440  ";
    TA1REC.TA1LOCAT[3] = " ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "     ";
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    TA1REC.TA1TBLKE = OP2REC.OP2KEY;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end



end // end OP0ESER

// edit trade disc percents
Function OP0ESET()




      /* *******************************************************/
      /* * the entered trade disc % must be in the            **/
      /* * xaatbl table                                       **/
      /* *    and                                             **/
      /* * face % + bank % must = total trade disc %          **/
      /* * the trade discount override flag is set to 'y' only**/
      /* * when the new % is different with the old %         **/
      /* *******************************************************/


  if (OP0EM001.XTDPCT is modified)
    if (OP0EM001.XTDPCT in XTDTBL.XTDPCT
     && XTDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      set OP0EM001.XTDPCT initialAttributes;
      if (OP0EM001.XTDPCT == OP0EW01.OP0EWTD)
         /* next sentence*/
      else
        OP1REC.OP1TDOF = "Y";
        OPWREC.OPWAUTFL = "Y";
      end
    else
      set OP0EM001.XTDPCT cursor, modified, bold;
      set OP0EM001.OP1TDFCP modified, bold;
      set OP0EM001.OP1TDBKP modified, bold;
      converseLib.validationFailed(088); /* trade disc % is not setup/authorized*/
      OPAREC.OPAERR = "Y"; /* set error flag*/
      return;
    end
  end



  OP0EW01.OP0EWTDP = OP0EM001.OP1TDFCP + OP0EM001.OP1TDBKP;

  if (OP0EM001.XTDPCT == OP0EW01.OP0EWTDP)
    if (OP0EM001.OP1TDFCP is modified
     || OP0EM001.OP1TDBKP is modified)
      set OP0EM001.XTDPCT initialAttributes;
      set OP0EM001.OP1TDFCP initialAttributes;
      set OP0EM001.OP1TDBKP initialAttributes;
    end
  else
    converseLib.validationFailed(089); /* trade disc f/b % are not correct*/
    set OP0EM001.XTDPCT cursor, modified, bold;
    set OP0EM001.OP1TDFCP modified, bold;
    set OP0EM001.OP1TDBKP modified, bold;
    OPAREC.OPAERR = "Y"; /* set error flag*/
  end



   /* ***********************************************************/
end // end OP0ESET

// edit warehouse
Function OP0ESEW()



       /* ******************************************************/
       /* * this statement group edits the entered warehouse  **/
       /* ******************************************************/



  if (OP0EM001.XWHCD == " ")
    if (OP0EW01.XDSWHSEF == "Y") /* whse is a required field*/
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(076);
      set OP0EM001.XWHCD cursor, modified, bold;
    else
      OP0EM001.XWHSABRV = " ";
      set OP0EM001.XWHCD normal;
      set OP0EM001.XWHSABRV normal;
    end
    return;
  end


  if (OP0EM001.XWHCD != " ")
    if (OP0EW01.XDSWHSEF == "N")
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(336);
      set OP0EM001.XWHCD cursor, modified, bold;
      return;
    end
  end

   /* added warehouse edit for Canada - CANA*/

  if (OP0EM001.XWHCD == "42" /* if canadian warehouse*/
   && OP1REC.XDZ-DATA-DIST-CD != "CA") /* and not canadian order*/
    set OP0EM001.XWHCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
    if (converseVar.validationMsgNum == 0)
      converseLib.validationFailed(898); /* canadian warehouse not valid*/
      return;
    end
  else
    if (OP0EM001.XWHCD != "42" /* if not canadian warehouse*/
     && OP0EW01.XDSWHSEF == "Y"
     && OP1REC.XDZ-DATA-DIST-CD == "CA") /* and its a canadian order*/
      set OP0EM001.XWHCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      if (converseVar.validationMsgNum == 0)
        converseLib.validationFailed(897); /* warehouse must be 42*/
        return;
      end
    end
  end

       /* order header gpc code must equal one of the 8 gpc*/
       /* codes for the warehouse*/

  if (OP0EM001.XWHCD in XWHTBL.XWHCD
   && XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    if (OP1REC.XGPCD == XWHTBL.XGPCD1[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD2[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD3[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD4[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD5[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD6[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD7[sysVar.arrayIndex]
     || OP1REC.XGPCD == XWHTBL.XGPCD8[sysVar.arrayIndex])
      OP0EM001.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex];
      set OP0EM001.XWHCD initialAttributes;
      if (XWHTBL.XWHOWNGF[sysVar.arrayIndex] == "Y")
        OP0ESOG(); /* validate owner group*/
      else
        OPWREC.XOWCD = "00";
        OP0EM001.XOWABRV = " ";
        set OP0EM001.XOWCD initialAttributes;
      end
    else
      converseLib.validationFailed(078); /* warehouse is not valid*/
      set OP0EM001.XWHCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
    end
  else
    converseLib.validationFailed(078); /* warehouse is not valid*/
    set OP0EM001.XWHCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
  end



   /* ********************************************************/
   /* ********************************************************/
end // end OP0ESEW

// EDIT DIRECT SHIP CODE percent
Function OP0ESEX()

    /* EDIT DIRECT SHIP PERCENT*/

  if (OP0EM001.OP0EWDPC >= "0"
   && OP0EW01.OP0EWDPC <= XDSTBL.XDS-MAX-DIRSHP-PCT[sysVar.arrayIndex]
  ) /* next sentence*/
  else
    set OP0EM001.OP0EWDPC cursor, bold;
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(742); /**/
    return;
  end

end // end OP0ESEX

// update spcl instructions tbl
Function OP0ESIA()



      /* ********************************************************/
      /* * this statement group check to see if the user updates*/
      /* * existing intruction or enters a new one*/
      /* ********************************************************/


  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = "I"; /* instruction*/

  if (OP0EW01.OP0EWTSQ == 0)
    OP0EW01.OP0EWTSQ = 1;
  end

  OP4REC.OP4TRSEQ = OP0EW01.OP0EWTSQ;


  call "IO0470" ("S ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    OP0ESIU(); /* update instruction*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OP0ESIW(); /* write new one*/
    else
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
      TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESIA"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0470";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



   /* ************************************************************/
end // end OP0ESIA

// update special inst record
Function OP0ESIU()


       /* *******************************************************/
       /* * this statement group updates the existing special  **/
       /* * instruction of an order                            **/
       /* *******************************************************/


       /* initialize the abend screen*/

  TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
  TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
  TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
  TA1REC.TA1LOCAT[3] = "OP0ESIU"; /* statement group*/
  TA1REC.TA1LOCAT[4] = "IO0470";


       /* load keys*/

  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = "I";
  OP4REC.OP4TRSEQ = OP0EW01.OP0EWTSQ;



  if (OP0EM001.OP4TXT == " ")
    call "IO0470" ("D ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes}; /* delete text rec*/
    if (SQLCA.VAGen_SQLCODE == 0)
      OP0EW01.OP0EWIC = OP0EW01.OP0EWIC - 1;
      set OP0EM001.XNDCD initialAttributes;
      set OP0EM001.OP4TXT initialAttributes;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  else
    if (OP0EM001.XNDCD in XNDTBL.XNDCD
     && XNDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      set OP0EM001.XNDCD initialAttributes;
      OP4REC.OP4TXT = OP0EM001.OP4TXT;
      OP4REC.OP4TXTOF = "Y";
      OP4REC.XNDCD = OP0EM001.XNDCD;
      OP4REC.ZZZCHGDT = OPAREC.OPACDT;
      OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
      OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
      OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
      OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;

      call "IO0470" ("U ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

      if (SQLCA.VAGen_SQLCODE == 0)
         /* next sentence - record rewritten*/
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " ";
        XSPF4();
        exit program;
      end
    else
      converseLib.validationFailed(080); /* nike dept is not valid*/
      set OP0EM001.XNDCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
    end
  end



  if (OP0EW01.OP0EWIC <= 0)
    OP1REC.OP1SPINF = "N"; /* reset the more sp instr. flag*/
    OP0EM001.OP0EMMSI = "N"; /* reset the more sp instr. indicator*/
  end



   /* ************************************************************/
end // end OP0ESIU

// write new special inst rec
Function OP0ESIW()



       /* *******************************************************/
       /* * this statement group writes a new special          **/
       /* * instruction to the dorder.vtext001 table           **/
       /* *******************************************************/


  if (OP0EM001.OP4TXT == " ")
    set OP0EM001.XNDCD initialAttributes;
  else
    if (OP0EM001.XNDCD in XNDTBL.XNDCD
     && XNDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      set OP0EM001.XNDCD initialAttributes;
      set OP0EM001.OP4TXT initialAttributes;
      OP4REC.OP4KEY = OP1REC.OP1KEY;
      OP4REC.OP4TRTYP = "I";
      OP4REC.OP4TRSEQ = OP0EW01.OP0EWTSQ;
      OP4REC.OP4TXT = OP0EM001.OP4TXT;
      OP4REC.OP4TXTOF = "Y";
      OP4REC.XNDCD = OP0EM001.XNDCD;
      OP4REC.ZZZCHGDT = OPAREC.OPACDT;

           /* reformat time to move to the record*/

      OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
      OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
      OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
      OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;

      call "IO0470" ("A ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

           /* check db2 return code*/

      if (SQLCA.VAGen_SQLCODE == 0)
        OP1REC.OP1SPINF = "Y"; /* new op4rec is written*/
        OP0EW01.OP0EWIC = OP0EW01.OP0EWIC + 1;
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
        TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OP0ESIW"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0470";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " ";
        XSPF4();
        exit program;
      end
    else
      converseLib.validationFailed(080); /* nike dept is not valid*/
      set OP0EM001.XNDCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
    end
  end



   /* ************************************************************/
end // end OP0ESIW

// get customer/gpc record
Function OP0ESKC()


       /* *******************************************************/
       /* * this statement group reads the customer company    **/
       /* * record (dcust.vcmpny01) kucrec.                    **/
       /* *******************************************************/


       /* initialize the abend record*/

  TA1REC.TA1TYPE = "DB2 "; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
  TA1REC.TA1PGMNM = "OP0E    "; /* program name*/
  TA1REC.TA1MAP = "OP0EM001"; /* map name*/
  TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
  TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
  OP0EW01.KUCCOID = KUNREC.KUCCOID;
  TA1REC.TA1TBLKE = OP0EW01.OP0EWCK1; /* table key*/
  TA1REC.TA1LOCAT[3] = "OP0ESKC"; /* statement group*/
  TA1REC.TA1LOCAT[4] = "IO0240";



       /* read the customer company record*/

  KUCREC.KUCCOID = OP1REC.KUCCOID;

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* next sentence*/
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



   /* ************************************************************/
end // end OP0ESKC

// modify special labels
Function OP0ESLA()



       /* *******************************************************/
       /* * this statement checks to see if a label is being   **/
       /* * modified or a   new label is being entered         **/
       /* * if a label is being modified                       **/
       /* **   updates the label                               **/
       /* * if it is being entered                             **/
       /* *    writes new label to the dorder.vtext001 table   **/
       /* *******************************************************/


  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = "L";
  OP4REC.OP4TRSEQ = OP0EW01.OP0EWLSW;
  call "IO0470" ("S ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
    OP0ESLU(); /* update the op4rec*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      OP0ESLW(); /* write the new op4rec*/
    else
      TA1REC.TA1TYPE = "DB2 "; /* abend type*/
      TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
      TA1REC.TA1PGMNM = "OP0E    "; /* program name*/
      TA1REC.TA1MAP = "OP0EM001"; /* map name*/
      TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
      TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
      TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
      TA1REC.TA1LOCAT[3] = "OP0ESLA"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0470";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
    end
  end



   /* ************************************************************/
end // end OP0ESLA

// load instructions onto op tble
Function OP0ESLI()



        /* ******************************************************/
        /* * this statement group does a select set to the     **/
        /* * customer special instructions table and copy the  **/
        /* * instructions into the dorder.vtext001 table       **/
        /* ******************************************************/


  call "IO0300" ("SN", SQLCA, KUQREC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    OP0ESWI(); /* write inst to vinst001 table*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
       /* next sentence*/
    else
      TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
      TA1REC.TA1TBLVU = "VINST001"; /* table view*/
      OP0EW01.KUCCOID = KUQREC.KUCCOID;
      OP0EW01.KUMSTRID = KUQREC.KUMSTRID;
      OP0EW01.XNXCD = KUQREC.XNXCD;
      OP0EW01.XGPCD = KUQREC.XGPCD;
      TA1REC.TA1TBLKE = OP0EW01.OP0EWCK; /* table key*/
      TA1REC.TA1LOCAT[3] = "OP0ESLI"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0300";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



   /* ************************************************************/
end // end OP0ESLI

// update label record
Function OP0ESLU()



       /* *******************************************************/
       /* * this statement groups checks to see if a label is  **/
       /* * erased or modified                                 **/
       /* * if the label is erased                             **/
       /* *   delete label                                     **/
       /* * else                                               **/
       /* *   update label                                     **/
       /* *******************************************************/


       /* initialize the abend screen*/

  TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
  TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
  TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
  TA1REC.TA1LOCAT[3] = "OP0ESLU"; /* statement group*/
  TA1REC.TA1LOCAT[4] = "IO0470";


  if (OP0EW01.OP4TXT == " ") /* label was blanked out*/
    call "IO0470" ("D ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      OP0EW01.OP0EWLC = OP0EW01.OP0EWLC - 1;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  else
    OP4REC.OP4TXT = OP0EW01.OP4TXT;
    OP4REC.OP4TXTOF = "Y";
    OP4REC.ZZZCHGDT = OPAREC.OPACDT;
    OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
    OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
    OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
    OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;

    call "IO0470" ("U ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end



  if (OP0EW01.OP0EWLC == 0)
    OP1REC.OP1SPLBF = "N"; /* reset the op4rec special lable fl*/
  end



   /* ********************************************************/
end // end OP0ESLU

// write new label record
Function OP0ESLW()



      /* ********************************************************/
      /* * this statement group writes a new special label     **/
      /* * record to the dorder.vtext001 table                 **/
      /* ********************************************************/


  if (OP0EW01.OP4TXT == " ")
    return; /* added to fix bug that was writing bad records - 3/17/87*/
  else
    OP4REC.OP4KEY = OP1REC.OP1KEY;
    OP4REC.OP4TRTYP = "L";
    OP4REC.OP4TRSEQ = OP0EW01.OP0EWLSW;
    OP4REC.OP4TXT = OP0EW01.OP4TXT;
    OP4REC.XNDCD = " ";
    OP4REC.OP4TXTOF = "Y";
    OP4REC.ZZZCHGDT = OPAREC.OPACDT;

         /* reformat time to move to the record*/

    OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
    OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
    OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
    OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;
  end

  call "IO0470" ("A ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
    OP1REC.OP1SPLBF = "Y"; /* new op4rec is written*/
    OP0EW01.OP0EWLC = OP0EW01.OP0EWLC + 1;
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
    TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OP0ESLW"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0470";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
    exit program;
  end



   /* ************************************************************/
end // end OP0ESLW

// set modified fields modified
Function OP0ESMD()

       /* *******************************************************/
       /* * this statement group set modified fields modified  **/
       /* * in case a invalid key is pressed                   **/
       /* *******************************************************/

  if (OP0EM001.XCPPCT is modified)
    set OP0EM001.XCPPCT modified;
  end


  if (OP0EM001.XAAPCT is modified)
    set OP0EM001.XAAPCT modified;
  end


  if (OP0EM001.OP1AAFCP is modified)
    set OP0EM001.OP1AAFCP modified;
  end


  if (OP0EM001.OP1AABKP is modified)
    set OP0EM001.OP1AABKP modified;
  end


  if (OP0EM001.XTDPCT is modified)
    set OP0EM001.XTDPCT modified;
  end


  if (OP0EM001.OP1TDFCP is modified)
    set OP0EM001.OP1TDFCP modified;
  end


  if (OP0EM001.OP1TDBKP is modified)
    set OP0EM001.OP1TDBKP modified;
  end


  if (OP0EM001.XDAPCT is modified)
    set OP0EM001.XDAPCT modified;
  end


  if (OP0EM001.XPTCD is modified)
    set OP0EM001.XPTCD modified;
  end


  if (OP0EM001.OP0EMMHD is modified)
    set OP0EM001.OP0EMMHD modified;
  end



  if (OP0EM001.OP0EMMSI is modified)
    set OP0EM001.OP0EMMSI modified;
  end


  if (OP0EM001.KUSTEXT1 is modified)
    set OP0EM001.KUSTEXT1 modified;
  end


  if (OP0EM001.KUSTEXT2 is modified)
    set OP0EM001.KUSTEXT2 modified;
  end


  if (OP0EM001.OP4TXT is modified)
    set OP0EM001.OP4TXT modified;
  end


  if (OP0EM001.XNDCD is modified)
    set OP0EM001.XNDCD modified;
  end


  if (OP0EM001.XOWCD is modified)
    set OP0EM001.XOWCD modified;
  end


  if (OP0EM001.XWHCD is modified)
    set OP0EM001.XWHCD modified;
  end


  if (OP0EM001.OP1BOFL is modified)
    set OP0EM001.OP1BOFL modified;
  end


  if (OP0EM001.XDSCD is modified)
    set OP0EM001.XDSCD modified;
  end


  if (OP0EM001.OP0EWDPC is modified)
    set OP0EM001.OP0EWDPC modified;
  end


  if (OP0EM001.XBDCD is modified)
    set OP0EM001.XBDCD modified;
  end


  if (OP0EM001.OP1CALDT is modified)
    set OP0EM001.OP1CALDT modified;
  end


  if (OP0EM001.OP1DSADT is modified)
    set OP0EM001.OP1DSADT modified;
  end


  if (OP0EM001.OP1CPODT is modified)
    set OP0EM001.OP1CPODT modified;
  end


  if (OP1REC.XBCCD == "08"
   || OP0EM001.XWHCD == "51")
    set OP0EM001.OP1DSBDT modified;
  else
    if (OP0EM001.OP1DSBDT is modified)
      set OP0EM001.OP1DSBDT modified;
    end
  end

  if (OCGREC.OCG-OC-ELIG-FOR-CNFM-FL == "Y"
   && OP0EM001.OP-SND-CNFM-FL is modified)
    set OP0EM001.OP-SND-CNFM-FL modified;
  end


  if (OP0EM001.SM4REPID is modified)
    set OP0EM001.SM4REPID modified;
  end


  if (OP0EM001.SM1AGYID is modified)
    set OP0EM001.SM1AGYID modified;
  end

   /* **********************************************************/
end // end OP0ESMD

// reset mod fields
Function OP0ESMT()

   /* set all mod so won't slip mdt's on pa key*/


  set OP0EM001.XCPPCT modified;
  set OP0EM001.XAAPCT modified;
  set OP0EM001.OP1AAFCP modified;
  set OP0EM001.OP1AABKP modified;
  set OP0EM001.XTDPCT modified;
  set OP0EM001.OP1TDFCP modified;
  set OP0EM001.OP1TDBKP modified;
  set OP0EM001.XDAPCT modified;
  set OP0EM001.XPTCD modified;
  set OP0EM001.OP0EMMHD modified;
  set OP0EM001.OP0EMMSI modified;
  set OP0EM001.OP4TXT modified;
  set OP0EM001.XNDCD modified;

    /* for draws, owner group and warehouse are defaulted*/
    /* from the bulk order and cannot be changed (log#665)*/

    /* also, in review mode owner group and warehouse*/
    /* cannot be changed.*/

    /* finally, in phone flow, owner group cannot be changed*/
    /* (log#665)*/

  set OP0EM001.XWHCD modified;
  set OP0EM001.XOWCD modified;

  if (OP0EW01.OP0EWOCD == "D") /* draw order*/
    set OP0EM001.XOWCD protect;
    set OP0EM001.XWHCD protect;
  else
    if (OPWREC.OPWREVM > 1 /* review mode*/
     || OPWREC.OPWFUNC == "3")
      set OP0EM001.XOWCD protect;
      set OP0EM001.XWHCD protect;
    else
      if (OPWREC.OPWSFLOW == 2)
        set OP0EM001.XOWCD protect;
      end
    end
  end

  set OP0EM001.OP1BOFL modified;
  set OP0EM001.XDSCD modified;
  set OP0EM001.OP0EWDPC modified;

  if (OP0EW01.OP0EWOCD == "D") /* draw order*/
    if (OP1REC.XBDCD == "8" /* blank bulk draw*/
     || OP1REC.XBDCD == "F") /* finished goods bulk draw*/
      set OP0EM001.XBDCD modified;
    else
      set OP0EM001.XBDCD protect;
    end
  else
    set OP0EM001.XBDCD modified;
  end

  set OP0EM001.OP1CALDT modified;
  set OP0EM001.OP1DSADT modified;
  set OP0EM001.OP1DSBDT modified;
  set OP0EM001.OP1CPODT modified;
  set OP0EM001.SM4REPID modified;
  set OP0EM001.SM1AGYID modified;

  if (OCGREC.OCG-OC-ELIG-FOR-CNFM-FL == "Y")
    set OP0EM001.OP-SND-CNFM-FL modified;
  end


end // end OP0ESMT

// move valid data to ord header
Function OP0ESMV()
      /* ******************************************************/
      /* * move valid data on screen to the op1rec record*/
      /* ******************************************************/

       /* sales rep*/

  OP1REC.SM1AGYID = OP0EM001.SM1AGYID;
  OP1REC.SM4REPID = OP0EM001.SM4REPID;

  if (OP0EW01.OP0EWRHF == "Y") /* if rep/agency modified*/
    OP0ESAU(); /* write exception record to audit file*/
    OP1REC.OP-SREP-OVRD-FL = "Y"; /* rep/agency override*/
  end


       /* cust po number*/

  OP1REC.OP1CUPO = OP0EM001.OP1CUPO;

       /* dont ship before date, dont ship after date, callout dt*/

  if (OP0EM001.OP1CALDT == "MMDDYY"
   || OP0EM001.OP1CALDT == " "
   || OP0EM001.OP1CALDT == "000000")
    OP1REC.OP1CALDT = 0;
  end



  if (OP0EM001.OP1DSADT == "MMDDYY"
   || OP0EM001.OP1DSADT == " "
   || OP0EM001.OP1DSADT == "000000")
    OP1REC.OP1DSADT = 0;
  end



  if (OP0EM001.OP1DSBDT == "MMDDYY"
   || OP0EM001.OP1DSBDT == " "
   || OP0EM001.OP1DSBDT == "000000")
    OP1REC.OP1DSBDT = 0;
  end


  if (OP0EM001.OP1CPODT == "MMDDYY"
   || OP0EM001.OP1CPODT == " "
   || OP0EM001.OP1CPODT == "000000")
    OP1REC.OP1CPODT = 0;
  end


  OP1REC.OP1IFAMT = OP0EM001.OP1IFAMT;
  OP1REC.OP1SHAMT = OP0EM001.OP1SHAMT;
  OP1REC.OP1FTIND = OP0EM001.OP1FTIND;
  OP1REC.OP1IPIND = OP0EM001.OP1IPIND;

       /* bulk/draw order code*/

  OP1REC.XBDCD = OP0EM001.XBDCD;


       /* direct ship code*/

  OP1REC.XDSCD = OP0EM001.XDSCD;

   /* remove 'MS' pack code if not direct ship order*/

  if (OP1REC.XPACD == "MS")
    if (OP1REC.XDSCD == "1"
     || OP1REC.XDSCD == "2")
       /* ok next sentence*/
    else
      OP1REC.XPACD = "  ";
    end
  end

       /* direct ship discount pct*/

  OP0EW01.OP0EWDPC = OP0EM001.OP0EWDPC;
  OP1REC.OP-DIRSHP-DSCT-PCT = OP0EW01.OP0EWDPC;



       /* back order flag*/

  OP1REC.OP1BOFL = OP0EM001.OP1BOFL;



       /* warehouse code*/

  OP1REC.XWHCD = OP0EM001.XWHCD;


       /* owner group code*/

  if (OP0EM001.XOWCD == " ")
    OPWREC.XOWCD = "00";
  else
    OPWREC.XOWCD = OP0EM001.XOWCD; /* hold in w/s for op0i detail*/
  end


       /* small ship charge*/

  OP1REC.OP1SMSCF = " ";

       /* small ship charge overide*/

  OP1REC.OP1SSHPO = " ";


   /* ***********************************************************/
  if (OP1REC.XDVCD != "02") /* if not international*/

         /* payment term code*/

    OP1REC.XPTCD = OP0EM001.XPTCD;

         /* deffective percent*/

    OP1REC.XDAPCT = OP0EM001.XDAPCT;

         /* trade discount percent*/

    OP1REC.XTDPCT = OP0EM001.XTDPCT;
    OP1REC.OP1TDFCP = OP0EM001.OP1TDFCP;
    OP1REC.OP1TDBKP = OP0EM001.OP1TDBKP;

         /* ad allowance percent*/
         /* ad allowance off-face percent*/
         /* ad allowance bank percent*/

    OP1REC.XAAPCT = OP0EM001.XAAPCT;
    OP1REC.OP1AAFCP = OP0EM001.OP1AAFCP;
    OP1REC.OP1AABKP = OP0EM001.OP1AABKP;

         /* co-op percent*/

    OP1REC.XCPPCT = OP0EM001.XCPPCT;

         /* spgm min disc %*/

    if (OP1REC.SP1ID > " ")
      if (OPWREC.OPWFUNC == "2" /* if dup order*/
       || OPWREC.OPWFUNC == "3" /* if dup order header*/
       || OPWREC.OPWREVM > 1)   /* if review mode*/
        OP1REC.OP1TLVLN = OP0EW01.OP1TLVLN; /* saved spgm tier level*/
        OP1REC.SP6MDISC = OP0EW01.SP6MDISC; /* saved spgm min disc%*/
      else
        OP1REC.OP1TLVLN = OEAREC.OP1TLVLN;
        OP1REC.SP6MDISC = OEAREC.SP6MDISC;
      end
    end


  end
   /* ***********************************************************/



       /* move customer's defaults to op1rec*/
        /* - don't default if in review mode. havn't read*/
        /* - cust record yet so overlays with spaces. - jdv 1/23*/
        /* - or are in dup header                     - jdv 7/23*/

  if (OPWREC.OPWREVM > 1
   || OPWREC.OPWFUNC == "3")
     /* next sentence*/
  else
    OP1REC.KUCVNDFL = KUCREC.KUCVNDFL;
  end

   /* **********************************************************/

  OP1REC.OP-SND-CNFM-FL = OP0EM001.OP-SND-CNFM-FL; /* SEND CNFM FLAG*/

end // end OP0ESMV

// get bulk/draw order code abrv
Function OP0ESOA()



       /* ******************************************************/
       /* * this statement group gets the bulk/draw order     **/
       /* * code abbreviation for display                     **/
       /* ******************************************************/


  if (OP1REC.XBDCD in XBDTBL.XBDCD
   && XBDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0EM001.XBDABRV = XBDTBL.XBDABRV[sysVar.arrayIndex];
  else
    OP0EM001.XBDABRV = " ";
  end



   /* ************************************************************/
end // end OP0ESOA

// edit owner group code
Function OP0ESOG()


   /* since owner code edit triggered when warehouse changes*/
   /* if xow code in error, also set xwhcd modified to trigger*/
   /* re-edit of owner code.*/


     /* edit owner group code.*/



  if (OP0EM001.XOWCD > " ")
     /* next sentence*/
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(103); /* owner group required*/
    set OP0EM001.XOWCD cursor, modified, bold;
    return;
  end




    /* look owner code up in xowtbl.*/


  XOWREC.XWHCD = OP0EM001.XWHCD;
  XOWREC.XOWCD = OP0EM001.XOWCD;

  if (XOWREC.XOWKEY in XOWTBL.XOWKEY /* if in table*/
   && XOWTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    set OP0EM001.XOWCD initialAttributes;
    OP0EM001.XOWABRV = XOWTBL.XOWABRV[sysVar.arrayIndex];
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(101); /* owner group code not found on table*/
    set OP0EM001.XOWCD cursor, modified, bold;
    return;
  end


       /* check for the universal owner group code -- if this*/
       /* code was entered, allow any service rep to enter and*/
       /* maintenance orders*/

  if (XOWTBL.XOWALUSR[sysVar.arrayIndex] == "Y") /* allow any service rep*/
    return;
  end /* continue editing*/



      /* if promo warehouse and team sales owner code*/
        /* accept any service rep*/

  if (OP0EM001.XWHCD == "09")
    if (OP0EM001.XOWCD == "45"
     || OP0EM001.XOWCD == "55"
     || OP0EM001.XOWCD == "65"
     || OP0EM001.XOWCD == "75")
      set OP0EM001.XOWCD initialAttributes;
      return;
    end
  end





    /* match owner code to userid and warehouse*/


  OPAREC.OPASUB = 1;
  OP0EW01.OP0EWFND = "N";

  while (XOLTBL.XSVCD[OPASUB] != 9999 /* while not end of table*/
   && XOLTBL.XWHCD[OPASUB] != "99" 
   && OP0EW01.OP0EWFND == "N")
    if (XOLTBL.XWHCD[OPASUB] == OP0EM001.XWHCD
     && XOLTBL.XSVCD[OPASUB] == OP1REC.OP1ENREP
     && XOLTBL.XXXSTAT[OPASUB] == "A")
      OP0EW01.OP0EWFND = "Y"; /* found entry*/
    else
      OPAREC.OPASUB = OPAREC.OPASUB + 1;
    end
  end


  if (OP0EW01.OP0EWFND == "N")
    converseLib.validationFailed(102);
                                   /* owner code no match to whs and userid*/
    OPAREC.OPAERR = "Y";
    set OP0EM001.XOWCD cursor, modified, bold;
    return;
  end






   /* now see that the xowcd is on the oltbl record.*/
   /* first check the all owners flag.*/


  if (XOLTBL.XOLALLOF[OPASUB] == "Y")
    set OP0EM001.XOWCD initialAttributes;
    return;
  end


  if (XOLTBL.XOWCD1[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD2[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD3[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD4[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD5[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD6[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD7[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD8[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD9[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD10[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD11[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD12[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD13[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD14[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD15[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD16[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD17[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD18[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD19[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end

  if (XOLTBL.XOWCD20[OPASUB] == OP0EM001.XOWCD)
    set OP0EM001.XOWCD initialAttributes;
    return;
  end




    /* if got here didn't find xowcd in the 20 xowcd's*/
    /* of the xoltbl.*/


  OPAREC.OPAERR = "Y";
  converseLib.validationFailed(102); /* owner group not allowable*/
  set OP0EM001.XOWCD cursor, modified, bold;





end // end OP0ESOG

// protect terms & disc percents
Function OP0ESPF()



       /* *******************************************************/
       /* * terms and discount percents can not be modified    **/
       /* * if this order has a sales program                  **/
       /* *******************************************************/



  set OP0EM001.OP1PTOF protect;
  set OP0EM001.XPTCD protect;
  set OP0EM001.XDAPCT protect;
  set OP0EM001.XTDPCT protect;
  set OP0EM001.OP1TDFCP protect;
  set OP0EM001.OP1TDBKP protect;
  set OP0EM001.XAAPCT protect;
  set OP0EM001.OP1AAFCP protect;
  set OP0EM001.OP1AABKP protect;
  set OP0EM001.XCPPCT protect;



   /* ********************************************************/
end // end OP0ESPF

// get payment term description
Function OP0ESPT()



       /* ********************************************************/
       /* * payment terms code is a required field              **/
       /* ********************************************************/


  if (OP0EW01.OP0EWPCD in XPTTBL.XPTCD /* valid payment term code*/
   && XPTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0EM001.XPTDESC = XPTTBL.XPTDESC[sysVar.arrayIndex];
  else
    converseLib.validationFailed(086);
    set OP0EM001.XPTCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
  end



   /* ***********************************************************/
end // end OP0ESPT

// validate sales rep on ragcy01
Function OP0ESRH()


   /* ********************************************************/
   /* * read the agency/rep file to find the right sales    **/
   /* * rep for this order                                  **/
   /* ********************************************************/

     /* compare ragcy01 table with order agency/rep*/

  OP0EW01.OP0EWRHF = "N";

  VRAGCY02.SM1AGYID = OP0EW01.SM1AGYID;
  VRAGCY02.SM4REPID = OP0EW01.SM4REPID;
  VRAGCY02.XXXSTAT = "A";

  call "IO0400" ("S ", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    set OP0EM001.SM4REPID initialAttributes;
    set OP0EM001.SM1AGYID initialAttributes;
    OP0EM001.XXXLSTNM = VRAGCY02.XXXLSTNM;
    OP0EW01.XXXFSTNM = VRAGCY02.XXXFSTNM;
    OP0EM001.XXXFSTNM = OP0EW01.OP0EWFIN;
    OP0EW01.OP0EWRHF = "Y";
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if active sales rep not found*/
      converseLib.validationFailed(066);
      set OP0EM001.SM4REPID cursor, modified, bold;
      set OP0EM001.SM1AGYID modified, bold;
      OPAREC.OPAERR = "Y";
    else
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view*/
      OP0EW01.SM4REPID = VRAGCY02.SM4REPID;
      OP0EW01.SM1AGYID = VRAGCY02.SM1AGYID;
      OP0EW01.XXXSTAT = VRAGCY02.XXXSTAT;
      TA1REC.TA1TBLKE = OP0EW01.OP0EWSMK; /* table key*/
      TA1REC.TA1LOCAT[3] = "OP0ESRH "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0160  ";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end

end // end OP0ESRH

// get sales rep name
Function OP0ESRN()



       /* *******************************************************/
       /* * get the sales rep's name for display               **/
       /* *******************************************************/



  VRAGCY02.SM1AGYID = OP0EW01.SM1AGYID;
  VRAGCY02.SM4REPID = OP0EW01.SM4REPID;
  VRAGCY02.XXXSTAT = "A";

  call "IO0400" ("S ", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
    OP0EM001.XXXLSTNM = VRAGCY02.XXXLSTNM;
    OP0EW01.XXXFSTNM = VRAGCY02.XXXFSTNM;
    OP0EM001.XXXFSTNM = OP0EW01.OP0EWFIN;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* if active sales rep not found*/
      OP0EM001.XXXLSTNM = "SALES REP NAME NOT FOUND";
    else
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VRAGCY01"; /* table view*/
      OP0EW01.SM4REPID = VRAGCY02.SM4REPID;
      OP0EW01.SM1AGYID = VRAGCY02.SM1AGYID;
      OP0EW01.XXXSTAT = VRAGCY02.XXXSTAT;
      TA1REC.TA1TBLKE = OP0EW01.OP0EWSMK; /* table key*/
      TA1REC.TA1LOCAT[3] = "OP0ESRN "; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO0160  ";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end





   /* ************************************************************/
end // end OP0ESRN

// get customer rep & agency
Function OP0ESRR()


   /* This statement group determines the customer agency and*/
   /* rep assignment for this order.  If the correct rep cannot*/
   /* be found by reading the customer rep table using iomod*/
   /* ku1350 and there is an item on the order (if not OP0J will*/
   /* find agency/rep), a message is displayed & the agency/rep*/
   /* is allowed to be entered.*/



  if (OPWREC.OPWREVM > 1) /* if in review mode*/
    set OP0EM001.SM1AGYID cursor, bold;
    set OP0EM001.SM4REPID bold;
    converseLib.validationFailed(607); /* msg: can't determine rep*/
    return;
  end

  set OP0EM001.SM1AGYID skip; /* can only enter rep in review mode*/
  set OP0EM001.SM4REPID skip;
  OP0EW01.OP0EWARF = "N"; /* reset for rep found flag*/
  OP0EW01.OP0EWIRF = "N"; /* reset for item rec found flag*/

  OP0ESRS(); /* look on cust rep table*/

  if (OP0EW01.OP0EWIRF == "N") /* no item record found*/
    return; /* will be found in OP0J*/
  end

  if (OP0EW01.OP0EWARF == "Y") /* was a good rep found somewhere?*/
    OP0EW01.SM4REPID = OP1REC.SM4REPID;
    OP0EW01.SM1AGYID = OP1REC.SM1AGYID;
    OP0EM001.SM4REPID = OP1REC.SM4REPID;
    OP0EM001.SM1AGYID = OP1REC.SM1AGYID;
    OP0ESRN(); /* get rep name and move to display*/
  else /* couldn't find agcy/rep anywhere*/
    set OP0EM001.SM1AGYID normal; /* let the cust svc rep enter it*/
    set OP0EM001.SM1AGYID cursor, bold;
    set OP0EM001.SM4REPID normal; /* let the cust svc rep enter it*/
    set OP0EM001.SM4REPID bold;
    converseLib.validationFailed(607); /* msg: rep couldn't be determined*/
  end

end // end OP0ESRR

// get sales rep from vcurep01
Function OP0ESRS()


   /* this statement group determines if the order contains an*/
   /* item record at this time and, if so, accesses the customer/*/
   /* rep table (vcurep01) via nikeboth pgm ku1350 to get the correct*/
   /* rep and sales agency for this order.   03/21/90 / new ku1350 4/1/92*/



  set SQLCA empty;

      /* select the set of line items for the order number*/

  OP2REC.OP2KEY = OP1REC.OP1KEY;

  call "IO0440" ("SS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};


      /* *********************************************************/
      /* * if the return code from the select set was good then*/
      /* * get the first item record (needed to get product cat.)*/
      /* ********************************************************/


  if (SQLCA.VAGen_SQLCODE == +0)
    call "IO0440" ("SN", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      SY2REC.XGPCD = OP2REC.XGPCD; /* PREPARE KEY DATA*/
      SY2REC.SY1STNBR = OP2REC.SY1STNBR; /* FOR VCOLOR01*/
      SY2REC.SY2CLRID = OP2REC.SY2CLRID; /* (TO GET PROD CAT)*/
      SY2REC.XDMCD = OP2REC.XDMCD;
      OP0EW01.OP0EWIRF = "Y"; /* item record found*/
      call "IO0440" ("CS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* close db2*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        call "IO0440" ("CS", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes}; /* close db2*/
        return; /* no item records*/
      else
        TA1REC.TA1LOCAT[1] = "SN"; /* bad return from fetch*/
      end
    end
  else
    TA1REC.TA1LOCAT[1] = "SS"; /* cursor open error*/
  end


  if (SQLCA.VAGen_SQLCODE > 0
   || SQLCA.VAGen_SQLCODE < 0)
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1PGMNM = "OP0E   ";
    TA1REC.TA1LOCAT[1] = "OP0ESRS ";
    TA1REC.TA1LOCAT[2] = "IO0440  ";
    TA1REC.TA1LOCAT[3] = " ";
    TA1REC.TA1LOCAT[4] = " ";
    TA1REC.TA1MAP = "     ";
    TA1REC.TA1DBASE = "DORDER";
    TA1REC.TA1TBLVU = "VITEM001";
    TA1REC.TA1TBLKE = OP2REC.OP2KEY;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end


  set SQLCA empty;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    set KU5REC empty;
    KU5REC.KU5-CALLING-PROGRAM-ID = "OP0E"; /* prepare key for*/
    KU5REC.KU5-CONV-DEPT-FLAG = "N"; /* call to ku1350*/
    KU5REC.KU5-READ-SA-FLAG = "N";
    KU5REC.KUCCOID = OP1REC.KUCCOID;
    KU5REC.KUMSTRID = OP1REC.KUMSTRID;
    KU5REC.XDVCD = OP1REC.XDVCD;
    KU5REC.XNXCD = OP1REC.XNXCD;
    KU5REC.XGPCD = OP1REC.XGPCD;
    KU5REC.XOBCD = OP1REC.XOBCD;
    KU5REC.SY1STNBR = SY2REC.SY1STNBR;
    KU5REC.SY2CLRID = SY2REC.SY2CLRID;
    KU5REC.XDMCD = SY2REC.XDMCD;
    KU5REC.XPCCD = SY2REC.XPCCD;
    KU5REC.XPLCD = SY2REC.XPLCD;

   /* **Note: For service request #778, orders for all customers now*/
           /* use order entered date for agcy/rep lookup. This is*/
           /* equivalent to using current date. If a decision is ever*/
           /* made to use some other date, current date should always be*/
           /* used for draws from customer bulks (XBDCD = '5') or t-shirt*/
           /* blank draws (XBDCD = '8') for military customers (lookup in*/
           /* OP0ESRU).*/

    KU5REC.OP1ORCDT = OP1REC.OP1ENTDT;

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      if (SQLCA.VAGen_SQLCODE > 0
       || SQLCA.VAGen_SQLCODE < 0)
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1PGMNM = "OP0E   ";
        TA1REC.TA1LOCAT[1] = "OP0ESRS ";
        TA1REC.TA1LOCAT[1] = "S ";
        TA1REC.TA1LOCAT[2] = "IO0130  ";
        TA1REC.TA1LOCAT[3] = " ";
        TA1REC.TA1LOCAT[4] = " ";
        TA1REC.TA1MAP = "     ";
        TA1REC.TA1DBASE = "DPROD";
        TA1REC.TA1TBLVU = "VCOLOR01";
        TA1REC.TA1TBLKE = SY2REC.SY2KEY;
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end

  call "KU1350" (KU5REC) {isNoRefresh = yes, isExternal = yes}; /* get best choice rep*/

  if (KU5REC.KU5-SEARCH-LEVEL-FLAG == " "
   || KU5REC.KU5-SEARCH-LEVEL-FLAG == "0")
    OP1REC.SM4REPID = 0;
    OP1REC.SM1AGYID = "    ";
    OP0EW01.OP0EWARF = "N"; /* no rep found*/
  else
    OP1REC.SM4REPID = KU5REC.SM4REPID;
    OP1REC.SM1AGYID = KU5REC.SM1AGYID;
    OP0EW01.OP0EWARF = "Y"; /* good rep found*/
  end

   /* ************************************************************/
end // end OP0ESRS

// get sp1rec spgm header
Function OP0ESSC()
  SP1REC.SP1KEY = OP1REC.SP1ID;

  call "IO0070" ("S ", SQLCA, SP1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      converseLib.validationFailed(503); /* spgm problem--contact spgm administrator*/
      OPAREC.OPAERR = "Y";
    else
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1DBASE = "DSPGM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSPGM001"; /* table view*/
      TA1REC.TA1LOCAT[1] = "S      "; /* statement group*/
      TA1REC.TA1LOCAT[2] = "IO0070 "; /* statement group*/
      TA1REC.TA1LOCAT[3] = "OP0ESSC"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "      ";
      OP0ESZ1(); /* load errdiag key info*/
      TA1REC.TA1TBLKE = OP0EW01.OP0EWTK1;
       /* IF SQLCA.SQLCODE = -911;*/
       /* MOVE 'post' TO TA1REC.TA1FUNC;*/
         /* CALL TA0020 TA1REC,SQLCA (REPLY,NONCSP;*/
         /* MOVE 010 TO ezemno          ;  database busy, please try*/
         /* MOVE 'Y' TO OPAREC.OPAERR;*/
       /* ELSE ;*/
      TA1REC.TA1FUNC = "RETN";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      XSPF4();
      exit program;
    end
  end


end // end OP0ESSC

// get special instructions
Function OP0ESSI()



       /* *******************************************************/
       /* * this statement group counts the special            **/
       /* * instructions for an order and selects the first    **/
       /* * instruction to display on the screen               **/
       /* *******************************************************/


  OP0ESSS(); /* select set vtext001 table*/


  OP0EW01.OP0EWIC = 0;


       /* move the first instruction to the screen*/


  while (SQLCA.VAGen_SQLCODE == 0)
    call "IO0470" ("SN", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (OP4REC.OP4TRTYP == "I")
        OP0EW01.OP0EWIC = OP0EW01.OP0EWIC + 1;
        if (OP0EW01.OP0EWIC == 1)
          OP0EM001.OP4TXT = OP4REC.OP4TXT;
          OP0EM001.XNDCD = OP4REC.XNDCD;
          OP0EW01.OP0EWTSQ = OP4REC.OP4TRSEQ; /* save sequence number*/
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
         /* next sentence*/
      else
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
        TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OP0ESSI"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0470";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        COMMAREA.CA-USER-WORKAREA-4K = " ";
        XSPF4();
        exit program;
      end
    end
  end


  call "IO0470" ("CS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


   /* ************************************************************/
end // end OP0ESSI

// get special labels
Function OP0ESSL()


       /* **********************************************/
       /* *  select the first two labels to display   **/
       /* *  on the order header screen.              **/
       /* **********************************************/


  OP0EW01.OP0EWLS1 = 0; /* set label seq number to 0*/
  OP0EW01.OP0EWLS2 = 0;
  OP0EW01.OP0EWLC = 0; /* set labels count to zero*/


  OP0ESSS(); /* access the order text table*/

  while (SQLCA.VAGen_SQLCODE == 0)
    call "IO0470" ("SN", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      if (OP4REC.OP4TRTYP == "L")
        OP0EW01.OP0EWLC = OP0EW01.OP0EWLC + 1;
        if (OP0EW01.OP0EWLC == 1)
          OP0EM001.KUSTEXT1 = OP4REC.OP4TXT;
          OP0EW01.OP0EWLS1 = OP4REC.OP4TRSEQ; /* save label1 sq num*/
        else
          if (OP0EW01.OP0EWLC == 2)
            OP0EM001.KUSTEXT2 = OP4REC.OP4TXT;
            OP0EW01.OP0EWLS2 = OP4REC.OP4TRSEQ; /* save label2 sq num*/
          end
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
         /* next sentence*/
      else
        TA1REC.TA1TYPE = "DB2 "; /* abend type*/
        TA1REC.TA1FUNC = "RETN"; /* abend function (return)*/
        TA1REC.TA1PGMNM = "OP0E    "; /* program name*/
        TA1REC.TA1MAP = "OP0EM001"; /* map name*/
        TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
        TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
        TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
        TA1REC.TA1LOCAT[3] = "OP0ESSL"; /* statement group*/
        TA1REC.TA1LOCAT[4] = "IO0470";
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        try
          call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        end
        XSPF4();
      end
    end
  end

  call "IO0470" ("CS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};


   /* ************************************************************/
end // end OP0ESSL

// access the optext01 table
Function OP0ESSS()



       /* ********************************************************/
       /* * this statement group does the select set to the     **/
       /* * dorder.vtext001 table                               **/
       /* ********************************************************/


  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = " ";

  call "IO0470" ("SS", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};

       /* check db2 return code*/

  if (SQLCA.VAGen_SQLCODE == 0)
     /* NEXT SENTENCE*/
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
    TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OP0ESSS"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0470";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
    exit program;
  end



   /* ************************************************************/
end // end OP0ESSS

// check spgm for flat terms
Function OP0EST1()
   /* check for flat terms (only 1 row) on sales program tier*/
   /* table.  if flat, calc terms.  if not flat, wait to calc*/
   /* terms until op0j when final $/units are known.  if it's*/
   /* a seasonal (life) sales program, '**' is passed to call*/
   /* sp6rec.  if not, the actual order type is used.  customer*/
   /* and corporate default terms are not tiered.*/
   /* ***********************************************************/

  set SP6REC empty;

  SP6REC.SP1ID = OP1REC.SP1ID;
  if (SP1REC.SP1LIFEF == "Y")
    SP6REC.XOTCD = "**";
  else
    SP6REC.XOTCD = OP1REC.XOTCD;
  end

  call "IO4220" ("S ", SQLCA, SP6REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    OPASUB = 2; /* check for flat terms*/
    if (SP6REC.SP6TIER[OPASUB] == 0)
      OP0EW01.OP0EWTRF = "Y";
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(503); /* spgm problem, contact spgm administrator*/
      OPAREC.OPAERR = "Y";
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1DBASE = "DSPGM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VTIERS01"; /* table view*/
      OP0ESZ1(); /* load errdiag key info*/
      TA1REC.TA1TBLKE = OP0EW01.OP0EWTK1;
      TA1REC.TA1LOCAT[3] = "OP0EST1"; /* statement group*/
      TA1REC.TA1LOCAT[4] = "IO4220";
         /* IF SQLCA.SQLCODE EQ -911;*/
           /* MOVE 'POST' TO TA1REC.TA1func;*/
           /* CALL TA0020 TA1REC,SQLCA (REPLY,NONCSP;*/
           /* MOVE 010 TO EZEMNO        ;  database busy, please try*/
           /* MOVE 'Y' TO OPAREC.OPAERR;*/
         /* ELSE ;                          customer/corporate terms*/
      TA1REC.TA1FUNC = "RETN";
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      try
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      end
      COMMAREA.CA-USER-WORKAREA-4K = " ";
      XSPF4();
      exit program;
    end
  end

end // end OP0EST1

// load pass rec for op03 - terms
Function OP0EST2()
  OEAREC.OEAAPPL = "OP0E";
  OEAREC.XOTCD = OP1REC.XOTCD;
  OEAREC.XDVCD = OP1REC.XDVCD;
  OEAREC.SP1ID = OP1REC.SP1ID;
  OEAREC.KUCCOID = OP1REC.KUCCOID;
  OEAREC.KUMSTRID = OP1REC.KUMSTRID;
  OEAREC.XNXCD = OP1REC.XNXCD;
  OEAREC.XGPCD = OP1REC.XGPCD;
  OEAREC.OP1OVALU = OP1REC.OP1OVALU;
  OEAREC.OP1OTUNT = OP1REC.OP1OTUNT;
  OEAREC.OP1CUNDT = OP1REC.OP1CUNDT;

   /* *********************************************/
   /* if kucrec indicates that the customer has*/
   /* terms, turn on flag in the pass record*/
   /* *********************************************/

  OEAREC.OEACUTRM = "N"; /* init flag*/

  if (OP0EW01.XOTPROPF == "Y"
   && KUCREC.KUCPRPTI == "Y")
    OEAREC.OEACUTRM = "Y";
  else
    if (OP0EW01.XOTFUTRF == "Y"
     && KUCREC.KUCFTRTI == "Y")
      OEAREC.OEACUTRM = "Y";
    end
  end
end // end OP0EST2

// set up terms for initial entry
Function OP0EST3()


   /* ****************************************************/
   /* determine whether to calculate terms or not:*/
   /* if a sales program order, call tiered terms record.*/
   /* if flat (only 1 level), calc terms.  if not, don't calc*/
   /* terms. wait til op0j. non-sales program orders will*/
   /* calc terms.  op0ew01.op0ewtrf is used to trigger the call*/
   /* to the calc terms module, op03.*/
   /* ****************************************************/

  set OEAREC empty;
  OP0EW01.OP0EWTRF = "N"; /* initialize terms flag*/

  if (OP1REC.SP1ID > " ")
    OP0ESSC(); /* get sales program header*/
    OP0EST1(); /* check sales program for flat terms*/
    OP0ESPF(); /* PROTECT TERMS & percents*/
  else
    OP0EW01.OP0EWTRF = "Y"; /* turn on terms flag*/
  end

  if (OP0EW01.OP0EWTRF == "Y")

    OP0EST2(); /* load pass record to call op03*/

    OP0EST7(); /* process terms*/


    OP0EST6(); /* move terms to screen*/

  else
    converseLib.validationFailed(499); /* terms may be reviewed in order maintenance*/
  end

end // end OP0EST3

// prepare terms for review
Function OP0EST4()

   /* save sales program tier level & min discount if they exist*/

  OP0EW01.OP1TLVLN = OP1REC.OP1TLVLN;
  OP0EW01.SP6MDISC = OP1REC.SP6MDISC;

       /* get the payment term code and description*/

  if (OP1REC.XPTCD > " ") /* can be empty if terms are tiered*/
    OP0EM001.XPTCD = OP1REC.XPTCD;
    OP0EW01.OP0EWPT = OP1REC.XPTCD; /* save old payment term*/
    if (OP1REC.OP1PTOF == "Y")
      OP0EM001.OP1PTOF = "*";
    end

    OP0EW01.OP0EWPCD = OP1REC.XPTCD; /* move payment cd to work field*/
    OP0ESPT(); /* get payment term description*/
  end


       /* get the defective allowance percent*/

  OP0EM001.XDAPCT = OP1REC.XDAPCT;
  OP0EW01.OP0EWDEF = OP1REC.XDAPCT; /* save old deffective percent*/
  if (OP1REC.OP1DFAOF == "Y") /* if defective allowance was overriden*/
    OP0EM001.OP1DFAOF = "*"; /* display '*'*/
  end


        /* get the trade discount % (face % & bank %)*/

  OP0EM001.XTDPCT = OP1REC.XTDPCT;
  OP0EW01.OP0EWTD = OP1REC.XTDPCT; /* save trade disc percent*/
  OP0EM001.OP1TDFCP = OP1REC.OP1TDFCP;
  OP0EM001.OP1TDBKP = OP1REC.OP1TDBKP;
  if (OP1REC.OP1TDOF == "Y")
    OP0EM001.OP1TDOF = "*";
  end


        /* get the ad allowance % (face % & bank %)*/

  OP0EM001.XAAPCT = OP1REC.XAAPCT;
  OP0EW01.OP0EWAA = OP1REC.XAAPCT; /* save ad allowance %*/
  OP0EM001.OP1AAFCP = OP1REC.OP1AAFCP;
  OP0EM001.OP1AABKP = OP1REC.OP1AABKP;
  if (OP1REC.OP1AAOF == "Y")
    OP0EM001.OP1AAOF = "*";
  end


        /* get the co-op discount %*/

  OP0EM001.XCPPCT = OP1REC.XCPPCT;
  OP0EW01.OP0EWCOP = OP1REC.XCPPCT; /* save co-op percent*/
  if (OP1REC.OP1COPOF == "Y")
    OP0EM001.OP1COPOF = "*";
  end

       /* if this order has sales program, protect terms &*/
       /* discounts.*/

  if (OP1REC.SP1ID > " ")
    OP0ESPF(); /* protect terms & percents*/
  end


end // end OP0EST4

// set terms fields dark
Function OP0EST5()

  set OP0EM001.OP0EMPTL skip, invisible;
  set OP0EM001.OP1PTOF skip, invisible;
  set OP0EM001.XPTCD skip, invisible;
  set OP0EM001.XPTDESC skip, invisible;
  set OP0EM001.OP0EMDAL skip, invisible;
  set OP0EM001.OP1DFAOF skip, invisible;
  set OP0EM001.XDAPCT skip, invisible;
  set OP0EM001.OP0EMTDL skip, invisible;
  set OP0EM001.OP1TDOF skip, invisible;
  set OP0EM001.XTDPCT skip, invisible;
  set OP0EM001.OP0EMTFL skip, invisible;
  set OP0EM001.OP1TDFCP skip, invisible;
  set OP0EM001.OP0EMTBL skip, invisible;
  set OP0EM001.OP1TDBKP skip, invisible;
  set OP0EM001.OP0EMDSL skip, invisible;
  set OP0EM001.OP0EMAAL skip, invisible;
  set OP0EM001.OP1AAOF skip, invisible;
  set OP0EM001.XAAPCT skip, invisible;
  set OP0EM001.OP0EMAFL skip, invisible;
  set OP0EM001.OP1AAFCP skip, invisible;
  set OP0EM001.OP0EMABL skip, invisible;
  set OP0EM001.OP1AABKP skip, invisible;
  set OP0EM001.OP1COPOF skip, invisible;
  set OP0EM001.OP0EMCOL skip, invisible;
  set OP0EM001.XCPPCT skip, invisible;
end // end OP0EST5

// move terms to screen
Function OP0EST6()
  OP0EM001.XTDPCT = OEAREC.XTDPCT;
  OP0EM001.OP1TDBKP = OEAREC.OP1TDBKP;
  OP0EM001.OP1TDFCP = OEAREC.OP1TDFCP;
  OP0EM001.XAAPCT = OEAREC.XAAPCT;
  OP0EM001.OP1AABKP = OEAREC.OP1AABKP;
  OP0EM001.OP1AAFCP = OEAREC.OP1AAFCP;
  OP0EM001.XCPPCT = OEAREC.XCPPCT;
  OP0EM001.XPTCD = OEAREC.XPTCD;
  OP0EM001.XPTDESC = OEAREC.XPTDESC;
  OP0EM001.XDAPCT = OEAREC.XDAPCT;

  OP0EW01.OP0EWTD = OEAREC.XTDPCT; /* save for comparison if*/
  OP0EW01.OP0EWAA = OEAREC.XAAPCT; /* modified, either in review*/
  OP0EW01.OP0EWPT = OEAREC.XPTCD; /* or initial entry*/
  OP0EW01.OP0EWDEF = OEAREC.XDAPCT;
  OP0EW01.OP0EWCOP = OEAREC.XCPPCT;

  OP0EW01.XODMXDSC = OEAREC.XODMXDSC; /* move for use by op0estl*/
end // end OP0EST6

// call terms subroutine op03
Function OP0EST7()

   /* *********************************************************/
   /* first time thru, global msg flag oeammsg will be 'n'.  if*/
   /* messages return, flag is 'y' and looks for msg to display.*/
   /* severe errors such as msg 509 corp default rec missing*/
     /* force the user to reject the order.  logic does not*/
     /* come back here.  deadlock: turn off deadlock flag and*/
     /* let terms process again.*/
   /* *********************************************************/

  if (OEAREC.OEAMMSG == "Y" /* terms have processed, any msgs were shown*/
   && OEAREC.OEAM010 == "N") /* and no deadlocks occurred*/
     /* next sentence -- drop out here so don't do terms again*/
  else
    set OEAREC empty;
    OP0EST2(); /* load oearec*/
    call "OP03" (OEAREC, SP6REC) {isNoRefresh = yes}; /* terms subroutine*/
    if (OEAREC.OEAMMSG == "Y") /* if messages*/
      OP0EST8();
                                   /* terms results - messages to show loop*/
    end
  end


end // end OP0EST7

// terms messages
Function OP0EST8()
   /* *************************************************************/
   /* msg 509----*/
   /* phone flow: default terms code if pmt term wasn't found*/
      /* can't force reject because screen doesn't have the*/
      /* reject option like form flow does*/
   /* form flow:  force reject*/
   /* *************************************************************/

  if (OEAREC.OEAM010 == "Y") /* deadlock--don't reset to 'n'!*/
    OEAREC.OEAERR = "N"; /* turn off this flag for deadlocks*/
    OEAREC.OEAMMSG = "N"; /* turn off flag so can process terms again*/
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(010);
  else
    if (OEAREC.OEAM509 == "Y") /* corp table row missing xodtbl*/
      if (OPWREC.OPWSFLOW == "2") /* if phone flow*/
        OEAREC.OEAERR = "N"; /* turn off error*/
        converseLib.validationFailed(512);
        OEAREC.XPTCD = "0D"; /* default code*/
      else
        converseLib.validationFailed(509); /* don't turn off, fatal type error!!*/
        OPAREC.OPAERR = "Y";
      end
    else
      if (OEAREC.OEAM511 == "Y") /* some terms may be missing, please*/
        OEAREC.OEAM511 = "N"; /* review in maintenance*/
        converseLib.validationFailed(511);
      end
    end
  end
end // end OP0EST8

// check total discount percent
Function OP0ESTL()



      /* ********************************************************/
      /* * the total of all discount percents must not greater **/
      /* * than the maximum discount percent in the xodtbl table*/
      /* ********************************************************/


  OP0EW01.OP0EWMDS = 0;

  OP0EW01.OP0EWMDS = OP0EM001.XAAPCT + OP0EM001.XTDPCT;
  OP0EW01.OP0EWMDS = OP0EW01.OP0EWMDS + OP0EM001.XDAPCT + OP0EM001.XCPPCT;

  if (OP0EW01.OP0EWMDS <= OP0EW01.XODMXDSC)
     /* next sentence*/
  else
    converseLib.validationFailed(093); /* total disccounts exceed the max allowed*/
    OPAREC.OPAERR = "Y";
     /* SET OP0EM001.XCPPCT MODIFIED,BRIGHT;protected 11-14-86*/
    set OP0EM001.OP1AABKP modified, bold;
    set OP0EM001.OP1AAFCP modified, bold;
    set OP0EM001.XAAPCT modified, bold;
    set OP0EM001.XDAPCT modified, bold;
    set OP0EM001.OP1TDBKP modified, bold;
    set OP0EM001.OP1TDFCP modified, bold;
    set OP0EM001.XTDPCT cursor, modified, bold;
  end



   /* ********************************************************/
end // end OP0ESTL

// get warehouse flags
Function OP0ESWF()


       /* get the small ship charge & backorder flag & direct*/
       /* ship flag & bulk order flag from the order type table*/

  if (OP1REC.XOTCD in XOTTBL.XOTCD
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0EW01.XOTSMLCH = XOTTBL.XOTSMLCH[sysVar.arrayIndex]; /* small ship charge*/
    OP0EW01.XOTPROPF = XOTTBL.XOTPROPF[sysVar.arrayIndex];
    OP0EW01.XOTFUTRF = XOTTBL.XOTFUTRF[sysVar.arrayIndex];
    OP0EW01.XOTADIRS = XOTTBL.XOTADIRS[sysVar.arrayIndex]; /* direct ship flg*/
    OP0EW01.XOTABULK = XOTTBL.XOTABULK[sysVar.arrayIndex]; /* bulk ord flag*/
  end


   /* ************************************************************/
end // end OP0ESWF

// write special instruction
Function OP0ESWI()



       /* *******************************************************/
       /* * this statement group writes a special customer     **/
       /* * instruction from customer special instructions     **/
       /* * table to the order special instructions table      **/
       /* *******************************************************/


  OP4REC.OP4KEY = OP1REC.OP1KEY;
  OP4REC.OP4TRTYP = "I";
  OP4REC.OP4TRSEQ = OP0EW01.OP0EWTSQ;
  OP4REC.XNDCD = KUQREC.XNDCD;
  OP4REC.OP4TXT = KUQREC.KUQSINST;
  OP4REC.OP4TXTOF = "N";
  OP4REC.ZZZCHGDT = OPAREC.OPACDT;

       /* reformat time to move to the record*/

  OP0EW01.OP0EWT1 = VGVar.currentFormattedTime;
  OP0EW01.OP0EWTH2 = OP0EW01.OP0EWTH1;
  OP0EW01.OP0EWTM2 = OP0EW01.OP0EWTM1;
  OP4REC.ZZZCHGTM = OP0EW01.OP0EWT2;

  /*  */
  /* Log #693 Jan Johnson Increment instruction sequence (below)_*/
  /*  */

  call "IO0470" ("A ", SQLCA, OP4REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    OP0EW01.OP0EWIC = OP0EW01.OP0EWIC + 1;
    OP0EW01.OP0EWTSQ = OP0EW01.OP0EWTSQ + 1; /* log #693 increment sequence*/
    if (OP4REC.OP4TRSEQ == 1)
      OP0EM001.OP4TXT = OP4REC.OP4TXT;
      OP0EM001.XNDCD = OP4REC.XNDCD;
    end
  else
    TA1REC.TA1DBASE = "DORDER  "; /* data base name*/
    TA1REC.TA1TBLVU = "VTEXT001"; /* table view*/
    TA1REC.TA1TBLKE = OP4REC.OP4KEY; /* key value*/
    TA1REC.TA1LOCAT[3] = "OP0ESWI"; /* statement group*/
    TA1REC.TA1LOCAT[4] = "IO0470";
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    try
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
    COMMAREA.CA-USER-WORKAREA-4K = " ";
    XSPF4();
    exit program;
  end



   /* ************************************************************/
end // end OP0ESWI

// get warehouse abbreviated name
Function OP0ESWN()


       /* ********************************************************/
       /* * this statement group validates the warehouse code   **/
       /* * and gets the warehouse abbreviated name for display **/
       /* ********************************************************/


  if (OP0EW01.XWHCD == " "
   && OP0EW01.XDSWHSEF == "N")
    OP0EM001.XWHSABRV = " ";
    return;
  end

  if (OP0EW01.XWHCD in XWHTBL.XWHCD /* if warehouse is valid*/
   && XWHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    set OP0EM001.XWHCD initialAttributes;
    OP0EM001.XWHSABRV = XWHTBL.XWHSABRV[sysVar.arrayIndex];

    if (XWHTBL.XWHCD[sysVar.arrayIndex] == "51" /* memphis aprl whse*/
     || XWHTBL.XWHCD[sysVar.arrayIndex] == "25" /* or NSG aprl whse*/
     || XWHTBL.XWHCD[sysVar.arrayIndex] == "27") /* whse27*/
      if (OP0EM001.XOWCD == " ") /* ; no owner group entered*/
        OP0EM001.XOWCD = "00"; /* set default value*/
      end
    end

    if (XWHTBL.XWHOWNGF[sysVar.arrayIndex] == "Y"
     && OP1REC.XBDCD != "4") /* not a rebook draw*/
      OP0ESOG(); /* validate owner group*/
    else
      if (OP0EM001.XOWCD != " ")
        OP0EM001.XOWCD = "00";
        OP0EM001.XOWABRV = "  ";
        OPWREC.XOWCD = "00";
        converseLib.validationFailed(103);
        set OP0EM001.XOWCD cursor, modified, bold;
        set OP0EM001.XWHCD modified;
      else
        OP0EM001.XOWCD = "00";
        OP0EM001.XOWABRV = "  ";
        OPWREC.XOWCD = "00";
      end
    end
  else
    converseLib.validationFailed(078); /* warehouse is not valid*/
    set OP0EM001.XWHCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
  end

   /* added warehouse edit for Canada - CANA*/

  if (OP0EW01.XWHCD == "42" /* if canadian warehouse*/
   && OP1REC.XDZ-DATA-DIST-CD != "CA") /* and not canadian order*/
    set OP0EM001.XWHCD cursor, modified, bold;
    OPAREC.OPAERR = "Y";
    if (converseVar.validationMsgNum == 0)
      converseLib.validationFailed(898); /* canadian warehouse not valid*/
    end
  else
    if (OP0EW01.XWHCD != "42" /* if not canadian warehouse*/
     && OP0EW01.XDSWHSEF == "N"
     && OP1REC.XDZ-DATA-DIST-CD == "CA") /* and its a canadian order*/
      set OP0EM001.XWHCD cursor, modified, bold;
      OPAREC.OPAERR = "Y";
      if (converseVar.validationMsgNum == 0)
        converseLib.validationFailed(897); /* warehouse must be 42*/
      end
    end
  end

  if (OPWREC.OPWREVM > 1
   || OPWREC.OPWFUNC == "3")
    set OP0EM001.XWHCD protect; /* protect in review mode*/
    set OP0EM001.XOWCD protect; /* protect in review mode*/
    set OP0EM001.XDSCD protect; /* protect in review mode*/
    set OP0EM001.XDSABRV protect; /* protect in review mode*/
    set OP0EM001.OP0EWDPC protect; /* protect in review mode*/
  end

  if (OP1REC.XBDCD == "4") /* rebook draw*/
    set OP0EM001.XWHCD protect; /* protect if rebook*/
    set OP0EM001.XOWCD protect; /* protect in rebook*/
  end


   /* ************************************************************/
end // end OP0ESWN

// load errdiag key info
Function OP0ESZ1()
  OP0EW01.OP0EWTK2 = OP1REC.KUCCOID;
  OP0EW01.OP0EWTK3 = OP1REC.KUMSTRID;
  OP0EW01.OP0EWTK4 = OP1REC.XNXCD;
  OP0EW01.OP0EWTK5 = OP1REC.XGPCD;
  OP0EW01.OP0EWTK6 = OP1REC.XOTCD;
  OP0EW01.OP0EWTK7 = OP1REC.SP1ID;
  OP0EW01.OP0EWTK8 = OP1REC.OP1CUNDT;
end // end OP0ESZ1

//*** RECORD=KUOREC ****
// this is the customer sales rep/agency csp record
// 
// db2 table:     dcust.vcurep01
// 
// dclgen:        dcl00824
// 
// i/o mod:       io0xxx
// 
// key to table:  kuccoid  -  cu-co-id
//                kumstrid -  cu-stor-id
//                xnxcd    -  xnx-dept-id-xref
// 
// maintenance log:
// 
//   who       when       why
// --------  --------  ----------------------------------------
// dsalzw    02/28/90  create for multiple rep project
// 
// **********************
Record KUOREC type basicRecord
  5 KUOGRP KUOGRP ; 
    10 KUOSEND KUOSEND ; 
      15 KUCCOID KUCCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 XNXCD XNXCD ; 
      15 XDVCD XDVCD ; 
      15 XPCCD XPCCD ; 
      15 XGPCD XGPCD ; 
      15 OP1ORCDT OP1ORCDT ; 
    10 KUORTN KUORTN ; 
      15 YSBCD YSBCD ; 
      15 SM4REPID SM4REPID ; 
      15 SM1AGYID SM1AGYID ; 
end // end KUOREC

//*** RECORD=OP0EW01 ****
//    working storage record is for the op0e application.
//    data in this record will not be passed to other
//    order entry applications.
// 03/05/91  swatso   Added OP0EWSGC - special cuatomer group
//                    flag.
// ***********************
Record OP0EW01 type basicRecord
  5 OP0EWSGR OP0EWSGR ; 
    10 OP0EWDPC OP0EWDPC ; 
    10 OP0EWDEF OP0EWDEF ; 
    10 OP0EWTD OP0EWTD ; 
    10 OP0EWAA OP0EWAA ; 
    10 OP0EWCOP OP0EWCOP ; 
    10 OP0EWPT OP0EWPT ; 
    10 OP0EWPOF OP0EWPOF ; 
    10 OP0EWDER OP0EWDER ; 
    10 OP0EWT1 OP0EWT1 ; 
      15 OP0EWTH1 OP0EWTH1 ; 
      15 * char(1) ; 
      15 OP0EWTM1 OP0EWTM1 ; 
      15 * char(1) ; 
      15 OP0EWTC1 OP0EWTC1 ; 
    10 OP0EWT2 OP0EWT2 ; 
      15 OP0EWTH2 OP0EWTH2 ; 
      15 OP0EWTM2 OP0EWTM2 ; 
    10 OP0EWOCD OP0EWOCD ; 
    10 OP0EWIC OP0EWIC ; 
    10 OP0EWGTI OP0EWGTI ; 
    10 OP0EWLC OP0EWLC ; 
    10 OP0EWMTF OP0EWMTF ; 
    10 OP0EWEIF OP0EWEIF ; 
    10 OP0EWELF OP0EWELF ; 
    10 OP0EWSMK OP0EWSMK ; 
      15 SM1AGYID SM1AGYID ; 
      15 SM4REPID SM4REPID ; 
      15 XXXSTAT XXXSTAT ; 
    10 XXXFSTNM XXXFSTNM ; 
      15 OP0EWFIN OP0EWFIN ; 
      15 * char(14) ; 
    10 OP0EWARF OP0EWARF ; 
    10 OP0EWIRF OP0EWIRF ; 
    10 OP0EWRHF OP0EWRHF ; 
    10 OP0EWPCD OP0EWPCD ; 
    10 XWHCD XWHCD ; 
    10 XOTPROPF XOTPROPF ; 
    10 XOTFUTRF XOTFUTRF ; 
    10 XOTSMLCH XOTSMLCH ; 
    10 XPTCD XPTCD ; 
    10 XAACD XAACD ; 
    10 KUTAPOF KUTAPOF ; 
    10 KUTAPBK KUTAPBK ; 
    10 XTDCD XTDCD ; 
    10 KUTTDPOF KUTTDPOF ; 
    10 KUTTDPBK KUTTDPBK ; 
    10 XDACD XDACD ; 
    10 XCPCD XCPCD ; 
    10 OP0EWTRF OP0EWTRF ; 
    10 OP0EWCTF OP0EWCTF ; 
    10 OP0EWTMF OP0EWTMF ; 
    10 OP1TLVLN OP1TLVLN ; 
    10 SP6MDISC SP6MDISC ; 
    10 OP0EWPTC OP0EWPTC ; 
    10 OP0EWTDC OP0EWTDC ; 
    10 OP0EWTDF OP0EWTDF ; 
    10 OP0EWTDB OP0EWTDB ; 
    10 OP0EWAAC OP0EWAAC ; 
    10 OP0EWAAF OP0EWAAF ; 
    10 OP0EWAAB OP0EWAAB ; 
    10 OP0EWCPC OP0EWCPC ; 
    10 XODMXDSC XODMXDSC ; 
    10 OP0EWMDS OP0EWMDS ; 
    10 OP0EWPTR OP0EWPTR ; 
    10 OP0EWTDR OP0EWTDR ; 
    10 OP0EWTFR OP0EWTFR ; 
    10 OP0EWTBR OP0EWTBR ; 
    10 OP0EWAAR OP0EWAAR ; 
    10 OP0EWAFR OP0EWAFR ; 
    10 OP0EWABR OP0EWABR ; 
    10 OP0EWCPR OP0EWCPR ; 
    10 OP0EWCK OP0EWCK ; 
      15 OP0EWCK1 OP0EWCK1 ; 
        20 KUCCOID KUCCOID ; 
        20 KUMSTRID KUMSTRID ; 
        20 XNXCD XNXCD ; 
        20 XGPCD XGPCD ; 
      15 XOTCD XOTCD ; 
    10 OP0EWAAP OP0EWAAP ; 
    10 OP0EWTDP OP0EWTDP ; 
    10 OP0EWLS1 OP0EWLS1 ; 
    10 OP0EWLS2 OP0EWLS2 ; 
    10 OP0EWLSW OP0EWLSW ; 
    10 OP0EWTSQ OP0EWTSQ ; 
    10 OP4TXT OP4TXT ; 
    10 OP0EWGWH OP0EWGWH ; 
    10 XOTADIRS XOTADIRS ; 
    10 XDSWHSEF XDSWHSEF ; 
    10 XOTABULK XOTABULK ; 
    10 OP0EWFND OP0EWFND ; 
    10 OP0EWFL1 OP0EWFL1 ; 
    10 OP0EWSB1 OP0EWSB1 ; 
    10 OP0EWCDT OP0EWCDT ; 
    10 OP0EWTK1 OP0EWTK1 ; 
      15 OP0EWTK2 OP0EWTK2 ; 
      15 OP0EWTK3 OP0EWTK3 ; 
      15 OP0EWTK4 OP0EWTK4 ; 
      15 OP0EWTK5 OP0EWTK5 ; 
      15 OP0EWTK6 OP0EWTK6 ; 
      15 OP0EWTK7 OP0EWTK7 ; 
      15 OP0EWTK8 OP0EWTK8 ; 
      15 OP0EWTK9 OP0EWTK9 ; 
    10 OP0EWDSF OP0EWDSF ; 
    10 OP0EWBBD OP0EWBBD ; 
    10 OP0EWSGC OP0EWSGC ; 
    10 OP0EWARN OP0EWARN ; 
    10 OP0EW-VOPPGM-READ OP0EW-VOPPGM-READ ; 
end // end OP0EW01

Record OP0EW02 type basicRecord
  5 OP0EWAGR OP0EWAGR ; 
    10 OP0EWORP OP0EWORP ; 
    10 OP0EWOAG OP0EWOAG ; 
    10 OP0EWNAG OP0EWNAG ; 
    10 * char(2) ; 
    10 OP0EWCUS OP0EWCUS ; 
      15 OP0EWCSB OP0EWCSB ; 
      15 OP0EWCSC OP0EWCSC ; 
end // end OP0EW02

Record OP0EW03 type basicRecord // VAGen Info - redefined OP0EW02
  5 OP0EWRGR OP0EWRGR ; 
    10 OP0EWORP OP0EWORP ; 
    10 OP0EWOAG OP0EWOAG ; 
    10 OP0EWAG1 OP0EWAG1 ; 
    10 OP0EWAG2 OP0EWAG2 ; 
    10 * char(1) ; 
    10 OP0EWSCS OP0EWSCS ; 
      15 OP0EWCSE OP0EWCSE ; 
      15 * char(1) ; 
end // end OP0EW03

// cust mapping resp group
DataItem KUOGRP char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// returned fields
DataItem KUORTN char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// send fields
DataItem KUOSEND char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// read flag for prog ctl table
DataItem OP0EW-VOPPGM-READ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old ad allowance   %
DataItem OP0EWAA decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ad allw bank % - xodtbl
DataItem OP0EWAAB decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ad allowance cd - xodtbl
DataItem OP0EWAAC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ad allw face % - xodtbl
DataItem OP0EWAAF decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ad allw work %
DataItem OP0EWAAP decimal(9,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ad allowance cd - result
DataItem OP0EWAAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ad allw bank % - result
DataItem OP0EWABR decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ad allw face % - result
DataItem OP0EWAFR decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 3/4 of new agency
DataItem OP0EWAG1 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1/4 of new agency + space
DataItem OP0EWAG2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// definitions for audit rec
DataItem OP0EWAGR char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// active sales rep flag
DataItem OP0EWARF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// po# hold warning flag
DataItem OP0EWARN num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// blank bulk draw flag
DataItem OP0EWBBD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current date comp
DataItem OP0EWCDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OP0EWCK char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OP0EWCK1 char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old co-op          %
DataItem OP0EWCOP decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// coop cd - xodtbl
DataItem OP0EWCPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// coop cd - result set
DataItem OP0EWCPR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OP0EWCSB num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OP0EWCSC num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem OP0EWCSE num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust terms found flag
DataItem OP0EWCTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cu-co-id
DataItem OP0EWCUS num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// old deff allowance %
DataItem OP0EWDEF decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date error flag
DataItem OP0EWDER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// d/s discount percent
DataItem OP0EWDPC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// d-s-b-d protect flag
DataItem OP0EWDSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// enough instructions flag
DataItem OP0EWEIF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// enough labels flag
DataItem OP0EWELF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sales rep first initial
DataItem OP0EWFIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bulk order testing flag
DataItem OP0EWFL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OP0EWFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// go to instructions? tracker
DataItem OP0EWGTI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// good warehouse flag
DataItem OP0EWGWH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// instructions count
DataItem OP0EWIC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// item record found flag
DataItem OP0EWIRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// labels count
DataItem OP0EWLC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// label 1 seq number
DataItem OP0EWLS1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// label 2 seq number
DataItem OP0EWLS2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// label work seq number
DataItem OP0EWLSW smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work max disc % allowed
DataItem OP0EWMDS decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// terms modified flag
DataItem OP0EWMTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// new (override) agency
DataItem OP0EWNAG char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old agency
DataItem OP0EWOAG char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bulk/draw order flag
DataItem OP0EWOCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old rep
DataItem OP0EWORP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work payment term code
DataItem OP0EWPCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// po required flag
DataItem OP0EWPOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// old payment term code
DataItem OP0EWPT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pt cd - xodtbl
DataItem OP0EWPTC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pt cd - result set
DataItem OP0EWPTR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// definitons for audit rec
DataItem OP0EWRGR char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hist sales rep flag
DataItem OP0EWRHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index for suborders
DataItem OP0EWSB1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// shortened company
DataItem OP0EWSCS num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// special cust group flag
DataItem OP0EWSGC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem OP0EWSGR char(296)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OP0EWSMK char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current work time
DataItem OP0EWT1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work time without ':'
DataItem OP0EWT2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// td bank % - result set
DataItem OP0EWTBR decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work second
DataItem OP0EWTC1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// old trade disc     %
DataItem OP0EWTD decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// td bank % - xodtbl
DataItem OP0EWTDB decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// td code - xodtbl
DataItem OP0EWTDC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// td face % - xodtbl
DataItem OP0EWTDF decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// trade disc work %
DataItem OP0EWTDP decimal(9,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// td code - result set
DataItem OP0EWTDR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// td face % - result set
DataItem OP0EWTFR decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work hour
DataItem OP0EWTH1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work hour
DataItem OP0EWTH2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group errdiag key info
DataItem OP0EWTK1 char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK2 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK4 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK5 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK6 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK7 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK8 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// errdiag key info
DataItem OP0EWTK9 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work minute
DataItem OP0EWTM1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work minute
DataItem OP0EWTM2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ord typ need dt match flag
DataItem OP0EWTMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cust terms record flag
DataItem OP0EWTRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-txt-rec-seq - instruction
DataItem OP0EWTSQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

