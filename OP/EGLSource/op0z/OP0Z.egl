package op0z;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import op.common.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=OP0Z ****
// ************************************************************
// *                         op0z                             *
// *    nike comp account authorization table maintenance     *
// *                                                          *
// ************************************************************
// *                         overview                         *
// *                                                          *
// * this application is used to maintain the comp account    *
// * authorization table (dorder.vcpath01).  the application  *
// * permits additions, changes, deletions, and inquiries.    *
// *                                                          *
// ************************************************************
// *                   maintenance history                    *
// *                                                          *
// *   date    userid  description                            *
// * --------  ------  -------------------------------------- *
// * 04/30/92  trober  new (installed 8/1/92)                 *
// * 08/10/92  bbake2  corrected logic in bld-tmp-stg         *
// *            nolog  that caused a loop when more than      *
// *                   30 records are on file for one user    *
// *                   and changed insrt logic to select for  *
// *                   an existing row before attempting to   *
// *                   insert a new one, and added code for   *
// *                   deadlocks to prevent partial updates.  *
// *                   add-mode, bld-tmp-stg, copy-mode,      *
// *                   dels-mode, isrt-vcpath                 *
// * 08/18/92  bbake2  corrected logic that resets (pf20)     *
// *            nolog  to move op0z to ezeapp before dxfr     *
// * 08/24/92  bbake2  log#908 - change to allow inquiry only *
// *                   mode for users without update authority*
// *                   op0z-100,op0z-200,edt-pf-keys          *
// * 04/15/93  clenni  log #923,  add scrolling to comp edits *
// *                   screen, allow more than 30             *
// *                   authorizations per userid. statement   *
// *                   groups changed are: op0zs-add-mode     *
// *                   op0zs-dels-vcpath, op0zs-fetch-vcpath  *
// *                   op0zs-isrt-vcpath, op0zs-bld-copy-map  *
// *                   op0zs-edt-add-key, op0zs-edt-dels-key  *
// *                   op0zs-edt-pf-keys, op0zs-pf7-up,       *
// *                   op0zs-pf8-down, op0zs-proc-rqst,       *
// *                   op0zs-bld-dels-dtl, op0zs-bld-tmp-stg  *
// *                   op0zs-copy-mode, op0zs-dels-mode       *
// *                   op0zs-get-data, op0zs-read-tmp-stg     *
// *                   op0zs-updt-tmp-stg, op0zs-writ-tmp-stg *
// *                   op0zs-bld-dft-hdg, op0zs-bld-add-dtl   *
// *                   op0zs-bld-init-map.  screen changed is *
// *                   op0zm001.  rec changed is op0zw01      *
// * 04/06/94  schase  Changed op0zm001, op0zs-edt-pf-keys,   *
// *                   and op0zs-retn-db2 to interface with   *
// *                   OP0Y Appl.                             *
// * 03/11/97  Y2KFIX                                         *
// *           dbettr  regenerated to pick up latest version  *
// *                   of common date routine XX0XS01. *
// ************************************************************
// *********************
Program OP0Z type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  OP0ZW01 OP0ZW01; // record
  OP0ZW02 OP0ZW02; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VCPATH01 VCPATH01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XAUTBL {deleteAfterUse = yes}; // table
  use OP0ZM.OP0ZM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OP0Z-100: OP0Z-100();



    OP0Z-200: OP0Z-200();


    goto OP0Z-200; /* flow to converse*/


  end // end main
end // end OP0Z

// application initialize
Function OP0Z-100()


   /* *********************************************************************/
   /* * this process initializes the applications work areas, maps, and  **/
   /* * checks basic security and order processing security              **/
   /* *********************************************************************/


  XSENTRY(); /* check security*/

  OP0ZS-SET-SEG-TR(); /* set segmented tran id*/

  OP0ZS-INIT-RECS(); /* initialize records*/

  OP0ZS-BLD-INIT-MAP(); /* build the initial map display*/

  OP0ZW01.OP0ZW-MODE = "NONE"; /* initialize mode flag*/


end // end OP0Z-100

// converse Op0zM100
Function OP0Z-200()


  converseLib.clearScreen();
   /* clear display*/
  converseVar.segmentedMode = 1; /* force segmented converse mode*/

    /* for inquiry only users, remove update pfkeys from map*/

  if (COMMAREA.CACHGFL != "Y")
    set OP0ZM001.OP0ZM-PF5 skip, invisible;
    set OP0ZM001.OP0ZM-PF6 skip, invisible;
    set OP0ZM001.OP0ZM-PF9 skip, invisible;
    set OP0ZM001.OP0ZM-PF10 skip, invisible;
  end
  converse OP0ZM001 ;

  OP0ZW01.OP0ZW-ERROR = "N"; /* initialize error switch*/
  converseLib.validationFailed(0); /* initialize error msg number*/
  OP0ZM001.CAMSG = " "; /* initialize ca msg line*/
  OP0ZM001.VAGen_EZEMSG = " "; /* initialize error msg line*/

  if (OP0ZW01.OP0ZW-MODE == "NONE") /* not any mode*/
    OP0ZS-EDT-PF-KEYS(); /* edit pf keys*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-EDT-USR-ID(); /* edit the entered user-id*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-MODE == "NONE") /* not any mode*/
    if (OP0ZW01.XXXUSRID != OP0ZM001.XXXUSID1) /* user-id changed*/
      OP0ZW01.XXXUSRID = OP0ZM001.XXXUSID1; /* save user-id*/
      OP0ZS-BLD-INIT-MAP(); /* initialize map*/
      OP0ZW-FIRST-DISP-FL = "Y"; /* first page to be displayed*/
      OP0ZS-GET-DATA(); /* retrieve the data for a request*/
    end
    OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* move user-id to map*/
                                   /* after clear map*/
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZS-PROC-RQST(); /* perform desired function*/
    end
  end

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-MODE != "NONE") /* a function was requested*/
    OP0ZS-CHK-MODE(); /* see what function was requested*/
                                  /* and edit/build that map*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    if (OP0ZW01.OP0ZW-MODE == "NONE") /* not any mode*/
      OP0ZS-SET-MODE(); /* set the mode*/
    else
      if (OP0ZW01.OP0ZW-MODE == "RSET") /* reset the mode after success*/
        OP0ZS-CHK-MODE(); /* reset map and display updates*/
        OP0ZW01.OP0ZW-MODE = "NONE"; /* reset the mode*/
      end
    end
  end


end // end OP0Z-200

// process an add request
Function OP0ZS-ADD()


   /* **********************************************************************/
   /* process an add request                                             **/
   /* **********************************************************************/


  OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* initialize flag*/

  if (OP0ZW01.OP0ZW-DATA-FOUND == "Y") /* data found to display*/
    OP0ZS-READ-TMP-STG(); /* read temp storage*/
  end

  OP0ZS-BLD-ADD-MAP(); /* build the add results map*/

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-SET-MSG(); /* set the msg for the mode*/
  end


end // end OP0ZS-ADD

// perform an add request
Function OP0ZS-ADD-MODE()


   /* **********************************************************************/
   /* do data base updates ect for an add request                        **/
   /* **********************************************************************/

  OP0ZS-EDT-ADD-KEY(); /* edit for pf20, pf3, pf4*/

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "N") /* do not update the database yet*/
    OP0ZS-RSET-ADD(); /* reset map attributes for add*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
    while (OP0ZW-SUB <= 30) /* loop through table*/
      if (OP0ZM001.XAUCD[OP0ZW-SUB] != " " /* non-blank acct cls*/
       && OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] == "A") /* possible add acct cls*/
        OP0ZS-EDT-ACCT-CLS(); /* edit the entered acct class*/
        if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
          OP0ZW01.OP0ZW-CHG-FLAG = "Y";
                                   /* at least one attempt to add*/
        end
      end
      if (OP0ZM001.KUCCOID[OP0ZW-SUB] != 0 /* non-blank comp nbr*/
       && OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] == "A") /* possible add acct cls*/
        OP0ZS-EDT-COMP-NBR(); /* edit the entered comp nbr*/
        if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
          OP0ZW01.OP0ZW-CHG-FLAG = "Y";
                                   /* at least one attempt to add*/
        end
      end
      if (OP0ZM001.XAUCD[OP0ZW-SUB] != " " /* non-blank acct cls*/
       && OP0ZM001.KUCCOID[OP0ZW-SUB] != 0) /* non-blank comp nbr*/
        set OP0ZM001.XAUCD[OP0ZW-SUB] cursor, bold; /* highlight error*/
        converseLib.validationFailed(766); /* enter one or the other not both*/
        OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
        OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* don't add comp auth*/
      end
      OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
    end
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-UPDT-TMP-STG(); /* update current temp storage*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N"     /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "Y" /* add new comp auth now*/
   && converseVar.eventKey is pf5)   /* must do a pf5 to add new authorizations*/
    OP0ZW01.OP0ZW-TA5TSQIX = 1;
    while (OP0ZW01.OP0ZW-TA5TSQIX <= OP0ZM-MAX-PAGE)
      OP0ZS-READ-TMP-STG();
      OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
      while (OP0ZW01.OP0ZW-SUB <= 30 /* loop through table*/
       && OP0ZW01.OP0ZW-ERROR == "N")
        if (OP0ZW02.OP0ZW-SEL[OP0ZW-SUB] == "A")
          if (OP0ZW02.XAUCD[OP0ZW-SUB] != " " /* non-blank acct cls*/
           || OP0ZW02.KUCCOID[OP0ZW-SUB] != 0) /* non blank comp nbr*/
            VCPATH01.XAUCD = OP0ZW02.XAUCD[OP0ZW-SUB];
            VCPATH01.KUCCOID = OP0ZW02.KUCCOID[OP0ZW-SUB];
            OP0ZS-ISRT-VCPATH(); /* insert the new rows into path01*/
          end
        end
        OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
      end
      OP0ZW01.OP0ZW-TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX + 1;
    end
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZW01.OP0ZW-MODE = "RSET"; /* reset mode*/
      OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* set flag to false*/
      converseLib.validationFailed(744); /* comp auth successfully added*/
    end
  end

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-MODE == "ADD ") /* still in add mode*/
    OP0ZS-UPDT-TMP-STG(); /* update current temp storage*/
    OP0ZS-EDT-ADD-KEY2(); /* edit pf keys pf5,pf7,pf8*/
    OP0ZS-PROTECT-ADD(); /* protect map*/
  end


end // end OP0ZS-ADD-MODE

// build detail lines for add
Function OP0ZS-BLD-ADD-DTL()


   /* **********************************************************************/
   /* build the add map detail lines                                     **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect field*/
  OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/
  OP0ZM001.XXXUSID2 = OP0ZW02.XXXUSID2; /* user-id*/

  if (OP0ZM001.OP0ZM-PAGE == OP0ZM001.OP0ZM-MAX-PAGE
   && OP0ZM001.OP0ZM-PAGE > 0) /* check for userid's w/ authorizations*/
    OP0ZW01.OP0ZW-FULL-PAGE-FLAG = "Y";
    OP0ZW01.OP0ZW-SUB = 1;
    while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map to find authorization*/
      /* AND OP0ZW01.OP0ZW-FULL-PAGE-FLAG EQ 'Y';*/
   /* need to load the screen prior to*/
      OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* update, acct class move*/
      OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
      if (OP0ZW02.KUCCOID[OP0ZW-SUB] == 0 /* check all occurences on map*/
       && OP0ZW02.XAUCD[OP0ZW-SUB] == " ")
        OP0ZW01.OP0ZW-FULL-PAGE-FLAG = "N"; /* authorization not found*/
      end
      OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1;
    end
    if (OP0ZW01.OP0ZW-FULL-PAGE-FLAG == "Y")
      OP0ZS-UPDT-TMP-STG(); /* update the temp stg with current*/
                                   /* screen*/
      OP0ZW01.OP0ZW-TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX + 1;
      if (OP0ZW01.OP0ZW-TA5TSQIX > 99)
        converseLib.validationFailed(733); /* temp stg boundary exceeded*/
        OP0ZW01.OP0ZW-ERROR = "Y";
      else
        set OP0ZW02 empty; /* start with empty working stg*/
        OP0ZM001.OP0ZM-PAGE = OP0ZM001.OP0ZM-PAGE + 1;
        OP0ZM001.OP0ZM-MAX-PAGE = OP0ZM001.OP0ZM-MAX-PAGE + 1;
        OP0ZW-FIRST-SUB = 1;
        OP0ZS-WRIT-TMP-STG(); /* establish next page of tmp stg*/
      end
    end
  end

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    if (OP0ZW02.XAUCD[OP0ZW-SUB] == " " /* blank acct cls code*/
     && OP0ZW02.KUCCOID[OP0ZW-SUB] == 0) /* blank comp acct nbr*/
      OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] = "A"; /* indicates a new add*/
      OP0ZM001.XAUCD[OP0ZW-SUB] = " "; /* acct class*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] normal; /* un-protect field*/
      OP0ZM001.KUCCOID[OP0ZW-SUB] = 0; /* comp nbr*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] normal; /* un-protect field*/
    else
      OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct class*/
      OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
      if (OP0ZW02.OP0ZW-SEL[OP0ZW-SUB] == "A")
        move OP0ZW-SUB to OP0ZW-FIRST-SUB withV60Compat;
        OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] = "A"; /* indicates a new add*/
        set OP0ZM001.XAUCD[OP0ZW-SUB] normal; /* unprotect field*/
        set OP0ZM001.KUCCOID[OP0ZW-SUB] normal; /* unprotect field*/
      else
        OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] = " "; /* indicates a old add*/
        set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
        set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
      end
    end
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  if (OP0ZW-FIRST-SUB > 0)
    set OP0ZM001.XAUCD[OP0ZW-FIRST-SUB] cursor;
  else
    set OP0ZM001.XAUCD[1] cursor;
  end
  if (OP0ZM-MAX-PAGE == 0)
    OP0ZM001.OP0ZM-PAGE = 1;
    OP0ZM001.OP0ZM-MAX-PAGE = 1;
  end


end // end OP0ZS-BLD-ADD-DTL

// build the map for an add
Function OP0ZS-BLD-ADD-MAP()


   /* **********************************************************************/
   /* build the add results map                                          **/
   /* **********************************************************************/


  OP0ZS-BLD-DFLT-HDG(); /* build the default headings*/

  set OP0ZM001.OP0ZM-TEXT-SEL-1 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-2 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-3 skip, invisible; /* headings*/

  set OP0ZM001.OP0ZM-PF5 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF6 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF7 skip; /* show pf key*/
  set OP0ZM001.OP0ZM-PF8 skip; /* show pf key*/
  set OP0ZM001.OP0ZM-PF9 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF10 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF20 skip; /* protect pf key*/

  OP0ZS-BLD-ADD-DTL(); /* build add detail lines*/


end // end OP0ZS-BLD-ADD-MAP

// bulid detail lines for a copy
Function OP0ZS-BLD-COPY-DTL()


   /* **********************************************************************/
   /* build the copy map detail lines                                    **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip; /* protect field*/
  set OP0ZM001.XXXUSID1 skip; /* protect*/
  OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip; /* protect field*/
  set OP0ZM001.XXXUSID2 normal; /* un-protect*/
  OP0ZM001.XXXUSID2 = OP0ZW02.XXXUSID2; /* user-id*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct class*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID2 cursor; /* position cursor*/


end // end OP0ZS-BLD-COPY-DTL

// build the map for a copy
Function OP0ZS-BLD-COPY-MAP()


   /* **********************************************************************/
   /* build the copy results map                                         **/
   /* **********************************************************************/


  OP0ZS-BLD-DFLT-HDG(); /* build default headings*/

  set OP0ZM001.OP0ZM-TEXT-SEL-1 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-2 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-3 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-PAGE skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-PAGE skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-OF skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-MAX-PAGE skip, invisible; /* headings*/

  set OP0ZM001.OP0ZM-PF5 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF6 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF7 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF8 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF9 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF10 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF20 skip; /* protect pf key*/

  OP0ZS-BLD-COPY-DTL(); /* build copy detail lines*/


end // end OP0ZS-BLD-COPY-MAP

// build detail lines for del sel
Function OP0ZS-BLD-DELS-DTL()


   /* **********************************************************************/
   /* build the delete selected map detail lines                         **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect*/
  OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/
  OP0ZM001.XXXUSID2 = OP0ZW02.XXXUSID2; /* user-id*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    if (OP0ZW02.XAUCD[OP0ZW-SUB] == " " /* blank acct cls code*/
     && OP0ZW02.KUCCOID[OP0ZW-SUB] == 0) /* blank comp acct nbr*/
      OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] = " "; /* select field*/
      set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
      OP0ZM001.XAUCD[OP0ZW-SUB] = " "; /* acct class*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
      OP0ZM001.KUCCOID[OP0ZW-SUB] = 0; /* comp nbr*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect & hide field*/
    else
      OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] = OP0ZW02.OP0ZW-SEL[OP0ZW-SUB]; /* select field*/
      set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] normal; /* un-protect field*/
      OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct class*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
      OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
    end
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.OP0ZM-SEL[1] cursor; /* position cursor*/


end // end OP0ZS-BLD-DELS-DTL

// build the map for del sel
Function OP0ZS-BLD-DELS-MAP()


   /* **********************************************************************/
   /* build the delete selected results map                              **/
   /* **********************************************************************/


  OP0ZS-BLD-DFLT-HDG(); /* build default headings*/

  set OP0ZM001.OP0ZM-TEXT-SEL-1 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-2 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-3 skip; /* headings*/

  set OP0ZM001.OP0ZM-PF5 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF6 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF7 skip; /* show pf key*/
  set OP0ZM001.OP0ZM-PF8 skip; /* show pf key*/
  set OP0ZM001.OP0ZM-PF9 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF10 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF20 skip; /* protect pf key*/

  OP0ZS-BLD-DELS-DTL(); /* build delete selected detail lines*/


end // end OP0ZS-BLD-DELS-MAP

// build detail line for del user
Function OP0ZS-BLD-DELU-DTL()


   /* **********************************************************************/
   /* build the delete user map detail lines                             **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect*/
  OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/
  OP0ZM001.XXXUSID2 = OP0ZW02.XXXUSID2; /* user-id*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct class*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID1 cursor; /* position cursor*/


end // end OP0ZS-BLD-DELU-DTL

// build the map for del user
Function OP0ZS-BLD-DELU-MAP()


   /* **********************************************************************/
   /* build the delete user results map                                  **/
   /* **********************************************************************/


  OP0ZS-BLD-DFLT-HDG(); /* build default headings*/

  set OP0ZM001.OP0ZM-TEXT-SEL-1 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-2 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-3 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-PAGE skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-PAGE skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-OF skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-MAX-PAGE skip, invisible; /* headings*/

  set OP0ZM001.OP0ZM-PF5 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF6 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF7 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF8 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF9 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF10 skip, invisible; /* hide pf key*/
  set OP0ZM001.OP0ZM-PF20 skip; /* protect pf key*/

  OP0ZS-BLD-DELU-DTL(); /* build delete user detail lines*/


end // end OP0ZS-BLD-DELU-MAP

// build default heading lines
Function OP0ZS-BLD-DFLT-HDG()


   /* **********************************************************************/
   /* build the default headings                                         **/
   /* **********************************************************************/


  OP0ZM001.OP0ZM-PAGE = OP0ZW-TA5TSQIX; /* page number*/
  set OP0ZM001.OP0ZM-TEXT-PAGE skip; /* text 'page'*/
  set OP0ZM001.OP0ZM-PAGE skip; /* screen page number*/
  set OP0ZM001.OP0ZM-TEXT-OF skip; /* text 'of'*/
  set OP0ZM001.OP0ZM-MAX-PAGE skip; /* screen maximum page number*/
  set OP0ZM001.OP0ZM-TEXT-ACCT-COMP skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-CLS-1 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-NUM-1 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-CLS-2 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-NUM-2 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-CLS-3 skip; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-NUM-3 skip; /* headings*/


end // end OP0ZS-BLD-DFLT-HDG

// build the initial map
Function OP0ZS-BLD-INIT-MAP()


   /* **********************************************************************/
   /* build the initial map display                                      **/
   /* **********************************************************************/

  set OP0ZM001 initial; /* set defined attributes*/
  OP0ZM001.OP0ZM-PAGE = 1; /* page number*/
  /* MOVE OP0ZW-TA5TSQIX TO OP0ZM001.OP0ZM-MAX-PAGE; /* max page number*/
  OP0ZM001.OP0ZM-DATE = VGVar.currentShortGregorianDate; /* move date to map*/


end // end OP0ZS-BLD-INIT-MAP

// build detail lines for inquire
Function OP0ZS-BLD-INQ-DTL()


   /* **********************************************************************/
   /* build the inquiry map detail lines                                 **/
   /* **********************************************************************/


  set OP0ZM001.XXXUSID1 normal; /* un-protect field*/
  OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide field*/
  OP0ZM001.XXXUSID2 = OP0ZW02.XXXUSID2; /* user-id*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct class*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end


end // end OP0ZS-BLD-INQ-DTL

// build the map for inquire
Function OP0ZS-BLD-INQ-MAP()


   /* **********************************************************************/
   /* build the inquiry results map                                      **/
   /* **********************************************************************/


  OP0ZS-BLD-DFLT-HDG(); /* build the default headings*/

  set OP0ZM001.OP0ZM-TEXT-SEL-1 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-2 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-3 skip, invisible; /* headings*/

  set OP0ZM001.OP0ZM-PF5 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF6 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF7 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF8 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF9 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF10 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF20 skip; /* protect pf key*/

  OP0ZS-BLD-INQ-DTL(); /* build inquiry detail lines*/


end // end OP0ZS-BLD-INQ-MAP

// reset the detail lines
Function OP0ZS-BLD-RSET-DTL()


   /* **********************************************************************/
   /* build the updated map detail lines                                 **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 normal; /* un-protect field*/
  OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide field*/
  OP0ZM001.XXXUSID2 = OP0ZW02.XXXUSID2; /* user-id*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    OP0ZM001.XAUCD[OP0ZW-SUB] = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct class*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZM001.KUCCOID[OP0ZW-SUB] = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID1 cursor; /* position cursor*/


end // end OP0ZS-BLD-RSET-DTL

// build the reset map
Function OP0ZS-BLD-RSET-MAP()


   /* **********************************************************************/
   /* build the inquiry results map                                      **/
   /* **********************************************************************/


  OP0ZS-BLD-DFLT-HDG(); /* build the default headings*/

  set OP0ZM001.OP0ZM-TEXT-SEL-1 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-2 skip, invisible; /* headings*/
  set OP0ZM001.OP0ZM-TEXT-SEL-3 skip, invisible; /* headings*/

  set OP0ZM001.OP0ZM-PF5 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF6 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF9 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF10 skip; /* protect pf key*/
  set OP0ZM001.OP0ZM-PF20 skip; /* protect pf key*/

  OP0ZS-BLD-RSET-DTL(); /* build updated detail lines*/


end // end OP0ZS-BLD-RSET-MAP

// build temporary storage
Function OP0ZS-BLD-TMP-STG()


  set OP0ZW02 empty;
  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
  OP0ZW01.OP0ZW-FIRST-SUB = 1; /* initialize sub-script*/

  OP0ZW02.XXXUSID1 = OP0ZM001.XXXUSID1; /* user-id*/
  OP0ZW02.XXXUSID2 = OP0ZM001.XXXUSID2; /* user-id*/


  while (SQLCA.VAGen_SQLCODE == 0
   && OP0ZW01.OP0ZW-SUB <= 30) /* loop through table*/
    OP0ZW01.OP0ZW-FIRST-SUB = OP0ZW-SUB + 1; /* cursor position*/
    OP0ZW02.OP0ZW-SEL = " "; /* select field*/
    OP0ZW02.XAUCD[OP0ZW-SUB] = VCPATH01.XAUCD; /* acct class code*/
    OP0ZW02.KUCCOID[OP0ZW-SUB] = VCPATH01.KUCCOID; /* comp nbr*/
                     /* used by add function to find added rows*/
    OP0ZW01.OP0ZW-DATA-FOUND = "Y"; /* some data found*/
    OP0ZS-FETCH-VCPATH(); /* fetch next vcpath01 row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* a row fetched*/
      OP0ZW-SUB = OP0ZW-SUB + 1; /* increment sub-script*/
    end
  end

  if (OP0ZW01.OP0ZW-FIRST-SUB > 30) /* cursor position exceeded*/
    OP0ZW01.OP0ZW-FIRST-SUB = 1;
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-WRIT-TMP-STG(); /* write temp storage*/
  end


end // end OP0ZS-BLD-TMP-STG

// check the request mode
Function OP0ZS-CHK-MODE()


   /* **********************************************************************/
   /* see what function was requested                                    **/
   /* **********************************************************************/


  if (OP0ZW01.OP0ZW-MODE == "ADD ") /* add function requested*/
    OP0ZS-ADD-MODE(); /* do updates ect for add*/
    return; /* return*/
  end

  if (OP0ZW01.OP0ZW-MODE == "COPY") /* copy function requested*/
    OP0ZS-COPY-MODE(); /* do updates ect for copy*/
    return; /* return*/
  end

  if (OP0ZW01.OP0ZW-MODE == "DELU") /* delete user function requested*/
    OP0ZS-DELU-MODE(); /* do updates ect for delete user*/
    return; /* return*/
  end

  if (OP0ZW01.OP0ZW-MODE == "DELS") /* delete selected function requested*/
    OP0ZS-DELS-MODE(); /* do updates ect for delete selected*/
    return; /* return*/
  end

  if (OP0ZW01.OP0ZW-MODE == "RSET") /* inquiry function requested*/
    OP0ZS-RSET-MODE(); /* display updated data*/
    OP0ZW-MODE = "NONE"; /* not any mode now*/
    return; /* return*/
  end


end // end OP0ZS-CHK-MODE

// close cursor for vcpath01
Function OP0ZS-CLOSE-VCPATH()


   /* **********************************************************************/
   /* close the cursor declared for dorder.vcpath01 table                **/
   /* **********************************************************************/


  set SQLCA empty; /* initialize record*/
  set VCPATH01 empty; /* initialize record*/

  call "IO3420" ("C1", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0)
    set TA1REC empty; /* initialize record*/
    set ERRSQLCA empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-CL"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "OSE-VCPA"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "TH   C1 "; /* location part 3 / function*/
    TA1REC.TA1LOCAT[4] = "IO3420"; /* io mod*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* user-id*/
    TA1REC.TA1DBASE = "DORDER"; /* database name*/
    TA1REC.TA1TBLVU = "VCPATH01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      converseLib.validationFailed(006); /* DB busy*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
      OP0ZS-POST-DB2(); /* post a db2 error*/
    else /* all other codes - abort*/
      OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
      COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER";
      OP0ZS-RETN-DB2(); /* do db2 return*/
    end
  end


end // end OP0ZS-CLOSE-VCPATH

// process a copy request
Function OP0ZS-COPY()


   /* **********************************************************************/
   /* process a copy request                                             **/
   /* **********************************************************************/


  OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* initialize flag*/

  if (OP0ZW01.OP0ZW-DATA-FOUND == "Y") /* data found to display*/
    OP0ZS-READ-TMP-STG(); /* read temp storage*/
    OP0ZS-BLD-COPY-MAP(); /* build the copy results map*/
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZS-SET-MSG(); /* auth will be copied confirm*/
    end
  else
    converseLib.validationFailed(731); /* no comp auth found for user-id*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error true*/
  end


end // end OP0ZS-COPY

// perform a copy request
Function OP0ZS-COPY-MODE()


   /* **********************************************************************/
   /* do data base updates etc for an copy request                       **/
   /* **********************************************************************/


  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "N") /* update data base flag*/
    OP0ZS-RSET-COPY(); /* reset map attributes for copy*/
  end

  OP0ZS-EDT-COPY-KEY(); /* edit pf keys in copy mode*/

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "N") /* update data base flag*/
    OP0ZS-EDT-USR-IDS(); /* edit the user-ids*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "Y") /* copy new comp auth now*/
    OP0ZW01.OP0ZW-TA5TSQIX = 1; /* READ TEMP STORAGE PAGE 1*/
    while (OP0ZW01.OP0ZW-TA5TSQIX <= OP0ZM-MAX-PAGE) /* READ ALL PAGES*/
      OP0ZS-READ-TMP-STG(); /* GET FIRST QUEUE OF TEMP STORAGE*/
      OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
      while (OP0ZW-SUB <= 30 /* loop through table*/
       && OP0ZW01.OP0ZW-ERROR == "N")
        if (OP0ZW02.XAUCD[OP0ZW-SUB] == " " /* blank acct cls*/
         && OP0ZW02.KUCCOID[OP0ZW-SUB] == 0) /* blank comp nbr*/
          /* next sentence*/
        else
          OP0ZW01.XXXUSRID = OP0ZM001.XXXUSID2; /* user-id*/
          VCPATH01.XAUCD = OP0ZW02.XAUCD[OP0ZW-SUB];
          VCPATH01.KUCCOID = OP0ZW02.KUCCOID[OP0ZW-SUB];
          OP0ZS-ISRT-VCPATH(); /* insert the new rows into path01*/
        end
        OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
      end
      OP0ZW01.OP0ZW-TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX + 1;
    end
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZW01.OP0ZW-MODE = "RSET"; /* reset mode*/
      OP0ZM001.XXXUSID1 = OP0ZM001.XXXUSID2; /* move "to" to "from"*/
      OP0ZW01.XXXUSRID = OP0ZM001.XXXUSID2; /* move "to" to "from"*/
      OP0ZM001.XXXUSID2 = " "; /* initialize field*/
      converseLib.validationFailed(745); /* comp auth successfully copied*/
    end
  end

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-MODE == "COPY") /* still in copy mode*/
    OP0ZS-PROTECT-COPY(); /* protect map*/
    OP0ZW01.OP0ZW-UPDATE-DB = "Y"; /* set flag to true*/
  end


end // end OP0ZS-COPY-MODE

// declare a cursor for vcpath01
Function OP0ZS-DCL-VCPATH()


   /* **********************************************************************/
   /* declare a cursor for the dorder.vcpath01 table                     **/
   /* **********************************************************************/


  set SQLCA empty; /* initialize record*/
  set VCPATH01 empty; /* initialize record*/
  VCPATH01.XXXUSRID = OP0ZW01.XXXUSRID; /* user-id*/

  call "IO3420" ("S1", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE != 0) /* unsuccessful declare*/
    set TA1REC empty; /* initialize record*/
    set ERRSQLCA empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-D"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "CL-VCPA"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "TH   S1"; /* location part 3*/
    TA1REC.TA1LOCAT[4] = "IO3420 "; /* location part 4*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* user-id*/
    TA1REC.TA1DBASE = "DORDER"; /* database name*/
    TA1REC.TA1TBLVU = "VCPATH01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      converseLib.validationFailed(006); /* DB busy*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
      OP0ZS-POST-DB2(); /* post a db2 error*/
    else /* all other codes - abort*/
      OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
      COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER"; /* error msg*/
      OP0ZS-RETN-DB2(); /* do a db2 return*/
    end
  end


end // end OP0ZS-DCL-VCPATH

// process a delete sel request
Function OP0ZS-DELETE-SEL()


   /* **********************************************************************/
   /* process a delete selected request                                  **/
   /* **********************************************************************/


  OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* initialize flag*/

  if (OP0ZW01.OP0ZW-DATA-FOUND == "Y") /* no data found to display*/
    OP0ZS-READ-TMP-STG(); /* read temp storage*/
    OP0ZS-BLD-DELS-MAP(); /* build the delete sel result map*/
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZS-SET-MSG(); /* select auth to delete*/
    end
  else
    converseLib.validationFailed(731); /* no comp auth found for user-id*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error true*/
  end


end // end OP0ZS-DELETE-SEL

// process a delete user request
Function OP0ZS-DELETE-USER()


   /* **********************************************************************/
   /* process a delete user request                                      **/
   /* **********************************************************************/


  OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* initialize flag*/

  if (OP0ZW01.OP0ZW-DATA-FOUND == "Y") /* data found to display*/
    OP0ZS-READ-TMP-STG(); /* read temp storage*/
    OP0ZS-BLD-DELU-MAP(); /* build the delete user result map*/
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZS-SET-MSG(); /* auth will be deleted confirm*/
      OP0ZS-PROTECT-DELU(); /* protect the map*/
    end
  else
    converseLib.validationFailed(731); /* no comp auth found for user-id*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error true*/
  end


end // end OP0ZS-DELETE-USER

// perform a del sel request
Function OP0ZS-DELS-MODE()


   /* **********************************************************************/
   /* do data base updates ect for an delete selected request            **/
   /* **********************************************************************/

  OP0ZS-EDT-DELS-KEY(); /* edits the pf keys pf3,pf4, and pf20*/

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "N") /* do not update comp auth yet*/
    OP0ZS-RSET-DELS(); /* reset map attributes for del selected*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
    while (OP0ZW-SUB <= 30) /* loop through table*/
      if (OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] == "D") /* delete row requested*/
        OP0ZW01.OP0ZW-CHG-FLAG = "Y"; /* at least on delete request*/
      end
      if (OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] == "D" /* valid value*/
       || OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] == " ") /* valid value*/
         /* next sentence*/
      else
        OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
        OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* don't delete comp auth*/
        converseLib.validationFailed(752); /* value is not valid*/
        set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] cursor, bold; /* pos cursor*/
      end
      OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
    end
  end

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-UPDT-TMP-STG(); /* update the current temp storage*/
  end

  if (OP0ZW01.OP0ZW-ERROR == "N"     /* no errors*/
   && OP0ZW01.OP0ZW-UPDATE-DB == "Y" /* delete comp auth now*/
   && converseVar.eventKey is pf10) 
    OP0ZW01.OP0ZW-TA5TSQIX = 1; /* read temp stg page 1*/
    while (OP0ZW01.OP0ZW-TA5TSQIX <= OP0ZM-MAX-PAGE) /* read all pages*/
      OP0ZS-READ-TMP-STG(); /* get first queue of temp storage*/
      OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
      while (OP0ZW-SUB <= 30 /* loop through table*/
       && OP0ZW01.OP0ZW-ERROR == "N")
        if (OP0ZW02.OP0ZW-SEL[OP0ZW-SUB] == "D") /* delete row requested*/
          OP0ZS-DELS-VCPATH(); /* delete the requested row*/
        end
        OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
      end
      OP0ZW01.OP0ZW-TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX + 1;
    end
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZW01.OP0ZW-MODE = "RSET"; /* reset mode*/
      OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* set flag to false*/
      converseLib.validationFailed(751); /* comp auth successfully deleted*/
    end
  end

  if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
   && OP0ZW01.OP0ZW-MODE == "DELS") /* still delete selected mode*/
    OP0ZS-UPDT-TMP-STG(); /* update the current temp storage*/
    OP0ZS-EDT-DELS-KY2(); /* edit pf keys pf5,pf7,pf8*/
  end


end // end OP0ZS-DELS-MODE

// del sel rows from vcpath01
Function OP0ZS-DELS-VCPATH()


   /* **********************************************************************/
   /* delete the selected row from the table                             **/
   /* **********************************************************************/


  set SQLCA empty; /* initialize the record*/
  set VCPATH01 empty; /* initialize the record*/

  VCPATH01.XXXUSRID = OP0ZM001.XXXUSID1; /* user id*/
  VCPATH01.XAUCD = OP0ZW02.XAUCD[OP0ZW-SUB]; /* acct cls*/
  VCPATH01.KUCCOID = OP0ZW02.KUCCOID[OP0ZW-SUB]; /* comp nbr*/

  call "IO3420" ("D1", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod*/

  if (SQLCA.VAGen_SQLCODE == +0 /* successful delete*/
   || SQLCA.VAGen_SQLCODE == +100) /* row not found is ok*/
  else
    set TA1REC empty; /* initialize record*/
    set ERRSQLCA empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-DE"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "LS-PATH0"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "1    D1 "; /* location part 3 / function*/
    TA1REC.TA1LOCAT[4] = "IO3420"; /* io mod*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* user-id*/
    TA1REC.TA1DBASE = "DORDER"; /* database name*/
    TA1REC.TA1TBLVU = "VCPATH01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      converseLib.validationFailed(006); /* DB busy*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
      OP0ZS-POST-DB2(); /* post a db2 error*/
    else /* all other codes - abort*/
      OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
      COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER";
      OP0ZS-RETN-DB2(); /* do db2 return*/
    end
  end


end // end OP0ZS-DELS-VCPATH

// perform delete user request
Function OP0ZS-DELU-MODE()


   /* **********************************************************************/
   /* do data base updates ect for an delete user request                **/
   /* **********************************************************************/


  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-RSET-DELU(); /* reset map attributes for delete user*/
  end

  OP0ZS-EDT-DELU-KEY(); /* edit pf keys in delete user mode*/

  if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
    OP0ZS-DELU-VCPATH(); /* delete the rows from path01*/
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZW01.XXXUSRID = " "; /* clear the userid*/
      OP0ZW01.OP0ZW-MODE = "RSET"; /* reset mode*/
      converseLib.validationFailed(749); /* user successfully deleted*/
    end
  end


end // end OP0ZS-DELU-MODE

// delete user from vcpath01
Function OP0ZS-DELU-VCPATH()


   /* **********************************************************************/
   /* delete the user from the table                                     **/
   /* **********************************************************************/


  set SQLCA empty; /* initialize the record*/
  set VCPATH01 empty; /* initialize the record*/

  VCPATH01.XXXUSRID = OP0ZW01.XXXUSRID; /* user id*/

  call "IO3420" ("D2", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod*/

  if (SQLCA.VAGen_SQLCODE == +0 /* row successfully deleted*/
   || SQLCA.VAGen_SQLCODE == +100) /* row not found is ok*/
  else
    set TA1REC empty; /* initialize record*/
    set ERRSQLCA empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-DE"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "LU-VCPAT"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "H    D2 "; /* location part 3 / function*/
    TA1REC.TA1LOCAT[4] = "IO3420"; /* io mod*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* user-id*/
    TA1REC.TA1DBASE = "DORDER"; /* database name*/
    TA1REC.TA1TBLVU = "VCPATH01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      converseLib.validationFailed(006); /* DB busy*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
      OP0ZS-POST-DB2(); /* post a db2 error*/
    else /* all other codes - abort*/
      OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
      COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER";
      OP0ZS-RETN-DB2(); /* do db2 return*/
    end
  end


end // end OP0ZS-DELU-VCPATH

// edit account class code
Function OP0ZS-EDT-ACCT-CLS()


   /* **********************************************************************/
   /* edit the entered account class code                                **/
   /* **********************************************************************/


  if (OP0ZM001.XAUCD[OP0ZW-SUB] in XAUTBL.XAUCD) /* see if code is in table*/
   /* next sentence*/
  else
    set OP0ZM001.XAUCD[OP0ZW-SUB] cursor, bold; /* highlight error*/
    converseLib.validationFailed(574); /* acct cls not found*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
  end


end // end OP0ZS-EDT-ACCT-CLS

// edit pf keys in add mode
Function OP0ZS-EDT-ADD-KEY()


   /* **********************************************************************/
   /* edit the pf key pressed for add mode                               **/
   /* **********************************************************************/


  if (converseVar.eventKey is pf3)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* from appl*/
    COMMAREA.CACURRAP = "OP0M"; /* to appl*/
    COMMAREA.CATOAP = " "; /* initialize to appl*/
    sysVar.transferName = COMMAREA.CACURRAP; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf4)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf5) /* add a new acct cls/comp nbr*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf7)
    return;
  end

  if (converseVar.eventKey is pf8)
    return;
  end

  if (converseVar.eventKey is pf20) /* cancel request*/
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    sysVar.transferName = "OP0Z"; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    OP0ZM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    exit program; /* terminate appl*/
  end

  converseLib.validationFailed(008); /* pf key is not valid*/
  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/


end // end OP0ZS-EDT-ADD-KEY

// edit add pf keys 5,7,8
Function OP0ZS-EDT-ADD-KEY2()

   /* **********************************************************************/
   /* edit the pf key pressed for add mode                               **/
   /* **********************************************************************/


  if (converseVar.eventKey is pf3)
    return; /* return*/
  end

  if (converseVar.eventKey is pf4)
    return; /* return*/
  end

  if (converseVar.eventKey is pf5) /* add a new acct cls/comp nbr*/
    converseLib.validationFailed(734); /* auth will be added confirm*/
    if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors*/
     && OP0ZW01.OP0ZW-CHG-FLAG == "N") /* no auth added at all*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
      converseLib.validationFailed(748); /* at least one add must be done*/
      set OP0ZM001.XAUCD[1] cursor, bold; /* position cursor*/
    else
      OP0ZW01.OP0ZW-UPDATE-DB = "Y"; /* set updte switch after confirm*/
    end
    return; /* return*/
  end

  if (converseVar.eventKey is pf7)
    OP0ZS-PF7-UP();
    if (OP0ZW01.OP0ZW-ERROR == "N")
      converseLib.validationFailed(734); /* new comp authorizations will be added;*/
    end /* pf5 to confirm*/
    return;
  end

  if (converseVar.eventKey is pf8)
    OP0ZS-PF8-DOWN();
    if (OP0ZW01.OP0ZW-ERROR == "N")
      converseLib.validationFailed(734); /* new comp authorizations will be added;*/
    end /* pf5 to confirm*/
    return;
  end

  if (converseVar.eventKey is pf20) /* cancel request*/
    return;
  end

  converseLib.validationFailed(008); /* pf key is not valid*/
  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/


end // end OP0ZS-EDT-ADD-KEY2

// edit the comp account number
Function OP0ZS-EDT-COMP-NBR()


   /* **********************************************************************/
   /* see if the comp number entered exist in dcust.vcmpny01             **/
   /* **********************************************************************/


  set SQLCA empty; /* initialize the record*/
  set KUCREC empty; /* initialize the record*/

  KUCREC.KUCCOID = OP0ZM001.KUCCOID[OP0ZW-SUB]; /* comp nbr*/

  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* call i/o mod*/

  if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* no rows found*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] cursor, bold; /* highlight error*/
      converseLib.validationFailed(542); /* comp number not found*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    else
      set TA1REC empty; /* initialize record*/
      set ERRSQLCA empty; /* initialize record*/
      TA1REC.TA1LOCAT[1] = "OP0ZS-ED"; /* location part 1*/
      TA1REC.TA1LOCAT[2] = "T-COMP-N"; /* location part 2*/
      TA1REC.TA1LOCAT[3] = "BR    S "; /* location part 3 / function*/
      TA1REC.TA1LOCAT[4] = "IO0240"; /* io mod*/
      TA1REC.TA1TBLKE = OP0ZM001.KUCCOID[OP0ZW-SUB]; /* readable key*/
      TA1REC.TA1DBASE = "DCUST"; /* database name*/
      TA1REC.TA1TBLVU = "VCMPNY01"; /* database view name*/
      if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
        converseLib.validationFailed(006); /* DB busy*/
        OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
        OP0ZS-POST-DB2(); /* post a db2 error*/
      else /* all other codes - abort*/
        OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
        COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER";
        OP0ZS-RETN-DB2(); /* do db2 return*/
      end
    end
  end


end // end OP0ZS-EDT-COMP-NBR

// edit the pf keys in copy mode
Function OP0ZS-EDT-COPY-KEY()


   /* **********************************************************************/
   /* edit the pf key pressed for copy mode                              **/
   /* **********************************************************************/


  if (converseVar.eventKey is pf3)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* curr appl to from appl*/
    COMMAREA.CACURRAP = "OP0M"; /* to appl to curr appl*/
    COMMAREA.CATOAP = " "; /* initialize to appl*/
    sysVar.transferName = COMMAREA.CACURRAP; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf4)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf6) /* copy acct cls/comp nbr*/
    converseLib.validationFailed(735); /* auth will be copied confirm*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf20) /* cancel request*/
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    sysVar.transferName = "OP0Z"; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    OP0ZM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    exit program; /* terminate appl*/
  end

  converseLib.validationFailed(008); /* pf key is not valid*/
  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/


end // end OP0ZS-EDT-COPY-KEY

// check for pf keys pf3,pf4,pf20
Function OP0ZS-EDT-DELS-KEY()

   /* **********************************************************************/
   /* edit the pf key pressed for delete select mode                     **/
   /* **********************************************************************/


  if (converseVar.eventKey is pf3)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* curr appl to from appl*/
    COMMAREA.CACURRAP = "OP0M"; /* to appl to curr appl*/
    COMMAREA.CATOAP = " "; /* initialize to appl*/
    sysVar.transferName = COMMAREA.CACURRAP; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf4)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    /* DXFR EZEAPP COMMAREA;          /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8
   || converseVar.eventKey is pf10)
    return; /* return*/
  end

  if (converseVar.eventKey is pf20) /* cancel request*/
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    sysVar.transferName = "OP0Z"; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    OP0ZM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    exit program; /* terminate appl*/
  end

  converseLib.validationFailed(008); /* pf key is not valid*/
  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/


end // end OP0ZS-EDT-DELS-KEY

// edit pf keys in del sel mode
Function OP0ZS-EDT-DELS-KY2()


   /* **********************************************************************/
   /* edit the pf key pressed for delete select mode                     **/
   /* **********************************************************************/


  if (converseVar.eventKey is pf3
   || converseVar.eventKey is pf4
   || converseVar.eventKey is pf20)
    return;
  end

  if (converseVar.eventKey is pf7)
    OP0ZS-PF7-UP();
    if (OP0ZW01.OP0ZW-ERROR == "N")
      converseLib.validationFailed(743); /* selected comp authorizations will be deleted*/
    end /* pf10 to confirm*/
    return;
  end

  if (converseVar.eventKey is pf8)
    OP0ZS-PF8-DOWN();
    if (OP0ZW01.OP0ZW-ERROR == "N")
      converseLib.validationFailed(743); /* selected comp authorizations will be deleted*/
    end /* pf10 to confirm*/
    return;
  end

  if (converseVar.eventKey is pf10) /* delete selected*/
    if (OP0ZW01.OP0ZW-ERROR == "N" /* no errors thus far*/
     && OP0ZW01.OP0ZW-CHG-FLAG == "N") /* no deletes requested*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
      converseLib.validationFailed(750); /* at least one must be selected*/
      set OP0ZM001.OP0ZM-SEL[1] cursor, bold; /* position cursor*/
    else
      converseLib.validationFailed(743); /* delete confirm message*/
      OP0ZW01.OP0ZW-UPDATE-DB = "Y"; /* ok to do del select requests*/
    end
    return; /* return*/
  end


  converseLib.validationFailed(008); /* pf key is not valid*/
  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/


end // end OP0ZS-EDT-DELS-KY2

// edit pf keys in del user mode
Function OP0ZS-EDT-DELU-KEY()


   /* **********************************************************************/
   /* edit the pf key pressed for copy mode                              **/
   /* **********************************************************************/


  if (converseVar.eventKey is pf3)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* curr appl to from appl*/
    COMMAREA.CACURRAP = "OP0M"; /* to appl to curr appl*/
    COMMAREA.CATOAP = " "; /* initialize to appl*/
    sysVar.transferName = COMMAREA.CACURRAP; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf4)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf9) /* delete user*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf20) /* cancel request*/
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    sysVar.transferName = "OP0Z"; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    OP0ZM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    exit program; /* terminate appl*/
  end

  converseLib.validationFailed(008); /* pf key is not valid*/
  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/


end // end OP0ZS-EDT-DELU-KEY

// edit pf keys
Function OP0ZS-EDT-PF-KEYS()


  if (converseVar.eventKey is enter) /* inquiry*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf3)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* curr appl to from appl*/
    COMMAREA.CACURRAP = "OP0Y"; /* to appl to curr appl*/
    COMMAREA.CATOAP = " "; /* initialize to appl*/
    sysVar.transferName = COMMAREA.CACURRAP; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    exit program; /* terminate application*/
  end

  if (converseVar.eventKey is pf4)
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    XSPF4(); /* xfr to main menu*/
    exit program; /* termminate application*/
  end

  if (converseVar.eventKey is pf5 /* add a new acct cls/comp nbr*/
   && COMMAREA.CACHGFL == "Y")    /* update allowed*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf6 /* copy from user to user*/
   && COMMAREA.CACHGFL == "Y")    /* update allowed*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf7) /* scroll up*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf8) /* scroll down*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf9 /* delete user*/
   && COMMAREA.CACHGFL == "Y")    /* update allowed*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf10 /* delete selected acct cls/comp nbr*/
   && COMMAREA.CACHGFL == "Y")     /* update allowed*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf20) /* cancel request*/
    OP0ZS-PURG-TMP-STG(); /* purge temp storage*/
    sysVar.transferName = "OP0Z"; /* curr appl to ezeapp*/
    transfer to program sysVar.transferName passing COMMAREA; /* dxfr to ezeapp*/
    XSPF4(); /* xfer to main menu*/
    OP0ZM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* transfer failed*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    exit program; /* terminate appl*/
  end

  OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
  converseLib.validationFailed(008); /* pf key is not valid*/


end // end OP0ZS-EDT-PF-KEYS

// edit the user-ids
Function OP0ZS-EDT-USR-ID()


   /* **********************************************************************/
   /* edit xxxusid1                                                      **/
   /* **********************************************************************/

  if (OP0ZM001.XXXUSID1 == " ") /* user-id can not be blank*/
    set OP0ZM001.XXXUSID1 cursor, bold; /* highlight field*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    converseLib.validationFailed(729); /* user-id can not be blank*/
  end


end // end OP0ZS-EDT-USR-ID

Function OP0ZS-EDT-USR-IDS()


   /* **********************************************************************/
   /* edit xxxusid1 and xxxusid2 fields                                  **/
   /* **********************************************************************/

  if (OP0ZM001.XXXUSID2 == " ") /* user-id can not be blank*/
    set OP0ZM001.XXXUSID2 cursor, bold; /* highlight field*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    converseLib.validationFailed(729); /* user-id can not be blank*/
  end

  if (OP0ZM001.XXXUSID2 == OP0ZM001.XXXUSID1)
    set OP0ZM001.XXXUSID2 cursor, bold; /* highlight field*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    converseLib.validationFailed(746); /* can not be the same*/
  end

  if (OP0ZM001.XXXUSID1 == " ") /* user-id can not be blank*/
    set OP0ZM001.XXXUSID1 cursor, bold; /* highlight field*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error to true*/
    converseLib.validationFailed(729); /* user-id can not be blank*/
  end


end // end OP0ZS-EDT-USR-IDS

// fetch a vcpath01 row
Function OP0ZS-FETCH-VCPATH()


   /* **********************************************************************/
   /* fetch a row from the dorder.vcpath01 table                         **/
   /* **********************************************************************/


  set SQLCA empty; /* initialize record*/
  set VCPATH01 empty; /* initialize record*/

  call "IO3420" ("N1", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == +0) /* a row fetched*/
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* no rows found*/
      OP0ZW01.OP0ZW-EOF = "Y";
    else
      set TA1REC empty; /* initialize record*/
      set ERRSQLCA empty; /* initialize record*/
      TA1REC.TA1LOCAT[1] = "OP0ZS-FE"; /* location part 1*/
      TA1REC.TA1LOCAT[2] = "TCH-VCPA"; /* location part 2*/
      TA1REC.TA1LOCAT[3] = "TH   N1 "; /* location part 3 / function*/
      TA1REC.TA1LOCAT[4] = "IO3420"; /* io mod*/
      TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* user-id*/
      TA1REC.TA1DBASE = "DORDER"; /* database name*/
      TA1REC.TA1TBLVU = "VCPATH01"; /* database view name*/
      if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
        converseLib.validationFailed(006); /* DB busy*/
        OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
        OP0ZS-POST-DB2(); /* post a db2 error*/
      else /* all other codes - abort*/
        OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
        COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER";
        OP0ZS-RETN-DB2(); /* do db2 return*/
      end
    end
  end


end // end OP0ZS-FETCH-VCPATH

// get the selected data
Function OP0ZS-GET-DATA()


   /* **********************************************************************/
   /* get the data for any request                                       **/
   /* **********************************************************************/

  OP0ZW01.OP0ZW-DATA-FOUND = "N"; /* initialize flag*/
  OP0ZW-FIRST-SUB = 0; /* initialize place for cursor*/

  OP0ZS-PURG-TMP-STG(); /* purge temp storage*/

  OP0ZS-DCL-VCPATH(); /* declare cursor for vcpath001*/

  if (OP0ZW01.OP0ZW-ERROR == "Y")
    return;
  end
  OP0ZW01.OP0ZW-EOF = "N"; /* flag for vcpath01 cursor*/
  OP0ZS-FETCH-VCPATH(); /* fetch first vcpath001 row*/

  if (OP0ZW01.OP0ZW-EOF == "Y") /* if userid has no authorizations*/
    /* D EZEAID IS PF5;         /* and in add mode*/
    OP0ZS-BLD-TMP-STG(); /* build temp storage*/
  end

  while (OP0ZW01.OP0ZW-EOF == "N" /* build tmp stg until all cursor read*/
   && OP0ZW01.OP0ZW-ERROR == "N"
   && OP0ZW01.OP0ZW-TA5TSQIX < 99)
    OP0ZS-BLD-TMP-STG(); /* build temp storage*/
  end
  OP0ZM-MAX-PAGE = OP0ZW01.OP0ZW-TA5TSQIX;
  if (OP0ZM001.OP0ZM-PAGE == 0)
    OP0ZM001.OP0ZM-PAGE = 1;
  end
  OP0ZW01.OP0ZW-TA5TSQIX = OP0ZM001.OP0ZM-PAGE;

  OP0ZS-CLOSE-VCPATH(); /* close cursor for vcpath01*/


end // end OP0ZS-GET-DATA

// initialize records
Function OP0ZS-INIT-RECS()


   /* **********************************************************************/
   /* initialize working storage and other work areas and records      **/
   /* **********************************************************************/


  set ERRSQLCA empty; /* initialize error sql communication area*/
  set KUCREC empty; /* initialize company record*/
  set OP0ZW01 empty; /* initialize working storage*/
  set OP0ZW02 empty; /* initialize working storage*/
  set SQLCA empty; /* initialize sql communication area*/
  set TAEREC empty; /* initialize error diag record*/
  set TA1REC empty; /* initialize error diag record*/
  set TA2REC empty; /* initialize error diag record*/
  set TA5REC empty; /* initialize temp storage record*/
  set VCPATH01 empty; /* initialize comp auth record*/
  set XX0XW01 empty; /* initialize date time record*/
  set OP0ZM001 empty; /* initialize the screen to be empty*/


end // end OP0ZS-INIT-RECS

// process an inquire function
Function OP0ZS-INQUIRE()

   /* **********************************************************************/
   /* perform an inquiry function                                        **/
   /* **********************************************************************/


  if (OP0ZW01.OP0ZW-DATA-FOUND == "Y") /* data found to display*/
    OP0ZS-READ-TMP-STG(); /* read temp storage*/
    OP0ZS-BLD-INQ-MAP(); /* build the inquiry results map*/
    if (OP0ZW01.OP0ZW-ERROR == "N") /* no errors*/
      OP0ZS-SET-MSG(); /* select a function*/
    end
  else
    converseLib.validationFailed(731); /* no comp auth found for user-id*/
    OP0ZW01.OP0ZW-ERROR = "Y"; /* set error true*/
  end


end // end OP0ZS-INQUIRE

// insert row into vcpath01
Function OP0ZS-ISRT-VCPATH()


   /* **********************************************************************/
   /* insert new row into dorder.vcpath01 table                          **/
   /* **********************************************************************/


  XX0XS01(); /* get current date time for insert*/

  /* SET VCPATH01 EMPTY;              /* initialize record*/
  set SQLCA empty; /* initialize record*/

  VCPATH01.XXXUSRID = OP0ZW01.XXXUSRID; /* user-id*/

   /* first see if we have one for this combination on file*/

  call "IO3420" ("S ", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100) /* we didn't have one so it is okay to*/
                                   /* add one here*/
    VCPATH01.ZZZSDT = XX0XW01.XX0XWDAT; /* current date*/
    VCPATH01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* change date*/
    VCPATH01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* change time*/
    VCPATH01.ZZZCHGCT = 0; /* change count*/
    call "IO3420" ("A ", SQLCA, VCPATH01) {isNoRefresh = yes, isExternal = yes}; /* io mod*/
  end

    /* at this point we have either a 0 sqlcode meaning the record is*/
    /* there one way or another,  or we got some other error either in*/
    /* the select or the add.*/
  if (SQLCA.VAGen_SQLCODE == +0) /* successful insert*/
    /* next sentence*/
  else
    set TA1REC empty; /* initialize record*/
    set ERRSQLCA empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-IS"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "RT-VCPAT"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "H     A "; /* location part 3 / function*/
    TA1REC.TA1LOCAT[4] = "IO3420"; /* io mod*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* user-id*/
    TA1REC.TA1DBASE = "DORDER"; /* database name*/
    TA1REC.TA1TBLVU = "VCPATH01"; /* database view name*/
    if (SQLCA.VAGen_SQLCODE == -911) /* timed out*/
      converseLib.validationFailed(006); /* DB busy*/
      OP0ZW01.OP0ZW-ERROR = "Y"; /* set error  to true*/
      OP0ZS-POST-DB2(); /* post a db2 error*/
    else /* all other codes - abort*/
      OP0ZS-PURG-TMP-STG(); /* Purge temp storage*/
      COMMAREA.CAMSG = "DATA PROBLEM - TRY AGAIN LATER";
      OP0ZS-RETN-DB2(); /* do db2 return*/
    end
  end


end // end OP0ZS-ISRT-VCPATH

// scroll up
Function OP0ZS-PF7-UP()
  if (OP0ZW01.OP0ZW-TA5TSQIX <= 1)
    if (OP0ZW01.OP0ZW-MODE == "ADD")
      converseLib.validationFailed(734); /* confirm the adding of authorizations*/
    else
      if (OP0ZW01.OP0ZW-MODE == "DELS")
        converseLib.validationFailed(743); /* confirm the delete select of authorizations*/
      else
        converseLib.validationFailed(192); /* end of page backward*/
      end
    end
    OP0ZW01.OP0ZW-ERROR = "Y";
  else
    OP0ZW01.OP0ZW-TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX - 1;
    OP0ZM001.OP0ZM-PAGE = OP0ZW01.OP0ZW-TA5TSQIX;
    if (OP0ZW01.OP0ZW-MODE == "DELS")
      OP0ZS-DELETE-SEL();
    else
      if (OP0ZW-MODE == "ADD")
        OP0ZS-ADD();
      else
        converseLib.validationFailed(730);
        OP0ZS-INQUIRE();
      end
    end
  end
end // end OP0ZS-PF7-UP

// scroll down
Function OP0ZS-PF8-DOWN()
  if (OP0ZW01.OP0ZW-TA5TSQIX == OP0ZM001.OP0ZM-MAX-PAGE)
    if (OP0ZW01.OP0ZW-MODE == "ADD") /* check for add mode*/
      OP0ZS-ADD();
    else
      if (OP0ZW01.OP0ZW-MODE == "DELS")
        converseLib.validationFailed(743); /* selected comp authorizations will be deleted*/
      else
        converseLib.validationFailed(191); /* end of page forward*/
      end
      OP0ZW01.OP0ZW-ERROR = "Y";
    end
  else
    OP0ZW01.OP0ZW-TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX + 1;
    if (OP0ZW01.OP0ZW-TA5TSQIX > 99)
      converseLib.validationFailed(733); /* temp storage boundary exceeded, contact analyst*/
      OP0ZW01.OP0ZW-ERROR = "Y";
    else
      OP0ZM001.OP0ZM-PAGE = OP0ZW01.OP0ZW-TA5TSQIX;
      if (OP0ZW01.OP0ZW-MODE == "DELS") /* check for delete select mode*/
        OP0ZS-DELETE-SEL();
      else
        if (OP0ZW01.OP0ZW-MODE == "ADD") /* check for add mode*/
          OP0ZS-ADD();
        else
          converseLib.validationFailed(730); /* inquiry complete*/
          OP0ZS-INQUIRE();
        end
      end
    end
  end
end // end OP0ZS-PF8-DOWN

// post a db2 error
Function OP0ZS-POST-DB2()


   /* **********************************************************************/
   /* post a db2 error                                                   **/
   /* **********************************************************************/


  move SQLCA to ERRSQLCA withV60Compat; /* display db2 error info*/
  TA1REC.TA1TYPE = "DB2"; /* abend type*/
  TA1REC.TA1FUNC = "POST"; /* abend function*/
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/

  try
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  end /* abend routine*/


end // end OP0ZS-POST-DB2

// post a non-db2 error
Function OP0ZS-POST-NON-DB2()


   /* **********************************************************************/
   /* this statement group does a non-db2 post                           **/
   /* **********************************************************************/

  TA1REC.TA1TYPE = "APPL"; /* abend type*/
  TA1REC.TA1FUNC = "POST"; /* abend function*/
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/

  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end /* abend routine*/


end // end OP0ZS-POST-NON-DB2

// process any request
Function OP0ZS-PROC-RQST()


   /* **********************************************************************/
   /* process a request                                                  **/
   /* **********************************************************************/


  if (converseVar.eventKey is enter) /* inquiry*/
    OP0ZS-INQUIRE(); /* perform inquiry function*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf5) /* add a new acct cls/comp nbr*/
    OP0ZW01.OP0ZW-TA5TSQIX = OP0ZM-MAX-PAGE; /* new page*/
    OP0ZW01.OP0ZW-CHG-FLAG = "N"; /* initialize flag*/
    OP0ZS-ADD(); /* perform add function*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf6) /* copy from user to user*/
    OP0ZS-COPY(); /* perform copy function*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf7) /* scroll up request*/
    if (OP0ZW-FIRST-DISP-FL == "N") /* the first page has been displayed*/
      OP0ZS-PF7-UP(); /* perform scroll up function*/
    else
      converseLib.validationFailed(002); /* pf key is not valid*/
    end
    return; /* return*/
  end

  if (converseVar.eventKey is pf8) /* scroll down request*/
    if (OP0ZW-FIRST-DISP-FL == "N") /* the first page has been displayed*/
      OP0ZS-PF8-DOWN(); /* perform scroll down function*/
    else
      converseLib.validationFailed(002); /* pf key is not valid*/
    end
    return; /* return*/
  end

  if (converseVar.eventKey is pf9) /* delete user*/
    OP0ZS-DELETE-USER(); /* perform delete user function*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf10) /* delete selected acct cls/comp nbr*/
    OP0ZW01.OP0ZW-CHG-FLAG = "N"; /* initialize flag*/
    OP0ZS-DELETE-SEL(); /* perform delete selected function*/
    return; /* return*/
  end


end // end OP0ZS-PROC-RQST

// reset attribute for add
Function OP0ZS-PROTECT-ADD()


   /* **********************************************************************/
   /* build the add map detail lines                                     **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect field*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/
  OP0ZW01.OP0ZW-FIRST-SUB = 1; /* occurrence to place cursor*/
  OP0ZW01.OP0ZW-CURSOR-FLAG = "N"; /* cursor not placed yet*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    if (OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] == "A") /* check for add flag*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] normal; /* unprotect field*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] normal; /* unprotect field*/
      if (OP0ZW01.OP0ZW-CURSOR-FLAG == "N") /* cursor not placed yet*/
        OP0ZW01.OP0ZW-CURSOR-FLAG = "Y";
        OP0ZW01.OP0ZW-FIRST-SUB = OP0ZW01.OP0ZW-SUB;
      end
    else
      set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
    end
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  if (OP0ZW01.OP0ZW-CURSOR-FLAG == "Y") /* cursor needs to be placed*/
    set OP0ZM001.XAUCD[OP0ZW-FIRST-SUB] cursor; /* position cursor*/
  else
    set OP0ZM001.XXXUSID1 cursor; /* position cursor*/
  end


end // end OP0ZS-PROTECT-ADD

Function OP0ZS-PROTECT-COPY()


   /* **********************************************************************/
   /* protect the map after succesfull edits copy                        **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip; /* protect field*/
  set OP0ZM001.XXXUSID1 skip; /* protect field*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip; /* protect field*/
  set OP0ZM001.XXXUSID2 skip; /* protect field*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID1 cursor; /* position cursor*/


end // end OP0ZS-PROTECT-COPY

Function OP0ZS-PROTECT-DELU()


   /* **********************************************************************/
   /* protect the map after successful edits delete user                 **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect field*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID1 cursor; /* position cursor*/


end // end OP0ZS-PROTECT-DELU

// purge temp storage
Function OP0ZS-PURG-TMP-STG()


   /* **********************************************************************/
   /* this statement group purges temp storage                           **/
   /* **********************************************************************/

  set TA5REC empty; /* initialize record*/
  set OP0ZW02 empty; /* initialize record*/
  TA5REC.TA5APPID = "OP0Z"; /* appl identification*/
  TA5REC.TA5FNCCD = "P"; /* function code*/

  call "TA0050" (OP0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* unsuccessful purge*/
    set TA1REC empty; /* initialize reocrd*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-PU"; /* loaction part 1*/
    TA1REC.TA1LOCAT[2] = "RG-TMP-S"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "TG     "; /* location part 3*/
    TA1REC.TA1LOCAT[4] = TA5REC.TA5RTNCD; /* return code*/
    OP0ZS-POST-NON-DB2(); /* post a non-db2 error*/
  end


end // end OP0ZS-PURG-TMP-STG

// read temp storage
Function OP0ZS-READ-TMP-STG()


   /* **********************************************************************/
   /* read temporary storage                                             **/
   /* **********************************************************************/


  OP0ZW-FIRST-DISP-FL = "N"; /* the first page is displayed*/
  set OP0ZW02 empty; /* initialize record*/
  set TA5REC empty; /* initialize record*/

  TA5REC.TA5APPID = "OP0Z"; /* application id*/
  TA5REC.TA5FNCCD = "R"; /* function code*/
  TA5REC.TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX; /* current page*/
  OP0ZW02.OP0ZW-TS-LGTH = 230; /* record length*/

  call "TA0050" (OP0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage sub-routine*/

  if (TA5REC.TA5RTNCD != 0) /* unsuccessful read*/
    set TA1REC empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-RE"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "AD-TMP-S"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "TG      "; /* location part 3*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* error key*/
    TAEREC.TAEDESC1 = "READ TEMP STORAGE FAILED"; /* info message*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* sub-routine parms*/
    OP0ZS-RETN-NON-DB2(); /* retn a non-db2 error*/
  end


end // end OP0ZS-READ-TMP-STG

// return from a db2 error
Function OP0ZS-RETN-DB2()


   /* **********************************************************************/
   /* do a db2 return                                                    **/
   /* **********************************************************************/


  move SQLCA to ERRSQLCA withV60Compat; /* display db2 error info*/
  TA1REC.TA1TYPE = "DB2"; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function*/
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/
  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.rollback();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* syncpoint rollback*/

  try
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
  end /* abend routine*/

  COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* curr app to from app*/
  COMMAREA.CACURRAP = "OP0Y"; /* to application*/
  COMMAREA.CATOAP = " "; /* initialize area*/
  sysVar.transferName = COMMAREA.CACURRAP; /* to appl*/
  transfer to program sysVar.transferName passing COMMAREA; /* dxfr*/
  exit program; /* terminate application*/


end // end OP0ZS-RETN-DB2

// post a non-db2 error
Function OP0ZS-RETN-NON-DB2()


   /* **********************************************************************/
   /* this statement group does a non-db2 post                           **/
   /* **********************************************************************/

  TA1REC.TA1TYPE = "APPL"; /* abend type*/
  TA1REC.TA1FUNC = "RETN"; /* abend function*/
  TA1PGMNM = COMMAREA.CACURRAP; /* current application*/

  try
    call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
  end /* abend routine*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* ROLLBACK ALL DB CHANGES AFTER LAST COMMIT*/

  COMMAREA.CAFROMAP = COMMAREA.CACURRAP; /* curr app to from app*/
  COMMAREA.CACURRAP = "OP0M"; /* to application*/
  COMMAREA.CATOAP = " "; /* initialize area*/
  sysVar.transferName = COMMAREA.CACURRAP; /* to appl*/
  transfer to program sysVar.transferName passing COMMAREA; /* dxfr*/
  exit program; /* terminate application*/


end // end OP0ZS-RETN-NON-DB2

// reset attribute for add
Function OP0ZS-RSET-ADD()


   /* **********************************************************************/
   /* reset the detail line attributes for add mode                      **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect field*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    if (OP0ZW02.XAUCD[OP0ZW-SUB] == " " /* blank acct cls code*/
     && OP0ZW02.KUCCOID[OP0ZW-SUB] == 0) /* blank comp acct nbr*/
      set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] normal; /* un-protect field*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] normal; /* un-protect field*/
    else
      set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
    end
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XAUCD[1] cursor;


end // end OP0ZS-RSET-ADD

// reset attributes for copy
Function OP0ZS-RSET-COPY()


   /* **********************************************************************/
   /* reset detail line attributes for copy mode                         **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip; /* protect field*/
  set OP0ZM001.XXXUSID1 skip; /* protect*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip; /* protect field*/
  set OP0ZM001.XXXUSID2 skip; /* un-protect*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect fields*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID1 cursor; /* position cursor*/


end // end OP0ZS-RSET-COPY

// reset attribute for delete sel
Function OP0ZS-RSET-DELS()


   /* **********************************************************************/
   /* reset detail line attributes for delete selected mode              **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    if (OP0ZW02.XAUCD[OP0ZW-SUB] == " " /* blank acct cls code*/
     && OP0ZW02.KUCCOID[OP0ZW-SUB] == 0) /* blank comp acct nbr*/
      set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect & hide field*/
    else
      set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] normal; /* un-protect field*/
      set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect field*/
      set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect field*/
    end
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.OP0ZM-SEL[1] cursor; /* position cursor*/


end // end OP0ZS-RSET-DELS

// reset attribute for del user
Function OP0ZS-RSET-DELU()


   /* **********************************************************************/
   /* reset detail line attributes for delete user mode                  **/
   /* **********************************************************************/


  set OP0ZM001.OP0ZM-TEXT-TO skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID1 skip; /* protect*/
  set OP0ZM001.OP0ZM-TEXT-FROM skip, invisible; /* hide field*/
  set OP0ZM001.XXXUSID2 skip, invisible; /* protect & hide*/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    set OP0ZM001.OP0ZM-SEL[OP0ZW-SUB] skip, invisible; /* protect & hide*/
    set OP0ZM001.XAUCD[OP0ZW-SUB] skip; /* protect fields*/
    set OP0ZM001.KUCCOID[OP0ZW-SUB] skip; /* protect fields*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end

  set OP0ZM001.XXXUSID1 cursor; /* position cursor*/


end // end OP0ZS-RSET-DELU

// perform reset mode
Function OP0ZS-RSET-MODE()

   /* **********************************************************************/
   /* perform a reset function (not requested done after success)        **/
   /* **********************************************************************/


  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* commit previous changes*/

  OP0ZW01.OP0ZW-UPDATE-DB = "N"; /* initialize flag*/
  OP0ZW01.OP0ZW-CHG-FLAG = "N"; /* initialize flag*/

  set OP0ZM001 initial; /* clear the map*/
  OP0ZM001.OP0ZM-DATE = VGVar.currentShortGregorianDate; /* move date to map*/

  OP0ZS-GET-DATA(); /* retrieve updated data*/

  if (OP0ZW01.OP0ZW-DATA-FOUND == "Y") /* no data found to display*/
    OP0ZS-READ-TMP-STG(); /* read temp storage*/
    OP0ZS-BLD-RSET-MAP(); /* build the reset map*/
  else
    OP0ZS-BLD-INIT-MAP(); /* build the reset map*/
    OP0ZM001.OP0ZM-DATE = VGVar.currentShortGregorianDate; /* date*/
    OP0ZM001.XXXUSID1 = OP0ZW01.XXXUSRID; /* user-id*/
  end


end // end OP0ZS-RSET-MODE

// set the processing mode
Function OP0ZS-SET-MODE()


   /* **********************************************************************/
   /* set the mode flag                                                  **/
   /* **********************************************************************/


  if (converseVar.eventKey is enter) /* enter*/
    OP0ZW-MODE = "NONE"; /* inquiry mode*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf5) /* add a new acct cls/comp nbr*/
    OP0ZW-MODE = "ADD "; /* add mode*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf6) /* copy from user to user*/
    OP0ZW-MODE = "COPY"; /* copy mode*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf9) /* delete user*/
    OP0ZW-MODE = "DELU"; /* delete user*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf10) /* delete selected acct cls/comp nbr*/
    OP0ZW-MODE = "DELS"; /* delete selected*/
    return; /* return*/
  end


end // end OP0ZS-SET-MODE

// set processing messages
Function OP0ZS-SET-MSG()


   /* **********************************************************************/
   /* set the "continue" message for the mode requested                  **/
   /* **********************************************************************/



  if (converseVar.eventKey is enter) /* enter key pressed*/
    converseLib.validationFailed(730); /* select a function*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf5) /* pf key "5" pressed*/
    converseLib.validationFailed(732); /* enter new comp authorities*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf6) /* pf key "6" pressed*/
    converseLib.validationFailed(747); /* enter "to" user-id*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf9) /* pf key "9" pressed*/
    converseLib.validationFailed(736); /* user will be deleted confirm*/
    return; /* return*/
  end

  if (converseVar.eventKey is pf10) /* pf key "10" pressed*/
    converseLib.validationFailed(753); /* selected will be deleted*/
    return; /* return*/
  end


end // end OP0ZS-SET-MSG

// set segmented tran id
Function OP0ZS-SET-SEG-TR()


   /* **********************************************************************/
   /* set the segmented tran id                                          **/
   /* **********************************************************************/


  CAEZSAP = sysVar.transactionID; /* comm area segmented id*/

  CAEZSG12 = "OP"; /* 1st & 2nd bytes of tran id*/
  CAEZSG4 = "Z"; /* 4th byte of tran id*/
  sysVar.transactionID = CAEZSAP; /* segmented tran id*/


end // end OP0ZS-SET-SEG-TR

// update the temp storage page
Function OP0ZS-UPDT-TMP-STG()


   /* **********************************************************************/
   /* load current working storage with current page                     **/
   /* **********************************************************************/

  OP0ZW01.OP0ZW-SUB = 1; /* initialize sub-script*/

  while (OP0ZW01.OP0ZW-SUB <= 30) /* loop through map*/
    OP0ZW02.OP0ZW-SEL[OP0ZW-SUB] = OP0ZM001.OP0ZM-SEL[OP0ZW-SUB]; /* select field*/
    OP0ZW02.XAUCD[OP0ZW-SUB] = OP0ZM001.XAUCD[OP0ZW-SUB]; /* acct class*/
    OP0ZW02.KUCCOID[OP0ZW-SUB] = OP0ZM001.KUCCOID[OP0ZW-SUB]; /* comp nbr*/
    OP0ZW01.OP0ZW-SUB = OP0ZW01.OP0ZW-SUB + 1; /* increment sub-script*/
  end


   /* **********************************************************************/
   /* update temp storage                                                **/
   /* **********************************************************************/


  set TA5REC empty; /* initialize record*/
  TA5REC.TA5APPID = "OP0Z"; /* application id*/
  TA5REC.TA5FNCCD = "U"; /* function code*/
  OP0ZW02.OP0ZW-TS-LGTH = 230; /* length of record*/
  TA5REC.TA5TSQIX = OP0ZW01.OP0ZW-TA5TSQIX; /* temp storage index*/

  call "TA0050" (OP0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage sub-routine*/

  if (TA5REC.TA5RTNCD == 0) /* successful update*/
    /* continue*/
  else
    set TA1REC empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-UP"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "DT-TMP-S"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "TG      "; /* location part 3*/
    TA1REC.TA1LOCAT[4] = TA5REC.TA5RTNCD; /* /location part 4*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* error key*/
    TAEREC.TAEDESC1 = "UPDATE TEMP STORAGE FAILED"; /* info message*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* sub-routine parms*/
    OP0ZS-POST-NON-DB2(); /* post a non-db2 error*/
  end


end // end OP0ZS-UPDT-TMP-STG

// write temporary storage
Function OP0ZS-WRIT-TMP-STG()


   /* **********************************************************************/
   /* write temp storage                                                 **/
   /* **********************************************************************/


  set TA5REC empty; /* initialize record*/
  TA5REC.TA5APPID = "OP0Z"; /* application id*/
  TA5REC.TA5FNCCD = "A"; /* function code*/
  OP0ZW02.OP0ZW-TS-LGTH = 230; /* length of record*/

  call "TA0050" (OP0ZW02, TA5REC) {isNoRefresh = yes, isExternal = yes}; /* temp storage sub-routine*/

  if (TA5REC.TA5RTNCD == 0) /* successful write*/
    OP0ZW01.OP0ZW-TA5TSQIX = TA5REC.TA5TSQIX; /* temp storage index*/
  else
    set TA1REC empty; /* initialize record*/
    TA1REC.TA1LOCAT[1] = "OP0ZS-WR"; /* location part 1*/
    TA1REC.TA1LOCAT[2] = "IT-TMP-S"; /* location part 2*/
    TA1REC.TA1LOCAT[3] = "TG      "; /* location part 3*/
    TA1REC.TA1LOCAT[4] = TA5REC.TA5RTNCD; /* /location part 4*/
    TA1REC.TA1TBLKE = OP0ZM001.XXXUSID1; /* error key*/
    TAEREC.TAEDESC1 = "WRITE TEMP STORAGE FAILED"; /* info message*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* sub-routine parms*/
    OP0ZS-RETN-NON-DB2(); /* RETN a non-db2 error*/
  end


end // end OP0ZS-WRIT-TMP-STG

//*** RECORD=OP0ZW01 ****
// ***********************************************************
// *                         OP0ZW01                         *
// *       working storage record for application op0z       *
// ***********************************************************
// *
// ***********************
Record OP0ZW01 type basicRecord
  5 OP0ZW-ERROR OP0ZW-ERROR ; 
  5 OP0ZW-SUB OP0ZW-SUB ; 
  5 TA5TSQIX TA5TSQIX ; 
  5 XXXUSRID XXXUSRID ; 
  5 OP0ZW-MODE OP0ZW-MODE ; 
  5 OP0ZW-UPDATE-DB OP0ZW-UPDATE-DB ; 
  5 OP0ZW-DATA-FOUND OP0ZW-DATA-FOUND ; 
  5 OP0ZW-CHG-FLAG OP0ZW-CHG-FLAG ; 
  5 OP0ZW-EOF OP0ZW-EOF ; 
  5 OP0ZW-TA5TSQIX OP0ZW-TA5TSQIX ; 
  5 OP0ZW-FIRST-SUB OP0ZW-FIRST-SUB ; 
  5 OP0ZW-FULL-PAGE-FLAG OP0ZW-FULL-PAGE-FLAG ; 
  5 OP0ZW-CURSOR-FLAG OP0ZW-CURSOR-FLAG ; 
  5 OP0ZW-FIRST-DISP-FL OP0ZW-FIRST-DISP-FL ; 
end // end OP0ZW01

//*** RECORD=OP0ZW02 ****
// *     Temporary storage record used to save a copy of the
// *     discrepancy lines on the Discrepancy Add Screen (OC0A)
// *
// *     Csp record: OC0AW02
// *
// *      file name: OC0A
// *
// *      Loaded in: OC0A
// *
// *   Displayed in: OC0A
// *
// *
// *
// ***********************
Record OP0ZW02 type basicRecord
  5 OP0ZW-TS-GRP OP0ZW-TS-GRP ; 
    10 OP0ZW-TS-LGTH OP0ZW-TS-LGTH ; 
    10 XXXUSID1 XXXUSID1 ; 
    10 XXXUSID2 XXXUSID2 ; 
    10 OP0ZW-ROW OP0ZW-ROW [30] ; 
      15 OP0ZW-SEL OP0ZW-SEL ; 
      15 XAUCD XAUCD ; 
      15 KUCCOID KUCCOID ; 
end // end OP0ZW02

// something on map changed flag
DataItem OP0ZW-CHG-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag to place cursor on screen
DataItem OP0ZW-CURSOR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data found flag
DataItem OP0ZW-DATA-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// vcpath cursor flag
DataItem OP0ZW-EOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error switch
DataItem OP0ZW-ERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1st page displayed flag
DataItem OP0ZW-FIRST-DISP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// place on screen to put cursor
DataItem OP0ZW-FIRST-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// any room to add authorizations
DataItem OP0ZW-FULL-PAGE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// mode add,copy,del ect
DataItem OP0ZW-MODE char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem OP0ZW-ROW char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select field
DataItem OP0ZW-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error switch
DataItem OP0ZW-SUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temporary storage page number
DataItem OP0ZW-TA5TSQIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage group
DataItem OP0ZW-TS-GRP char(230)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage length
DataItem OP0ZW-TS-LGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ok to update the data base
DataItem OP0ZW-UPDATE-DB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

