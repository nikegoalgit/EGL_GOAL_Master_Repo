package op0k;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
//*** PROGRAM=OP0K ****
// nike order entry - product review
// 
// overview: display product summary and allow product
//           selection from summary screen
// 
// 
// note: the field opwrec.opwrevm can be changed in this appl.
//       two cases:
// 
//        1. if pf20, add product, and in review mode 7, switch
//           to review mode 8. product header, op0h, won't let
//           you add in review mode is 7.
//        2. if in review mode 8, add product, and the user
//           selected a product to review, switch the mode to
//           7 to tell op0h to go into review mode.
// 
//    both of these cases complement each other in how to drive
//    product header. whether it be in add mode or review mode
//    ( 8 or 7 respectively).
// 
// 
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   june 86   jvande      program creation
//   2/4/87    jvande      when switch modes to 8, zero op2lnin
//                         in op0k005 flow.
// 10/21/88    gwells      rebooking - added rebook draw to
//                           comment in 005.
// 11/04/88    gwells      CHECKED FOR CALLS NEEDING NONCSP OPT
// 01/09/89    dwalke      add segmented transaction id to appl
// 04/04/90    BWATSO      Data base changes.  Changed OP1BLKCD
//                         to XBDCD in flow for 005.
// 11/14/90    dflesh      correction made for cursor to skip
//                         to next line item when selected;
//                         deleted underscores where no line
//                         item exits (op0kscb).
// 02/14/91    tfox        regen for db chgs
// 05/20/91    dflesh      log #535 expand unit price field on
//                         map.
// 04/01/94    gcalki      Log #1003 - Rename causera to
//                         ca-user-workarea-4k so it can hold
//                         opwrec which is now 3072 bytes.(ALL)
//                         Increased occurs of line items from
//                         200 to 900 (sba). Increased occurs
//                         of op0kwitt (op0kw01) from 200 to
//                         900.
// 06/01/95    pstroe      added currency code to the map for
//                         the Canada project.  all changes are
//                         marked with "CANA".
// 03/17/96    rmcali      added code to test for nike bulk 'n'
// 08/28/97    wleong      changes to restrict one product per
//                         header for msr order
// 10/23/97    wleong      include cu orders for msr edits.
// 03/16/00    nkathi            SPAIN TRADE PROJECT
// TT#4654                 Inserted statement group
//                         OP0KS-SPAIN-CHECK to validate all
//                         products for SPAI/CNRY compliance.
//                         Added record OP10REC to pass
//                         variables to OP6410(NIKEBOTH).
//                         Flag(Y/N) will be displayed on map
//                         OP0KM005 depending whether the
//                         product is SPAI/CNRY compliant.
//                         No flag will be displayed for non
//                         SPAI/CNRY country.
//                         Modified stmt grps op0k001, op0kscb.
// *********************
Program OP0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  OP0KW01 OP0KW01; // record
  OP10REC OP10REC; // record
  OP1REC OP1REC; // record
  OP2REC OP2REC; // record
  OP3REC OP3REC; // record
  OP8REC OP8REC; // record
  OPAREC OPAREC; // record
  OPBREC OPBREC; // record
  OPWREC OPWREC; // record
  SQLCA SQLCA; // record
  SYCREC SYCREC; // record
  TA1REC TA1REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XBDTBL {deleteAfterUse = yes}; // table
  use OP0KM.OP0KM005 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OP0K001: OP0K001();




    goto OP0K005;





    OP0K005: OP0K005();
     /* *************************************************************/
     /* *************************************************************/



    if (OPAREC.OPAERR == "Y") /* errors found?*/
      goto OP0K005; /* branch to converse*/
    end



    if (converseVar.eventKey is pf7 /* if scroll backward*/
     || converseVar.eventKey is pf8) /* or scroll forward*/
      goto OP0K005; /* reconverse*/
    end






     /* note: if pf20, add product, could be in revm 7. op0h*/
           /* won't let revm 7 enter anything. thus if ph20*/
           /* from this appl, switch revm to 8, add product.*/
           /* this will ensure that prd header and detail will*/
           /* allow the user to add a product.*/

    if (converseVar.eventKey is pf20) /* if add a product*/
      if (OPWREC.OPWREVM == 7)
        OPWREC.OPWREVM = 8; /* set rev mode to add product*/
        OPWREC.OP2LNINB = 0; /* init line item nbr field*/
      end
      OPWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OP0H";
      transfer to program "OP0H" passing COMMAREA; /* call single product add appl*/
      OPWREC.OPWSGRP = COMMAREA.CA-USER-WORKAREA-4K;
      goto OP0K005;
    end




      /* if user has selected a product to review, need to*/
      /* check the opwrec.opwrevm field. if came back from*/
      /* add product, 8, need to switch mode to 7, review,*/
      /* so that product header, op0h, will review and not*/
      /* go into add mode as revm 8 dictates.*/


    if (converseVar.eventKey is enter
     && OP0KWSLF == "Y")
      if (OPWREC.OPWREVM == 8)
        OPWREC.OPWREVM = 7; /* reset mode to do review*/
      end
      OPWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OP0H";
      transfer to program "OP0H" passing COMMAREA;
    end




           /* check nike form flow*/

    if (OPWREC.OPWSFLOW == "1")
      OPWREC.OP1GROUP = OP1REC.OP1GROUP;
      COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
      COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
      COMMAREA.CACURRAP = "OP0J";
      transfer to program "OP0J" passing COMMAREA; /* go to accept order*/
    end





           /* check nike order desk flow*/

    if (OPWREC.OPWSFLOW == 2)
      if (OPWREC.OPWREVM == 7 /* if in review mode*/
       || OPWREC.OPWREVM == 8) /* or in add product, go back to accept order*/
        OPWREC.OP1GROUP = OP1REC.OP1GROUP;
        COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CACURRAP = "OP0J";
        transfer to program "OP0J" passing COMMAREA; /* go to accept order*/
      else /* go to order header*/
        OPWREC.OP1GROUP = OP1REC.OP1GROUP;
        COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
         /* if order is a cust draw, go to accept order*/
        if (OP1REC.XBDCD in XBDTBL.XBDCD)
          if (XBDTBL.XBDRWOFL[sysVar.arrayIndex] == "Y" /* if a draw*/
           && XBDTBL.XBDSETFL[sysVar.arrayIndex] == "N" /* and not a set-aside type*/
           && XBDTBL.XBDXRFCD[sysVar.arrayIndex] != "R" /* and not a rebook draw*/
           && XBDTBL.XBDXRFCD[sysVar.arrayIndex] != "N") /* and not a nike draw*/
            COMMAREA.CACURRAP = "OP0J";
            transfer to program "OP0J" passing COMMAREA; /* go to accept order*/
          end
        end
        COMMAREA.CACURRAP = "OP0E";
        transfer to program "OP0E" passing COMMAREA; /* go to header entry*/
      end
    end




  end // end main
end // end OP0K

// program init
Function OP0K001()



     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* **********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value


     /* initialize records*/

  set OP1REC empty;
  set OP2REC empty;
  set TA1REC empty;
  set SQLCA empty;
  set OP0KW01 empty;
  set SYCREC empty;
  set OPWREC empty;
  set OPAREC empty;
   /* TT#4654  SPAIN CHANGES Begin ******************/
  set OP10REC empty;
   /* TT#4654  SPAIN CHANGES End ***************** 03/16/00*/





      /* retrieve user common area*/

  OPWREC.OPWSGRP = COMMAREA.CA-USER-WORKAREA-4K;
  OP1REC.OP1GROUP = OPWREC.OP1GROUP;





  XSENTRY(); /* check csp security*/

   /* GET ORDER*/

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  COMMAREA.CAEZSAP = sysVar.transactionID;
  COMMAREA.CAEZSG12 = "OP";
  COMMAREA.CAEZSG4 = "K";
  sysVar.transactionID = COMMAREA.CAEZSAP;

   /* *************************************************************/



  OP0KSAA(); /* check order entry security*/


      /* initialize map*/

  OPAREC.OPASEP1 = ".";
  OPAREC.OPASEP2 = ".";
  OP0KW01.OP0KWSP1 = "-";
  OP0KW01.OP0KWSP2 = "-";
  OPAREC.OPACUCO = OP1REC.KUCCOID;
  OPAREC.OPACUSR = OP1REC.KUMSTRID;
  OPAREC.OPACUDP = OP1REC.XNXCD;



      /* build line item table*/

  OP0KSBA();




      /* add up total dollars and units for all suborders*/

  OP0KSBB();



      /* load the first set of 15 line items to the map*/


  OP0KSCA();





   /* *************************************************************/
end // end OP0K001

// converse map and edit data
Function OP0K005()

      /* *********************************************************/
      /* * this process converses the map, edits the entered    **/
      /* * fields and if possible, xfer's to the requested      **/
      /* * application                                          **/
      /* *********************************************************/




      /* force segmented converse execution mode*/

  converseVar.segmentedMode = 1; /* force segmented execution mode*/



   /* *************************************************************/
  converse OP0KM005 ;
   /* *************************************************************/



      /* clear (reset fields)*/

  OP0KM005.VAGen_EZEMSG = " "; /* clear err msg*/
  OPAREC.OPAERR = "N"; /* clear error flag*/


      /* check and process valid aid key requests*/

      /* enter  - continue processing*/
        /* pf7  - page back*/
        /* pf8  - page forward*/
        /* pf20 - add product*/


  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf7)
      OP0KSDA(); /* page backward*/
      exit stack;
    else
      if (converseVar.eventKey is pf8)
        OP0KSEA(); /* page forward*/
        exit stack;
      else
        if (converseVar.eventKey is pf20)
          if (OP1REC.XPACD == "MS" || 
          OP1REC.XPACD == "CU") /* include cu order for msr edits*/
            OP0KS-CHK-MSR-ITM();
            if (OP0KW-MSITM-CNT >= 1)
              converseLib.validationFailed(945);
              OPAREC.OPAERR = "Y"; /* set error flag*/
            else
              exit stack;
            end
          end
          exit stack;
        else
          converseLib.validationFailed(2);
          OPAREC.OPAERR = "Y"; /* set error flag*/
          exit stack;
        end
      end
    end
  end




  OP0KSFA(); /* test for select codes*/




   /* *************************************************************/
end // end OP0K005

// get items for msr edit
Function OP0KS-CHK-MSR-ITM()

      /* this is mainly to check how many items there are for this*/
      /* msr order.  only one item per msr order is allowed.*/

  OP8REC.OP8TASK = "SS";
  OP8REC.OP8LOCAT[3] = "OP0K-MS";
  OP8REC.OP8LOCAT[4] = "R-ITEMS";
  OP8REC.OP8MAP = " ";

  OP3REC.OP1PARTN = OP1REC.OP1PARTN;
  OP3REC.OP1CUOID = OP1REC.OP1CUOID;
  OP3REC.OP1NORID = 0; /* ALL SUBORDERS*/
  OP3REC.OP2LNINB = 0;

  OP0KW-MSITM-CNT = 0; /* init item counter*/

  call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes}; /* select all line-items*/

  if (OPBREC.OPBSZRC == 0)
    OP0KS-FETCH-MSITM(); /* now read the items*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    COMMAREA.CATOAP = "MN0M";
    sysVar.transferName = "MN0M";
    transfer to transaction sysVar.transferName passing COMMAREA;
  end

end // end OP0KS-CHK-MSR-ITM

// get items for msc edits
Function OP0KS-FETCH-MSITM()

      /* get the next line item for the sub-order*/

  OP8REC.OP8LOCAT[1] = "OP0K005";
  OP8REC.OP8LOCAT[2] = "OP0KS-G";
  OP8REC.OP8LOCAT[3] = "ET-ITM ";
  OP8REC.OP8LOCAT[4] = " ";

  while (OPBREC.OPBSZRC == 0) /* until end of file*/

    OP8REC.OP8TASK = "SN";
    call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes};

    if (OPBREC.OPBSZRC == 0)
      OP0KW-MSITM-CNT = OP0KW-MSITM-CNT + 1; /* increment itm counter*/
    else
      if (OPBREC.OPBSZRC == 1) /* if no more line-items*/
         /* / next sentence;*/
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* synpoint rollback*/
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
        COMMAREA.CATOAP = "MN0M";
        sysVar.transferName = "MN0M";
        transfer to transaction sysVar.transferName passing COMMAREA;
      end
    end
  end

     /* close item cursor*/



  OP8REC.OP8TASK = "CS";
  call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes};

  if (OPBREC.OPBSZRC == 0)
     /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    COMMAREA.CATOAP = "MN0M";
    sysVar.transferName = "MN0M";
    transfer to transaction sysVar.transferName passing COMMAREA;
  end


end // end OP0KS-FETCH-MSITM

// Spain/canary validation
Function OP0KS-SPAIN-CHECK()
   /* ************************************************************/
   /* TT#4654        03/16/00     NKATHI                       **/
   /* This statement group calls NIKEBOTH(op6410) to check     **/
   /* the products for SPAIN/CANARY compliance.                **/
   /* set flag to 'Y' if produt is compliant                   **/
   /* set flag to 'N' if product is non compliant              **/
   /* move spaces if product is for country other than         **/
   /* SPAIN/CANARY.                                            **/
   /* ************************************************************/
   /* TT#4654  SPAIN CHANGES Begin ******************/
  set OP10REC empty;
  OP10REC.OP10-PASSING-APPL = "OP0K"; /* passing application*/
  OP10REC.OP1CUOID = OP1REC.OP1CUOID; /* order id*/
  OP10REC.KUCCOID = OP1REC.KUCCOID; /* customer company id*/
  OP10REC.KUMSTRID = OP1REC.KUMSTRID; /* customer store id*/
  OP10REC.OP11TMSF = OP1REC.OP11TMSF; /* one time ship flag*/
  OP10REC.OP1SGPAO = OP1REC.OP1SGPAO; /* ship grp override indicator*/
  OP10REC.OP1SHAID = OP1REC.OP1SHAID; /* ship grp address id*/
  OP10REC.SY1STNBR = OP2REC.SY1STNBR; /* style number*/
  OP10REC.XGPCD = OP2REC.XGPCD; /* GPC code*/
  OP10REC.OP10-RETURN-CODE = "99"; /* initialise rtn code*/
  call "OP6410" (OP10REC) {isNoRefresh = yes, isExternal = yes}; /* NIKE BOTH Spain/canary*/
                                  /* validation*/

  if (OP10REC.OP10-RETURN-CODE == "00") /* product is Spain/canary compliant*/
    OP0KM005.OP2KSTYF[OP0KWIX1] = "Y";
  else
    if (OP10REC.OP10-RETURN-CODE == "01") /* country code is not*/
                                  /* spain/canary*/
      OP0KM005.OP2KSTYF[OP0KWIX1] = "  ";
    else
      if (OP10REC.OP10-RETURN-CODE == "02") /* product is Spain/canary*/
                                  /* noncompliant*/
        OP0KM005.OP2KSTYF[OP0KWIX1] = "N";
                                  /* SET OP0KM005.OP2KSTYF(OP0KWIX1)*/
                                  /* MODIFIED,BRIGHT;/*SBHARA MODIFIED*/
        set OP0KM005.OP2KSTYF[OP0KWIX1] red;
      else
        set TA1REC empty;
        TA1REC.TA1PGMAP = "OP0K"; /* Program application*/
        TA1REC.TA1MAP = "OP0KM005"; /* mapname*/
        TA1REC.TA1LOC = "OP0KS-SPAIN-CHECK"; /* SRGP name*/
        XSOPS-OP6410-ERRTN(); /* error routine*/
      end
    end
  end
   /* TT#4654  SPAIN CHANGES End ******************/
end // end OP0KS-SPAIN-CHECK

// check valid entry
Function OP0KSAA()




         /* check order entry security*/


  if (OPWREC.OPWINIT != "OP0")
    transfer to program "OP0A" passing COMMAREA;
    exit program;
  end






end // end OP0KSAA

// build line item table
Function OP0KSBA()




        /* this statement group builds the working storage*/
        /* line item table from the opws record.*/





  OP0KW01.OP0KWIX1 = 1; /* initilaize the input index*/
  OPAREC.OP1NORID = 0;
  OP0KW01.OP0KWIX2 = 1; /* initilaize the output index*/
  OP0KW01.OP0KWITT = " "; /* init the line item table*/




  while (OP0KW01.OP0KWIX1 < 901 /* don't read past end of tbl*/
   && OPWREC.OPWHEXNO[OP0KWIX1] != "0") /* while still data to read*/
    if (OPWREC.OPWSELCD[OP0KWIX1] != "R" /* item not rejected*/
     && OPWREC.OPWSELCD[OP0KWIX1] != "X") /* item not cancelled*/
      OP0KWSLC[OP0KWIX2] = OPWREC.OPWSELCD[OP0KWIX1];
      OPAREC.OP1NORID = 0;
      OPAREC.OPWHEXNO = OPWREC.OPWHEXNO[OP0KWIX1];
      OP0KW01.OP1NORID[OP0KWIX2] = OPAREC.OP1NORID;
      OP0KW01.OP2LNINB[OP0KWIX2] = OP0KWIX1;
      OP0KWIX2 = OP0KWIX2 + 1; /* increment the index*/
    else
       /* next sentence*/
    end
    OP0KWIX1 = OP0KWIX1 + 1; /* increment the index*/
  end



  OP0KW01.OP0KWIX2 = OP0KW01.OP0KWIX2 - 1;
  OP0KW01.OP0KWSIZ = OP0KW01.OP0KWIX2; /* save item table size*/







end // end OP0KSBA

// add up total dollars and units
Function OP0KSBB()






       /* add up total dollars and units for all sub orders*/






  OP0KW01.OP1OVALU = 0; /* zero total dollars*/
  OP0KW01.OP0KWTUN = 0; /* zero total units*/
  OP0KWIX1 = 1; /* init the table index*/

  while (OP0KWIX1 <= 10)
    OP0KW01.OP1OVALU = OP0KW01.OP1OVALU + OPWREC.OP1OVALU[OP0KWIX1];
    OP0KW01.OP0KWTUN = OP0KW01.OP0KWTUN + OPWREC.OP1OTUNT[OP0KWIX1];
    OP0KWIX1 = OP0KWIX1 + 1; /* increment the index*/
  end




  OP0KM005.OP0KMTUN = OP0KW01.OP0KWTUN;
  OP0KM005.OP1OVALU = OP0KW01.OP1OVALU;




end // end OP0KSBB

// setup first set of line items
Function OP0KSCA()





      /* initial load of the map with 15 line items*/



       /* if we are returning from prd detail, op0i, and*/
       /* if opws.oplninb has a value in it use it to*/
       /* find the starting position in the table for*/
       /* displaying the next set of items on the map.*/

  if (OPWREC.OP2LNINB > 0
   && COMMAREA.CAFROMAP == "OP0I")
    OP0KWIX1 = 1;
    while (OP0KWIX1 <= OP0KWSIZ)
      if (OPWREC.OP2LNINB == OP0KW01.OP2LNINB[OP0KWIX1])
        move OP0KWIX1 to OP0KWTOP withV60Compat;
        OP0KWIX1 = OP0KWIX1 + OP0KWSIZ;
      end
      OP0KWIX1 = OP0KWIX1 + 1;
    end
  else
    OP0KWTOP = 1;
  end


  OPWREC.OP2LNINB = 0;




  OP0KSCB(); /* get and load prd info to map*/






end // end OP0KSCA

// load map information
Function OP0KSCB()



            /* this routine loads field info for the 15 products*/
                       /* to be displayed on the map*/


            /* first the process clears the map and resets the*/
            /* map header fields. then as long as there are more*/
            /* line items, we read the op2rec. then using the*/
            /* style info from op2rec we read sycrec. given these*/
            /* two reads we have the info needed to fill the map.*/
            /* we do these two reads for each line item to be*/
            /* displayed.*/


  set OP0KM005 initial;

   /* if order has no prds entered, issue message*/

  if (OPWREC.OPWPITM == 0)
    converseLib.validationFailed(130);
  end



   /* set up map header info*/

  OP0KM005.OP0KMTUN = OP0KW01.OP0KWTUN; /* move tot units*/
  OP0KM005.OP1OVALU = OP0KW01.OP1OVALU;
  OP0KM005.OP0KMCNM = OPAREC.OPACUNO;
  OP0KM005.KUMSTRNM = OPWREC.KUMSTRNM;
  OP0KM005.OP0KMDTE = VGVar.currentShortGregorianDate;
  OP0KM005.OP0KMRVN = "01";

  if (OP0KM005.OP1OVALU > 0) /* Canada change*/
    OP0KM005.ZFC-CRCY-CD = OP1REC.ZFC-CRCY-CD; /* currency code*/
  end /* CANA*/

  if (OP1REC.OP1ORDBY == " ") /* if no ordered by*/
    set OP0KM005.OP0KMOBL protect, invisible; /* dark taken by label*/
    set OP0KM005.OP1ORDBY protect, invisible; /* dark taken by field*/
  else
    OP0KM005.OP1ORDBY = OP1REC.OP1ORDBY;
  end







     /* now start the map loop*/

  OP0KWIX1 = 1;
  move OP0KWTOP to OP0KWIX2 withV60Compat;


  while (OP0KWIX1 <= 15
   && OP0KWIX2 <= OP0KWSIZ)
    OP0KM005.OP0KMSEL[OP0KWIX1] = OP0KW01.OP0KWSLC[OP0KWIX2];
    OP2REC.OP1CUOID = OP1REC.OP1CUOID;
    OP2REC.OP1PARTN = OP1REC.OP1PARTN;
    OPAREC.OPASUB = OP0KW01.OP1NORID[OP0KWIX2];
    OP2REC.OP1NORID = OPAREC.OPASUB;
    OPAREC.OPACYMD = OPWREC.OP1CUNDT[OPASUB];
    OPAREC.OPAFYY = OPAREC.OPACYY;
    OPAREC.OPAFMM = OPAREC.OPACMM;
    OPAREC.OPAFDD = OPAREC.OPACDD;
    OP0KM005.OP1CUNDT[OP0KWIX1] = OPAREC.OPAFDT;
    OP0KM005.XWHCD[OP0KWIX1] = OPWREC.XWHCD[OPASUB];
    OP2REC.OP2LNINB = OP0KW01.OP2LNINB[OP0KWIX2];
    call "IO0440" ("S ", SQLCA, OP2REC) {isNoRefresh = yes, isExternal = yes};
    if (SQLCA.VAGen_SQLCODE == 0)
      OP0KM005.OP2TORGQ[OP0KWIX1] = OP2REC.OP2TONOQ;
      OP0KM005.OP2AUPRC[OP0KWIX1] = OP2REC.OP2AUPRC;
      if (OP2REC.OP2PRCOF == "Y")
        OP0KM005.OP2PRCOF[OP0KWIX1] = "*";
      else
        OP0KM005.OP2PRCOF[OP0KWIX1] = " ";
      end
      OP0KM005.OP2CGPCD[OP0KWIX1] = OP2REC.OP2CGPCD;
      /* MOVE OP2REC.OP2KSTYF TO OP0KM005.OP2KSTYF(OP0KWIX1);*/
      OP0KM005.XQACD[OP0KWIX1] = OP2REC.XQACD;
      if (OP2REC.KUIPRDID != " ")
        OP0KM005.OP0KMPRD[OP0KWIX1] = OP2REC.KUIPRDID;
      else
        OP0KW01.SY1STNBR = OP2REC.SY1STNBR;
        OP0KW01.SY2CLRID = OP2REC.SY2CLRID;
        OP0KW01.XDMCD = OP2REC.XDMCD;
        OP0KM005.OP0KMPRD[OP0KWIX1] = OP0KW01.OP0KWPRD;
      end
      move OP2REC to SYCREC withV60Compat;
      call "IO0560" ("S ", SQLCA, SYCREC) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 0)
        OP0KM005.SY1SSTNM[OP0KWIX1] = SYCREC.SY1SSTNM;
        OP0KM005.SY2CLRAB[OP0KWIX1] = SYCREC.SY2CLRAB;
      else
        TA1REC.TA1TYPE = "DB2 ";
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1PGMNM = "OP0K    ";
        TA1REC.TA1LOCAT[1] = "S       ";
        TA1REC.TA1LOCAT[2] = "OP0KSCB ";
        TA1REC.TA1LOCAT[3] = "IO0560  ";
        TA1REC.TA1LOCAT[4] = "        ";
        TA1REC.TA1MAP = "OP0KM005";
        TA1REC.TA1DBASE = "SYCREC  ";
        TA1REC.TA1TBLVU = "VCOLOR02";
        TA1REC.TA1TBLKE = SYCREC.SYCKEY;
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        converseLib.validationFailed(131);
        OPAREC.OPAERR = "Y";
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear ws*/
        XSPF4();
      end
      /* TT#4654  SPAIN CHANGES Begin ******************/
      OP0KS-SPAIN-CHECK(); /* validate product for SPAI/CNRY*/
      /* TT#4654  SPAIN CHANGES End ***************** 03/16/00*/
      OP0KWIX1 = OP0KWIX1 + 1;
      OP0KWIX2 = OP0KWIX2 + 1;
    else
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "OP0K    ";
      OP0KW01.OP0KPART = OP2REC.OP1PARTN;
      OP0KW01.OP0KCUST = OP2REC.OP1CUOID;
      OP0KW01.OP0KNIKE = OP2REC.OP1NORID;
      OP0KW01.OP0KLINE = OP2REC.OP2LNINB;
      TA1REC.TA1TBLKE = OP0KW01.OP0KOID;
      TA1REC.TA1LOCAT[1] = "S       ";
      TA1REC.TA1LOCAT[2] = "OP0KSCB ";
      TA1REC.TA1LOCAT[3] = "IO0440  ";
      TA1REC.TA1LOCAT[4] = "        ";
      TA1REC.TA1MAP = "OP0KM005";
      TA1REC.TA1DBASE = "OP2REC  ";
      TA1REC.TA1TBLVU = "VITEM001";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      converseLib.validationFailed(131);
      OPAREC.OPAERR = "Y";
      COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear ws*/
      XSPF4();
    end
  end





  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
   /* release data base resources*/




   /* protect the unused select fields*/


  while (OP0KW01.OP0KWIX1 <= 15)
    set OP0KM005.OP0KMSEL[OP0KWIX1] protect, invisible;
    OP0KW01.OP0KWIX1 = OP0KW01.OP0KWIX1 + 1;
  end







end // end OP0KSCB

// backward scroll for product id
Function OP0KSDA()



      /* op0ksda scroll backward*/



  if (OP0KWTOP == 1) /* and if at top of table*/
    converseLib.validationFailed(192); /* no scroll back msg*/
    OPAREC.OPAERR = "Y";
    return;
  end




  OP0KWTOP = OP0KWTOP - 15; /* decrement cursor position for test*/
  if (OP0KWTOP <= 0) /* if no more items in table*/
    OP0KWTOP = 1; /* start display from top of table*/
  end






  OP0KSCB(); /* get and load prd info to map*/





end // end OP0KSDA

// forward scroll for product id
Function OP0KSEA()



      /* op0ksea scroll forward*/



  if (OP0KWSIZ <= 15) /* if table has less then 15 elements*/
    converseLib.validationFailed(191);
    OPAREC.OPAERR = "Y";
    return;
  end



  OP0KWTOP = OP0KWTOP + 15; /* increment cursor position for test*/
  if (OP0KWTOP > OP0KWSIZ) /* if no more items in table*/
    OP0KWTOP = OP0KWTOP - 15; /* reset top of map pointer*/
    converseLib.validationFailed(191);
    OPAREC.OPAERR = "Y";
    return;
  end





  OP0KSCB(); /* get and load prd info to map*/







end // end OP0KSEA

// test user selection
Function OP0KSFA()




            /* test to see which product was selected*/
            /* while ensuring that only one product was*/
            /* selected.*/


  OP0KWSLF = "N"; /* init the selection flag*/
  move OP0KWTOP to OP0KWIX1 withV60Compat;
  OP0KWIX2 = 1;




  while (OP0KWIX2 <= 15)
    if (OP0KM005.OP0KMSEL[OP0KWIX2] == "S")
      if (OP0KWSLF != "Y")
        OP0KWIX1 = OP0KWIX1 + OP0KWIX2 - 1;
        OP0KWSLF = "Y";
      else
        converseLib.validationFailed(193);
        OPAREC.OPAERR = "Y";
        exit stack;
      end
    end
    OP0KWIX2 = OP0KWIX2 + 1;
  end




  if (OP0KWSLF == "Y") /* if got a selected product*/
    OPWREC.OP2LNINB = OP0KW01.OP2LNINB[OP0KWIX1];
                                   /* save line itm num*/
  else
    OPWREC.OP2LNINB = 0;
  end






end // end OP0KSFA

//*** RECORD=OP0KW01 ****
// order entry common work field working storage.  these are
// common work areas used by most of the order entry programs.
// these fields are not kept globally as the opws record is,
// and will go away when the program is exited.
// ***********************
Record OP0KW01 type basicRecord
  10 OP0KWITT OP0KWITT [900] ; 
    15 OP0KWSLC OP0KWSLC ; 
    15 OP1NORID OP1NORID ; 
    15 OP2LNINB OP2LNINB ; 
  10 OP0KWIX1 OP0KWIX1 ; 
  10 OP0KWIX2 OP0KWIX2 ; 
  10 OP0KWIX3 OP0KWIX3 ; 
  10 OP0KWTOP OP0KWTOP ; 
  10 OP0KWSIZ OP0KWSIZ ; 
  10 OP1OVALU OP1OVALU ; 
  10 OP0KWTUN OP0KWTUN ; 
  10 OP0KWSLF OP0KWSLF ; 
  10 OP0KWPRD OP0KWPRD ; 
    15 SY1STNBR SY1STNBR ; 
    15 OP0KWSP1 OP0KWSP1 ; 
    15 SY2CLRID SY2CLRID ; 
    15 OP0KWSP2 OP0KWSP2 ; 
    15 XDMCD XDMCD ; 
  10 OP0KOID OP0KOID ; 
    15 OP0KPART OP0KPART ; 
    15 OP0KCUST OP0KCUST ; 
    15 OP0KNIKE OP0KNIKE ; 
    15 OP0KLINE OP0KLINE ; 
  10 OP0KW-MSITM-CNT OP0KW-MSITM-CNT ; 
end // end OP0KW01

// customer order id
DataItem OP0KCUST num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// order line number
DataItem OP0KLINE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nike order id
DataItem OP0KNIKE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric order id
DataItem OP0KOID char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// partition char
DataItem OP0KPART num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// msr item count
DataItem OP0KW-MSITM-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item array
DataItem OP0KWITT char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws index number 1
DataItem OP0KWIX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws index number 2
DataItem OP0KWIX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws index number 3
DataItem OP0KWIX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws product number
DataItem OP0KWPRD char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item tbl size
DataItem OP0KWSIZ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item select code
DataItem OP0KWSLC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select code flag
DataItem OP0KWSLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// separator 1
DataItem OP0KWSP1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// separator 2
DataItem OP0KWSP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cursor position
DataItem OP0KWTOP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-ord-tot-units
DataItem OP0KWTUN num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

