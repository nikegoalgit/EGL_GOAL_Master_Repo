package op0g;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import dg.common.*;
import ku.common.*;
import ob.common.*;
import op.common.*;
import pc.common.*;
import pw.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import ta.common.*;
import tf.common.*;
//*** PROGRAM=OP0G ****
// nike order entry - allocation parameters
// 
// overview: display and allow override to allocation parms
// 
// date created: 06/06/86
//       author: david smith
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   01-15-87     das      allow split comm. if sales office 09
// 
//   02-17-87     lcr      changed op0gseh - op2hchgo now set
//                         to 'n' or 'y'.  was passing weird
//                         stuff... like 'y' when it should
//                         have been a 'n'.
//   03/23/87     jdv      changed smm, subscripted into op3rec
//                         instead of opwrec for xhd handling.
//   06-22-87     oab      changed location of picking cd on
//                         screen.  adjusted edit sequence for
//                         this.  changed map revision # to 2.
//   09-11-87     t.fox    added logic to op0gsmm,smr,sod to
//                         handle traffic alert logic. alos add
//                         traffic alert field to map.
//   10-29-87     t.fox    unprotect expedite flag on map
//                         edit expedite flag y or n only in
//                         op0gseo.
//   11/25/87     jvande   hooked up whs 02 for picking.
//   11/03/88     jwood    noncsp opt added to calls
//   11/21/88     obecke   issue warning msg #435 if both a
//                         pick prty code of 10 or 20 and a
//                         don't ship before date exist.
//   01/09/89     dwalke   add segmented transaction id to appl
//   02/24/89     obecke   replace default with op1rec value
//                         for allow cancel flag.  sod.  #140
//                         do not allow picking code 40 for
//                         warehouse 32 - sp1. #159
//   05/10/89     jbecke   changes to op0gm001 needed because
//                         of database changes.
//   07/19/90     mblail   move handling code to map, op0gsmh.
//   08/29/90     mgatre   exit split commissions logic if rep
//                         and agency do not exist - op0gssc
//   12/17/90     dflesh   added logic for whse '51' in sp1.
//                         log #469.
//   02/14/91     tfox     regen for db chgs
//   04/03/91     tfox     menu services. m001,sdh,seh,seo,sif,
//                         smh,smm,smr,sod,soe,sp3(new).
//   05/13/91     gwells   menu of services - add label code to
//                         map - m001,seo,smm,smr,sod,sp4
//   06/11/91     dflesh   db chgs - delete split comm logic.
//                         deleted sdc, smc, sec, sif.
//                         code chgs to srm, smm, seo, smr, sp4
//                         and renamed map fields (to kucvndfl,
//                         kunmapct, pwrlbabr, pwrlbcd).
//                         deleted split comm fields off map.
//   08/16/91     JLoyer   Log #675 - Don't allow customer
//                         specified pack-codes on order types
//                         that can be allocated on-line.
//                         Changed OP0GSP3, added OP0GSP5.
//   10/09/91     craine   db changes added xgpcd to xhdtbl for
//                         key, seh, shm, smm, w01
//   02/04/92     trober   changed sqlcode checking in sp4 to
//                         insure the codes is active and added
//                         sqlcode +100, -911 and other.
//   03/12/92     JLoyer   DB2 chgs: removed op1rplor.
//                         smm, smr, op0gm001.
//   04/14/92     bbake2   removed sm5rec (unused) from tables
//                         and additional records list
//   05/01/93     dlegg    Log #937. NSG changes. Add check for
//                         whse 25 in SP1.
//   12/13/93     craine   Log #971 - add pack code edits for
//                         musical size run/direct ship
//   04/01/94     gcalki   Log #1003 - renamed causera to
//                         ca-user-workarea-4k so it can hold
//                         opwrec which is now 3072 bytes.(ALL)
//   06/23/95     pstroe   Canada - Modified handling code,
//                         "ship with order nbr", and pick code
//                         logic.  See statment groups OP0GSEH,
//                         OP0GSES, OP0GSP1.
//   10/21/96     SLARSE   ALL AREAS - Default all Same Day and
//                         rush orders to Traffic Alert "Y"
//                         (Apparel only:  P1 orders default Y)
//   08/27/97     jnaemu   add changes for whse 27
//   09/12/97     wleong   added changes to restrict one item
//                         per msr order. op0gs-msr-xpacd.
//   10/23/97     wleong   include cu orders for msr edits.
//                         op0gs-msr-xpacd. call op3850 to
//                         validate msr rules if pack code of
//                         ms or cu is assigned.
// y2kfix 11/27/97 pharwo  year 2000 changes to OP0GSEA.
//        07/08/99 OENFIE  <<< Multiple GPC Project changes:>>>
//                         Changed OP0GSOD & OP0GSEO to include
//                         GPC '02' & WHSE '51' condition in
//                         the setting of the Traffic Alert Flg
//                         to 'Y'.  This is to handle Equipment
//                         products which is GPC '02' coming
//                         out of WHSE '51'.
// 12/01/00 Rshaik  Picking code 20 is not valid for any XWH 07
// TT#9179          Order.An error message will be generated in
//                  the above condition for any warehouse 07
//                  order. Please look for changes in OP0GSP1.
//   07/11/01     kshiva   TT#12895 carton ratio edit for DS
//   TT#12895              orders. Changes are made to include
//                         Direct ship code to the passing
//                         record used to call the sub program
//                         OP3850.
//                         Search for TT#12895 to find changes.
// *********************
Program OP0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "OP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  OP0GW01 OP0GW01; // record
  OP1REC OP1REC; // record
  OP3REC OP3REC; // record
  OP8REC OP8REC; // record
  OPAREC OPAREC; // record
  OPBREC OPBREC; // record
  OPMZREC OPMZREC; // record
  OPWREC OPWREC; // record
  PWRREC PWRREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XPATBL {deleteAfterUse = yes}; // table
  use XHDTBL {deleteAfterUse = yes}; // table
  use XOCTBL {deleteAfterUse = yes}; // table
  use XOTTBL {deleteAfterUse = yes}; // table
  use XPKTBL {deleteAfterUse = yes}; // table
  use XPPTBL {deleteAfterUse = yes}; // table
  use XRTTBL {deleteAfterUse = yes}; // table
  use OP0GM.OP0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OP0G001: OP0G001();
    goto OP0G005;
    OP0G005: OP0G005();


    if (OPAREC.OPAERR == "Y") /* errors found?*/
      OPAREC.OPAERR = "N"; /* reset error flag*/
      if (converseVar.validationMsgNum == 119)
        OPAREC.OPAWARNF = "Y";
                                     /* set message flag to show warning once*/
      end
    else
      set OP0GM001.XPPCD cursor;
    end


    goto OP0G005; /* branch to converse*/


  end // end main
end // end OP0G

// Program Initialization
Function OP0G001()
     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - checks entry security                           **/
     /* *     - moves the working storage and order processing  **/
     /* *       record from the incoming common area            **/
     /* *     - initializes the map fields                      **/
     /* *     - determines the 'source of the flow' (whether    **/
     /* *       from order entry screen or from accept order)   **/
     /* *     - darkens specific fields based upon the source   **/
     /* *       of the flow                                     **/
     /* **********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

      /* check entry security*/

  XSENTRY();


   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  COMMAREA.CAEZSAP = sysVar.transactionID;
  COMMAREA.CAEZSG12 = "OP";
  COMMAREA.CAEZSG4 = "G";
  sysVar.transactionID = COMMAREA.CAEZSAP;

   /* *************************************************************/

      /* retrieve user common area*/

  set OPWREC empty;
  set OPAREC empty;
  set OP0GW01 empty;

  XSOPS01(); /* check order entry security*/


  OP0GSPI(); /* program initialization*/


  OP0GSMI(); /* initialize map*/


  OP0GSMH(); /* move handling code to map*/


  OP0GM001.OPMRVN = 2; /* set revision number*/


  if (OPWREC.OPWREVM == 0) /* indicates 'order entry mode'*/
    OP0GSOE();
  else /* greater than zero indicates 'review mode'*/
    OP0GSRM();
  end


   /* *************************************************************/
end // end OP0G001

// Miscellaneous Order Header
Function OP0G005()
     /* **********************************************************/
     /* * this process performs the following functions:        **/
     /* *     - presents the miscellaneous order header for     **/
     /* *       data entry or modification                      **/
     /* *     - edits the data entered and identifies any       **/
     /* *       data errors                                     **/
     /* *     - flows to the single/multiple product header     **/
     /* *       screen or to the accept order screen depending  **/
     /* *       on the source of the flow to this process       **/
     /* *                                                       **/
     /* **********************************************************/




  converse OP0GM001 ;
  if (converseVar.eventKey is enter) /* perform data edit routine and transfer*/
    OP0GSET();
  else
    if (converseVar.eventKey is pf12) /* perform edit routine only*/
      OP0GSEO();
    else
      if (converseVar.eventKey is pf15) /* transfer to the special instructions*/
        if (OPWREC.OPWREVM == 0)
          if (COMMAREA.CAFROMAP == "OP0F")
            OPAREC.OPAERR = "Y";
            converseLib.validationFailed(8);
          else
            OP0GSSI();
          end
        else
          OP0GSSI();
        end
      else
        OPAREC.OPAERR = "Y";
        converseLib.validationFailed(8);
      end
    end
  end

end // end OP0G005

// get items for msr edit
Function OP0GS-CHK-MSR-ITM()

      /* this is mainly to check how many items there are for this*/
      /* msr order.  only one item per msr order is allowed.*/

  OP8REC.OP8TASK = "SS";
  OP8REC.OP8LOCAT[3] = "OP0G-MS";
  OP8REC.OP8LOCAT[4] = "R-ITEMS";
  OP8REC.OP8MAP = " ";

  OP3REC.OP1PARTN = OP1REC.OP1PARTN;
  OP3REC.OP1CUOID = OP1REC.OP1CUOID;
  OP3REC.OP1NORID = 0; /* ALL SUBORDERS*/
  OP3REC.OP2LNINB = 0;

  OP0GW-ITM-CNT = 0; /* init item counter*/

  call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes}; /* select all line-items*/

  if (OPBREC.OPBSZRC == 0)
    OP0GS-GET-MSR-ITM(); /* now read the items*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    COMMAREA.CATOAP = "MN0M";
    sysVar.transferName = "MN0M";
    transfer to transaction sysVar.transferName passing COMMAREA;
  end


   /* more than one item per msr order is not allowed*/

  if (OP0GW-ITM-CNT > +1)
    converseLib.validationFailed(945);
    OP0GM001.XPAABRV = "      ";
    OPAREC.OPAERR = "Y";
    set OP0GM001.XPACD cursor, bold;
  end


end // end OP0GS-CHK-MSR-ITM

// get items for msc edits
Function OP0GS-GET-ITM()

      /* get the next line item for the sub-order*/

  OP8REC.OP8LOCAT[1] = "OP0G005";
  OP8REC.OP8LOCAT[2] = "OP0GS-G";
  OP8REC.OP8LOCAT[3] = "ET-ITM ";
  OP8REC.OP8LOCAT[4] = " ";

  while (OPAREC.OPAERR == "N" /* until there's a error*/
   && OPBREC.OPBSZRC == 0) /* or end of file*/

    OP8REC.OP8TASK = "SN";
    call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes};

    if (OPBREC.OPBSZRC == 0)

       /* Initialize non-existant sizes on the bulk to prevent S0C7's*/
       /* CSP 4.1 Change!!*/

      sysVar.arrayIndex = 1;
      while (sysVar.arrayIndex <= 40)
        if (OP3REC.OP3SZAFL[sysVar.arrayIndex] != "Y")
          OP3REC.SY5PRCUN[sysVar.arrayIndex] = 0;
          OP3REC.OP3ORGQT[sysVar.arrayIndex] = 0;
          OP3REC.OP3ONOQT[sysVar.arrayIndex] = 0;
          OP3REC.OP3ALQT[sysVar.arrayIndex] = 0;
          OP3REC.OP3OHRQT[sysVar.arrayIndex] = 0;
          OP3REC.OP3WPRQT[sysVar.arrayIndex] = 0;
          OP3REC.OP3SHPQT[sysVar.arrayIndex] = 0;
          OP3REC.OP3CNLQT[sysVar.arrayIndex] = 0;
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1;
      end

      OP0GS-MSR-EDIT(); /* finally we can validate the qty's*/
    else
      if (OPBREC.OPBSZRC == 1) /* if no more line-items*/
      /* / next sentence*/
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* synpoint rollback*/
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
        COMMAREA.CATOAP = "MN0M";
        sysVar.transferName = "MN0M";
        transfer to transaction sysVar.transferName passing COMMAREA;
      end
    end
  end

     /* close item cursor*/



  OP8REC.OP8TASK = "CS";
  call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes};

  if (OPBREC.OPBSZRC == 0)
     /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    COMMAREA.CATOAP = "MN0M";
    sysVar.transferName = "MN0M";
    transfer to transaction sysVar.transferName passing COMMAREA;
  end


end // end OP0GS-GET-ITM

// get items for msc edits
Function OP0GS-GET-MSR-ITM()

      /* get the next line item for the sub-order*/

  OP8REC.OP8LOCAT[1] = "OP0G005";
  OP8REC.OP8LOCAT[2] = "OP0GS-G";
  OP8REC.OP8LOCAT[3] = "ET-ITM ";
  OP8REC.OP8LOCAT[4] = " ";

  while (OPBREC.OPBSZRC == 0) /* until end of file*/

    OP8REC.OP8TASK = "SN";
    call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes};

    if (OPBREC.OPBSZRC == 0)
      OP0GW-ITM-CNT = OP0GW-ITM-CNT + 1; /* increment itm counter*/
    else
      if (OPBREC.OPBSZRC == 1) /* if no more line-items*/
         /* / next sentence;*/
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* synpoint rollback*/
        COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
        COMMAREA.CATOAP = "MN0M";
        sysVar.transferName = "MN0M";
        transfer to transaction sysVar.transferName passing COMMAREA;
      end
    end
  end

     /* close item cursor*/



  OP8REC.OP8TASK = "CS";
  call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes};

  if (OPBREC.OPBSZRC == 0)
     /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    COMMAREA.CATOAP = "MN0M";
    sysVar.transferName = "MN0M";
    transfer to transaction sysVar.transferName passing COMMAREA;
  end


end // end OP0GS-GET-MSR-ITM

// validate musical size runs
Function OP0GS-MSR-EDIT()


    /* this statement group validates the distributed musical size run*/
    /* quantities when the order is a direct ship order and musical size*/
    /* run was requested (op1rec.xpacd = 'MS')*/


   /* Call subprogram to validate the quantities*/

  set OPMZREC empty;

  OPMZREC.XGPCD = OP3REC.XGPCD;
  /* TT#12895-Changes begin - 07/11/2001 kshiva*/
  OPMZREC.XDSCD = OP1REC.XDSCD;
  /* TT#12895-Changes end   - 07/11/2001 kshiva*/
  OPMZREC.SY1STNBR = OP3REC.SY1STNBR;
  OPMZREC.SY2CLRID = OP3REC.SY2CLRID;
  OPMZREC.XDMCD = OP3REC.XDMCD;
  OPMZREC.OP2TONOQ = OP3REC.OP2TONOQ;

   /* Move qtys to pass record*/

  sysVar.arrayIndex = 1;
  while (sysVar.arrayIndex <= 40)
    OPMZREC.OP3ONOQT[sysVar.arrayIndex] = OP3REC.OP3ONOQT[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1;
  end


  call "OP3850" (OPMZREC) {isNoRefresh = yes, isExternal = yes};

  if (OPMZREC.OPMZ-RETURN-CD == 0)
    /* OP0GS-INSERT-MSR-PREPACKS;*/
  else
    if (OPMZREC.OPMZ-RETURN-CD == 1
     || OPMZREC.OPMZ-RETURN-CD == 2
     || OPMZREC.OPMZ-RETURN-CD == 3
     || OPMZREC.OPMZ-RETURN-CD == 4)
      OPAREC.OPAERR = "Y";
      OP0GM001.VAGen_EZEMSG = OPMZREC.OPMZ-RETURN-MSG;
    else
      if (OPMZREC.OPMZ-RETURN-CD == 8)
        OPAREC.OPAERR = "Y";
        converseLib.validationFailed(10);
      else
        if (OPMZREC.OPMZ-RETURN-CD == 7
         || OPMZREC.OPMZ-RETURN-CD == 9)
          OPAREC.OPAERR = "Y";
          TA1REC.TA1TYPE = "APPL";
          TA1REC.TA1FUNC = "RETN";
          TA1REC.TA1PGMNM = "OP0G    ";
          TA1REC.TA1LOCAT[1] = "OP3850  ";
          TA1REC.TA1LOCAT[2] = OPMZREC.OPMZ-RETURN-CD;
          TA1REC.TA1LOCAT[2] = "OP0GS-MS";
          TA1REC.TA1LOCAT[4] = "R-EDIT  ";
          set TAEREC empty;
          OPMZREC.OPMZ-DIAG-KEY = " ";
          OPMZREC.OPMZ-DIAG-CUST-ORD-ID = OP3REC.OP1CUOID;
          OPMZREC.OPMZ-DIAG-NIKE-ORD-ID = OP3REC.OP1NORID;
          OPMZREC.OPMZ-DIAG-GPC-CD = OPMZREC.XGPCD;
          OPMZREC.OPMZ-DIAG-STY-NBR = OPMZREC.SY1STNBR;
          OPMZREC.OPMZ-DIAG-COLR-CD-ID = OPMZREC.SY2CLRID;
          OPMZREC.OPMZ-DIAG-DIM-CD = OPMZREC.XDMCD;
          OPMZREC.OPMZ-DIAG-RETURN-CD = OPMZREC.OPMZ-RETURN-CD;
          TAEREC.TAEDESC1 = OPMZREC.OPMZ-DIAG-KEY;
          TAEREC.TAEDESC2 = OPMZREC.OPMZ-RETURN-MSG;
          VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
          VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
          sysLib.rollback();
          VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
          
          call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
          XSPF4();
          exit program;
        end
      end
    end
  end





end // end OP0GS-MSR-EDIT

// edit pack code for direct ship
Function OP0GS-MSR-XPACD()
   /* ***************************************************************/
   /* validate pack code against the direct ship code             **/
   /* 'MS' is valid only for direct ship orders*/
   /* Direct ship orders can only use 'MS' or spaces*/
   /* ***************************************************************/

   /* ***************************************************************/
   /* added logic to restrict one item per msr order  09/25/97    **/
   /* ***************************************************************/
   /* include cu orders for msr edits                 10/23/97    **/
   /* ***************************************************************/

  if (OP0GM001.XPACD == "MS") /* pack code = 'MS'*/
    OP0GS-CHK-MSR-ITM(); /* check how many items per msr order*/
    OP0GS-PROCESS-MSR(); /* validate msr rules 10/24/97*/
    if (OP1REC.XGPCD == "02") /* gpc = footwear*/
      if (OP1REC.XDSCD == "1" /* direct ship code = 1 or*/
       || OP1REC.XDSCD == "2") /* direct ship code = 2*/
                                  /* ok - valid for ftwr direct ships*/

      else /* not a direct ship order*/
        converseLib.validationFailed(810); /* 'MS' only ok for ftwr direct ships*/
        OPAREC.OPAERR = "Y";
        set OP0GM001.XPACD cursor, bold;
      end

    else /* gpc is not footwear*/
      converseLib.validationFailed(812); /* 'MS' only ok for ftwr*/
      OPAREC.OPAERR = "Y";
      set OP0GM001.XPACD cursor, bold;
    end

  else /* pack code not = 'cu' 11/18/97*/
    if (OP0GM001.XPACD == "CU") /* pack code = 'MS'*/
      OP0GS-CHK-MSR-ITM(); /* check how many items per cu order*/
      OP0GS-PROCESS-MSR(); /* validate msr rules 10/24/97*/
      if (OP1REC.XGPCD == "02") /* gpc = footwear*/
        if (OP1REC.XDSCD == "1" /* direct ship code = 1 or*/
         || OP1REC.XDSCD == "2") /* direct ship code = 2*/
          if (OP0GM001.XPACD == "  ") /* pack code = '  '*/
             /* next sentence          /* ok - valid for ftwr direct ships*/
          else
            converseLib.validationFailed(813); /* invalid for direct ship ftwr orders*/
            OPAREC.OPAERR = "Y";
            set OP0GM001.XPACD cursor, bold;
          end
        end
      end
    end
  end


end // end OP0GS-MSR-XPACD

// get items for msr edit
Function OP0GS-PROCESS-MSR()

      /* this select gets the line items for one sub-order*/
      /* at a time.*/

  OP8REC.OP8TASK = "SS";
  OP8REC.OP8LOCAT[3] = "OP0G-MS";
  OP8REC.OP8LOCAT[4] = "R-ITEMS";
  OP8REC.OP8MAP = " ";

  OP3REC.OP1PARTN = OP1REC.OP1PARTN;
  OP3REC.OP1CUOID = OP1REC.OP1CUOID;
  OP3REC.OP1NORID = 0; /* ALL SUBORDERS*/
  OP3REC.OP2LNINB = 0;

  call "DB1000" (OP8REC, OP3REC, OPBREC) {isNoRefresh = yes, isExternal = yes}; /* select all line-items*/

  if (OPBREC.OPBSZRC == 0)
    OP0GS-GET-ITM(); /* now read the items*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* synpoint rollback*/
    COMMAREA.CA-USER-WORKAREA-4K = " "; /* clear user commarea*/
    COMMAREA.CATOAP = "MN0M";
    sysVar.transferName = "MN0M";
    transfer to transaction sysVar.transferName passing COMMAREA;
  end



end // end OP0GS-PROCESS-MSR

// darken handling codes line
Function OP0GSDH()

  set OP0GM001.OP0GMHAN protect, invisible;
  OPAREC.OPASUB = 1;
  while (OPAREC.OPASUB < 6)
    set OP0GM001.OP0GMHNO[OPASUB] protect, invisible;
    set OP0GM001.XHDCD[OPASUB] protect, invisible;
    set OP0GM001.XHDABRV[OPASUB] protect, invisible;
    set OP0GM001.XHDCHG[OPASUB] protect, invisible;
    set OP0GM001.OP0GMHTP[OPASUB] protect, invisible;
    OPAREC.OPASUB = OPAREC.OPASUB + 1;
  end

end // end OP0GSDH

// Edit Vendor Auth Required
Function OP0GSEA()


  set OP0GM001.OP1VAUNB initialAttributes;
  set OP0GM001.KUCVNDFL initialAttributes; /* vendor auth. req fl*/

   /* -----------------------  Y2K OUT BEGIN  ------------------------*/
   /*  */
   /* IF OPAREC.OPAWYY GT 56;*/
   /* MOVE 19 TO OPAREC.OPACCC;*/
   /* ELSE;*/
   /* MOVE 20 TO OPAREC.OPACCC;*/
   /* MOVE EZEDTE TO OPAREC.OPACYMD;*/
   /* END;*/
   /* ;*/
   /*  */
   /* ------------------------  Y2K OUT END  -------------------------*/
   /* -----------------------  Y2K IN BEGIN  -------------------------*/
   /*  */
  OPAREC.OPACDT = VGVar.currentGregorianDate;
   /*  */
   /* ------------------------  Y2K IN END  --------------------------*/

  if (OPAREC.OPAWARNF == "N") /* if warning not given*/
    if (OP0GM001.OP1VAUNB == " ") /* and vend auth reqd*/
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(119); /* warning-order cant be alloc without*/
                                   /* vend nbr*/
      set OP0GM001.OP1VAUNB cursor, bold;
    end
  end


  if (OP0GM001.OP1VAUNB is modified)
    OP1REC.OP1VAUDT = OPAREC.OPACDT;
  end


end // end OP0GSEA

// Edit Handling Codes
Function OP0GSEH()


  if (OP0GM001.XHDCD[OPASUB] == " ") /* if handling code is blank,*/
    set OP0GM001.XHDCD[OPASUB] initialAttributes; /* then reset rest of fields*/
    OP0GM001.XHDCHG[OPASUB] = 0;
                                   /* formerly associated with that*/
    OP0GM001.XHDABRV[OPASUB] = " "; /* hndl code abrv*/
    OP0GM001.OP0GMHTP[OPASUB] = " ";
    OP3REC.OP2HCHGO[OPASUB] = "N";
    OPWREC.OP2HCHGO[OPASUB] = OP3REC.OP2HCHGO[OPASUB];
  else
    sysVar.arrayIndex = 1;
    OP0GW01.XHDCD = OP0GM001.XHDCD[OPASUB];
    OP0GW01.XGPCD = OP1REC.XGPCD;
    if (OP1REC.ZFC-CRCY-CD == " ")
      OP1REC.ZFC-CRCY-CD = "USD"; /* added if statement for CANA*/
    end
    if (OP0GW01.XHDKEY in XHDTBL.XHDKEY
     && XHDTBL.XXXSTAT[sysVar.arrayIndex] == "A")
       /* Added currency code check for Canada - CANA*/
      if (XHDTBL.ZFC-CRCY-CD[sysVar.arrayIndex] == OP1REC.ZFC-CRCY-CD) /* crcy cd mtch*/
         /* next sentence*/
      else
        OPAREC.OPAERR = "Y";
        converseLib.validationFailed(904);
        set OP0GM001.XHDCD[OPASUB] cursor, bold;
        return;
      end
      set OP0GM001.XHDCD[OPASUB] initialAttributes;
      OP0GM001.XHDABRV[OPASUB] = XHDTBL.XHDABRV[sysVar.arrayIndex];
      if (OP0GM001.XHDCHG[OPASUB] == XHDTBL.XHDCHG[sysVar.arrayIndex]
       || OP0GM001.XHDCHG[OPASUB] == 0)
        OP0GM001.XHDCHG[OPASUB] = XHDTBL.XHDCHG[sysVar.arrayIndex];
        OP3REC.OP2HCHGO[OPASUB] = "N";
      else
        OP3REC.OP2HCHGO[OPASUB] = "Y";
      end
      OPWREC.OP2HCHGO[OPASUB] = OP3REC.OP2HCHGO[OPASUB];
      OP0GW01.XHDUCHFL = XHDTBL.XHDUCHFL[sysVar.arrayIndex];
      if (OP3REC.OP2HCHGO[OPASUB] == "Y")
        OP0GW01.OP2HCHGO = "*";
      else
        OP0GW01.OP2HCHGO = " ";
      end
      OP0GM001.OP0GMHTP[OPASUB] = OP0GW01.OP0GMHTP;
    else
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(120);
      set OP0GM001.XHDCD[OPASUB] cursor, bold;
    end
  end


end // end OP0GSEH

// edit invoice as-of date
Function OP0GSEI()


  if (OP0GM001.OP0GMIDT == "MMDDYY"
   || OP0GM001.OP0GMIDT == " "
   || OP0GM001.OP0GMIDT == "000000")
    OP0GM001.OP0GMIDT = "MMDDYY";
    OP1REC.OP1IVADT = 0;
    set OP0GM001.OP0GMIDT initialAttributes;
    return;
  end

  set TA2REC empty;

  TA2REC.TA2DTOPT = "GREGGREG";
  TA2REC.TA2GRTYP = "A";
  TA2REC.TA2GRGA = OP0GM001.OP0GMIDT;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    set OP0GM001.OP0GMIDT initialAttributes;
    OP1REC.OP1IVADT = TA2REC.TA2GRGGN;
    OPWREC.OPWAUTFL = "Y";
  else
    set OP0GM001.OP0GMIDT cursor, modified, bold;
    converseLib.validationFailed(117); /* invoice date is not a valid date*/
    OPAREC.OPAERR = "Y";
  end


   /* ************************************************************/
end // end OP0GSEI

// Edit Data Only (Without Xfer)
Function OP0GSEO()

  OPAREC.OPASUB = 5;
  while (OPAREC.OPASUB > 0
   && OPWREC.OPWSFLOW == 1) /* phone flow*/
    OP0GSEH(); /* edit handling codes*/
    OPAREC.OPASUB = OPAREC.OPASUB - 1;
  end


  OPAREC.OPASUB = 2;
  while (OPAREC.OPASUB > 0)
    OP0GSP4(); /* edit cust label code*/
    OPAREC.OPASUB = OPAREC.OPASUB - 1;
  end


  if (OP0GM001.XPACD == " ")
    set OP0GM001.XPACD normal;
    OP0GM001.XPAABRV = " ";
  else
    OP0GSP3(); /* edit pack code*/
  end


  if (OP0GM001.KUCVNDFL == "N")
    set OP0GM001.KUCVNDFL initialAttributes;
    set OP0GM001.OP1VAUNB initialAttributes;
    OP0GM001.OP1VAUNB = " ";
  else
    if (OP0GM001.KUCVNDFL == "Y")
      OP0GSEA(); /* edit vendor authorization required flag*/
    else
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(118);
      set OP0GM001.KUCVNDFL cursor, bold;
    end
  end


  if (OP0GM001.OP1SWORD == 0) /* ship with order number non-blank?*/
    set OP0GM001.OP1SWORD normal;
  else
    OP0GSES(); /* edit ship with order number*/
  end


  if (OP0GM001.XPKCD == " ")
    set OP0GM001.XPKCD normal;
    OP0GM001.XPKABRV = " ";
  else
    OP0GSP1(); /* edit picking code*/
  end


  if (OP0GM001.OP1ASHDF == "Y" /* edit allow shading flag*/
   || OP0GM001.OP1ASHDF == "N")
    set OP0GM001.OP1ASHDF normal;
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(116);
    set OP0GM001.OP1ASHDF cursor, bold;
  end

  OP0GSEI(); /* edit invoice as-of date*/

  if (OP0GM001.OP1ACNLF == "Y" /* edit cancel flag*/
   || OP0GM001.OP1ACNLF == "N")
    set OP0GM001.OP1ACNLF normal;
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(115);
    set OP0GM001.OP1ACNLF cursor, bold;
  end


  if (OP0GM001.OP0GMMAL <= 100) /* edit minimum allocation*/
    set OP0GM001.OP0GMMAL normal;
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(114);
    set OP0GM001.OP0GMMAL cursor, bold;
  end


  if (OP0GM001.XPPCD == " ")
    set OP0GM001.XPPCD normal;
    OP0GM001.XPPABRV = " ";
  else
    OP0GSP2(); /* edit pick priority code*/
  end

  if (OP0GM001.OP1EXPDF == "Y" /* edit expedit flag*/
   || OP0GM001.OP1EXPDF == "N")
    set OP0GM001.OP1EXPDF normal;
    OP1REC.OP1EXPDF = OP0GM001.OP1EXPDF;
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(238);
    set OP0GM001.OP1EXPDF cursor, modified, bold;
  end

  /* SLARSE Begin*/
  /* MULTIPLE GPC:  added GPC '02' & whse '51'*/
  /* to handle Equipment from whse 51*/
  if ((OP1REC.XGPCD == "03" || 
  (OP1REC.XGPCD == "02" && OP1REC.XWHCD == "51")) && 
  OP1REC.XDZ-DATA-DIST-CD != "CA" && 
  (OP1REC.XPPCD == " " || 
  OP1REC.XPPCD == "30") && 
  (OP0GM001.XPPCD == "10" || 
  OP0GM001.XPPCD == "20") && 
  OP1REC.OP1EXPDF == "N" && 
  OP0GM001.OP1EXPDF == "N" && 
  OPAREC.OPAERR != "Y")
    OP1REC.XPPCD = OP0GM001.XPPCD;
    OP1REC.OP1EXPDF = "Y";
    OP0GM001.OP1EXPDF = "Y";
    converseLib.validationFailed(924);
    OPAREC.OPAERR = "Y";
    set OP0GM001.OP1EXPDF cursor;
  end
  if ((OP1REC.XGPCD == "03" || 
  (OP1REC.XGPCD == "02" && OP1REC.XWHCD == "51")) && 
  OP1REC.XDZ-DATA-DIST-CD != "CA" && 
  (OP1REC.XPPCD == "10" || 
  OP1REC.XPPCD == "20" || 
  OP1REC.XPPCD == "  ") && 
  OP0GM001.XPPCD == "30" && 
  OP1REC.OP1EXPDF == "Y" && 
  OP0GM001.OP1EXPDF == "Y" && 
  OPAREC.OPAERR != "Y")
    OP1REC.XPPCD = OP0GM001.XPPCD;
    OP1REC.OP1EXPDF = "N";
    OP0GM001.OP1EXPDF = "N";
    converseLib.validationFailed(924);
    OPAREC.OPAERR = "Y";
    set OP0GM001.OP1EXPDF cursor;
  end
end // end OP0GSEO

// Edit Ship With Order Number
Function OP0GSES()


  OPWREC.OP1GROUP = OP1REC.OP1GROUP; /* save op1rec image*/
  OP0GW01.XDZ-DATA-DIST-CD = OP1REC.XDZ-DATA-DIST-CD;

  set OP1REC empty;
  set SQLCA empty;

  OPAREC.OPAORDN = OP0GM001.OP1SWORD; /* setup record key*/
  OP1REC.OP1PARTN = OPAREC.OP1PARTN;
  OP1REC.OP1CUOID = OP0GM001.OP1SWORD;

  call "IO0430" ("ST", SQLCA, OP1REC) {isNoRefresh = yes, isExternal = yes}; /* if one or more recs*/
  if (SQLCA.VAGen_SQLCODE == 0) /* found, the order number is*/
    /* Canada edit - Countries must match on current and "ship with' ordrs*/
    if (OP1REC.XDZ-DATA-DIST-CD != OP0GW01.XDZ-DATA-DIST-CD)
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(905);
      set OP0GM001.OP1SWORD cursor, bold;
    else
      set OP0GM001.OP1SWORD initialAttributes;
    end
  else
    if (SQLCA.VAGen_SQLCODE == -811) /* considered valid*/
      set OP0GM001.OP1SWORD initialAttributes;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        OPAREC.OPAERR = "Y";
        converseLib.validationFailed(32); /* order number not found*/
        set OP0GM001.OP1SWORD cursor, bold;
      else
        set TA1REC empty;
        TA1REC.TA1PGMNM = "OP0G    ";
        TA1REC.TA1MAP = "OP0GM001";
        TA1REC.TA1LOCAT[2] = "OP0GSES ";
        TA1REC.TA1LOCAT[4] = "IO00430 ";
        TA1REC.TA1DBASE = "DORDER  ";
        TA1REC.TA1TBLVU = "VORHDR01";
        TA1REC.TA1TBLKE = OP1REC.OP1KEY;
        OP1REC.OP1GROUP = OPWREC.OP1GROUP; /* move saved op1rec bk*/
        XSOPS02(); /* abnormal termination*/
      end
    end
  end


  OP1REC.OP1GROUP = OPWREC.OP1GROUP; /* move saved op1rec back*/


end // end OP0GSES

// Edit Data and Transfer
Function OP0GSET()

  OP0GSEO(); /* perform data edits*/

  if (OPAREC.OPAERR == "N")
    OP0GSMR(); /* move fields from map to records*/
    if (OPWREC.OPWREVM == 0 /* indicates order entry mode*/
     && OPWREC.OPWSFLOW == "1")
      COMMAREA.CAFROMAP = "OP0G";
      COMMAREA.CACURRAP = "OP0H";
      transfer to program "OP0H" passing COMMAREA; /* transfer to multiple order header screen*/
    else
      COMMAREA.CAFROMAP = "OP0G";
      COMMAREA.CACURRAP = "OP0J";
      transfer to program "OP0J" passing COMMAREA;
                                   /* transfer to the  accept order screen*/
    end
  end

end // end OP0GSET

// Move handling code to Map.
Function OP0GSMH()
   /* ------------------------------------------------------*/
    /* move handling codes to map*/
   /* ------------------------------------------------------*/


  OP0GW01.OP0GWSS1 = 1; /* init. subscript*/

  while (OP0GW01.OP0GWSS1 < 6)
    OP0GM001.XHDCD[OP0GWSS1] = OPWREC.XHDCD[OP0GWSS1];
    OP0GM001.XHDCHG[OP0GWSS1] = OPWREC.XHDCHG[OP0GWSS1];
    sysVar.arrayIndex = 1;
    OP0GW01.XHDCD = OPWREC.XHDCD[OP0GWSS1];
    OP0GW01.XGPCD = OP1REC.XGPCD;
    if (OP0GW01.XHDKEY in XHDTBL.XHDKEY)
      OP0GM001.XHDABRV[OP0GWSS1] = XHDTBL.XHDABRV[sysVar.arrayIndex];
    end
    OP0GW01.OP0GWSS1 = OP0GW01.OP0GWSS1 + 1;
  end


end // end OP0GSMH

// Map Initialization
Function OP0GSMI()
      /* initialize map*/

  converseLib.clearScreen();
  set OP0GM001 initial;


  OPAREC.OPACUCO = OP1REC.KUCCOID; /* this series of instructions*/
  OPAREC.OPASEP1 = ".";
  OPAREC.OPACUSR = OP1REC.KUMSTRID; /* formats the customer number*/
  OPAREC.OPASEP2 = ".";
  OPAREC.OPACUDP = OP1REC.XNXCD;
  OP0GM001.OP0GMCID = OPAREC.OPACUNO;


  OP0GM001.OPMDT = VGVar.currentShortGregorianDate;
  OP0GM001.KUMSTRNM = OPWREC.KUMSTRNM;
  if (OP1REC.OP1ORDBY == " ")
    set OP0GM001.OP0GMOBY protect, invisible;
    set OP0GM001.OP1ORDBY protect, invisible;
  else
    OP0GM001.OP1ORDBY = OP1REC.OP1ORDBY;
  end


  if (OPWREC.OPWREVM == 0)
    if (COMMAREA.CAFROMAP == "OP0F")
      set OP0GM001.OP0GMSPI protect, invisible; /* darken pf15:spec instruc*/
    end
  end


end // end OP0GSMI

// Move Fields From Record To Map
Function OP0GSMM()


  OP0GM001.XPPCD = OP1REC.XPPCD;
  OP0GM001.XPPABRV = " ";
  if (OP1REC.XPPCD in XPPTBL.XPPCD)
    if (XPPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OP0GM001.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
    end
  end

  OP0GM001.XPKCD = OP1REC.XPKCD;
  OP0GM001.XPKABRV = " ";
  if (OP1REC.XPKCD in XPKTBL.XPKCD)
    if (XPKTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OP0GM001.XPKABRV = XPKTBL.XPKABRV[sysVar.arrayIndex];
    end
  end

  OP0GM001.XPACD = OP1REC.XPACD; /* packing code*/
  OP0GM001.XPAABRV = " ";
  if (OP1REC.XPACD in XPATBL.XPACD)
    if (XPATBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OP0GM001.XPAABRV = XPATBL.XPAABRV[sysVar.arrayIndex];
    end
  end


  OP0GM001.OP1EXPDF = OP1REC.OP1EXPDF;
  OP0GM001.OP0GMMAL = OP1REC.KUNMAPCT;
  OP0GM001.OP1ACNLF = OP1REC.OP1ACNLF;
  OP0GM001.OP1ASHDF = OP1REC.OP1ASHDF;
  OP0GM001.OP1SWORD = OP1REC.OP1SWORD;
  OP0GM001.KUCVNDFL = OP1REC.KUCVNDFL;
  OP0GM001.OP1VAUNB = OP1REC.OP1VAUNB;
  OPAREC.OPAWDT = OP1REC.OP1IVADT; /* format invoice as-of-date*/
  OPAREC.OPAFMM = OPAREC.OPAWMM;
  OPAREC.OPAFDD = OPAREC.OPAWDD;
  OPAREC.OPAFYY = OPAREC.OPAWYY;
  OP0GM001.OP0GMIDT = OPAREC.OPAFDT; /* invoice as-of-date*/


  if (OP0GM001.KUCVNDFL != "Y") /* vend auth req flag*/
    OP0GM001.KUCVNDFL = "N";
  end


  OP0GM001.PWRLBCD[1] = OPWREC.PWRLBCD[1]; /* move label codes to map*/
  OP0GM001.PWRLBCD[2] = OPWREC.PWRLBCD[2];
  OPAREC.OPASUB = 2; /* set subscript*/

  while (OPAREC.OPASUB > 0)
    OP0GSP4(); /* get abbreviation*/
    OPAREC.OPASUB = OPAREC.OPASUB - 1;
  end


  OPAREC.OPASUB = 1;
  while (OPAREC.OPASUB < 6)
    OP0GM001.XHDCD[OPASUB] = OPWREC.XHDCD[OPASUB];
    OP0GM001.XHDCHG[OPASUB] = OPWREC.XHDCHG[OPASUB];
    sysVar.arrayIndex = 1;
    OP0GW01.XHDCD = OPWREC.XHDCD[OPASUB];
    OP0GW01.XGPCD = OP1REC.XGPCD;
    if (OP0GW01.XHDKEY in XHDTBL.XHDKEY)
      OP0GM001.XHDABRV[OPASUB] = XHDTBL.XHDABRV[OPASUB];
      OP0GW01.XHDUCHFL = XHDTBL.XHDUCHFL[sysVar.arrayIndex];
      if (OPWREC.OP2HCHGO[OPASUB] == "Y")
        OP0GW01.OP2HCHGO = "*";
      else
        OP0GW01.OP2HCHGO = " ";
      end
      OP0GM001.OP0GMHTP[OPASUB] = OP0GW01.OP0GMHTP;
    end
    OPAREC.OPASUB = OPAREC.OPASUB + 1;
  end


end // end OP0GSMM

// Move Fields From Map To Record
Function OP0GSMR()


  OP1REC.XPPCD = OP0GM001.XPPCD;
  OP1REC.XPKCD = OP0GM001.XPKCD;
  OP1REC.XPACD = OP0GM001.XPACD; /* pack code*/
  OP1REC.KUNMAPCT = OP0GM001.OP0GMMAL; /* move the non-subscripted*/
  OP1REC.OP1ACNLF = OP0GM001.OP1ACNLF;
  OP1REC.OP1ASHDF = OP0GM001.OP1ASHDF; /* fields from the map to*/
  OP1REC.OP1SWORD = OP0GM001.OP1SWORD;
  OP1REC.KUCVNDFL = OP0GM001.KUCVNDFL;
  OP1REC.OP1VAUNB = OP0GM001.OP1VAUNB;

  if (OP0GM001.OP1EXPDF == "Y")
    OP1REC.OP1EXPDF = "Y";
  end
  if (OP0GM001.OP0GMIDT == "MMDDYY")
    OP1REC.OP1IVADT = 0;
  else
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    TA2REC.TA2GRGA = OP0GM001.OP0GMIDT;
    TA2REC.TA2GRTYP = "A";
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
    if (TA2REC.TA2RTNCD == 0)
      OP1REC.OP1IVADT = TA2REC.TA2GRGGN;
    end
  end


  OPWREC.PWRLBCD[1] = OP0GM001.PWRLBCD[1]; /* label codes*/
  OPWREC.PWRLBCD[2] = OP0GM001.PWRLBCD[2];

   /* init handling codes and chgs*/

  OPAREC.OPASUB = 1;
  while (OPAREC.OPASUB < 6)
    OPWREC.XHDCD[OPASUB] = " ";
    OPWREC.XHDCHG[OPASUB] = 0;
    OPAREC.OPASUB = OPAREC.OPASUB + 1;
  end

  OPAREC.OPASUB = 1;
  while (OPAREC.OPASUB < 6)
    if (OP0GM001.XHDCD[OPASUB] != " ")
      OPWREC.XHDCD[OPASUB] = OP0GM001.XHDCD[OPASUB];
      OPWREC.XHDCHG[OPASUB] = OP0GM001.XHDCHG[OPASUB];
    end
    OPAREC.OPASUB = OPAREC.OPASUB + 1;
  end


  OPWREC.OP1GROUP = OP1REC.OP1GROUP;
  COMMAREA.CA-USER-WORKAREA-4K = OPWREC.OPWSGRP;



end // end OP0GSMR

// set misc header defaults
Function OP0GSOD()

  OP0GM001.OP0GMMAL = 0; /* set map data defaults*/
  OP0GM001.OP1ASHDF = "Y";
  OP0GM001.OP1ACNLF = OP1REC.OP1ACNLF;
                                                  /* SLARSE BEGIN*/
  /* Set switch to indicate that screen was entered.*/
  OPWREC.OP0GFLAG = "Y";
  /* IF Apparel, At-Once and Not Canada, then set Traffic Alert*/
  /* IF OP1REC.XGPCD = '03' AND OP1REC.XOBCD = 'P1'*/
  if ((OP1REC.XGPCD == "03"
   || (OP1REC.XGPCD == "02" && OP1REC.XWHCD == "51"))
   && OP1REC.XOBCD == "P1"
   && OP1REC.XDZ-DATA-DIST-CD != "CA")
    OP0GM001.OP1EXPDF = "Y";
  else
    OP0GM001.OP1EXPDF = "N";
  end
                                                  /* SLARSE END*/

  if (OP1REC.KUCVNDFL == "Y") /* ; vendor auth req flag*/
    OP0GM001.KUCVNDFL = OP1REC.KUCVNDFL;
  else
    OP0GM001.KUCVNDFL = "N";
  end

  if (OP1REC.OP1IVADT == +0)
    OP0GM001.OP0GMIDT = "MMDDYY";
  else
    OPAREC.OPAWDT = OP1REC.OP1IVADT;
    OPAREC.OPAFMM = OPAREC.OPAWMM;
    OPAREC.OPAFDD = OPAREC.OPAWDD;
    OPAREC.OPAFYY = OPAREC.OPAWYY;
    OP0GM001.OP0GMIDT = OPAREC.OPAFDT;
  end

       /* get picking priority and picking code from the order*/
       /* class table*/

  if (OP1REC.XOCCD in XOCTBL.XOCCD
   && XOCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0GW01.XPPCD = XOCTBL.XPPCD[sysVar.arrayIndex];
    OP0GW01.XPKCD = XOCTBL.XPKCD[sysVar.arrayIndex];
  end


       /* validate picking code against the picking code table*/

  if (OP0GW01.XPKCD in XPKTBL.XPKCD
   && XPKTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0GM001.XPKCD = OP0GW01.XPKCD;
    OP0GM001.XPKABRV = XPKTBL.XPKABRV[sysVar.arrayIndex];
  else
    OP0GM001.XPKCD = " ";
    OP0GM001.XPKABRV = " ";
  end


       /* validate picking priority against the picking priority*/
       /* table*/

  if (OP0GW01.XPPCD in XPPTBL.XPPCD
   && XPPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0GM001.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
    OP0GM001.XPPCD = OP0GW01.XPPCD;
  else
    OP0GM001.XPPCD = " ";
    OP0GM001.XPPABRV = " ";
  end


        /* move pack code to map*/

  if (OP1REC.XPACD in XPATBL.XPACD
   && XPATBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0GM001.XPAABRV = XPATBL.XPAABRV[sysVar.arrayIndex];
    OP0GM001.XPACD = OP1REC.XPACD; /* packing code*/
  else
    OP0GM001.XPACD = " ";
    OP0GM001.XPAABRV = " ";
  end


        /* move label codes to map*/

  OP0GM001.PWRLBCD[1] = OPWREC.PWRLBCD[1];
  OP0GM001.PWRLBCD[2] = OPWREC.PWRLBCD[2];
  OPAREC.OPASUB = 2; /* set subscript*/

  while (OPAREC.OPASUB > 0)
    OP0GSP4(); /* get abbreviation*/
    OPAREC.OPASUB = OPAREC.OPASUB - 1;
  end


end // end OP0GSOD

// order entry mode setup
Function OP0GSOE()

   /* if phone flow set handling codes dark*/

  if (OPWREC.OPWSFLOW == 2)
    OP0GSDH();
  end

  OP0GSOD(); /* set miscellaneous header defaults*/

end // end OP0GSOE

// edit picking code
Function OP0GSP1()

   /* TT#9179: Change added to prevent Warehouse '07' users*/
   /* from entering Pick code 20.*/

  if (OP0GM001.XPKCD in XPKTBL.XPKCD)
    if (XPKTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OP0GM001.XPKABRV = XPKTBL.XPKABRV[sysVar.arrayIndex];
      OP1REC.XPKCD = XPKTBL.XPKCD;
      set OP0GM001.XPKCD initialAttributes;
    else
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(111); /* bad picking code*/
    end
  else
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(111); /* bad picking code*/
  end


  if (OP0GM001.XPKCD == "40") /* and picking code of 40 entered*/
    if (OP1REC.XWHCD == "51" /* if order is for Memphis aprl whse*/
     || OP1REC.XWHCD == "25" /* or order is for NSG aprl whse*/
     || OP1REC.XWHCD == "27") /* or order is for NSG aprl whse*/
      /* next sentence                  ;   it's ok*/
    else
      if (OP1REC.XWHCD == "42" /* Canada warehouse logic*/
       && OP1REC.XGPCD == "03" 
      )                        /* next sentence*/
      else
        OPAREC.OPAERR = "Y"; /* it's illegal*/
        converseLib.validationFailed(906); /* picking code not valid for whse*/
      end
    end
  end

   /* TT#9179 Change begin      12/01/00*/
  if (OP0GM001.XPKCD == "20") /* picking code*/
    if (OP1REC.XWHCD == "07") /* WHSE CODE 07*/
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(1013); /* picking code not valid*/
    end
  end
   /* TT#9179 Change end*/


  if (OPAREC.OPAERR == "Y")
    set OP0GM001.XPKCD cursor, modified, bold;
    OP0GM001.XPKABRV = " ";
  end
end // end OP0GSP1

// edit pick priority code
Function OP0GSP2()


  if (OP0GM001.XPPCD in XPPTBL.XPPCD)
    if (XPPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      OP0GM001.XPPABRV = XPPTBL.XPPABRV[sysVar.arrayIndex];
      OP1REC.XPPCD = XPPTBL.XPPCD;
      set OP0GM001.XPPCD initialAttributes;
    else
      set OP0GM001.XPPCD cursor, modified, bold;
      OP0GM001.XPPABRV = " ";
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(110); /* bad pick priority*/
    end
  else
    set OP0GM001.XPPCD cursor, modified, bold;
    OP0GM001.XPPABRV = " ";
    OPAREC.OPAERR = "Y";
    converseLib.validationFailed(110); /* bad pick priority*/
  end


end // end OP0GSP2

// edit packing code
Function OP0GSP3()

   /* this statement group edits pack code*/

  set OP0GM001.XPACD initialAttributes; /**/
  set OP0GM001.XPAABRV initialAttributes; /**/

  sysVar.arrayIndex = 1;

  if (OP0GM001.XPACD in XPATBL.XPACD
   && XPATBL.XXXSTAT[sysVar.arrayIndex] == "A")
    OP0GM001.XPAABRV = XPATBL.XPAABRV[sysVar.arrayIndex];
    if (XPATBL.XPASPFFL[sysVar.arrayIndex] == "Y") /* if cust specified pack-code*/
      OP0GSP5(); /* check if xotoaloc = 'y'*/
    end /* (08/16/91 JLoyer Log #675)*/
    OP0GS-MSR-XPACD(); /* edit for direct ship*/
  else
    converseLib.validationFailed(647); /* invalid pack code*/
    OP0GM001.XPAABRV = "      ";
    OPAREC.OPAERR = "Y";
    set OP0GM001.XPACD cursor, bold;
  end

end // end OP0GSP3

// edit customer label code
Function OP0GSP4()

       /* **************************************************/
       /* *  EDIT CUSTOMER LABEL CODES                    **/
       /* **************************************************/


  if (OP0GM001.PWRLBCD[OPASUB] == " ") /* if label code is blank,*/
    set OP0GM001.PWRLBCD[OPASUB] initialAttributes; /* then reset rest of fields*/
    OP0GM001.PWRLBABR[OPASUB] = " "; /* label code abrv*/
  else
      /* get label code abbreviation*/
    set PWRREC empty;
    set SQLCA empty;
    PWRREC.PWRLBCD = OP0GM001.PWRLBCD[OPASUB]; /* setup key*/

    call "IO5750" ("S ", SQLCA, PWRREC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == +0) /* labl cd found*/
      if (PWRREC.XXXSTAT == "A") /* active labl cd*/
        OP0GM001.PWRLBABR[OPASUB] = PWRREC.PWRLBABR; /* fill in labl cd abrv*/
        set OP0GM001.PWRLBABR[OPASUB] initialAttributes;
      else
        converseLib.validationFailed(716); /* labl cd is inactive*/
        OPAREC.OPAERR = "Y"; /* set error to true*/
        set OP0GM001.PWRLBCD[OPASUB] cursor, bold;
        OP0GM001.PWRLBABR[OPASUB] = " ";
      end
    else
      if (SQLCA.VAGen_SQLCODE == +100) /* labl cd not found*/
        converseLib.validationFailed(717); /* labl cd not found*/
        OPAREC.OPAERR = "Y"; /* set error to true*/
        set OP0GM001.PWRLBCD[OPASUB] cursor, bold;
        OP0GM001.PWRLBABR[OPASUB] = " ";
      else
        if (SQLCA.VAGen_SQLCODE == -911)
          converseLib.validationFailed(010); /* database busy, please try again*/
          set OP0GM001.PWRLBCD[OPASUB] initialAttributes; /* force edit*/
        else
          TA1REC.TA1DBASE = "DPICK   "; /* data base name*/
          TA1REC.TA1TBLVU = "VZLABL01"; /* table view*/
          TA1REC.TA1TBLKE = " "; /* key value*/
          TA1REC.TA1LOCAT[1] = "OP0GSP4"; /* location*/
          TA1REC.TA1LOCAT[2] = OP0GM001.PWRLBCD[1]; /* labl cd #1*/
          TA1REC.TA1LOCAT[3] = OP0GM001.PWRLBCD[2]; /* labl cd #1*/
          TA1REC.TA1LOCAT[4] = "IO5750"; /* i/o mod*/
          XSOPS02(); /* common abend*/
        end
      end
    end
  end



end // end OP0GSP4

// check xottbl for on-line-alloc
Function OP0GSP5()
   /* ***************************************************************/
   /* 08/16/91 JLoyer  Log #675                                   **/
   /* If this order-type can be allocated on-line, the customer   **/
   /* specified pack-code (checked in op0gsp3) is not allowed.    **/
   /* ***************************************************************/

  sysVar.arrayIndex = 1;

  if (OP1REC.XOTCD in XOTTBL.XOTCD
   && XOTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    if (XOTTBL.XOTOALOC[sysVar.arrayIndex] == "Y") /* if xot-on-line-aloc = 'y'*/
      OPAREC.OPAERR = "Y";
      converseLib.validationFailed(707); /* cust specified pack-code not allowed*/
      set OP0GM001.XPACD cursor, bold;
    end
  end
end // end OP0GSP5

// Program Initialization
Function OP0GSPI()



  OP1REC.OP1GROUP = OPWREC.OP1GROUP;

  OPAREC.OPAERR = "N"; /* initialize error flag*/
  OPAREC.OPAWARNF = "N"; /* initialize message flag*/



end // end OP0GSPI

// review mode setup
Function OP0GSRM()


  OP0GSMM(); /* move fields from records to map*/


  OP0GSDH(); /* darken handling codes line*/



end // end OP0GSRM

// Xfer To Special Instructions
Function OP0GSSI()

  OP0GSEO(); /* edit the data entered*/

  if (OPAREC.OPAERR == "N")
    OP0GSMR(); /* move fields from map to records*/
    COMMAREA.CAFROMAP = "OP0G";
    COMMAREA.CACURRAP = "OP0F";
    transfer to program "OP0F" passing COMMAREA;
  end


end // end OP0GSSI

Record OP0GW01 type basicRecord
  10 OP0GMHTP OP0GMHTP ; 
    15 XHDUCHFL XHDUCHFL ; 
    15 OP2HCHGO OP2HCHGO ; 
  10 XPPCD XPPCD ; 
  10 XPKCD XPKCD ; 
  10 OP0GWSS1 OP0GWSS1 ; 
  10 XHDKEY XHDKEY ; 
    15 XHDCD XHDCD ; 
    15 XGPCD XGPCD ; 
  10 PWRLBCD PWRLBCD [2] ; 
  10 XDZ-DATA-DIST-CD XDZ-DATA-DIST-CD ; 
  10 OP0GW-ITM-CNT OP0GW-ITM-CNT ; 
end // end OP0GW01

// pack handling type/overide
DataItem OP0GMHTP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// subscript 1
DataItem OP0GW-ITM-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// subscript 1
DataItem OP0GWSS1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

