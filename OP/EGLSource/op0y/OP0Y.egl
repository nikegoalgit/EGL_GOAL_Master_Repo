package op0y;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
//*** PROGRAM=OP0Y ****
// Order Processing Criteria Menu
// 
// Overview: This application is the menu used for selecting
//           the valid options for the order processing
//           system.  The application will transfer a user to
//           the requested application based upon their
//           security clearance.
// 
// Maintenance History:
// 
//     Date     By Whom    Change description
//   --------  ----------  ------------------------------------
//   04/06/94   SCHASE     CREATED.
//   09/15/94   SCHASE     ADDED OPTION 10 TO OP0YT TABLE.
//   10/21/94   SCHASE     removed option unavailable mark for
//                         option 2.
// *********************
Program OP0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OP0YT {deleteAfterUse = yes}; // table
  use OP0YM.OP0YM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OP0Y001: OP0Y001();
    goto OP0Y005;
    OP0Y005: OP0Y005();
     /* *************************************************************/


        /* branch to converse*/

    goto OP0Y005; /* branch to converse*/



  end // end main
end // end OP0Y

// program init
Function OP0Y001()



     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* **********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

      /* check entry security*/

  XSENTRY();

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "OP";
  CAEZSG4 = "Y";
  sysVar.transactionID = CAEZSAP;

   /* *************************************************************/

      /* initialize map*/

  OP0YM001.OP0YMDT = VGVar.currentShortGregorianDate;


      /* load map fields with menu data from table*/

  sysVar.arrayIndex = 1; /* init index*/
  while (sysVar.arrayIndex <= 22 /* check for max loops or*/
   && OP0YT.OP0YTOPT[sysVar.arrayIndex] != 99) /* end of table*/
    OP0YM001.OP0YMFOP[sysVar.arrayIndex] = OP0YT.OP0YTOPT[sysVar.arrayIndex];
    OP0YM001.OP0YMFDH[sysVar.arrayIndex] = "-";
    OP0YM001.OP0YMFDS[sysVar.arrayIndex] = OP0YT.OP0YTDSC[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increment index*/
  end



   /* *************************************************************/
end // end OP0Y001

// converse map to select option
Function OP0Y005()



      /* *********************************************************/
      /* * this process converses the map, edits the entered    **/
      /* * fields and if possible, xfer's to the requested      **/
      /* * application                                          **/
      /* *********************************************************/


      /* move caitem to map*/

  OP0YM001.OP0YMXIT = COMMAREA.CAITEM;


      /* force segmented converse execution mode*/

  converseVar.segmentedMode = 1; /* force segmented execution mode*/



   /* *************************************************************/
  converse OP0YM001 ;
   /* *************************************************************/



      /* clear message fields*/

  OP0YM001.OP0YMMSG = " "; /* clear err msg*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - abort*/
        /* pf1 - transfer to help application*/
        /* pf3 - transfer to next level up application*/
        /* pf4 - transfer to master menu application*/

  if (converseVar.eventKey is enter)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pf1) /* check for system help*/
      XSPF1(); /* help facility*/
      OP0YM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      exit stack;
    else
      if (converseVar.eventKey is pf3) /* check for master menu level*/
        COMMAREA.CAFROMAP = COMMAREA.CACURRAP;
        COMMAREA.CATOAP = "OP0M";
        COMMAREA.CACURRAP = " ";
        transfer to transaction "OP0M" passing COMMAREA;
      else
        if (converseVar.eventKey is pf4) /* check for master menu level*/
          XSPF4(); /* invoke master menu request*/
          OP0YM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
          COMMAREA.CATOAP = " "; /* clear app*/
          exit stack;
        else
          OP0YM001.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY";
          exit stack;
        end
      end
    end
  end


      /* reset map attributes*/

  set OP0YM001.OP0YMOPT initialAttributes;
  set OP0YM001.OP0YMXAP initialAttributes;


      /* save next item if entered*/

  if (OP0YM001.OP0YMXIT is modified) /* has field been changed?*/
    COMMAREA.CAITEM = OP0YM001.OP0YMXIT; /* save reqstd item*/
  end


      /* process selected application*/
      /* search the menu option table for this applicaton*/
      /* if not found, then the entered option is an error*/

  if (OP0YM001.OP0YMOPT == 0) /* null?*/
      /* ** next sentence ** ignore field ***/
  else
    if (OP0YM001.OP0YMOPT in OP0YT.OP0YTOPT)
      COMMAREA.CATOAP = OP0YT.OP0YTAPP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0 /* test for not found in table*/
     || OP0YM001.OP0YMOPT == 99) /* test for end of table rec*/
      OP0YM001.VAGen_EZEMSG = "INVALID APPLICATION SELECTED - REENTER";
      set OP0YM001.OP0YMOPT cursor, modified, bold; /* field error*/
      exit stack; /* branch to flow*/
    end
  end


      /* if no application was selected and fast path was not*/
      /* entered, then ask user to select an application*/

  if (OP0YM001.OP0YMOPT <= 0 /* if no selection then tell user*/
   && OP0YM001.OP0YMXAP <= " ")
    OP0YM001.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    set OP0YM001.OP0YMOPT cursor, modified, bold; /* field error*/
    exit stack; /* branch to flow*/
  end


      /* if application selected and fast path entered,*/
      /* then ask user to erase one*/

  if (OP0YM001.OP0YMOPT > 0 /* if both selected then tell user*/
   && OP0YM001.OP0YMXAP > " ")
    set OP0YM001.OP0YMOPT modified, bold; /* field error*/
    set OP0YM001.OP0YMXAP modified, bold; /* field error*/
    OP0YM001.VAGen_EZEMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
    OP0YM001.OP0YMMSG = "       PLEASE ERASE ONE";
    COMMAREA.CATOAP = " "; /* clear appl*/
    exit stack; /* branch to flow*/
  end


      /* all edits are good at this point*/

      /* if an applicaton was not selected and the fast*/
      /* path was entered, then use the fast path*/

  if (COMMAREA.CATOAP <= " ") /* if appl not selected*/
    COMMAREA.CATOAP = OP0YM001.OP0YMXAP; /* set application*/
  end


      /* all is good; check for transfer*/

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP > " ") /* transfer to appl?*/
      XSEXIT(); /* pass control to exit routine*/
      OP0YM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      if (OP0YM001.OP0YMXAP > " ") /* was appl entered*/
        set OP0YM001.OP0YMXAP cursor, modified, bold; /* yes, set option*/
        exit stack;
      else
        set OP0YM001.OP0YMOPT cursor, modified, bold; /* set select*/
        exit stack;
      end
    end
  end



   /* *************************************************************/
end // end OP0Y005

