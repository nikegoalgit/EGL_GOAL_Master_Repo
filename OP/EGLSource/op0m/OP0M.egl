package op0m;
import corpcom1.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
//*** PROGRAM=OP0M ****
// nike order processing menu
// 
// overview: this application is the menu used for selecting
//           the valid options for the order processing
//           system.  the application will transfer a user to
//           the requested application based upon their
//           security clearance.
// 
// date created: 01/27/86
//       author: steve noble
// 
// maintenance history:
// 
//     date     by whom     overview of changes made
//   --------  ----------  ------------------------------------
//   06/30/88   dwalke     expanded map to show more than 10
//                         options, added new programs to op0mt
// 
//   11/03/88   jwood      checked for add of noncsp opt-unused
//   02/20/89   jwood      segmented trans id set logic added
//   01/30/89   jwood      added option 15 for craine (oricha)
//   02/14/91   tfox       regen for db chgs
//   04/06/94   schase     Added new option application and
//                         removed existing applications to
//                         logically distribute all applicat.
//                         between OP0M and two new applic.
//                         OP0X and OP0Y.
//   06/15/95   mmcgol     Added edit to prevent Canada from
//                         using option 05 - order confirmation
// *********************
Program OP0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use OP0MT {deleteAfterUse = yes}; // table
  use XSOTBL {deleteAfterUse = yes}; // table
  use OP0MM.OP0MM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    OP0M001: OP0M001();
    goto OP0M005;
    OP0M005: OP0M005();
     /* *************************************************************/


        /* branch to converse*/

    goto OP0M005; /* branch to converse*/



  end // end main
end // end OP0M

// program init
Function OP0M001()



     /* **********************************************************/
     /* * this process initializes program work area and clears **/
     /* * the map areas.                                        **/
     /* **********************************************************/

  VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
  VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
  sysLib.commit();
  VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value

      /* check entry security*/

  XSENTRY();

   /* ****************************************************/
   /* *** set segmented trans id                      ****/
   /* ****************************************************/

  CAEZSAP = sysVar.transactionID;
  CAEZSG12 = "OP";
  CAEZSG4 = "M";
  sysVar.transactionID = CAEZSAP;

   /* *************************************************************/

      /* initialize map*/

  OP0MM001.OP0MMDT = VGVar.currentShortGregorianDate;


      /* load map fields with menu data from table*/

  sysVar.arrayIndex = 1; /* init index*/
  while (sysVar.arrayIndex <= 22 /* check for max loops or*/
   && OP0MT.OP0MTOPT[sysVar.arrayIndex] != 99) /* end of table*/
    OP0MM001.OP0MMFOP[sysVar.arrayIndex] = OP0MT.OP0MTOPT[sysVar.arrayIndex];
    OP0MM001.OP0MMFDH[sysVar.arrayIndex] = "-";
    OP0MM001.OP0MMFDS[sysVar.arrayIndex] = OP0MT.OP0MTDSC[sysVar.arrayIndex];
    sysVar.arrayIndex = sysVar.arrayIndex + 1; /* increment index*/
  end



   /* *************************************************************/
end // end OP0M001

// converse map to select option
Function OP0M005()



      /* *********************************************************/
      /* * this process converses the map, edits the entered    **/
      /* * fields and if possible, xfer's to the requested      **/
      /* * application                                          **/
      /* *********************************************************/


      /* move caitem to map*/

  OP0MM001.OP0MMXIT = COMMAREA.CAITEM;


      /* force segmented converse execution mode*/

  converseVar.segmentedMode = 1; /* force segmented execution mode*/



   /* *************************************************************/
  converse OP0MM001 ;
   /* *************************************************************/



      /* clear message fields*/

  OP0MM001.OP0MMMSG = " "; /* clear err msg*/


      /* check and process valid aid key requests*/

      /* enter - continue processing*/
        /* pa2 - abort*/
        /* pf1 - transfer to help application*/
        /* pf3 - transfer to next level up application*/
        /* pf4 - transfer to master menu application*/

  if (converseVar.eventKey is enter)
     /* ** next sentence ** continue processing ***/
  else
    if (converseVar.eventKey is pf1) /* check for system help*/
      XSPF1(); /* help facility*/
      OP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      exit stack;
    else
      if (converseVar.eventKey is pf3) /* check for master menu level*/
        XSPF4(); /* invoke master menu request*/
        OP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
        COMMAREA.CATOAP = " "; /* clear app*/
        exit stack;
      else
        OP0MM001.VAGen_EZEMSG = "INVALID KEY PRESSED - RETRY";
        exit stack;
      end
    end
  end


      /* reset map attributes*/

  set OP0MM001.OP0MMOPT initialAttributes;
  set OP0MM001.OP0MMXAP initialAttributes;


      /* save next item if entered*/

  if (OP0MM001.OP0MMXIT is modified) /* has field been changed?*/
    COMMAREA.CAITEM = OP0MM001.OP0MMXIT; /* save reqstd item*/
  end


      /* process selected application*/
      /* search the menu option table for this applicaton*/
      /* if not found, then the entered option is an error*/

  if (OP0MM001.OP0MMOPT == 0) /* null?*/
      /* ** next sentence ** ignore field ***/
  else
    if (OP0MM001.OP0MMOPT in OP0MT.OP0MTOPT)
      COMMAREA.CATOAP = OP0MT.OP0MTAPP[sysVar.arrayIndex];
    end
    if (sysVar.arrayIndex == 0 /* test for not found in table*/
     || OP0MM001.OP0MMOPT == 99) /* test for end of table rec*/
      OP0MM001.VAGen_EZEMSG = "INVALID APPLICATION SELECTED - REENTER";
      set OP0MM001.OP0MMOPT cursor, modified, bold; /* field error*/
      exit stack; /* branch to flow*/
    else /* added for Canada 6/15/95*/
      if (COMMAREA.XSOCD in XSOTBL.XSOCD
       && XSOTBL.XCTCD[sysVar.arrayIndex] == "CANA"
       && OP0MM001.OP0MMOPT == "05")
        OP0MM001.VAGen_EZEMSG = "05 NOT VALID FOR CANADA - REENTER";
        set OP0MM001.OP0MMOPT cursor, modified, bold; /* field error*/
        exit stack; /* branch to flow*/
      end
    end
  end


      /* if no application was selected and fast path was not*/
      /* entered, then ask user to select an application*/

  if (OP0MM001.OP0MMOPT <= 0 /* if no selection then tell user*/
   && OP0MM001.OP0MMXAP <= " ")
    OP0MM001.VAGen_EZEMSG = "PLEASE SELECT AN APPLICATION";
    set OP0MM001.OP0MMOPT cursor, modified, bold; /* field error*/
    exit stack; /* branch to flow*/
  end


      /* if application selected and fast path entered,*/
      /* then ask user to erase one*/

  if (OP0MM001.OP0MMOPT > 0 /* if both selected then tell user*/
   && OP0MM001.OP0MMXAP > " ")
    set OP0MM001.OP0MMOPT modified, bold; /* field error*/
    set OP0MM001.OP0MMXAP modified, bold; /* field error*/
    OP0MM001.VAGen_EZEMSG = "CANNOT SELECT OPTION AND AN APPLICATION";
    OP0MM001.OP0MMMSG = "       PLEASE ERASE ONE";
    COMMAREA.CATOAP = " "; /* clear appl*/
    exit stack; /* branch to flow*/
  end


      /* all edits are good at this point*/

      /* if an applicaton was not selected and the fast*/
      /* path was entered, then use the fast path*/

  if (COMMAREA.CATOAP <= " ") /* if appl not selected*/
    COMMAREA.CATOAP = OP0MM001.OP0MMXAP; /* set application*/
  end


      /* all is good; check for transfer*/

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP > " ") /* transfer to appl?*/
      XSEXIT(); /* pass control to exit routine*/
      OP0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* move err msg*/
      COMMAREA.CATOAP = " "; /* clear app*/
      if (OP0MM001.OP0MMXAP > " ") /* was appl entered*/
        set OP0MM001.OP0MMXAP cursor, modified, bold; /* yes, set option*/
        exit stack;
      else
        set OP0MM001.OP0MMOPT cursor, modified, bold; /* set select*/
        exit stack;
      end
    end
  end



   /* *************************************************************/
end // end OP0M005

