package ni0b;

import corpcom3.XPNL002;
import corpcom3.XPNL003;
import corpcom3.XPNL005;
import corpcom4.XSENTRY;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpx1.XCTTBL;
import corpx1.XOBTBL;
import corpx1.XPTTBL;
import corpz3.ZDTCD;
import corpz3.ZDTTBL;
import corpz3.ZISCD;
import corpz3.ZISTBL;
import corpz3.ZIVTBL;
import ku.common.KUCREC;
import ni.common.NIWREC;
import nl.common.*;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VMIHDR01;
import vv.common.VMIITM01;
import vv.common.VPIADJ01;
import vv.common.VPIHDR01;
import vv.common.VPIITM01;
//*** PROGRAM=NI0B ****
// Invoice Inquiry Selection Application
// .
//      This application runs only after selection of a
// particular Customer number during the Invoice Inquiry
// Menu (NI0A).
// .
//      It will display and allow selection of Invoices to be
// viewed in subsequent programs based on user-defined
// criteria entered in the Customer sub-menu.  Control returns
// to this program when the user has either viewed all selected
// invoices or has abandoned the Selection list originally
// created in this application.
// .
// Maintenance
//    date     who    Remarks
// ---------- ------  -------
//  11-06-89  tgriff  Moved to Production.
//  01-23-90  jjohns  Added NIAREC display key in s23 & s25.
//  03-07-90  jjohns  Check for array max in s02, s06 and s21.
//  03-14-90  jjohns  Allow zero invoice date for 'mi' zdtcd.
//  04-04-90  jjohns  Change GL fields to match GLAREC.
//  11-18-92  jjudki  Add zchcd to key in ni0bs17 for io4450.
//  11-19-93  ahowar  ziscd missing added to display MC and PI
//  01-07-94  ahowar  pc2cuxid * wild card added
//  11-13-96  kshaw   added prevent abend logic in ni0bs28
//                    when processing only an S.O. and more
//                    than 100 invoices found.
// ---------- ------  -------
//  02-20-98  NGANGO  Y2K Modifications to Statement Grups
//                    NI0BS02 and NI0BS16.
// ---------- ------  -------
//  07-21-00 msing2 Added Invoice Inqiury Based On Nike Sub
//                  Order Id.
// 
// *********************
Program NI0B type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  NI0BW01 NI0BW01; // record
  NI0BW02 NI0BW02; // record
  NI0BW03 NI0BW03; // record
  NI0BW04 NI0BW04; // record
  NIWREC NIWREC; // record
  NLXREC NLXREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VMIHDR01 VMIHDR01; // record
  VMIITM01 VMIITM01; // record
  VPIADJ01 VPIADJ01; // record
  VPIHDR01 VPIHDR01; // record
  VPIITM01 VPIITM01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use ZDTTBL {deleteAfterUse = yes}; // table
  use ZISTBL {deleteAfterUse = yes}; // table
  use ZIVTBL {deleteAfterUse = yes}; // table
  use NI0BM.NI0BM100 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NI0B000: NI0B000();
    ;
    ;
    exit program;
    ;
    ;
    ;
  end // end main
end // end NI0B

// application main logic
Function NI0B000()
  ;
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* *   xsentry checks to ensure that this application was    **/
   /* *         entered from another csp application.           **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  ;
  NI0B001(); /* initilize the application*/
  ;
  NI0BM100.XXXRVNBR = "00"; /* application maint. revision nbr.*/
  ;
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/
  ;
  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NI0B050(); /* screen branch control*/
  end
  ;
  XSPF4();
  ;
  ;
end // end NI0B000

// initialize application
Function NI0B001()
  ;
   /* -----------------------------------------------------------*/
         /* initialize the application working storage*/
  ;
   /* -----------------------------------------------------------*/
  ;
  converseVar.commitOnConverse = 1; /* force db2 to commit on each screen converse*/
  VGVar.handleHardIOErrors = 1; /* return control to program if hard db2 error*/
  ;
  XSSEGTR(); /* set segmented transaction id*/
  XSENTRY(); /* check entered thru main me*/
  ;
  set KUCREC empty; /* clear the customer record*/
  set SQLCA empty; /* clear out the "common" working*/
                                   /* storage*/
  set ERRSQLCA empty; /* clear out the "common" working*/
                                   /* storage*/
  set TA1REC empty; /* clear out the "common" working*/
                                   /* storage*/
  set VMIHDR01 empty; /* clear miscellaneous invoice header*/
  set VMIITM01 empty; /* clear misc inv line item*/
  set VPIHDR01 empty; /* clear product invoice heade*/
  set VPIADJ01 empty; /* clear product invoice adjustments*/
  set VPIITM01 empty; /* clear product invoice line*/
  set NIWREC empty;
                                   /* clear the passed data working storage*/
  set NLXREC empty; /* clear out the "common" working*/
                                   /* storage*/
  set NI0BW01 empty; /* clear application working storage*/
  set NI0BW02 empty; /* clear G/L code match table*/
  set NI0BW03 empty; /* clear date ranges passed to IOMOD*/
  set NI0BW04 empty; /* clear date ranges passed ti IO4470*/
  ;
  if (COMMAREA.CAFRMSYS != "NI")
    COMMAREA.CAUSERA = " ";
  end
  ;
  NIWREC.NIWGROUP = COMMAREA.CAUSERA; /* Load commarea in*/
  ;
  NI0BW01.NI0BWSLL = "N"; /* set 'selection list loaded' flag off*/
  NI0BW01.NI0BWSLC = "N"; /* set 'selection list complete' flag*/
                                   /* off*/
  NI0BW01.NI0BWISF = "N"; /* set 'Invoices selected' flag off*/
  NLXREC.NLXEOAF = "N"; /* set application-done-switch to 'no'*/
  NLXREC.NLXERRF = "N"; /* set error-switch to 'no'*/
  NI0BW01.NI0BWLDX = 1;
  ;
  if (NIWREC.NIWIAIDX <= 100)
    NI0BW01.NI0BWLIX = 97;
  end
  if (NIWREC.NIWIAIDX <= 96)
    NI0BW01.NI0BWLIX = 85;
  end
  if (NIWREC.NIWIAIDX <= 84)
    NI0BW01.NI0BWLIX = 73;
  end
  if (NIWREC.NIWIAIDX <= 72)
    NI0BW01.NI0BWLIX = 61;
  end
  if (NIWREC.NIWIAIDX <= 60)
    NI0BW01.NI0BWLIX = 49;
  end
  if (NIWREC.NIWIAIDX <= 48)
    NI0BW01.NI0BWLIX = 37;
  end
  if (NIWREC.NIWIAIDX <= 36)
    NI0BW01.NI0BWLIX = 25;
  end
  if (NIWREC.NIWIAIDX <= 24)
    NI0BW01.NI0BWLIX = 13;
  end
  if (NIWREC.NIWIAIDX <= 12)
    NI0BW01.NI0BWLIX = 1;
  end
  ;
  NI0BW01.NI0BWNOT = "NOTE: ";
  NI0BW01.NI0BWREM = " INVOICES HAVE BEEN SELECTED";
  ;
   /* ------------------------------------------------------*/
    /* Set up working-storage array of screen names*/
   /* ------------------------------------------------------*/
  ;
  NLXREC.NLXCSCRN = "NI0BM100"; /* first screen of applic.*/
  ;
  NLXREC.NLXSNAME[1] = "NI0BM100";
                                   /* init screens used in this applic.*/
  ;
   /* ------------------------------------------------------*/
    /* Set map-ids and map date*/
   /* ------------------------------------------------------*/
  ;
  NI0BM100.XXXPRCNM = "NI0B100"; /* map process name*/
  ;
  NI0BM100.XXXCURDT = VGVar.currentShortGregorianDate; /* current date*/
  ;
   /* **********************************************/
   /* Was this application entered via 'fastpath'?*/
   /* **********************************************/
  if (COMMAREA.CAFROMAP == "NI0A" /* Fastpath entry not used...*/
   && NIWREC.NIWFRMAP == "NI0A") 
    NIWREC.NIWIATMX = 0; /* set for ck in s21*/
  else
    if (NIWREC.NIWFRMAP == "NI0A")
      NIWREC.NIWMSGNR = 31; /* Transfer in denied...*/
      COMMAREA.CATOAP = "NI0A"; /* Return to Selection menu*/
      COMMAREA.CAUSERA = NIWREC.NIWGROUP;
      XPNL002(); /* Transfer control*/
    else
      if (NIWREC.NIWFRMAP == "NI0B")
        ;
         /* Load out next Invoice, transfer control*/
        ;
        NI0BS27();
        ;
      else
        if (NIWREC.NIWFRMAP == " ")
          NIWREC.NIWMSGNR = 31; /* Transfer in denied...*/
          COMMAREA.CATOAP = "NI0A"; /* Return to Selection menu*/
          COMMAREA.CAUSERA = NIWREC.NIWGROUP;
          XPNL002(); /* Transfer control*/
        end
      end
    end
  end
end // end NI0B001

// screen branch control
Function NI0B050()
  ;
   /* ************************************************************/
   /* *   control process the application screen(s)             **/
   /* *                                                         **/
   /* *  note that this process is being performed in a         **/
   /* *  "while loop" until the end-of-application flag is set  **/
   /* *  to 'y'.                                                **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  NLXREC.NLXCPROC = "NI0B050"; /* set current process name*/
  ;
  ;
  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;
  ;
  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME)
     /* if current-screen-name is in the screen-array, then set*/
     /* the screen-index*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex;
  end
  ;
  ;
  NLXREC.NLXEOSF = "N"; /* set end-of-screen flag to 'no'*/
  NLXREC.NLXBLDSC = "Y"; /* set build screen flag to 'yes'*/
  NLXREC.NLXERRF = "N"; /* clear error flag*/
  converseLib.validationFailed(0);
  ;
  if (NLXREC.NLXSCRNX == 1) /* if screen ni0bm001*/
    while (NLXREC.NLXEOSF == "N") /* while not end-of-screen*/
      NI0B100(); /* process screen ni0bm001*/
    end
  end
  ;
  ;
   /* at this point;*/
       /* if the end-of-application flag (nlxeoaf ) = 'n'*/
         /* the perform will return to the top of ni0%050...*/
       /* else*/
         /* the perform will auto return to ni0%000.*/
  ;
  ;
end // end NI0B050

// NIL invoice selection list
Function NI0B100()
  ;
   /* -----------------------------------------------------------*/
       /* process screen ni0bm100*/
  ;
     /* note - this process is being performed in a*/
        /* "while loop" from ni0b050 until the end-of-screen*/
        /* flag (nlxeosfl) is set to 'y'.*/
  ;
   /* -----------------------------------------------------------*/
  ;
  NLXREC.NLXCPROC = "NI0B100";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NI0B101();
    NLXREC.NLXBLDSC = "N";
  end
  ;
  ;
  converse NI0BM100 ;
  ;
  NI0BM100.VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  ;
  NI0B110(); /* check attention identifier*/
  ;
  if (NLXREC.NLXERRF == "N" /* check for error*/
   && NI0BM100 is modified)
    NI0B120(); /* process entered option*/
  end
  ;
  if (NLXREC.NLXERRF == "N") /* check for error*/
    NI0B130(); /* determine next action...*/
  end
  ;
  ;
end // end NI0B100

// build screen
Function NI0B101()
   /* **************************************/
   /* Build map NI0BM100*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NI0B101";
  ;
  converseLib.clearScreen();
  set NI0BM100 initial;
  ;
  NI0BM100.XXXRVNBR = "00"; /* revision nbr*/
  NI0BM100.XXXMAPNM = "NI0BM100"; /* map name*/
  NI0BM100.XXXPRCNM = "NI0B100"; /* process name*/
  NI0BM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
   /* ************************************/
   /* Load header fields with passed data*/
   /* ************************************/
  ;
  NI0BW01.NI0BWKUC = NIWREC.KUCCOID;
  NI0BW01.NI0BWKUM = NIWREC.KUMSTRID;
  NI0BM100.NI0BMCST = NI0BW01.NI0BWCST;
  ;
  if (NIWREC.KUCCONM == " ") /* If Customer name is blank*/
    ;
    KUCREC.KUCCOID = NIWREC.KUCCOID; /* Load key*/
    ;
    NI0BS01(); /* Select unique - kucrec*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* If found*/
      NIWREC.KUCCONM = KUCREC.KUCCONM; /* save customer name*/
      if (KUCREC.XCTCD in XCTTBL.XCTCD)
        NIWREC.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
      end
      if (KUCREC.XCTCD in XCTTBL.XCTCD)
        NIWREC.XCTABRV = XCTTBL.XCTABRV[sysVar.arrayIndex];
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* If not found*/
        NIWREC.NIWMSGNR = 9; /* Company number nrf*/
        COMMAREA.CATOAP = "NI0A";
        COMMAREA.CAUSERA = NIWREC.NIWGROUP;
        XPNL002();
        return;
      end
    end
  end
  ;
  NI0BM100.KUCCONM = NIWREC.KUCCONM;
  NI0BM100.XCTABRV = NIWREC.XCTABRV;
  ;
  NI0BM100.NIWIVCDL = NIWREC.NIWIVCDL;
  NI0BM100.NIWIVCDH = NIWREC.NIWIVCDH;
  NI0BM100.OP1CUNDT = NIWREC.OP1CUNDT;
  NI0BM100.NIWCUNDT = NIWREC.NIWCUNDT;
  ;
  if (NIWREC.NIWPDTL != 0)
    NI0BW01.NI0BWPDA = NIWREC.NIWPDTL;
    NI0BW01.NI0BWSLA = "-";
    NI0BW01.NI0BWPMN = NI0BW01.NI0BWPMO;
    NI0BW01.NI0BWPYR = NI0BW01.NI0BWPYE;
    NI0BM100.NIWPDTL = NI0BW01.NI0BWPDT;
  end
  ;
  if (NIWREC.NIWPDTH != 0)
    NI0BW01.NI0BWPDA = NIWREC.NIWPDTH;
    NI0BW01.NI0BWSLA = "-";
    NI0BW01.NI0BWPMN = NI0BW01.NI0BWPMO;
    NI0BW01.NI0BWPYR = NI0BW01.NI0BWPYE;
    NI0BM100.NIWPDTH = NI0BW01.NI0BWPDT;
  end
  ;
  NI0BM100.SY1STNBR = NIWREC.SY1STNBR;
  NI0BM100.SY2CLRID = NIWREC.SY2CLRID;
  NI0BM100.XDMCD = NIWREC.XDMCD;
  NI0BM100.XQACD = NIWREC.XQACD;
  NI0BM100.ZPSCD = NIWREC.ZPSCD;
  NI0BM100.XOBCD = NIWREC.XOBCD;
  NI0BM100.XGPCD = NIWREC.XGPCD;
  NI0BM100.OP1CUPO = NIWREC.OP1CUPO;
  NI0BM100.XOCCD = NIWREC.XOCCD;
  NI0BM100.NIWGLACC = NIWREC.NIWGLACC;
  ;
  if (NIWREC.NIWFRMAP == "NI0A"
   && NI0BW01.NI0BWSLL == "N") /* Selection list not loaded*/
    ;
    NI0BS02(); /* Load Invoices array*/
    ;
    NI0BW01.NI0BWLDX = 1;
    NI0BW01.NI0BWSLL = "Y"; /* Selection list loaded now*/
  else
    NI0BW01.NI0BWMAX = NIWREC.NIWIAMAX;
    NI0BM100.VAGen_EZEMSG = NI0BW01.NI0BWMSG;
  end
  ;
   /* ***************************/
   /* Load a screen of Invoices*/
   /* ***************************/
  while (NI0BW01.NI0BWSLC == "N") /* Selection list NOT complete*/
    ;
    NI0BS21(); /* Load next screen of Invoices*/
    ;
  end
  ;
  NI0BW01.NI0BWSLC = "N"; /* Prepare for NEXT screen*/
end // end NI0B101

// Validate PF keys, act on some
Function NI0B110()
   /* ************************************************************/
     /* validate pf keys*/
  ;
     /* The keys acted upon are PF 1, 3, 4 and 20.*/
   /* ************************************************************/
  ;
  ;
  set NI0BM100.CATOAP initialAttributes;
  set NI0BM100.CAITEM initialAttributes;
  ;
  ;
      /* check for fastpath option/item*/
  ;
  if (converseVar.eventKey is enter)
    if (NI0BM100.CATOAP != " ") /* if fastpath option entered,*/
      COMMAREA.CATOAP = NI0BM100.CATOAP;
      COMMAREA.CAITEM = NI0BM100.CAITEM;
      COMMAREA.CAUSERA = " ";
      XPNL002(); /* exit application*/
    end
  end
  ;
  ;
  if (converseVar.eventKey is enter /* normal 'enter'*/
   || converseVar.eventKey is pf7   /* scroll back requested*/
   || converseVar.eventKey is pf8)  /* scroll forward requested*/
    return;
  end
  ;
  ;
  if (converseVar.eventKey is pf1) /* skip edit/updt, go to 'help'*/
    XSPF1();
  end
  ;
  ;
  ;
  if (converseVar.eventKey is pf3)
    NIWREC.NIWFRMAP = "NI0B";
    COMMAREA.CAUSERA = NIWREC.NIWGROUP;
    COMMAREA.CATOAP = "NI0A"; /* return to sel menu*/
    XPNL002(); /* exit*/
  end
  ;
  ;
  if (converseVar.eventKey is pf4) /* go to master menu*/
    COMMAREA.CAUSERA = " ";
    XSPF4();
  end
  ;
  ;
  if (converseVar.eventKey is pf20)
    COMMAREA.CATOAP = "NI0J";
    XPNL002(); /* exit*/
  end
  ;
  ;
      /* pf key not valid*/
  ;
  converseLib.validationFailed(2); /* pf key not valid*/
  NLXREC.NLXERRF = "Y"; /* mark with error*/
  ;
  ;
end // end NI0B110

// Process selected invoices
Function NI0B120()
   /* ****************************************************/
   /* Update the array with selections made on screen...*/
   /* ****************************************************/
  ;
  NI0BW01.NI0BWSCX = 12; /* Edit screen in reverse order...*/
  NI0BW01.NI0BWIDX = NI0BW01.NI0BWLIX;
  NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX + 11;
  ;
  if (NI0BW01.NI0BWIDX > 96) /* Outside array boundary?*/
    NI0BW01.NI0BWIDX = 100; /* Set final screen maximums*/
    NI0BW01.NI0BWSCX = 4;
  end
  ;
  while (NI0BW01.NI0BWSCX > 0) /* For all screen entries*/
    ;
    if (NI0BM100.NI0BMSEL[NI0BWSCX] == "A") /* If selection is 'a'*/
      if (NI0BW01.NI0BWSCX == 1 /* on first screen entry*/
       && NI0BW01.NI0BWIDX == 1) /* on first array entry*/
        ;
        NI0BS26(); /* Select ALL invoices*/
        ;
        NIWREC.NIWIAIDX = NI0BW01.NI0BWIDX;
        ;
      else
        ;
        set NI0BM100.NI0BMSEL[NI0BWSCX] cursor, modified, bold;
        converseLib.validationFailed(28);
        NLXREC.NLXERRF = "Y";
      end
    else
      ;
      if (NI0BM100.NI0BMSEL[NI0BWSCX] == "S") /* Invoice selected*/
        ;
        NIWREC.NIWIASFL[NI0BWIDX] = NI0BM100.NI0BMSEL[NI0BWSCX];
        NIWREC.NIWIAIDX = NI0BW01.NI0BWIDX;
        ;
      else
        ;
        if (NI0BM100.NI0BMSEL[NI0BWSCX] == " ") /* Invoice not selected*/
          ;
          NIWREC.NIWIASFL[NI0BWIDX] = NI0BM100.NI0BMSEL[NI0BWSCX];
          ;
        else
          ;
          if (NI0BM100.NI0BMSEL[NI0BWSCX] == "V" /* Invoice viewed*/
           && NI0BM100.NI0BMSEL[NI0BWSCX] not modified)
             /* next sentence*/
          else
            set NI0BM100.NI0BMSEL[NI0BWSCX] cursor, modified, bold;
            converseLib.validationFailed(28); /* Invalid selection*/
            NLXREC.NLXERRF = "Y";
          end
        end
      end
    end
    NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX - 1; /* Decrement*/
    NI0BW01.NI0BWSCX = NI0BW01.NI0BWSCX - 1; /* Indices*/
  end
end // end NI0B120

// determine next action
Function NI0B130()
   /* **************************************/
   /* Determine next action from 1st screen*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NI0B130";
  ;
  if (COMMAREA.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CAUSERA = " ";
    COMMAREA.CAUSERA = NIWREC.NIWGROUP;
    XPNL002();
    return;
  end
   /* *****************************/
   /* Reverse scrolling requested*/
   /* *****************************/
  ;
  if (converseVar.eventKey is pf7) /* Reverse requested*/
    if (NI0BW01.NI0BWLIX == 1) /* From first screen*/
      ;
      converseLib.validationFailed(29); /* Top-of-file...*/
      NLXREC.NLXERRF = "Y";
      return;
    else
      NI0BW01.NI0BWLIX = NI0BW01.NI0BWLIX - 12; /* Reset array index*/
      NLXREC.NLXBLDSC = "Y"; /* Re-build screen*/
    end
  end
   /* *****************************/
   /* Forward scrolling requested*/
   /* *****************************/
  ;
  if (converseVar.eventKey is pf8) /* Forward scroll requested*/
    if (NI0BW01.NI0BWLIX == 97) /* From last screen*/
      ;
      converseLib.validationFailed(30); /* Bottom-of-file...*/
      NLXREC.NLXERRF = "Y";
      return;
    else
      NI0BW01.NI0BWIDX = NI0BW01.NI0BWLIX; /* Get current low index*/
      NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX + 12; /* Set to top of next scrn*/
      if (NIWREC.NIWIAIVC[NI0BWIDX] == 0) /* Is an invoice present?*/
        converseLib.validationFailed(30); /* Bottom-of-file...*/
        NLXREC.NLXERRF = "Y";
        return;
      else
        NI0BW01.NI0BWLIX = NI0BW01.NI0BWLIX + 12; /* Reset array index*/
        NLXREC.NLXBLDSC = "Y"; /* Re-build screen*/
      end
    end
  end
  ;
   /* ***********************************************/
   /* Find first selected invoice, transfer control*/
   /* ***********************************************/
  ;
  if (converseVar.eventKey is enter) /* Enter key given...*/
    ;
    NI0BW01.NI0BWIDX = 1; /* From beginning*/
    while (NI0BW01.NI0BWIDX <= 100 /* Search array*/
     && NI0BW01.NI0BWIDX > 0)
      if (NIWREC.NIWIAIVC[NI0BWIDX] != 0) /* Invoice present*/
        ;
        if (NIWREC.NIWIASFL[NI0BWIDX] == "S") /* 'Selected' flag on*/
          ;
          NIWREC.NIWIAIDX = NI0BW01.NI0BWIDX; /* Save index*/
          NIWREC.NIWFRMAP = "NI0B";
          NIWREC.NIWQUIT = "N";
          ;
          if (NIWREC.NIWZDTCD[NI0BWIDX] == "PI" /* If Product Invoice*/
           || NIWREC.NIWZDTCD[NI0BWIDX] == "MC") /* Or Material Content*/
            ;
            COMMAREA.CATOAP = "NI0C"; /* P/I Header Inquiry*/
            ;
          else
            ;
            COMMAREA.CATOAP = "NI0G"; /* M/I Header Inquiry*/
          end
          ;
          COMMAREA.CAUSERA = NIWREC.NIWGROUP;
          XPNL002(); /* Transfer control*/
          return;
        end
      end
      ;
      NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX + 1; /* Increment index*/
    end
    converseLib.validationFailed(1); /* Option not valid*/
  end
end // end NI0B130

// Select Unique - KUCREC
Function NI0BS01()
   /* ************************/
   /* KUCREC - Select Unique*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS01";
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* Read Customer*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0240 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS01

// Initial Invoice array load
Function NI0BS02()
  ;
  NLXREC.NLXCPROC = "NI0BS02";
  ;
   /* ****************************/
   /* Initial Invoice array load*/
   /* ****************************/
  ;
  NI0BW01.NI0BWLDX = 1;
  NI0BW01.NI0BWLIX = 1;
  NIWREC.NIWIAIDX = 1;
  ;
  while (NI0BW01.NI0BWLDX <= 100)
    NIWREC.NIWIASFL[NI0BWLDX] = " ";
    NIWREC.NIWIAIVC[NI0BWLDX] = 0;
    NIWREC.NIWZDTCD[NI0BWLDX] = " ";
    NIWREC.NIWIAGPC[NI0BWLDX] = " ";
    NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
  end
  ;
  NI0BW01.NI0BWLDX = 1;
  ;
  if (NIWREC.OP1CUOID > 0)
     /* process nierec cursor1 for selection by order nbr*/
    NI0BS28();
    NI0BS31(); /* check if any rows in selection list*/
    return;
  end
  ;
  NI0BW04.NI0BWIOT = "S2";
  ;
  VPIHDR01.KUCCOID = NIWREC.KUCCOID;
  ;
  if (NIWREC.KUMSTRID == 0) /* If Store id is 0*/
    VPIHDR01.KUMSTRID = -1; /* Set 'wildcard' value in key*/
  else
    VPIHDR01.KUMSTRID = NIWREC.KUMSTRID;
  end
  ;
   /* Since ship-id not on selection screen, wildcard*/
  ;
  VPIHDR01.TSFSHPID = -1;
  ;
  if (NIWREC.OP1CUPO == " ") /* If Customer P.O. is spaces*/
    VPIHDR01.OP1CUPO = "*"; /* Set 'wildcard' in key*/
  else
    VPIHDR01.OP1CUPO = NIWREC.OP1CUPO;
  end
  ;
  if (NIWREC.XOBCD == " ") /* If Order type code is spaces*/
    VPIHDR01.XOBCD = "**"; /* Set 'wildcard' value in key*/
  else
    VPIHDR01.XOBCD = NIWREC.XOBCD;
  end
  ;
  if (NIWREC.XOCCD == " ") /* If Order Class code is spaces*/
    VPIHDR01.XOCCD = "**"; /* Set 'wildcard' in key*/
  else
    VPIHDR01.XOCCD = NIWREC.XOCCD;
  end
  ;
  if (NI0BW01.ZISCD == " ") /* If Document Type is spaces*/
    VPIHDR01.ZISCD = "**"; /* Set 'wildcard' in key*/
  else
    VPIHDR01.ZISCD = NI0BW01.ZISCD;
  end
  ;
  if (NIWREC.ZDTCD == " ") /* If Document Type is spaces*/
    VPIHDR01.ZDTCD = "**"; /* Set 'wildcard' in key*/
  else
    VPIHDR01.ZDTCD = NIWREC.ZDTCD;
  end
  ;
  if (NIWREC.ZPSCD == " ") /* If Product Source is spaces*/
    VPIHDR01.ZPSCD = "**"; /* Set 'wildcard' in key*/
  else
    VPIHDR01.ZPSCD = NIWREC.ZPSCD;
  end
  ;
  VPIHDR01.PC2CUXID = "*";
  ;
  NI0BW04.NI0BWFID = NIWREC.NIWIVCDL;
  NI0BW04.NI0BWTID = NIWREC.NIWIVCDH;
  ;
  if (NIWREC.NIWPDTL == 0
   && NIWREC.NIWPDTH == 0)
    NI0BW04.NI0BWFPM = NIWREC.NIWPDTL;
    NI0BW04.NI0BWTPM = 999999999;
  else
    NI0BW01.NI0BWMYR = NIWREC.NIWPDTL;
    NI0BW01.NI0BWOMN = NI0BW01.NI0BWINM;
    NI0BW01.NI0BWOYR = NI0BW01.NI0BWINY;
    NI0BW04.NI0BWFPM = NI0BW01.NI0BWYRM;
    /*  */
    /* --------- Y2K OUT BEGIN ---------*/
    /*  */
    /* NI0BW04.NI0BWFPM = NI0BW04.NI0BWFPM + 190000;*/
    /*  */
    /* --------- Y2K OUT END  ----------*/
    /*  */
    /*  */
    /* --------- Y2K IN  BEGIN ---------*/
    /*  */
    if (NI0BW01.NI0BWINY > 60)
      NI0BW04.NI0BWFPM = NI0BW04.NI0BWFPM + 190000;
    else
      NI0BW04.NI0BWFPM = NI0BW04.NI0BWFPM + 200000;
    end
    /*  */
    /* --------- Y2K IN END ------------*/
    /*  */
    NI0BW04.NI0BWTPM = NI0BW04.NI0BWFPM;
    ;
    if (NIWREC.NIWPDTH > 0)
      NI0BW01.NI0BWMYR = NIWREC.NIWPDTH;
      NI0BW01.NI0BWOMN = NI0BW01.NI0BWINM;
      NI0BW01.NI0BWOYR = NI0BW01.NI0BWINY;
      NI0BW04.NI0BWTPM = NI0BW01.NI0BWYRM;
      /*  */
      /* --------- Y2K OUT BEGIN ---------*/
      /*  */
      /* NI0BW04.NI0BWTPM = NI0BW04.NI0BWTPM + 190000;*/
      /*  */
      /* --------- Y2K OUT END -----------*/
      /*  */
      /*  */
      /* --------- Y2K IN  BEGIN ---------*/
      /*  */
      if (NI0BW01.NI0BWINY > 60)
        NI0BW04.NI0BWTPM = NI0BW04.NI0BWTPM + 190000;
      else
        NI0BW04.NI0BWTPM = NI0BW04.NI0BWTPM + 200000;
      end
      /*  */
      /* --------- Y2K IN END ------------*/
      /*  */
    end
  end
  ;
  if (NIWREC.OP1CUNDT == 0
   && NIWREC.NIWCUNDT == 0)
    NI0BW04.NI0BWFND = NIWREC.OP1CUNDT;
    NI0BW04.NI0BWTND = 999999999;
  else
    NI0BW04.NI0BWFND = NIWREC.OP1CUNDT;
    NI0BW04.NI0BWTND = NIWREC.OP1CUNDT;
    if (NIWREC.NIWCUNDT > 0)
      NI0BW04.NI0BWTND = NIWREC.NIWCUNDT;
    end
  end
  ;
  NI0BS03(); /* Open Invoice header cursor 2*/
  ;
  NI0BW01.NI0BWCOE = "Y"; /* Set 'cursor open' flag on*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    NI0BW01.NI0BWCOE = "N"; /* Set 'cursor open' flag off*/
  end
  ;
  NLXREC.NLXERRF = "N"; /* Set error flag off*/
  NI0BW01.NI0BWFCT = 0; /* Set fetch-count to 0*/
  NI0BW04.NI0BWIOT = "N2";
  ;
  while (NI0BW01.NI0BWCOE == "Y") /* While 'cursor open' flag on*/
    ;
    NI0BS04(); /* Load / Close cursor 2 - Inv. Hdr*/
    ;
    if (NI0BW01.NI0BWLDX > 100
     && NI0BW01.NI0BWCOE == "Y") /* Cursor still open after fetch*/
      NI0BS32(); /* Close cursor 2 - Inv. Hdr*/
      NIWREC.NIWIATMX = NI0BW01.NI0BWLDX; /* save for ck in s21*/
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(160); /* More than 100 invoices found*/
    end
    ;
    if (NI0BW01.NI0BWCOE == "Y") /* Cursor still open after fetch*/
      if (VPIHDR01.NIDIVCID != 0) /* Invoice 0 is a draft*/
        ;
        NI0BW01.NI0BWFCT = NI0BW01.NI0BWFCT + 1;
        ;
        /* **********************************************/
         /* Check if G/L account selection has been made*/
        /* **********************************************/
        NLXREC.NLXERRF = "N";
        if (NIWREC.NIWGLACC != " ") /* If requesting G/L code*/
          ;
          NI0BS07(); /* Match G/L-Load G/L Code-found array*/
          ;
        end
        /* **********************************************/
         /* Check if GPC/Style selections have been made*/
        /* **********************************************/
        if (NLXREC.NLXERRF == "N") /* No mis-match in previous step*/
          if (NIWREC.XGPCD != " " /* If GPC is requested*/
           || NIWREC.SY1STNBR != " ") /* or Style is requested*/
            ;
            NI0BS08(); /* Match GPC/Style - Load to NIWREC*/
            ;
          end
        end
        /* **************************/
         /* Check if GPC NOT entered*/
        /* **************************/
        if (NLXREC.NLXERRF == "N") /* No mis-match in previous step*/
          if (NIWREC.XGPCD == " ") /* If GPC is NOT requested*/
            ;
            NI0BS15(); /* Get GPC code from 1st line item*/
            ;
          end
        end
      end
    else
      ;
      if (NI0BW01.NI0BWLDX <= 100) /* 100 = array max*/
        ;
         /* Look for Miscellaneous Invoices*/
        ;
        NI0BS16();
        ;
      end
      NI0BW01.NI0BWSLL = "Y";
                                   /* Set 'selection list loaded' on*/
    end
  end
  ;
  NI0BS31(); /* check if any rows in selection list*/
  ;
  ;
  ;
end // end NI0BS02

// Open cursor 2 - NIEREC
Function NI0BS03()
   /* ************************/
   /* NIEREC - Open cursor 2*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS03";
  ;
  call "IO4470" (NI0BW04, SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Open P/I hdr cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S2     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS03

// Load/close cursor - NIEREC
Function NI0BS04()
   /* ******************************/
   /* NIEREC - Load/Close Cursor 2*/
   /* ******************************/
  ;
  NLXREC.NLXCPROC = "NI0BS04";
  ;
  call "IO4470" (NI0BW04, SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Load P/I hdr cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "N2     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
      XPNL005(); /* abend routine*/
      if (SQLCA.VAGen_SQLCODE == -911)
        NI0BW01.NI0BWCOE = "N"; /* Set cursor switch off*/
      end
    else
      ;
      /* ************************/
       /* NIEREC - Close cursor 2*/
      /* ************************/
      NI0BS32();
      ;
    end
  end
end // end NI0BS04

// Open cursor 1 - NIAREC
Function NI0BS05()
   /* ************************/
   /* NIAREC - Open cursor 2*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS05";
  ;
  call "IO4440" (NI0BW03, SQLCA, VMIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Open M/I hdr cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S2     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4440 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VMIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  else
    NI0BW01.NI0BWCOA = "Y"; /* Set 'cursor open' flag on*/
  end
end // end NI0BS05

// Load/close cursor 2 - NIAREC
Function NI0BS06()
   /* ************************/
   /* NIAREC - Load Cursor 2*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS06";
  ;
  call "IO4440" (NI0BW03, SQLCA, VMIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Load M/I hdr cursor*/
  ;
  if (NI0BW01.NI0BWLDX > 100 /* ck for more than max*/
   && SQLCA.VAGen_SQLCODE == 0)
    NIWREC.NIWIATMX = NI0BW01.NI0BWLDX; /* save for ck in s21*/
    SQLCA.VAGen_SQLCODE = 100;
  end
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    if (NIWREC.NIWGLACC == " ")
      ;
      NIWREC.NIWIAIVC[NI0BWLDX] = VMIHDR01.NIDIVCID; /* Load*/
      NIWREC.NIWZDTCD[NI0BWLDX] = VMIHDR01.ZDTCD; /* array*/
      ;
      NI0BW01.NI0BWMAX = NI0BW01.NI0BWMAX + 1;
      NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
    end
    ;
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "N2     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4440 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VMIHDR01"; /* table view*/
      XPNL005(); /* abend routine*/
    else
      ;
      NI0BS33(); /* close niarec cursor 2*/
      ;
    end
  end
  ;
  ;
  ;
end // end NI0BS06

// Match G/L - Load out invoice
Function NI0BS07()
   /* *******************************************/
   /* Match G/L code, load G/L code-found table*/
   /* *******************************************/
  ;
  NLXREC.GLAENT = VPIHDR01.NIEENT1; /* Build A/R G/L code*/
  NLXREC.GLARCID = VPIHDR01.NIERCID1;
  NLXREC.GLANTAC = VPIHDR01.NIENTAC1;
  NLXREC.GLASUB = VPIHDR01.NIESUB1;
  NLXREC.GLAPRJ = VPIHDR01.NIEPRJ1;
  ;
  if (NIWREC.NIWGLACC == NLXREC.GLAGRP) /* Is it the selected G/L code?*/
    ;
    NI0BW02.NI0BWINV = VPIHDR01.NIDIVCID; /* Yes,*/
    NI0BW02.NI0BWZDT = VPIHDR01.ZDTCD; /* Save Invoice/doctype*/
    ;
  else /* No, look for it in 'Sales'*/
    ;
    NLXREC.GLAENT = VPIHDR01.NIEENT2; /* Build Sales G/L code*/
    NLXREC.GLARCID = VPIHDR01.NIERCID2;
    NLXREC.GLANTAC = VPIHDR01.NIENTAC2;
    NLXREC.GLASUB = VPIHDR01.NIESUB2;
    NLXREC.GLAPRJ = VPIHDR01.NIEPRJ2;
    ;
    if (NIWREC.NIWGLACC == NLXREC.GLAGRP) /* Is it the selected G/L code?*/
      ;
      NI0BW02.NI0BWINV = VPIHDR01.NIDIVCID; /* Yes,*/
      NI0BW02.NI0BWZDT = VPIHDR01.ZDTCD; /* Save Invoice/doctype*/
      ;
    else /* No, look for it in 'Costs'*/
      ;
      NLXREC.GLAENT = VPIHDR01.NIEENT3; /* Build Costs G/L code*/
      NLXREC.GLARCID = VPIHDR01.NIERCID3;
      NLXREC.GLANTAC = VPIHDR01.NIENTAC3;
      NLXREC.GLASUB = VPIHDR01.NIESUB3;
      NLXREC.GLAPRJ = VPIHDR01.NIEPRJ3;
      ;
      if (NIWREC.NIWGLACC == NLXREC.GLAGRP) /* Selected G/L code?*/
        ;
        NI0BW02.NI0BWINV = VPIHDR01.NIDIVCID; /* Yes,*/
        NI0BW02.NI0BWZDT = VPIHDR01.ZDTCD; /* Save Invoice/doctype*/
        ;
      else /* No, look for it in 'adjustments'*/
        ;
        VPIADJ01.NIDIVCID = VPIHDR01.NIDIVCID; /* invoice nbr*/
        VPIADJ01.OP2LNINB = -1; /* Set line number 'wildcard'*/
        ;
        NI0BS09(); /* Open cursor - NIGREC*/
        ;
        NI0BW01.NI0BWCOG = "Y"; /* Set 'cursor open' flag on*/
        ;
        if (SQLCA.VAGen_SQLCODE == -911)
          NI0BW01.NI0BWCOG = "N";
          NI0BW01.NI0BWCOE = "N";
                                   /* for main while loop in ni0bs02*/
        end
        ;
        while (NI0BW01.NI0BWCOG == "Y") /* While cursor is open...*/
          ;
          NI0BS10(); /* Load/Close cursor - NIGREC*/
          ;
          if (SQLCA.VAGen_SQLCODE == -911)
            NI0BW01.NI0BWCOG = "N";
            NI0BW01.NI0BWCOE = "N";
                                   /* for main while loop in ni0bs02*/
          end
          ;
          if (NI0BW01.NI0BWCOG == "Y") /* Cursor still open after fetch*/
            ;
            NLXREC.GLAENT = VPIADJ01.GLAENT;
            NLXREC.GLARCID = VPIADJ01.GLARCID;
            NLXREC.GLANTAC = VPIADJ01.GLANTAC;
            NLXREC.GLASUB = VPIADJ01.GLASUB;
            NLXREC.GLAPRJ = VPIADJ01.GLAPRJ;
            ;
            if (NIWREC.NIWGLACC == NLXREC.GLAGRP) /* G/L acct match on adj*/
              ;
              NI0BW02.NI0BWINV = VPIADJ01.NIDIVCID;
              NI0BW02.NI0BWZDT = VPIHDR01.ZDTCD;
              ;
              NI0BS14(); /* Close cursor - NIGREC*/
              ;
              return;
            end
          else
            NLXREC.NLXERRF = "Y"; /* Mis-match on G/L Code*/
          end
        end
      end
    end
  end
end // end NI0BS07

// Match GPC/Style - Load out Inv
Function NI0BS08()
   /* *****************************************/
   /* Match GPC/Style - Load invoice to array*/
   /* *****************************************/
  ;
  if (NLXREC.GLAGRP != " ") /* If G/L acct selected*/
    ;
    if (NI0BW02.NI0BWINV != 0)
      VPIITM01.NIDIVCID = NI0BW02.NI0BWINV; /* G/L match found*/
    end
    ;
  else /* No G/L code has been entered*/
    ;
    VPIITM01.NIDIVCID = VPIHDR01.NIDIVCID; /* Build P/I item key*/
    ;
  end
  ;
  if (NIWREC.XGPCD == " ") /* If no GPC code selected...*/
    VPIITM01.XGPCD = "**"; /* Set 'wildcard'*/
  else
    VPIITM01.XGPCD = NIWREC.XGPCD; /* Set specific GPC*/
  end
  ;
  if (NIWREC.SY1STNBR == " ") /* If no Style # selected*/
    VPIITM01.SY1STNBR = "******"; /* Set 'wildcard'*/
  else
    VPIITM01.SY1STNBR = NIWREC.SY1STNBR; /* Set specific style*/
  end
  ;
  if (NIWREC.SY2CLRID == " ") /* If no color id selected*/
    VPIITM01.SY2CLRID = "***"; /* Set 'wildcard'*/
  else
    VPIITM01.SY2CLRID = NIWREC.SY2CLRID; /* Set specific color*/
  end
  ;
  if (NIWREC.XDMCD == " ") /* If dimension code selected*/
    VPIITM01.XDMCD = "**"; /* Set 'wildcard'*/
  else
    VPIITM01.XDMCD = NIWREC.XDMCD; /* Set specific dimension*/
  end
  ;
  if (NIWREC.XQACD == " ") /* If quality code selected*/
    VPIITM01.XQACD = "**"; /* Set 'wildcard'*/
  else
    VPIITM01.XQACD = NIWREC.XQACD; /* Set specific xqacd*/
  end
  ;
  NI0BS11(); /* Open cursor - NIHREC = line item*/
  ;
  NI0BW01.NI0BWCOH = "Y"; /* Set 'cursor open' flag on*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    NI0BW01.NI0BWCOH = "N"; /* Set 'cursor open' flag on*/
    NI0BW01.NI0BWCOE = "N"; /* controls main while loop in ni0bs02*/
  end
  ;
  while (NI0BW01.NI0BWCOH == "Y") /* While cursor is open*/
    ;
    NI0BS12(); /* Load / close cursor - NIHREC*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911)
      NI0BW01.NI0BWCOH = "N"; /* Set 'cursor open' flag on*/
      NI0BW01.NI0BWCOE = "N"; /* controls main while loop in ni0bs02*/
    end
    ;
    if (NI0BW01.NI0BWCOH == "Y") /* Cursor still open after fetch*/
      ;
      NIWREC.NIWIAIVC[NI0BWLDX] = VPIITM01.NIDIVCID; /* Load*/
      NIWREC.NIWZDTCD[NI0BWLDX] = VPIHDR01.ZDTCD; /* array*/
      NIWREC.NIWIAGPC[NI0BWLDX] = VPIITM01.XGPCD; /* fields...*/
      ;
      NI0BW01.NI0BWMAX = NI0BW01.NI0BWMAX + 1;
      NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
      ;
      NI0BS13(); /* Close cursor - NIHREC*/
      ;
    else
      ;
      NLXREC.NLXERRF = "Y"; /* Mis-match on GPC/Style*/
    end
    ;
  end
end // end NI0BS08

// Open cursor 1 - NIGREC
Function NI0BS09()
   /* ************************/
   /* NIGREC - Open cursor 1*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS09";
  ;
  call "IO4510" ("S1", SQLCA, VPIADJ01) {isNoRefresh = yes, isExternal = yes}; /* Open P/I adj cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4510 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIADJ01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS09

// Load/Close cursor - NIGREC
Function NI0BS10()
   /* ************************/
   /* NIGREC - Load Cursor 1*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS10";
  ;
  call "IO4510" ("N1", SQLCA, VPIADJ01) {isNoRefresh = yes, isExternal = yes}; /* Load P/I adj cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "N1     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4510 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VPIADJ01"; /* table view*/
      XPNL005(); /* abend routine*/
    else
      NI0BW01.NI0BWCOG = "N"; /* Set cursor switch off*/
      /* ************************/
       /* NIGREC - Close cursor 1*/
      /* ************************/
      ;
      call "IO4510" ("C1", SQLCA, VPIADJ01) {isNoRefresh = yes, isExternal = yes};
                                                    /* Close P/I adj cursor*/
      ;
      if (SQLCA.VAGen_SQLCODE != 0)
        TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
        TA1REC.TA1LOCAT[3] = "IO4510 "; /* io module*/
        TA1REC.TA1DBASE = "DNILO"; /* database*/
        TA1REC.TA1TBLVU = "VPIITM01"; /* table view*/
        XPNL005(); /* abend routine*/
      end
    end
  end
end // end NI0BS10

// Open cursor 1 - NIHREC
Function NI0BS11()
   /* ************************/
   /* NIHREC - Open cursor 1*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS11";
  ;
  call "IO4480" ("S1", SQLCA, VPIITM01) {isNoRefresh = yes, isExternal = yes}; /* Open P/I itm cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4480 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIITM01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS11

// Load/Close cursor - NIHREC
Function NI0BS12()
   /* ************************/
   /* NIHREC - Load Cursor 1*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS12";
  ;
  call "IO4480" ("N1", SQLCA, VPIITM01) {isNoRefresh = yes, isExternal = yes}; /* Load P/I itm cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "N1     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4480 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VPIITM01"; /* table view*/
      XPNL005(); /* abend routine*/
    else
      NI0BW01.NI0BWCOH = "N"; /* Set cursor switch off*/
      /* ************************/
       /* NIHREC - Close cursor 1*/
      /* ************************/
      ;
      call "IO4480" ("C1", SQLCA, VPIITM01) {isNoRefresh = yes, isExternal = yes};
                                                    /* Close P/I itm cursor*/
      ;
      if (SQLCA.VAGen_SQLCODE != 0)
        TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
        TA1REC.TA1LOCAT[3] = "IO4480 "; /* io module*/
        TA1REC.TA1DBASE = "DNILO"; /* database*/
        TA1REC.TA1TBLVU = "VPIITM01"; /* table view*/
        XPNL005(); /* abend routine*/
      end
    end
  end
end // end NI0BS12

// Close cursor - NIHREC
Function NI0BS13()
   /* ************************/
   /* NIHREC - Close cursor*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS13";
  ;
  call "IO4480" ("C1", SQLCA, VPIITM01) {isNoRefresh = yes, isExternal = yes}; /* Close P/I itm cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4480 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIITM01"; /* table view*/
    XPNL005(); /* abend routine*/
  else
    NI0BW01.NI0BWCOH = "N";
  end
end // end NI0BS13

// Close cursor - NIGREC
Function NI0BS14()
   /* ************************/
   /* NIGREC - Close cursor*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS14";
  ;
  call "IO4510" ("C1", SQLCA, VPIADJ01) {isNoRefresh = yes, isExternal = yes}; /* Close P/I adj cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4510 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIADJ01"; /* table view*/
    XPNL005(); /* abend routine*/
  else
    NI0BW01.NI0BWCOG = "N"; /* Set 'cursor open' flag off*/
  end
end // end NI0BS14

// Get GPC code for display
Function NI0BS15()
   /* *****************************************/
   /* Get GPC Code for display purposes*/
   /* *****************************************/
  ;
  if (NLXREC.GLAGRP != " ") /* If G/L acct selected*/
    ;
    if (NI0BW02.NI0BWINV != 0)
      VPIITM01.NIDIVCID = NI0BW02.NI0BWINV; /* G/L match found*/
    end
    ;
  else /* No G/L code has been entered*/
    ;
    VPIITM01.NIDIVCID = VPIHDR01.NIDIVCID; /* Build P/I item key*/
    ;
  end
  ;
  VPIITM01.XGPCD = "**"; /* Set 'wildcard'*/
  VPIITM01.SY1STNBR = "******"; /* Set 'wildcard'*/
  VPIITM01.SY2CLRID = "***";
  VPIITM01.XDMCD = "**";
  VPIITM01.XQACD = "**";
  ;
  NI0BS11(); /* Open cursor - NIHREC*/
  ;
  NI0BW01.NI0BWCOH = "Y"; /* Set 'cursor open' flag on*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    NI0BW01.NI0BWCOH = "N"; /* Set 'cursor open' flag on*/
    NI0BW01.NI0BWCOE = "N"; /* controls main while loop in ni0bs02*/
  end
  ;
  while (NI0BW01.NI0BWCOH == "Y") /* While cursor is open*/
    ;
    NI0BS12(); /* Load / close cursor - NIHREC*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911)
      NI0BW01.NI0BWCOH = "N"; /* Set 'cursor open' flag on*/
      NI0BW01.NI0BWCOE = "N"; /* controls main while loop in ni0bs02*/
    end
    ;
    if (NI0BW01.NI0BWCOH == "Y") /* Cursor still open after fetch*/
      ;
      NIWREC.NIWIAIVC[NI0BWLDX] = VPIITM01.NIDIVCID; /* Load*/
      NIWREC.NIWZDTCD[NI0BWLDX] = VPIHDR01.ZDTCD; /* array*/
      NIWREC.NIWIAGPC[NI0BWLDX] = VPIITM01.XGPCD; /* fields...*/
      ;
      NI0BW01.NI0BWMAX = NI0BW01.NI0BWMAX + 1;
      NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
      ;
      NI0BS13(); /* Close cursor - NIHREC*/
      ;
    else /* Cursor closed after single fetch*/
      if (SQLCA.VAGen_SQLCODE == -911)
        return;
      end
      NIWREC.NIWIAIVC[NI0BWLDX] = VPIHDR01.NIDIVCID; /* Load*/
      NIWREC.NIWZDTCD[NI0BWLDX] = VPIHDR01.ZDTCD; /* Load*/
      NIWREC.NIWIAGPC[NI0BWLDX] = "??"; /* fields...*/
      NI0BW01.NI0BWMAX = NI0BW01.NI0BWMAX + 1;
      NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
      converseLib.validationFailed(82); /* Invoice found w/no line items*/
      return;
    end
  end
end // end NI0BS15

// Lookup Misc. Invoice Headers
Function NI0BS16()
  ;
  NLXREC.NLXCPROC = "NI0BS16";
  ;
   /* ****************************/
   /* Miscellaneous Invoice load*/
   /* ****************************/
  ;
   /* *******************************************************/
   /* If ANY non-miscellaneous invoices criteria selected..*/
   /* *******************************************************/
  if (NIWREC.ZDTCD == "MI")
    /* next sentence*/
  else
    if (NIWREC.OP1CUNDT != 0
     || NIWREC.NIWCUNDT != 0
     || NIWREC.XGPCD != " "
     || NIWREC.XOBCD != " "
     || NI0BW01.ZISCD != " "
     || NIWREC.XOCCD != " "
     || NIWREC.ZPSCD != " "
     || NIWREC.ZDTCD != " "
     || NIWREC.SY1STNBR != " "
     || NIWREC.SY2CLRID != " "
     || NIWREC.XDMCD != " "
     || NIWREC.XQACD != " ")
      return; /* BOUNCE*/
    end
  end
  ;
  if (NIWREC.KUCCOID == 0)
    VMIHDR01.KUCCOID = -1;
  else
    VMIHDR01.KUCCOID = NIWREC.KUCCOID;
  end
  ;
  ;
  if (NIWREC.KUMSTRID == 0)
    VMIHDR01.KUMSTRID = -1;
  else
    VMIHDR01.KUMSTRID = NIWREC.KUMSTRID;
  end
  ;
  if (NIWREC.OP1CUPO == " ")
    VMIHDR01.OP1CUPO = "*";
  else
    VMIHDR01.OP1CUPO = NIWREC.OP1CUPO;
  end
  ;
   /* invoice dates*/
  NI0BW03.NI0BWFID = NIWREC.NIWIVCDL;
  NI0BW03.NI0BWTID = NIWREC.NIWIVCDH;
  ;
   /* posting months*/
  ;
  ;
  if (NIWREC.NIWPDTL == 0
   && NIWREC.NIWPDTH == 0)
    NI0BW03.NI0BWFPM = NIWREC.NIWPDTL;
    NI0BW03.NI0BWTPM = 999999999;
  else
    NI0BW01.NI0BWMYR = NIWREC.NIWPDTL;
    NI0BW01.NI0BWOMN = NI0BW01.NI0BWINM;
    NI0BW01.NI0BWOYR = NI0BW01.NI0BWINY;
    NI0BW03.NI0BWFPM = NI0BW01.NI0BWYRM;
    NI0BW03.NI0BWTPM = NI0BW01.NI0BWYRM;
    /*  */
    /* ------------ Y2K OUT BEGIN ----------------*/
    /*  */
    /* NI0BW03.NI0BWFPM = NI0BW03.NI0BWFPM + 190000;*/
    /*  */
    /* ------------ Y2K OUT END  -----------------*/
    /*  */
    /*  */
    /* ------------ Y2K IN BEGIN -----------------*/
    /*  */
    if (NI0BW01.NI0BWINY > 60)
      NI0BW03.NI0BWFPM = NI0BW03.NI0BWFPM + 190000;
    else
      NI0BW03.NI0BWFPM = NI0BW03.NI0BWFPM + 200000;
    end
    /*  */
    /* ------------ Y2K IN END -------------------*/
    /*  */
    NI0BW03.NI0BWTPM = NI0BW03.NI0BWFPM;
    ;
    if (NIWREC.NIWPDTH > 0)
      NI0BW01.NI0BWMYR = NIWREC.NIWPDTH;
      NI0BW01.NI0BWOMN = NI0BW01.NI0BWINM;
      NI0BW01.NI0BWOYR = NI0BW01.NI0BWINY;
      NI0BW03.NI0BWTPM = NI0BW01.NI0BWYRM;
      /*  */
      /* ------------ Y2K OUT BEGIN ----------------*/
      /*  */
      /* NI0BW03.NI0BWTPM = NI0BW03.NI0BWTPM + 190000;*/
      /*  */
      /* ------------ Y2K OUT END  -----------------*/
      /*  */
      /*  */
      /* ------------ Y2K IN BEGIN -----------------*/
      /*  */
      if (NI0BW01.NI0BWINY > 60)
        NI0BW03.NI0BWTPM = NI0BW03.NI0BWTPM + 190000;
      else
        NI0BW03.NI0BWTPM = NI0BW03.NI0BWTPM + 200000;
      end
      /*  */
      /* ------------ Y2K IN END -------------------*/
      /*  */
    end
  end
  ;
  NI0BW03.NI0BWIOT = "S2"; /* Load in IO-TASK*/
  ;
  NI0BS05(); /* Open niarec cursor 2*/
  ;
  NI0BW01.NI0BWCOA = "Y"; /* Set 'cursor open' flag on*/
  NLXREC.NLXERRF = "N"; /* Set error flag off*/
  NI0BW01.NI0BWFCT = 0; /* Set fetch-count to 0*/
  NI0BW03.NI0BWIOT = "N2";
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    NI0BW01.NI0BWCOE = "N"; /* ni0bwcoe is for loop in ni0bs02*/
    NI0BW01.NI0BWCOA = "N"; /* Set 'cursor open' flag on*/
    NLXREC.NLXERRF = "Y"; /* Set error flag off*/
  end
  ;
  while (NI0BW01.NI0BWCOA == "Y") /* While 'cursor open' flag on*/
    ;
    NI0BS06(); /* Load / Close cursor 2 - niarec*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911)
      NI0BW01.NI0BWCOA = "N"; /* Set 'cursor open' flag on*/
    end
    ;
    if (NI0BW01.NI0BWCOA == "Y") /* Cursor still open after fetch*/
      ;
      NI0BW01.NI0BWFCT = NI0BW01.NI0BWFCT + 1;
      ;
      /* **********************************************/
       /* Check if G/L account selection has been made*/
      /* **********************************************/
      if (NIWREC.NIWGLACC != " ") /* If requesting G/L code*/
        ;
        NI0BS17(); /* Match G/L-Get Misc. line items*/
        ;
      end
    end
  end
  ;
  ;
  ;
end // end NI0BS16

// Lookup Misc. Invoice headers
Function NI0BS17()
   /* *******************************************/
   /* Match G/L code, load G/L code-found table*/
   /* *******************************************/
  ;
  NLXREC.GLAENT = VMIHDR01.GLAENT; /* Build A/R G/L code*/
  NLXREC.GLARCID = VMIHDR01.GLARCID;
  NLXREC.GLANTAC = VMIHDR01.GLANTAC;
  NLXREC.GLASUB = VMIHDR01.GLASUB;
  NLXREC.GLAPRJ = VMIHDR01.GLAPRJ;
  ;
  if (NIWREC.NIWGLACC == NLXREC.GLAGRP) /* Is it the selected G/L code?*/
    ;
    NIWREC.NIWIAIVC[NI0BWLDX] = VMIHDR01.NIDIVCID; /* Load*/
    NIWREC.NIWZDTCD[NI0BWLDX] = VMIHDR01.ZDTCD; /* array*/
    ;
    NI0BW01.NI0BWMAX = NI0BW01.NI0BWMAX + 1;
    NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
    ;
  else /* No, look for it in Misc. line items*/
    ;
    VMIITM01.NIDIVCID = VMIHDR01.NIDIVCID; /* Build key*/
    VMIITM01.ZCHCD = "**"; /* zch-chg-typ-cd*/
    ;
    NI0BS18(); /* Open cursor - nibrec*/
    ;
    NI0BW01.NI0BWCOB = "Y"; /* Set 'cursor open' flag on*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911)
      NI0BW01.NI0BWCOB = "N"; /* Set 'cursor open' flag on*/
      NI0BW01.NI0BWCOA = "N"; /* controls main while loop in ni0bs16*/
    end
    ;
    while (NI0BW01.NI0BWCOB == "Y") /* While cursor is open...*/
      ;
      NI0BS19(); /* Load/Close cursor - NIBREC*/
      ;
      if (SQLCA.VAGen_SQLCODE == -911)
        NI0BW01.NI0BWCOB = "N"; /* Set 'cursor open' flag on*/
        NI0BW01.NI0BWCOA = "N";
                                   /* controls main while loop in ni0bs16*/
      end
      ;
      if (NI0BW01.NI0BWCOB == "Y") /* Cursor still open after fetch*/
        ;
        NLXREC.GLAENT = VMIITM01.GLAENT;
        NLXREC.GLARCID = VMIITM01.GLARCID;
        NLXREC.GLANTAC = VMIITM01.GLANTAC;
        NLXREC.GLASUB = VMIITM01.GLASUB;
        NLXREC.GLAPRJ = VMIITM01.GLAPRJ;
        ;
        if (NIWREC.NIWGLACC == NLXREC.GLAGRP) /* G/L match on Misc. l/i*/
          ;
          NIWREC.NIWIAIVC[NI0BWLDX] = VMIITM01.NIDIVCID; /* Load*/
          NIWREC.NIWZDTCD[NI0BWLDX] = VMIHDR01.ZDTCD; /* array*/
          ;
          NI0BW01.NI0BWMAX = NI0BW01.NI0BWMAX + 1;
          NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
          ;
          NI0BS20(); /* Close cursor - nibrec*/
          ;
        end
      else
        NLXREC.NLXERRF = "Y"; /* Mis-match on G/L Code*/
      end
    end
  end
end // end NI0BS17

// Open cursor 1 - NIBREC
Function NI0BS18()
   /* ************************/
   /* NIBREC - Open cursor 1*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS18";
  ;
  call "IO4450" ("S1", SQLCA, VMIITM01) {isNoRefresh = yes, isExternal = yes}; /* Open M/I itm cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4450 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VMIITM01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS18

// Load/Close cursor - NIBREC
Function NI0BS19()
   /* ************************/
   /* NIBREC - Load Cursor 1*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS19";
  ;
  call "IO4450" ("N1", SQLCA, VMIITM01) {isNoRefresh = yes, isExternal = yes}; /* Load M/I itm cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "N1     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4450 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VMIITM01"; /* table view*/
      XPNL005(); /* abend routine*/
    else
      NI0BW01.NI0BWCOB = "N"; /* Set cursor switch off*/
      /* ************************/
       /* NIBREC - Close cursor 1*/
      /* ************************/
      ;
      call "IO4450" ("C1", SQLCA, VMIITM01) {isNoRefresh = yes, isExternal = yes};
                                                    /* Close M/I itm cursor*/
      ;
      if (SQLCA.VAGen_SQLCODE != 0)
        TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
        TA1REC.TA1LOCAT[3] = "IO4450 "; /* io module*/
        TA1REC.TA1DBASE = "DNILO"; /* database*/
        TA1REC.TA1TBLVU = "VMIITM01"; /* table view*/
        XPNL005(); /* abend routine*/
      end
    end
  end
end // end NI0BS19

// Close cursor - NIBREC
Function NI0BS20()
   /* ************************/
   /* NIBREC - Close cursor*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS20";
  ;
  call "IO4450" ("C1", SQLCA, VMIITM01) {isNoRefresh = yes, isExternal = yes}; /* Close M/I itm cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4450 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VMIITM01"; /* table view*/
    XPNL005(); /* abend routine*/
  else
    NI0BW01.NI0BWCOB = "N"; /* Set 'cursor open' flag off*/
  end
end // end NI0BS20

// Load next screen of Invoices
Function NI0BS21()
   /* *********************************************/
   /* Load the next screen of Invoices from array*/
   /* *********************************************/
  ;
  NI0BW01.NI0BWSCX = 1; /* Load screen from line 1*/
  ;
   /* Reset to screen we were on*/
  ;
  NI0BW01.NI0BWIDX = NI0BW01.NI0BWLIX;
  ;
  if (NI0BW01.NI0BWMAX == 0)
    /* next sentence*/
     /* MOVE 37 TO NIWREC.NIWMSGNR;*/
     /* MOVE ' ' TO COMMAREA.CAUSERA;*/
     /* MOVE NIWREC.NIWGROUP TO COMMAREA.CAUSERA;*/
     /* MOVE 'NI0A' TO COMMAREA.CATOAP;*/
     /* PERFORM XPNL002;*/
     /* MOVE 37 TO EZEMNO;*/
     /* MOVE 'Y' TO NLXREC.NLXERRF;*/
  else
    if (NIWREC.NIWIATMX > 100)
      converseLib.validationFailed(160); /* more than 100 invoices*/
    else
      VAGen_EZEMSG = NI0BW01.NI0BWMSG;
    end
  end
  ;
  while (NI0BW01.NI0BWSCX <= 12)
    set NI0BM100.NIAIVAMT[NI0BWSCX] normal;
    set NI0BM100.NI0BMSEL[NI0BWSCX] skip, invisible;
    NI0BW01.NI0BWSCX = NI0BW01.NI0BWSCX + 1;
  end
  NI0BW01.NI0BWSCX = 1; /* Load screen from line 1*/
  ;
  while (NI0BW01.NI0BWSCX <= 12)
    set NI0BM100.NIAIVAMT[NI0BWSCX] skip;
    NI0BW01.NI0BWSCX = NI0BW01.NI0BWSCX + 1;
  end
  NI0BW01.NI0BWSCX = 1; /* Load screen from line 1*/
  ;
  while (NI0BW01.NI0BWSCX <= 12) /* Screen not yet full*/
    if (NIWREC.NIWIAIVC[NI0BWIDX] != 0) /* Invoice present*/
      ;
      NI0BM100.NI0BMSEL[NI0BWSCX] = NIWREC.NIWIASFL[NI0BWIDX];
      NI0BM100.NIDIVCID[NI0BWSCX] = NIWREC.NIWIAIVC[NI0BWIDX];
      if (NIWREC.NIWZDTCD[NI0BWIDX] in ZDTTBL.ZDTCD)
        NI0BM100.ZDTABRV[NI0BWSCX] = ZDTTBL.ZDTABRV[sysVar.arrayIndex];
      end
      NI0BM100.NI0BMGPC[NI0BWSCX] = NIWREC.NIWIAGPC[NI0BWIDX];
      set NI0BM100.NI0BMSEL[NI0BWSCX] normal;
      ;
      /* *****************************************/
       /* Lookup the appropiate Invoice Header...*/
      /* *****************************************/
      ;
      if (NIWREC.NIWZDTCD[NI0BWIDX] == "PI" /* If Product Invoice*/
       || NIWREC.NIWZDTCD[NI0BWIDX] == "MC") /* Or Material Content*/
        ;
        NI0BS22(); /* Lookup Specific P/I Invoice header*/
        ;
      else
        ;
        NI0BS23(); /* Lookup Specific Misc. Invoice hdr*/
        ;
      end
       /* ELSE ;*/
         /* SET NI0BM100.NI0BMSEL(NI0BWSCX) AUTOSKIP,DARK;*/
    end
    ;
    NI0BW01.NI0BWSCX = NI0BW01.NI0BWSCX + 1; /* Increment*/
    NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX + 1; /* Indices...*/
    ;
    if (NI0BW01.NI0BWIDX > 100) /* array max*/
      NI0BW01.NI0BWSCX = 13; /* exit loop*/
    end
  end
  ;
  NI0BW01.NI0BWSLC = "Y"; /* Set 'selection list complete' on*/
end // end NI0BS21

// Lookup P/I Inv hdr - load scrn
Function NI0BS22()
   /* *************************/
   /* Get Specific P/I Header*/
   /* *************************/
  ;
  VPIHDR01.NIDIVCID = NIWREC.NIWIAIVC[NI0BWIDX]; /* Build key*/
  ;
  NI0BS24(); /* Select unique - NIEREC*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* Record found*/
    ;
    NI0BW01.NI0BWCUO = VPIHDR01.OP1CUOID;
    NI0BW01.NI0BWNOR = VPIHDR01.OP1NORID;
    NI0BM100.NI0BMORD[NI0BWSCX] = NI0BW01.NI0BWORD;
    ;
    if (VPIHDR01.XOBCD in XOBTBL.XOBCD)
      NI0BM100.XOBABRV[NI0BWSCX] = XOBTBL.XOBABRV[sysVar.arrayIndex];
    end
    ;
    NLXREC.XXXWCYMD = VPIHDR01.TSFDPRTA;
    ;
    XPNL003();
    ;
    NI0BM100.TSFDPRTA[NI0BWSCX] = NLXREC.XXXFLDT;
    ;
    if (VPIHDR01.ZISCD in ZISTBL.ZISCD)
      NI0BM100.ZISABRV[NI0BWSCX] = ZISTBL.ZISABRV[sysVar.arrayIndex];
    end
    ;
    NI0BM100.NIAIVAMT[NI0BWSCX] = VPIHDR01.NIAIVAMT;
    ;
    if (VPIHDR01.XPTCD == "NN")
      set NI0BM100.NIAIVAMT[NI0BWSCX] invisible;
    end
    ;
    NI0BW01.NI0BWPMD = VPIHDR01.NIAGLPMO;
    NI0BW01.NI0BWPYR = NI0BW01.NI0BWPYY;
    NI0BW01.NI0BWPMN = NI0BW01.NI0BWPMM;
    NI0BW01.NI0BWSLA = "-";
    NI0BM100.NIAGLPDT[NI0BWSCX] = NI0BW01.NI0BWPDT;
    ;
  else
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS22

// Lookup Specific M/I Header
Function NI0BS23()
  ;
  NLXREC.NLXCPROC = "NI0BS23";
  ;
   /* *************************/
   /* Get Specific M/I Header*/
   /* *************************/
  ;
  VMIHDR01.NIDIVCID = NIWREC.NIWIAIVC[NI0BWIDX]; /* Build key*/
  NI0BW01.NI0BWIVC = VMIHDR01.NIDIVCID; /* display key*/
  NI0BW01.ZDTCD = NIWREC.NIWZDTCD[NI0BWIDX];
  ;
  NI0BS25(); /* Select unique - NIAREC*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* Record found*/
    ;
    NI0BW01.NI0BWCUO = VMIHDR01.OP1CUOID;
    NI0BW01.NI0BWNOR = VMIHDR01.OP1NORID;
    NI0BM100.NI0BMORD[NI0BWSCX] = NI0BW01.NI0BWORD;
    ;
    NI0BM100.XOBABRV[NI0BWSCX] = " ";
    ;
    NLXREC.XXXWCYMD = VMIHDR01.SR1SHPDT;
    ;
    XPNL003();
    ;
    NI0BM100.TSFDPRTA[NI0BWSCX] = NLXREC.XXXFLDT;
     /* get invoice type abbrev*/
    if (VMIHDR01.ZIVCD in ZIVTBL.ZIVCD)
      NI0BM100.XOBABRV[NI0BWSCX] = ZIVTBL.ZIVABRV[sysVar.arrayIndex];
    end
    /* get invoice status*/
    if (VMIHDR01.ZISCD in ZISTBL.ZISCD)
      NI0BM100.ZISABRV[NI0BWSCX] = ZISTBL.ZISABRV[sysVar.arrayIndex];
    end
    ;
    NI0BM100.NIAIVAMT[NI0BWSCX] = VMIHDR01.NIAIVAMT;
    ;
    if (VMIHDR01.XPTCD == "NN")
      set NI0BM100.NIAIVAMT[NI0BWSCX] invisible;
    end
    ;
    NI0BW01.NI0BWPMD = VMIHDR01.NIAGLPMO;
    NI0BW01.NI0BWPYR = NI0BW01.NI0BWPYY;
    NI0BW01.NI0BWPMN = NI0BW01.NI0BWPMM;
    NI0BW01.NI0BWSLA = "-";
    NI0BM100.NIAGLPDT[NI0BWSCX] = NI0BW01.NI0BWPDT;
    ;
    NI0BW01.NI0BWLDX = NI0BW01.NI0BWLDX + 1;
  else
    TA1REC.TA1TBLKE = NI0BW01.NI0BWAKE; /* database key*/
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4440 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VMIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS23

// Select unique - NIEREC
Function NI0BS24()
   /* ************************/
   /* NIEREC - Select Unique*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS24";
  ;
  call "IO4470" ("S ", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Read P/I hdr*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS24

// Select unique - NIAREC
Function NI0BS25()
   /* ************************/
   /* NIAREC - Select Unique*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0BS25";
  ;
  call "IO4440" ("S ", SQLCA, VMIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Read M/I hdr*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1TBLKE = NI0BW01.NI0BWAKE; /* database key*/
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4440 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VMIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS25

// "Select" all invoices in array
Function NI0BS26()
   /* *********************************************/
   /* Set all invoices in array to 'selected' (s)*/
   /* *********************************************/
  ;
  NIWREC.NIWIAIDX = 1;
  NI0BW01.NI0BWIDX = 1;
  NI0BW01.NI0BWISF = "Y"; /* Set 'invoices selected' flag on*/
  ;
  while (NI0BW01.NI0BWIDX <= 100 /* For all array entries*/
   && NI0BW01.NI0BWIDX > 0)
    if (NIWREC.NIWIAIVC[NI0BWIDX] != 0) /* that contain invoices*/
      ;
      NIWREC.NIWIASFL[NI0BWIDX] = "S"; /* 'Select' it*/
      ;
    end
    NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX + 1;
    ;
  end
  NI0BW01.NI0BWIDX = 1;
end // end NI0BS26

// Get next invoice, xfer control
Function NI0BS27()
   /* ***********************************************/
   /* Find next selected invoice, transfer control*/
   /* ***********************************************/
  ;
  NIWREC.NIWIASFL[NIWIAIDX] = "V";
  ;
  if (NIWREC.NIWQUIT == "Y")
    NIWREC.NIWQUIT = "N";
    return;
  else
    NI0BW01.NI0BWIDX = 1; /* From beginning*/
    while (NI0BW01.NI0BWIDX <= 100 /* Search array*/
     && NI0BW01.NI0BWIDX > 0)
      if (NIWREC.NIWIAIVC[NI0BWIDX] != 0) /* Invoice present*/
        ;
        if (NIWREC.NIWIASFL[NI0BWIDX] == "S") /* 'Selected' flag on*/
          ;
          NIWREC.NIWIAIDX = NI0BW01.NI0BWIDX; /* Save index*/
          NIWREC.NIWFRMAP = "NI0B";
          NIWREC.NIWQUIT = "N";
          ;
          if (NIWREC.NIWZDTCD[NI0BWIDX] == "PI" /* If Product Invoice*/
           || NIWREC.NIWZDTCD[NI0BWIDX] == "MC") /* Or Material Content*/
            ;
            COMMAREA.CATOAP = "NI0C"; /* P/I Header Inquiry*/
            ;
          else
            ;
            COMMAREA.CATOAP = "NI0G"; /* M/I Header Inquiry*/
          end
          ;
          COMMAREA.CAUSERA = NIWREC.NIWGROUP;
          XPNL002(); /* Transfer control*/
          return;
        end
      end
      ;
      NI0BW01.NI0BWIDX = NI0BW01.NI0BWIDX + 1; /* Increment index*/
    end
  end
end // end NI0BS27

// process nierec cursor1
Function NI0BS28()
  ;
  ;
  NLXREC.NLXCPROC = "NI0BS28";
  ;
   /* declare and read cursor1*/
  NI0BS29();
  ;
  NI0BW01.NI0BWEND = "N";
  NI0BW01.NI0BWONE = "Y";
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    NI0BW01.NI0BWEND = "Y";
  end
  ;
  while (NI0BW01.NI0BWEND == "N"
   && NI0BW01.NI0BWLDX <= 100) /* INVOICE ARRAY*/
    NI0BS30(); /* fetch rows*/
    ;
    if (SQLCA.VAGen_SQLCODE == -911)
      NI0BW01.NI0BWEND = "Y";
    end
    ;
    if (NI0BW01.NI0BWEND == "N")
      NI0BS15(); /* get gpccd and build item*/
    end
  end
  ;
  if (NI0BW01.NI0BWLDX >= 100)
    NI0BS34(); /* CLOSE C1 VPIHDROQ1 CURSOR*/
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(160); /* MORE THAN 100 INVOICES*/
    NIWREC.NIWIATMX = NI0BW01.NI0BWLDX; /* save for ck in s21*/
  end
  ;
  ;
end // end NI0BS28

// declare nierec cursor1
Function NI0BS29()
  ;
  ;
  NLXREC.NLXCPROC = "NI0BS29";
  ;
   /* declare and read cursor -*/
  ;
   /* format key for invoice header table*/
  VPIHDR01.OP1CUOID = NIWREC.OP1CUOID;
  ;
   /* TCS Change Begins 07/21/00*/
  ;
   /* MOVE -1 TO VPIHDR01.OP1NORID;*/
  ;
  if (NIWREC.OP1NORID == 0)
    VPIHDR01.OP1NORID = -1;
  else
    VPIHDR01.OP1NORID = NIWREC.OP1NORID;
  end
  ;
   /* TCS Change End 07/21/00*/
  ;
   /* delclare cursor for product invoice header*/
  call "IO4470" ("S1", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes};
  ;
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  ;
  ;
end // end NI0BS29

// fetch rows from nierec
Function NI0BS30()
  ;
  NLXREC.NLXCPROC = "NI0BS30"; /* set current proc name*/
  ;
   /* fetch from cursor*/
  call "IO4470" ("N1", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    if (NI0BW01.NI0BWONE == "Y")
      NI0BW01.NI0BWONE = "N";
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      call "IO4470" ("C1", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes};
      NI0BW01.NI0BWEND = "Y";
    else
      TA1REC.TA1LOCAT[2] = "N1     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
  ;
  ;
end // end NI0BS30

// check if any row in sel list
Function NI0BS31()
  ;
  NLXREC.NLXCPROC = "NI0BS31"; /* set current proc name*/
  ;
  ;
   /* **************************/
   /* Were any Invoices found?*/
   /* **************************/
  ;
  if (NI0BW01.NI0BWMAX != 0) /* If Invoices were found*/
    NIWREC.NIWIAMAX = NI0BW01.NI0BWMAX; /* Load out max array value*/
    ;
  else /* No Invoices found*/
    ;
    NIWREC.NIWMSGNR = 37; /* No Invoices found*/
    COMMAREA.CATOAP = "NI0A"; /* Return to Selection Menu*/
    COMMAREA.CAUSERA = NIWREC.NIWGROUP;
    XPNL002();
  end
  ;
  ;
  ;
end // end NI0BS31

// Close cursor 2 - NIEREC
Function NI0BS32()
   /* ******************************/
   /* NIEREC - Close Cursor 2*/
   /* ******************************/
  ;
  NLXREC.NLXCPROC = "NI0BS32";
  ;
  NI0BW01.NI0BWCOE = "N"; /* Set cursor switch off*/
  ;
   /* ************************/
   /* NIEREC - Close cursor 2*/
   /* ************************/
  ;
  call "IO4470" ("C2", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Close P/I Hdr cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "C2     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0BS32

// Close cursor 2 - NIAREC
Function NI0BS33()
  ;
  NLXREC.NLXCPROC = "NI0BS33";
  ;
  NI0BW01.NI0BWCOA = "N"; /* Set cursor switch off*/
  ;
   /* ************************/
   /* NIAREC - Close cursor 2*/
   /* ************************/
  NI0BW03.NI0BWIOT = "C2";
  ;
  call "IO4440" (NI0BW03, SQLCA, VMIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Close M/I Hdr cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "C2     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4440 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VMIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  ;
  ;
end // end NI0BS33

// Close cursor 1 - vpihdr01
Function NI0BS34()
   /* ******************************/
   /* vpihdr01 Close Cursor 1*/
   /* ******************************/
  ;
  NLXREC.NLXCPROC = "NI0BS34";
  ;
   /* MOVE 'N' TO NI0BW01.NI0BWCOE;     /* not used for cursor 1*/
  ;
  call "IO4470" ("C1", SQLCA, VPIHDR01) {isNoRefresh = yes, isExternal = yes}; /* Close P/I Hdr cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "C1     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4470 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VPIHDR01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  ;
end // end NI0BS34

//*** RECORD=NI0BW01 ****
// Working storage variables for ni0b.
// ***********************
Record NI0BW01 type basicRecord
  5 NI0BWORD NI0BWORD ; 
    10 NI0BWCUO NI0BWCUO ; 
    10 NI0BWNOR NI0BWNOR ; 
  5 NI0BWCST NI0BWCST ; 
    10 NI0BWKUC NI0BWKUC ; 
    10 NI0BWKUM NI0BWKUM ; 
  5 NI0BWPMD NI0BWPMD ; 
    10 * num(5) ; 
    10 NI0BWPYY NI0BWPYY ; 
    10 NI0BWPMM NI0BWPMM ; 
  5 NI0BWPDA NI0BWPDA ; 
    10 NI0BWPMO NI0BWPMO ; 
    10 NI0BWPYE NI0BWPYE ; 
  5 NI0BWPDT NI0BWPDT ; 
    10 NI0BWPMN NI0BWPMN ; 
    10 NI0BWSLA NI0BWSLA ; 
    10 NI0BWPYR NI0BWPYR ; 
  5 NI0BWSCX NI0BWSCX ; 
  5 NI0BWIDX NI0BWIDX ; 
  5 NI0BWLDX NI0BWLDX ; 
  5 NI0BWLIX NI0BWLIX ; 
  5 NI0BWCOA NI0BWCOA ; 
  5 NI0BWCOB NI0BWCOB ; 
  5 NI0BWCOE NI0BWCOE ; 
  5 NI0BWCOG NI0BWCOG ; 
  5 NI0BWCOH NI0BWCOH ; 
  5 NI0BWFCT NI0BWFCT ; 
  5 NI0BWSLL NI0BWSLL ; 
  5 NI0BWSLC NI0BWSLC ; 
  5 NI0BWISF NI0BWISF ; 
  5 NI0BWMSG NI0BWMSG ; 
    10 NI0BWNOT NI0BWNOT ; 
    10 NI0BWMAX NI0BWMAX ; 
    10 NI0BWREM NI0BWREM ; 
  5 NI0BWERR NI0BWERR ; 
  5 NI0BWMYR NI0BWMYR ; 
    10 NI0BWINM NI0BWINM ; 
    10 NI0BWINY NI0BWINY ; 
  5 NI0BWYRM NI0BWYRM ; 
    10 NI0BWOYR NI0BWOYR ; 
    10 NI0BWOMN NI0BWOMN ; 
  5 NI0BWONE NI0BWONE ; 
  5 NI0BWEND NI0BWEND ; 
  5 NI0BWAKE NI0BWAKE ; 
    10 NI0BWIVC NI0BWIVC ; 
    10 ZDTCD ZDTCD ; 
  5 ZISCD ZISCD ; 
end // end NI0BW01

//*** RECORD=NI0BW02 ****
// Related Orders Array
// ***********************
Record NI0BW02 type basicRecord
  5 NI0BWINV NI0BWINV ; 
  5 NI0BWZDT NI0BWZDT ; 
end // end NI0BW02

//*** RECORD=NI0BW03 ****
// This record contains data to be passed to IOMOD IO4440.
// ***********************
Record NI0BW03 type basicRecord
  5 NI0BWIOT NI0BWIOT ; 
  5 NI0BWFID NI0BWFID ; 
  5 NI0BWTID NI0BWTID ; 
  5 NI0BWFPM NI0BWFPM ; 
  5 NI0BWTPM NI0BWTPM ; 
end // end NI0BW03

//*** RECORD=NI0BW04 ****
// This record contains data to be passed to IOMOD IO4440.
// ***********************
Record NI0BW04 type basicRecord
  5 NI0BWIOT NI0BWIOT ; 
  5 NI0BWFID NI0BWFID ; 
  5 NI0BWTID NI0BWTID ; 
  5 NI0BWFPM NI0BWFPM ; 
  5 NI0BWTPM NI0BWTPM ; 
  5 NI0BWFND NI0BWFND ; 
  5 NI0BWTND NI0BWTND ; 
end // end NI0BW04

// niarec display key
DataItem NI0BWAKE num(11)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// 'Cursor open' switch-NIAREC
DataItem NI0BWCOA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'Cursor open' switch-NIBREC
DataItem NI0BWCOB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'Cursor open' switch-NIEREC
DataItem NI0BWCOE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'Cursor open' switch-NIGREC
DataItem NI0BWCOG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'Cursor open' switch-NIHREC
DataItem NI0BWCOH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Customer.Store
DataItem NI0BWCST num(11,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Order # portion
DataItem NI0BWCUO num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// quit flag
DataItem NI0BWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Fields used during nrf-nierec
DataItem NI0BWERR char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Fetch count (0-99)
DataItem NI0BWFCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From Invoice Date
DataItem NI0BWFID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From Need Date
DataItem NI0BWFND int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From Posting Month
DataItem NI0BWFPM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// General purpose index
DataItem NI0BWIDX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working month
DataItem NI0BWINM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// G/L Code match invoice
DataItem NI0BWINV num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working year
DataItem NI0BWINY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// I/O type (S2/N2/C2)
DataItem NI0BWIOT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'Invoices selected' flag
DataItem NI0BWISF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nl-ivc-id
DataItem NI0BWIVC num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Customer number
DataItem NI0BWKUC num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Store number
DataItem NI0BWKUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Array loading index
DataItem NI0BWLDX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Low array index
DataItem NI0BWLIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Total # invoices selected
DataItem NI0BWMAX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// # invoices selected message
DataItem NI0BWMSG char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NI0BWMYR num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Sub-Order # portion
DataItem NI0BWNOR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Literal 'Note: '
DataItem NI0BWNOT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working year
DataItem NI0BWOMN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first time flag
DataItem NI0BWONE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Display Order/Suborder #
DataItem NI0BWORD num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working month
DataItem NI0BWOYR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// G/L Posting mo/yr
DataItem NI0BWPDA num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// G/L Posting mo/yr
DataItem NI0BWPDT char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// G/L Posting month date
DataItem NI0BWPMD num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// posting date month
DataItem NI0BWPMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// G/L Posting month
DataItem NI0BWPMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// G/L Posting month
DataItem NI0BWPMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// G/L Posting year
DataItem NI0BWPYE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// G/L Posting year
DataItem NI0BWPYR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// posting date year
DataItem NI0BWPYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Remainder of message
DataItem NI0BWREM char(31)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen index
DataItem NI0BWSCX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Literal slash (/)
DataItem NI0BWSLA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Selection list complete flag
DataItem NI0BWSLC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Selection list loaded flag
DataItem NI0BWSLL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// To Invoice Date
DataItem NI0BWTID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// To Need Date
DataItem NI0BWTND int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// To Posting Month
DataItem NI0BWTPM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem NI0BWYRM num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// G/L Code match doc. type
DataItem NI0BWZDT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

