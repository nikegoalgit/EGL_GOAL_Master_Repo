package ni0h;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom3.XPNL002;
import corpcom3.XPNL005;
import corpcom3.XPXX001;
import corpcom3.XPZCH01;
import corpcom3.XPZIV01;
import corpcom4.XSENTRY;
import corpcom4.XSNLS01;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom5.GLAENT;
import corpcom6.SQLCA;
import corpx1.XCTDESC;
import corpx1.XCTTBL;
import corpx1.XLATBL;
import corpx2.XXXUSRID;
import corpz3.ZCHCD;
import corpz3.ZCHTBL;
import corpz3.ZIVCD;
import corpz3.ZIVDESC;
import corpz3.ZIVTBL;
import corpz3.ZRTCD;
import corpz3.ZRTTBL;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ku.common.KUCCOID;
import ku.common.KUCCONM;
import ku.common.KUCREC;
import ni.common.NIBLINBR;
import ni.common.NIBLITXT;
import ni.common.NIWREC;
import nl.common.*;
import ta.common.TA1REC;
import ta.common.TA2REC;
import vv.common.VDSTRB01;
import vv.common.VMISCI01;
import vv.common.VZCHGL01;
//*** PROGRAM=NI0H ****
// ************************************************************
// 
//               ni0h - ivc type inq/maint
//               ---------------------------
// 
// this will allow inquiry and maintenence of ivc types.
// ivc types are used as defaults when building a misc ivc.
// 
// Maintenance History:
//   Date   Who    Remarks
// -------- ------ --------------------------------------------
// 08-01-89 cross  Program creation.
// 04-04-90 jjohns Change GL fields to match GLAREC.
// 09-12-90 JShann Commented out the move 0 to NIDIVCID in
//                 NI0H110
// 02-11-91 JShann MADE DB2 CHANGE WHERE XLBCD IN VCMPNY01
// 02-06-92 jjudki Task#491. Changes for distributor table.
// -------- ------ --------------------------------------------
// 02-20-98 NGANGO Y2K MODIFICATION - RECOMPILED TO PICKUP THE
//                 CHANGES FOR XX0XS01.
// -------- ------ --------------------------------------------
// *********************
Program NI0H type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  NI0HW01 NI0HW01; // record
  NI0HW02 NI0HW02; // record
  NIWREC NIWREC; // record
  NLXREC NLXREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  VDSTRB01 VDSTRB01; // record
  VMISCI01 VMISCI01; // record
  VZCHGL01 VZCHGL01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XLATBL {deleteAfterUse = yes}; // table
  use ZCHTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use ZIVTBL {deleteAfterUse = yes}; // table
  use ZRTTBL {deleteAfterUse = yes}; // table
  use NI0HM.NI0HM100, // form
  		NI0HM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NI0H000: NI0H000();
    exit program;
  end // end main
end // end NI0H

// main flow
Function NI0H000()
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* *   perform initialization, set application revision nbrs,**/
   /* *   then do main perform until done with application      **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  NLXREC.NLXCPROC = "NI0H000";
  COMMAREA.CACURRAP = "NI0H";
  ;
  NI0H001(); /* initilize the application*/
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/
  ;
  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NI0H050(); /* process the application screen(s)*/
  end
  ;
  COMMAREA.CACURRAP = "NL0A";
  XPNL002();
end // end NI0H000

// initialize application
Function NI0H001()
  NLXREC.NLXCPROC = "NI0H001";
  ;
  converseVar.commitOnConverse = 1; /* force db2 to commit on each screen converse*/
  VGVar.handleHardIOErrors = 1; /* return control to appl if hard db2 error*/
  ;
  set NI0HW01 empty; /* clear working storage rec1*/
  set NI0HW02 empty; /* clear working storage rec2*/
   /* SET KUAREC EMPTY                 KUCREC DEINSTALLED FEB 91*/
  set KUCREC empty;
  set VDSTRB01 empty; /* clear distributor table record*/
  set VMISCI01 empty;
  set VZCHGL01 empty;
  set SQLCA empty;
  ;
  XSENTRY(); /* appl entry security*/
  XSSEGTR(); /* set segmented transaction id*/
  ;
   /* TEMP001;*/
  ;
  set NLXREC empty; /* clear common working storage*/
  ;
  NI0HSS0(); /* check field level security*/
  ;
   /* set up key if special entry options*/
  if (COMMAREA.CAITEM != " ") /* fastpath entry*/
    NI0HW01.ZIVCD = COMMAREA.CAITEM;
    NI0HS03(); /* look up ivc type*/
    if (NI0HWONE == "Y")
      converseLib.validationFailed(70);
      NI0HWIER = "Y";
    end
  else
    if (COMMAREA.CAFROMAP == "NI0G" /* entry from other misc ivc appls*/
     || COMMAREA.CAFROMAP == "NI0I")
      NIWREC.NIWGROUP = COMMAREA.CAUSERA;
      NI0HW01.ZIVCD = NIWREC.ZIVCD;
      if (NIWREC.ZIVCD in ZIVTBL.ZIVCD)
        NI0HW01.ZIVDESC = ZIVTBL.ZIVDESC[sysVar.arrayIndex];
      else
        set NI0HM100.ZIVCD cursor, modified, bold;
        converseLib.validationFailed(8); /* invalid cd*/
        NI0HW01.NI0HWIER = "Y"; /* init error flag*/
      end
      NI0HW01.KUCCOID = NIWREC.KUCCOID;
      if (NI0HW01.KUCCOID != 0)
        KUCREC.KUCCOID = NI0HW01.KUCCOID;
        NI0HS04(); /* select unique kucrec*/
        NI0HS13(); /* select unique distributor table*/
        if (SQLCA.VAGen_SQLCODE == 0)
          NI0HW01.KUCCONM = KUCREC.KUCCONM;
          if (KUCREC.XCTCD in XCTTBL.XCTCD)
            NI0HW01.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
          end
        else
          set NI0HM100.KUCCOID cursor, modified, bold;
          converseLib.validationFailed(9); /* invalid cd*/
          NI0HW01.NI0HWIER = "Y"; /* init error flag*/
        end
      end
      NI0HS03(); /* look up ivc type*/
      if (NI0HWONE == "Y")
        converseLib.validationFailed(70);
        NI0HWIER = "Y";
      end
    end
  end
  ;
  NLXREC.NLXSNAME[1] = "NI0HM100"; /* init screens used in this appl*/
  NLXREC.NLXCSCRN = "NI0HM100"; /* set first screen to display*/
  ;
end // end NI0H001

// decide which map to display
Function NI0H050()
   /* ************************************************************/
   /* *   control process the application screen(s)             **/
   /* *                                                         **/
   /* *  note that this process is being performed in a         **/
   /* *  "while loop" until the end-of-application flag is set  **/
   /* *  to 'y'.                                                **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  NLXREC.NLXCPROC = "NI0H050"; /* set current process name*/
  ;
  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;
  ;
  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME) /* if current-screen-name is*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex; /* in the screen-array, then set*/
  end /* the screen-index*/
  ;
  set TA1REC empty;
  TA1REC.TA1MAP = NLXREC.NLXCSCRN; /* prepare for abend*/
  ;
  NLXREC.NLXBLDSC = "Y"; /* set build screen flag to 'yes'*/
  NLXREC.NLXEOSF = "N"; /* set end-of-screen flag to 'no'*/
  NLXREC.NLXERRF = "N"; /* clear error flag*/
  ;
  if (NLXREC.NLXSCRNX == 1) /* if screen xx0xm100*/
    while (NLXREC.NLXEOSF == "N") /* show until user is done*/
      NI0H100();
    end
  else
    TA1REC.TA1MAP = NLXREC.NLXCSCRN;
    TA1REC.TA1TBLKE = "UNKNOWN SCREEN NAME";
    TA1REC.TA1LOCAT[2] = NLXREC.NLXCSCRN;
    XPNL005(); /* abend*/
  end
  ;
  ;
   /* at this point;*/
       /* if the end-of-application flag (NLXeoaf ) = 'n'*/
         /* the perform will return to the top of nl0%050...*/
       /* else*/
         /* the perform will auto return to nl0%000.*/
  ;
end // end NI0H050

// converse map m100
Function NI0H100()
   /* ************************************************************/
   /* *    process screen nl0%m100                              **/
   /* *                                                         **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from nl0%050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* *                                                         **/
   /* ************************************************************/
  ;
  NLXREC.NLXCPROC = "NI0H100";
  ;
  if (NLXREC.NLXBLDSC == "Y")
    NI0H101();
    NLXREC.NLXBLDSC = "N";
  end
  ;
   /* ***********************************************************/
  converse NI0HM100 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N";
  ;
  NI0H110(); /* validate pfkeys*/
  ;
  if (NLXREC.NLXERRF == "N"
   && NI0HM100 is modified)
    NI0H120(); /* edit entries and update*/
  end
  ;
  if (NLXREC.NLXERRF == "N")
    NI0H130(); /* determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process nl0%100.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to nl0%050.*/
end // end NI0H100

// build screen
Function NI0H101()
  NLXREC.NLXCPROC = "NI0H101";
  ;
   /* **************************************/
   /* build screen*/
   /* **************************************/
  ;
  set NI0HM100 empty;
  NI0HM100.XXXCURDT = VGVar.currentShortGregorianDate; /* system date*/
  NI0HM100.ZIVCD = NI0HW01.ZIVCD;
  NI0HM100.ZIVDESC = NI0HW01.ZIVDESC;
  NI0HM100.KUCCOID = NI0HW01.KUCCOID;
  ;
  if (NI0HW01.NI0HWIER == "Y") /* error on init*/
    NI0HW01.NI0HWIER = "N";
    return;
  end
  ;
  if (NI0HW01.ZIVCD == " ") /* user must enter key fields*/
    return;
  end
  ;
   /* fill in all screen fields*/
  ;
  NI0HM100.KUCCONM = NI0HW01.KUCCONM;
  NI0HM100.XCTDESC = NI0HW01.XCTDESC;
  ;
  if (NI0HW01.KUCCOID != 0)
     /* NI0HS08                       ; get kuarec*/
     /* IF KUAREC.XLBCD IN XLATBL.XLBCD; XLBCD NOW IN CMPNY01*/
    if (KUCREC.XLBCD in XLATBL.XLBCD)
      NI0HW01.GLAENT = XLATBL.GLAENT[sysVar.arrayIndex];
    end
  end
  ;
   /* move from ws array to screen*/
  ;
  NI0HW01.NI0HWDX3 = 1;
  while (NI0HW01.NI0HWDX3 < 8)
    NI0HS02();
  end
  NI0HW01.NI0HWDX3 = 7;
  ;
  if (converseVar.validationMsgNum == 0) /* only use this msg if no others are in use*/
    if (NI0HW01.NI0HWDX1 >= NI0HW01.NI0HWDX2)
      converseLib.validationFailed(69);
    end
  end
  ;
end // end NI0H101

// edit pfkeys
Function NI0H110()
   /* **************************************/
   /* edit pk keys*/
   /* **************************************/
  ;
  NLXREC.NLXCPROC = "NI0H110";
  ;
  if (NI0HM100.CATOAP != " ") /* if any fastpath data entered*/
    COMMAREA.CATOAP = NI0HM100.CATOAP;
    COMMAREA.CAITEM = NI0HM100.CAITEM;
    COMMAREA.CAUSERA = NIWREC.NIWGROUP;
    XPNL002();
    return;
  end
  ;
  if (converseVar.eventKey is enter
   || converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)
     /* next sentence*/
  else
    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa2
     || converseVar.eventKey is pa3)
      converseLib.clearScreen();
      
      converseLib.validationFailed(62); /* pa1/2 cause loss of keyed data-rekey*/
                                   /* any change*/
       /* set alterable fields modified*/
      NLXREC.NLXERRF = "Y";
    else
      if (converseVar.eventKey is pf1)
        XSNLS01(); /* nil help routine - exit to gd01*/
      else
        if (converseVar.eventKey is pf2) /* refresh screen*/
          set NI0HW01 empty;
          set NI0HW02 empty;
          set NI0HM100 empty;
          NLXREC.NLXERRF = "Y";
        else
          if (converseVar.eventKey is pf4)
            XSPF4();
          else
            if (converseVar.eventKey is pf3)
              COMMAREA.CATOAP = "NI0J";
              XPNL002();
              return;
            else
              if (converseVar.eventKey is pf13)
                COMMAREA.CATOAP = "NI0G";
                /* MOVE 0 TO NIWREC.NIDIVCID;*/
                NIWREC.KUCCOID = NI0HW01.KUCCOID;
                NIWREC.ZIVCD = NI0HW01.ZIVCD;
                COMMAREA.CAUSERA = NIWREC.NIWGROUP;
                XPNL002();
                return;
              else
                if (converseVar.eventKey is pf15)
                  COMMAREA.CATOAP = "NI0I";
                  /* MOVE 0 TO NIWREC.NIDIVCID;*/
                  NIWREC.KUCCOID = NI0HW01.KUCCOID;
                  NIWREC.ZIVCD = NI0HW01.ZIVCD;
                  COMMAREA.CAUSERA = NIWREC.NIWGROUP;
                  XPNL002();
                  return;
                else
                  COMMAREA.CATOAP = " ";
                  converseLib.validationFailed(2); /* INVALID FUNCTION KEY*/
                  NLXREC.NLXERRF = "Y";
                end
              end
            end
          end
        end
      end
    end
  end
end // end NI0H110

// edit entries and update
Function NI0H120()
  NLXREC.NLXCPROC = "NI0H120";
  ;
   /* **************************************/
   /* edit entries and update*/
   /* **************************************/
  ;
  set NI0HM100.ZIVCD cursor;
  ;
  NI0HS10(); /* set up modified flags*/
  NI0HS09(); /* perform window functions*/
  ;
   /* edit selections - perform edits in reverse sequence*/
  ;
  NI0HW01.NI0HWKER = "N"; /* init key error flag*/
  ;
   /* edit a cmpny*/
  if (NI0HW01.NI0HWMKF == "Y")
    NI0HW01.KUCCOID = NI0HM100.KUCCOID;
    if (NI0HM100.KUCCOID == 0)
      NI0HW01.KUCCONM = " ";
      NI0HW01.XCTDESC = " ";
      set NI0HM100.KUCCOID normal;
    else
      KUCREC.KUCCOID = NI0HM100.KUCCOID;
      NI0HS04(); /* select unique kucrec*/
      NI0HS13(); /* select unique distributor table*/
      if (SQLCA.VAGen_SQLCODE == 0)
        set NI0HM100.KUCCOID normal;
        NI0HW01.KUCCONM = KUCREC.KUCCONM;
        if (KUCREC.XCTCD in XCTTBL.XCTCD)
          NI0HW01.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
        end
      else
        set NI0HM100.KUCCOID cursor, modified, bold;
        converseLib.validationFailed(9); /* invalid cd*/
        NLXREC.NLXERRF = "Y";
        NI0HW01.NI0HWKER = "Y";
      end
    end
  end
  ;
   /* edit a ivc typ cd*/
  if (NI0HW01.NI0HWMZF == "Y")
    if (NI0HM100.ZIVCD in ZIVTBL.ZIVCD)
      NI0HW01.ZIVCD = NI0HM100.ZIVCD;
      NI0HW01.ZIVDESC = ZIVTBL.ZIVDESC[sysVar.arrayIndex];
      set NI0HM100.ZIVCD normal;
    else
      set NI0HM100.ZIVCD cursor, modified, bold;
      converseLib.validationFailed(8); /* invalid cd*/
      NLXREC.NLXERRF = "Y";
      NI0HW01.NI0HWKER = "Y";
    end
  end
  ;
   /* edit for key change*/
  if (NI0HW01.NI0HWKER == "N") /* no err on zivcd or kuccoid*/
    if (NI0HW01.NI0HWMZF == "Y" /* zivcd modified*/
     || NI0HW01.NI0HWMKF == "Y") /* kuccoid modified*/
      NI0HS03(); /* build and read cursor*/
      if (NI0HW01.NI0HWONE == "Y") /* no line items in cursor*/
        converseLib.validationFailed(70); /* ivc typ does not exist*/
      else
        NLXREC.NLXERRF = "Y"; /* to re-display screen*/
        NLXREC.NLXBLDSC = "Y";
        return;
      end
    end
  end
  ;
   /* edit a charge types*/
  NI0HW01.NI0HWDX4 = 8;
  while (NI0HW01.NI0HWDX4 > 1)
    NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 - 1;
    if (NI0HW01.NI0HWMF1[NI0HWDX4] == "Y"
     && NI0HM100.ZCHCD[NI0HWDX4] != " ")
      if (NI0HM100.ZCHCD[NI0HWDX4] in ZCHTBL.ZCHCD)
        if (NI0HW01.KUCCOID != 0) /* cmpny and charge type exist*/
          if (NI0HW01.NI0HWMKF == "Y") /* compny modified*/
            KUCREC.KUCCOID = NI0HM100.KUCCOID;
            NI0HS04(); /* select unique kucrec*/
            NI0HS13(); /* select unique distributor table*/
          end
          VZCHGL01.ZCHCD = NI0HM100.ZCHCD[NI0HWDX4];
          NI0HS05(); /* get nikrec*/
          if (SQLCA.VAGen_SQLCODE == 100)
            set NI0HM100.ZCHCD[NI0HWDX4] cursor, modified, bold;
            converseLib.validationFailed(102); /* gl cannot be determined*/
            NLXREC.NLXERRF = "Y";
          else
            set NI0HM100.ZCHCD[NI0HWDX4] normal;
          end
        else
          set NI0HM100.ZCHCD[NI0HWDX4] normal;
        end
      else
        set NI0HM100.ZCHCD[NI0HWDX4] cursor, modified, bold;
        converseLib.validationFailed(10); /* invalid cd*/
        NLXREC.NLXERRF = "Y";
      end
    end
  end
  ;
   /* move modified line items to ws array*/
  NI0HW01.NI0HWDX3 = 1; /* start at top of screen*/
  NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX2 - 7;
  if (NI0HW01.NI0HWDX4 < 1)
    NI0HW01.NI0HWDX4 = 1;
  end
  while (NI0HW01.NI0HWDX3 < 8)
    NI0HS11(); /* move screen entries to ws array*/
  end
  ;
  NI0HS12(); /* rcvbl typ edit*/
  ;
  if (NLXREC.NLXERRF == "Y")
    return; /* if edit errors do not update*/
  end
  if (COMMAREA.CAADDFL == "N"
   && COMMAREA.CACHGFL == "N")
    return; /* inquiry only*/
  end
  ;
   /* perform updates as needed*/
  ;
  if (NI0HW01.NI0HWMZF == "Y" /* zivcd modified*/
   || NI0HW01.NI0HWMKF == "Y") /* kuccoid modified*/
    if (NI0HM100.NIBLITXT[1] == " "
     && NI0HM100.NIBLITXT[2] == " "
     && NI0HM100.NIBLITXT[3] == " "
     && NI0HM100.NIBLITXT[4] == " "
     && NI0HM100.NIBLITXT[5] == " "
     && NI0HM100.NIBLITXT[6] == " "
     && NI0HM100.NIBLITXT[7] == " ")
      return; /* user searching for existing ivc typ*/
    end
  end
  ;
  VMISCI01.ZIVCD = NI0HW01.ZIVCD;
  VMISCI01.KUCCOID = NI0HW01.KUCCOID;
  VMISCI01.NIBLINBR = -1;
  call "IO4420" ("D ", SQLCA, VMISCI01) {isNoRefresh = yes, isExternal = yes}; /* delete all line items*/
  if (SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(68); /* new ivc type added*/
    else
      TA1REC.TA1LOCAT[2] = "D      "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4420 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* database*/
      TA1REC.TA1TBLVU = "VMISCI01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
  NI0HW01.NI0HWDX4 = 0;
  while (NI0HW01.NI0HWDX4 < NI0HW01.NI0HWDX1)
    NI0HS06(); /* add line items*/
  end
  ;
end // end NI0H120

// determine next action
Function NI0H130()
  NLXREC.NLXCPROC = "NI0H130";
  ;
   /* **************************************/
   /* determine next action*/
   /* **************************************/
  ;
  if (converseVar.eventKey is enter)
    NLXREC.NLXBLDSC = "Y";
    NI0HW01.NI0HWDX2 = NI0HW01.NI0HWDX2 - 7;
    if (NI0HW01.NI0HWDX2 < 1)
      NI0HW01.NI0HWDX2 = 1;
    end
    return;
  end
  ;
  if (converseVar.eventKey is pf7)
    if (NI0HW01.NI0HWDX2 <= 8)
      converseLib.validationFailed(029); /* cannot scroll back*/
    else
      NI0HW01.NI0HWDX2 = NI0HW01.NI0HWDX2 - 14;
      if (NI0HW01.NI0HWDX2 < 1)
        NI0HW01.NI0HWDX2 = 1;
      end
      NLXREC.NLXBLDSC = "Y";
    end
    return;
  end
  ;
  if (converseVar.eventKey is pf8)
    NLXREC.NLXBLDSC = "Y";
    if (NI0HW01.NI0HWDX2 == 1 /* user adding new ivc typ*/
     && NI0HW01.NI0HWDX1 > 0)
      NI0HW01.NI0HWDX2 = 8;
    end
    return;
  end
  ;
end // end NI0H130

// read nicrec and load array
Function NI0HS01()
  NLXREC.NLXCPROC = "NI0HS01"; /* set current proc name*/
  ;
   /* fetch from cursor*/
  call "IO4420" ("N1", SQLCA, VMISCI01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    if (NI0HW01.NI0HWONE == "Y")
      NI0HW01.NI0HWONE = "N";
      NI0HW01.NI0HWDX1 = 0;
      set NI0HW02 empty;
    end
    NI0HW01.NI0HWDX1 = VMISCI01.NIBLINBR;
    NI0HW02.NIBLITXT[NI0HWDX1] = VMISCI01.NIBLITXT;
    NI0HW02.ZCHCD[NI0HWDX1] = VMISCI01.ZCHCD;
    NI0HW02.NIBLINBR[NI0HWDX1] = VMISCI01.NIBLINBR;
    NI0HW02.XXXUSRID[NI0HWDX1] = VMISCI01.XXXUSRID;
    NI0HW02.ZZZSDT[NI0HWDX1] = VMISCI01.ZZZSDT;
    NI0HW02.ZZZCHGDT[NI0HWDX1] = VMISCI01.ZZZCHGDT;
    NI0HW02.ZZZCHGTM[NI0HWDX1] = VMISCI01.ZZZCHGTM;
    if (VMISCI01.ZCHCD in ZCHTBL.ZCHCD) /* save rcvbl cd for edits*/
      NI0HW02.ZRTCD[NI0HWDX1] = ZCHTBL.ZRTCD[sysVar.arrayIndex];
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      call "IO4420" ("C1", SQLCA, VMISCI01) {isNoRefresh = yes, isExternal = yes};
      NI0HW01.NI0HWEND = "Y";
      if (NI0HW01.NI0HWONE == "N") /* at least one row was found*/
        NI0HW01.ZZZSDT = NI0HW02.ZZZSDT[NI0HWDX1]; /* for added lines*/
      else
        XX0XS01(); /* get formatted current date and time*/
        NI0HW01.ZZZSDT = XX0XW01.XX0XWDAT;
      end
    else
      TA1REC.TA1LOCAT[2] = "N1     "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4420 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VMISCI01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0HS01

// move ivc typ recs to ni0hm100
Function NI0HS02()
  NLXREC.NLXCPROC = "NI0HS02";
  ;
   /* move ws array to screen*/
  ;
  if (NI0HW01.NI0HWDX2 <= NI0HW01.NI0HWDX1)
    NI0HM100.NIBLITXT[NI0HWDX3] = NI0HW02.NIBLITXT[NI0HWDX2];
    NI0HM100.ZCHCD[NI0HWDX3] = NI0HW02.ZCHCD[NI0HWDX2];
    if (NI0HW02.ZCHCD[NI0HWDX2] in ZCHTBL.ZCHCD)
      NI0HM100.ZCHDESC[NI0HWDX3] = ZCHTBL.ZCHDESC[sysVar.arrayIndex];
      if (NI0HW01.KUCCOID != 0) /* cmpny and charge type exist*/
        set VZCHGL01 empty; /* init before look up*/
        VZCHGL01.ZCHCD = NI0HW02.ZCHCD[NI0HWDX2];
        NI0HS05(); /* get nikrec*/
         /* format gl acct*/
        if (VZCHGL01.GLAENT == " ")
          NLXREC.GLAENT = NI0HW01.GLAENT; /* use cust dflt*/
        else
          NLXREC.GLAENT = VZCHGL01.GLAENT;
        end
        NLXREC.GLARCID = VZCHGL01.GLARCID;
        NLXREC.GLANTAC = VZCHGL01.GLANTAC;
        NLXREC.GLASUB = VZCHGL01.GLASUB;
        NLXREC.GLAPRJ = VZCHGL01.GLAPRJ;
        NI0HM100.GLAGRP[NI0HWDX3] = NLXREC.GLAGRP;
      end
    end
  end
  ;
  NI0HW01.NI0HWDX2 = NI0HW01.NI0HWDX2 + 1;
  NI0HW01.NI0HWDX3 = NI0HW01.NI0HWDX3 + 1;
  ;
end // end NI0HS02

// declare cursor for nicrec
Function NI0HS03()
  NLXREC.NLXCPROC = "NI0HS03";
  ;
   /* declare and read cursor - store line items to ws*/
  ;
  VMISCI01.ZIVCD = NI0HW01.ZIVCD;
  VMISCI01.KUCCOID = NI0HW01.KUCCOID;
  call "IO4420" ("S1", SQLCA, VMISCI01) {isNoRefresh = yes, isExternal = yes};
  ;
   /* fetch and move rows to ws array*/
  ;
  NI0HW01.NI0HWEND = "N";
  NI0HW01.NI0HWONE = "Y";
  while (NI0HW01.NI0HWEND == "N")
    NI0HS01(); /* fetch row from nicrec*/
  end
  NI0HW01.NI0HWDX2 = 1; /* initialize array row on screen index*/
  ;
end // end NI0HS03

// select unique from kucrec
Function NI0HS04()
  NLXREC.NLXCPROC = "NI0HS04"; /* set current proc name*/
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    /* intl customer's only*/
    if (KUCREC.XAUCD == "31"
     || KUCREC.XAUCD == "32"
     || KUCREC.XAUCD == "33")
      if (KUCREC.XXXSTAT == "A")
         /* next sentence*/
      else
        SQLCA.VAGen_SQLCODE = 100;
      end
    else
      SQLCA.VAGen_SQLCODE = 100;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO0240 "; /* io module*/
      TA1REC.TA1DBASE = "DCUST"; /* database*/
      TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0HS04

// select first for nikrec
Function NI0HS05()
  NLXREC.NLXCPROC = "NI0HS05"; /* set current proc name*/
  ;
   /* zch filled in by calling module*/
  VZCHGL01.XAUCD = KUCREC.XAUCD;
  VZCHGL01.ZARCD = VDSTRB01.ZARCD; /* from distibutor table*/
  VZCHGL01.KUCCOID = KUCREC.KUCCOID;
  VZCHGL01.YMTCD = " ";
  call "IO4540" ("SF", SQLCA, VZCHGL01) {isNoRefresh = yes, isExternal = yes}; /* select first row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    TA1REC.TA1LOCAT[2] = "SF     "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4540 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VZCHGL01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
end // end NI0HS05

// add line items to nicrec
Function NI0HS06()
  NLXREC.NLXCPROC = "NI0HS06"; /* set current proc name*/
  ;
  NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 + 1;
  ;
  if (NI0HW02.NIBLITXT[NI0HWDX4] != " "
   || NI0HW02.ZCHCD[NI0HWDX4] != " ")
    VMISCI01.NIBLITXT = NI0HW02.NIBLITXT[NI0HWDX4];
    VMISCI01.ZCHCD = NI0HW02.ZCHCD[NI0HWDX4];
    VMISCI01.NIBLINBR = NI0HW02.NIBLINBR[NI0HWDX4];
    VMISCI01.XXXUSRID = NI0HW02.XXXUSRID[NI0HWDX4];
    VMISCI01.ZZZSDT = NI0HW02.ZZZSDT[NI0HWDX4];
    if (NI0HW02.ZZZSDT[NI0HWDX4] == NI0HW02.ZZZCHGDT[NI0HWDX4]) /* true add*/
      VMISCI01.ZZZCHGDT = 0;
      VMISCI01.ZZZCHGTM = 0;
    else
      VMISCI01.ZZZCHGDT = NI0HW02.ZZZCHGDT[NI0HWDX4];
      VMISCI01.ZZZCHGTM = NI0HW02.ZZZCHGTM[NI0HWDX4];
    end
    NI0HS07(); /* add row to nicrec*/
  end
  ;
end // end NI0HS06

// add row to nicrec
Function NI0HS07()
  NLXREC.NLXCPROC = "NI0HS07"; /* set current proc name*/
  ;
  call "IO4420" ("A ", SQLCA, VMISCI01) {isNoRefresh = yes, isExternal = yes}; /* delete all line items*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    return;
  else
    TA1REC.TA1LOCAT[2] = "A      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO4420 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* database*/
    TA1REC.TA1TBLVU = "VMISCI01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
end // end NI0HS07

// perform windowing
Function NI0HS09()
  NLXREC.NLXCPROC = "NI0HS09"; /* set current proc name*/
  ;
   /* perform windowing*/
  ;
   /* ivc type cd*/
  if (NI0HM100.ZIVCD == "?")
    XPXX001();
    while (XX0XW02.XX0XWEND == "N")
      XPZIV01();
    end
    set NI0HM100.ZIVCD cursor;
    if (XX0XW02.XX0XWPIX > 0)
      NI0HM100.ZIVCD = ZIVTBL.ZIVCD[XX0XWPIX];
      NI0HM100.ZIVDESC = ZIVTBL.ZIVDESC[XX0XWPIX];
    end
  end
  ;
   /* charge types*/
   /* MOVE 8 TO NI0HW01.NI0HWDX4;*/
   /* WHILE NI0HW01.NI0HWDX4 GT 1;*/
    /* NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 - 1;*/
  NI0HW01.NI0HWDX4 = 0;
  while (NI0HW01.NI0HWDX4 < 7)
    NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 + 1;
    if (NI0HM100.ZCHCD[NI0HWDX4] == "?")
      XPXX001();
      while (XX0XW02.XX0XWEND == "N")
        XPZCH01();
      end
      set NI0HM100.ZCHCD[NI0HWDX4] cursor;
      if (XX0XW02.XX0XWPIX > 0)
        NI0HM100.ZCHCD[NI0HWDX4] = ZCHTBL.ZCHCD[XX0XWPIX];
        NI0HM100.ZCHDESC[NI0HWDX4] = ZCHTBL.ZCHDESC[XX0XWPIX];
      end
    end
  end
  ;
  converseLib.clearScreen();
  
  ;
end // end NI0HS09

// set up modified flags
Function NI0HS10()
  NLXREC.NLXCPROC = "NI0HS10"; /* set current proc name*/
  ;
   /* set modified flags for editing after windowing*/
  ;
  NI0HW01.NI0HWDX4 = 8;
  while (NI0HW01.NI0HWDX4 > 1)
    NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 - 1;
    if (NI0HM100.ZCHCD[NI0HWDX4] is modified)
      NI0HW01.NI0HWMF1[NI0HWDX4] = "Y";
    else
      NI0HW01.NI0HWMF1[NI0HWDX4] = "N";
    end
    if (NI0HM100.NIBLITXT[NI0HWDX4] is modified)
      NI0HW01.NI0HWMF2[NI0HWDX4] = "Y";
    else
      NI0HW01.NI0HWMF2[NI0HWDX4] = "N";
    end
  end
  ;
  if (NI0HM100.ZIVCD is modified)
    NI0HW01.NI0HWMZF = "Y";
  else
    NI0HW01.NI0HWMZF = "N";
  end
  ;
  if (NI0HM100.KUCCOID is modified)
    NI0HW01.NI0HWMKF = "Y";
  else
    NI0HW01.NI0HWMKF = "N";
  end
  ;
end // end NI0HS10

// build ws-array from screen
Function NI0HS11()
  NLXREC.NLXCPROC = "NI0HS11"; /* set current proc name*/
  ;
  XX0XS01(); /* get formatted current date and time*/
  ;
  if (NI0HW01.NI0HWMF2[NI0HWDX3] == "Y" /* niblitxt modified*/
   || NI0HW01.NI0HWMF1[NI0HWDX3] == "Y") /* zchcd modified*/
    NI0HW02.NIBLITXT[NI0HWDX4] = NI0HM100.NIBLITXT[NI0HWDX3];
    NI0HW02.ZCHCD[NI0HWDX4] = NI0HM100.ZCHCD[NI0HWDX3];
    if (NI0HM100.ZCHCD[NI0HWDX3] in ZCHTBL.ZCHCD)
      NI0HW02.ZRTCD[NI0HWDX4] = ZCHTBL.ZRTCD[sysVar.arrayIndex];
    else
      NI0HW02.ZRTCD[NI0HWDX4] = " ";
    end
    NI0HW02.NIBLINBR[NI0HWDX4] = NI0HW01.NI0HWDX4;
    NI0HW02.XXXUSRID[NI0HWDX4] = COMMAREA.CAUSERID; /* user id*/
    NI0HW02.ZZZSDT[NI0HWDX4] = NI0HW01.ZZZSDT; /* set up date*/
    NI0HW02.ZZZCHGDT[NI0HWDX4] = XX0XW01.XX0XWDAT; /* set chg date*/
    NI0HW02.ZZZCHGTM[NI0HWDX4] = XX0XW01.XX0XWTIM; /* set chg time*/
    if (NI0HW01.NI0HWDX4 > NI0HW01.NI0HWDX1)
      NI0HW01.NI0HWDX1 = NI0HW01.NI0HWDX4; /* increase max in array*/
    end
    if (NI0HM100.NIBLITXT[NI0HWDX3] == " "
     && NI0HM100.ZCHCD[NI0HWDX3] == " ")
      if (NI0HW01.NI0HWDX4 == NI0HW01.NI0HWDX1) /* delete of last line item*/
         /* reset dx1 to prev existing*/
        NI0HW01.NI0HWDX5 = NI0HW01.NI0HWDX4;
        while (NI0HW01.NI0HWDX5 > 0)
          if (NI0HW02.NIBLITXT[NI0HWDX5] == " "
           && NI0HW02.ZCHCD[NI0HWDX5] == " ")
            /* next sentence*/
          else
            NI0HW01.NI0HWDX1 = NI0HW01.NI0HWDX5;
            NI0HW01.NI0HWDX5 = 0; /* stop loop*/
          end
          NI0HW01.NI0HWDX5 = NI0HW01.NI0HWDX5 - 1;
        end
      end
    end
  end
  ;
  NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 + 1;
  NI0HW01.NI0HWDX3 = NI0HW01.NI0HWDX3 + 1;
end // end NI0HS11

// check recvbl typ codes
Function NI0HS12()
  NLXREC.NLXCPROC = "NI0HS12"; /* set current proc name*/
  ;
   /* edit recvbl typ cd to make sure all line items match*/
     /* will hilite all on screen if any are in error*/
  ;
  NI0HW01.NI0HWDX5 = 1;
  while (NI0HW01.NI0HWDX5 < 8)
    if (NI0HM100.ZCHCD[NI0HWDX5] in ZCHTBL.ZCHCD)
      NI0HW01.ZRTCD = ZCHTBL.ZRTCD[sysVar.arrayIndex];
      NI0HW01.NI0HWDX4 = 1;
      while (NI0HW01.NI0HWDX4 <= NI0HW01.NI0HWDX1)
        if (NI0HW01.ZRTCD != NI0HW02.ZRTCD[NI0HWDX4]
         && NI0HW02.ZRTCD[NI0HWDX4] != " ")
          if (NI0HM100.ZCHCD[7] != " ")
            set NI0HM100.ZCHCD[7] cursor, modified, bold;
          end
          if (NI0HM100.ZCHCD[6] != " ")
            set NI0HM100.ZCHCD[6] cursor, modified, bold;
          end
          if (NI0HM100.ZCHCD[5] != " ")
            set NI0HM100.ZCHCD[5] cursor, modified, bold;
          end
          if (NI0HM100.ZCHCD[4] != " ")
            set NI0HM100.ZCHCD[4] cursor, modified, bold;
          end
          if (NI0HM100.ZCHCD[3] != " ")
            set NI0HM100.ZCHCD[3] cursor, modified, bold;
          end
          if (NI0HM100.ZCHCD[2] != " ")
            set NI0HM100.ZCHCD[2] cursor, modified, bold;
          end
          if (NI0HM100.ZCHCD[1] != " ")
            set NI0HM100.ZCHCD[1] cursor, modified, bold;
          end
          converseLib.validationFailed(43); /* invalid cd*/
          NLXREC.NLXERRF = "Y";
          NI0HW01.NI0HWDX5 = 9; /* end loop*/
          NI0HW01.NI0HWDX4 = 99; /* end loop*/
        else
          NI0HW01.NI0HWDX4 = NI0HW01.NI0HWDX4 + 1; /* stop loop*/
        end
      end
    end
    NI0HW01.NI0HWDX5 = NI0HW01.NI0HWDX5 + 1;
  end
  ;
end // end NI0HS12

// select unique from vdstrb01
Function NI0HS13()
  NLXREC.NLXCPROC = "NI0HS13"; /* set current proc name*/
  ;
  VDSTRB01.KUCCOID = NI0HW01.KUCCOID;
  ;
  call "IO4600" ("S ", SQLCA, VDSTRB01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0)
    if (VDSTRB01.XXXSTAT == "A")
         /* next sentence*/
    else
      SQLCA.VAGen_SQLCODE = 100;
    end
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
      TA1REC.TA1LOCAT[3] = "IO4600 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO"; /* database*/
      TA1REC.TA1TBLVU = "VDSTRB01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0HS13

// check field security
Function NI0HSS0()
   /* ********        check field security             *********/
  ;
  NLXREC.NLXCPROC = "NI0HSS0";
  ;
  if (COMMAREA.CAADDFL == "N"
   && COMMAREA.CACHGFL == "N")
    NI0HSS1(); /* inquiry only*/
  end
  ;
end // end NI0HSS0

// security for inq only users
Function NI0HSS1()
  NLXREC.NLXCPROC = "NI0HSS1";
  ;
   /* ****** this sets security for inquiry only users*/
  ;
  set NI0HM100.NIBLITXT[1] skip;
  set NI0HM100.ZCHCD[1] skip;
  set NI0HM100.NIBLITXT[2] skip;
  set NI0HM100.ZCHCD[2] skip;
  set NI0HM100.NIBLITXT[3] skip;
  set NI0HM100.ZCHCD[3] skip;
  set NI0HM100.NIBLITXT[4] skip;
  set NI0HM100.ZCHCD[4] skip;
  set NI0HM100.NIBLITXT[5] skip;
  set NI0HM100.ZCHCD[5] skip;
  set NI0HM100.NIBLITXT[6] skip;
  set NI0HM100.ZCHCD[6] skip;
  set NI0HM100.NIBLITXT[7] skip;
  set NI0HM100.ZCHCD[7] skip;
  ;
end // end NI0HSS1

//*** RECORD=NI0HW01 ****
// this is the main working storage record for ni0h.
// ***********************
Record NI0HW01 type basicRecord
  10 ZIVCD ZIVCD ; 
  10 KUCCOID KUCCOID ; 
  10 ZIVDESC ZIVDESC ; 
  10 KUCCONM KUCCONM ; 
  10 XCTDESC XCTDESC ; 
  10 ZRTCD ZRTCD ; 
  10 NI0HWDX1 NI0HWDX1 ; 
  10 NI0HWDX2 NI0HWDX2 ; 
  10 NI0HWDX3 NI0HWDX3 ; 
  10 NI0HWDX4 NI0HWDX4 ; 
  10 NI0HWDX5 NI0HWDX5 ; 
  10 GLAENT GLAENT ; 
  10 ZZZSDT ZZZSDT ; 
  10 NI0HWKER NI0HWKER ; 
  10 NI0HWEND NI0HWEND ; 
  10 NI0HWONE NI0HWONE ; 
  10 NI0HWIER NI0HWIER ; 
  10 NI0HWMKF NI0HWMKF ; 
  10 NI0HWMZF NI0HWMZF ; 
  10 NI0HWMF1 NI0HWMF1 [7] ; 
  10 NI0HWMF2 NI0HWMF2 [7] ; 
end // end NI0HW01

//*** RECORD=NI0HW02 ****
// this is the line item array for ni0h
// ***********************
Record NI0HW02 type basicRecord
  10 NIBLITXT NIBLITXT [100] ; 
  10 ZCHCD ZCHCD [100] ; 
  10 ZRTCD ZRTCD [100] ; 
  10 NIBLINBR NIBLINBR [100] ; 
  10 XXXUSRID XXXUSRID [100] ; 
  10 ZZZSDT ZZZSDT [100] ; 
  10 ZZZCHGDT ZZZCHGDT [100] ; 
  10 ZZZCHGTM ZZZCHGTM [100] ; 
end // end NI0HW02

// max in ws array index
DataItem NI0HWDX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last row of array on scrn idx
DataItem NI0HWDX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen position index
DataItem NI0HWDX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work index
DataItem NI0HWDX4 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work index
DataItem NI0HWDX5 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// quit flag
DataItem NI0HWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// init error flag
DataItem NI0HWIER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key error flag
DataItem NI0HWKER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// zchcd modified flag
DataItem NI0HWMF1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// niblitxt modified flag
DataItem NI0HWMF2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kuccoid modified flag
DataItem NI0HWMKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// zivcd modified flag
DataItem NI0HWMZF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time flag
DataItem NI0HWONE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

