package ni0p;

import corpcom2.XCTHREC;
import corpcom3.XPTA0P;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import corpcom6.SQLCA;
import corpcom6.UT2REC;
import corpcom7.XXXNBRCY;
import corpx2.XSOPDEST;
import ni.common.NIWREC;
import nl.common.*;
import ta.common.TA1REC;
import ta.common.TA3APLID;
import ta.common.TA6REC;
import ta.common.TAEREC;
import vv.common.VNLIPR01;
//*** PROGRAM=NI0P ****
// ************************************************************
// * ni0p: jcl submiter for NIL invoicing                     *
// *----------------------------------------------------------*
// * description:                                             *
// * -- this application submits test and                     *
// *    production jcl.                                       *
// * -- test jcl does not use ucc7.                           *
// * -- production jcl uses ucc7.                             *
// *                                                          *
// * maintenance:                                             *
// *----------------------------------------------------      *
// * 09-25-89  jfiat  created                                 *
// * 01-04-90  jbaker change cond parm in ni0pt02             *
// * 03-07-90  jjohns change dest to rmt24                    *
// * 01-14-91  JSHANN CHANGE NOTIFY TO MYSELF                 *
// * 02-21-91  JSHANN CHANGED TO USED TA0P TO SUBMIT THE JOBS *
// *                  TO ALLOW USERS TO SELECT PRINTER FOR    *
// *                  DRAFT INVOICES AND SEND MESSAGE WHEN    *
// *                  JOBS ARE DONE AND ADDED CERTIFICATE     *
// *                  OF ORIGIN PRINT JCL AND LOGIC           *
// * 03-28-91  JSHANN OVERRIDE THE DRAFT SYSOUT
// * 04-01-91  JSHANN ADD SYMBOLIC FOR FCB FORMS BLOCK
// * 05-20-91  JSHANN ADD jcl for proforma
// * 06-27-91  JSHANN Install proforma
// * 07-01-91  JSHANN changed job card on ni0pt09
// * 07-03-91  JSHANN changed SYSOUT ON ni0pt08
// * 05-08-92  JSHANN added the jcl tables for printing of
// *                  shipper's export declarations
// * 05-22-92  JJUDKI Added the jcl tables for printing of
// *                  pricing and accounting tables.
// * 10-15-92  JJUDKI Changed job names in NI0PT13,14,63,64.
// * 04-22-93  JJUDKI Added the jcl tables for creation and
// *                  printing of new misc invoice.
// * 08-08-93  KSHAW  Added remote printer table.
// * 08-09-93  JSHANN JCL FIX
// * 08-20-93  JJUDKI FIX DEST IN NI0PT02.
// * 09-13-93  jjohns CSP 4.1 staging.                        *
// * 10-22-93  kshaw  Material of content print change        *
// * 11-11-93  ahowar added xc0910 Theater of Operations      *
// * 06-06-97  HMACAL Removed logic to use NI0PT99 table      *
// *                   and replaced with DB2 table
// ************************************************************
// *                                                          *
// *********************
Program NI0P type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = yes, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  NI0PW01 NI0PW01; // record
  NI0PW99 NI0PW99; // record
  NIWREC NIWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  UT2REC UT2REC; // record
  VNLIPR01 VNLIPR01; // record
  XCTHREC XCTHREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NI0PT02 {deleteAfterUse = yes}; // table
  use NI0PT03 {deleteAfterUse = yes}; // table
  use NI0PT04 {deleteAfterUse = yes}; // table
  use NI0PT05 {deleteAfterUse = yes}; // table
  use NI0PT06 {deleteAfterUse = yes}; // table
  use NI0PT07 {deleteAfterUse = yes}; // table
  use NI0PT08 {deleteAfterUse = yes}; // table
  use NI0PT09 {deleteAfterUse = yes}; // table
  use NI0PT12 {deleteAfterUse = yes}; // table
  use NI0PT13; // table
  use NI0PT14; // table
  use NI0PT15; // table
  use NI0PT52 {deleteAfterUse = yes}; // table
  use NI0PT53 {deleteAfterUse = yes}; // table
  use NI0PT54 {deleteAfterUse = yes}; // table
  use NI0PT55 {deleteAfterUse = yes}; // table
  use NI0PT56 {deleteAfterUse = yes}; // table
  use NI0PT57 {deleteAfterUse = yes}; // table
  use NI0PT58 {deleteAfterUse = yes}; // table
  use NI0PT59 {deleteAfterUse = yes}; // table
  use NI0PT62 {deleteAfterUse = yes}; // table
  use NI0PT63; // table
  use NI0PT64; // table
  use NI0PT65; // table
  use  NI0PM.TA0PM001 { // VAGen Info - unused formGroup 
      pfKeyEquate = no
  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NI0P100: NI0P100();
    NI0P300: NI0P300();
    NI0P800: NI0P800();
  end // end main
end // end NI0P

// submit production jcl
Function NI0P-410()



   /* *********************************************************/
   /* this routine processes the production jcl csp tables*/
   /* *********************************************************/

  NI0PW01.NI0PWFL3 = "N"; /* the end of process flag*/
  NI0PW01.NI0PWSUB = 1; /* set table index to 1*/
  TA6REC.TA6ROW = " ";

  while (NI0PW01.NI0PWFL3 == "N" /* process a job stream table*/
   && NI0PW01.NI0PWERR == "N")

    /* ******** submint export declaration jcl ***************/

    if (NIWREC.NIWSBIND == "E")
      NI0PW99.NI0PWJCL = NI0PT12.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT12.NI0PTTYP[NI0PWSUB];
    end

    NI0PS01(); /* MOVE JCL TO TA6REC*/
    NI0PWSUB = NI0PWSUB + 1; /* increment table index*/

  end

  NI0PS02(); /* SUBMIT JCL VIA TAOP*/


end // end NI0P-410

// submit test jcl for export dec
Function NI0P-610()
   /* *********************************************************/
   /* this routine processes the test jcl tables*/
   /* *********************************************************/

  NI0PW01.NI0PWFL3 = "N"; /* the end of process flag*/
  NI0PW01.NI0PWSUB = 1; /* set table index to 1*/
  move " " to TA6REC.TA6ROW[1] for all;

  while (NI0PW01.NI0PWFL3 == "N" /* process a job stream table*/
   && NI0PW01.NI0PWERR == "N")

    /* ********* submit shipper's declaration jcl *********/

    if (NIWREC.NIWSBIND == "E")
      NI0PW99.NI0PWJCL = NI0PT62.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT62.NI0PTTYP[NI0PWSUB];
    end


    NI0PS01(); /* FORMAT TA6REC*/
    NI0PWSUB = NI0PWSUB + 1; /* increment table index*/

  end

  NI0PS02(); /* SUBMIT JOB TO READER*/

end // end NI0P-610

// initialize process
Function NI0P100()


  XSENTRY();
  XSSEGTR();

  set TA0PM001 empty;
  set NI0PW01 empty; /* clear working storage*/
  set SQLCA empty; /* "*/
  set TA1REC empty; /* "*/
  set XCTHREC empty; /* "*/
  set TA6REC empty; /* "*/
  NIWREC.NIWGROUP = COMMAREA.CAUSERA;

   /* *********************************************************/
   /* check for illegal entry to application*/
   /* *********************************************************/

  if (COMMAREA.CAFROMAP == "NI0Q" /* Invoice order list*/
   || COMMAREA.CAFROMAP == "NI0C" /* Invoice inquery*/
   || COMMAREA.CAFROMAP == "NK0G" /* Claims create*/
   || COMMAREA.CAFROMAP == "NI0S" /* Proforma create*/
   || COMMAREA.CAFROMAP == "NI0U" /* Proforma maintenance*/
   || COMMAREA.CAFROMAP == "NI0Y" /* Acct and Pricing Tbl Print*/
   || COMMAREA.CAFROMAP == "NI0G") /* Print Misc Invoice*/
    if (NIWREC.NIWSBIND == "A" /* accounting tables print*/
     || NIWREC.NIWSBIND == "B" /* both certificate and invoice*/
     || NIWREC.NIWSBIND == "C" /* Credit invoice*/
     || NIWREC.NIWSBIND == "D" /* Draft invoice*/
     || NIWREC.NIWSBIND == "E" /* Shipper's export declaration*/
     || NIWREC.NIWSBIND == "F" /* Final invoice*/
     || NIWREC.NIWSBIND == "G" /* Print Misc Invoice*/
     || NIWREC.NIWSBIND == "O" /* CERTIFICATE OF ORIGIN OPTION*/
     || NIWREC.NIWSBIND == "P" /* pricing tables print*/
     || NIWREC.NIWSBIND == "R" /* Reprint invoice*/
     || NIWREC.NIWSBIND == "V") /* Void invoice*/
       /* next sentence*/
    else
      COMMAREA.CATOAP = "NI0K"; /* go to main menu*/
      COMMAREA.CAITEM = " "; /* go to main menu*/
      XSEXIT();
      XSPF4();
    end
  else
    COMMAREA.CATOAP = "NI0K"; /* go to main menu*/
    COMMAREA.CAITEM = " "; /* go to main menu*/
    XSEXIT();
    XSPF4();
  end


  if (NIWREC.NIWSBIND == "C") /* credits are treated like voids*/
    NI0PW01.NI0PWTY1 = "V"; /* request type*/
    NI0PW01.NI0PWTY2 = "V"; /* request type*/
  else
    if (COMMAREA.CAFROMAP != "NI0G")
      NI0PW01.NI0PWTY1 = NIWREC.NIWSBIND; /* request type*/
      NI0PW01.NI0PWTY2 = NIWREC.NIWSBIND; /* request type*/
    end
  end

  if (NIWREC.NIWSBIND == "R"
   || NIWREC.NIWSBIND == "O"
   || NIWREC.NIWSBIND == "G") /* print misc invoice*/
    NI0PW01.NI0PWIVC = NIWREC.NIWIAIVC[NIWIAIDX]; /* ivcnbr*/
  else
    NI0PW01.NI0PWSHP = NIWREC.TSFSHPID; /* ship number*/
  end

  if (COMMAREA.CAFROMAP == "NI0S"
   || COMMAREA.CAFROMAP == "NI0U")
    NI0PW01.NI0PWIVC = NIWREC.NIQPROID; /* profroma id*/
  else
    if (NIWREC.NIWSBIND == "F"
     || NIWREC.NIWSBIND == "D"
     || NIWREC.NIWSBIND == "B") /* BOTH CERTIFICATE AND INVOICE*/
      NI0PW01.NI0PW1CU = NIWREC.NIWOP1CU[NIWKQIDX]; /* ord number*/
      NI0PW01.NI0PW1NO = NIWREC.NIWOP1NO[NIWKQIDX]; /* sub number*/
    end
  end

  if (NIWREC.NIWSBIND == "V"
   || NIWREC.NIWSBIND == "C")
    NI0PW01.NI0PW1CU = NIWREC.OP1CUOID; /* ord number*/
    NI0PW01.NI0PW1NO = NIWREC.OP1NORID; /* sub number*/
  end

  if (NIWREC.NIWSBIND == "E") /* shipper export declaration*/
    NI0PW01.NI0PW1CU = NIWREC.KUCCOID; /* ord number*/
  end


  NI0PW01.NI0PWERR = "N"; /* error flag setting*/
  NI0PW01.NI0PWFL3 = "N"; /* process flag*/
   /* *********************************************************/
   /* determine region of execution prod/test*/
   /* *********************************************************/

  call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};

  if (XCTHREC.XCTH-THEATER-RUNTYPE == " ")
    TA1REC.TA1LOCAT[1] = "NI0P100 ";
    TA1REC.TA1LOCAT[2] = "XC0910  ";
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1PGMNM = "NI0P";

    TA1REC.TA1FUNC = "POST";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
     /* XSPF4;*/
    NIWREC.NIWMSGNR = 146; /* unable to determine cics region*/
    NI0PW01.NI0PWERR = "Y"; /* set error message flag*/


  end



end // end NI0P100

// prepare for submission
Function NI0P300()


   /* *********************************************************/
    /* all 'prod' regions are supposed to be production...*/
   /* *********************************************************/

  if (NI0PW01.NI0PWERR == "N") /* if not errors*/

    if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if production region*/
      if (NIWREC.NIWSBIND == "E") /* submit prod shipper declaration*/
        NI0P-410();
      else
        NI0P400(); /* submit production job stream*/
      end
    else
      if (NIWREC.NIWSBIND == "E") /* submit test shipper declaration*/
        NI0P-610();
      else
        NI0P600(); /* submit test job stream*/
      end
    end

  end

end // end NI0P300

// submit production jcl
Function NI0P400()
   /* *********************************************************/
   /* this routine processes the production jcl csp tables*/
   /* *********************************************************/

  NI0PW01.NI0PWFL3 = "N"; /* the end of process flag*/
  NI0PW01.NI0PWSUB = 1; /* set table index to 1*/
  TA6REC.TA6ROW = " ";

  while (NI0PW01.NI0PWFL3 == "N" /* process a job stream table*/
   && NI0PW01.NI0PWERR == "N")

    /* **************** final invoice table *************/
    if (NIWREC.NIWSBIND == "F")
      if (COMMAREA.CAFROMAP == "NI0Q")
        NI0PW99.NI0PWJCL = NI0PT02.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT02.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      else /* proforma*/
        NI0PW99.NI0PWJCL = NI0PT08.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT08.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      end
    end

    /* **************** draft invoice table *************/
    if (NIWREC.NIWSBIND == "D")
      if (COMMAREA.CAFROMAP == "NI0Q")
        NI0PW99.NI0PWJCL = NI0PT03.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT03.NI0PTTYP[NI0PWSUB];
      else /* proforma*/
        NI0PW99.NI0PWJCL = NI0PT09.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT09.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      end
    end

    /* **************** void/credit invoice table *************/
    if (NIWREC.NIWSBIND == "V"
     || NIWREC.NIWSBIND == "C")
      NI0PW99.NI0PWJCL = NI0PT04.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT04.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** reprint invoice table ************/
    if (NIWREC.NIWSBIND == "R")
      NI0PW99.NI0PWJCL = NI0PT05.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT05.NI0PTTYP[NI0PWSUB]; /* record type*/
    end
    /* ******** BOTH INVOICE & CERTIFICATE TABLE *********/
    if (NIWREC.NIWSBIND == "B")
      NI0PW99.NI0PWJCL = NI0PT06.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT06.NI0PTTYP[NI0PWSUB]; /* record type*/
    end
    /* **************** PRINT CERTIFICATE TABLE **********/
    if (NIWREC.NIWSBIND == "O")
      NI0PW99.NI0PWJCL = NI0PT07.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT07.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** PRINT PRICING TABLES    **********/
    if (NIWREC.NIWSBIND == "P")
      NI0PW99.NI0PWJCL = NI0PT13.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT13.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** PRINT ACCOUNTING TABLES **********/
    if (NIWREC.NIWSBIND == "A")
      NI0PW99.NI0PWJCL = NI0PT14.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT14.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** PRINT MISC INVOICE ***************/
    if (NIWREC.NIWSBIND == "G")
      NI0PW99.NI0PWJCL = NI0PT15.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT15.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    NI0PS01(); /* MOVE JCL TO TA6REC*/
    NI0PWSUB = NI0PWSUB + 1; /* increment table index*/

  end

  NI0PS02(); /* SUBMIT JCL VIA TAOP*/


end // end NI0P400

// submit test jcl
Function NI0P600()
   /* *********************************************************/
   /* this routine processes the test jcl tables*/
   /* *********************************************************/

  NI0PW01.NI0PWFL3 = "N"; /* the end of process flag*/
  NI0PW01.NI0PWSUB = 1; /* set table index to 1*/
  move " " to TA6REC.TA6ROW[1] for all;

  while (NI0PW01.NI0PWFL3 == "N" /* process a job stream table*/
   && NI0PW01.NI0PWERR == "N")

    /* **************** final invoice table *************/
    if (NIWREC.NIWSBIND == "F")
      if (COMMAREA.CAFROMAP == "NI0Q") /* invoice*/
        NI0PW99.NI0PWJCL = NI0PT52.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT52.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      else /* proforma*/
        NI0PW99.NI0PWJCL = NI0PT58.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT58.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      end
    end

    /* **************** draft invoice table *************/
    if (NIWREC.NIWSBIND == "D")
      if (COMMAREA.CAFROMAP == "NI0Q") /* invoice*/
        NI0PW99.NI0PWJCL = NI0PT53.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT53.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      else /* proforma*/
        NI0PW99.NI0PWJCL = NI0PT59.NI0PWJCL[NI0PWSUB]; /* jcl card*/
        NI0PW01.NI0PTTYP = NI0PT59.NI0PTTYP[NI0PWSUB];
                                   /* record type*/
      end
    end

    /* **************** void invoice table *************/
    if (NIWREC.NIWSBIND == "V"
     || NIWREC.NIWSBIND == "C") /* credit*/
      NI0PW99.NI0PWJCL = NI0PT54.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT54.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** reprint invoice table **********/
    if (NIWREC.NIWSBIND == "R")
      NI0PW99.NI0PWJCL = NI0PT55.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT55.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* ********* PRINT FINAL AND CERTIFICATE TABLE ****/
    if (NIWREC.NIWSBIND == "B")
      NI0PW99.NI0PWJCL = NI0PT56.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT56.NI0PTTYP[NI0PWSUB]; /* record type*/
    end
    /* **************** PRINT CERTIFICATE TABLE ********/
    if (NIWREC.NIWSBIND == "O")
      NI0PW99.NI0PWJCL = NI0PT57.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT57.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** PRINT PRICING TABLES    ********/
    if (NIWREC.NIWSBIND == "P")
      NI0PW99.NI0PWJCL = NI0PT63.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT63.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** PRINT ACCOUNTING TABLES ********/
    if (NIWREC.NIWSBIND == "A")
      NI0PW99.NI0PWJCL = NI0PT64.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT64.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    /* **************** PRINT MISC INVOICE *************/
    if (NIWREC.NIWSBIND == "G")
      NI0PW99.NI0PWJCL = NI0PT65.NI0PWJCL[NI0PWSUB]; /* jcl card*/
      NI0PW01.NI0PTTYP = NI0PT65.NI0PTTYP[NI0PWSUB]; /* record type*/
    end

    NI0PS01(); /* FORMAT TA6REC*/
    NI0PWSUB = NI0PWSUB + 1; /* increment table index*/

  end

  NI0PS02(); /* SUBMIT JOB TO READER*/


end // end NI0P600

// return to calling appli
Function NI0P800()



  COMMAREA.CAUSERA = NIWREC.NIWGROUP; /* send record back*/
  COMMAREA.CATOAP = COMMAREA.CAFROMAP;
   /* if form proforma create, send them back to maintenance*/
  if (COMMAREA.CAFROMAP == "NI0S")
    COMMAREA.CATOAP = "NI0U";
  end
  COMMAREA.CAITEM = " "; /* go to main menu*/
  COMMAREA.CAFROMAP = "NI0P"; /* comming back from ni0p*/
  XSEXIT();
  XSPF4();



end // end NI0P800

// format jcl if user exists
Function NI0PS-DETR-ALT-RMT()
   /* *********************************************************/
   /* this routine processes the jcl tables by user and rmt*/
   /* *********************************************************/
   /* DATE    USER      DESCRIPTION*/
   /* -------- ------  -------------------------------------*/
   /* 06-06-97 HMACAL  Removed logic to use NI0PT99 table,*/
   /* instead, calls IO mod VNLIPR01 to validate*/
   /* user id and get printer id*/
   /* *********************************************************/

  NI0PW01.NI0PWUPJ = NI0PW99.NI0PWJCL;
                   /* move jcl to ws jcl for user printer table*/
   /* HMACAL - START REMOVE*/
   /* IF COMMAREA.CAUSERID IN NI0PT99.XXXUSRID;*/
   /* MOVE NI0PT99.NI0PT-CERTIF-RMT(EZETST) TO NI0PW01.NI0PWPRT;*/
   /* ELSE;*/
   /* MOVE 'RMT153' TO NI0PW01.NI0PWPRT;*/
   /* END;*/
   /* HMACAL - END REMOVE*/

  NI0PS-VNLIPR01-S(); /* Select Unique DNILO.VNLIPR01*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Row Found*/
    NI0PW01.NI0PWPRT = VNLIPR01.NI-CRTF-RMTPRTR-ID;
  else
    NI0PW01.NI0PWPRT = "RMT153";
  end

  NI0PW99.NI0PWJCL = NI0PW01.NI0PWUPJ;
                   /* move mod ws-jcl to original jcl*/
end // end NI0PS-DETR-ALT-RMT

// format jcl if user exists
Function NI0PS-DETR-USR-RMT()
   /* *********************************************************/
   /* this routine processes the jcl tables by user and rmt*/
   /* *********************************************************/
   /* DATE     USER      DESCRIPTION*/
   /* --------  ------   ------------------------------------*/
   /* 06-06-97  HMACAL   Removed logic to use NI0PT99 table,*/
   /* instead, use IO module VNLIPR01 to*/
   /* check UserId and remote printer id.*/
   /* *********************************************************/

  NI0PW01.NI0PWUPJ = NI0PW99.NI0PWJCL;
                   /* move jcl to ws jcl for user printer table*/
   /* hmacal start*/
   /* IF COMMAREA.CAUSERID IN NI0PT99.XXXUSRID;*/
   /* hmacal end*/

  NI0PS-VNLIPR01-S(); /* Select Unique DNILO.VNLIPR01*/

  if (SQLCA.VAGen_SQLCODE == 0) /* If Found*/
    if (NIWREC.NIWSBIND == "G" /* misc. invoice*/
     || NIWREC.NIWSBIND == "B" /* Both*/
     || NIWREC.NIWSBIND == "F") /* Final*/
   /* MOVE NI0PT99.NI0PT-FIN-RMT(EZETST) TO NI0PW01.NI0PWPRT;*/
      NI0PW01.NI0PWPRT = VNLIPR01.NI-FINL-RMTPRTR-ID;
                   /* move final rmt to ws-jcl*/
    end /* if niwdbind = 'b, f, g'*/
    if (NIWREC.NIWSBIND == "D" /* draft*/
     || NIWREC.NIWSBIND == "E") /* shpr/export declaration*/
   /* MOVE NI0PT99.NI0PT-DEF-RMT(EZETST) TO NI0PW01.NI0PWPRT;*/
      NI0PW01.NI0PWPRT = VNLIPR01.NI-DRFT-RMTPRTR-ID;
                   /* move draft rmt to ws-jcl*/
    end /* if niwdbind = 'd'*/
    if (NIWREC.NIWSBIND == "R") /* Reprint*/
      if (NIWREC.NIWPRTREQ == "F" /* final print request*/
       || NIWREC.NIWPRTREQ == " ")
   /* MOVE NI0PT99.NI0PT-FIN-RMT(EZETST) TO NI0PW01.NI0PWPRT;*/
        NI0PW01.NI0PWPRT = VNLIPR01.NI-FINL-RMTPRTR-ID;
      else
        if (NIWREC.NIWPRTREQ == "G") /* green bar request from ni0c*/
   /* MOVE NI0PT99.NI0PT-DEF-RMT(EZETST) TO NI0PW01.NI0PWPRT;*/
          NI0PW01.NI0PWPRT = VNLIPR01.NI-DRFT-RMTPRTR-ID;
        end
      end
    end
  else /* not in user table (DNILO.VNLIRP01)*/
    if (NIWREC.NIWSBIND == "R") /* reprint from ni0c*/
      if (NIWREC.NIWPRTREQ == "F") /* Print Final*/
        NI0PW01.NI0PWPRT = "RMT53";
      else
        if (NIWREC.NIWPRTREQ == "G") /* Print Draft*/
          NI0PW01.NI0PWPRT = "RMT117";
        end
      end /* reprint*/
    end /* print request*/
  end /* if userid*/
  NI0PW99.NI0PWJCL = NI0PW01.NI0PWUPJ;
                   /* move mod ws-jcl to original jcl*/
end // end NI0PS-DETR-USR-RMT

// Select Unique VNLIPR01 row
Function NI0PS-VNLIPR01-S()
   /* ****************************************************************/
   /* Select Unique DNILO.VNLIPR01*/
   /* ****************************************************************/

  set VNLIPR01 empty;

  VNLIPR01.XXX-USER-ID = COMMAREA.CAUSERID;

  call "VNLIPR01" ("S ", SQLCA, VNLIPR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/

  if (SQLCA.VAGen_SQLCODE == -911)
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[1] = "NI0P100";
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLIPR01"; /* io module*/
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1PGMNM = "NI0P";
      TA1REC.TA1FUNC = "POST";
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLIPR01"; /* table view*/
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    end
  end

end // end NI0PS-VNLIPR01-S

// FORMAT TA6REC
Function NI0PS01()
   /* *********************************************************/
   /* Format the variable areas of the JCL statement.*/
   /* Write Job Control Language to the Internal Reader queue.*/
   /* If error occurred, report to the error diagnosis facility.*/
   /* Indicate the job was submitted when end of file is written.*/
   /* 1.  J = job control card*/
   /* 2.  N = notify card*/
   /* 3.  O = report format information and number of copies*/
   /* 4.  U = UCC7 interface*/
   /* 5.  P = Parameter card for the JCL*/
   /* *********************************************************/

  if (NI0PW01.NI0PTTYP == "P") /* Parameter statement*/
    if (COMMAREA.CAFROMAP == "NI0S" /* proforma build*/
     || COMMAREA.CAFROMAP == "NI0U" /* proforma maintenance*/
     || COMMAREA.CAFROMAP == "NI0G") /* print misc invoice*/
      TA6REC.TARJCL[NI0PWSUB] = NI0PW01.NI0PWPR2; /* IVC ID PARM*/
    else
      if (NIWREC.NIWSBIND == "D" /* draft*/
       || NIWREC.NIWSBIND == "F" /* final*/
       || NIWREC.NIWSBIND == "E" /* shipper export declaration*/
       || NIWREC.NIWSBIND == "V" /* void*/
       || NIWREC.NIWSBIND == "C" /* credit treated like a void*/
       || NIWREC.NIWSBIND == "B") /* CERTIFICATE AND INVOICE PRINT*/
        TA6REC.TARJCL[NI0PWSUB] = NI0PW01.NI0PWPR1; /* SHIP PARM*/
      else
        TA6REC.TARJCL[NI0PWSUB] = NI0PW01.NI0PWPR2; /* IVC ID PARM*/
      end
    end
  else
    if (NI0PW01.NI0PTTYP == "Q") /* Remote Printer Statement*/
      NI0PS-DETR-USR-RMT();
    end
    if (NI0PW01.NI0PTTYP == "Z") /* Remote Printer Statement*/
      NI0PS-DETR-ALT-RMT();
    end
    TA6REC.TARJCL[NI0PWSUB] = NI0PW99.NI0PWJCL;
    TA6REC.TARTYPE[NI0PWSUB] = NI0PW01.NI0PTTYP;
  end

  if (NI0PW99.NI0PWJCL == "/*EOF") /* End of file*/
    NI0PW01.NI0PWFL3 = "Y"; /* Indicate end of table*/
  end


end // end NI0PS01

// FORMAT JCL FOR TA0P
Function NI0PS02()
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* SUBMIT JCL FOR BACKGROUND JOB*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

   /* MOVE 'NI0PS01' TO NIWREC.XXXMODID   ; Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/
    TA1REC.TA1LOCAT[1] = "NI0P100 ";
    TA1REC.TA1LOCAT[2] = "TA0P    ";
    TA1REC.TA1LOCAT[3] = "RTN CD -";
    TA1REC.TA1LOCAT[4] = TA6REC.TA6RTNCD;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1PGMNM = "NI0P";
    TA1REC.TA1FUNC = "POST";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
     /* MOVE XX TO EZEMNO             ; Unexpected error occurred*/

  end

end // end NI0PS02

//*** RECORD=NI0PW01 ****
// Working storage for ni0p - TRAFFIC Report Requests
// 
// Maintenence Log:
// 
//   Date    Init        Comment
// ________  ______      ________________________________
// 06/17/93  KShaw       Added ni0pt99c/f items
// 06/17/93  KShaw       Added ni0pwupj/ni0pwprt
// 06/17/93  KShaw       Added ni0pwhld
// ***********************
Record NI0PW01 type basicRecord
  5 NI0PWGRP NI0PWGRP ; 
    10 NI0PWTMX NI0PWTMX ; 
    10 NI0PWTOP NI0PWTOP ; 
    10 NI0PWUID NI0PWUID ; 
    10 NI0PWPR1 NI0PWPR1 ; 
      15 NI0PWSHP NI0PWSHP ; 
      15 NI0PW1CU NI0PW1CU ; 
      15 NI0PW1NO NI0PW1NO ; 
      15 NI0PWTY1 NI0PWTY1 ; 
      15 * char(59) ; 
    10 NI0PWPR2 NI0PWPR2 ; 
      15 NI0PWIVC NI0PWIVC ; 
      15 NI0PWTY2 NI0PWTY2 ; 
      15 * char(71) ; 
    10 NI0PWCPY NI0PWCPY ; 
    10 XSOPDEST XSOPDEST ; 
    10 NI0PTTYP NI0PTTYP ; 
    10 NI0PTSPC NI0PTSPC ; 
    10 NI0PWSWK NI0PWSWK ; 
    10 NI0PWF17 NI0PWF17 ; 
    10 NI0PWCAF NI0PWCAF ; 
    10 NI0PWRP2 NI0PWRP2 ; 
    10 NI0PWNBR NI0PWNBR ; 
      15 NI0PWNB1 NI0PWNB1 ; 
      15 NI0PWNB2 NI0PWNB2 ; 
    10 NI0PWSCH NI0PWSCH ; 
    10 TA3APLID TA3APLID ; 
      15 * char(5) ; 
      15 NI0PWREG NI0PWREG ; 
      15 * char(1) ; 
    10 NI0PWERR NI0PWERR ; 
    10 NI0PWSUB NI0PWSUB ; 
    10 NI0PWFL3 NI0PWFL3 ; 
    10 XXXNBRCY XXXNBRCY ; 
    10 NI0PW99C NI0PW99C ; 
    10 NI0PW99F NI0PW99F ; 
    10 NI0PWUPJ NI0PWUPJ ; 
      15 * char(18) ; // filler
      15 NI0PWPRT NI0PWPRT ; 
      15 * char(56) ; 
    10 NI0PWHLD NI0PWHLD ; 
end // end NI0PW01

//*** RECORD=NI0PW99 ****
// System internal reader queue (INTR) record definition.
// ***********************
Record NI0PW99 type serialRecord  {
  fileName = "INTR"
  }
  10 NI0PWJCL NI0PWJCL ; 
end // end NI0PW99

// order nbr
DataItem NI0PW1CU num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sub-order nbr
DataItem NI0PW1NO num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// user table counter
DataItem NI0PW99C num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// user table found flag
DataItem NI0PW99F char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast path confirmation
DataItem NI0PWCAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of copies to print
DataItem NI0PWCPY num(1)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem NI0PWERR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Job submitted switch
DataItem NI0PWF17 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// process flag
DataItem NI0PWFL3 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NI0PWGRP char(308)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// user table counter
DataItem NI0PWHLD num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl_ivc_ic
DataItem NI0PWIVC num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// first part of req nbr
DataItem NI0PWNB1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// second part of req nbr
DataItem NI0PWNB2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-btch-rqt-nbr
DataItem NI0PWNBR num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// jcl card
DataItem NI0PWPR1 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl card
DataItem NI0PWPR2 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// printer from user table
DataItem NI0PWPRT char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cics region number
DataItem NI0PWREG char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second report requested flag
DataItem NI0PWRP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// schedule i.d. number work
DataItem NI0PWSCH num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TS_NIKE_SHP_ID
DataItem NI0PWSHP num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem NI0PWSUB num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Customer error switch
DataItem NI0PWSWK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// remote printer tbl max
DataItem NI0PWTMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// top of screen marker
DataItem NI0PWTOP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// request type
DataItem NI0PWTY1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// request type
DataItem NI0PWTY2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NIKE user identification
DataItem NI0PWUID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// user table jcl printer insert
DataItem NI0PWUPJ char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

