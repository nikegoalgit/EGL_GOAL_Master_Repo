package ni0y;

import corpcom2.XX0XW01;
import corpcom2.XX0XW02;
import corpcom2.YSMREC;
import corpcom2.ZFCWREC;
import corpcom3.XPNL002;
import corpcom3.XPNL005;
import corpcom3.XPXX001;
import corpcom3.XPZFC-LOAD;
import corpcom3.XPZFC-POP;
import corpcom4.XSENTRY;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXXSTAT;
import corpx1.XAUCD;
import corpx1.XAUTBL;
import corpx1.XGPCD;
import corpx1.XGPTBL;
import corpx1.XOBTBL;
import corpx1.XPTTBL;
import corpx1.XPYTBL;
import corpx2.XOBCD;
import corpx2.XPTCD;
import corpy2.YMTTBL;
import corpy2.YPYCD;
import corpy2.YPYTBL;
import corpz3.ZARCD;
import corpz3.ZARTBL;
import corpz3.ZCF-COMM-FEE-CD;
import corpz3.ZCFTBL;
import corpz3.ZCHTBL;
import corpz3.ZPSTBL;
import corpz3.ZRTCD;
import corpz3.ZRTTBL;
import corpz3.ZZZCHGCT;
import corpz3.ZZZCHGDT;
import corpz3.ZZZCHGTM;
import corpz3.ZZZSDT;
import ku.common.KUCCOID;
import ku.common.KUCREC;
import ku.common.KULREC;
import ni.common.NIWREC;
import nl.common.*;
import op.common.OP1REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TAEREC;
import vv.common.VNLGLA01;
import vv.common.VNLIPR01;
import vv.common.VNLKPR01;
import vv.common.VNLXPY01;
import vv.common.VRCVGL01;
import vv.common.VSTYGL01;
import vv.common.VZCHGL01;
import vv.common.VZFC0001;
//*** PROGRAM=NI0Y ****
// ************************************************************
// 
//               NI0Y - Update NIL Tables
//               -------------------------
// 
// General program explanation and notes:
// 
// This program allows the user to perform add, change and
// delete rows in International Tables.
// ------------------------------------------------------------
// Maintenance History:
// --------------------
//   Date   Who    Remarks
// -------- ------ --------------------------------------------
// 05-13-92 JJUDKI Application creation.
// 10-14-92 JJUDKI OCT DB CHG.
// 11-18-92 JJUDKI Remove zfctbl from table list.
// 01-11-93 JSHANN Added susp gl flag to zch screen M400
// 01-28-93 JJUDKI Allowed gl flag on screen M400 to be 'N'.
// 04-20-93 JJUDKI Change color attributes on screens.
// 05-07-93 JJUDKI Show database susp gl flag on map400.
// 11-15-93 JJUDKI recompile for db changes.
// 12-13-93 JJUDKI Remove literals from map100.
// 03-18-94 ahowar added pop-up zfc table.
// 06-06-97 HMACAL Added DNILO.VNLIPR01 and DNILO.VNLKPR01
//                 table maintenance functions.
// 07-02-97 HMACAL Changed sequence of entry fields
// 07-09-97 HMACAL Fixed Update logic for VNLIPR01 and VNLKPR01
// *********************
Program NI0Y type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "NL00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KUCREC KUCREC; // record
  KULREC KULREC; // record
  NI0YW01 NI0YW01; // record
  NIWREC NIWREC; // record
  NLXREC NLXREC; // record
  OP1REC OP1REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VNLGLA01 VNLGLA01; // record
  VNLIPR01 VNLIPR01; // record
  VNLKPR01 VNLKPR01; // record
  VNLXPY01 VNLXPY01; // record
  VNLZCF01 VNLZCF01; // record
  VNLZRT01 VNLZRT01; // record
  VRCVGL01 VRCVGL01; // record
  VSTYGL01 VSTYGL01; // record
  VZCHGL01 VZCHGL01; // record
  VZFC0001 VZFC0001; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  YSMREC YSMREC; // record
  ZFCWREC ZFCWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use NI0YT01; // table
  use XAUTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XOBTBL {deleteAfterUse = yes}; // table
  use XPYTBL {deleteAfterUse = yes}; // table
  use XPTTBL {deleteAfterUse = yes}; // table
  use YMTTBL {deleteAfterUse = yes}; // table
  use YPYTBL {deleteAfterUse = yes}; // table
  use ZARTBL {deleteAfterUse = yes}; // table
  use ZCFTBL {deleteAfterUse = yes}; // table
  use ZCHTBL {deleteAfterUse = yes}; // table
  use ZPSTBL {deleteAfterUse = yes}; // table
  use ZRTTBL {deleteAfterUse = yes}; // table
  use NI0YM.NI0YM100,  // forms
      NI0YM.NI0YM200, 
      NI0YM.NI0YM300, 
      NI0YM.NI0YM400, 
      NI0YM.NI0YM500, 
      NI0YM.NI0YM600, 
      NI0YM.NI0YM700, 
      NI0YM.NI0YM800, 
      NI0YM.NI0YM900,
      NI0YM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    NI0Y000: NI0Y000();
    exit program;
  end // end main
end // end NI0Y

// Main flow
Function NI0Y000()
   /* ************************************************************/
   /* *   this is the "main logic" for the application.         **/
   /* *                                                         **/
   /* *   perform initialization, set application revision nbrs,**/
   /* *   then do main perform until done with application      **/
   /* ************************************************************/
  ;
  NLXREC.NLXCPROC = "NI0Y000";
  ;
  NI0Y001(); /* initialize the application*/
  ;
  NLXREC.NLXEOAF = "N"; /* set end-of-application flag to 'no'*/
  ;
  while (NLXREC.NLXEOAF == "N") /* while not end-of-aplication*/
    NI0Y050(); /* process the application screen(s)*/
  end
  ;
  COMMAREA.CACURRAP = "NI0Y";
  XPNL002();
  exit program;
end // end NI0Y000

// Initialize application
Function NI0Y001()
  ;
  NLXREC.NLXCPROC = "NI0Y001";
  ;
  converseVar.commitOnConverse = 1; /* force db2 to commit on each screen*/
                                   /* converse*/
  VGVar.handleHardIOErrors = 1; /* return control to appl if hard db2*/
                                   /* error*/
  ;
  set NI0YW01 empty; /* clear working storage rec1*/
  set SQLCA empty;
  ;
  XSENTRY(); /* appl entry security*/
  XSSEGTR(); /* set segmented transaction id*/
  ;
  set NLXREC empty; /* clear common working storage*/
  ;
  NLXERRF = "N";
  ;
   /* ***********************************/
   /* Initialize all potential records.*/
   /* ***********************************/
  set KUCREC empty;
  set KULREC empty;
  set OP1REC empty;
  set NIWREC empty;
  ;
  NLXREC.NLXCSCRN = "NI0YM100"; /* set first screen to display*/
  ;
   /* ***********************************/
   /* Check Passed Data*/
   /* ***********************************/
  if (COMMAREA.CAFROMAP == "NI0P") /* returning from print*/
    NIWREC.NIWGROUP = COMMAREA.CAUSERA;
    COMMAREA.CAUSERA = " ";
    if (NIWREC.NIWMSGNR == 0)
      if (NIWREC.NIWSBIND == "A") /* accounting tables printed*/
        converseLib.validationFailed(258);
      else
        if (NIWREC.NIWSBIND == "P") /* pricing tables printed*/
          converseLib.validationFailed(257);
        end
      end
    else
      if (NIWREC.NIWMSGNR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(NIWREC.NIWMSGNR);
      end
    end
  end
  ;
end // end NI0Y001

// decide which map to display
Function NI0Y050()
   /* ************************************************************/
   /* *   control process the application screen(s)             **/
   /* *  note that this process is being performed in a         **/
   /* *  "while loop" until the end-of-application flag is set  **/
   /* *  to 'y'.                                                **/
   /* *    DATE    USER   Description                           **/
   /* *  -------- ------  ------------------------------------- **/
   /* *  06/06/97 HMACAL  Added Options 7 and 8                 **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y050"; /* set current process name*/
  ;
  sysVar.arrayIndex = 0;
  NLXREC.NLXSCRNX = 0;
  ;
  if (NLXREC.NLXCSCRN in NLXREC.NLXSNAME) /* if current-screen-name is*/
    NLXREC.NLXSCRNX = sysVar.arrayIndex; /* in the screen-array, then set*/
  end /* the screen-index*/
  ;
  set TA1REC empty;
  TA1REC.TA1MAP = NLXREC.NLXCSCRN; /* prepare for abend*/
  ;
  NLXREC.NLXBLDSC = "Y"; /* set build screen flag to 'yes'*/
  NLXREC.NLXEOSF = "N"; /* set end-of-screen flag to 'no'*/
   /* MOVE 'N' TO NLXREC.NLXERRF;      /* clear error flag*/
  NI0YW01.NI0YWSMS = "N"; /* clear screen modified switch*/
  NI0YW01.NI0YW-DELETE-FLAG = "N"; /* delete row confirmation flag*/
  ;
  NI0Y100();
  ;
  if (NI0YM100.NI0YM-100-OPT == 1) /* dnilo.vnlzpy01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y200();
    end
  end
  ;
  if (NI0YM100.NI0YM-100-OPT == 2) /* dnilo.vnlzcf01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y300();
    end
  end
  ;
  if (NI0YM100.NI0YM-100-OPT == 3) /* dnilo.vzchgl01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y400();
    end
  end
  ;
  if (NI0YM100.NI0YM-100-OPT == 4) /* dnilo.vrcvgl01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y500();
    end
  end
  ;
  ;
  if (NI0YM100.NI0YM-100-OPT == 5) /* dnilo.vnlzrt01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y600();
    end
  end
  ;
  if (NI0YM100.NI0YM-100-OPT == 6) /* dnilo.vstygl01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y700();
    end
  end
  ;
  if (NI0YM100.NI0YM-100-OPT == 7) /* DNILO.VNLIPR01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y800();
    end
  end
  ;
  if (NI0YM100.NI0YM-100-OPT == 8) /* DNILO.VNLKPR01*/
    while (NLXREC.NLXEOSF == "N")
      NI0Y900();
    end
  end
  ;
   /* at this point;*/
       /* if the end-of-application flag (NLXEOAF ) = 'n'*/
         /* the perform will return to the top of nl0%050...*/
       /* else*/
         /* the perform will auto return to nl0%000.*/
  ;
end // end NI0Y050

// Converse map NI0YM100
Function NI0Y100()
   /* ************************************************************/
   /* *    process screen NI0YM100                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y100";
  ;
   /* IF NLXREC.NLXBLDSC EQ 'Y';*/
  if (NLXREC.NLXERRF == "N")
    NI0Y101(); /* Perform i/o, load map fields*/
    NLXREC.NLXBLDSC = "N";
  end
  ;
   /* ***********************************************************/
  converse NI0YM100 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y110(); /* validate pfkeys*/
  ;
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y120(); /* Examine keys or edit*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y130(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y100.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y100

// Build screen
Function NI0Y101()
   /* **************************************/
   /* Build screen NI0YM100*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y101";
  ;
  set NI0YM100 empty; /* Clear screen*/
  ;
  NI0YM100.NI0YM-100-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  NI0YW01.NI0YW-TBL-CTR1 = 1;
  NI0YW01.NI0YW-MAP-CTR1 = 1;
  while (NI0YW01.NI0YW-MAP-CTR1 <= 16
   && NI0YT01.NI0YW-TBL[NI0YW-TBL-CTR1] != "99")
    NI0YM-100-TBL[NI0YW-MAP-CTR1] = NI0YT01.NI0YW-TBL[NI0YW-TBL-CTR1];
    NI0YW01.NI0YW-TBL-CTR1 = NI0YW01.NI0YW-TBL-CTR1 + 1;
    NI0YW01.NI0YW-MAP-CTR1 = NI0YW01.NI0YW-MAP-CTR1 + 1;
  end
  ;
  ;
end // end NI0Y101

// Edit pfkeys
Function NI0Y110()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y110";
  ;
  if (converseVar.eventKey is pf3  /* return to NL0A*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf13 /* print PRICING repts*/
   || converseVar.eventKey is pf14 /* print ACCOUNTING repts*/
   || converseVar.eventKey is enter) /* accept entered option*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM100.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM100.CATOAP;
    COMMAREA.CAITEM = NI0YM100.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "NL0A";
      COMMAREA.CAUSERA = " ";
      XPNL002();
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
    /* ELSE;*/
     /* IF EZEAID IS PF13;*/
       /* submit pricing tables print job*/
       /* MOVE 'Y' TO NLXREC.NLXBLDSC;*/
       /* MOVE 'Y' TO NLXREC.NLXEOSF;*/
       /* MOVE 'Y' TO NLXREC.NLXERRF;*/
       /* MOVE 257 TO EZEMNO;   /* pricing tables job submitted*/
     /* ELSE;*/
       /* IF EZEAID IS PF14;*/
         /* submit accounting tables print job*/
         /* MOVE 'Y' TO NLXREC.NLXBLDSC;*/
         /* MOVE 'Y' TO NLXREC.NLXEOSF;*/
         /* MOVE 'Y' TO NLXREC.NLXERRF;*/
         /* MOVE 258 TO EZEMNO;   /* accounting tables job submitted*/
       /* END;*/
      /* END;*/
      end
    end
  end
end // end NI0Y110

// Edit NI0YM100 fields
Function NI0Y120()
   /* **************************************/
   /* Edit NI0YM100 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y120";
  ;
  set NI0YM100.NI0YM-100-OPT normal;
  ;
  if (converseVar.eventKey not pf13
   && converseVar.eventKey not pf14)
    if (NI0YM100.NI0YM-100-OPT >= 1
     && NI0YM100.NI0YM-100-OPT <= 8)
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM100.NI0YM-100-OPT cursor, bold;
      converseLib.validationFailed(1); /* invalid option chosen*/
    end
  end
  ;
end // end NI0Y120

// Edit pfkeys/Next Action
Function NI0Y130()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y130";
  ;
  if (converseVar.eventKey is pf3  /* return to NL0A*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf13 /* print PRICING repts*/
   || converseVar.eventKey is pf14 /* print ACCOUNTING repts*/
   || converseVar.eventKey is enter) /* accept entered option*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(999); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM100.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM100.CATOAP;
    COMMAREA.CAITEM = NI0YM100.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      COMMAREA.CATOAP = "NL0A";
      COMMAREA.CAUSERA = " ";
      XPNL002();
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf13) /* submit pricing tables print job*/
          COMMAREA.CATOAP = "NI0P";
          NIWREC.NIWSBIND = "P";
          COMMAREA.CAUSERA = NIWREC.NIWGROUP;
          XPNL002();
          return;
        else
          if (converseVar.eventKey is pf14) /* submit accounting tables print job*/
            COMMAREA.CATOAP = "NI0P";
            NIWREC.NIWSBIND = "A";
            COMMAREA.CAUSERA = NIWREC.NIWGROUP;
            XPNL002();
            return;
          end
        end
      end
    end
  end
end // end NI0Y130

// Converse map NI0YM200
Function NI0Y200()
   /* ************************************************************/
   /* *    process screen NI0YM200                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y200";
  ;
  if (NLXREC.NLXERRF == "N"
   && NI0YW01.NI0YWPOP == "N")
    NI0Y201(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM200 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  NI0YW01.NI0YWPOP = "N";
  ;
  NI0Y210(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map200*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y220(); /* Edit fields on map200*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y230(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y200.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y200

// Build screen
Function NI0Y201()
   /* **************************************/
   /* Initialize screen NI0YM200*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y201";
  ;
  set NI0YM200 empty; /* Clear screen*/
  ;
  NI0YM200.NI0YM-200-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM200.NI0YM-200-XGP-GPC-CD cursor, normal;
  set NI0YM200.NI0YM-200-XXX-SUM-XOB-CD normal;
  set NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD normal;
  set NI0YM200.NI0YM-200-CU-CO-ID normal;
  set NI0YM200.NI0YM-200-ZFC-CRCY-CD normal;
  set NI0YM200.NI0YM-200-XPY-PRC-TYP-CD normal;
  set NI0YM200.NI0YM-200-NL-PRC-COST-PCT normal;
  ;
end // end NI0Y201

// Edit pfkeys
Function NI0Y210()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y210";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM200.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM200.CATOAP;
    COMMAREA.CAITEM = NI0YM200.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y210

// Edit NI0YM200 fields
Function NI0Y220()
   /* **************************************/
   /* Edit NI0YM200 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y220";
  ;
  set NI0YM200.NI0YM-200-XGP-GPC-CD cursor, normal;
  set NI0YM200.NI0YM-200-XXX-SUM-XOB-CD normal;
  set NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD normal;
  set NI0YM200.NI0YM-200-CU-CO-ID normal;
  set NI0YM200.NI0YM-200-ZFC-CRCY-CD normal;
  set NI0YM200.NI0YM-200-XPY-PRC-TYP-CD normal;
  set NI0YM200.NI0YM-200-NL-PRC-COST-PCT normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Validate price type*/
   /* **************************************/
    if (NI0YM200.NI0YM-200-XPY-PRC-TYP-CD == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM200.NI0YM-200-XPY-PRC-TYP-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* Price Type must be filled in*/
    else
      if (NI0YM200.NI0YM-200-XPY-PRC-TYP-CD in XPYTBL.XPYCD
       && XPYTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM200.NI0YM-200-XPY-PRC-TYP-CD cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
    ;
  end
  ;
   /* **************************************/
   /* Validate currency code*/
   /* **************************************/
  ;
  if (NI0YM200.NI0YM-200-ZFC-CRCY-CD == "?")
    NI0YW01.NI0YWPOP = "Y";
    XPXX001();
    XPZFC-LOAD();
    while (XX0XW02.XX0XWEND == "N")
      XPZFC-POP();
    end
    if (XX0XW02.XX0XWPIX > 0)
      NI0YM200.NI0YM-200-ZFC-CRCY-CD = ZFCWREC.ZFC-CRCY-CD[XX0XWPIX];
    else
      NI0YM200.NI0YM-200-ZFC-CRCY-CD = " ";
    end
    converseLib.clearScreen();
    
  end
  ;
  if (NI0YM200.NI0YM-200-ZFC-CRCY-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM200.NI0YM-200-ZFC-CRCY-CD != "99"
     && NI0YM200.NI0YM-200-ZFC-CRCY-CD > "  ")
      /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM200.NI0YM-200-ZFC-CRCY-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate customer/company*/
   /* **************************************/
  if (NI0YM200.NI0YM-200-CU-CO-ID == 0)
       /* next sentence*/
  else
    KUCREC.KUCCOID = NI0YM-200-CU-CO-ID;
    NI0YS-SELECT-CUST(); /* read customer*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (KUCREC.XAUCD == "31"
       || KUCREC.XAUCD == "32"
       || KUCREC.XAUCD == "33")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM200.NI0YM-200-CU-CO-ID cursor, bold; /* highlight*/
        converseLib.validationFailed(271); /* not a NIL customer*/
      end
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM200.NI0YM-200-CU-CO-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(271); /* not a NIL customer*/
    end
  end
  ;
   /* **************************************/
   /* Validate account region code*/
   /* **************************************/
  if (NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD != "99"
     && NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD > "  "
     && NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD in ZARTBL.ZARCD
     && ZARTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate summary source code value*/
   /* **************************************/
  if (NI0YM200.NI0YM-200-XXX-SUM-XOB-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM200.NI0YM-200-XXX-SUM-XOB-CD in XOBTBL.XOBCD
     && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      YSMREC.YSMTBLPF = "XOB"; /* table prefix*/
      YSMREC.YSMSYSPF = "NL"; /* system prefix*/
      YSMREC.YSMSUMID = 2; /* system prefix*/
      YSMREC.YSMSRCVL = NI0YM200.NI0YM-200-XXX-SUM-XOB-CD;
      NI0YS-SELECT-XOB(); /* read sum xob code*/
      if (SQLCA.VAGen_SQLCODE == 0 /* row found*/
       && NI0YM200.NI0YM-200-XXX-SUM-XOB-CD == YSMREC.YSMSUMCD)
      /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM200.NI0YM-200-XXX-SUM-XOB-CD cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM200.NI0YM-200-XXX-SUM-XOB-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate general product class code*/
   /* **************************************/
  if (NI0YM200.NI0YM-200-XGP-GPC-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM200.NI0YM-200-XGP-GPC-CD > "  " /* gpc code*/
     && NI0YM200.NI0YM-200-XGP-GPC-CD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM200.NI0YM-200-XGP-GPC-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
end // end NI0Y220

// Edit pfkeys/Next Action
Function NI0Y230()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y230";
  ;
  if (NI0YW01.NI0YWPOP == "Y")
    return;
  end
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM200.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM200.CATOAP;
    COMMAREA.CAITEM = NI0YM200.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map200*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    set VNLXPY01 empty;
    NI0YS-SELECT-XPY(); /* dnilo.vnlxpy01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM200.NI0YM-200-XGP-GPC-CD = VNLXPY01.XGPCD;
      NI0YM200.NI0YM-200-XXX-SUM-XOB-CD = VNLXPY01.YSMXOB;
      NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD = VNLXPY01.ZARCD;
      NI0YM200.NI0YM-200-CU-CO-ID = VNLXPY01.KUCCOID;
      NI0YM200.NI0YM-200-ZFC-CRCY-CD = VNLXPY01.ZFCCD;
      NI0YM200.NI0YM-200-XPY-PRC-TYP-CD = VNLXPY01.XPYCD;
      NI0YM200.NI0YM-200-NL-PRC-COST-PCT = VNLXPY01.NL-PRC-COST-PCT;
      NLXREC.NLXERRF = "Y"; /* show message on map200*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM200.NI0YM-200-XPY-PRC-TYP-CD = "     ";
        NI0YM200.NI0YM-200-NL-PRC-COST-PCT = 0;
        NLXREC.NLXERRF = "Y"; /* show message on map200*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          NI0YS-SELECT-XPY(); /* dnilo.vnlxpy01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-XPY(); /* dnilo.vnlxpy01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM200.NI0YM-200-XPY-PRC-TYP-CD = "     ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM200.NI0YM-200-XPY-PRC-TYP-CD = "     ";
              NI0YM200.NI0YM-200-NL-PRC-COST-PCT = 0;
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            NI0YS-SELECT-XPY(); /* dnilo.vnlxpy01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-XPY(); /* dnilo.vnlxpy01*/
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM200.NI0YM-200-XPY-PRC-TYP-CD = "     ";
                NI0YM200.NI0YM-200-NL-PRC-COST-PCT = 0;
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              NI0YS-SELECT-XPY(); /* dnilo.vnlxpy01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-XPY(); /* dnilo.vnlxpy01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM200.NI0YM-200-XPY-PRC-TYP-CD = "     ";
                    NI0YM200.NI0YM-200-NL-PRC-COST-PCT = 0;
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
              ;
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
end // end NI0Y230

// Converse map NI0YM300
Function NI0Y300()
   /* ************************************************************/
   /* *    process screen NI0YM300                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y300";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y301(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM300 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y310(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map300*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y320(); /* Edit fields on map300*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y330(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y300.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y300

// Build screen
Function NI0Y301()
   /* **************************************/
   /* Initialize screen NI0YM300*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y301";
  ;
  set NI0YM300 empty; /* Clear screen*/
  ;
  NI0YM300.NI0YM-300-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD cursor, normal;
  set NI0YM300.NI0YM-300-XOB-BASE-OT-CD normal;
  set NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD normal;
  set NI0YM300.NI0YM-300-XGP-GPC-CD normal;
  set NI0YM300.NI0YM-300-CU-CO-ID normal;
  set NI0YM300.NI0YM-300-XPT-PTERM-CD normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] normal;
  set NI0YM300.NI0YM-300-XXX-STAT normal;
  ;
end // end NI0Y301

// Edit pfkeys
Function NI0Y310()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y310";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM300.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM300.CATOAP;
    COMMAREA.CAITEM = NI0YM300.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
     /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y310

// Edit NI0YM300 fields
Function NI0Y320()
   /* **************************************/
   /* Edit NI0YM300 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y320";
  ;
  set NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD cursor, normal;
  set NI0YM300.NI0YM-300-XOB-BASE-OT-CD normal;
  set NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD normal;
  set NI0YM300.NI0YM-300-XGP-GPC-CD normal;
  set NI0YM300.NI0YM-300-CU-CO-ID normal;
  set NI0YM300.NI0YM-300-XPT-PTERM-CD normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] normal;
  set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] normal;
  set NI0YM300.NI0YM-300-XXX-STAT normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Validate Status Code*/
   /* **************************************/
    if (NI0YM300.NI0YM-300-XXX-STAT == " "
     || NI0YM300.NI0YM-300-XXX-STAT == "A"
     || NI0YM300.NI0YM-300-XXX-STAT == "I")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-XXX-STAT cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
    ;
   /* **************************************/
   /* Validate commission fee code(s)*/
   /* **************************************/
    if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] == "  ")
    /* next sentence*/
    else
      if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] > "  "
       && NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] in ZCFTBL.ZCF-COMM-FEE-CD
      
       && ZCFTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
    ;
    if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] == "  ")
    /* next sentence*/
    else
      if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] > "  "
       && NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] in ZCFTBL.ZCF-COMM-FEE-CD
      
       && ZCFTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
    ;
    if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] == "  ")
    /* next sentence*/
    else
      if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] > "  "
       && NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] in ZCFTBL.ZCF-COMM-FEE-CD
      
       && ZCFTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
    ;
    if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    else
      if (NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] in ZCFTBL.ZCF-COMM-FEE-CD
       && ZCFTBL.XXXSTAT[sysVar.arrayIndex] == "A")
   /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
    ;
  end
  ;
   /* **************************************/
   /* Validate payment terms*/
   /* **************************************/
  if (NI0YM300.NI0YM-300-XPT-PTERM-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM300.NI0YM-300-XPT-PTERM-CD > "   "
     && NI0YM300.NI0YM-300-XPT-PTERM-CD in XPTTBL.XPTCD
     && XPTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-XPT-PTERM-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate customer/company*/
   /* **************************************/
  if (NI0YM300.NI0YM-300-CU-CO-ID == 0)
    /* next sentence*/
  else
    KUCREC.KUCCOID = NI0YM-300-CU-CO-ID;
    NI0YS-SELECT-CUST(); /* read customer*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (KUCREC.XAUCD == "31"
       || KUCREC.XAUCD == "32"
       || KUCREC.XAUCD == "33")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM300.NI0YM-300-CU-CO-ID cursor, bold; /* highlight*/
        converseLib.validationFailed(271); /* not a NIL customer*/
      end
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-CU-CO-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(271); /* not a NIL customer*/
    end
  end
  ;
   /* **************************************/
   /* Validate general product class code*/
   /* **************************************/
  if (NI0YM300.NI0YM-300-XGP-GPC-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM300.NI0YM-300-XGP-GPC-CD > "  " /* gpc code*/
     && NI0YM300.NI0YM-300-XGP-GPC-CD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-XGP-GPC-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate accounting region code*/
   /* **************************************/
  if (NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD != "99"
     && NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD > "   "
     && NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD in ZARTBL.ZARCD
     && ZARTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate base order type code*/
   /* **************************************/
  if (NI0YM300.NI0YM-300-XOB-BASE-OT-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM300.NI0YM-300-XOB-BASE-OT-CD > "   "
     && NI0YM300.NI0YM-300-XOB-BASE-OT-CD in XOBTBL.XOBCD
     && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-XOB-BASE-OT-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate account class code*/
   /* **************************************/
  if (NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD == "  ")
    NLXREC.NLXERRF = "Y";
    set NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD cursor, bold; /* highlight*/
    converseLib.validationFailed(268); /* must be filled in*/
  else
    if (NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD > "   "
     && NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD in XAUTBL.XAUCD
     && XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
  ;
end // end NI0Y320

// Edit pfkeys/Next Action
Function NI0Y330()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y330";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM300.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM300.CATOAP;
    COMMAREA.CAITEM = NI0YM300.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map300*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    set VNLZCF01 empty;
    NI0YS-SELECT-ZCF(); /* dnilo.vnlZCF01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD = VNLZCF01.XAUCD;
      NI0YM300.NI0YM-300-XOB-BASE-OT-CD = VNLZCF01.XOBCD;
      NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD = VNLZCF01.ZARCD;
      NI0YM300.NI0YM-300-XGP-GPC-CD = VNLZCF01.XGPCD;
      NI0YM300.NI0YM-300-CU-CO-ID = VNLZCF01.KUCCOID;
      NI0YM300.NI0YM-300-XPT-PTERM-CD = VNLZCF01.XPTCD;
      NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] = VNLZCF01.ZCF-COMM-FEE-CD[1];
      NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] = VNLZCF01.ZCF-COMM-FEE-CD[2];
      NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] = VNLZCF01.ZCF-COMM-FEE-CD[3];
      NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] = VNLZCF01.ZCF-COMM-FEE-CD[4];
      NI0YM300.NI0YM-300-XXX-STAT = VNLZCF01.XXXSTAT;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map300*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] = "   ";
        NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] = "   ";
        NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] = "   ";
        NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] = "   ";
        NI0YM300.NI0YM-300-XXX-STAT = "  ";
        NLXREC.NLXERRF = "Y"; /* show message on map300*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      /* MOVE '   ' TO EZEMNO;*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          NI0YS-SELECT-ZCF(); /* dnilo.vnlZCF01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-ZCF(); /* dnilo.vnlZCF01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] = "   ";
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] = "   ";
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] = "   ";
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] = "   ";
                    NI0YM300.NI0YM-300-XXX-STAT = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] = "   ";
              NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] = "   ";
              NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] = "   ";
              NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] = "   ";
              NI0YM300.NI0YM-300-XXX-STAT = "  ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            NI0YS-SELECT-ZCF(); /* dnilo.vnlZCF01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-ZCF();
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] = "   ";
                NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] = "   ";
                NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] = "   ";
                NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] = "   ";
                NI0YM300.NI0YM-300-XXX-STAT = "  ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              NI0YS-SELECT-ZCF(); /* dnilo.vnlZCF01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-ZCF(); /* dnilo.vnlZCF01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1] = "   ";
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2] = "   ";
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3] = "   ";
                    NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4] = "   ";
                    NI0YM300.NI0YM-300-XXX-STAT = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
  ;
  ;
end // end NI0Y330

// Converse map NI0YM400
Function NI0Y400()
   /* ************************************************************/
   /* *    process screen NI0YM400                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y400";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y401(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM400 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y410(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map400*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y420(); /* Edit fields on map400*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y430(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y400.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y400

// Build screen
Function NI0Y401()
   /* **************************************/
   /* Initialize screen NI0YM400*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y401";
  ;
  set NI0YM400 empty; /* Clear screen*/
  ;
  NI0YM400.NI0YM-400-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD cursor, normal;
  set NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD normal;
  set NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD normal;
  set NI0YM400.NI0YM-400-YMT-MODE-CD normal;
  set NI0YM400.NI0YM-400-CU-CO-ID normal;
  set NI0YM400.NI0YM-400-GL-ENTITY-ID normal;
  set NI0YM400.NI0YM-400-GL-RSP-CTR-ID normal;
  set NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID normal;
  set NI0YM400.NI0YM-400-GL-SUB-ACCT-ID normal;
  set NI0YM400.NI0YM-400-GL-PROJ-ID normal;
  ;
end // end NI0Y401

// Edit pfkeys
Function NI0Y410()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y410";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM400.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM400.CATOAP;
    COMMAREA.CAITEM = NI0YM400.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
     /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y410

// Edit NI0YM400 fields
Function NI0Y420()
   /* **************************************/
   /* Edit NI0YM400 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y420";
  ;
  set NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD cursor, normal;
  set NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD normal;
  set NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD normal;
  set NI0YM400.NI0YM-400-YMT-MODE-CD normal;
  set NI0YM400.NI0YM-400-CU-CO-ID normal;
  set NI0YM400.NI0YM-400-GL-ENTITY-ID normal;
  set NI0YM400.NI0YM-400-GL-RSP-CTR-ID normal;
  set NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID normal;
  set NI0YM400.NI0YM-400-GL-SUB-ACCT-ID normal;
  set NI0YM400.NI0YM-400-GL-PROJ-ID normal;
  set NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Validate GL Data*/
   /* **************************************/
    if (NI0YM400.NI0YM-400-GL-SUB-ACCT-ID == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-GL-SUB-ACCT-ID cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM400.NI0YM-400-GL-RSP-CTR-ID == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-GL-RSP-CTR-ID cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM400.NI0YM-400-GL-SUB-ACCT-ID > "   "
     && NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID > "  "
     && NI0YM400.NI0YM-400-GL-RSP-CTR-ID > "   ")
      NI0YS-CHECK-400-GL(); /* check data base*/
    end
    if (NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL == "Y"
     || NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL == "N")
       /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      converseLib.validationFailed(267);
      set NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL bold, modified, cursor;
    end
  end
  ;
   /* **************************************/
   /* Validate customer/company*/
   /* **************************************/
  if (NI0YM400.NI0YM-400-CU-CO-ID == 0)
    /* next sentence*/
  else
    KUCREC.KUCCOID = NI0YM-400-CU-CO-ID;
    NI0YS-SELECT-CUST(); /* read customer*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (KUCREC.XAUCD == "31"
       || KUCREC.XAUCD == "32"
       || KUCREC.XAUCD == "33")
      /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM400.NI0YM-400-CU-CO-ID cursor, bold; /* highlight*/
        converseLib.validationFailed(271); /* not a NIL customer*/
      end
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-CU-CO-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(271); /* not a NIL customer*/
    end
  end
  ;
   /* **************************************/
   /* Validate Trasportation Mode*/
   /* **************************************/
  if (NI0YM400.NI0YM-400-YMT-MODE-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM400.NI0YM-400-YMT-MODE-CD > "   "
     && NI0YM400.NI0YM-400-YMT-MODE-CD in YMTTBL.YMTCD
     && YMTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-YMT-MODE-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate account class code*/
   /* **************************************/
  if (NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD > "   "
     && NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD in XAUTBL.XAUCD
     && XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate accounting region code*/
   /* **************************************/
  if (NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD != "99"
     && NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD > "   "
     && NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD in ZARTBL.ZARCD
     && ZARTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate charge type*/
   /* **************************************/
  if (NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD > "  " /**/
     && NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD in ZCHTBL.ZCHCD
     && ZCHTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
  ;
end // end NI0Y420

// Edit pfkeys/Next Action
Function NI0Y430()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y430";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM400.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM400.CATOAP;
    COMMAREA.CAITEM = NI0YM400.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map400*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    NI0YS-SELECT-ZCH(); /* dnilo.vZCHGL01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD = VZCHGL01.ZCHCD;
      NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD = VZCHGL01.ZARCD;
      NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD = VZCHGL01.XAUCD;
      NI0YM400.NI0YM-400-YMT-MODE-CD = VZCHGL01.YMTCD;
      NI0YM400.NI0YM-400-CU-CO-ID = VZCHGL01.KUCCOID;
      NI0YM400.NI0YM-400-GL-ENTITY-ID = VZCHGL01.GLAENT;
      NI0YM400.NI0YM-400-GL-RSP-CTR-ID = VZCHGL01.GLARCID;
      NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID = VZCHGL01.GLANTAC;
      NI0YM400.NI0YM-400-GL-SUB-ACCT-ID = VZCHGL01.GLASUB;
      NI0YM400.NI0YM-400-GL-PROJ-ID = VZCHGL01.GLAPRJ;
      NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL = VZCHGL01.NL-GEN-LED-SUSP-FL;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map400*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM400.NI0YM-400-GL-ENTITY-ID = "  ";
        NI0YM400.NI0YM-400-GL-RSP-CTR-ID = "  ";
        NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID = "  ";
        NI0YM400.NI0YM-400-GL-SUB-ACCT-ID = "  ";
        NI0YM400.NI0YM-400-GL-PROJ-ID = "    ";
        NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL = "  ";
        NLXREC.NLXERRF = "Y"; /* show message on map400*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      /* MOVE '   ' TO EZEMNO;*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          NI0YS-SELECT-ZCH(); /* dnilo.vZCHGL01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-ZCH(); /* dnilo.VZCHGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM400.NI0YM-400-GL-ENTITY-ID = "  ";
                    NI0YM400.NI0YM-400-GL-RSP-CTR-ID = "  ";
                    NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID = "  ";
                    NI0YM400.NI0YM-400-GL-SUB-ACCT-ID = "  ";
                    NI0YM400.NI0YM-400-GL-PROJ-ID = "    ";
                    NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM400.NI0YM-400-GL-ENTITY-ID = "  ";
              NI0YM400.NI0YM-400-GL-RSP-CTR-ID = "  ";
              NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID = "  ";
              NI0YM400.NI0YM-400-GL-SUB-ACCT-ID = "  ";
              NI0YM400.NI0YM-400-GL-PROJ-ID = "    ";
              NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL = "  ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            NI0YS-SELECT-ZCH(); /* dnilo.VZCHGL01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-ZCH();
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM400.NI0YM-400-GL-ENTITY-ID = "  ";
                NI0YM400.NI0YM-400-GL-RSP-CTR-ID = "  ";
                NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID = "  ";
                NI0YM400.NI0YM-400-GL-SUB-ACCT-ID = "  ";
                NI0YM400.NI0YM-400-GL-PROJ-ID = "    ";
                NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL = "  ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              NI0YS-SELECT-ZCH(); /* dnilo.VZCHGL01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-ZCH(); /* dnilo.VZCHGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM400.NI0YM-400-GL-ENTITY-ID = "  ";
                    NI0YM400.NI0YM-400-GL-RSP-CTR-ID = "  ";
                    NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID = "  ";
                    NI0YM400.NI0YM-400-GL-SUB-ACCT-ID = "  ";
                    NI0YM400.NI0YM-400-GL-PROJ-ID = "    ";
                    NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
  ;
  ;
end // end NI0Y430

// Converse map NI0YM500
Function NI0Y500()
   /* ************************************************************/
   /* *    process screen NI0YM500                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y500";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y501(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM500 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y510(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map500*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y520(); /* Edit fields on map500*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y530(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y500.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y500

// Build screen
Function NI0Y501()
   /* **************************************/
   /* Initialize screen NI0YM500*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y501";
  ;
  set NI0YM500 empty; /* Clear screen*/
  ;
  NI0YM500.NI0YM-500-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD cursor, normal;
  set NI0YM500.NI0YM-500-CU-CO-ID normal;
  set NI0YM500.NI0YM-500-XGP-GPC-CD normal;
  set NI0YM500.NI0YM-500-XOB-BASE-OT-CD normal;
  set NI0YM500.NI0YM-500-YPY-PMT-TYP-CD normal;
  set NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD normal;
  ;
end // end NI0Y501

// Edit pfkeys
Function NI0Y510()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y510";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM500.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM500.CATOAP;
    COMMAREA.CAITEM = NI0YM500.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
     /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y510

// Edit NI0YM500 fields
Function NI0Y520()
   /* **************************************/
   /* Edit NI0YM500 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y520";
  ;
  set NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD cursor, normal;
  set NI0YM500.NI0YM-500-CU-CO-ID normal;
  set NI0YM500.NI0YM-500-XGP-GPC-CD normal;
  set NI0YM500.NI0YM-500-XOB-BASE-OT-CD normal;
  set NI0YM500.NI0YM-500-YPY-PMT-TYP-CD normal;
  set NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Validate Receivable Type Code*/
   /* **************************************/
    if (NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    else
      if (NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD != "99"
       && NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD > "   "
       && NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD in ZRTTBL.ZRTCD
       && ZRTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
  end
  ;
   /* **************************************/
   /* Validate Payment Type Code*/
   /* **************************************/
  if (NI0YM500.NI0YM-500-YPY-PMT-TYP-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM500.NI0YM-500-YPY-PMT-TYP-CD > "   "
     && NI0YM500.NI0YM-500-YPY-PMT-TYP-CD in YPYTBL.YPYCD
     && YPYTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM500.NI0YM-500-YPY-PMT-TYP-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate Base Order Type Code*/
   /* **************************************/
  if (NI0YM500.NI0YM-500-XOB-BASE-OT-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM500.NI0YM-500-XOB-BASE-OT-CD > "   "
     && NI0YM500.NI0YM-500-XOB-BASE-OT-CD in XOBTBL.XOBCD
     && XOBTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM500.NI0YM-500-XOB-BASE-OT-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate General Product Type*/
   /* **************************************/
  if (NI0YM500.NI0YM-500-XGP-GPC-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM500.NI0YM-500-XGP-GPC-CD > "   "
     && NI0YM500.NI0YM-500-XGP-GPC-CD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM500.NI0YM-500-XGP-GPC-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate customer/company*/
   /* **************************************/
  if (NI0YM500.NI0YM-500-CU-CO-ID == 0)
    /* next sentence*/
  else
    KUCREC.KUCCOID = NI0YM-500-CU-CO-ID;
    NI0YS-SELECT-CUST(); /* read customer*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (KUCREC.XAUCD == "31"
       || KUCREC.XAUCD == "32"
       || KUCREC.XAUCD == "33")
        /* next sentence*/
      else
        NLXREC.NLXERRF = "Y";
        set NI0YM500.NI0YM-500-CU-CO-ID cursor, bold; /* highlight*/
        converseLib.validationFailed(271); /* not NIL customer*/
      end
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM500.NI0YM-500-CU-CO-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(271); /* not NIL customer*/
    end
  end
  ;
   /* **************************************/
   /* Validate account class code*/
   /* **************************************/
  if (NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD == "  ")
    NLXREC.NLXERRF = "Y";
    set NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD cursor, bold; /* highlight*/
    converseLib.validationFailed(268); /* incorrect item value*/
  else
    if (NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD > "   "
     && NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD in XAUTBL.XAUCD
     && XAUTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
end // end NI0Y520

// Edit pfkeys/Next Action
Function NI0Y530()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y530";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM500.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM500.CATOAP;
    COMMAREA.CAITEM = NI0YM500.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map500*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    NI0YS-SELECT-ZRT(); /* dnilo.VZRTGL01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD = VNLZRT01.XAUCD;
      NI0YM500.NI0YM-500-CU-CO-ID = VNLZRT01.KUCCOID;
      NI0YM500.NI0YM-500-XGP-GPC-CD = VNLZRT01.XGPCD;
      NI0YM500.NI0YM-500-XOB-BASE-OT-CD = VNLZRT01.XOBCD;
      NI0YM500.NI0YM-500-YPY-PMT-TYP-CD = VNLZRT01.YPYCD;
      NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD = VNLZRT01.ZRTCD;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map500*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD = "  ";
        NLXREC.NLXERRF = "Y"; /* show message on map500*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      /* MOVE '   ' TO EZEMNO;*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          NI0YS-SELECT-ZRT(); /* dnilo.VZRTGL01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-ZRT(); /* dnilo.VZRTGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD = "  ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            NI0YS-SELECT-ZRT(); /* dnilo.VZRTGL01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-ZRT();
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD = "  ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              NI0YS-SELECT-ZRT(); /* dnilo.VZRTGL01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-ZRT(); /* dnilo.VZRTGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
  ;
  ;
end // end NI0Y530

// Converse map NI0YM600
Function NI0Y600()
   /* ************************************************************/
   /* *    process screen NI0YM600                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y600";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y601(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM600 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y610(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map600*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y620(); /* Edit fields on map600*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y630(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y600.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y600

// Build screen
Function NI0Y601()
   /* **************************************/
   /* Initialize screen NI0YM600*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y601";
  ;
  set NI0YM600 empty; /* Clear screen*/
  ;
  NI0YM600.NI0YM-600-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD cursor, normal;
  set NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD normal;
  set NI0YM600.NI0YM-600-GL-RSP-CTR-ID normal;
  set NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID normal;
  set NI0YM600.NI0YM-600-GL-SUB-ACCT-ID normal;
  set NI0YM600.NI0YM-600-GL-PROJ-ID normal;
  ;
end // end NI0Y601

// Edit pfkeys
Function NI0Y610()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y610";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM600.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM600.CATOAP;
    COMMAREA.CAITEM = NI0YM600.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
     /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y610

// Edit NI0YM600 fields
Function NI0Y620()
   /* **************************************/
   /* Edit NI0YM600 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y620";
  ;
  set NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD cursor, normal;
  set NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD normal;
  set NI0YM600.NI0YM-600-GL-RSP-CTR-ID normal;
  set NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID normal;
  set NI0YM600.NI0YM-600-GL-SUB-ACCT-ID normal;
  set NI0YM600.NI0YM-600-GL-PROJ-ID normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Edit and move GL data to working storage*/
   /* **************************************/
    if (NI0YM600.NI0YM-600-GL-SUB-ACCT-ID == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM600.NI0YM-600-GL-SUB-ACCT-ID cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM600.NI0YM-600-GL-RSP-CTR-ID == "    ")
      NLXREC.NLXERRF = "Y";
      set NI0YM600.NI0YM-600-GL-RSP-CTR-ID cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM600.NI0YM-600-GL-SUB-ACCT-ID > "   "
     && NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID > "   "
     && NI0YM600.NI0YM-600-GL-RSP-CTR-ID > "    ")
      NI0YS-CHECK-600-GL(); /* validate*/
    end
    ;
  end
   /* **************************************/
   /* Validate Receivable Type Code*/
   /* **************************************/
  if (NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD == "  ")
    NLXREC.NLXERRF = "Y";
    set NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD cursor, bold; /* highlight*/
    converseLib.validationFailed(268); /* must be filled in*/
  else
    if (NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD != "99"
     && NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD > "   "
     && NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD in ZRTTBL.ZRTCD
     && ZRTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate accounting region code*/
   /* **************************************/
  if (NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD != "99"
     && NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD > "   "
     && NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD in ZARTBL.ZARCD
     && ZARTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
  ;
end // end NI0Y620

// Edit pfkeys/Next Action
Function NI0Y630()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y630";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM600.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM600.CATOAP;
    COMMAREA.CAITEM = NI0YM600.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map600*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    NI0YS-SELECT-RCV(); /* dnilo.VRCVGL01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD = VRCVGL01.ZARCD;
      NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD = VRCVGL01.ZRTCD;
      NI0YM600.NI0YM-600-GL-RSP-CTR-ID = VRCVGL01.GLARCID;
      NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID = VRCVGL01.GLANTAC;
      NI0YM600.NI0YM-600-GL-SUB-ACCT-ID = VRCVGL01.GLASUB;
      NI0YM600.NI0YM-600-GL-PROJ-ID = VRCVGL01.GLAPRJ;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map600*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM600.NI0YM-600-GL-RSP-CTR-ID = "   ";
        NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID = "   ";
        NI0YM600.NI0YM-600-GL-SUB-ACCT-ID = "   ";
        NI0YM600.NI0YM-600-GL-PROJ-ID = "   ";
        NLXREC.NLXERRF = "Y"; /* show message on map600*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      /* MOVE '   ' TO EZEMNO;*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          NI0YS-SELECT-RCV(); /* dnilo.VRCVGL01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-RCV(); /* dnilo.VRCVGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM600.NI0YM-600-GL-RSP-CTR-ID = "   ";
                    NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID = "   ";
                    NI0YM600.NI0YM-600-GL-SUB-ACCT-ID = "   ";
                    NI0YM600.NI0YM-600-GL-PROJ-ID = "   ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM600.NI0YM-600-GL-RSP-CTR-ID = "   ";
              NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID = "   ";
              NI0YM600.NI0YM-600-GL-SUB-ACCT-ID = "   ";
              NI0YM600.NI0YM-600-GL-PROJ-ID = "   ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            NI0YS-SELECT-RCV(); /* dnilo.VRCVGL01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-RCV();
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM600.NI0YM-600-GL-RSP-CTR-ID = "   ";
                NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID = "   ";
                NI0YM600.NI0YM-600-GL-SUB-ACCT-ID = "   ";
                NI0YM600.NI0YM-600-GL-PROJ-ID = "   ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              NI0YS-SELECT-RCV(); /* dnilo.VRCVGL01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-RCV(); /* dnilo.VRCVGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM600.NI0YM-600-GL-RSP-CTR-ID = "   ";
                    NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID = "   ";
                    NI0YM600.NI0YM-600-GL-SUB-ACCT-ID = "   ";
                    NI0YM600.NI0YM-600-GL-PROJ-ID = "   ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
  ;
  ;
end // end NI0Y630

// Converse map NI0YM700
Function NI0Y700()
   /* ************************************************************/
   /* *    process screen NI0YM700                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y700";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y701(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM700 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y710(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map700*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y720(); /* Edit fields on map700*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y730(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y700.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y700

// Build screen
Function NI0Y701()
   /* **************************************/
   /* Initialize screen NI0YM700*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y701";
  ;
  set NI0YM700 empty; /* Clear screen*/
  ;
  NI0YM700.NI0YM-700-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD cursor, normal;
  set NI0YM700.NI0YM-700-XGP-GPC-CD normal;
  set NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD normal;
  set NI0YM700.NI0YM-700-GL-ENTITY-ID1 normal;
  set NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 normal;
  set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 normal;
  set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 normal;
  set NI0YM700.NI0YM-700-GL-PROJ-ID1 normal;
  set NI0YM700.NI0YM-700-GL-ENTITY-ID2 normal;
  set NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 normal;
  set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 normal;
  set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 normal;
  set NI0YM700.NI0YM-700-GL-PROJ-ID2 normal;
  set NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL normal;
  ;
end // end NI0Y701

// Edit pfkeys
Function NI0Y710()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y710";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM700.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM700.CATOAP;
    COMMAREA.CAITEM = NI0YM700.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y710

// Edit NI0YM700 fields
Function NI0Y720()
   /* **************************************/
   /* Edit NI0YM700 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y720";
  ;
  set NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD cursor, normal;
  set NI0YM700.NI0YM-700-XGP-GPC-CD normal;
  set NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD normal;
  set NI0YM700.NI0YM-700-GL-ENTITY-ID1 normal;
  set NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 normal;
  set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 normal;
  set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 normal;
  set NI0YM700.NI0YM-700-GL-PROJ-ID1 normal;
  set NI0YM700.NI0YM-700-GL-ENTITY-ID2 normal;
  set NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 normal;
  set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 normal;
  set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 normal;
  set NI0YM700.NI0YM-700-GL-PROJ-ID2 normal;
  set NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Move GL data to working storage*/
   /* **************************************/
    ;
   /* **************************************/
   /* Validate GL Suspense Flag*/
   /* **************************************/
    if (NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL == "  ")
     /* next sentence*/
    else
      if (NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL != "Y"
       && NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL != "N")
        NLXREC.NLXERRF = "Y";
        set NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL cursor, bold; /* highlight*/
        converseLib.validationFailed(267); /* incorrect item value*/
      end
    end
    ;
    ;
    if (NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    if (NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 == "   ")
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 cursor, bold;
      converseLib.validationFailed(268); /* must be filled in*/
    end
    ;
    if (NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 > "   "
     && NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 > "   "
     && NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 > "   "
     && NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 > "   "
     && NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 > "   "
     && NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 > "   ")
      NI0YS-CHECK-700-GL();
    end
    ;
    ;
  end
  ;
   /* **************************************/
   /* Validate Product Source Code*/
   /* **************************************/
  if (NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD != "99"
     && NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD > "   "
     && NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD in ZPSTBL.ZPSCD
     && ZPSTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate general product class*/
   /* **************************************/
  if (NI0YM700.NI0YM-700-XGP-GPC-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM700.NI0YM-700-XGP-GPC-CD > "   "
     && NI0YM700.NI0YM-700-XGP-GPC-CD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-XGP-GPC-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
   /* **************************************/
   /* Validate accounting region code*/
   /* **************************************/
  if (NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD == "  ")
    /* next sentence*/
  else
    if (NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD != "99"
     && NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD > "   "
     && NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD in ZARTBL.ZARCD
     && ZARTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    /* next sentence*/
    else
      NLXREC.NLXERRF = "Y";
      set NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD cursor, bold; /* highlight*/
      converseLib.validationFailed(267); /* incorrect item value*/
    end
  end
  ;
  ;
end // end NI0Y720

// Edit pfkeys/Next Action
Function NI0Y730()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y730";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM700.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM700.CATOAP;
    COMMAREA.CAITEM = NI0YM700.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map700*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    NI0YS-SELECT-STY(); /* dnilo.VSTYGL01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD = VSTYGL01.ZARCD;
      NI0YM700.NI0YM-700-XGP-GPC-CD = VSTYGL01.XGPCD;
      NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD = VSTYGL01.ZPSCD;
      NI0YM700.NI0YM-700-GL-ENTITY-ID1 = VSTYGL01.NIEENT1;
      NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 = VSTYGL01.NIERCID1;
      NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 = VSTYGL01.NIENTAC1;
      NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 = VSTYGL01.NIESUB1;
      NI0YM700.NI0YM-700-GL-PROJ-ID1 = VSTYGL01.NIEPRJ1;
      NI0YM700.NI0YM-700-GL-ENTITY-ID2 = VSTYGL01.NIEENT2;
      NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 = VSTYGL01.NIERCID2;
      NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 = VSTYGL01.NIENTAC2;
      NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 = VSTYGL01.NIESUB2;
      NI0YM700.NI0YM-700-GL-PROJ-ID2 = VSTYGL01.NIEPRJ2;
      NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL = VSTYGL01.NL-GEN-LED-SUSP-FL;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map700*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM700.NI0YM-700-GL-ENTITY-ID1 = "    ";
        NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 = "    ";
        NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 = "    ";
        NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 = "    ";
        NI0YM700.NI0YM-700-GL-PROJ-ID1 = "    ";
        NI0YM700.NI0YM-700-GL-ENTITY-ID2 = "    ";
        NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 = "    ";
        NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 = "    ";
        NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 = "    ";
        NI0YM700.NI0YM-700-GL-PROJ-ID2 = "    ";
        NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL = "    ";
        NLXREC.NLXERRF = "Y"; /* show message on map700*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      /* MOVE '   ' TO EZEMNO;*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* delete data base row*/
          NI0YS-SELECT-STY(); /* dnilo.VSTYGL01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-STY(); /* dnilo.VSTYGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM700.NI0YM-700-GL-ENTITY-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-PROJ-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-ENTITY-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-PROJ-ID2 = "    ";
                    NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL = "    ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM700.NI0YM-700-GL-ENTITY-ID1 = "    ";
              NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 = "    ";
              NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 = "    ";
              NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 = "    ";
              NI0YM700.NI0YM-700-GL-PROJ-ID1 = "    ";
              NI0YM700.NI0YM-700-GL-ENTITY-ID2 = "    ";
              NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 = "    ";
              NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 = "    ";
              NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 = "    ";
              NI0YM700.NI0YM-700-GL-PROJ-ID2 = "    ";
              NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL = "    ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* change data base row*/
            NI0YS-SELECT-STY(); /* dnilo.VSTYGL01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-STY();
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM700.NI0YM-700-GL-ENTITY-ID1 = "    ";
                NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 = "    ";
                NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 = "    ";
                NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 = "    ";
                NI0YM700.NI0YM-700-GL-PROJ-ID1 = "    ";
                NI0YM700.NI0YM-700-GL-ENTITY-ID2 = "    ";
                NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 = "    ";
                NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 = "    ";
                NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 = "    ";
                NI0YM700.NI0YM-700-GL-PROJ-ID2 = "    ";
                NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL = "    ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* insert data base row*/
              NI0YS-SELECT-STY(); /* dnilo.VSTYGL01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-STY(); /* dnilo.VSTYGL01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM700.NI0YM-700-GL-ENTITY-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-PROJ-ID1 = "    ";
                    NI0YM700.NI0YM-700-GL-ENTITY-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 = "    ";
                    NI0YM700.NI0YM-700-GL-PROJ-ID2 = "    ";
                    NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL = "    ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
  ;
  ;
end // end NI0Y730

// Converse map NI0YM800
Function NI0Y800()
   /* ************************************************************/
   /* *    process screen NI0YM800                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y800";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y801(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM800 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y810(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map800*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y820(); /* Edit fields on map800*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y830(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y800.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y800

// Build screen
Function NI0Y801()
   /* **************************************/
   /* Initialize screen NI0YM800*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y801";
  ;
  set NI0YM800 empty; /* Clear screen*/
  ;
  NI0YM800.NI0YM-800-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM800.NI0YM-800-XXX-USER-ID cursor, normal;
  set NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID normal;
  set NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID normal;
  set NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID normal;
  ;
end // end NI0Y801

// Edit pfkeys
Function NI0Y810()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y810";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM800.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM800.CATOAP;
    COMMAREA.CAITEM = NI0YM800.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
     /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y810

// Edit NI0YM800 fields
Function NI0Y820()
   /* **************************************/
   /* Edit NI0YM800 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y820";
  ;
  set NI0YM800.NI0YM-800-XXX-USER-ID cursor, normal;
  set NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID normal;
  set NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID normal;
  set NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* ******************************************/
   /* Validate Cert of Origin Remote Printer Id*/
   /* ******************************************/
    if (NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    end
    ;
   /* **************************************/
   /* Validate Final Remote Printer Id*/
   /* **************************************/
    if (NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    end
    ;
   /* **************************************/
   /* Validate Draft Remote Printer Id*/
   /* **************************************/
    if (NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    end
    ;
  end
  ;
   /* **************************************/
   /* Validate User Id*/
   /* **************************************/
  if (NI0YM800.NI0YM-800-XXX-USER-ID == "  ")
    NLXREC.NLXERRF = "Y";
    set NI0YM800.NI0YM-800-XXX-USER-ID cursor, bold; /* highlight*/
    converseLib.validationFailed(268); /* must be filled in*/
  end
  ;
end // end NI0Y820

// Edit pfkeys/Next Action
Function NI0Y830()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y830";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM800.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM800.CATOAP;
    COMMAREA.CAITEM = NI0YM800.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map800*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    NI0YS-SELECT-IPR(); /* DNILO.VNLIPR01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM800.NI0YM-800-XXX-USER-ID = VNLIPR01.XXX-USER-ID;
      NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID = VNLIPR01.NI-DRFT-RMTPRTR-ID;
      NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID = VNLIPR01.NI-CRTF-RMTPRTR-ID;
      NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID = VNLIPR01.NI-FINL-RMTPRTR-ID;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map800*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID = "  ";
        NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID = "  ";
        NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID = "  ";
        NLXREC.NLXERRF = "Y"; /* show message on map800*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* Delete data base row*/
          NI0YS-SELECT-IPR(); /* DNILO.VNLIPR01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-IPR(); /* DNILO.VNLIPR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* Delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID = "  ";
                    NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID = "  ";
                    NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID = "  ";
              NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID = "  ";
              NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID = "  ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* Change data base row*/
            NI0YS-SELECT-IPR(); /* DNILO.VNLIPR01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-IPR(); /* DNILO.VNLIPR01*/
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID = "  ";
                NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID = "  ";
                NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID = "  ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* Insert data base row*/
              NI0YS-SELECT-IPR(); /* DNILO.VNLIPR01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-IPR(); /* DNILO.VNLIPR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID = "  ";
                    NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID = "  ";
                    NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
end // end NI0Y830

// Converse map NI0YM900
Function NI0Y900()
   /* ************************************************************/
   /* *    process screen NI0YM900                              **/
   /* *  note that this process is being performed in a         **/
   /* *     "while loop" from NI0Y050 until the end-of-screen   **/
   /* *     flag (nlxeosfl) is set to 'y'.                      **/
   /* ************************************************************/
  NLXREC.NLXCPROC = "NI0Y900";
  ;
  if (NLXREC.NLXERRF == "N")
    NI0Y901(); /* Perform i/o, load map fields*/
  end
  ;
   /* ***********************************************************/
  converse NI0YM900 ;
   /* ***********************************************************/
  ;
  VAGen_EZEMSG = " ";
  NLXREC.NLXERRF = "N"; /* Clear any previous error*/
  ;
  NI0Y910(); /* validate pfkeys*/
   /* **********************************************************/
   /* If no pf key errors and screen has been changed, edit...*/
   /* **********************************************************/
  if (NLXREC.NLXEOSF != "Y" /* Continue with map900*/
   && NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y920(); /* Edit fields on map900*/
  end
   /* **********************************************/
   /* Edits complete, decide what to do next...*/
   /* **********************************************/
  if (NLXREC.NLXERRF == "N") /* No PF key error detected*/
    NI0Y930(); /* Determine next action*/
  end
  ;
   /* at this point;*/
     /* if the end-of-screen flag (nlxeosfl) is 'n'*/
        /* we go back to top of process NI0Y900.*/
     /* if the end-of-screen flag (nlxeosfl) is 'y'*/
        /* we return to NI0Y050.*/
end // end NI0Y900

// Build screen
Function NI0Y901()
   /* **************************************/
   /* Initialize screen NI0YM900*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y901";
  ;
  set NI0YM900 empty; /* Clear screen*/
  ;
  NI0YM900.NI0YM-900-NI0YMRDT = VGVar.currentShortGregorianDate; /* system date*/
  ;
  set NI0YM900.NI0YM-900-XXX-USER-ID cursor, normal;
  set NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID normal;
  set NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID normal;
  ;
end // end NI0Y901

// Edit pfkeys
Function NI0Y910()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y910";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* delete data base row*/
   || converseVar.eventKey is pf6  /* update data base row*/
   || converseVar.eventKey is pf9  /* insert data base row*/
   || converseVar.eventKey is pf12 /* edit map data*/
   || converseVar.eventKey is enter) /* fetch selected row*/
   /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM900.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM900.CATOAP;
    COMMAREA.CAITEM = NI0YM900.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter /* fetch selected row*/
   || converseVar.eventKey is pf5   /* delete data base row*/
   || converseVar.eventKey is pf6   /* update data base row*/
   || converseVar.eventKey is pf9   /* insert data base row*/
   || converseVar.eventKey is pf12) /* edit map data*/
     /* next sentence*/
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
     /* MOVE '   ' TO EZEMNO;*/
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      end
    end
  end
end // end NI0Y910

// Edit NI0YM900 fields
Function NI0Y920()
   /* **************************************/
   /* Edit NI0YM900 entries*/
   /* **************************************/
  NLXREC.NLXCPROC = "NI0Y920";
  ;
  set NI0YM900.NI0YM-900-XXX-USER-ID cursor, normal;
  set NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID normal;
  set NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID normal;
  ;
  if (converseVar.eventKey is pf6
   || converseVar.eventKey is pf9
   || converseVar.eventKey is pf12)
    ;
   /* **************************************/
   /* Validate Final Remote Printer Id*/
   /* **************************************/
    if (NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    end
    ;
   /* **************************************/
   /* Validate Draft Remote Printer Id*/
   /* **************************************/
    if (NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID == "  ")
      NLXREC.NLXERRF = "Y";
      set NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID cursor, bold; /* highlight*/
      converseLib.validationFailed(268); /* must be filled in*/
    end
    ;
  end
  ;
   /* **************************************/
   /* Validate User Id*/
   /* **************************************/
  if (NI0YM900.NI0YM-900-XXX-USER-ID == "  ")
    NLXREC.NLXERRF = "Y";
    set NI0YM900.NI0YM-900-XXX-USER-ID cursor, bold; /* highlight*/
    converseLib.validationFailed(268); /* must be filled in*/
  end
  ;
end // end NI0Y920

// Edit pfkeys/Next Action
Function NI0Y930()
   /* ************************************************/
   /* Check for fastpath data, program function keys*/
   /* ************************************************/
  NLXREC.NLXCPROC = "NI0Y930";
  ;
  if (converseVar.eventKey is pf3  /* return to MAP100*/
   || converseVar.eventKey is pf4  /* return to MN0M*/
   || converseVar.eventKey is pf5  /* Delete data base row*/
   || converseVar.eventKey is pf6  /* Change data base row*/
   || converseVar.eventKey is pf9  /* Insert data base row*/
   || converseVar.eventKey is pf12 /* Edit data on map only*/
   || converseVar.eventKey is enter) /* Display selected row*/
    /* next sentence*/
  else
    NLXREC.NLXERRF = "Y";
    converseLib.validationFailed(2); /* *//* invalid pf key used*/
    return;
  end
  ;
   /* *************************/
   /* Check for fastpath data*/
   /* *************************/
  if (NI0YM900.CATOAP != " " /* if any fastpath data entered*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = NI0YM900.CATOAP;
    COMMAREA.CAITEM = NI0YM900.CAITEM;
    XPNL002();
    return;
  end
   /* ***************************************/
   /* Check for valid program function keys*/
   /* ***************************************/
  if (converseVar.eventKey is enter)
     /* fetch the row for viewing on map900*/
    if (NLXREC.NLXERRF == "Y")
      return;
    end
    NI0YS-SELECT-KPR(); /* DNILO.VNLKPR01*/
    if (SQLCA.VAGen_SQLCODE == 0)
      NI0YM900.NI0YM-900-XXX-USER-ID = VNLKPR01.XXX-USER-ID;
      NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID = VNLKPR01.NK-DRFT-RMTPRTR-ID;
      NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID = VNLKPR01.NK-FINL-RMTPRTR-ID;
      ;
      NLXREC.NLXERRF = "Y"; /* show message on map900*/
      converseLib.validationFailed(265); /* row was found matching the key*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID = "  ";
        NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID = "  ";
        NLXREC.NLXERRF = "Y"; /* show message on map900*/
        converseLib.validationFailed(264); /* row not found matching the key*/
      end
    end
    ;
  else
    if (converseVar.eventKey is pf3)
      NLXREC.NLXEOSF = "Y"; /* return to map100*/
      NLXREC.NLXERRF = "N"; /* clear error message*/
      COMMAREA.CAUSERA = " ";
      return;
    else
      if (converseVar.eventKey is pf4)
        COMMAREA.CATOAP = "MN0M";
        COMMAREA.CAUSERA = " ";
        XPNL002();
        return;
      else
        if (converseVar.eventKey is pf5) /* Delete data base row*/
          NI0YS-SELECT-KPR(); /* DNILO.VNLKPR01*/
          if (SQLCA.VAGen_SQLCODE == 0)
            if (NI0YW01.NI0YW-DELETE-FLAG == "N")
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "Y";
              converseLib.validationFailed(266); /* confirm delete*/
              return;
            else
              if (NI0YW01.NI0YW-DELETE-FLAG == "Y")
                NI0YS-DELETE-KPR(); /* DNILO.VNLKPR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  NI0YW01.NI0YW-DELETE-FLAG = "N";
                  converseLib.validationFailed(260); /* Delete successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID = "  ";
                    NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    NI0YW01.NI0YW-DELETE-FLAG = "N";
                    converseLib.validationFailed(259); /* row not found for delete*/
                  end
                end
              end
            end
          else
            if (SQLCA.VAGen_SQLCODE == 100)
              NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID = "  ";
              NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID = "  ";
              NLXREC.NLXBLDSC = "Y";
              NLXREC.NLXERRF = "Y";
              NI0YW01.NI0YW-DELETE-FLAG = "N";
              converseLib.validationFailed(259); /* row not found for delete*/
            end
          end
          ;
        else
          if (converseVar.eventKey is pf6) /* Change data base row*/
            NI0YS-SELECT-KPR(); /* DNILO.VNLKPR01*/
            if (SQLCA.VAGen_SQLCODE == 0)
              NI0YS-UPDATE-KPR(); /* DNILO.VNLKPR01*/
              if (SQLCA.VAGen_SQLCODE == 0)
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(262); /* Update successful*/
              end
            else
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID = "  ";
                NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID = "  ";
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(261); /* row not found for Update*/
              end
            end
            ;
          else
            if (converseVar.eventKey is pf9) /* Insert data base row*/
              NI0YS-SELECT-KPR(); /* DNILO.VNLKPR01*/
              if (SQLCA.VAGen_SQLCODE == 100)
                NI0YS-INSERT-KPR(); /* DNILO.VNLKPR01*/
                if (SQLCA.VAGen_SQLCODE == 0)
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(263); /* Insert successful*/
                else
                  if (SQLCA.VAGen_SQLCODE == 100)
                    NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID = "  ";
                    NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID = "  ";
                    NLXREC.NLXBLDSC = "Y";
                    NLXREC.NLXERRF = "Y";
                    converseLib.validationFailed(264); /* row not found for Insert*/
                  end
                end
              else
                NLXREC.NLXBLDSC = "Y";
                NLXREC.NLXERRF = "Y";
                converseLib.validationFailed(270); /* row already on data base*/
              end
            else
              if (converseVar.eventKey is pf12) /* Edit only of map data*/
                if (NLXREC.NLXERRF != "Y")
                  NLXREC.NLXBLDSC = "Y";
                  NLXREC.NLXERRF = "Y";
                  converseLib.validationFailed(269); /* Data passed edit check*/
                end
              end
            end
          end
        end
      end
    end
  end
  ;
end // end NI0Y930

// verify GL resp, natrl, sub
Function NI0YS-CHECK-400-GL()
  ;
  NLXREC.NLXCPROC = "NI0YS-CHECK-400-GL";
  ;
  set VNLGLA01 empty;
  ;
  VNLGLA01.GLAENT = "*";
  VNLGLA01.GLARCID = NI0YM400.NI0YM-400-GL-RSP-CTR-ID;
  VNLGLA01.GLANTAC = NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID;
  VNLGLA01.GLASUB = NI0YM400.NI0YM-400-GL-SUB-ACCT-ID;
  ;
  call "IO4610" ("S1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Declare Cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  call "IO4610" ("N1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 0) /* GL row found*/
     /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* GL row not found*/
        NLXREC.NLXERRF = "Y";
        set NI0YM400.NI0YM-400-GL-RSP-CTR-ID cursor, bold;
        set NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID bold;
        set NI0YM400.NI0YM-400-GL-SUB-ACCT-ID bold;
        converseLib.validationFailed(272); /* invalid GL code combination*/
      else
        if (SQLCA.VAGen_SQLCODE != 0
         && SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1LOCAT[2] = "N1     "; /* data base action*/
          TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
          TA1REC.TA1DBASE = "DNILO "; /* data base*/
          TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
          XPNL005(); /* abend routine*/
        end
      end
    end
  end
  ;
  call "IO4610" ("C1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Close cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "C1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
end // end NI0YS-CHECK-400-GL

// verify GL resp, natrl, sub
Function NI0YS-CHECK-600-GL()
  ;
  NLXREC.NLXCPROC = "NI0YS-CHECK-600-GL";
  ;
  set VNLGLA01 empty;
  ;
  VNLGLA01.GLAENT = "*";
  VNLGLA01.GLARCID = NI0YM600.NI0YM-600-GL-RSP-CTR-ID;
  VNLGLA01.GLANTAC = NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID;
  VNLGLA01.GLASUB = NI0YM600.NI0YM-600-GL-SUB-ACCT-ID;
  ;
  call "IO4610" ("S1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Declare Cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  call "IO4610" ("N1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 0) /* GL row found*/
     /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* GL row not found*/
        NLXREC.NLXERRF = "Y";
        set NI0YM600.NI0YM-600-GL-RSP-CTR-ID cursor, bold;
        set NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID bold;
        set NI0YM600.NI0YM-600-GL-SUB-ACCT-ID bold;
        converseLib.validationFailed(272); /* invalid GL code combination*/
      else
        if (SQLCA.VAGen_SQLCODE != 0
         && SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1LOCAT[2] = "N1     "; /* data base action*/
          TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
          TA1REC.TA1DBASE = "DNILO "; /* data base*/
          TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
          XPNL005(); /* abend routine*/
        end
      end
    end
  end
  ;
  call "IO4610" ("C1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Close cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "C1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
end // end NI0YS-CHECK-600-GL

// verify GL resp, natrl, sub
Function NI0YS-CHECK-700-GL()
  ;
  NLXREC.NLXCPROC = "NI0YS-CHECK-700-GL";
  ;
  set VNLGLA01 empty;
  ;
  VNLGLA01.GLAENT = "*";
  VNLGLA01.GLARCID = NI0YM700.NI0YM-700-GL-RSP-CTR-ID2;
  VNLGLA01.GLANTAC = NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2;
  VNLGLA01.GLASUB = NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2;
  ;
  call "IO4610" ("S1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Declare Cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  call "IO4610" ("N1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 0) /* GL row found*/
     /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* GL row not found*/
        NLXREC.NLXERRF = "Y";
        set NI0YM700.NI0YM-700-GL-RSP-CTR-ID2 cursor, bold;
        set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2 bold;
        set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2 bold;
        converseLib.validationFailed(272); /* invalid GL code combination*/
      else
        if (SQLCA.VAGen_SQLCODE != 0
         && SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1LOCAT[2] = "N1     "; /* data base action*/
          TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
          TA1REC.TA1DBASE = "DNILO "; /* data base*/
          TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
          XPNL005(); /* abend routine*/
        end
      end
    end
  end
  ;
  call "IO4610" ("C1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Close cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "C1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  ;
  set VNLGLA01 empty;
  ;
  VNLGLA01.GLAENT = "*";
  VNLGLA01.GLARCID = NI0YM700.NI0YM-700-GL-RSP-CTR-ID1;
  VNLGLA01.GLANTAC = NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1;
  VNLGLA01.GLASUB = NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1;
  ;
  call "IO4610" ("S1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Declare Cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[2] = "S1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
  call "IO4610" ("N1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 0) /* GL row found*/
     /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* GL row not found*/
        NLXREC.NLXERRF = "Y";
        set NI0YM700.NI0YM-700-GL-RSP-CTR-ID1 cursor, bold;
        set NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1 bold;
        set NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1 bold;
        converseLib.validationFailed(272); /* invalid GL code combination*/
      else
        if (SQLCA.VAGen_SQLCODE != 0
         && SQLCA.VAGen_SQLCODE != 100)
          TA1REC.TA1LOCAT[2] = "N1     "; /* data base action*/
          TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
          TA1REC.TA1DBASE = "DNILO "; /* data base*/
          TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
          XPNL005(); /* abend routine*/
        end
      end
    end
  end
  ;
  call "IO4610" ("C1", SQLCA, VNLGLA01) {isNoRefresh = yes, isExternal = yes}; /* Close cursor*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "C1     "; /* data base action*/
    TA1REC.TA1LOCAT[3] = "IO4610 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO "; /* data base*/
    TA1REC.TA1TBLVU = "VNLGLA01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
  ;
end // end NI0YS-CHECK-700-GL

// Delete VNLIPR01 row
Function NI0YS-DELETE-IPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-IPR";
  ;
  set VNLIPR01 empty;
  ;
  VNLIPR01.XXX-USER-ID = NI0YM800.NI0YM-800-XXX-USER-ID;
  ;
  call "VNLIPR01" ("D ", SQLCA, VNLIPR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLIPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLIPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-IPR

// Delete VNLKPR01 row
Function NI0YS-DELETE-KPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-KPR";
  ;
  set VNLKPR01 empty;
  ;
  VNLKPR01.XXX-USER-ID = NI0YM900.NI0YM-900-XXX-USER-ID;
  ;
  call "VNLKPR01" ("D ", SQLCA, VNLKPR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLKPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLKPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-KPR

// delete VRCVGL01 row
Function NI0YS-DELETE-RCV()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-RCV";
  ;
  VRCVGL01.ZARCD = NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD;
  VRCVGL01.ZRTCD = NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD;
  ;
  call "IO4530" ("D ", SQLCA, VRCVGL01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4530 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VRCVGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-RCV

// delete VSTYGL01 row
Function NI0YS-DELETE-STY()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-STY";
  ;
  VSTYGL01.ZARCD = NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD;
  VSTYGL01.XGPCD = NI0YM700.NI0YM-700-XGP-GPC-CD;
  VSTYGL01.ZPSCD = NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD;
  ;
  call "IO1610" ("D ", SQLCA, VSTYGL01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1610 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VSTYGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-STY

// delete VNLXPY01 row
Function NI0YS-DELETE-XPY()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-XPY";
  ;
  VNLXPY01.XGPCD = NI0YM200.NI0YM-200-XGP-GPC-CD;
  VNLXPY01.YSMXOB = NI0YM200.NI0YM-200-XXX-SUM-XOB-CD;
  VNLXPY01.ZARCD = NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD;
  VNLXPY01.KUCCOID = NI0YM200.NI0YM-200-CU-CO-ID;
  VNLXPY01.ZFCCD = NI0YM200.NI0YM-200-ZFC-CRCY-CD;
  ;
  call "IO4500" ("D ", SQLCA, VNLXPY01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4500 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLXPY01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-XPY

// delete VNLZCF01 row
Function NI0YS-DELETE-ZCF()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-ZCF";
  ;
  VNLZCF01.XAUCD = NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD;
  VNLZCF01.XOBCD = NI0YM300.NI0YM-300-XOB-BASE-OT-CD;
  VNLZCF01.ZARCD = NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD;
  VNLZCF01.XGPCD = NI0YM300.NI0YM-300-XGP-GPC-CD;
  VNLZCF01.KUCCOID = NI0YM300.NI0YM-300-CU-CO-ID;
  VNLZCF01.XPTCD = NI0YM300.NI0YM-300-XPT-PTERM-CD;
  ;
  call "IO1590" ("D ", SQLCA, VNLZCF01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1590 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCF01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-ZCF

// delete VNLZCH01 row
Function NI0YS-DELETE-ZCH()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-ZCH";
  ;
  VZCHGL01.ZCHCD = NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD;
  VZCHGL01.ZARCD = NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD;
  VZCHGL01.XAUCD = NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD;
  VZCHGL01.YMTCD = NI0YM400.NI0YM-400-YMT-MODE-CD;
  VZCHGL01.KUCCOID = NI0YM400.NI0YM-400-CU-CO-ID;
  ;
  call "IO4540" ("D ", SQLCA, VZCHGL01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4540 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCH01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-ZCH

// delete VNLZRT01 row
Function NI0YS-DELETE-ZRT()
  ;
  NLXREC.NLXCPROC = "NI0YS-DELETE-ZRT";
  ;
  VNLZRT01.XAUCD = NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD;
  VNLZRT01.KUCCOID = NI0YM500.NI0YM-500-CU-CO-ID;
  VNLZRT01.XGPCD = NI0YM500.NI0YM-500-XGP-GPC-CD;
  VNLZRT01.XOBCD = NI0YM500.NI0YM-500-XOB-BASE-OT-CD;
  VNLZRT01.YPYCD = NI0YM500.NI0YM-500-YPY-PMT-TYP-CD;
  ;
  call "IO1600" ("D ", SQLCA, VNLZRT01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "D      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1600 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZRT01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-DELETE-ZRT

// Insert VNLIPR01 row
Function NI0YS-INSERT-IPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-IPR";
  ;
  set VNLIPR01 empty;
  ;
  VNLIPR01.XXX-USER-ID = NI0YM800.NI0YM-800-XXX-USER-ID;
  VNLIPR01.NI-DRFT-RMTPRTR-ID = NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID;
  VNLIPR01.NI-CRTF-RMTPRTR-ID = NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID;
  VNLIPR01.NI-FINL-RMTPRTR-ID = NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLIPR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNLIPR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLIPR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VNLIPR01.ZZZCHGCT = 0;
  ;
  call "VNLIPR01" ("A ", SQLCA, VNLIPR01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLIPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLIPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-IPR

// Insert VNLKPR01 row
Function NI0YS-INSERT-KPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-KPR";
  ;
  set VNLKPR01 empty;
  ;
  VNLKPR01.XXX-USER-ID = NI0YM900.NI0YM-900-XXX-USER-ID;
  VNLKPR01.NK-DRFT-RMTPRTR-ID = NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID;
  VNLKPR01.NK-FINL-RMTPRTR-ID = NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLKPR01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNLKPR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLKPR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VNLKPR01.ZZZCHGCT = 0;
  ;
  call "VNLKPR01" ("A ", SQLCA, VNLKPR01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLKPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLKPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-KPR

// insert VRCVGL01 row
Function NI0YS-INSERT-RCV()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-RCV";
  ;
  VRCVGL01.ZARCD = NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD;
  VRCVGL01.ZRTCD = NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD;
  VRCVGL01.GLARCID = NI0YM600.NI0YM-600-GL-RSP-CTR-ID;
  VRCVGL01.GLANTAC = NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID;
  VRCVGL01.GLASUB = NI0YM600.NI0YM-600-GL-SUB-ACCT-ID;
  VRCVGL01.GLAPRJ = NI0YM600.NI0YM-600-GL-PROJ-ID;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VRCVGL01.ZZZSDT = XX0XW01.XX0XWDAT;
  VRCVGL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VRCVGL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VRCVGL01.ZZZCHGCT = 0;
  ;
  call "IO4530" ("A ", SQLCA, VRCVGL01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4530 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VRCVGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-RCV

// insert VSTYGL01 row
Function NI0YS-INSERT-STY()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-STY";
  ;
  VSTYGL01.ZARCD = NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD;
  VSTYGL01.XGPCD = NI0YM700.NI0YM-700-XGP-GPC-CD;
  VSTYGL01.ZPSCD = NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD;
  VSTYGL01.NIEENT1 = NI0YM700.NI0YM-700-GL-ENTITY-ID1;
  VSTYGL01.NIERCID1 = NI0YM700.NI0YM-700-GL-RSP-CTR-ID1;
  VSTYGL01.NIENTAC1 = NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1;
  VSTYGL01.NIESUB1 = NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1;
  VSTYGL01.NIEPRJ1 = NI0YM700.NI0YM-700-GL-PROJ-ID2;
  VSTYGL01.NIEENT2 = NI0YM700.NI0YM-700-GL-ENTITY-ID2;
  VSTYGL01.NIERCID2 = NI0YM700.NI0YM-700-GL-RSP-CTR-ID2;
  VSTYGL01.NIENTAC2 = NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2;
  VSTYGL01.NIESUB2 = NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2;
  VSTYGL01.NIEPRJ2 = NI0YM700.NI0YM-700-GL-PROJ-ID2;
  VSTYGL01.NL-GEN-LED-SUSP-FL = NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VSTYGL01.ZZZSDT = XX0XW01.XX0XWDAT;
  VSTYGL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VSTYGL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VSTYGL01.ZZZCHGCT = 0;
  ;
  call "IO1610" ("A ", SQLCA, VSTYGL01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1610 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VSTYGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-STY

// insert VNLXPY01 row
Function NI0YS-INSERT-XPY()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-XPY";
  ;
  VNLXPY01.XGPCD = NI0YM200.NI0YM-200-XGP-GPC-CD;
  VNLXPY01.YSMXOB = NI0YM200.NI0YM-200-XXX-SUM-XOB-CD;
  VNLXPY01.ZARCD = NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD;
  VNLXPY01.KUCCOID = NI0YM200.NI0YM-200-CU-CO-ID;
  VNLXPY01.ZFCCD = NI0YM200.NI0YM-200-ZFC-CRCY-CD;
  VNLXPY01.XPYCD = NI0YM200.NI0YM-200-XPY-PRC-TYP-CD;
  VNLXPY01.NL-PRC-COST-PCT = NI0YM200.NI0YM-200-NL-PRC-COST-PCT;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLXPY01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNLXPY01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLXPY01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VNLXPY01.ZZZCHGCT = 0;
  ;
  call "IO4500" ("A ", SQLCA, VNLXPY01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4500 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLXPY01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-XPY

// insert VNLZCF01 row
Function NI0YS-INSERT-ZCF()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-ZCF";
  ;
  VNLZCF01.XAUCD = NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD;
  VNLZCF01.XOBCD = NI0YM300.NI0YM-300-XOB-BASE-OT-CD;
  VNLZCF01.ZARCD = NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD;
  VNLZCF01.XGPCD = NI0YM300.NI0YM-300-XGP-GPC-CD;
  VNLZCF01.KUCCOID = NI0YM300.NI0YM-300-CU-CO-ID;
  VNLZCF01.XPTCD = NI0YM300.NI0YM-300-XPT-PTERM-CD;
  VNLZCF01.ZCF-COMM-FEE-CD[1] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1];
  VNLZCF01.ZCF-COMM-FEE-CD[2] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2];
  VNLZCF01.ZCF-COMM-FEE-CD[3] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3];
  VNLZCF01.ZCF-COMM-FEE-CD[4] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4];
  VNLZCF01.XXXSTAT = NI0YM300.NI0YM-300-XXX-STAT;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLZCF01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNLZCF01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLZCF01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VNLZCF01.ZZZCHGCT = 0;
  ;
  call "IO1590" ("A ", SQLCA, VNLZCF01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1590 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCF01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-ZCF

// insert VNLZCH01 row
Function NI0YS-INSERT-ZCH()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-ZCH";
  ;
  VZCHGL01.ZCHCD = NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD;
  VZCHGL01.ZARCD = NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD;
  VZCHGL01.XAUCD = NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD;
  VZCHGL01.YMTCD = NI0YM400.NI0YM-400-YMT-MODE-CD;
  VZCHGL01.KUCCOID = NI0YM400.NI0YM-400-CU-CO-ID;
  VZCHGL01.GLAENT = NI0YM400.NI0YM-400-GL-ENTITY-ID;
  VZCHGL01.GLARCID = NI0YM400.NI0YM-400-GL-RSP-CTR-ID;
  VZCHGL01.GLANTAC = NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID;
  VZCHGL01.GLASUB = NI0YM400.NI0YM-400-GL-SUB-ACCT-ID;
  VZCHGL01.GLAPRJ = NI0YM400.NI0YM-400-GL-PROJ-ID;
  VZCHGL01.NL-GEN-LED-SUSP-FL = NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VZCHGL01.ZZZSDT = XX0XW01.XX0XWDAT;
  VZCHGL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VZCHGL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VZCHGL01.ZZZCHGCT = 0;
  ;
  call "IO4540" ("A ", SQLCA, VZCHGL01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4540 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCH01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-ZCH

// insert VNLZRT01 row
Function NI0YS-INSERT-ZRT()
  ;
  NLXREC.NLXCPROC = "NI0YS-INSERT-ZRT";
  ;
  VNLZRT01.XAUCD = NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD;
  VNLZRT01.KUCCOID = NI0YM500.NI0YM-500-CU-CO-ID;
  VNLZRT01.XGPCD = NI0YM500.NI0YM-500-XGP-GPC-CD;
  VNLZRT01.XOBCD = NI0YM500.NI0YM-500-XOB-BASE-OT-CD;
  VNLZRT01.YPYCD = NI0YM500.NI0YM-500-YPY-PMT-TYP-CD;
  VNLZRT01.ZRTCD = NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLZRT01.ZZZSDT = XX0XW01.XX0XWDAT;
  VNLZRT01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLZRT01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VNLZRT01.ZZZCHGCT = 0;
  ;
  call "IO1600" ("A ", SQLCA, VNLZRT01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "A      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1600 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZRT01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-INSERT-ZRT

// Select Unique - KUCREC
Function NI0YS-SELECT-CUST()
   /* ************************/
   /* KUCREC - Select Unique*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0YS05";
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes}; /* Read Customer*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO0240 "; /* io module*/
    TA1REC.TA1DBASE = "DNILO"; /* database*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0YS-SELECT-CUST

// Select Unique VNLIPR01 row
Function NI0YS-SELECT-IPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-IPR";
  ;
  set VNLIPR01 empty;
  ;
  VNLIPR01.XXX-USER-ID = NI0YM800.NI0YM-800-XXX-USER-ID;
  ;
  call "VNLIPR01" ("S ", SQLCA, VNLIPR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLIPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLIPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-IPR

// Select Unique VNLKPR01 row
Function NI0YS-SELECT-KPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-KPR";
  ;
  set VNLKPR01 empty;
  ;
  VNLKPR01.XXX-USER-ID = NI0YM900.NI0YM-900-XXX-USER-ID;
  ;
  call "VNLKPR01" ("S ", SQLCA, VNLKPR01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLKPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLKPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-KPR

// delete VRCVGL01 row
Function NI0YS-SELECT-RCV()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-RCV";
  ;
  VRCVGL01.ZARCD = NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD;
  VRCVGL01.ZRTCD = NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD;
  ;
  call "IO4530" ("S ", SQLCA, VRCVGL01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4530 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VRCVGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-RCV

// delete VSTYGL01 row
Function NI0YS-SELECT-STY()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-STY";
  ;
  VSTYGL01.ZARCD = NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD;
  VSTYGL01.XGPCD = NI0YM700.NI0YM-700-XGP-GPC-CD;
  VSTYGL01.ZPSCD = NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD;
  ;
  call "IO1610" ("S ", SQLCA, VSTYGL01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1610 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VSTYGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-STY

// Select Unique - YSMREC
Function NI0YS-SELECT-XOB()
   /* ************************/
   /* YSMREC - Select Unique*/
   /* ************************/
  ;
  NLXREC.NLXCPROC = "NI0YS10";
  ;
  call "IO2640" ("S ", SQLCA, YSMREC) {isNoRefresh = yes, isExternal = yes}; /* Read Sum Table*/
  ;
  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100)
    TA1REC.TA1LOCAT[2] = "S      "; /* database action*/
    TA1REC.TA1LOCAT[3] = "IO2640 "; /* io module*/
    TA1REC.TA1DBASE = "DCORP"; /* database*/
    TA1REC.TA1TBLVU = "VSUMCD01"; /* table view*/
    XPNL005(); /* abend routine*/
  end
end // end NI0YS-SELECT-XOB

// select VNLXPY01 row
Function NI0YS-SELECT-XPY()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-XPY";
  ;
  VNLXPY01.XGPCD = NI0YM200.NI0YM-200-XGP-GPC-CD;
  VNLXPY01.YSMXOB = NI0YM200.NI0YM-200-XXX-SUM-XOB-CD;
  VNLXPY01.ZARCD = NI0YM200.NI0YM-200-ZAR-ACCT-REG-CD;
  VNLXPY01.KUCCOID = NI0YM200.NI0YM-200-CU-CO-ID;
  VNLXPY01.ZFCCD = NI0YM200.NI0YM-200-ZFC-CRCY-CD;
  ;
  call "IO4500" ("S ", SQLCA, VNLXPY01) {isNoRefresh = yes, isExternal = yes}; /* Insert*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4500 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLXPY01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-XPY

// delete VNLZCF01 row
Function NI0YS-SELECT-ZCF()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-ZCF";
  ;
  VNLZCF01.XAUCD = NI0YM300.NI0YM-300-XAU-ACCT-CLS-CD;
  VNLZCF01.XOBCD = NI0YM300.NI0YM-300-XOB-BASE-OT-CD;
  VNLZCF01.ZARCD = NI0YM300.NI0YM-300-ZAR-ACCT-REG-CD;
  VNLZCF01.XGPCD = NI0YM300.NI0YM-300-XGP-GPC-CD;
  VNLZCF01.KUCCOID = NI0YM300.NI0YM-300-CU-CO-ID;
  VNLZCF01.XPTCD = NI0YM300.NI0YM-300-XPT-PTERM-CD;
  ;
  call "IO1590" ("S ", SQLCA, VNLZCF01) {isNoRefresh = yes, isExternal = yes}; /* Select*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1590 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCF01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-ZCF

// delete VNLZCH01 row
Function NI0YS-SELECT-ZCH()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-ZCH";
  ;
  VZCHGL01.ZCHCD = NI0YM400.NI0YM-400-ZCH-CHG-TYP-CD;
  VZCHGL01.ZARCD = NI0YM400.NI0YM-400-ZAR-ACCT-REG-CD;
  VZCHGL01.XAUCD = NI0YM400.NI0YM-400-XAU-ACCT-CLS-CD;
  VZCHGL01.YMTCD = NI0YM400.NI0YM-400-YMT-MODE-CD;
  VZCHGL01.KUCCOID = NI0YM400.NI0YM-400-CU-CO-ID;
  ;
  call "IO4540" ("S ", SQLCA, VZCHGL01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4540 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCH01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-ZCH

// delete VNLZRT01 row
Function NI0YS-SELECT-ZRT()
  ;
  NLXREC.NLXCPROC = "NI0YS-SELECT-ZRT";
  ;
  VNLZRT01.XAUCD = NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD;
  VNLZRT01.KUCCOID = NI0YM500.NI0YM-500-CU-CO-ID;
  VNLZRT01.XGPCD = NI0YM500.NI0YM-500-XGP-GPC-CD;
  VNLZRT01.XOBCD = NI0YM500.NI0YM-500-XOB-BASE-OT-CD;
  VNLZRT01.YPYCD = NI0YM500.NI0YM-500-YPY-PMT-TYP-CD;
  ;
  call "IO1600" ("S ", SQLCA, VNLZRT01) {isNoRefresh = yes, isExternal = yes}; /* Delete*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "S      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1600 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZRT01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-SELECT-ZRT

// Update VNLIPR01 row
Function NI0YS-UPDATE-IPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-IPR";
  ;
  VNLIPR01.XXX-USER-ID = NI0YM800.NI0YM-800-XXX-USER-ID;
  VNLIPR01.NI-DRFT-RMTPRTR-ID = NI0YM800.NI0YM-800-NI-DRFT-RMTPRTR-ID;
  VNLIPR01.NI-CRTF-RMTPRTR-ID = NI0YM800.NI0YM-800-NI-CRTF-RMTPRTR-ID;
  VNLIPR01.NI-FINL-RMTPRTR-ID = NI0YM800.NI0YM-800-NI-FINL-RMTPRTR-ID;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLIPR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLIPR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "VNLIPR01" ("U ", SQLCA, VNLIPR01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLIPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLIPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-IPR

// Update VNLKPR01 row
Function NI0YS-UPDATE-KPR()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-KPR";
  ;
  VNLKPR01.XXX-USER-ID = NI0YM900.NI0YM-900-XXX-USER-ID;
  VNLKPR01.NK-DRFT-RMTPRTR-ID = NI0YM900.NI0YM-900-NK-DRFT-RMTPRTR-ID;
  VNLKPR01.NK-FINL-RMTPRTR-ID = NI0YM900.NI0YM-900-NK-FINL-RMTPRTR-ID;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLKPR01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLKPR01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "VNLKPR01" ("U ", SQLCA, VNLKPR01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "VNLKPR01"; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLKPR01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-KPR

// update VRCVGL01 row
Function NI0YS-UPDATE-RCV()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-RCV";
  ;
  VRCVGL01.ZARCD = NI0YM600.NI0YM-600-ZAR-ACCT-REG-CD;
  VRCVGL01.ZRTCD = NI0YM600.NI0YM-600-ZRT-RCV-TYP-CD;
  VRCVGL01.GLARCID = NI0YM600.NI0YM-600-GL-RSP-CTR-ID;
  VRCVGL01.GLANTAC = NI0YM600.NI0YM-600-GL-NATRL-ACCT-ID;
  VRCVGL01.GLASUB = NI0YM600.NI0YM-600-GL-SUB-ACCT-ID;
  VRCVGL01.GLAPRJ = NI0YM600.NI0YM-600-GL-PROJ-ID;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VRCVGL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VRCVGL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO4530" ("U ", SQLCA, VRCVGL01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4530 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VRCVGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-RCV

// update VSTYGL01 row
Function NI0YS-UPDATE-STY()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-STY";
  ;
  VSTYGL01.ZARCD = NI0YM700.NI0YM-700-ZAR-ACCT-REG-CD;
  VSTYGL01.XGPCD = NI0YM700.NI0YM-700-XGP-GPC-CD;
  VSTYGL01.ZPSCD = NI0YM700.NI0YM-700-ZPS-PROD-SRC-CD;
  VSTYGL01.NIEENT1 = NI0YM700.NI0YM-700-GL-ENTITY-ID1;
  VSTYGL01.NIERCID1 = NI0YM700.NI0YM-700-GL-RSP-CTR-ID1;
  VSTYGL01.NIENTAC1 = NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID1;
  VSTYGL01.NIESUB1 = NI0YM700.NI0YM-700-GL-SUB-ACCT-ID1;
  VSTYGL01.NIEPRJ1 = NI0YM700.NI0YM-700-GL-PROJ-ID1;
  VSTYGL01.NIEENT2 = NI0YM700.NI0YM-700-GL-ENTITY-ID2;
  VSTYGL01.NIERCID2 = NI0YM700.NI0YM-700-GL-RSP-CTR-ID2;
  VSTYGL01.NIENTAC2 = NI0YM700.NI0YM-700-GL-NATRL-ACCT-ID2;
  VSTYGL01.NIESUB2 = NI0YM700.NI0YM-700-GL-SUB-ACCT-ID2;
  VSTYGL01.NIEPRJ2 = NI0YM700.NI0YM-700-GL-PROJ-ID1;
  VSTYGL01.NL-GEN-LED-SUSP-FL = NI0YM700.NI0YM-700-NL-GEN-LED-SUSP-FL;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VSTYGL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VSTYGL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO1610" ("U ", SQLCA, VSTYGL01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1610 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VSTYGL01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-STY

// update VNLXPY01 row
Function NI0YS-UPDATE-XPY()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-XPY";
  ;
  VNLXPY01.XPYCD = NI0YM200.NI0YM-200-XPY-PRC-TYP-CD;
  VNLXPY01.NL-PRC-COST-PCT = NI0YM200.NI0YM-200-NL-PRC-COST-PCT;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLXPY01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLXPY01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO4500" ("U ", SQLCA, VNLXPY01) {isNoRefresh = yes, isExternal = yes}; /* Update*/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4500 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLXPY01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-XPY

// update VNLZCF01 row
Function NI0YS-UPDATE-ZCF()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-ZCF";
  ;
  VNLZCF01.ZCF-COMM-FEE-CD[1] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[1];
  VNLZCF01.ZCF-COMM-FEE-CD[2] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[2];
  VNLZCF01.ZCF-COMM-FEE-CD[3] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[3];
  VNLZCF01.ZCF-COMM-FEE-CD[4] = NI0YM300.NI0YM-300-ZCF-COMM-FEE-CD[4];
  VNLZCF01.XXXSTAT = NI0YM300.NI0YM-300-XXX-STAT;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLZCF01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLZCF01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO1590" ("U ", SQLCA, VNLZCF01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1590 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCF01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-ZCF

// update VNLZCH01 row
Function NI0YS-UPDATE-ZCH()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-ZCH";
  ;
  VZCHGL01.GLAENT = NI0YM400.NI0YM-400-GL-ENTITY-ID;
  VZCHGL01.GLARCID = NI0YM400.NI0YM-400-GL-RSP-CTR-ID;
  VZCHGL01.GLANTAC = NI0YM400.NI0YM-400-GL-NATRL-ACCT-ID;
  VZCHGL01.GLASUB = NI0YM400.NI0YM-400-GL-SUB-ACCT-ID;
  VZCHGL01.GLAPRJ = NI0YM400.NI0YM-400-GL-PROJ-ID;
  VZCHGL01.NL-GEN-LED-SUSP-FL = NI0YM400.NI0YM-400-NL-GEN-LED-SUSP-FL;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VZCHGL01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VZCHGL01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO4540" ("U ", SQLCA, VZCHGL01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO4540 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZCH01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-ZCH

// update VNLZRT01 row
Function NI0YS-UPDATE-ZRT()
  ;
  NLXREC.NLXCPROC = "NI0YS-UPDATE-ZRT";
  ;
  VNLZRT01.XAUCD = NI0YM500.NI0YM-500-XAU-ACCT-CLS-CD;
  VNLZRT01.KUCCOID = NI0YM500.NI0YM-500-CU-CO-ID;
  VNLZRT01.XGPCD = NI0YM500.NI0YM-500-XGP-GPC-CD;
  VNLZRT01.XOBCD = NI0YM500.NI0YM-500-XOB-BASE-OT-CD;
  VNLZRT01.YPYCD = NI0YM500.NI0YM-500-YPY-PMT-TYP-CD;
  VNLZRT01.ZRTCD = NI0YM500.NI0YM-500-ZRT-RCV-TYP-CD;
  ;
  XX0XS01(); /* get current system time and date*/
  ;
  VNLZRT01.ZZZCHGDT = XX0XW01.XX0XWDAT;
  VNLZRT01.ZZZCHGTM = XX0XW01.XX0XWTIM;
  ;
  call "IO1600" ("U ", SQLCA, VNLZRT01) {isNoRefresh = yes, isExternal = yes}; /**/
  ;
  if (SQLCA.VAGen_SQLCODE == -911)
    converseLib.validationFailed(4); /* data base busy*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    return;
  else
    if (SQLCA.VAGen_SQLCODE != 0
     && SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1LOCAT[2] = "U      "; /* data base action*/
      TA1REC.TA1LOCAT[3] = "IO1600 "; /* io module*/
      TA1REC.TA1DBASE = "DNILO "; /* data base*/
      TA1REC.TA1TBLVU = "VNLZRT01"; /* table view*/
      XPNL005(); /* abend routine*/
    end
  end
  ;
end // end NI0YS-UPDATE-ZRT

//*** RECORD=NI0YW01 ****
// This is the main working storage record for NI0Y.
// ***********************
Record NI0YW01 type basicRecord
  5 NI0YWSMS NI0YWSMS ; 
  5 NI0YWUCF NI0YWUCF ; 
  5 NI0YWERF NI0YWERF ; 
  5 NI0YWMGF NI0YWMGF ; 
  5 NI0YWONE NI0YWONE ; 
  5 NI0YWCKE NI0YWCKE ; 
  5 NI0YWPOP NI0YWPOP ; 
  5 NI0YW-TBL-CTR1 NI0YW-TBL-CTR1 ; 
  5 NI0YW-MAP-CTR1 NI0YW-MAP-CTR1 ; 
  5 NI0YW-DELETE-FLAG NI0YW-DELETE-FLAG ; 
  5 NI0YW-GL-ENTITY-ID1 NI0YW-GL-ENTITY-ID1 ; 
    10 NI0YW-GL-ENTITY-ID1-ALPHA NI0YW-GL-ENTITY-ID1-ALPHA ; 
  5 NI0YW-GL-RSP-CTR-ID1 NI0YW-GL-RSP-CTR-ID1 ; 
    10 NI0YW-GL-RSP-CTR-ID1-ALPHA NI0YW-GL-RSP-CTR-ID1-ALPHA ; 
  5 NI0YW-GL-NATRL-ACCT-ID1 NI0YW-GL-NATRL-ACCT-ID1 ; 
    10 NI0YW-GL-NATRL-ACCT-ID1-ALPHA NI0YW-GL-NATRL-ACCT-ID1-ALPHA ; 
  5 NI0YW-GL-SUB-ACCT-ID1 NI0YW-GL-SUB-ACCT-ID1 ; 
    10 NI0YW-GL-SUB-ACCT-ID1-ALPHA NI0YW-GL-SUB-ACCT-ID1-ALPHA ; 
  5 NI0YW-GL-ENTITY-ID2 NI0YW-GL-ENTITY-ID2 ; 
    10 NI0YW-GL-ENTITY-ID2-ALPHA NI0YW-GL-ENTITY-ID2-ALPHA ; 
  5 NI0YW-GL-RSP-CTR-ID2 NI0YW-GL-RSP-CTR-ID2 ; 
    10 NI0YW-GL-RSP-CTR-ID2-ALPHA NI0YW-GL-RSP-CTR-ID2-ALPHA ; 
  5 NI0YW-GL-NATRL-ACCT-ID2 NI0YW-GL-NATRL-ACCT-ID2 ; 
    10 NI0YW-GL-NATRL-ACCT-ID2-ALPHA NI0YW-GL-NATRL-ACCT-ID2-ALPHA ; 
  5 NI0YW-GL-SUB-ACCT-ID2 NI0YW-GL-SUB-ACCT-ID2 ; 
    10 NI0YW-GL-SUB-ACCT-ID2-ALPHA NI0YW-GL-SUB-ACCT-ID2-ALPHA ; 
end // end NI0YW01

//*** RECORD=VNLZCF01 ****
// **************** NIL CHARGE DETERMINATION ******************
// 
// DB2 Table:        DNILO.VNLZCF01
// 
// Copylib Member:   DCL00769
// 
// I/O Mod:
// 
// Key to DB2 Table: XAUCD
//                   XOBCD
//                   ZARCD
//                   KUC
//                   XPTCD
// 
// Date Created:     04/09/92
// 
// Maintenance Log:
// 
//   Date     User   Comment
// --------  ------  --------------------------------------
// 04/09/94  JSHANN  Initial record creation
// ************************
Record VNLZCF01 type basicRecord
  10 XAUCD XAUCD ; 
  10 XOBCD XOBCD ; 
  10 ZARCD ZARCD ; 
  10 XGPCD XGPCD ; 
  10 KUCCOID KUCCOID ; 
  10 XPTCD XPTCD ; 
  10 ZCF-COMM-FEE-CD ZCF-COMM-FEE-CD [4] ; 
  10 XXXSTAT XXXSTAT ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end VNLZCF01

//*** RECORD=VNLZRT01 ****
// ************* NIL RECEIVABLE TYPE DETERMINATION ***********
// 
// DB2 Table Name:      DNILO.VNLZRT01
// 
// Copybook Member:     DCL00846
// 
// I/O Mod:
// 
// Key to DB2 Table:    XAUCD
//                      KUCCOID
//                      XGPCD
//                      XOBCD
//                      YPYCD
// 
// Date Create:         04/09/92
// 
// Maintenance Log:
// 
//   Date     User   Comments
// --------  ------  ------------------------------------------
// 04/09/92  JSHANN  Initial record creation
// ************************
Record VNLZRT01 type basicRecord
  10 XAUCD XAUCD ; 
  10 KUCCOID KUCCOID ; 
  10 XGPCD XGPCD ; 
  10 XOBCD XOBCD ; 
  10 YPYCD YPYCD ; 
  10 ZRTCD ZRTCD ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end VNLZRT01

DataItem NI0YW-DELETE-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-entity-id1 numeric
DataItem NI0YW-GL-ENTITY-ID1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-entity-id1 alpha
DataItem NI0YW-GL-ENTITY-ID1-ALPHA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-entity-id2 numeric
DataItem NI0YW-GL-ENTITY-ID2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-entity-id2 alpha
DataItem NI0YW-GL-ENTITY-ID2-ALPHA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-natrl-acct-id1 numeric
DataItem NI0YW-GL-NATRL-ACCT-ID1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-natrl-acct-id1 alpha
DataItem NI0YW-GL-NATRL-ACCT-ID1-ALPHA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-natrl-acct-id2 numeric
DataItem NI0YW-GL-NATRL-ACCT-ID2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-natrl-acct-id2 alpha
DataItem NI0YW-GL-NATRL-ACCT-ID2-ALPHA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-rsp-ctr-id1 numeric
DataItem NI0YW-GL-RSP-CTR-ID1 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-rsp-ctr-id1 alpha
DataItem NI0YW-GL-RSP-CTR-ID1-ALPHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-rsp-ctr-id2 numeric
DataItem NI0YW-GL-RSP-CTR-ID2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-rsp-ctr-id2 alpha
DataItem NI0YW-GL-RSP-CTR-ID2-ALPHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-sub-acct-id1 numeric
DataItem NI0YW-GL-SUB-ACCT-ID1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-sub-acct-id1 alpha
DataItem NI0YW-GL-SUB-ACCT-ID1-ALPHA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gl-sub-acct-id2 numeric
DataItem NI0YW-GL-SUB-ACCT-ID2 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// gl-sub-acct-id2 alpha
DataItem NI0YW-GL-SUB-ACCT-ID2-ALPHA char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map fill counter
DataItem NI0YW-MAP-CTR1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table counter
DataItem NI0YW-TBL-CTR1 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nccrec display key
DataItem NI0YWCKE char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error message flag
DataItem NI0YWERF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display error flag
DataItem NI0YWMGF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time flag
DataItem NI0YWONE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem NI0YWPOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Screen Modified Switch
DataItem NI0YWSMS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update completed flag - ncarec
DataItem NI0YWUCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

