package fq0g;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fq.common.*;
import fy.common.*;
import ku.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=FQ0G ****
// This application displays the On Request Reports Menu Screen
// and all subordinate report specification screens.  The user
// may request submission of a batch job to print any of the
// report shown in the displayed list.
// 
// A menu is displayed for the user to select the reports to be
// printed.  Another available selection allows the user to
// view the available printers and change the report print
// destination.
// 
// Job control language statements are formatted and submitted
// thru the Internal Reader Transient Data Queue (INTR).  The
// job executes in batch and all output is routed to the report
// destination specified thru this application.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      02/01/91  MHUYNH  New application.
//          07/26/91  RHETRI  Added and removed edits from
//                            all screens.
//          07/29/91  RHETRI  Allow keys to carry screen to scn
//          12/05/91  RHETRI  Added several reports to JCL,
//                            Also, changes by Mike.
//          12/06/91  RHETRI  Remove '*' from several reports.
//          12/13/91  RHETRI  Fix sort parm for FQ0GM080
//          04/28/93  RHETRI  Stop FQ0GM050 Cust Ship/Def Ratio
//                            from functioning.
//          06/24/93  MHUYNH  Regen due to change to XSFQS05
//          08/09/93  MHUYNH  Table change
// y2kproj  12-08-97  oricha  y2k modifications:  regen to pick
//                            up xx0xs01 & xsfqs05 changes.
// *********************
Program FQ0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FQ00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FQ0GW00 FQ0GW00; // record
  FQ0GW20 FQ0GW20; // record
  FQ0GW98 FQ0GW98; // record
  FQ0GW99 FQ0GW99; // record
  FQ1REC FQ1REC; // record
  FQWREC FQWREC; // record
  FQZREC FQZREC; // record
  FY1REC FY1REC; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  KUNREC KUNREC; // record
  PC2REC PC2REC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XPCREC XPCREC; // record
  XPLREC XPLREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record
  YDCREC YDCREC; // record
  YDFREC YDFREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XDMTBL; // table
  use XDVTBL; // table
  use XCLTBL; // table
  use XCTTBL; // table
  use XNXTBL; // table
  use XPRTBL; // table
  use XPLTBL; // table
  use XPCTBL; // table
  use XBCTBL; // table
  use XGATBL; // table
  use ZRGTBL; // table
  use FQ0GT02; // table
  use FQ0GT2A; // table
  use FQ0GT2B; // table
  use FQ0GT2C; // table
  use FQ0GT12; // table
  use FQ0GT2D; // table
  use FQ0GT2E; // table
  use FQ0GT2F; // table
  use FQ0GT03; // table
  use FQ0GT3A; // table
  use FQ0GT3B; // table
  use FQ0GT13; // table
  use FQ0GT3C; // table
  use FQ0GT3D; // table
  use FQ0GT04; // table
  use FQ0GT14; // table
  use FQ0GT05; // table
  use FQ0GT5A; // table
  use FQ0GT5B; // table
  use FQ0GT15; // table
  use FQ0GT5C; // table
  use FQ0GT5D; // table
  use FQ0GT08; // table
  use FQ0GT18; // table
  use YDFTBL; // table
  use YDCTBL; // table
  use FQ0GM.FQ0GM020,  // forms
      FQ0GM.FQ0GM030, 
      FQ0GM.FQ0GM080, 
      FQ0GM.FQ0GM099, 
      FQ0GM.TA0PM001, 
      FQ0GM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFQ001: XPFQ001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
    set TA0PM001 initial; /* M001 input/output*/
    set FQ0GM099 initial; /* M099 input/output*/
    set FQ0GW00 empty; /* Working storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA6REC empty; /* Background job parameters*/

     /* ------------------------------------------------------------*/
     /* If style is wildcarded or missing, wildcard colr and dim.*/
     /* ------------------------------------------------------------*/
    if (FQWREC.SY1STNBR == "******" /* If style is equal to '*'*/
     || FQWREC.SY1STNBR == "      ") /* or style is missing*/

      FQWREC.SY1STNBR = "******"; /* Default style to '******'*/
      FQWREC.SY2CLRID = "***"; /* Default color to '***'*/
      FQWREC.XDMCD = "**"; /* Default dim to '**'*/
    end

     /* ------------------------------------------------------------*/
     /* If division is wildcarded or missing, default to "**".*/
     /* ------------------------------------------------------------*/
    if (FQWREC.XDVCD == " " /* If division is missing*/
     || FQWREC.XDVCD == "* ") /* or division is '* '*/
      FQWREC.XDVCD = "**"; /* Default division to '**'*/
    end

     /* ------------------------------------------------------------*/
     /* Indicate that the output destination must be obtained.*/
     /* ------------------------------------------------------------*/
    TA6REC.TA6SUBSW = "I"; /* Indicate obtain information*/

     /* ------------------------------------------------------------*/
     /* Indicate the number of selection lines on the menu.*/
     /* ------------------------------------------------------------*/
    FQ0GW00.FQ0GWIXL = 10; /* Number of selection lines.*/

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/
    goto FQ0G001; /* Converse the main process*/


    FQ0G001: FQ0G001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto FQ0G001; /* Converse the main process*/


  end // end main
end // end FQ0G

// Main process to display a map
Function FQ0G001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FQ0GW00.FQ0GWSWX != "Y") /* EXIT not requested*/

    if (FQ0GW00.FQ0GMSEL[1] == "S" /* Line 1 was selected*/
     || TA6REC.TA6SUBSW == "I")    /* or information requested*/

      FQ0G010(); /* Specify output destination*/

    end

    if (FQ0GW00.FQ0GMSEL[2] == "S") /* Line 2 was selected*/
      FQ0GW00.FQ0GWRD2 = "Y"; /* set data request switch on*/
      FQ0GW00.FQ0GWERF = "Y"; /* set error flag 'on'*/
      while (FQ0GW00.FQ0GWERF != "N")
        FQ0G020(); /* Factory Nature Defect Percent*/
      end
    end

    if (FQ0GW00.FQ0GMSEL[3] == "S") /* Line 3 was selected*/
      FQ0GW00.FQ0GWRD3 = "Y"; /* set data request switch on*/
      FQ0GW00.FQ0GWERF = "Y"; /* set error flag 'on'*/
      while (FQ0GW00.FQ0GWERF != "N")
        FQ0G030(); /* defective/production ratio*/
      end
    end

    if (FQ0GW00.FQ0GMSEL[4] == "S") /* Line 4 was selected*/
      FQ0GM099.FQ0GMSEL[4] = "*";
      converseLib.validationFailed(17);
      set FQ0GM099.FQ0GMSEL[4] cursor, bold; /* Highlight*/
      /* MOVE 'Y' TO FQ0GW00.FQ0GWRD4    ; set data request switch on*/
      /* MOVE 'Y' TO FQ0GW00.FQ0GWERF    ; set error flag 'on'*/
      /* WHILE FQ0GW00.FQ0GWERF NE 'N';*/
        /* PERFORM FQ0G040           ; Customer Defective Percent*/
      /* END ;*/
    end

    if (FQ0GW00.FQ0GMSEL[5] == "S") /* Line 5 was selected*/
      FQ0GM099.FQ0GMSEL[5] = "*";
      converseLib.validationFailed(17);
      set FQ0GM099.FQ0GMSEL[5] cursor, bold; /* Highlight*/
      /* MOVE 'Y' TO FQ0GW00.FQ0GWRD5;     /* set data request switch on*/
      /* MOVE 'Y' TO FQ0GW00.FQ0GWERF;     /* set error flag 'on'*/
      /* WHILE FQ0GW00.FQ0GWERF NE 'N';*/
       /* PERFORM FQ0G050;            /* Customer Defect/Receipt Ratio*/
      /* END;*/
    end

    if (FQ0GW00.FQ0GMSEL[6] == "S") /* Line 6 was selected*/
      FQ0GM099.FQ0GMSEL[6] = "*";
      converseLib.validationFailed(17);
      set FQ0GM099.FQ0GMSEL[6] cursor, bold; /* Highlight*/
    end

    if (FQ0GW00.FQ0GMSEL[7] == "S") /* Line 7 was selected*/
      FQ0GM099.FQ0GMSEL[7] = "*";
      converseLib.validationFailed(17);
      set FQ0GM099.FQ0GMSEL[7] cursor, bold; /* Highlight*/
    end

    if (FQ0GW00.FQ0GMSEL[8] == "S") /* Line 8 was selected*/
      FQ0GW00.FQ0GWRD8 = "Y"; /* set data request switch on*/
      FQ0GW00.FQ0GWERF = "Y"; /* set error flag 'on'*/
      while (FQ0GW00.FQ0GWERF != "N")
        FQ0G080(); /* Product Category*/
      end
    end

    if (FQ0GW00.FQ0GMSEL[9] == "S") /* Line 9 was selected*/
      FQ0GM099.FQ0GMSEL[9] = "*";
      converseLib.validationFailed(17);
      set FQ0GM099.FQ0GMSEL[9] cursor, bold; /* Highlight*/
    end

    if (FQ0GW00.FQ0GMSEL[10] == "S") /* Line 10 was selected*/
      FQ0GM099.FQ0GMSEL[10] = "*";
      converseLib.validationFailed(17);
      set FQ0GM099.FQ0GMSEL[10] cursor, bold; /* Highlight*/
    end

  end

  FQ0GW00.FQ0GWSWX = "N"; /* Reset exit requested switch*/

  FQ0G990(); /* Report Request Menu*/


end // end FQ0G001

// Specify output destination
Function FQ0G010()
   /* ------------------------------------------------------------*/
   /* Obtain and/or display the output destination for the user.*/
   /* ------------------------------------------------------------*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If successful, indicate the selected function is completed.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (TA6REC.TA6RTNCD == "0") /* Normal return*/

      if (TA6REC.TA6SUBSW == "I") /* Obtain information only*/

        TA6REC.TA6SUBSW = "N"; /* Indicate information obtained*/
      else
        FQ0GW00.FQ0GMSEL[1] = "*"; /* Indicate function completed*/

      end

      return; /* Return to previous process*/

    end

    /* ------------------------------------------------------------*/
     /* If user cancelled request, indicate function cancelled.*/
    /* ------------------------------------------------------------*/

    if (TA6REC.TA6RTNCD == "1") /* User cancelled request*/

      FQ0GW00.FQ0GMSEL[1] = "C"; /* Indicate function cancelled*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  FQWREC.XXXMODID = "010"; /* Module identification*/
  converseLib.validationFailed(1); /* Unexpected error occurred*/

  exit stack; /* Exit to display map*/


end // end FQ0G010

// Factory Nature Defect Percent
Function FQ0G020()
   /* ------------------------------------------------------------*/
   /* This is the main process used to generate the FactoryNature*/
   /* Defect Percent report.  Processing always returns to the*/
   /* top of this process and falls through subordinate processes*/
   /* until an error is found or a valid request is processed.*/
   /* Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FQ0G021(); /* Obtain the data to display*/

  FQ0G022(); /* Format and display the map*/

  FQ0G023(); /* Check attention identifier*/

  FQ0G024(); /* Reset fields to normal intensity*/

  FQ0G025(); /* Verify the data that was entered*/

  FQ0G026(); /* Process valid input request*/


end // end FQ0G020

// Obtain data to display
Function FQ0G021()
   /* ------------------------------------------------------------*/
   /* Obtain user-entered parameters, if any, to display on scren*/
   /* ------------------------------------------------------------*/
  if (FQ0GW00.FQ0GWRD2 != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* Or an error was found*/

    return;
  else
    /* ------------------------------------------------------------*/
     /* Clear the map and set switch.*/
    /* ------------------------------------------------------------*/
    set FQ0GM020 initial;
    FQ0GW00.FQ0GWRD2 = "N"; /* Data was not requested*/

    /* ------------------------------------------------------------*/
     /* Factory.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.FY1PFYCD != "    ") /* Factory code*/
      FQ0GM020.FY1FCTYC = FQWREC.FY1PFYCD;
    else
      FQ0GM020.FY1FCTYC = "****";
    end

    /* ------------------------------------------------------------*/
     /* Style, color, and dimension.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.SY1STNBR != "      ") /* Style number*/
      FQ0GM020.SY1STNBR = FQWREC.SY1STNBR;
    else
      FQ0GM020.SY1STNBR = "******";
    end

    if (FQWREC.SY2CLRID != "   ") /* Color*/
      FQ0GM020.SY2CLRID = FQWREC.SY2CLRID;
    else
      FQ0GM020.SY2CLRID = "***";
    end

    if (FQWREC.XDMCD != "  ") /* Dimension*/
      FQ0GM020.XDMCD = FQWREC.XDMCD;
    else
      FQ0GM020.XDMCD = "00";
    end

    /* ------------------------------------------------------------*/
     /* Defect category and defect range.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.YDCCD != "   ") /* Defect category*/
      FQ0GM020.YDCCD = FQWREC.YDCCD;
    else
      FQ0GM020.YDCCD = "***";
    end

    if (FQWREC.FQWBDFCT != "   ") /* Beginning defective code*/
      FQ0GM020.FQWBDFCT = FQWREC.FQWBDFCT;
    else
      FQ0GM020.FQWBDFCT = "***";
    end

    if (FQWREC.FQWEDFCT != "   ") /* Ending defective code*/
      FQ0GM020.FQWEDFCT = FQWREC.FQWEDFCT;
    else
      FQ0GM020.FQWEDFCT = "***";
    end

    /* ------------------------------------------------------------*/
     /* PO month range.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.FQ1IDBDT != 0) /* Beginning po month date*/
      FQ0GW00.FQ0GWN09 = FQWREC.FQ1IDBDT;
      FQ0GM020.FQ0GMBMT = FQ0GW00.FQ0GWYMM;
    end

    if (FQWREC.FQ1IDXDT != 0) /* Ending po month date*/
      FQ0GW00.FQ0GWN09 = FQWREC.FQ1IDXDT;
      FQ0GM020.FQ0GMEMT = FQ0GW00.FQ0GWYMM;
    end

    if (FQWREC.FQ1IDBDT == 0 /* Beginning po month date*/
     && FQWREC.FQ1IDXDT == 0) /* Ending po month date*/
      set FQZREC empty;
      FQZREC.FQZCHK24 = "N";
      FQZREC.FQZNUMYR = 3;

      XSFQS05();

      FQ0GW00.FQ0GWYMM = FQZREC.FQZBCYMM;
      FQ0GM020.FQ0GMBMT = FQ0GW00.FQ0GWYMM;

      FQ0GW00.FQ0GWYMM = FQZREC.FQZECYMM;
      FQ0GM020.FQ0GMEMT = FQ0GW00.FQ0GWYMM;
    end

    /* ------------------------------------------------------------*/
     /* Division and country.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XDVCD == "  ") /* Division code*/
      FQ0GM020.XDVCD = "**"; /* Default to wildcard*/
    else
      FQ0GM020.XDVCD = FQWREC.XDVCD; /* Division code*/
    end

    if (FQWREC.XCTCD == "  ") /* Country code*/
      FQ0GM020.XCTCD = "****"; /* Default to wildcard*/
    else
      FQ0GM020.XCTCD = FQWREC.XCTCD; /* Country code*/
    end

    /* ------------------------------------------------------------*/
     /* Category, line, and type.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XPCCD == "  ") /* Category code*/
      FQ0GM020.XPCCD = "**"; /* Default to wildcard*/
    else
      FQ0GM020.XPCCD = FQWREC.XPCCD; /* Category code*/
    end

    if (FQWREC.XPRCD == "  ") /* Type code*/
      FQ0GM020.XPRCD = "**"; /* Default to wildcard*/
    else
      FQ0GM020.XPRCD = FQWREC.XPRCD; /* Type code*/
    end

    if (FQWREC.XPLCD == "  ") /* Line code*/
      FQ0GM020.XPLCD = "**"; /* Default to wildcard*/
    else
      FQ0GM020.XPLCD = FQWREC.XPLCD; /* Line code*/
    end

    /* ------------------------------------------------------------*/
     /* Brand and gender code.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XBCCD == "  ") /* Brand code*/
      FQ0GM020.XBCCD = "**"; /* Default to wildcard*/
    else
      FQ0GM020.XBCCD = FQWREC.XBCCD; /* Brand code*/
    end

    if (FQWREC.XGACD == "  ") /* Gender code*/
      FQ0GM020.XGACD = "**"; /* Default to wildcard*/
    else
      FQ0GM020.XGACD = FQWREC.XGACD; /* Gender code*/
    end

    FQ0GM020.FQ0GMREQ = "*"; /* Type of report request*/
    FQ0GM020.FQ0GMSFQ = "S"; /* Type of report request*/
  end


end // end FQ0G021

// Format and display the map
Function FQ0G022()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FQWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  else
    FQ0GM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and report print destination.*/
   /* ------------------------------------------------------------*/

  FQ0GM020.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FQ0GM020.XURDEST = TA6REC.XURDEST; /* Print destination*/
  FQ0GM020.XRODESC = TA6REC.XRODESC; /* Printer description*/
  FQ0GM020.XURUSRNM = TA6REC.XURUSRNM; /* Report recipient*/
  FQ0GM020.XURBLDID = TA6REC.XURBLDID; /* NIKE building*/
  FQ0GM020.XURCOPY = TA6REC.XURCOPY; /* Number of copies*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FQWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FQWREC.XXXMSGNO != 0) /* Message to display*/

      if (FQWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FQWREC.XXXMSGNO);
      end /* Message number*/
    else
      FQ0GM020.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FQ0GM020.XXXMODID = FQWREC.XXXMODID; /* Module identification*/

    set FQ0GM020 alarm; /* Indicate sound alarm*/

  end

  converse FQ0GM020 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields.*/
   /* ------------------------------------------------------------*/

  FQWREC.XXXMSGNO = 0; /* Message number*/
  FQWREC.XXXMODID = " "; /* Module identification*/
  COMMAREA.CAMSG = " "; /* Message text*/


end // end FQ0G022

// Check attention identifier
Function FQ0G023()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FQ0GW00.FQ0GMSEL[2] = "C"; /* Indicate selection cancelled*/

    set FQ0GM020 initial; /* M020 input/output*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If EXIT WAS requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    FQ0GW00.FQ0GMSEL[2] = " "; /* INDICATE NOTHING HAPPEN*/
    COMMAREA.CAMSG = "NO ACTION TAKEN ON PREVIOUS SCREEN";

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If MSTR MN or FQ-MN requested, exit to the selected menu.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf4 /* PF4 was pressed*/
   || converseVar.eventKey is pf5) /* PF5 was pressed*/

    FQWREC.FQ1IDBDT = 0; /* beginning po month*/
    FQWREC.FQ1IDXDT = 0; /* ending po month*/

    XSFQS01();

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FQWREC.XXXMODID = "023"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end FQ0G023

// Reset highlighted fields
Function FQ0G024()
   /* ------------------------------------------------------------*/
   /* If no pop-up windows were requested,*/
            /* return to previous process.*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XDMCD == "?"    /* dimension code*/
   || FQ0GM020.YDCCD == "?"    /* beginning defect code*/
   || FQ0GM020.FQWBDFCT == "?" /* beginning defect code*/
   || FQ0GM020.FQWEDFCT == "?" /* ending defect code*/
   || FQ0GM020.XDVCD == "?"    /* division code*/
   || FQ0GM020.XCTCD == "?"    /* country code*/
   || FQ0GM020.XPLCD == "?"    /* product line code*/
   || FQ0GM020.XPCCD == "?"    /* product category*/
   || FQ0GM020.XPRCD == "?"    /* product type*/
   || FQ0GM020.XBCCD == "?"    /* brand*/
   || FQ0GM020.XGACD == "?")   /* gender age*/

    if (converseVar.eventKey not enter) /* ENTER was not pressed*/

      FQWREC.XXXMODID = "024"; /* Module identification*/
      converseLib.validationFailed(4); /* Indicate PF key not valid*/

      exit stack; /* Exit to display map*/

    end

  else

    /* ------------------------------------------------------------*/
     /* Reset field attributes to DEFINED intensity.*/
    /* ------------------------------------------------------------*/
    set FQ0GM020.FY1FCTYC initialAttributes; /* factory code*/
    set FQ0GM020.SY1STNBR initialAttributes; /* style*/
    set FQ0GM020.SY2CLRID initialAttributes; /* color*/
    set FQ0GM020.XDMCD initialAttributes; /* dimension*/
    set FQ0GM020.YDCCD initialAttributes; /* defect category*/
    set FQ0GM020.FQWBDFCT initialAttributes; /* beginning defect code*/
    set FQ0GM020.FQWEDFCT initialAttributes; /* ending defect code*/
    set FQ0GM020.FQ0GMBMT initialAttributes; /* beginning po month*/
    set FQ0GM020.FQ0GMEMT initialAttributes; /* ending po month*/
    set FQ0GM020.XDVCD initialAttributes; /* division*/
    set FQ0GM020.XCTCD initialAttributes; /* country*/
    set FQ0GM020.XPLCD initialAttributes; /* product line*/
    set FQ0GM020.XPCCD initialAttributes; /* product category*/
    set FQ0GM020.XPRCD initialAttributes; /* product type*/
    set FQ0GM020.XBCCD initialAttributes; /* brand*/
    set FQ0GM020.XGACD initialAttributes; /* gender age*/
    set FQ0GM020.FQ0GMREQ initialAttributes; /* report requested*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of dimension codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XDMCD == "?") /* dimension code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DIMENSION CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDM01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM020.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM020.YDCCD cursor; /* Establish cursor position*/
      set FQ0GM020.XDMCD initialAttributes;
    else
      set FQ0GM020.XDMCD cursor, bold; /* Establish cursor position*/
      converseLib.validationFailed(43);
    end


  end


   /* ------------------------------------------------------------*/
   /* If requested, display the list of defective category codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.YDCCD == "?") /* defective category*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CATEGORY "; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM020.YDCCD = YDCTBL.YDCCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM020.FQWBDFCT cursor; /* Establish cursor position*/
      set FQ0GM020.YDCCD initialAttributes;
    else
      set FQ0GM020.YDCCD cursor, bold; /* Establish cursor position*/
      converseLib.validationFailed(43);
    end


  end


   /* ------------------------------------------------------------*/
   /* If requested, display the list of defect codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.FQWBDFCT == "?") /* beginning defect code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CODE "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDF01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM020.FQWBDFCT = YDFTBL.YDFCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM020.FQWEDFCT cursor; /* Establish cursor position*/
      set FQ0GM020.FQWBDFCT initialAttributes;
    else

      set FQ0GM020.FQWBDFCT cursor, bold; /* Establish cursor position*/
      converseLib.validationFailed(43);
    end

  end

  if (FQ0GM020.FQWEDFCT == "?") /* Ending defect code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CODE "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDF01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM020.FQWEDFCT = YDFTBL.YDFCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM020.FQ0GMBMT cursor; /* Establish cursor position*/
      set FQ0GM020.FQWEDFCT initialAttributes;
    else

      set FQ0GM020.FQWEDFCT cursor, bold; /* Establish cursor position*/
      converseLib.validationFailed(43);
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of division codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XDVCD == "?") /* division code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DIVISION CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDV01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* selection made*/

      FQ0GM020.XDVCD = XDVTBL.XDVCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM020.XCTCD cursor; /* Establish cursor position*/
      set FQ0GM020.XDVCD initialAttributes;

    else

      set FQ0GM020.XDVCD cursor, bold; /* Establish cursor position*/
      converseLib.validationFailed(43);
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of country codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XCTCD == "?") /* country code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM020.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM020.XPCCD cursor; /* Establish cursor position*/
      set FQ0GM020.XCTCD initialAttributes;

    else

      set FQ0GM020.XCTCD cursor, bold; /* Establish cursor position*/
      converseLib.validationFailed(43);
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product type codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XPRCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD TYPE CODE"; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPR01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM020.XPRCD = XPRTBL.XPRCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM020.XPLCD cursor; /* Establish cursor position*/
      set FQ0GM020.XPRCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM020.XPRCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product line codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XPLCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD LINE CODE"; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPL01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM020.XPLCD = XPLTBL.XPLCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM020.XBCCD cursor; /* Establish cursor position*/
      set FQ0GM020.XPLCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM020.XPLCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product categories*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XPCCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD CATEGORY "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM020.XPCCD = XPCTBL.XPCCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM020.XPRCD cursor; /* Establish cursor position*/
      set FQ0GM020.XPCCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM020.XPCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of brand codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XBCCD == "?") /* brand code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "BRAND CODE"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXBC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM020.XBCCD = XBCTBL.XBCCD[XX0XWPIX];
      set FQ0GM020.XGACD cursor; /* Establish cursor position*/
      set FQ0GM020.XBCCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM020.XBCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of gender age codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM020.XGACD == "?") /* gender age code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "GENDER AGE"; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXGA01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM020.XGACD = XGATBL.XGACD[XX0XWPIX];
      set FQ0GM020.FQ0GMREQ cursor; /* Establish cursor position*/
      set FQ0GM020.XGACD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM020.XGACD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();
   /* Clear screen before display*/

  FQWREC.XXXMODID = "024"; /* Module identification*/
  if (converseVar.validationMsgNum == 0)
    converseLib.validationFailed(25); /* No more selection to display*/
  end

  exit stack; /* Exit to display map*/


end // end FQ0G024

// Verify the entered data
Function FQ0G025()
   /* ------------------------------------------------------------*/
   /* Validate STY/FCTY report request.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQ0GMSFQ != "N" /* If indicator not 'n'*/
   && FQ0GM020.FQ0GMSFQ != "S") /* or indicator not 'S'*/
    converseLib.validationFailed(50); /* Indicate error*/
    FQWREC.XXXMODID = "025"; /* Module identification*/
    set FQ0GM020.FQ0GMSFQ cursor, bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* Validate FCTY/STY report request.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQ0GMREQ != "D" /* If indicator not 'D'*/
   && FQ0GM020.FQ0GMREQ != "S" /* or indicator not 'S'*/
   && FQ0GM020.FQ0GMREQ != "*" /* or indicator not '*'*/
   && FQ0GM020.FQ0GMREQ != "N") /* or indicator not 'n'*/
    converseLib.validationFailed(28); /* Indicate error*/
    FQWREC.XXXMODID = "025"; /* Module identification*/
    set FQ0GM020.FQ0GMREQ cursor, bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* Set defaults for all fields.*/
   /* ------------------------------------------------------------*/
  FQ0GS01(); /* Set defaults*/

   /* ------------------------------------------------------------*/
   /* Validate gender age code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XGACD != "**") /* If gender age not wildcarded*/
    if (FQ0GM020.XGACD in XGATBL.XGACD /* If gender in table*/
     && XGATBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(42); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XGACD cursor, bold; /* Highlight field*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate brand.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XBCCD != "**") /* If brand not wildcarded*/
    if (FQ0GM020.XBCCD in XBCTBL.XBCCD /* If brand in table*/
     && XBCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(41); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XBCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* validate product line.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XPLCD != "**") /* If line not wildcarded*/

    XPLREC.XPLCD = FQ0GM020.XPLCD; /* Format key*/
    XPLREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (XPLREC.XPLKEY in XPLTBL.XPLKEY /* If line in table*/
     && XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(40); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XPLCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate product type.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XPRCD != "**") /* If type not wildcarded*/
    if (FQ0GM020.XPRCD in XPRTBL.XPRCD /* If type in table*/
     && XPRTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      converseLib.validationFailed(39); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XPRCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate product category.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XPCCD != "**") /* If line not wildcarded*/

    XPCREC.XPCCD = FQ0GM020.XPCCD; /* Format key*/
    XPCREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* If cat in table*/
     && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(38); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XPCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate country code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XCTCD != "****") /* If country not wildcarded*/
    if (FQ0GM020.XCTCD in XCTTBL.XCTCD /* If country in table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(37); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XCTCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate division.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XDVCD != "**") /* If division not wildcarded*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (FQ0GM020.XDVCD in XDVTBL.XDVCD /* If division in table*/
     && XDVTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(31); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XDVCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate PO month range.*/
   /* ------------------------------------------------------------*/
  set FQZREC empty; /* Clear date edit record*/

  FQZREC.FQZBEGRG = FQ0GM020.FQ0GMBMT; /* Beg date*/
  FQZREC.FQZENDRG = FQ0GM020.FQ0GMEMT; /* End date*/

  FQZREC.FQZCHK24 = "N"; /* No individual months req*/
  FQZREC.FQZNUMYR = 3; /* No of years requested*/

  XSFQS05(); /* Perform date edit routine*/

   /* ------------------------------------------------------------*/
   /* Check return codes for ending date.*/
   /* ------------------------------------------------------------*/
  if (FQZREC.FQZENDRC == 0) /* end date was valid*/
    FQ0GM020.FQ0GMEMT = FQZREC.FQZENDRG; /* End date*/

  else
    FQWREC.XXXMODID = "025"; /* Module identification*/
    set FQ0GM020.FQ0GMEMT cursor, bold; /* Highlight*/

    if (FQZREC.FQZENDRC == "1") /* Invalid end date*/
      converseLib.validationFailed(34); /* Invalid date message*/
    else /* ; Date out of range*/
      set FQ0GM020.FQ0GMBMT cursor, bold; /* Highlight*/
      converseLib.validationFailed(27); /* Date out of range message*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Check return codes for beginning date.*/
   /* ------------------------------------------------------------*/
  if (FQZREC.FQZBEGRC == 0) /* Beg date was valid*/
    FQ0GM020.FQ0GMBMT = FQZREC.FQZBEGRG; /* Begin date*/

  else
    FQWREC.XXXMODID = "025"; /* Module identification*/
    set FQ0GM020.FQ0GMBMT cursor, bold; /* Highlight*/

    if (FQZREC.FQZBEGRC == "1") /* If return code EQ '1'*/
      converseLib.validationFailed(34); /* Indicate date is invalid*/
    else
      converseLib.validationFailed(27); /* Indicate invalid range*/
      set FQ0GM020.FQ0GMEMT bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate ending defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQWEDFCT != "***") /* If defect not wildcarded*/

    YDFREC.YDFCD = FQ0GM020.FQWEDFCT; /* Format key*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDFREC.YDFKEY in YDFTBL.YDFKEY /* If def in table*/
     && YDFTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(32); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.FQWEDFCT cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate beginning defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQWBDFCT != "***") /* If defect not wildcarded*/

    YDFREC.YDFCD = FQ0GM020.FQWBDFCT; /* Format key*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDFREC.YDFKEY in YDFTBL.YDFKEY /* If def in table*/
     && YDFTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(32); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.FQWBDFCT cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Beginning defect range cannot be greater than the ending.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQWBDFCT > FQ0GM020.FQWEDFCT)

    converseLib.validationFailed(29); /* Indicate error*/
    FQWREC.XXXMODID = "025"; /* Module identification*/
    set FQ0GM020.FQWBDFCT cursor, bold; /* Highlight*/
    set FQ0GM020.FQWEDFCT bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* Validate defect category code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.YDCCD != "***") /* If defect not wildcarded*/

    YDCREC.YDCCD = FQ0GM020.YDCCD; /* Format key*/
    YDCREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDCREC.YDCKEY in YDCTBL.YDCKEY /* If def cat in table*/
     && YDCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(36); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.YDCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If both defect category and defect range cannot be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.YDCCD == "***"    /* If cat defect wildcarded*/
   && FQ0GM020.FQWBDFCT == "***" /* If defect wildcarded*/
   && FQ0GM020.FQWBDFCT == "***") /* If defect wildcarded*/
      /* Next sentence*/
  else
    if (FQ0GM020.YDCCD != "***") /* If cat defect not wildcarded*/

      if (FQ0GM020.FQWBDFCT != "***"
       /* If begin defect not wildcarded*/
       || FQ0GM020.FQWBDFCT != "***") /* or end defect not wildcarded*/

        converseLib.validationFailed(47); /* Indicate error*/
        FQWREC.XXXMODID = "025"; /* Module identification*/
        set FQ0GM020.YDCCD cursor, bold; /* Highlight*/
        set FQ0GM020.FQWBDFCT bold; /* Highlight*/
        set FQ0GM020.FQWEDFCT bold; /* Highlight*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate dimension.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XDMCD != "**") /* If dimension not wildcarded*/
    if (FQ0GM020.XDMCD in XDMTBL.XDMCD /* If dimension in table*/
     && XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(46); /* Indicate error*/
      FQWREC.XXXMODID = "025"; /* Module identification*/
      set FQ0GM020.XDMCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Verify style and color.*/
   /* ------------------------------------------------------------*/
  FQ0GS02(); /* Verify style and color*/

   /* ------------------------------------------------------------*/
   /* Validate factory code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FY1FCTYC != "***")

    /* ------------------------------------------------------------*/
     /* Format fields for call*/
    /* ------------------------------------------------------------*/
    set FY1REC empty; /* Clear copybook*/
    FY1REC.FY1FCTYC = FQ0GM020.FY1FCTYC; /* Factory*/
    FY1REC.XGPCD = FQWREC.XGPCD; /* GPC code*/

    /* ------------------------------------------------------------*/
     /* Call FCTY.*/
    /* ------------------------------------------------------------*/
    FQ0GS03(); /* Call FCTY*/

    /* ------------------------------------------------------------*/
     /* Check return code.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0)
      set FQ0GM020.FY1FCTYC cursor, bold; /* Highlight*/
      converseLib.validationFailed(30); /* Indicate resource not available*/
      FQWREC.XXXMODID = "025"; /* Module ID*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Both style & any part of the product info can't be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.SY1STNBR != "******") /* If style was entered*/
    if (FQ0GM020.XPLCD != "**" /* If line was entered*/
     || FQ0GM020.XPCCD != "**" /* or catg was entered*/
     || FQ0GM020.XPRCD != "**" /* or type was entered*/
     || FQ0GM020.XGACD != "**" /* or gender was entered*/
     || FQ0GM020.XBCCD != "**") /* or brand was entered*/

      converseLib.validationFailed(35); /* Indicate invalid comb*/
      FQWREC.XXXMODID = "025"; /* Module ID*/
      set FQ0GM020.SY1STNBR cursor, bold; /* Highlight*/
      set FQ0GM020.XGACD bold; /* Highlight*/
      set FQ0GM020.XBCCD bold; /* Highlight*/
      set FQ0GM020.XPRCD bold; /* Highlight*/
      set FQ0GM020.XPCCD bold; /* Highlight*/
      set FQ0GM020.XPLCD bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Both factory and country can not be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FY1FCTYC != "***" /* If factory was entered*/
   && FQ0GM020.XCTCD != "****")  /* and country was entered*/

    converseLib.validationFailed(26); /* Indicate invalid comb*/
    FQWREC.XXXMODID = "025"; /* Module ID*/
    set FQ0GM020.FY1FCTYC cursor, bold; /* Highlight*/
    set FQ0GM020.XCTCD bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, set switch, and return to*/
   /* previous process.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWERF = "N"; /* Clear error flag*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
    return; /* Return to previous process*/
  end


end // end FQ0G025

// Process valid input request
Function FQ0G026()
   /* ------------------------------------------------------------*/
   /* If errors are present, return to previous process.*/
   /* ------------------------------------------------------------*/
  if (FQ0GW00.FQ0GWERF == "Y") /* If error flag is set 'on'*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Update FQWREC.*/
   /* ------------------------------------------------------------*/
  FQWREC.FY1PFYCD = FQ0GM020.FY1FCTYC; /* Factory*/
  FQWREC.SY1STNBR = FQ0GM020.SY1STNBR; /* Style*/
  FQWREC.SY2CLRID = FQ0GM020.SY2CLRID; /* Color*/
  FQWREC.XDMCD = FQ0GM020.XDMCD; /* Dim*/
  FQWREC.YDCCD = FQ0GM020.YDCCD; /* Defect category*/
  FQWREC.FQWBDFCT = FQ0GM020.FQWBDFCT; /* beginning defect code*/
  FQWREC.FQWEDFCT = FQ0GM020.FQWEDFCT; /* ending defect code*/
  FQWREC.FQ1IDBDT = FQ0GM020.FQ0GMBMT; /* beginning po month*/
  FQWREC.FQ1IDXDT = FQ0GM020.FQ0GMEMT; /* ending po month*/
  FQWREC.XDVCD = FQ0GM020.XDVCD; /* division*/
  FQWREC.XCTCD = FQ0GM020.XCTCD; /* country*/
  FQWREC.XPLCD = FQ0GM020.XPLCD; /* product line*/
  FQWREC.XPCCD = FQ0GM020.XPCCD; /* product category*/
  FQWREC.XPRCD = FQ0GM020.XPRCD; /* product type*/
  FQWREC.XBCCD = FQ0GM020.XBCCD; /* brand*/
  FQWREC.XGACD = FQ0GM020.XGACD; /* gender age*/

   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  TA6REC.TA6INDEX = 1; /* Output array index*/
  FQ0GW00.FQ0GWIXT = 1;

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  if (TA3REC.TA3RGNID == "03") /* if on production system*/
    FQ0G027(); /* format production jcl*/
  else
    FQ0G028(); /* format test jcl*/
  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  FQWREC.XXXMODID = "026"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FQ0GW00.FQ0GMSEL[2] = "*"; /* Indicate function completed*/

    set FQ0GM020 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(1); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/


end // end FQ0G026

// Process valid production jcl
Function FQ0G027()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWFLG = "N";
  FQ0GW99.TARJCL = " ";
  FQ0GW99.FQ0GWTYP = "R";
  FQ0GW99.FQ0GWCNT = 1;

  FQ0GW99.FY1FCTYC = FQ0GM020.FY1FCTYC;
  FQ0GW99.SY1STNBR = FQ0GM020.SY1STNBR;
  FQ0GW99.SY2CLRID = FQ0GM020.SY2CLRID;
  FQ0GW99.XDMCD = FQ0GM020.XDMCD;
  FQ0GW99.YDCCD = FQ0GM020.YDCCD;
  FQ0GW99.FQWBDFCT = FQ0GM020.FQWBDFCT;
  FQ0GW99.FQWEDFCT = FQ0GM020.FQWEDFCT;
  FQ0GW99.FQ0GWBMT = FQZREC.FQZBCYMM;
  FQ0GW99.FQ0GWEMT = FQZREC.FQZECYMM;
  FQ0GW99.XDVCD = FQ0GM020.XDVCD;
  FQ0GW99.XCTCD = FQ0GM020.XCTCD;
  FQ0GW99.XPCCD = FQ0GM020.XPCCD;
  FQ0GW99.XPRCD = FQ0GM020.XPRCD;
  FQ0GW99.XPLCD = FQ0GM020.XPLCD;
  FQ0GW99.XBCCD = FQ0GM020.XBCCD;
  FQ0GW99.XGACD = FQ0GM020.XGACD;

   /* ------------------------------------------------------------*/
   /* If lazer printer, move 3 or 4, else move s or n.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XURDEST == "LOCAL") /* If destination is lazer*/

    if (FQ0GM020.FQ0GMSFQ == "S") /* if request is 'summary'*/
      FQ0GW99.FQ0GMSFQ = "3";
    end

    if (FQ0GM020.FQ0GMSFQ == "N") /* if request is 'none'*/
      FQ0GW99.FQ0GMSFQ = "4";
    end
  else

    FQ0GW99.FQ0GMSFQ = FQ0GM020.FQ0GMSFQ;
  end

   /* ------------------------------------------------------------*/
   /* If lazer printer, move 1,2,3, or 4, else move d,s,*, or n.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XURDEST == "LOCAL") /* If destination is lazer*/

    if (FQ0GM020.FQ0GMREQ == "*") /* if request is 'both'*/
      FQ0GW99.FQ0GMREQ = "1";
    end

    if (FQ0GM020.FQ0GMREQ == "D") /* if request is 'detail'*/
      FQ0GW99.FQ0GMREQ = "2";
    end

    if (FQ0GM020.FQ0GMREQ == "S") /* if request is 'summary'*/
      FQ0GW99.FQ0GMREQ = "3";
    end

    if (FQ0GM020.FQ0GMREQ == "N") /* if request is 'none'*/
      FQ0GW99.FQ0GMREQ = "4";
    end
  else

    FQ0GW99.FQ0GMREQ = FQ0GM020.FQ0GMREQ;
  end

   /* ------------------------------------------------------------*/
   /* Load the JCL parm card.*/
   /* ------------------------------------------------------------*/
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FQ0GT02.TARTYPE[FQ0GWIXT] == "W")
      if (FQ0GM020.XURDEST == "LOCAL")
        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ01 FORMS=FQ01,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = "RMT00";
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ02 FORMS=FQ02,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = "RMT00";
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ03 FORMS=FQ03,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = "RMT00";
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
      else
        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ01 FORMS=FQ01,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ02 FORMS=FQ02,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ03 FORMS=FQ03,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
      end
    else

      if (FQ0GT02.TARJCL[FQ0GWIXT] == "===PRINT STEPS===")
        if (FQ0GM020.FQ0GMREQ == "D"
         || FQ0GM020.FQ0GMREQ == "*")
          FQ0G02A();
        end

        if (FQ0GM020.FQ0GMREQ == "S"
         || FQ0GM020.FQ0GMREQ == "*")
          FQ0G02B();
        end

        if (FQ0GM020.FQ0GMSFQ == "S") /* if request is for fq2101*/
          FQ0G02C();
        end

      else

        if (FQ0GT02.TARJCL[FQ0GWIXT] == "===INSERT RUN PARM===")
          TA6REC.TARJCL[TA6INDEX] = FQ0GW99.TARJCL;
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
        else
          if (FQ0GT02.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM===")

           /* exclude factory 9999*/

            FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(25,04,CH,NE,C'";
            FQ0GW00.FQ0GWFLG = "Y";
            FQ0GW20.FQ0GWCH4 = "9999";
            FQ0GW20.FQ0GWSF4 = "',AND,";
            FQ0GW20.FQ0GWFL4 = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

           /* check factory code*/

            if (FQ0GM020.FY1FCTYC != "***")
              FQ0GW20.FQ0GWPR4 = "                25,04,CH,EQ,C'";
              FQ0GW00.FQ0GWFLG = "Y";
              FQ0GW20.FQ0GWCH4 = FQ0GM020.FY1FCTYC;
              FQ0GW20.FQ0GWSF4 = "',AND,";
              FQ0GW20.FQ0GWFL4 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check style number*/

            if (FQ0GM020.SY1STNBR != "******")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH6 = FQ0GM020.SY1STNBR;
              FQ0GW20.FQ0GWSF6 = "',AND,";
              FQ0GW20.FQ0GWFL6 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check color code*/

            if (FQ0GM020.SY2CLRID != "***")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH3 = FQ0GM020.SY2CLRID;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check dimension code*/

            if (FQ0GM020.XDMCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XDMCD;
              FQ0GW20.FQ0GWSF2 = "',AND,";
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check defective category*/

            if (FQ0GM020.YDCCD != "***")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(40,03,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR3 = "                40,03,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH3 = FQ0GM020.YDCCD;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check defective code*/

            if (FQ0GM020.FQWBDFCT != "***"
             && FQ0GM020.FQWEDFCT != "***")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
              end
              FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWBDFCT;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
              FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWEDFCT;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            else
              if (FQ0GM020.FQWBDFCT != "***"
               && FQ0GM020.FQWEDFCT == "***")
                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
                end
                FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWBDFCT;
                FQ0GW20.FQ0GWSF3 = "',AND,";
                FQ0GW20.FQ0GWFL3 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              else
                if (FQ0GM020.FQWBDFCT == "***"
                 && FQ0GM020.FQWEDFCT != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,LE,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWEDFCT;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end
              end
            end

           /* check poid month range*/

            if (FQ0GW00.FQ0GWFLG == "N")
              FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(33,04,BI,GE,C'";
              FQ0GW00.FQ0GWFLG = "Y";
            else
              FQ0GW20.FQ0GWPRD = "                33,04,BI,GE,C'";
            end

            FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
            FQ0GW20.FQ0GWSFD = "',AND,";
            FQ0GW20.FQ0GWFLD = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            FQ0GW20.FQ0GWPRD = "                33,04,BI,LE,C'";
            FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;

            if (FQ0GM020.XDVCD != "**"
             || FQ0GM020.XCTCD != "****"
             || FQ0GM020.XPLCD != "**"
             || FQ0GM020.XPCCD != "**"
             || FQ0GM020.XPRCD != "**"
             || FQ0GM020.XBCCD != "**"
             || FQ0GM020.XGACD != "**")
              FQ0GW20.FQ0GWSFD = "',AND,";
            else
              FQ0GW20.FQ0GWSFD = "')";
            end

            FQ0GW20.FQ0GWFLD = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

           /* check division code*/

            if (FQ0GM020.XDVCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(47,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                47,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XDVCD;
              if (FQ0GM020.XCTCD != "****"
               || FQ0GM020.XPLCD != "**"
               || FQ0GM020.XPCCD != "**"
               || FQ0GM020.XPRCD != "**"
               || FQ0GM020.XBCCD != "**"
               || FQ0GM020.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check country code*/

            if (FQ0GM020.XCTCD != "****")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(51,04,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR4 = "                51,04,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH4 = FQ0GM020.XCTCD;
              if (FQ0GM020.XPLCD != "**"
               || FQ0GM020.XPCCD != "**"
               || FQ0GM020.XPRCD != "**"
               || FQ0GM020.XBCCD != "**"
               || FQ0GM020.XGACD != "**")
                FQ0GW20.FQ0GWSF4 = "',AND,";
              else
                FQ0GW20.FQ0GWSF4 = "')";
              end
              FQ0GW20.FQ0GWFL4 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check category code*/

            if (FQ0GM020.XPCCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(61,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                61,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XPCCD;
              if (FQ0GM020.XPLCD != "**"
               || FQ0GM020.XPRCD != "**"
               || FQ0GM020.XBCCD != "**"
               || FQ0GM020.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check type code*/

            if (FQ0GM020.XPRCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(65,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                65,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XPRCD;
              if (FQ0GM020.XPLCD != "**"
               || FQ0GM020.XBCCD != "**"
               || FQ0GM020.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check line code*/

            if (FQ0GM020.XPLCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(63,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                63,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XPLCD;
              if (FQ0GM020.XBCCD != "**"
               || FQ0GM020.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check brand code*/

            if (FQ0GM020.XBCCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(59,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                59,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XBCCD;
              if (FQ0GM020.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

           /* check gender age*/

            if (FQ0GM020.XGACD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(67,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                67,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM020.XGACD;
              FQ0GW20.FQ0GWSF2 = "')";
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

          else


            /* ------------------------------------------------------------*/
            /* Format the Job Control Language statement from the table.*/

            /* ------------------------------------------------------------*/

            TA6REC.TARJCL[TA6INDEX] = FQ0GT02.TARJCL[FQ0GWIXT]; /* JCL*/
            TA6REC.TARTYPE[TA6INDEX] = FQ0GT02.TARTYPE[FQ0GWIXT]; /* Type*/
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

          end
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (FQ0GT02.TARJCL[FQ0GWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FQ0GW00.FQ0GWIXT = FQ0GW00.FQ0GWIXT + 1; /* Input table index*/

    end
  end


end // end FQ0G027

// Process valid test jcl
Function FQ0G028()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWFLG = "N";
  FQ0GW99.TARJCL = " ";
  FQ0GW99.FQ0GWTYP = "R";
  FQ0GW99.FQ0GWCNT = 1;

  FQ0GW99.FY1FCTYC = FQ0GM020.FY1FCTYC;
  FQ0GW99.SY1STNBR = FQ0GM020.SY1STNBR;
  FQ0GW99.SY2CLRID = FQ0GM020.SY2CLRID;
  FQ0GW99.XDMCD = FQ0GM020.XDMCD;
  FQ0GW99.YDCCD = FQ0GM020.YDCCD;
  FQ0GW99.FQWBDFCT = FQ0GM020.FQWBDFCT;
  FQ0GW99.FQWEDFCT = FQ0GM020.FQWEDFCT;
  FQ0GW99.FQ0GWBMT = FQZREC.FQZBCYMM;
  FQ0GW99.FQ0GWEMT = FQZREC.FQZECYMM;
  FQ0GW99.XDVCD = FQ0GM020.XDVCD;
  FQ0GW99.XCTCD = FQ0GM020.XCTCD;
  FQ0GW99.XPCCD = FQ0GM020.XPCCD;
  FQ0GW99.XPRCD = FQ0GM020.XPRCD;
  FQ0GW99.XPLCD = FQ0GM020.XPLCD;
  FQ0GW99.XBCCD = FQ0GM020.XBCCD;
  FQ0GW99.XGACD = FQ0GM020.XGACD;

   /* ------------------------------------------------------------*/
   /* If lazer printer, move 3 or 4, else move s or n.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XURDEST == "LOCAL") /* If destination is lazer*/

    if (FQ0GM020.FQ0GMSFQ == "S") /* if request is 'summary'*/
      FQ0GW99.FQ0GMSFQ = "3";
    end

    if (FQ0GM020.FQ0GMSFQ == "N") /* if request is 'none'*/
      FQ0GW99.FQ0GMSFQ = "4";
    end
  else

    FQ0GW99.FQ0GMSFQ = FQ0GM020.FQ0GMSFQ;
  end

   /* ------------------------------------------------------------*/
   /* If lazer printer, move 1,2,3, or 4, else move d,s,*, or n.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XURDEST == "LOCAL") /* If destination is lazer*/

    if (FQ0GM020.FQ0GMREQ == "*") /* if request is 'both'*/
      FQ0GW99.FQ0GMREQ = "1";
    end

    if (FQ0GM020.FQ0GMREQ == "D") /* if request is 'detail'*/
      FQ0GW99.FQ0GMREQ = "2";
    end

    if (FQ0GM020.FQ0GMREQ == "S") /* if request is 'summary'*/
      FQ0GW99.FQ0GMREQ = "3";
    end

    if (FQ0GM020.FQ0GMREQ == "N") /* if request is 'none'*/
      FQ0GW99.FQ0GMREQ = "4";
    end
  else

    FQ0GW99.FQ0GMREQ = FQ0GM020.FQ0GMREQ;
  end

   /* ------------------------------------------------------------*/
   /* Load the JCL parm card.*/
   /* ------------------------------------------------------------*/
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FQ0GT12.TARTYPE[FQ0GWIXT] == "1")
      FQ0GW20.FQ0GWJN1 = "//";
      FQ0GW20.FQ0GWJN2 = TA6REC.XURUSRID;
      FQ0GW20.FQ0GWJN3 = "A";
      FQ0GW20.FQ0GWJN4 = "JOB (DP,MUR2),'NATURE DEFECT REPORT',";
      TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWCRD;
      TA6REC.TARTYPE[TA6INDEX] = "1";
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
    else

      if (FQ0GT12.TARTYPE[FQ0GWIXT] == "W")
        if (FQ0GM020.XURDEST == "LOCAL")
          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ01 FORMS=FQ01,COPIES=";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = "RMT00";
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ02 FORMS=FQ02,COPIES=";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = "RMT00";
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ03 FORMS=FQ03,COPIES=";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = "RMT00";
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        else
          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ01 FORMS=FQ01,COPIES=";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ02 FORMS=FQ02,COPIES=";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ03 FORMS=FQ03,COPIES=";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
        end
      else

        if (FQ0GT12.TARJCL[FQ0GWIXT] == "===PRINT STEPS===")
          if (FQ0GM020.FQ0GMREQ == "D"
           || FQ0GM020.FQ0GMREQ == "*")
            FQ0G02D();
          end

          if (FQ0GM020.FQ0GMREQ == "S"
           || FQ0GM020.FQ0GMREQ == "*")
            FQ0G02E();
          end

          if (FQ0GM020.FQ0GMSFQ == "S") /* if request is for fq2101*/
            FQ0G02F();
          end

        else

          if (FQ0GT12.TARJCL[FQ0GWIXT] == "===NOTIFY USER ID===")
            FQ0GW20.FQ0GWPR1 = "//             NOTIFY=";
            FQ0GW20.FQ0GWUID = TA6REC.XURUSRID;
            FQ0GW20.FQ0GWFL1 = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC1;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
          else
            if (FQ0GT12.TARJCL[FQ0GWIXT] == "===INSERT RUN PARM===")
              TA6REC.TARJCL[TA6INDEX] = FQ0GW99.TARJCL;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            else
              if (FQ0GT12.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM===")

             /* exclude factory 9999*/

                if (FQ0GM020.FY1FCTYC != "***")
                  FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(25,04,CH,NE,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                  FQ0GW20.FQ0GWCH4 = "9999";
                  FQ0GW20.FQ0GWSF4 = "',AND,";
                  FQ0GW20.FQ0GWFL4 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check factory code*/

                if (FQ0GM020.FY1FCTYC != "***")
                  FQ0GW20.FQ0GWPR4 = "                25,04,CH,EQ,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                  FQ0GW20.FQ0GWCH4 = FQ0GM020.FY1FCTYC;
                  FQ0GW20.FQ0GWSF4 = "',AND,";
                  FQ0GW20.FQ0GWFL4 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check style number*/

                if (FQ0GM020.SY1STNBR != "******")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH6 = FQ0GM020.SY1STNBR;
                  FQ0GW20.FQ0GWSF6 = "',AND,";
                  FQ0GW20.FQ0GWFL6 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check color code*/

                if (FQ0GM020.SY2CLRID != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM020.SY2CLRID;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check dimension code*/

                if (FQ0GM020.XDMCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XDMCD;
                  FQ0GW20.FQ0GWSF2 = "',AND,";
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check defective category*/

                if (FQ0GM020.YDCCD != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(40,03,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                40,03,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM020.YDCCD;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check defective code*/

                if (FQ0GM020.FQWBDFCT != "***"
                 && FQ0GM020.FQWEDFCT != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWBDFCT;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
                  FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWEDFCT;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                else
                  if (FQ0GM020.FQWBDFCT != "***"
                   && FQ0GM020.FQWEDFCT == "***")
                    if (FQ0GW00.FQ0GWFLG == "N")
                      FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                      FQ0GW00.FQ0GWFLG = "Y";
                    else
                      FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
                    end
                    FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWBDFCT;
                    FQ0GW20.FQ0GWSF3 = "',AND,";
                    FQ0GW20.FQ0GWFL3 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  else
                    if (FQ0GM020.FQWBDFCT == "***"
                     && FQ0GM020.FQWEDFCT != "***")
                      if (FQ0GW00.FQ0GWFLG == "N")
                        FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,LE,C'";
                        FQ0GW00.FQ0GWFLG = "Y";
                      else
                        FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
                      end
                      FQ0GW20.FQ0GWCH3 = FQ0GM020.FQWEDFCT;
                      FQ0GW20.FQ0GWSF3 = "',AND,";
                      FQ0GW20.FQ0GWFL3 = " ";
                      TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                    end
                  end
                end

             /* check PO ID month range*/

                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(33,04,BI,GE,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPRD = "                33,04,BI,GE,C'";
                end

                FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
                FQ0GW20.FQ0GWSFD = "',AND,";
                FQ0GW20.FQ0GWFLD = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
                FQ0GW20.FQ0GWPRD = "                33,04,BI,LE,C'";
                FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;

                if (FQ0GM020.XDVCD != "**"
                 || FQ0GM020.XCTCD != "****"
                 || FQ0GM020.XPLCD != "**"
                 || FQ0GM020.XPCCD != "**"
                 || FQ0GM020.XPRCD != "**"
                 || FQ0GM020.XBCCD != "**"
                 || FQ0GM020.XGACD != "**")
                  FQ0GW20.FQ0GWSFD = "',AND,";
                else
                  FQ0GW20.FQ0GWSFD = "')";
                end

                FQ0GW20.FQ0GWFLD = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

             /* check division code*/

                if (FQ0GM020.XDVCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(47,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                47,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XDVCD;
                  if (FQ0GM020.XCTCD != "****"
                   || FQ0GM020.XPLCD != "**"
                   || FQ0GM020.XPCCD != "**"
                   || FQ0GM020.XPRCD != "**"
                   || FQ0GM020.XBCCD != "**"
                   || FQ0GM020.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check country code*/

                if (FQ0GM020.XCTCD != "****")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(51,04,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR4 = "                51,04,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH4 = FQ0GM020.XCTCD;
                  if (FQ0GM020.XPLCD != "**"
                   || FQ0GM020.XPCCD != "**"
                   || FQ0GM020.XPRCD != "**"
                   || FQ0GM020.XBCCD != "**"
                   || FQ0GM020.XGACD != "**")
                    FQ0GW20.FQ0GWSF4 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF4 = "')";
                  end
                  FQ0GW20.FQ0GWFL4 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check category code*/

                if (FQ0GM020.XPCCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(61,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                61,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XPCCD;
                  if (FQ0GM020.XPLCD != "**"
                   || FQ0GM020.XPRCD != "**"
                   || FQ0GM020.XBCCD != "**"
                   || FQ0GM020.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check type code*/

                if (FQ0GM020.XPRCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(65,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                65,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XPRCD;
                  if (FQ0GM020.XPLCD != "**"
                   || FQ0GM020.XBCCD != "**"
                   || FQ0GM020.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check line code*/

                if (FQ0GM020.XPLCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(63,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                63,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XPLCD;
                  if (FQ0GM020.XBCCD != "**"
                   || FQ0GM020.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check brand code*/

                if (FQ0GM020.XBCCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(59,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                59,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XBCCD;
                  if (FQ0GM020.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

             /* check gender age*/

                if (FQ0GM020.XGACD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(67,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                67,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM020.XGACD;
                  FQ0GW20.FQ0GWSF2 = "')";
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end


              else


            /* ------------------------------------------------------------*/
                                  /* Format the Job Control Language*/
                                   /* statement from the table.*/

            /* ------------------------------------------------------------*/

                TA6REC.TARJCL[TA6INDEX] = FQ0GT12.TARJCL[FQ0GWIXT];
                                   /* JCL*/
                TA6REC.TARTYPE[TA6INDEX] = FQ0GT12.TARTYPE[FQ0GWIXT];
                                   /* Type*/
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

              end
            end
          end
        end
      end
    end


    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FQ0GT12.TARJCL[FQ0GWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FQ0GW00.FQ0GWIXT = FQ0GW00.FQ0GWIXT + 1; /* Input table index*/

    end

  end
end // end FQ0G028

// Process valid prod request
Function FQ0G02A()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT2A.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM020.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(N,,FQ01)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(P,,FQ01)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT2A.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT2A.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT2A.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G02A

// Process valid prod request
Function FQ0G02B()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT2B.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM020.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(N,,FQ02)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(P,,FQ02)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT2B.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT2B.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT2B.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G02B

// Process valid prod request
Function FQ0G02C()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT2C.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM020.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(N,,FQ03)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(P,,FQ03)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT2C.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT2C.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT2C.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G02C

// Process valid test request
Function FQ0G02D()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT2D.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM020.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(2,,FQ01)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(T,,FQ01)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT2D.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT2D.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT2D.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G02D

// Process valid test request
Function FQ0G02E()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT2E.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM020.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(2,,FQ02)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(T,,FQ02)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT2E.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT2E.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT2E.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G02E

// Process valid test request
Function FQ0G02F()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT2F.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM020.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(2,,FQ03)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(T,,FQ03)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT2F.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT2F.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT2F.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G02F

// Factory defect/prod ratio
Function FQ0G030()
   /* ------------------------------------------------------------*/
   /* This is the main process used to generate the FactoryDefect*/
   /* /Production ratio report.  Processing always returns to the*/
   /* top of this process and falls through subordinate processes*/
   /* until an error is found or a valid request is processed.*/
   /* Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FQ0G031(); /* Obtain the data to display*/

  FQ0G032(); /* Format and display the map*/

  FQ0G033(); /* Check attention identifier*/

  FQ0G034(); /* Reset fields to normal intensity*/

  FQ0G035(); /* Verify the data that was entered*/

  FQ0G036(); /* Process valid input request*/


end // end FQ0G030

// Obtain data to display
Function FQ0G031()
   /* ------------------------------------------------------------*/
   /* Obtain user-entered data, if any, to display on screen.*/
   /* ------------------------------------------------------------*/
  if (FQ0GW00.FQ0GWRD3 != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* Or an error was found*/

    return;

  else
    /* ------------------------------------------------------------*/
     /* Clear the map and set switch.*/
    /* ------------------------------------------------------------*/
    set FQ0GM030 initial;
    FQ0GW00.FQ0GWRD3 = "N"; /* Data was not requested*/

    /* ------------------------------------------------------------*/
     /* Factory.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.FY1PFYCD != "    ") /* Factory code*/
      FQ0GM030.FY1FCTYC = FQWREC.FY1PFYCD;
    else
      FQ0GM030.FY1FCTYC = "****";
    end

    /* ------------------------------------------------------------*/
     /* Style, color, and dimension.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.SY1STNBR != "      ") /* Style number*/
      FQ0GM030.SY1STNBR = FQWREC.SY1STNBR;
    else
      FQ0GM030.SY1STNBR = "******";
    end

    if (FQWREC.SY2CLRID != "   ") /* Color*/
      FQ0GM030.SY2CLRID = FQWREC.SY2CLRID;
    else
      FQ0GM030.SY2CLRID = "***";
    end

    if (FQWREC.XDMCD != "  ") /* Dimension*/
      FQ0GM030.XDMCD = FQWREC.XDMCD;
    else
      FQ0GM030.XDMCD = "00";
    end

    /* ------------------------------------------------------------*/
     /* Defect category and defect range.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.YDCCD != "   ") /* Defect category*/
      FQ0GM030.YDCCD = FQWREC.YDCCD;
    else
      FQ0GM030.YDCCD = "***";
    end

    if (FQWREC.FQWBDFCT != "   ") /* Beginning defective code*/
      FQ0GM030.FQWBDFCT = FQWREC.FQWBDFCT;
    else
      FQ0GM030.FQWBDFCT = "***";
    end

    if (FQWREC.FQWEDFCT != "   ") /* Ending defective code*/
      FQ0GM030.FQWEDFCT = FQWREC.FQWEDFCT;
    else
      FQ0GM030.FQWEDFCT = "***";
    end

    /* ------------------------------------------------------------*/
     /* PO month range.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.FQ1IDBDT != 0) /* Beginning po month date*/
      FQ0GW00.FQ0GWN09 = FQWREC.FQ1IDBDT;
      FQ0GM030.FQ0GMBMT = FQ0GW00.FQ0GWYMM;
    end

    if (FQWREC.FQ1IDXDT != 0) /* Ending po month date*/
      FQ0GW00.FQ0GWN09 = FQWREC.FQ1IDXDT;
      FQ0GM030.FQ0GMEMT = FQ0GW00.FQ0GWYMM;
    end

    if (FQWREC.FQ1IDBDT == 0 /* Beginning po month date*/
     && FQWREC.FQ1IDXDT == 0) /* Ending po month date*/
      set FQZREC empty;
      FQZREC.FQZCHK24 = "N";
      FQZREC.FQZNUMYR = 3;

      XSFQS05();

      FQ0GW00.FQ0GWYMM = FQZREC.FQZBCYMM;
      FQ0GM030.FQ0GMBMT = FQ0GW00.FQ0GWYMM;

      FQ0GW00.FQ0GWYMM = FQZREC.FQZECYMM;
      FQ0GM030.FQ0GMEMT = FQ0GW00.FQ0GWYMM;
    end

    /* ------------------------------------------------------------*/
     /* Division and country.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XDVCD == "  ") /* Division code*/
      FQ0GM030.XDVCD = "**"; /* Default to wildcard*/
    else
      FQ0GM030.XDVCD = FQWREC.XDVCD; /* Division code*/
    end

    if (FQWREC.XCTCD == "  ") /* Country code*/
      FQ0GM030.XCTCD = "****"; /* Default to wildcard*/
    else
      FQ0GM030.XCTCD = FQWREC.XCTCD; /* Country code*/
    end

    /* ------------------------------------------------------------*/
     /* Category, line, and type.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XPCCD == "  ") /* Category code*/
      FQ0GM030.XPCCD = "**"; /* Default to wildcard*/
    else
      FQ0GM030.XPCCD = FQWREC.XPCCD; /* Category code*/
    end

    if (FQWREC.XPRCD == "  ") /* Type code*/
      FQ0GM030.XPRCD = "**"; /* Default to wildcard*/
    else
      FQ0GM030.XPRCD = FQWREC.XPRCD; /* Type code*/
    end

    if (FQWREC.XPLCD == "  ") /* Line code*/
      FQ0GM030.XPLCD = "**"; /* Default to wildcard*/
    else
      FQ0GM030.XPLCD = FQWREC.XPLCD; /* Line code*/
    end

    /* ------------------------------------------------------------*/
     /* Brand and gender code.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XBCCD == "  ") /* Brand code*/
      FQ0GM030.XBCCD = "**"; /* Default to wildcard*/
    else
      FQ0GM030.XBCCD = FQWREC.XBCCD; /* Brand code*/
    end

    if (FQWREC.XGACD == "  ") /* Gender code*/
      FQ0GM030.XGACD = "**"; /* Default to wildcard*/
    else
      FQ0GM030.XGACD = FQWREC.XGACD; /* Gender code*/
    end

    FQ0GM030.FQ0GMREQ = "*"; /* Type of report request*/
  end


end // end FQ0G031

// Format and display the map
Function FQ0G032()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FQWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  else
    FQ0GM030.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and report print destination.*/
   /* ------------------------------------------------------------*/

  FQ0GM030.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FQ0GM030.XURDEST = TA6REC.XURDEST; /* Print destination*/
  FQ0GM030.XRODESC = TA6REC.XRODESC; /* Printer description*/
  FQ0GM030.XURUSRNM = TA6REC.XURUSRNM; /* Report recipient*/
  FQ0GM030.XURBLDID = TA6REC.XURBLDID; /* NIKE building*/
  FQ0GM030.XURCOPY = TA6REC.XURCOPY; /* Number of copies*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FQWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FQWREC.XXXMSGNO != 0) /* Message to display*/

      if (FQWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FQWREC.XXXMSGNO);
      end /* Message number*/
    else
      FQ0GM030.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FQ0GM030.XXXMODID = FQWREC.XXXMODID; /* Module identification*/

    set FQ0GM030 alarm; /* Indicate sound alarm*/

  end

  converse FQ0GM030 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields.*/
   /* ------------------------------------------------------------*/

  FQWREC.XXXMSGNO = 0; /* Message number*/
  FQWREC.XXXMODID = " "; /* Module identification*/
  COMMAREA.CAMSG = " "; /* Message text*/


end // end FQ0G032

// Check attention identifier
Function FQ0G033()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FQ0GW00.FQ0GMSEL[3] = "C"; /* Indicate selection cancelled*/

    set FQ0GM030 initial; /* M020 input/output*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    FQ0GW00.FQ0GMSEL[3] = " "; /* Indicate nothing happened*/
    COMMAREA.CAMSG = "NO ACTION TAKEN ON PREVIOUS SCREEN";

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If MSTR-MN or FQ-MN requested, exit to the selected menu.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf4 /* PF4 was pressed*/
   || converseVar.eventKey is pf5) /* PF5 was pressed*/

    FQWREC.FQ1IDBDT = 0; /* beginning po month*/
    FQWREC.FQ1IDXDT = 0; /* ending po month*/

    XSFQS01();

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FQWREC.XXXMODID = "033"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end FQ0G033

// Reset highlighted fields
Function FQ0G034()
   /* ------------------------------------------------------------*/
   /* If no pop-up windows were requested, reset highlighted*/
   /* fields.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XDMCD == "?"    /* dimension code*/
   || FQ0GM030.YDCCD == "?"    /* defective category*/
   || FQ0GM030.FQWBDFCT == "?" /* beginning defect code*/
   || FQ0GM030.FQWEDFCT == "?" /* ending defect code*/
   || FQ0GM030.XDVCD == "?"    /* division code*/
   || FQ0GM030.XCTCD == "?"    /* country code*/
   || FQ0GM030.XPLCD == "?"    /* product line code*/
   || FQ0GM030.XPCCD == "?"    /* product category*/
   || FQ0GM030.XPRCD == "?"    /* product type*/
   || FQ0GM030.XBCCD == "?"    /* brand*/
   || FQ0GM030.XGACD == "?")   /* gender age*/

    if (converseVar.eventKey not enter) /* ENTER was not pressed*/

      FQWREC.XXXMODID = "023"; /* Module identification*/
      converseLib.validationFailed(4); /* Indicate PF key not valid*/

      exit stack; /* Exit to display map*/

    end

  else

    /* ------------------------------------------------------------*/
     /* Reset field attributes to DEFINED intensity.*/
    /* ------------------------------------------------------------*/
    set FQ0GM030.FY1FCTYC initialAttributes; /* factory code*/
    set FQ0GM030.SY1STNBR initialAttributes; /* style*/
    set FQ0GM030.SY2CLRID initialAttributes; /* color*/
    set FQ0GM030.XDMCD initialAttributes; /* dimension*/
    set FQ0GM030.YDCCD initialAttributes; /* defective category*/
    set FQ0GM030.FQWBDFCT initialAttributes; /* beginning defect code*/
    set FQ0GM030.FQWEDFCT initialAttributes; /* ending defect code*/
    set FQ0GM030.FQ0GMBMT initialAttributes; /* beginning po month*/
    set FQ0GM030.FQ0GMEMT initialAttributes; /* ending po month*/
    set FQ0GM030.XDVCD initialAttributes; /* division*/
    set FQ0GM030.XCTCD initialAttributes; /* country*/
    set FQ0GM030.XPLCD initialAttributes; /* product line*/
    set FQ0GM030.XPCCD initialAttributes; /* product category*/
    set FQ0GM030.XPRCD initialAttributes; /* product type*/
    set FQ0GM030.XBCCD initialAttributes; /* brand*/
    set FQ0GM030.XGACD initialAttributes; /* gender age*/
    set FQ0GM030.FQ0GMREQ initialAttributes; /* report requested*/

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of dimension codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XDMCD == "?") /* dimension code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DIMENSION CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDM01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM030.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM030.YDCCD cursor; /* Establish cursor position*/
      set FQ0GM030.XDMCD initialAttributes; /* Establish cursor position*/
    else

      converseLib.validationFailed(43);
      set FQ0GM030.XDMCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of defective category codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.YDCCD == "?") /* defective category*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CATEGORY "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM030.YDCCD = YDCTBL.YDCCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM030.FQWBDFCT cursor; /* Establish cursor position*/
      set FQ0GM030.YDCCD initialAttributes; /* Establish cursor position*/
    else

      converseLib.validationFailed(43);
      set FQ0GM030.YDCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of defect codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.FQWBDFCT == "?") /* beginning defect code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CODE "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDF01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM030.FQWBDFCT = YDFTBL.YDFCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM030.FQWEDFCT cursor; /* Establish cursor position*/
      set FQ0GM030.FQWBDFCT initialAttributes; /* Establish cursor position*/
    else

      converseLib.validationFailed(43);
      set FQ0GM030.FQWBDFCT cursor, bold; /* Establish cursor position*/
    end

  end

  if (FQ0GM030.FQWEDFCT == "?") /* Ending defect code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CODE "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDF01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM030.FQWEDFCT = YDFTBL.YDFCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM030.FQ0GMBMT cursor; /* Establish cursor position*/
      set FQ0GM030.FQWEDFCT initialAttributes;
    else

      converseLib.validationFailed(43);
      set FQ0GM030.FQWEDFCT cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of division codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XDVCD == "?") /* division codes*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DIVISION CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDV01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* selection made*/

      FQ0GM030.XDVCD = XDVTBL.XDVCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM030.XCTCD cursor; /* Establish cursor position*/
      set FQ0GM030.XDVCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XDVCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of country codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XCTCD == "?") /* country code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY CODE "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM030.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM030.XPCCD cursor; /* Establish cursor position*/
      set FQ0GM030.XCTCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XCTCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product type codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XPRCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD TYPE CODE"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPR01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM030.XPRCD = XPRTBL.XPRCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM030.XPLCD cursor; /* Establish cursor position*/
      set FQ0GM030.XPRCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XPRCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product line codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XPLCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD LINE CODE"; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPL01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM030.XPLCD = XPLTBL.XPLCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM030.XBCCD cursor; /* Establish cursor position*/
      set FQ0GM030.XPLCD initialAttributes; /* Establish cursor position*/

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XPLCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product categories*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XPCCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD CATEGORY "; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM030.XPCCD = XPCTBL.XPCCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM030.XPRCD cursor; /* Establish cursor position*/
      set FQ0GM030.XPCCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XPCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of brand codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XBCCD == "?") /* brand code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "BRAND CODE"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXBC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM030.XBCCD = XBCTBL.XBCCD[XX0XWPIX];
      set FQ0GM030.XGACD cursor; /* Establish cursor position*/
      set FQ0GM030.XBCCD initialAttributes; /* Establish cursor position*/

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XBCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of gender age codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM030.XGACD == "?") /* gender age code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "GENDER AGE"; /* Heading*/
    XX0XW02.XGPCD = FQWREC.XGPCD; /* GPC code*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXGA01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM030.XGACD = XGATBL.XGACD[XX0XWPIX];
      set FQ0GM030.FQ0GMREQ cursor; /* Establish cursor position*/
      set FQ0GM030.XGACD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM030.XGACD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/
  converseLib.clearScreen();
   /* Clear screen before display*/

  FQWREC.XXXMODID = "034"; /* Module identification*/
  if (converseVar.validationMsgNum == 0)
    converseLib.validationFailed(25); /* Continue*/
  end

  exit stack; /* Exit to display map*/


end // end FQ0G034

// Verify the entered data
Function FQ0G035()
   /* ------------------------------------------------------------*/
   /* Validate type of report request.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FQ0GMREQ != "D" /* If indicator not 'D'*/
   && FQ0GM030.FQ0GMREQ != "S" /* or indicator not 'S'*/
   && FQ0GM030.FQ0GMREQ != "*") /* or indicator not '*'*/
    converseLib.validationFailed(28); /* Indicate error*/
    FQWREC.XXXMODID = "035"; /* Module identification*/
    set FQ0GM030.FQ0GMREQ cursor, bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* Set defaults for all fields.*/
   /* ------------------------------------------------------------*/
  FQ0GS04(); /* Set defaults*/

   /* ------------------------------------------------------------*/
   /* Validate gender age code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XGACD != "**") /* If gender age not wildcarded*/
    if (FQ0GM030.XGACD in XGATBL.XGACD /* If gender in table*/
     && XGATBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(42); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XGACD cursor, bold; /* Highlight field*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate brand.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XBCCD != "**") /* If brand not wildcarded*/
    if (FQ0GM030.XBCCD in XBCTBL.XBCCD /* If brand in table*/
     && XBCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(41); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XBCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* validate product line.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XPLCD != "**") /* If line not wildcarded*/

    XPLREC.XPLCD = FQ0GM030.XPLCD; /* Format key*/
    XPLREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (XPLREC.XPLKEY in XPLTBL.XPLKEY /* If line in table*/
     && XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(40); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XPLCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate product type.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XPRCD != "**") /* If type not wildcarded*/
    if (FQ0GM030.XPRCD in XPRTBL.XPRCD /* If type in table*/
     && XPRTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      converseLib.validationFailed(39); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XPRCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate product category.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XPCCD != "**") /* If line not wildcarded*/

    XPCREC.XPCCD = FQ0GM030.XPCCD; /* Format key*/
    XPCREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* If cat in table*/
     && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(38); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XPCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate country code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XCTCD != "****") /* If country not wildcarded*/
    if (FQ0GM030.XCTCD in XCTTBL.XCTCD /* If country in table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(37); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XCTCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate division.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XDVCD != "**") /* If division not wildcarded*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (FQ0GM030.XDVCD in XDVTBL.XDVCD /* If division in table*/
     && XDVTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(31); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XDVCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate PO month range.*/
   /* ------------------------------------------------------------*/
  set FQZREC empty; /* Clear date edit record*/

  FQZREC.FQZBEGRG = FQ0GM030.FQ0GMBMT; /* Beg date*/
  FQZREC.FQZENDRG = FQ0GM030.FQ0GMEMT; /* End date*/

  FQZREC.FQZCHK24 = "N"; /* No individual months req*/
  FQZREC.FQZNUMYR = 3; /* No of years requested*/

  XSFQS05(); /* Perform date edit routine*/

   /* ------------------------------------------------------------*/
   /* Check return codes for ending date.*/
   /* ------------------------------------------------------------*/
  if (FQZREC.FQZENDRC == 0) /* end date was valid*/
    FQ0GM030.FQ0GMEMT = FQZREC.FQZENDRG; /* End date*/

  else
    FQWREC.XXXMODID = "035"; /* Module identification*/
    set FQ0GM030.FQ0GMEMT cursor, bold; /* Highlight*/

    if (FQZREC.FQZENDRC == "1") /* Invalid end date*/
      converseLib.validationFailed(34); /* Invalid date message*/
    else /* ; Date out of range*/
      set FQ0GM030.FQ0GMBMT cursor, bold; /* Highlight*/
      converseLib.validationFailed(27); /* Date out of range message*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Check return codes for beginning date.*/
   /* ------------------------------------------------------------*/
  if (FQZREC.FQZBEGRC == 0) /* Beg date was valid*/
    FQ0GM030.FQ0GMBMT = FQZREC.FQZBEGRG; /* Begin date*/

  else
    FQWREC.XXXMODID = "035"; /* Module identification*/
    set FQ0GM030.FQ0GMBMT cursor, bold; /* Highlight*/

    if (FQZREC.FQZBEGRC == "1") /* If return code EQ '1'*/
      converseLib.validationFailed(34); /* Indicate date is invalid*/
    else
      converseLib.validationFailed(27); /* Indicate invalid range*/
      set FQ0GM030.FQ0GMEMT bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate ending defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FQWEDFCT != "***") /* If defect not wildcarded*/

    YDFREC.YDFCD = FQ0GM030.FQWEDFCT; /* Format key*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDFREC.YDFKEY in YDFTBL.YDFKEY /* If def in table*/
     && YDFTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(32); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.FQWEDFCT cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate beginning defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FQWBDFCT != "***") /* If defect not wildcarded*/

    YDFREC.YDFCD = FQ0GM030.FQWBDFCT; /* Format key*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDFREC.YDFKEY in YDFTBL.YDFKEY /* If def in table*/
     && YDFTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(32); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.FQWBDFCT cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Beginning defect range cannot be greater than the ending.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FQWBDFCT > FQ0GM030.FQWEDFCT)

    converseLib.validationFailed(29); /* Indicate error*/
    FQWREC.XXXMODID = "035"; /* Module identification*/
    set FQ0GM030.FQWBDFCT cursor, bold; /* Highlight*/
    set FQ0GM030.FQWEDFCT bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* Validate defect category code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.YDCCD != "***") /* If defect not wildcarded*/

    YDCREC.YDCCD = FQ0GM030.YDCCD; /* Format key*/
    YDCREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDCREC.YDCKEY in YDCTBL.YDCKEY /* If def cat in table*/
     && YDCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(36); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.YDCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If both defect category and defect range cannot be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.YDCCD == "***"    /* If cat defect wildcarded*/
   && FQ0GM030.FQWBDFCT == "***" /* If defect wildcarded*/
   && FQ0GM030.FQWBDFCT == "***") /* If defect wildcarded*/
      /* Next sentence*/
  else
    if (FQ0GM030.YDCCD != "***") /* If cat defect not wildcarded*/

      if (FQ0GM030.FQWBDFCT != "***"
       /* If begin defect not wildcarded*/
       || FQ0GM030.FQWBDFCT != "***") /* or end defect not wildcarded*/

        converseLib.validationFailed(47); /* Indicate error*/
        FQWREC.XXXMODID = "035"; /* Module identification*/
        set FQ0GM030.YDCCD cursor, bold; /* Highlight*/
        set FQ0GM030.FQWBDFCT bold; /* Highlight*/
        set FQ0GM030.FQWEDFCT bold; /* Highlight*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate dimension.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XDMCD != "**") /* If dimension not wildcarded*/
    if (FQ0GM030.XDMCD in XDMTBL.XDMCD /* If dimension in table*/
     && XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(46); /* Indicate error*/
      FQWREC.XXXMODID = "035"; /* Module identification*/
      set FQ0GM030.XDMCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Verify style and color.*/
   /* ------------------------------------------------------------*/
  FQ0GS05(); /* Verify style and color*/

   /* ------------------------------------------------------------*/
   /* Validate factory code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FY1FCTYC != "***")

    /* ------------------------------------------------------------*/
     /* Format fields for call*/
    /* ------------------------------------------------------------*/
    set FY1REC empty; /* Clear copybook*/
    FY1REC.FY1FCTYC = FQ0GM030.FY1FCTYC; /* Factory*/
    FY1REC.XGPCD = FQWREC.XGPCD; /* GPC code*/

    /* ------------------------------------------------------------*/
     /* Call FCTY.*/
    /* ------------------------------------------------------------*/
    FQ0GS03(); /* Call FCTY*/

    /* ------------------------------------------------------------*/
     /* Check return code.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0)
      set FQ0GM030.FY1FCTYC cursor, bold; /* Highlight*/
      converseLib.validationFailed(30); /* Indicate resource not available*/
      FQWREC.XXXMODID = "035"; /* Module ID*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Both style & any part of the product info can't be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.SY1STNBR != "******") /* If style was entered*/
    if (FQ0GM030.XPLCD != "**" /* If line was entered*/
     || FQ0GM030.XPCCD != "**" /* or catg was entered*/
     || FQ0GM030.XPRCD != "**" /* or type was entered*/
     || FQ0GM030.XGACD != "**" /* or gender was entered*/
     || FQ0GM030.XBCCD != "**") /* or brand was entered*/

      converseLib.validationFailed(35); /* Indicate invalid comb*/
      FQWREC.XXXMODID = "035"; /* Module ID*/
      set FQ0GM030.SY1STNBR cursor, bold; /* Highlight*/
      set FQ0GM030.XGACD bold; /* Highlight*/
      set FQ0GM030.XBCCD bold; /* Highlight*/
      set FQ0GM030.XPRCD bold; /* Highlight*/
      set FQ0GM030.XPCCD bold; /* Highlight*/
      set FQ0GM030.XPLCD bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Both factory and country can not be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FY1FCTYC != "***" /* If factory was entered*/
   && FQ0GM030.XCTCD != "****")  /* and country was entered*/

    converseLib.validationFailed(26); /* Indicate invalid comb*/
    FQWREC.XXXMODID = "035"; /* Module ID*/
    set FQ0GM030.FY1FCTYC cursor, bold; /* Highlight*/
    set FQ0GM030.XCTCD bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, set switch, and return to*/
   /* previous process.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWERF = "N"; /* Clear error flag*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
    return; /* Return to previous process*/
  end


end // end FQ0G035

// Process valid input request
Function FQ0G036()
   /* ------------------------------------------------------------*/
   /* If error present, return to previous process.*/
   /* ------------------------------------------------------------*/
  if (FQ0GW00.FQ0GWERF == "Y")
    return;
  end

   /* ------------------------------------------------------------*/
   /* Update FQWREC.*/
   /* ------------------------------------------------------------*/
  FQWREC.FY1PFYCD = FQ0GM030.FY1FCTYC; /* Factory*/
  FQWREC.SY1STNBR = FQ0GM030.SY1STNBR; /* Style*/
  FQWREC.SY2CLRID = FQ0GM030.SY2CLRID; /* Color*/
  FQWREC.XDMCD = FQ0GM030.XDMCD; /* Dim*/
  FQWREC.YDCCD = FQ0GM030.YDCCD; /* Defect category*/
  FQWREC.FQWBDFCT = FQ0GM030.FQWBDFCT; /* beginning defect code*/
  FQWREC.FQWEDFCT = FQ0GM030.FQWEDFCT; /* ending defect code*/
  FQWREC.FQ1IDBDT = FQ0GM030.FQ0GMBMT; /* beginning po month*/
  FQWREC.FQ1IDXDT = FQ0GM030.FQ0GMEMT; /* ending po month*/
  FQWREC.XDVCD = FQ0GM030.XDVCD; /* division*/
  FQWREC.XCTCD = FQ0GM030.XCTCD; /* country*/
  FQWREC.XPLCD = FQ0GM030.XPLCD; /* product line*/
  FQWREC.XPCCD = FQ0GM030.XPCCD; /* product category*/
  FQWREC.XPRCD = FQ0GM030.XPRCD; /* product type*/
  FQWREC.XBCCD = FQ0GM030.XBCCD; /* brand*/
  FQWREC.XGACD = FQ0GM030.XGACD; /* gender age*/

   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/
  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  TA6REC.TA6INDEX = 1; /* Output array index*/
  FQ0GW00.FQ0GWIXT = 1;

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  if (TA3REC.TA3RGNID == "03") /* if on production system*/
    FQ0G037(); /* format production jcl*/
  else
    FQ0G038(); /* format test jcl*/
  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/
  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/
  FQWREC.XXXMODID = "036"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FQ0GW00.FQ0GMSEL[3] = "*"; /* Indicate function completed*/

    set FQ0GM030 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(1); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/


end // end FQ0G036

// Process valid production jcl
Function FQ0G037()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWFLG = "N";
  FQ0GW99.TARJCL = " ";
  FQ0GW99.FQ0GWTYP = "R";
  FQ0GW99.FQ0GWCNT = 1;

  FQ0GW99.FY1FCTYC = FQ0GM030.FY1FCTYC;
  FQ0GW99.SY1STNBR = FQ0GM030.SY1STNBR;
  FQ0GW99.SY2CLRID = FQ0GM030.SY2CLRID;
  FQ0GW99.XDMCD = FQ0GM030.XDMCD;
  FQ0GW99.YDCCD = FQ0GM030.YDCCD;
  FQ0GW99.FQWBDFCT = FQ0GM030.FQWBDFCT;
  FQ0GW99.FQWEDFCT = FQ0GM030.FQWEDFCT;
  FQ0GW99.FQ0GWBMT = FQZREC.FQZBCYMM;
  FQ0GW99.FQ0GWEMT = FQZREC.FQZECYMM;
  FQ0GW99.XDVCD = FQ0GM030.XDVCD;
  FQ0GW99.XCTCD = FQ0GM030.XCTCD;
  FQ0GW99.XPCCD = FQ0GM030.XPCCD;
  FQ0GW99.XPRCD = FQ0GM030.XPRCD;
  FQ0GW99.XPLCD = FQ0GM030.XPLCD;
  FQ0GW99.XBCCD = FQ0GM030.XBCCD;
  FQ0GW99.XGACD = FQ0GM030.XGACD;

   /* ------------------------------------------------------------*/
   /* If lazer printer, move 1,2,3, or 4, else move d,s,*, or n.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XURDEST == "LOCAL") /* If destination is lazer*/

    if (FQ0GM030.FQ0GMREQ == "*") /* if request is 'both'*/
      FQ0GW99.FQ0GMREQ = "1";
    end

    if (FQ0GM030.FQ0GMREQ == "D") /* if request is 'detail'*/
      FQ0GW99.FQ0GMREQ = "2";
    end

    if (FQ0GM030.FQ0GMREQ == "S") /* if request is 'summary'*/
      FQ0GW99.FQ0GMREQ = "3";
    end

  else

    FQ0GW99.FQ0GMREQ = FQ0GM030.FQ0GMREQ;
  end

   /* ------------------------------------------------------------*/
   /* Load JCL from tables.*/
   /* ------------------------------------------------------------*/
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FQ0GT03.TARTYPE[FQ0GWIXT] == "W")
      if (FQ0GM030.XURDEST == "LOCAL")
        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ11 FORMS=FQ11,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = "RMT00";
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ12 FORMS=FQ12,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = "RMT00";
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
      else
        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ11 FORMS=FQ11,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

        FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ12 FORMS=FQ12,COPIES=";
        FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
        FQ0GW20.FQ0GWOT3 = ",DEST=";
        FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
        TA6REC.TARTYPE[TA6INDEX] = " ";
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
      end
    else

      if (FQ0GT03.TARJCL[FQ0GWIXT] == "===PRINT STEPS===")
        if (FQ0GM030.FQ0GMREQ == "D"
         || FQ0GM030.FQ0GMREQ == "*")
          FQ0G03A();
        end

        if (FQ0GM030.FQ0GMREQ == "S"
         || FQ0GM030.FQ0GMREQ == "*")
          FQ0G03B();
        end
      else
        if (FQ0GT03.TARJCL[FQ0GWIXT] == "===INSERT RUN PARM===")
          TA6REC.TARJCL[TA6INDEX] = FQ0GW99.TARJCL;
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
        else
          if (FQ0GT03.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM1===")

             /* Exclude factory 9999*/

            FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(25,04,CH,NE,C'";
            FQ0GW00.FQ0GWFLG = "Y";
            FQ0GW20.FQ0GWCH4 = "9999";
            FQ0GW20.FQ0GWSF4 = "',AND,";
            FQ0GW20.FQ0GWFL4 = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

             /* check factory*/

            if (FQ0GM030.FY1FCTYC != "***")
              FQ0GW20.FQ0GWPR4 = "                25,04,CH,EQ,C'";
              FQ0GW00.FQ0GWFLG = "Y";
              FQ0GW20.FQ0GWCH4 = FQ0GM030.FY1FCTYC;
              FQ0GW20.FQ0GWSF4 = "',AND,";
              FQ0GW20.FQ0GWFL4 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.SY1STNBR != "******")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH6 = FQ0GM030.SY1STNBR;
              FQ0GW20.FQ0GWSF6 = "',AND,";
              FQ0GW20.FQ0GWFL6 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.SY2CLRID != "***")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH3 = FQ0GM030.SY2CLRID;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XDMCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XDMCD;
              FQ0GW20.FQ0GWSF2 = "',AND,";
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.YDCCD != "***")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(40,03,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR3 = "                40,03,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH3 = FQ0GM030.YDCCD;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.FQWBDFCT != "***"
             && FQ0GM030.FQWEDFCT != "***")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
              end
              FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWBDFCT;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
              FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWEDFCT;
              FQ0GW20.FQ0GWSF3 = "',AND,";
              FQ0GW20.FQ0GWFL3 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            else
              if (FQ0GM030.FQWBDFCT != "***"
               && FQ0GM030.FQWEDFCT == "***")
                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
                end
                FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWBDFCT;
                FQ0GW20.FQ0GWSF3 = "',AND,";
                FQ0GW20.FQ0GWFL3 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              else
                if (FQ0GM030.FQWBDFCT == "***"
                 && FQ0GM030.FQWEDFCT != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,LE,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWEDFCT;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end
              end
            end

            if (FQ0GW00.FQ0GWFLG == "N")
              FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(33,04,BI,GE,C'";
              FQ0GW00.FQ0GWFLG = "Y";
            else
              FQ0GW20.FQ0GWPRD = "                33,04,BI,GE,C'";
            end

            FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
            FQ0GW20.FQ0GWSFD = "',AND,";
            FQ0GW20.FQ0GWFLD = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            FQ0GW20.FQ0GWPRD = "                33,04,BI,LE,C'";
            FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;

            if (FQ0GM030.XDVCD != "**"
             || FQ0GM030.XCTCD != "****"
             || FQ0GM030.XPLCD != "**"
             || FQ0GM030.XPCCD != "**"
             || FQ0GM030.XPRCD != "**"
             || FQ0GM030.XBCCD != "**"
             || FQ0GM030.XGACD != "**")
              FQ0GW20.FQ0GWSFD = "',AND,";
            else
              FQ0GW20.FQ0GWSFD = "')";
            end
            FQ0GW20.FQ0GWFLD = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

            if (FQ0GM030.XDVCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(47,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                47,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XDVCD;
              if (FQ0GM030.XCTCD != "****"
               || FQ0GM030.XPLCD != "**"
               || FQ0GM030.XPCCD != "**"
               || FQ0GM030.XPRCD != "**"
               || FQ0GM030.XBCCD != "**"
               || FQ0GM030.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XCTCD != "****")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(51,04,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR4 = "                51,04,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH4 = FQ0GM030.XCTCD;
              if (FQ0GM030.XPLCD != "**"
               || FQ0GM030.XPCCD != "**"
               || FQ0GM030.XPRCD != "**"
               || FQ0GM030.XBCCD != "**"
               || FQ0GM030.XGACD != "**")
                FQ0GW20.FQ0GWSF4 = "',AND,";
              else
                FQ0GW20.FQ0GWSF4 = "')";
              end
              FQ0GW20.FQ0GWFL4 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XPCCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(61,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                61,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XPCCD;
              if (FQ0GM030.XPLCD != "**"
               || FQ0GM030.XPRCD != "**"
               || FQ0GM030.XBCCD != "**"
               || FQ0GM030.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XPRCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(65,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                65,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XPRCD;
              if (FQ0GM030.XPLCD != "**"
               || FQ0GM030.XBCCD != "**"
               || FQ0GM030.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XPLCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(63,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                63,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XPLCD;
              if (FQ0GM030.XBCCD != "**"
               || FQ0GM030.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XBCCD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(59,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                59,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XBCCD;
              if (FQ0GM030.XGACD != "**")
                FQ0GW20.FQ0GWSF2 = "',AND,";
              else
                FQ0GW20.FQ0GWSF2 = "')";
              end
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

            if (FQ0GM030.XGACD != "**")
              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(67,02,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPR2 = "                67,02,CH,EQ,C'";
              end
              FQ0GW20.FQ0GWCH2 = FQ0GM030.XGACD;
              FQ0GW20.FQ0GWSF2 = "')";
              FQ0GW20.FQ0GWFL2 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            end

          else
            FQ0GW00.FQ0GWFLG = "N";
            if (FQ0GT03.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM2===")

              FQ0GW20.FQ0GWPR9 = "  INCLUDE COND=(29,04,BI,GT,C'";
              FQ0GW00.FQ0GWFLG = "Y";
              FQ0GW20.FQ0GWBI9 = 0;
              FQ0GW20.FQ0GWSF9 = "',AND,";
              FQ0GW20.FQ0GWFL9 = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC9;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

              if (FQ0GM030.FY1FCTYC != "***")
                FQ0GW20.FQ0GWPR4 = "                08,04,CH,EQ,C'";
                FQ0GW00.FQ0GWFLG = "Y";
                FQ0GW20.FQ0GWCH4 = FQ0GM030.FY1FCTYC;
                FQ0GW20.FQ0GWSF4 = "',AND,";
                FQ0GW20.FQ0GWFL4 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              end

              if (FQ0GM030.SY1STNBR != "******")
                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
                end
                FQ0GW20.FQ0GWCH6 = FQ0GM030.SY1STNBR;
                FQ0GW20.FQ0GWSF6 = "',AND,";
                FQ0GW20.FQ0GWFL6 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              end

              if (FQ0GM030.SY2CLRID != "***")
                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
                end
                FQ0GW20.FQ0GWCH3 = FQ0GM030.SY2CLRID;
                FQ0GW20.FQ0GWSF3 = "',AND,";
                FQ0GW20.FQ0GWFL3 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              end

              if (FQ0GM030.XDMCD != "**")
                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
                end
                FQ0GW20.FQ0GWCH2 = FQ0GM030.XDMCD;
                FQ0GW20.FQ0GWSF2 = "',AND,";
                FQ0GW20.FQ0GWFL2 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              end

              if (FQ0GW00.FQ0GWFLG == "N")
                FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(25,04,BI,GE,C'";
                FQ0GW00.FQ0GWFLG = "Y";
              else
                FQ0GW20.FQ0GWPRD = "                25,04,BI,GE,C'";
              end

              FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
              FQ0GW20.FQ0GWSFD = "',AND,";
              FQ0GW20.FQ0GWFLD = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              FQ0GW20.FQ0GWPRD = "                25,04,BI,LE,C'";
              FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;

              if (FQ0GM030.XDVCD != "**")
                FQ0GW20.FQ0GWSFD = "',AND,";
              else
                FQ0GW20.FQ0GWSFD = "')";
              end
              FQ0GW20.FQ0GWFLD = " ";
              TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

              if (FQ0GM030.XDVCD != "**")
                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(01,02,CH,EQ,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPR2 = "                01,02,CH,EQ,C'";
                end
                FQ0GW20.FQ0GWCH2 = FQ0GM030.XDVCD;
                FQ0GW20.FQ0GWSF2 = "')";
                FQ0GW20.FQ0GWFL2 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
              end

            else

            /* ------------------------------------------------------------*/
              /* Format the Job Control Language statement from the table.*/
            /* ------------------------------------------------------------*/
              TA6REC.TARJCL[TA6INDEX] = FQ0GT03.TARJCL[FQ0GWIXT];
                                   /* JCL*/
              TA6REC.TARTYPE[TA6INDEX] = FQ0GT03.TARTYPE[FQ0GWIXT];
                                   /* Type*/
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

            end
          end
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (FQ0GT03.TARJCL[FQ0GWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else

      FQ0GW00.FQ0GWIXT = FQ0GW00.FQ0GWIXT + 1; /* Input table index*/
    end

  end


end // end FQ0G037

// Process valid test jcl
Function FQ0G038()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWFLG = "N";
  FQ0GW99.TARJCL = " ";
  FQ0GW99.FQ0GWTYP = "R";
  FQ0GW99.FQ0GWCNT = 1;

  FQ0GW99.FY1FCTYC = FQ0GM030.FY1FCTYC;
  FQ0GW99.SY1STNBR = FQ0GM030.SY1STNBR;
  FQ0GW99.SY2CLRID = FQ0GM030.SY2CLRID;
  FQ0GW99.XDMCD = FQ0GM030.XDMCD;
  FQ0GW99.YDCCD = FQ0GM030.YDCCD;
  FQ0GW99.FQWBDFCT = FQ0GM030.FQWBDFCT;
  FQ0GW99.FQWEDFCT = FQ0GM030.FQWEDFCT;
  FQ0GW99.FQ0GWBMT = FQZREC.FQZBCYMM;
  FQ0GW99.FQ0GWEMT = FQZREC.FQZECYMM;
  FQ0GW99.XDVCD = FQ0GM030.XDVCD;
  FQ0GW99.XCTCD = FQ0GM030.XCTCD;
  FQ0GW99.XPCCD = FQ0GM030.XPCCD;
  FQ0GW99.XPRCD = FQ0GM030.XPRCD;
  FQ0GW99.XPLCD = FQ0GM030.XPLCD;
  FQ0GW99.XBCCD = FQ0GM030.XBCCD;
  FQ0GW99.XGACD = FQ0GM030.XGACD;

   /* ------------------------------------------------------------*/
   /* If lazer printer, move 1,2,3, or 4, else move d,s,*, or n.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XURDEST == "LOCAL") /* If destination is lazer*/

    if (FQ0GM030.FQ0GMREQ == "*") /* if request is 'both'*/
      FQ0GW99.FQ0GMREQ = "1";
    end

    if (FQ0GM030.FQ0GMREQ == "D") /* if request is 'detail'*/
      FQ0GW99.FQ0GMREQ = "2";
    end

    if (FQ0GM030.FQ0GMREQ == "S") /* if request is 'summary'*/
      FQ0GW99.FQ0GMREQ = "3";
    end

  else

    FQ0GW99.FQ0GMREQ = FQ0GM030.FQ0GMREQ;
  end

   /* ------------------------------------------------------------*/
   /* Load JCL from tables.*/
   /* ------------------------------------------------------------*/
  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FQ0GT13.TARTYPE[FQ0GWIXT] == "1")
      FQ0GW20.FQ0GWJN1 = "//";
      FQ0GW20.FQ0GWJN2 = TA6REC.XURUSRID;
      FQ0GW20.FQ0GWJN3 = "A";
      FQ0GW20.FQ0GWJN4 = "JOB (DP,MUR2),'FCTY PROD/DEFECT RPT',";
      TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWCRD;
      TA6REC.TARTYPE[TA6INDEX] = "1";
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
    else

      if (FQ0GT13.TARTYPE[FQ0GWIXT] == "W")
        if (FQ0GM030.XURDEST == "LOCAL")
          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ11 FORMS=FQ11,COPIES=,";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = "RMT00";
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ12 FORMS=FQ12,COPIES=,";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = "RMT00";
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
        else
          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ11 FORMS=FQ11,COPIES=,";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;

          FQ0GW20.FQ0GWOT1 = "/*OUTPUT  FQ12 FORMS=FQ12,COPIES=,";
          FQ0GW20.FQ0GWOT2 = TA6REC.XURCOPY;
          FQ0GW20.FQ0GWOT3 = ",DEST=";
          FQ0GW20.FQ0GWOT4 = TA6REC.XURDEST;
          TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWOUT;
          TA6REC.TARTYPE[TA6INDEX] = " ";
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
        end
      else

        if (FQ0GT13.TARJCL[FQ0GWIXT] == "===PRINT STEPS===")
          if (FQ0GM030.FQ0GMREQ == "D"
           || FQ0GM030.FQ0GMREQ == "*")
            FQ0G03C();
          end

          if (FQ0GM030.FQ0GMREQ == "S"
           || FQ0GM030.FQ0GMREQ == "*")
            FQ0G03D();
          end
        else

          if (FQ0GT13.TARJCL[FQ0GWIXT] == "===NOTIFY USER ID===")
            FQ0GW20.FQ0GWPR1 = "//             NOTIFY=";
            FQ0GW20.FQ0GWUID = TA6REC.XURUSRID;
            FQ0GW20.FQ0GWFL1 = " ";
            TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC1;
            TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
          else

            if (FQ0GT13.TARJCL[FQ0GWIXT] == "===INSERT RUN PARM===")
              TA6REC.TARJCL[TA6INDEX] = FQ0GW99.TARJCL;
              TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
            else
              if (FQ0GT13.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM1===")

             /* exclude factory 9999*/

                FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(25,04,CH,NE,C'";
                FQ0GW00.FQ0GWFLG = "Y";
                FQ0GW20.FQ0GWCH4 = "9999";
                FQ0GW20.FQ0GWSF4 = "',AND,";
                FQ0GW20.FQ0GWFL4 = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

             /* check factory*/

                if (FQ0GM030.FY1FCTYC != "***")
                  FQ0GW20.FQ0GWPR4 = "                25,04,CH,EQ,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                  FQ0GW20.FQ0GWCH4 = FQ0GM030.FY1FCTYC;
                  FQ0GW20.FQ0GWSF4 = "',AND,";
                  FQ0GW20.FQ0GWFL4 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.SY1STNBR != "******")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH6 = FQ0GM030.SY1STNBR;
                  FQ0GW20.FQ0GWSF6 = "',AND,";
                  FQ0GW20.FQ0GWFL6 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.SY2CLRID != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM030.SY2CLRID;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XDMCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XDMCD;
                  FQ0GW20.FQ0GWSF2 = "',AND,";
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.YDCCD != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(40,03,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                40,03,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM030.YDCCD;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.FQWBDFCT != "***"
                 && FQ0GM030.FQWEDFCT != "***")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
                  end
                  FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWBDFCT;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
                  FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWEDFCT;
                  FQ0GW20.FQ0GWSF3 = "',AND,";
                  FQ0GW20.FQ0GWFL3 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                else
                  if (FQ0GM030.FQWBDFCT != "***"
                   && FQ0GM030.FQWEDFCT == "***")
                    if (FQ0GW00.FQ0GWFLG == "N")
                      FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
                      FQ0GW00.FQ0GWFLG = "Y";
                    else
                      FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
                    end
                    FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWBDFCT;
                    FQ0GW20.FQ0GWSF3 = "',AND,";
                    FQ0GW20.FQ0GWFL3 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  else
                    if (FQ0GM030.FQWBDFCT == "***"
                     && FQ0GM030.FQWEDFCT != "***")
                      if (FQ0GW00.FQ0GWFLG == "N")
                        FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,LE,C'";
                        FQ0GW00.FQ0GWFLG = "Y";
                      else
                        FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
                      end
                      FQ0GW20.FQ0GWCH3 = FQ0GM030.FQWEDFCT;
                      FQ0GW20.FQ0GWSF3 = "',AND,";
                      FQ0GW20.FQ0GWFL3 = " ";
                      TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                    end
                  end
                end

                if (FQ0GW00.FQ0GWFLG == "N")
                  FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(33,04,BI,GE,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                else
                  FQ0GW20.FQ0GWPRD = "                33,04,BI,GE,C'";
                end

                FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
                FQ0GW20.FQ0GWSFD = "',AND,";
                FQ0GW20.FQ0GWFLD = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
                FQ0GW20.FQ0GWPRD = "                33,04,BI,LE,C'";
                FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;

                if (FQ0GM030.XDVCD != "**"
                 || FQ0GM030.XCTCD != "****"
                 || FQ0GM030.XPLCD != "**"
                 || FQ0GM030.XPCCD != "**"
                 || FQ0GM030.XPRCD != "**"
                 || FQ0GM030.XBCCD != "**"
                 || FQ0GM030.XGACD != "**")
                  FQ0GW20.FQ0GWSFD = "',AND,";
                else
                  FQ0GW20.FQ0GWSFD = "')";
                end
                FQ0GW20.FQ0GWFLD = " ";
                TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
                TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

                if (FQ0GM030.XDVCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(47,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                47,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XDVCD;
                  if (FQ0GM030.XCTCD != "****"
                   || FQ0GM030.XPLCD != "**"
                   || FQ0GM030.XPCCD != "**"
                   || FQ0GM030.XPRCD != "**"
                   || FQ0GM030.XBCCD != "**"
                   || FQ0GM030.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XCTCD != "****")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(51,04,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR4 = "                51,04,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH4 = FQ0GM030.XCTCD;
                  if (FQ0GM030.XPLCD != "**"
                   || FQ0GM030.XPCCD != "**"
                   || FQ0GM030.XPRCD != "**"
                   || FQ0GM030.XBCCD != "**"
                   || FQ0GM030.XGACD != "**")
                    FQ0GW20.FQ0GWSF4 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF4 = "')";
                  end
                  FQ0GW20.FQ0GWFL4 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XPCCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(61,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                61,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XPCCD;
                  if (FQ0GM030.XPLCD != "**"
                   || FQ0GM030.XPRCD != "**"
                   || FQ0GM030.XBCCD != "**"
                   || FQ0GM030.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XPRCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(65,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                65,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XPRCD;
                  if (FQ0GM030.XPLCD != "**"
                   || FQ0GM030.XBCCD != "**"
                   || FQ0GM030.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XPLCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(63,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                63,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XPLCD;
                  if (FQ0GM030.XBCCD != "**"
                   || FQ0GM030.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XBCCD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(59,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                59,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XBCCD;
                  if (FQ0GM030.XGACD != "**")
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                  else
                    FQ0GW20.FQ0GWSF2 = "')";
                  end
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

                if (FQ0GM030.XGACD != "**")
                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(67,02,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPR2 = "                67,02,CH,EQ,C'";
                  end
                  FQ0GW20.FQ0GWCH2 = FQ0GM030.XGACD;
                  FQ0GW20.FQ0GWSF2 = "')";
                  FQ0GW20.FQ0GWFL2 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                end

              else
                FQ0GW00.FQ0GWFLG = "N";
                if (FQ0GT13.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM2===")

                  FQ0GW20.FQ0GWPR9 = "  INCLUDE COND=(29,04,BI,GT,C'";
                  FQ0GW00.FQ0GWFLG = "Y";
                  FQ0GW20.FQ0GWBI9 = 0;
                  FQ0GW20.FQ0GWSF9 = "',AND,";
                  FQ0GW20.FQ0GWFL9 = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC9;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                 /* Output array index*/

                  if (FQ0GM030.FY1FCTYC != "***")
                    FQ0GW20.FQ0GWPR4 = "                08,04,CH,EQ,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                    FQ0GW20.FQ0GWCH4 = FQ0GM030.FY1FCTYC;
                    FQ0GW20.FQ0GWSF4 = "',AND,";
                    FQ0GW20.FQ0GWFL4 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  end

                  if (FQ0GM030.SY1STNBR != "******")
                    if (FQ0GW00.FQ0GWFLG == "N")
                      FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
                      FQ0GW00.FQ0GWFLG = "Y";
                    else
                      FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
                    end
                    FQ0GW20.FQ0GWCH6 = FQ0GM030.SY1STNBR;
                    FQ0GW20.FQ0GWSF6 = "',AND,";
                    FQ0GW20.FQ0GWFL6 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  end

                  if (FQ0GM030.SY2CLRID != "***")
                    if (FQ0GW00.FQ0GWFLG == "N")
                      FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
                      FQ0GW00.FQ0GWFLG = "Y";
                    else
                      FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
                    end
                    FQ0GW20.FQ0GWCH3 = FQ0GM030.SY2CLRID;
                    FQ0GW20.FQ0GWSF3 = "',AND,";
                    FQ0GW20.FQ0GWFL3 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  end

                  if (FQ0GM030.XDMCD != "**")
                    if (FQ0GW00.FQ0GWFLG == "N")
                      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
                      FQ0GW00.FQ0GWFLG = "Y";
                    else
                      FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
                    end
                    FQ0GW20.FQ0GWCH2 = FQ0GM030.XDMCD;
                    FQ0GW20.FQ0GWSF2 = "',AND,";
                    FQ0GW20.FQ0GWFL2 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  end

                  if (FQ0GW00.FQ0GWFLG == "N")
                    FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(25,04,BI,GE,C'";
                    FQ0GW00.FQ0GWFLG = "Y";
                  else
                    FQ0GW20.FQ0GWPRD = "                25,04,BI,GE,C'";
                  end

                  FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
                  FQ0GW20.FQ0GWSFD = "',AND,";
                  FQ0GW20.FQ0GWFLD = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  FQ0GW20.FQ0GWPRD = "                25,04,BI,LE,C'";
                  FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;

                  if (FQ0GM030.XDVCD != "**")
                    FQ0GW20.FQ0GWSFD = "',AND,";
                  else
                    FQ0GW20.FQ0GWSFD = "')";
                  end
                  FQ0GW20.FQ0GWFLD = " ";
                  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/

                  if (FQ0GM030.XDVCD != "**")
                    if (FQ0GW00.FQ0GWFLG == "N")
                      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(01,02,CH,EQ,C'";
                      FQ0GW00.FQ0GWFLG = "Y";
                    else
                      FQ0GW20.FQ0GWPR2 = "                01,02,CH,EQ,C'";
                    end
                    FQ0GW20.FQ0GWCH2 = FQ0GM030.XDVCD;
                    FQ0GW20.FQ0GWSF2 = "')";
                    FQ0GW20.FQ0GWFL2 = " ";
                    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
                    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
                  end


                else


            /* ------------------------------------------------------------*/
                                  /* Format the Job Control Language*/
                                  /* statement from the table.*/
            /* ------------------------------------------------------------*/

                  TA6REC.TARJCL[TA6INDEX] = FQ0GT13.TARJCL[FQ0GWIXT];
                                   /* JCL*/
                  TA6REC.TARTYPE[TA6INDEX] = FQ0GT13.TARTYPE[FQ0GWIXT];
                                   /* Type*/
                  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/

                end
              end
            end
          end
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (FQ0GT13.TARJCL[FQ0GWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FQ0GW00.FQ0GWIXT = FQ0GW00.FQ0GWIXT + 1; /* Input table index*/

    end

  end


end // end FQ0G038

// Process valid prod request
Function FQ0G03A()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT3A.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM030.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(N,,FQ11)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(P,,FQ11)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT3A.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT3A.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT3A.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G03A

// Process valid prod request
Function FQ0G03B()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT3B.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM030.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(N,,FQ12)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(P,,FQ12)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT3B.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT3B.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT3B.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G03B

// Process valid test request
Function FQ0G03C()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT3C.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM030.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(2,,FQ11)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(T,,FQ11)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT3C.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT3C.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT3C.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G03C

// Process valid test request
Function FQ0G03D()
  FQ0GW00.FQ0GWIDX = 1;

  while (FQ0GW00.FQ0GWIDX > 0) /* ; Until end of table*/
    if (FQ0GT3D.TARTYPE[FQ0GWIDX] == "K")
      if (FQ0GM030.XURDEST == "LOCAL") /* destination lazer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(2,,FQ12)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      else /* destination remote printer*/
        TA6REC.TARJCL[TA6INDEX] = "//        FILE01='(T,,FQ12)'";
        TA6REC.TARTYPE[TA6INDEX] = " ";
      end
    else
      TA6REC.TARJCL[TA6INDEX] = FQ0GT3D.TARJCL[FQ0GWIDX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FQ0GT3D.TARTYPE[FQ0GWIDX]; /* Type*/
    end
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW00.FQ0GWIDX = FQ0GW00.FQ0GWIDX + 1; /* Input table index*/
    if (FQ0GT3D.TARJCL[FQ0GWIDX] == "//*")
      FQ0GW00.FQ0GWIDX = 0; /* force end of file*/
    end
  end

end // end FQ0G03D

// Product Category
Function FQ0G080()
   /* ------------------------------------------------------------*/
   /* This is the main process used to generate the Product Categ*/
   /* Processing always returns to the*/
   /* top of this process and falls through subordinate processes*/
   /* until an error is found or a valid request is processed.*/
   /* Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FQ0G081(); /* Obtain the data to display*/

  FQ0G082(); /* Format and display the map*/

  FQ0G083(); /* Check attention identifier*/

  FQ0G084(); /* Reset fields to normal intensity*/

  FQ0G085(); /* Verify the data that was entered*/

  FQ0G086(); /* Process valid input request*/


end // end FQ0G080

// Obtain data to display
Function FQ0G081()
   /* ------------------------------------------------------------*/
   /* Obtain user-entered parameters, if any, to display on scren*/
   /* ------------------------------------------------------------*/
  if (FQ0GW00.FQ0GWRD8 != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* Or an error was found*/

    return;
  else
    /* ------------------------------------------------------------*/
     /* Clear the map and set switch.*/
    /* ------------------------------------------------------------*/
    set FQ0GM080 initial;
    FQ0GW00.FQ0GWRD8 = "N"; /* Data was not requested*/

    /* ------------------------------------------------------------*/
     /* Factory.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.FY1PFYCD != "    ") /* Factory code*/
      FQ0GM080.FY1FCTYC = FQWREC.FY1PFYCD;
    else
      FQ0GM080.FY1FCTYC = "****";
    end

    /* ------------------------------------------------------------*/
     /* Style, color, and dimension.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.SY1STNBR != "      ") /* Style number*/
      FQ0GM080.SY1STNBR = FQWREC.SY1STNBR;
    else
      FQ0GM080.SY1STNBR = "******";
    end

    if (FQWREC.SY2CLRID != "   ") /* Color*/
      FQ0GM080.SY2CLRID = FQWREC.SY2CLRID;
    else
      FQ0GM080.SY2CLRID = "***";
    end

    if (FQWREC.XDMCD != "  ") /* Dimension*/
      FQ0GM080.XDMCD = FQWREC.XDMCD;
    else
      FQ0GM080.XDMCD = "00";
    end

    /* ------------------------------------------------------------*/
     /* Defect category and defect range.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.YDCCD != "   ") /* Defect category*/
      FQ0GM080.YDCCD = FQWREC.YDCCD;
    else
      FQ0GM080.YDCCD = "***";
    end

    if (FQWREC.FQWBDFCT != "   ") /* Beginning defective code*/
      FQ0GM080.FQWBDFCT = FQWREC.FQWBDFCT;
    else
      FQ0GM080.FQWBDFCT = "***";
    end

    if (FQWREC.FQWEDFCT != "   ") /* Ending defective code*/
      FQ0GM080.FQWEDFCT = FQWREC.FQWEDFCT;
    else
      FQ0GM080.FQWEDFCT = "***";
    end

    /* ------------------------------------------------------------*/
     /* PO month range.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.FQ1IDBDT != 0) /* Beginning po month date*/
      FQ0GW00.FQ0GWN09 = FQWREC.FQ1IDBDT;
      FQ0GM080.FQ0GMBMT = FQ0GW00.FQ0GWYMM;
    end

    if (FQWREC.FQ1IDXDT != 0) /* Ending po month date*/
      FQ0GW00.FQ0GWN09 = FQWREC.FQ1IDXDT;
      FQ0GM080.FQ0GMEMT = FQ0GW00.FQ0GWYMM;
    end

    if (FQWREC.FQ1IDBDT == 0 /* Beginning po month date*/
     && FQWREC.FQ1IDXDT == 0) /* Ending po month date*/
      set FQZREC empty;
      FQZREC.FQZCHK24 = "N";
      FQZREC.FQZNUMYR = 3;

      XSFQS05();

      FQ0GW00.FQ0GWYMM = FQZREC.FQZBCYMM;
      FQ0GM080.FQ0GMBMT = FQ0GW00.FQ0GWYMM;

      FQ0GW00.FQ0GWYMM = FQZREC.FQZECYMM;
      FQ0GM080.FQ0GMEMT = FQ0GW00.FQ0GWYMM;
    end

    /* ------------------------------------------------------------*/
     /* Division and country.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XDVCD == "  ") /* Division code*/
      FQ0GM080.XDVCD = "**"; /* Default to wildcard*/
    else
      FQ0GM080.XDVCD = FQWREC.XDVCD; /* Division code*/
    end

    if (FQWREC.XCTCD == "  ") /* Country code*/
      FQ0GM080.XCTCD = "****"; /* Default to wildcard*/
    else
      FQ0GM080.XCTCD = FQWREC.XCTCD; /* Country code*/
    end

    /* ------------------------------------------------------------*/
     /* Category, line, and type.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XPCCD == "  ") /* Category code*/
      FQ0GM080.XPCCD = "**"; /* Default to wildcard*/
    else
      FQ0GM080.XPCCD = FQWREC.XPCCD; /* Category code*/
    end

    if (FQWREC.XPRCD == "  ") /* Type code*/
      FQ0GM080.XPRCD = "**"; /* Default to wildcard*/
    else
      FQ0GM080.XPRCD = FQWREC.XPRCD; /* Type code*/
    end

    if (FQWREC.XPLCD == "  ") /* Line code*/
      FQ0GM080.XPLCD = "**"; /* Default to wildcard*/
    else
      FQ0GM080.XPLCD = FQWREC.XPLCD; /* Line code*/
    end

    /* ------------------------------------------------------------*/
     /* Brand and gender code.*/
    /* ------------------------------------------------------------*/
    if (FQWREC.XBCCD == "  ") /* Brand code*/
      FQ0GM080.XBCCD = "**"; /* Default to wildcard*/
    else
      FQ0GM080.XBCCD = FQWREC.XBCCD; /* Brand code*/
    end

    if (FQWREC.XGACD == "  ") /* Gender code*/
      FQ0GM080.XGACD = "**"; /* Default to wildcard*/
    else
      FQ0GM080.XGACD = FQWREC.XGACD; /* Gender code*/
    end

  end


end // end FQ0G081

// Format and display the map
Function FQ0G082()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    FQWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/
  else
    FQ0GM080.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date.*/
   /* ------------------------------------------------------------*/

  FQ0GM080.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FQWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FQWREC.XXXMSGNO != 0) /* Message to display*/

      if (FQWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FQWREC.XXXMSGNO);
      end /* Message number*/
    else
      FQ0GM080.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FQ0GM080.XXXMODID = FQWREC.XXXMODID; /* Module identification*/

    set FQ0GM080 alarm; /* Indicate sound alarm*/

  end

  converse FQ0GM080 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields.*/
   /* ------------------------------------------------------------*/

  FQWREC.XXXMSGNO = 0; /* Message number*/
  FQWREC.XXXMODID = " "; /* Module identification*/
  COMMAREA.CAMSG = " "; /* Message text*/


end // end FQ0G082

// Check attention identifier
Function FQ0G083()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, indicate selection cancelled,*/
   /* clear the map fields and exit to display the next map.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FQ0GW00.FQ0GMSEL[8] = "C"; /* Indicate selection cancelled*/

    set FQ0GM080 initial; /* M080 input/output*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If EXIT was requested, indicate exit to the selection menu.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    FQ0GW00.FQ0GMSEL[8] = " "; /* Indicate nothing happened*/
    COMMAREA.CAMSG = "NO ACTION TAKEN ON PREVIOUS SCREEN";

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If MSTR MN or FQ-MN requested, exit to the selected menu.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey is pf4 /* PF4 was pressed*/
   || converseVar.eventKey is pf5) /* PF5 was pressed*/

    FQWREC.FQ1IDBDT = 0; /* beginning po month*/
    FQWREC.FQ1IDXDT = 0; /* ending po month*/

    XSFQS01();

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/
  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FQWREC.XXXMODID = "083"; /* Module identification*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end FQ0G083

// Reset highlighted fields
Function FQ0G084()
   /* ------------------------------------------------------------*/
   /* If no pop-up windows were requested,*/
            /* return to previous process.*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XDMCD == "?"    /* dimension code*/
   || FQ0GM080.YDCCD == "?"    /* defective category*/
   || FQ0GM080.FQWBDFCT == "?" /* beginning defect code*/
   || FQ0GM080.FQWEDFCT == "?" /* ending defect code*/
   || FQ0GM080.XDVCD == "?"    /* division code*/
   || FQ0GM080.XCTCD == "?"    /* country code*/
   || FQ0GM080.XPLCD == "?"    /* product line code*/
   || FQ0GM080.XPCCD == "?"    /* product category*/
   || FQ0GM080.XPRCD == "?"    /* product type*/
   || FQ0GM080.XBCCD == "?"    /* brand*/
   || FQ0GM080.XGACD == "?")   /* gender age*/

    if (converseVar.eventKey not enter) /* ENTER was not pressed*/

      FQWREC.XXXMODID = "084"; /* Module identification*/
      converseLib.validationFailed(4); /* Indicate PF key not valid*/

      exit stack; /* Exit to display map*/

    end

  else

    /* ------------------------------------------------------------*/
     /* Reset field attributes to DEFINED intensity.*/
    /* ------------------------------------------------------------*/
    set FQ0GM080.FY1FCTYC initialAttributes; /* factory code*/
    set FQ0GM080.SY1STNBR initialAttributes; /* style*/
    set FQ0GM080.SY2CLRID initialAttributes; /* color*/
    set FQ0GM080.XDMCD initialAttributes; /* dimension*/
    set FQ0GM080.YDCCD initialAttributes; /* defective category*/
    set FQ0GM080.FQWBDFCT initialAttributes; /* beginning defect code*/
    set FQ0GM080.FQWEDFCT initialAttributes; /* ending defect code*/
    set FQ0GM080.FQ0GMBMT initialAttributes; /* beginning po month*/
    set FQ0GM080.FQ0GMEMT initialAttributes; /* ending po month*/
    set FQ0GM080.XDVCD initialAttributes; /* division*/
    set FQ0GM080.XCTCD initialAttributes; /* country*/
    set FQ0GM080.XPLCD initialAttributes; /* product line*/
    set FQ0GM080.XPCCD initialAttributes; /* product category*/
    set FQ0GM080.XPRCD initialAttributes; /* product type*/
    set FQ0GM080.XBCCD initialAttributes; /* brand*/
    set FQ0GM080.XGACD initialAttributes; /* gender age*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of dimension codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XDMCD == "?") /* dimension code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DIMENSION CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDM01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM080.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM080.YDCCD cursor; /* Establish cursor position*/
      set FQ0GM080.XDMCD initialAttributes;
    else

      converseLib.validationFailed(43);
      set FQ0GM080.XDMCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of defective category codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.YDCCD == "?") /* defective category code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECTIVE CATEGORY CODE "; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM080.YDCCD = YDCTBL.YDCCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM080.FQWBDFCT cursor; /* Establish cursor position*/
      set FQ0GM080.YDCCD initialAttributes;
    else

      converseLib.validationFailed(43);
      set FQ0GM080.YDCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of defect codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.FQWBDFCT == "?") /* beginning defect code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CODE "; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDF01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM080.FQWBDFCT = YDFTBL.YDFCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM080.FQWEDFCT cursor; /* Establish cursor position*/
      set FQ0GM080.FQWBDFCT initialAttributes;
    else

      converseLib.validationFailed(43);
      set FQ0GM080.FQWBDFCT cursor, bold; /* Establish cursor position*/
    end

  end

  if (FQ0GM080.FQWEDFCT == "?") /* Ending defect code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DEFECT CODE "; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPYDF01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* Selection made*/
      FQ0GM080.FQWEDFCT = YDFTBL.YDFCD[XX0XWPIX]; /* Select cd*/
      set FQ0GM080.FQ0GMBMT cursor; /* Establish cursor position*/
      set FQ0GM080.FQWEDFCT initialAttributes;
    else

      converseLib.validationFailed(43);
      set FQ0GM080.FQWEDFCT cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of division codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XDVCD == "?") /* division code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "DIVISION CODE "; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXDV01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* selection made*/

      FQ0GM080.XDVCD = XDVTBL.XDVCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM080.XCTCD cursor; /* Establish cursor position*/
      set FQ0GM080.XDVCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XDVCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of country codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XCTCD == "?") /* country code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "COUNTRY CODE "; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXCT01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM080.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM080.XPCCD cursor; /* Establish cursor position*/
      set FQ0GM080.XCTCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XCTCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product type codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XPRCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD TYPE CODE"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPR01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM080.XPRCD = XPRTBL.XPRCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM080.XPLCD cursor; /* Establish cursor position*/
      set FQ0GM080.XPRCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XPRCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product line codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XPLCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD LINE CODE"; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPL01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM080.XPLCD = XPLTBL.XPLCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM080.XBCCD cursor; /* Establish cursor position*/
      set FQ0GM080.XPLCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XPLCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of product categories*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XPCCD == "?") /* product line*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "PROD CATEGORY "; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXPC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM080.XPCCD = XPCTBL.XPCCD[XX0XWPIX]; /* Selected code*/
      set FQ0GM080.XPRCD cursor; /* Establish cursor position*/
      set FQ0GM080.XPCCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XPCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of brand codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XBCCD == "?") /* brand code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "BRAND CODE"; /* Heading*/

    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXBC01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM080.XBCCD = XBCTBL.XBCCD[XX0XWPIX];
      set FQ0GM080.XGACD cursor; /* Establish cursor position*/
      set FQ0GM080.XBCCD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XBCCD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* If requested, display the list of gender age codes*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.XGACD == "?") /* gender age code*/

    XPXX001(); /* window initialization*/
    XX0XW02.XX0XWHDR = "GENDER AGE"; /* Heading*/

    XX0XW02.XGPCD = FQWREC.XGPCD;
    while (XX0XW02.XX0XWEND == "N") /* Until end of request*/
      XPXGA01(); /* Display the list*/
    end

    if (XX0XW02.XX0XWPIX > 0) /* No selection made*/

      FQ0GM080.XGACD = XGATBL.XGACD[XX0XWPIX];
      set FQ0GM080.XGACD cursor; /* Establish cursor position*/
      set FQ0GM080.XGACD initialAttributes;

    else

      converseLib.validationFailed(43);
      set FQ0GM080.XGACD cursor, bold; /* Establish cursor position*/
    end

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();
   /* Clear screen before display*/

  FQWREC.XXXMODID = "084"; /* Module identification*/
  if (converseVar.validationMsgNum == 0)
    converseLib.validationFailed(25); /* Continue*/
  end

  exit stack; /* Exit to display map*/


end // end FQ0G084

// Verify the entered data
Function FQ0G085()
   /* ------------------------------------------------------------*/
   /* Set defaults for all fields.*/
   /* ------------------------------------------------------------*/
  FQ0GS10(); /* Set defaults*/

   /* ------------------------------------------------------------*/
   /* Validate gender age code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XGACD != "**") /* If gender age not wildcarded*/
    if (FQ0GM080.XGACD in XGATBL.XGACD /* If gender in table*/
     && XGATBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(42); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XGACD cursor, bold; /* Highlight field*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate brand.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XBCCD != "**") /* If brand not wildcarded*/
    if (FQ0GM080.XBCCD in XBCTBL.XBCCD /* If brand in table*/
     && XBCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(41); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XBCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* validate product line.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XPLCD != "**") /* If line not wildcarded*/

    XPLREC.XPLCD = FQ0GM080.XPLCD; /* Format key*/
    XPLREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (XPLREC.XPLKEY in XPLTBL.XPLKEY /* If line in table*/
     && XPLTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(40); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XPLCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate product type.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XPRCD != "**") /* If type not wildcarded*/
    if (FQ0GM080.XPRCD in XPRTBL.XPRCD /* If type in table*/
     && XPRTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      converseLib.validationFailed(39); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XPRCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate product category.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XPCCD != "**") /* If line not wildcarded*/

    XPCREC.XPCCD = FQ0GM080.XPCCD; /* Format key*/
    XPCREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (XPCREC.XPCKEY in XPCTBL.XPCKEY /* If cat in table*/
     && XPCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(38); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XPCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate country code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XCTCD != "****") /* If country not wildcarded*/
    if (FQ0GM080.XCTCD in XCTTBL.XCTCD /* If country in table*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(37); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XCTCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate division.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XDVCD != "**") /* If division not wildcarded*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (FQ0GM080.XDVCD in XDVTBL.XDVCD /* If division in table*/
     && XDVTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(31); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XDVCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate PO month range.*/
   /* ------------------------------------------------------------*/
  set FQZREC empty; /* Clear date edit record*/

  FQZREC.FQZBEGRG = FQ0GM080.FQ0GMBMT; /* Beg date*/
  FQZREC.FQZENDRG = FQ0GM080.FQ0GMEMT; /* End date*/

  FQZREC.FQZCHK24 = "N"; /* No individual months req*/
  FQZREC.FQZNUMYR = 5; /* No of years requested*/

  XSFQS05(); /* Perform date edit routine*/

   /* ------------------------------------------------------------*/
   /* Check return codes for ending date.*/
   /* ------------------------------------------------------------*/
  if (FQZREC.FQZENDRC == 0) /* end date was valid*/
    FQ0GM080.FQ0GMEMT = FQZREC.FQZENDRG; /* End date*/

  else
    FQWREC.XXXMODID = "085"; /* Module identification*/
    set FQ0GM080.FQ0GMEMT cursor, bold; /* Highlight*/

    if (FQZREC.FQZENDRC == "1") /* Invalid end date*/
      converseLib.validationFailed(34); /* Invalid date message*/
    else /* ; Date out of range*/
      set FQ0GM080.FQ0GMBMT cursor, bold; /* Highlight*/
      converseLib.validationFailed(27); /* Date out of range message*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Check return codes for beginning date.*/
   /* ------------------------------------------------------------*/
  if (FQZREC.FQZBEGRC == 0) /* Beg date was valid*/
    FQ0GM080.FQ0GMBMT = FQZREC.FQZBEGRG; /* Begin date*/

  else
    FQWREC.XXXMODID = "085"; /* Module identification*/
    set FQ0GM080.FQ0GMBMT cursor, bold; /* Highlight*/

    if (FQZREC.FQZBEGRC == "1") /* If return code EQ '1'*/
      converseLib.validationFailed(34); /* Indicate date is invalid*/
    else
      converseLib.validationFailed(27); /* Indicate invalid range*/
      set FQ0GM080.FQ0GMEMT bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate ending defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FQWEDFCT != "***") /* If defect not wildcarded*/

    YDFREC.YDFCD = FQ0GM080.FQWEDFCT; /* Format key*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDFREC.YDFKEY in YDFTBL.YDFKEY /* If def in table*/
     && YDFTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(32); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.FQWEDFCT cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate beginning defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FQWBDFCT != "***") /* If defect not wildcarded*/

    YDFREC.YDFCD = FQ0GM080.FQWBDFCT; /* Format key*/
    YDFREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDFREC.YDFKEY in YDFTBL.YDFKEY /* If def in table*/
     && YDFTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(32); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.FQWBDFCT cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Beginning defect range cannot be greater than the ending.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FQWBDFCT > FQ0GM080.FQWEDFCT)

    converseLib.validationFailed(29); /* Indicate error*/
    FQWREC.XXXMODID = "085"; /* Module identification*/
    set FQ0GM080.FQWBDFCT cursor, bold; /* Highlight*/
    set FQ0GM080.FQWEDFCT bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* Validate defect category code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.YDCCD != "***") /* If defect not wildcarded*/

    YDCREC.YDCCD = FQ0GM080.YDCCD; /* Format key*/
    YDCREC.XGPCD = FQWREC.XGPCD; /* Format key*/
    if (YDCREC.YDCKEY in YDCTBL.YDCKEY /* If def cat in table*/
     && YDCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(36); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.YDCCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If both defect category and defect range cannot be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.YDCCD == "***"    /* If cat defect wildcarded*/
   && FQ0GM080.FQWBDFCT == "***" /* If defect wildcarded*/
   && FQ0GM080.FQWBDFCT == "***") /* If defect wildcarded*/
      /* Next sentence*/
  else
    if (FQ0GM080.YDCCD != "***") /* If cat defect not wildcarded*/

      if (FQ0GM080.FQWBDFCT != "***"
       /* If begin defect not wildcarded*/
       || FQ0GM080.FQWBDFCT != "***") /* or end defect not wildcarded*/

        converseLib.validationFailed(47); /* Indicate error*/
        FQWREC.XXXMODID = "085"; /* Module identification*/
        set FQ0GM080.YDCCD cursor, bold; /* Highlight*/
        set FQ0GM080.FQWBDFCT bold; /* Highlight*/
        set FQ0GM080.FQWEDFCT bold; /* Highlight*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate dimension.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XDMCD != "**") /* If dimension not wildcarded*/
    if (FQ0GM080.XDMCD in XDMTBL.XDMCD /* If dimension in table*/
     && XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* and is active*/
         /* next sentence*/
    else
      converseLib.validationFailed(46); /* Indicate error*/
      FQWREC.XXXMODID = "085"; /* Module identification*/
      set FQ0GM080.XDMCD cursor, bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Verify style and color.*/
   /* ------------------------------------------------------------*/
  FQ0GS11(); /* Verify style and color*/

   /* ------------------------------------------------------------*/
   /* Validate factory code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FY1FCTYC != "***")

    /* ------------------------------------------------------------*/
     /* Format fields for call*/
    /* ------------------------------------------------------------*/
    set FY1REC empty; /* Clear copybook*/
    FY1REC.FY1FCTYC = FQ0GM080.FY1FCTYC; /* Factory*/
    FY1REC.XGPCD = FQWREC.XGPCD; /* GPC code*/

    /* ------------------------------------------------------------*/
     /* Call FCTY.*/
    /* ------------------------------------------------------------*/
    FQ0GS03(); /* Call FCTY*/

    /* ------------------------------------------------------------*/
     /* Check return code.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0)
      set FQ0GM080.FY1FCTYC cursor, bold; /* Highlight*/
      converseLib.validationFailed(30); /* Indicate resource not available*/
      FQWREC.XXXMODID = "085"; /* Module ID*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Both style & any part of the product info can't be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.SY1STNBR != "******") /* If style was entered*/
    if (FQ0GM080.XPLCD != "**" /* If line was entered*/
     || FQ0GM080.XPCCD != "**" /* or catg was entered*/
     || FQ0GM080.XPRCD != "**" /* or type was entered*/
     || FQ0GM080.XGACD != "**" /* or gender was entered*/
     || FQ0GM080.XBCCD != "**") /* or brand was entered*/

      converseLib.validationFailed(35); /* Indicate invalid comb*/
      FQWREC.XXXMODID = "085"; /* Module ID*/
      set FQ0GM080.SY1STNBR cursor, bold; /* Highlight*/
      set FQ0GM080.XGACD bold; /* Highlight*/
      set FQ0GM080.XBCCD bold; /* Highlight*/
      set FQ0GM080.XPRCD bold; /* Highlight*/
      set FQ0GM080.XPCCD bold; /* Highlight*/
      set FQ0GM080.XPLCD bold; /* Highlight*/
    end
  end

   /* ------------------------------------------------------------*/
   /* Both factory and country can not be entered.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FY1FCTYC != "***" /* If factory was entered*/
   && FQ0GM080.XCTCD != "****")  /* and country was entered*/

    converseLib.validationFailed(26); /* Indicate invalid comb*/
    FQWREC.XXXMODID = "085"; /* Module ID*/
    set FQ0GM080.FY1FCTYC cursor, bold; /* Highlight*/
    set FQ0GM080.XCTCD bold; /* Highlight*/
  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, set switch, and return to*/
   /* previous process.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWERF = "N"; /* Clear error flag*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
    return; /* Return to previous process*/
  end


end // end FQ0G085

// Process valid input request
Function FQ0G086()
   /* ------------------------------------------------------------*/
   /* If errors are present, return to previous process.*/
   /* ------------------------------------------------------------*/
  if (FQ0GW00.FQ0GWERF == "Y") /* If error flag is set 'on'*/
    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Update FQWREC.*/
   /* ------------------------------------------------------------*/
  FQWREC.FY1PFYCD = FQ0GM020.FY1FCTYC; /* Factory*/
  FQWREC.SY1STNBR = FQ0GM020.SY1STNBR; /* Style*/
  FQWREC.SY2CLRID = FQ0GM020.SY2CLRID; /* Color*/
  FQWREC.XDMCD = FQ0GM020.XDMCD; /* Dim*/
  FQWREC.YDCCD = FQ0GM020.YDCCD; /* Defect category*/
  FQWREC.FQWBDFCT = FQ0GM020.FQWBDFCT; /* beginning defect code*/
  FQWREC.FQWEDFCT = FQ0GM020.FQWEDFCT; /* ending defect code*/
  FQWREC.FQ1IDBDT = FQ0GM020.FQ0GMBMT; /* beginning po month*/
  FQWREC.FQ1IDXDT = FQ0GM020.FQ0GMEMT; /* ending po month*/
  FQWREC.XDVCD = FQ0GM020.XDVCD; /* division*/
  FQWREC.XCTCD = FQ0GM020.XCTCD; /* country*/
  FQWREC.XPLCD = FQ0GM020.XPLCD; /* product line*/
  FQWREC.XPCCD = FQ0GM020.XPCCD; /* product category*/
  FQWREC.XPRCD = FQ0GM020.XPRCD; /* product type*/
  FQWREC.XBCCD = FQ0GM020.XBCCD; /* brand*/
  FQWREC.XGACD = FQ0GM020.XGACD; /* gender age*/

   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  TA6REC.TA6INDEX = 1; /* Output array index*/
  FQ0GW00.FQ0GWIXT = 1;

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  if (TA3REC.TA3RGNID == "03") /* if on production system*/
    FQ0G087(); /* format production jcl*/
  else
    FQ0G088(); /* format test jcl*/
  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  FQWREC.XXXMODID = "086"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FQ0GW00.FQ0GMSEL[8] = "*"; /* Indicate function completed*/

    set FQ0GM080 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(1); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/


end // end FQ0G086

// Process valid production jcl
Function FQ0G087()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWFLG = "N";
  FQ0GW99.TARJCL = " ";
  FQ0GW99.FQ0GWTYP = "R";
  FQ0GW99.FQ0GWCNT = 1;

  FQ0GW99.FY1FCTYC = FQ0GM080.FY1FCTYC;
  FQ0GW99.SY1STNBR = FQ0GM080.SY1STNBR;
  FQ0GW99.SY2CLRID = FQ0GM080.SY2CLRID;
  FQ0GW99.XDMCD = FQ0GM080.XDMCD;
  FQ0GW99.YDCCD = FQ0GM080.YDCCD;
  FQ0GW99.FQWBDFCT = FQ0GM080.FQWBDFCT;
  FQ0GW99.FQWEDFCT = FQ0GM080.FQWEDFCT;
  FQ0GW99.FQ0GWBMT = FQZREC.FQZBCYMM;
  FQ0GW99.FQ0GWEMT = FQZREC.FQZECYMM;
  FQ0GW99.XDVCD = FQ0GM080.XDVCD;
  FQ0GW99.XCTCD = FQ0GM080.XCTCD;
  FQ0GW99.XPCCD = FQ0GM080.XPCCD;
  FQ0GW99.XPRCD = FQ0GM080.XPRCD;
  FQ0GW99.XPLCD = FQ0GM080.XPLCD;
  FQ0GW99.XBCCD = FQ0GM080.XBCCD;
  FQ0GW99.XGACD = FQ0GM080.XGACD;

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FQ0GT08.TARJCL[FQ0GWIXT] == "===INSERT RUN PARM===")
      TA6REC.TARJCL[TA6INDEX] = FQ0GW99.TARJCL;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    else
      if (FQ0GT08.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM===")

        FQ0G0881(); /* Format SORT parameters*/

      else

        /* ------------------------------------------------------------*/
         /* Format the Job Control Language statement from the table.*/
        /* ------------------------------------------------------------*/

        TA6REC.TARJCL[TA6INDEX] = FQ0GT08.TARJCL[FQ0GWIXT]; /* JCL*/
        TA6REC.TARTYPE[TA6INDEX] = FQ0GT08.TARTYPE[FQ0GWIXT]; /* Type*/
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

      end
    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (FQ0GT08.TARJCL[FQ0GWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FQ0GW00.FQ0GWIXT = FQ0GW00.FQ0GWIXT + 1; /* Input table index*/

    end

  end


end // end FQ0G087

// Process valid test JCL
Function FQ0G088()
   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/
  FQ0GW00.FQ0GWFLG = "N";
  FQ0GW99.TARJCL = " ";
  FQ0GW99.FQ0GWTYP = "R";
  FQ0GW99.FQ0GWCNT = 1;

  FQ0GW99.FY1FCTYC = FQ0GM080.FY1FCTYC;
  FQ0GW99.SY1STNBR = FQ0GM080.SY1STNBR;
  FQ0GW99.SY2CLRID = FQ0GM080.SY2CLRID;
  FQ0GW99.XDMCD = FQ0GM080.XDMCD;
  FQ0GW99.YDCCD = FQ0GM080.YDCCD;
  FQ0GW99.FQWBDFCT = FQ0GM080.FQWBDFCT;
  FQ0GW99.FQWEDFCT = FQ0GM080.FQWEDFCT;
  FQ0GW99.FQ0GWBMT = FQZREC.FQZBCYMM;
  FQ0GW99.FQ0GWEMT = FQZREC.FQZECYMM;
  FQ0GW99.XDVCD = FQ0GM080.XDVCD;
  FQ0GW99.XCTCD = FQ0GM080.XCTCD;
  FQ0GW99.XPCCD = FQ0GM080.XPCCD;
  FQ0GW99.XPRCD = FQ0GM080.XPRCD;
  FQ0GW99.XPLCD = FQ0GM080.XPLCD;
  FQ0GW99.XBCCD = FQ0GM080.XBCCD;
  FQ0GW99.XGACD = FQ0GM080.XGACD;

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FQ0GT18.TARJCL[FQ0GWIXT] == "===NOTIFY USER ID===")
      FQ0GW20.FQ0GWPR1 = "//             NOTIFY=";
      FQ0GW20.FQ0GWUID = TA6REC.XURUSRID;
      FQ0GW20.FQ0GWFL1 = " ";
      TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC1;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    else

      if (FQ0GT18.TARJCL[FQ0GWIXT] == "===INSERT RUN PARM===")
        TA6REC.TARJCL[TA6INDEX] = FQ0GW99.TARJCL;
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
      else

        if (FQ0GT18.TARJCL[FQ0GWIXT] == "===INSERT SORT PARM===")

          FQ0G0881(); /* Format SORT parameters*/

        else

          /* ------------------------------------------------------------*/
           /* Format the Job Control Language statement from the table.*/
          /* ------------------------------------------------------------*/
          TA6REC.TARJCL[TA6INDEX] = FQ0GT18.TARJCL[FQ0GWIXT]; /* JCL*/
          TA6REC.TARTYPE[TA6INDEX] = FQ0GT18.TARTYPE[FQ0GWIXT];
          TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

        end
      end
    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/
    if (FQ0GT18.TARJCL[FQ0GWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else

      FQ0GW00.FQ0GWIXT = FQ0GW00.FQ0GWIXT + 1; /* Input table index*/
    end

  end


end // end FQ0G088

// Format SORT parameters
Function FQ0G0881()
   /* ------------------------------------------------------------*/
   /* Format SORT parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  if (FQ0GM080.FY1FCTYC != "***")
    FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(25,04,CH,EQ,C'";
    FQ0GW00.FQ0GWFLG = "Y";
    FQ0GW20.FQ0GWCH4 = FQ0GM080.FY1FCTYC;
    FQ0GW20.FQ0GWSF4 = "',AND,";
    FQ0GW20.FQ0GWFL4 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.SY1STNBR != "******")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR6 = "  INCLUDE COND=(14,06,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR6 = "                14,06,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH6 = FQ0GM080.SY1STNBR;
    FQ0GW20.FQ0GWSF6 = "',AND,";
    FQ0GW20.FQ0GWFL6 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC6;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.SY2CLRID != "***")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(20,03,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR3 = "                20,03,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH3 = FQ0GM080.SY2CLRID;
    FQ0GW20.FQ0GWSF3 = "',AND,";
    FQ0GW20.FQ0GWFL3 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.XDMCD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(23,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                23,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XDMCD;
    FQ0GW20.FQ0GWSF2 = "',AND,";
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.YDCCD != "***")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(40,03,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR3 = "                40,03,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH3 = FQ0GM080.YDCCD;
    FQ0GW20.FQ0GWSF3 = "',AND,";
    FQ0GW20.FQ0GWFL3 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.FQWBDFCT != "***"
   && FQ0GM080.FQWEDFCT != "***")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
    end
    FQ0GW20.FQ0GWCH3 = FQ0GM080.FQWBDFCT;
    FQ0GW20.FQ0GWSF3 = "',AND,";
    FQ0GW20.FQ0GWFL3 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
    FQ0GW20.FQ0GWCH3 = FQ0GM080.FQWEDFCT;
    FQ0GW20.FQ0GWSF3 = "',AND,";
    FQ0GW20.FQ0GWFL3 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  else
    if (FQ0GM080.FQWBDFCT != "***"
     && FQ0GM080.FQWEDFCT == "***")
      if (FQ0GW00.FQ0GWFLG == "N")
        FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,GE,C'";
        FQ0GW00.FQ0GWFLG = "Y";
      else
        FQ0GW20.FQ0GWPR3 = "                37,03,CH,GE,C'";
      end
      FQ0GW20.FQ0GWCH3 = FQ0GM080.FQWBDFCT;
      FQ0GW20.FQ0GWSF3 = "',AND,";
      FQ0GW20.FQ0GWFL3 = " ";
      TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
    else
      if (FQ0GM080.FQWBDFCT == "***"
       && FQ0GM080.FQWEDFCT != "***")
        if (FQ0GW00.FQ0GWFLG == "N")
          FQ0GW20.FQ0GWPR3 = "  INCLUDE COND=(37,03,CH,LE,C'";
          FQ0GW00.FQ0GWFLG = "Y";
        else
          FQ0GW20.FQ0GWPR3 = "                37,03,CH,LE,C'";
        end
        FQ0GW20.FQ0GWCH3 = FQ0GM080.FQWEDFCT;
        FQ0GW20.FQ0GWSF3 = "',AND,";
        FQ0GW20.FQ0GWFL3 = " ";
        TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC3;
        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1;
                                   /* Output array index*/
      end
    end
  end

  if (FQ0GW00.FQ0GWFLG == "N")
    FQ0GW20.FQ0GWPRD = "  INCLUDE COND=(33,04,BI,GE,C'";
    FQ0GW00.FQ0GWFLG = "Y";
  else
    FQ0GW20.FQ0GWPRD = "                33,04,BI,GE,C'";
  end
  FQ0GW20.FQ0GWCHD = FQZREC.FQZBCYMM;
  FQ0GW20.FQ0GWSFD = "',AND,";
  FQ0GW20.FQ0GWFLD = " ";
  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  FQ0GW20.FQ0GWPRD = "                33,04,BI,LE,C'";
  FQ0GW20.FQ0GWCHD = FQZREC.FQZECYMM;
  if (FQ0GM080.XDVCD != "**"
   || FQ0GM080.XCTCD != "****"
   || FQ0GM080.XPLCD != "**"
   || FQ0GM080.XPCCD != "**"
   || FQ0GM080.XPRCD != "**"
   || FQ0GM080.XBCCD != "**"
   || FQ0GM080.XGACD != "**")
    FQ0GW20.FQ0GWSFD = "',AND,";
  else
    FQ0GW20.FQ0GWSFD = "')";
  end
  FQ0GW20.FQ0GWFLD = " ";
  TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJCD;
  TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

  if (FQ0GM080.XDVCD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(47,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                47,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XDVCD;
    if (FQ0GM080.XCTCD != "****"
     || FQ0GM080.XPCCD != "**"
     || FQ0GM080.XPLCD != "**"
     || FQ0GM080.XPRCD != "**"
     || FQ0GM080.XBCCD != "**"
     || FQ0GM080.XGACD != "**")
      FQ0GW20.FQ0GWSF2 = "',AND,";
    else
      FQ0GW20.FQ0GWSF2 = "')";
    end
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end


  if (FQ0GM080.XCTCD != "****")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR4 = "  INCLUDE COND=(51,04,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR4 = "                51,04,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH4 = FQ0GM080.XCTCD;
    if (FQ0GM080.XPLCD != "**"
     || FQ0GM080.XPCCD != "**"
     || FQ0GM080.XPRCD != "**"
     || FQ0GM080.XBCCD != "**"
     || FQ0GM080.XGACD != "**")
      FQ0GW20.FQ0GWSF4 = "',AND,";
    else
      FQ0GW20.FQ0GWSF4 = "')";
    end
    FQ0GW20.FQ0GWFL4 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC4;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.XPCCD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(61,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                61,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XPCCD;
    if (FQ0GM080.XPLCD != "**"
     || FQ0GM080.XPRCD != "**"
     || FQ0GM080.XBCCD != "**"
     || FQ0GM080.XGACD != "**")
      FQ0GW20.FQ0GWSF2 = "',AND,";
    else
      FQ0GW20.FQ0GWSF2 = "')";
    end
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.XPRCD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(65,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                65,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XPRCD;
    if (FQ0GM080.XPLCD != "**"
     || FQ0GM080.XBCCD != "**"
     || FQ0GM080.XGACD != "**")
      FQ0GW20.FQ0GWSF2 = "',AND,";
    else
      FQ0GW20.FQ0GWSF2 = "')";
    end
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.XPLCD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(63,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                63,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XPLCD;
    if (FQ0GM080.XBCCD != "**"
     || FQ0GM080.XGACD != "**")
      FQ0GW20.FQ0GWSF2 = "',AND,";
    else
      FQ0GW20.FQ0GWSF2 = "')";
    end
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.XBCCD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(59,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                59,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XBCCD;
    if (FQ0GM080.XGACD != "**")
      FQ0GW20.FQ0GWSF2 = "',AND,";
    else
      FQ0GW20.FQ0GWSF2 = "')";
    end
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end

  if (FQ0GM080.XGACD != "**")
    if (FQ0GW00.FQ0GWFLG == "N")
      FQ0GW20.FQ0GWPR2 = "  INCLUDE COND=(67,02,CH,EQ,C'";
      FQ0GW00.FQ0GWFLG = "Y";
    else
      FQ0GW20.FQ0GWPR2 = "                67,02,CH,EQ,C'";
    end
    FQ0GW20.FQ0GWCH2 = FQ0GM080.XGACD;
    FQ0GW20.FQ0GWSF2 = "')";
    FQ0GW20.FQ0GWFL2 = " ";
    TA6REC.TARJCL[TA6INDEX] = FQ0GW20.FQ0GWJC2;
    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/
  end


end // end FQ0G0881

// Report Request Menu
Function FQ0G990()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FQ0G991(); /* Format and display the map*/

  FQ0G992(); /* Check attention identifier*/

  FQ0G993(); /* Reset fields to normal intensity*/

  FQ0G994(); /* Verify the data that was entered*/

  FQ0G995(); /* Process valid input request*/


end // end FQ0G990

// Format and display the map
Function FQ0G991()
   /* ------------------------------------------------------------*/
   /* call subroutine to find which environment the program is*/
   /* executing in, development or production.*/
   /* ------------------------------------------------------------*/

  set TA3REC empty;
  TA3REC.TA3OPTN = "ASSIGN";
  try
    call "TA0230" (TA3REC) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* call successful*/
   && TA3REC.TA3RTNCD == 0)         
  else
    converseLib.validationFailed(1); /* error encountered with call*/
  end

   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    FQWREC.XXXMSGNO = converseVar.validationMsgNum; /* Message number*/

  else

    /* ------------------------------------------------------------*/
     /* Otherwise, format the map output area.*/
    /* ------------------------------------------------------------*/

    set FQ0GM099 initial; /* M099 input/output*/

    FQ0GW00.FQ0GWIXM = 1; /* Initialize map index*/

    while (FQ0GW00.FQ0GWIXM <= FQ0GW00.FQ0GWIXL) /* Until end of array*/

      FQ0GM099.FQ0GMSEL[FQ0GWIXM] = FQ0GW00.FQ0GMSEL[FQ0GWIXM];

      FQ0GW00.FQ0GWIXM = FQ0GW00.FQ0GWIXM + 1; /* Increment index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FQ0GM099.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FQ0GM099.CATOAP = COMMAREA.CATOAP; /* TO application*/
  FQ0GM099.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (FQWREC.XXXMSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (FQWREC.XXXMSGNO != 0) /* Message to display*/

      if (FQWREC.XXXMSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FQWREC.XXXMSGNO);
      end /* Message number*/
    else
      FQ0GM099.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    FQ0GM099.XXXMODID = FQWREC.XXXMODID; /* Module identification*/

    set FQ0GM099 alarm; /* Indicate sound alarm*/

  end

  converse FQ0GM099 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  FQWREC.XXXMSGNO = 0; /* Message number*/
  FQWREC.XXXMODID = " "; /* Module identification*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = FQ0GM099.CATOAP; /* TO application*/
  COMMAREA.CAITEM = FQ0GM099.CAITEM; /* Application data*/


end // end FQ0G991

// Check attention identifier
Function FQ0G992()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FQ0GM099 initial;

    COMMAREA.CATOAP = " "; /* Fast path to application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    FQ0GS99(); /* Exit to redisplay map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (FQ0GM099.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      FQWREC.FQ1IDBDT = 0; /* beginning po month*/
      FQWREC.FQ1IDXDT = 0; /* ending po month*/

      XSFQS01(); /* Exit to another application*/

      set FQ0GM099.CATOAP cursor, bold; /* Highlight*/

    else
      converseLib.validationFailed(18); /* Indicate PF key not valid*/
      FQWREC.XXXMODID = "992"; /* Process name*/
    end

    FQ0GS99(); /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If HELP, exit to previous level or exit to the Master*/
   /* Menu was requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* PF3 was pressed*/
   || converseVar.eventKey is pf4 /* PF4 was pressed*/
   || converseVar.eventKey is pf5) /* PF5 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "FQ0GM099"; /* Move in map name for help*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "FQ0M"; /* Set to FQ Menu*/
    end

    FQWREC.FQ1IDBDT = 0; /* beginning po month*/
    FQWREC.FQ1IDXDT = 0; /* ending po month*/

    XSFQS01(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    FQWREC.XXXMODID = "992"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    FQ0GS99(); /* Exit to display map*/

  end


end // end FQ0G992

// Reset highlighted fields
Function FQ0G993()
   /* ------------------------------------------------------------*/
   /* Reset all modifiable field attributes to defined intensity.*/
   /* ------------------------------------------------------------*/

  set FQ0GM099.CATOAP initialAttributes; /* ; TO application*/
  set FQ0GM099.CAITEM initialAttributes; /* ; Application data*/


end // end FQ0G993

// Verify the entered data
Function FQ0G994()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (FQ0GM099.CAITEM > " ") /* Application data was entered*/

    FQWREC.XXXMODID = "994"; /* Module identification*/
    set FQ0GM099.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/

  end

   /* ------------------------------------------------------------*/
   /* If any thing other than 'S' was entered.*/
   /* ------------------------------------------------------------*/

  FQ0GW00.FQ0GWIXM = 1;

  while (FQ0GW00.FQ0GWIXM <= FQ0GW00.FQ0GWIXL)
    if (FQ0GM099.FQ0GMSEL[FQ0GWIXM] != FQ0GW00.FQ0GMSEL[FQ0GWIXM]
     && FQ0GM099.FQ0GMSEL[FQ0GWIXM] != " " /* line was selected*/
     && FQ0GM099.FQ0GMSEL[FQ0GWIXM] != "S") /* and not with an 'S'*/
      FQWREC.XXXMODID = "994"; /* Module id*/
      set FQ0GM099.FQ0GMSEL[FQ0GWIXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(12); /* Enter only 'S'*/

    end
    FQ0GW00.FQ0GWIXM = FQ0GW00.FQ0GWIXM + 1;

  end

   /* ------------------------------------------------------------*/
   /* If any errors were found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Errors were found*/
    FQ0GS99(); /* Exit to display map*/
  end


end // end FQ0G994

// Process valid input request
Function FQ0G995()
   /* ------------------------------------------------------------*/
   /* Save the selections in the working storage array.*/
   /* ------------------------------------------------------------*/

  move FQ0GM099.FQ0GMSEL to FQ0GW00.FQ0GMSEL[1] for all; /* Menu Selection*/

   /* ------------------------------------------------------------*/
   /* If specify destination selected, indicate to subroutine to*/
   /* display output destination, but do not submit any JCL.*/
   /* ------------------------------------------------------------*/

  if (FQ0GW00.FQ0GMSEL[1] == "S") /* Specify destination selected*/
    TA6REC.TA6SUBSW = "N"; /* Indicate do not submit JCL*/
  end

end // end FQ0G995

// Defaults for MAP20
Function FQ0GS01()
   /* ------------------------------------------------------------*/
   /* Default gender age code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XGACD == "* " /* If gender age equal '* '*/
   || FQ0GM020.XGACD == " *" /* or gender age eqaul ' *'*/
   || FQ0GM020.XGACD == " ") /* or gender age missing*/

    FQ0GM020.XGACD = "**"; /* default to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default brand.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XBCCD == "* " /* If brand is equal to '* '*/
   || FQ0GM020.XBCCD == " *" /* or brand is equal to ' *'*/
   || FQ0GM020.XBCCD == "  ") /* or brand is missing*/

    FQ0GM020.XBCCD = "**"; /* Default brand to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product line.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XPLCD == "* " /* If line is equal to '* '*/
   || FQ0GM020.XPLCD == " *" /* or line is equal to ' *'*/
   || FQ0GM020.XPLCD == "  ") /* or line is missing*/

    FQ0GM020.XPLCD = "**"; /* Default line to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product type.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XPRCD == "* " /* If type is equal to '* '*/
   || FQ0GM020.XPRCD == " *" /* or type is equal to ' *'*/
   || FQ0GM020.XPRCD == "  ") /* or type is missing*/

    FQ0GM020.XPRCD = "**"; /* Default type to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product category.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XPCCD == "* " /* If cat is equal to '* '*/
   || FQ0GM020.XPCCD == " *" /* or cat is equal to ' *'*/
   || FQ0GM020.XPCCD == "  ") /* or cat is missing*/

    FQ0GM020.XPCCD = "**"; /* Default cat to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default country code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XCTCD == "*   " /* If country is equal to '*'*/
   || FQ0GM020.XCTCD == " *  " /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == "  * " /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == "   *" /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == "**  " /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == " ** " /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == "  **" /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == "*** " /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == " ***" /* or country is equal to '*'*/
   || FQ0GM020.XCTCD == "    ") /* or country is missing*/

    FQ0GM020.XCTCD = "****"; /* Default country to '****'*/
  end

   /* ------------------------------------------------------------*/
   /* Default division code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XDVCD == "* " /* If div is equal to '* '*/
   || FQ0GM020.XDVCD == " *" /* or div is equal to ' *'*/
   || FQ0GM020.XDVCD == "  ") /* or div is missing*/

    FQ0GM020.XDVCD = "**"; /* Default div to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default ending defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQWEDFCT == "*  " /* If defect is equal to '*'*/
   || FQ0GM020.FQWEDFCT == " * " /* or defect is equal to '*'*/
   || FQ0GM020.FQWEDFCT == "  *" /* or defect is equal to '*'*/
   || FQ0GM020.FQWEDFCT == "** " /* or defect is equal to '*'*/
   || FQ0GM020.FQWEDFCT == " **" /* or defect is equal to '*'*/
   || FQ0GM020.FQWEDFCT == "   ") /* or defect is missing*/

    FQ0GM020.FQWEDFCT = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default beginning defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FQWBDFCT == "*  " /* If defect is equal to '*'*/
   || FQ0GM020.FQWBDFCT == " * " /* or defect is equal to '*'*/
   || FQ0GM020.FQWBDFCT == "  *" /* or defect is equal to '*'*/
   || FQ0GM020.FQWBDFCT == "** " /* or defect is equal to '*'*/
   || FQ0GM020.FQWBDFCT == " **" /* or defect is equal to '*'*/
   || FQ0GM020.FQWBDFCT == "   ") /* or defect is missing*/

    FQ0GM020.FQWBDFCT = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default defect category code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.YDCCD == "*  " /* If defect is equal to '*'*/
   || FQ0GM020.YDCCD == " * " /* or defect is equal to '*'*/
   || FQ0GM020.YDCCD == "  *" /* or defect is equal to '*'*/
   || FQ0GM020.YDCCD == "** " /* or defect is equal to '*'*/
   || FQ0GM020.YDCCD == " **" /* or defect is equal to '*'*/
   || FQ0GM020.YDCCD == "   ") /* or defect is missing*/

    FQ0GM020.YDCCD = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default dimension code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.XDMCD == "* " /* If dim is equal to '* '*/
   || FQ0GM020.XDMCD == " *" /* or dim is equal to ' *'*/
   || FQ0GM020.XDMCD == "  ") /* or dim is missing*/

    FQ0GM020.XDMCD = "**"; /* Default dim to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default color.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.SY2CLRID == "*  " /* If color is equal to '*'*/
   || FQ0GM020.SY2CLRID == " * " /* or color is equal to '*'*/
   || FQ0GM020.SY2CLRID == "  *" /* or color is equal to '*'*/
   || FQ0GM020.SY2CLRID == "** " /* or color is equal to '*'*/
   || FQ0GM020.SY2CLRID == " **" /* or color is equal to '*'*/
   || FQ0GM020.SY2CLRID == "   ") /* or color is missing*/

    FQ0GM020.SY2CLRID = "***"; /* Default color to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default style number.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.SY1STNBR == "*     " /* If style is equal to '*'*/
   || FQ0GM020.SY1STNBR == " *    " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "  *   " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "    * " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "     *" /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "**    " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == " **   " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "  **  " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "   ** " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "    **" /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "***   " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == " ***  " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "  *** " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "   ***" /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == " **** " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "  ****" /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "***** " /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == " *****" /* or style is equal to '*'*/
   || FQ0GM020.SY1STNBR == "      ") /* or style is missing*/

    FQ0GM020.SY1STNBR = "******"; /* Default style to '******'*/
  end

   /* ------------------------------------------------------------*/
   /* Default factory code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.FY1FCTYC == "*  " /* If factory is equal to '* '*/
   || FQ0GM020.FY1FCTYC == " * " /* or factory is equal to ' *'*/
   || FQ0GM020.FY1FCTYC == "  *" /* or factory is equal to ' *'*/
   || FQ0GM020.FY1FCTYC == "** " /* or factory is equal to ' *'*/
   || FQ0GM020.FY1FCTYC == " **" /* or factory is equal to ' *'*/
   || FQ0GM020.FY1FCTYC == "   ") /* or factory is missing*/

    FQ0GM020.FY1FCTYC = "***"; /* Default factory to '***'*/
  end


end // end FQ0GS01

// Verify style and color
Function FQ0GS02()
   /* ------------------------------------------------------------*/
   /* If both style and color were entered, verify.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.SY1STNBR != "******" /* If style not wildcarded*/
   && FQ0GM020.SY2CLRID != "***")   /* and color not wildcarded*/

    /* ------------------------------------------------------------*/
     /* Clear copybook.*/
    /* ------------------------------------------------------------*/
    set PG2REC empty;

    /* ------------------------------------------------------------*/
     /* Format key.*/
    /* ------------------------------------------------------------*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Current application*/
    PG2REC.XGPCD = FQWREC.XGPCD; /* GPC code*/
    PG2REC.SY2CLRID = FQ0GM020.SY2CLRID; /* Color*/
    PG2REC.SY1STNBR = FQ0GM020.SY1STNBR; /* Style*/
    PG2REC.XDMCD = FQ0GM020.XDMCD; /* Dimension*/

    /* ------------------------------------------------------------*/
     /* Perform subroutine to call SYCLR*/
    /* ------------------------------------------------------------*/
    XSPG202();

    /* ------------------------------------------------------------*/
     /* If call was not normal, indicate error to user.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0) /* If row not found*/
      converseLib.validationFailed(33); /* Indicate invalid*/
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      FQWREC.XXXMODID = "S02"; /* Module ID*/
      set FQ0GM020.SY1STNBR cursor, bold; /* Highlight*/
      set FQ0GM020.SY2CLRID bold; /* Highlight*/
      set FQ0GM020.XDMCD bold; /* Highlight*/
    end

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Validate style.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM020.SY1STNBR != "******") /* If style is not wildcarded*/

    /* ------------------------------------------------------------*/
     /* Clear copybook.*/
    /* ------------------------------------------------------------*/
    set PG2REC empty;

    /* ------------------------------------------------------------*/
     /* Format key.*/
    /* ------------------------------------------------------------*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Current application*/
    PG2REC.XGPCD = FQWREC.XGPCD; /* GPC code*/
    PG2REC.SY1STNBR = FQ0GM020.SY1STNBR; /* Style*/
    PG2REC.XDMCD = "00"; /* Dimension*/

    /* ------------------------------------------------------------*/
     /* Perform subroutine to call SYCLR*/
    /* ------------------------------------------------------------*/
    XSPG201();

    /* ------------------------------------------------------------*/
     /* If call was not normal, indicate error to user.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0) /* If row not found*/
      converseLib.validationFailed(44); /* Indicate invalid*/
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      FQWREC.XXXMODID = "S02"; /* Module ID*/
      set FQ0GM020.SY1STNBR cursor, bold; /* Highlight*/
    end
  end


end // end FQ0GS02

// Select FCTY
Function FQ0GS03()
   /* ------------------------------------------------------------*/
   /* Select FCTY.*/
   /* ------------------------------------------------------------*/
  try
    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful or not found, return to the previous process.*/
   /* ------------------------------------------------------------*/
  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == +0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == +100) /* row not found*/

      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not fqailable, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/
  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  FQWREC.XXXMODID = "S03"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not fqailable*/

    converseLib.validationFailed(2); /* Indicate not fqailable*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(1); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = FQWREC.XXXMODID; /* Program number*/
  TA1REC.TA1DBASE = "DFCTY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end FQ0GS03

// Defaults for MAP30
Function FQ0GS04()
   /* ------------------------------------------------------------*/
   /* Default gender age code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XGACD == "* " /* If gender age equal '* '*/
   || FQ0GM030.XGACD == " *" /* or gender age eqaul ' *'*/
   || FQ0GM030.XGACD == " ") /* or gender age missing*/

    FQ0GM030.XGACD = "**"; /* default to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default brand.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XBCCD == "* " /* If brand is equal to '* '*/
   || FQ0GM030.XBCCD == " *" /* or brand is equal to ' *'*/
   || FQ0GM030.XBCCD == "  ") /* or brand is missing*/

    FQ0GM030.XBCCD = "**"; /* Default brand to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product line.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XPLCD == "* " /* If line is equal to '* '*/
   || FQ0GM030.XPLCD == " *" /* or line is equal to ' *'*/
   || FQ0GM030.XPLCD == "  ") /* or line is missing*/

    FQ0GM030.XPLCD = "**"; /* Default line to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product type.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XPRCD == "* " /* If type is equal to '* '*/
   || FQ0GM030.XPRCD == " *" /* or type is equal to ' *'*/
   || FQ0GM030.XPRCD == "  ") /* or type is missing*/

    FQ0GM030.XPRCD = "**"; /* Default type to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product category.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XPCCD == "* " /* If cat is equal to '* '*/
   || FQ0GM030.XPCCD == " *" /* or cat is equal to ' *'*/
   || FQ0GM030.XPCCD == "  ") /* or cat is missing*/

    FQ0GM030.XPCCD = "**"; /* Default cat to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default country code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XCTCD == "*   " /* If country is equal to '*'*/
   || FQ0GM030.XCTCD == " *  " /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == "  * " /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == "   *" /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == "**  " /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == " ** " /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == "  **" /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == "*** " /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == " ***" /* or country is equal to '*'*/
   || FQ0GM030.XCTCD == "    ") /* or country is missing*/

    FQ0GM030.XCTCD = "****"; /* Default country to '****'*/
  end

   /* ------------------------------------------------------------*/
   /* Default division code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XDVCD == "* " /* If div is equal to '* '*/
   || FQ0GM030.XDVCD == " *" /* or div is equal to ' *'*/
   || FQ0GM030.XDVCD == "  ") /* or div is missing*/

    FQ0GM030.XDVCD = "**"; /* Default div to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default ending defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FQWEDFCT == "*  " /* If defect is equal to '*'*/
   || FQ0GM030.FQWEDFCT == " * " /* or defect is equal to '*'*/
   || FQ0GM030.FQWEDFCT == "  *" /* or defect is equal to '*'*/
   || FQ0GM030.FQWEDFCT == "** " /* or defect is equal to '*'*/
   || FQ0GM030.FQWEDFCT == " **" /* or defect is equal to '*'*/
   || FQ0GM030.FQWEDFCT == "   ") /* or defect is missing*/

    FQ0GM030.FQWEDFCT = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default beginning defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FQWBDFCT == "*  " /* If defect is equal to '*'*/
   || FQ0GM030.FQWBDFCT == " * " /* or defect is equal to '*'*/
   || FQ0GM030.FQWBDFCT == "  *" /* or defect is equal to '*'*/
   || FQ0GM030.FQWBDFCT == "** " /* or defect is equal to '*'*/
   || FQ0GM030.FQWBDFCT == " **" /* or defect is equal to '*'*/
   || FQ0GM030.FQWBDFCT == "   ") /* or defect is missing*/

    FQ0GM030.FQWBDFCT = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default defect category code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.YDCCD == "*  " /* If defect is equal to '*'*/
   || FQ0GM030.YDCCD == " * " /* or defect is equal to '*'*/
   || FQ0GM030.YDCCD == "  *" /* or defect is equal to '*'*/
   || FQ0GM030.YDCCD == "** " /* or defect is equal to '*'*/
   || FQ0GM030.YDCCD == " **" /* or defect is equal to '*'*/
   || FQ0GM030.YDCCD == "   ") /* or defect is missing*/

    FQ0GM030.YDCCD = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default dimension code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.XDMCD == "* " /* If dim is equal to '* '*/
   || FQ0GM030.XDMCD == " *" /* or dim is equal to ' *'*/
   || FQ0GM030.XDMCD == "  ") /* or dim is missing*/

    FQ0GM030.XDMCD = "**"; /* Default dim to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default color.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.SY2CLRID == "*  " /* If color is equal to '*'*/
   || FQ0GM030.SY2CLRID == " * " /* or color is equal to '*'*/
   || FQ0GM030.SY2CLRID == "  *" /* or color is equal to '*'*/
   || FQ0GM030.SY2CLRID == "** " /* or color is equal to '*'*/
   || FQ0GM030.SY2CLRID == " **" /* or color is equal to '*'*/
   || FQ0GM030.SY2CLRID == "   ") /* or color is missing*/

    FQ0GM030.SY2CLRID = "***"; /* Default color to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default style number.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.SY1STNBR == "*     " /* If style is equal to '*'*/
   || FQ0GM030.SY1STNBR == " *    " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "  *   " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "    * " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "     *" /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "**    " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == " **   " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "  **  " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "   ** " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "    **" /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "***   " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == " ***  " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "  *** " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "   ***" /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == " **** " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "  ****" /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "***** " /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == " *****" /* or style is equal to '*'*/
   || FQ0GM030.SY1STNBR == "      ") /* or style is missing*/

    FQ0GM030.SY1STNBR = "******"; /* Default style to '******'*/
  end

   /* ------------------------------------------------------------*/
   /* Default factory code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.FY1FCTYC == "*  " /* If factory is equal to '* '*/
   || FQ0GM030.FY1FCTYC == " * " /* or factory is equal to ' *'*/
   || FQ0GM030.FY1FCTYC == "  *" /* or factory is equal to ' *'*/
   || FQ0GM030.FY1FCTYC == "** " /* or factory is equal to ' *'*/
   || FQ0GM030.FY1FCTYC == " **" /* or factory is equal to ' *'*/
   || FQ0GM030.FY1FCTYC == "   ") /* or factory is missing*/

    FQ0GM030.FY1FCTYC = "***"; /* Default factory to '***'*/
  end


end // end FQ0GS04

// Verify style and color
Function FQ0GS05()
   /* ------------------------------------------------------------*/
   /* If both style and color were entered, verify.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.SY1STNBR != "******" /* If style not wildcarded*/
   && FQ0GM030.SY2CLRID != "***")   /* and color not wildcarded*/

    /* ------------------------------------------------------------*/
     /* Clear copybook.*/
    /* ------------------------------------------------------------*/
    set PG2REC empty;

    /* ------------------------------------------------------------*/
     /* Format key.*/
    /* ------------------------------------------------------------*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Current application*/
    PG2REC.XGPCD = FQWREC.XGPCD; /* GPC code*/
    PG2REC.SY2CLRID = FQ0GM030.SY2CLRID; /* Color*/
    PG2REC.SY1STNBR = FQ0GM030.SY1STNBR; /* Style*/
    PG2REC.XDMCD = FQ0GM030.XDMCD; /* Dimension*/

    /* ------------------------------------------------------------*/
     /* Perform subroutine to call SYCLR*/
    /* ------------------------------------------------------------*/
    XSPG202();

    /* ------------------------------------------------------------*/
     /* If call was not normal, indicate error to user.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0) /* If row not found*/
      converseLib.validationFailed(33); /* Indicate invalid*/
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      FQWREC.XXXMODID = "S05"; /* Module ID*/
      set FQ0GM030.SY1STNBR cursor, bold; /* Highlight*/
      set FQ0GM030.SY2CLRID bold; /* Highlight*/
      set FQ0GM030.XDMCD bold; /* Highlight*/
    end

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Validate style.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM030.SY1STNBR != "******") /* If style is not wildcarded*/

    /* ------------------------------------------------------------*/
     /* Clear copybook.*/
    /* ------------------------------------------------------------*/
    set PG2REC empty;

    /* ------------------------------------------------------------*/
     /* Format key.*/
    /* ------------------------------------------------------------*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Current application*/
    PG2REC.XGPCD = FQWREC.XGPCD; /* GPC code*/
    PG2REC.SY1STNBR = FQ0GM030.SY1STNBR; /* Style*/
    PG2REC.XDMCD = "00"; /* Dimension*/

    /* ------------------------------------------------------------*/
     /* Perform subroutine to call SYCLR*/
    /* ------------------------------------------------------------*/
    XSPG201();

    /* ------------------------------------------------------------*/
     /* If call was not normal, indicate error to user.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0) /* If row not found*/
      converseLib.validationFailed(44); /* Indicate invalid*/
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      FQWREC.XXXMODID = "S05"; /* Module ID*/
      set FQ0GM030.SY1STNBR cursor, bold; /* Highlight*/
    end
  end


end // end FQ0GS05

// Defaults for MAP80
Function FQ0GS10()
   /* ------------------------------------------------------------*/
   /* Default gender age code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XGACD == "* " /* If gender age equal '* '*/
   || FQ0GM080.XGACD == " *" /* or gender age eqaul ' *'*/
   || FQ0GM080.XGACD == " ") /* or gender age missing*/

    FQ0GM080.XGACD = "**"; /* default to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default brand.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XBCCD == "* " /* If brand is equal to '* '*/
   || FQ0GM080.XBCCD == " *" /* or brand is equal to ' *'*/
   || FQ0GM080.XBCCD == "  ") /* or brand is missing*/

    FQ0GM080.XBCCD = "**"; /* Default brand to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product line.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XPLCD == "* " /* If line is equal to '* '*/
   || FQ0GM080.XPLCD == " *" /* or line is equal to ' *'*/
   || FQ0GM080.XPLCD == "  ") /* or line is missing*/

    FQ0GM080.XPLCD = "**"; /* Default line to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product type.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XPRCD == "* " /* If type is equal to '* '*/
   || FQ0GM080.XPRCD == " *" /* or type is equal to ' *'*/
   || FQ0GM080.XPRCD == "  ") /* or type is missing*/

    FQ0GM080.XPRCD = "**"; /* Default type to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default product category.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XPCCD == "* " /* If cat is equal to '* '*/
   || FQ0GM080.XPCCD == " *" /* or cat is equal to ' *'*/
   || FQ0GM080.XPCCD == "  ") /* or cat is missing*/

    FQ0GM080.XPCCD = "**"; /* Default cat to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default country code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XCTCD == "*   " /* If country is equal to '*'*/
   || FQ0GM080.XCTCD == " *  " /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == "  * " /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == "   *" /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == "**  " /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == " ** " /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == "  **" /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == "*** " /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == " ***" /* or country is equal to '*'*/
   || FQ0GM080.XCTCD == "    ") /* or country is missing*/

    FQ0GM080.XCTCD = "****"; /* Default country to '****'*/
  end

   /* ------------------------------------------------------------*/
   /* Default division code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XDVCD == "* " /* If div is equal to '* '*/
   || FQ0GM080.XDVCD == " *" /* or div is equal to ' *'*/
   || FQ0GM080.XDVCD == "  ") /* or div is missing*/

    FQ0GM080.XDVCD = "**"; /* Default div to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default ending defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FQWEDFCT == "*  " /* If defect is equal to '*'*/
   || FQ0GM080.FQWEDFCT == " * " /* or defect is equal to '*'*/
   || FQ0GM080.FQWEDFCT == "  *" /* or defect is equal to '*'*/
   || FQ0GM080.FQWEDFCT == "** " /* or defect is equal to '*'*/
   || FQ0GM080.FQWEDFCT == " **" /* or defect is equal to '*'*/
   || FQ0GM080.FQWEDFCT == "   ") /* or defect is missing*/

    FQ0GM080.FQWEDFCT = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default beginning defect code range.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FQWBDFCT == "*  " /* If defect is equal to '*'*/
   || FQ0GM080.FQWBDFCT == " * " /* or defect is equal to '*'*/
   || FQ0GM080.FQWBDFCT == "  *" /* or defect is equal to '*'*/
   || FQ0GM080.FQWBDFCT == "** " /* or defect is equal to '*'*/
   || FQ0GM080.FQWBDFCT == " **" /* or defect is equal to '*'*/
   || FQ0GM080.FQWBDFCT == "   ") /* or defect is missing*/

    FQ0GM080.FQWBDFCT = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default defect category code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.YDCCD == "*  " /* If defect is equal to '*'*/
   || FQ0GM080.YDCCD == " * " /* or defect is equal to '*'*/
   || FQ0GM080.YDCCD == "  *" /* or defect is equal to '*'*/
   || FQ0GM080.YDCCD == "** " /* or defect is equal to '*'*/
   || FQ0GM080.YDCCD == " **" /* or defect is equal to '*'*/
   || FQ0GM080.YDCCD == "   ") /* or defect is missing*/

    FQ0GM080.YDCCD = "***"; /* Default defect to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default dimension code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.XDMCD == "* " /* If dim is equal to '* '*/
   || FQ0GM080.XDMCD == " *" /* or dim is equal to ' *'*/
   || FQ0GM080.XDMCD == "  ") /* or dim is missing*/

    FQ0GM080.XDMCD = "**"; /* Default dim to '**'*/
  end

   /* ------------------------------------------------------------*/
   /* Default color.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.SY2CLRID == "*  " /* If color is equal to '*'*/
   || FQ0GM080.SY2CLRID == " * " /* or color is equal to '*'*/
   || FQ0GM080.SY2CLRID == "  *" /* or color is equal to '*'*/
   || FQ0GM080.SY2CLRID == "** " /* or color is equal to '*'*/
   || FQ0GM080.SY2CLRID == " **" /* or color is equal to '*'*/
   || FQ0GM080.SY2CLRID == "   ") /* or color is missing*/

    FQ0GM080.SY2CLRID = "***"; /* Default color to '***'*/
  end

   /* ------------------------------------------------------------*/
   /* Default style number.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.SY1STNBR == "*     " /* If style is equal to '*'*/
   || FQ0GM080.SY1STNBR == " *    " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "  *   " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "    * " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "     *" /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "**    " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == " **   " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "  **  " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "   ** " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "    **" /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "***   " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == " ***  " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "  *** " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "   ***" /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == " **** " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "  ****" /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "****  " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "***** " /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == " *****" /* or style is equal to '*'*/
   || FQ0GM080.SY1STNBR == "      ") /* or style is missing*/

    FQ0GM080.SY1STNBR = "******"; /* Default style to '******'*/
  end

   /* ------------------------------------------------------------*/
   /* Default factory code.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.FY1FCTYC == "*  " /* If factory is equal to '* '*/
   || FQ0GM080.FY1FCTYC == " * " /* or factory is equal to ' *'*/
   || FQ0GM080.FY1FCTYC == "  *" /* or factory is equal to ' *'*/
   || FQ0GM080.FY1FCTYC == "** " /* or factory is equal to ' *'*/
   || FQ0GM080.FY1FCTYC == " **" /* or factory is equal to ' *'*/
   || FQ0GM080.FY1FCTYC == "   ") /* or factory is missing*/

    FQ0GM080.FY1FCTYC = "***"; /* Default factory to '***'*/
  end


end // end FQ0GS10

// Verify style and color
Function FQ0GS11()
   /* ------------------------------------------------------------*/
   /* If both style and color were entered, verify.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.SY1STNBR != "******" /* If style not wildcarded*/
   && FQ0GM080.SY2CLRID != "***")   /* and color not wildcarded*/

    /* ------------------------------------------------------------*/
     /* Clear copybook.*/
    /* ------------------------------------------------------------*/
    set PG2REC empty;

    /* ------------------------------------------------------------*/
     /* Format key.*/
    /* ------------------------------------------------------------*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Current application*/
    PG2REC.XGPCD = FQWREC.XGPCD; /* GPC code*/
    PG2REC.SY2CLRID = FQ0GM080.SY2CLRID; /* Color*/
    PG2REC.SY1STNBR = FQ0GM080.SY1STNBR; /* Style*/
    PG2REC.XDMCD = FQ0GM080.XDMCD; /* Dimension*/

    /* ------------------------------------------------------------*/
     /* Perform subroutine to call SYCLR*/
    /* ------------------------------------------------------------*/
    XSPG202();

    /* ------------------------------------------------------------*/
     /* If call was not normal, indicate error to user.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0) /* If row not found*/
      converseLib.validationFailed(33); /* Indicate invalid*/
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      FQWREC.XXXMODID = "S11"; /* Module ID*/
      set FQ0GM080.SY1STNBR cursor, bold; /* Highlight*/
      set FQ0GM080.SY2CLRID bold; /* Highlight*/
      set FQ0GM080.XDMCD bold; /* Highlight*/
    end

    return; /* Return to previous process*/
  end

   /* ------------------------------------------------------------*/
   /* Validate style.*/
   /* ------------------------------------------------------------*/
  if (FQ0GM080.SY1STNBR != "******") /* If style is not wildcarded*/

    /* ------------------------------------------------------------*/
     /* Clear copybook.*/
    /* ------------------------------------------------------------*/
    set PG2REC empty;

    /* ------------------------------------------------------------*/
     /* Format key.*/
    /* ------------------------------------------------------------*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Current application*/
    PG2REC.XGPCD = FQWREC.XGPCD; /* GPC code*/
    PG2REC.SY1STNBR = FQ0GM080.SY1STNBR; /* Style*/
    PG2REC.XDMCD = "00"; /* Dimension*/

    /* ------------------------------------------------------------*/
     /* Perform subroutine to call SYCLR*/
    /* ------------------------------------------------------------*/
    XSPG201();

    /* ------------------------------------------------------------*/
     /* If call was not normal, indicate error to user.*/
    /* ------------------------------------------------------------*/
    if (SQLCA.VAGen_SQLCODE != 0) /* If row not found*/
      converseLib.validationFailed(44); /* Indicate invalid*/
      FQ0GW00.FQ0GWERF = "Y"; /* Set error flag*/
      FQWREC.XXXMODID = "S11"; /* Module ID*/
      set FQ0GM080.SY1STNBR cursor, bold; /* Highlight*/
    end
  end


end // end FQ0GS11

// Clear selections and exit
Function FQ0GS99()
   /* ------------------------------------------------------------*/
   /* Reset any pending selections in working storage.*/
   /* ------------------------------------------------------------*/

  FQ0GW00.FQ0GWIXM = 1; /* Initialize map index*/

  while (FQ0GW00.FQ0GWIXM <= FQ0GW00.FQ0GWIXL) /* Until end of array*/

    if (FQ0GW00.FQ0GMSEL[FQ0GWIXM] == "S") /* Entry is selected*/
      FQ0GW00.FQ0GMSEL[FQ0GWIXM] = " "; /* Reset entry*/
    end

    FQ0GW00.FQ0GWIXM = FQ0GW00.FQ0GWIXM + 1; /* Increment index*/

  end

   /* ------------------------------------------------------------*/
   /* Exit to display the selection menu map.*/
   /* ------------------------------------------------------------*/

  exit stack; /* Exit to display map*/


end // end FQ0GS99

// converse ydctbl pop-up window
Function XPYDC01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && YDCTBL.YDCCD[XX0XWCT1] != "999") /* Or end of data*/
        if (YDCTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YDCTBL.YDCCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YDCTBL.YDCDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (YDCTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YDCTBL.YDCCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YDCTBL.YDCDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && YDCTBL.YDCCD[XX0XWCT1] == "999") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPYDC01

//*** RECORD=FQ0GW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record FQ0GW00 type basicRecord
  10 FQ0GWERF FQ0GWERF ; 
  10 FQ0GMSEL FQ0GMSEL [11] ; 
  10 FQ0GWDT3 FQ0GWDT3 ; 
    15 FQ0GWDT1 FQ0GWDT1 ; 
    15 FQ0GWDT2 FQ0GWDT2 ; 
  10 FQ0GWRD2 FQ0GWRD2 ; 
  10 FQ0GWRD3 FQ0GWRD3 ; 
  10 FQ0GWRD4 FQ0GWRD4 ; 
  10 FQ0GWRD5 FQ0GWRD5 ; 
  10 FQ0GWRD6 FQ0GWRD6 ; 
  10 FQ0GWRD7 FQ0GWRD7 ; 
  10 FQ0GWRD8 FQ0GWRD8 ; 
  10 FQ0GWRD9 FQ0GWRD9 ; 
  10 FQ0GWIXL FQ0GWIXL ; 
  10 FQ0GWIXM FQ0GWIXM ; 
  10 FQ0GWIX2 FQ0GWIX2 ; 
  10 FQ0GWIXT FQ0GWIXT ; 
  10 FQ0GWIDX FQ0GWIDX ; 
  10 FQ0GWSWX FQ0GWSWX ; 
  10 FQ0GWFLG FQ0GWFLG ; 
  10 FQ0GWMTH FQ0GWMTH ; 
  10 FQ0GWN04 FQ0GWN04 ; 
  10 FQ0GWN08 FQ0GWN08 ; 
  10 FQ0GWN09 FQ0GWN09 ; 
    15 * num(3) ; 
    15 FQ0GWYMM FQ0GWYMM ; 
  10 FQ0GWYDF FQ0GWYDF ; 
    15 FQ0GWDEF FQ0GWDEF ; 
    15 FQ0GWGPD FQ0GWGPD ; 
  10 * char(1) ; 
  10 FQ0GWYDC FQ0GWYDC ; 
    15 FQ0GWCAT FQ0GWCAT ; 
    15 FQ0GWGPC FQ0GWGPC ; 
  10 * char(1) ; 
  10 FQ0GWPCC FQ0GWPCC ; 
    15 FQ0GWPCD FQ0GWPCD ; 
    15 FQ0GWGPP FQ0GWGPP ; 
  10 * char(1) ; 
  10 FQ0GWPLN FQ0GWPLN ; 
    15 FQ0GWPLC FQ0GWPLC ; 
    15 FQ0GWGPL FQ0GWGPL ; 
end // end FQ0GW00

//*** RECORD=FQ0GW20 ****
// ------------------------------------------------------------
// Parameters for QA2002 - FTWR NATURE DEFECT
// ------------------------------------------------------------
// ***********************
Record FQ0GW20 type basicRecord
  5 FQ0GWJC1 FQ0GWJC1 ; 
    10 FQ0GWPR1 FQ0GWPR1 ; 
    10 FQ0GWUID FQ0GWUID ; 
    10 FQ0GWFL1 FQ0GWFL1 ; 
  5 FQ0GWJC2 FQ0GWJC2 ; 
    10 FQ0GWPR2 FQ0GWPR2 ; 
    10 FQ0GWCH2 FQ0GWCH2 ; 
    10 FQ0GWSF2 FQ0GWSF2 ; 
    10 FQ0GWFL2 FQ0GWFL2 ; 
  5 FQ0GWJC3 FQ0GWJC3 ; 
    10 FQ0GWPR3 FQ0GWPR3 ; 
    10 FQ0GWCH3 FQ0GWCH3 ; 
    10 FQ0GWSF3 FQ0GWSF3 ; 
    10 FQ0GWFL3 FQ0GWFL3 ; 
  5 FQ0GWJC4 FQ0GWJC4 ; 
    10 FQ0GWPR4 FQ0GWPR4 ; 
    10 FQ0GWCH4 FQ0GWCH4 ; 
    10 FQ0GWSF4 FQ0GWSF4 ; 
    10 FQ0GWFL4 FQ0GWFL4 ; 
  5 FQ0GWJC5 FQ0GWJC5 ; 
    10 FQ0GWPR5 FQ0GWPR5 ; 
    10 FQ0GWCH5 FQ0GWCH5 ; 
    10 FQ0GWSF5 FQ0GWSF5 ; 
    10 FQ0GWFL5 FQ0GWFL5 ; 
  5 FQ0GWJC6 FQ0GWJC6 ; 
    10 FQ0GWPR6 FQ0GWPR6 ; 
    10 FQ0GWCH6 FQ0GWCH6 ; 
    10 FQ0GWSF6 FQ0GWSF6 ; 
    10 FQ0GWFL6 FQ0GWFL6 ; 
  5 FQ0GWJC7 FQ0GWJC7 ; 
    10 FQ0GWPR7 FQ0GWPR7 ; 
    10 FQ0GWCH7 FQ0GWCH7 ; 
    10 FQ0GWSF7 FQ0GWSF7 ; 
    10 FQ0GWFL7 FQ0GWFL7 ; 
  5 FQ0GWJC8 FQ0GWJC8 ; 
    10 FQ0GWPR8 FQ0GWPR8 ; 
    10 FQ0GWCH8 FQ0GWCH8 ; 
    10 FQ0GWSF8 FQ0GWSF8 ; 
    10 FQ0GWFL8 FQ0GWFL8 ; 
  5 FQ0GWJC9 FQ0GWJC9 ; 
    10 FQ0GWPR9 FQ0GWPR9 ; 
    10 FQ0GWBI9 FQ0GWBI9 ; 
    10 FQ0GWSF9 FQ0GWSF9 ; 
    10 FQ0GWFL9 FQ0GWFL9 ; 
  5 FQ0GWCRD FQ0GWCRD ; 
    10 FQ0GWJN1 FQ0GWJN1 ; 
    10 FQ0GWJN2 FQ0GWJN2 ; 
    10 FQ0GWJN3 FQ0GWJN3 ; 
    10 FQ0GWJN4 FQ0GWJN4 ; 
  5 FQ0GWOUT FQ0GWOUT ; 
    10 FQ0GWOT1 FQ0GWOT1 ; 
    10 FQ0GWOT2 FQ0GWOT2 ; 
    10 FQ0GWOT3 FQ0GWOT3 ; 
    10 FQ0GWOT4 FQ0GWOT4 ; 
    10 * char(34) ; 
  5 FQ0GWJCD FQ0GWJCD ; 
    10 FQ0GWPRD FQ0GWPRD ; 
    10 FQ0GWCHD FQ0GWCHD ; 
    10 FQ0GWSFD FQ0GWSFD ; 
    10 FQ0GWFLD FQ0GWFLD ; 
  5 FQ0GWJCS FQ0GWJCS ; 
    10 FQ0GWPRS FQ0GWPRS ; 
    10 FQ0GWCHS FQ0GWCHS ; 
    10 FQ0GWSFS FQ0GWSFS ; 
    10 FQ0GWFLS FQ0GWFLS ; 
end // end FQ0GW20

//*** RECORD=FQ0GW98 ****
// ------------------------------------------------------------
// This is the quality assurance (QA) online JCL submit
// parameter2 used in all programs executed from an online
// request.
// ------------------------------------------------------------
// ***********************
Record FQ0GW98 type basicRecord
  5 TARJCL TARJCL ; 
    10 FQ0GWTYP FQ0GWTYP ; 
    10 FQ0GWCNT FQ0GWCNT ; 
    10 FQ0GWCID FQ0GWCID ; 
    10 FQ0GWSID FQ0GWSID ; 
    10 FQ0GWDID FQ0GWDID ; 
    10 PC2CUXID PC2CUXID ; 
    10 ZRGCD ZRGCD ; 
    10 * char(54) ; 
end // end FQ0GW98

//*** RECORD=FQ0GW99 ****
// ------------------------------------------------------------
// This is the quality assurance (QA) online JCL submit
// parameter used in all programs executed from an online
// request.
// ------------------------------------------------------------
// ***********************
Record FQ0GW99 type basicRecord
  5 TARJCL TARJCL ; 
    10 FQ0GWTYP FQ0GWTYP ; 
    10 FQ0GWCNT FQ0GWCNT ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FQ0GWBMT FQ0GWBMT ; 
    10 FQ0GWEMT FQ0GWEMT ; 
    10 FQWBDFCT FQWBDFCT ; 
    10 FQWEDFCT FQWEDFCT ; 
    10 YDCCD YDCCD ; 
    10 XDVCD XDVCD ; 
    10 XCTCD XCTCD ; 
    10 XPCCD XPCCD ; 
    10 XPRCD XPRCD ; 
    10 XPLCD XPLCD ; 
    10 XBCCD XBCCD ; 
    10 XGACD XGACD ; 
    10 FQ0GMREQ FQ0GMREQ ; 
    10 FQ0GMSFQ FQ0GMSFQ ; 
    10 * char(20) ; 
end // end FQ0GW99

// type of report request
DataItem FQ0GMREQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Menu selection code
DataItem FQ0GMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GMSFQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWBI9 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// beginning po month range
DataItem FQ0GWBMT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Defective code
DataItem FQ0GWCAT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2-CHARACTER PARAMETER
DataItem FQ0GWCH2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 3-CHARACTER PARAMETER
DataItem FQ0GWCH3 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 4-CHARACTER PARAMETER
DataItem FQ0GWCH4 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 5-CHARACTER PARAMETER
DataItem FQ0GWCH5 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 6-CHARACTER PARAMETER
DataItem FQ0GWCH6 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 7-CHARACTER PARAMETER
DataItem FQ0GWCH7 char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWCH8 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 4-byte date PARAMETER
DataItem FQ0GWCHD int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// 4-byte date PARAMETER
DataItem FQ0GWCHS smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CU_CO_ID
DataItem FQ0GWCID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// parameter line count
DataItem FQ0GWCNT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Job Control Language statement
DataItem FQ0GWCRD char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Defective code
DataItem FQ0GWDEF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XNX_DEPT_ID_XREF
DataItem FQ0GWDID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// ccyymm part of above date
DataItem FQ0GWDT1 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dd     part of above date
DataItem FQ0GWDT2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ccyymmdd date format
DataItem FQ0GWDT3 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ending po month range
DataItem FQ0GWEMT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem FQ0GWERF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl filler1
DataItem FQ0GWFL1 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl filler2
DataItem FQ0GWFL2 char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl end filler3
DataItem FQ0GWFL3 char(41)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLER4
DataItem FQ0GWFL4 char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLER 5
DataItem FQ0GWFL5 char(39)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLER 6
DataItem FQ0GWFL6 char(38)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLER 7
DataItem FQ0GWFL7 char(37)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLER 8
DataItem FQ0GWFL8 char(36)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLER 8
DataItem FQ0GWFL9 char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLERD
DataItem FQ0GWFLD char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sort include flag
DataItem FQ0GWFLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// JCL END FILLERD
DataItem FQ0GWFLS char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC code
DataItem FQ0GWGPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GPC code
DataItem FQ0GWGPD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Prod cat GPC code
DataItem FQ0GWGPL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Prod cat GPC code
DataItem FQ0GWGPP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for table fields
DataItem FQ0GWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Secondary index for map fields
DataItem FQ0GWIX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Limit for map fields index
DataItem FQ0GWIXL smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem FQ0GWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for table fields
DataItem FQ0GWIXT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC1 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC2 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC3 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC4 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC5 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC6 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC7 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC8 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJC9 char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJCD char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem FQ0GWJCS char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 8
DataItem FQ0GWJN1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWJN2 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWJN3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWJN4 char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working MM field
DataItem FQ0GWMTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working 4-byte numeric field
DataItem FQ0GWN04 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working 8-byte numeric field
DataItem FQ0GWN08 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working 9-byte numeric field
DataItem FQ0GWN09 num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// jcl prefix 8
DataItem FQ0GWOT1 char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWOT2 num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWOT3 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 8-CHARACTER PARAMETER
DataItem FQ0GWOT4 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Job Control Language statement
DataItem FQ0GWOUT char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Product category code key
DataItem FQ0GWPCC char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Product category code
DataItem FQ0GWPCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product line code
DataItem FQ0GWPLC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Product category code key
DataItem FQ0GWPLN char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 1
DataItem FQ0GWPR1 char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 2
DataItem FQ0GWPR2 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 3
DataItem FQ0GWPR3 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 4
DataItem FQ0GWPR4 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 5
DataItem FQ0GWPR5 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 6
DataItem FQ0GWPR6 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 7
DataItem FQ0GWPR7 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 8
DataItem FQ0GWPR8 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 8
DataItem FQ0GWPR9 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix date
DataItem FQ0GWPRD char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix date
DataItem FQ0GWPRS char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 2
DataItem FQ0GWRD2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 3
DataItem FQ0GWRD3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 4
DataItem FQ0GWRD4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 5
DataItem FQ0GWRD5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 6
DataItem FQ0GWRD6 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 7
DataItem FQ0GWRD7 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 8
DataItem FQ0GWRD8 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request data switch for map 9
DataItem FQ0GWRD9 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 2
DataItem FQ0GWSF2 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 3
DataItem FQ0GWSF3 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 4
DataItem FQ0GWSF4 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 5
DataItem FQ0GWSF5 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 6
DataItem FQ0GWSF6 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 7
DataItem FQ0GWSF7 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 8
DataItem FQ0GWSF8 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 8
DataItem FQ0GWSF9 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 4
DataItem FQ0GWSFD char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl suffix 4
DataItem FQ0GWSFS char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_STOR_ID
DataItem FQ0GWSID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Exit requested switch
DataItem FQ0GWSWX char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parameter type
DataItem FQ0GWTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl prefix 1
DataItem FQ0GWUID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Defective code key
DataItem FQ0GWYDC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Defective code key
DataItem FQ0GWYDF char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working 6-byte YYMMMM
DataItem FQ0GWYMM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

