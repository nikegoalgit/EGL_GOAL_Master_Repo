package ta0m;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=TA0M ****
// This application may only be entered by users whose names
// are found on the DIMDS.VSECUR01 table with a report id of
// "Security".  ( XSTAS-00000 )
// 
// This application allows a user to inquire and maintain rows
// in the DIMDS.VDIST001 table.
// 
// Users may only see and update rows that have a corrosonding
// row in the DIMDS.VSECUR01 table with that report id.
// 
// New reports will have the user id and the report id added to
// the VSECUR01 table in the backround without prompting.
// 
// There are two different screens that may be displayed.
// 
// The first screen displayed to the user allows specification
// of the search criteria to be used to list the rows in the
// table.  The list is displayed and the user may page backward
// and forward to view the information.
// 
// When a line is selected on the screen, the second screen is
// displayed, showing all information for that table row.
// 
// If any data is modified, it is verified and, if complete and
// correct, the table row is updated with the changed data.
// The screen is redisplayed to the user, indicating that the
// update is completed.
// 
// If more than one line was selected on the first screen, the
// next selection is displayed when the user presses the ENTER
// key without making any change to the displayed data.
// 
// When the user exits the second screen (either via PF3 key or
// after all selections have been viewed) the first screen is
// redisplayed, indicating the selections that were viewed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     11/15/93  rmorga  New application.
//                            Commented out XXX-SCRTY-USER-ID
//                            as a map1 search criteria.
//                            ( TA0M-11000 and TA0M-12000 )
// tsup     11/29/94  vcowan  production abend cics 1006: logic
//                            tested for 99 occurrances of the
//                            tam-stalk-id-array; TAMREC was
//                            defined for only 50 occurrances.
//                            chg: xpta-1000;  ref xpta-1100
//                            chg: TAMREC changed to 200 occurs
//                            for tam-stalk-id-array
// tsup     07/17/96  bkoois  map title change to test csp/apt
// tsup     07/28/98  sbusho  re-gen of application to pick up
//                            new  NIKE Corp Date Statement
//                            group XX0XS01 with Y2K logic
// *********************
Program TA0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  TA0MREC TA0MREC; // record
  TA0MW00 TA0MW00; // record
  TA0MW01 TA0MW01; // record
  TA0MW02 TA0MW02; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TAMREC TAMREC; // record
  TAWREC TAWREC; // record
  VDIST001 VDIST001; // record
  VSECUR01 VSECUR01; // record
  VSTALK01 VSTALK01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TA0MM.TA0MM001,  // forms
      TA0MM.TA0MM002, 
      TA0MM.XMTAM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTA-00000: XPTA-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TA0MM001 initial; /* M001 input/output*/
    set TA0MM002 initial; /* M002 input/output*/
    set TA0MW00 empty; /* Working storage*/
    set TA0MW01 empty; /* M001 display storage*/
    set TA0MW02 empty; /* M002 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    TA0MW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    TA0MW00.TAW-ERROR-FLAG = "N";

    TA0MW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    TA0MW00.XXX-TEMP-STG-LNTH = 2888; /* Temporary storage length*/
    TA0MW00.XXX-INX-LMT-NBR = 13; /* Number of lines on a page*/

     /* ------------------------------------------------------------*/
     /* Flow to check security table for authorized user.*/
     /* ------------------------------------------------------------*/

    goto XSTAS-SECURITY;


    XSTAS-SECURITY: XSTAS-SECURITY();

     /* -------------------------------------------*/
     /* Flow to converse main process.*/
     /* -------------------------------------------*/

    goto TA0M-00000; /* Flow to main process.*/


    TA0M-00000: TA0M-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TA0M-00000; /* Converse the main process*/


  end // end main
end // end TA0M

// Determine which map to display
Function TA0M-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the map that was requested.*/
   /* 2) Otherwise, indicate error and exit to System Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-MAP-DSP-CD == "1") /* Map 1 was requested*/

    TA0M-10000(); /* Display map 1*/

    exit stack; /* Exit to display map*/

  end

  if (TA0MW00.XXX-MAP-DSP-CD == "2") /* Map 2 was requested*/

    TA0M-20000(); /* Display map 2*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Write the error to the Error Diagnosis Reporting Facility.*/
   /* ------------------------------------------------------------*/

  TAWREC.XXX-MSG-LOC-ID = "00000"; /* Message location*/
  TAWREC.XXX-MSG-NBR = 10; /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "INVALID MAP NUMBER REQUESTED"; /* Description*/
  TA1REC.TA1MAPNO = TA0MW00.XXX-MAP-DSP-CD; /* Map requested*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

   /* ------------------------------------------------------------*/
   /* Exit to display the application system menu.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = "MN0M"; /* Main Menu*/

  XSTAS-EXIT(); /* Exit to another application*/

   /* ------------------------------------------------------------*/
   /* Abnormally terminate the transaction if the exit failed.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1FUNC = "ABND"; /* Termination function*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/


end // end TA0M-00000

// Main process to display a map
Function TA0M-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TA0M-11000(); /* Obtain the data to display*/

  TA0M-12000(); /* Format and display the map*/

  TA0M-13000(); /* Check attention identifier*/

  TA0M-14000(); /* Verify the entered data*/

  TA0M-15000(); /* Process valid input request*/


end // end TA0M-10000

// Obtain the data to display
Function TA0M-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || TA0MW00.TAW-ERROR-FLAG == "Y") /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (TAWREC.XXX-MSG-NBR == 0) /* No message to display*/
    TA0MW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  TA0MS-TA0050-P(); /* Purge any temporary storage*/

  TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TA0MW01.TAW-RPT-FIL-KEY = TA0MM001.TAW-RPT-FIL-KEY; /* Save key fields*/
  TA0MW01.TAW-SCRTY-USER-KEY = TA0MM001.TAW-SCRTY-USER-KEY;

   /* ------------------------------------------------------------*/
   /* Select the information to display in the map heading.*/
   /* ------------------------------------------------------------*/

  set TA0MREC empty; /* Clear row storage area*/

  if (TA0MW01.TAW-RPT-FIL-KEY <= " ")

    TA0MREC.XXX-RPT-FIL-ID = "*";

  else

    TA0MREC.XXX-RPT-FIL-ID = TA0MW01.TAW-RPT-FIL-KEY;

  end

   /* ------------------------------------------------------------*/
   /* Always default to current user's id for report selection.*/
   /* This option now disabled, ASKIP,DARK on map.*/
   /* Other commented code in TA0M-12000.*/
   /* ------------------------------------------------------------*/

  TA0MREC.XXX-SCRTY-USER-ID = COMMAREA.CAUSERID;
  TA0MM001.TAW-SCRTY-USER-KEY = COMMAREA.CAUSERID;
  TA0MW01.TAW-SCRTY-USER-KEY = COMMAREA.CAUSERID;
                     /* Display default to user.*/

   /* IF TA0MW01.SCRTY-USER-KEY GT ' ';*/
    /* ;*/
    /* MOVE TA0MW01.SCRTY-USER-KEY TO TA0MREC.XXX-SCRTY-USER-ID;*/
    /* ;*/
   /* ELSE;                            /* Use user's id as a default*/
    /* ;*/
    /* IF TA0MW01.RPT-FIL-KEY LE ' ';*/
      /* ;*/
      /* MOVE COMMAREA.CAUSERID TO TA0MREC.XXX-SCRTY-USER-ID;*/
      /* MOVE COMMAREA.CAUSERID TO TA0MM001.SCRTY-USER-KEY;*/
      /* MOVE COMMAREA.CAUSERID TO TA0MW01.SCRTY-USER-KEY;*/
      /* ;               /* Display default to user.*/
    /* ELSE;*/
      /* ;*/
      /* MOVE '*' TO TA0MREC.XXX-SCRTY-USER-ID;*/
      /* ;*/
    /* END;*/
   /* ;*/
   /* END;*/

  TA0MS-TA0580-S1(); /* Select the table join*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  TA0MW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  TA0MW00.TA0MW-REPORT-EOF-FL = "N"; /* End of cursor flag*/

  while (TA0MW00.TA0MW-REPORT-EOF-FL == "N") /* Until end of cursor*/

    TA0MS-TA0580-N1(); /* Fetch next row in join*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (TA0MW00.TA0MW-REPORT-EOF-FL == "N") /* Not end of cursor*/

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      TA0MW01.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR] = TA0MREC.XXX-RPT-FIL-ID;
          /* Report ID*/
      TA0MW01.XXX-SCRTY-USER-ID[XXX-INX-FLD-NBR] = TA0MREC.XXX-SCRTY-USER-ID;
          /* Security user ID*/
      TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR] = TA0MREC.IM-TRGT-STALK-ID;
          /* Target ID*/
      TA0MW01.IM-AGNT-STALK-ID[XXX-INX-FLD-NBR] = TA0MREC.IM-AGNT-STALK-ID;
          /* Agent ID*/
      TA0MW01.IM-NTFY-STALK-ID[XXX-INX-FLD-NBR] = TA0MREC.IM-NTFY-STALK-ID;
          /* Notify ID*/
      TA0MW01.IM-ERR-STALK-ID[XXX-INX-FLD-NBR] = TA0MREC.IM-ERR-STALK-ID;
          /* Error ID*/
      TA0MW01.IM-IMDS-SBJT[XXX-INX-FLD-NBR] = TA0MREC.IM-IMDS-SBJT;
          /* Subject*/
      TA0MW01.IM-IMDS-ACT-TYP[XXX-INX-FLD-NBR] = TA0MREC.IM-IMDS-ACT-TYP;
          /* Action type*/
      TA0MW01.IM-IMDS-FIL-NM[XXX-INX-FLD-NBR] = TA0MREC.IM-IMDS-FIL-NM;
          /* File name*/
      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (TA0MW00.XXX-INX-FLD-NBR > TA0MW00.XXX-INX-LMT-NBR) /* Page is full*/

      TA0MS-TA0050-A(); /* Add page to temporary storage*/

      TA0MW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    TA0MS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  TA0MS-TA0580-C1(); /* Close join cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    TAWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(20); /* No data was found to display*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TA0MW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TA0M-11000

// Format and converse the map
Function TA0M-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.TAW-ERROR-FLAG == "Y") /* Error was found*/
    TAWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TA0M-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TA0MM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TA0MM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TA0MM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TAWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TAWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TAWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TAWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TA0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TA0MM001.XXX-MSG-LOC-ID = TAWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TA0MM001 alarm; /* Indicate sound alarm*/

  end

  converse TA0MM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TAWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TAWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  TA0MW00.TAW-ERROR-FLAG = "N"; /* Set error flag off.*/

  COMMAREA.CATOAP = TA0MM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TA0MM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TA0MM001.TAW-RPT-FIL-KEY normal; /* Report ID*/

   /* SET TA0MM001.SCRTY-USER-KEY NORMAL;*/
   /* This option not in use.  Corrosponding comments in TA0M-11000*/

  TA0MW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TA0MW00.XXX-INX-FLD-NBR <= TA0MW00.XXX-INX-LMT-NBR
   /* Until end of screen*/
   && TA0MM001.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR] > " ")
                                   /* or end of formatted lines*/

    set TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
                                   /* Select indicator*/

    TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set TA0MM001.CATOAP normal; /* TO application*/
  set TA0MM001.CAITEM normal; /* Application data*/


end // end TA0M-12000

// Format the data in the map
Function TA0M-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TA0MM001 initial; /* M001 input/output area*/

  TA0MW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (TA0MW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (TA0MW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        TA0MS-TA0050-U(); /* Update temporary storage page*/

        TA0MW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (TA0MW00.XXX-CURR-PAGE-NBR > TA0MW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        TA0MW00.XXX-CURR-PAGE-NBR = TA0MW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      TA0MS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    set TA0MM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/
    TA0MM001.XXX-CURR-PAGE-NBR = TA0MW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    set TA0MM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/
    TA0MM001.XXX-HI-PAGE-NBR = TA0MW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* If Report ID missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (TA0MW01.TAW-RPT-FIL-KEY <= " ")
    set TA0MM001.TAW-RPT-FIL-KEY cursor; /* Position cursor*/
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TA0MM001.TAW-RPT-FIL-KEY = TA0MW01.TAW-RPT-FIL-KEY;
  TA0MM001.TAW-SCRTY-USER-KEY = TA0MW01.TAW-SCRTY-USER-KEY;

  TA0MW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TA0MW00.XXX-INX-FLD-NBR <= TA0MW00.XXX-INX-LMT-NBR
   /* Until screen is full*/
  )
    if (TA0MW00.XXX-INX-FLD-NBR == 1) /* First select field*/

      set TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, normal;
    else
      set TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;

    end

    TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TA0MW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

    TA0MM001.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR] = TA0MW01.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR];

    TA0MM001.IM-IMDS-ACT-TYP[XXX-INX-FLD-NBR] = TA0MW01.IM-IMDS-ACT-TYP[XXX-INX-FLD-NBR];

    if (TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR] != " ")

      set VSTALK01 empty;
      VSTALK01.XXX-STALK-NM = "*";
      VSTALK01.IM-EMP-DEVICE-ID = TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR];
      TA0MS-IO7030-S();
      TA0MM001.IM-TRGT-STALK-NM[XXX-INX-FLD-NBR] = VSTALK01.XXX-STALK-NM;

    end

    TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end


end // end TA0M-12100

// Check attention identifier
Function TA0M-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TA0MW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TA0MW01 empty; /* M001 display storage*/
    end

    TA0MW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TA0MM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TA0MS-TA0050-P(); /* Purge any temporary storage*/

      XSTAS-EXIT(); /* Exit to another application*/

      set TA0MM001.CATOAP cursor, bold; /* Highlight*/

    else

      TAWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      TA0MW00.TAW-ERROR-FLAG = "Y";

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1  /* PF1  was pressed*/
   || converseVar.eventKey is pf3  /* or PF3  was pressed*/
   || converseVar.eventKey is pf4  /* or PF4  was pressed*/
   || converseVar.eventKey is pf15 /* or PF15 was pressed*/
   || converseVar.eventKey is pf16) /* or PF16 was pressed*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TA0MM001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* Main Menu*/
    end

    if (converseVar.eventKey is pf15) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TA0S"; /* Main Menu*/
    end

    if (converseVar.eventKey is pf16) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TA0T"; /* Main Menu*/
    end

    TA0MS-TA0050-P(); /* Purge any temporary storage*/

    XSTAS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf9   /* and PF9  was not pressed*/
  )                                 
    TAWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(2); /* PA/PF key pressed is not valid*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TA0M-13000

// Verify data that was entered
Function TA0M-14000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (TA0MM001.CAITEM > " ") /* Application data was entered*/

    TAWREC.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(21); /* Enter only with FAST PATH*/
    set TA0MM001.CAITEM cursor, bold; /* Highlight*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    TA0M-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    TA0M-14200(); /* Verify scroll request*/

  else

    /* ------------------------------------------------------------*/
    /* If key field changed, determine if any other field changed.*/
    /* ------------------------------------------------------------*/

    if (TA0MM001.TAW-RPT-FIL-KEY != TA0MW01.TAW-RPT-FIL-KEY
     || TA0MM001.TAW-SCRTY-USER-KEY != TA0MW01.TAW-SCRTY-USER-KEY)
                                   /* If report id or scrty user changed*/

      TA0M-14100(); /* Highlight other changed fields*/

    else

      /* ------------------------------------------------------------*/
      /* Otherwise, verify any modifiable data that was changed.*/
      /* ------------------------------------------------------------*/

      if (TA0MW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

        TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-LMT-NBR;
                                   /* Line index*/

        while (TA0MW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

          TA0M-14400(); /* Verify data in the line*/

          TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/
        end
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TA0M-14000

// Highlight other changed fields
Function TA0M-14100()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-LMT-NBR; /* Line index*/

  while (TA0MW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " "
     && TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "V")

      TAWREC.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(22); /* Field may not change*/
      set TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
      TA0MW00.TAW-ERROR-FLAG = "Y";

    end

    TA0MW00.XXX-INX-FLD-NBR = TA0MW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end TA0M-14100

// Verify scroll request
Function TA0M-14200()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (TA0MM001.TAW-SCRTY-USER-KEY != TA0MW01.TAW-SCRTY-USER-KEY)

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(23); /* Field may not change*/
    set TA0MM001.TAW-SCRTY-USER-KEY cursor, bold; /* Highlight*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end

  if (TA0MM001.TAW-RPT-FIL-KEY != TA0MW01.TAW-RPT-FIL-KEY)

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(23); /* Field may not change*/
    set TA0MM001.TAW-RPT-FIL-KEY cursor, bold; /* Highlight*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TA0MW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(3); /* No previous page to display*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TA0MW00.XXX-CURR-PAGE-NBR >= TA0MW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(4); /* No more pages to display*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end


end // end TA0M-14200

// Verify data in the line
Function TA0M-14400()
   /* ------------------------------------------------------------*/
   /* If selection was entered and is not a "S", indicate that*/
   /* only "S" may be entered to select a line.*/
   /* 'V' is valid for lines that have been viewed.*/
   /* ------------------------------------------------------------*/

  if (TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " "
   && TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "S"
   && TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "V")
                                   /* is not a space or a "S"*/

    TAWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(5); /* Only "S" may be entered*/
    set TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end


end // end TA0M-14400

// Process valid input request
Function TA0M-15000()
   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (TA0MM001.TAW-RPT-FIL-KEY != TA0MW01.TAW-RPT-FIL-KEY
   || TA0MM001.TAW-SCRTY-USER-KEY != TA0MW01.TAW-SCRTY-USER-KEY)

    TA0MW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TA0MW00.XXX-CURR-PAGE-NBR = TA0MW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TA0MW00.XXX-CURR-PAGE-NBR = TA0MW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If add was requested, show other map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9) /* Add record was requested*/

    set TA0MM002 initial; /* Reset map2.*/

    TA0MW00.TA0MW-ADD-FLAG = "Y"; /* Request for add flag*/
    TA0MW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

    TA0MW00.XXX-INX-FLD-NBR = 1; /* For returning update.*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If a line was selected, format the key fields and indicate*/
   /* that map 002 is to be displayed.*/
   /* ------------------------------------------------------------*/

  if ("S" in TA0MM001.XXX-LN-SEL-IND) /* Line was selected*/

    set TA0MM002 initial; /* Reset map2.*/

    TA0MW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    TA0MS-MOVE-TO-MAP2(); /* Move selected line data to map2.*/

    TA0MW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/

  end


end // end TA0M-15000

// Main process to display a map
Function TA0M-20000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TA0M-21000(); /* Obtain the data to display*/

  TA0M-22000(); /* Format and display the map*/

  TA0M-23000(); /* Check attention identifier*/

  TA0M-24000(); /* Verify the entered data*/

  TA0M-25000(); /* Process valid input request*/


end // end TA0M-20000

// Obtain the data to display
Function TA0M-21000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || TA0MW00.TAW-ERROR-FLAG == "Y")

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set TA0MW02 empty; /* M002 display storage*/

  TA0MW02.XXX-RPT-FIL-ID = TA0MM002.XXX-RPT-FIL-ID;

  TA0MW02.IM-IMDS-SBJT = TA0MM002.IM-IMDS-SBJT;

  TA0MW02.IM-IMDS-ACT-TYP = TA0MM002.IM-IMDS-ACT-TYP;

  TA0MW02.IM-IMDS-FIL-NM-1 = TA0MM002.IM-IMDS-FIL-NM-1;

  TA0MW02.IM-IMDS-FIL-NM-2 = TA0MM002.IM-IMDS-FIL-NM-2;

  TA0MW02.IM-TRGT-STALK-NM-1 = TA0MM002.IM-TRGT-STALK-NM-1;
  TA0MW02.IM-TRGT-STALK-NM-2 = TA0MM002.IM-TRGT-STALK-NM-2;

  TA0MW02.IM-AGNT-STALK-NM-1 = TA0MM002.IM-AGNT-STALK-NM-1;
  TA0MW02.IM-AGNT-STALK-NM-2 = TA0MM002.IM-AGNT-STALK-NM-2;

  TA0MW02.IM-NTFY-STALK-NM-1 = TA0MM002.IM-NTFY-STALK-NM-1;
  TA0MW02.IM-NTFY-STALK-NM-2 = TA0MM002.IM-NTFY-STALK-NM-2;

  TA0MW02.IM-ERR-STALK-NM-1 = TA0MM002.IM-ERR-STALK-NM-1;
  TA0MW02.IM-ERR-STALK-NM-2 = TA0MM002.IM-ERR-STALK-NM-2;

   /* ------------------------------------------------------------*/
   /* Convert STALK's to IM-EMP-DEVICE-ID's.*/
   /* ------------------------------------------------------------*/

  TA0MS-STALK-TO-ID();

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TA0MW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TA0M-21000

// Format and converse the map
Function TA0M-22000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TAWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TA0M-22100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TA0MM002.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TA0MM002.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TA0MM002.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TAWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TAWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TAWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TAWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TA0MM002.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TA0MM002.XXX-MSG-LOC-ID = TAWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TA0MM002 alarm; /* Indicate sound alarm*/

  end

  converse TA0MM002 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TAWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TAWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  TA0MW00.TAW-ERROR-FLAG = "N";

  COMMAREA.CATOAP = TA0MM002.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TA0MM002.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TA0MM002.CATOAP normal; /* TO application*/
  set TA0MM002.CAITEM normal; /* Application data*/

  set TA0MM002.XXX-RPT-FIL-ID normal;
  set TA0MM002.IM-IMDS-SBJT normal;
  set TA0MM002.IM-IMDS-ACT-TYP normal;
  set TA0MM002.IM-TRGT-STALK-NM-1 normal;
  set TA0MM002.IM-TRGT-STALK-NM-2 normal;
  set TA0MM002.IM-AGNT-STALK-NM-1 normal;
  set TA0MM002.IM-AGNT-STALK-NM-2 normal;
  set TA0MM002.IM-NTFY-STALK-NM-1 normal;
  set TA0MM002.IM-NTFY-STALK-NM-2 normal;
  set TA0MM002.IM-ERR-STALK-NM-1 normal;
  set TA0MM002.IM-ERR-STALK-NM-2 normal;
  set TA0MM002.IM-IMDS-FIL-NM-1 normal;
  set TA0MM002.IM-IMDS-FIL-NM-2 normal;


end // end TA0M-22000

// Format the data in the map
Function TA0M-22100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TA0MM002 initial; /* M002 input/output area*/

  TA0MW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

  TA0MS-MOVE-TO-MAP2();

  TA0MW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
  TA0MW00.XXX-MAP-DSP-CD = "2"; /* Map to be displayed*/


end // end TA0M-22100

// Check attention identifier
Function TA0M-23000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TA0MW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TA0MW02 empty; /* M002 display storage*/
    end

    TA0MW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TA0MS-TA0050-P(); /* Purge any temporary storage*/

      XSTAS-EXIT(); /* Exit to another application*/

      set TA0MM001.CATOAP cursor, bold; /* Highlight*/

      TA0MW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    else

      TAWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
      converseLib.validationFailed(5); /* PA/PF key may not be used*/
      TA0MW00.TAW-ERROR-FLAG = "Y";

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf15
   || converseVar.eventKey is pf16)

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TA0MM002"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/

      TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
      TA0MW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

      exit stack; /* Exit to display map*/

    end

    if (converseVar.eventKey is pf15) /* PF15 was pressed*/
      COMMAREA.CATOAP = "TA0S"; /* Security table maint.*/
    end

    if (converseVar.eventKey is pf16) /* PF15 was pressed*/
      COMMAREA.CATOAP = "TA0T"; /* Street talk table maint.*/
    end

    TA0MS-TA0050-P(); /* Purge any temporary storage*/

    XSTAS-EXIT(); /* Exit to another application*/

    TA0MW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
  )                                 
    TAWREC.XXX-MSG-LOC-ID = "23000"; /* Message location*/
    converseLib.validationFailed(2); /* PA/PF key pressed is not valid*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TA0M-23000

// Verify data that was entered
Function TA0M-24000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TAWREC.XXX-MSG-LOC-ID = "24000"; /* Message location*/
    converseLib.validationFailed(21); /* Enter only with FAST PATH*/
    set TA0MM002.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Find out if one of the three key fields has been changed.*/
   /* xxx-rpt-fil-id, im-imds-act-typ, and im-imds-trgt-id.*/
   /* rows cannot be updated if their key has been changed,*/
   /* they must be deleted and re-added instead.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.XXX-RPT-FIL-ID != TA0MW02.XXX-RPT-FIL-ID
   || TA0MM002.IM-IMDS-ACT-TYP != TA0MW02.IM-IMDS-ACT-TYP)

    TA0MW00.TA0MW-KEY-CHNGD-FL = "Y";

  else /* Used in adding or updating.*/

    TA0MW00.TA0MW-KEY-CHNGD-FL = "N";

  end

   /* ------------------------------------------------------------*/
   /* If adding or deleting or doing nothing :*/
   /* Convert and find street talk names.*/
   /*  */
   /* NOTE: TA0MS-STALK-TO-ID may call pop-up window.  If it does,*/
   /* do not allow adding or updating on this converse.*/
   /*  */
   /* 'NOTHER NOTE: Don't do any editing if a pop-up is called.*/
   /*  */
   /* If a pop-up window is not called :*/
   /* Enforce rule that files must start with '\\',*/
   /* and that all backslashes must be doubled ( \ is \\ ).*/
   /* ------------------------------------------------------------*/

  TA0MW00.TA0MW-POPUP-CALLED-FL = "N"; /* No.*/

  if (TA0MM002.TA0M-ACTION == "A"
   || TA0MM002.TA0M-ACTION == "U"
   || TA0MM002.TA0M-ACTION == " ")

    TA0MS-STALK-TO-ID(); /* Convert street talk names.*/

    if (TA0MW00.TA0MW-POPUP-CALLED-FL == "N") /* Pop up wasn't called.*/

      TA0M-24100(); /* Check file.*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If no pop-up windows were called, edit action and report id,*/
   /* otherwise decide where to place the cursor*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.TA0MW-POPUP-CALLED-FL == "N")

    TA0M-24200(); /* Verify action.*/

    TA0M-24300(); /* Check Report ID.*/

  else

    if (TA0MW00.TAW-ERROR-FLAG == "N")

      TA0M-24400(); /* Place cursor.*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.TAW-ERROR-FLAG == "Y") /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TA0M-24000

// Check file edit.
Function TA0M-24100()
   /* ------------------------------------------------------------*/
   /* Force filename if action type is 'FILE'.*/
   /* All files must begin with two (2) backslashes.*/
   /* All following backslashes must be doubled for unix.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-IMDS-FIL-NM-1 <= " ")

    if (TA0MM002.IM-IMDS-ACT-TYP == "FILE")

      TAWREC.XXX-MSG-LOC-ID = "24100";
      converseLib.validationFailed(47); /* File name missing.*/
      TA0MW00.TAW-ERROR-FLAG = "Y";

      set TA0MM002.IM-IMDS-FIL-NM-1 bold, cursor;
      set TA0MM002.IM-IMDS-FIL-NM-2 bold;

    end

    return; /* No file, no edit.*/

  end

  TA0MW02.IM-IMDS-FIL-NM-1 = TA0MM002.IM-IMDS-FIL-NM-1;
  TA0MW02.IM-IMDS-FIL-NM-2 = TA0MM002.IM-IMDS-FIL-NM-2;

  TA0MW00.TA0MW-FILE-ARRAY = TA0MW02.IM-IMDS-FIL-NM;

  if (TA0MW00.TA0MW-FILE-CHAR[1] != "\\"
   || TA0MW00.TA0MW-FILE-CHAR[2] != "\\")

    TAWREC.XXX-MSG-LOC-ID = "24100";
    converseLib.validationFailed(45); /* All files must start with '\\'*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

    set TA0MM002.IM-IMDS-FIL-NM-1 bold, cursor;
    set TA0MM002.IM-IMDS-FIL-NM-2 bold;

    return; /* Our work here is done...*/

  end

  TA0MW00.TA0MW-INDEX = 3;

  while (TA0MW00.TA0MW-INDEX <= 114) /* 'Till the end of the file.*/

    if (TA0MW00.TA0MW-FILE-CHAR[TA0MW-INDEX] == "\\")

      TA0MW00.TA0MW-INDEX = TA0MW00.TA0MW-INDEX + 1;

      if (TA0MW00.TA0MW-FILE-CHAR[TA0MW-INDEX] != "\\")

        TAWREC.XXX-MSG-LOC-ID = "24100";
        converseLib.validationFailed(46); /* All \'s must be \\'s.*/
        TA0MW00.TAW-ERROR-FLAG = "Y";

        set TA0MM002.IM-IMDS-FIL-NM-1 bold, cursor;
        set TA0MM002.IM-IMDS-FIL-NM-2 bold;

        return; /* Our work here is done...*/

      end
    end

    TA0MW00.TA0MW-INDEX = TA0MW00.TA0MW-INDEX + 1;

  end


end // end TA0M-24100

// Verify action type
Function TA0M-24200()
   /* ------------------------------------------------------------*/
   /* Determine if action code is valid.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-IMDS-ACT-TYP == "FILE"
   || TA0MM002.IM-IMDS-ACT-TYP == "HOST"
   || TA0MM002.IM-IMDS-ACT-TYP == "MAIL"
   || TA0MM002.IM-IMDS-ACT-TYP == "PRINT"
   || TA0MM002.IM-IMDS-ACT-TYP == "TEXT")

     /* NEXT SENTENCE*/

  else

    /* ------------------------------------------------------------*/
    /* If not found, indicate missing or invalid.*/
    /* ------------------------------------------------------------*/

    TAWREC.XXX-MSG-LOC-ID = "24200"; /* Message location*/
    converseLib.validationFailed(25); /* Field missing or invalid*/
    set TA0MM002.IM-IMDS-ACT-TYP cursor, bold; /* Highlight*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

  end


end // end TA0M-24200

// Check Report ID
Function TA0M-24300()
   /* ------------------------------------------------------------*/
   /* Dataset/report id must exist, may not be 'security', or '*'.*/
   /* If the dataset/report id currently exists, the user must*/
   /* have a row in the vsecur01 table with report id to change it.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.XXX-RPT-FIL-ID == "SECURITY"
   || TA0MM002.XXX-RPT-FIL-ID <= "*"
   || TA0MM002.XXX-RPT-FIL-ID <= " ")

    TAWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
    converseLib.validationFailed(11); /* Invalid value entered.*/
    set TA0MM002.XXX-RPT-FIL-ID cursor, bold;
    TA0MW00.TAW-ERROR-FLAG = "Y";

  else

    if (TA0MM002.TA0M-ACTION == "A" 
     || TA0MM002.TA0M-ACTION == "D" /* 3 of 4 valid action codes*/
     || TA0MM002.TA0M-ACTION == "U") /* 4th below completes action check...*/

      TA0M-24310(); /* Check user for authority to change*/
                                   /* report.*/
    else

      if (TA0MM002.TA0M-ACTION != " ") /* 4th valid action type.*/

        TAWREC.XXX-MSG-LOC-ID = "24300"; /* Message location*/
        converseLib.validationFailed(11); /* Invalid value entered.*/
        set TA0MM002.TA0M-ACTION cursor, bold;

      end

    end

  end


end // end TA0M-24300

// Check user's authority
Function TA0M-24310()
   /* ------------------------------------------------------------*/
   /* All user's may add new reports, but they may only alter*/
   /* reports that are linked to their scrty-user-id in the*/
   /* DIMDS.VSECUR01 table.  This record is set-up for the creating*/
   /* user, who can then give other's access to that report using*/
   /* TA0S security table maint. program.*/
   /* ------------------------------------------------------------*/

  TA0MW00.TA0MW-ADD-SCRTY-FLAG = "N";

  set VSECUR01 empty;

  VSECUR01.XXX-RPT-FIL-ID = TA0MM002.XXX-RPT-FIL-ID;

  VSECUR01.XXX-SCRTY-USER-ID = "*";

  TA0MS-IO7020-S1(); /* Select report*/

  TA0MS-IO7020-N1(); /* Select report*/

  if (SQLCA.VAGen_SQLCODE != 100 /* Report exists...*/
  )                             
    TA0MS-IO7020-C1(); /* Close set first*/

    VSECUR01.XXX-SCRTY-USER-ID = COMMAREA.CAUSERID;

    TA0MS-IO7020-S(); /* Select row*/

    if (SQLCA.VAGen_SQLCODE != 0)

      converseLib.validationFailed(28); /* Not autherized to change this report.*/
      TAWREC.XXX-MSG-LOC-ID = "24300";
      set TA0MM002.XXX-RPT-FIL-ID bold, cursor;
      TA0MW00.TAW-ERROR-FLAG = "Y";

      TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* reset report from ta0mw02.*/

    else

   /* ------------------------------------------------------------*/
   /* Check to see if VDIST key matches for new report determination.*/
   /* ------------------------------------------------------------*/

      set VDIST001 empty;

      VDIST001.XXX-RPT-FIL-ID = TA0MM002.XXX-RPT-FIL-ID;
      VDIST001.IM-IMDS-ACT-TYP = TA0MM002.IM-IMDS-ACT-TYP;
      VDIST001.IM-TRGT-STALK-ID = TA0MW02.IM-TRGT-STALK-ID;

      TA0MS-IO7010-S();

      if (SQLCA.VAGen_SQLCODE == 0)

        TA0MW00.TA0MW-ADD-FLAG = "N"; /* Not a new report.*/

      else

        TA0MW00.TA0MW-ADD-FLAG = "Y"; /* Yes, it is a new report.*/

      end

    end

  else
    TA0MS-IO7020-C1(); /* Close set.*/

    TA0MW00.TA0MW-ADD-FLAG = "Y"; /* Add a new report.*/

    TA0MW00.TA0MW-ADD-SCRTY-FLAG = "Y"; /* Add a security row.*/

  end


end // end TA0M-24310

// Place cursor
Function TA0M-24400()
   /* ------------------------------------------------------------*/
   /* If pop-up window was called, place cursor at next address.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-AGNT-STALK-NM-1 > " ")

    set TA0MM002.IM-NTFY-STALK-NM-1 cursor;

  else

    set TA0MM002.IM-AGNT-STALK-NM-1 cursor;

  end

  if (TA0MM002.IM-NTFY-STALK-NM-1 > " ")

    if (TA0MM002.IM-ERR-STALK-NM-1 > " ") /* All fields filled.*/

      set TA0MM002.TA0M-ACTION cursor;

    else

      set TA0MM002.IM-ERR-STALK-NM-1 cursor;

    end

  end


end // end TA0M-24400

// Process valid input request
Function TA0M-25000()
   /* ------------------------------------------------------------*/
   /* If no modifiable data changed, search for next selection.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.TA0M-ACTION != "A" /* While not adding...*/
   && TA0MM002.TA0M-ACTION != "D" 
   && TA0MM002.TA0M-ACTION != "U" 
   && TA0MM002.XXX-RPT-FIL-ID == TA0MW02.XXX-RPT-FIL-ID
   && TA0MM002.IM-IMDS-SBJT == TA0MW02.IM-IMDS-SBJT
   && TA0MM002.IM-IMDS-ACT-TYP == TA0MW02.IM-IMDS-ACT-TYP
   && TA0MM002.IM-TRGT-STALK-NM-1 == TA0MW02.IM-TRGT-STALK-NM-1
   && TA0MM002.IM-TRGT-STALK-NM-2 == TA0MW02.IM-TRGT-STALK-NM-2
   && TA0MM002.IM-AGNT-STALK-NM-1 == TA0MW02.IM-AGNT-STALK-NM-1
   && TA0MM002.IM-AGNT-STALK-NM-2 == TA0MW02.IM-AGNT-STALK-NM-2
   && TA0MM002.IM-NTFY-STALK-NM-1 == TA0MW02.IM-NTFY-STALK-NM-1
   && TA0MM002.IM-NTFY-STALK-NM-2 == TA0MW02.IM-NTFY-STALK-NM-2
   && TA0MM002.IM-ERR-STALK-NM-1 == TA0MW02.IM-ERR-STALK-NM-1
   && TA0MM002.IM-ERR-STALK-NM-2 == TA0MW02.IM-ERR-STALK-NM-2
   && TA0MM002.IM-IMDS-FIL-NM-1 == TA0MW02.IM-IMDS-FIL-NM-1
   && TA0MM002.IM-IMDS-FIL-NM-2 == TA0MW02.IM-IMDS-FIL-NM-2)

    TA0M-25100(); /* Search for next selection*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If the popup window was called do not add or update row.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.TA0MW-POPUP-CALLED-FL == "Y")

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If adding a new row to VDIST, add one to VSECUR also,*/
   /* else update the changed data of an existing VDIST001 row.*/
   /* If deleting a report, delete all it's row's in the VSECUR01 table.*/
   /* ------------------------------------------------------------*/

  TA0MW00.TA0MW-DELETED-FLAG = "N"; /* Nothing deleted yet...*/

  TA0M-25200();

   /* ------------------------------------------------------------*/
   /* Commit all changes and refresh the data to be displayed.*/
   /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  if (TA0MW00.TA0MW-DELETED-FLAG != "Y") /* If row wasn't deleted...*/

    TA0MW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  end


end // end TA0M-25000

// Search for next selection
Function TA0M-25100()
   /* ------------------------------------------------------------*/
   /* Determine if another line was selected for viewing.*/
   /* ------------------------------------------------------------*/

  set TA0MM002 initial; /* Clean up map 2.*/

  if ("S" in TA0MM001.XXX-LN-SEL-IND from XXX-INX-FLD-NBR) /* Line was selected*/

    TA0MW00.XXX-INX-FLD-NBR = sysVar.arrayIndex; /* Map line index*/

    TA0MS-MOVE-TO-MAP2(); /* Move selected data to map2.*/

    TA0MW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "V";

    TA0MW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  else

    TA0MW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/
    TA0MW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

  end


end // end TA0M-25100

// Add, change, or delete report.
Function TA0M-25200()
   /* ------------------------------------------------------------*/
   /* If adding a new row to VDIST, add one to VSECUR also,*/
   /* else update the changed data of an existing VDIST001 row.*/
   /*  */
   /* Update changes to map1 working storage.*/
   /* ------------------------------------------------------------*/

  set VDIST001 empty; /* Clear out table record.*/

  TA0M-25210(); /* Get VDIST data*/

  if (TA0MM002.TA0M-ACTION == "A"
  )
    if (TA0MW00.TA0MW-ADD-FLAG == "Y")

      TA0M-25230(); /* Add Vdist data.*/

      TA0M-25250(); /* Update TA0MW01 row.*/

    else

      TAWREC.XXX-MSG-LOC-ID = "25200";
      converseLib.validationFailed(43); /* Duplicate row.*/
      TA0MW00.TAW-ERROR-FLAG = "Y";

      set TA0MM002.XXX-RPT-FIL-ID bold, cursor;
      set TA0MM002.IM-IMDS-ACT-TYP bold;
      set TA0MM002.IM-TRGT-STALK-NM-1 bold;
      set TA0MM002.IM-TRGT-STALK-NM-2 bold;

    end

    return; /* Exit to next process.*/

  end


  if (TA0MM002.TA0M-ACTION == "U"
  )
    if (TA0MW00.TA0MW-KEY-CHNGD-FL == "N")

      TA0M-25220(); /* Update Vdist data.*/

      TA0M-25250(); /* Update TA0MW01 row.*/

    else

      TAWREC.XXX-MSG-LOC-ID = "25200";
      converseLib.validationFailed(31);
      TA0MW00.TAW-ERROR-FLAG = "Y";

      set TA0MM002.XXX-RPT-FIL-ID bold, cursor;
      set TA0MM002.IM-IMDS-ACT-TYP bold;
      set TA0MM002.IM-TRGT-STALK-NM-1 bold;
      set TA0MM002.IM-TRGT-STALK-NM-2 bold;

    end

    return; /* Flow to next process.*/

  end


  if (TA0MM002.TA0M-ACTION == "D") /* Not deleting*/

    TA0M-25240(); /* Delete a Vdist row.*/

    TA0M-25250(); /* Update TA0MW01 row.*/

  end


end // end TA0M-25200

// Get data from map2 for VDIST
Function TA0M-25210()
   /* ------------------------------------------------------------*/
   /* Move the map fields to the table storage area.*/
   /* ------------------------------------------------------------*/

  VDIST001.XXX-RPT-FIL-ID = TA0MM002.XXX-RPT-FIL-ID;

  VDIST001.IM-IMDS-SBJT = TA0MM002.IM-IMDS-SBJT;

  VDIST001.IM-IMDS-ACT-TYP = TA0MM002.IM-IMDS-ACT-TYP;

  VDIST001.IM-IMDS-FIL-NM-1 = TA0MM002.IM-IMDS-FIL-NM-1;
  VDIST001.IM-IMDS-FIL-NM-2 = TA0MM002.IM-IMDS-FIL-NM-2;

  VDIST001.IM-TRGT-STALK-ID = TA0MW02.IM-TRGT-STALK-ID;

  VDIST001.IM-AGNT-STALK-ID = TA0MW02.IM-AGNT-STALK-ID;

  VDIST001.IM-NTFY-STALK-ID = TA0MW02.IM-NTFY-STALK-ID;

  VDIST001.IM-ERR-STALK-ID = TA0MW02.IM-ERR-STALK-ID;


end // end TA0M-25210

// Update distribution report.
Function TA0M-25220()
   /* ------------------------------------------------------------*/
   /* Update the changed data of an existing VDIST001 row.*/
   /* Street talk names have already been converted to Stalk ID's.*/
   /* ------------------------------------------------------------*/

   /* ----------------------------------------------------------*/
   /* Get current date and time.*/
   /* ----------------------------------------------------------*/

  XX0XS01();

  TA0MS-IO7010-S(); /* First select VDIST row*/

  if (SQLCA.VAGen_SQLCODE == 100)

    converseLib.validationFailed(41); /* Data not found.*/
    TAWREC.XXX-MSG-LOC-ID = "25220";
    TA0MW00.TAW-ERROR-FLAG = "Y";
    exit stack;

  else

    TA0M-25210(); /* Reload map values.*/

    VDIST001.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* Change dates*/

    VDIST001.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

    TA0MS-IO7010-U(); /* Update an existing VDIST row*/

    if (SQLCA.VAGen_SQLCODE == 0)

      converseLib.validationFailed(17); /* Record Updated.*/
      TAWREC.XXX-MSG-LOC-ID = "25220";
      set TA0MM002.TA0M-ACTION cursor; /* Reset cursor position.*/

    else

      converseLib.validationFailed(41); /* Data not found.*/
      TAWREC.XXX-MSG-LOC-ID = "25220";
      TA0MW00.TAW-ERROR-FLAG = "Y";
      exit stack;

    end

  end


end // end TA0M-25220

// Add distribution row.
Function TA0M-25230()
   /* ------------------------------------------------------------*/
   /* If adding a new report to VDIST, add one to VSECUR also.*/
   /* Street talk names have already been converted to Stalk ID's.*/
   /* ------------------------------------------------------------*/

  TA0M-25210(); /* Get VDIST data*/

   /* ----------------------------------------------------------*/
   /* Get current date and time.*/
   /* ----------------------------------------------------------*/

  XX0XS01();

  VDIST001.ZZ-SDT = XX0XW01.XX0XWDAT; /* Save date*/

  TA0MS-IO7010-A(); /* Add a new row to VDIST*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Add went well.*/
  )                           
    converseLib.validationFailed(16); /* Record added.*/
    TAWREC.XXX-MSG-LOC-ID = "25230";
    set TA0MM002.TA0M-ACTION cursor; /* Reset cursor position.*/

    if (TA0MW00.TA0MW-ADD-SCRTY-FLAG == "Y") /* New report.*/

      TA0M-25235(); /* Get security data*/

      VSECUR01.ZZ-SDT = XX0XW01.XX0XWDAT; /* Save date*/

      TA0MS-IO7020-A(); /* Add report to VSECUR table.*/

    end

  end


end // end TA0M-25230

// Get data from map 2 for vsecur
Function TA0M-25235()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the table storage area to be used.*/
   /* ------------------------------------------------------------*/

  set VSECUR01 empty; /* VSECUR01 table record.*/

   /* ------------------------------------------------------------*/
   /* Move the map fields to the table storage area.*/
   /* ------------------------------------------------------------*/

  VSECUR01.XXX-RPT-FIL-ID = TA0MM002.XXX-RPT-FIL-ID;

  VSECUR01.XXX-SCRTY-USER-ID = COMMAREA.CAUSERID;


end // end TA0M-25235

// Delete distribution row.
Function TA0M-25240()
   /* ------------------------------------------------------------*/
   /* If deleting a report, delete all it's row's in the VSECUR01 table.*/
   /* ------------------------------------------------------------*/

  TA0MS-IO7010-D(); /* Delete row from VDIST*/

  if (SQLCA.VAGen_SQLCODE == 0)

    converseLib.validationFailed(18); /* Record deleted.*/
    TAWREC.XXX-MSG-LOC-ID = "25240";

  else

    converseLib.validationFailed(41); /* Data not found.*/
    TAWREC.XXX-MSG-LOC-ID = "25240";
    TA0MW00.TAW-ERROR-FLAG = "Y";

    exit stack;

  end

  TA0MW00.TA0MW-DELETED-FLAG = "Y";

  set TA0MM002 initial; /* Clear out map if successfull*/

  set TA0MW02 empty; /* Clean out map storage*/


end // end TA0M-25240

// Get data from map2 for map1
Function TA0M-25250()
   /* ------------------------------------------------------------*/
   /* Move the map fields to map1's storage area.*/
   /* ------------------------------------------------------------*/

  TA0MW01.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR] = TA0MM002.XXX-RPT-FIL-ID;

  TA0MW01.IM-IMDS-SBJT[XXX-INX-FLD-NBR] = TA0MM002.IM-IMDS-SBJT;

  TA0MW01.IM-IMDS-ACT-TYP[XXX-INX-FLD-NBR] = TA0MM002.IM-IMDS-ACT-TYP;

  TA0MW01.IM-IMDS-FIL-NM-1[XXX-INX-FLD-NBR] = TA0MM002.IM-IMDS-FIL-NM-1;
  TA0MW01.IM-IMDS-FIL-NM-2[XXX-INX-FLD-NBR] = TA0MM002.IM-IMDS-FIL-NM-2;

  TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR] = TA0MW02.IM-TRGT-STALK-ID;

  TA0MW01.IM-AGNT-STALK-ID[XXX-INX-FLD-NBR] = TA0MW02.IM-AGNT-STALK-ID;

  TA0MW01.IM-NTFY-STALK-ID[XXX-INX-FLD-NBR] = TA0MW02.IM-NTFY-STALK-ID;

  TA0MW01.IM-ERR-STALK-ID[XXX-INX-FLD-NBR] = TA0MW02.IM-ERR-STALK-ID;


end // end TA0M-25250

// Check for popup call, convert
Function TA0MS-CHECK-STALK()
   /* ------------------------------------------------------------*/
   /* Move the current stalk into an array and search it's*/
   /* contents for a percent sign. if found, call the popup*/
   /* window to convert stalk, otherwise treat current stalk*/
   /* as a full street name and call IO7030-S to convert*/
   /* stalk into IM-EMP-DEVICE-ID.  In both cases, if no match is*/
   /* found, declare error.*/
   /* 1)  Do not allow wildcard '*' as a valid STALK name.*/
   /* 2) Pop up window needs all trailing blanks to be percent signs.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.TA0MW-STALK == "*")

    converseLib.validationFailed(30); /* Invalid value entered.*/
    TA0MW00.TAW-ERROR-FLAG = "Y";

    return;

  end

   /* ------------------------------------------------------------*/
   /* Search STALK for percent signs.*/
   /* ------------------------------------------------------------*/

  TA0MW00.TA0MW-STALK-ARRAY = TA0MW00.TA0MW-STALK;

  TA0MW00.TA0MW-INDEX = 1;

  TA0MW00.TA0MW-CALL-POP-UP = "N";

  while (TA0MW00.TA0MW-INDEX <= 100
  )
    if (TA0MW00.TA0MW-STALK-CHAR[TA0MW-INDEX] == "%"
     || TA0MW00.TA0MW-STALK-CHAR[TA0MW-INDEX] == "?")

      TA0MW-STALK-CHAR[TA0MW-INDEX] = "%"; /* Change '?' to '%'.*/

      TA0MW00.TA0MW-CALL-POP-UP = "Y";

    end

    TA0MW00.TA0MW-INDEX = TA0MW00.TA0MW-INDEX + 1;

  end

  if (TA0MW00.TA0MW-CALL-POP-UP == "Y")

    TA0MW00.TA0MW-POPUP-CALLED-FL = "Y"; /* Yes.*/

    /* ------------------------------------------------------------*/
    /* Replace trailing blanks with percent signs.*/
    /* ------------------------------------------------------------*/

    TA0MW00.TA0MW-INDEX = 100;

    TA0MW00.TA0MW-FILL-BLANKS = "Y";

    while (TA0MW00.TA0MW-INDEX >= 1 /* Run back thru array*/
     && TA0MW00.TA0MW-FILL-BLANKS == "Y")

      if (TA0MW00.TA0MW-STALK-CHAR[TA0MW-INDEX] == " ")
        TA0MW00.TA0MW-STALK-CHAR[TA0MW-INDEX] = "%";
      else
        TA0MW00.TA0MW-FILL-BLANKS = "N";
      end

      TA0MW00.TA0MW-INDEX = TA0MW00.TA0MW-INDEX - 1;

    end

    TA0MW00.TA0MW-SET-PAGE-FL = "Y";

    TA0MW00.TA0MW-SAVE-MAP2-ERR = converseVar.validationMsgNum;
    converseLib.validationFailed(0); /* Clean ezemno for popup*/

    set TAMREC empty; /* Popup window record.*/

    TAMREC.TAM-PARTIAL-KEY = TA0MW00.TA0MW-STALK-ARRAY;

    TAMREC.TAW-ADDRESS-NAME = TA0MW00.TAW-ADDRESS-NAME;

    XPTA-1000(); /* Call pop-up procs.*/

    if (TAMREC.TAM-SELECTED-STALK-NM <= " ")

      converseLib.validationFailed(26); /* STALK not found...*/
      TA0MW00.TAW-ERROR-FLAG = "Y";

    else

      TA0MW00.IM-EMP-DEVICE-ID = TAMREC.TAM-SELECTED-EMP-DEVICE-ID;

      TA0MW00.TA0MW-STALK = TAMREC.TAM-SELECTED-STALK-NM;

      if (TA0MW00.TA0MW-SAVE-MAP2-ERR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TA0MW00.TA0MW-SAVE-MAP2-ERR);
      end /* Restore map2 err msg.*/

      TA0MW00.TA0MW-STALK-FOUND-FLAG = "Y";

    end

  else

    set VSTALK01 empty;

    VSTALK01.XXX-STALK-NM = TA0MW00.TA0MW-STALK-ARRAY;

    VSTALK01.IM-EMP-DEVICE-ID = "*";

    TA0MS-IO7030-S(); /* VSTALK01 table call.*/

    if (SQLCA.VAGen_SQLCODE == 100)

      converseLib.validationFailed(26); /* STALK not found...*/
      TA0MW00.TAW-ERROR-FLAG = "Y";

      TA0MW00.IM-EMP-DEVICE-ID = 0;

    else

      TA0MW00.IM-EMP-DEVICE-ID = VSTALK01.IM-EMP-DEVICE-ID;

      TA0MW00.TA0MW-STALK-FOUND-FLAG = "Y";

    end

  end


end // end TA0MS-CHECK-STALK

// Add to distribution table
Function TA0MS-IO7010-A()
   /* ------------------------------------------------------------*/
   /* Add to DIMDS.DIST001 table*/
   /* ------------------------------------------------------------*/

  try
    call "IO7010" ("A ", SQLCA, VDIST001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
    )                           
      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7010A"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD TO TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDIST001"; /* Table view name*/
  TA1REC.TA1TBLKE = VDIST001.VDIST001-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7010-A

// Delete VDIST001 row
Function TA0MS-IO7010-D()
   /* ------------------------------------------------------------*/
   /* Delete the selected row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7010" ("D ", SQLCA, VDIST001) {isNoRefresh = yes, isExternal = yes};
  end /* Delete row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or not found.*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7010D";

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA0MW00.TAW-ERROR-FLAG = "Y";

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE VDIST001 ROW";
  TA1REC.TA1PGMNM = "TA0S    "; /* Program name*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDIST001"; /* Table view name*/
  TA1REC.TA1TBLKE = VDIST001.VDIST001-KEY;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7010-D

// Select distribution row
Function TA0MS-IO7010-S()
   /* ------------------------------------------------------------*/
   /* Select distribution row.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7010" ("S ", SQLCA, VDIST001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7010S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDIST001"; /* Table view name*/
  TA1REC.TA1TBLKE = VDIST001.VDIST001-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7010-S

// Update distribution table
Function TA0MS-IO7010-U()
   /* ------------------------------------------------------------*/
   /* Update distribution row.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7010" ("U ", SQLCA, VDIST001) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7010U"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VDIST001"; /* Table view name*/
  TA1REC.TA1TBLKE = VDIST001.VDIST001-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7010-U

// Add to streettalk table
Function TA0MS-IO7020-A()
   /* ------------------------------------------------------------*/
   /* Add to security row.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7020" ("A ", SQLCA, VSECUR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7020A"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA0MW00.TAW-ERROR-FLAG = "Y";
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD TO TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSECUR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSECUR01.VSECUR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7020-A

// Close VSECUR01 cursor
Function TA0MS-IO7020-C1()
   /* ------------------------------------------------------------*/
   /* Close the VSECUR01 selected set cursor.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7020" ("C1", SQLCA, VSECUR01) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7020C1"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  TA0MW00.TAW-ERROR-FLAG = "Y";
  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE VSECUR01 CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSECUR01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7020-C1

// Fetch next row in vsecur01 set
Function TA0MS-IO7020-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from VSECUR01.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7020" ("N1", SQLCA, VSECUR01) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TA0MW00.TA0MW-SECUR-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7020N1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSECUR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSECUR01.VSECUR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7020-N1

// Select security row
Function TA0MS-IO7020-S()
   /* ------------------------------------------------------------*/
   /* Select security row.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7020" ("S ", SQLCA, VSECUR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7020S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSECUR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSECUR01.VSECUR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7020-S

// Select and open VSECUR01 set
Function TA0MS-IO7020-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table join.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7020" ("S1", SQLCA, VSECUR01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7020S1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSECUR01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSECUR01.VSECUR01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7020-S1

// Select street talk row
Function TA0MS-IO7030-S()
   /* ------------------------------------------------------------*/
   /* Select street talk row.*/
   /* ------------------------------------------------------------*/

  try
    call "IO7030" ("S ", SQLCA, VSTALK01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "IO7030S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTALK01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSTALK01.VSTALK01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-IO7030-S

// Move selected line to map 2
Function TA0MS-MOVE-TO-MAP2()
   /* ------------------------------------------------------------*/
   /* If a line was selected, move TA0MW01 data to TA0MM002,*/
   /* TA0MW02, and move 'V' to w01 line indicator.*/
   /* ------------------------------------------------------------*/

  if (TA0MW00.XXX-INX-FLD-NBR >= 1 /* Index in range.*/
   && TA0MW00.XXX-INX-FLD-NBR <= TA0MW00.XXX-INX-LMT-NBR)

    /* ------------------------------------------------------------*/
    /* Report ID*/
    /* ------------------------------------------------------------*/

    TA0MM002.XXX-RPT-FIL-ID = TA0MW01.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR];

    TA0MW02.XXX-RPT-FIL-ID = TA0MW01.XXX-RPT-FIL-ID[XXX-INX-FLD-NBR];

    /* ------------------------------------------------------------*/
    /* Subject*/
    /* ------------------------------------------------------------*/

    TA0MM002.IM-IMDS-SBJT = TA0MW01.IM-IMDS-SBJT[XXX-INX-FLD-NBR];

    TA0MW02.IM-IMDS-SBJT = TA0MW01.IM-IMDS-SBJT[XXX-INX-FLD-NBR];

    /* ------------------------------------------------------------*/
    /* Action type*/
    /* ------------------------------------------------------------*/

    TA0MM002.IM-IMDS-ACT-TYP = TA0MW01.IM-IMDS-ACT-TYP[XXX-INX-FLD-NBR];

    TA0MW02.IM-IMDS-ACT-TYP = TA0MW01.IM-IMDS-ACT-TYP[XXX-INX-FLD-NBR];

    /* ------------------------------------------------------------*/
    /* File Name*/
    /* ------------------------------------------------------------*/

    TA0MW02.IM-IMDS-FIL-NM = TA0MW01.IM-IMDS-FIL-NM[XXX-INX-FLD-NBR];

    TA0MM002.IM-IMDS-FIL-NM-1 = TA0MW01.IM-IMDS-FIL-NM-1[XXX-INX-FLD-NBR];

    TA0MM002.IM-IMDS-FIL-NM-2 = TA0MW01.IM-IMDS-FIL-NM-2[XXX-INX-FLD-NBR];

    /* ------------------------------------------------------------*/
    /* Address ID's ( working storage only )*/
    /* ------------------------------------------------------------*/

    TA0MW02.IM-TRGT-STALK-ID = TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR];

    TA0MW02.IM-AGNT-STALK-ID = TA0MW01.IM-AGNT-STALK-ID[XXX-INX-FLD-NBR];

    TA0MW02.IM-NTFY-STALK-ID = TA0MW01.IM-NTFY-STALK-ID[XXX-INX-FLD-NBR];

    TA0MW02.IM-ERR-STALK-ID = TA0MW01.IM-ERR-STALK-ID[XXX-INX-FLD-NBR];

    /* ------------------------------------------------------------*/
    /* Street talk names*/
    /* ------------------------------------------------------------*/

    if (TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR] != " ")

      set VSTALK01 empty;
      VSTALK01.XXX-STALK-NM = "*";
      VSTALK01.IM-EMP-DEVICE-ID = TA0MW01.IM-TRGT-STALK-ID[XXX-INX-FLD-NBR];
      TA0MS-IO7030-S();
      TA0MW00.TA0MW-STALK = VSTALK01.XXX-STALK-NM;
      TA0MM002.IM-TRGT-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-TRGT-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

      TA0MW02.IM-TRGT-STALK-NM = TA0MW00.XXX-STALK-NM;
    end


    if (TA0MW01.IM-AGNT-STALK-ID[XXX-INX-FLD-NBR] != " ")

      set VSTALK01 empty;
      VSTALK01.XXX-STALK-NM = "*";
      VSTALK01.IM-EMP-DEVICE-ID = TA0MW01.IM-AGNT-STALK-ID[XXX-INX-FLD-NBR];
      TA0MS-IO7030-S();
      TA0MW00.TA0MW-STALK = VSTALK01.XXX-STALK-NM;
      TA0MM002.IM-AGNT-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-AGNT-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

      TA0MW02.IM-AGNT-STALK-NM = TA0MW00.XXX-STALK-NM;
    end


    if (TA0MW01.IM-NTFY-STALK-ID[XXX-INX-FLD-NBR] != " ")

      set VSTALK01 empty;
      VSTALK01.XXX-STALK-NM = "*";
      VSTALK01.IM-EMP-DEVICE-ID = TA0MW01.IM-NTFY-STALK-ID[XXX-INX-FLD-NBR];
      TA0MS-IO7030-S();
      TA0MW00.TA0MW-STALK = VSTALK01.XXX-STALK-NM;
      TA0MM002.IM-NTFY-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-NTFY-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

      TA0MW02.IM-NTFY-STALK-NM = TA0MW00.XXX-STALK-NM;
    end


    if (TA0MW01.IM-ERR-STALK-ID[XXX-INX-FLD-NBR] != " ")

      set VSTALK01 empty;
      VSTALK01.XXX-STALK-NM = "*";
      VSTALK01.IM-EMP-DEVICE-ID = TA0MW01.IM-ERR-STALK-ID[XXX-INX-FLD-NBR];
      TA0MS-IO7030-S();
      TA0MW00.TA0MW-STALK = VSTALK01.XXX-STALK-NM;
      TA0MM002.IM-ERR-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-ERR-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

      TA0MW02.IM-ERR-STALK-NM = TA0MW00.XXX-STALK-NM;
    end

    TA0MM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "V";

    TA0MW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "V";

  end


end // end TA0MS-MOVE-TO-MAP2

// Convert stalk's to emp-dev-id
Function TA0MS-STALK-TO-ID()
   /* ------------------------------------------------------------*/
   /* Convert and find out if any streettalk names were changed.*/
   /* ------------------------------------------------------------*/

  TA0MW00.TA0MW-SET-PAGE-FL = "N";

   /* ------------------------------------------------------------*/
   /* Error STALK may be blank.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-ERR-STALK-NM-1 == " ")
    TA0MW02.IM-ERR-STALK-ID = "          ";
  else

    TA0MW00.XXX-1PART-STALK-NM = TA0MM002.IM-ERR-STALK-NM-1;
    TA0MW00.XXX-2PART-STALK-NM = TA0MM002.IM-ERR-STALK-NM-2;

    TA0MW00.TA0MW-STALK-FOUND-FLAG = "N";

    TA0MW00.TAW-ADDRESS-NAME = "ERROR"; /* May be used in Popup window*/

    TA0MS-CHECK-STALK(); /* Check for pop-up, *'s, & convert.*/

    if (TA0MW00.TA0MW-STALK-FOUND-FLAG == "Y") /* Flag set in TA0M-24110*/
   /* Save IM-EMP-DEVICE-ID if good,*/
      TA0MW02.IM-ERR-STALK-ID = TA0MW00.IM-EMP-DEVICE-ID;

      TA0MM002.IM-ERR-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-ERR-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

    else /* Otherwise indicate error.*/
      TAWREC.XXX-MSG-LOC-ID = "STALK>ID"; /* Message location*/
      set TA0MM002.IM-ERR-STALK-NM-1 cursor, bold;
      set TA0MM002.IM-ERR-STALK-NM-2 bold;
    end

  end

   /* ------------------------------------------------------------*/
   /* Notify STALK may be blank.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-NTFY-STALK-NM-1 == " ")
    TA0MW02.IM-NTFY-STALK-ID = "          ";
  else

    TA0MW00.XXX-1PART-STALK-NM = TA0MM002.IM-NTFY-STALK-NM-1;
    TA0MW00.XXX-2PART-STALK-NM = TA0MM002.IM-NTFY-STALK-NM-2;

    TA0MW00.TA0MW-STALK-FOUND-FLAG = "N";

    TA0MW00.TAW-ADDRESS-NAME = "NOTIFY";
                                             /* May be used in Popup window*/

    TA0MS-CHECK-STALK(); /* Check for pop-up, *'s, & convert.*/

    if (TA0MW00.TA0MW-STALK-FOUND-FLAG == "Y") /* Flag set in TA0M-24110*/

      TA0MM002.IM-NTFY-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-NTFY-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

   /* Save IM-EMP-DEVICE-ID if good,*/
      TA0MW02.IM-NTFY-STALK-ID = TA0MW00.IM-EMP-DEVICE-ID;

    else /* Otherwise indicate error.*/
      TAWREC.XXX-MSG-LOC-ID = "STALK>ID"; /* Message location*/
      set TA0MM002.IM-NTFY-STALK-NM-1 cursor, bold;
      set TA0MM002.IM-NTFY-STALK-NM-2 bold;
    end

  end

   /* ------------------------------------------------------------*/
   /* Agent STALK must exist if action type is print.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-AGNT-STALK-NM-1 == " ")

    if (TA0MM002.IM-IMDS-ACT-TYP == "PRINT")
      TAWREC.XXX-MSG-LOC-ID = "STALK>ID"; /* Message location*/
      TA0MW00.TAW-ERROR-FLAG = "Y";
      converseLib.validationFailed(29); /* Must have agent to print.*/
      set TA0MM002.IM-AGNT-STALK-NM-1 cursor, bold;
      set TA0MM002.IM-AGNT-STALK-NM-2 bold;
    else
      TA0MW02.IM-AGNT-STALK-ID = "          ";
    end

  else
    TA0MW00.XXX-1PART-STALK-NM = TA0MM002.IM-AGNT-STALK-NM-1;
    TA0MW00.XXX-2PART-STALK-NM = TA0MM002.IM-AGNT-STALK-NM-2;

    TA0MW00.TA0MW-STALK-FOUND-FLAG = "N";

    TA0MW00.TAW-ADDRESS-NAME = "AGENT ";
                                             /* May be used in Popup window*/

    TA0MS-CHECK-STALK(); /* Check for pop-up, *'s, & convert.*/

    if (TA0MW00.TA0MW-STALK-FOUND-FLAG == "Y") /* Flag set in TA0M-24110*/

      TA0MM002.IM-AGNT-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-AGNT-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

   /* Save IM-EMP-DEVICE-ID if good,*/
      TA0MW02.IM-AGNT-STALK-ID = TA0MW00.IM-EMP-DEVICE-ID;

    else /* Otherwise indicate error.*/
      TAWREC.XXX-MSG-LOC-ID = "STALK>ID"; /* Message location*/
      set TA0MM002.IM-AGNT-STALK-NM-1 cursor, bold;
      set TA0MM002.IM-AGNT-STALK-NM-2 bold;
    end

  end

   /* ------------------------------------------------------------*/
   /* Target STALK must exist.*/
   /* ------------------------------------------------------------*/

  if (TA0MM002.IM-TRGT-STALK-NM-1 == " ")

    TAWREC.XXX-MSG-LOC-ID = "STALK>ID"; /* Message location*/
    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(24); /* Report must have target address.*/
    set TA0MM002.IM-TRGT-STALK-NM-1 cursor, bold;
    set TA0MM002.IM-TRGT-STALK-NM-2 bold;

  else

    TA0MW00.XXX-1PART-STALK-NM = TA0MM002.IM-TRGT-STALK-NM-1; /* Move target stalk.*/
    TA0MW00.XXX-2PART-STALK-NM = TA0MM002.IM-TRGT-STALK-NM-2;

    TA0MW00.TA0MW-STALK-FOUND-FLAG = "N";

    TA0MW00.TAW-ADDRESS-NAME = "TARGET";
                                             /* May be used in Popup window*/

    TA0MS-CHECK-STALK(); /* Check for pop-up, *'s, & convert.*/

    if (TA0MW00.TA0MW-STALK-FOUND-FLAG == "Y") /* Flag set in TA0M-24110*/

   /* Move target stalk.*/
      TA0MM002.IM-TRGT-STALK-NM-1 = TA0MW00.XXX-1PART-STALK-NM;
      TA0MM002.IM-TRGT-STALK-NM-2 = TA0MW00.XXX-2PART-STALK-NM;

      /* ------------------------------------------------------------*/
      /* If a new target name is being used, record amy not be updated,*/
      /* but msut be added as a new record.  For this purpose, if a*/
      /* pop-up window is called, do not reflect changes to TA0MW01*/
      /* so that key change can be checked on following edit.*/
      /* ------------------------------------------------------------*/

      if (TA0MW00.IM-EMP-DEVICE-ID != TA0MW02.IM-TRGT-STALK-ID)

        TA0MW00.TA0MW-KEY-CHNGD-FL = "Y";

      end

      if (TA0MW00.TA0MW-POPUP-CALLED-FL == "N")

   /* Save IM-EMP-DEVICE-ID*/
        TA0MW02.IM-TRGT-STALK-ID = TA0MW00.IM-EMP-DEVICE-ID;

      end

    else /* Otherwise indicate error.*/
      TAWREC.XXX-MSG-LOC-ID = "STALK>ID"; /* Message location*/
      set TA0MM002.IM-TRGT-STALK-NM-1 cursor, bold;
      set TA0MM002.IM-TRGT-STALK-NM-2 bold;
    end

  end

  if (TA0MW00.TA0MW-SET-PAGE-FL == "Y")

    converseLib.clearScreen();
     /* Clear out the pop-up map.*/

  end


end // end TA0MS-STALK-TO-ID

// Add page to temporary storage
Function TA0MS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA0MW01.XXX-TEMP-STG-LNTH = TA0MW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (TA0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TA0MW01 empty; /* M001 display storage*/

    TA0MW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  TA0MW00.TAW-ERROR-FLAG = "Y";
  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0050-A

// Purge any temporary storage
Function TA0MS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TA0MW01 empty; /* M001 display storage*/

  TA0MW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  TA0MW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TA0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  TA0MW00.TAW-ERROR-FLAG = "Y";
  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0050-P

// Read temporary storage page
Function TA0MS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA0MW01.XXX-TEMP-STG-LNTH = TA0MW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TA0MW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TA0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  TA0MW00.TAW-ERROR-FLAG = "Y";
  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0050-R

// Update temporary storage page
Function TA0MS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TA0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  TA0MW00.TAW-ERROR-FLAG = "Y";
  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0050-U

// Close DIMDS join cursor
Function TA0MS-TA0580-C1()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the joined set of table rows.*/
   /* ------------------------------------------------------------*/

  try
    call "TA0580" ("C1", SQLCA, TA0MREC) {isNoRefresh = yes, isExternal = yes};
  end /* Close cursor*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "TA0580C1"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  TA0MW00.TAW-ERROR-FLAG = "Y";
  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED JOIN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "V?????01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0580-C1

// Fetch next row in join
Function TA0MS-TA0580-N1()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table join.*/
   /* ------------------------------------------------------------*/

  try
    call "TA0580" ("N1", SQLCA, TA0MREC) {isNoRefresh = yes, isExternal = yes};
  end /* Fetch next row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TA0MW00.TA0MW-REPORT-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "TA0580N1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "V?????01"; /* Table view name*/
  TA1REC.TA1TBLKE = TA0MREC.TA0MREC-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0580-N1

// Select and open join
Function TA0MS-TA0580-S1()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table join.*/
   /* ------------------------------------------------------------*/

  try
    call "TA0580" ("S1", SQLCA, TA0MREC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "TA0580S1"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(27); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    TA0MW00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "V?????01"; /* Table view name*/
  TA1REC.TA1TBLKE = TA0MREC.TA0MREC-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0MS-TA0580-S1

// STALK's pop-up window
Function XPTA-1000()
   /* ************************************************************/
   /* *  Street talk processing is done accordingly:            **/
   /* *    - open cursor DIMDS.VSTALK01                         **/
   /* *    - fetch each row and save STALK and IM-EMP-DEVICE-ID **/
   /* *      into the array (90 occurrences)                    **/
   /* *    - close cursor                                       **/
   /* *    - format and display XPTAM001 map                    **/
   /* *    - check if selection has been made before exiting    **/
   /* ************************************************************/

  TAMREC.TAM-POPUP-INX-MAX = 10; /* Init window max.*/

  set VSTALK01 empty; /* Initialize record area*/

  VSTALK01.XXX-STALK-NM = TAMREC.TAM-PARTIAL-KEY;

  XSTAS-TA0570-S1(); /* Open DIMDS.VSTALK01 cursor*/
                                      /* using "like" SQL option*/
  TAMREC.TAM-STALK-INDEX = 1;

   /* -----------------------------------------------------------*/
   /* chg while stmt ... added "and" condition .... vcowan 11/29/94*/
   /* note:  this "while" stmt allows for 99 occurances;*/
         /* tamrec allows for 200 occurances*/
   /* -----------------------------------------------------------*/
  while (SQLCA.VAGen_SQLCODE == 0
   && TAMREC.TAM-STALK-INDEX < 99)

    XSTAS-TA0570-N1(); /* Fetch next DIMDS.VSTALK01 row*/

    if (SQLCA.VAGen_SQLCODE == 0)

      TAMREC.IM-EMP-DEVICE-ID[TAM-STALK-INDEX] = VSTALK01.IM-EMP-DEVICE-ID;
                                   /* Employee or device number*/
      TAMREC.XXX-STALK-NM[TAM-STALK-INDEX] = VSTALK01.XXX-STALK-NM;
                                   /* Street talk name*/
      TAMREC.TAM-STALK-MAX = TAMREC.TAM-STALK-INDEX;

      TAMREC.TAM-STALK-INDEX = TAMREC.TAM-STALK-INDEX + 1;

    end

    if (TAMREC.TAM-STALK-INDEX > 99)

      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1PGMNM = "XPTA-1000";
      TA1REC.TA1LOC = "STALK POPUP TABLE EXCEEDED";
      TA1REC.TA1MAP = "TA0MM002";
      TA1REC.TA1DBASE = "DIMDS   ";
      TA1REC.TA1TBLVU = "VSTALK01";
      TA1REC.TA1TBLKE = VSTALK01.VSTALK01-KEY;

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes};

    end

  end

  XSTAS-TA0570-C1(); /* Close cursor*/

  TAMREC.TAM-STALK-INDEX = 1; /* Initialize index*/

  if (TAMREC.XXX-STALK-NM[TAM-STALK-INDEX] > " ") /* Found a STALK*/

    set XMTAM001 initial; /* Clear pop-up window*/

    while (TAMREC.TAM-POPUP-WINDOW-DONE-FL != "Y")

      XPTA-1100(); /* Format display pop-up window*/

    end

  end


end // end XPTA-1000

// Format and display XMTAM001
Function XPTA-1100()
   /* ************************************************************/
   /* Format and display XMTAM001 map                        **/
   /* ************************************************************/

  if (converseVar.eventKey is pa2)

    TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";
    TAMREC.TAM-POPUP-WINDOW-DONE-FL = "Y"; /* Pop-up window done*/
    return;

  end

  XPTA-1110(); /* Check for selected STALK name*/

  if (converseVar.validationMsgNum == 0) /* If no error*/

    if (converseVar.eventKey is pf8) /* Forward browsing*/

      if (TAMREC.TAM-STALK-SEL-FL == " ")
        if (TAMREC.TAM-MAP-LAST-INDEX < TAMREC.TAM-STALK-MAX)
                                  /* Continue fward brws*/
          TAMREC.TAM-STALK-INDEX = TAMREC.TAM-MAP-LAST-INDEX + 1;
        else
          converseLib.validationFailed(04); /* Last page*/
          TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";
        end
      else
        converseLib.validationFailed(39); /* Select is done, no browsing*/
        TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";
      end

    else

      if (converseVar.eventKey is pf7) /* Backward browsing*/

        if (TAMREC.TAM-STALK-SEL-FL == " ")
          if (TAMREC.TAM-MAP-FIRST-INDEX > TAMREC.TAM-POPUP-INX-MAX)
                                   /* Continue backward browsing*/
            TAMREC.TAM-STALK-INDEX = TAMREC.TAM-MAP-FIRST-INDEX - TAMREC.TAM-POPUP-INX-MAX;
          else
            converseLib.validationFailed(03); /* No scroll back past 1st page*/
            TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";
          end
        else
          converseLib.validationFailed(39); /* Select is done, no browsing*/
          TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";
        end

      else

        if (converseVar.eventKey is enter)

          if (TAMREC.TAM-STALK-SEL-FL == " ")
            if (TAMREC.TAM-STALK-INDEX == 1 /* First time around*/
             && XMTAM001.XXX-STALK-NM[TAM-POPUP-WINDOW-IDX] == " ")
               /* Next sentence*/
            else
              converseLib.validationFailed(40); /* Need to select a line*/
              TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";
            end
          else
            TAMREC.TAM-POPUP-WINDOW-DONE-FL = "Y";
                                   /* Pop-up window done*/
            return;
          end

        else

          converseLib.validationFailed(02); /* Invalid attention key*/
          TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";

        end

      end

    end

    if (converseVar.validationMsgNum == 0) /* No error.*/

      set XMTAM001 initial; /* Clear pop-up window*/

      XMTAM001.TAW-ADDRESS-NAME = TAMREC.TAW-ADDRESS-NAME;

      TAMREC.TAM-POPUP-WINDOW-IDX = 1;

      while (TAMREC.TAM-STALK-INDEX <= TAMREC.TAM-STALK-MAX
       && TAMREC.TAM-POPUP-WINDOW-IDX <= TAMREC.TAM-POPUP-INX-MAX)

        XMTAM001.XXX-STALK-NM[TAM-POPUP-WINDOW-IDX] = TAMREC.XXX-1PART-STALK-NM[TAM-STALK-INDEX];
        set XMTAM001.TAW-SELECT[TAM-POPUP-WINDOW-IDX] normal;

        if (TAMREC.TAM-POPUP-WINDOW-IDX == 1)
          TAMREC.TAM-MAP-FIRST-INDEX = TAMREC.TAM-STALK-INDEX;
        end

        TAMREC.TAM-MAP-LAST-INDEX = TAMREC.TAM-STALK-INDEX;

        TAMREC.TAM-STALK-INDEX = TAMREC.TAM-STALK-INDEX + 1;
        TAMREC.TAM-POPUP-WINDOW-IDX = TAMREC.TAM-POPUP-WINDOW-IDX + 1;

      end

    end

  end

  XMTAM001.XXXERRID = TAWREC.XXX-MSG-LOC-ID;


  converse XMTAM001 ;
end // end XPTA-1100

// Check for selected STALK
Function XPTA-1110()
   /* ************************************************************/
   /* Check for selected street talk name                    **/
   /* ************************************************************/

  TAMREC.TAM-POPUP-WINDOW-IDX = 1;

  while (TAMREC.TAM-POPUP-WINDOW-IDX <= TAMREC.TAM-POPUP-INX-MAX
   && XMTAM001.XXX-STALK-NM[TAM-POPUP-WINDOW-IDX] > " ")

    if (XMTAM001.TAW-SELECT[TAM-POPUP-WINDOW-IDX] > " ")

      if (XMTAM001.TAW-SELECT[TAM-POPUP-WINDOW-IDX] == "S")

        if (TAMREC.TAM-STALK-SEL-FL == "Y")
          TAMREC.TAM-STALK-INDEX = TAMREC.TAM-MAP-FIRST-INDEX +           TAMREC.TAM-POPUP-WINDOW-IDX - 1;

          if (TAMREC.XXX-STALK-NM[TAM-STALK-INDEX] == 
          TAMREC.TAM-SELECTED-STALK-NM)

            if (converseVar.eventKey is enter)
               /* Next sentence*/
            else
              converseLib.validationFailed(38); /* Cannot select and scroll*/
              set XMTAM001.TAW-SELECT[TAM-POPUP-WINDOW-IDX] cursor, bold;
              TAWREC.XXX-MSG-LOC-ID = "XPTA-1110";
            end
          else
            converseLib.validationFailed(39); /* May only select one line*/
            set XMTAM001.TAW-SELECT[TAM-POPUP-WINDOW-IDX] cursor, bold;
            TAWREC.XXX-MSG-LOC-ID = "XPSR-1110";
          end
        else
          TAMREC.TAM-STALK-SEL-FL = "Y";
          TAMREC.TAM-STALK-INDEX = TAMREC.TAM-MAP-FIRST-INDEX +           TAMREC.TAM-POPUP-WINDOW-IDX - 1;
          TAMREC.TAM-SELECTED-STALK-NM = TAMREC.XXX-STALK-NM[TAM-STALK-INDEX];
          TAMREC.TAM-SELECTED-EMP-DEVICE-ID = TAMREC.IM-EMP-DEVICE-ID[TAM-STALK-INDEX];
        end

      else

        converseLib.validationFailed(5); /* Select value must be 's'*/
        set XMTAM001.TAW-SELECT[TAM-POPUP-WINDOW-IDX] cursor, bold;
        TAWREC.XXX-MSG-LOC-ID = "XPSR-1110";

      end

    else

      if (TAMREC.TAM-STALK-SEL-FL == "Y")
        TAMREC.TAM-STALK-INDEX = TAMREC.TAM-MAP-FIRST-INDEX +         TAMREC.TAM-POPUP-WINDOW-IDX - 1;
        if (TAMREC.XXX-STALK-NM[TAM-STALK-INDEX] == 
        TAMREC.TAM-SELECTED-STALK-NM)
          TAMREC.TAM-STALK-SEL-FL = " ";
        end
      end

    end

    TAMREC.TAM-POPUP-WINDOW-IDX = TAMREC.TAM-POPUP-WINDOW-IDX + 1;

  end


end // end XPTA-1110

// Close pop-up stalk cursor
Function XSTAS-TA0570-C1()
   /* ****************************************************/
   /* Close cursor for DIMDS.VSTALK01*/
   /* ****************************************************/

  try
    call "TA0570" ("C1", SQLCA, VSTALK01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      TAWREC.XXX-MSG-LOC-ID = "XPSR-1300"; /* Module identification*/

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(27); /* Data in use by another*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(34); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPTA-1300"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE SCAN FOR STALK POPUP";
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTALK01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSTALK01.VSTALK01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/


end // end XSTAS-TA0570-C1

// Fetch next pop-up cursor
Function XSTAS-TA0570-N1()
   /* ****************************************************/
   /* Fetch a row from DIMDS.VSTALK01*/
   /* ****************************************************/

  try
    call "TA0570" ("N1", SQLCA, VSTALK01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0
     || SQLCA.VAGen_SQLCODE == 100)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      TAWREC.XXX-MSG-LOC-ID = "XPTA-1200";

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(27); /* Data in use by another*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(34); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPTA-1200"; /* Process name*/
  TA1REC.TA1LOC = "SELECT NEXT STALK FOR POPUP";
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTALK01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSTALK01.VSTALK01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/


end // end XSTAS-TA0570-N1

// Select and open pop-up window
Function XSTAS-TA0570-S1()
   /* ------------------------------------------------------------*/
   /* Open cursor for DIMDS.VSTALK01*/
   /* ------------------------------------------------------------*/

  try
    call "TA0570" ("S1", SQLCA, VSTALK01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000")

    if (SQLCA.VAGen_SQLCODE == 0)
      return;
    else

      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      TAWREC.XXX-MSG-LOC-ID = "XPTA-1100";

      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(27); /* Data in use by another appl*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(34); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

    end

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "XPTA-1100"; /* Process name*/
  TA1REC.TA1LOC = "SELECT SCAN STALK POPUP  ";
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSTALK01"; /* Table view name*/
  TA1REC.TA1TBLKE = VSTALK01.VSTALK01-KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/


end // end XSTAS-TA0570-S1

//*** RECORD=TA0MREC ****
// ***************** TA0580 TABLE VIEW ************************
// 
// DB2 TABLE VIEW:          JOIN OF DIMDS.VSECUR01
//                              AND DIMDS.VDIST001
// 
// DCLGEN MEMBER:           NONE
// 
// I/O MODULE:              TA0580
// 
// CSP SUBROUTINE:          NONE
// 
// KEY TO TABLE:            XXX-RPT-FIL-ID,
//                          XXX-SCRTY-USER-ID
// 
// CSP record for TA0580 IO mod, join of two DIMDS tables,
// VDIST001, and VSECUR01.
// 
// Fields over 100 bytes long are subdivided into 2 parts
// so that they may be displayed on screen.  Pattern :
//                   05 field_name
//                   10 field_name1
//                   10 field_name2
// 
// MIANTENANCE HISTORY:
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     07/02/94  RMORGA  NEW RECORD.
// ***********************
Record TA0MREC type basicRecord
  10 TA0MREC-KEY TA0MREC-KEY ; 
    15 XXX-SCRTY-USER-ID XXX-SCRTY-USER-ID ; 
    15 XXX-RPT-FIL-ID XXX-RPT-FIL-ID ; 
  10 IM-TRGT-STALK-ID IM-TRGT-STALK-ID ; 
  10 IM-AGNT-STALK-ID IM-AGNT-STALK-ID ; 
  10 IM-NTFY-STALK-ID IM-NTFY-STALK-ID ; 
  10 IM-ERR-STALK-ID IM-ERR-STALK-ID ; 
  10 IM-IMDS-SBJT IM-IMDS-SBJT ; 
  10 IM-IMDS-ACT-TYP IM-IMDS-ACT-TYP ; 
  10 IM-IMDS-FIL-NM IM-IMDS-FIL-NM ; 
    15 IM-IMDS-FIL-NM-1 IM-IMDS-FIL-NM-1 ; 
    15 IM-IMDS-FIL-NM-2 IM-IMDS-FIL-NM-2 ; 
end // end TA0MREC

//*** RECORD=TA0MW00 ****
// ------------------------------------------------------------
// TA0M Application working storage.
// ------------------------------------------------------------
// Keys, Flags, and such.
// Passing fields for handling xtra length fields.
// 
// ------  --------  ------  ----------------------------------
// CONTROL   DATE     NAME   DESCRIPTION OF CHANGE
// ------  --------  ------  ----------------------------------
// NONE    02/07/94  RMORGA  NEW RECORD.
// ***********************
Record TA0MW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
  10 TA0MW-STALK-FOUND-FLAG TA0MW-STALK-FOUND-FLAG ; 
  10 TA0MW-FILL-BLANKS TA0MW-FILL-BLANKS ; 
  10 TA0MW-SET-PAGE-FL TA0MW-SET-PAGE-FL ; 
  10 TA0MW-SAVE-MAP2-ERR TA0MW-SAVE-MAP2-ERR ; 
  10 XXX-STALK-NM XXX-STALK-NM ; 
  10 TA0MW-INDEX TA0MW-INDEX ; 
  10 TA0MW-REPORT-EOF-FL TA0MW-REPORT-EOF-FL ; 
  10 TA0MW-CALL-POP-UP TA0MW-CALL-POP-UP ; 
  10 TA0MW-POPUP-CALLED-FL TA0MW-POPUP-CALLED-FL ; 
  10 TA0MW-SECUR-EOF-FL TA0MW-SECUR-EOF-FL ; 
  10 TA0MW-ADD-FLAG TA0MW-ADD-FLAG ; 
  10 TA0MW-DELETED-FLAG TA0MW-DELETED-FLAG ; 
  10 TA0MW-ADD-SCRTY-FLAG TA0MW-ADD-SCRTY-FLAG ; 
  10 TA0MW-KEY-CHNGD-FL TA0MW-KEY-CHNGD-FL ; 
  10 TAW-ERROR-FLAG TAW-ERROR-FLAG ; 
  10 TAW-ADDRESS-NAME TAW-ADDRESS-NAME ; 
  10 IM-EMP-DEVICE-ID IM-EMP-DEVICE-ID ; 
  10 TA0MW-STALK TA0MW-STALK ; 
    15 XXX-1PART-STALK-NM XXX-1PART-STALK-NM ; 
    15 XXX-2PART-STALK-NM XXX-2PART-STALK-NM ; 
  10 TA0MW-STALK-ARRAY TA0MW-STALK-ARRAY ; 
    15 TA0MW-STALK-CHAR TA0MW-STALK-CHAR [100] ; 
  10 TA0MW-FILE-ARRAY TA0MW-FILE-ARRAY ; 
    15 TA0MW-FILE-CHAR TA0MW-FILE-CHAR [114] ; 
end // end TA0MW00

//*** RECORD=TA0MW01 ****
// ------------------------------------------------------------
// TA0M map 1 working storage,
// ------------------------------------------------------------
// Copy of DIMDS.VDIST001 and DIMDS.VSECUR01 join for temp
// storage.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     02/07/94  RMORGA  NEW RECORD.
// ***********************
Record TA0MW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 * char(2888) ; 
    10 TAW-SCRTY-USER-KEY TAW-SCRTY-USER-KEY ; 
    10 TAW-RPT-FIL-KEY TAW-RPT-FIL-KEY ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [13] ; 
    10 XXX-SCRTY-USER-ID XXX-SCRTY-USER-ID [13] ; 
    10 XXX-RPT-FIL-ID XXX-RPT-FIL-ID [13] ; 
    10 IM-TRGT-STALK-ID IM-TRGT-STALK-ID [13] ; 
    10 IM-AGNT-STALK-ID IM-AGNT-STALK-ID [13] ; 
    10 IM-NTFY-STALK-ID IM-NTFY-STALK-ID [13] ; 
    10 IM-ERR-STALK-ID IM-ERR-STALK-ID [13] ; 
    10 IM-IMDS-SBJT IM-IMDS-SBJT [13] ; 
    10 IM-IMDS-ACT-TYP IM-IMDS-ACT-TYP [13] ; 
    10 IM-IMDS-FIL-NM IM-IMDS-FIL-NM [13] ; 
      15 IM-IMDS-FIL-NM-1 IM-IMDS-FIL-NM-1 ; 
      15 IM-IMDS-FIL-NM-2 IM-IMDS-FIL-NM-2 ; 
end // end TA0MW01

//*** RECORD=TA0MW02 ****
// ------------------------------------------------------------
// TA0M Map 2 display storage.
// ------------------------------------------------------------
// 
// MAINTENANCE HISTORY:
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     02/07/94  RMORGA  NEW RECORD.
// ***********************
Record TA0MW02 type basicRecord
  10 XXX-RPT-FIL-ID XXX-RPT-FIL-ID ; 
  10 IM-TRGT-STALK-NM IM-TRGT-STALK-NM ; 
    15 IM-TRGT-STALK-NM-1 IM-TRGT-STALK-NM-1 ; 
    15 IM-TRGT-STALK-NM-2 IM-TRGT-STALK-NM-2 ; 
  10 IM-TRGT-STALK-ID IM-TRGT-STALK-ID ; 
  10 IM-AGNT-STALK-NM IM-AGNT-STALK-NM ; 
    15 IM-AGNT-STALK-NM-1 IM-AGNT-STALK-NM-1 ; 
    15 IM-AGNT-STALK-NM-2 IM-AGNT-STALK-NM-2 ; 
  10 IM-AGNT-STALK-ID IM-AGNT-STALK-ID ; 
  10 IM-NTFY-STALK-NM IM-NTFY-STALK-NM ; 
    15 IM-NTFY-STALK-NM-1 IM-NTFY-STALK-NM-1 ; 
    15 IM-NTFY-STALK-NM-2 IM-NTFY-STALK-NM-2 ; 
  10 IM-NTFY-STALK-ID IM-NTFY-STALK-ID ; 
  10 IM-ERR-STALK-NM IM-ERR-STALK-NM ; 
    15 IM-ERR-STALK-NM-1 IM-ERR-STALK-NM-1 ; 
    15 IM-ERR-STALK-NM-2 IM-ERR-STALK-NM-2 ; 
  10 IM-ERR-STALK-ID IM-ERR-STALK-ID ; 
  10 IM-IMDS-SBJT IM-IMDS-SBJT ; 
  10 IM-IMDS-ACT-TYP IM-IMDS-ACT-TYP ; 
  10 IM-IMDS-FIL-NM IM-IMDS-FIL-NM ; 
    15 IM-IMDS-FIL-NM-1 IM-IMDS-FIL-NM-1 ; 
    15 IM-IMDS-FIL-NM-2 IM-IMDS-FIL-NM-2 ; 
end // end TA0MW02

//*** RECORD=TAMREC ****
// ************************************************************
// 
//   ****  Street talk POP-UP WINDOW WORKING RECORD  ****
// 
// ************************************************************
// 
// Overview :
//            This is a working record used in processing
//            STREET TALK SELECTION POP-UP WINDOW.
// 
// CSP SUBROUTINE:     XPTA-1000
//                     XPTA-1100
//                     XPTA-1110
//                     XMTAM XMTAM001
// 
// Maintenance History :
// 
// CNTRL  DATE     NAME   DESCRIPTION OF CHANGE
// -----  --------  ------  ---------------------------------
// NONE   12/29/93  rmorga  created
// tsup   11/15/94  vcowan  chg: tam-stalk-id-array occurs from
//                          50 to 200 -- caused cics abend 1006
// ************************************************************
// **********************
Record TAMREC type basicRecord
  5 TAW-ADDRESS-NAME TAW-ADDRESS-NAME ; 
  5 TAM-PARTIAL-KEY TAM-PARTIAL-KEY ; 
  5 TAM-SELECTED-STALK-NM TAM-SELECTED-STALK-NM ; 
  5 TAM-SELECTED-EMP-DEVICE-ID TAM-SELECTED-EMP-DEVICE-ID ; 
  5 TAM-STALK-SEL-FL TAM-STALK-SEL-FL ; 
  5 TAM-POPUP-WINDOW-DONE-FL TAM-POPUP-WINDOW-DONE-FL ; 
  5 TAM-STALK-INDEX TAM-STALK-INDEX ; 
  5 TAM-STALK-MAX TAM-STALK-MAX ; 
  5 TAM-POPUP-WINDOW-IDX TAM-POPUP-WINDOW-IDX ; 
  5 TAM-POPUP-INX-MAX TAM-POPUP-INX-MAX ; 
  5 TAM-MAP-FIRST-INDEX TAM-MAP-FIRST-INDEX ; 
  5 TAM-MAP-LAST-INDEX TAM-MAP-LAST-INDEX ; 
  5 TAM-STALK-ID-ARRAY TAM-STALK-ID-ARRAY [200] ; 
    10 IM-EMP-DEVICE-ID IM-EMP-DEVICE-ID ; 
    10 XXX-STALK-NM XXX-STALK-NM ; 
      15 XXX-1PART-STALK-NM XXX-1PART-STALK-NM ; 
      15 * char(50) ; // STALK first half
end // end TAMREC

// Agent  addr
DataItem IM-AGNT-STALK-NM char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Agent  ID-first half
DataItem IM-AGNT-STALK-NM-1 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Agent  ID-second half
DataItem IM-AGNT-STALK-NM-2 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error  addr
DataItem IM-ERR-STALK-NM char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error  ID-first half
DataItem IM-ERR-STALK-NM-1 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error  ID-second half
DataItem IM-ERR-STALK-NM-2 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Notify addr
DataItem IM-NTFY-STALK-NM char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Notify ID-first half
DataItem IM-NTFY-STALK-NM-1 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Notify ID-second half
DataItem IM-NTFY-STALK-NM-2 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Target addr
DataItem IM-TRGT-STALK-NM char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Target ID-first half
DataItem IM-TRGT-STALK-NM-1 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Target ID-second half
DataItem IM-TRGT-STALK-NM-2 char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TA0580 IO mod key
DataItem TA0MREC-KEY char(28)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Add or insert, (vdist001, PF9)
DataItem TA0MW-ADD-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Add a row to vsecur01
DataItem TA0MW-ADD-SCRTY-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Flag for searching STALK chars
DataItem TA0MW-CALL-POP-UP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Row deleted from map2
DataItem TA0MW-DELETED-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// File character search array
DataItem TA0MW-FILE-ARRAY char(114)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Array of char's to be searched
DataItem TA0MW-FILE-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Replace trailing blanks flag.
DataItem TA0MW-FILL-BLANKS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index
DataItem TA0MW-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Map2 key changed flag
DataItem TA0MW-KEY-CHNGD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// If popup used, just update scr
DataItem TA0MW-POPUP-CALLED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of DIMDS join flag
DataItem TA0MW-REPORT-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save EZEMNO when calling popup
DataItem TA0MW-SAVE-MAP2-ERR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// End of secur cursor
DataItem TA0MW-SECUR-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Set map2 to page (clear popup)
DataItem TA0MW-SET-PAGE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Streettalk holding area
DataItem TA0MW-STALK char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Streettalk name array
DataItem TA0MW-STALK-ARRAY char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Streettalk name elements
DataItem TA0MW-STALK-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Stalk found for second map.
DataItem TA0MW-STALK-FOUND-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selected STALK
DataItem TAM-SELECTED-STALK-NM char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STALK array
DataItem TAM-STALK-ID-ARRAY char(110)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STALK index
DataItem TAM-STALK-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum index value
DataItem TAM-STALK-MAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// selected STALK flag
DataItem TAM-STALK-SEL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

