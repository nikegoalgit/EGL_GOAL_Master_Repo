package ta0x;
import corpcom1.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
//*** PROGRAM=TA0X ****
// ************************************************************
// **   purpose for ta0x                                    ***
// ***                                                      ***
// ***  this application demonstrates how to use low-values ***
// ***  (hex 00) & high-values (hex FF).....reference the   ***
// ***  CSP coding in process: ta0x-test-hex                ***
// ***                                                      ***
// ***  NOTE:  this is not a working application....it can  ***
// ***  be evaluated only via the TEST/TRACE option of CSP  ***
// ***                                                      ***
// ***  reason for ta0x:  Carol Haertlein had a need in     ***
// ***  an application she is deveoping                     ***
// ***                                                      ***
// ************************************************************
// ***                                                      ***
// ***  all testing must be done using the TEST/TRACE option***
// ***  of CSP                                              ***
// ***                                                      ***
// ************************************************************
// **   maintenance log for ta0x                            ***
// ***                                                      ***
// ***  --date--  userid  description                       ***
// ***  12/26/91  vcowan  orginal specs                     ***
// ************************************************************
// *********************
Program TA0X type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  TA0XW01 TA0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  //  use  TA0XM // VAGen Info - unused formGroup    {
  //    pfKeyEquate = yes
  //  };
  

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    TA0X-TEST-HEX: TA0X-TEST-HEX();
    exit program;
  end // end main
end // end TA0X

// test low-values & high-values
Function TA0X-TEST-HEX()
   /* ------------------------------------------------------------*/
   /* test low-values (hex 00) & high-values (hex FF)*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* initialize & test ta0xw-hex-FF data-item*/
   /* ------------------------------------------------------------*/

  TA0XW01.TA0XW-BIN2 = 255;
  TA0XW01.TA0XW-HEX-FF = TA0XW01.TA0XW-HEX;

  if (TA0XW01.TA0XW-HEX-FF > "9")
    TA0XW01.TA0XW-HEX-FF-YES-FLAG = "Y";
  end


   /* ------------------------------------------------------------*/
   /* initialize & test ta0xw-hex-00 data-item*/
   /* ------------------------------------------------------------*/

  TA0XW01.TA0XW-BIN2 = 0;
  TA0XW01.TA0XW-HEX-00 = TA0XW01.TA0XW-HEX;

  if (TA0XW01.TA0XW-HEX-00 < "A")
    TA0XW01.TA0XW-HEX-00-YES-FLAG = "Y";
  end

end // end TA0X-TEST-HEX

//*** RECORD=TA0XW01 ****
// ************************************************************
// ***  ta0xw01 working-storage record for ta0x             ***
// ***                                                      ***
// ***  sample of field definitions for hex 00 & hex FF     ***
// ***------------------------------------------------------***
// ***      Maintenance log                                 ***
// ***   DATE   USERID   COMMENTS                           ***
// *** 12/26/91 vcowan   original specs                     ***
// ************************************************************
// ***********************
Record TA0XW01 type basicRecord
  5 TA0XW-BIN2 TA0XW-BIN2 ; 
    10 TA0XW-FIL1 TA0XW-FIL1 ; 
    10 TA0XW-HEX TA0XW-HEX ; 
  5 TA0XW-HEX-00 TA0XW-HEX-00 ; 
  5 TA0XW-HEX-FF TA0XW-HEX-FF ; 
  5 TA0XW-HEX-00-YES-FLAG TA0XW-HEX-00-YES-FLAG ; 
  5 TA0XW-HEX-FF-YES-FLAG TA0XW-HEX-FF-YES-FLAG ; 
end // end TA0XW01

// 2-byte binary field
DataItem TA0XW-BIN2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 1-byte filler value--not used
DataItem TA0XW-FIL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1-byte hex value--used by appl
DataItem TA0XW-HEX char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hex 00 value save area
DataItem TA0XW-HEX-00 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hex 00 yes flag...see IF stmt
DataItem TA0XW-HEX-00-YES-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hex FF value save area
DataItem TA0XW-HEX-FF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hex FF yes flag...see IF stmt
DataItem TA0XW-HEX-FF-YES-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

