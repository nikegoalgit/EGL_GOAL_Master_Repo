package ta0k;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import mn.common.*;
import ta.common.*;
//*** PROGRAM=TA0K ****
// This application allows a user to inquire on rows
// in a DB2 table.
// 
// The application will fill the screen initially with all rows
// from the table.  The user may then scroll within the
// selected
// set.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      10/08/96  jbuch1  New application.
// *********************
Program TA0K type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  HLDWREC HLDWREC; // record
  MNVREC MNVREC; // record
  SQLCA SQLCA; // record
  TA0KW00 TA0KW00; // record
  TA0KW01 TA0KW01; // record
  TA0KW011 TA0KW011; // record
  TA0KW03 TA0KW03; // record
  TA0KWCA1 TA0KWCA1; // record
  TA0KWM01 TA0KWM01; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TAWREC TAWREC; // record
  VCTHDT01 VCTHDT01; // record
  VCTHLD01 VCTHLD01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XCTTBL {deleteAfterUse = yes}; // table
  use TA0KT01 {deleteAfterUse = yes}; // table
  use TA0KM.TA0KM001,  // forms
      TA0KM.XX0XM001, 
      TA0KM.XX0XM002, 
      TA0KM.XX0XM003
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTA-00000: XPTA-00000();
    if (COMMAREA.CAFRMSYS == "GD")

      TA0KWCA1.TA0KWCA1-REC = COMMAREA.CA-USER-WORKAREA-2K-B;

      TA0KW00.TA0KW00-REC = TA0KWCA1.TA0KWCA1-TA0KW00;

      TA0KW01.TA0KW01-REC = TA0KWCA1.TA0KWCA1-TA0KW01;

      TA0KWM01.TA0KWM01-REC = TA0KWCA1.TA0KWCA1-TA0KWM01;

      TA0KM001.XXX-MSG-LOC-ID = TA0KWM01.XXX-MSG-LOC-ID;

      TA0KM001.TA0KM-XCT-CTRY-CD = TA0KWM01.TA0KM-XCT-CTRY-CD;
      TA0KM001.TA0KM-MDL-CTRY-CD = TA0KWM01.TA0KM-MDL-CTRY-CD;
      TA0KM001.TA0KM-MDL-CTRY-YY = TA0KWM01.TA0KM-MDL-CTRY-YY;
      TA0KM001.TA0KM-HLDY-CTRY-YR = TA0KWM01.TA0KM-HLDY-CTRY-YR;

      TA0KM001.XXX-CURR-DT = TA0KWM01.XXX-CURR-DT;

      TA0KM001.XXX-CURR-PAGE-DESC = TA0KWM01.XXX-CURR-PAGE-DESC;

      TA0KM001.XXX-CURR-PAGE-NBR = TA0KWM01.XXX-CURR-PAGE-NBR;

      TA0KM001.XXX-HI-PAGE-DESC = TA0KWM01.XXX-HI-PAGE-DESC;

      TA0KM001.XXX-HI-PAGE-NBR = TA0KWM01.XXX-HI-PAGE-NBR;

      TA0KW00.XXX-INX-FLD-NBR = 1;

      TA0KW00.XXX-INX-LMT-NBR = 11;

      while (TA0KW00.XXX-INX-FLD-NBR <= TA0KW00.XXX-INX-LMT-NBR)

        TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TA0KWM01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

        TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] = TA0KWM01.HLDY-ENG-NM[XXX-INX-FLD-NBR];

        TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KWM01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
        TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KWM01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];

        TA0KM001.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = TA0KWM01.TA0KM-INTF-FL[XXX-INX-FLD-NBR];

        if (TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] > " "
         || TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] > " "
         || TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] > " ")

          set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
        else

          set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] initialAttributes;

        end

        TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = TA0KWM01.HLDY-TRDL-NM[XXX-INX-FLD-NBR];

        TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KWM01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];

        TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;

      end

      TA0KM001.CATOAP = TA0KWM01.CATOAP;

      TA0KM001.CAITEM = TA0KWM01.CAITEM;

      TAWREC.CAUSERA = COMMAREA.CAUSERA;

      TAWREC.XXX-MSG-LOC-ID = TA0KWCA1.XXX-MSG-LOC-ID;

      TAWREC.XXX-MSG-NBR = TA0KWCA1.XXX-MSG-NBR;

      TA0KW00.XXX-RQT-DATA-FL = "N";

      TA0KW00.XXX-MAP-FMAT-FL = "N";

    else

      set TA0KM001 initial;
      set TAWREC empty;
      set TA0KW00 empty; /* M002 display storage*/
      TA0KW00.TA0KW-MDL-MODE-FL = "N";
      TA0KW00.TA0KW-UPD-MODE-SW = "N";
      set TA0KW01 empty; /* M002 display storage*/
      set SQLCA empty; /* SQL communication area*/
      set TAEREC empty; /* Error diagnosis information*/
      set TA1REC empty; /* Error diagnosis parameters*/
      set TA5REC empty; /* Temporary storage parameters*/
      set XX0XW01 empty; /* Date/time subroutine parameters*/
      set HLDWREC empty; /* POP UP array record*/

      TA0KW00.XXX-MAP-DSP-CD = "1"; /* Map to be displayed*/

      TA0KW00.XXX-TEMP-STG-LNTH = 1403; /* Temporary storage length*/
      TA0KW00.XXX-INX-LMT-NBR = 11; /* Number of lines on a page*/

      TA0KM001.TA0KM-INFO-MSG = "11000 - Enter the four letter Country code and year";
    end

    /* ---------------------------------------------------------*/
    /* Set update mode as appropriate*/
    /* ---------------------------------------------------------*/
    XXX-INX-FLD-NBR = 1;
    while (XXX-INX-FLD-NBR <= 11)
      if (TA0KW00.TA0KW-UPD-MODE-SW == "Y"
       && TA0KW00.TA0KW-MDL-MODE-FL == "N")
        set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] initialAttributes;
        set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] initialAttributes;
        set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] initialAttributes;
        set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] initialAttributes;
      else /* Toggle back to inquiry mode*/
        set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
        set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
        set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
        set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      end
      XXX-INX-FLD-NBR = XXX-INX-FLD-NBR + 1;
    end

    goto TA0K-00000; /* Converse the main process*/
    TA0K-00000: TA0K-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TA0K-00000; /* Converse the main process*/


  end // end main
end // end TA0K

// Determine which map to display
Function TA0K-00000()
  /* -----------------------------------------------------*/
  /* drive the application*/
  /* -----------------------------------------------------*/

  TA0K-10000(); /* Display map 1*/

  exit stack; /* Exit to display map*/


end // end TA0K-00000

// Main process to display a map
Function TA0K-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0)
    TA0K-11000(); /* Obtain the data to display*/
  end

  TA0K-12000(); /* Format and display the map*/

  TA0K-13000(); /* Check attention identifier*/

  TA0K-14000(); /* Verify the entered data*/

  TA0K-15000(); /* Process valid input request*/

end // end TA0K-10000

// Obtain the data to display
Function TA0K-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TA0KW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || converseVar.validationMsgNum != 0) /* or an error was found*/

    return; /* Return to previous process*/
  end

  TA0KW00.TWO-DIGIT-NUM = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KS-CHECK-RNGE();
  converseLib.validationFailed(200); /* Invalid year entered*/
  if (TA0KM001.TA0KM-HLDY-CTRY-YR is numeric)
    TA0KS-CHECK-RNGE();
  end
  if (converseVar.validationMsgNum != 0) /* if an error was found*/
    set TA0KM001.TA0KM-HLDY-CTRY-YR bold, cursor;
    return; /* Return to previous process*/
  else
    TA0KM001.TA0KM-HLDY-CTRY-YR = TA0KW00.TWO-DIGIT-NUM;
  end

  if (TA0KM001.TA0KM-MDL-CTRY-CD > " ")
    TA0KW00.TWO-DIGIT-NUM = TA0KM001.TA0KM-MDL-CTRY-YY;
    TA0KS-CHECK-RNGE();
    converseLib.validationFailed(200); /* Invalid year entered*/
    if (TA0KM001.TA0KM-MDL-CTRY-YY is numeric)
      TA0KS-CHECK-RNGE();
    end
    if (converseVar.validationMsgNum != 0) /* if an error was found*/
      set TA0KM001.TA0KM-MDL-CTRY-YY bold, cursor;
      return; /* Return to previous process*/
    else
      TA0KM001.TA0KM-MDL-CTRY-YY = TA0KW00.TWO-DIGIT-NUM;
    end
  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (TAWREC.XXX-MSG-NBR == 0) /* No message to display*/
    TA0KW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  TA0KS-TA0050-P(); /* Purge any temporary storage*/

  TA0KW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TA0KW01.TA0KM-XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  TA0KW01.TA0KM-MDL-CTRY-CD = TA0KM001.TA0KM-MDL-CTRY-CD;
  TA0KW01.TA0KM-MDL-CTRY-YY = TA0KM001.TA0KM-MDL-CTRY-YY;
  TA0KW01.TA0KM-HLDY-CTRY-YR = TA0KM001.TA0KM-HLDY-CTRY-YR;

  if (converseVar.eventKey is enter)
    TA0KW00.TA0KM-XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
    TA0KW00.TA0KM-HLDY-CTRY-YR = TA0KM001.TA0KM-HLDY-CTRY-YR;
    TA0KW00.TA0KM-MDL-CTRY-CD = TA0KM001.TA0KM-MDL-CTRY-CD;
    TA0KW00.TA0KM-MDL-CTRY-YY = TA0KM001.TA0KM-MDL-CTRY-YY;
  end

   /* ------------------------------------------------------------*/
   /* Select the information to display in the map heading.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf5)
    VCTHDT01.XCT-CTRY-CD = TA0KW00.TA0KM-XCT-CTRY-CD;
    TA0KW01.TA0KM-HLDY-CTRY-YR = TA0KW00.TA0KM-HLDY-CTRY-YR;
  else
    VCTHDT01.XCT-CTRY-CD = TA0KW01.TA0KM-XCT-CTRY-CD;
  end

  if (TA0KW-MDL-MODE-FL == "Y")
    TA0KW00.TA0KW-DATE-PARSE-YY = TA0KW01.TA0KM-MDL-CTRY-YY;
  else
    TA0KW00.TA0KW-DATE-PARSE-YY = TA0KW01.TA0KM-HLDY-CTRY-YR;
  end
  if (TA0KW-DATE-PARSE-YY > "60")
    TA0KW-DATE-PARSE-CC = "19";
  else
    TA0KW-DATE-PARSE-CC = "20";
  end
  TA0KW-DATE-PARSE-MM = "01";
  TA0KW-DATE-PARSE-DD = "01";
  TA0KW-DATE-PARSE-D1 = "-";
  TA0KW-DATE-PARSE-D2 = "-";
  VCTHDT01.HLDY-CTRY-DT = TA0KW-DATE-PARSE;

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  TA0KS-VCTHDT01-SS(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  TA0KW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  TA0KW00.TA0KW-EOF-FL = "N"; /* End of cursor flag*/

  while (TA0KW00.TA0KW-EOF-FL == "N") /* Until end of cursor*/

    TA0KS-VCTHDT01-SN(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (TA0KW00.TA0KW-EOF-FL == "N") /* Not end of cursor*/

      TA0KW00.TA0KW-INIT-LKUP-IND = "Y";
      TA0KS-VCTHLD01-S(); /* Select supplier abbrev.*/
      TA0KW00.TA0KW-INIT-LKUP-IND = "N";
      /* ------------------------------------------------------------*/
      /* If first line on subsequent page, save heading information.*/
      /* ------------------------------------------------------------*/

      if (TA0KW00.XXX-HI-PAGE-NBR > 0 /* Not the first page*/
       && TA0KW00.XXX-INX-FLD-NBR == 1) /* and first line on page*/
  /* WJB CHANGED FROM VCTHDT01*/
        TA0KW01.TA0KM-XCT-CTRY-CD = TA0KW00.TA0KM-XCT-CTRY-CD;
        TA0KW01.TA0KM-MDL-CTRY-CD = TA0KW00.TA0KM-MDL-CTRY-CD;
        TA0KW01.TA0KM-MDL-CTRY-YY = TA0KW00.TA0KM-MDL-CTRY-YY;
        TA0KW00.TA0KW-DATE-PARSE = VCTHDT01.HLDY-CTRY-DT;
        TA0KW01.TA0KM-HLDY-CTRY-YR = TA0KW00.TA0KW-DATE-PARSE-YY;
      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = VCTHLD01.HLDY-TRDL-NM;
      TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] = VCTHDT01.HLDY-ENG-NM;
      if (VCTHDT01.HLDY-INTF-TMST == " ")
        TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = "!";
      end

      TA0KW00.TA0KW-DATE-PARSE = VCTHDT01.HLDY-CTRY-DT;
      TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KW00.TA0KW-DATE-PARSE-DD;
      TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KW00.TA0KW-DATE-PARSE-MM;

      /* ------------------------------------------------------------*/
      /* If the current line is the last line of the  page, set the*/
      /* spill indicator for this page*/
      /* ------------------------------------------------------------*/
      if (TA0KW00.XXX-INX-FLD-NBR == TA0KW00.XXX-INX-LMT-NBR)
        TA0KW01.TA0KW-SPILL-FLD = "*";
      end
      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (TA0KW00.XXX-INX-FLD-NBR > TA0KW00.XXX-INX-LMT-NBR) /* Page is full*/

      TA0KS-TA0050-A(); /* Add page to temporary storage*/

      TA0KW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (TA0KW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    TA0KS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  TA0KS-VCTHDT01-CS(); /* Close selected set cursor*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (TA0KW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    TAWREC.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(201); /* No data was found to display*/

    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TA0KW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TA0K-11000

// Format and converse the map
Function TA0K-12000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TAWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TA0KW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TA0K-12100(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TA0KM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  if (TA0KWM01.CATOAP > " ")
    TA0KM001.CATOAP = TA0KWM01.CATOAP;
  else
    TA0KM001.CATOAP = COMMAREA.CATOAP;
  end

  if (TA0KWM01.CAITEM > " ")
    TA0KM001.CAITEM = TA0KWM01.CAITEM;
  else
    TA0KM001.CAITEM = COMMAREA.CAITEM;
  end

   /* ------------------------------------------------------------*/
   /* Set the update fields defined if update mode - COMMENT*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Display model mode message if applicable*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0)
    if (TA0KW-MDL-MODE-FL == "Y")
      TA0KM-INFO-MSG = "12000 - Model selected - Press PF10 to use model or PF5 to REFRESH";
    end
  end
   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TAWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TAWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TAWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TAWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TA0KM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TA0KM001.XXX-MSG-LOC-ID = TAWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TA0KM001 alarm; /* Indicate sound alarm*/

  end

  converse TA0KM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TAWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TAWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/
  TA0KM-INFO-MSG = " "; /* Map Message text*/
  TA0KM-WRNG-MSG = " "; /* Map special warning text*/
  set TA0KM001.VAGen_EZEMSG initialAttributes;

  COMMAREA.CATOAP = TA0KM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TA0KM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/


  TA0KW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  set TA0KM001.TA0KM-XCT-CTRY-CD normal;
  set TA0KM001.TA0KM-HLDY-CTRY-YR normal;

  while (TA0KW00.XXX-INX-FLD-NBR <= TA0KW00.XXX-INX-LMT-NBR)
                                   /* Until end of screen*/
    set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] normal;
    set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] normal;
    set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] normal;
    set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] normal;

  /* IF TA0KM001.HLDY-ENG-NM(XXX-INX-FLD-NBR) GT ' '*/
  /* OR TA0KM001.HLDY-TRDL-NM(XXX-INX-FLD-NBR) GT ' '*/
  /* OR TA0KM001.TA0KM-HLDY-CTRY-MM(XXX-INX-FLD-NBR) GT ' ';*/
  /* /* or end of formatted lines*/
  /* SET TA0KM001.XXX-LN-SEL-IND(XXX-INX-FLD-NBR) NORMAL;*/
  /* SET TA0KM001.TA0KM-HLDY-CTRY-MM(XXX-INX-FLD-NBR) NORMAL;*/
  /* ;*/
  /* IF TA0KW01.HLDY-ENG-NM(XXX-INX-FLD-NBR) GT ' '*/
  /* OR TA0KW01.HLDY-TRDL-NM(XXX-INX-FLD-NBR) GT ' '*/
  /* OR TA0KW01.TA0KM-HLDY-CTRY-MM(XXX-INX-FLD-NBR) GT ' ';*/
  /* SET TA0KM001.HLDY-ENG-NM(XXX-INX-FLD-NBR)*/
  /* PROTECT,NOHILITE,BLUE;*/
  /* ELSE;*/
  /* SET TA0KM001.HLDY-ENG-NM(XXX-INX-FLD-NBR) DEFINED;*/
  /* END;*/
  /* ELSE;*/
  /* SET TA0KM001.HLDY-ENG-NM(XXX-INX-FLD-NBR) DEFINED;*/
  /* END;*/

    TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set TA0KM001.CATOAP normal; /* TO application*/
  set TA0KM001.CAITEM normal; /* Application data*/


end // end TA0K-12000

// Format the data in the map
Function TA0K-12100()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  if (TA0KW00.TA0KW-POP-ONLY != "Y")
    set TA0KM001 initial; /* M001 input/output area*/
  else
    TA0KW00.TA0KW-POP-ONLY = "N";
  end

  TA0KM001.TA0KM-XCT-CTRY-CD = TA0KW00.TA0KM-XCT-CTRY-CD;
  TA0KM001.TA0KM-MDL-CTRY-CD = TA0KW00.TA0KM-MDL-CTRY-CD;
  TA0KM001.TA0KM-MDL-CTRY-YY = TA0KW00.TA0KM-MDL-CTRY-YY;
   /* ------------------------------------------------------------*/
   /* Format the fields inquiry mode if applicable*/
   /* ------------------------------------------------------------*/
  if (TA0KW00.TA0KW-UPD-MODE-SW == "N"
   || TA0KW00.TA0KW-MDL-MODE-FL == "Y")

    XXX-INX-FLD-NBR = 1;
    while (XXX-INX-FLD-NBR <= 11)
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      XXX-INX-FLD-NBR = XXX-INX-FLD-NBR + 1;
    end
  end

  TA0KW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (TA0KW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (TA0KW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (TA0KW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        TA5REC.TA5TSQIX = TA0KM001.XXX-CURR-PAGE-NBR;
        TA0KS-TA0050-U(); /* Update temporary storage page*/

        TA0KW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (TA0KW00.XXX-CURR-PAGE-NBR > TA0KW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        TA0KW00.XXX-CURR-PAGE-NBR = TA0KW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      TA0KS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    TA0KM001.XXX-CURR-PAGE-DESC = "PAGE";

    set TA0KM001.XXX-CURR-PAGE-DESC skip; /* "PAGE" literal*/

    TA0KM001.XXX-CURR-PAGE-NBR = TA0KW00.XXX-CURR-PAGE-NBR;

    TA0KM001.XXX-HI-PAGE-DESC = "OF";

    set TA0KM001.XXX-HI-PAGE-DESC skip; /* "OF" literal*/

    TA0KM001.XXX-HI-PAGE-NBR = TA0KW00.XXX-HI-PAGE-NBR;

  end

   /* ------------------------------------------------------------*/
   /* If code is missing, position the cursor on that field.*/
   /* ------------------------------------------------------------*/

  if (TA0KW01.TA0KM-HLDY-CTRY-YR <= " ") /**/
    set TA0KM001.TA0KM-HLDY-CTRY-YR cursor;
  end

  if (TA0KW01.TA0KM-XCT-CTRY-CD <= " ") /**/
    set TA0KM001.TA0KM-XCT-CTRY-CD cursor;
  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TA0KM001.TA0KM-XCT-CTRY-CD = TA0KW01.TA0KM-XCT-CTRY-CD;
  TA0KM001.TA0KM-MDL-CTRY-CD = TA0KW01.TA0KM-MDL-CTRY-CD;
  TA0KM001.TA0KM-MDL-CTRY-YY = TA0KW01.TA0KM-MDL-CTRY-YY;
  TA0KM001.TA0KM-HLDY-CTRY-YR = TA0KW01.TA0KM-HLDY-CTRY-YR;

  TA0KW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (TA0KW00.XXX-INX-FLD-NBR <= TA0KW00.XXX-INX-LMT-NBR)
                                   /* Until screen is full*/
    /* /* AND*/

    TA0KM001.TA0KW-SPILL-FLD = TA0KW01.TA0KW-SPILL-FLD;
    TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TA0KW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];
    TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] = TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR];
    TA0KM001.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR];
    if (TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR] == "!")
      TA0KM-INFO-MSG = "12100 - '!' indicates data NOT administered - Contact TECH SUPPORT";
    end

    TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR];
    TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
    TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];

    TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

end // end TA0K-12100

// Check attention identifier
Function TA0K-13000()
  if (converseVar.eventKey is pf3 /* END*/
   || converseVar.eventKey is pf4) /* MAIN*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* System Menu*/
    end

    if (converseVar.eventKey is pf4) /* PF3 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* System Menu*/
    end

    TA0KS-TA0050-P(); /* Purge any temporary storage*/

    XSTAS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

  if (converseVar.eventKey is pf9) /* Update mode TOGGLE requested*/
    XX0XW02.XX0XWERR = "N";
    TA0K-13050(); /* Display dependent popup window*/
  end

  if (converseVar.eventKey is pf11) /* Update mode TOGGLE requested*/
    TA0KS-PF11();
  end

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TA0KW00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TA0KW01 empty; /* M001 display storage*/
    end

    TA0KW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TA0KW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack;

  end

  if (TA0KM001.CATOAP > " "        /* FAST PATH was requested*/
   && converseVar.eventKey not pf1 /* HELP*/
   && converseVar.eventKey not pf5 /* REFRESH SCREEN*/
  )                               
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TA0KS-TA0050-P(); /* Purge any temporary storage*/

      XSTAS-EXIT(); /* Exit to another application*/

      set TA0KM001.CATOAP cursor, bold; /* Highlight*/

    else

      TAWREC.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(202); /* PA/PF key may not be used*/

    end

    exit stack;

  end

  if (converseVar.eventKey not enter /* EDIT AND POST THE CHANGE OR THE ADD*/
   && converseVar.eventKey not pf1   /* HELP*/
   && converseVar.eventKey not pf5   /* REFRESH SCREEN*/
   && converseVar.eventKey not pf7   /* SCROLL UP*/
   && converseVar.eventKey not pf8   /* SCROLL DOWN*/
   && converseVar.eventKey not pf9   /* DEPENDENT POPUP*/
   && converseVar.eventKey not pf10  /* UPDATE MODE*/
   && converseVar.eventKey not pf11  /* UPDATE MODE*/
   && converseVar.eventKey not pf12) /* COMMIT CHANGES*/

    TAWREC.XXX-MSG-LOC-ID = "13000";
    converseLib.validationFailed(203); /* INVALID PFKEY*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end
end // end TA0K-13000

// Display pop up for CTRY-CD
Function TA0K-13050()
   /* ------------------------------------------------------------*/
   /* Display pop up window for search country code*/
   /* ------------------------------------------------------------*/

  XPTA003(); /* perform pop-up window initialize*/
  XX0XW02.XX0XWHDR = "           DEPENDENT COUNTRIES"; /* heading*/

  while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
    TA0K-DEP-POP(); /* perform origin code window*/
  end
  converseLib.clearScreen();

end // end TA0K-13050

// Verify data that was entered
Function TA0K-14000()
  if (converseVar.eventKey is pf1
   || converseVar.eventKey is pf5
  )
    TA0KW00.UPDATE-CONFIRMED = "N";
    return;

  end
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (TA0KM001.CAITEM > " ") /* Application data was entered*/

    TAWREC.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(204); /* Enter only with FAST PATH*/
    set TA0KM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    TA0K-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/
    if (converseVar.validationMsgNum == 0)
      TA0K-14200(); /* Verify scroll request*/
    end
  else

    if (TA0KM001.TA0KM-XCT-CTRY-CD == "?")
      TA0K-14050(); /* Display pop up window of country*/
                                   /* codes*/
    else
      if (TA0KM001.TA0KM-MDL-CTRY-CD == "? ")
        TA0K-14055(); /* Display pop up window of country*/
                                   /* codes for model field*/
      else
        if (TA0KM001.TA0KM-XCT-CTRY-CD != TA0KW01.TA0KM-XCT-CTRY-CD
         || TA0KM001.TA0KM-HLDY-CTRY-YR != TA0KW01.TA0KM-HLDY-CTRY-YR)

          TA0K-14100(); /* Highlight other changed fields*/
          TA0KW00.UPDATE-CONFIRMED = "N";
          return;
        end
        /* ------------------------------------------------------------*/
        /* Check for inquiry on holiday name*/
        /* ------------------------------------------------------------*/
        TA0KW00.XXX-INX-FLD-NBR = 1;
        while (TA0KW00.XXX-INX-FLD-NBR <= XXX-INX-LMT-NBR)
            /* Check for popup display request on holiday name*/
          if (TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] == "? ")
            TA0K-14300();
            return;
          end
          TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;
        end

          /* ------------------------------------------------------------*/
          /* Perform detail validations and updates*/
          /* ------------------------------------------------------------*/
  /* IF TA0KW00.XXX-HI-PAGE-NBR GT 0;*/

        TA0KW00.XXX-INX-FLD-NBR = 11;

        while (TA0KW00.XXX-INX-FLD-NBR > 0)

          if (TA0KW-UPD-MODE-SW == "Y")
            TA0K-14400();
          end

          TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR - 1;
        end
  /* END;*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TA0KW00.UPDATE-CONFIRMED = "N";
    exit stack; /* Exit to display map*/
  end


end // end TA0K-14000

// Display pop up for CTRY-CD
Function TA0K-14050()
   /* ------------------------------------------------------------*/
   /* Display pop up window for search country code*/
   /* ------------------------------------------------------------*/

  XPXX001(); /* perform pop-up window initialize*/
  XX0XW02.XX0XWHDR = "        COUNTRY CODE        "; /* heading*/

  while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
    XPXCT01(); /* perform origin code window*/
  end

    /* ----------------------------------------------------------*/
    /* If the pass index is greater than zero, use the*/
    /* passed table index 'XX0XWPIX' to move the problem*/
    /* code table code and description to the map.*/
    /* ----------------------------------------------------------*/

  if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
    TA0KM001.TA0KM-XCT-CTRY-CD = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
  else
    TA0KM001.TA0KM-XCT-CTRY-CD = " ";
  end
  converseLib.clearScreen();
  
end // end TA0K-14050

// Display pop up for MDL-CTRY-CD
Function TA0K-14055()
   /* ------------------------------------------------------------*/
   /* Display pop up window for search country code*/
   /* ------------------------------------------------------------*/

  XPXX001(); /* perform pop-up window initialize*/
  XX0XW02.XX0XWHDR = "        COUNTRY CODE        "; /* heading*/

  while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
    XPXCT01(); /* perform origin code window*/
  end

    /* ----------------------------------------------------------*/
    /* If the pass index is greater than zero, use the*/
    /* passed table index 'XX0XWPIX' to move the problem*/
    /* code table code and description to the map.*/
    /* ----------------------------------------------------------*/

  if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
    TA0KM001.TA0KM-MDL-CTRY-CD = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
  else
    TA0KM001.TA0KM-XCT-CTRY-CD = " ";
  end
end // end TA0K-14055

// Highlight other changed fields
Function TA0K-14100()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-LMT-NBR; /* Line index*/
  TA0KW-ROW-CHANGED-FL = "N";

  while (TA0KW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

    if (TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR]
     != TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR])
      TA0KW-ROW-CHANGED-FL = "Y";
      set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR]
     != TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR])
      TA0KW-ROW-CHANGED-FL = "Y";
      set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR]
     != TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR])
      TA0KW-ROW-CHANGED-FL = "Y";
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != 
    TA0KW01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR])
      TA0KW-ROW-CHANGED-FL = "Y";
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
    end
    if (TA0KW-ROW-CHANGED-FL == "Y")
      TAWREC.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(205); /* Field may not change*/
    end

    TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end


end // end TA0K-14100

// Verify scroll request
Function TA0K-14200()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/
  if (TA0KM001.TA0KM-HLDY-CTRY-YR != TA0KW01.TA0KM-HLDY-CTRY-YR)

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(205); /* Field may not change*/
    set TA0KM001.TA0KM-HLDY-CTRY-YR cursor, bold; /* Highlight*/

  end

  if (TA0KM001.TA0KM-MDL-CTRY-YY != TA0KW01.TA0KM-MDL-CTRY-YY
   && TA0KM001.TA0KM-MDL-CTRY-YY > " "
  )
    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(205); /* Field may not change*/
    set TA0KM001.TA0KM-MDL-CTRY-YY cursor, bold; /* Highlight*/

  end

  if (TA0KM001.TA0KM-MDL-CTRY-CD != TA0KW01.TA0KM-MDL-CTRY-CD
   && TA0KM001.TA0KM-MDL-CTRY-CD > " ")

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(205); /* Field may not change*/
    set TA0KM001.TA0KM-MDL-CTRY-CD cursor, bold; /* Highlight*/

  end

  if (TA0KM001.TA0KM-XCT-CTRY-CD != TA0KW01.TA0KM-XCT-CTRY-CD)

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(205); /* Field may not change*/
    set TA0KM001.TA0KM-XCT-CTRY-CD cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && TA0KW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(206); /* No previous page to display*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && TA0KW00.XXX-CURR-PAGE-NBR >= TA0KW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/
    if (TA0KM001.TA0KW-SPILL-FLD > " ")
  /* Something on last line of current pg*/
      set TA0KW01 empty;
      TA0KW00.XXX-HI-PAGE-NBR = TA0KW00.XXX-HI-PAGE-NBR + 1;
      TA0KW01.TA0KM-XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
      TA0KW01.TA0KM-HLDY-CTRY-YR = TA0KM001.TA0KM-HLDY-CTRY-YR;
      TA0KS-TA0050-A();
      TA0KW01.TA0KM-XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
      TA0KW01.TA0KM-HLDY-CTRY-YR = TA0KM001.TA0KM-HLDY-CTRY-YR;

    else
      TAWREC.XXX-MSG-LOC-ID = "14200"; /* Message location*/
      converseLib.validationFailed(207); /* No more pages to display*/

    end
  end


end // end TA0K-14200

// Display pop up for English Nm
Function TA0K-14300()
  /* MOVE 'Y' TO TA0KW01.TA0KWPOP;*/
  TA0KW00.XXX-RQT-DATA-FL = "N";
  TA0KW00.XXX-MAP-FMAT-FL = "N";
  TA0KS-INIT-POPUP();
  VCTHLD01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  while (XX0XW02.XX0XWEND == "N")
    XPHLD-POP();
  end
  if (XX0XW02.XX0XWPIX > 0)
    TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] = HLDWREC.HLDY-ENG-NM[XX0XWPIX];
    TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = HLDWREC.HLDY-TRDL-NM[XX0XWPIX];
  else
    TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] = " ";
  end
  converseLib.clearScreen();
  
end // end TA0K-14300

// Verify data in the line
Function TA0K-14400()
  /* Check for valid action code;*/

  if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " "
   && TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "A"
   && TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "C"
   && TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "D")
    TAWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(208); /* Only "A" or "C" or "D" to be entered*/
    set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
    return; /* Return to previous process*/
  end
  /*  */
  /* -------------------------------------------------------------*/
  /* Determine if row has changed. If action changed with no row*/
  /* changes, return error message.*/
  /* -------------------------------------------------------------*/
  TA0KW-ROW-CHANGED-FL = "N";
  TA0KW-ROW-ADDED-FL = "N";
  if (TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR]
   != TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR]
   || TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR]
   != TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR]
   || TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR]
   != TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR])
    TA0KW-ROW-CHANGED-FL = "Y";
    if (TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] == " ")
      TA0KW-ROW-ADDED-FL = "Y";
    end
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "D")
      converseLib.validationFailed(219); /* Changes not allowed with delete;*/
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      return;
    end
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " ")
      if (TA0KW-ROW-ADDED-FL == "Y")
        TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "A";
      else
        TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = "C";
      end
    end
  else
  /* -------------------------------------------------------------*/
  /* Validate delete*/
  /* -------------------------------------------------------------*/
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "D")
      if (TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] == " "
       || TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] == " "
       || TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] == " ")
        converseLib.validationFailed(224); /* Nothing to delete*/
        set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] bold, cursor;
      else
        TA0KW-ROW-CHANGED-FL = "Y";
      end
    end

    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " "
     && TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != "D")
      converseLib.validationFailed(209);
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      return;
    end
  end
  /* -------------------------------------------------------------*/
  /* See if row changed from last iteration - for confirmation*/
  /* -------------------------------------------------------------*/
  if (TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR]
   != TA0KW011.HLDY-ENG-NM[XXX-INX-FLD-NBR]
   || TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR]
   != TA0KW011.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR]
   || TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR]
   != TA0KW011.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR])
    TA0KW00.UPDATE-CONFIRMED = "N";
    TA0KW011.HLDY-ENG-NM[XXX-INX-FLD-NBR] = TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR];
    TA0KW011.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
    TA0KW011.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
  end

  /* -------------------------------------------------------------*/
  /* See if row changed with no action.*/
  /* -------------------------------------------------------------*/
  if (TA0KW-ROW-CHANGED-FL == "Y")
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == " "
    ) /* User changed line and didn't enter*/
                                   /* action*/
      TAWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(100); /* Action code missing/refresh*/
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
      return; /* Return to previous process*/
    end
  end

  /* -------------------------------------------------------------*/
  /* If add, see if row is duplicate against database.*/
  /* -------------------------------------------------------------*/
  if (TA0KW-ROW-CHANGED-FL == "Y"
   && TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
    TA0KS-VCTHDT01-SL();
    if (SQLCA.VAGen_SQLCODE == 0) /* Duplicate found*/
      set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
      set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
      if (converseVar.validationMsgNum == 0)
        converseLib.validationFailed(210); /* Duplicate*/
      end
      return; /* Return to previous process*/
    end
  end

  /* -------------------------------------------------------------*/
  /* See if row is duplicated above.*/
  /* -------------------------------------------------------------*/
  if (TA0KW-ROW-CHANGED-FL == "Y")
    TA0KW-INX-FLD-NBR = 1;
    while (TA0KW-INX-FLD-NBR < XXX-INX-FLD-NBR)
      if (TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] == 
      TA0KM001.TA0KM-HLDY-CTRY-MM[TA0KW-INX-FLD-NBR]
       && TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] == 
      TA0KM001.TA0KM-HLDY-CTRY-DD[TA0KW-INX-FLD-NBR])
        TAWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(210); /* DUPLICATE*/
        set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
        set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
        return; /* Return to previous process*/
      end
      TA0KW-INX-FLD-NBR = TA0KW-INX-FLD-NBR + 1;
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection entered was "A", determine if user is attempting*/
   /* to add to existing data on the screen.*/
   /* ------------------------------------------------------------*/
  if (TA0KW-ROW-CHANGED-FL == "Y")
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
      if (TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] != " "
       || TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] != " "
       || TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] != " ")
        TAWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(211); /* Only add to blank line at end*/
        set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        return; /* Return to previous process*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* If selection entered was "C", determine if user is attempting*/
   /* change a blank line.*/
   /* ------------------------------------------------------------*/
  if (TA0KW-ROW-CHANGED-FL == "Y")
    if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
      if (TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] == " "
       && TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] == " "
       && TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] == " "
       && TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] == " ")
        TAWREC.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(212); /* Only Change existing line/refresh*/
        set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] cursor, bold;
        return; /* Return to previous process*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* Validate entered detail.*/
   /* ------------------------------------------------------------*/
  if (TA0KW-ROW-CHANGED-FL == "Y")
    TA0K-14450();
    if (converseVar.validationMsgNum == 0)
      TA0KW00.XXX-PAGE-UPD-FL = "Y";
    end
  end

end // end TA0K-14400

// Verify entered line detail
Function TA0K-14450()
  /* -------------------------------------------------------------*/
  /* Determine if holiday has changed. If so, validate and*/
  /* return traditional name.*/
  /* -------------------------------------------------------------*/

  if (TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR]
   != TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR]
   || TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
    VCTHDT01.HLDY-ENG-NM = TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR];
    TA0KS-VCTHLD01-S();
    if (converseVar.validationMsgNum == 0)
      TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = VCTHLD01.HLDY-TRDL-NM;
    else
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] bold, cursor;
    end
  end

  if (TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] /* Edit detail date*/
   != TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR]  
   || TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] 
   != TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR])
    TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
    TA0KW-DATE-PARSE-MM = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
    TA0KW-DATE-PARSE-DD = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
    TA0KS-PREP-DATE(); /* Validate and format dates*/

    if (TA2REC.TA2RTNCD != 0)
      set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
      set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
      converseLib.validationFailed(218); /* Invalid date entered*/
    end
  end
end // end TA0K-14450

// Process valid input request
Function TA0K-15000()
  set TA0KWM01 empty;
  if (converseVar.eventKey is pf5) /* pag*/

    TA0KW00.XXX-MAP-FMAT-FL = "Y";

    if (TA0KW-MDL-MODE-FL == "Y")
      TA0KW00.XXX-RQT-DATA-FL = "Y";
      TA0KW-MDL-MODE-FL = "N";
      TA0KM001.TA0KM-MDL-CTRY-CD = " ";
      TA0KW01.TA0KM-MDL-CTRY-CD = " ";
      TA0KM001.TA0KM-MDL-CTRY-YY = " ";
      TA0KW01.TA0KM-MDL-CTRY-YY = " ";
    else
      TA0KW00.XXX-RQT-DATA-FL = "N";
    end

    TA0KW00.XXX-PAGE-UPD-FL = "N";

    COMMAREA.CATOAP = " ";

    COMMAREA.CAITEM = " ";

    exit stack;

  end

   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (TA0KM001.TA0KM-XCT-CTRY-CD != TA0KW01.TA0KM-XCT-CTRY-CD
   || TA0KM001.TA0KM-HLDY-CTRY-YR != TA0KW01.TA0KM-HLDY-CTRY-YR)

    TA0KW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
    TA0KW-UPD-MODE-SW = "N"; /* Prime flag for update mode toggle*/
    TA0KM001.TA0KM-MDL-CTRY-CD = " ";
    TA0KW01.TA0KM-MDL-CTRY-CD = " ";
    TA0KM001.TA0KM-MDL-CTRY-YY = " ";
    TA0KW01.TA0KM-MDL-CTRY-YY = " ";
    TA0KW00.TA0KW-MDL-MODE-FL = "N"; /* Model mode toggle off*/

    return; /* Return to previous process*/

  end
   /* ------------------------------------------------------------*/
   /* If the MODEL field changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if ((TA0KM001.TA0KM-MDL-CTRY-CD != TA0KW01.TA0KM-MDL-CTRY-CD
   || TA0KM001.TA0KM-MDL-CTRY-YY != TA0KW01.TA0KM-MDL-CTRY-YY)
   && TA0KM001.TA0KM-MDL-CTRY-CD > " ")
    if (TA0KW-UPD-MODE-SW != "Y")
      converseLib.validationFailed(222); /* Model mode not valid for browse*/
      set TA0KM001.TA0KM-MDL-CTRY-CD bold, cursor;
    else
      TA0KW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
      TA0KW00.TA0KW-MDL-MODE-FL = "Y"; /* Model mode toggle on*/

    end
    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf1)

    TA0KWM01.TA0KM-XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;

    TA0KWM01.TA0KM-HLDY-CTRY-YR = TA0KM001.TA0KM-HLDY-CTRY-YR;

    TA0KWM01.XXX-MSG-LOC-ID = TA0KM001.XXX-MSG-LOC-ID;

    TA0KWM01.XXX-CURR-DT = TA0KM001.XXX-CURR-DT;

    TA0KWM01.XXX-CURR-PAGE-DESC = TA0KM001.XXX-CURR-PAGE-DESC;

    TA0KWM01.XXX-CURR-PAGE-NBR = TA0KM001.XXX-CURR-PAGE-NBR;

    TA0KWM01.XXX-HI-PAGE-DESC = TA0KM001.XXX-HI-PAGE-DESC;

    TA0KWM01.XXX-HI-PAGE-NBR = TA0KM001.XXX-HI-PAGE-NBR;

    TA0KW00.XXX-INX-FLD-NBR = 1;

    while (TA0KW00.XXX-INX-FLD-NBR <= TA0KW00.XXX-INX-LMT-NBR)

      TA0KWM01.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] = TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR];

      TA0KWM01.HLDY-ENG-NM[XXX-INX-FLD-NBR] = TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR];
      TA0KWM01.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-INTF-FL[XXX-INX-FLD-NBR];

      TA0KWM01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR];

      TA0KWM01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];

      TA0KWM01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];

      TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;

    end

    TA0KWM01.CATOAP = TA0KM001.CATOAP;

    TA0KWM01.CAITEM = TA0KM001.CAITEM;

    TAWREC.XXX-MSG-LOC-ID = "10000";

    TAWREC.XXX-MSG-NBR = 0;

    COMMAREA.CAUSERA = TAWREC.CAUSERA;

    TA0KW00.XXX-MAP-FMAT-FL = "Y";

    TA0KWCA1.TA0KWCA1-TA0KW00 = TA0KW00.TA0KW00-REC;

    TA0KWCA1.TA0KWCA1-TA0KW01 = TA0KW01.TA0KW01-REC;

    TA0KWCA1.TA0KWCA1-TA0KWM01 = TA0KWM01.TA0KWM01-REC;

    TA0KWCA1.XXX-MSG-LOC-ID = TAWREC.XXX-MSG-LOC-ID;

    TA0KWCA1.XXX-MSG-NBR = TAWREC.XXX-MSG-NBR;

    COMMAREA.CA-USER-WORKAREA-2K-B = TA0KWCA1.TA0KWCA1-REC;
    COMMAREA.CAFROMAP = "TA0K";

    COMMAREA.CACURRAP = "TA0K";

    COMMAREA.CATOAP = "GD01";

    COMMAREA.CAITEM = "TA0KM001";

    XSTAS-EXIT();

    set TA0KM001.CATOAP cursor, bold;

    TA0KW00.XXX-MAP-DSP-CD = "1";

    TAWREC.XXX-MSG-LOC-ID = "15000";
    converseLib.validationFailed(214); /* cOT AUTHORIZED USER, CONTACT SECURITY*/

    exit stack;

  end

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    TA0KW00.XXX-CURR-PAGE-NBR = TA0KW00.XXX-CURR-PAGE-NBR - 1;

    TA0KW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    TA0KW00.XXX-CURR-PAGE-NBR = TA0KW00.XXX-CURR-PAGE-NBR + 1;

    TA0KW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

  /* -------------------------------------------------------*/
  /* Perform update of database using model*/
  /* -------------------------------------------------------*/
  if (converseVar.eventKey is pf10)
    if (TA0KW00.TA0KW-MDL-MODE-FL == "Y")
      TA0KS-CALL-TA2110();
      if (converseVar.validationMsgNum == 0)
        TA0KW00.TA0KW-MDL-MODE-FL = "N";
        TA0KM001.TA0KM-MDL-CTRY-CD = " ";
        TA0KM001.TA0KM-MDL-CTRY-YY = " ";
      end
    else
      converseLib.validationFailed(225);
    end
    return;
  end
  /* -------------------------------------------------------*/
  /* Obtain current time and date*/
  /* -------------------------------------------------------*/
  XX0XS01();
  /* -------------------------------------------------------*/
  /* if page has changed, update the database.*/
  /* -------------------------------------------------------*/
  if (TA0KW00.XXX-PAGE-UPD-FL == "Y")
    if (converseVar.validationMsgNum == 0)
      if (converseVar.eventKey is enter)
        TA0KM001.TA0KM-INFO-MSG = "15000 - Edits complete - Press PF12 to COMMIT changes to the database";
      end
      if (TA0KW00.UPDATE-CONFIRMED == "Y")
        if (converseVar.eventKey is pf12)
          TA0KW00.UPDATE-CONFIRMED = " ";
          TA0KW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/
          TA0KW-UPDATES-MADE-FL = "N";
          while (TA0KW00.XXX-INX-FLD-NBR <= TA0KW00.XXX-INX-LMT-NBR)
                                   /* Until end of lines*/
            if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] != " ")
              if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "A")
                TA0KS-VCTHDT01-A();
                TA0KW-UPDATES-MADE-FL = "Y";
              else
                if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "C")
                  TA0KS-VCTHDT01-C();
                  TA0KW-UPDATES-MADE-FL = "Y";
                else
                  if (TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] == "D")
                    TA0KS-VCTHDT01-D();
                    TA0KW-UPDATES-MADE-FL = "Y";
                  end
                end
              end
            else /* No action code -- or action was*/
                                   /* blanked out*/
              TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] = TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR];
              TA0KM001.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR];
              TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR];
              TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
              TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
            end
            TA0KW00.XXX-INX-FLD-NBR = TA0KW00.XXX-INX-FLD-NBR + 1;
          end
        end
      else
        TA0KW00.UPDATE-CONFIRMED = "Y";
        TA0KM001.TA0KM-INFO-MSG = "15000 - Edits complete - Press PF12 to COMMIT changes to the database";
      end

  /* --------------------------------------------------------------*/
  /* Send success message and update the map.*/
  /* --------------------------------------------------------------*/
      if (TA0KW-UPDATES-MADE-FL == "Y")
        move TA0KW01 to TA0KM001 withV60Compat;
        set TA0KM001.VAGen_EZEMSG yellow;
        TA0KM001.TA0KM-INFO-MSG = "15000 - Updates committed - Contact TECHICAL SUPPORT - Call (503) 532-9";
        TA0KM001.VAGen_EZEMSG = "480 and request that changes be administered";
        TA0KW-UPDATES-MADE-FL = "N";
        set TA0KM001.XXX-LN-SEL-IND[1] cursor;
      end
    end
  end

end // end TA0K-15000

// converse pop up window
Function TA0K-DEP-POP()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM003 initial; /* Clear map output area*/
    XX0XM003.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM003.XX0XMTR1 = "               ENTER:EXIT             ";
    XX0XM003.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && TA0KT01.TA0KT-DEP-XCT-CD[XX0XWCT1] != "9999") /* Or end of data*/
        if (TA0KT01.XCT-CTRY-CD[XX0XWCT1] == TA0KM001.TA0KM-XCT-CTRY-CD)
          XX0XM003.XX0XMCD[XX0XWCT2] = TA0KT01.TA0KT-DEP-XCT-CD[XX0XWCT1];
          XX0XM003.XX0XMDES[XX0XWCT2] = TA0KT01.TA0KT-DEP-XCT-DESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (TA0KT01.XCT-CTRY-CD[XX0XWCT1] == TA0KM001.TA0KM-XCT-CTRY-CD)
          XX0XM003.XX0XMCD[XX0XWCT2] = TA0KT01.TA0KT-DEP-XCT-CD[XX0XWCT1];
          XX0XM003.XX0XMDES[XX0XWCT2] = TA0KT01.TA0KT-DEP-XCT-DESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM003 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && TA0KT01.TA0KT-DEP-XCT-CD[XX0XWCT1] == "9999") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******     Check for user selection deleted      ********/
         /* *********************************************************/

      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end TA0K-DEP-POP

// transfer to the requested appl
Function TA0KS-CALL-MN0V()
   /* ************************************************************/
   /* *** Call the MN0V CSP sub-program to retrieve region    ****/
   /* *** information for userid.                             ****/
   /* *** return codes:                                       ****/
   /* ***   0000 = successful                                 ****/
   /* ***   0100 = end of scan                                ****/
   /* ***   1010 = not found                                  ****/
   /* ***   1020 = system error                               ****/
   /* ***   2010 = invalid system prefix                      ****/
   /* ***   2020 = invalid tran Id                            ****/
   /* ***   3010 = invalid function code                      ****/
   /* ***          note: TA0020 will be executed for all      ****/
   /* ***                errors except the first three.       ****/
   /* ************************************************************/

  set MNVREC empty; /* Initialize MNVREC*/
     /* build Goal Security Tran Code*/
  MNVREC.MNV-SEL-OPT = "S ";
  MNVREC.XXX-SYS-PFX = "TA"; /* Initialize System Prefix*/
  if (TA0KM001.TA0KM-XCT-CTRY-CD in XCTTBL.XCTCD)
    MNVREC.MNV-GOAL-SCTY-SUF-TRAN-CD = XCTTBL.XCT-ISO-CTRY-CD[sysVar.arrayIndex];
  end

  try
    call "MN0V" (COMMAREA, MNVREC) {isNoRefresh = yes};
  end

  if (sysVar.errorCode == "00000000") /* No Calling problem*/
    if (MNVREC.MNV-RTN-CODE == 0000
     || MNVREC.MNV-RTN-CODE == 0100
     || MNVREC.MNV-RTN-CODE == 1010)
      return;
    end
  else
    TA1REC.TA1LOCAT[2] = sysVar.errorCode;
    MNVREC.MNV-RTN-CODE = 9999;
  end

  converseLib.validationFailed(215); /* CICS Error determining region*/
  TA1REC.TA1TYPE = "APPL";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "XSSY008 ";
  TA1REC.TA1LOCAT[1] = "MN0V    ";
  TAEREC.TAEDESC1 = MNVREC.MNV-GROUP;
  TAEREC.TAEDESC2 = " ";
  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback();
  call "TA0020" (TA1REC, TAEREC) {isExternal = yes};

end // end TA0KS-CALL-MN0V

// CALL DATE VALIDATION ROUTINE
Function TA0KS-CALL-TA0040()
   /* ------------------------------------------------------------*/
   /* call ta2 date convert  routine*/
   /* ------------------------------------------------------------*/

  TA2REC.TA2GRGGN = TA0KW-NUM-DATE;
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2DTOPT = "GREGJUL";
  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* date convert*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    return;

  end

  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* sql commarea*/

  if (sysVar.errorCode == "00000000") /* Good system return code*/
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "TA0040 DATE CONVERT     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Application name*/
  TA1REC.TA1PGMNM = "TI0KS-TA0040"; /* Process name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Flow to converse map*/

end // end TA0KS-CALL-TA0040

// Update country using model
Function TA0KS-CALL-TA2110()
   /* ------------------------------------------------------------*/
   /* Get the row ready*/
   /* ------------------------------------------------------------*/
  VCTHDT01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  move XX0XWYY to TA0KW-DATE-PARSE-YY withV60Compat;
  move XX0XWMM to TA0KW-DATE-PARSE-MM withV60Compat;
  move XX0XWDD to TA0KW-DATE-PARSE-DD withV60Compat;
  TA0KS-PREP-DATE();
  VCTHDT01.ZZ-STMST = TA0KW-DATE-TS;

  VCTHDT01.HLDY-INTF-TMST = " ";
  VCTHDT01.XXX-STAT = "A";
  VCTHDT01.ZZ-SETUP-USER-ID = COMMAREA.CAUSERID;
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  move VCTHDT01 to TA0KW03 withV60Compat;
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KW00.TA0KW-DATE-PARSE-MM = "01";
  TA0KW00.TA0KW-DATE-PARSE-DD = "01";
  TA0KS-PREP-DATE(); /* Validate and format dates*/

  if (TA2REC.TA2RTNCD != 0)
    set TA0KM001.TA0KM-HLDY-CTRY-YR bold, cursor;
    converseLib.validationFailed(218); /* Invalid date entered*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back changes*/
    return;
  end

  TA0KW03.HLDY-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-MDL-CTRY-YY;
  TA0KW00.TA0KW-DATE-PARSE-MM = "01";
  TA0KW00.TA0KW-DATE-PARSE-DD = "01";
  TA0KS-PREP-DATE(); /* Validate and format dates*/

  if (TA2REC.TA2RTNCD != 0)
    set TA0KM001.TA0KM-MDL-CTRY-YY bold, cursor;
    converseLib.validationFailed(218); /* Invalid date entered*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back changes*/
    return;
  end

  TA0KW03.TA0KW-MDL-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;

  TA0KW03.TA0KM-MDL-CTRY-CD = TA0KM001.TA0KM-MDL-CTRY-CD;
  try
    call "TA2110" ("ML", SQLCA, TA0KW03) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    /* -----------------------------------------------------------*/
    /* Copy the row the the screen saver record and return*/
    /* -----------------------------------------------------------*/
    set TA0KM001.VAGen_EZEMSG yellow;
    TA0KM001.TA0KM-INFO-MSG = "15000 - Updates committed - Contact TECH SUPPORT -                     ";
    TA0KM001.VAGen_EZEMSG = "Call (503) 532-9480 and request that changes be administered";
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* If user entered a duplicate row, send error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate row.*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      converseLib.validationFailed(210); /* Already a row with key vals*/
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] bold;
      exit stack;
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      converseLib.validationFailed(216); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE DATA USING MODEL"; /* Description*/
  TA1REC.TA1DBASE = "DTECH   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-CALL-TA2110

Function TA0KS-CHECK-RNGE()
  /* Justify and validate entered char-num*/
  if (TA0KW00.TWO-DIGIT-NUM == "1 "
   || TA0KW00.TWO-DIGIT-NUM == " 1")
    TA0KW00.TWO-DIGIT-NUM = "01";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "2 "
   || TA0KW00.TWO-DIGIT-NUM == " 2")
    TA0KW00.TWO-DIGIT-NUM = "02";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "3 "
   || TA0KW00.TWO-DIGIT-NUM == " 3")
    TA0KW00.TWO-DIGIT-NUM = "03";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "4 "
   || TA0KW00.TWO-DIGIT-NUM == " 4")
    TA0KW00.TWO-DIGIT-NUM = "08";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "5 "
   || TA0KW00.TWO-DIGIT-NUM == " 5")
    TA0KW00.TWO-DIGIT-NUM = "05";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "6 "
   || TA0KW00.TWO-DIGIT-NUM == " 6")
    TA0KW00.TWO-DIGIT-NUM = "06";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "7 "
   || TA0KW00.TWO-DIGIT-NUM == " 7")
    TA0KW00.TWO-DIGIT-NUM = "07";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "8 "
   || TA0KW00.TWO-DIGIT-NUM == " 8")
    TA0KW00.TWO-DIGIT-NUM = "08";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "9 "
   || TA0KW00.TWO-DIGIT-NUM == " 9")
    TA0KW00.TWO-DIGIT-NUM = "09";
  end
  if (TA0KW00.TWO-DIGIT-NUM == "0 "
   || TA0KW00.TWO-DIGIT-NUM == " 0")
    TA0KW00.TWO-DIGIT-NUM = "00";
  end
  converseLib.validationFailed(0);
end // end TA0KS-CHECK-RNGE

// Initialize popup window
Function TA0KS-INIT-POPUP()
   /* ------------------------------------------------------------*/
              /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

   /* ------------------------------------------------------------*/

  set XX0XM002 initial; /* Clear the map area*/
  set XX0XW02 empty; /* clear working storage*/
  XX0XW02.XX0XWCT1 = 1; /* Table index*/
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  XX0XW02.XX0XWSIX = 0; /* End of first page save index*/
  XX0XW02.XX0XWPIX = 0; /* Initialize pass index to zero*/
  XX0XW02.XX0XWFFL = "Y"; /* first time thru flag*/
  XX0XW02.XX0XWERR = "N"; /* Scroll error flag to no*/
  XX0XW02.XX0XWEND = "N"; /* End of pop up window session flag*/

end // end TA0KS-INIT-POPUP

// Toggle PF11 Update Mode
Function TA0KS-PF11()
  if (TA0KW00.TA0KW-UPD-MODE-SW == "N")
    if (TA0KM001.TA0KM-XCT-CTRY-CD == " ")
      converseLib.validationFailed(220); /* Put in valid location*/
      set TA0KM001.TA0KM-XCT-CTRY-CD bold, cursor;
      return;
    else
      TA0KS-CALL-MN0V();
      if (MNVREC.MNV-RTN-CODE != 0)
        converseLib.validationFailed(214);
        set TA0KM001.TA0KM-XCT-CTRY-CD bold, cursor;
        return;
      else
        TA0KW00.TA0KW-UPD-MODE-SW = "Y";
        XXX-INX-FLD-NBR = 1;
        while (XXX-INX-FLD-NBR <= 11)
          set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] initialAttributes;
          set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] initialAttributes;
          set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] initialAttributes;
          set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] initialAttributes;
          XXX-INX-FLD-NBR = XXX-INX-FLD-NBR + 1;
        end
        if (TA0KM001.TA0KM-XCT-CTRY-CD in TA0KT01.XCT-CTRY-CD)
          TA0KS-PF11-MSG();
        end
      end
    end
    return;
  end /* Toggle back to inquiry mode*/
  if (TA0KW-MDL-MODE-FL == "Y") /* / Model mode*/
    converseLib.validationFailed(223); /* PF11 invalid when model selected*/
    set TA0KM001.TA0KM-MDL-CTRY-CD bold, cursor;
  else
    TA0KW00.TA0KW-UPD-MODE-SW = "N";
    XXX-INX-FLD-NBR = 1;
    while (XXX-INX-FLD-NBR <= 11)
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] protect, noHighLight, blue;
      XXX-INX-FLD-NBR = XXX-INX-FLD-NBR + 1;
    end
  end
end // end TA0KS-PF11

// display dep warning msg
Function TA0KS-PF11-MSG()
  TA0KM-WRNG-MSG = "WARNING! - This country has dependent countries - Press PF9 to view";
end // end TA0KS-PF11-MSG

Function TA0KS-PREP-DATE()
  /* --------------------------------------------------------*/
  /* Prepare timestamp, date and CCYYMMDD type and validate*/
  /* --------------------------------------------------------*/
  TA0KW-DATE-PARSE-D1 = "-";
  TA0KW-DATE-PARSE-D2 = "-";
  TA0KW-DATE-TS-D1 = "-";
  TA0KW-TIME-PARSE-D1 = ".";
  TA0KW-TIME-PARSE-D2 = ".";
  TA0KW-TIME-PARSE-D3 = ".";
  move XX0XWZHR to TA0KW-TIME-PARSE-HH withV60Compat;
  move XX0XWZMN to TA0KW-TIME-PARSE-MM withV60Compat;
  move XX0XWZSC to TA0KW-TIME-PARSE-SS withV60Compat;
  TA0KW-TIME-PARSE-NS = "000000";
  if (TA0KW-DATE-PARSE-YY > "60")
    TA0KW-DATE-PARSE-CC = "19";
  else
    TA0KW-DATE-PARSE-CC = "20";
  end
  set TA2REC empty;
  move TA0KW-DATE-PARSE-CC to TA0KW-NUM-DATE-CC withV60Compat;
  move TA0KW-DATE-PARSE-YY to TA0KW-NUM-DATE-YY withV60Compat;
  move TA0KW-DATE-PARSE-MM to TA0KW-NUM-DATE-MM withV60Compat;
  move TA0KW-DATE-PARSE-DD to TA0KW-NUM-DATE-DD withV60Compat;
  TA2REC.TA2RTNCD = 4;
  if (TA0KW-NUM-DATE is numeric)
    TA0KS-CALL-TA0040();
  end
end // end TA0KS-PREP-DATE

// Add page to temporary storage
Function TA0KS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA0KW01.XXX-TEMP-STG-LNTH = TA0KW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (TA0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TA0KW01 empty; /* M001 display storage*/

    TA0KW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(216); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-TA0050-A

// Purge any temporary storage
Function TA0KS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TA0KW01 empty; /* M001 display storage*/

  TA0KW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  TA0KW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TA0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(216); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-TA0050-P

// Read temporary storage page
Function TA0KS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA0KW01.XXX-TEMP-STG-LNTH = TA0KW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = TA0KW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TA0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(216); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-TA0050-R

// Update temporary storage page
Function TA0KS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TA0KW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TAWREC.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(216); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-TA0050-U

// Add row to VCTHDT01
Function TA0KS-VCTHDT01-A()
   /* ------------------------------------------------------------*/
   /* Get the row ready*/
   /* ------------------------------------------------------------*/
  VCTHDT01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  VCTHDT01.HLDY-ENG-NM = TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR];
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KW00.TA0KW-DATE-PARSE-MM = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
  TA0KW00.TA0KW-DATE-PARSE-DD = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
  TA0KS-PREP-DATE(); /* Validate and format dates*/

  if (TA2REC.TA2RTNCD != 0)
    set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
    set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
    converseLib.validationFailed(218); /* Invalid date entered*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back changes*/
    return;
  end

  VCTHDT01.HLDY-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;

  move XX0XWYY to TA0KW-DATE-PARSE-YY withV60Compat;
  move XX0XWMM to TA0KW-DATE-PARSE-MM withV60Compat;
  move XX0XWDD to TA0KW-DATE-PARSE-DD withV60Compat;
  TA0KS-PREP-DATE();
  VCTHDT01.ZZ-STMST = TA0KW-DATE-TS;

  VCTHDT01.HLDY-INTF-TMST = " ";
  VCTHDT01.XXX-STAT = "A";
  VCTHDT01.ZZ-SETUP-USER-ID = COMMAREA.CAUSERID;
   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VCTHDT01" ("A ", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    /* -----------------------------------------------------------*/
    /* Copy the row the the screen saver record and return*/
    /* -----------------------------------------------------------*/
    TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] = VCTHDT01.HLDY-ENG-NM;
    TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = "!";
    TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR];
    TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
    TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
    if (TA0KW00.XXX-INX-FLD-NBR == TA0KW00.XXX-INX-LMT-NBR)
      TA0KW01.TA0KW-SPILL-FLD = "*";
    end
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* If user entered a duplicate row, send error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate row.*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      converseLib.validationFailed(210); /* Already a row with key vals*/
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] bold;
      exit stack;
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      converseLib.validationFailed(216); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHDT01-A

// Change row in VCTHDT01
Function TA0KS-VCTHDT01-C()
   /* ------------------------------------------------------------*/
   /* Set the current row - if any - inactive*/
   /* ------------------------------------------------------------*/
  VCTHDT01.HLDY-ENG-NM = TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR];
  VCTHDT01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KW00.TA0KW-DATE-PARSE-MM = TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
  TA0KW00.TA0KW-DATE-PARSE-DD = TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];

  TA0KS-PREP-DATE(); /* Validate and format dates*/

  VCTHDT01.HLDY-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;

  try
    call "VCTHDT01" ("UI", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
  else

    /* ------------------------------------------------------------*/
    /* If data not available, return an error message to the user.*/
    /* If user entered a duplicate row, send error message to the user.*/
    /* Otherwise, indicate that an unexpected error has occurred.*/
    /* ------------------------------------------------------------*/

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

    TAWREC.XXX-MSG-LOC-ID = "VCTHDT01S "; /* Message location*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      converseLib.validationFailed(217); /* Data in use by another*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate row.*/

        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback();
        converseLib.validationFailed(210); /* Already a row with key vals*/
        set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
        set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] bold;
        exit stack;
      else

        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Roll back all changes*/

        converseLib.validationFailed(216); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/

        converseLib.clearScreen();
         /* Clear screen before display*/
      end
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
    TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
    TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Get the NEW row ready*/
   /* ------------------------------------------------------------*/
  VCTHDT01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  VCTHDT01.HLDY-ENG-NM = TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR];
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KW00.TA0KW-DATE-PARSE-MM = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
  TA0KW00.TA0KW-DATE-PARSE-DD = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
  TA0KS-PREP-DATE(); /* Validate and format dates*/

  if (TA2REC.TA2RTNCD != 0)
    set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
    set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
    converseLib.validationFailed(218); /* Invalid date entered*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back changes*/
    return;
  end

  VCTHDT01.HLDY-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;

  move XX0XWYY to TA0KW-DATE-PARSE-YY withV60Compat;
  move XX0XWMM to TA0KW-DATE-PARSE-MM withV60Compat;
  move XX0XWDD to TA0KW-DATE-PARSE-DD withV60Compat;
  TA0KS-PREP-DATE();
  VCTHDT01.ZZ-STMST = TA0KW-DATE-TS;

  VCTHDT01.HLDY-INTF-TMST = " ";
  VCTHDT01.XXX-STAT = "A";
  VCTHDT01.ZZ-SETUP-USER-ID = COMMAREA.CAUSERID;

   /* ------------------------------------------------------------*/
   /* Validate that this country-date doesn't exist*/
   /* ------------------------------------------------------------*/

  try
    call "VCTHDT01" ("SL", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back database*/
    converseLib.validationFailed(210);
    set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
    set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
    exit stack; /* Return to display map*/

  else /* Problem occurred*/

    if (sysVar.errorCode != "00000000" || SQLCA.VAGen_SQLCODE != 100)
      TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

      TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SS"; /* Message location*/

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback();
        converseLib.validationFailed(217); /* Data in use by another*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/

      else

        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback(); /* Roll back all changes*/

        converseLib.validationFailed(216); /* Unexpected error occurred*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/

        converseLib.clearScreen();
         /* Clear screen before display*/

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
        TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
        TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        exit stack; /* Exit to display map*/

      end
    end
  end


   /* ------------------------------------------------------------*/
   /* Add the requested row to the table.*/
   /* ------------------------------------------------------------*/

  try
    call "VCTHDT01" ("A ", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    /* -----------------------------------------------------------*/
    /* Copy the row the the screen saver record and return*/
    /* -----------------------------------------------------------*/
    TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] = VCTHDT01.HLDY-ENG-NM;
    TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = "!";
    TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR];
    TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
    TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* If user entered a duplicate row, send error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(216); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHDT01-C

// Close selected set cursor
Function TA0KS-VCTHDT01-CS()
   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set of table rows.*/
   /* ------------------------------------------------------------*/

  if (TA0KW-MDL-MODE-FL == "Y")
    try
      call "TA2110" ("CS", SQLCA, TA0KW03) {isNoRefresh = yes, isExternal = yes};
    end
    move TA0KW03 to VCTHDT01 withV60Compat;
  else
    try
      call "VCTHDT01" ("CS", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
    end /* Close cursor*/
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01CS"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(216); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "CLOSE SELECTED SET CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHDT01-CS

Function TA0KS-VCTHDT01-D()
   /* ------------------------------------------------------------*/
   /* Set the current row - if any - inactive*/
   /* ------------------------------------------------------------*/
  VCTHDT01.HLDY-ENG-NM = TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR];
  VCTHDT01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KW00.TA0KW-DATE-PARSE-MM = TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
  TA0KW00.TA0KW-DATE-PARSE-DD = TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];

  TA0KS-PREP-DATE(); /* Validate and format dates*/

  VCTHDT01.HLDY-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;

  move VCTHDT01 to TA0KW03 withV60Compat;

  try
    call "TA2110" ("UI", SQLCA, TA0KW03) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/
  /* CALL VCTHDT01 'UI',SQLCA,VCTHDT01 (NOMAPS,NONCSP,REPLY;/* Select set*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/
    /* -----------------------------------------------------------*/
    /* Copy the row the the screen saver record and return*/
    /* -----------------------------------------------------------*/
    TA0KW01.HLDY-ENG-NM[XXX-INX-FLD-NBR] = " ";
    TA0KW01.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = " ";
    TA0KW01.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = " ";
    TA0KW01.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = " ";
    TA0KW01.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = " ";

    TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] = " ";
    TA0KM001.TA0KM-INTF-FL[XXX-INX-FLD-NBR] = " ";
    TA0KM001.HLDY-TRDL-NM[XXX-INX-FLD-NBR] = " ";
    TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] = " ";
    TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] = " ";
    return; /* Return to previous process*/
  end

    /* ------------------------------------------------------------*/
    /* If data not available, return an error message to the user.*/
    /* If user entered a duplicate row, send error message to the user.*/
    /* Otherwise, indicate that an unexpected error has occurred.*/
    /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01S "; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate row.*/

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
      converseLib.validationFailed(210); /* Already a row with key vals*/
      set TA0KM001.XXX-LN-SEL-IND[XXX-INX-FLD-NBR] bold, cursor;
      set TA0KM001.HLDY-ENG-NM[XXX-INX-FLD-NBR] bold;
      exit stack;
    else

      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back all changes*/

      converseLib.validationFailed(216); /* Unexpected error occurred*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/
    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TO INACTIVE"; /* Description*/
  TA1REC.TA1DBASE = "DTECH   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTHDT01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end TA0KS-VCTHDT01-D

// Select logical duplicate
Function TA0KS-VCTHDT01-SL()
   /* ------------------------------------------------------------*/
   /* Get the row ready*/
   /* ------------------------------------------------------------*/
  VCTHDT01.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
  TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-HLDY-CTRY-YR;
  TA0KW00.TA0KW-DATE-PARSE-MM = TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR];
  TA0KW00.TA0KW-DATE-PARSE-DD = TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR];
  TA0KS-PREP-DATE(); /* Validate and format dates*/

  if (TA2REC.TA2RTNCD != 0)
    set TA0KM001.TA0KM-HLDY-CTRY-MM[XXX-INX-FLD-NBR] bold, cursor;
    set TA0KM001.TA0KM-HLDY-CTRY-DD[XXX-INX-FLD-NBR] bold;
    converseLib.validationFailed(218); /* Invalid date entered*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back changes*/
    return;
  end

  VCTHDT01.HLDY-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;
   /* ------------------------------------------------------------*/
   /* Find any duplicate row on the database*/
   /* ------------------------------------------------------------*/

  try
    call "VCTHDT01" ("SL", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 100)    /* and no duplicate returned*/
    return; /* Return to previous process*/
  else
    if (SQLCA.VAGen_SQLCODE == 0) /* Found a duplicate row*/
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* If user entered a duplicate row, send error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Deadlock*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    exit stack;

  else


    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(216); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHDT01-SL

// Fetch next row in cursor
Function TA0KS-VCTHDT01-SN()
   /* ------------------------------------------------------------*/
   /* Fetch the next row that was selected from the table.*/
   /* ------------------------------------------------------------*/

  if (TA0KW-MDL-MODE-FL == "Y")
    try
      call "TA2110" ("SN", SQLCA, TA0KW03) {isNoRefresh = yes, isExternal = yes};
    end
    move TA0KW03 to VCTHDT01 withV60Compat;
    VCTHDT01.HLDY-CTRY-DT = TA0KW03.TA0KW-MDL-CTRY-DT;
  else
    try
      call "VCTHDT01" ("SN", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
    end
  end
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      TA0KW-DATE-PARSE = VCTHDT01.HLDY-CTRY-DT;
      if (TA0KW-MDL-MODE-FL == "Y")
        if (TA0KW-DATE-PARSE-YY != TA0KM001.TA0KM-MDL-CTRY-YY)
          TA0KW00.TA0KW-EOF-FL = "Y"; /* End of Current year*/
        end
        return; /* Return to previous process*/
      else
        if (TA0KW-DATE-PARSE-YY != TA0KM001.TA0KM-HLDY-CTRY-YR)
          TA0KW00.TA0KW-EOF-FL = "Y"; /* End of Current year*/
        end
        return; /* Return to previous process*/
      end
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/

      TA0KW00.TA0KW-EOF-FL = "Y"; /* End of cursor*/

      return; /* Return to previous process*/

    end
  end



   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SN"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(216); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "FETCH NEXT ROW IN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHDT01-SN

// Select set and open cursor
Function TA0KS-VCTHDT01-SS()
   /* ------------------------------------------------------------*/
   /* Select the requested set of rows from the table.*/
   /* If model mode, use ta2110*/
   /* ------------------------------------------------------------*/

  if (TA0KW-MDL-MODE-FL == "Y")
    move VCTHDT01 to TA0KW03 withV60Compat;
    TA0KW03.TA0KM-MDL-CTRY-CD = TA0KM001.TA0KM-MDL-CTRY-CD;
    TA0KW03.XCT-CTRY-CD = TA0KM001.TA0KM-XCT-CTRY-CD;
    TA0KW-DATE-PARSE-YY = TA0KM001.TA0KM-MDL-CTRY-YY;
    TA0KW00.TA0KW-DATE-PARSE-MM = "01";
    TA0KW00.TA0KW-DATE-PARSE-DD = "01";
    TA0KS-PREP-DATE(); /* Validate and format dates*/

    if (TA2REC.TA2RTNCD != 0)
      set TA0KM001.TA0KM-MDL-CTRY-YY bold, cursor;
      converseLib.validationFailed(218); /* Invalid date entered*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back changes*/
      return;
    end

    TA0KW03.TA0KW-MDL-CTRY-DT = TA0KW00.TA0KW-DATE-PARSE;

    try
      call "TA2110" ("SJ", SQLCA, TA0KW03) {isNoRefresh = yes, isExternal = yes};
    end

  else
    try
      call "VCTHDT01" ("SS", SQLCA, VCTHDT01) {isNoRefresh = yes, isExternal = yes};
    end /* Select set*/
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHDT01SS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(216); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT SET AND OPEN CURSOR"; /* Description*/
  TA1REC.TA1DBASE = "DPROD   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTIPCD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHDT01-SS

// Get supplier code
Function TA0KS-VCTHLD01-S()
   /* ------------------------------------------------------------*/
   /* Select the Holiday info from HDT table.*/
   /* ------------------------------------------------------------*/

  VCTHLD01.HLDY-ENG-NM = VCTHDT01.HLDY-ENG-NM;
  VCTHLD01.XCT-CTRY-CD = VCTHDT01.XCT-CTRY-CD;
  try
    call "VCTHLD01" ("S ", SQLCA, VCTHLD01) {isNoRefresh = yes, isExternal = yes};
  end /* Select code;*/
   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
    /* If end of the selected set, indicate end of cursor.*/
    /* ------------------------------------------------------------*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available  return an error message to the user*/
   /* only if the initial-indicator is not "y".*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TAWREC.XXX-MSG-LOC-ID = "VCTHLD01-S"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == +100)   /* and resource not available*/

    converseLib.validationFailed(221); /* Invalid holiday name*/
    return;

  end
  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(217); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(216); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "GET ASSOCIATED SUPPLIER "; /* Description*/
  TA1REC.TA1DBASE = "DCUTKT  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCTHLD01"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA0KS-VCTHLD01-S

// Load HLD into working Record
Function XPHLD-LOAD()

   /* ------------------------------------------------------------*/
    /* XPHLD01-LOAD - Load DCORP.VHLD001 into table used by*/
    /* pop-up window process XPHLD-POP.*/
    /*  */
    /* NOTE: This process will use & abuse the SQLCA record!*/
    /* Also, you must have VCTHLD01 in your Bind plan.*/
   /* ------------------------------------------------------------*/

  set HLDWREC empty; /* Clear DB2 array record*/
  SQLCA.VAGen_SQLCODE = 0; /* init status code*/

   /* ------------------------------------------------------------*/
   /* declare cursor for VCTHLD01 Rows*/
   /* ------------------------------------------------------------*/

  try
    call "VCTHLD01" ("SS", SQLCA, VCTHLD01) {isNoRefresh = yes, isExternal = yes};
  end

  if (sysVar.errorCode != "00000000" || sysVar.sqlData.sqlcode != 0)
    converseLib.validationFailed(216);
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "LOAD TABLE";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
    TA1REC.TA1PGMNO = "XPHLD-L"; /* Program number*/
    TA1REC.TA1DBASE = "DTECH  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCTHLD01"; /* Table view name*/
    try
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag*/
  end

   /* ------------------------------------------------------------*/
   /* fetch and load rows into HLDWREC array*/
   /* ------------------------------------------------------------*/

  try
    call "VCTHLD01" ("SN", SQLCA, VCTHLD01) {isNoRefresh = yes, isExternal = yes};
  end /* Initial fetch*/

  while (SQLCA.VAGen_SQLCODE == 0 && sysVar.errorCode == "00000000")
    HLDWREC.HLDW-ARRAY-SIZE = HLDWREC.HLDW-ARRAY-SIZE + 1;
    if (HLDWREC.HLDW-ARRAY-SIZE <= 200)
      HLDWREC.HLDY-ENG-NM[HLDW-ARRAY-SIZE] = VCTHLD01.HLDY-ENG-NM;
      HLDWREC.HLDY-TRDL-NM[HLDW-ARRAY-SIZE] = VCTHLD01.HLDY-TRDL-NM;
      try
        call "VCTHLD01" ("SN", SQLCA, VCTHLD01) {isNoRefresh = yes, isExternal = yes};
      end
    else /* Table overflow! Report to TA0020*/
      HLDWREC.HLDW-ARRAY-SIZE = 200; /* Set to table max*/
      SQLCA.VAGen_SQLCODE = 100; /* to break out of loop*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1LOC = "OVERFLOW";
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
      TA1REC.TA1PGMNO = "XPHLD-L"; /* Program number*/
      TA1REC.TA1DBASE = "DTECH  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VCTHLD01"; /* Table view name*/
      try
        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
      end /* Error diag*/
    end
  end

   /* ------------------------------------------------------------*/
   /* close cursor for VCTHLD01*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 100)
    try
      call "VCTHLD01" ("CS", SQLCA, VCTHLD01) {isNoRefresh = yes, isExternal = yes};
    end
    return;
  end

   /* ------------------------------------------------------------*/
   /* report any unexpected DB2 errors to TA0020*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "LOAD TABLE";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program appl*/
    TA1REC.TA1PGMNO = "XPHLD-L"; /* Program number*/
    TA1REC.TA1DBASE = "DTECH  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VCTHLD01"; /* Table view name*/
    try
      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes};
    end /* Error diag*/
  end

end // end XPHLD-LOAD

// HLD (DB2) pop up window
Function XPHLD-POP()
   /* ------------------------------------------------------------*/

      /* CONVERSE POP UP WINDOW FOR HOLIDAY TABLE*/
      /* NOTE: This is the DB2 table DTECH.VCTHLD01*/
      /*  */
      /* 1) If HLDWREC has not been loaded, perform XPHLD-LOAD*/
      /* 2) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 3) Converse the map.*/
      /* 4) Reset selection fields to normal after converse.*/
      /* 5) Check for PFkey and scroll errors.*/
      /* 6) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If we don't have the HLD data, load it           ****/
   /* **********************************************************/

  if (HLDWREC.HLDW-ARRAY-SIZE <= 0
   || HLDWREC.HLDW-ARRAY-SIZE > 200)
    XPHLD-LOAD(); /* Load it*/
  end

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM002 initial; /* Clear map output area*/
    XX0XW02.XX0XWHDR = "        HOLIDAY NAMES       "; /* heading*/
    XX0XM002.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM002.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && XX0XW02.XX0XWCT1 <= HLDWREC.HLDW-ARRAY-SIZE)
        XX0XM002.XX0XENM[XX0XWCT2] = HLDWREC.HLDY-ENG-NM[XX0XWCT1];
        XX0XM002.XX0XTNM[XX0XWCT2] = HLDWREC.HLDY-TRDL-NM[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
          XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
        end
        set XX0XM002.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                 /* Increment screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        XX0XM002.XX0XENM[XX0XWCT2] = HLDWREC.HLDY-ENG-NM[XX0XWCT1];
        XX0XM002.XX0XTNM[XX0XWCT2] = HLDWREC.HLDY-TRDL-NM[XX0XWCT1];
        XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
        set XX0XM002.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
        XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM002 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM002.XX0XENM[XX0XWCT2] != " ")
    set XX0XM002.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XX0XW02.XX0XWCT1 > HLDWREC.HLDW-ARRAY-SIZE)
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM002.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
            TA0KW00.TA0KW-POP-ONLY = "Y";
          else
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPHLD-POP

// initialization - pop up window
Function XPTA003()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set XX0XM001 initial; /* Clear the map area*/
  set XX0XW02 empty; /* clear working storage*/
  XX0XW02.XX0XWCT1 = 1; /* Table index*/
  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  XX0XW02.XX0XWSIX = 0; /* End of first page save index*/
  XX0XW02.XX0XWPIX = 0; /* Initialize pass index to zero*/
  XX0XW02.XX0XWFFL = "Y"; /* first time thru flag*/
  XX0XW02.XX0XWERR = "N"; /* Scroll error flag to no*/
  XX0XW02.XX0XWEND = "N"; /* End of pop up window session flag*/


end // end XPTA003

//*** RECORD=HLDWREC ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window process - XPHLD-POP.
// 
//            NOTE: It is important that this record be set
//            empty in the initialize section of your program.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          01-23-98  JBUCH1  Created
// ************************************************************
// ***********************
Record HLDWREC type basicRecord
  10 HLDW-ARRAY-SIZE HLDW-ARRAY-SIZE ; 
  10 HLDW-ARRAY HLDW-ARRAY [200] ; 
    15 HLDY-ENG-NM char(30) ; 
    15 HLDY-TRDL-NM char(30) ; 
end // end HLDWREC

//*** RECORD=TA0KW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
// ***********************
Record TA0KW00 type basicRecord
  5 TA0KW00-REC TA0KW00-REC ; 
    10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
    10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
    10 XXX-MAP-DSP-CD XXX-MAP-DSP-CD ; 
    10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
    10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
    10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
    10 TA0KW-INX-FLD-NBR smallint ; // Index for map fields
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
    10 TA0KM-XCT-CTRY-CD TA0KM-XCT-CTRY-CD ; 
    10 TA0KM-MDL-CTRY-YY TA0KM-MDL-CTRY-YY ; 
    10 TA0KM-MDL-CTRY-CD TA0KM-MDL-CTRY-CD ; 
    10 TA0KM-HLDY-CTRY-YR TA0KM-HLDY-CTRY-YR ; 
    10 TA0KW-EOF-FL char(1) ; // end of cursor
    10 TA0KW-INIT-LKUP-IND char(1) ; // initial lookup indicator
    10 TA0KW-ROW-CHANGED-FL char(1) ; // row has change flag
    10 TA0KW-ROW-ADDED-FL char(1) ; // row has change flag
    10 TA0KW-UPDATES-MADE-FL char(1) ; // row has change flag
    10 TA0KW-CRSR-ON-LN-FL char(1) ; // row has change flag
    10 TA0KW-POP-ONLY char(1) ; 
    10 TA0KW-DATE-TS char(26) ; 
      15 TA0KW-DATE-PARSE char(10) ; 
        20 TA0KW-DATE-PARSE-CC char(2) ; 
        20 TA0KW-DATE-PARSE-YY char(2) ; 
        20 TA0KW-DATE-PARSE-D1 char(1) ; 
        20 TA0KW-DATE-PARSE-MM char(2) ; 
        20 TA0KW-DATE-PARSE-D2 char(1) ; 
        20 TA0KW-DATE-PARSE-DD char(2) ; 
      15 TA0KW-DATE-TS-D1 char(1) ; 
      15 TA0KW-TIME-PARSE char(15) ; 
        20 TA0KW-TIME-PARSE-HH char(2) ; 
        20 TA0KW-TIME-PARSE-D1 char(1) ; 
        20 TA0KW-TIME-PARSE-MM char(2) ; 
        20 TA0KW-TIME-PARSE-D2 char(1) ; 
        20 TA0KW-TIME-PARSE-SS char(2) ; 
        20 TA0KW-TIME-PARSE-D3 char(1) ; 
        20 TA0KW-TIME-PARSE-NS char(6) ; 
    10 TA0KW-NUM-DATE char(8) ; 
      15 TA0KW-NUM-DATE-CC char(2) ; 
      15 TA0KW-NUM-DATE-YY char(2) ; 
      15 TA0KW-NUM-DATE-MM char(2) ; 
      15 TA0KW-NUM-DATE-DD char(2) ; 
    10 TA0KW-YEAR-IND char(1) ; 
    10 TA0KW-UPD-MODE-SW TA0KW-UPD-MODE-SW ; 
    10 TWO-DIGIT-NUM char(2) ; 
    10 UPDATE-CONFIRMED char(1) ; 
    10 CTRY-GROUP char(4) ; 
      15 CTRY-GROUP-B1 char(1) ; 
      15 CTRY-GROUP-CD char(3) ; 
    10 TA0KW-MDL-MODE-FL char(1) ; 
end // end TA0KW00

//*** RECORD=TA0KW01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ***********************
Record TA0KW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 TA0KW01-REC char(745) ; 
    10 TA0KM-SRCH-1 char(3) ; 
    10 TA0KM-SRCH-2 char(3) ; 
    10 TA0KM-XCT-CTRY-CD TA0KM-XCT-CTRY-CD ; 
    10 TA0KM-MDL-CTRY-CD TA0KM-MDL-CTRY-CD ; 
    10 TA0KM-MDL-CTRY-YY TA0KM-MDL-CTRY-YY ; 
    10 TA0KM-HLDY-CTRY-YR TA0KM-HLDY-CTRY-YR ; 
    10 TA0KW-SPILL-FLD TA0KW-SPILL-FLD ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [11] ; 
    10 HLDY-ENG-NM char(30) [11] ; 
    10 TA0KM-INTF-FL TA0KM-INTF-FL [11] ; 
    10 HLDY-TRDL-NM char(30) [11] ; 
    10 TA0KM-HLDY-CTRY-MM TA0KM-HLDY-CTRY-MM [11] ; 
    10 TA0KM-HLDY-CTRY-DD TA0KM-HLDY-CTRY-DD [11] ; 
end // end TA0KW01

//*** RECORD=TA0KW011 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ************************
Record TA0KW011 type basicRecord
  10 TA0KM-SRCH-1 char(3) ; 
  10 TA0KM-SRCH-2 char(3) ; 
  10 TA0KM-XCT-CTRY-CD TA0KM-XCT-CTRY-CD ; 
  10 TA0KM-HLDY-CTRY-YR TA0KM-HLDY-CTRY-YR ; 
  10 HLDY-ENG-NM char(30) [11] ; 
  10 TA0KM-INTF-FL TA0KM-INTF-FL [11] ; 
  10 TA0KM-HLDY-CTRY-MM TA0KM-HLDY-CTRY-MM [11] ; 
  10 TA0KM-HLDY-CTRY-DD TA0KM-HLDY-CTRY-DD [11] ; 
end // end TA0KW011

Record TA0KW03 type basicRecord
  10 HLDY-ENG-NM HLDY-ENG-NM ; 
  10 XCT-CTRY-CD XCT-CTRY-CD ; 
  10 TA0KM-MDL-CTRY-CD char(4) ; // xct ctry cd
  10 TA0KW-MDL-CTRY-DT TA0KW-MDL-CTRY-DT ; 
  10 HLDY-CTRY-DT HLDY-CTRY-DT ; 
  10 HLDY-INTF-TMST HLDY-INTF-TMST ; 
  10 XXX-STAT XXX-STAT ; 
  10 ZZ-SETUP-USER-ID ZZ-SETUP-USER-ID ; 
  10 ZZ-STMST ZZ-STMST ; 
end // end TA0KW03

//*** RECORD=TA0KWCA1 ****
// ------------------------------------------------------------
// TI0F application working storage.
// ------------------------------------------------------------
// ************************
Record TA0KWCA1 type basicRecord
  5 TA0KWCA1-REC char(2048) ; 
    10 TA0KWCA1-TA0KW00 TA0KWCA1-TA0KW00 ; 
    10 TA0KWCA1-TA0KW01 TA0KWCA1-TA0KW01 ; 
    10 TA0KWCA1-TA0KWM01 TA0KWCA1-TA0KWM01 ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-MSG-NBR XXX-MSG-NBR ; 
    10 * char(431) ; 
end // end TA0KWCA1

//*** RECORD=TA0KWM01 ****
// ------------------------
// Map 001 display storage.
// ------------------------
// ************************
Record TA0KWM01 type basicRecord
  5 TA0KWM01-REC char(788) ; 
    10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
    10 XXX-CURR-DT XXX-CURR-DT ; 
    10 XXX-CURR-PAGE-DESC XXX-CURR-PAGE-DESC ; 
    10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
    10 XXX-HI-PAGE-DESC XXX-HI-PAGE-DESC ; 
    10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
    10 TA0KM-XCT-CTRY-CD TA0KM-XCT-CTRY-CD ; 
    10 TA0KM-MDL-CTRY-CD TA0KM-MDL-CTRY-CD ; 
    10 TA0KM-MDL-CTRY-YY TA0KM-MDL-CTRY-YY ; 
    10 TA0KM-HLDY-CTRY-YR TA0KM-HLDY-CTRY-YR ; 
    10 XXX-LN-SEL-IND XXX-LN-SEL-IND [11] ; 
    10 HLDY-ENG-NM char(30) [11] ; 
    10 TA0KM-INTF-FL TA0KM-INTF-FL [11] ; 
    10 HLDY-TRDL-NM char(30) [11] ; 
    10 TA0KM-HLDY-CTRY-MM TA0KM-HLDY-CTRY-MM [11] ; 
    10 TA0KM-HLDY-CTRY-DD TA0KM-HLDY-CTRY-DD [11] ; 
    10 CATOAP CATOAP ; 
    10 CAITEM CAITEM ; 
end // end TA0KWM01

Record VCTHDT01 type basicRecord
  10 HLDY-ENG-NM HLDY-ENG-NM ; 
  10 XCT-CTRY-CD XCT-CTRY-CD ; 
  10 HLDY-CTRY-DT HLDY-CTRY-DT ; 
  10 HLDY-INTF-TMST HLDY-INTF-TMST ; 
  10 XXX-STAT XXX-STAT ; 
  10 ZZ-SETUP-USER-ID ZZ-SETUP-USER-ID ; 
  10 ZZ-STMST ZZ-STMST ; 
end // end VCTHDT01

Record VCTHLD01 type basicRecord
  10 HLDY-ENG-NM HLDY-ENG-NM ; 
  10 XCT-CTRY-CD XCT-CTRY-CD ; 
  10 HLDY-TRDL-NM HLDY-TRDL-NM ; 
  10 XXX-STAT XXX-STAT ; 
  10 ZZ-SETUP-USER-ID ZZ-SETUP-USER-ID ; 
  10 ZZ-STMST ZZ-STMST ; 
  10 ZZ-CHNG-USER-ID ZZ-CHNG-USER-ID ; 
  10 ZZ-CTMST ZZ-CTMST ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCTHLD01

// Array of data from DB2 table
DataItem HLDW-ARRAY char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of rows in array
DataItem HLDW-ARRAY-SIZE smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem HLDY-CTRY-DT char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem HLDY-ENG-NM char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem HLDY-INTF-TMST char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem HLDY-TRDL-NM char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-HLDY-CTRY-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-HLDY-CTRY-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-HLDY-CTRY-YR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-INTF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-MDL-CTRY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-MDL-CTRY-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KM-XCT-CTRY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KW-MDL-CTRY-DT char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KW-SPILL-FLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KW-UPD-MODE-SW char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KW00-REC char(81)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KWCA1-TA0KW00 char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KWCA1-TA0KW01 char(743)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem TA0KWCA1-TA0KWM01 char(786)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ZZ-CTMST char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ZZ-STMST char(26)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

