package ta02;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
import vv.common.*;
//*** PROGRAM=TA02 ****
// Only users that have a corrosponding row in the VSECUR01
// table may use this application ( XSTA-00000 ).
// 
// This application allows a user to inquire on and maintain a
// row in a DIMDS.VTNTNM01 table.
// 
// Street talk names may be added or deleted.  An inquiry of a
// name needs either the IM-EMP-DEVICE-ID, or the XXX-NTWK-
// ADDR.
// Adding and deleting both require both fields.
// Nothing is done to the RACF field other than saving it if
// it is present.
// 
// The entered data is verified to be complete and correct.
// The requested table row is selected and the data is
// formatted and displayed to the user.
// 
// When deleting the map is cleared and re-displayed.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, at any time.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE    USERID  DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     11/15/94  RMORGA  New application.
// tsup     07/28/98  sbusho  re-gen of application to pick up
//                            changes in XX0XS01 (NIKE standard
//                            date routine) w/changes for Y2K.
// *********************
Program TA02 type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TA00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  SQLCA SQLCA; // record
  TA02W00 TA02W00; // record
  TA02W01 TA02W01; // record
  TA1REC TA1REC; // record
  TA4REC TA4REC; // record
  TAEREC TAEREC; // record
  TAWREC TAWREC; // record
  VSECUR01 VSECUR01; // record
  VTNTNM01 VTNTNM01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TA02M.TA02M001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPTA-00000: XPTA-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/

    set TA02M001 initial; /* M001 input/output*/
    set TA02W00 empty; /* Working storage*/
    set TA02W01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

    TA02W00.TAW-ERROR-FLAG = "N"; /* No errors yet...*/
    TA02W00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TA02W00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    TA02W00.TA02W-EMP-DEV-NDX = 6;

     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto XSTAS-SECURITY; /* Converse the main process*/


    XSTAS-SECURITY: XSTAS-SECURITY();

     /* ---------------------------------------------------*/
     /* Flow to main process and converse screen.*/
     /* ---------------------------------------------------*/

    goto TA02-00000;


    TA02-00000: TA02-00000();
     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TA02-00000; /* Converse the main process*/


  end // end main
end // end TA02

// Main process to display a map
Function TA02-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  TA02-10000(); /* Obtain the data to display*/

  TA02-20000(); /* Format and display the map*/

  TA02-30000(); /* Check attention identifier*/

  TA02-40000(); /* Verify the entered data*/

  TA02-50000(); /* Process valid input request*/


end // end TA02-00000

// Obtain the data to display
Function TA02-10000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (TA02W00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || TA02W00.TAW-ERROR-FLAG == "Y") /* or an error was found*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Clear the map display storage area and save the key fields.*/
   /* ------------------------------------------------------------*/

  set TA02W01 empty; /* M001 display storage*/

  TA02W00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  TA02W01.TA02-ACTION = TA02M001.TA02-ACTION;

  TA02W01.IM-EMP-DEVICE-ID = TA02M001.IM-EMP-DEVICE-ID;

  TA02W01.XXX-1PART-NTWK-ADDR = TA02M001.XXX-1PART-NTWK-ADDR;
  TA02W01.XXX-2PART-NTWK-ADDR = TA02M001.XXX-2PART-NTWK-ADDR;

  TA02W01.XXX-USER-ID1 = TA02M001.XXX-USER-ID1;

   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  set VTNTNM01 empty; /* Clear row storage area*/

  if (TA02W01.IM-EMP-DEVICE-ID <= " ")
    VTNTNM01.IM-EMP-DEVICE-ID = "*";
  else
    VTNTNM01.IM-EMP-DEVICE-ID = TA02W01.IM-EMP-DEVICE-ID;
  end

  if (TA02W01.XXX-NTWK-ADDR <= " ")
    VTNTNM01.XXX-NTWK-ADDR = "*";
  else
    VTNTNM01.XXX-NTWK-ADDR = TA02W01.XXX-NTWK-ADDR;
  end

  TA02S-TANTNM02-S(); /* Select the table row*/

   /* ------------------------------------------------------------*/
   /* Move the data from the table row to map storage.*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

    TA02W01.IM-EMP-DEVICE-ID = VTNTNM01.IM-EMP-DEVICE-ID;

    TA02W01.XXX-NTWK-ADDR = VTNTNM01.XXX-NTWK-ADDR;

    TA02W01.XXX-USER-ID1 = VTNTNM01.XXX-USER-ID1;

  else

    TAWREC.XXX-MSG-LOC-ID = "10000"; /* Message location*/
    converseLib.validationFailed(20); /* No data was found to display*/
    TA02W00.TAW-ERROR-FLAG = "Y";

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  TA02W00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/


end // end TA02-10000

// Format and converse the map
Function TA02-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TAWREC.XXX-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (TA02W00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    TA02-21000(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TA02M001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Current date*/

  TA02M001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TA02M001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TAWREC.XXX-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")  /* or message text*/

    if (TAWREC.XXX-MSG-NBR != 0) /* Message to display*/

      if (TAWREC.XXX-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TAWREC.XXX-MSG-NBR);
      end /* Message number*/
    else
      TA02M001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    TA02M001.XXX-MSG-LOC-ID = TAWREC.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set TA02M001 alarm; /* Indicate sound alarm*/

  end

  converse TA02M001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TAWREC.XXX-MSG-LOC-ID = " "; /* Message location*/
  TAWREC.XXX-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  TA02W00.TAW-ERROR-FLAG = "N"; /* Clean error flag.*/

  COMMAREA.CATOAP = TA02M001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = TA02M001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set TA02M001.TA02-ACTION normal, cursor;
  set TA02M001.IM-EMP-DEVICE-ID normal;
  set TA02M001.XXX-1PART-NTWK-ADDR normal;
  set TA02M001.XXX-2PART-NTWK-ADDR normal;
  set TA02M001.XXX-USER-ID1 normal;
  set TA02M001.CATOAP normal; /* TO application*/
  set TA02M001.CAITEM normal; /* Application data*/


end // end TA02-20000

// Format the data in the map
Function TA02-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TA02M001 initial; /* M001 input/output area*/

  TA02W00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  TA02M001.TA02-ACTION = TA02W01.TA02-ACTION;
  TA02M001.IM-EMP-DEVICE-ID = TA02W01.IM-EMP-DEVICE-ID;
  TA02M001.XXX-1PART-NTWK-ADDR = TA02W01.XXX-1PART-NTWK-ADDR;
  TA02M001.XXX-2PART-NTWK-ADDR = TA02W01.XXX-2PART-NTWK-ADDR;
  TA02M001.XXX-USER-ID1 = TA02W01.XXX-USER-ID1;


end // end TA02-21000

// Check attention identifier
Function TA02-30000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    if (TA02W00.XXX-RQT-DATA-FL == "Y") /* Request for data pending*/
      set TA02W01 empty; /* M001 display storage*/
    end

    TA02W00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    TA02W00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    COMMAREA.CATOAP = " "; /* TO application*/
    COMMAREA.CAITEM = " "; /* Application data*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TA02M001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      XSTAS-EXIT(); /* Exit to another application*/

      set TA02M001.CATOAP cursor, bold; /* Highlight*/

    else

      TAWREC.XXX-MSG-LOC-ID = "30000"; /* Message location*/
      converseLib.validationFailed(21); /* Enter only with fast path*/
      TA02W00.TAW-ERROR-FLAG = "Y";

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf15)

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = "TA02M001"; /* Application find code*/
    end

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TA01"; /* System Menu*/
    end

    if (converseVar.eventKey is pf15) /* PF3 was pressed*/
      COMMAREA.CATOAP = "TA0S"; /* System Menu*/
    end

    XSTAS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
  )                                 
    TAWREC.XXX-MSG-LOC-ID = "30000"; /* Message location*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    converseLib.validationFailed(2); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end


end // end TA02-30000

// Verify data that was entered
Function TA02-40000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TAWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(21); /* Enter only with FAST PATH*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* Determine if all the required key fields were entered.*/
   /* ------------------------------------------------------------*/

  if (TA02M001.TA02-ACTION == "A"
   || TA02M001.TA02-ACTION == "D"
   || TA02M001.TA02-ACTION == "I")

    TA02-41000(); /* Check for required key fields*/

  else

    TAWREC.XXX-MSG-LOC-ID = "40000"; /* Message location*/
    converseLib.validationFailed(25); /* Invalid action type*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.TA02-ACTION cursor, bold;

  end

   /* ------------------------------------------------------------*/
   /* If any error was found, exit to display the map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end


end // end TA02-40000

// Check for action edits
Function TA02-41000()
   /* -----------------------------------------------------------------*/
   /* If action code is add or delete, both street talk name and*/
   /* employee\device id's are required.  Otherwise, only one of*/
   /* those fields are required.*/
   /*  */
   /* Asterisks may only be used in IM-EMP-DEVICE-ID, only when adding.*/
   /* -----------------------------------------------------------------*/

  if (TA02M001.TA02-ACTION == "A"
  )
    TA02-41100(); /* Check for duplicates.*/

    return;

  end

  if (TA02M001.TA02-ACTION == "D"
  )
    TA02-41200(); /* Check for required fields.*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* Check fields for Inquiry.  Only one field needed.*/
   /* ------------------------------------------------------------*/

  if (TA02M001.XXX-1PART-NTWK-ADDR <= " "
   && TA02M001.IM-EMP-DEVICE-ID <= " ")

    TAWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(30); /* Field missing or invalid*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.IM-EMP-DEVICE-ID cursor, bold;
    set TA02M001.XXX-1PART-NTWK-ADDR bold;
    set TA02M001.XXX-2PART-NTWK-ADDR bold;

  end

    /* But neither field may be an asterisk*/

  if (TA02M001.XXX-1PART-NTWK-ADDR == "*")

    TAWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(30); /* Field missing or invalid*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.XXX-1PART-NTWK-ADDR cursor, bold;
    set TA02M001.XXX-2PART-NTWK-ADDR bold;

  end

  if (TA02M001.IM-EMP-DEVICE-ID == "*")

    TAWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(30); /* Field missing or invalid*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.IM-EMP-DEVICE-ID cursor, bold;

  end


end // end TA02-41000

// Check for dup fields.
Function TA02-41100()
   /* ------------------------------------------------------------*/
   /* If action code is add or delete, both street talk name and*/
   /* employee\device id's are required.  Otherwise, only one of*/
   /* those fields are required.*/
   /*  */
   /* Check to ensure that both NT-ADDR and IM-EMP-DEVICE-ID are unique.*/
   /*  */
   /* Asterisks may only be used for creating new IM-EMP-DEVICE-ID's*/
   /* ------------------------------------------------------------*/

  if (TA02M001.XXX-1PART-NTWK-ADDR <= " "
   || TA02M001.XXX-1PART-NTWK-ADDR == "*")

    TAWREC.XXX-MSG-LOC-ID = "41100"; /* Message location*/
    converseLib.validationFailed(30); /* Field missing or invalid*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.XXX-1PART-NTWK-ADDR cursor, bold;
    set TA02M001.XXX-2PART-NTWK-ADDR bold;

    return;

  end

    /* ------------------------------------------------------------*/
    /* Check for pre-existing NT-ADDR*/
    /* ------------------------------------------------------------*/

  set VTNTNM01 empty;

  TA02W01.XXX-1PART-NTWK-ADDR = TA02M001.XXX-1PART-NTWK-ADDR;
  TA02W01.XXX-2PART-NTWK-ADDR = TA02M001.XXX-2PART-NTWK-ADDR;
  VTNTNM01.XXX-NTWK-ADDR = TA02W01.XXX-NTWK-ADDR;

  VTNTNM01.IM-EMP-DEVICE-ID = "*";

  TA02S-TANTNM02-S();

  if (SQLCA.VAGen_SQLCODE != 100) /* NT-ADDR exists on table already.*/

    TAWREC.XXX-MSG-LOC-ID = "41100"; /* Message location*/
    converseLib.validationFailed(42); /* Duplicate key used...*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.XXX-1PART-NTWK-ADDR cursor, bold;
    set TA02M001.XXX-2PART-NTWK-ADDR bold;

    return;

  end

    /* ------------------------------------------------------------*/
    /* Check for missing IM-EMP-DEVICE-ID, create one if needed.*/
    /* ------------------------------------------------------------*/

  TA02W00.TA02W-EMP-DEV-CREATED = "N"; /* This flag used in 50000's*/

  if (TA02M001.IM-EMP-DEVICE-ID <= " "
   || TA02M001.IM-EMP-DEVICE-ID == "*")

    TA02-41110(); /* Create an ID if not given.*/

  else

      /* ------------------------------------------------------------*/
      /* Check for pre-existing IM-EMP-DEVICE-ID*/
      /* ------------------------------------------------------------*/

    set VTNTNM01 empty;

    VTNTNM01.XXX-NTWK-ADDR = "*";

    VTNTNM01.IM-EMP-DEVICE-ID = TA02M001.IM-EMP-DEVICE-ID;

    TA02S-TANTNM02-S();

    if (SQLCA.VAGen_SQLCODE != 100) /* IM-EMP-DEVICE-ID already exists.*/

      TAWREC.XXX-MSG-LOC-ID = "41100"; /* Message location*/
      converseLib.validationFailed(42); /* Duplicate key used...*/
      TA02W00.TAW-ERROR-FLAG = "Y";
      set TA02M001.IM-EMP-DEVICE-ID cursor, bold;

    end

  end


end // end TA02-41100

// Create an IM-EMP-DEVICE-ID
Function TA02-41110()
   /* ------------------------------------------------------------*/
   /* This proc will create a fairly random IM-EMP-DEVICE-ID.*/
   /* The first four digits will be a truncated julian date, YDDD.*/
   /* The last six digits will be the current time, HHMMSS.*/
   /* If this is not unique, the last second will be replaced*/
   /* with the first occurance in the ALPHA-ARRAY as indexed by*/
   /* EMP-DEV-NDX. Six different letters will be tried before*/
   /* the program returns a system busy try again error to user.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* get current date*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* current date routine*/

   /* ------------------------------------------------------------*/
   /* get julian date.*/
   /* ------------------------------------------------------------*/

  set TA4REC empty; /* clear record*/
  TA4REC.TA2DTOPT = "GREGGREG"; /* option*/
  TA4REC.TA2GRTYP = "G"; /* type*/

  TA4REC.TA2GRGGN = XX0XW01.XX0XWDAT;

  call "TA0040" (TA4REC) {isNoRefresh = yes, isExternal = yes}; /* call subroutine*/

  if (TA4REC.TA2RTNCD != 0) /* if not valid date*/

    TA1REC.TA1PGMNO = "41110"; /* module id*/
    converseLib.validationFailed(43); /* unexpected error has occured*/
    TA02W00.TAW-ERROR-FLAG = "Y";

  else

    TA02W00.TA2JULNN = TA4REC.TA2JULNN;
    TA02-JULIAN-YDDD = TA02W00.TA02-JULIAN-TRNKD;

    TA02W00.TA02W-TIMESTAMP = XX0XWHMS;

    TA02M001.IM-EMP-DEVICE-ID = TA02W00.IM-EMP-DEVICE-ID;

    TA02W00.TA02W-EMP-DEV-CREATED = "Y";

  end


end // end TA02-41110

// Check key fields for delete
Function TA02-41200()
   /* ------------------------------------------------------------*/
   /* If action code is delete, both street talk name and*/
   /* employee\device id's are required.*/
   /*  */
   /* Asterisks may not be used.*/
   /* ------------------------------------------------------------*/

  if (TA02M001.XXX-1PART-NTWK-ADDR <= " "
   || TA02M001.XXX-1PART-NTWK-ADDR == "*")

    TAWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(30); /* Field missing or invalid*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.XXX-1PART-NTWK-ADDR cursor, bold;
    set TA02M001.XXX-2PART-NTWK-ADDR bold;

  end

  if (TA02M001.IM-EMP-DEVICE-ID <= " "
   || TA02M001.IM-EMP-DEVICE-ID == "*")

    TAWREC.XXX-MSG-LOC-ID = "43000"; /* Message location*/
    converseLib.validationFailed(30); /* Field missing or invalid*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    set TA02M001.IM-EMP-DEVICE-ID cursor, bold;

  end


end // end TA02-41200

// Process valid input request
Function TA02-50000()
   /* ------------------------------------------------------------*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (TA02M001.TA02-ACTION == "I"
  )
    TA02W00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Add or delete from the VTNTNM table.*/
   /* ------------------------------------------------------------*/

  if (TA02M001.TA02-ACTION == "A"
  )
    TA02-51000();

  else /* If not adding, then deleting.*/

    TA02-52000();

  end

   /* ------------------------------------------------------------*/
   /* Commit all changes, refresh data if adding.*/
   /* ------------------------------------------------------------*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.commit(); /* Commit all changes*/

  if (TA02M001.TA02-ACTION == "A")

    TA02W00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

  else

    set TA02M001 initial; /* Clear map*/

    TA02W00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

  end


end // end TA02-50000

// Check for preexisting keys
Function TA02-51000()
   /* ------------------------------------------------------------*/
   /* Add map to VTNTNM01 table*/
   /* ------------------------------------------------------------*/

  set VTNTNM01 empty;

  TA02W01.XXX-1PART-NTWK-ADDR = TA02M001.XXX-1PART-NTWK-ADDR;
  TA02W01.XXX-2PART-NTWK-ADDR = TA02M001.XXX-2PART-NTWK-ADDR;

  VTNTNM01.XXX-NTWK-ADDR = TA02W01.XXX-NTWK-ADDR;

  VTNTNM01.IM-EMP-DEVICE-ID = TA02M001.IM-EMP-DEVICE-ID;

  VTNTNM01.XXX-USER-ID1 = TA02M001.XXX-USER-ID1;

    /* ----------------------------------------------------------*/
    /* Obtain the current date and time.*/
    /* ----------------------------------------------------------*/

  XX0XS01(); /* Obtain date and time*/

  VTNTNM01.ZZ-SDT = XX0XW01.XX0XWDAT; /* Date : CCYYMMDD*/

   /* ------------------------------------------------------------*/
   /* Add to the VTNTNM table.*/
   /* ------------------------------------------------------------*/

  TA02S-TANTNM02-A();

  if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate row.*/

    if (TA02W00.TA02W-EMP-DEV-CREATED == "Y")

      /* ------------------------------------------------------------*/
      /* If IM-EMP-DEVICE-ID was created, and a duplicate is found to*/
      /* exist, move new trailing values and try again.  Try this 9 times*/
      /* before returning data in use message to user.*/
      /* ------------------------------------------------------------*/

      TA02W00.TA02W-EMP-DEV-NDX = 99;

      while (SQLCA.VAGen_SQLCODE == -803
       && TA02W00.TA02W-EMP-DEV-NDX > 80)

        TA02W00.TA02W-EMP-DEV-VAR = TA02W00.TA02W-EMP-DEV-NDX;
        TA02M001.IM-EMP-DEVICE-ID = TA02W00.IM-EMP-DEVICE-ID;
        VTNTNM01.IM-EMP-DEVICE-ID = TA02W00.IM-EMP-DEVICE-ID;

        TA02S-TANTNM02-A();

        TA02W00.TA02W-EMP-DEV-NDX = TA02W00.TA02W-EMP-DEV-NDX - 1;

      end

      if (SQLCA.VAGen_SQLCODE == -803) /* All extra positions are filled...*/

        converseLib.validationFailed(27); /* Data in use, please try again.*/
        TA02W00.TAW-ERROR-FLAG = "Y";
        TA02M001.IM-EMP-DEVICE-ID = " "; /* Leave a clean id.*/
        TAWREC.XXX-MSG-LOC-ID = "51000";

      end

    else /* IM-EMP-DEVICE-ID not created.*/

      converseLib.validationFailed(42); /* Duplicate key used,...*/
      TA02W00.TAW-ERROR-FLAG = "Y";
      TAWREC.XXX-MSG-LOC-ID = "51000";
      set TA02M001.IM-EMP-DEVICE-ID bold, cursor;

    end

  else
    converseLib.validationFailed(16); /* Record added.*/
    TAWREC.XXX-MSG-LOC-ID = "51000";

  end


end // end TA02-51000

// Move map values to VTNTNM01
Function TA02-52000()
   /* ------------------------------------------------------------*/
   /* Move map values to VTNTNM01 record for add/delete.*/
   /* ( Street talk name moved in two halves due to length. )*/
   /* ------------------------------------------------------------*/

  VTNTNM01.IM-EMP-DEVICE-ID = TA02M001.IM-EMP-DEVICE-ID;

  TA02W01.XXX-1PART-NTWK-ADDR = TA02M001.XXX-1PART-NTWK-ADDR;
  TA02W01.XXX-2PART-NTWK-ADDR = TA02M001.XXX-2PART-NTWK-ADDR;

  VTNTNM01.XXX-NTWK-ADDR = TA02W01.XXX-NTWK-ADDR;

  VTNTNM01.XXX-USER-ID1 = TA02M001.XXX-USER-ID1;

  TA02S-TANTNM02-D();

  if (SQLCA.VAGen_SQLCODE == 0)

    converseLib.validationFailed(18); /* Record added.*/
    TAWREC.XXX-MSG-LOC-ID = "TA02-52000";

  else

    converseLib.validationFailed(41); /* Data not found.*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    TAWREC.XXX-MSG-LOC-ID = "TA02-52000";
    set TA02M001.IM-EMP-DEVICE-ID bold, cursor;
    set TA02M001.XXX-1PART-NTWK-ADDR bold;
    set TA02M001.XXX-2PART-NTWK-ADDR bold;

    return; /* Return to previous process*/

  end


end // end TA02-52000

// Add to NT NETWORK ADDRESS TABL
Function TA02S-TANTNM02-A()
   /* ------------------------------------------------------------*/
   /* Add to DIMDS.VTNTNM01 table*/
   /* ------------------------------------------------------------*/

  try
    call "TANTNM02" ("A ", SQLCA, VTNTNM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == -803) /* Duplicate keys*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "TANTNM02"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(27); /* Data in use by another*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD TO TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTNTNM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VTNTNM01.VTNTNM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA02S-TANTNM02-A

// Delete VTNTNM01 row
Function TA02S-TANTNM02-D()
   /* ------------------------------------------------------------*/
   /* Delete the selected row from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "TANTNM02" ("D ", SQLCA, VTNTNM01) {isNoRefresh = yes, isExternal = yes};
  end /* Delete row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* and normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or not found for deletion*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA02W00.TAW-ERROR-FLAG = "Y";

  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "DELETE VTNTNM01 ROW";
  TA1REC.TA1PGMNM = "TA0T    "; /* Program name*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTNTNM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VTNTNM01.VTNTNM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA02S-TANTNM02-D

// Select NETWORK ADDRESS ROW
Function TA02S-TANTNM02-S()
   /* ------------------------------------------------------------*/
   /* Select NETWORK ADDRESS ROW.*/
   /* ------------------------------------------------------------*/

  try
    call "TANTNM02" ("S ", SQLCA, VTNTNM01) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or row not found*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  TAWREC.XXX-MSG-LOC-ID = "TANTNMS"; /* Message location*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(27); /* Data in use by another*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    converseLib.validationFailed(34); /* Unexpected error occurred*/
    TA02W00.TAW-ERROR-FLAG = "Y";
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = TAWREC.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW"; /* Description*/
  TA1REC.TA1DBASE = "DIMDS   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VTNTNM01"; /* Table view name*/
  TA1REC.TA1TBLKE = VTNTNM01.VTNTNM01-KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end TA02S-TANTNM02-S

//*** RECORD=TA02W00 ****
// ------------------------------------------------------------
// TA02 Application working storage.
// ------------------------------------------------------------
// 
// MAINTENANCE HISTORY:
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     02/07/94  RMORGA  NEW RECORD
// ***********************
Record TA02W00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 TA02W-EMP-DEV-CREATED TA02W-EMP-DEV-CREATED ; 
  10 TAW-ERROR-FLAG TAW-ERROR-FLAG ; 
  10 TA2JULNN TA2JULNN ; 
    15 * char(1) ; 
    15 TA02-JULIAN-TRNKD TA02-JULIAN-TRNKD ; 
  10 TA02W-EMP-DEV-NDX TA02W-EMP-DEV-NDX ; 
  10 IM-EMP-DEVICE-ID IM-EMP-DEVICE-ID ; 
    15 TA02-JULIAN-YDDD TA02-JULIAN-YDDD ; 
    15 TA02W-TIMESTAMP TA02W-TIMESTAMP ; 
      20 * char(4) ; 
      20 TA02W-EMP-DEV-VAR TA02W-EMP-DEV-VAR ; 
end // end TA02W00

//*** RECORD=TA02W01 ****
// ------------------------------------------------------------
// TA02 Map 001 display storage.
// ------------------------------------------------------------
// 
// MAINTENANCE HISTORY:
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NONE     02/07/94  RMORGA  NEW RECORD.
// ***********************
Record TA02W01 type basicRecord
  10 TA02-ACTION TA02-ACTION ; 
  10 IM-EMP-DEVICE-ID IM-EMP-DEVICE-ID ; 
  10 XXX-USER-ID1 XXX-USER-ID1 ; 
  10 XXX-NTWK-ADDR XXX-NTWK-ADDR ; 
    15 XXX-1PART-NTWK-ADDR XXX-1PART-NTWK-ADDR ; 
    15 XXX-2PART-NTWK-ADDR XXX-2PART-NTWK-ADDR ; 
end // end TA02W01

// Edit action code
DataItem TA02-ACTION char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Truncated julian date yddd
DataItem TA02-JULIAN-TRNKD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Truncated julian date yddd
DataItem TA02-JULIAN-YDDD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IM-EMP-DEVICE-ID was created
DataItem TA02W-EMP-DEV-CREATED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Im-emp-device-id index
DataItem TA02W-EMP-DEV-NDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// replaces trailing sec w/alpha
DataItem TA02W-EMP-DEV-VAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// timestamp
DataItem TA02W-TIMESTAMP char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Vstalk01 table key
DataItem XXX-1PART-NTWK-ADDR char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Vstalk01 table key
DataItem XXX-2PART-NTWK-ADDR char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

