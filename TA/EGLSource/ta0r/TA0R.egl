package ta0r;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ta.common.*;
//*** PROGRAM=TA0R ****
// This application may be called by another CSP application to
// obtain user and routing information for and/or to submit a
// job to execute in the background environment.
// 
// The calling application must format the JCL to be submitted
// into TA6REC, including any variable parameter statements.
// 
// This application will obtain the user identification, the
// name and location of the report recipient, the number of
// copies to print and the print location.  This is done by
// displaying an information screen for the user to complete.
// 
// After the information has been obtained, the passed JCL is
// tailored and submitted to the system internal reader for
// background execution.
// 
// A return code is passed back to the calling application to
// indicate completion status.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      11/30/88  SPOPA   New application.
// DV#0     11/20/89  SPOPA   Added end of job message option.
//                            Added UCC7 control if production.
// DV#0     01/13/90  SPOPA   Added report distribution option.
// DV#0     01/18/90  SPOPA   Do not allow "LOCAL" on OUTPUT.
// DV#0     03/16/90  SPOPA   Handle residual temporary storage
//                            encountered after a prior error.
// DV#0     05/21/90  SPOPA   Support entry of PRINTER field.
// DV#0     10/05/90  SPOPA   Add error flag for map XURDEST.
// DV#0     10/24/90  SPOPA   Add error reporting for return
//                            codes '2' and '3'.
// DV#0     02/11/91  SPOPA   Do not insert CA7 job control if
//                            job identification is in TA0PT06.
// ASUP     09/17/91  BKOOIS  Add process TA0P220 to reformat
//                            the TA3REC.TA3PRTR1 default
//                            remote printer to be compatible
//                            with the format used in the
//                            XROTBL.  Due to a design flaw, if
//                            the remote printers need to be
//                            expanded from RMTnnn to RMTnnnn,
//                            a structure change of XURDEST and
//                            changes to TA0P220 will be re-
//                            quired.
// ASUP     09/20/91  BKOOIS  Allow a undefined default printer
//                            to bypass reformat process.
// ASUP     12/04/91  vcowan  added TA. high-level qualifier to
//                            DSN JCL statement...see ta0pt04 &
//                            tarrecd.
// ASUP     12/04/91  vcowan  jcl chgs to ta0pt02 & ta0pt04....
//                            change syso.ca7.supsrv.parmlib
//                                to  shr.ca7.supsrv.parmlib
//                            per SMS conversion requirements
// ASUP     01/08/92  JWOOD   ADD LOGIC TO VARY THE SU JOB ID
//                            AND THE BATCH INITIATOR NUM VALUE
//                            IN TA0PT02 TABLE IF JOB ID  IS IN
//                            TA0PT08 TABLE, OTHERWISE DEFAULT
//                            TO SU0001, NUM=5 ..........
//                            ALSO ADD LOGIC TO DYNAMICALLY
//                            BUILD THE CA-7 PARAMETERS IN
//                            TA0PT04 TABLE TO ELIMINATE THE
//                            NEED FOR CA-7 PEOPLE TO BUILD
//                            A PROC FOR EVERY JOB SUBMITTED
//                            THRU CA-7....AT REQUEST OF KPECK.
// ASUP     04/07/92  vcowan  jcl chgs to ta0pt02 & ta0pt04....
//                            add following jcl cards:
//                            add "cond.normal=(0000,lt)"
//                            add "cond.p0010=(0000,lt)"
//                            add "cond.p0020=(0000,lt)"
// TSUP     04/15/92  vcowan  add variables to ta0pt04 as
//                            follows & logic to proc ta0p460
//                 1.  MAINID=xxx, where xxx must be
//                       SY2 for DEVLMVS & SY4 FOR PRODMVS
//                     NOTE: only GL jobs & ZT9921 (test job)
//                       will run on DEVLMVS, all other jobs
//                       will run on PRODMVS.
//                 2.  RELOPR=xx, where xx must be
//                       NE when CONDCODE=0000 or
//                       LT when CONDCODE>0000.or
//                 3.  CONDCODE=xxxx, where xxxx is initialized
//                       with value of TA6REC.TA6-MAX-COND-CODE
//                 4.  DELETE,xxxxxx,JCLID=250  where xxxxxx is
//                       initialized with the jobname value in
//                       item TA0PW00.XURJOBID
// TSUP     05/08/92  vcowan on "ADD" * "UPD" parms in TA0PT04
//                     change "JCLID=250"  to "JCLID=000" and
//                     change "SYSTEM=CPU" to "SYSTEM=CSP03"
// TSUP     06/16/92  vcowan  change ta0p460 logic: job GL1253
//                            MUST EXEC on PRODMVS per Monti
//                            Buhite.
// TSUP     07/31/92  vcowan  add "MAINT=Y" to "ADD" parm in
//                            ta0pt04  Assign new SU0006 JOB to
//                            UCC7BTCH# = 6 & send all jobs
//                            prefixed by AB, AF, FB, FF, FL &
//                            GL to job SU0006.  Add comment
//                            record to SU000x jobs, see table
//                            ta0pt02 & new record: TARRECF
// TSUP     12/21/92  vcowan  add ESP/ENCORE logic:  reference
//                            ta0p400, ta0p440, ta0p445,
//                            ta0p446, ta0p460, ta0p480,
//                            tarrecc, ta0pw00, ta0pt11,
//                            ta0pt12, ta0pt13, ta0pt14
// TSUP     01/07/92  vcowan  system testing of ta0r, reference
//                            changes to ta0pt12
// TSUP     01/25/93  vcowan  add ta3rec.ta3rgnid eq '07' to
//                            check for EUROPEAN prod (mvsprod)
//                            CICS Region...ref PROC ta0p400
// TSUP     07/13/93  jcampb  add gl1721 to ta0p400 for mbuhit
// TSUP     01/25/93  vcowan  add ta3rec.ta3rgnid eq '13' to
//                            check for EUROPEAN prod (mvseurd)
//                            CICS Region...ref PROC ta0p400
// TSUP     07/26/94  vcowan  chgs for MVSASIA
// *********************
Program TA0R type textUIProgram //VAGen Info - called text program
  (
   COMMAREA COMMAREA, // record
   TA6REC TA6REC, // record
   TA0PM001 TA0PM001 // map
  )
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = yes, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes
  }

  // Data Declarations
  TA0PW00 TA0PW00; // record
  TA0PW01 TA0PW01; // record
  TA1REC TA1REC; // record
  TA3REC TA3REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TARREC TARREC; // record
  TARRECA TARRECA { redefines = TARREC } ; // record
  TARRECB TARRECB { redefines = TARREC } ; // record
  TARRECC TARRECC { redefines = TARREC } ; // record
  TARRECD TARRECD { redefines = TARREC } ; // record
  TARRECE TARRECE { redefines = TARREC } ; // record
  TARRECF TARRECF { redefines = TARREC } ; // record
  TARRECJ TARRECJ { redefines = TARREC } ; // record
  TARRECN TARRECN { redefines = TARREC } ; // record
  TARRECO TARRECO { redefines = TARREC } ; // record
  TARRECR TARRECR { redefines = TARREC } ; // record
  TARRECS TARRECS { redefines = TARREC } ; // record
  TARRECU TARRECU { redefines = TARREC } ; // record
  TARRECV TARRECV { redefines = TARREC } ; // record
  TARRECW TARRECW { redefines = TARREC } ; // record
  TARRECX TARRECX { redefines = TARREC } ; // record
  TARRECY TARRECY { redefines = TARREC } ; // record
  TARRECZ TARRECZ { redefines = TARREC } ; // record
  UT2REC UT2REC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TA0PT01; // table
  use TA0PT03; // table
  use TA0PT04; // table
  use TA0PT05; // table
  use TA0PT06; // table
  use TA0PT12; // table
  use TA0PT13; // table
  use TA0PT14 {deleteAfterUse = yes}; // table
  use XROTBL {deleteAfterUse = yes}; // table
  use TA0PM.TA0PM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    TA0P100: TA0P100();
     /* ------------------------------------------------------------*/
     /* If the first time through, verify the passed parameters.*/
     /* Otherwise, process the response from the display.*/
     /* ------------------------------------------------------------*/

    if (TA6REC.TA6RTNCD == " ") /* First time through*/

      goto TA0P200; /* Verify the passed parameters*/
    else
      goto TA0P300; /* Process response from display*/

    end


    TA0P200: TA0P200();
     /* ------------------------------------------------------------*/
     /* If submit requested, flow to tailor and submit the JCL.*/
     /* ------------------------------------------------------------*/

    if (TA6REC.TA6SUBSW == "S") /* Tailor and submit JCL only*/
      goto TA0P400; /* Submit the JCL*/
    end

     /* ------------------------------------------------------------*/
     /* If information requested, flow to purge temporary storage.*/
     /* Otherwise, flow to initialize the working storage areas.*/
     /* ------------------------------------------------------------*/

    if (TA6REC.TA6SUBSW == "I") /* Obtain information only*/

      TA6REC.TA6RTNCD = "0"; /* Normal completion*/

      goto TA0P500; /* Purge any temporary storage*/

    else

      goto TA0P600; /* Initialize working storage*/

    end


    TA0P300: TA0P300();
     /* ------------------------------------------------------------*/
     /* If not end of request, flow to format the map for display.*/
     /* ------------------------------------------------------------*/

    if (TA0PW00.TA0PWEND == "N") /* Not end of request*/
      goto TA0P700; /* Format the map for display*/
    end

     /* ------------------------------------------------------------*/
     /* If a printer selected, flow to initialize working storage.*/
     /* ------------------------------------------------------------*/

    if (TA0PW00.TA0PWPIX > 0) /* Selection was made*/
      goto TA0P600; /* Initialize working storage*/
    end

     /* ------------------------------------------------------------*/
     /* If user cancelled, flow to purge any temporary storage.*/
     /* ------------------------------------------------------------*/

    if (TA6REC.TA6RTNCD == "1") /* User cancelled request*/

      COMMAREA.CAMSG = TA0PT01.XXXMSG[11]; /* User cancelled*/

      goto TA0P500; /* Purge any temporary storage*/

    end

     /* ------------------------------------------------------------*/
     /* Otherwise, flow to verify the routing and submit the JCL.*/
     /* ------------------------------------------------------------*/

    goto TA0P400; /* Verify routing and submit JCL*/


    TA0P400: TA0P400();
     /* ------------------------------------------------------------*/
     /* If not end of request, return to the calling application.*/
     /* ------------------------------------------------------------*/

    if (TA0PW00.TA0PWEND == "N") /* Not end of request*/
      exit program; /* Return to calling application*/
    end

     /* ------------------------------------------------------------*/
     /* If normal completion, flow to purge temporary storage.*/
     /* Otherwise, flow to initialize the working storage.*/
     /* ------------------------------------------------------------*/

    if (TA6REC.TA6RTNCD == "0") /* Normal completion*/

      goto TA0P500; /* Purge any temporary storage*/
    else
      goto TA0P600; /* Initialize working storage*/

    end


    TA0P500: TA0P500();
     /* ------------------------------------------------------------*/
     /* Save the distribution information if normal completion.*/
     /* ------------------------------------------------------------*/

    if (TA6REC.TA6RTNCD == "0") /* Normal completion*/

      TA6REC.XURUSRID = TA0PW00.XURUSRID; /* User identification*/
      TA6REC.XURUSRNM = TA0PW00.XURUSRNM; /* Report recipient*/
      TA6REC.XURBLDID = TA0PW00.XURBLDID; /* Location*/
      TA6REC.XURDEST = TA0PW00.XURDEST; /* Print destination*/
      TA6REC.XRODESC = TA0PW00.XRODESC; /* Printer description*/
      TA6REC.XURCOPY = TA0PW00.XURCOPY; /* Number of copies*/

    end

     /* ------------------------------------------------------------*/
     /* Return control to the calling application.*/
     /* ------------------------------------------------------------*/

    exit program; /* Return to calling application*/


    TA0P600: TA0P600();
     /* ------------------------------------------------------------*/
     /* Flow to format the map for display.*/
     /* ------------------------------------------------------------*/

    goto TA0P700; /* Format the map for display*/


    TA0P700: TA0P700();
     /* ------------------------------------------------------------*/
     /* Return control to the calling application.*/
     /* ------------------------------------------------------------*/

    exit program; /* Return to calling application*/


  end // end main
end // end TA0R

