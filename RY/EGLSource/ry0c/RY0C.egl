package ry0c;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import op.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=RY0C ****
// ************************************************************
// *
// *   RY0C - Royalties by Product Update Program
// *
// *   This application sets the royalty status indicator to
// *   activate/inactivate/hold the assignment of royalties
// *   for a given style/color/dimension. Royalties are
// *   determined via the Royalty Contract Code and the Term
// *   Group Code. New contracts can also be created, and
// *   existing contracts deleted, by this program.
// *
// ************************************************************
// * Maintenance History
// *Rev #    Date    Who     Remarks
// *-----  --------  ------  ----------------------------------
// *       03-27-93  JRAMOS  Program Creation
// *       07-13-93  MHALST  Correct various bugs
// *       08-12-93  MHALST  Add link to SY0G
// *       09-07-93  MHALST  Change defaulting for xtrc ind.
// *       10-06-93  MHALST  Correct add of VRCOLR01.
// *       10-24-96  MHALST  Add DPROD.VSYTAG01 TABLE.
// *
// ************************************************************
// *********************
Program RY0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "SY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  RY0CW01 RY0CW01; // record
  RY0CW02 RY0CW02; // record
  RY0CW03 RY0CW03; // record
  RY0CW04 RY0CW04; // record
  RY0CW05 RY0CW05; // record
  SQLCA SQLCA; // record
  SY1REC SY1REC; // record
  SY2REC SY2REC; // record
  SY9REC SY9REC; // record
  SYAREC SYAREC; // record
  SYWREC SYWREC; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TAEREC TAEREC; // record
  VRCOLR01 VRCOLR01; // record
  VRTERM01 VRTERM01; // record
  XP0GW01 XP0GW01; // record
  XP0GW02 XP0GW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use SYZTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use RY0CM.RY0CM001,  // forms
      RY0CM.RY0CM005, 
      RY0CM.XP0GM001
   {
    validationBypassKeys = [pf3, pf4],
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    RY0C000: RY0C000();

     /* Program should NEVER get here, but in case of some*/
     /* weird logic error, we'll do an EZECLOS just in case.*/

    exit program;
    RY0C001: RY0C001();
    RY0C100: RY0C100();
    RY0C150: RY0C150();
    RY0C200: RY0C200();
    RY0C250: RY0C250();
    RY0C300: RY0C300();
  end // end main
end // end RY0C

// Process Main Logic
Function RY0C000()

   /* *************************************************************/
   /* *                                                          **/
   /* *  RY0C Main Logic*/
   /* *                                                          **/
   /* *************************************************************/

  RY0C001(); /* Initialize program*/

  if (RY0CW01.RY0CW-LINK-FL == "Y")
    RY0C150();
    RY0CW01.RY0CW-END-CHG-FL = "N";
    while (RY0CW01.RY0CW-END-CHG-FL == "N")
      RY0C200(); /* converse screen*/
    end
    if (SYWREC.SYWPFOPT == "PF16B") /* User wants SY0G*/
      SYWREC.SYWPFOPT = " ";
      SYWREC.SYWPDATA = " ";
      COMMAREA.CAUSERA = SYWREC.SYWTRANF;
      COMMAREA.CATOAP = "SY0G";
    else
      COMMAREA.CATOAP = "SY0B";
    end
    XSEXIT();
    XSPF4();
  end


  RY0CW01.RY0CWEOA = "N";
  while (RY0CW01.RY0CWEOA == "N")
    RY0C100(); /* converse screen*/
  end

end // end RY0C000

// Initialize Program
Function RY0C001()

   /* Initialize program*/

  XSENTRY(); /* check security*/
  XSSEGTR(); /* set tran id*/

   /* clear working storage and screen records*/

  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;
  set SYWREC empty;
  set XP0GW01 empty;
  set RY0CW01 empty;
  set RY0CW02 empty;
  set RY0CW03 empty;
  set RY0CW04 empty;
  set SY1REC empty;
  set SY2REC empty;
  set VRCOLR01 empty;
  set VRTERM01 empty;

  set RY0CM001 initial;

  RY0CW01.RY0CWREV = "01"; /* Program revision number*/
  RY0CW01.RY0CW-PF-EXIT-FL = "Y";

   /* now check commarea for passing data*/

  RY0CW01.RY0CW-LINK-FL = "N";
  if (COMMAREA.CAFRMSYS == "SY") /* from product*/
    SYWREC.SYWTRANF = COMMAREA.CAUSERA;
    if (COMMAREA.CAFROMAP == "SY0B")
      if (SYWREC.SYWPFOPT == "PF13B"
       || SYWREC.SYWPFOPT == "PF14B"
       || SYWREC.SYWPFOPT == "PF16B")
        RY0CW01.RY0CW-LINK-FL = "Y";
        RY0CW01.RY0CW-PF-EXIT-FL = "N";
        RY0CM001.SY-STY-NBR = SYWREC.SY1STNBR;
      end
    end
  end

  if (SYWREC.XGPCD != "  ")
    RY0CM001.XGP-GPC-CD = SYWREC.XGPCD;
  else
    RY0CM001.XGP-GPC-CD = COMMAREA.XGPCD;
  end

  RY0CS-GET-GPC-DESC(); /* get gpc desc*/

   /* now get current date for screen*/

  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  if (TA2REC.TA2RTNCD == 0)
    SYWREC.SYWTODAY = TA2REC.TA2GRGGN;
  end

end // end RY0C001

// Converse Screen RY0CM001
Function RY0C100()

  RY0CM001.RY0CM-PROCESS-NAME = "RY0C100"; /* process name*/
  RY0CM001.RY0CM-CUR-DATE = SYWREC.SYWTODAY; /* current date*/
  RY0CM001.RY0CM-VERSION-NBR = RY0CW01.RY0CWREV; /* version no.*/

  RY0CS-SET-SCR-FLDS(); /* set up screen*/

  converse RY0CM001 ;

  RY0CS-RESET-FLDS(); /* reset fields*/

  RY0CS-CHECK-PFKEYS(); /* check PF keys (May exit)*/

  if (converseVar.eventKey is pa2) /* reset screen if PA2*/
    set RY0CM001 initial;
    SY1REC.SY1STNBR = " "; /* clear style for key check*/
    SY2REC.SY2CLRID = " "; /* and color for same*/
    RY0CM001.XGP-GPC-CD = SYWREC.XGPCD;
    RY0CM001.XGP-GPC-DESC = RY0CW01.RY0CW-XGP-GPC-DESC;
    set RY0CM001.SY-STY-NBR cursor;
    return;
  end

  if (converseVar.validationMsgNum != 0) /* errors or messages found?*/
    return; /* redisplay screen*/
  end

  RY0C150(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful validate?*/
    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(14); /* no errors*/
      set RY0CM001.SY-STY-NBR cursor;
      return;
    end

    if (RY0CW01.RY0CWMOD == "I") /* inquiry only*/
      set RY0CM001.SY-STY-NBR cursor;
      return;
    end

    RY0CW01.RY0CW-END-CHG-FL = "N";
    while (RY0CW01.RY0CW-END-CHG-FL == "N")
      RY0C200(); /* get changes and update*/
    end
  end

end // end RY0C100

// Validate Screen Data
Function RY0C150()

   /* Validate the keys entered*/

  RY0CW01.RY-STY-ELIG-IND = " "; /* clear elig ind save area*/

  if (RY0CM001.XGP-GPC-CD != SYWREC.XGPCD) /* user changed GPC*/
    RY0CS-GET-GPC-DESC(); /* validate and get desc*/
    if (converseVar.validationMsgNum != 0)
      return;
    end
  end

  RY0CS-EDIT-STYLE(); /* validate style*/
  if (converseVar.validationMsgNum != 0) /* can't continue if errors*/
    return;
  end

  if (RY0CW01.RY-STY-ELIG-IND == "C")
    if (RY0CW01.RY0CW-LINK-FL == "Y")
      RY0CM001.SY-COLR-CD-ID = SYWREC.SY2CLRID;
      RY0CM001.XDM-DIM-CD = SYWREC.XDMCD;
    end
    RY0CS-EDIT-CLR-DIM(); /* validate color/dim*/
    if (converseVar.validationMsgNum != 0) /* can't continue if errors*/
      return;
    end
  else
    RY0CM001.SY-COLR-CD-ID = " "; /* reset map/save fields*/
    RY0CM001.XDM-DIM-CD = " ";
    SYWREC.SY2CLRID = " ";
    SYWREC.XDMCD = " ";
  end

   /* now obtain RY1REC rows for the color/style, move to screen.*/

  RY0CS-GET-RYL-ROWS(); /* obtain and save in RY0CW02*/

  if (converseVar.validationMsgNum != 0) /* errors found*/
    set RY0CM001.SY-STY-NBR cursor; /* cursor at key fld*/
    return; /* can't continue if errors*/
  end


  if (RY0CW01.RY0CWMOD == "I") /* if inquiry user*/

    /* protect the data area*/

    set RY0CM001.RY-STY-ELIG-IND skip; /* eligibility ind*/

    RY0CW01.RY0CWIDX = 1; /* reset index*/
    while (RY0CW01.RY0CWIDX <= 18) /* clear data part of screen*/
      set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] skip;
      set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] skip;
      set RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] skip;
      RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* loop through*/
    end

    set RY0CM001.SY-STY-NBR cursor; /* cursor at key fld*/

    if (RY0CW01.RY0CWMAX == 0)
      converseLib.validationFailed(198); /* No royalty data exists*/
      return;
    end

  else
    set RY0CM001.RY-RLTY-CONT-CD[1] cursor; /* cursor at first data fld*/
  end

end // end RY0C150

// Converse Screen RY0CM001
Function RY0C200()

  RY0CM001.RY0CM-PROCESS-NAME = "RY0C200"; /* process name*/
  RY0CM001.RY0CM-CUR-DATE = SYWREC.SYWTODAY; /* move date*/
  RY0CM001.RY0CM-VERSION-NBR = RY0CW01.RY0CWREV; /* version nbr*/

  set RY0CM001.XGP-GPC-CD skip;
  set RY0CM001.SY-STY-NBR skip;

  if (RY0CM001.RY-STY-ELIG-IND == "C") /* color based royalty*/
    if (RY0CM001.SY-COLR-CD-ID != " " /* with values*/
     && RY0CM001.XDM-DIM-CD != " ")  
      set RY0CM001.SY-COLR-CD-ID skip; /* protect fields*/
      set RY0CM001.XDM-DIM-CD skip;
    end
  end

  if (converseVar.validationMsgNum == 0) /* if we have no errors*/
    set RY0CM001.RY-RLTY-CONT-CD[1] cursor; /* position cursor*/
  end

  converse RY0CM001 ;

  RY0CS-RESET-FLDS(); /* reset fields*/

  RY0CS-CHECK-PFKEYS(); /* check PF keys (May exit)*/

  if (converseVar.eventKey is pa2) /* reset screen if PA2*/
    set RY0CM001 initial;
    RY0CW01.RY0CW-END-CHG-FL = "Y";
    SY1REC.SY1STNBR = " "; /* clear style for key check*/
    SY2REC.SY2CLRID = " "; /* and color for same*/
    RY0CM001.XGP-GPC-CD = SYWREC.XGPCD;
    RY0CM001.XGP-GPC-DESC = RY0CW01.RY0CW-XGP-GPC-DESC;
    set RY0CM001.SY-STY-NBR cursor;
    return;
  end

  if (converseVar.validationMsgNum != 0) /* errors*/
    return; /* return to calling process*/
  end

  RY0C250(); /* validate logic*/

  if (RY0CW01.RY0CWELC == "Y") /* color elig update mode done*/
    RY0CW01.RY0CWELC = " "; /* reset indicator*/
    RY0CW01.RY0CW-END-CHG-FL = "Y"; /* terminate loop*/
    set RY0CM001.SY-STY-NBR cursor;
    return; /* return to calling process*/
  end

  if (converseVar.validationMsgNum == 0) /* successful validate*/

    if (converseVar.eventKey is pf12 /* validate only*/
     || RY0CW01.RY0CWPOP == "Y")     /* we displayed pop-up*/
      converseLib.validationFailed(131); /* no errors*/
      set RY0CM001.RY-RLTY-CONT-CD[1] cursor;
      return;
    end

    RY0C275(); /* update DROYAL.VRCOLR01*/
    if (converseVar.validationMsgNum == 0)
      if (RY0CM001.RY-STY-ELIG-IND != RY0CW01.RY-STY-ELIG-IND)
        RY0CW01.RY-STY-ELIG-IND = RY0CM001.RY-STY-ELIG-IND;
        RY0CS-UPD-ELIG();
      end
    end

    if (converseVar.validationMsgNum == 0 /* successfull update*/
     || converseVar.validationMsgNum == 57) /* or no changes made*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/
      RY0CW01.RY0CW-END-CHG-FL = "Y"; /* terminate loop*/
      if (converseVar.validationMsgNum == 0) /* successfull update*/
        converseLib.validationFailed(11); /* file update successful*/
      end
      RY0CS-RESET-SCRN(); /* reset screen*/
      SY1REC.SY1STNBR = " "; /* clear style for key check*/
      SY2REC.SY2CLRID = " "; /* and color for same*/
      set RY0CM001.SY-STY-NBR cursor;

    else /* problems during updating*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* rollback changes*/
    end

  else /* problems during validation*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* rollback changes*/
  end

end // end RY0C200

// Pre-validation check
Function RY0C250()

   /* Validate screen data items*/

  RY0CS-EDIT-ELIG(); /* validate eligibility ind*/

  if (RY0CW01.RY0CWELC == "Y") /* eligibility change mode activated*/

    RY0CS-GET-RYL-CLRS(); /* get royalty clr/dim, save in RY0CW03*/
    move RY0CW02 to RY0CW04 withV60Compat; /* save style-based items in RY0CW04*/
    RY0CW01.RY0CWECX = 0; /* initialize color index*/

    if (converseVar.validationMsgNum == 0) /* no errors*/
      RY0CW01.RY0CW-PF-EXIT-FL = "N";
      RY0CW01.RY0CWEPI = "N"; /* reset process indicator*/
      while (RY0CW01.RY0CWEPI == "N") /* loop until done*/
        RY0C300(); /* process color eligibility updates*/
      end
      RY0CW01.RY0CW-PF-EXIT-FL = "Y";
    end

    return; /* return to calling process*/

  end

   /* Validate map data*/

  if (converseVar.validationMsgNum == 0) /* no errors so far*/
    RY0C251();
  end


end // end RY0C250

// Validate map data
Function RY0C251()

   /* Do normal validation*/

  RY0CW01.RY0CWIDX = 1; /* reset array index*/
  while (RY0CW01.RY0CWIDX <= 18)

    if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] == " " /* no values*/
     && RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == " "  
     && RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] == " ")
      RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = " ";
      RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = " ";

    else /* values entered*/

      if (RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == " ")
        RY0CS-SCAN-TERMS(); /* Scan for default term group*/
      end

      if (RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] == " "
       && RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] == " ")
        if (RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == "00")
          RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = "I";
        else
          RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = "A";
        end
      else
        if (RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] != "A"
         && RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] != "I"
         && RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] != "H")
          converseLib.validationFailed(205); /* Valid values are A,I,H*/
          set RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] cursor, bold;
        end
      end

      RY0CS-VAL-TERM(); /* Validate contract/term*/

    end

    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* loop through*/

  end

   /* Now check to make sure we have at least one entry*/
  RY0CW01.RY0CWIDX = 1; /* reset array index*/
  while (RY0CW01.RY0CWIDX <= 18)
    if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] != " ")
      RY0CW01.RY0CWIDX = 99;
      if (RY0CM001.RY-STY-ELIG-IND == "N"
       && RY0CW01.RY-STY-ELIG-IND == "N")
        RY0CM001.RY-STY-ELIG-IND = "S";
      end
    else
      RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1;
    end
  end

  if (RY0CM001.RY-STY-ELIG-IND != "N"
   && RY0CW01.RY0CWIDX != "99")
    converseLib.validationFailed(73); /* Enter data for Update*/
    set RY0CM001.RY-RLTY-CONT-CD[1] cursor, bold;
  end

end // end RY0C251

// Add/Upd/Delete VRCOLR01 row
Function RY0C275()

   /* Update/Insert DROYAL.VRCOLR01 rows*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GETDATE";
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  SYWREC.ZZZSDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGDT = TA2REC.TA2GRGGN;
  SYWREC.ZZZCHGTM = TA2REC.TA2TIMHM;

  RY0CW01.RY0CWUPD = " "; /* reset update indicator*/

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= 18)

    if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] == " " /* map flds spaced out*/
     && RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == " "  
     && RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] == " ")

      if (RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX] != " " /* wk flds w/values*/
       && RY0CW02.RY-TERM-GRP-CD[RY0CWIDX] != " "  
       && RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] != " ")

        VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move keys*/
        VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;

        if (RY0CW01.RY-STY-ELIG-IND != "C") /* style-based*/
          VRCOLR01.SY-COLR-CD-ID = "***";
          VRCOLR01.XDM-DIM-CD = "**";
        else
          VRCOLR01.SY-COLR-CD-ID = SYWREC.SY2CLRID;
          VRCOLR01.XDM-DIM-CD = SYWREC.XDMCD;
        end

        VRCOLR01.RY-RLTY-CONT-CD = RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX];
        VRCOLR01.RY-TERM-GRP-CD = RY0CW02.RY-TERM-GRP-CD[RY0CWIDX];

        RY0CW01.RY0CWUPD = "Y"; /* set update indicator*/
        RY0CS-DELETE-ROW(); /* delete VRCOLR01 row (W02 as key)*/

        if (converseVar.validationMsgNum == 0) /* normal response*/
          RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX] = " "; /* space out*/
          RY0CW02.RY-TERM-GRP-CD[RY0CWIDX] = " ";
          RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] = " ";
        end

      end

    else

      if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] != " " /* map flds w/values*/
       && RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] != " "  
       && RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] != " ")

        if (RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX] == " " /* wk flds = spaces*/
         && RY0CW02.RY-TERM-GRP-CD[RY0CWIDX] == " "  
         && RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] == " ")

          set VRCOLR01 empty;
          VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move keys*/
          VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;

          if (RY0CW01.RY-STY-ELIG-IND != "C") /* style-based*/
            VRCOLR01.SY-COLR-CD-ID = "***";
            VRCOLR01.XDM-DIM-CD = "**";
          else
            VRCOLR01.SY-COLR-CD-ID = SYWREC.SY2CLRID;
            VRCOLR01.XDM-DIM-CD = SYWREC.XDMCD;
          end

          VRCOLR01.RY-RLTY-CONT-CD = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX];
          VRCOLR01.RY-TERM-GRP-CD = RY0CM001.RY-TERM-GRP-CD[RY0CWIDX];
          VRCOLR01.RY-RLTY-XTRC-IND = RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX];

          RY0CW01.RY0CWUPD = "Y"; /* set update indicator*/
          RY0CS-ADD-ROW(); /* insert VRCOLR01 row (M001 as key)*/

          if (converseVar.validationMsgNum == 0) /* normal response*/
            RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX] = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX]; /* move to wk flds*/
            RY0CW02.RY-TERM-GRP-CD[RY0CWIDX] = RY0CM001.RY-TERM-GRP-CD[RY0CWIDX];
            RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] = RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX];
          end

        else

          if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] != 
          RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX] /* screen NE save area*/
           || RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] != 
          RY0CW02.RY-TERM-GRP-CD[RY0CWIDX])

            set VRCOLR01 empty;
            VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move keys*/
            VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;

            if (RY0CW01.RY-STY-ELIG-IND != "C") /* style-based*/
              VRCOLR01.SY-COLR-CD-ID = "***";
              VRCOLR01.XDM-DIM-CD = "**";
            else
              VRCOLR01.SY-COLR-CD-ID = SYWREC.SY2CLRID;
              VRCOLR01.XDM-DIM-CD = SYWREC.XDMCD;
            end

            VRCOLR01.RY-RLTY-CONT-CD = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX];
            VRCOLR01.RY-TERM-GRP-CD = RY0CM001.RY-TERM-GRP-CD[RY0CWIDX];
            VRCOLR01.RY-RLTY-XTRC-IND = RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX];

            RY0CW01.RY0CWUPD = "Y"; /* set update indicator*/

            RY0CS-ADD-ROW(); /* insert VRCOLR01 row (M001 as key)*/

            if (converseVar.validationMsgNum == 0) /* normal response*/
              VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move keys*/
              VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;

              if (RY0CW01.RY-STY-ELIG-IND != "C") /* style-based*/
                VRCOLR01.SY-COLR-CD-ID = "***";
                VRCOLR01.XDM-DIM-CD = "**";
              else
                VRCOLR01.SY-COLR-CD-ID = SYWREC.SY2CLRID;
                VRCOLR01.XDM-DIM-CD = SYWREC.XDMCD;
              end

              VRCOLR01.RY-RLTY-CONT-CD = RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX];
              VRCOLR01.RY-TERM-GRP-CD = RY0CW02.RY-TERM-GRP-CD[RY0CWIDX];

              RY0CS-DELETE-ROW(); /* delete VRCOLR01 row (W02 as key)*/

              RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX] = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX]; /* move to wk flds*/
              RY0CW02.RY-TERM-GRP-CD[RY0CWIDX] = RY0CM001.RY-TERM-GRP-CD[RY0CWIDX];
              RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] = RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX];
            end

          else

            if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] == 
            RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX]
             && RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == 
            RY0CW02.RY-TERM-GRP-CD[RY0CWIDX]) /* same cont & term*/

              if (RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] != 
              RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX]) /* royalty sts upd*/

                VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move keys*/
                VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;

                if (RY0CW01.RY-STY-ELIG-IND != "C") /* style-based*/
                  VRCOLR01.SY-COLR-CD-ID = "***";
                  VRCOLR01.XDM-DIM-CD = "**";
                else
                  VRCOLR01.SY-COLR-CD-ID = SYWREC.SY2CLRID;
                  VRCOLR01.XDM-DIM-CD = SYWREC.XDMCD;
                end

                VRCOLR01.RY-RLTY-CONT-CD = RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX];
                VRCOLR01.RY-TERM-GRP-CD = RY0CW02.RY-TERM-GRP-CD[RY0CWIDX];

                RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX] = RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX]; /* move to wk flds*/

                RY0CW01.RY0CWUPD = "Y"; /* set update indicator*/
                RY0CS-UPD-ROW(); /* update VRCOLR01 row (W02 as key)*/

              end

            end

          end

        end

      end

    end

    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* Loop through*/

  end

  if (converseVar.validationMsgNum == 0) /* no errors*/
    if (RY0CW01.RY0CWECF != "Y") /* elig not changed*/
      if (RY0CW01.RY0CWUPD != "Y") /* no updates done*/
        converseLib.validationFailed(57); /* display no chg msg*/
      end
    end
  end


end // end RY0C275

// Converse Screen RY0CM001
Function RY0C300()

  RY0CM001.RY0CM-PROCESS-NAME = "RY0C300"; /* process name*/
  RY0CM001.RY0CM-CUR-DATE = SYWREC.SYWTODAY; /* move date*/
  RY0CM001.RY0CM-VERSION-NBR = RY0CW01.RY0CWREV; /* version nbr*/

  if (converseVar.validationMsgNum == 0) /* no errors so far*/

    RY0CW01.RY0CWECX = RY0CW01.RY0CWECX + 1; /* get next color*/
    if (RY0CW01.RY0CWECX > RY0CW01.RY0CWECM) /* no more colors*/
      RY0CW01.RY0CWEPI = "Y"; /* indicate end of processing*/
      RY0CS-DLT-RYL-STY(); /* delete all previous style-based VCOLR01 rows*/
      RY0CS-RESET-SCRN(); /* initialize screen*/
      RY0CS-UPD-ELIG(); /* update DPROD.VSTYLE01 Elig ind*/
      converseLib.validationFailed(11); /* indicate color updates done*/
      return; /* return to calling process*/
    else
                  /* get next color, display to screen*/
      RY0CM001.XGP-GPC-CD = SYWREC.XGPCD; /* move map keys*/
      RY0CM001.SY-STY-NBR = SYWREC.SY1STNBR;
      RY0CM001.SY-COLR-CD-ID = RY0CW03.SY-COLR-CD-ID[RY0CWECX];
      RY0CM001.SY-STY-COLR-DESC = RY0CW03.SY-STY-COLR-DESC[RY0CWECX];
      RY0CM001.XDM-DIM-CD = RY0CW03.XDM-DIM-CD[RY0CWECX];
      RY0CM001.XDM-DIM-DESC = RY0CW03.XDM-DIM-DESC[RY0CWECX];
      RY0CM001.RY-STY-ELIG-IND = RY0CW01.RY-STY-ELIG-IND;

      SYWREC.SY2CLRID = RY0CW03.SY-COLR-CD-ID[RY0CWECX];
      SYWREC.XDMCD = RY0CW03.XDM-DIM-CD[RY0CWECX];

      /* move royalty row/s (if any) to screen*/

      move RY0CW04 to RY0CW02 withV60Compat; /* move orig items for update*/

      RY0CW01.RY0CWIDX = 1; /* reset index*/
      while (RY0CW01.RY0CWIDX <= 18)

        if (RY0CW01.RY0CWIDX <= RY0CW01.RY0CWMAX) /* LE max store ptr*/
          RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] = RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX];
          RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = RY0CW02.RY-TERM-GRP-CD[RY0CWIDX];
          RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX];
          RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = RY0CW02.RY-RLTY-CONT-SDESC[RY0CWIDX];
          RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = RY0CW02.RY-TERM-GRP-SDESC[RY0CWIDX];
        else
          RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] = " ";
          RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = " ";
          RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = " ";
          RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = " ";
          RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = " ";
        end

        RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* loop through*/

      end

    end

    set RY0CW02 empty; /* reset screen save area*/

    set RY0CM001.RY-RLTY-CONT-CD[1] cursor; /* put cursor here*/

    if (RY0CW01.RY0CWECX == 1) /* first color*/
      converseLib.validationFailed(199); /* indicate color mode updating start*/
    end

  end

  set RY0CM001.XGP-GPC-CD skip; /* protect map key flds*/
  set RY0CM001.SY-STY-NBR skip;
  set RY0CM001.SY-COLR-CD-ID skip;
  set RY0CM001.XDM-DIM-CD skip;
  set RY0CM001.RY-STY-ELIG-IND skip;

  converse RY0CM001 ;

  RY0CS-RESET-FLDS();
  RY0CS-CHECK-PFKEYS();
  if (converseVar.validationMsgNum != 0)
    return;
  end

  if (converseVar.eventKey is pa2) /* cancel elig update mode*/
    RY0CW01.RY0CWEPI = "Y"; /* indicate end of processing*/
    RY0CS-RESET-SCRN();
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* rollback all changes*/
    set RY0CM001.XGP-GPC-CD cursor; /* position cursor*/
    return; /* return to calling process*/
  end

  RY0C251(); /* validate logic*/

  if (converseVar.validationMsgNum == 0) /* successful validate*/

    if (converseVar.eventKey is pf12) /* validate only*/
      converseLib.validationFailed(131); /* no errors*/
      set RY0CM001.RY-RLTY-CONT-CD[1] cursor;
      return;
    end

    RY0C275(); /* update*/

    if (converseVar.validationMsgNum == 0) /* successfull update*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.commit();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
       /* commit changes*/

    else /* problems during updating*/

      if (converseVar.validationMsgNum != 3) /* not duplicate cont/tg entered*/
        RY0CW01.RY0CWEPI = "Y"; /* terminate processing*/
        RY0CS-RESET-SCRN(); /* reset screen*/
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
         /* rollback all changes*/
        set RY0CM001.XGP-GPC-CD cursor; /* position cursor*/
        return; /* return to calling process*/
      end

    end

  end


end // end RY0C300

// get valid colors for a product
Function RY0C401()
   /* *************************************************************/

    /* PROCESS SYNOPSIS:*/
    /* 1. select and load table with valid terms for contract.*/
    /* 2. move table values to popup window map and converse*/
       /* popup window map.*/
   /* ------------------------------------------------------------*/

  RY0C403(); /* popup window initialization*/
  RY0CW05.RY0CWHDR = " "; /* Set-up Heading*/
  RY0CW05.RY0CWHD1 = "Code";
  RY0CW05.RY0CWHD2 = "Description";

  RY0CS41(); /* select set and load table with valid colors*/

  if (RY0CW05.RY0CWERR == "Y") /* if db2 error*/
    return;
  end

  while (RY0CW05.RY0CWEND == "N") /* until end of request*/
    RY0C402(); /* display table values on popup map*/
  end

end // end RY0C401

// converse popup valid Terms
Function RY0C402()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR valid term codes*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (RY0CW05.RY0CWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (RY0CW05.RY0CWFFL == "N") /* if not the first time through*/
      RY0CW05.RY0CWCT1 = RY0CW05.RY0CWINX[10] + 1; /* set up scroll pf8*/
    end

    set RY0CM005 initial; /* Clear map output area*/
    RY0CM005.RY0CMHDR = RY0CW05.RY0CWHDR; /* Place heading on map*/
    RY0CM005.RY0CMTR1 = "              Select & Enter          ";
    RY0CM005.RY0CMTR2 = "   PF7:Back                   PF8:Frwd";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || RY0CW05.RY0CWFFL == "Y")    /* Or it is the first time thru*/
      RY0CW05.RY0CWCT2 = 1; /* Set up screen index*/
      while (RY0CW05.RY0CWCT2 <= 10 /* Until end of screen lines*/
       && RY0CW05.RY-TERM-GRP-CD[RY0CWCT1] != "**")
        RY0CM005.RY0CMCOD[RY0CWCT2] = RY0CW05.RY-TERM-GRP-CD[RY0CWCT1];
        RY0CM005.RY0CMDSC[RY0CWCT2] = RY0CW05.RY-TERM-GRP-DESC[RY0CWCT1];
        RY0CW05.RY0CWINX[RY0CWCT2] = RY0CW05.RY0CWCT1; /* Save array*/
        if (RY0CW05.RY0CWFFL == "Y") /* If first time thru*/
          RY0CW05.RY0CWSIX = RY0CW05.RY0CWCT1; /* Save last index*/
        end
        set RY0CM005.RY0CMSEL[RY0CWCT2] normal; /* Set selects to normal*/
        RY0CW05.RY0CWCT2 = RY0CW05.RY0CWCT2 + 1; /* Increment screen index*/
        RY0CW05.RY0CWCT1 = RY0CW05.RY0CWCT1 + 1; /* Increment table index*/
      end
      RY0CW05.RY0CWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      RY0CW05.RY0CWCT1 = RY0CW05.RY0CWINX[1] - 1; /* Set up table index*/
      RY0CW05.RY0CWCT2 = 10; /* Set up screen index*/
      while (RY0CW05.RY0CWCT2 >= 1) /* Load from the bottom up*/
        RY0CM005.RY0CMCOD[RY0CWCT2] = RY0CW05.RY-TERM-GRP-CD[RY0CWCT1];
        RY0CM005.RY0CMDSC[RY0CWCT2] = RY0CW05.RY-TERM-GRP-DESC[RY0CWCT1];
        RY0CW05.RY0CWINX[RY0CWCT2] = RY0CW05.RY0CWCT1; /* Save array*/
        set RY0CM005.RY0CMSEL[RY0CWCT2] normal; /* Set select visible*/
        RY0CW05.RY0CWCT2 = RY0CW05.RY0CWCT2 - 1; /* Decrement screen index*/
        RY0CW05.RY0CWCT1 = RY0CW05.RY0CWCT1 - 1; /* Decrement table index*/
      end
      if (RY0CW05.RY0CWCT1 < 1) /* If the table index was decremented*/
        RY0CW05.RY0CWCT1 = 1; /* to zero, set it to 1*/
      end
    end
  end

  converse RY0CM005 ;
  RY0CW05.RY0CWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  RY0CW05.RY0CWCT2 = 1; /* Screen index*/
  while (RY0CW05.RY0CWCT2 <= 10 /* Set all fields with data to normal*/
   && RY0CM005.RY0CMCOD[RY0CWCT2] != " ")
    set RY0CM005.RY0CMSEL[RY0CWCT2] normal;
    RY0CW05.RY0CWCT2 = RY0CW05.RY0CWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && RY0CW05.RY-TERM-GRP-CD[RY0CWCT1] == "**") /* And end*/
    RY0CW05.RY0CWERR = "Y"; /* Set error flag*/
    RY0CM005.RY0CMTR2 = "   At End of Table";
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && RY0CW05.RY0CWINX[1] <= RY0CW05.RY0CWSIX)
      RY0CW05.RY0CWERR = "Y"; /* Set error flag*/
      RY0CM005.RY0CMTR2 = "   At Beginning of Table";
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        RY0CW05.RY0CWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        RY0CW05.RY0CWCT2 = 1; /* Screen index*/
        while (RY0CW05.RY0CWCT2 <= 10) /* Until end of screen data*/
          if (RY0CM005.RY0CMSEL[RY0CWCT2] == "S") /* Check for selection*/
            RY0CW05.RY0CWPIX = RY0CW05.RY0CWINX[RY0CWCT2];
            RY0CW05.RY0CWCT2 = 11; /* End loop*/
          end
          RY0CW05.RY0CWCT2 = RY0CW05.RY0CWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          RY0CW05.RY0CWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end RY0C402

// Initialization - pop up window
Function RY0C403()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  set RY0CM005 initial; /* Clear the map area*/
  RY0CW05.RY0CWHDR = " "; /* Screen Headers*/
  RY0CW05.RY0CW-TABLE = " "; /* Table*/
  RY0CW05.RY0CWIX1 = 1; /* Table index*/
  RY0CW05.RY0CWINX[01] = 0; /* Table index*/
  RY0CW05.RY0CWINX[02] = 0; /* Table index*/
  RY0CW05.RY0CWINX[03] = 0; /* Table index*/
  RY0CW05.RY0CWINX[04] = 0; /* Table index*/
  RY0CW05.RY0CWINX[05] = 0; /* Table index*/
  RY0CW05.RY0CWINX[06] = 0; /* Table index*/
  RY0CW05.RY0CWINX[07] = 0; /* Table index*/
  RY0CW05.RY0CWINX[08] = 0; /* Table index*/
  RY0CW05.RY0CWINX[09] = 0; /* Table index*/
  RY0CW05.RY0CWINX[10] = 0; /* Table index*/
  RY0CW05.RY0CWCT1 = 1; /* Table index*/
  RY0CW05.RY0CWCT2 = 1; /* Screen index*/
  RY0CW05.RY0CWSIX = 0; /* End of first page save index*/
  RY0CW05.RY0CWPIX = 0; /* Initialize pass index to zero*/
  RY0CW05.RY0CWFFL = "Y"; /* first time thru flag*/
  RY0CW05.RY0CWERR = "N"; /* Scroll error flag to no*/
  RY0CW05.RY0CWEND = "N"; /* End of pop up window session flag*/
  RY0CW05.RY0CWENR = 0; /* Error Number*/

end // end RY0C403

// audit processing
Function RY0CS-ADD-AUDIT()


   /* ****************************************************/
   /* *  this statement group formats the audit record  **/
   /* *  and performs the add call to db2 for the       **/
   /* *  table. Tag record is also generated.           **/
   /* ****************************************************/

  if (SYAREC.XXXTBLNM in SYZTBL.XXXTBLNM)
    SYAREC.SYASRTSQ = SYZTBL.SYASRTSQ[sysVar.arrayIndex];
    SYAREC.SYABFLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
    SYAREC.SYAFTLN = SYZTBL.SYZIMLEN[sysVar.arrayIndex];
  else
    TA1REC.TA1TYPE = "DB2 ";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "RY0C   ";
    TA1REC.TA1LOCAT[1] = "RY0CS    ";
    TA1REC.TA1LOCAT[2] = "SYZTBL   ";
    TA1REC.TA1LOCAT[3] = SYAREC.XXXTBLNM;
    TA1REC.TA1MAP = "RY0CM001";
    TA1REC.TA1DBASE = "DPROD";
    TA1REC.TA1TBLVU = "VSYAUD01";
    TA1TBLKE = "TABLE NOT FOUND";
    move SQLCA to ERRSQLCA withV60Compat;
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    converseLib.validationFailed(44); /* audit table error....*/
    return;
  end

  SYAREC.XXXUSRID = COMMAREA.CAUSERID;
  SYAREC.XNDCD = COMMAREA.XNDCD;
  SYAREC.SY5SZID = 0;
  SYAREC.SYATYPCD = " ";
  SYAREC.XQACD = " ";
  if (SYAREC.SYAUDTYP == "A")
    SYAREC.SYABFLN = 0;
    SYAREC.SYABFR = " ";
  else
    if (SYAREC.SYAUDTYP == "D")
      SYAREC.SYAFTLN = 0;
      SYAREC.SYAAFT = " ";
    end
  end

  SYAREC.ZZZSDT = SYWREC.ZZZSDT;
  SYAREC.ZZZSTM = SYWREC.ZZZCHGTM;

  call "IO0530" ("A ", SQLCA, SYAREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "RY0C   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "RY0CS    ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "RY0CM001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYAUD01";
      TA1TBLKE = SYAREC.SYAKEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

  SY9REC.SY9TGTYP = SYAREC.SYAUDTYP;
  SY9REC.XGPCD = SYAREC.XGPCD;
  SY9REC.SY1STNBR = SYAREC.SY1STNBR;
  SY9REC.SY2CLRID = SYAREC.SY2CLRID;
  SY9REC.XDMCD = SYAREC.XDMCD;
  SY9REC.ZZZSDT = SYWREC.ZZZSDT;
  SY9REC.ZZZSTM = SYWREC.ZZZCHGTM;
  call "IO0520" ("A ", SQLCA, SY9REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == -803)
    converseLib.validationFailed(37); /* unable to process update - try again*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      converseLib.validationFailed(44); /* audit table error*/
      TA1REC.TA1TYPE = "DB2 ";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "RY0C   ";
      TA1REC.TA1LOCAT[1] = "A        ";
      TA1REC.TA1LOCAT[2] = "RY0CS    ";
      TA1REC.TA1LOCAT[3] = "IO0530   ";
      TA1REC.TA1LOCAT[4] = " ";
      TA1REC.TA1MAP = "RY0CM001";
      TA1REC.TA1DBASE = "DPROD";
      TA1REC.TA1TBLVU = "VSYTAG01";
      TA1TBLKE = SY9REC.SY9KEY;
      move SQLCA to ERRSQLCA withV60Compat;
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      return;
    end
  end

end // end RY0CS-ADD-AUDIT

// Add DROYAL.VRCOLR01 row
Function RY0CS-ADD-ROW()

   /* Check if DROYAL.VRCOLR01 row already exists...*/


  RY0CS-GET-CLR-ROW(); /* get VRCOLR01 row (if any)*/

  if (SQLCA.VAGen_SQLCODE == 0) /* found...*/
    converseLib.validationFailed(3); /* invalid code*/
    set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] cursor, bold;
    set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] bold;
    return;
  end

   /* If no duplicate/s then add DROYAL.VRCOLR01 row....*/

  set SQLCA empty;

  VRCOLR01.ZZ-SDT = SYWREC.ZZZSDT;
  VRCOLR01.ZZ-CHNG-DT = SYWREC.ZZZSDT;
  VRCOLR01.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;

  call "IO5640" ("A ", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* select set*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-ADD-ROW"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "A ";
    TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/

  else
    SYAREC.SYAUDTYP = "A";
    SYAREC.XXXTBLNM = "VRCOLR01";
    SYAREC.XGPCD = VRCOLR01.XGP-GPC-CD;
    SYAREC.SY1STNBR = VRCOLR01.SY-STY-NBR;
    if (VRCOLR01.SY-COLR-CD-ID != "***")
      SYAREC.SY2CLRID = VRCOLR01.SY-COLR-CD-ID;
      SYAREC.XDMCD = VRCOLR01.XDM-DIM-CD;
    else
      SYAREC.SY2CLRID = " ";
      SYAREC.XDMCD = " ";
    end
    SYAREC.SYAAFT = VRCOLR01.VRCOLR01-GROUP;
    RY0CS-ADD-AUDIT();
  end


end // end RY0CS-ADD-ROW

// Check PF keys
Function RY0CS-CHECK-PFKEYS()

   /* Check PF key entered by user*/

  if (converseVar.eventKey is enter)
    if (RY0CM001.CATOAP != " ")
      COMMAREA.CATOAP = RY0CM001.CATOAP;
      COMMAREA.CAITEM = RY0CM001.CAITEM;
      XSEXIT();
      set RY0CM001.CATOAP cursor, bold;
      RY0CM001.SYMSCMSG = COMMAREA.CAMSG;
      converseLib.validationFailed(1);
    end
    return;
  end

  if (converseVar.eventKey is pf1
   && RY0CW01.RY0CW-PF-EXIT-FL == "Y")
    XSPF1();
    RY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf3
   && RY0CW01.RY0CW-PF-EXIT-FL == "Y")
    if (COMMAREA.CAFROMAP == "SY0I")
      COMMAREA.CATOAP = "SY0I";
    else
      COMMAREA.CATOAP = "SY0N";
    end
    XSEXIT();
    RY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf4
   && RY0CW01.RY0CW-PF-EXIT-FL == "Y")
    XSPF4();
    RY0CM001.SYMSCMSG = COMMAREA.CAMSG;
    converseLib.validationFailed(1);
    return;
  end

  if (converseVar.eventKey is pf12)
    if (RY0CW01.RY0CWMOD == "I") /* inquiry cannot use*/
      converseLib.validationFailed(19); /* invalid pf key*/
    end
    return;
  end

  if (converseVar.eventKey is pa2)
    return;
  end

  converseLib.validationFailed(19); /* invalid PF key*/
  if (converseVar.eventKey is pa1
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    RY0CM001.SYMSCMSG = "WARNING - PA Key causes loss of Data";
  end

end // end RY0CS-CHECK-PFKEYS

// DB2 Abend Routine
Function RY0CS-DB2-ABEND()

   /* This routine will call TA0020*/

  TA1REC.TA1TYPE = "DB2";
  TA1REC.TA1FUNC = "RETN";
  TA1REC.TA1PGMNM = "RY0C";
  TA1REC.TA1MAP = "RY0CM001";
  move SQLCA to ERRSQLCA withV60Compat;
  call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};

end // end RY0CS-DB2-ABEND

// Delete DROYAL.VRCOLR01 row
Function RY0CS-DELETE-ROW()

   /* Delete DROYAL.VRCOLR01 row.*/

  set SQLCA empty;

  call "IO5640" ("S ", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* select set*/
  if (SQLCA.VAGen_SQLCODE == 0)
    SYAREC.SYAUDTYP = "D";
    SYAREC.XXXTBLNM = "VRCOLR01";
    SYAREC.XGPCD = VRCOLR01.XGP-GPC-CD;
    SYAREC.SY1STNBR = VRCOLR01.SY-STY-NBR;
    if (VRCOLR01.SY-COLR-CD-ID != "***")
      SYAREC.SY2CLRID = VRCOLR01.SY-COLR-CD-ID;
      SYAREC.XDMCD = VRCOLR01.XDM-DIM-CD;
    else
      SYAREC.SY2CLRID = " ";
      SYAREC.XDMCD = " ";
    end
    SYAREC.SYABFR = VRCOLR01.VRCOLR01-GROUP;
    RY0CS-ADD-AUDIT();
  end

  call "IO5640" ("D ", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* select set*/

  if (SQLCA.VAGen_SQLCODE != 0)

    if (SQLCA.VAGen_SQLCODE != 100) /* Database problem*/
      TA1REC.TA1LOC = "RY0C-DELETE-ROW"; /* program number*/
      TA1REC.TA1DBASE = "DROYAL"; /* database name*/
      TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
      TA1REC.TA1LOCAT[2] = "D ";
      TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
      RY0CS-DB2-ABEND(); /* abend application*/
      converseLib.validationFailed(21); /* color table error*/
      return; /* exit to display map*/
    end
  end

end // end RY0CS-DELETE-ROW

// Dlt style-based VRCOLR01 rows
Function RY0CS-DLT-RYL-STY()

   /* Delete Style-based DROYAL.VRCOLR01 rows (if any)*/

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= 18)

    if (RY0CW04.RY-RLTY-CONT-CD[RY0CWIDX] != " " /* wk flds w/values*/
     && RY0CW04.RY-TERM-GRP-CD[RY0CWIDX] != " ")

      VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move keys*/
      VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;
      VRCOLR01.SY-COLR-CD-ID = "***";
      VRCOLR01.XDM-DIM-CD = "**";

      VRCOLR01.RY-RLTY-CONT-CD = RY0CW04.RY-RLTY-CONT-CD[RY0CWIDX];
      VRCOLR01.RY-TERM-GRP-CD = RY0CW04.RY-TERM-GRP-CD[RY0CWIDX];

      RY0CS-DELETE-ROW(); /* delete VRCOLR01 row (W04 as key)*/

    end

    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* Loop through*/

  end


end // end RY0CS-DLT-RYL-STY

// Validate Dimension Code
Function RY0CS-EDIT-CLR-DIM()

   /* Validate Color/Dimension*/

  XP0GW01.XP0GW-SEL-COLR-CD = RY0CM001.SY-COLR-CD-ID;
  if (XP0GW01.XP0GW-SEL-COLR-CD1 == "?" /* We want pop-up*/
   || XP0GW01.XP0GW-SEL-COLR-CD2 == "?" 
   || XP0GW01.XP0GW-SEL-COLR-CD3 == "?")
    XP0GW01.XGPCD = RY0CM001.XGP-GPC-CD;
    XP0GW01.SY1STNBR = RY0CM001.SY-STY-NBR;
    XP0G001(); /* so do it*/
    converseLib.clearScreen();
     /* Refresh map*/
    if (XP0GW02.XP0GWERR == "Y") /* we have an error*/
      if (XP0GW02.XP0GWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (XP0GW02.XP0GWENR == 1) /* No colors found*/
        converseLib.validationFailed(7);
      end
      if (XP0GW02.XP0GWENR == 2) /* DB2 Error*/
        converseLib.validationFailed(21);
      end
      return;
    else
      if (XP0GW02.XP0GWPIX != 0) /* and user selected*/
        RY0CM001.SY-COLR-CD-ID = XP0GW01.SY2CLRID[XP0GWPIX];
        RY0CM001.XDM-DIM-CD = XP0GW01.XDMCD[XP0GWPIX];
      else
        converseLib.validationFailed(59); /* No colors selected*/
        return;
      end
    end
  end

  if (RY0CM001.XDM-DIM-CD == " ")
    RY0CM001.XDM-DIM-CD = "00";
  end

  if (RY0CM001.XDM-DIM-CD in XDMTBL.XDMCD)
    RY0CM001.XDM-DIM-DESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  else
    converseLib.validationFailed(3); /* invalid code*/
    set RY0CM001.XDM-DIM-CD cursor, bold;
    RY0CM001.XDM-DIM-DESC = " ";
    return;
  end

  SY2REC.XGPCD = RY0CM001.XGP-GPC-CD; /* move to keys*/
  SY2REC.SY1STNBR = RY0CM001.SY-STY-NBR;
  SY2REC.SY2CLRID = RY0CM001.SY-COLR-CD-ID;
  SY2REC.XDMCD = RY0CM001.XDM-DIM-CD;

  SYWREC.SY2CLRID = RY0CM001.SY-COLR-CD-ID; /* save to wk area*/
  SYWREC.XDMCD = RY0CM001.XDM-DIM-CD;

  call "IO0130" ("S ", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    RY0CM001.SY-STY-COLR-DESC = SY2REC.SY2CLRDS;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* style not found*/
      converseLib.validationFailed(7); /* style does not exist*/
      set RY0CM001.SY-COLR-CD-ID cursor, bold;
      set RY0CM001.XDM-DIM-CD bold;
      RY0CM001.SY-STY-COLR-DESC = " ";
    else /* we have DB2 problems*/
      TA1REC.TA1LOCAT[1] = "RY0C-EDIT-CLR-DIM";
      TA1REC.TA1TBLVU = "VCOLOR01";
      TA1REC.TA1TBLKE = SY2REC.SY2KEY;
      RY0CS-DB2-ABEND();
      converseLib.validationFailed(21); /* color table error*/
    end
  end

end // end RY0CS-EDIT-CLR-DIM

// Edit eligibility indicator
Function RY0CS-EDIT-ELIG()

  RY0CW01.RY0CWELC = " "; /* reset elig color update indicator*/
  RY0CW01.RY0CWECF = " "; /* reset elig change flag*/

  if (RY0CM001.RY-STY-ELIG-IND != RY0CW01.RY-STY-ELIG-IND) /* Ind updated*/

    if (RY0CW01.RY-STY-ELIG-IND == "N") /* no Royalties*/
      if (RY0CM001.RY-STY-ELIG-IND != "S") /* not Style Royalty*/
        converseLib.validationFailed(195); /* invalid change*/
        set RY0CM001.RY-STY-ELIG-IND cursor, bold;
      else
        if (RY0CM001.SY-COLR-CD-ID != " "
         || RY0CM001.XDM-DIM-CD != " ") /* Not required*/
          converseLib.validationFailed(196);
          set RY0CM001.SY-COLR-CD-ID cursor, bold;
          set RY0CM001.XDM-DIM-CD bold;
          set RY0CM001.RY-STY-ELIG-IND bold;
        end
      end
    else
      if (RY0CW01.RY-STY-ELIG-IND == "S") /* style royalty*/
        if (RY0CM001.RY-STY-ELIG-IND == "N")
          RY0CW01.RY0CWIDX = 1;
          while (RY0CW01.RY0CWIDX <= 18)
            if (RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] != " "
             || RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] != " "
             || RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] != " ")
              converseLib.validationFailed(207); /* Must blank codes*/
              set RY0CM001.RY-STY-ELIG-IND cursor, bold;
              RY0CW01.RY0CWIDX = 19;
            end
            RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1;
          end
        else
          if (RY0CM001.RY-STY-ELIG-IND != "C") /* not color royalty*/
            converseLib.validationFailed(195); /* invalid change*/
            set RY0CM001.RY-STY-ELIG-IND cursor, bold;
          else
            RY0CW01.RY0CWELC = "Y"; /* indicate 'S' to 'C'*/
            RY0CW01.RY-STY-ELIG-IND = RY0CM001.RY-STY-ELIG-IND;
          end
        end
      else /* all other changes invalid*/
        converseLib.validationFailed(195);
        set RY0CM001.RY-STY-ELIG-IND cursor, bold;
      end
    end

  end

end // end RY0CS-EDIT-ELIG

// Validate/Retrieve Style Data
Function RY0CS-EDIT-STYLE()

  SY1REC.XGPCD = RY0CM001.XGP-GPC-CD; /* move keys*/
  SY1REC.SY1STNBR = RY0CM001.SY-STY-NBR;
  SYWREC.SY1STNBR = RY0CM001.SY-STY-NBR; /* save style no.*/
  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0)
    RY0CM001.SY-STY-NM = SY1REC.SY1STYNM;
    RY0CM001.RY-STY-ELIG-IND = SY1REC.SY1RYELG;
    RY0CW01.RY-STY-ELIG-IND = SY1REC.SY1RYELG;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* style not found*/
      converseLib.validationFailed(5); /* style does not exist*/
      set RY0CM001.SY-STY-NBR cursor, bold;
      RY0CM001.SY-STY-NM = " ";
      RY0CM001.RY-STY-ELIG-IND = " ";
      RY0CW01.RY-STY-ELIG-IND = " ";
    else /* we have DB2 problems*/
      TA1REC.TA1LOCAT[1] = "RY0C-EDIT-STYLE";
      TA1REC.TA1TBLVU = "VSTYLE01";
      TA1REC.TA1TBLKE = SY1REC.SY1KEY;
      RY0CS-DB2-ABEND();
      converseLib.validationFailed(20); /* style table error*/
    end
  end

end // end RY0CS-EDIT-STYLE

// get unique DROYAL.VRCOLR01 row
Function RY0CS-GET-CLR-ROW()

   /* Select unique DROYAL.VRCOLR01 row*/

  set SQLCA empty;

  call "IO5640" ("S ", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* select row*/

  if (SQLCA.VAGen_SQLCODE != 0
   && SQLCA.VAGen_SQLCODE != 100) /* not normal*/

    TA1REC.TA1LOC = "RY0C-GET-COLR-ROW"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "S ";
    TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/

  end


end // end RY0CS-GET-CLR-ROW

// Validate GPC and Set Mode
Function RY0CS-GET-GPC-DESC()

   /* Validate GPC Code*/

  if (RY0CM001.XGP-GPC-CD == " "
   && RY0CM001.SY-STY-NBR == " ")
    set RY0CM001.XGP-GPC-CD cursor;
    return;
  end

  if (RY0CM001.XGP-GPC-CD in XGPTBL.XGPCD) /* get GPC description*/
    RY0CM001.XGP-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    RY0CW01.RY0CW-XGP-GPC-DESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    SYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    SYWREC.XGPABRV = XGPTBL.XGPABRV[sysVar.arrayIndex];
  else
    converseLib.validationFailed(3); /* invalid code*/
    set RY0CM001.XGP-GPC-CD cursor, bold;
    RY0CM001.XGP-GPC-DESC = " ";
    RY0CW01.RY0CW-XGP-GPC-DESC = " ";
    return;
  end

   /* now set processing mode based on commarea flags and*/
   /* gpc being used.*/

  if (COMMAREA.CAFROMAP == "SY0I") /* from inq sub-menu*/
    RY0CW01.RY0CWMOD = "I";
  else
    if (COMMAREA.CAADDFL != "Y" /* not add mode*/
     && COMMAREA.CACHGFL != "Y") /* or change mode*/
      RY0CW01.RY0CWMOD = "I"; /* so set inquiry*/
    else
      if (RY0CM001.XGP-GPC-CD == "03") /* apparel gpc*/
        if (COMMAREA.CAALVL[3] == "Y" /* can change apparel*/
         || COMMAREA.CACLVL[3] == "Y")
          RY0CW01.RY0CWMOD = "C"; /* so change ok*/
        else
          RY0CW01.RY0CWMOD = "I"; /* cannot modify apparel*/
        end
      else
        if (RY0CM001.XGP-GPC-CD == "02") /* footwear gpc*/
          if (COMMAREA.CAALVL[2] == "Y" /* can change footwear*/
           || COMMAREA.CACLVL[2] == "Y")
            RY0CW01.RY0CWMOD = "C"; /* so change ok*/
          else
            RY0CW01.RY0CWMOD = "I"; /* cannot modify footwear*/
          end
        else
          RY0CW01.RY0CWMOD = "C"; /* can change*/
        end
      end
    end
  end

end // end RY0CS-GET-GPC-DESC

Function RY0CS-GET-RYL-CLRS()

   /* Get all colors for the style, store in RY0CW03. All colors stored*/
   /* will be processed later in RY0C300 (Color Royalty Update).*/

  set SQLCA empty;
  set SY2REC empty;

  SY2REC.XGPCD = RY0CM001.XGP-GPC-CD; /* move to keys*/
  SY2REC.SY1STNBR = RY0CM001.SY-STY-NBR;

  call "IO0130" ("SS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* select set*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "RY0C-RYL-COLORS"; /* program name*/
    TA1REC.TA1LOCAT[2] = "SS"; /* call type*/
    TA1REC.TA1DBASE = "DPROD"; /* data base name*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* view name*/
    TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* table key*/
    RY0CS-DB2-ABEND();
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/
  end

  RY0CW01.RY0CWEOF = "N"; /* reset end-of-file flag*/
  RY0CW01.RY0CWECM = 0; /* initialize clr max ptr*/


  while (RY0CW01.RY0CWEOF == "N") /* load all colors to RY0CW03*/

    call "IO0130" ("SN", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* select set*/

    if (SQLCA.VAGen_SQLCODE != 0)

      if (SQLCA.VAGen_SQLCODE == 100) /* no more data*/
        RY0CW01.RY0CWEOF = "Y"; /* terminate loop*/
      else
        TA1REC.TA1LOCAT[1] = "RY0C-RYL-COLORS"; /* program name*/
        TA1REC.TA1LOCAT[2] = "SN"; /* call type*/
        TA1REC.TA1DBASE = "DPROD"; /* data base name*/
        TA1REC.TA1TBLVU = "VCOLOR01"; /* view name*/
        TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* table key*/
        RY0CS-DB2-ABEND();
        converseLib.validationFailed(21); /* color table error*/
        return; /* exit to display map*/
      end

    else
      RY0CW01.RY0CWECM = RY0CW01.RY0CWECM + 1; /* set store pointer*/
      if (RY0CW01.RY0CWECM > 200) /* array exceeded*/
        converseLib.validationFailed(43); /* display error message*/
        return; /* exit to display map*/
      else /* store color to save array*/
        RY0CW03.SY-COLR-CD-ID[RY0CWECM] = SY2REC.SY2CLRID;
        RY0CW03.SY-STY-COLR-DESC[RY0CWECM] = SY2REC.SY2CLRDS;
        RY0CW03.XDM-DIM-CD[RY0CWECM] = SY2REC.XDMCD;
        if (SY2REC.XDMCD in XDMTBL.XDMCD)
          RY0CW03.XDM-DIM-DESC[RY0CWECM] = XDMTBL.XDMDESC[sysVar.arrayIndex];
        else
          RY0CW03.XDM-DIM-DESC[RY0CWECM] = "*NOT FOUND*";
        end
      end
    end

  end


  call "IO0130" ("CS", SQLCA, SY2REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOCAT[1] = "RY0C-RYL-COLORS"; /* program name*/
    TA1REC.TA1LOCAT[2] = "CS"; /* call type*/
    TA1REC.TA1DBASE = "DPROD"; /* data base name*/
    TA1REC.TA1TBLVU = "VCOLOR01"; /* view name*/
    TA1REC.TA1TBLKE = SY2REC.SY2KEY; /* table key*/
    RY0CS-DB2-ABEND();
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/
  end


end // end RY0CS-GET-RYL-CLRS

// Get DROYAL.VRCOLR01 rows
Function RY0CS-GET-RYL-ROWS()

   /* Obtain DROYAL.VRCOLR01 rows and store in RY0CW02*/

  set SQLCA empty;
  VRCOLR01.XGP-GPC-CD = SYWREC.XGPCD; /* move to key area*/
  VRCOLR01.SY-STY-NBR = SYWREC.SY1STNBR;

  if (RY0CW01.RY-STY-ELIG-IND == "C")
    VRCOLR01.SY-COLR-CD-ID = SYWREC.SY2CLRID; /* color-based royalty*/
    VRCOLR01.XDM-DIM-CD = SYWREC.XDMCD;
  else
    VRCOLR01.SY-COLR-CD-ID = "***"; /* style-based royalty*/
    VRCOLR01.XDM-DIM-CD = "**";
  end

  call "IO5640" ("S1", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* select set*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-GET-RYL-ROWS"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "S1";
    TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/

  end

  set RY0CW02 empty; /* clear data storage*/
  RY0CW01.RY0CWMAX = 0; /* initialize max store ptr*/
  RY0CW01.RY0CWEOF = "N"; /* reset process switch*/

  while (RY0CW01.RY0CWEOF == "N") /* get all rows*/

    call "IO5640" ("N1", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* Fetch first row*/

    if (SQLCA.VAGen_SQLCODE != 0)

      if (SQLCA.VAGen_SQLCODE == 100) /* no more rows*/
        RY0CW01.RY0CWEOF = "Y"; /* terminate loop*/
      else /* abnormal sqlcode*/

        TA1REC.TA1LOC = "RY0C-GET-RYL-ROWS"; /* program number*/
        TA1REC.TA1DBASE = "DROYAL"; /* database name*/
        TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
        TA1REC.TA1LOCAT[2] = "N1";
        TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
        RY0CS-DB2-ABEND(); /* abend application*/
        converseLib.validationFailed(21); /* color table error*/
        return; /* exit to display map*/

      end

    else /* Row successfully retrieved*/

      RY0CW01.RY0CWMAX = RY0CW01.RY0CWMAX + 1; /* set store pointer*/
      if (RY0CW01.RY0CWMAX > 18) /* array exceeded*/
        converseLib.validationFailed(200); /* color table error*/
        return; /* exit to display map*/
      end
                   /* store db information to array*/
      RY0CW02.RY-RLTY-CONT-CD[RY0CWMAX] = VRCOLR01.RY-RLTY-CONT-CD;
      RY0CW02.RY-TERM-GRP-CD[RY0CWMAX] = VRCOLR01.RY-TERM-GRP-CD;
      RY0CW02.RY-RLTY-XTRC-IND[RY0CWMAX] = VRCOLR01.RY-RLTY-XTRC-IND;
                   /* move to term db key area*/
      VRTERM01.RY-RLTY-CONT-CD = VRCOLR01.RY-RLTY-CONT-CD;
      VRTERM01.RY-TERM-GRP-CD = VRCOLR01.RY-TERM-GRP-CD;

      RY0CS-GET-TERM-ROW(); /* get descriptions*/
      RY0CW02.RY-RLTY-CONT-SDESC[RY0CWMAX] = VRTERM01.RY-RLTY-CONT-SDESC;
      RY0CW02.RY-TERM-GRP-SDESC[RY0CWMAX] = VRTERM01.RY-TERM-GRP-SDESC;

    end

  end

  call "IO5640" ("C1", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-GET-RYL-ROWS"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "C1";
    TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/

  end


   /* Move data to screen*/

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= 18) /* clear data part of screen*/
    RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] = " ";
    RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = " ";
    RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = " ";
    RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = " ";
    RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = " ";
    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* loop through*/
  end


   /* move royalty row/s (if any) to screen*/

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= RY0CW01.RY0CWMAX) /* LE max store ptr*/
    RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] = RY0CW02.RY-RLTY-CONT-CD[RY0CWIDX];
    RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = RY0CW02.RY-TERM-GRP-CD[RY0CWIDX];
    RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX];
    RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = RY0CW02.RY-RLTY-CONT-SDESC[RY0CWIDX];
    RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = RY0CW02.RY-TERM-GRP-SDESC[RY0CWIDX];
    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* loop through*/
  end


end // end RY0CS-GET-RYL-ROWS

// Get DROYAL.VRTERM01 rows
Function RY0CS-GET-TERM-ROW()

   /* Obtain DROYAL.VRTERM01 row (Select unique)*/

  set SQLCA empty;

  call "IO5630" ("S ", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes}; /* select unique*/

  if (SQLCA.VAGen_SQLCODE != 0)

    if (SQLCA.VAGen_SQLCODE == 100)
      VRTERM01.RY-RLTY-CONT-SDESC = "NOT FOUND";
      VRTERM01.RY-TERM-GRP-SDESC = "NOT FOUND";
    else

      TA1REC.TA1LOC = "RY0C-GET-TERM-ROWS"; /* program number*/
      TA1REC.TA1DBASE = "DROYAL"; /* database name*/
      TA1REC.TA1TBLVU = "VRTERM01"; /* table view name*/
      TA1REC.TA1LOCAT[2] = "S ";
      TA1REC.TA1TBLKE = VRTERM01-KEY; /* table key*/
      RY0CS-DB2-ABEND(); /* abend application*/
      converseLib.validationFailed(201); /* term table error*/
      return; /* exit to display map*/

    end

  end


end // end RY0CS-GET-TERM-ROW

// Reset Screen Attributes (keys)
Function RY0CS-RESET-FLDS()

   /* Reset screen attributes to defined*/

  set RY0CM001.XGP-GPC-CD initialAttributes;
  set RY0CM001.SY-STY-NBR initialAttributes;
  set RY0CM001.SY-COLR-CD-ID initialAttributes;
  set RY0CM001.XDM-DIM-CD initialAttributes;
  set RY0CM001.RY-STY-ELIG-IND initialAttributes;

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= 18)
    set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] initialAttributes;
    set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] initialAttributes;
    set RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] initialAttributes;
    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* Loop through*/
  end

  set RY0CM001.CATOAP initialAttributes;
  set RY0CM001.CAITEM initialAttributes;
  RY0CM001.SYMSCMSG = " ";
  RY0CW01.RY0CWPOP = "N";

end // end RY0CS-RESET-FLDS

// Clear Screen (Not key)
Function RY0CS-RESET-SCRN()

   /* Reset screen attributes to defined*/
   /* Then clear all non-key data items*/

  set RY0CM001.XGP-GPC-CD initialAttributes;
  set RY0CM001.SY-STY-NBR initialAttributes;
  set RY0CM001.SY-COLR-CD-ID initialAttributes;
  set RY0CM001.XDM-DIM-CD initialAttributes;
  set RY0CM001.RY-STY-ELIG-IND initialAttributes;

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= 18) /* reset data fields*/
    set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] initialAttributes;
    set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] initialAttributes;
    set RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] initialAttributes;
    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1;
  end

  set RY0CM001.CATOAP initialAttributes;
  set RY0CM001.CAITEM initialAttributes;

  RY0CM001.SY-STY-NM = " ";
  RY0CM001.SY-STY-COLR-DESC = " ";
  RY0CM001.XDM-DIM-DESC = " ";

  RY0CW01.RY0CWIDX = 1; /* reset index*/
  while (RY0CW01.RY0CWIDX <= 18) /* reset data fields*/
    RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] = " ";
    RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = " ";
    RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = " ";
    RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = " ";
    RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = " ";
    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1;
  end

  RY0CM001.CATOAP = " ";
  RY0CM001.CAITEM = " ";

end // end RY0CS-RESET-SCRN

// Get DROYAL.VRTERM01 rows
Function RY0CS-SCAN-TERMS()

   /* Obtain DROYAL.VRTERM01 row (Scan values)*/
   /* This module will scan all terms for a given contract code.*/
   /* If we find more than one, we will set the term group to*/
   /* the first value (should be the 00 row) and set the status*/
   /* to 'I'. If we find only one (we don't count the 00 row), we*/
   /* will set the term group to that value and set the status*/
   /* to 'A'.*/

  set SQLCA empty;
  set VRTERM01 empty;

  VRTERM01.RY-RLTY-CONT-CD = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX];

  call "IO5630" ("S1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes}; /* select set*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "RY0C-SCAN-TERMS"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRTERM01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "S1";
    TA1REC.TA1TBLKE = VRTERM01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(201); /* term table error*/
    return; /* exit to display map*/
  end

  call "IO5630" ("N1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes}; /* select next*/

  if (SQLCA.VAGen_SQLCODE == 100) /* Invalid contract code*/
    call "IO5630" ("C1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes};
    VRTERM01.RY-RLTY-CONT-SDESC = "NOT FOUND";
    VRTERM01.RY-TERM-GRP-SDESC = "NOT FOUND";
    return; /* exit to display map*/
  else
    if (SQLCA.VAGen_SQLCODE != 0)
      TA1REC.TA1LOC = "RY0C-SCAN-TERMS"; /* program number*/
      TA1REC.TA1DBASE = "DROYAL"; /* database name*/
      TA1REC.TA1TBLVU = "VRTERM01"; /* table view name*/
      TA1REC.TA1LOCAT[2] = "N1";
      TA1REC.TA1TBLKE = VRTERM01-KEY; /* table key*/
      RY0CS-DB2-ABEND(); /* abend application*/
      converseLib.validationFailed(201); /* term table error*/
      return; /* exit to display map*/
    end
  end

  RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = VRTERM01.RY-TERM-GRP-CD;
  RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = "I";
  if (VRTERM01.RY-TERM-GRP-CD == "00")
    SYWREC.SYWINDEX = 0;
  else
    SYWREC.SYWINDEX = 1;
  end

  while (SYWREC.SYWINDEX <= 2
   && SQLCA.VAGen_SQLCODE == 0)
    call "IO5630" ("N1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes}; /* select next*/
    if (SQLCA.VAGen_SQLCODE == 0)
      SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
    else
      if (SQLCA.VAGen_SQLCODE != 100)
        TA1REC.TA1LOC = "RY0C-SCAN-TERMS"; /* program number*/
        TA1REC.TA1DBASE = "DROYAL"; /* database name*/
        TA1REC.TA1TBLVU = "VRTERM01"; /* table view name*/
        TA1REC.TA1LOCAT[2] = "N1";
        TA1REC.TA1TBLKE = VRTERM01-KEY; /* table key*/
        RY0CS-DB2-ABEND(); /* abend application*/
        converseLib.validationFailed(201); /* term table error*/
        return; /* exit to display map*/
      end
    end
  end

  if (SYWREC.SYWINDEX == 1)
    RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = VRTERM01.RY-TERM-GRP-CD;
    RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] = "A";
  end

  call "IO5630" ("C1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes}; /* close*/

  if (SQLCA.VAGen_SQLCODE != 0)
    TA1REC.TA1LOC = "RY0C-SCAN-TERMS"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRTERM01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "C1";
    TA1REC.TA1TBLKE = VRTERM01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(201); /* term table error*/
    return; /* exit to display map*/
  end

end // end RY0CS-SCAN-TERMS

// Set-up screen fields
Function RY0CS-SET-SCR-FLDS()

   /* set fields based on processing mode*/

  if (RY0CW01.RY0CWMOD == "I") /* inquiry only*/
    RY0CM001.RY0CM-MOD-LIT = "INQUIRY";
  else
    RY0CM001.RY0CM-MOD-LIT = "ADD/CHNG";
  end

  set RY0CM001.RY-STY-ELIG-IND skip;

  RY0CW01.RY0CWIDX = 1; /* set index*/
  while (RY0CW01.RY0CWIDX <= 18) /* protect entry flds*/
    set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] skip;
    set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] skip;
    set RY0CM001.RY-RLTY-XTRC-IND[RY0CWIDX] skip;
    RY0CW01.RY0CWIDX = RY0CW01.RY0CWIDX + 1; /* loop through*/
  end

end // end RY0CS-SET-SCR-FLDS

// Update DPROD.VSTYLE01 row
Function RY0CS-UPD-ELIG()

   /* Select unique DPROD.VSTYLE01 row*/

  set SQLCA empty;
  SY1REC.XGPCD = SYWREC.XGPCD; /* move keys*/
  SY1REC.SY1STNBR = SYWREC.SY1STNBR;

  call "IO0120" ("S ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes}; /* select unique row*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-UPD-STY-ELIG"; /* program number*/
    TA1REC.TA1DBASE = "DPROD"; /* database name*/
    TA1REC.TA1TBLVU = "VSTYLE01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "S ";
    TA1REC.TA1TBLKE = SY1KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(20); /* style table error*/
    return; /* exit to display map*/

  end

  SYAREC.SYABFR = SY1REC.SY1DATA;
  SY1REC.SY1RYELG = RY0CW01.RY-STY-ELIG-IND;
  SY1REC.ZZZCHGDT = SYWREC.ZZZCHGDT;
  SY1REC.ZZZCHGTM = SYWREC.ZZZCHGTM;

  call "IO0120" ("U ", SQLCA, SY1REC) {isNoRefresh = yes, isExternal = yes}; /* update row*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-UPD-STY-ELIG"; /* program number*/
    TA1REC.TA1DBASE = "DPROD"; /* database name*/
    TA1REC.TA1TBLVU = "VSTYLE01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "U ";
    TA1REC.TA1TBLKE = SY1KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(20); /* style table error*/
    return; /* exit to display map*/

  else
    SYAREC.SYAUDTYP = "C";
    SYAREC.XXXTBLNM = "VSTYLE01";
    SYAREC.XGPCD = SY1REC.XGPCD;
    SYAREC.SY1STNBR = SY1REC.SY1STNBR;
    SYAREC.SY2CLRID = " ";
    SYAREC.XDMCD = " ";
    SYAREC.SYAAFT = SY1REC.SY1DATA;
    RY0CS-ADD-AUDIT();
  end

  RY0CW01.RY0CWECF = "Y"; /* Indicate elig flag updated*/


end // end RY0CS-UPD-ELIG

// Update DROYAL.VRCOLR01 row
Function RY0CS-UPD-ROW()

   /* Select unique DROYAL.VRCOLR01 row*/

  set SQLCA empty;

  call "IO5640" ("S ", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* select row*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-UPDATE-ROW"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "S ";
    TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/

  end


  SYAREC.SYABFR = VRCOLR01.VRCOLR01-GROUP;
  VRCOLR01.RY-RLTY-XTRC-IND = RY0CW02.RY-RLTY-XTRC-IND[RY0CWIDX];
  VRCOLR01.ZZ-CHNG-DT = SYWREC.ZZZCHGDT;
  VRCOLR01.ZZ-CHNG-HHMM = SYWREC.ZZZCHGTM;

  call "IO5640" ("U ", SQLCA, VRCOLR01) {isNoRefresh = yes, isExternal = yes}; /* update row*/

  if (SQLCA.VAGen_SQLCODE != 0)

    TA1REC.TA1LOC = "RY0C-UPDATE-ROW"; /* program number*/
    TA1REC.TA1DBASE = "DROYAL"; /* database name*/
    TA1REC.TA1TBLVU = "VRCOLR01"; /* table view name*/
    TA1REC.TA1LOCAT[2] = "U ";
    TA1REC.TA1TBLKE = VRCOLR01-KEY; /* table key*/
    RY0CS-DB2-ABEND(); /* abend application*/
    converseLib.validationFailed(21); /* color table error*/
    return; /* exit to display map*/

  else
    SYAREC.SYAUDTYP = "C";
    SYAREC.XXXTBLNM = "VRCOLR01";
    SYAREC.XGPCD = VRCOLR01.XGP-GPC-CD;
    SYAREC.SY1STNBR = VRCOLR01.SY-STY-NBR;
    if (VRCOLR01.SY-COLR-CD-ID != "***")
      SYAREC.SY2CLRID = VRCOLR01.SY-COLR-CD-ID;
      SYAREC.XDMCD = VRCOLR01.XDM-DIM-CD;
    else
      SYAREC.SY2CLRID = " ";
      SYAREC.XDMCD = " ";
    end
    SYAREC.SYAAFT = VRCOLR01.VRCOLR01-GROUP;
    RY0CS-ADD-AUDIT();
  end


end // end RY0CS-UPD-ROW

// Validate Dimension Code
Function RY0CS-VAL-TERM()

  RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = " ";
  RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = " ";
  if (RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == "? "
   || RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] == "??")
    RY0CW01.RY0CWPOP = "Y"; /* set pop-up flag Yes*/
    RY0CW05.RY-RLTY-CONT-CD = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX];
    RY0C401(); /* so do it*/
    converseLib.clearScreen();
     /* Refresh map*/
    if (RY0CW05.RY0CWERR == "Y") /* we have an error*/
      set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] cursor, bold;
      set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] bold;
      if (RY0CW05.RY0CWENR == 0) /* Invalid function key*/
        converseLib.validationFailed(19);
      end
      if (RY0CW05.RY0CWENR == 1) /* No terms found*/
        converseLib.validationFailed(198);
      end
      if (RY0CW05.RY0CWENR == 2) /* DB2 Error*/
        converseLib.validationFailed(201);
      end
      return;
    else
      if (RY0CW05.RY0CWPIX != 0) /* and user selected*/
        RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] = RY0CW05.RY-TERM-GRP-CD[RY0CWPIX];
      else
        converseLib.validationFailed(204); /* No term group selected*/
        return;
      end
    end
  end

  VRTERM01.RY-RLTY-CONT-CD = RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX];
  VRTERM01.RY-TERM-GRP-CD = RY0CM001.RY-TERM-GRP-CD[RY0CWIDX];
  RY0CS-GET-TERM-ROW(); /* check w/ DROYAL.VRTERM01*/

  if (VRTERM01.RY-RLTY-CONT-SDESC == "NOT FOUND"
   || VRTERM01.RY-TERM-GRP-SDESC == "NOT FOUND")
    converseLib.validationFailed(3); /* invalid code*/
    set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] cursor, bold;
    set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] bold;
    return;
  else
    RY0CM001.RY-RLTY-CONT-SDESC[RY0CWIDX] = VRTERM01.RY-RLTY-CONT-SDESC; /* to screen*/
    RY0CM001.RY-TERM-GRP-SDESC[RY0CWIDX] = VRTERM01.RY-TERM-GRP-SDESC;
    RY0CW02.RY-RLTY-CONT-SDESC[RY0CWIDX] = VRTERM01.RY-RLTY-CONT-SDESC; /* to save area*/
    RY0CW02.RY-TERM-GRP-SDESC[RY0CWIDX] = VRTERM01.RY-TERM-GRP-SDESC;
  end

   /* Now Check for Duplicate entries*/

  SYWREC.SYWINDEX = 1;
  while (SYWREC.SYWINDEX <= 18)
    if (SYWREC.SYWINDEX != RY0CW01.RY0CWIDX
     && RY0CM001.RY-RLTY-CONT-CD[SYWINDEX] != " "
     && RY0CM001.RY-RLTY-CONT-CD[SYWINDEX] == 
    RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX]
     && RY0CM001.RY-TERM-GRP-CD[SYWINDEX] == 
    RY0CM001.RY-TERM-GRP-CD[RY0CWIDX])
      converseLib.validationFailed(206); /* Duplicate Detected*/
      set RY0CM001.RY-RLTY-CONT-CD[RY0CWIDX] cursor, bold;
      set RY0CM001.RY-TERM-GRP-CD[RY0CWIDX] bold;
    end
    SYWREC.SYWINDEX = SYWREC.SYWINDEX + 1;
  end

end // end RY0CS-VAL-TERM

// select & load valid colors
Function RY0CS41()
   /* ------------------------------------------------------------*/
    /* 1. initialize work table*/
    /* 2. select set of valid term codes for the specified*/
    /* contract.*/
    /* 3. load valid term codes and description to table*/
   /* ------------------------------------------------------------*/

  RY0CW05.RY0CWIX1 = 1; /* init table index*/
  while (RY0CWIX1 <= 100) /* init table fields*/
    RY0CW05.RY-TERM-GRP-CD[RY0CWIX1] = " ";
    RY0CW05.RY-TERM-GRP-DESC[RY0CWIX1] = " ";
    RY0CWIX1 = RY0CWIX1 + 1; /* increment index*/
  end

  set VRTERM01 empty; /* Clear record*/

  VRTERM01.RY-RLTY-CONT-CD = RY0CW05.RY-RLTY-CONT-CD;

  RY0CS42(); /* select set of TERM recs*/

  if (SQLCA.VAGen_SQLCODE != 0) /* error in db2 select*/
    return; /* return*/
  end

  RY0CW05.RY0CWIX1 = 1; /* init subscript*/
  SQLCA.VAGen_SQLCODE = 0; /* init status code*/

  while (RY0CWIX1 <= 100 /* load temp table*/
   && SQLCA.VAGen_SQLCODE == 0)
    RY0CS43(); /* fetch next record*/
    if (SQLCA.VAGen_SQLCODE == 0) /* good fetch*/
      RY0CW05.RY-TERM-GRP-CD[RY0CWIX1] = VRTERM01.RY-TERM-GRP-CD;
      RY0CW05.RY-TERM-GRP-DESC[RY0CWIX1] = VRTERM01.RY-TERM-GRP-DESC;
    else
      if (RY0CW05.RY0CWIX1 == 1) /* if first read*/
        RY0CW05.RY0CWERR = "Y"; /* set error flag to 'Y'es*/
        RY0CW05.RY0CWENR = 1; /* set error number*/
        return;
      end
      RY0CW05.RY-TERM-GRP-CD[RY0CWIX1] = "**";
    end
    RY0CWIX1 = RY0CWIX1 + 1; /* increment table index*/
  end

  if (RY0CWIX1 > 100) /* table size may not be enough*/
    RY0CW05.RY-TERM-GRP-CD[100] = "**";
  end

  RY0CS44(); /* close cursor*/

end // end RY0CS41

// declare cursor for ysmrec
Function RY0CS42()
   /* ------------------------------------------------------------*/
   /* declare cursor for VRTERM01 Rows*/
   /* ------------------------------------------------------------*/


  try
    call "IO5630" ("S1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(75); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(76); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    RY0CW05.RY0CWERR = "Y"; /* indicate db2 error has occurred*/
    RY0CW05.RY0CWENR = 2;

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "RY0CS42"; /* Program number*/
  TA1REC.TA1DBASE = "DROYAL "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTERM01"; /* Table view name*/
  TA1REC.TA1TBLKE = RY0CW05.RY-RLTY-CONT-CD;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/


end // end RY0CS42

// fetch ysmrec
Function RY0CS43()
   /* ------------------------------------------------------------*/
   /* Get the next VRTERM01 rec*/
   /* ------------------------------------------------------------*/


  try
    call "IO5630" ("N1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(75); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(76); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    RY0CW05.RY0CWERR = "Y"; /* indicated db2 error has occurred*/
    RY0CW05.RY0CWENR = 2;
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "XP0GS03"; /* Program number*/
  TA1REC.TA1DBASE = "DROYAL "; /* Data base name*/
  TA1REC.TA1TBLVU = "VRTERM01"; /* Table view name*/
  TA1REC.TA1TBLKE = RY0CW05.RY-RLTY-CONT-CD;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/


end // end RY0CS43

// close cursor for ysmrec
Function RY0CS44()
   /* ------------------------------------------------------------*/
   /* close cursor for ysmrec*/
   /* ------------------------------------------------------------*/


  try
    call "IO5630" ("C1", SQLCA, VRTERM01) {isNoRefresh = yes, isExternal = yes};
  end

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(75); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(76); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    RY0CW05.RY0CWERR = "Y"; /* indicate db2 error has occurred*/
    RY0CW05.RY0CWENR = 2;
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "XP0GS05"; /* Program number*/
  TA1REC.TA1DBASE = "DPROD  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VCOLOR01"; /* Table view name*/
  TA1REC.TA1TBLKE = RY0CW05.RY-RLTY-CONT-CD;

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  return; /* Exit to display map*/

end // end RY0CS44

//*** RECORD=RY0CW01 ****
// *
// *  Working Storage Record for RY0C
// *
// ***********************
Record RY0CW01 type basicRecord
  10 RY0CWEOA RY0CWEOA ; 
  10 RY0CWEOF RY0CWEOF ; 
  10 RY0CWMOD RY0CWMOD ; 
  10 RY0CWREV RY0CWREV ; 
  10 RY0CWUPD RY0CWUPD ; 
  10 RY0CWPOP RY0CWPOP ; 
  10 RY0CWELC RY0CWELC ; 
  10 RY0CW-PF-EXIT-FL RY0CW-PF-EXIT-FL ; 
  10 RY0CWIDX RY0CWIDX ; 
  10 RY0CWMAX RY0CWMAX ; 
  10 RY0CWECM RY0CWECM ; 
  10 RY0CWECX RY0CWECX ; 
  10 RY0CWEPI RY0CWEPI ; 
  10 RY0CWECF RY0CWECF ; 
  10 RY0CW-LINK-FL RY0CW-LINK-FL ; 
  10 RY-STY-ELIG-IND RY-STY-ELIG-IND ; 
  10 RY0CW-XGP-GPC-DESC RY0CW-XGP-GPC-DESC ; 
  10 RY0CW-POP-FL RY0CW-POP-FL ; 
  10 RY0CW-END-CHG-FL RY0CW-END-CHG-FL ; 
end // end RY0CW01

//*** RECORD=RY0CW02 ****
// *
// *  Working Storage Record for RY0C screen data items
// *
// ***********************
Record RY0CW02 type basicRecord
  10 RY-RLTY-CONT-CD RY-RLTY-CONT-CD [18] ; 
  10 RY-TERM-GRP-CD RY-TERM-GRP-CD [18] ; 
  10 RY-RLTY-XTRC-IND RY-RLTY-XTRC-IND [18] ; 
  10 RY-RLTY-CONT-SDESC RY-RLTY-CONT-SDESC [18] ; 
  10 RY-TERM-GRP-SDESC RY-TERM-GRP-SDESC [18] ; 
end // end RY0CW02

//*** RECORD=RY0CW03 ****
// *
// *  Working Storage Record for RY0C Royalty Color Data
// *
// ***********************
Record RY0CW03 type basicRecord
  10 SY-COLR-CD-ID SY-COLR-CD-ID [200] ; 
  10 SY-STY-COLR-DESC SY-STY-COLR-DESC [200] ; 
  10 XDM-DIM-CD XDM-DIM-CD [200] ; 
  10 XDM-DIM-DESC XDM-DIM-DESC [200] ; 
end // end RY0CW03

//*** RECORD=RY0CW04 ****
// *
// *  Working Storage Record for RY0C style-based data items
// *
// ***********************
Record RY0CW04 type basicRecord
  10 RY-RLTY-CONT-CD RY-RLTY-CONT-CD [18] ; 
  10 RY-TERM-GRP-CD RY-TERM-GRP-CD [18] ; 
  10 RY-RLTY-XTRC-IND RY-RLTY-XTRC-IND [18] ; 
  10 RY-RLTY-CONT-SDESC RY-RLTY-CONT-SDESC [18] ; 
  10 RY-TERM-GRP-SDESC RY-TERM-GRP-SDESC [18] ; 
end // end RY0CW04

//*** RECORD=RY0CW05 ****
// OVERVIEW:
// 
// 
//        This record is the working record used by the
//        color/life cycle pop-up window process(XP0G001).
// 
// MAINTENANCE HISTORY:
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02/26/93  MHALST  CREATED
// 
// ***********************
Record RY0CW05 type basicRecord
  10 RY-RLTY-CONT-CD RY-RLTY-CONT-CD ; 
  10 RY0CWHDR RY0CWHDR ; 
    15 * char(4) ; 
    15 RY0CWHD1 RY0CWHD1 ; 
    15 RY0CWHD2 RY0CWHD2 ; 
    15 * char(1) ; 
  10 RY0CWIX1 RY0CWIX1 ; 
  10 RY0CW-TABLE RY0CW-TABLE [100] ; 
    15 RY-TERM-GRP-CD RY-TERM-GRP-CD ; 
    15 RY-TERM-GRP-DESC RY-TERM-GRP-DESC ; 
  10 RY0CWCT1 RY0CWCT1 ; 
  10 RY0CWCT2 RY0CWCT2 ; 
  10 RY0CWSIX RY0CWSIX ; 
  10 RY0CWPIX RY0CWPIX ; 
  10 RY0CWINX RY0CWINX [10] ; 
  10 RY0CWEND RY0CWEND ; 
  10 RY0CWFFL RY0CWFFL ; 
  10 RY0CWERR RY0CWERR ; 
  10 RY0CWENR RY0CWENR ; 
end // end RY0CW05

//*** RECORD=VRCOLR01 ****
// *******************  STYLE  TABLE  *************************
// 
// DB2 TABLE:           DROYAL.VRCOLR01
// 
// COPYLIB MEMBER:      DCL00921
// 
// KEY TO DB2 TABLE:    RY_RLTY_CONT_CD
//                      RY_TERM_GRP_CD
// 
// DATE CREATED:        FEB. 1, 1993
// 
// MAINTENANCE LOG:
// 
// DATE     INIT       COMMENTS
// -------- ------     -------------------------------------
// 2-1-93   MHALST     created csp record
// ************************************************************
// ************************
Record VRCOLR01 type basicRecord
  5 VRCOLR01-GROUP VRCOLR01-GROUP ; 
    10 VRCOLR01-KEY VRCOLR01-KEY ; 
      15 RY-RLTY-CONT-CD RY-RLTY-CONT-CD ; 
      15 RY-TERM-GRP-CD RY-TERM-GRP-CD ; 
      15 XGP-GPC-CD XGP-GPC-CD ; 
      15 SY-STY-NBR SY-STY-NBR ; 
      15 SY-COLR-CD-ID SY-COLR-CD-ID ; 
      15 XDM-DIM-CD XDM-DIM-CD ; 
    10 RY-RLTY-XTRC-IND RY-RLTY-XTRC-IND ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VRCOLR01

//*** RECORD=VRTERM01 ****
// *******************  STYLE  TABLE  *************************
// 
// DB2 TABLE:           DROYAL.VRTERM01
// 
// COPYLIB MEMBER:      DCL00922
// 
// KEY TO DB2 TABLE:    RY_RLTY_CONT_CD
//                      RY_TERM_GRP_CD
// 
// DATE CREATED:        FEB. 1, 1993
// 
// MAINTENANCE LOG:
// 
// DATE     INIT       COMMENTS
// -------- ------     -------------------------------------
// 2-1-93   MHALST     created csp record
// ************************************************************
// ************************
Record VRTERM01 type basicRecord
  5 VRTERM01-GROUP VRTERM01-GROUP ; 
    10 VRTERM01-KEY VRTERM01-KEY ; 
      15 RY-RLTY-CONT-CD RY-RLTY-CONT-CD ; 
      15 RY-TERM-GRP-CD RY-TERM-GRP-CD ; 
    10 RY-RLTY-CONT-DESC RY-RLTY-CONT-DESC ; 
    10 RY-RLTY-CONT-SDESC RY-RLTY-CONT-SDESC ; 
    10 RY-TERM-GRP-DESC RY-TERM-GRP-DESC ; 
    10 RY-TERM-GRP-SDESC RY-TERM-GRP-SDESC ; 
    10 RY-RLTY-CONT-EDT RY-RLTY-CONT-EDT ; 
    10 RY-RLTY-CONT-XDT RY-RLTY-CONT-XDT ; 
    10 RY-RLTY-CALC-IND RY-RLTY-CALC-IND ; 
    10 RY-CONT-XPNS-UNT RY-CONT-XPNS-UNT ; 
    10 RY-CONT-SLS-PCT RY-CONT-SLS-PCT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VRTERM01

// RY_CONT_SLS_PCT
DataItem RY-CONT-SLS-PCT decimal(5,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// RY_CONT_XPNS_UNT
DataItem RY-CONT-XPNS-UNT decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_CALC_IND
DataItem RY-RLTY-CALC-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_CONT_CD
DataItem RY-RLTY-CONT-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_CONT_DESC
DataItem RY-RLTY-CONT-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_CONT_EDT
DataItem RY-RLTY-CONT-EDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_CONT_SDESC
DataItem RY-RLTY-CONT-SDESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_CONT_XDT
DataItem RY-RLTY-CONT-XDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// RY_RLTY_XTRC_IND
DataItem RY-RLTY-XTRC-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RY-STY-ELIG-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_TERM_GRP_CD
DataItem RY-TERM-GRP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_TERM_GRP_DESC
DataItem RY-TERM-GRP-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RY_TERM_GRP_SDESC
DataItem RY-TERM-GRP-SDESC char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// User done with changes (Y/N)
DataItem RY0CW-END-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Link from SY0B (Y/N)
DataItem RY0CW-LINK-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Allow PF key Exit (Y/N/T)
DataItem RY0CW-PF-EXIT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Did we display pop-up (Y/N)
DataItem RY0CW-POP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temporary table desc area
DataItem RY0CW-TABLE char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Saved GPC Description
DataItem RY0CW-XGP-GPC-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Table Counter
DataItem RY0CWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Screen Counter
DataItem RY0CWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Elig update change flag
DataItem RY0CWECF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Maximum colors data data ptr
DataItem RY0CWECM num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Colors array (RY0CW03) index
DataItem RY0CWECX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Eligibility update mode ind
DataItem RY0CWELC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// flag
DataItem RY0CWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error Number
DataItem RY0CWENR num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// End of Application Y/N
DataItem RY0CWEOA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of File (set)  Y/N
DataItem RY0CWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Colors elig update process ind
DataItem RY0CWEPI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error Flag
DataItem RY0CWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem RY0CWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map header part 1
DataItem RY0CWHD1 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// map header part 2
DataItem RY0CWHD2 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Pop-up Map Header
DataItem RY0CWHDR char(40)  {
  align = none, fillCharacter = " ", inputRequired = no
}
end

// Array work index
DataItem RY0CWIDX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Counter link screen/table
DataItem RY0CWINX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table index
DataItem RY0CWIX1 num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Maximum saved royalty data ptr
DataItem RY0CWMAX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Processing mode (C/I)
DataItem RY0CWMOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Passed index to table loc.
DataItem RY0CWPIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Did we Display Pop-up
DataItem RY0CWPOP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Program Revision Number
DataItem RY0CWREV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End of Page Save Index
DataItem RY0CWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Updated flag (Y/N)
DataItem RY0CWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Data group item entire row
DataItem VRCOLR01-GROUP char(31)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key into Table
DataItem VRCOLR01-KEY char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data group item entire row
DataItem VRTERM01-GROUP char(116)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Key into table
DataItem VRTERM01-KEY char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XDM-DIM-DESC char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

