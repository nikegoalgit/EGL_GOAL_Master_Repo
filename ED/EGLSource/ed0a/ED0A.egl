package ed0a;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import in1.common.*;
import ku.common.*;
import pf.common.*;
import ta.common.*;
import tf.common.*;
import ti.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=ED0A ****
// ----------------  km06 - change/inquiry company ------------
// 
// overview:  this application performs change functions for
//            edit trading partner main table
// 
// date written: 02/05/97
// author:       Kathy Clark
// 
// ************************************************************
// *              maintenance history log                     *
// ************************************************************
// * date    prgrm   change
// ************************************************************
// *05/07/97 kclar1 close cursor for dedi.vedxcd01 table
// *05/14/98 kclar1 add 200 rows to working storage
// *06/02/98 kclar1 fixed paging and added blank page for adds
// *07/07/99 amohai included asn-rel-days column in the detail
// *                part of screen ED0AM210. The affected PROC
// *                , SGRP, MAP and RECD are :
// *                ED0A-ENTER, ED0A-TPCUS, ED0AM   ED0AM210,
// *                ED0AS-DSPLY-M210, ED0AS-EDITP-ADD,
// *                ED0AS-EDITP-CHNG, ED0AS-EDITP-DEL,
// *                ED0AS-EDITP-SEL,  ED0AS-GET-EDI-CO,
// *                ED0AS-GET-EDI-TP, ED0AS-GET-TP-INFO,
// *                ED0AS-INIT-REC,   ED0AS-LD-WRK-STO,
// *                ED0AS-NEXT-CO,    ED0AS-NXT-TP-CO,
// *                ED0AW04,          VEDTPR02.
// *02/05/00 VGOTTI included option #7 in the main menu for
// *                deconsolidation and created ed0am207 screen
// *                which include store-id in detail and header
// *                part.This option behaves similar to the
// *                Modified procs,stgrp and recs are:
// *                ed0a-init,ed0a-pf7,ed0a-pf08,ed0a-tropt,
// *                ed0am100,ed0as-blnk-page,ed0as-editp-add,
// *                ed0as-editp-chng,ed0as-editp-del,
// *                ed0as-editp-sel,ed0a-get-edi-tp,
// *                ed0as-get-tp-info,ed0as-init-rec,
// *                ed0as-ldwrk-sto,ed0aw01 and ed0aw04
// *                New procs,stgrps and maps are:
// *                ed0a-dcnsl,ed0a-enter7,ed0am270,
// *                ed0as-dsply-m270,ed0as-getedi-co-st,
// *                ed0as-next-co-st,ed0as-nxt-tp-co-st,
// *                ed0as-valid-m270
// *06/02/00 VGOTTI Not to allow 'regular customer' and
// *                'deconsolidator' goods together in one
// *                shipment.Procs changed are ED0A-TPTRN and
// *                ED0AS3-VALID-SCRN and
// *                ED0AS3-EDI-TRN-ADD ( for option# 7).
// *********************
Program ED0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "ED00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ED0AW01 ED0AW01; // record
  ED0AW03 ED0AW03; // record
  ED0AW04 ED0AW04; // record
  FY1REC FY1REC; // record
  PFJREC PFJREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TF1REC TF1REC; // record
  VCMPNY02 VCMPNY02; // record
  VEDCTR01 VEDCTR01; // record
  VEDSCD01 VEDSCD01; // record
  VEDTCD01 VEDTCD01; // record
  VEDTPR01 VEDTPR01; // record
  VEDTPR02 VEDTPR02; // record
  VEDTPR03 VEDTPR03; // record
  VEDXCD01 VEDXCD01; // record
  VETPXM01 VETPXM01; // record
  VTOPCD01 VTOPCD01; // record
  XP0MW01 XP0MW01; // record
  XP0MW02 XP0MW02; // record
  XP0MW04 XP0MW04; // record
  XP0NW01 XP0NW01; // record
  XP0NW02 XP0NW02; // record
  XP0NW04 XP0NW04; // record
  XP0OW01 XP0OW01; // record
  XP0OW02 XP0OW02; // record
  XP0OW04 XP0OW04; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL {deleteAfterUse = yes}; // table
  use ED0AM.ED0AM100,  // forms
      ED0AM.ED0AM210, 
      ED0AM.ED0AM220, 
      ED0AM.ED0AM230, 
      ED0AM.ED0AM240, 
      ED0AM.ED0AM250, 
      ED0AM.ED0AM260, 
      ED0AM.ED0AM270, 
      ED0AM.ED0AM300, 
      ED0AM.XP0MM001, 
      ED0AM.XP0NM001, 
      ED0AM.XP0OM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    ED0A-INIT: ED0A-INIT();
  end // end main
end // end ED0A

// converse carr/tp screen
Function ED0A-CARR()
   /* ******************************************************************/
   /* -----------  before stage - ed0a-carr*/
   /* ******************************************************************/

  if (ED0AW01.ED0AWFST == "Y")
    ED0AW01.ED0AWFST = "N";
  end

  ED0AM240.ED0AMDT = VGVar.currentShortGregorianDate; /* move date*/

  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                  /* map*/
  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM240.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID-QUERY;
  end

  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM240.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM240.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM240.EDI-TRDPT-NM[ED0AWIDX] skip;
    set ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM240.TF-CARR-CD[ED0AWIDX] skip;
    if (ED0AM240.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM240.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y")
      set ED0AM240.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
      set ED0AM240.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
      set ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      if (ED0AM240.TF-CARR-CD[ED0AWIDX] == " ")
                                   /* /set field for add for edi user*/
        set ED0AM240.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM240.TF-CARR-CD[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM240.ED0AM-SEL[1] cursor;
    converseLib.validationFailed(002);
  end
  converse ED0AM240 ;
   /* -----------------  ed0a-carr ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM240.VAGen_EZEMSG = " ";
  ED0AM240.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM240.ED0AM-TF-CARR-CD == "  " && 
  ED0AM240.EDI-TRDPT-ID-SRCH == "  ")
    ED0AW-TF-CARR-CD = " ";
    ED0AW-EDI-TRDPT-ID = " ";
    ED0AW-EDI-TRDPT-ID-QUERY = " ";
    set ED0AM240 initial; /* clear map*/
  end


  if ((ED0AM240.ED0AM-TF-CARR-CD is modified && 
  ED0AM240.ED0AM-TF-CARR-CD > " ") || 
  (ED0AM240.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM240.EDI-TRDPT-ID-SRCH > " ")
   || converseVar.eventKey is pa2)
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
    set VEDTPR01 empty;
    ED0AW-SQLCODE = 0;
    ED0AW-EDI-TRDPT-ID = ED0AM240.EDI-TRDPT-ID-SRCH;
    if ((ED0AM240.ED0AM-TF-CARR-CD is modified && 
    ED0AM240.ED0AM-TF-CARR-CD > " "))
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      VEDTPR01.TF-CARR-CD = ED0AM240.ED0AM-TF-CARR-CD;
      ED0AW-TF-CARR-CD = ED0AM240.ED0AM-TF-CARR-CD;
      ED0AS-GET-EDI-CARR();
    end
    if ((ED0AM240.EDI-TRDPT-ID-SRCH is modified && 
    ED0AW-EDI-TRDPT-ID != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM240.EDI-TRDPT-ID-SRCH;
      ED0AW-TF-CARR-CD = " ";
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
      VEDTPR01.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
      ED0AW-EDI-TRDPT-ID = ED0AM240.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M240(); /* ;display map*/
    ED0AM-PAGE-NUM = 1;
    set ED0AM240.EDI-TRDPT-ID-SRCH cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM240.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      ED0AMMSG = "PAGE NUMBER MUST BE LESS THAN TOTAL";
      set ED0AM240.ED0AM-PAGE-NUM cursor, bold;
      return;
    else
      move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M240();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
    end
  end

  if (converseVar.eventKey is enter) /* process enter for updates*/
    ED0A-ENTCA();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM240.TF-CARR-CD == " "
     && ED0AM240.EDI-TRDPT-ID == " ") /* clear screen*/
      set ED0AM240 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M240();
      set ED0AM240.EDI-TRDPT-ID-SRCH cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-CARR = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;
    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR01.TF-CARR-CD = ED0AW04-TF-CARR-CD[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == " " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      ED0AW04-TF-CARR-CD[ED0AW-CNT] == " ")
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
      converseLib.validationFailed(01);
      ED0AS-DSPLY-M240();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

    /* iF EZEMNO NE 0                   /* invalid pf*/
      /* OR ed0am240.ED0AMMSG NE ' ';   /* invalid security*/
   /* EZEFLO;*/
   /* ND;*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M240();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M240();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM240.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM240.CATOAP;
    COMMAREA.CAITEM = ED0AM240.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM240.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end
    /* ***** menu options checked in flow  *******/


    /* -----------   end of process ed0a-carr-------*/

end // end ED0A-CARR

// converse tick/tp screen
Function ED0A-CUTK()
   /* ******************************************************************/
   /* -----------  before stage - ed0a-cutk*/
   /* ******************************************************************/

  if (ED0AW01.ED0AWFST == "Y")
    ED0AW01.ED0AWFST = "N";
  end

  ED0AM230.ED0AMDT = VGVar.currentShortGregorianDate; /* move date*/

  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                  /* map*/
  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM230.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID-QUERY;
  end

  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM230.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM230.EDI-TRDPT-NM[ED0AWIDX] skip;
    set ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] skip;
    if (ED0AM230.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM230.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y")
      if (ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] == " ")
                                   /* /set field for add for edi user*/
        set ED0AM230.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM230.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
        set ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] initialAttributes;
      else /* /*/
        set ED0AM230.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM230.ED0AM-SEL[1] cursor;
    converseLib.validationFailed(002);
  end
  converse ED0AM230 ;
   /* -----------------  ed0a-cutk ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM230.VAGen_EZEMSG = " ";
  ED0AM230.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM230.EDI-TRDPT-ID-SRCH == "  " && 
  ED0AM230.ED0AM-TI-CUTK-SPLR-CD == "  ")
    ED0AW-TI-CUTK-SPLR-CD = " ";
    ED0AW-EDI-TRDPT-ID = " ";
  end


  if ((ED0AM230.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM230.EDI-TRDPT-ID-SRCH > " ") || 
  (ED0AM230.ED0AM-TI-CUTK-SPLR-CD is modified && 
  ED0AM230.ED0AM-TI-CUTK-SPLR-CD > " ")
   || converseVar.eventKey is pa2)
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
    set VEDTPR01 empty;
    ED0AW-SQLCODE = 0;
    ED0AW-EDI-TRDPT-ID = ED0AM230.EDI-TRDPT-ID-SRCH;
    ED0AW-TI-CUTK-SPLR-CD = ED0AM230.ED0AM-TI-CUTK-SPLR-CD;
    if ((ED0AM230.ED0AM-TI-CUTK-SPLR-CD is modified && 
    ED0AM230.ED0AM-TI-CUTK-SPLR-CD > " ") || 
    (ED0AW-TI-CUTK-SPLR-CD != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      ED0AM230.EDI-TRDPT-ID-SRCH = " ";
      VEDTPR01.TI-CUTK-SPLR-CD = ED0AM230.ED0AM-TI-CUTK-SPLR-CD;
      ED0AS-GET-EDI-CUTK();
    end
    if ((ED0AM230.EDI-TRDPT-ID-SRCH is modified && 
    ED0AM230.EDI-TRDPT-ID-SRCH != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM230.EDI-TRDPT-ID-SRCH;
      ED0AW-TI-CUTK-SPLR-CD = " ";
      ED0AM230.TI-CUTK-SPLR-CD = " ";
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
      VEDTPR01.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
      ED0AW-EDI-TRDPT-ID = ED0AM230.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M230(); /* ;display map*/
    ED0AM-PAGE-NUM = 1;
    set ED0AM230.EDI-TRDPT-ID-SRCH cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM230.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      ED0AMMSG = "PAGE NUMBER MUST BE LESS THAN TOTAL";
      set ED0AM230.ED0AM-PAGE-NUM cursor, bold;
      return;
    else
      move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M230();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
    end
  end

  if (converseVar.eventKey is enter) /* process enter for updates*/
    ED0A-ENTTK();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM230.ED0AM-TI-CUTK-SPLR-CD == " "
     && ED0AM230.EDI-TRDPT-ID == " ") /* clear screen*/
      set ED0AM230 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M230();
      set ED0AM230.EDI-TRDPT-ID-SRCH cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-CUTK = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;
    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR01.TI-CUTK-SPLR-CD = ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == " " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT] == " ")
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
      converseLib.validationFailed(1);
      ED0AS-DSPLY-M230();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

    /* iF EZEMNO NE 0                   /* invalid pf*/
      /* OR ED0AM230.ED0AMMSG NE ' ';   /* invalid security*/
   /* EZEFLO;*/
   /* ND;*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M230();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M230();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM230.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM230.CATOAP;
    COMMAREA.CAITEM = ED0AM230.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM230.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* ***** menu options checked in flow  *******/


    /* -----------   end of process ed0a-cutk-------*/

end // end ED0A-CUTK

// converse cust/stor/tp/ screen
Function ED0A-DCNSL()
   /* -----------  before stage - ed0a-trdpt-cust*/

  if (ED0AW01.ED0AWFS1 == "Y")
    ED0AW01.ED0AWFS1 = "N";
  end

   /* set date*/
  ED0AM270.ED0AMDT = VGVar.currentShortGregorianDate;
  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                   /* map*/
    /* MOVE CUSTOMER NUMBER TO MAP*/

  if (ED0AW01.ED0AWCID > 0 && 
  ED0AW01.ED0AWSID > 0)
    ED0AM270.KUCCOID = ED0AW01.ED0AWCID;
    ED0AM270.KUSTOID = ED0AW01.ED0AWSID;
    set ED0AM270.ED0AM-SEL[1] cursor;
  end

    /* MOVE TRADING PARTNER NUMBER TO MAP*/

  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM270.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID-QUERY;
  end
    /* no processing*/
  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM270.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM270.EDI-TRDPT-NM[ED0AWIDX] skip;
    set ED0AM270.ED0AM-ASN-REL-DAYS[ED0AWIDX] skip;
    set ED0AM270.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM270.CU-CO-ID[ED0AWIDX] skip;
    set ED0AM270.CU-STOR-ID[ED0AWIDX] skip;
    if (ED0AM270.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM270.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y") /* edi user - allow updates*/
      set ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      set ED0AM270.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
      set ED0AM270.ED0AM-ASN-REL-DAYS[ED0AWIDX] initialAttributes;
      set ED0AM270.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
      if (ED0AM270.CU-CO-ID[ED0AWIDX] <= 0 || 
      ED0AM270.CU-STOR-ID[ED0AWIDX] <= 0) /* set row for add*/
        set ED0AM270.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM270.CU-STOR-ID[ED0AWIDX] initialAttributes;
        set ED0AM270.CU-CO-ID[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM270.ED0AM-SEL[1] cursor;
    converseLib.validationFailed(002);
  end
  converse ED0AM270 ;
   /* -----------------  ed0a-trdpt-cust ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM270.VAGen_EZEMSG = " ";
  ED0AM270.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM270.KUCCOID == 0 && 
  ED0AM270.KUSTOID == 0 && 
  ED0AM270.EDI-TRDPT-ID-SRCH == "  ")
    ED0AW-KUCCOID = 0;
    ED0AW-KUSTOID = 0;
    ED0AW-EDI-TRDPT-ID = " ";
    ED0AW-EDI-TRDPT-ID-QUERY = " ";
  end

  if (((ED0AM270.KUCCOID is modified && 
  ED0AM270.KUCCOID > 0) || 
  (ED0AM270.KUSTOID is modified && 
  ED0AM270.KUSTOID > 0)) || 
  (ED0AM270.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM270.EDI-TRDPT-ID-SRCH > " ") || 
  converseVar.eventKey is pa2)
    if (ED0AM270.KUCCOID == 0 && 
    ED0AM270.EDI-TRDPT-ID-SRCH == " ")
      set ED0AM270.KUCCOID cursor;
      converseLib.validationFailed(016);
      return;
    end
    if (ED0AM270.KUSTOID == 0 && 
    ED0AM270.EDI-TRDPT-ID-SRCH == " ")
      set ED0AM270.KUSTOID cursor;
      converseLib.validationFailed(017);
      return;
    end
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
    set VEDTPR03 empty;
    ED0AW-PAGE-CNT = 0;
    ED0AW-PAGE-INDEX = 1;
    ED0AW-MAX = 0;
    ED0AW-SQLCODE = 0;
    ED0AW-EDI-TRDPT-ID = ED0AM270.EDI-TRDPT-ID-SRCH;
    ED0AW-KUCCOID = ED0AM270.KUCCOID;
    ED0AW-KUSTOID = ED0AM270.KUSTOID;
    if (((ED0AM270.KUCCOID is modified && ED0AW-KUCCOID > 0) || 
    (ED0AM270.KUCCOID > 0 && converseVar.eventKey is pa2))
     || ((ED0AM270.KUSTOID is modified && ED0AW-KUSTOID > 0) || 
    (ED0AM270.KUSTOID > 0 && converseVar.eventKey is pa2)))
      ED0AW-KUCCOID = ED0AM270.KUCCOID;
      ED0AW-KUSTOID = ED0AM270.KUSTOID;
      VEDTPR03.CU-CO-ID = ED0AW-KUCCOID;
      VEDTPR03.CU-STOR-ID = ED0AW-KUSTOID;
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      ED0AS-GETEDI-CO-ST(); /* ; open trading partner cursor*/
    end
    if ((ED0AM270.EDI-TRDPT-ID-SRCH is modified && 
    ED0AW-EDI-TRDPT-ID != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM270.EDI-TRDPT-ID-SRCH;
      ED0AW-KUCCOID = 0;
      ED0AW-KUSTOID = 0;
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
      VEDTPR03.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
      ED0AW-EDI-TRDPT-ID = ED0AM270.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M270(); /* ;display map*/
    ED0AM-PAGE-NUM = 1;
    set ED0AM270.ED0AM-SEL[1] cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM270.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      converseLib.validationFailed(13);
      set ED0AM270.ED0AM-PAGE-NUM cursor, bold;
      return;
    else
      move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M270();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
      return;
    end
  end

  if (converseVar.eventKey is enter /* process enter for updates*/
   && ED0AM270.CATOAP == " ")      
    ED0A-ENTER7();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM270.KUCCOID == 0
     && ED0AM270.KUSTOID == 0
     && ED0AM270.EDI-TRDPT-ID == " ") /* clear screen*/
      set ED0AM270 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M270();
      set ED0AM270.KUCCOID cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-DCNSL = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;

    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR03.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];
        VEDTPR03.CU-STOR-ID = ED0AW04-CU-STOR-ID[ED0AW-CNT];
        VEDTPR03.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR03.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == "  " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      (ED0AW04-CU-CO-ID[ED0AW-CNT] == 0 || 
      ED0AW04-CU-STOR-ID[ED0AW-CNT] == 0))
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
      converseLib.validationFailed(1);
      ED0AS-DSPLY-M270();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M270();
    return;
  end

  /* blank page logic  *****/
  if (converseVar.eventKey is pf8 && 
  (ED0AW-CNT > ED0AW-MAX)
   && ED0AM270.EDI-TRDPT-ID[12] != "  ")
    ED0AS-BLNK-PAGE();
    ED0AS-DSPLY-M270();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M270();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM270.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM270.CATOAP;
    COMMAREA.CAITEM = ED0AM270.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM270.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* ***** menu options checked in flow  *******/
    /* -----------   end of process ed0a-trdpt-cust-------*/

end // end ED0A-DCNSL

// enter
Function ED0A-ENTCA()
  /* ****************************************************************/
  /* ED0a-entca*/
  /* ****************************************************************/

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM240.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM240.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y")
        ED0AW04-SEL[ED0AW-CNT] = ED0AM240.ED0AM-SEL[ED0AWIDX];

    /* check change and add transactions*/

        if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW-MAX = ED0AW-MAX + 1;
          ED0AW04-TF-CARR-CD[ED0AW-CNT] = ED0AM240.TF-CARR-CD[ED0AWIDX];
          ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM240.EDI-TRDPT-ID[ED0AWIDX];
        end

        if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "A"
         || ED0AM240.ED0AM-SEL[ED0AWIDX] == "C")
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX];
          if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM240.EDI-TRDPT-ABRV[ED0AWIDX];
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM240.EDI-TRDPT-NM[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M240(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end

    /* check delete transactions*/

        if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /* no transactions on delete row*/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
          else
            ED0AS3-CLOSE-TRN(); /* close transactions*/
            ED0AW04-SEL[ED0AW-CNT] = " ";
            set ED0AM240.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM240.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM240.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(003);
        return;
      end
    end
    /* transfer to select screen*/

    if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM240.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM240.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-EDI-TRDPT-NM = ED0AM240.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTCA

// enter
Function ED0A-ENTER()

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;


  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM210.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM210.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y") /* authorized to update*/
        ED0AW04-SEL[ED0AW-CNT] = ED0AM210.ED0AM-SEL[ED0AWIDX];
        if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "A" || 
        ED0AM210.ED0AM-SEL[ED0AWIDX] == "C")
          if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "A")
            ED0AW-MAX = ED0AW-MAX + 1;
            ED0AW04-CU-CO-ID[ED0AW-CNT] = ED0AM210.CU-CO-ID[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM210.EDI-TRDPT-ID[ED0AWIDX];
          end
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX];
   /* ************************* TCS BEGIN *******************/
          ED0AW04-ASN-REL-DAYS[ED0AW-CNT] = ED0AM210.ED0AM-ASN-REL-DAYS[ED0AWIDX];
   /* ************************* TCS END   *******************/
          if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM210.EDI-TRDPT-NM[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM210.EDI-TRDPT-ABRV[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M210(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end

    /* check delete transactions*/

        if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /* no transactions on delete row*/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
          else
            ED0AS3-CLOSE-TRN(); /* close transaction cursor*/
            set ED0AM210.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW04-SEL[ED0AW-CNT] = " ";
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM210.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM210.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(3);
        return;
      end
    end

    /* transfer to select screen*/

    if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM210.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM210.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-KUCCOID = ED0AM210.CU-CO-ID[ED0AWIDX]; /* edi company # to work stor*/
      ED0AW-EDI-TRDPT-NM = ED0AM210.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTER

// enter
Function ED0A-ENTER7()

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;


  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM270.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM270.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y") /* authorized to update*/
        ED0AW04-SEL[ED0AW-CNT] = ED0AM270.ED0AM-SEL[ED0AWIDX];
        if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "A" || 
        ED0AM270.ED0AM-SEL[ED0AWIDX] == "C")
          if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "A")
            ED0AW-MAX = ED0AW-MAX + 1;
            ED0AW04-CU-CO-ID[ED0AW-CNT] = ED0AM270.CU-CO-ID[ED0AWIDX];
            ED0AW04-CU-STOR-ID[ED0AW-CNT] = ED0AM270.CU-STOR-ID[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM270.EDI-TRDPT-ID[ED0AWIDX];
          end
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX];
          ED0AW04-ASN-REL-DAYS[ED0AW-CNT] = ED0AM270.ED0AM-ASN-REL-DAYS[ED0AWIDX];
          if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM270.EDI-TRDPT-NM[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM270.EDI-TRDPT-ABRV[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M270(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end

    /* check delete transactions*/

        if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /* no transactions on delete row*/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
          else
            ED0AS3-CLOSE-TRN(); /* close transaction cursor*/
            set ED0AM270.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW04-SEL[ED0AW-CNT] = " ";
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM270.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM270.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(3);
        return;
      end
    end

    /* transfer to select screen*/

    if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM270.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM270.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-KUCCOID = ED0AM270.CU-CO-ID[ED0AWIDX]; /* edi company # to work stor*/
      ED0AW-KUSTOID = ED0AM270.CU-STOR-ID[ED0AWIDX]; /* edi store # to workin stor*/
      ED0AW-EDI-TRDPT-NM = ED0AM270.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTER7

// enter
Function ED0A-ENTFY()
  /* ****************************************************************/
  /* ED0a-enttk*/
  /* ****************************************************************/

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM220.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM220.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y")
        ED0AW04-SEL[ED0AW-CNT] = ED0AM220.ED0AM-SEL[ED0AWIDX];
        if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW-MAX = ED0AW-MAX + 1;
          ED0AW04-FY-FCTY-CD[ED0AW-CNT] = ED0AM220.FY-FCTY-CD[ED0AWIDX];
          ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM220.EDI-TRDPT-ID[ED0AWIDX];
        end
        if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "C" || 
        ED0AM220.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX];
          if (ED0AW04-NAME-EXISTS == "N")
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM220.EDI-TRDPT-NM[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M220(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end


    /* check delete transactions*/

        if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /**/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
          else
            ED0AS3-CLOSE-TRN(); /* close transactions*/
            ED0AW04-SEL[ED0AW-CNT] = " ";
            set ED0AM220.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM220.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM220.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(3);
        return;
      end
    end

    /* transfer to select screen*/

    if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM220.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM220.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-EDI-TRDPT-NM = ED0AM220.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTFY

// enter
Function ED0A-ENTGL()
  /* ****************************************************************/
  /* ED0a-entgl*/
  /* ****************************************************************/

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM250.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM250.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y")
        ED0AW04-SEL[ED0AW-CNT] = ED0AM250.ED0AM-SEL[ED0AWIDX];

            /* ****  add*/

        if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW-MAX = ED0AW-MAX + 1;
          ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT] = ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX];
          ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM250.EDI-TRDPT-ID[ED0AWIDX];
        end

            /* ****  add  & change*/

        if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "C" || 
        ED0AM250.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX];
          if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM250.EDI-TRDPT-NM[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M250(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end

    /* check delete transactions*/

        if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /* no transactions on delete row*/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
          else
            ED0AS3-CLOSE-TRN(); /* close transactions*/
            ED0AW04-SEL[ED0AW-CNT] = " ";
            set ED0AM250.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM250.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM250.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(3);
        return;
      end
    end
    /* transfer to select screen*/

    if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM250.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM250.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-EDI-TRDPT-NM = ED0AM250.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTGL

// enter
Function ED0A-ENTTK()

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM230.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM230.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y")
        ED0AW04-SEL[ED0AW-CNT] = ED0AM230.ED0AM-SEL[ED0AWIDX];

              /* add*/

        if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW-MAX = ED0AW-MAX + 1;
          ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT] = ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX];
          ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM230.EDI-TRDPT-ID[ED0AWIDX];
        end

    /* add & change transactions*/

        if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "C" || 
        ED0AM230.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX];
          if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM230.EDI-TRDPT-NM[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M230(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end

    /* check delete transactions*/

        if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /* no transactions on delete row*/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
            return;
          else
            ED0AS3-CLOSE-TRN(); /* close transactions*/
            ED0AW04-SEL[ED0AW-CNT] = " ";
            set ED0AM230.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM230.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM230.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(3);
        return;
      end
    end

    /* transfer to select screen*/

    if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM230.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM230.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-TI-CUTK-SPLR-CD = ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX]; /* edi company # to work stor*/
      ED0AW-EDI-TRDPT-NM = ED0AM230.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTTK

// enter
Function ED0A-ENTWH()
  /* ****************************************************************/
  /* ED0a-entwh*/
  /* ****************************************************************/

  ED0AW01.ED0AWIDX = 1;
  ED0AW01.ED0AWERR = "N"; /* set flags*/
  ED0AW01.ED0AW-UPDT = "N";
  ED0AW-TRN-MAP3 = "N";

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1; /* set page index*/
  end

   /* if key is changed reset map*/
   /* otherwise process screen*/

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AW01.ED0AWIDX <= 12)
    if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "X" || 
    ED0AM260.ED0AM-SEL[ED0AWIDX] == "S" || 
    ED0AM260.ED0AM-SEL[ED0AWIDX] == " ")
      /* next sentence*/
    else
      if (COMMAREA.CACHGFL == "Y")
        ED0AW04-SEL[ED0AW-CNT] = ED0AM260.ED0AM-SEL[ED0AWIDX];
        if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "A")
          ED0AW-MAX = ED0AW-MAX + 1;
          ED0AW04-XWH-WHSE-CD[ED0AW-CNT] = ED0AM260.XWH-WHSE-CD[ED0AWIDX];
          ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM260.EDI-TRDPT-ID[ED0AWIDX];
        end

    /* add & change transactions*/

        if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "A" || 
        ED0AM260.ED0AM-SEL[ED0AWIDX] == "C")
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX];
          if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
            ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM260.EDI-TRDPT-NM[ED0AWIDX];
            ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX];
          end
          ED0AS-EDITP-SEL();
          ED0AS-VALID-M260(); /* verify screen input*/
          if (ED0AW01.ED0AWERR == "Y")
            ED0AWIDX = 12;
            ED0AW-UPDT = "N";
            return;
          else
            ED0AW-UPDT = "Y";
          end
        end

    /* check delete transactions*/

        if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "D")
          ED0AW-TRN-SQLCODE = 0; /* zero sqlcode*/
          VETPXM01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
          ED0AS3-GET-TRN(); /* open transaction cursor to make sure*/
          ED0AS3-NEXT-TRN(); /* no transactions on delete row*/
          if (ED0AW-TRN-SQLCODE == 100) /* no transactions exist-allow delte*/
            ED0AW-UPDT = "Y";
            ED0AW01.ED0AWERR = "N"; /* allow delete*/
          else
            ED0AS3-CLOSE-TRN(); /* close transactions*/
            ED0AW04-SEL[ED0AW-CNT] = " ";
            set ED0AM260.ED0AM-SEL[ED0AWIDX] bold, cursor;
            ED0AW-UPDT = "N";
            ED0AW01.ED0AWERR = "Y"; /* do not allow delete*/
            ED0AM260.ED0AMMSG = " ALL TRANSACTIONS MUST BE DELETED TO DELETE TRADING PARTNER";
            return;
          end
        end
      else
        set ED0AM260.ED0AM-SEL[ED0AWIDX] bold, cursor;
        converseLib.validationFailed(3);
        return;
      end
    end
    /* transfer to select screen*/

    if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "S")
      ED0AW-TRN-MAP3 = "Y";
      ED0AW01.ED0AW3-UPDT = "N";
      ED0AW01.ED0AWERR = "N";
      set ED0AM300 initial; /* clear transaction map*/
      set ED0AW03 empty;
      ED0AM260.ED0AM-SEL[ED0AWIDX] = "X";
      ED0AW-EDI-TRDPT-ID = ED0AM260.EDI-TRDPT-ID[ED0AWIDX]; /* edi trading pt id to map3*/
      ED0AW-EDI-TRDPT-NM = ED0AM260.EDI-TRDPT-NM[ED0AWIDX]; /* edi trading nm to wrk stor*/
      ED0AW-EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT]; /* edi trading pt nbr to work stor*/
      while (ED0AW-TRN-MAP3 == "Y")
        ED0A-TPTRN(); /* transaction map*/
        if (ED0AW-TRN-MAP3 == "N")
          ED0AW-TRN-MAP3 = "R"; /* set flag to r for main screen rturn*/
        end
      end
    end

    ED0AW-CNT = ED0AW-CNT + 1; /* add 1 to count*/
    ED0AW01.ED0AWIDX = ED0AW01.ED0AWIDX + 1;
  end

end // end ED0A-ENTWH

// converse factory screen
Function ED0A-FCTY()
   /* ******************************************************************/
   /* -----------  before stage - ed0a-fcty*/
   /* ******************************************************************/

  if (ED0AW01.ED0AWFST == "Y")
    ED0AW01.ED0AWFST = "N";
  end

  ED0AM220.ED0AMDT = VGVar.currentShortGregorianDate; /* set date*/

  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                   /* map*/
  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM220.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID;
  end

  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM220.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM220.EDI-TRDPT-NM[ED0AWIDX] skip;
    set ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM220.FY-FCTY-CD[ED0AWIDX] skip;
    if (ED0AM220.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM220.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y")
      if (ED0AM220.FY-FCTY-CD[ED0AWIDX] == " ")
                                   /* /set field for add for edi user*/
        set ED0AM220.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM220.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
        set ED0AM220.FY-FCTY-CD[ED0AWIDX] initialAttributes;
      else /* /*/
        set ED0AM220.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM220.ED0AM-SEL[1] cursor;
    converseLib.validationFailed(002);
  end
  converse ED0AM220 ;
   /* -----------------  ed0a-fcty ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM220.VAGen_EZEMSG = " ";
  ED0AM220.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM220.EDI-TRDPT-ID-SRCH == "  " && 
  ED0AM220.ED0AM-FY-FCTY-CD == "  ")
    set ED0AM220 initial; /* clear map*/
    ED0AW-FY-FCTY-CD = " ";
    ED0AW-EDI-TRDPT-ID = " ";
  end


  if ((ED0AM220.ED0AM-FY-FCTY-CD is modified && 
  ED0AM220.ED0AM-FY-FCTY-CD > " ") || 
  (ED0AM220.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM220.EDI-TRDPT-ID-SRCH > " ")
   || converseVar.eventKey is pa2)
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
    set VEDTPR01 empty;
    ED0AW-SQLCODE = 0;
    if ((ED0AM220.ED0AM-FY-FCTY-CD is modified && 
    ED0AM220.ED0AM-FY-FCTY-CD > " "))
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      VEDTPR01.FY-FCTY-CD = ED0AM220.ED0AM-FY-FCTY-CD;
      ED0AW-FY-FCTY-CD = ED0AM220.ED0AM-FY-FCTY-CD;
      ED0AS-GET-EDI-FY();
    end
    ED0AW-EDI-TRDPT-ID = ED0AM220.EDI-TRDPT-ID-SRCH;
    if ((ED0AM220.EDI-TRDPT-ID-SRCH is modified && 
    ED0AW-EDI-TRDPT-ID != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM220.EDI-TRDPT-ID-SRCH;
      ED0AW-FY-FCTY-CD = " ";
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
      VEDTPR01.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
      ED0AW-EDI-TRDPT-ID = ED0AM220.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M220(); /* ;display map*/
    ED0AM220.ED0AM-PAGE-NUM = 1;
    set ED0AM220.EDI-TRDPT-ID-SRCH cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM220.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    ED0AW-PAGE-CNT = ED0AM220.ED0AM-PAGE-NUM;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      ED0AMMSG = "PAGE NUMBER MUST BE LESS THAN TOTAL";
      set ED0AM220.ED0AM-PAGE-NUM cursor, bold;
    else
      ED0AW-PAGE-CNT = ED0AM220.ED0AM-PAGE-NUM;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M220();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
    end
  end

  if (converseVar.eventKey is enter) /* process enter for updates*/
    ED0A-ENTFY();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM220.ED0AM-FY-FCTY-CD == " "
     && ED0AM220.EDI-TRDPT-ID-SRCH == " ") /* clear screen*/
      set ED0AM220 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M220();
      set ED0AM220.EDI-TRDPT-ID-SRCH cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-FCTY = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;
    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR01.FY-FCTY-CD = ED0AW04-FY-FCTY-CD[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == " " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      ED0AW04-FY-FCTY-CD[ED0AW-CNT] == " ")
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
      converseLib.validationFailed(1);
      ED0AS-DSPLY-M220();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M220();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M220();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM220.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM220.CATOAP;
    COMMAREA.CAITEM = ED0AM220.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM220.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* ***** menu options checked in flow  *******/


    /* -----------   end of process ed0a-fcty-------*/

end // end ED0A-FCTY

// converse gl-bank screen
Function ED0A-GLCD()
   /* ******************************************************************/
   /* -----------  before stage - ed0a-glcd*/
   /* ******************************************************************/

  if (ED0AW01.ED0AWFST == "Y")
    ED0AW01.ED0AWFST = "N";
  end

  ED0AM250.ED0AMDT = VGVar.currentShortGregorianDate; /* move date*/

  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                  /* map*/
  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM250.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID-QUERY;
  end

  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM250.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM250.EDI-TRDPT-NM[ED0AWIDX] skip;
    set ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] skip;
    if (ED0AM250.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM250.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y")
      if (ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] == " ")
                                   /* /set field for add for edi user*/
        set ED0AM250.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM250.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
        set ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] initialAttributes;
      else /* /*/
        set ED0AM250.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM250.ED0AM-SEL[1] cursor;
    converseLib.validationFailed(002);
  end
  converse ED0AM250 ;
   /* -----------------  ed0a-glcd ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM250.VAGen_EZEMSG = " ";
  ED0AM250.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM250.ED0AM-GL-GEN-LEDGER-CD == "  " && 
  ED0AM250.EDI-TRDPT-ID-SRCH == "  ")
    ED0AW-GL-GEN-LEDGER-CD = " ";
    ED0AW-EDI-TRDPT-ID = " ";
    ED0AW-EDI-TRDPT-ID-QUERY = " ";
    set ED0AM250 initial; /* clear map*/
  end


  if ((ED0AM250.ED0AM-GL-GEN-LEDGER-CD is modified && 
  ED0AM250.ED0AM-GL-GEN-LEDGER-CD > " ") || 
  (ED0AM250.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM250.EDI-TRDPT-ID-SRCH > " ")
   || converseVar.eventKey is pa2)
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
    set VEDTPR01 empty;
    ED0AW-SQLCODE = 0;
    ED0AW-EDI-TRDPT-ID = ED0AM250.EDI-TRDPT-ID-SRCH;
    if ((ED0AM250.ED0AM-GL-GEN-LEDGER-CD is modified && 
    ED0AM250.ED0AM-GL-GEN-LEDGER-CD > " "))
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      VEDTPR01.GL-GEN-LEDGER-CD = ED0AM250.ED0AM-GL-GEN-LEDGER-CD;
      ED0AW-GL-GEN-LEDGER-CD = ED0AM250.ED0AM-GL-GEN-LEDGER-CD;
      ED0AS-GET-EDI-GLCD();
    end
    if ((ED0AM250.EDI-TRDPT-ID-SRCH is modified && 
    ED0AW-EDI-TRDPT-ID != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM250.EDI-TRDPT-ID-SRCH;
      ED0AW-GL-GEN-LEDGER-CD = " ";
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
      VEDTPR01.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
      ED0AW-EDI-TRDPT-ID = ED0AM250.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M250(); /* ;display map*/
    ED0AM-PAGE-NUM = 1;
    set ED0AM250.EDI-TRDPT-ID-SRCH cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM250.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      ED0AMMSG = "PAGE NUMBER MUST BE LESS THAN TOTAL";
      set ED0AM250.ED0AM-PAGE-NUM cursor, bold;
      return;
    else
      move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M250();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
    end
  end

  if (converseVar.eventKey is enter) /* process enter for updates*/
    ED0A-ENTGL();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM250.GL-GEN-LEDGER-CD == " "
     && ED0AM250.EDI-TRDPT-ID == " ") /* clear screen*/
      set ED0AM250 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M250();
      set ED0AM250.EDI-TRDPT-ID-SRCH cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-GLCD = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;
    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR01.GL-GEN-LEDGER-CD = ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == " " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT] == " ")
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
      converseLib.validationFailed(1);
      ED0AS-DSPLY-M250();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

    /* iF EZEMNO NE 0                   /* invalid pf*/
      /* OR ed0am250.ED0AMMSG NE ' ';   /* invalid security*/
   /* EZEFLO;*/
   /* ND;*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M250();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M250();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM250.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM250.CATOAP;
    COMMAREA.CAITEM = ED0AM250.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM250.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* ***** menu options checked in flow  *******/


    /* -----------   end of process ed0a-glcd-------*/

end // end ED0A-GLCD

// main process
Function ED0A-INIT()
   /* **************************************************/
   /* ***  ed0a initialization process*/
   /* **************************************************/

  XSENTRY();

  XSSEGTR(); /* set segmented trans id*/

  ED0AS-INIT-REC(); /* initial records*/

  if (COMMAREA.CACHGFL != "Y"
   && COMMAREA.CAINQFL != "Y")
    XSPF4();
  end

  ED0AW01.ED0AWKEY = COMMAREA.CAUSERA;
  if (COMMAREA.CAITEM != " ")
    ED0AW01.ED0AWKEY = COMMAREA.CAITEM;
  end

  if (ED0AW01.ED0AWCID-CHAR is numeric)
    if (ED0AW01.ED0AWCID == 0)
      ED0AW01.ED0AWKEY = COMMAREA.CAUSERA;
    end
  else
    ED0AW01.ED0AWCID = 0;
    ED0AW01.ED0AWSID = 0;
  end

  COMMAREA.CAITEM = " ";
  COMMAREA.CAUSERA = " ";

  if (ED0AM210.KUCCOID > 0)
    ED0AW01.ED0AWFST = "Y";
  end

  if (ED0AM270.KUCCOID > 0
   && ED0AM270.KUSTOID > 0)
    ED0AW01.ED0AWFS1 = "Y";
  end

  ED0AM100.ED0AMDT = VGVar.currentShortGregorianDate;
  ED0AW01.ED0AWHDT = VGVar.currentShortGregorianDate;
  ED0AW01.ED0AWCCT = 19;
  if (ED0AW01.ED0AWCYR < 60)
    ED0AW01.ED0AWCCT = 20;
  end

  converseVar.commitOnConverse = 1;
  VGVar.handleHardIOErrors = 1;
  ED0AW01.ED0AWEAF = "Y";
  ED0AW01.ED0AWERR = "N";

  while (ED0AW01.ED0AWEAF == "Y")
    ED0A-TPOPT();
  end

  COMMAREA.CATOAP = COMMAREA.CAFROMAP;
  XSEXIT();

end // end ED0A-INIT

// page back - pf7
Function ED0A-PF7()
   /* **************************************/
   /* page back - pf7 for scrolling**/
   /* **************************************/

  ED0AWIDX = 1;

  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;
  while (ED0AWIDX <= 12 && ED0AW-CNT <= 600)
    /* ED0AS-EDITP-SEL;*/
    if (ED0AW-MAIN-SEL == "1")
      ED0AS-VALID-M210();
    end
    if (ED0AW-MAIN-SEL == "2")
      ED0AS-VALID-M220();
    end
    if (ED0AW-MAIN-SEL == "3")
      ED0AS-VALID-M230();
    end
    if (ED0AW-MAIN-SEL == "4")
      ED0AS-VALID-M240();
    end
    if (ED0AW-MAIN-SEL == "7")
      ED0AS-VALID-M270();
    end
    if (ED0AW-CNT > ED0AW-MAX)
      ED0AW-CNT = 601; /* end loop if no more rows*/
      ED0AWIDX = 13;
    end
    ED0AW-CNT = ED0AW-CNT + 1;
    ED0AWIDX = ED0AWIDX + 1;
  end

  ED0AW01.ED0AW-PAGE-INDEX = ED0AW01.ED0AW-PAGE-INDEX - 12;
  if (ED0AW01.ED0AW-PAGE-INDEX < 1) /* set internal top of page*/
    ED0AW-PAGE-INDEX = 1;
  end

  ED0AW01.ED0AW-PAGE-CNT = ED0AW01.ED0AW-PAGE-CNT - 1; /* page counter*/
  if (ED0AW-MAIN-SEL == "7")
    ED0AM270.ED0AM-PAGE-TOT = ED0AW01.ED0AW-PAGE-CNT;
  else
    ED0AM210.ED0AM-PAGE-TOT = ED0AW01.ED0AW-PAGE-CNT;
  end
  if (ED0AW-PAGE-INDEX == 1)
    converseLib.validationFailed(5);
  end

end // end ED0A-PF7

// page forward for trd prtnr
Function ED0A-PF8()
   /* *********************************************************/
   /* * ed0a-page-frwrd pf8 to display trading partner info*/
   /* *********************************************************/

  if (ED0AW01.ED0AW-CNT > 1)
    ED0AW01.ED0AW-PAGE-CNT = ED0AW01.ED0AW-PAGE-CNT - 1;
    move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;
    ED0AWIDX = 1;
    while (ED0AWIDX <= 12 && ED0AW-CNT <= 600)
      /* ED0AS-EDITP-SEL;*/
      if (ED0AW-MAIN-SEL == "1")
        ED0AS-VALID-M210();
      end
      if (ED0AW-MAIN-SEL == "2")
        ED0AS-VALID-M220();
      end
      if (ED0AW-MAIN-SEL == "3")
        ED0AS-VALID-M230();
      end
      if (ED0AW-MAIN-SEL == "4")
        ED0AS-VALID-M240();
      end
      if (ED0AW-MAIN-SEL == "7")
        ED0AS-VALID-M270();
      end
      ED0AW-CNT = ED0AW-CNT + 1;
      ED0AWIDX = ED0AWIDX + 1;
    end
    ED0AW-PAGE-INDEX = ED0AW-PAGE-INDEX + 12;
    if (ED0AW-PAGE-INDEX > ED0AW-MAX)
      ED0AW-PAGE-INDEX = ED0AW-PAGE-INDEX - 12;
    end
  end

end // end ED0A-PF8

// converse cust/tp screen
Function ED0A-TPCUS()
   /* -----------  before stage - ed0a-trdpt-cust*/

  if (ED0AW01.ED0AWFST == "Y")
    ED0AW01.ED0AWFST = "N";
  end

   /* set date*/
  ED0AM210.ED0AMDT = VGVar.currentShortGregorianDate;
  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                   /* map*/
    /* MOVE CUSTOMER NUMBER TO MAP*/

  if (ED0AW01.ED0AWCID > 0)
    ED0AM210.KUCCOID = ED0AW01.ED0AWCID;
    set ED0AM210.ED0AM-SEL[1] cursor;
  end

    /* MOVE TRADING PARTNER NUMBER TO MAP*/

  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM210.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID-QUERY;
  end
    /* no processing*/
  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM210.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM210.EDI-TRDPT-NM[ED0AWIDX] skip;
   /* ******************** TCS BEGIN **************************/
    set ED0AM210.ED0AM-ASN-REL-DAYS[ED0AWIDX] skip;
   /* ******************** TCS END ****************************/
    set ED0AM210.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM210.CU-CO-ID[ED0AWIDX] skip;
    if (ED0AM210.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM210.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y") /* edi user - allow updates*/
      set ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      set ED0AM210.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
   /* ******************** TCS BEGIN **************************/
      set ED0AM210.ED0AM-ASN-REL-DAYS[ED0AWIDX] initialAttributes;
   /* ******************** TCS END ****************************/
      set ED0AM210.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
      if (ED0AM210.CU-CO-ID[ED0AWIDX] <= 0) /* set row for add*/
        set ED0AM210.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM210.CU-CO-ID[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM210.ED0AM-SEL[1] cursor;
    converseLib.validationFailed(002);
  end
  converse ED0AM210 ;
   /* -----------------  ed0a-trdpt-cust ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM210.VAGen_EZEMSG = " ";
  ED0AM210.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM210.KUCCOID == 0 && 
  ED0AM210.EDI-TRDPT-ID-SRCH == "  ")
    ED0AW-KUCCOID = 0;
    ED0AW-EDI-TRDPT-ID = " ";
    ED0AW-EDI-TRDPT-ID-QUERY = " ";
  end


  if ((ED0AM210.KUCCOID is modified && 
  ED0AM210.KUCCOID > 0) || 
  (ED0AM210.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM210.EDI-TRDPT-ID-SRCH > " ") || 
  converseVar.eventKey is pa2)
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
   /* ******************tcs changes begin ****************************/
    set VEDTPR02 empty;
   /* SET VEDTPR01 EMPTY;*/
   /* ******************tcs changes end ******************************/
    ED0AW-PAGE-CNT = 0;
    ED0AW-PAGE-INDEX = 1;
    ED0AW-MAX = 0;
    ED0AW-SQLCODE = 0;
    ED0AW-EDI-TRDPT-ID = ED0AM210.EDI-TRDPT-ID-SRCH;
    ED0AW-KUCCOID = ED0AM210.KUCCOID;
    if ((ED0AM210.KUCCOID is modified && ED0AW-KUCCOID > 0) || 
    (ED0AM210.KUCCOID > 0 && converseVar.eventKey is pa2))
      ED0AW-KUCCOID = ED0AM210.KUCCOID;
   /* ****************************tcs changes begin*********************/
      VEDTPR02.CU-CO-ID = ED0AW-KUCCOID;
   /* MOVE ED0AW-KUCCOID TO VEDTPR01.CU-CO-ID;*/
   /* ****************************tcs changes end **********************/
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      ED0AS-GET-EDI-CO(); /* ; open trading partner cursor*/
    end
    if ((ED0AM210.EDI-TRDPT-ID-SRCH is modified && 
    ED0AW-EDI-TRDPT-ID != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM210.EDI-TRDPT-ID-SRCH;
      ED0AW-KUCCOID = 0;
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
   /* **********************tcs changes begin *************************/
      VEDTPR02.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
   /* MOVE ED0AW-EDI-TRDPT-ID-QUERY TO VEDTPR01.EDI-TRDPT-ID;*/
   /* **********************tcs changes end ***************************/
      ED0AW-EDI-TRDPT-ID = ED0AM210.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M210(); /* ;display map*/
    ED0AM-PAGE-NUM = 1;
    set ED0AM210.ED0AM-SEL[1] cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM210.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      converseLib.validationFailed(13);
      set ED0AM210.ED0AM-PAGE-NUM cursor, bold;
      return;
    else
      move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M210();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
      return;
    end
  end

  if (converseVar.eventKey is enter /* process enter for updates*/
   && ED0AM210.CATOAP == " ")      
    ED0A-ENTER();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM210.KUCCOID == 0
     && ED0AM210.EDI-TRDPT-ID == " ") /* clear screen*/
      set ED0AM210 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M210();
      set ED0AM210.KUCCOID cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-CUST = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;

   /* ********** TCS CHANGE BEGINS ************/
    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR02.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];
        VEDTPR02.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR02.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
   /* ********** TCS CHANGE ENDS   ************/
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == "  " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      ED0AW04-CU-CO-ID[ED0AW-CNT] == 0)
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
      converseLib.validationFailed(1);
      ED0AS-DSPLY-M210();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

    /* iF EZEMNO NE 0                   /* invalid pf*/
      /* OR ED0AM210.ED0AMMSG NE ' ';   /* invalid security*/
   /* EZEFLO;*/
   /* ND;*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M210();
    return;
  end

  /*  */
  /* blank page logic  *****/
  if (converseVar.eventKey is pf8 && 
  (ED0AW-CNT > ED0AW-MAX)
   && ED0AM210.EDI-TRDPT-ID[12] != "  ")
    ED0AS-BLNK-PAGE();
    ED0AS-DSPLY-M210();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M210();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM210.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM210.CATOAP;
    COMMAREA.CAITEM = ED0AM210.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM210.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* ***** menu options checked in flow  *******/


    /* -----------   end of process ed0a-trdpt-cust-------*/

end // end ED0A-TPCUS

// converse customer menu
Function ED0A-TPOPT()
   /* -----------  before stage - ed0a-trdpt-opt*/

  ED0AM100.ED0AM-SEL = " ";
  set ED0AM210 initial;
  set ED0AM220 initial;
  set ED0AM230 initial;
  set ED0AM240 initial;
  set ED0AM250 initial;
  set ED0AM260 initial;
  set ED0AM270 initial;
  set ED0AW01 empty;
  set ED0AW04 empty;
  set ED0AW03 empty;
  ED0AW-TRDPT-FCTY = "N";
  ED0AW-TRDPT-CUST = "N";
  ED0AW-TRDPT-CUTK = "N";
  ED0AW-TRDPT-CARR = "N";
  ED0AW-TRDPT-XWH = "N";
  ED0AW-TRDPT-GLCD = "N";
  ED0AW-TRDPT-DCNSL = "N";
  ED0AW01.ED0AWERR = "N";
  ED0AW01.ED0AWEAF = "Y";
  ED0AW01.ED0AWCID = 0;
  ED0AW01.ED0AWSID = 0;
  ED0AM100.ED0AMDT = VGVar.currentShortGregorianDate;

  converse ED0AM100 ;
   /* -----------------  ed0a010  -----------------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/

  ED0AM100.VAGen_EZEMSG = " ";
  ED0AM100.ED0AMMSG = " ";

  if (converseVar.eventKey is enter)
    if (ED0AM100.ED0AM-SEL == " ")
      converseLib.validationFailed(14);
    else
      ED0AW01.ED0AW-MAIN-SEL = ED0AM100.ED0AM-SEL;
      if (ED0AM100.ED0AM-SEL > " " /* ;*/
       && ED0AM100.ED0AM-SEL <= "7")
        if (ED0AM100.ED0AM-SEL == "1") /* ;*/
          ED0AW-TRDPT-CUST = "Y";
          while (ED0AW-TRDPT-CUST == "Y")
            ED0A-TPCUS();
          end
        end
        if (ED0AM100.ED0AM-SEL == "2") /* ;*/
          ED0AW-TRDPT-FCTY = "Y";
          while (ED0AW-TRDPT-FCTY == "Y")
            ED0A-FCTY();
          end
        end
        if (ED0AM100.ED0AM-SEL == "3") /* ;*/
          ED0AW-TRDPT-CUTK = "Y";
          while (ED0AW-TRDPT-CUTK == "Y")
            ED0A-CUTK();
          end
        end
        if (ED0AM100.ED0AM-SEL == "4") /* ;*/
          ED0AW-TRDPT-CARR = "Y";
          while (ED0AW-TRDPT-CARR == "Y")
            ED0A-CARR();
          end
        end
        if (ED0AM100.ED0AM-SEL == "5") /* ;*/
          ED0AW-TRDPT-GLCD = "Y";
          while (ED0AW-TRDPT-GLCD == "Y")
            ED0A-GLCD();
          end
        end
        if (ED0AM100.ED0AM-SEL == "6") /* ;*/
          ED0AW-TRDPT-XWH = "Y";
          while (ED0AW-TRDPT-XWH == "Y")
            ED0A-XWH();
          end
        end
        if (ED0AM100.ED0AM-SEL == "7") /* ;*/
          ED0AW-TRDPT-DCNSL = "Y";
          while (ED0AW-TRDPT-DCNSL == "Y")
            ED0A-DCNSL();
          end
        end
      else
        converseLib.validationFailed(15);
      end
    end
  end

  if (converseVar.eventKey is pf3 && 
  (ED0AW-TRDPT-CUST == "N" && 
  ED0AW-TRDPT-FCTY == "N" && 
  ED0AW-TRDPT-CUTK == "N" && 
  ED0AW-TRDPT-CARR == "N" && 
  ED0AW-TRDPT-GLCD == "N" && 
  ED0AW-TRDPT-XWH == "N" && 
  ED0AW-TRDPT-DCNSL == "N"))
    COMMAREA.CATOAP = COMMAREA.CAFROMAP; /* xfer to main chg menu*/
    XSEXIT();
    ED0AM100.ED0AMMSG = COMMAREA.CAMSG; /* security error*/
  end
   /* --------   check for fastpath  --------------*/

  if (ED0AM100.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM100.CATOAP;
    COMMAREA.CAITEM = ED0AM100.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM100.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

  if (converseVar.eventKey is pf4) /* main men*/
    XSPF4();
    ED0AW01.ED0AWMSG = COMMAREA.CAMSG;
    return;
  end
    /* ***** menu options checked in flow  *******/

    /* -----------   end of process ed0a-trdpt-opt-------*/

end // end ED0A-TPOPT

// converse tran screen
Function ED0A-TPTRN()
   /* --------------------------------------------------------------*/
   /* -----------  before stage - ed0a3-tp-trn-sel------------------*/
   /* --------------------------------------------------------------*/

  ED0AW-TRN-SQLCODE = 0; /* set tran sql code to 0*/

  ED0AM300.ED0AMDT = VGVar.currentShortGregorianDate; /* set date for map*/

  VETPXM01.EDI-TRDPT-NBR = ED0AW-EDI-TRDPT-NBR; /* edi-trading-partner number*/
  move ED0AW-EDI-TRDPT-ID to ED0AM3-EDI-TRDPT-ID withV60Compat; /* edi-trading-partner id*/
  move ED0AW-EDI-TRDPT-NM to ED0AM3-EDI-TRDPT-NM withV60Compat; /* edi-trading-partner name*/

  ED0AS3-GET-TRN(); /* /open transaction cursor*/

  ED0AW01.ED0AW-IDX3 = 1; /* set index to one*/

  while (ED0AW-IDX3 <= 12 /* load working storage*/
   && ED0AWERR == "N"  /* no errors on screen*/
   && ED0AW3-UPDT == "N") /* not ready to update*/
    if (ED0AW-TRN-SQLCODE == 0) /* tran sql = 0 , more trans*/
      ED0AS3-NEXT-TRN(); /* fetch transactions*/
      if (ED0AW-TRN-SQLCODE == 0)
        ED0AS3-TRN-INFO(); /* load info to working storage*/
      end
    end
    ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] = ED0AW03-EDI-TRN-ABRV[ED0AW-IDX3];
    ED0AM300.ED0AM3-EDI-TRN-DESC[ED0AW-IDX3] = ED0AW03-EDI-TRN-DESC[ED0AW-IDX3];
    ED0AM300.ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3] = ED0AW03-EDI-TRN-STAT-CD[ED0AW-IDX3];
    ED0AM300.ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] = ED0AW03-EDI-TRN-BOUND-CD[ED0AW-IDX3];
    ED0AM300.ED0AM3-EDI-TRN-STAT-DESC[ED0AW-IDX3] = ED0AW03-EDI-TRN-STAT-DESC[ED0AW-IDX3];
    if (COMMAREA.CACHGFL == "Y") /* non edi user - protect all fields*/
      set ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] initialAttributes;
      set ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] initialAttributes;
      if (ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] != " ")
        set ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] skip;
        set ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] skip;
      end
      set ED0AM3-EDI-TRN-DESC[ED0AW-IDX3] initialAttributes;
      set ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3] initialAttributes;
      set ED0AM3-EDI-TRN-STAT-DESC[ED0AW-IDX3] initialAttributes;
      set ED0AM3-SEL[ED0AW-IDX3] initialAttributes;
      if (ED0AM300.ED0AM3-SEL[ED0AW-IDX3] != " ")
        set ED0AM300.ED0AM3-SEL[ED0AW-IDX3] skip;
      end
    else
      set ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] skip;
      set ED0AM3-EDI-TRN-DESC[ED0AW-IDX3] skip;
      set ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3] skip;
      set ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] skip;
      set ED0AM3-EDI-TRN-STAT-DESC[ED0AW-IDX3] skip;
      set ED0AM3-SEL[ED0AW-IDX3] skip;
      set ED0AM3-EDI-TRDPT-ID cursor;
    end
    ED0AW-IDX3 = ED0AW-IDX3 + 1;
    converseLib.validationFailed(4); /* END OF LIST NOTICE*/
  end

  if (ED0AW-PAGE-MAP3 == "Y")
    converseLib.clearScreen();
    
    ED0AW-PAGE-MAP3 = "N";
  end


  converse ED0AM300 ;
   /* -----------------  ed0a3-tp-trn-sel ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/

  ED0AM300.VAGen_EZEMSG = " ";
  ED0AM300.ED0AMMSG = " ";


   /* --------------- check aid byte ---------------------*/

  ED0AM300.ED0AMMSG = ED0AW01.ED0AWMSG;

  if (converseVar.eventKey is pf3)
    ED0AW-TRN-MAP3 = "R"; /* exit transaction screen*/
    return;
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW3-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /**/
                                  /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-IDX3 = 1;
    while (ED0AW01.ED0AW-IDX3 <= 12)
      if (ED0AM3-SEL[ED0AW-IDX3] == "A") /* add transaction type*/
        ED0AS3-EDI-TRN-ADD();
      end
      if (ED0AM3-SEL[ED0AW-IDX3] == "D") /* delete transaction type*/
        ED0AS3-EDI-TRN-DEL();
      end
      if (ED0AM3-SEL[ED0AW-IDX3] == "C") /* delete transaction type*/
        ED0AS3-EDI-TRN-CHG();
      end
      if (ED0AM3-SEL[ED0AW-IDX3] != " ")
        ED0AW03-SEL[ED0AW-IDX3] = "X";
        ED0AM3-SEL[ED0AW-IDX3] = "X";
      end
      ED0AW01.ED0AW-IDX3 = ED0AW01.ED0AW-IDX3 + 1;
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW3-UPDT = "N";
      converseLib.validationFailed(1);
      return;
    end
  end

  if (converseVar.eventKey is enter)
    if (COMMAREA.CACHGFL == "Y") /* edi folk - update allowed*/
      ED0AWERR = "N";
      ED0AW-IDX3 = 1;
      ED0AW01.ED0AW-EDI-DSASN-FL1 = "N"; /* flag identifies DS process*/
      ED0AW01.ED0AW-EDI-DSASN-FL2 = "N"; /* flag identifies DS process*/
      ED0AW01.ED0AW-EDI-DSASN-FL3 = "N"; /* flag identifies DS process*/
      while (ED0AW-IDX3 <= 12)
        ED0AS3-VALID-SCRN();
        ED0AW-IDX3 = ED0AW-IDX3 + 1;
      end
      if (ED0AWERR == "N")
        ED0AW3-UPDT = "Y";
        converseLib.validationFailed(002);
        set ED0AM300.ED0AM3-EDI-TRDPT-ID cursor;
        return;
      end
    else
   /* ***********TCS CHANGES BEGIN********************/
      converseLib.validationFailed(003);
   /* ***********TCS CHANGES END**********************/
      return;
    end
  end

   /* -------------- refresh screen ----------------*/

  if (converseVar.eventKey is pa2)
    ED0AWERR = "N"; /* set error flag = no*/
    ED0AW3-UPDT = "N"; /* set update flag = no*/
    set ED0AM300 initial; /* clear map*/
    set ED0AW03 empty; /* empty working storage*/
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM300.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM300.CATOAP;
    COMMAREA.CAITEM = ED0AM300.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM300.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* -----------   end of process ed0a3-tp-trn-sel-------*/

end // end ED0A-TPTRN

// converse warehouse screen
Function ED0A-XWH()
   /* ******************************************************************/
   /* -----------  before stage - ed0a-carr*/
   /* ******************************************************************/

  if (ED0AW01.ED0AWFST == "Y")
    ED0AW01.ED0AWFST = "N";
  end

  ED0AM260.ED0AMDT = VGVar.currentShortGregorianDate; /* move date*/

  ED0AW-TRN-MAP3 = "N"; /* set map flag to n - transfer to trn*/
                                  /* map*/
  if (ED0AW-EDI-TRDPT-ID-QUERY > " ")
    ED0AM260.EDI-TRDPT-ID-SRCH = ED0AW-EDI-TRDPT-ID-QUERY;
  end

  ED0AW01.ED0AWIDX = 1; /* set index to one*/
  while (ED0AWIDX <= 12 && ED0AWERR == "N") /* set fields for update*/
    set ED0AM260.EDI-TRDPT-ID[ED0AWIDX] skip;
    set ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX] skip;
    set ED0AM260.EDI-TRDPT-NM[ED0AWIDX] skip;
    set ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] skip;
    set ED0AM260.XWH-WHSE-CD[ED0AWIDX] skip;
    if (ED0AM260.ED0AM-SEL[ED0AWIDX] == " ")
      set ED0AM260.ED0AM-SEL[ED0AWIDX] initialAttributes;
    end
    if (COMMAREA.CACHGFL == "Y")
      if (ED0AM260.XWH-WHSE-CD[ED0AWIDX] == " ")
                                   /* /set field for add for edi user*/
        set ED0AM260.EDI-TRDPT-ID[ED0AWIDX] initialAttributes;
        set ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM260.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
        set ED0AM260.XWH-WHSE-CD[ED0AWIDX] initialAttributes;
      else /* /*/
        set ED0AM260.EDI-TRDPT-NM[ED0AWIDX] initialAttributes;
        set ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX] initialAttributes;
        set ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] initialAttributes;
      end
    end
    ED0AWIDX = ED0AWIDX + 1;
  end

  /* *******************************************************/
  /* display ok message for update            **/
  /* *******************************************************/
  if (ED0AW01.ED0AWERR == "N" && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y")
    set ED0AM260.ED0AM-SEL[1] cursor;
   /* **********tcs changes begin**************************/
   /* MOVE 467 TO EZEMNO;*/
    converseLib.validationFailed(002);
   /* **********tcs changes   end**************************/
  end
  converse ED0AM260 ;
   /* -----------------  ed0a-carr ----------------------*/
    /* after stage:  check aid byte, process accordingly     **/
   /* ---------------------------------------------------------*/

   /* ------------- clear message flds ------------------*/
  ED0AM260.VAGen_EZEMSG = " ";
  ED0AM260.ED0AMMSG = " ";

  if (converseVar.eventKey is pa2 && 
  ED0AM260.ED0AM-XWH-WHSE-CD == "  " && 
  ED0AM260.EDI-TRDPT-ID-SRCH == "  ")
    ED0AW-XWH-WHSE-CD = " ";
    ED0AW-EDI-TRDPT-ID = " ";
    ED0AW-EDI-TRDPT-ID-QUERY = " ";
    set ED0AM260 initial; /* clear map*/
  end


  if ((ED0AM260.ED0AM-XWH-WHSE-CD is modified && 
  ED0AM260.ED0AM-XWH-WHSE-CD > " ") || 
  (ED0AM260.EDI-TRDPT-ID-SRCH is modified && 
  ED0AM260.EDI-TRDPT-ID-SRCH > " ")
   || converseVar.eventKey is pa2)
    set ED0AW04 empty; /* ;EMPTY WORKING STORAGE*/
    set VEDTPR01 empty;
    ED0AW-SQLCODE = 0;
    ED0AW-EDI-TRDPT-ID = ED0AM260.EDI-TRDPT-ID-SRCH;
    if ((ED0AM260.ED0AM-XWH-WHSE-CD is modified && 
    ED0AM260.ED0AM-XWH-WHSE-CD > " "))
      ED0AW-EDI-TRDPT-ID = " ";
      ED0AW-EDI-TRDPT-ID-QUERY = " ";
      VEDTPR01.XWH-WHSE-CD = ED0AM260.ED0AM-XWH-WHSE-CD;
      ED0AW-XWH-WHSE-CD = ED0AM260.ED0AM-XWH-WHSE-CD;
      ED0AS-GET-EDI-XWH();
    end
    if ((ED0AM260.EDI-TRDPT-ID-SRCH is modified && 
    ED0AW-EDI-TRDPT-ID != "  ") || 
    (ED0AW-EDI-TRDPT-ID != "  " && converseVar.eventKey is pa2))
      ED0AW-EDI-TRDPT-ID-QUERY = ED0AM260.EDI-TRDPT-ID-SRCH;
      ED0AW-XWH-WHSE-CD = " ";
      ED0AWIDX = 1; /* edit trading partner for search*/
      while (ED0AWIDX <= 15)
        if (ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] == " ")
          ED0AW-EDI-TRDPT-ID-ITEM[ED0AWIDX] = "_";
        end
        ED0AWIDX = ED0AWIDX + 1;
      end
      VEDTPR01.EDI-TRDPT-ID = ED0AW-EDI-TRDPT-ID-QUERY;
      ED0AW-EDI-TRDPT-ID = ED0AM260.EDI-TRDPT-ID-SRCH;
      ED0AS-GET-EDI-TP(); /* open trading partner cursor*/
    end
    ED0AS-LD-WRK-STO(); /* ;LOAD WORKING STORAGE*/
    ED0AS-DSPLY-M260(); /* ;display map*/
    ED0AM-PAGE-NUM = 1;
    set ED0AM260.EDI-TRDPT-ID-SRCH cursor;
    return;
  end

  if (converseVar.eventKey is enter && 
  ED0AM260.ED0AM-PAGE-NUM is modified) /* set page if entered*/
    move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
    if (ED0AW-PAGE-CNT > ED0AW-PAGE-TOT)
      ED0AWERR = "Y";
      ED0AMMSG = "PAGE NUMBER MUST BE LESS THAN TOTAL";
      set ED0AM260.ED0AM-PAGE-NUM cursor, bold;
      return;
    else
      move ED0AM-PAGE-NUM to ED0AW-PAGE-CNT withV60Compat;
      ED0AW-PAGE-CNT = ED0AW-PAGE-CNT - 1;
      if (ED0AW-PAGE-CNT == 0)
        ED0AW-PAGE-INDEX = 1;
      else
        ED0AW-PAGE-INDEX = (ED0AW-PAGE-CNT * 12) + 1;
      end
      ED0AS-DSPLY-M260();
      ED0AW-PAGE-CHG = "Y"; /* set page if entered*/
    end
  end

  if (converseVar.eventKey is enter) /* process enter for updates*/
    ED0A-ENTWH();
  end

  if (converseVar.eventKey is pa2) /* process for clear/reset*/
    ED0AW01.ED0AWERR = "Y";
    if (ED0AM260.XWH-WHSE-CD == " "
     && ED0AM260.EDI-TRDPT-ID == " ") /* clear screen*/
      set ED0AM260 initial;
      set ED0AW04 empty;
      ED0AW-CNT = 1;
      ED0AW-PAGE-INDEX = 1;
      ED0AW-PAGE-CNT = 1;
      ED0AS-DSPLY-M260();
      set ED0AM260.EDI-TRDPT-ID-SRCH cursor;
    end
    return;
  end

  if (converseVar.eventKey is pf3 && ED0AW-TRN-MAP3 != "R")
    ED0AW-TRDPT-XWH = "R";
    return;
  end

  ED0AW-TRN-MAP3 = "N"; /* reset return flag*/

  if (converseVar.eventKey is pf12 && ED0AW01.ED0AWERR == "N"
   && ED0AW-UPDT == "Y"
   && COMMAREA.CACHGFL == "Y") /* only edi users*/
    XX0XS01(); /* change time and date*/
    ED0AW01.ED0AW-CNT = 1;
    while (ED0AW01.ED0AW-CNT <= 600)
      if (ED0AW04-SEL[ED0AW-CNT] == "A") /* add trading partner*/
        VEDTPR01.XWH-WHSE-CD = ED0AW04-XWH-WHSE-CD[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
        ED0AS-EDITP-ADD();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "C") /* chng trading partner*/
        ED0AS-EDITP-CHNG();
      end
      if (ED0AW04-SEL[ED0AW-CNT] == "D") /* delete trading partner*/
        ED0AS-EDITP-DEL();
      end
      if (ED0AW04-SEL[ED0AW-CNT] != " ")
        ED0AW04-SEL[ED0AW-CNT] = "X";
      end
      ED0AW01.ED0AW-CNT = ED0AW01.ED0AW-CNT + 1;
      if (ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] == " " && 
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] == "  " && 
      ED0AW04-XWH-WHSE-CD[ED0AW-CNT] == " ")
        ED0AW01.ED0AW-CNT = 601;
      end
    end
    if (ED0AW01.ED0AWERR == "N")
      ED0AW-UPDT = "N";
   /* *******************tcs changes begin*************************/
      converseLib.validationFailed(1);
   /* MOVE 29 TO EZEMNO;*/
   /* *******************tcs changes end***************************/
      ED0AS-DSPLY-M260();
      return;
    end
  end

  ED0AS-FPATH-PFK(); /* check fastpath and pf keys*/

    /* iF EZEMNO NE 0                   /* invalid pf*/
      /* OR ed0am260.ED0AMMSG NE ' ';   /* invalid security*/
   /* EZEFLO;*/
   /* ND;*/

  if (converseVar.eventKey is pf7)
    ED0A-PF7();
    ED0AS-DSPLY-M260();
    return;
  end

  if (converseVar.eventKey is pf8)
    ED0A-PF8();
    ED0AS-DSPLY-M260();
    return;
  end

   /* --------   check for fastpath  --------------*/

  if (ED0AM260.CATOAP > " " /* fastpath request*/
   && converseVar.eventKey is enter)
    COMMAREA.CATOAP = ED0AM260.CATOAP;
    COMMAREA.CAITEM = ED0AM260.CAITEM;
    XSEXIT(); /* check security/xfer*/
    ED0AM260.ED0AMMSG = COMMAREA.CAMSG; /* security failed*/
    COMMAREA.CATOAP = " ";
    exit stack;
  end

    /* ***** menu options checked in flow  *******/


    /* -----------   end of process ed0a-carr-------*/

end // end ED0A-XWH

// blank screen for adds
Function ED0AS-BLNK-PAGE()
  /* ****************************************************************/
  /* ed0as-blnk-page                               **/
  /* ****************************************************************/

  if (ED0AW-MAIN-SEL == "7")

    ED0AM270.KUCCOID = ED0AW-KUCCOID;
    ED0AM270.KUSTOID = ED0AW-KUSTOID;

    ED0AW-PAGE-TOT = ED0AW-PAGE-TOT + 1;
    ED0AW-PAGE-CNT = ED0AW-PAGE-CNT + 1;

    ED0AM270.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
    ED0AM270.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

    ED0AW-MAX = ED0AW-MAX + 12;
    ED0AW-PAGE-INDEX = ED0AW-PAGE-INDEX + 12;

    converseLib.validationFailed(12);
  else
    ED0AM210.KUCCOID = ED0AW-KUCCOID;

    ED0AW-PAGE-TOT = ED0AW-PAGE-TOT + 1;
    ED0AW-PAGE-CNT = ED0AW-PAGE-CNT + 1;

    ED0AM210.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
    ED0AM210.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

    ED0AW-MAX = ED0AW-MAX + 12;
    ED0AW-PAGE-INDEX = ED0AW-PAGE-INDEX + 12;

    converseLib.validationFailed(12);
  end
end // end ED0AS-BLNK-PAGE

// display screen
Function ED0AS-DSPLY-M210()
  /* ****************************************************************/
  /* DISPLAY SCREEN - ED0AM210                     **/
  /* ****************************************************************/

  set ED0AM210 initial; /* clear map*/

  ED0AM210.KUCCOID = ED0AW-KUCCOID;


  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  /* ******   added to display blank page **********/

  if (ED0AW-PAGE-INDEX != 0 && converseVar.validationMsgNum == 6 && converseVar.eventKey is pf8 && 
  ED0AW-PAGE-INDEX == ED0AW-MAX)
    ED0AW-PAGE-TOT = ED0AW-PAGE-TOT + 1;
    return;
  end

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM210.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM210.CU-CO-ID[ED0AWIDX] = ED0AW04-CU-CO-ID[ED0AW-CNT];
    ED0AM210.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
   /* ******************* TCS BEGINS ************************/

    ED0AM210.ED0AM-ASN-REL-DAYS[ED0AWIDX] = ED0AW04.ED0AW04-ASN-REL-DAYS[ED0AW-CNT];

   /* ******************* TCS ENDS   ************************/
    ED0AM210.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM210.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM210.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM210.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M210

// display factory screen
Function ED0AS-DSPLY-M220()
  /* ****************************************************************/
  /* ed0as-dsply-m220                            **/
  /* DISPLAY SCREEN - ed0am220                     **/
  /* ****************************************************************/

  set ED0AM220 initial; /* clear map*/

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM220.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM220.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM220.FY-FCTY-CD[ED0AWIDX] = ED0AW04.ED0AW04-FY-FCTY-CD[ED0AW-CNT];
    ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM220.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM220.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM220.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M220

// display ticketing screen
Function ED0AS-DSPLY-M230()
  /* ****************************************************************/
  /* DISPLAY SCREEN - ed0am230                     **/
  /* ****************************************************************/

  set ED0AM230 initial; /* clear map*/

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM230.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM230.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] = ED0AW04.ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT];
    ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM230.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM230.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM230.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M230

// display carrier screen
Function ED0AS-DSPLY-M240()
  /* ****************************************************************/
  /* DISPLAY SCREEN - ed0am240                     **/
  /* ****************************************************************/

  set ED0AM240 initial; /* clear map*/

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM240.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM240.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM240.TF-CARR-CD[ED0AWIDX] = ED0AW04.ED0AW04-TF-CARR-CD[ED0AW-CNT];
    ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AM240.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM240.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM240.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM240.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M240

// display gl-bank screen
Function ED0AS-DSPLY-M250()
  /* ****************************************************************/
  /* DISPLAY SCREEN - ed0am250                     **/
  /* ****************************************************************/

  set ED0AM250 initial; /* clear map*/

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM250.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM250.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] = ED0AW04.ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT];
    ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM250.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM250.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM250.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M250

// display warehouse screen
Function ED0AS-DSPLY-M260()
  /* ****************************************************************/
  /* DISPLAY SCREEN - ed0am260                     **/
  /* ****************************************************************/

  set ED0AM260 initial; /* clear map*/

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM260.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM260.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM260.XWH-WHSE-CD[ED0AWIDX] = ED0AW04.ED0AW04-XWH-WHSE-CD[ED0AW-CNT];
    ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM260.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM260.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM260.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M260

// display screen
Function ED0AS-DSPLY-M270()
  /* ****************************************************************/
  /* DISPLAY SCREEN - ED0AM270                     **/
  /* ****************************************************************/

  set ED0AM270 initial; /* clear map*/

  ED0AM270.KUCCOID = ED0AW-KUCCOID;
  ED0AM270.KUSTOID = ED0AW-KUSTOID;

  if (ED0AW-PAGE-INDEX == 0)
    ED0AW-PAGE-INDEX = 1;
  end

  if (ED0AW-MAX == 0)
    ED0AW-MAX = 12;
  end

  ED0AWIDX = 1;
  move ED0AW-PAGE-INDEX to ED0AW-CNT withV60Compat;

  /* ******   added to display blank page **********/

  if (ED0AW-PAGE-INDEX != 0 && converseVar.validationMsgNum == 6 && converseVar.eventKey is pf8 && 
  ED0AW-PAGE-INDEX == ED0AW-MAX)
    ED0AW-PAGE-TOT = ED0AW-PAGE-TOT + 1;
    return;
  end

  while (ED0AWIDX <= 12 && ED0AW-CNT <= ED0AW-MAX)
    ED0AM270.ED0AM-SEL[ED0AWIDX] = ED0AW04-SEL[ED0AW-CNT];
    ED0AM270.CU-CO-ID[ED0AWIDX] = ED0AW04-CU-CO-ID[ED0AW-CNT];
    ED0AM270.CU-STOR-ID[ED0AWIDX] = ED0AW04-CU-STOR-ID[ED0AW-CNT];
    ED0AM270.EDI-TRDPT-NM[ED0AWIDX] = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
    ED0AM270.ED0AM-ASN-REL-DAYS[ED0AWIDX] = ED0AW04.ED0AW04-ASN-REL-DAYS[ED0AW-CNT];
    ED0AM270.EDI-TRDPT-ABRV[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    ED0AM270.EDI-TRDPT-ID[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX] = ED0AW04.ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    ED0AWIDX = ED0AWIDX + 1;
    ED0AW-CNT = ED0AW-CNT + 1;
  end

  ED0AW-PAGE-TOT = ED0AW-MAX / 12; /* set page total*/
  ED0AW-PAGE-TOT = ED0AW-PAGE-TOT * 12;
  if (ED0AW-PAGE-TOT != ED0AW-MAX)
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12) + 1;
  else
    ED0AW-PAGE-TOT = (ED0AW-PAGE-TOT / 12);
  end

  if (ED0AW-CNT > ED0AW-MAX && converseVar.validationMsgNum == 0)
    converseLib.validationFailed(6); /* end of record*/
  end

  if (ED0AW-MAX == 0)
    converseLib.validationFailed(7); /* no records found*/
  end

   /* display page tot = 1*/

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end
  ED0AM270.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;

  ED0AW-PAGE-CNT = (ED0AW-PAGE-INDEX / 12) + 1;

  ED0AM270.ED0AM-PAGE-NUM = ED0AW-PAGE-CNT;
end // end ED0AS-DSPLY-M270

// add editp
Function ED0AS-EDITP-ADD()

  ED0AS-EDITP-SEL();

  if (SQLCA.VAGen_SQLCODE == 0)
   /* **********************tcs changes begin **********************/
   /* MOVE 194 TO EZEMNO;*/
    converseLib.validationFailed(10);
   /* **********************tcs changes end*************************/
    ED0AW01.ED0AWERR = "Y";
    return;
  end

     /* check to see if a trd partner row exists for this company and*/
             /* trading partner id*/
  VEDTPR01.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];

  if (ED0AW-MAIN-SEL == "1")
    VEDTPR02.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];

    /* ************** TCS begin *********/
    VEDTPR02.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
    /* CALL VEDTPR02 'U1',SQLCA,VETPXM01,VEDTPR02 (NOMAPS,NONCSP;*/
    SQLCA.VAGen_SQLCODE = 100;
    /* ************** TCS end  *********/

    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
    /* ************** TCS begin *********/
    /* MOVE 194 TO EZEMNO;*/
        converseLib.validationFailed(10);
    /* ************** TCS end  *********/
        ED0AW01.ED0AWERR = "Y";
        ED0AW01.ED0AW-UPDT = "N";
        return;
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOCAT = "SELE";
        TA1REC.TA1FUNC = "SELE";
        TA1REC.TA1PGMNM = "EDITP-ADD";
        TA1REC.TA1DBASE = "DEDI ";
        TA1REC.TA1TBLVU = "VEDTPR02";
        TA1REC.TA1TBLKE = VEDTPR02.EDI-TRDPT-ID;
        TA1REC.TA1LOC = "SELECT EDI TP KEYS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end


     /* check to see if a trd partner row exists for this factory and*/
             /* trading partner id*/
  if (ED0AW-MAIN-SEL == "2")
    VEDTPR01.FY-FCTY-CD = ED0AW04-FY-FCTY-CD[ED0AW-CNT];

    call "ED1000" ("U2", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
   /* ******************tcs changes begin ******************/
   /* MOVE 194 TO EZEMNO;*/
        converseLib.validationFailed(10);
   /* ******************tcs changes end*********************/
        ED0AW01.ED0AWERR = "Y";
        ED0AW01.ED0AW-UPDT = "N";
        return;
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOCAT = "SELE";
        TA1REC.TA1FUNC = "SELE";
        TA1REC.TA1PGMNM = "EDITP-ADD";
        TA1REC.TA1DBASE = "DEDI ";
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
        TA1REC.TA1LOC = "SELECT EDI TP KEYS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end

                         /* check-cust-tick-supplier*/

  if (ED0AW-MAIN-SEL == "3")
    VEDTPR01.TI-CUTK-SPLR-CD = ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT];

    call "ED1000" ("U3", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
   /* ************************tcs changes begin ********************/
   /* MOVE 194 TO EZEMNO;*/
        converseLib.validationFailed(10);
   /* ************************tcs changes   end ********************/
        ED0AW01.ED0AWERR = "Y";
        ED0AW01.ED0AW-UPDT = "N";
        return;
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOCAT = "SELE";
        TA1REC.TA1FUNC = "SELE";
        TA1REC.TA1PGMNM = "EDITP-ADD";
        TA1REC.TA1DBASE = "DEDI ";
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
        TA1REC.TA1LOC = "SELECT EDI TP KEYS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end

                         /* check-carrier*/

  if (ED0AW-MAIN-SEL == "4")
    VEDTPR01.TF-CARR-CD = ED0AW04-TF-CARR-CD[ED0AW-CNT];

    call "ED1000" ("U4", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
   /* ************************tcs changes begin ******************/
   /* MOVE 194 TO EZEMNO;*/
        converseLib.validationFailed(10);
   /* ************************tcs changes   end ******************/
        ED0AW01.ED0AWERR = "Y";
        ED0AW01.ED0AW-UPDT = "N";
        return;
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOCAT = "SELE";
        TA1REC.TA1FUNC = "SELE";
        TA1REC.TA1PGMNM = "EDITP-ADD";
        TA1REC.TA1DBASE = "DEDI ";
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
        TA1REC.TA1LOC = "SELECT EDI TP KEYS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end

                         /* check-carrier*/

  if (ED0AW-MAIN-SEL == "5")
    VEDTPR01.GL-GEN-LEDGER-CD = ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT];

    call "ED1000" ("U5", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
   /* ************************tcs changes begin *************/
   /* MOVE 194 TO EZEMNO;*/
        converseLib.validationFailed(10);
   /* ************************tcs changes begin *************/
        ED0AW01.ED0AWERR = "Y";
        ED0AW01.ED0AW-UPDT = "N";
        return;
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOCAT = "SELE";
        TA1REC.TA1FUNC = "SELE";
        TA1REC.TA1PGMNM = "EDITP-ADD";
        TA1REC.TA1DBASE = "DEDI ";
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
        TA1REC.TA1LOC = "SELECT EDI TP KEYS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end

                         /* check-carrier*/

  if (ED0AW-MAIN-SEL == "6")
    VEDTPR01.XWH-WHSE-CD = ED0AW04-XWH-WHSE-CD[ED0AW-CNT];

    call "ED1000" ("U6", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 100)
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 0)
   /* ************************tcs changes begin *************/
   /* MOVE 194 TO EZEMNO;*/
        converseLib.validationFailed(10);
   /* ************************tcs changes begin *************/
        ED0AW01.ED0AWERR = "Y";
        ED0AW01.ED0AW-UPDT = "N";
        return;
      else
        VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
        VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
        sysLib.rollback();
        VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
        
        TA1REC.TA1TYPE = "DB2";
        TA1REC.TA1LOCAT = "SELE";
        TA1REC.TA1FUNC = "SELE";
        TA1REC.TA1PGMNM = "EDITP-ADD";
        TA1REC.TA1DBASE = "DEDI ";
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
        TA1REC.TA1LOC = "SELECT EDI TP KEYS";
        call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
        XSPF4();
      end
    end
  end

  if (ED0AW-MAIN-SEL == "7")
    VEDTPR03.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];
    VEDTPR03.CU-STOR-ID = ED0AW04-CU-STOR-ID[ED0AW-CNT];
    VEDTPR03.EDI-TRDPT-ID = ED0AW04-EDI-TRDPT-ID[ED0AW-CNT];
  end

  /* get next trading partner number from dedi.vedctr01*/

  call "VEDCTR01" ("SU", SQLCA, VEDCTR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "ADD ";
    TA1REC.TA1PGMNM = "ED0AS-ADD-EDITP";
    TA1REC.TA1DBASE = "DEDI ";
    TA1REC.TA1TBLVU = "VEDCTR01";
    TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
    TA1REC.TA1LOC = "GET EDI TP KEY ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

   /* ********************TCS BEGIN *******************/
  if (ED0AW-MAIN-SEL == "1")
    VEDTPR02.XXX-STAT = "A";
    VEDTPR02.ZZ-SDT = XX0XW01.XX0XWDAT;
    VEDTPR02.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
    VEDTPR02.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
    VEDTPR02.ZZ-CHNG-CNT = 0;

    VEDTPR02.ASN-REL-DAYS = ED0AW04-ASN-REL-DAYS[ED0AW-CNT];
    VEDTPR02.EDI-TRDPT-NBR = VEDCTR01.EDI-NXT-TRDPT-NBR;
    VEDTPR02.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
    VEDTPR02.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];
    VEDTPR02.TI-CUTK-SPLR-CD = ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT];
    VEDTPR02.FY-FCTY-CD = ED0AW04-FY-FCTY-CD[ED0AW-CNT];
    VEDTPR02.TF-CARR-CD = ED0AW04-TF-CARR-CD[ED0AW-CNT];
    VEDTPR02.XWH-WHSE-CD = ED0AW04-XWH-WHSE-CD[ED0AW-CNT];
    VEDTPR02.GL-GEN-LEDGER-CD = ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT];
    if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
      VEDTPR02.EDI-TRDPT-NM = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
      VEDTPR02.EDI-TRDPT-ABRV = ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    end

    call "VEDTPR02" ("A ", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};

  else
    if (ED0AW-MAIN-SEL == "7")
      VEDTPR03.XXX-STAT = "A";
      VEDTPR03.ZZ-SDT = XX0XW01.XX0XWDAT;
      VEDTPR03.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      VEDTPR03.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
      VEDTPR03.ZZ-CHNG-CNT = 0;

      VEDTPR03.ASN-REL-DAYS = ED0AW04-ASN-REL-DAYS[ED0AW-CNT];
      VEDTPR03.EDI-TRDPT-NBR = VEDCTR01.EDI-NXT-TRDPT-NBR;
      VEDTPR03.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
      VEDTPR03.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];
      VEDTPR03.CU-STOR-ID = ED0AW04-CU-STOR-ID[ED0AW-CNT];
      VEDTPR03.TI-CUTK-SPLR-CD = ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT];
      VEDTPR03.FY-FCTY-CD = ED0AW04-FY-FCTY-CD[ED0AW-CNT];
      VEDTPR03.TF-CARR-CD = ED0AW04-TF-CARR-CD[ED0AW-CNT];
      VEDTPR03.XWH-WHSE-CD = ED0AW04-XWH-WHSE-CD[ED0AW-CNT];
      VEDTPR03.GL-GEN-LEDGER-CD = ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT];
      if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
        VEDTPR03.EDI-TRDPT-NM = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
        VEDTPR03.EDI-TRDPT-ABRV = ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
      end

      call "VEDTPR03" ("A ", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};

    else

      VEDTPR01.XXX-STAT = "A";
      VEDTPR01.ZZ-SDT = XX0XW01.XX0XWDAT;
      VEDTPR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      VEDTPR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
      VEDTPR01.ZZ-CHNG-CNT = 0;

      VEDTPR01.EDI-TRDPT-NBR = VEDCTR01.EDI-NXT-TRDPT-NBR;
      VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];
      VEDTPR01.CU-CO-ID = ED0AW04-CU-CO-ID[ED0AW-CNT];
      VEDTPR01.TI-CUTK-SPLR-CD = ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT];
      VEDTPR01.FY-FCTY-CD = ED0AW04-FY-FCTY-CD[ED0AW-CNT];
      VEDTPR01.TF-CARR-CD = ED0AW04-TF-CARR-CD[ED0AW-CNT];
      VEDTPR01.XWH-WHSE-CD = ED0AW04-XWH-WHSE-CD[ED0AW-CNT];
      VEDTPR01.GL-GEN-LEDGER-CD = ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT];
      if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
        VEDTPR01.EDI-TRDPT-NM = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ABRV = ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
      end

      call "VEDTPR01" ("A ", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    end
  end
   /* ********************TCS ENDS  *******************/

  if (SQLCA.VAGen_SQLCODE == 0)
    ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT] = VEDCTR01.EDI-NXT-TRDPT-NBR;

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1LOCAT = "ADD ";
    TA1REC.TA1FUNC = "ADD ";
    TA1REC.TA1PGMNM = "ED0A";
    TA1REC.TA1DBASE = "DEDI ";
   /* ********************TCS BEGIN *******************/
    if (ED0AW-MAIN-SEL == "1")
      TA1REC.TA1TBLVU = "VEDTPR02";
      TA1REC.TA1TBLKE = VEDTPR02.EDI-TRDPT-ID;
    else
      if (ED0AW-MAIN-SEL == "7")
        TA1REC.TA1TBLVU = "VEDTPR03";
        TA1REC.TA1TBLKE = VEDTPR03.EDI-TRDPT-ID;
      else
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
      end
    end
   /* ********************TCS ENDS  *******************/
    TA1REC.TA1LOC = "ADD EDI TP ROW";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end ED0AS-EDITP-ADD

// change editp /update
Function ED0AS-EDITP-CHNG()

  ED0AS-EDITP-SEL();

  if (SQLCA.VAGen_SQLCODE == 100)
   /* **********TCS CHANGE BEGIN **************/
    converseLib.validationFailed(7);
   /* MOVE 137 TO EZEMNO;*/
   /* **********TCS CHANGE end ****************/
    ED0AW01.ED0AWERR = "Y";
    return;
  end

   /* **********TCS CHANGE BEGIN **************/

  if (ED0AW-MAIN-SEL == "1")

    VEDTPR02.ASN-REL-DAYS = ED0AW04-ASN-REL-DAYS[ED0AW-CNT];
    VEDTPR02.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];

    if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
      VEDTPR02.EDI-TRDPT-NM = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
      VEDTPR02.EDI-TRDPT-ABRV = ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
    end

    XX0XS01();

    VEDTPR02.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
    VEDTPR02.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

    call "VEDTPR02" ("U ", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};

  else
    if (ED0AW-MAIN-SEL == "7")

      VEDTPR03.ASN-REL-DAYS = ED0AW04-ASN-REL-DAYS[ED0AW-CNT];
      VEDTPR03.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];

      if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
        VEDTPR03.EDI-TRDPT-NM = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
        VEDTPR03.EDI-TRDPT-ABRV = ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
      end

      XX0XS01();

      VEDTPR03.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      VEDTPR03.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

      call "VEDTPR03" ("U ", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};

    else
      VEDTPR01.EDI-TRDPT-TYP-CD = ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT];

      if (ED0AW04-NAME-EXISTS[ED0AW-CNT] == "N")
        VEDTPR01.EDI-TRDPT-NM = ED0AW04-EDI-TRDPT-NM[ED0AW-CNT];
        VEDTPR01.EDI-TRDPT-ABRV = ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT];
      end

      XX0XS01();

      VEDTPR01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
      VEDTPR01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

      call "VEDTPR01" ("U ", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    end
  end
   /* **********TCS CHANGE ENDS  **************/

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CHNG";
    TA1REC.TA1LOC = "CHNG";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI ";
   /* **********TCS CHANGE BEGINS *************/
    if (ED0AW-MAIN-SEL == "1")
      TA1REC.TA1TBLVU = "VEDTPR02";
      TA1REC.TA1TBLKE = VEDTPR02.EDI-TRDPT-ID;
    else
      if (ED0AW-MAIN-SEL == "7")
        TA1REC.TA1TBLVU = "VEDTPR03";
        TA1REC.TA1TBLKE = VEDTPR03.EDI-TRDPT-ID;
      else
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
      end
    end
   /* **********TCS CHANGE ENDS   *************/
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    TA1REC.TA1LOC = "ED0AS-EDITP-CHNG  ";
    XSPF4();
  end
end // end ED0AS-EDITP-CHNG

// del editp
Function ED0AS-EDITP-DEL()

  ED0AS-EDITP-SEL();

  if (SQLCA.VAGen_SQLCODE == 100)
   /* *********************tcs changes begin ************************/
   /* MOVE 137 TO EZEMNO;*/
    converseLib.validationFailed(7);
   /* *********************tcs changes begin ************************/
    ED0AW01.ED0AWERR = "Y";
    return;
  end

   /* ******TCS CHANGE BEGINS *******/

  if (ED0AW-MAIN-SEL == "1")

    call "VEDTPR02" ("D ", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};
  else
    if (ED0AW-MAIN-SEL == "7")

      call "VEDTPR03" ("D ", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};
    else
      call "VEDTPR01" ("D ", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

    end
  end

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "DEL ";
    TA1REC.TA1LOC = "DEL ";
    TA1REC.TA1PGMNM = "ED0AS-EDITP-DEL";
    TA1REC.TA1DBASE = "DEDI ";
    if (ED0AW-MAIN-SEL == "1")
      TA1REC.TA1TBLVU = "VEDTPR02";
      TA1REC.TA1TBLKE = VEDTPR02.EDI-TRDPT-ID;
    else
      if (ED0AW-MAIN-SEL == "7")
        TA1REC.TA1TBLVU = "VEDTPR03";
        TA1REC.TA1TBLKE = VEDTPR03.EDI-TRDPT-ID;
      else
        TA1REC.TA1TBLVU = "VEDTPR01";
        TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
      end
    end
   /* ******TCS CHANGE BEGINS *******/
    TA1REC.TA1LOC = "ED0AS-EDITP-DEL  ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end ED0AS-EDITP-DEL

// select unique editp
Function ED0AS-EDITP-SEL()
  /* ******************************************************************/
  /* ***************   ed0as-editp-sel          ***********************/
  /* ******************************************************************/
  /* ******************* TCS BEGIN ***********************************/

  if (ED0AW-MAIN-SEL == "1")
    VEDTPR02.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT];

    call "VEDTPR02" ("S ", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};
  else
    if (ED0AW-MAIN-SEL == "7")
      VEDTPR03.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT];

      call "VEDTPR03" ("S ", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};
    else
      VEDTPR01.EDI-TRDPT-NBR = ED0AW04-EDI-TRDPT-NBR[ED0AW-CNT];

      call "VEDTPR01" ("S ", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
    end
  end
  /* ******************* TCS END   ***********************************/
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SEL ";
    TA1REC.TA1LOC = "SEL ";
    TA1REC.TA1PGMNM = "ED0AS-EDITP-SEL";
    TA1REC.TA1DBASE = "DEDI ";
    if (ED0AW-MAIN-SEL == "1")
      TA1REC.TA1TBLVU = "VEDTPR02";
      ED0AWCID = VEDTPR02.EDI-TRDPT-NBR;
    else
      if (ED0AW-MAIN-SEL == "7")
        TA1REC.TA1TBLVU = "VEDTPR03";
        ED0AWCID = VEDTPR03.EDI-TRDPT-NBR;
      else
        TA1REC.TA1TBLVU = "VEDTPR01";
        ED0AWCID = VEDTPR01.EDI-TRDPT-NBR;
      end
    end
    TA1REC.TA1TBLKE = ED0AWCID;
    TA1REC.TA1LOC = "ED0AS-EDITP-SEL";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end ED0AS-EDITP-SEL

// check fastpath and pf keys
Function ED0AS-FPATH-PFK()

  if (converseVar.eventKey is enter)
    if (COMMAREA.CATOAP != " ") /* fastpath out*/
      if (COMMAREA.CAITEM == " ")
        COMMAREA.CAITEM = ED0AW01.ED0AWKEY;
      end
      XSEXIT();
      ED0AW01.ED0AWMSG = COMMAREA.CAMSG;
    end
    return;
  end


  if (converseVar.eventKey is pf1) /* help*/
    XSPF1();
    ED0AW01.ED0AWMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf4) /* main menu*/
    XSPF4();
    ED0AW01.ED0AWMSG = COMMAREA.CAMSG;
    return;
  end

  if (converseVar.eventKey is pf12
  ) /* AND COMMAREA.CACHGFL EQ 'Y';*/
    return;
  end

  if (converseVar.eventKey is pf8 || converseVar.eventKey is pf7 || converseVar.eventKey is pa2
   || converseVar.eventKey is pf3)
    return;
  end

  converseLib.validationFailed(9); /* invalid pf key*/

end // end ED0AS-FPATH-PFK

// get carrier information
Function ED0AS-GET-CARR-NM()

                       /* ed0as-get-ticket-supplier info*/

  call "IO0860" ("S ", SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "SEL ";
      TA1REC.TA1PGMNM = "ED0A  ";
      TA1REC.TA1DBASE = "DPICK";
      TA1REC.TA1TBLVU = "VCARR001";
      TA1REC.TA1TBLKE = TF1REC.TF1CARCD;
      TA1REC.TA1PGMNM = "ED0AS ";
      TA1REC.TA1LOC = "ED0AS-GET-CARR-NM";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

                       /* ed0as-get-fcty-nm  - end*/

end // end ED0AS-GET-CARR-NM

// sel unique editp
Function ED0AS-GET-CO-NM()

  call "VCMPNY02" ("S ", SQLCA, VCMPNY02) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "SEL ";
      TA1REC.TA1PGMNM = "ED0AS-GET-CO-NM";
      TA1REC.TA1DBASE = "DCUST";
      TA1REC.TA1TBLVU = "VCMPNY02";
      ED0AWCID = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = ED0AWKEY;
      TA1REC.TA1PGMNM = "ED0AS-CO ";
      TA1REC.TA1LOC = "ED0AS-GET-CO-NM    ";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-GET-CO-NM

// get ticket sup info
Function ED0AS-GET-CUTK-NM()

                       /* ed0as-get-ticket-supplier info*/

  call "VTOPCD01" ("S ", SQLCA, VTOPCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "SEL ";
      TA1REC.TA1PGMNM = "ED0A  ";
      TA1REC.TA1DBASE = "DCUTKT";
      TA1REC.TA1TBLVU = "VTOPCD01";
      TA1REC.TA1TBLKE = VTOPCD01.TI-CUTK-SPLR-CD;
      TA1REC.TA1PGMNM = "ED0AS ";
      TA1REC.TA1LOC = "ED0AS-GET-CUKT  ";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

                       /* ed0as-get-fcty-nm  - end*/

end // end ED0AS-GET-CUTK-NM

// open trdpt by carrier
Function ED0AS-GET-EDI-CARR()

                       /* ed0as-get-edi-carr*/
   /* open cursor - Master EDI Trading Partner - by carrier*/

  call "VEDTPR01" ("S4", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR01";
    TA1TBLKE = VEDTPR01.TF-CARR-CD;
    TA1REC.TA1LOC = "ED0AS-GET-EDI-CA";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS-GET-EDI-CARR

// open trdpt table via co
Function ED0AS-GET-EDI-CO()

   /* open cursor - Master EDI Trading Partner - by company*/

   /* ***************** tcs changes begin********************/
   /* CALL VEDTPR01 'S2',SQLCA,VEDTPR01 (NOMAPS,NONCSP;*/
  call "VEDTPR02" ("S2", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};
   /* ******************tcs changes end**********************/

  if (SQLCA.VAGen_SQLCODE == 0)

  else
   /* **********************tcs changes begin*******************/
   /* IF SQLCA.SQLCODE EQ 100;*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
   /* ***************tcs changes begin***********************/
   /* *MOVE 'VEDTPR01' TO TA1REC.TA1TBLVU;*/
    TA1REC.TA1TBLVU = "VEDTPR02";
   /* ***************tcs changes begin***********************/
    ED0AWCID = VCMPNY02.KUCCOID;
    move ED0AWKEY to TA1TBLKE withV60Compat;
    TA1REC.TA1LOC = "ED0AS-GET-EDI-CO";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* **********************tcs changes end*********************/
  end

end // end ED0AS-GET-EDI-CO

// open trdpt by ticket supplier
Function ED0AS-GET-EDI-CUTK()

                       /* ed0as-get-edi-carr*/
   /* open cursor - Master EDI Trading Partner - by carrier*/

  call "VEDTPR01" ("S3", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR01";
    TA1TBLKE = VEDTPR01.TI-CUTK-SPLR-CD;
    TA1REC.TA1LOC = "ED0AS-GET-EDI-CUTK";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS-GET-EDI-CUTK

// open trdpt table via co
Function ED0AS-GET-EDI-FY()

   /* open cursor - Master EDI Trading Partner - by factory*/

  call "VEDTPR01" ("S7", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
   /* *******************tcs changes begin ***********/
   /* IF SQLCA.SQLCODE EQ 100;*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR01";
    TA1TBLKE = VEDTPR01.FY-FCTY-CD;
    TA1REC.TA1LOC = "ED0AS-GET-EDI-FY";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* *******************tcs changes  end  ***********/
  end

end // end ED0AS-GET-EDI-FY

// open trdpt by gl code
Function ED0AS-GET-EDI-GLCD()

                       /* ed0as-get-edi-glcd*/
   /* open cursor - Master EDI Trading Partner - by glcd*/

  call "VEDTPR01" ("S5", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR01";
    TA1TBLKE = VEDTPR01.GL-GEN-LEDGER-CD;
    TA1REC.TA1LOC = "ED0AS-GET-EDI-GLCD";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS-GET-EDI-GLCD

// open trdpt tbl via trdpt
Function ED0AS-GET-EDI-TP()

                       /* ed0as-get-edi-tp*/

   /* open cursor- trading partner - using trading partner*/
          /* and cu-co-id greater than 0*/

   /* ****************************TCS BEGIN **********************/
  if (ED0AW-MAIN-SEL == "1")
    call "ED3000" ("S1", SQLCA, VETPXM01, VEDTPR02) {isNoRefresh = yes, isExternal = yes};
  end
   /* ****************************TCS END   **********************/

   /* open cursor- trading partner - using trading partner*/
          /* and fy-fcty-cd greater than ' '*/

  if (ED0AW-MAIN-SEL == "2")
    call "ED1000" ("S2", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
  end

   /* open cursor- trading partner - using trading partner*/
          /* and ti-cukt-splr-cd greater than ' '*/

  if (ED0AW-MAIN-SEL == "3")
    call "ED1000" ("S3", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* open cursor- trading partner - using trading partner*/
          /* and tf-carr-cd greater than ' '*/

  if (ED0AW-MAIN-SEL == "4")
    call "ED1000" ("S4", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* open cursor- trading partner - using trading partner*/
          /* and xwh-whse-cd greater than ' '*/

  if (ED0AW-MAIN-SEL == "5")
    call "ED1000" ("S5", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
  end



   /* open cursor- trading partner - using trading partner*/
          /* and ti-cukt-splr-cd greater than ' '*/

  if (ED0AW-MAIN-SEL == "6")
    call "ED1000" ("S6", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
  end

   /* open cursor- trading partner - using trading partner*/
          /* and cu-co-id and store-id greater than zero*/

  if (ED0AW-MAIN-SEL == "7")
    call "ED4000" ("S1", SQLCA, VETPXM01, VEDTPR03) {isNoRefresh = yes, isExternal = yes};
  end

  if (SQLCA.VAGen_SQLCODE == 0)

  else
   /* ****************************TCS BEGIN **********************/
   /* IF SQLCA.SQLCODE EQ 100;*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR01";
    TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
   /* ****************************TCS BEGIN **********************/
    if (ED0AW-MAIN-SEL == "1")
      TA1REC.TA1TBLVU = "VEDTPR02";
      TA1REC.TA1TBLKE = VEDTPR02.EDI-TRDPT-ID;
    end
    if (ED0AW-MAIN-SEL == "7")
      TA1REC.TA1TBLVU = "VEDTPR03";
      TA1REC.TA1TBLKE = VEDTPR03.EDI-TRDPT-ID;
    end
    TA1REC.TA1LOC = "ED0AS-GET-EDI-TP   ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
  end

end // end ED0AS-GET-EDI-TP

// open trdpt by warehouse
Function ED0AS-GET-EDI-XWH()

                       /* ed0as-get-edi-xwh*/
   /* open cursor - Master EDI Trading Partner - by warehouse*/

  call "VEDTPR01" ("S6", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR01";
    TA1TBLKE = VEDTPR01.XWH-WHSE-CD;
    TA1REC.TA1LOC = "ED0AS-GET-EDI-XWH";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS-GET-EDI-XWH

// get factory nm info
Function ED0AS-GET-FCTY-NM()

                       /* ed0as-get-fcty-nm*/

  call "IO2810" ("S2", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "SEL ";
      TA1REC.TA1PGMNM = "ED0A  ";
      TA1REC.TA1DBASE = "DFCTY";
      TA1REC.TA1TBLVU = "VFCTY001";
      TA1REC.TA1TBLKE = FY1REC.FY1FCTYC;
      TA1REC.TA1PGMNM = "ED0AS-FCT";
      TA1REC.TA1LOC = "ED0AS-GET-FCTY-NM  ";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

  call "IO2810" ("N2", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100)
    FY1FCTNM = " ";
    FY1FCTSN = " ";
  end

  if (SQLCA.VAGen_SQLCODE == 0 || 
  SQLCA.VAGen_SQLCODE == 100)
    call "IO2810" ("C2", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SEL ";
    TA1REC.TA1PGMNM = "ED0A  ";
    TA1REC.TA1DBASE = "DFCTY";
    TA1REC.TA1TBLVU = "VFCTY001";
    TA1REC.TA1TBLKE = FY1REC.FY1FCTYC;
    TA1REC.TA1PGMNM = "ED0AS-FCT";
    TA1REC.TA1LOC = "ED0AS-GET-FCTY-NM  ";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

                       /* ed0as-get-fcty-nm  - end*/

end // end ED0AS-GET-FCTY-NM

// get carrier information
Function ED0AS-GET-GLCD-NM()

                       /* ed0as-get-glcd-nm*/

  call "IO4360" ("S ", SQLCA, PFJREC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    if (SQLCA.VAGen_SQLCODE == 100)
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "SEL ";
      TA1REC.TA1PGMNM = "ED0A  ";
      TA1REC.TA1DBASE = "DPROFT";
      TA1REC.TA1TBLVU = "VGLCDS01";
      TA1REC.TA1TBLKE = PFJREC.GLACD;
      TA1REC.TA1PGMNM = "ED0AS ";
      TA1REC.TA1LOC = "ED0AS-GET-GLCD-NM";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

                       /* ed0as-get-glcd-nm*/

end // end ED0AS-GET-GLCD-NM

// load map info
Function ED0AS-GET-TP-INFO()
   /* **************************************************/
     /* ed0as-get-tp-info  - begin*/
   /* *************************************************/

  ED0AW04-SEL[ED0AWIDX] = " ";

   /* *************** TCS BEGIN ***********************/
  if (ED0AW-MAIN-SEL == "1")
    ED0AW04-CU-CO-ID[ED0AWIDX] = VEDTPR02.CU-CO-ID;
    VCMPNY02.KUCCOID = VEDTPR02.CU-CO-ID;

    ED0AS-GET-CO-NM(); /* get company name from vcmpny01*/

   /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
    if (VAGen_SQLCODE == 100)
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    else
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = KUCCONM;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = CU-CO-SHORT-NM;
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
    end
  end

  if (ED0AW-MAIN-SEL == "2")
    ED0AW04-FY-FCTY-CD[ED0AWIDX] = VEDTPR01.FY-FCTY-CD;
    FY1FCTYC = VEDTPR01.FY-FCTY-CD;
    ED0AS-GET-FCTY-NM();

   /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
    if (FY1FCTNM == " ")
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    else
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = FY1FCTNM;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = FY1FCTSN;
    end
  end

  if (ED0AW-MAIN-SEL == "3")
    ED0AW04-TI-CUTK-SPLR-CD[ED0AWIDX] = VEDTPR01.TI-CUTK-SPLR-CD;
    VTOPCD01.TI-CUTK-SPLR-CD = VEDTPR01.TI-CUTK-SPLR-CD; /* ;*/
    ED0AS-GET-CUTK-NM();
   /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
    if (SQLCA.VAGen_SQLCODE == 100)
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    else
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = TI-CUTK-SPLR-NM;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = TI-CUTK-SPLR-ABRV;
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
    end
  end

   /* carrier  info*/

  if (ED0AW-MAIN-SEL == "4")
    ED0AW04-TF-CARR-CD[ED0AWIDX] = VEDTPR01.TF-CARR-CD;
    TF1REC.TF1CARCD = VEDTPR01.TF-CARR-CD; /* ;*/
    ED0AS-GET-CARR-NM();
   /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
    if (SQLCA.VAGen_SQLCODE == 100)
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    else
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = TF1CARNM;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = TF1SABRV;
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
    end
  end

   /* gl-bank info*/

  if (ED0AW-MAIN-SEL == "5")
    ED0AW04-GL-GEN-LEDGER-CD[ED0AWIDX] = VEDTPR01.GL-GEN-LEDGER-CD;
    PFJREC.GLACD = VEDTPR01.GL-GEN-LEDGER-CD; /* ;*/
    ED0AS-GET-GLCD-NM();
   /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
    if (SQLCA.VAGen_SQLCODE == 100)
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    else
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = GLADESC;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = GLASDESC;
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
    end
  end

   /* warehouse info*/

  if (ED0AW-MAIN-SEL == "6")
    ED0AW04-XWH-WHSE-CD[ED0AWIDX] = VEDTPR01.XWH-WHSE-CD;
    if (VEDTPR01.XWH-WHSE-CD in XWHTBL.XWHCD)
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = XWHTBL.XWHNM[sysVar.arrayIndex];
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = XWHTBL.XWHSABRV[sysVar.arrayIndex];
    else
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    end
  end

   /* Company info*/

  if (ED0AW-MAIN-SEL == "7")
    ED0AW04-CU-CO-ID[ED0AWIDX] = VEDTPR03.CU-CO-ID;
    ED0AW04-CU-STOR-ID[ED0AWIDX] = VEDTPR03.CU-STOR-ID;
    VCMPNY02.KUCCOID = VEDTPR03.CU-CO-ID;

    ED0AS-GET-CO-NM(); /* get company name from vcmpny01*/

   /* IF RECORD NOT FOUND MOVE SPACES TO NAME*/
    if (VAGen_SQLCODE == 100)
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
    else
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = KUCCONM;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = CU-CO-SHORT-NM;
      ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
    end
  end


  if (ED0AW04-NAME-EXISTS[ED0AWIDX] == "N")
   /* *************** TCS BEGIN ***********************/
    if (ED0AW-MAIN-SEL == "1")
      ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = VEDTPR02.EDI-TRDPT-NM;
      ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = VEDTPR02.EDI-TRDPT-ABRV;
    else
      if (ED0AW-MAIN-SEL == "7")
        ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = VEDTPR03.EDI-TRDPT-NM;
        ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = VEDTPR03.EDI-TRDPT-ABRV;
      else
        ED0AW04-EDI-TRDPT-NM[ED0AWIDX] = VEDTPR01.EDI-TRDPT-NM;
        ED0AW04-EDI-TRDPT-ABRV[ED0AWIDX] = VEDTPR01.EDI-TRDPT-ABRV;
      end
    end
  end

  if (ED0AW-MAIN-SEL == "1")
    ED0AW04-EDI-TRDPT-ID[ED0AWIDX] = VEDTPR02.EDI-TRDPT-ID;
    ED0AW04-EDI-TRDPT-NBR[ED0AWIDX] = VEDTPR02.EDI-TRDPT-NBR;
    ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = VEDTPR02.EDI-TRDPT-TYP-CD;
    ED0AW04-ASN-REL-DAYS[ED0AWIDX] = VEDTPR02.ASN-REL-DAYS;
  else
    if (ED0AW-MAIN-SEL == "7")
      ED0AW04-EDI-TRDPT-ID[ED0AWIDX] = VEDTPR03.EDI-TRDPT-ID;
      ED0AW04-EDI-TRDPT-NBR[ED0AWIDX] = VEDTPR03.EDI-TRDPT-NBR;
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = VEDTPR03.EDI-TRDPT-TYP-CD;
      ED0AW04-ASN-REL-DAYS[ED0AWIDX] = VEDTPR03.ASN-REL-DAYS;
    else
      ED0AW04-EDI-TRDPT-ID[ED0AWIDX] = VEDTPR01.EDI-TRDPT-ID;
      ED0AW04-EDI-TRDPT-NBR[ED0AWIDX] = VEDTPR01.EDI-TRDPT-NBR;
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = VEDTPR01.EDI-TRDPT-TYP-CD;
    end
  end

   /* *************** TCS END   ***********************/
   /* **************************************************/
     /* ed0as-get-tp-info  - end*/
   /* *************************************************/
end // end ED0AS-GET-TP-INFO

// fetch for type code table
Function ED0AS-GET-TYP-CD()
   /* *********************************************************************/
   /* ed0as-get-typ-cd - begin*/
   /* get next type code*/
   /* *********************************************************************/

  call "VEDTCD01" ("N1", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};

  XP0OW02.XP0OW-SQLCODE = SQLCA.VAGen_SQLCODE;

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      call "VEDTCD01" ("C1", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "XP0O";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTCD01";
      TA1REC.TA1LOC = "ED0AS-GET-TYP-CD";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

   /* *********************************************************************/
   /* ed0as-get-typ-cd - end*/
   /* *********************************************************************/
end // end ED0AS-GET-TYP-CD

// open trdpt table via co/store
Function ED0AS-GETEDI-CO-ST()

   /* open cursor - Master EDI Trading Partner - by company&store*/

  call "VEDTPR03" ("S8", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "ED0A ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTPR03";
    ED0AWCID = VCMPNY02.KUCCOID;
    move ED0AWKEY to TA1TBLKE withV60Compat;
    TA1REC.TA1LOC = "ED0AS-GETEDI-CO-ST";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
  end

end // end ED0AS-GETEDI-CO-ST

// display screen
Function ED0AS-INIT-REC()
    /* ---------------- begin ed0as-init-rec -------------------------*/

  set ED0AW01 empty; /* work record*/
  set ED0AW04 empty; /* work record*/
  set VCMPNY02 empty; /* company record*/
  set VEDTPR01 empty; /* trading partner record*/
   /* *********************tcs changes begin**********************/
  set VEDTPR02 empty; /* trading partner record*/
  set VEDTPR03 empty; /* trading partner record*/
   /* *********************tcs changes end************************/
  set VTOPCD01 empty; /* ticket supplier record*/
  set VEDCTR01 empty; /* control record for edi numbers*/
  set VEDSCD01 empty; /* status code table*/
  set VEDXCD01 empty; /* transacation code table*/
   /* ET ED0AM100 EMPTY;              /*  map record*/
  set ED0AM210 empty; /* map record*/
  set ED0AM270 empty; /* map record*/
  set ED0AM300 empty; /* map record*/
  set SQLCA empty; /* sqlca empty*/
  set TA1REC empty; /* ta1 empty*/

    /* ---------------- end ed0as-init-rec ----------------------------*/

end // end ED0AS-INIT-REC

// fetch edi rows via co
Function ED0AS-LD-WRK-STO()

   /* --------- begin - ed0as-ld-wrk-sto ------------------------------*/

  ED0AWIDX = 1;

  while (ED0AWIDX <= 500 && ED0AW-SQLCODE == 0)
    if (ED0AW-EDI-TRDPT-ID-QUERY != " ")
      if (ED0AW-MAIN-SEL == "1") /* trading partner company*/
        ED0AS-NXT-TP-CO();
      end
      if (ED0AW-MAIN-SEL == "2") /* trading partner factory*/
        ED0AS-NXT-TP-FCTY();
      end
      if (ED0AW-MAIN-SEL == "3") /* trading partner customer ticketing*/
        ED0AS-NXT-TP-CUTK();
      end
      if (ED0AW-MAIN-SEL == "4") /* trading partner - carrier*/
        ED0AS-NXT-TP-CARR();
      end
      if (ED0AW-MAIN-SEL == "5") /* trading partner - gl-code*/
        ED0AS-NXT-TP-GLCD();
      end
      if (ED0AW-MAIN-SEL == "6") /* trading partner - warehouse*/
        ED0AS-NXT-TP-XWH();
      end
      if (ED0AW-MAIN-SEL == "7") /* trading partner company*/
        ED0AS-NXT-TP-CO-ST();
      end
    end

    if (ED0AW-KUCCOID > 0 &&  /* company*/
    ED0AW-MAIN-SEL == "1")   
      ED0AS-NEXT-CO();
    end

    if (ED0AM-FY-FCTY-CD > " " &&  /* factory*/
    ED0AW-MAIN-SEL == "2")        
      ED0AS-NEXT-FCTY();
    end

    if (ED0AM-TI-CUTK-SPLR-CD > " " &&  /* ticket supplier*/
    ED0AW-MAIN-SEL == "3")             
      ED0AS-NEXT-CUTK();
    end

    if (ED0AM-TF-CARR-CD > " " &&  /* carrier*/
    ED0AW-MAIN-SEL == "4")        
      ED0AS-NEXT-CARR();
    end

    if (ED0AM-GL-GEN-LEDGER-CD > " " &&  /* gl-bank*/
    ED0AW-MAIN-SEL == "5")              
      ED0AS-NEXT-GLCD();
    end

    if (ED0AM-XWH-WHSE-CD > " " &&  /* warehouse*/
    ED0AW-MAIN-SEL == "6")         
      ED0AS-NEXT-XWH();
    end

    if (ED0AW-KUCCOID > 0 &&  /* company*/
    ED0AW-KUSTOID > 0 &&      /* store*/
    ED0AW-MAIN-SEL == "7")   
      ED0AS-NEXT-CO-ST();
    end

    /* IF ED0AW-EDI-TRDPT-ID = ' ' AND*/
     /* ED0AW-KUCCOID = 0;*/
     /* ED0AW-SQLCODE = 100;*/
    /* END;*/

    if (ED0AW-SQLCODE == 100)
      ED0AWIDX = ED0AWIDX - 1;
      move ED0AWIDX to ED0AW-MAX withV60Compat; /* set maximum*/
      ED0AWIDX = 601;
    end

    ED0AWIDX = ED0AWIDX + 1;

  end

   /* D0AWIDX = ED0AWIDX - 1;*/


  ED0AW-PAGE-TOT = ED0AWIDX / 12;
  ED0AW-PAGE-TOT = ED0AWIDX * ED0AW-PAGE-TOT;

  if (ED0AW-PAGE-TOT <= ED0AWIDX)
    ED0AW-PAGE-TOT = (ED0AWIDX / 12) + 1;
  end

  if (ED0AW-PAGE-TOT == 0)
    ED0AW-PAGE-TOT = 1;
  end

  if (ED0AW-MAIN-SEL == "7")
    ED0AM270.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;
  else
    ED0AM210.ED0AM-PAGE-TOT = ED0AW-PAGE-TOT;
  end
   /* --------- end   - ed0as-ld-wrk-sto ------------------------------*/

end // end ED0AS-LD-WRK-STO

// get editp via co
Function ED0AS-NEXT-CARR()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using company*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

  call "VEDTPR01" ("N4", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR01" ("C4", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "ED0A";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.TF-CARR-CD;
      TA1REC.TA1LOC = "ED0AS-NEXT-CARR";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-CARR

// get editp via co
Function ED0AS-NEXT-CO()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using company*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

   /* ***************TCS BEGIN ************/
  call "VEDTPR02" ("N2", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};

  ED0AM210.CU-CO-ID[ED0AWIDX] = VEDTPR02.CU-CO-ID;
  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR02" ("C2", SQLCA, VEDTPR02) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-CO-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR02";
   /* ***************TCS ENDS  ************/
      ED0AWCID = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = ED0AWKEY;
      TA1REC.TA1LOC = "ED0AS-NEXT-CO";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-CO

// get editp via co/store
Function ED0AS-NEXT-CO-ST()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using company*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

   /* ***************TCS BEGIN ************/
  call "VEDTPR03" ("N8", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};

  ED0AM270.CU-CO-ID[ED0AWIDX] = VEDTPR03.CU-CO-ID;
  ED0AM270.CU-STOR-ID[ED0AWIDX] = VEDTPR03.CU-STOR-ID;
  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR03" ("C8", SQLCA, VEDTPR03) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-CO-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR03";
      ED0AWCID = VCMPNY02.KUCCOID;
      TA1REC.TA1TBLKE = ED0AWKEY;
      TA1REC.TA1LOC = "ED0AS-NEXT-CO";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-CO-ST

// get editp via co
Function ED0AS-NEXT-CUTK()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using ticket supplier*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

  call "VEDTPR01" ("N3", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR01" ("C3", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "ED0A";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.TI-CUTK-SPLR-CD;
      TA1REC.TA1LOC = "ED0AS-NEXT-CUTK";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-CUTK

// get editp via co
Function ED0AS-NEXT-FCTY()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using factory*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

  call "VEDTPR01" ("N7", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR01" ("C7", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "ED0A";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.FY-FCTY-CD;
      TA1REC.TA1LOC = "ED0AS-NEXT-FCTY";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-FCTY

// get editp via glcode
Function ED0AS-NEXT-GLCD()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using gl code*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

  call "VEDTPR01" ("N5", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR01" ("C5", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "ED0A";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.GL-GEN-LEDGER-CD;
      TA1REC.TA1LOC = "ED0AS-NEXT-GLCD";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-GLCD

// get editp via whs
Function ED0AS-NEXT-XWH()
   /* * *  ** * * ***** *****************************/
   /* fetch next edi trading partner using warehouse*/
   /* * *  ** * * ***** *****************************/

  ED0AW-SQLCODE = 0;

  call "VEDTPR01" ("N6", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "VEDTPR01" ("C6", SQLCA, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "ED0A";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.XWH-WHSE-CD;
      TA1REC.TA1LOC = "ED0AS-NEXT-XWH";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NEXT-XWH

// get editp via carrier
Function ED0AS-NXT-TP-CARR()

   /* ed0as-nxt-tp-carr*/

  VAGen_SQLCODE = 0;

  call "ED1000" ("N4", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED1000" ("C4", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.TF-CARR-CD;
      TA1REC.TA1LOC = "ED0AS-NXT-TP-CARR";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-CARR

// get editp via tp
Function ED0AS-NXT-TP-CO()

   /* fetch next via trading partner id*/

  VAGen_SQLCODE = 0;

   /* ***************TCS BEGIN **************/
  call "ED3000" ("N1", SQLCA, VETPXM01, VEDTPR02) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED3000" ("C1", SQLCA, VETPXM01, VEDTPR02) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR02";
      TA1REC.TA1LOC = "ED0AS-NXT-TP-CO  ";
      TA1REC.TA1TBLKE = VEDTPR02.EDI-TRDPT-ID;
   /* ***************TCS ENDS  **************/
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      TA1REC.TA1LOC = "ED0AS-EDITP-NXT-TP";
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-CO

// get editp via tp
Function ED0AS-NXT-TP-CO-ST()

   /* fetch next via trading partner id*/

  VAGen_SQLCODE = 0;

   /* ***************TCS BEGIN **************/
  call "ED4000" ("N1", SQLCA, VETPXM01, VEDTPR03) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED4000" ("C1", SQLCA, VETPXM01, VEDTPR03) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR03";
      TA1REC.TA1LOC = "ED0AS-NXT-TP-CO  ";
      TA1REC.TA1TBLKE = VEDTPR03.EDI-TRDPT-ID;
   /* ***************TCS ENDS  **************/
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      TA1REC.TA1LOC = "ED0AS-EDITP-NXT-TP";
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-CO-ST

// get next tp for cutk
Function ED0AS-NXT-TP-CUTK()

   /* fetch next via trading partner id*/

  VAGen_SQLCODE = 0;

  call "ED1000" ("N3", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED1000" ("C3", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.EDI-TRDPT-ID;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      TA1REC.TA1LOC = "ED0AS-NXT-TP-CUTK";
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-CUTK

// get editp via tp
Function ED0AS-NXT-TP-FCTY()

   /* fetch next via trading partner id*/

  VAGen_SQLCODE = 0;

  call "ED1000" ("N2", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED1000" ("C2", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.FY-FCTY-CD;
      TA1REC.TA1LOC = "ED0AS-NXT-TP-FCTY";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-FCTY

// get editp via carrier
Function ED0AS-NXT-TP-GLCD()

   /* ed0as-nxt-tp-glcd*/

  VAGen_SQLCODE = 0;

  call "ED1000" ("N5", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED1000" ("C5", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.GL-GEN-LEDGER-CD;
      TA1REC.TA1LOC = "ED0AS-NXT-TP-GLCD";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-GLCD

// get editp via warehouse
Function ED0AS-NXT-TP-XWH()

   /* ed0as-nxt-tp-carr*/

  VAGen_SQLCODE = 0;

  call "ED1000" ("N6", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-SQLCODE withV60Compat;

  if (ED0AW-SQLCODE == 0)
    ED0AS-GET-TP-INFO();
  else
    if (ED0AW-SQLCODE == 100)
      call "ED1000" ("C6", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "EDI-TP-NXT";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDTPR01";
      TA1REC.TA1TBLKE = VEDTPR01.TF-CARR-CD;
      TA1REC.TA1LOC = "ED0AS-NXT-TP-CARR";
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS-NXT-TP-XWH

// open cursor for tran code tabl
Function ED0AS-OPEN-TYP-CD()
  /* ****************************************************************/
  /* ed0as-open-typ-cd                                **/
  /* ****************************************************************/
  /* open cursor*/
  call "VEDTCD01" ("S1", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
                  /* next sentence*/
  else
   /* **************************tcs changes begin ********************/
   /* IF SQLCA.SQLCODE EQ 100;*/
    call "VEDTCD01" ("C1", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CURS";
    TA1REC.TA1PGMNM = "XP0O";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDTCD01";
    TA1TBLKE = VEDTCD01.EDI-TRDPT-TYP-CD;
    TA1REC.TA1LOC = "ED0AS-OPEN-TYP-CD";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* **************************tcs changes end***********************/
  end

  /* ****************************************************************/
  /* ed0as-open-typ-cd cursor -                        **/
  /* ****************************************************************/
end // end ED0AS-OPEN-TYP-CD

// fetch edi rows via co
Function ED0AS-VALID-M210()

   /* validate screen*/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM210.ED0AM-SEL[ED0AWIDX];

  if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM210.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM210.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM210.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM210.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM210.ED0AM-SEL[ED0AWIDX] skip;
    end

      /* trading partner check for non blank for add*/

    if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "A")
      if (ED0AM210.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM210.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM210.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end

      /* company number validation for  add*/

      if (ED0AM210.CU-CO-ID[ED0AWIDX] == 0)
        ED0AM210.ED0AMMSG = " ENTER A VALID COMPANY ID ";
        set ED0AM210.CU-CO-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM210.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM210.CU-CO-ID[ED0AWIDX] bold;
        set ED0AM210.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      end
    end

      /* trading partner type check for add or change*/

    if (ED0AM210.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM210.ED0AM-SEL[ED0AWIDX] == "C")

      VCMPNY02.KUCCOID = ED0AM210.CU-CO-ID[ED0AWIDX];

      ED0AS-GET-CO-NM(); /* get company name*/

      if (SQLCA.VAGen_SQLCODE == 0)
        ED0AW04-NAME-EXISTS[ED0AW-CNT] = "Y";
        ED0AM210.EDI-TRDPT-NM[ED0AWIDX] = VCMPNY02.KUCCONM;
        ED0AM210.EDI-TRDPT-ABRV[ED0AWIDX] = CU-CO-SHORT-NM;
      else
        ED0AW04-NAME-EXISTS[ED0AW-CNT] = "N";
      end
      ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM210.EDI-TRDPT-ABRV[ED0AWIDX];
      ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM210.EDI-TRDPT-NM[ED0AWIDX];
      ED0AW04-CU-CO-ID[ED0AW-CNT] = ED0AM210.CU-CO-ID[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM210.EDI-TRDPT-ID[ED0AWIDX];
      if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
        XP0O000();
        converseLib.clearScreen();
        
        if (XP0OW02.XP0OWPIX > 0)
          XP0OWCT1 = XP0OW02.XP0OWPIX;
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
          ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        end
      end
      if (ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
        VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX];
        call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
        if (SQLCA.VAGen_SQLCODE == 100)
          ED0AM210.ED0AMMSG = " ENTER A VALID TRADING PARTNER TYPE CODE";
          set ED0AM210.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
          ED0AWERR = "Y";
          return;
        end
      else
        VEDTCD01.EDI-TRDPT-TYP-CD = "  ";
      end
    end
  else
    ED0AM210.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM210.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end

end // end ED0AS-VALID-M210

// validate info - factory
Function ED0AS-VALID-M220()
   /* *****************************************************************/
   /* validate screen -   ed0as-valid-m220*/
   /* *****************************************************************/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM220.ED0AM-SEL[ED0AWIDX];

  if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM220.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM220.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM220.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM220.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM220.ED0AM-SEL[ED0AWIDX] skip;
    end

     /* factory validation*/

    if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "A")

      /* trading partner check for non blank for add*/

      if (ED0AM220.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM220.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM220.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end

      if (ED0AM220.FY-FCTY-CD[ED0AWIDX] == " ")
        ED0AM220.ED0AMMSG = " ENTER A VALID FACTORY CODE ";
        set ED0AM220.FY-FCTY-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM220.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM220.FY-FCTY-CD[ED0AWIDX] bold;
        set ED0AM220.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      else
        FY1REC.FY1FCTYC = ED0AM220.FY-FCTY-CD[ED0AWIDX];
        ED0AS-GET-FCTY-NM(); /* get factory name*/
        if (FY1REC.FY1FCTNM != " ")
          ED0AM220.EDI-TRDPT-NM[ED0AWIDX] = FY1REC.FY1FCTNM;
          ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX] = FY1REC.FY1FCTSN;
          ED0AW04-NAME-EXISTS[ED0AW-CNT] = "Y";
        else
          ED0AW04-NAME-EXISTS[ED0AW-CNT] = "N";
        end
        ED0AW04-FY-FCTY-CD[ED0AW-CNT] = ED0AM220.FY-FCTY-CD[ED0AWIDX];
        ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM220.EDI-TRDPT-ID[ED0AWIDX];
        ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM220.EDI-TRDPT-ABRV[ED0AWIDX];
        ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM220.EDI-TRDPT-NM[ED0AWIDX];
      end
    end

      /* trading partner type check for add or change*/

    if (ED0AM220.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM220.ED0AM-SEL[ED0AWIDX] == "C")
      ED0AW04-EDI-TRDPT-TYP-CD[ED0AW-CNT] = ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX];
      if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
        XP0O000();
        converseLib.clearScreen();
        
        if (XP0OW02.XP0OWPIX > 0)
          XP0OWCT1 = XP0OW02.XP0OWPIX;
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
          ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        end
      end
      if (ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
        VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX];
        call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
        if (SQLCA.VAGen_SQLCODE == 100)
          ED0AM220.ED0AMMSG = " ENTER VALID TRADING PARTNER TYPE CODE ";
          set ED0AM220.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
          ED0AWERR = "Y";
          return;
        end
      end
    end

  else

    ED0AM220.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM220.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end

end // end ED0AS-VALID-M220

// validate info entered
Function ED0AS-VALID-M230()

   /* validate screen*/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM230.ED0AM-SEL[ED0AWIDX];

  if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM230.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM230.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM230.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM230.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM230.ED0AM-SEL[ED0AWIDX] skip;
    end
    if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "A")
      /* trading partner check for non blank for add*/

      if (ED0AM230.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM230.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM230.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end

      /* customer ticket validation*/

      if (ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] == " ")
        ED0AM230.ED0AMMSG = " ENTER A VALID TICKET SUPPLIER ID ";
        set ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM230.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX] bold;
        set ED0AM230.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      end
    end

    if (ED0AM230.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM230.ED0AM-SEL[ED0AWIDX] == "C")
      VTOPCD01.TI-CUTK-SPLR-CD = ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX];
      ED0AS-GET-CUTK-NM(); /* get ti supplier name*/
      if (SQLCA.VAGen_SQLCODE == 0)
        ED0AM230.EDI-TRDPT-NM[ED0AWIDX] = VTOPCD01.TI-CUTK-SPLR-NM;
        ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX] = VTOPCD01.TI-CUTK-SPLR-ABRV;
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
      else
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
      end
      ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM230.EDI-TRDPT-NM[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM230.EDI-TRDPT-ABRV[ED0AWIDX];
      ED0AW04-TI-CUTK-SPLR-CD[ED0AW-CNT] = ED0AM230.TI-CUTK-SPLR-CD[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM230.EDI-TRDPT-ID[ED0AWIDX];

      /* trading partner type check for add or change*/

      if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
        XP0O000();
        converseLib.clearScreen();
        
        if (XP0OW02.XP0OWPIX > 0)
          XP0OWCT1 = XP0OW02.XP0OWPIX;
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
          ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        end
      end

      if (ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
        VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX];
        call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
        if (SQLCA.VAGen_SQLCODE == 100)
          ED0AM230.ED0AMMSG = " ENTER VALID TRADING PARTNER TYPE CODE ";
          set ED0AM230.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
          ED0AWERR = "Y";
          return;
        end
      end
    end
  else
    ED0AM230.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM230.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end
end // end ED0AS-VALID-M230

// validate info entered
Function ED0AS-VALID-M240()

   /* validate screen*/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM240.ED0AM-SEL[ED0AWIDX];

  if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM240.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM240.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM240.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM240.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM240.ED0AM-SEL[ED0AWIDX] skip;
    end

     /* carrier validation*/

    if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "A")

      /* trading partner check for non blank for add*/

      if (ED0AM240.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM240.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM240.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (ED0AM240.TF-CARR-CD[ED0AWIDX] == " ")
        ED0AM240.ED0AMMSG = " ENTER A VALID CARRIER ID ";
        set ED0AM240.TF-CARR-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM240.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM240.TF-CARR-CD[ED0AWIDX] bold;
        set ED0AM240.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      end
    end

    if (ED0AM240.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM240.ED0AM-SEL[ED0AWIDX] == "C")
      TF1REC.TF1CARCD = ED0AM240.TF-CARR-CD[ED0AWIDX];
      ED0AS-GET-CARR-NM(); /* get ti supplier name*/
      if (SQLCA.VAGen_SQLCODE == 0)
        ED0AM240.EDI-TRDPT-NM[ED0AWIDX] = TF1REC.TF1CARNM;
        ED0AM240.EDI-TRDPT-ABRV[ED0AWIDX] = TF1REC.TF1SABRV;
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
      else
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
      end
      ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM240.EDI-TRDPT-NM[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM240.EDI-TRDPT-ABRV[ED0AWIDX];
      ED0AW04-TF-CARR-CD[ED0AW-CNT] = ED0AM240.TF-CARR-CD[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM240.EDI-TRDPT-ID[ED0AWIDX];
    end

      /* trading partner type check for add or change*/


    if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
      XP0O000();
      converseLib.clearScreen();
      
      if (XP0OW02.XP0OWPIX > 0)
        XP0OWCT1 = XP0OW02.XP0OWPIX;
        ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
      end
    end
    if (ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
      VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX];
      call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 100)
        ED0AM240.ED0AMMSG = " ENTER VALID TRADING PARTNER TYPE CODE ";
        set ED0AM240.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
    end
  else
    ED0AM240.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM240.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end
end // end ED0AS-VALID-M240

// validate info entered
Function ED0AS-VALID-M250()

   /* validate screen*/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM250.ED0AM-SEL[ED0AWIDX];

  if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM250.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM250.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM250.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM250.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM250.ED0AM-SEL[ED0AWIDX] skip;
    end

     /* gl codevalidation*/

    if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "A")

      /* trading partner check for non blank for add*/

      if (ED0AM250.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM250.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM250.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] == " ")
        ED0AM250.ED0AMMSG = " ENTER A VALID GEN LEDGER CODE ";
        set ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM250.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX] bold;
        set ED0AM250.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      end
    end

    if (ED0AM250.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM250.ED0AM-SEL[ED0AWIDX] == "C")
      PFJREC.GLACD = ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX];
      ED0AS-GET-GLCD-NM(); /* get gl acct cd name*/
      if (SQLCA.VAGen_SQLCODE == 0)
        ED0AM250.EDI-TRDPT-NM[ED0AWIDX] = PFJREC.GLADESC;
        ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX] = PFJREC.GLADESC;
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
      else
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
      end
      ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM250.EDI-TRDPT-NM[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM250.EDI-TRDPT-ABRV[ED0AWIDX];
      ED0AW04-GL-GEN-LEDGER-CD[ED0AW-CNT] = ED0AM250.GL-GEN-LEDGER-CD[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM250.EDI-TRDPT-ID[ED0AWIDX];
    end

      /* trading partner type check for add or change*/


    if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
      XP0O000();
      converseLib.clearScreen();
      
      if (XP0OW02.XP0OWPIX > 0)
        XP0OWCT1 = XP0OW02.XP0OWPIX;
        ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
      end
    end
    if (ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
      VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX];
      call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 100)
        ED0AM250.ED0AMMSG = " ENTER VALID TRADING PARTNER TYPE CODE ";
        set ED0AM250.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
    end

  else
    ED0AM250.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM250.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end
end // end ED0AS-VALID-M250

// validate info entered
Function ED0AS-VALID-M260()

   /* ed0as-valid-m260*/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM260.ED0AM-SEL[ED0AWIDX];

  if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM260.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM260.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM260.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM260.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM260.ED0AM-SEL[ED0AWIDX] skip;
    end

     /* warehouse validation*/

    if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "A")
      /* trading partner check for non blank for add*/

      if (ED0AM260.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM260.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM260.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end

      /* WAREHOUSE CODE VALIDATION*/

      if (ED0AM260.XWH-WHSE-CD[ED0AWIDX] == " ")
        ED0AM260.ED0AMMSG = " ENTER A WAREHOUSE CD ";
        set ED0AM260.XWH-WHSE-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM260.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM260.XWH-WHSE-CD[ED0AWIDX] bold;
        set ED0AM260.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      end
    end

    if (ED0AM260.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM260.ED0AM-SEL[ED0AWIDX] == "C")
      if (ED0AM260.XWH-WHSE-CD[ED0AWIDX] in XWHTBL.XWHCD
       && ED0AM260.XWH-WHSE-CD[ED0AWIDX] != "  ")
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "Y";
        ED0AM260.EDI-TRDPT-NM[ED0AWIDX] = XWHTBL.XWHNM[sysVar.arrayIndex];
        ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX] = XWHTBL.XWHSABRV[sysVar.arrayIndex];
      else
        ED0AW04-NAME-EXISTS[ED0AWIDX] = "N";
      end
      ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM260.EDI-TRDPT-NM[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM260.EDI-TRDPT-ABRV[ED0AWIDX];
      ED0AW04-XWH-WHSE-CD[ED0AW-CNT] = ED0AM260.XWH-WHSE-CD[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM260.EDI-TRDPT-ID[ED0AWIDX];
    end

      /* trading partner type check for add or change*/

    if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
      XP0O000();
      converseLib.clearScreen();
      
      if (XP0OW02.XP0OWPIX > 0)
        XP0OWCT1 = XP0OW02.XP0OWPIX;
        ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
      end
    end
    if (ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
      VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX];
      call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
      if (SQLCA.VAGen_SQLCODE == 100)
        ED0AM260.ED0AMMSG = " ENTER VALID TRADING PARTNER TYPE CODE ";
        set ED0AM260.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
    end
  else
    ED0AM260.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM260.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end
end // end ED0AS-VALID-M260

// fetch edi rows via co
Function ED0AS-VALID-M270()

   /* validate screen*/

  ED0AW04-SEL[ED0AW-CNT] = ED0AM270.ED0AM-SEL[ED0AWIDX];

  if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "A" || 
  ED0AM270.ED0AM-SEL[ED0AWIDX] == "C" || 
  ED0AM270.ED0AM-SEL[ED0AWIDX] == "D" || 
  ED0AM270.ED0AM-SEL[ED0AWIDX] == " ")
    if (ED0AM270.ED0AM-SEL[ED0AWIDX] != " ")
      set ED0AM270.ED0AM-SEL[ED0AWIDX] skip;
    end

      /* trading partner check for non blank for add*/

    if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "A")
      if (ED0AM270.EDI-TRDPT-ID[ED0AWIDX] == " ")
        ED0AM270.ED0AMMSG = " ENTER A VALID TRADING PARTNER ID ";
        set ED0AM270.EDI-TRDPT-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end

      /* company number validation for  add*/

      if (ED0AM270.CU-CO-ID[ED0AWIDX] == 0)
        ED0AM270.ED0AMMSG = " ENTER A VALID COMPANY ID ";
        set ED0AM270.CU-CO-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (ED0AM270.CU-STOR-ID[ED0AWIDX] == 0)
        ED0AM270.ED0AMMSG = " ENTER A VALID STOR ID ";
        set ED0AM270.CU-STOR-ID[ED0AWIDX] cursor, bold;
        ED0AWERR = "Y";
        return;
      end
      if (SQLCA.VAGen_SQLCODE == 0)
        converseLib.validationFailed(8);
        ED0AWERR = "Y";
        set ED0AM270.ED0AM-SEL[ED0AWIDX] bold, cursor;
        set ED0AM270.CU-CO-ID[ED0AWIDX] bold;
        set ED0AM270.EDI-TRDPT-ID[ED0AWIDX] bold;
        return;
      end
    end

      /* trading partner type check for add or change*/

    if (ED0AM270.ED0AM-SEL[ED0AWIDX] == "A"
     || ED0AM270.ED0AM-SEL[ED0AWIDX] == "C")

      VCMPNY02.KUCCOID = ED0AM270.CU-CO-ID[ED0AWIDX];

      ED0AS-GET-CO-NM(); /* get company name*/

      if (SQLCA.VAGen_SQLCODE == 0)
        ED0AW04-NAME-EXISTS[ED0AW-CNT] = "Y";
        ED0AM270.EDI-TRDPT-NM[ED0AWIDX] = VCMPNY02.KUCCONM;
        ED0AM270.EDI-TRDPT-ABRV[ED0AWIDX] = CU-CO-SHORT-NM;
      else
        ED0AW04-NAME-EXISTS[ED0AW-CNT] = "N";
      end
      ED0AW04-EDI-TRDPT-ABRV[ED0AW-CNT] = ED0AM270.EDI-TRDPT-ABRV[ED0AWIDX];
      ED0AW04-EDI-TRDPT-NM[ED0AW-CNT] = ED0AM270.EDI-TRDPT-NM[ED0AWIDX];
      ED0AW04-CU-CO-ID[ED0AW-CNT] = ED0AM270.CU-CO-ID[ED0AWIDX];
      ED0AW04-CU-STOR-ID[ED0AW-CNT] = ED0AM270.CU-STOR-ID[ED0AWIDX];
      ED0AW04-EDI-TRDPT-ID[ED0AW-CNT] = ED0AM270.EDI-TRDPT-ID[ED0AWIDX];
      if (ED0AW04-EDI-TRDPT-TYP-CD-1[ED0AW-CNT] == "?")
        XP0O000();
        converseLib.clearScreen();
        
        if (XP0OW02.XP0OWPIX > 0)
          XP0OWCT1 = XP0OW02.XP0OWPIX;
          ED0AW04-EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
          ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        end
      end
      if (ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX] != " ")
        VEDTCD01.EDI-TRDPT-TYP-CD = ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX];
        call "VEDTCD01" ("S ", SQLCA, VEDTCD01) {isNoRefresh = yes, isExternal = yes};
        if (SQLCA.VAGen_SQLCODE == 100)
          ED0AM270.ED0AMMSG = " ENTER A VALID TRADING PARTNER TYPE CODE";
          set ED0AM270.EDI-TRDPT-TYP-CD[ED0AWIDX] cursor, bold;
          ED0AWERR = "Y";
          return;
        end
      else
        VEDTCD01.EDI-TRDPT-TYP-CD = "  ";
      end
    end
  else
    ED0AM270.ED0AMMSG = " VALID SELECTIONS ARE: A=ADD, C=CHANGE, D=DELETE ";
    set ED0AM270.ED0AM-SEL[ED0AWIDX] cursor, bold;
    ED0AWERR = "Y";
    return;
  end

end // end ED0AS-VALID-M270

// get next transaction
Function ED0AS3-CLOSE-TRN()
   /* ******************************************************************/
   /* CLOSE  transaction from dedi.vetpxm01*/
   /* ******************************************************************/

  call "VETPXM01" ("C1", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "FETC";
    TA1REC.TA1PGMNM = "CLOSE-TRN ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VETPXM01";
    TA1REC.TA1TBLKE = ED0AWKEY;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS3-CLOSE-TRN

// add editp tranaction
Function ED0AS3-EDI-TRN-ADD()

  ED0AS3-EDI-TRN-SEL();

  if (SQLCA.VAGen_SQLCODE == 0)
   /* ********************** tcs changes begin *********************/
    converseLib.validationFailed(10);
   /* MOVE 194 TO EZEMNO;*/
   /* ********************** tcs changes end ***********************/
    ED0AW01.ED0AWERR = "Y";
    return;
  end

  VEDTPR03.CU-STOR-ID = ED0AW-KUSTOID;
  VEDTPR01.CU-CO-ID = ED0AW-KUCCOID;
  VEDTPR03.CU-CO-ID = ED0AW-KUCCOID;
  VETPXM01.EDI-TRDPT-NBR = ED0AW-EDI-TRDPT-NBR;
  VEDTPR01.EDI-TRDPT-NBR = ED0AW-EDI-TRDPT-NBR;
  VEDTPR03.EDI-TRDPT-NBR = ED0AW-EDI-TRDPT-NBR;
  VETPXM01.EDI-TRN-CD = ED0AW03-EDI-TRN-CD[ED0AW-IDX3];
  VETPXM01.EDI-TRN-BOUND-CD = ED0AW03-EDI-TRN-BOUND-CD[ED0AW-IDX3];

   /* check if tran exist for company number*/

  if (ED0AM100.ED0AM-SEL == "7")
    if (VEDTPR03.CU-CO-ID > 0 && VEDTPR03.CU-STOR-ID > 0)
      call "ED4000" ("S ", SQLCA, VETPXM01, VEDTPR03) {isNoRefresh = yes, isExternal = yes};
    end
  else
    if (VEDTPR01.CU-CO-ID > 0)
      call "ED1000" ("S ", SQLCA, VETPXM01, VEDTPR01) {isNoRefresh = yes, isExternal = yes};
    end
  end
  if (SQLCA.VAGen_SQLCODE == 100 || 
  SQLCA.VAGen_SQLCODE == 0 || 
  SQLCA.VAGen_SQLCODE == -811)
        /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1LOCAT = "ADD ";
    TA1REC.TA1FUNC = "ADD ";
    TA1REC.TA1PGMNM = "ED0AS3-EDI-TRN-";
    TA1REC.TA1DBASE = "DEDI ";
    TA1REC.TA1TBLVU = "VETPXM01";
    ED0AWCID = VETPXM01.EDI-TRDPT-NBR;
    TA1REC.TA1TBLKE = ED0AWCID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

  if (SQLCA.VAGen_SQLCODE == 0 || 
  SQLCA.VAGen_SQLCODE == -811)
    ED0AM300.ED0AMMSG = " TRANSACTION TYPE ALREADY EXISTS FOR COMPANY";
    ED0AW3-UPDT = "N";
    return;
  end


  VETPXM01.ZZ-SDT = XX0XW01.XX0XWDAT;
  VETPXM01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
  VETPXM01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;
  VETPXM01.ZZ-CHNG-CNT = 0;
  VETPXM01.XXX-STAT = "A";

  call "VETPXM01" ("A ", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1LOCAT = "ADD ";
    TA1REC.TA1FUNC = "ADD ";
    TA1REC.TA1PGMNM = "ED0AS-ADD-EDITP";
    TA1REC.TA1DBASE = "DEDI ";
    TA1REC.TA1TBLVU = "VETPXM01";
    ED0AWCID = VETPXM01.EDI-TRDPT-NBR;
    TA1REC.TA1TBLKE = ED0AWCID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end ED0AS3-EDI-TRN-ADD

// change editp /update
Function ED0AS3-EDI-TRN-CHG()

  ED0AS3-EDI-TRN-SEL();

  if (SQLCA.VAGen_SQLCODE == 100)
   /* ******************tcs changes begin *************************/
    converseLib.validationFailed(7);
   /* MOVE  137 TO EZEMNO;*/
   /* ******************tcs changes end****************************/
    ED0AW01.ED0AWERR = "Y";
    return;
  end


  VETPXM01.EDI-TRN-BOUND-CD = ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3];

  VETPXM01.EDI-TRN-STAT-CD = ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3];

  VETPXM01.ZZ-SDT = XX0XW01.XX0XWDAT;
  VETPXM01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT;
  VETPXM01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM;

  call "VETPXM01" ("U ", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CHNG";
    TA1REC.TA1LOC = "CHNG";
    TA1REC.TA1PGMNM = "ED0AS3-EDI-TRN-CHG";
    TA1REC.TA1DBASE = "DEDI ";
    TA1REC.TA1TBLVU = "VETPXM01";
    ED0AWCID = VETPXM01.EDI-TRDPT-NBR;
    TA1REC.TA1TBLKE = ED0AWCID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end ED0AS3-EDI-TRN-CHG

// del edi transaction
Function ED0AS3-EDI-TRN-DEL()

  ED0AS3-EDI-TRN-SEL();

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(11);
    ED0AW01.ED0AWERR = "Y";
    return;
  end

  call "VETPXM01" ("D ", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "DEL ";
    TA1REC.TA1LOC = "DEL ";
    TA1REC.TA1PGMNM = "ED0AS3-EDI-TRN-DEL";
    TA1REC.TA1DBASE = "DEDI ";
    TA1REC.TA1TBLVU = "VETPXM01";
    ED0AWCID = VETPXM01.EDI-TRDPT-NBR;
    TA1REC.TA1TBLKE = ED0AWCID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end
end // end ED0AS3-EDI-TRN-DEL

// select edi transaction
Function ED0AS3-EDI-TRN-SEL()

   /* ************begin ed0as3-edi-trn-sel*******************/

  VETPXM01.EDI-TRDPT-NBR = ED0AW-EDI-TRDPT-NBR;
  VETPXM01.EDI-TRN-CD = ED0AW03-EDI-TRN-CD[ED0AW-IDX3];
  VETPXM01.EDI-TRN-BOUND-CD = ED0AW03-EDI-TRN-BOUND-CD[ED0AW-IDX3];

  call "VETPXM01" ("S ", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)

  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SEL ";
    TA1REC.TA1LOC = "SEL ";
    TA1REC.TA1PGMNM = "ED0AS3-EDI-TRN-SEL";
    TA1REC.TA1DBASE = "DEDI ";
    TA1REC.TA1TBLVU = "VETPXM01";
    ED0AWCID = VETPXM01.EDI-TRDPT-NBR;
    TA1REC.TA1TBLKE = ED0AWCID;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

   /* F VEDTPR01.CU-CO-ID > 0;*/
   /* CALL ED1000 'S ',SQLCA,VETPXM01,VEDTPR01 (NOMAPS,NONCSP;*/
   /* IF SQLCA.SQLCODE EQ 0*/
     /* OR SQLCA.SQLCODE EQ 100;*/
     /* ;*/
   /* ELSE;*/
     /* CALL RESET;*/
     /* MOVE 'DB2' TO TA1REC.TA1TYPE;*/
     /* MOVE 'SEL ' TO TA1REC.TA1FUNC;*/
     /* MOVE 'SEL ' TO TA1REC.TA1LOC;*/
     /* MOVE 'ED0AS3-EDI-TRN-SEL' TO TA1REC.TA1PGMNM;*/
     /* MOVE 'DEDI ' TO TA1REC.TA1DBASE;*/
     /* MOVE 'VETPXM01' TO TA1REC.TA1TBLVU;*/
     /* MOVE VETPXM01.EDI-TRDPT-NBR TO ED0AWCID;*/
     /* MOVE ED0AWCID TO TA1REC.TA1TBLKE;*/
     /* CALL TA0020 TA1REC,SQLCA (NONCSP;*/
     /* XSPF4;*/
   /* END;*/
   /* ND;*/
   /* ************begin ed0as3-edi-trn-sel*******************/

end // end ED0AS3-EDI-TRN-SEL

// open trdpt trn cursor
Function ED0AS3-GET-TRN()
   /* **************************************************************/
   /* ed0as3-get-trn                              **/
   /* open cursor - edi transaction table      -**/
   /* **************************************************************/

  call "VETPXM01" ("S1", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  ED0AW-TRN-SQLCODE = SQLCA.VAGen_SQLCODE; /* set tran sqlcode*/

  if (SQLCA.VAGen_SQLCODE == 0)

  else
   /* ***********************tcs changes begin ******************/
   /* IF SQLCA.SQLCODE EQ 100;*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "OPEN";
    TA1REC.TA1PGMNM = "GET-TRANS ";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VETPXM01";
    ED0AWCID = VETPXM01.EDI-TRDPT-NBR;
    move ED0AWCID to TA1TBLKE withV60Compat;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* ***********************tcs changes end*********************/
  end

end // end ED0AS3-GET-TRN

// fetch for tran code table
Function ED0AS3-GET-TRN-CD()
   /* *********************************************************************/
   /* ed0as3-get-trn-cd - begin*/
   /* get next tran code*/
   /* *********************************************************************/

  call "VEDXCD01" ("N2", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};

  XP0MW02.XP0MW-SQLCODE = SQLCA.VAGen_SQLCODE;

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      call "VEDXCD01" ("C2", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "XP0MS-FETC";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDXCD01";
      ED0AWCID = VEDXCD01.EDI-TRN-CD;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

   /* *********************************************************************/
   /* ed0as3-get-trn-cd - end*/
   /* *********************************************************************/
end // end ED0AS3-GET-TRN-CD

// get next transaction
Function ED0AS3-NEXT-TRN()
   /* ******************************************************************/
   /* fetch next transaction from dedi.vetpxm01*/
   /* ******************************************************************/

  call "VETPXM01" ("N1", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};

  move VAGen_SQLCODE to ED0AW-TRN-SQLCODE withV60Compat; /* set transaction sql code*/

  if (ED0AW-TRN-SQLCODE == 0)
    /* next sentence*/
  else
    if (ED0AW-TRN-SQLCODE == 100) /* close vedtpxm01 cursor*/
      call "VETPXM01" ("C1", SQLCA, VETPXM01) {isNoRefresh = yes, isExternal = yes};
      return;
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "NEXT-TRN ";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VETPXM01";
      TA1REC.TA1TBLKE = ED0AWKEY;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end

end // end ED0AS3-NEXT-TRN

// open cursor for tran code tabl
Function ED0AS3-OPEN-TRN-CD()
  /* ****************************************************************/
  /* ed0as3-open-trn-cd                                **/
  /* ****************************************************************/
  /* open cursor*/
  call "VEDXCD01" ("S2", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
                  /* next sentence*/
  else
   /* *************************tcs changes begin**************/
   /* IF SQLCA.SQLCODE EQ 100;*/
    call "VEDXCD01" ("C2", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CURS";
    TA1REC.TA1PGMNM = "TRN-CD-SCN";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDXCD01";
    TA1TBLKE = VEDXCD01.EDI-TRN-ABRV;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* *************************tcs changes end****************/
  end

  /* ****************************************************************/
  /* ed0as3-open-trn-cd cursor -                        **/
  /* ****************************************************************/
end // end ED0AS3-OPEN-TRN-CD

// open stat code cursor
Function ED0AS3-STAT-CD-CSR()
  /* ****************************************************************/
  /* ed0as3-open-trn-crsr               **/
  /* ****************************************************************/
  /* open cursor*/
  /* ****************************************************************/
  call "VEDSCD01" ("S1", SQLCA, VEDSCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
                  /* next sentence*/
  else
   /* **********************tcs changes begin********************/
   /* IF SQLCA.SQLCODE EQ 100;*/
    call "VEDSCD01" ("C2", SQLCA, VEDSCD01) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CURS";
    TA1REC.TA1PGMNM = "ED0AS3-OPEN";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDSCD01";
    TA1TBLKE = VEDSCD01.EDI-TRN-STAT-CD;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* **********************tcs changes end**********************/
  end
end // end ED0AS3-STAT-CD-CSR

// get rows - stat code
Function ED0AS3-STAT-CD-GET()
   /* *******************************************************************/
   /* ed0as3-stat-cd-get     - begin*/
   /* *******************************************************************/

  call "VEDSCD01" ("N1", SQLCA, VEDSCD01) {isNoRefresh = yes, isExternal = yes};

  XP0NW02.XP0NW-SQLCODE = SQLCA.VAGen_SQLCODE;

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == 100)
      call "VEDSCD01" ("C2", SQLCA, VEDSCD01) {isNoRefresh = yes, isExternal = yes};
    else
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      TA1REC.TA1TYPE = "DB2";
      TA1REC.TA1FUNC = "FETC";
      TA1REC.TA1PGMNM = "XP0NS-FETC";
      TA1REC.TA1DBASE = "DEDI";
      TA1REC.TA1TBLVU = "VEDSCD01";
      ED0AWCID = VEDSCD01.EDI-TRN-STAT-CD;
      call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
      XSPF4();
    end
  end
   /* *******************************************************************/
   /* ed0as3-stat-cd-get     - end*/
   /* *******************************************************************/
end // end ED0AS3-STAT-CD-GET

// scan trn code table for hit
Function ED0AS3-TRN-CD-CLS()
  /* ****************************************************************/
  /* ed0as3-trn-cd-cls                                  **/
  /* ****************************************************************/
  /* close cursor*/

  call "VEDXCD01" ("C1", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
    /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CURS";
    TA1REC.TA1PGMNM = "TRN-CD-CLS";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDXCD01";
    TA1TBLKE = VEDXCD01.EDI-TRN-ABRV;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

  /* ****************************************************************/
  /* ed0as3-trn-cd-scan                                 **/
  /* ****************************************************************/
end // end ED0AS3-TRN-CD-CLS

// get trn code information
Function ED0AS3-TRN-CD-INFO()

   /* select tran code info                    -*/

  call "VEDXCD01" ("S ", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 || 
  SQLCA.VAGen_SQLCODE == 100)
    return;
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SELE";
    TA1REC.TA1PGMNM = "TRN-CD-INF";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDXCD01";
    ED0AWCID = VCMPNY02.KUCCOID;
    move ED0AWKEY to TA1TBLKE withV60Compat;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS3-TRN-CD-INFO

// get next trn code
Function ED0AS3-TRN-CD-NEXT()
   /* *********************************************************************/
   /* ed0as3-trn-cd-next    - begin*/
       /* get next tran code*/
   /* *********************************************************************/

  call "VEDXCD01" ("N1", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 100 || SQLCA.VAGen_SQLCODE == 0)
     /* next sentence*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SELE";
    TA1REC.TA1PGMNM = "TRN-CD-INF";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDXCD01";
    ED0AWCID = VEDXCD01.EDI-TRN-CD;
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS3-TRN-CD-NEXT

// scan trn code table for hit
Function ED0AS3-TRN-CD-SCAN()
  /* ****************************************************************/
  /* ed0as3-trn-cd-scan                                 **/
  /* ****************************************************************/
  /* open cursor*/
  call "VEDXCD01" ("S1", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)
                  /* next sentence*/
  else
   /* ***********************tcs changes begin ***********************/
   /* IF SQLCA.SQLCODE EQ 100;*/
    call "VEDXCD01" ("C1", SQLCA, VEDXCD01) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/
   /* MOVE 29 TO EZEMNO;*/
   /* EZERTN;*/
   /* ELSE;*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "CURS";
    TA1REC.TA1PGMNM = "TRN-CD-SCN";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDXCD01";
    TA1TBLKE = VEDXCD01.EDI-TRN-ABRV;
    TA1REC.TA1LOC = "ED0AS3-TRN-CD-SCAN";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
   /* END;*/
   /* ***********************tcs changes end**************************/
  end

  /* ****************************************************************/
  /* ed0as3-trn-cd-scan                                 **/
  /* ****************************************************************/
end // end ED0AS3-TRN-CD-SCAN

// load map info
Function ED0AS3-TRN-INFO()
   /* **************************************************/
   /* ED0AS3-TRN-INFO                   **/
     /* load working storage will all rows for transactions*/
   /* *************************************************/

  ED0AW03-EDI-TRN-BOUND-CD[ED0AW-IDX3] = VETPXM01.EDI-TRN-BOUND-CD;
  VEDXCD01.EDI-TRN-CD = VETPXM01.EDI-TRN-CD;

  ED0AS3-TRN-CD-INFO(); /* get transaction code information*/

  ED0AW03-EDI-TRN-CD[ED0AW-IDX3] = VEDXCD01.EDI-TRN-CD;
  ED0AW03-EDI-TRN-ABRV[ED0AW-IDX3] = VEDXCD01.EDI-TRN-ABRV;
  ED0AW03-EDI-TRN-DESC[ED0AW-IDX3] = VEDXCD01.EDI-TRN-DESC;

   /* IF RECORD NOT FOUND MOVE SPACES TO abrv, desc*/

  if (VAGen_SQLCODE == 100)
    ED0AW03-EDI-TRN-ABRV[ED0AW-IDX3] = " ";
    ED0AW03-EDI-TRN-DESC[ED0AW-IDX3] = " ";
    ED0AW03-EDI-TRN-BOUND-CD[ED0AW-IDX3] = " ";
  end

  VEDSCD01.EDI-TRN-STAT-CD = VETPXM01.EDI-TRN-STAT-CD;

  ED0AS3-TRN-ST-INFO(); /* get status code information*/

  ED0AW03-EDI-TRN-STAT-CD[ED0AW-IDX3] = VEDSCD01.EDI-TRN-STAT-CD;
  ED0AW03-EDI-TRN-STAT-DESC[ED0AW-IDX3] = VEDSCD01.EDI-TRN-STAT-DESC;

   /* IF Row NOT FOUND MOVE SPACES TO stat code and desc*/

  if (VAGen_SQLCODE == 100)
    ED0AW03-EDI-TRN-STAT-CD[ED0AW-IDX3] = " ";
    ED0AW03-EDI-TRN-STAT-DESC[ED0AW-IDX3] = " ";
  end
end // end ED0AS3-TRN-INFO

// get trn code information
Function ED0AS3-TRN-ST-INFO()

   /* select tran code info                    -*/

  call "VEDSCD01" ("S ", SQLCA, VEDSCD01) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0 || 
  SQLCA.VAGen_SQLCODE == 100)
    return;
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1FUNC = "SELE";
    TA1REC.TA1PGMNM = "TRN-ST-INF";
    TA1REC.TA1DBASE = "DEDI";
    TA1REC.TA1TBLVU = "VEDSCD01";
    call "TA0020" (TA1REC, SQLCA) {isExternal = yes};
    XSPF4();
  end

end // end ED0AS3-TRN-ST-INFO

// fetch edi rows via co
Function ED0AS3-VALID-SCRN()
   /* *******************************************************************/
   /* ed0as3-valid-scrn                            **/
   /* *******************************************************************/


  if (ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "A" || 
  ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "D" || 
  ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "C" || 
  ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "X" || 
  ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == " ")

  /* CHANGES FOR DECONSOLIDATION BEGIN*/
    if (ED0AM100.ED0AM-SEL == "7")
      if (ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] == "856D")
        ED0AW01.ED0AW-EDI-DSASN-FL1 = "Y";
      else
        if (ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] == "856C")
          ED0AW01.ED0AW-EDI-DSASN-FL2 = "Y";
        else
          if (ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] == "856E")
            ED0AW01.ED0AW-EDI-DSASN-FL3 = "Y";
          end
        end
      end
    end

    ED0AW03-SEL[ED0AW-IDX3] = ED0AM300.ED0AM3-SEL[ED0AW-IDX3];
    set ED0AM300.ED0AM3-SEL[ED0AW-IDX3] initialAttributes;
    if (ED0AM300.ED0AM3-SEL[ED0AW-IDX3] != " ")
      set ED0AM300.ED0AM3-SEL[ED0AW-IDX3] skip;
    end
    if (ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "A")

      if (ED0AM100.ED0AM-SEL == "7")
        if ((ED0AW01.ED0AW-EDI-DSASN-FL1 == "Y" && 
        ED0AW01.ED0AW-EDI-DSASN-FL2 == "Y"))
          ED0AM300.ED0AMMSG = "856D&856C TOGETHER CANNOT BE SETUP FOR ONE CUSTOMER-STORE";
          set ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] cursor, bold;
          ED0AWERR = "Y";
          return;
        else
          if ((ED0AW01.ED0AW-EDI-DSASN-FL1 == "Y" && 
          ED0AW01.ED0AW-EDI-DSASN-FL3 == "Y"))
            ED0AM300.ED0AMMSG = "856D&856E TOGETHER CANNOT BE SETUP FOR ONE CUSTOMER-STORE";
            set ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] cursor, bold;
            ED0AWERR = "Y";
            return;
          else
            if ((ED0AW01.ED0AW-EDI-DSASN-FL2 == "Y" && 
            ED0AW01.ED0AW-EDI-DSASN-FL3 == "Y"))
              ED0AM300.ED0AMMSG = "856C&856E TOGETHER CANNOT BE SETUP FOR ONE CUSTOMER-STORE";
              set ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] cursor, bold;
              ED0AWERR = "Y";
              return;
            end
          end
        end
      end
  /* CHANGES FOR DECONSOLIDATION ENDS*/

      ED0AW03-EDI-TRN-ABRV[ED0AW-IDX3] = ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3];

      /* check transaction code*/

      if (ED0AW03-EDI-TRN-ABRV-1[ED0AW-IDX3] == "?")
        XP0M000();
        ED0AW-PAGE-MAP3 = "Y";
        if (XP0MW02.XP0MWPIX > 0)
          XP0MWCT1 = XP0MW02.XP0MWPIX;
          ED0AW03-EDI-TRN-CD[ED0AW-IDX3] = XP0MW01.EDI-TRN-CD[XP0MWCT1];
          ED0AM300.ED0AM3-EDI-TRN-DESC[ED0AW-IDX3] = XP0MW01.EDI-TRN-DESC[XP0MWCT1];
          ED0AW03-EDI-TRN-DESC[ED0AW-IDX3] = XP0MW01.EDI-TRN-DESC[XP0MWCT1];
          ED0AW03-EDI-TRN-ABRV[ED0AW-IDX3] = XP0MW01.EDI-TRN-ABRV[XP0MWCT1];
          ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] = XP0MW01.EDI-TRN-ABRV[XP0MWCT1];
        end
      end
      VEDXCD01.EDI-TRN-ABRV = ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3]; /* move map field to key field*/

      ED0AS3-TRN-CD-SCAN(); /* validate transaction cd -opn curs*/
      ED0AS3-TRN-CD-NEXT(); /* get next tran cd*/

      if (VAGen_SQLCODE != 0)
        ED0AM300.ED0AMMSG = " ENTER A VALID TRANSACTION CODE ";
        set ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] cursor, bold;
        ED0AWERR = "Y";
        return;
      else
        set ED0AM300.ED0AM3-EDI-TRN-ABRV[ED0AW-IDX3] initialAttributes;
        VETPXM01.EDI-TRN-CD = VEDXCD01.EDI-TRN-CD;
        ED0AW03-EDI-TRN-CD[ED0AW-IDX3] = VEDXCD01.EDI-TRN-CD;
        ED0AM3-EDI-TRN-DESC[ED0AW-IDX3] = VEDXCD01.EDI-TRN-DESC;
      end
      ED0AS3-TRN-CD-CLS(); /* close tran code typ cursor*/
    end
    if (ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "A" || 
    ED0AM300.ED0AM3-SEL[ED0AW-IDX3] == "C")

         /* send or receive flag*/

      if (ED0AM300.ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] == "S" || 
      ED0AM300.ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] == "R")
        ED0AW03-EDI-TRN-BOUND-CD[ED0AW-IDX3] = ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3];
        VETPXM01.EDI-TRN-BOUND-CD = ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3];
        set ED0AM300.ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] skip;
      else
        ED0AM300.ED0AMMSG = " ENTER S=SEND, R=RECIEVE ";
        set ED0AM300.ED0AM3-EDI-TRN-BOUND-CD[ED0AW-IDX3] cursor, bold;
        ED0AWERR = "Y";
        return;
      end

      /* check status code*/

      ED0AW03-EDI-TRN-STAT-CD[ED0AW-IDX3] = ED0AM300.ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3];
      if (ED0AW03-EDI-TRN-STAT-CD-1[ED0AW-IDX3] == "?")
        XP0N000();
        ED0AW-PAGE-MAP3 = "Y";
        if (XP0NW02.XP0NWPIX > 0)
          move XP0NWPIX to XP0NWCT1 withV60Compat;
          ED0AW03-EDI-TRN-STAT-CD[ED0AW-IDX3] = XP0NW01.EDI-TRN-STAT-CD[XP0NWCT1];
          ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3] = XP0NW01.EDI-TRN-STAT-CD[XP0NWCT1];
          ED0AM300.ED0AM3-EDI-TRN-STAT-DESC[ED0AW-IDX3] = XP0NW01.EDI-TRN-STAT-DESC[XP0NWCT1];
          ED0AW03-EDI-TRN-STAT-DESC[ED0AW-IDX3] = XP0NW01.EDI-TRN-STAT-DESC[XP0NWCT1];
        end
      end
      VEDSCD01.EDI-TRN-STAT-CD = ED0AM300.ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3]; /* move map field to key field*/

      ED0AS3-TRN-ST-INFO(); /* validate status code*/

      if (VAGen_SQLCODE != 0)
        ED0AM300.ED0AMMSG = " ENTER A VALID STATUS CODE ";
        set ED0AM300.ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3] cursor, bold;
        ED0AWERR = "Y";
        return;
      else
        VETPXM01.EDI-TRN-STAT-CD = VEDSCD01.EDI-TRN-STAT-CD;
        ED0AM3-EDI-TRN-STAT-DESC[ED0AW-IDX3] = VEDSCD01.EDI-TRN-STAT-DESC;
        set ED0AM300.ED0AM3-EDI-TRN-STAT-CD[ED0AW-IDX3] initialAttributes;
      end

    end
  else
    ED0AM300.ED0AMMSG = " ENTER A, C, D FOR SELECTION CODE ";
    set ED0AM300.ED0AM3-SEL[ED0AW-IDX3] bold, cursor;
    ED0AWERR = "Y";
    return;
  end

   /* *******************************************************************/
   /* ed0as3-valid-scrn                            **/
   /* *******************************************************************/

end // end ED0AS3-VALID-SCRN

// get info for department displa
Function XP0M000()
  /* *************************************************************/
    /* ***  THE FOLLOWING MUST BE ADDED TO THE HOST APPLICATION*/
    /* ***  FOR THIS MODULE TO EXECUTE SUCCESSFULLY*/
           /* ADD TO RECORDS LIST:*/
               /* xp0mW01*/
               /* xp0mW02*/
               /* xp0mW04*/
           /* ADD TO MAP GROUP:*/
               /* xp0mM001*/
   /* *************************************************************/

    /* PROCESS SYNOPSIS:*/
    /* 1. select and load table with department codes.*/
    /* 2. update table with depart info if requested.*/
    /* 3. move table values to popup window map and converse*/
       /* popup window map.*/
   /* ------------------------------------------------------------*/

  set XP0MM001 initial; /* clear map*/
  set XP0MW01 empty; /* empty work records*/
  set XP0MW02 empty; /* empty work records*/
  set XP0MW04 empty; /* empty work records*/
  XP0M001(); /* popup window initialization*/
  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;

  ED0AS3-OPEN-TRN-CD(); /* open transaction code cursor*/

  XP0MW02.XP0MWCT1 = 0;


   /* load working storage*/

  while (XP0MW02.XP0MWCT1 < 30 && XP0MW-SQLCODE == 0)
    ED0AS3-GET-TRN-CD(); /* load transaction code to table*/
    XP0MW02.XP0MWCT1 = XP0MW02.XP0MWCT1 + 1;
    if (XP0MW-SQLCODE == 0)
      XP0MW01.EDI-TRN-CD[XP0MWCT1] = VEDXCD01.EDI-TRN-CD;
      XP0MW01.EDI-TRN-ABRV[XP0MWCT1] = VEDXCD01.EDI-TRN-ABRV;
      XP0MW01.EDI-TRN-DESC[XP0MWCT1] = VEDXCD01.EDI-TRN-DESC;
    end
  end

  while (XP0MW02.XP0MWEND == "N") /* until end of request*/
    XP0M002(); /* display table values on popup map*/
  end

end // end XP0M000

// Initialization - pop up window
Function XP0M001()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  XP0MW02.XP0MWCT1 = 1; /* Table index*/
  XP0MW02.XP0MWCT2 = 1; /* Screen index*/
  XP0MW02.XP0MWSIX = 1; /* End of first page save index*/
  XP0MW02.XP0MWINX[1] = 1; /* End of first page save index*/
  XP0MW02.XP0MWPIX = 0; /* Initialize pass index to zero*/
  XP0MW02.XP0MWFFL = "Y"; /* first time thru flag*/
  XP0MW02.XP0MWERR = "N"; /* Scroll error flag to no*/
  XP0MW02.XP0MWEND = "N"; /* End of pop up window session flag*/
  XP0MW04.XP0MW-SELECT-FLAG = "N";


end // end XP0M001

// converse popup tran code
Function XP0M002()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR edi transaction codes*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XP0MW02.XP0MWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XP0MW02.XP0MWFFL == "N") /* if not the first time through*/
      XP0MW02.XP0MWCT1 = XP0MW02.XP0MWINX[10] + 1; /* set up scroll pf8*/
    else
      XP0MW02.XP0MWCT1 = 1; /* /first time through*/
    end

    XP0MM001.XP0MMHDR = "EDI Transaction Codes"; /* Place head. on map*/
    XP0MM001.XP0MMTR1 = "(S)elect & Enter";
    XP0MM001.XP0MMTR2 = "   PF7:Back                   PF8:Frwd";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XP0MW02.XP0MWFFL == "Y")    /* Or it is the first time thru*/
      XP0MW02.XP0MWCT2 = 1; /* Set up screen index*/
      while (XP0MW02.XP0MWCT2 <= 10 /* Until end of screen lines*/
       && XP0MWCT1 != 100) /* Or end*/
        XP0MM001.EDI-TRN-ABRV[XP0MWCT2] = XP0MW01.EDI-TRN-ABRV[XP0MWCT1];
        XP0MM001.XP0MMSEL[XP0MWCT2] = XP0MW01.XP0MWSEL[XP0MWCT1];
        XP0MM001.EDI-TRN-DESC[XP0MWCT2] = XP0MW01.EDI-TRN-DESC[XP0MWCT1];
        XP0MW02.XP0MWINX[XP0MWCT2] = XP0MW02.XP0MWCT1; /* Save array*/
        if (XP0MW02.XP0MWFFL == "Y") /* If first time thru*/
          XP0MW02.XP0MWSIX = XP0MW02.XP0MWCT1; /* Save last index*/
        end
        set XP0MM001.XP0MMSEL[XP0MWCT2] normal; /* Set selects to normal*/
        XP0MW02.XP0MWCT2 = XP0MW02.XP0MWCT2 + 1; /* Increment screen index*/
        XP0MW02.XP0MWCT1 = XP0MW02.XP0MWCT1 + 1; /* Increment table index*/
      end
      XP0MW02.XP0MWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XP0MW02.XP0MWCT1 = XP0MW02.XP0MWINX[1] - 1; /* Set up table index*/
      XP0MW02.XP0MWCT2 = 10; /* Set up screen index*/
      while (XP0MW02.XP0MWCT2 >= 1) /* Load from the bottom up*/
        XP0MM001.EDI-TRN-ABRV[XP0MWCT2] = XP0MW01.EDI-TRN-ABRV[XP0MWCT1];
        XP0MM001.EDI-TRN-DESC[XP0MWCT2] = XP0MW01.EDI-TRN-DESC[XP0MWCT1];
        XP0MM001.XP0MMSEL[XP0MWCT2] = XP0MW01.XP0MWSEL[XP0MWCT1];
        XP0MW02.XP0MWINX[XP0MWCT2] = XP0MW02.XP0MWCT1; /* Save array*/
        set XP0MM001.XP0MMSEL[XP0MWCT2] normal; /* Set select visible*/
        XP0MW02.XP0MWCT2 = XP0MW02.XP0MWCT2 - 1; /* Decrement screen index*/
        XP0MW02.XP0MWCT1 = XP0MW02.XP0MWCT1 - 1; /* Decrement table index*/
      end
      if (XP0MW02.XP0MWCT1 < 1) /* If the table index was decremented*/
        XP0MW02.XP0MWCT1 = 1; /* to zero, set it to 1*/
      end
    end
  end

  converse XP0MM001 ;
  XP0MW02.XP0MWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XP0MW04.XP0MW-SELECT-FLAG = "N"; /* initialize select flag*/
  XP0MW02.XP0MWCT1 = XP0MW02.XP0MWINX[1]; /* set to 1 if no dep fnd*/
  XP0MW02.XP0MWCT2 = 1; /* Screen index*/
  while (XP0MW02.XP0MWCT2 <= 10) /* Set all fields with data to normal*/
    if (XP0MM001.XP0MMSEL[XP0MWCT2] == "S") /* set select flag*/
      XP0MW04.XP0MW-SELECT-FLAG = "Y";
      set XP0MM001.XP0MMSEL[XP0MWCT2] normal;
      XP0MW02.XP0MWPIX = XP0MWCT2;
      XP0MWCT2 = 10;
    end
    XP0MW02.XP0MWCT2 = XP0MW02.XP0MWCT2 + 1;
    XP0MW02.XP0MWCT1 = XP0MW02.XP0MWCT1 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XP0MW01.EDI-TRN-ABRV[XP0MWCT1] == " ") /* And end of table*/
    XP0MW02.XP0MWERR = "Y"; /* Set error flag*/
    XP0MM001.XP0MMTR2 = "   At End of Table";
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XP0MW02.XP0MWINX[1] <= XP0MW02.XP0MWSIX)
      XP0MW02.XP0MWERR = "Y"; /* Set error flag*/
      XP0MM001.XP0MMTR2 = "   At Beginning of Table";
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XP0MW02.XP0MWEND = "Y"; /* Set end flag*/
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XP0MW02.XP0MWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end XP0M002

// get info for stat cd popup
Function XP0N000()
  /* *************************************************************/
    /* ***  THE FOLLOWING MUST BE ADDED TO THE HOST APPLICATION*/
    /* ***  FOR THIS MODULE TO EXECUTE SUCCESSFULLY*/
           /* ADD TO RECORDS LIST:*/
               /* xp0nW01*/
               /* xp0nW02*/
               /* xp0nW04*/
           /* ADD TO MAP GROUP:*/
               /* xp0nM001*/
   /* *************************************************************/

    /* PROCESS SYNOPSIS:*/
    /* 1. select and load table with department codes.*/
    /* 2. update table with depart info if requested.*/
    /* 3. move table values to popup window map and converse*/
       /* popup window map.*/
   /* ------------------------------------------------------------*/

  set XP0NM001 initial; /* clear map*/
  set XP0NW01 empty; /* empty work records*/
  set XP0NW02 empty; /* empty work records*/
  set XP0NW04 empty; /* empty work records*/
  XP0N001(); /* popup window initialization*/
  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;

  ED0AS3-STAT-CD-CSR(); /* open transaction code cursor*/

  XP0NW02.XP0NWCT1 = 0;


   /* load working storage*/

  while (XP0NW02.XP0NWCT1 < 30 && XP0NW-SQLCODE == 0)
    ED0AS3-STAT-CD-GET(); /* load transaction code to table*/
    XP0NW02.XP0NWCT1 = XP0NW02.XP0NWCT1 + 1;
    if (XP0NW-SQLCODE == 0)
      XP0NW01.EDI-TRN-STAT-CD[XP0NWCT1] = VEDSCD01.EDI-TRN-STAT-CD;
      XP0NW01.EDI-TRN-STAT-DESC[XP0NWCT1] = VEDSCD01.EDI-TRN-STAT-DESC;
    end
  end

  while (XP0NW02.XP0NWEND == "N") /* until end of request*/
    XP0N002(); /* display table values on popup map*/
  end

end // end XP0N000

// Initialization - pop up window
Function XP0N001()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  XP0NW02.XP0NWCT1 = 1; /* Table index*/
  XP0NW02.XP0NWCT2 = 1; /* Screen index*/
  XP0NW02.XP0NWSIX = 1; /* End of first page save index*/
  XP0NW02.XP0NWINX[1] = 1; /* End of first page save index*/
  XP0NW02.XP0NWPIX = 0; /* Initialize pass index to zero*/
  XP0NW02.XP0NWFFL = "Y"; /* first time thru flag*/
  XP0NW02.XP0NWERR = "N"; /* Scroll error flag to no*/
  XP0NW02.XP0NWEND = "N"; /* End of pop up window session flag*/
  XP0NW04.XP0NW-SELECT-FLAG = "N";


end // end XP0N001

// converse popup tran code
Function XP0N002()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR edi transaction codes*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XP0NW02.XP0NWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XP0NW02.XP0NWFFL == "N") /* if not the first time through*/
      XP0NW02.XP0NWCT1 = XP0NW02.XP0NWINX[10] + 1; /* set up scroll pf8*/
    else
      XP0NW02.XP0NWCT1 = 1; /* /first time through*/
    end

    XP0NM001.XP0NMHDR = "EDI Transaction Status Codes"; /* Place head. on map*/
    XP0NM001.XP0NMTR1 = "(S)elect & Enter";
    XP0NM001.XP0NMTR2 = "   PF7:Back                   PF8:Frwd";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XP0NW02.XP0NWFFL == "Y")    /* Or it is the first time thru*/
      XP0NW02.XP0NWCT2 = 1; /* Set up screen index*/
      while (XP0NW02.XP0NWCT2 <= 10 /* Until end of screen lines*/
       && XP0NWCT1 != 100) /* Or end*/
        XP0NM001.EDI-TRN-STAT-CD[XP0NWCT2] = XP0NW01.EDI-TRN-STAT-CD[XP0NWCT1];
        XP0NM001.XP0NMSEL[XP0NWCT2] = XP0NW01.XP0NWSEL[XP0NWCT1];
        XP0NM001.EDI-TRN-STAT-DESC[XP0NWCT2] = XP0NW01.EDI-TRN-STAT-DESC[XP0NWCT1];
        XP0NW02.XP0NWINX[XP0NWCT2] = XP0NW02.XP0NWCT1; /* Save array*/
        if (XP0NW02.XP0NWFFL == "Y") /* If first time thru*/
          XP0NW02.XP0NWSIX = XP0NW02.XP0NWCT1; /* Save last index*/
        end
        set XP0NM001.XP0NMSEL[XP0NWCT2] normal; /* Set selects to normal*/
        XP0NW02.XP0NWCT2 = XP0NW02.XP0NWCT2 + 1; /* Increment screen index*/
        XP0NW02.XP0NWCT1 = XP0NW02.XP0NWCT1 + 1; /* Increment table index*/
      end
      XP0NW02.XP0NWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XP0NW02.XP0NWCT1 = XP0NW02.XP0NWINX[1] - 1; /* Set up table index*/
      XP0NW02.XP0NWCT2 = 10; /* Set up screen index*/
      while (XP0NW02.XP0NWCT2 >= 1) /* Load from the bottom up*/
        XP0NM001.EDI-TRN-STAT-CD[XP0NWCT2] = XP0NW01.EDI-TRN-STAT-CD[XP0NWCT1];
        XP0NM001.EDI-TRN-STAT-DESC[XP0NWCT2] = XP0NW01.EDI-TRN-STAT-DESC[XP0NWCT1];
        XP0NM001.XP0NMSEL[XP0NWCT2] = XP0NW01.XP0NWSEL[XP0NWCT1];
        XP0NW02.XP0NWINX[XP0NWCT2] = XP0NW02.XP0NWCT1; /* Save array*/
        set XP0NM001.XP0NMSEL[XP0NWCT2] normal; /* Set select visible*/
        XP0NW02.XP0NWCT2 = XP0NW02.XP0NWCT2 - 1; /* Decrement screen index*/
        XP0NW02.XP0NWCT1 = XP0NW02.XP0NWCT1 - 1; /* Decrement table index*/
      end
      if (XP0NW02.XP0NWCT1 < 1) /* If the table index was decremented*/
        XP0NW02.XP0NWCT1 = 1; /* to zero, set it to 1*/
      end
    end
  end

  converse XP0NM001 ;
  XP0NW02.XP0NWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XP0NW04.XP0NW-SELECT-FLAG = "N"; /* initialize select flag*/
  XP0NW02.XP0NWCT1 = XP0NW02.XP0NWINX[1]; /* set to 1 if no dep fnd*/
  XP0NW02.XP0NWCT2 = 1; /* Screen index*/
  while (XP0NW02.XP0NWCT2 <= 10) /* Set all fields with data to normal*/
    XP0NW01.XP0NWSEL[XP0NWCT1] = XP0NM001.XP0NMSEL[XP0NWCT2];
    if (XP0NM001.XP0NMSEL[XP0NWCT2] == "S") /* set select flag*/
      XP0NW04.XP0NW-SELECT-FLAG = "Y";
      XP0NW02.XP0NWPIX = XP0NWCT2;
      XP0NWCT2 = 10;
    end
    set XP0NM001.XP0NMSEL[XP0NWCT2] normal;
    XP0NW02.XP0NWCT2 = XP0NW02.XP0NWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XP0NW01.EDI-TRN-STAT-CD[XP0NWCT1] == " ") /* And end of table*/
    XP0NW02.XP0NWERR = "Y"; /* Set error flag*/
    XP0NM001.XP0NMTR2 = "   At End of Table";
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XP0NW02.XP0NWINX[1] <= XP0NW02.XP0NWSIX)
      XP0NW02.XP0NWERR = "Y"; /* Set error flag*/
      XP0NM001.XP0NMTR2 = "   At Beginning of Table";
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XP0NW02.XP0NWEND = "Y"; /* Set end flag*/
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XP0NW02.XP0NWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end XP0N002

// get info for department displa
Function XP0O000()
  /* *************************************************************/
    /* ***  THE FOLLOWING MUST BE ADDED TO THE HOST APPLICATION*/
    /* ***  FOR THIS MODULE TO EXECUTE SUCCESSFULLY*/
           /* ADD TO RECORDS LIST:*/
               /* xp0oW01*/
               /* xp0oW02*/
               /* xp0oW04*/
           /* ADD TO MAP GROUP:*/
               /* xp0oM001*/
   /* *************************************************************/

    /* PROCESS SYNOPSIS:*/
    /* 1. select and load table with department codes.*/
    /* 2. update table with depart info if requested.*/
    /* 3. move table values to popup window map and converse*/
       /* popup window map.*/
   /* ------------------------------------------------------------*/

  set XP0OM001 initial; /* clear map*/
  set XP0OW01 empty; /* empty work records*/
  set XP0OW02 empty; /* empty work records*/
  set XP0OW04 empty; /* empty work records*/
  XP0O001(); /* popup window initialization*/
  set SQLCA empty;
  set TA1REC empty;
  set TA2REC empty;

  ED0AS-OPEN-TYP-CD(); /* open transaction code cursor*/

  XP0OW02.XP0OWCT1 = 0;


   /* load working storage*/

  while (XP0OW02.XP0OWCT1 < 30 && XP0OW-SQLCODE == 0)
    ED0AS-GET-TYP-CD(); /* load transaction code to table*/
    XP0OW02.XP0OWCT1 = XP0OW02.XP0OWCT1 + 1;
    if (XP0OW-SQLCODE == 0)
      XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1] = VEDTCD01.EDI-TRDPT-TYP-CD;
      XP0OW01.EDI-TRDPT-TYP-DESC[XP0OWCT1] = VEDTCD01.EDI-TRDPT-TYP-DESC;
    end
  end

  while (XP0OW02.XP0OWEND == "N") /* until end of request*/
    XP0O002(); /* display table values on popup map*/
  end

end // end XP0O000

// Initialization - pop up window
Function XP0O001()
   /* ------------------------------------------------------------*/

           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/

      /* Initialize fields on map and in working storage.*/

   /* ------------------------------------------------------------*/

     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/

  XP0OW02.XP0OWCT1 = 1; /* Table index*/
  XP0OW02.XP0OWCT2 = 1; /* Screen index*/
  XP0OW02.XP0OWSIX = 1; /* End of first page save index*/
  XP0OW02.XP0OWINX[1] = 1; /* End of first page save index*/
  XP0OW02.XP0OWPIX = 0; /* Initialize pass index to zero*/
  XP0OW02.XP0OWFFL = "Y"; /* first time thru flag*/
  XP0OW02.XP0OWERR = "N"; /* Scroll error flag to no*/
  XP0OW02.XP0OWEND = "N"; /* End of pop up window session flag*/
  XP0OW04.XP0OW-SELECT-FLAG = "N";


end // end XP0O001

// converse popup type code
Function XP0O002()
   /* ------------------------------------------------------------*/

    /* CONVERSE POP UP WINDOW FOR edi transaction codes*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

      /* Note that the values for the pop-up screen will come*/
       /* from a temporary working storage table and not from*/
       /* a CSP table as normally would be.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XP0OW02.XP0OWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XP0OW02.XP0OWFFL == "N") /* if not the first time through*/
      XP0OW02.XP0OWCT1 = XP0OW02.XP0OWINX[10] + 1; /* set up scroll pf8*/
    else
      XP0OW02.XP0OWCT1 = 1; /* /first time through*/
    end

    XP0OM001.XP0OMHDR = "EDI Transaction Codes"; /* Place head. on map*/
    XP0OM001.XP0OMTR1 = "(S)elect & Enter";
    XP0OM001.XP0OMTR2 = "   PF7:Back                   PF8:Frwd";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XP0OW02.XP0OWFFL == "Y")    /* Or it is the first time thru*/
      XP0OW02.XP0OWCT2 = 1; /* Set up screen index*/
      while (XP0OW02.XP0OWCT2 <= 10 /* Until end of screen lines*/
       && XP0OWCT1 != 100) /* Or end*/
        XP0OM001.XP0OMSEL[XP0OWCT2] = XP0OW01.XP0OWSEL[XP0OWCT1];
        XP0OM001.EDI-TRDPT-TYP-CD[XP0OWCT2] = XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1];
        XP0OM001.EDI-TRDPT-TYP-DESC[XP0OWCT2] = XP0OW01.EDI-TRDPT-TYP-DESC[XP0OWCT1];
        XP0OW02.XP0OWINX[XP0OWCT2] = XP0OW02.XP0OWCT1; /* Save array*/
        if (XP0OW02.XP0OWFFL == "Y") /* If first time thru*/
          XP0OW02.XP0OWSIX = XP0OW02.XP0OWCT1; /* Save last index*/
        end
        set XP0OM001.XP0OMSEL[XP0OWCT2] normal; /* Set selects to normal*/
        XP0OW02.XP0OWCT2 = XP0OW02.XP0OWCT2 + 1; /* Increment screen index*/
        XP0OW02.XP0OWCT1 = XP0OW02.XP0OWCT1 + 1; /* Increment table index*/
      end
      XP0OW02.XP0OWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XP0OW02.XP0OWCT1 = XP0OW02.XP0OWINX[1] - 1; /* Set up table index*/
      XP0OW02.XP0OWCT2 = 10; /* Set up screen index*/
      while (XP0OW02.XP0OWCT2 >= 1) /* Load from the bottom up*/
        XP0OM001.EDI-TRDPT-TYP-DESC[XP0OWCT2] = XP0OW01.EDI-TRDPT-TYP-DESC[XP0OWCT1];
        XP0OM001.XP0OMSEL[XP0OWCT2] = XP0OW01.XP0OWSEL[XP0OWCT1];
        XP0OW02.XP0OWINX[XP0OWCT2] = XP0OW02.XP0OWCT1; /* Save array*/
        set XP0OM001.XP0OMSEL[XP0OWCT2] normal; /* Set select visible*/
        XP0OW02.XP0OWCT2 = XP0OW02.XP0OWCT2 - 1; /* Decrement screen index*/
        XP0OW02.XP0OWCT1 = XP0OW02.XP0OWCT1 - 1; /* Decrement table index*/
      end
      if (XP0OW02.XP0OWCT1 < 1) /* If the table index was decremented*/
        XP0OW02.XP0OWCT1 = 1; /* to zero, set it to 1*/
      end
    end
  end

  converse XP0OM001 ;
  XP0OW02.XP0OWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XP0OW04.XP0OW-SELECT-FLAG = "N"; /* initialize select flag*/
  XP0OW02.XP0OWCT1 = XP0OW02.XP0OWINX[1]; /* set to 1 if no dep fnd*/
  XP0OW02.XP0OWCT2 = 1; /* Screen index*/
  while (XP0OW02.XP0OWCT2 <= 10) /* Set all fields with data to normal*/
    if (XP0OM001.XP0OMSEL[XP0OWCT2] == "S") /* set select flag*/
      XP0OW04.XP0OW-SELECT-FLAG = "Y";
      set XP0OM001.XP0OMSEL[XP0OWCT2] normal;
      XP0OW02.XP0OWPIX = XP0OWCT2;
      XP0OWCT2 = 10;
    end
    XP0OW02.XP0OWCT2 = XP0OW02.XP0OWCT2 + 1;
    XP0OW02.XP0OWCT1 = XP0OW02.XP0OWCT1 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && XP0OW01.EDI-TRDPT-TYP-CD[XP0OWCT1] == " ") /* And end of table*/
    XP0OW02.XP0OWERR = "Y"; /* Set error flag*/
    XP0OM001.XP0OMTR2 = "   At End of Table";
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XP0OW02.XP0OWINX[1] <= XP0OW02.XP0OWSIX)
      XP0OW02.XP0OWERR = "Y"; /* Set error flag*/
      XP0OM001.XP0OMTR2 = "   At Beginning of Table";
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XP0OW02.XP0OWEND = "Y"; /* Set end flag*/
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XP0OW02.XP0OWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end XP0O002

//*** RECORD=ED0AW01 ****
// ************************************************************
// *           ***   ed0a Work Record   ***
// ************************************************************
// *  Maintenace Log
// ************************************************************
// *
// *   08 feb  1997  kclar1   created
// ***********************
Record ED0AW01 type basicRecord
  5 ED0AWEAF ED0AWEAF ; 
  5 ED0AWKEY ED0AWKEY ; 
    10 ED0AWCID ED0AWCID ; 
    10 ED0AWSID ED0AWSID ; 
      15 ED0AWCID-CHAR ED0AWCID-CHAR ; 
    10 ED0AWAID ED0AWAID ; 
      15 ED0AWAID-CHAR ED0AWAID-CHAR ; 
  5 ED0AWIDX ED0AWIDX ; 
  5 ED0AWMSG ED0AWMSG ; 
  5 ED0AWDT ED0AWDT ; 
    10 ED0AWCTY ED0AWCTY ; 
    10 ED0AWYR ED0AWYR ; 
    10 ED0AWMTH ED0AWMTH ; 
    10 ED0AWDAY ED0AWDAY ; 
  5 ED0AWCDT ED0AWCDT ; 
    10 ED0AWCCT ED0AWCCT ; 
    10 ED0AWHDT ED0AWHDT ; 
      15 ED0AWCYR ED0AWCYR ; 
      15 ED0AWCMT ED0AWCMT ; 
      15 ED0AWCDY ED0AWCDY ; 
  5 ED0AWMOD ED0AWMOD ; 
  5 ED0AWERR ED0AWERR ; 
  5 ED0AW-TRN-MAP3 ED0AW-TRN-MAP3 ; 
  5 ED0AW-UPDT ED0AW-UPDT ; 
  5 ED0AW3-UPDT ED0AW3-UPDT ; 
  5 ED0AWFST ED0AWFST ; 
  5 ED0AWFS1 ED0AWFS1 ; 
  5 ED0AW-IDX3 ED0AW-IDX3 ; 
  5 ED0AW-SQLCODE ED0AW-SQLCODE ; 
  5 ED0AW-TRN-SQLCODE ED0AW-TRN-SQLCODE ; 
  5 ED0AW-PAGE-CNT ED0AW-PAGE-CNT ; 
  5 ED0AW-PAGE-TOT ED0AW-PAGE-TOT ; 
  5 ED0AW-CNT ED0AW-CNT ; 
  5 ED0AW-TOT-CNT ED0AW-TOT-CNT ; 
  5 ED0AW-PAGE-INDEX ED0AW-PAGE-INDEX ; 
  5 ED0AW-PAGE-CHG ED0AW-PAGE-CHG ; 
  5 ED0AW-FOUND ED0AW-FOUND ; 
  5 ED0AW-MAX ED0AW-MAX ; 
  5 ED0AW-KUCCOID ED0AW-KUCCOID ; 
  5 ED0AW-KUSTOID ED0AW-KUSTOID ; 
  5 ED0AW-KUCCONM ED0AW-KUCCONM ; 
  5 ED0AW-EDI-TRDPT-ID ED0AW-EDI-TRDPT-ID ; 
  5 ED0AW-EDI-TRDPT-ID-QUERY ED0AW-EDI-TRDPT-ID-QUERY ; 
    10 ED0AW-EDI-TRDPT-ID-ITEM ED0AW-EDI-TRDPT-ID-ITEM [15] ; 
  5 ED0AW-EDI-TRDPT-NBR ED0AW-EDI-TRDPT-NBR ; 
  5 ED0AW-FY-FCTY-CD ED0AW-FY-FCTY-CD ; 
  5 ED0AW-TF-CARR-CD ED0AW-TF-CARR-CD ; 
  5 ED0AW-TI-CUTK-SPLR-CD ED0AW-TI-CUTK-SPLR-CD ; 
  5 ED0AW-XWH-WHSE-CD ED0AW-XWH-WHSE-CD ; 
  5 ED0AW-GL-GEN-LEDGER-CD ED0AW-GL-GEN-LEDGER-CD ; 
  5 ED0AW-EDI-TRDPT-NM ED0AW-EDI-TRDPT-NM ; 
  5 ED0AW-CU-CO-ID ED0AW-CU-CO-ID ; 
  5 ED0AW-CU-STOR-ID ED0AW-CU-STOR-ID ; 
  5 ED0AW-PAGE-MAP3 ED0AW-PAGE-MAP3 ; 
  5 ED0AW-MAIN-SEL ED0AW-MAIN-SEL ; 
  5 ED0AW-TRDPT-CUST ED0AW-TRDPT-CUST ; 
  5 ED0AW-TRDPT-FCTY ED0AW-TRDPT-FCTY ; 
  5 ED0AW-TRDPT-CUTK ED0AW-TRDPT-CUTK ; 
  5 ED0AW-TRDPT-CARR ED0AW-TRDPT-CARR ; 
  5 ED0AW-TRDPT-XWH ED0AW-TRDPT-XWH ; 
  5 ED0AW-TRDPT-GLCD ED0AW-TRDPT-GLCD ; 
  5 ED0AW-TRDPT-DCNSL ED0AW-TRDPT-DCNSL ; 
  5 ED0AW-EDI-DSASN-FL1 ED0AW-EDI-DSASN-FL1 ; 
  5 ED0AW-EDI-DSASN-FL2 ED0AW-EDI-DSASN-FL2 ; 
  5 ED0AW-EDI-DSASN-FL3 ED0AW-EDI-DSASN-FL3 ; 
end // end ED0AW01

Record ED0AW03 type basicRecord
  5 ED0AW03-GROUP ED0AW03-GROUP [12] ; 
    10 ED0AW03-SEL ED0AW03-SEL ; 
    10 ED0AW03-EDI-TRN-CD ED0AW03-EDI-TRN-CD ; 
    10 ED0AW03-EDI-TRN-ABRV ED0AW03-EDI-TRN-ABRV ; 
      15 ED0AW03-EDI-TRN-ABRV-1 ED0AW03-EDI-TRN-ABRV-1 ; 
      15 ED0AW03-EDI-TRN-ABRV-9 ED0AW03-EDI-TRN-ABRV-9 ; 
    10 ED0AW03-EDI-TRN-DESC ED0AW03-EDI-TRN-DESC ; 
    10 ED0AW03-EDI-TRN-BOUND-CD ED0AW03-EDI-TRN-BOUND-CD ; 
    10 ED0AW03-EDI-TRN-STAT-CD ED0AW03-EDI-TRN-STAT-CD ; 
      15 ED0AW03-EDI-TRN-STAT-CD-1 ED0AW03-EDI-TRN-STAT-CD-1 ; 
      15 ED0AW03-EDI-TRN-STAT-CD-2 ED0AW03-EDI-TRN-STAT-CD-2 ; 
    10 ED0AW03-EDI-TRN-STAT-DESC ED0AW03-EDI-TRN-STAT-DESC ; 
end // end ED0AW03

Record ED0AW04 type basicRecord
  5 ED0AW04-GROUP ED0AW04-GROUP [601] ; 
    10 ED0AW04-SEL ED0AW04-SEL ; 
    10 ED0AW04-EDI-TRDPT-NBR ED0AW04-EDI-TRDPT-NBR ; 
    10 ED0AW04-EDI-TRDPT-ID ED0AW04-EDI-TRDPT-ID ; 
    10 ED0AW04-EDI-TRDPT-TYP-CD ED0AW04-EDI-TRDPT-TYP-CD ; 
      15 ED0AW04-EDI-TRDPT-TYP-CD-1 ED0AW04-EDI-TRDPT-TYP-CD-1 ; 
      15 ED0AW04-EDI-TRDPT-TYP-CD-2 ED0AW04-EDI-TRDPT-TYP-CD-2 ; 
    10 ED0AW04-EDI-TRDPT-ABRV ED0AW04-EDI-TRDPT-ABRV ; 
    10 ED0AW04-EDI-TRDPT-NM ED0AW04-EDI-TRDPT-NM ; 
    10 ED0AW04-CU-CO-ID ED0AW04-CU-CO-ID ; 
    10 ED0AW04-CU-STOR-ID ED0AW04-CU-STOR-ID ; 
    10 ED0AW04-ASN-REL-DAYS ED0AW04-ASN-REL-DAYS ; 
    10 ED0AW04-TI-CUTK-SPLR-CD ED0AW04-TI-CUTK-SPLR-CD ; 
    10 ED0AW04-TF-CARR-CD ED0AW04-TF-CARR-CD ; 
    10 ED0AW04-GL-GEN-LEDGER-CD ED0AW04-GL-GEN-LEDGER-CD ; 
    10 ED0AW04-XWH-WHSE-CD ED0AW04-XWH-WHSE-CD ; 
    10 ED0AW04-FY-FCTY-CD ED0AW04-FY-FCTY-CD ; 
    10 ED0AW04-NAME-EXISTS ED0AW04-NAME-EXISTS ; 
end // end ED0AW04

Record VEDCTR01 type basicRecord
  10 EDI-NXT-TRDPT-NBR EDI-NXT-TRDPT-NBR ; 
  10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
  10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
  10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VEDCTR01

//*** RECORD=VEDSCD01 ****
//  db2 table:          dedi.vedscd01
//                      valid status for edi transactions
// 
// copylib member:      dedscd01
// 
// i/o mod:             vedscd01
// 
// key to db2 table:    edi-trn-stat-cd
// 
// date created:        01/28/97
// 
// maintenance log:
// 
//   date    init       comment
//  -------  ----       --------
// 01/28/97  kclar1     created.
// ***********************************************************
// ************************
Record VEDSCD01 type basicRecord
  5 VEDSCD01-GRP VEDSCD01-GRP ; 
    10 EDI-TRN-STAT-CD EDI-TRN-STAT-CD ; 
    10 EDI-TRN-STAT-DESC EDI-TRN-STAT-DESC ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VEDSCD01

//*** RECORD=VEDTCD01 ****
// db2 table:           dedi.vedtcd01
//                      table containing valid edi trading
//                      partner types
// 
// copylib member:      dedtcd01
// 
// i/o mod:             vedtcd01
// 
// key to db2 table:    edi-trdpt-typ-cd
// 
// date created:        01/28/97
// 
// maintenance log:
// 
// date        init     comment
// ------     ------    ------------------------------
// 01/28/97   kclar1    created.
// ***********************************************************
// ************************
Record VEDTCD01 type basicRecord
  5 VEDTCD01-GRP VEDTCD01-GRP ; 
    10 EDI-TRDPT-TYP-CD EDI-TRDPT-TYP-CD ; 
    10 EDI-TRDPT-TYP-DESC EDI-TRDPT-TYP-DESC ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VEDTCD01

//*** RECORD=VEDTPR02 ****
//  db2 table:         dedi.vedtpr02
//                     edi trading partner table containing
//                     edi trading partner number and associate
//                     information, such as customer, factory,
//                     no. of days prior to which the customer
//                     needs the DSHIP table data,
//                     ticket supplier, etc.
// 
//  copylib member:    dedtpr02
// 
//  i/o mod            vedtpr02
// 
//  key to table:      edi-trdpt-nbr
// 
//  date created:      07/05/99
// 
//  maintenance log:
// 
//   date      init    comment
// --------   -----   -----------------------------
// 07-05-99   amohai  created.
// 
// ************************************************************
// ************************
Record VEDTPR02 type basicRecord
  5 VEDTPR02-GRP VEDTPR02-GRP ; 
    10 EDI-TRDPT-NBR EDI-TRDPT-NBR ; 
    10 EDI-TRDPT-ID EDI-TRDPT-ID ; 
    10 EDI-TRDPT-TYP-CD EDI-TRDPT-TYP-CD ; 
    10 EDI-TRDPT-ABRV EDI-TRDPT-ABRV ; 
    10 EDI-TRDPT-NM EDI-TRDPT-NM ; 
    10 ASN-REL-DAYS ASN-REL-DAYS ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 TI-CUTK-SPLR-CD TI-CUTK-SPLR-CD ; 
    10 TF-CARR-CD TF-CARR-CD ; 
    10 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
    10 XWH-WHSE-CD XWH-WHSE-CD ; 
    10 FY-FCTY-CD FY-FCTY-CD ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VEDTPR02

//*** RECORD=VEDTPR03 ****
//  db2 table:         dedi.vedtpr03
//                     edi trading partner table containing
//                     edi trading partner number and associate
//                     information, such as customer,store,
//                     factory,
//                     no. of days prior to which the customer
//                     needs the DSHIP table data,
//                     ticket supplier, etc.
// 
//  copylib member:    dedtpr03
// 
//  i/o mod            vedtpr03
// 
//  key to table:      edi-trdpt-nbr
// 
//  date created:      02/04/00
// 
//  maintenance log:
// 
//   date      init    comment
// --------   -----   -----------------------------
// 02-04-99   vgotti  created.
// 
// ************************************************************
// ************************
Record VEDTPR03 type basicRecord
  5 VEDTPR03-GRP VEDTPR03-GRP ; 
    10 EDI-TRDPT-NBR EDI-TRDPT-NBR ; 
    10 EDI-TRDPT-ID EDI-TRDPT-ID ; 
    10 EDI-TRDPT-TYP-CD EDI-TRDPT-TYP-CD ; 
    10 EDI-TRDPT-ABRV EDI-TRDPT-ABRV ; 
    10 EDI-TRDPT-NM EDI-TRDPT-NM ; 
    10 ASN-REL-DAYS ASN-REL-DAYS ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 CU-STOR-ID CU-STOR-ID ; 
    10 TI-CUTK-SPLR-CD TI-CUTK-SPLR-CD ; 
    10 TF-CARR-CD TF-CARR-CD ; 
    10 GL-GEN-LEDGER-CD GL-GEN-LEDGER-CD ; 
    10 XWH-WHSE-CD XWH-WHSE-CD ; 
    10 FY-FCTY-CD FY-FCTY-CD ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VEDTPR03

//*** RECORD=VEDXCD01 ****
// db2 table:           dedi.vedxcd01
// 
// copylib member:      dedxcd01
// 
// i/o mod:             vedxcd01
// 
// key to db2 table:    edi-trn-cd
// 
// date created:        01/28/97
// 
// maintenance log:
// 
//   date     init      comment
// -------    -----     ------------------------------
// 01/28/97   kclar1    record created.
// ***********************************************************
// ************************
Record VEDXCD01 type basicRecord
  5 VEDXCD01-GRP VEDXCD01-GRP ; 
    10 EDI-TRN-CD EDI-TRN-CD ; 
    10 EDI-TRN-ABRV EDI-TRN-ABRV ; 
    10 EDI-TRN-DESC EDI-TRN-DESC ; 
    10 XXX-STAT XXX-STAT ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VEDXCD01

//*** RECORD=XP0MW01 ****
// ***  01/02/96 kclar1  created
// ***********************
Record XP0MW01 type basicRecord
  5 XP0MWZDT XP0MWZDT ; 
    10 XP0MWZYY XP0MWZYY ; 
    10 XP0MWZMM XP0MWZMM ; 
    10 XP0MWZDD XP0MWZDD ; 
  5 XP0MWDAT XP0MWDAT ; 
    10 XP0MWCYM XP0MWCYM ; 
      15 XP0MW19 XP0MW19 ; 
      15 XP0MWYY XP0MWYY ; 
      15 XP0MWMM XP0MWMM ; 
    10 XP0MWDD XP0MWDD ; 
  5 XP0MWZTM XP0MWZTM ; 
    10 XP0MWZHR XP0MWZHR ; 
    10 * char(1) ; 
    10 XP0MWZMN XP0MWZMN ; 
    10 * char(1) ; 
    10 XP0MWZSC XP0MWZSC ; 
  5 XP0MWTIM XP0MWTIM ; 
    10 XP0MWHR XP0MWHR ; 
    10 XP0MWMIN XP0MWMIN ; 
  5 XP0MWHMS XP0MWHMS ; 
    10 XP0MWHRS XP0MWHRS ; 
    10 XP0MWMNS XP0MWMNS ; 
    10 XP0MWSEC XP0MWSEC ; 
  5 XP0MWTB XP0MWTB [30] ; 
    10 XP0MWSEL XP0MWSEL ; 
    10 EDI-TRN-CD EDI-TRN-CD ; 
    10 EDI-TRN-ABRV EDI-TRN-ABRV ; 
    10 EDI-TRN-DESC EDI-TRN-DESC ; 
end // end XP0MW01

//*** RECORD=XP0MW02 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx001
//            and xp???01. ( Where ??? is the table name
//            associated with the pop-up window process.)
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          03-25-88  CEPPLE  Created
//          03-30-89  jvande  replaced xtvcd with xgpcd.
//          07-25-89  mchris  added xwhcd.
//          08/01/89  SPOPA   Added YPGFFFL field.
// ************************************************************
// ***********************
Record XP0MW02 type basicRecord
  10 XP0MWCT1 XP0MWCT1 ; 
  10 XP0MWCT2 XP0MWCT2 ; 
  10 XP0MWSIX XP0MWSIX ; 
  10 XP0MWPIX XP0MWPIX [50] ; 
  10 XP0MWINX XP0MWINX [10] ; 
  10 XP0MWEND XP0MWEND ; 
  10 XP0MWFFL XP0MWFFL ; 
  10 XP0MWERR XP0MWERR ; 
  10 XP0MWHDR XP0MWHDR ; 
  10 XP0MWNUM XP0MWNUM ; 
    15 XP0MWCHA XP0MWCHA ; 
  10 XP0MWCT3 XP0MWCT3 ; 
  10 XP0MW-SQLCODE XP0MW-SQLCODE ; 
end // end XP0MW02

//*** RECORD=XP0MW04 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx004
//            and xpyns01.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02-04-93  jbecke  Created
// ************************************************************
// ***********************
Record XP0MW04 type basicRecord
  10 XP0MW-SCREEN-INDEX XP0MW-SCREEN-INDEX ; 
  10 XP0MW-TABLE-INDEX XP0MW-TABLE-INDEX ; 
  10 XP0MW-FIRST-ENTRY-INDEX XP0MW-FIRST-ENTRY-INDEX ; 
  10 XP0MW-PAGE-TOP XP0MW-PAGE-TOP ; 
  10 XP0MW-PAGE-BOTTOM XP0MW-PAGE-BOTTOM ; 
  10 XP0MW-END-FLAG XP0MW-END-FLAG ; 
  10 XP0MW-FIRST-TIME-FLAG XP0MW-FIRST-TIME-FLAG ; 
  10 XP0MW-ERROR-FLAG XP0MW-ERROR-FLAG ; 
  10 XP0MW-SELECT-FLAG XP0MW-SELECT-FLAG ; 
end // end XP0MW04

//*** RECORD=XP0NW01 ****
// ***  01/02/96 kclar1  created
// ***********************
Record XP0NW01 type basicRecord
  5 XP0NWZDT XP0NWZDT ; 
    10 XP0NWZYY XP0NWZYY ; 
    10 XP0NWZMM XP0NWZMM ; 
    10 XP0NWZDD XP0NWZDD ; 
  5 XP0NWDAT XP0NWDAT ; 
    10 XP0NWCYM XP0NWCYM ; 
      15 XP0NW19 XP0NW19 ; 
      15 XP0NWYY XP0NWYY ; 
      15 XP0NWMM XP0NWMM ; 
    10 XP0NWDD XP0NWDD ; 
  5 XP0NWZTM XP0NWZTM ; 
    10 XP0NWZHR XP0NWZHR ; 
    10 * char(1) ; 
    10 XP0NWZMN XP0NWZMN ; 
    10 * char(1) ; 
    10 XP0NWZSC XP0NWZSC ; 
  5 XP0NWTIM XP0NWTIM ; 
    10 XP0NWHR XP0NWHR ; 
    10 XP0NWMIN XP0NWMIN ; 
  5 XP0NWHMS XP0NWHMS ; 
    10 XP0NWHRS XP0NWHRS ; 
    10 XP0NWMNS XP0NWMNS ; 
    10 XP0NWSEC XP0NWSEC ; 
  5 XP0NWTB XP0NWTB [30] ; 
    10 XP0NWSEL XP0NWSEL ; 
    10 EDI-TRN-STAT-CD EDI-TRN-STAT-CD ; 
    10 EDI-TRN-STAT-DESC EDI-TRN-STAT-DESC ; 
end // end XP0NW01

//*** RECORD=XP0NW02 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx001
//            and xp???01. ( Where ??? is the table name
//            associated with the pop-up window process.)
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          03-25-88  CEPPLE  Created
//          03-30-89  jvande  replaced xtvcd with xgpcd.
//          07-25-89  mchris  added xwhcd.
//          08/01/89  SPOPA   Added YPGFFFL field.
// ************************************************************
// ***********************
Record XP0NW02 type basicRecord
  10 XP0NWCT1 XP0NWCT1 ; 
  10 XP0NWCT2 XP0NWCT2 ; 
  10 XP0NWSIX XP0NWSIX ; 
  10 XP0NWPIX XP0NWPIX [50] ; 
  10 XP0NWINX XP0NWINX [10] ; 
  10 XP0NWEND XP0NWEND ; 
  10 XP0NWFFL XP0NWFFL ; 
  10 XP0NWERR XP0NWERR ; 
  10 XP0NWHDR XP0NWHDR ; 
  10 XP0NWNUM XP0NWNUM ; 
    15 XP0NWCHA XP0NWCHA ; 
  10 XP0NWCT3 XP0NWCT3 ; 
  10 XP0NW-SQLCODE XP0NW-SQLCODE ; 
end // end XP0NW02

//*** RECORD=XP0NW04 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx004
//            and xpyns01.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02-04-93  jbecke  Created
// ************************************************************
// ***********************
Record XP0NW04 type basicRecord
  10 XP0NW-SCREEN-INDEX XP0NW-SCREEN-INDEX ; 
  10 XP0NW-TABLE-INDEX XP0NW-TABLE-INDEX ; 
  10 XP0NW-FIRST-ENTRY-INDEX XP0NW-FIRST-ENTRY-INDEX ; 
  10 XP0NW-PAGE-TOP XP0NW-PAGE-TOP ; 
  10 XP0NW-PAGE-BOTTOM XP0NW-PAGE-BOTTOM ; 
  10 XP0NW-END-FLAG XP0NW-END-FLAG ; 
  10 XP0NW-FIRST-TIME-FLAG XP0NW-FIRST-TIME-FLAG ; 
  10 XP0NW-ERROR-FLAG XP0NW-ERROR-FLAG ; 
  10 XP0NW-SELECT-FLAG XP0NW-SELECT-FLAG ; 
end // end XP0NW04

//*** RECORD=XP0OW01 ****
// ***  01/02/96 kclar1  created
// ***********************
Record XP0OW01 type basicRecord
  5 XP0OWZDT XP0OWZDT ; 
    10 XP0OWZYY XP0OWZYY ; 
    10 XP0OWZMM XP0OWZMM ; 
    10 XP0OWZDD XP0OWZDD ; 
  5 XP0OWDAT XP0OWDAT ; 
    10 XP0OWCYM XP0OWCYM ; 
      15 XP0OW19 XP0OW19 ; 
      15 XP0OWYY XP0OWYY ; 
      15 XP0OWMM XP0OWMM ; 
    10 XP0OWDD XP0OWDD ; 
  5 XP0OWZTM XP0OWZTM ; 
    10 XP0OWZHR XP0OWZHR ; 
    10 * char(1) ; 
    10 XP0OWZMN XP0OWZMN ; 
    10 * char(1) ; 
    10 XP0OWZSC XP0OWZSC ; 
  5 XP0OWTIM XP0OWTIM ; 
    10 XP0OWHR XP0OWHR ; 
    10 XP0OWMIN XP0OWMIN ; 
  5 XP0OWHMS XP0OWHMS ; 
    10 XP0OWHRS XP0OWHRS ; 
    10 XP0OWMNS XP0OWMNS ; 
    10 XP0OWSEC XP0OWSEC ; 
  5 XP0OWTB XP0OWTB [30] ; 
    10 XP0OWSEL XP0OWSEL ; 
    10 EDI-TRDPT-TYP-CD EDI-TRDPT-TYP-CD ; 
    10 EDI-TRDPT-TYP-DESC EDI-TRDPT-TYP-DESC ; 
end // end XP0OW01

//*** RECORD=XP0OW02 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx001
//            and xp???01. ( Where ??? is the table name
//            associated with the pop-up window process.)
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          03-25-88  CEPPLE  Created
//          03-30-89  jvande  replaced xtvcd with xgpcd.
//          07-25-89  mchris  added xwhcd.
//          08/01/89  SPOPA   Added YPGFFFL field.
// ************************************************************
// ***********************
Record XP0OW02 type basicRecord
  10 XP0OWCT1 XP0OWCT1 ; 
  10 XP0OWCT2 XP0OWCT2 ; 
  10 XP0OWSIX XP0OWSIX ; 
  10 XP0OWPIX XP0OWPIX [50] ; 
  10 XP0OWINX XP0OWINX [10] ; 
  10 XP0OWEND XP0OWEND ; 
  10 XP0OWFFL XP0OWFFL ; 
  10 XP0OWERR XP0OWERR ; 
  10 XP0OWHDR XP0OWHDR ; 
  10 XP0OWNUM XP0OWNUM ; 
    15 XP0OWCHA XP0OWCHA ; 
  10 XP0OWCT3 XP0OWCT3 ; 
  10 XP0OW-SQLCODE XP0OW-SQLCODE ; 
end // end XP0OW02

//*** RECORD=XP0OW04 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx004
//            and xpyns01.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02-04-93  jbecke  Created
// ************************************************************
// ***********************
Record XP0OW04 type basicRecord
  10 XP0OW-SCREEN-INDEX XP0OW-SCREEN-INDEX ; 
  10 XP0OW-TABLE-INDEX XP0OW-TABLE-INDEX ; 
  10 XP0OW-FIRST-ENTRY-INDEX XP0OW-FIRST-ENTRY-INDEX ; 
  10 XP0OW-PAGE-TOP XP0OW-PAGE-TOP ; 
  10 XP0OW-PAGE-BOTTOM XP0OW-PAGE-BOTTOM ; 
  10 XP0OW-END-FLAG XP0OW-END-FLAG ; 
  10 XP0OW-FIRST-TIME-FLAG XP0OW-FIRST-TIME-FLAG ; 
  10 XP0OW-ERROR-FLAG XP0OW-ERROR-FLAG ; 
  10 XP0OW-SELECT-FLAG XP0OW-SELECT-FLAG ; 
end // end XP0OW04

// no.ofdays prior,cust need data
DataItem ASN-REL-DAYS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// screen detail counter
DataItem ED0AW-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem ED0AW-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem ED0AW-CU-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FLAG TO IDENTIFY 'DS' PROCESS
DataItem ED0AW-EDI-DSASN-FL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FLAG TO IDENTIFY 'DS' PROCESS
DataItem ED0AW-EDI-DSASN-FL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FLAG TO IDENTIFY 'DS' PROCESS
DataItem ED0AW-EDI-DSASN-FL3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EDI_TRDPT_ID
DataItem ED0AW-EDI-TRDPT-ID char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-EDI-TRDPT-ID-ITEM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// EDI_trDPT_ID
DataItem ED0AW-EDI-TRDPT-ID-QUERY char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-EDI-TRDPT-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem ED0AW-EDI-TRDPT-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-FY-FCTY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-GL-GEN-LEDGER-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sql return code
DataItem ED0AW-IDX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_CO_ID
DataItem ED0AW-KUCCOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// CU_CO_NM
DataItem ED0AW-KUCCONM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_CO_ID
DataItem ED0AW-KUSTOID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

DataItem ED0AW-MAIN-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-MAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// update mode flag
DataItem ED0AW-PAGE-CHG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sql return code
DataItem ED0AW-PAGE-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dept index
DataItem ED0AW-PAGE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem ED0AW-PAGE-MAP3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-PAGE-TOT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sql return code
DataItem ED0AW-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem ED0AW-TF-CARR-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TI-CUTK-SPLR-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen detail counter
DataItem ED0AW-TOT-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem ED0AW-TRDPT-CARR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TRDPT-CUST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TRDPT-CUTK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TRDPT-DCNSL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TRDPT-FCTY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TRDPT-GLCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-TRDPT-XWH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified switch
DataItem ED0AW-TRN-MAP3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sql return code
DataItem ED0AW-TRN-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// modified switch
DataItem ED0AW-UPDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW-XWH-WHSE-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-ABRV char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-ABRV-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-ABRV-9 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-BOUND-CD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-DESC char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-STAT-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-STAT-CD-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-STAT-CD-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-EDI-TRN-STAT-DESC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-GROUP char(61)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW03-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customer company id
DataItem ED0AW04-ASN-REL-DAYS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// customer company id
DataItem ED0AW04-CU-CO-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// customer company id
DataItem ED0AW04-CU-STOR-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem ED0AW04-EDI-TRDPT-ABRV char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem ED0AW04-EDI-TRDPT-ID char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem ED0AW04-EDI-TRDPT-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem ED0AW04-EDI-TRDPT-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_EDI_TRADPT_ID
DataItem ED0AW04-EDI-TRDPT-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-EDI-TRDPT-TYP-CD-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-EDI-TRDPT-TYP-CD-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-FY-FCTY-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-GL-GEN-LEDGER-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-GROUP char(82)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-NAME-EXISTS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-SEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-TF-CARR-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-TI-CUTK-SPLR-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem ED0AW04-XWH-WHSE-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified switch
DataItem ED0AW3-UPDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address id
DataItem ED0AWAID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// address id redefined char
DataItem ED0AWAID-CHAR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// century
DataItem ED0AWCCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem ED0AWCDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem ED0AWCDY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company
DataItem ED0AWCID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company redefined
DataItem ED0AWCID-CHAR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// month
DataItem ED0AWCMT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem ED0AWCTY num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem ED0AWCYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem ED0AWDAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date
DataItem ED0AWDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end of application flag
DataItem ED0AWEAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified switch
DataItem ED0AWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first switch
DataItem ED0AWFS1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first switch
DataItem ED0AWFST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold date
DataItem ED0AWHDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem ED0AWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work key field
DataItem ED0AWKEY char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// modified switch
DataItem ED0AWMOD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message line
DataItem ED0AWMSG char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// month
DataItem ED0AWMTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   company
DataItem ED0AWSID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem ED0AWYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem EDI-NXT-TRDPT-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem EDI-TRDPT-TYP-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem EDI-TRN-ABRV char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem EDI-TRN-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem EDI-TRN-STAT-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VEDSCD01-GRP char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VEDTCD01-GRP char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VEDTPR02-GRP char(91)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VEDTPR03-GRP char(93)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem VEDXCD01-GRP char(55)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end flag
DataItem XP0MW-END-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XP0MW-ERROR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first entry for system in tble
DataItem XP0MW-FIRST-ENTRY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XP0MW-FIRST-TIME-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bottom of previous page
DataItem XP0MW-PAGE-BOTTOM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// top of current page
DataItem XP0MW-PAGE-TOP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XP0MW-SCREEN-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// entry was selected
DataItem XP0MW-SELECT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0MW-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XP0MW-TABLE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record 19
DataItem XP0MW19 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// num-to-cha conversion
DataItem XP0MWCHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table counter
DataItem XP0MWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen counter
DataItem XP0MWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0MWCT3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current CCYYMM
DataItem XP0MWCYM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yyyymmdd
DataItem XP0MWDAT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record dd
DataItem XP0MWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// flag
DataItem XP0MWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XP0MWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XP0MWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen header
DataItem XP0MWHDR char(39)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// work record time(hhmmss)
DataItem XP0MWHMS num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record hours
DataItem XP0MWHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record hours
DataItem XP0MWHRS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XP0MWINX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record minutes
DataItem XP0MWMIN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record mm
DataItem XP0MWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record minutes
DataItem XP0MWMNS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// bin-to-num conversion
DataItem XP0MWNUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// passed index table location
DataItem XP0MWPIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record seconds
DataItem XP0MWSEC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem XP0MWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XP0MWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0MWTB char(43)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record time
DataItem XP0MWTIM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yy
DataItem XP0MWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system dd
DataItem XP0MWZDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system yymmdd
DataItem XP0MWZDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system hour
DataItem XP0MWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system mm
DataItem XP0MWZMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system minutes
DataItem XP0MWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system seconds
DataItem XP0MWZSC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system time
DataItem XP0MWZTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system yy
DataItem XP0MWZYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end flag
DataItem XP0NW-END-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XP0NW-ERROR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first entry for system in tble
DataItem XP0NW-FIRST-ENTRY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XP0NW-FIRST-TIME-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bottom of previous page
DataItem XP0NW-PAGE-BOTTOM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// top of current page
DataItem XP0NW-PAGE-TOP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XP0NW-SCREEN-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// entry was selected
DataItem XP0NW-SELECT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0NW-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XP0NW-TABLE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record 19
DataItem XP0NW19 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// num-to-cha conversion
DataItem XP0NWCHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table counter
DataItem XP0NWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen counter
DataItem XP0NWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0NWCT3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current CCYYMM
DataItem XP0NWCYM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yyyymmdd
DataItem XP0NWDAT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record dd
DataItem XP0NWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// flag
DataItem XP0NWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XP0NWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XP0NWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen header
DataItem XP0NWHDR char(39)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// work record time(hhmmss)
DataItem XP0NWHMS num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record hours
DataItem XP0NWHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record hours
DataItem XP0NWHRS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XP0NWINX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record minutes
DataItem XP0NWMIN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record mm
DataItem XP0NWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record minutes
DataItem XP0NWMNS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// bin-to-num conversion
DataItem XP0NWNUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// passed index table location
DataItem XP0NWPIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record seconds
DataItem XP0NWSEC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem XP0NWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XP0NWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0NWTB char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record time
DataItem XP0NWTIM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yy
DataItem XP0NWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system dd
DataItem XP0NWZDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system yymmdd
DataItem XP0NWZDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system hour
DataItem XP0NWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system mm
DataItem XP0NWZMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system minutes
DataItem XP0NWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system seconds
DataItem XP0NWZSC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system time
DataItem XP0NWZTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system yy
DataItem XP0NWZYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end flag
DataItem XP0OW-END-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XP0OW-ERROR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first entry for system in tble
DataItem XP0OW-FIRST-ENTRY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XP0OW-FIRST-TIME-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bottom of previous page
DataItem XP0OW-PAGE-BOTTOM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// top of current page
DataItem XP0OW-PAGE-TOP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XP0OW-SCREEN-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// entry was selected
DataItem XP0OW-SELECT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0OW-SQLCODE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XP0OW-TABLE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record 19
DataItem XP0OW19 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// num-to-cha conversion
DataItem XP0OWCHA char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table counter
DataItem XP0OWCT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// screen counter
DataItem XP0OWCT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0OWCT3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current CCYYMM
DataItem XP0OWCYM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yyyymmdd
DataItem XP0OWDAT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record dd
DataItem XP0OWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// flag
DataItem XP0OWEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XP0OWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XP0OWFFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen header
DataItem XP0OWHDR char(39)  {
  align = left, fillCharacter = " ", inputRequired = no
}
end

// work record time(hhmmss)
DataItem XP0OWHMS num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record hours
DataItem XP0OWHR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record hours
DataItem XP0OWHRS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter link screen/table
DataItem XP0OWINX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record minutes
DataItem XP0OWMIN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record mm
DataItem XP0OWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record minutes
DataItem XP0OWMNS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// bin-to-num conversion
DataItem XP0OWNUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// passed index table location
DataItem XP0OWPIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// work record seconds
DataItem XP0OWSEC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem XP0OWSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XP0OWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem XP0OWTB char(33)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work record time
DataItem XP0OWTIM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work record yy
DataItem XP0OWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system dd
DataItem XP0OWZDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system yymmdd
DataItem XP0OWZDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system hour
DataItem XP0OWZHR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system mm
DataItem XP0OWZMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work system minutes
DataItem XP0OWZMN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system seconds
DataItem XP0OWZSC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system time
DataItem XP0OWZTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// work system yy
DataItem XP0OWZYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

