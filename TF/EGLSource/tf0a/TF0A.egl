package tf0a;
import corpcom1.*;
import corpcom2.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import in1.common.*;
import ku.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
//*** PROGRAM=TF0A ****
// ************************************************************
// * applid:    tf0a    traffic menu
// *
// * overview: this is the traffic menu screen. it is uesed to
// *    select traffic online functions. warehouse and/or
// *    customer mat be entered.
// *
// ************************************************************
// * maint log
// *  when      who     what
// *-------- -------- -----------------------------------------
// *02/02/87  snoble  original creation of prototype
// *05/05/87  rconno  original installation into production
// *05/30/89  jwood   added xssegtr logic, noncsp option
// *03/06/91  rvakel  table changes:  regened to pick up the
// *                  new TFAREC.
// *06/30/92  WTATE   add XBCTBL and BRAND CODE to pass to
// *                  TF0CM001 AND TF0CM002
// *02/08/93  MWILSO  Add new application, TF0D (Zip code map).
// *                  Chgs made to map, table & tf0as20.  Plus
// *                  fixed bug in tf0as20 to update commarea.
// *                  whse when map whse is chgd & validated.
// ************************************************************
// *********************
Program TF0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "TF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  TFAREC TFAREC; // record
  TFWREC TFWREC; // record
  XP0FW01 XP0FW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use TF0AT {deleteAfterUse = yes}; // table
  use XWHTBL {deleteAfterUse = yes}; // table
  use XBCTBL; // table
  use TF0AM.TF0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    TF0A010: TF0A010();
  end // end main
end // end TF0A

// program control
Function TF0A010()



      /* *********************************************************/
      /* **                                                     **/
      /* * this process controls entire program process control **/
      /* * transfer to other applications occurs in converse    **/
      /* * if security is passed flow will aways go to tf0a100  **/
      /* * then tf0a200.                                        **/
      /* *                                                      **/
      /* * the following statement groups are used here:        **/
      /* *     xsentry - to validate logon procedure            **/
      /* *     xstfs01 - to validate traffic security           **/
      /* *                                                      **/
      /* * tfarec.tfapfl1 is always set to 'n'o.                **/
      /* *                                                      **/
      /* *********************************************************/



   /* *************************************************************/
  XSENTRY(); /* check security*/
   /* *************************************************************/

   /* *************************************************************/
  XSSEGTR(); /* set segmented transaction id*/
   /* *************************************************************/

   /* *************************************************************/
  XSTFS01(); /* check traffic security*/
   /* *************************************************************/


   /* *************************************************************/
  TF0A100(); /* init pgm areas*/
   /* *************************************************************/


      /* control pgm converse*/

  TFAREC.TFAPFL1 = "N";
  while (TFAREC.TFAPFL1 == "N")

    TF0A200(); /* converse traffic main menu*/

  end



   /* *************************************************************/
end // end TF0A010

// program initialization
Function TF0A100()



      /* *********************************************************/
      /* * this statement group is used to intialize the        **/
      /* * working storage and map for the traffic system       **/
      /* * main menu                                            **/
      /* *********************************************************/



  set TFAREC empty;


      /* intialize tf0am001 traffic main menu*/

  converseLib.clearScreen();
  set TF0AM001 initial;
  TF0AM001.XXXCURDT = VGVar.currentShortGregorianDate;
  TF0AM001.XXXRVNBR = "01";

      /* edit warehouse*/

  if (COMMAREA.XWHCD == " "
   && TFWREC.XWHCD != " "
   && TFWREC.XWHCD != "99")
    COMMAREA.XWHCD = TFWREC.XWHCD;
  end


  TFWREC.KUCCOID = 0; /* clear company*/
  TFWREC.KUMSTRID = 0; /* clear store*/
  TFWREC.KUMSTRNM = " "; /* clear name*/


  if (TFWREC.XWHCD != " "
   && TFWREC.XWHCD != "99")
    TF0AM001.XWHCD = TFWREC.XWHCD;
    if (TF0AM001.XWHCD in XWHTBL.XWHCD) /* warehouse found*/
      TF0AM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
      TFWREC.XWHCD = TF0AM001.XWHCD;

    else
      converseLib.validationFailed(011); /* invalid warehouse*/
      set TF0AM001.XWHCD cursor, bold;
      TF0AM001.XWHABRV = " ";
    end
  end



   /* ************************************************************/
end // end TF0A100

// process map
Function TF0A200()



      /* *********************************************************/
      /* *                                                      **/
      /* * this process controls the converse and processing of **/
      /* * the traffic main menu map. fast path is allowed from **/
      /* * this screen. PFKEYS allowed are:                     **/
      /* *                                                      **/
      /* *          1 - USE THE STATEMENT GROUP XSPF1           **/
      /* *          3 - USE THE STATEMENT GROUP XSPF4           **/
      /* *          4 - USE THE STATEMENT GROUP XSPF4           **/
      /* *         12 - EDIT THE INPUT DATA. NO UPDATING        **/
      /* *                                                      **/
      /* *        PA2 - CANCEL TRANSACTION. RETURN THE SCREEN   **/
      /* *            WITH THE ORGINAL DATA ON IT.              **/
      /* *********************************************************/



  TF0AM001.CAITEM = COMMAREA.CAITEM;



   /* ************************************************************/
  converse TF0AM001 ;
   /* ************************************************************/


      /* check for invalid pa keys*/

  if (converseVar.eventKey is pa1 /* check for invalid pa key*/
   || converseVar.eventKey is pa3)
    converseLib.clearScreen();
    
    converseLib.validationFailed(002); /* invalid pf key*/
    return;
  end


  TF0AS10(); /* main edits for menu*/


  if (converseVar.validationMsgNum > 0)
    return;
  end


  TF0AS20(); /* traffic option edits*/


  if (converseVar.eventKey is pf12) /* edit only*/
    if (converseVar.validationMsgNum == 0) /* no errors*/
      converseLib.validationFailed(005); /* edits ok - press enter*/
    end
    return;
  end


  if (converseVar.eventKey is enter) /* continue*/
    if (VAGen_EZEMSG <= " "
     && converseVar.validationMsgNum <= 0)
      XSEXIT();
      TF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
      COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* save user commarea*/
      COMMAREA.CATOAP = " ";
    end
    return;
  end



   /* ************************************************************/
end // end TF0A200

// main edits for tf0am001
Function TF0AS10()



      /* *********************************************************/
      /* *                                                      **/
      /* * this statment group is used for the main edits of    **/
      /* * the traffic main menu map.                           **/
      /* *                                                      **/
      /* *********************************************************/


  set TF0AM001.XWHCD initialAttributes;
  set TF0AM001.XWHABRV initialAttributes;
  set TF0AM001.TF0AMOPT initialAttributes;
  set TF0AM001.KUCCOID initialAttributes;
  set TF0AM001.TF0AMSTI initialAttributes;
  set TF0AM001.XBCCD initialAttributes;
  set TF0AM001.KUMSTRNM initialAttributes;
  set TF0AM001.CATOAP initialAttributes;
  set TF0AM001.CAITEM initialAttributes;


  if (converseVar.eventKey is enter /* check for valid selection*/
   || converseVar.eventKey is pa2   
   || converseVar.eventKey is pf1   
   || converseVar.eventKey is pf3   
   || converseVar.eventKey is pf4   
   || converseVar.eventKey is pf12)
  else
    converseLib.validationFailed(002); /* invalid pf key*/
    return;
  end


  if (converseVar.eventKey is pf12) /* edit only*/
    return;
  end

      /* check for cancel option*/

  if (converseVar.eventKey is pa2) /* cancel*/
    COMMAREA.CATOAP = "TF0A";
    XSEXIT();
    TF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CATOAP = " ";
    return;
  end


      /* check for fast path*/

  if (TF0AM001.CAITEM is modified) /* save item*/
    COMMAREA.CAITEM = TF0AM001.CAITEM;
  end

  if (TF0AM001.CATOAP > " ") /* continue*/
    COMMAREA.CATOAP = TF0AM001.CATOAP;
    XSEXIT();
    if (COMMAREA.CAFRMSYS != COMMAREA.CATOSYS)
      COMMAREA.CAUSERA = " "; /* clear userarea if leaving system*/
    end
    TF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* restore user commarea*/
    COMMAREA.CATOAP = " ";
    set TF0AM001.CATOAP cursor, bold;
    return;
  else
    set TF0AM001.CATOAP normal;
  end

     /* check for help system*/

  if (converseVar.eventKey is pf1) /* help*/
    COMMAREA.CAUSERA = " "; /* clear user commarea*/
    XSPF1();
    TF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* restore user commarea*/
    COMMAREA.CATOAP = " ";
    return;
  end

      /* return to master menu*/

  if (converseVar.eventKey is pf3) /* master menu*/
    COMMAREA.CAUSERA = " "; /* clear user commarea*/
    XSPF4();
    TF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* restore user commarea*/
    COMMAREA.CATOAP = " ";
    return;
  end

      /* return to master menu*/

  if (converseVar.eventKey is pf4) /* master menu*/
    COMMAREA.CAUSERA = " "; /* clear user commarea*/
    XSPF4();
    TF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* restore user commarea*/
    COMMAREA.CATOAP = " ";
    return;
  end



   /* ************************************************************/
end // end TF0AS10

// edit traffic options
Function TF0AS20()



      /* *********************************************************/
      /* *                                                      **/
      /* * this statement group is used to edit the traffic     **/
      /* * options selected from the traffic systems main menu. **/
      /* *   edits:                                             **/
      /* *                                                      **/
      /* *   - warehouse - must be xwhtbl (csptbl).             **/
      /* *     move xwhabrv to menu and xwhcd to traffic        **/
      /* *     commarea.                                        **/
      /* *                                                      **/
      /* *   - customer  - only customer numbers which have a   **/
      /* *     'y'es in the tf0atcfl valid customer flag.       **/
      /* *                                                      **/
      /* *   - if a store is entered, kumstrid gt 0, then the   **/
      /* *     company should have been entered; kuccoid gt 0   **/
      /* *                                                      **/
      /* *   - if a company is entered, kuccoid gt 0, then the  **/
      /* *     store is optional.                               **/
      /* *                                                      **/
      /* *********************************************************/



     /* edit company and store code*/

  if (TF0AM001.TF0AMSTI > " ") /* valid stor*/
    if (TF0AM001.KUCCOID > 0) /* valid company*/
       /* edit store*/
      TFAREC.TFASTRA = TF0AM001.TF0AMSTI; /* move to argument*/
      XSTFS02(); /* translate/edit store*/
      if (TFAREC.TFAPFL9 != "N")
        converseLib.validationFailed(006); /* store is invalid*/
        set TF0AM001.TF0AMSTI cursor, bold;
      else
        TF0AM001.TF0AMSTI = TFAREC.TFASTRA; /* move to map*/
      end
    else
      converseLib.validationFailed(012); /* company required with store*/
      set TF0AM001.KUCCOID cursor, bold;
    end
  end

    /* edit company code in traffic table*/

  if (TF0AM001.TF0AMOPT in TF0AT.TF0ATOPT) /* option found*/
    if (TF0AM001.TF0AMSTI > " " /* valid store*/
     || TF0AM001.KUCCOID > 0)   /* valid company*/
      if (TF0AT.TF0ATCFL[sysVar.arrayIndex] == "Y")
        TFWREC.KUCCOID = TF0AM001.KUCCOID;
        TFWREC.XBCCD = TF0AM001.XBCCD;
        TFWREC.KUMSTRID = TFAREC.TFASTRN;
      else
        converseLib.validationFailed(042); /* cust nbr not valid for option*/
        set TF0AM001.KUCCOID cursor, bold;
      end
    end
    if (TF0AM001.KUMSTRNM > " ") /* valid name*/
      if (TF0AT.TF0ATNFL[sysVar.arrayIndex] == "Y")
        TFWREC.KUMSTRNM = TF0AM001.KUMSTRNM;
      else
        converseLib.validationFailed(045); /* name not valid for option*/
        set TF0AM001.KUMSTRNM cursor, bold;
      end
    end
  end

      /* edit option*/

  if (TF0AM001.TF0AMOPT in TF0AT.TF0ATOPT /* option found*/
   && TF0AM001.TF0AMOPT != 99             
   && TF0AT.XXXSTAT[sysVar.arrayIndex] == "A") /* active menu entry*/

    COMMAREA.CATOAP = TF0AT.TF0ATAP[sysVar.arrayIndex];
    TFWREC.TFWOPT = TF0AM001.TF0AMOPT; /* option*/
    TFWREC.XBCCD = TF0AM001.XBCCD;
    TFWREC.TFWUPDFL = TF0AT.TF0ATUFL[sysVar.arrayIndex]; /* update flag*/
    if (TF0AM001.XBCCD != " ")
      if (TF0AM001.TF0AMOPT == "03"
       || TF0AM001.TF0AMOPT == "04"
       || TF0AM001.TF0AMOPT == "05"
       || TF0AM001.TF0AMOPT == "06"
       || TF0AM001.TF0AMOPT == "07"
       || TF0AM001.TF0AMOPT == "13"
       || TF0AM001.TF0AMOPT == "14"
       || TF0AM001.TF0AMOPT == "15"
       || TF0AM001.TF0AMOPT == "16"
       || TF0AM001.TF0AMOPT == "17")
        converseLib.validationFailed(101); /* 'brand cd invalid w/ this option'*/
        set TF0AM001.XBCCD cursor, bold;
        return;
      end
      if (TF0AM001.XBCCD in XBCTBL.XBCCD)
        TFWREC.XBCCD = TF0AM001.XBCCD;
      else
        converseLib.validationFailed(099);
        set TF0AM001.XBCCD cursor, bold;
        return;
      end
    end
    COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* save comm area*/
  else
    converseLib.validationFailed(003); /* invalid menu option*/
    set TF0AM001.TF0AMOPT cursor, bold;
  end

      /* edit warehouse*/

  if (TF0AM001.XWHCD != "  " /* warehouse code not blank*/
   && TF0AM001.XWHCD in XWHTBL.XWHCD) /* warehouse code valid*/
    TF0AM001.XWHABRV = XWHTBL.XWHABRV[sysVar.arrayIndex];
    TFWREC.XWHCD = TF0AM001.XWHCD;
    COMMAREA.XWHCD = TF0AM001.XWHCD;
    COMMAREA.CAUSERA = TFWREC.TFWGRPLV; /* save comm area*/

  else
    converseLib.validationFailed(011); /* invalid warehouse*/
    set TF0AM001.XWHCD cursor, bold;
    TF0AM001.XWHABRV = " ";
  end



   /* ************************************************************/
end // end TF0AS20

