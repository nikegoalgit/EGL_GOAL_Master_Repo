package tf0m;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ep.common.*;
import in1.common.*;
import ku.common.*;
import ta.common.*;
import tf.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=TF0M ****
// This application allows users to inquire, change, and add
// rows in the warehouse carrier table.
// 
// Carrier (dpick.tcarr000) is shared by one or more DCs.  This
// new table (dpick.twcarr00) allows each warehouse to
// associate its own attributes to carrier without impact to
// other warehouses associated with the carrier.
// 
// This TWCARR00 table is used to integrate the DCMS carrier
// functionality with that of GOAL and to enable users and
// programs to be able to cross-reference carrier information
// on both sytems.
// 
// This screen may be accessed by fastpath or by PFkey transfer
// from TF0E.  It is not accessed from a menu.  On entry, the
// screen defaults to INQUIRE mode.  The user may "toggle"
// between inquire, change, and add modes by using the
// designated PF keys.
// 
// NOTE: Modules named as TF0M-9nnnn are common modules that
//       are referenced from more than one process or statement
//       group.
// 
// -------  --------  ------  ---------------------------------
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
// NEW      01/28/98  esmit2  New application.
// *********************
Program TF0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "EP00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  EPWREC EPWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TF0MW00 TF0MW00; // record
  TF0MW01 TF0MW01; // record
  TF1REC TF1REC; // record
  TFWREC TFWREC; // record
  VWCARR01 VWCARR01; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XWHTBL; // table
  use TF0MM.TF0MM001,  // forms
      TF0MM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPEP-00000: XPEP-00000();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and display storage areas.*/
     /* ------------------------------------------------------------*/
     /* Note:*/
      /* If additional fields are added to the screen, be sure*/
      /* to move the correct work record length to the temp*/
      /* storage length (TF0MW00.XXXTSLEN).*/
     /* ------------------------------------------------------------*/

    set TF0MM001 initial; /* M001 input/output*/
    set XX0XM001 initial; /* Pop-up map*/
    set TF0MW00 empty; /* Application working storage*/
    set TF0MW01 empty; /* Map detail working storage*/
    set VWCARR01 empty; /* Warehouse carrier record*/
    set SQLCA empty; /* SQLCA record*/
    set TAEREC empty; /**/
    set TA1REC empty; /**/
    set TA5REC empty; /**/
    set XX0XW01 empty; /**/
    set XX0XW02 empty; /**/


    TF0MW00.TF0MW-FORMAT-SW = "N"; /* Format the map switch*/
    TF0MW00.TF0MW-DATA-RQST-SW = "Y"; /* Request for data switch*/
    TF0MW00.TF0MW-TS-PG-RTN-SW = "N"; /* PA2 logic switch*/
    TF0MW00.TF0MW-ADD-FL = "N"; /* ADD complete indicator*/
    TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* new header data switch*/
    TF0M-INIT-ENTRY-SW = "Y"; /* First time in*/
    TF0MW00.XXXTSLEN = 720; /* Temporary storage length*/


     /* ------------------------------------------------------------*/
     /* Initialization for entry when FROM system is TF.*/
     /* ------------------------------------------------------------*/

    if (COMMAREA.CAFROMAP != COMMAREA.CACURRAP) /* Appl has changed*/

      if (COMMAREA.CACURRAP == "TF0M") /* Warehouse carrier*/

        if (COMMAREA.CAFRMSYS == "TF") /* From TRAFFIC system*/
          TFWREC.TFWGRPLV = COMMAREA.CAUSERA; /* Restore work record*/
        else
          set TFWREC empty; /* Clear work record*/
          TFWREC.XWHCD = COMMAREA.XWHCD; /* Set initial warehouse*/
        end
      end
    end


     /* ------------------------------------------------------------*/
     /* Default to INQUIRY mode on initial entry of screen.*/
     /* ------------------------------------------------------------*/

    TF0MW00.TF0MW-MODE = "I"; /* default to INQ mode*/


     /* ----------------------------------------------------------*/
     /* default to passed warehouse if not blank*/
     /* ----------------------------------------------------------*/

    TF0MW00.XWH-WHSE-CD = COMMAREA.XWHCD; /* save in display storage*/
    TF0MM001.XWH-WHSE-CD = COMMAREA.XWHCD; /* save in screen*/


     /* ------------------------------------------------------------*/
     /* Flow to converse the main process used to display a map.*/
     /* ------------------------------------------------------------*/

    goto TF0M-00000; /* Converse the main process*/

    TF0M-00000: TF0M-00000();
    goto TF0M-00000; /* Converse the main process*/
  end // end main
end // end TF0M

// Main process to display a map
Function TF0M-00000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/


  TF0M-10000(); /* Obtain the data to display*/

  TF0M-20000(); /* Format and display the map*/

  TF0M-30000(); /* Check attention identifier*/

  TF0M-40000(); /* Reset fields to normal intensity*/

  TF0M-50000(); /* Verify the data that was entered*/

  TF0M-60000(); /* Process valid input request*/


end // end TF0M-00000

// Obtain the data to display
Function TF0M-10000()
   /* ------------------------------------------------------------*/
   /* 1 - Delete temp storage as a result of first time or PA2*/
   /* 2 - If a previous error (EZEMNO NE 0) then return*/
   /* 3 - TF0M-11000 - obtain data*/
   /* i. TF0M-11100 - select unique/wildcard*/
   /* ------*/
   /* Loop  | ii. TF0M-11200 - select next (n1)*/
   /* | iii. TF0M-11300 - move row to temp storage (IX)*/
   /* |    a. If page full, then TF0M-11400 write temp storage*/
   /* ------*/
   /* iv. TF0M-11500 - Close cursor*/
   /* v. TF0M-11600 - Read 1st page temp storage on MNT/INQ*/
   /* - Move rows to map on add*/
   /* - Move empty rows to map on add*/
   /* - Set attributes*/
   /* - Set cursor for add*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Delete temporary storage*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-DATA-RQST-SW == "N") /* Data was not requested*/

    TF0MS-91000(); /* Delete temp storage*/
    TF0MW00.TF0MW-DATA-RQST-SW = "Y"; /* Data to be requested*/

    return; /* Return to display map*/
  end


  if (TF0MW00.TF0M-INIT-ENTRY-SW == "Y") /* First time in*/

    /* ------------------------------------------------------------*/
    /* If first time into application, return user to from app if*/
    /* this is not an APPAREL user.*/
    /* ------------------------------------------------------------*/

    if (COMMAREA.XWHCD != "51") /* Not APPAREL user*/

      COMMAREA.CATOAP = COMMAREA.CAFROMAP; /* Return to from app*/
      XSEPS-EXIT(); /* Application exit*/

    end


    TF0MS-91000(); /* Delete temp storage*/
    TF0MW00.TF0MW-DATA-RQST-SW = "Y"; /* Data to be requested*/
    TF0MW00.TF0M-INIT-ENTRY-SW = "N";

  end


   /* ------------------------------------------------------------*/
   /* If an error was found, return to*/
   /* the previous process.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* or an error was found*/

    if (converseVar.validationMsgNum == 20) /* Continue for "transaction complete'*/
       /* NEXT SENTENCE*/
    else

      return; /* Return to previous process*/
    end
  end


   /* ------------------------------------------------------------*/
   /* Retrieve database information, build temp storage & screens*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MAPHDR-CHG-FL == "Y") /* If there is new data to be built*/

    if (converseVar.eventKey is enter /* ENTER key*/
     || converseVar.eventKey is pf9   /* pf9 key - INQUIRE mode*/
     || converseVar.eventKey is pf11) /* pf11 key - CHANGE mode*/

      TF0M-11000(); /* Obtain data to display*/

      return; /* Return to converse map*/
    end
  end


  if (converseVar.eventKey is pf10) /* pf10 - ADD mode*/
    if (TF0MW00.TF0MW-MODE == "A") /* ADD mode*/

      TF0M-11600(); /* Move data to screen*/

      return; /* Return to converse map*/
    else /* Not ADD mode*/

      TF0M-11000(); /* Obtain data to display*/

      return; /* Return to converse map*/
    end
  end


end // end TF0M-10000

// Obtain Warehouse Carrier data
Function TF0M-11000()
   /* ------------------------------------------------------------*/
   /* Select from Warehouse Carrier table*/
   /* ------------------------------------------------------------*/

  TF0M-11100(); /* Select warehouse carrier table*/

  TF0MW00.TF0MW-WORK-CTR = 0; /* Number of row into TS*/


   /* ------------------------------------------------------------*/
   /* Select set and open cursor*/
   /* Fetch and build temp storage until end of cursor*/
   /* ------------------------------------------------------------*/

  if (SQLCA.VAGen_SQLCODE == 0) /* If data exists*/

    TF0MW00.TF0MW-IXM = 0; /* Initialize TS index*/
    TF0MW00.TF0MW-EOC-SW = "N"; /* End of cursor switch*/

    while (TF0MW00.TF0MW-EOC-SW == "N") /* Until end of cursor*/
      TF0M-11200(); /* Fetch next row*/
    end

    TF0M-11500(); /* Close the selected cursor*/

    if (TF0MW00.TF0MW-IXM > 0) /* Remaining data*/
      TF0M-11400(); /* Write remaining data to tempstor*/
    end
  end


   /* ------------------------------------------------------------*/
   /* Obtain data for page to be sent*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "A") /* If ADD mode*/
    TF0M-11600(); /* Obtain data for page*/

  else
    if (TF0MW00.TF0MW-WORK-CTR > 0) /* If records retrieved gt 0*/
      TF0M-11600(); /* Obtain data for page*/

    else /* maintain current screen*/
      converseLib.validationFailed(12); /* Record is not on database*/
      TF0MW00.XXX-MSG-LOC-ID = "110"; /* Module identification*/
      set TF0MM001.XWH-WHSE-CD cursor; /* Cursor to warehouse*/

    end
  end

end // end TF0M-11000

// Open csr on Warehouse Carrier
Function TF0M-11100()
   /* ------------------------------------------------------------*/
   /* Open the cursor on warehouse carrier table*/
   /* Allow for wildcard selection parameters*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear row storage area*/

   /* * * WAREHOUSE * * **/
  VWCARR01.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD; /* Whse code*/

   /* * * GOAL CARRIER * * **/
  if (TF0MM001.TF0MM-SEL-CARR-CD > " " /* Carr entered*/
   && TF0MW00.TF0MW-MODE != "A")       /* Not ADD mode*/
    VWCARR01.TF-CARR-CD = TF0MM001.TF0MM-SEL-CARR-CD; /* Carrier*/
  else /* Not entered*/
    VWCARR01.TF-CARR-CD = "*"; /* Wildcard*/
  end

   /* * * DC CARRIER * * **/
  if (TF0MM001.TF0MM-SEL-DC-CARR-ID > " " /* Carr entered*/
   && TF0MW00.TF0MW-MODE != "A")          /* Not ADD mode*/
    VWCARR01.DC-CARR-ID = TF0MM001.TF0MM-SEL-DC-CARR-ID;
  else /* Not entered*/
    VWCARR01.DC-CARR-ID = "*"; /* Wildcard*/
  end

   /* * * DC CARRIER SERVICE * * **/
  if (TF0MM001.TF0MM-SEL-CARR-SVC-ABRV > " " /* Svc entered*/
   && TF0MW00.TF0MW-MODE != "A")             /* Not ADD mode*/
    VWCARR01.DC-CARR-SVC-ABRV = TF0MM001.TF0MM-SEL-CARR-SVC-ABRV;
  else /* Not entered*/
    VWCARR01.DC-CARR-SVC-ABRV = "*"; /* Wildcard*/
  end

   /* * * SATURDAY DELIVERY FLAG * * **/
  if (TF0MM001.TF0MM-SEL-SAT-DLVR-FL > " " /* Dlvr entered*/
   && TF0MW00.TF0MW-MODE != "A")           /* Not ADD mode*/
    VWCARR01.DC-SAT-DLVR-FL = TF0MM001.TF0MM-SEL-SAT-DLVR-FL;
  else /* Not entered*/
    VWCARR01.DC-SAT-DLVR-FL = "*"; /* Wildcard*/
  end

   /* * * STATUS * * **/
  if (TF0MM001.TF0MM-SEL-STAT > " " /* Stat entered*/
   && TF0MW00.TF0MW-MODE != "A")    /* Not ADD mode*/
    VWCARR01.XXX-STAT = TF0MM001.TF0MM-SEL-STAT;
  else /* Not entered*/
    VWCARR01.XXX-STAT = "*"; /* Wildcard*/
  end

  VWCARR01.TF4FBLIN = "*"; /* Wildcard*/


   /* ------------------------------------------------------------*/
   /* Select warehouse carrier IO call*/
   /* ------------------------------------------------------------*/

  try
    call "VWCARR01" ("S1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      return; /* Return to previous process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "111"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OBTAIN WAREHOUSE CARRIER     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0M-11100

// Fetch next Warehouse Carrier
Function TF0M-11200()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN layout*/

  try
    call "VWCARR01" ("N1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    TF0M-11300(); /* load into temporary storage*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* If end of the selected set, indicate end of cursor*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 100)    /* End of selected set*/

    TF0MW00.TF0MW-EOC-SW = "Y"; /* Indicate end of cursor*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "112"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT LANE DATABASE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-11200

// Load Whse Carrier row into TS
Function TF0M-11300()
   /* ------------------------------------------------------------*/
   /* Load VWCARR01 into TF0MW01 temp storage area*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-IXM > 12) /* Temp Stor full*/
    TF0M-11400(); /* Write Temp Stor*/
  end

  TF0MW00.TF0MW-WORK-CTR = TF0MW00.TF0MW-WORK-CTR + 1; /* Increment rows*/

  TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM + 1; /* Increment TS idx*/

  TF0M-97000(); /* Get carrier data*/
  TF0MW01.TF1ABRV[TF0MW-IXM] = TF1REC.TF1ABRV; /* Carrier abrv*/

  TF0MW01.TF0MW-LN-USED-FL[TF0MW-IXM] = "Y"; /* Line has data*/

  TF0MW01.ZZZCHGCT[TF0MW-IXM] = VWCARR01.ZZZCHGCT;
  TF0MW01.TF-CARR-CD[TF0MW-IXM] = VWCARR01.TF-CARR-CD;
  TF0MW01.DC-CARR-ID[TF0MW-IXM] = VWCARR01.DC-CARR-ID;
  TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM] = VWCARR01.DC-CARR-SVC-ABRV;
  TF0MW01.DC-CARR-SVC-NM[TF0MW-IXM] = VWCARR01.DC-CARR-SVC-NM;
  TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM] = VWCARR01.DC-SAT-DLVR-FL;
  TF0MW01.TF4FBLIN[TF0MW-IXM] = VWCARR01.TF4FBLIN;
  TF0MW01.XXX-STAT[TF0MW-IXM] = VWCARR01.XXX-STAT;


   /* ------------------------------------------------------------*/
   /* Test for full temp storage area*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-IXM > 11) /* TS area full*/
    TF0M-11400(); /* Write Temp Storage*/
  end


end // end TF0M-11300

// Write Temporary Storage
Function TF0M-11400()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  TF0MW01.XXXTSLEN = TF0MW00.XXXTSLEN; /* Temp storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application id*/
  TA5REC.TA5FNCCD = "A"; /* ADD Function code*/

  try
    call "TA0050" (TF0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/


   /* ------------------------------------------------------------*/
   /* If successful, initialize the storage area and indicators*/
   /* to be used.  Return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set TF0MW01 empty; /* M001 display storage*/

    TF0MW00.TF0MW-IX3 = 1; /* Work index*/

    TF0MW00.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    TF0MW00.XXXTSPAG = TA5REC.TA5TSQIX; /* Current page number*/
    TA5REC.TA5TSQIX = 0; /* Current page number*/
    TF0MW00.TF0MW-IXM = 0; /* Reset TS index*/

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subrt parms*/

  TF0MW00.XXX-MSG-LOC-ID = "114"; /* Module id*/
  converseLib.validationFailed(01); /* Unexpected error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map appl*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-11400

// Close csr on Warehouse Carrier
Function TF0M-11500()
   /* ------------------------------------------------------------*/
   /* Close selected cursor*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN record*/

  try
    call "VWCARR01" ("C1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "115"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED CURSOR        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-11500

// Obtain rows for screen
Function TF0M-11600()
  TF0MW00.TF0MW-MAPHDR-CHG-FL = "N"; /* Data not new*/


   /* ------------------------------------------------------------*/
   /* If INQ or MNT functions*/
   /* If there is data (or temp storage)*/
   /* Read the first page*/
   /* Move current w-s pages to map*/
   /* else*/
   /* Move current w-s pages to map (equal zeros)*/
   /* Send 'Record not on database' message*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "I" /* If INQ request*/
   || TF0MW00.TF0MW-MODE == "C") /* Or MNT request*/

    if (TF0MW00.TA5TSQIX > 0) /* temp stor exists*/

      TF0MW00.XXXTSPAG = 1; /* Set page to 1*/

      TF0MS-92000(); /* Read temp stor pg*/

      TF0MM001.MAPLMPNO = TF0MW00.XXXTSPAG; /* curr page nbr*/
      TF0MM001.MAPLMPAG = TF0MW00.TA5TSQIX; /* max page nbr*/
    else

      TF0MM001.MAPLMPNO = TF0MW00.XXXTSPAG; /* curr page nbr*/
      TF0MM001.MAPLMPAG = TF0MW00.TA5TSQIX; /* max page nbr*/
    end
  end


   /* ------------------------------------------------------------*/
   /* Load temp storage into map area*/
   /* ------------------------------------------------------------*/


  TF0MW00.TF0MW-IXM = 1; /* Initialize map field index*/

  while (TF0MW00.TF0MW-IXM <= 12) /* while occur is 1 to 12*/

    TF0MS-93000(); /* move ts occur to map occur*/
  end


   /* ------------------------------------------------------------*/
   /* Reset attributes*/
   /* ------------------------------------------------------------*/

  TF0MS-94000(); /* Header attributes*/

  TF0MW00.TF0MW-IXM = 1; /* Initialize map field index*/

  while (TF0MW00.TF0MW-IXM <= 12) /* while occur is 1 to 12*/

    TF0MS-95000(); /* move attributes to map occur*/
  end


   /* ------------------------------------------------------------*/
   /* Set up cursor for ADD request*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "A") /* If ADD request*/

    set TF0MM001.TF-CARR-CD[1] cursor; /* Put csr on carrier*/
  end


end // end TF0M-11600

// Format and converse the map
Function TF0M-20000()
   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    TF0MW00.TF0MW-MSG-NBR = converseVar.validationMsgNum; /* Message number*/
  end


   /* ------------------------------------------------------------*/
   /* If obtain data failed or no error, format data to display.*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-DATA-RQST-SW == "Y" /* Obtain data failed*/
   || converseVar.validationMsgNum == 0) /* or no error found*/

    if (TF0MW00.TF0MW-FORMAT-SW == "Y") /* Map must be formatted*/
      TF0M-21000(); /* Format the data on the map*/
    end

  end


   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  TF0MM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  TF0MM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  TF0MM001.CAITEM = COMMAREA.CAITEM; /* Application data*/


   /* ------------------------------------------------------------*/
   /* Format map options*/
   /* If add mode, initialize select fields except for warehouse*/
   /* ------------------------------------------------------------*/


  if (TF0MW00.TF0MW-MODE == "C") /* CHANGE  mode*/
    TF0MM001.TF0MM-MODE-LIT = "MODE: CHANGE "; /* Map sub title*/
  else
    if (TF0MW00.TF0MW-MODE == "A") /* ADD mode*/
      TF0MM001.TF0MM-MODE-LIT = "MODE: ADD    "; /* Map sub title*/
      TF0MM001.TF0MM-SEL-CARR-CD = " ";
      TF0MM001.TF0MM-SEL-DC-CARR-ID = " ";
      TF0MM001.TF0MM-SEL-CARR-SVC-ABRV = " ";
      TF0MM001.TF0MM-SEL-SAT-DLVR-FL = " ";
      TF0MM001.TF0MM-SEL-STAT = " ";
    else /* INQUIRY default*/
      TF0MM001.TF0MM-MODE-LIT = "MODE: INQUIRY"; /* Map sub title*/
    end
  end


   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MSG-NBR != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ")     /* or message text*/

    if (TF0MW00.TF0MW-MSG-NBR != 0) /* Message to display*/
      if (TF0MW00.TF0MW-MSG-NBR == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(TF0MW00.TF0MW-MSG-NBR);
      end /* Message number*/
    else
      TF0MM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/
    end

    TF0MM001.XXXMODID = TF0MW00.XXX-MSG-LOC-ID; /* Module  id*/
    set TF0MM001 alarm; /* Alarm*/
  end


  if (TF0MW00.TF0MW-EDIT-PASS-SW == "Y") /* No edit errors*/

    if (TF0MW00.TF0MW-MODE == "A") /* ADD mode*/

      set TF0MM001.TF-CARR-CD[1] cursor; /* Cursor at 1st entry*/

    else

      if (TF0MM001.XWH-WHSE-CD == " ") /* Warehouse blank*/
        set TF0MM001.XWH-WHSE-CD cursor; /* Cursor at warehouse*/
      else
        set TF0MM001.TF0MM-SEL-CARR-CD cursor; /* Cursor at carrier*/
      end

    end
  end


  set TF0MM001.MAPLMPGL protect; /* "Page" literal*/
  set TF0MM001.MAPLMPNO protect; /* Current page number*/
  set TF0MM001.MAPLMPOL protect; /* "of" literal*/
  set TF0MM001.MAPLMPAG protect; /* Total pages*/

  if (TF0MW00.TA5TSQIX <= 1 /* One page only*/
   || TF0MW00.TF0MW-MODE == "A") /* or ADD mode*/

    set TF0MM001.MAPLMPGL invisible, protect; /* "Page" literal*/
    set TF0MM001.MAPLMPNO invisible, protect; /* Current page number*/
    set TF0MM001.MAPLMPOL invisible, protect; /* "of" literal*/
    set TF0MM001.MAPLMPAG invisible, protect; /* Total pages*/

  else

    TF0MM001.MAPLMPNO = TF0MW00.XXXTSPAG;
    TF0MM001.MAPLMPAG = TF0MW00.TA5TSQIX;

  end


  converse TF0MM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information*/
   /* ------------------------------------------------------------*/

  TF0MM001.XXXMODID = " "; /* Module identification*/
  TF0MW00.XXX-MSG-LOC-ID = " "; /* Module identification*/
  TF0MW00.TF0MW-MSG-NBR = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = TF0MM001.CATOAP; /* To application*/
  COMMAREA.CAITEM = TF0MM001.CAITEM; /* Application data*/


end // end TF0M-20000

// Format the display data
Function TF0M-21000()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  set TF0MM001 initial; /* M001 input/output area*/

  TF0MW00.TF0MW-FORMAT-SW = "N"; /* Format the map switch*/
  TF0MW00.TF0MW-MAPHDR-CHG-FL = "N"; /* New data switch*/
  TF0MW00.TF0MW-DATA-RQST-SW = "Y"; /* Request for data*/


   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temp storage*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TA5TSQIX > 0) /* Pages were formatted*/

    if (TF0MW00.XXXTSPAG != TA5REC.TA5TSQIX) /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest*/
      /* page in storage, default to the highest page number*/
      /* ------------------------------------------------------------*/

      if (TF0MW00.XXXTSPAG > TF0MW00.TA5TSQIX) /* Desired page greater*/
        TF0MW00.XXXTSPAG = TF0MW00.TA5TSQIX; /* Default to highest*/
      end

      TF0MS-92000(); /* Obtain TS page*/

    end

    set TF0MM001.MAPLMPGL skip; /* Page literal*/
    TF0MM001.MAPLMPNO = TF0MW00.XXXTSPAG; /* Page number*/
    set TF0MM001.MAPLMPOL skip; /* Page literal*/
    TF0MM001.MAPLMPAG = TF0MW00.TA5TSQIX; /* Number pages*/

  end


   /* ------------------------------------------------------------*/
   /* Format the data on the map from temp storage*/
   /* ------------------------------------------------------------*/

  TF0MM001.XWH-WHSE-CD = TF0MW00.XWH-WHSE-CD;
  TF0MM001.TF0MM-SEL-CARR-CD = TF0MW00.TF0MM-SEL-CARR-CD;
  TF0MM001.TF0MM-SEL-DC-CARR-ID = TF0MW00.TF0MM-SEL-DC-CARR-ID;
  TF0MM001.TF0MM-SEL-CARR-SVC-ABRV = TF0MW00.TF0MM-SEL-CARR-SVC-ABRV;
  TF0MM001.TF0MM-SEL-SAT-DLVR-FL = TF0MW00.TF0MM-SEL-SAT-DLVR-FL;
  TF0MM001.TF0MM-SEL-STAT = TF0MW00.TF0MM-SEL-STAT;

  TF0MW00.TF0MW-IXM = 1; /* Init map field index*/

  while (TF0MW00.TF0MW-IXM <= 12) /* Until screen is full*/
    TF0MS-93000(); /* Move ts occur to map occur*/
  end

  TF0MS-94000(); /* Set hdr attrib, cursor*/

  TF0MW00.TF0MW-IXM = 1; /* Init map field index*/

  while (TF0MW00.TF0MW-IXM <= 12) /* Until screen is full*/
    TF0MS-95000(); /* Set line attributes*/
  end

  if (converseVar.eventKey is pf7)
    converseLib.validationFailed(14); /* Scroll backward successful*/

  else
    if (converseVar.eventKey is pf8)
      converseLib.validationFailed(13); /* Scroll forward successful*/
    end
  end


end // end TF0M-21000

// Check attention identifier
Function TF0M-30000()
   /* ------------------------------------------------------------*/
   /* Attention identifiers are processed in the following order:*/
   /* - PA2 cancel perform*/
   /* - Fast path with <enter> key*/
   /* - Transfers to other applications*/
   /* - PF7/8 perform for plausible/allowable scrolling*/
   /* - PF9  switch to INQ mode when valid/allowable*/
   /* - PF10 switch to ADD mode when valid/allowable*/
   /* - PF11 switch into CHG mode when allowable*/
   /* - If not <enter> , then invalid pf key message*/
   /* - <enter> key and*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    TF0M-31000(); /* Clear or restore screen*/
    return; /* Exit to set attributes*/

  end


   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      TF0MS-91000(); /* Delete temporary storage*/

      XSEPS-EXIT(); /* Exit to another application*/

      set TF0MM001.CATOAP cursor, bold; /* Highlight*/

    else

      set TF0MM001.CATOAP cursor, bold; /* Highlight*/

      TF0MW00.XXX-MSG-LOC-ID = "300"; /* Module identification*/
      converseLib.validationFailed(18); /* Only valid with ENTER*/

    end

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* Set up EXIT to another application if requested.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf3 /* PF3 was pressed*/
   || converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = COMMAREA.CAFROMAP; /* TO application*/
    end

    if (converseVar.eventKey is pf4) /* PF4 was pressed*/
      COMMAREA.CATOAP = "MN0M"; /* TO application*/
    end

    if (converseVar.eventKey is pf5) /* PF5 was pressed*/
      COMMAREA.CATOAP = "TF0E"; /* TO application*/
    end

    TF0MS-91000(); /* Delete temp storage*/

    XSEPS-EXIT(); /* Exit to another appl*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* Scroll request*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll backward*/
   || converseVar.eventKey is pf8) /* Scroll forward*/

    return; /* Exit*/

  end


   /* ------------------------------------------------------------*/
   /* PF10 - Request for ADD mode*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf10) /* ADD Mode*/
    if (COMMAREA.CACHGFL == "Y") /* MAINT authority*/

      TF0MW00.TF0MW-MODE = "A"; /* To ADD*/
      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New data*/

      TF0MM001.TF0MM-SEL-CARR-CD = " ";
      TF0MM001.TF0MM-SEL-DC-CARR-ID = " ";
      TF0MM001.TF0MM-SEL-CARR-SVC-ABRV = " ";
      TF0MM001.TF0MM-SEL-SAT-DLVR-FL = " ";
      TF0MM001.TF0MM-SEL-STAT = " ";
      TF0MW00.TF0MM-SEL-CARR-CD = " ";
      TF0MW00.TF0MM-SEL-DC-CARR-ID = " ";
      TF0MW00.TF0MM-SEL-CARR-SVC-ABRV = " ";
      TF0MW00.TF0MM-SEL-SAT-DLVR-FL = " ";
      TF0MW00.TF0MM-SEL-STAT = " ";

      TF0MS-91000(); /* Purge temp storage*/

      return; /* Exit*/

    else

      converseLib.validationFailed(3); /* Maint access lacking*/
      TF0MW00.XXX-MSG-LOC-ID = "300"; /* Module identification*/
      exit stack; /* Return to display error*/
    end
  end


   /* ------------------------------------------------------------*/
   /* PF11 - Request for CHG mode*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf11) /* CHG mode request*/
    if (COMMAREA.CACHGFL != "Y") /* No MNT authority*/

      converseLib.validationFailed(3); /* Maint access lacking*/
      TF0MW00.XXX-MSG-LOC-ID = "300"; /* Module identification*/
      exit stack; /* Display error msg*/
    end
  end


  if (converseVar.eventKey is pf11) /* CHG mode request*/
    if (TF0MW00.TF0MW-TS-PG-RTN-SW == "N") /* No update in progress*/

      TF0MW00.TF0MW-MODE = "C"; /* Change mode*/
      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New data*/

      return; /* Exit*/

    else
      if (TF0MW00.TF0MW-TS-PG-RTN-SW == "Y") /* If update in session*/

        TF0MW00.XXX-MSG-LOC-ID = "300"; /* Module identification*/
        converseLib.validationFailed(18); /* Select valid w/ENTER*/

        exit stack; /* Exit to display map*/

      end
    end
  end


   /* ------------------------------------------------------------*/
   /* PF9  - Request for INQUIRY mode*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9) /* Inquiry mode*/

    TF0MS-91000(); /* Purge temp storage*/

    TF0MW00.TF0MW-MODE = "I"; /* Change mode to INQ*/
    TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New data*/

    return; /* Exit*/
  end


   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    TF0MW00.XXX-MSG-LOC-ID = "300"; /* Module identification*/
    converseLib.validationFailed(4); /* PA/PF key is not valid*/

    exit stack; /* Exit to display map*/

  end


   /* ------------------------------------------------------------*/
   /* If ENTER key*/
   /* If CHG or ADD mode*/
   /* and update attempt has been made so set the switch*/
   /* that will restore the screen*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    if (TF0MW00.TF0MW-MODE == "I") /* Mode is INQ*/

      TF0MW00.TF0MW-TS-PG-RTN-SW = "N"; /* Clear screen on PA2*/
    else

      if (TF0MW00.TA5TSQIX > 0) /* and no detail data*/
        TF0MW00.TF0MW-TS-PG-RTN-SW = "Y"; /* Restore screen*/
      end
    end
  end


end // end TF0M-30000

// PA2 Cancel Process
Function TF0M-31000()
   /* ------------------------------------------------------------*/
   /* If occur data not entered for update, clear screen, return*/
   /* If update attempt was made restore screen from temp storage*/
   /* ------------------------------------------------------------*/

  COMMAREA.CATOAP = " "; /* TO application*/
  COMMAREA.CAITEM = " "; /* Application data*/

  if (TF0MW00.TF0MW-TS-PG-RTN-SW == "N") /* Clear screen*/

    TF0MW00.TF0MW-FORMAT-SW = "Y"; /* Format the map switch*/
    TF0MW00.TF0MW-DATA-RQST-SW = "N"; /* Request for data switch*/

  else

    /* Reset map fields*/
    TF0MM001.XWH-WHSE-CD = TF0MW00.XWH-WHSE-CD;
    TF0MM001.TF0MM-SEL-CARR-CD = TF0MW00.TF0MM-SEL-CARR-CD;
    TF0MM001.TF0MM-SEL-DC-CARR-ID = TF0MW00.TF0MM-SEL-DC-CARR-ID;
    TF0MM001.TF0MM-SEL-CARR-SVC-ABRV = TF0MW00.TF0MM-SEL-CARR-SVC-ABRV;
    TF0MM001.TF0MM-SEL-SAT-DLVR-FL = TF0MW00.TF0MM-SEL-SAT-DLVR-FL;
    TF0MM001.TF0MM-SEL-STAT = TF0MW00.TF0MM-SEL-STAT;


    TF0MW00.TF0MW-IXM = 1; /* Initialize map field index*/

    while (TF0MW00.TF0MW-IXM <= 12) /* while occur is 1 to 12*/
      TF0MS-93000(); /* move ts occur to map occur*/
    end

    TF0MW00.TF0MW-TS-PG-RTN-SW = "N"; /* Update session cancelled*/

  end


end // end TF0M-31000

// Reset highlighted fields
Function TF0M-40000()
   /* ------------------------------------------------------------*/
   /* Reset header attributes*/
   /* Reset attributes for all 12 occurrences*/
   /* Pop-up window WARHOUSE CODE*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  TF0MS-94000(); /* Header/trailer attributes*/


   /* ------------------------------------------------------------*/
   /* Set attributes for all 12 occurrences.*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = 1; /* Initialize work subscript*/

  while (TF0MW00.TF0MW-IXM <= 12) /* Until end of lines*/

    TF0MS-95000(); /* Set attributes for work sub occur*/
  end


   /* ------------------------------------------------------------*/
   /* Return for Cancel/Scroll*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* If cancel*/

    exit stack; /* exit to converse map*/
  end


   /* ------------------------------------------------------------*/
   /* Pop-up window to obtain WAREHOUSE Code*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.XWH-WHSE-CD == "?") /* WAREHOUSE Code*/

    TF0M-41000(); /* Pop-up Lane length*/
  end


end // end TF0M-40000

// Pop-up window - WAREHOUSE Code
Function TF0M-41000()
   /* ------------------------------------------------------------*/
   /* If requested, display the list of WAREHOUSE Code.*/
   /* ------------------------------------------------------------*/

  XPXX001(); /* Window init*/
  XX0XW02.XX0XWHDR = " WAREHOUSE CD"; /* Heading*/

  while (XX0XW02.XX0XWEND == "N") /* Until end*/

    XPXWH01(); /* Display list*/
  end

  if (XX0XW02.XX0XWPIX == 0) /* No selection*/

    TF0MM001.XWH-WHSE-CD = " "; /* Restore prior*/
  else

    TF0MM001.XWH-WHSE-CD = XWHTBL.XWHCD[XX0XWPIX]; /* Selected value*/
  end


   /* ------------------------------------------------------------*/
   /* Indicate that the requested lists have been displayed and*/
   /* that ENTER must be pressed to process any changes.*/
   /* ------------------------------------------------------------*/

  converseLib.clearScreen();
   /* Clear screen before display*/


end // end TF0M-41000

// Verify/edit data
Function TF0M-50000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Compare header data for changes*/
   /* If change*/
   /* delete temporary storage*/
   /* ezeflo to TF0M100 to obtain data*/
   /* Preliminary edits of ADD/MNT requests*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAITEM > " ") /* Application data was entered*/

    TF0MW00.XXX-MSG-LOC-ID = "500"; /* Module identification*/
    set TF0MM001.CAITEM cursor, bold; /* Highlight*/
    converseLib.validationFailed(11); /* Invalid value entered*/

    return;

  end


   /* ------------------------------------------------------------*/
   /* Reset Edit error switch*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-EDIT-PASS-SW = "Y"; /* Assume edits will pass*/


   /* ------------------------------------------------------------*/
   /* Edit scroll request*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll backward*/
   || converseVar.eventKey is pf8) /* Scroll forward*/

    TF0M-55000(); /* Edit scroll request*/

    return;

  end


   /* ------------------------------------------------------------*/
   /* Compare current map header data with w-s for any changes*/
   /* If hdr data has been changed, set new data switch to 'y'*/
   /* ------------------------------------------------------------*/

   /* * * WAREHOUSE CHANGE * * **/
  if (TF0MM001.XWH-WHSE-CD != TF0MW00.XWH-WHSE-CD /* Warehouse change*/
   && TF0MM001.XWH-WHSE-CD > " ")                 /* Warehouse change*/
    TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New header data*/
  end

   /* * * CARRIER CHANGE * * **/
  if (TF0MM001.TF0MM-SEL-CARR-CD <= " " /* Blank*/
   && TF0MW00.TF0MM-SEL-CARR-CD <= " ") /* No previous*/
      /* next sentence*/
  else
    if (TF0MM001.TF0MM-SEL-CARR-CD != TF0MW00.TF0MM-SEL-CARR-CD)
      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New header data*/
    end
  end

   /* * * DC CARRIER CHANGE * * **/
  if (TF0MM001.TF0MM-SEL-DC-CARR-ID <= " " /* Blank*/
   && TF0MW00.TF0MM-SEL-DC-CARR-ID <= " ") /* No previous*/
      /* next sentence*/
  else
    if (TF0MM001.TF0MM-SEL-DC-CARR-ID != TF0MW00.TF0MM-SEL-DC-CARR-ID)
      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New header data*/
    end
  end

   /* * * DC CARRIER SERVICE CHANGE * * **/
  if (TF0MM001.TF0MM-SEL-CARR-SVC-ABRV <= " " /* Blank*/
   && TF0MW00.TF0MM-SEL-CARR-SVC-ABRV <= " ") /* No previous*/
      /* next sentence*/
  else
    if (TF0MM001.TF0MM-SEL-CARR-SVC-ABRV != TF0MW00.TF0MM-SEL-CARR-SVC-ABRV)
      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New header data*/
    end
  end

   /* * * SATURDAY DELIVERY CHANGE * * **/
  if (TF0MM001.TF0MM-SEL-SAT-DLVR-FL <= " " /* Blank*/
   && TF0MW00.TF0MM-SEL-SAT-DLVR-FL <= " ") /* No previous*/
      /* next sentence*/
  else
    if (TF0MM001.TF0MM-SEL-SAT-DLVR-FL != TF0MW00.TF0MM-SEL-SAT-DLVR-FL)
      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New header data*/
    end
  end

   /* * * STATUS CHANGE * * **/
  if (TF0MM001.TF0MM-SEL-STAT <= " " /* Blank*/
   && TF0MW00.TF0MM-SEL-STAT <= " ") /* No previous*/
      /* next sentence*/
  else
    if (TF0MM001.TF0MM-SEL-STAT != TF0MW00.TF0MM-SEL-STAT)

      TF0MW00.TF0MW-MAPHDR-CHG-FL = "Y"; /* New header data*/
    end
  end


   /* ------------------------------------------------------------*/
   /* If any changes or no warehouse entered, edit header data*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MAPHDR-CHG-FL == "Y") /* There is new data*/

    TF0MW00.TF0MW-TS-PG-RTN-SW = "N"; /* Clear screen on PA2*/
    TF0M-51000(); /* Edit header data*/

    exit stack; /* Return to Main Process*/
  end


   /* ------------------------------------------------------------*/
   /* ezeflo for pf9 request now that hdr change checked*/
   /* ezeflo for Inquiry mode*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9 /* Hdr chg checked - return*/
   || TF0MW00.TF0MW-MODE == "I")  /* INQ mode - return*/

    exit stack; /* Return to Main Process*/
  end


   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Edit ADD entries from row 12 to row 1*/
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "A") /* If mode is ADD*/

    TF0MW00.TF0MW-WORK-CTR = 0; /* Initialize occurs added*/
    TF0MW00.TF0MW-IXM = 13; /* Initialize occur index*/

    while (TF0MW00.TF0MW-IXM > 1)

      TF0M-52000(); /* Edit ADD entries 12 times*/
    end

    if (TF0MW00.TF0MW-WORK-CTR == 0) /* If no entries were added*/

      set TF0MM001.TF-CARR-CD[1] cursor; /* Move csr to first carrier*/
      TF0MW00.XXX-MSG-LOC-ID = "500"; /* Module identification*/
      converseLib.validationFailed(5); /* New input required*/
    end

    return; /* Return*/
  end


   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/
   /* Edit CHANGE entries from row 12 to row 1*/
   /* ------------------------------------------------------------*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "C") /* If mode is CHANGE*/

    TF0MW00.TF0MW-WORK-CTR = 0; /* Initialize occurs*/
    TF0MW00.TF0MW-IXM = 13; /* Initialize occur index*/

    while (TF0MW00.TF0MW-IXM > 1)

      TF0M-53000(); /* Edit MNT entries 12 times*/
    end

    if (TF0MW00.TF0MW-WORK-CTR == 0) /* If no entries maintained*/

      set TF0MM001.TF-CARR-CD[1] cursor; /* Cursor at carrier #1*/
      TF0MW00.XXX-MSG-LOC-ID = "500"; /* Module identification*/
      converseLib.validationFailed(5); /* New input required*/
    else
      /* NEXT SENTENCE*/
    end

    return; /* Return*/
  end


end // end TF0M-50000

// Edit Map header data
Function TF0M-51000()
   /* ------------------------------------------------------------*/
   /* EDIT MAP HEADER SELECTION DATA*/
   /* Verify that no detail line fields were changed*/
   /* Delete temp storage for the previous header*/
   /* Clear row and page fields on map*/
   /* Edit header fields*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum != 0) /* Msg nbr not equal to zero*/
    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Set edit switch to not pass*/

    return; /* Return to process*/
  end


   /* ------------------------------------------------------------*/
   /* Delete temp storage for the previous header*/
   /* Clear row and page fields on map*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TA5TSQIX > 0) /* If temporary storage exists*/

    TF0MS-91000(); /* Delete temp storage*/
  end

  TF0MM001.MAPLMPNO = 0; /* Current map page*/
  TF0MM001.MAPLMPAG = 0; /* Maximum map page*/

  TF0MW00.TF0MW-IXM = 1; /* Initialize index to 1*/

  while (TF0MW00.TF0MW-IXM <= 12) /* Loop 12 times*/

    TF0MS-93000(); /* Move (empty) temp storage to map*/
  end

  TF0MW00.TF0MW-IXM = 1; /* Initialize index to 1*/

  while (TF0MW00.TF0MW-IXM <= 12) /* Loop 12 times*/

    TF0MS-95000(); /* Reset attributes*/
  end


   /* ------------------------------------------------------------*/
   /* EDIT STATUS*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF0MM-SEL-STAT == "A" /* Active*/
   || TF0MM001.TF0MM-SEL-STAT == "I" /* Inactive*/
   || TF0MM001.TF0MM-SEL-STAT == "*" /* ALL - wildcard "*"*/
   || TF0MM001.TF0MM-SEL-STAT == " ") /* Default to wildcard "*"*/
     /* Next sentence*/
  else
    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit failed*/
    TF0MW00.XXX-MSG-LOC-ID = "510"; /* paragraph number to map*/
    set TF0MM001.TF0MM-SEL-STAT cursor, bold; /* Highlight error*/
    converseLib.validationFailed(11); /* Invalid value entered*/
  end


   /* ------------------------------------------------------------*/
   /* EDIT SATURDAY DELIVERY*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF0MM-SEL-SAT-DLVR-FL > " ") /* Entered*/
    if (TF0MM001.TF0MM-SEL-SAT-DLVR-FL == "Y" /* Yes*/
     || TF0MM001.TF0MM-SEL-SAT-DLVR-FL == "N") /* No*/
       /* Next sentence*/
    else
      TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit failed*/
      TF0MW00.XXX-MSG-LOC-ID = "510"; /* paragraph number*/
      set TF0MM001.TF0MM-SEL-SAT-DLVR-FL cursor, bold; /* Highlight error*/
      converseLib.validationFailed(11); /* Invalid value*/
    end
  end


   /* ------------------------------------------------------------*/
   /* EDIT WAREHOUSE CODE*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.XWH-WHSE-CD in XWHTBL.XWHCD /* If warehouse in table*/
   && TF0MM001.XWH-WHSE-CD > " "           /* Entry present*/
   && TF0MM001.XWH-WHSE-CD != "99")        /* Not EOF table*/
                                                /* valid warehouse*/
  else
    if (TF0MM001.XWH-WHSE-CD == "  ") /* blank warehouse*/

      TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Set edit sw to not pass*/
      TF0MW00.XXX-MSG-LOC-ID = "510"; /* move module nbr to map*/
      set TF0MM001.XWH-WHSE-CD cursor, bold; /* Highlight*/
      converseLib.validationFailed(09); /* Required field msg*/

    else
      TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Set edit sw to not pass*/
      TF0MW00.XXX-MSG-LOC-ID = "510"; /* move module nbr to map*/
      set TF0MM001.XWH-WHSE-CD cursor, bold; /* Highlight*/
      converseLib.validationFailed(11); /* Invalid value entered*/

    end

  end


   /* ------------------------------------------------------------*/
   /* If header edits pass, then move map to working storage*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-EDIT-PASS-SW == "Y") /* No header errors*/

    TF0MW00.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD;
    TF0MW00.TF0MM-SEL-CARR-CD = TF0MM001.TF0MM-SEL-CARR-CD;
    TF0MW00.TF0MM-SEL-DC-CARR-ID = TF0MM001.TF0MM-SEL-DC-CARR-ID;
    TF0MW00.TF0MM-SEL-CARR-SVC-ABRV = TF0MM001.TF0MM-SEL-CARR-SVC-ABRV;
    TF0MW00.TF0MM-SEL-SAT-DLVR-FL = TF0MM001.TF0MM-SEL-SAT-DLVR-FL;
    TF0MW00.TF0MM-SEL-STAT = TF0MM001.TF0MM-SEL-STAT;
  end


end // end TF0M-51000

// Edit occur detail data for ADD
Function TF0M-52000()
   /* ------------------------------------------------------------*/
   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
   /* Edit detail entries for ADD function*/
   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM - 1; /* Increment index*/


   /* ------------------------------------------------------------*/
   /* Edit for data entered on the line*/
   /* If row not entered then exit*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF-CARR-CD[TF0MW-IXM] <= " "       /* No carrier code*/
   && TF0MM001.DC-CARR-ID[TF0MW-IXM] <= " "       /* No DC carrier id*/
   && TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] <= " "   /* No carr service name*/
   && TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] <= " " /* No carr service abrv*/
   && TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] <= " "   /* No Sat delivery flag*/
   && TF0MM001.TF4FBLIN[TF0MW-IXM] <= " "         /* No frgt bill ind*/
   && TF0MM001.XXX-STAT[TF0MW-IXM] <= " "         /* No status*/
  )                                              
    return; /* DO NOT EDIT FIELDS*/
  end


   /* ------------------------------------------------------------*/
   /* Data has been entered so increment counter*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-WORK-CTR = TF0MW00.TF0MW-WORK-CTR + 1;


   /* ------------------------------------------------------------*/
   /* Edit STATUS*/
   /* Valid values are 'A' active, 'I' inactive, blank*/
   /* NOTE - Blank status will default to 'A'*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.XXX-STAT[TF0MW-IXM] == "I" /* Inactive*/
   || TF0MM001.XXX-STAT[TF0MW-IXM] == "A") /* Active*/

      /* NEXT SENTENCE*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Flag edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "520"; /* Move module to map*/
    set TF0MM001.XXX-STAT[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(11); /* Invalid entry*/
  end


   /* ------------------------------------------------------------*/
   /* Edit FREIGHT BILL NUMBER*/
   /* Valid values are 'C' collect, 'P' prepaid, 'T' third party*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF4FBLIN[TF0MW-IXM] == "C" /* Collect*/
   || TF0MM001.TF4FBLIN[TF0MW-IXM] == "P" /* Prepaid*/
   || TF0MM001.TF4FBLIN[TF0MW-IXM] == "T") /* Third party*/

     /* NEXT SENTENCE*/

  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* flag edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "520"; /* identify module*/
    set TF0MM001.TF4FBLIN[TF0MW-IXM] cursor, bold; /* posit & hi csr*/
    converseLib.validationFailed(314); /* invalid frgt bill*/
  end


   /* ------------------------------------------------------------*/
   /* Edit SATURDAY DELIVERY FLAG - Valid values are 'Y' & 'N'*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] == "Y" /* Yes*/
   || TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] == "N") /* No*/

     /* NEXT SENTENCE*/

  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* flag edit sw*/
    TF0MW00.XXX-MSG-LOC-ID = "520"; /* identify module*/
    set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] cursor, bold; /* posit & hi csr*/
    converseLib.validationFailed(315); /* invalid dlvr fl*/
  end


   /* ------------------------------------------------------------*/
   /* Edit CARRIER SERVICE ABRV - Valid values are all non-blank*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] > " ") /* Not blank*/

     /* NEXT SENTENCE*/

  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* flag edit sw*/
    TF0MW00.XXX-MSG-LOC-ID = "520"; /* module*/
    set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] cursor, bold; /* pos & hi csr*/
    converseLib.validationFailed(316); /* invalid c svc*/
  end


   /* ------------------------------------------------------------*/
   /* Edit DC Carrier Id - Valid values are all non-blank*/
   /* Ensure there is no other instance*/
   /* of this DC carrier on TWCARR00.*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-ID[TF0MW-IXM] > " ") /* Not blank*/

     /* NEXT SENTENCE*/

  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Flag edit sw*/
    TF0MW00.XXX-MSG-LOC-ID = "520"; /* Module id*/
    set TF0MM001.DC-CARR-ID[TF0MW-IXM] cursor, bold; /* Hilite error*/
    converseLib.validationFailed(317); /* Invalid carr*/
  end


   /* ------------------------------------------------------------*/
   /* Edit CARRIER CODE and get Carrier abbreviation for detail.*/
   /* Must be a valid GOAL carrier associated with the warehouse*/
   /* of the user accessing this screen.*/
   /* ------------------------------------------------------------*/

  set TF1REC empty; /* Clear rec*/

  TF1REC.TF1CARCD = TF0MM001.TF-CARR-CD[TF0MW-IXM];


  try
    call "IO0860" ("S ", SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

  if (sysVar.errorCode == "00000000") /* Good call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return*/

      TF0MM001.TF1ABRV[TF0MW-IXM] = TF1REC.TF1ABRV; /* Carrier abrv*/

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

        TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/
        TF0MW00.XXX-MSG-LOC-ID = "520"; /* Module*/
        set TF0MM001.TF-CARR-CD[TF0MW-IXM] cursor, bold;
        converseLib.validationFailed(388); /* Invalid carr*/

        exit stack; /* Return*/

      else

        converseLib.validationFailed(01); /* Error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination*/

        converseLib.clearScreen();
         /* Clear screen*/

        TA1REC.TA1TYPE = "DB2 "; /* Error type*/
        TA1REC.TA1LOC = "SELECT UNIQUE LANE DATABASE";
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
        TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module loc*/
        TA1REC.TA1DBASE = "DPICK   "; /* Database*/
        TA1REC.TA1TBLVU = "VCARR001"; /* View*/
        TA1REC.TA1TBLKE = TF0MW00.TF0MM-SEL-CARR-CD; /* Table key*/

        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Err routine*/

        exit stack;

      end
    end
  else

    converseLib.validationFailed(01); /* Error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

    TA1REC.TA1TYPE = "DB2 "; /* Error type*/
    TA1REC.TA1LOC = "SELECT UNIQUE CARRIER      ";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
    TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module loc*/
    TA1REC.TA1DBASE = "DPICK   "; /* Database*/
    TA1REC.TA1TBLVU = "VCARR001"; /* Table view*/
    TA1REC.TA1TBLKE = TF0MW00.TF0MM-SEL-CARR-CD; /* Table key*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Err routine*/

    exit stack;

  end


end // end TF0M-52000

// Edit occur detail data for MNT
Function TF0M-53000()
   /* ------------------------------------------------------------*/
   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
   /* Edit detail entries for MNT function*/
   /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM - 1; /* Increment occur index*/


   /* ------------------------------------------------------------*/
   /* Edit for data entered on the line*/
   /* ------------------------------------------------------------*/

  if (TF0MW01.TF0MW-LN-USED-FL[TF0MW-IXM] <= " ") /* No data on line*/

    return; /* Do not edit fields*/

  end


   /* ------------------------------------------------------------*/
   /* Compare data with temporary storage*/
   /* If different (or data was changed)*/
   /* add 1 to counter which shows data was changed*/
   /* else*/
   /* return*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]
   == TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM] /* Carr service abrv*/
   && TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM]  
   == TF0MW01.DC-CARR-SVC-NM[TF0MW-IXM]   /* Carr service name*/
   && TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]  
   == TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM]   /* Saturday Delivery*/
   && TF0MM001.TF4FBLIN[TF0MW-IXM]        
   == TF0MW01.TF4FBLIN[TF0MW-IXM]         /* Freight Bill Ind*/
   && TF0MM001.XXX-STAT[TF0MW-IXM]        
   == TF0MW01.XXX-STAT[TF0MW-IXM])        /* Status*/

    return; /* No change, return*/

  else

    TF0MW00.TF0MW-WORK-CTR = TF0MW00.TF0MW-WORK-CTR + 1;
                                                     /* Counter of changes*/
  end


   /* ------------------------------------------------------------*/
   /* Edit STATUS*/
   /* Valid values: "A" active; "I" inactive*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.XXX-STAT[TF0MW-IXM] == "I" /* Status equal I or A*/
   || TF0MM001.XXX-STAT[TF0MW-IXM] == "A")

      /* NEXT SENTENCE*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Flag edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "530"; /* Module ID*/
    set TF0MM001.XXX-STAT[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(10); /* Stat must be I or A*/
  end


   /* ------------------------------------------------------------*/
   /* Edit FREIGHT BILL INDICATOR*/
   /* Valid values: "C" collect; "P" prepaid; "T" third party*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF4FBLIN[TF0MW-IXM] == "C" /* C, P, or T*/
   || TF0MM001.TF4FBLIN[TF0MW-IXM] == "P" 
   || TF0MM001.TF4FBLIN[TF0MW-IXM] == "T")

     /* NEXT sentence                             /* No error*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "530"; /* Module ID*/
    set TF0MM001.TF4FBLIN[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(314); /* Invalid value*/
  end


   /* ------------------------------------------------------------*/
   /* Edit CARRIER SERVICE ABBREVIATION*/
   /* Valid values: Can't be blank*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] > " ") /* Non-blank*/

     /* NEXT sentence                                     /* No error*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "530"; /* Module ID*/
    set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(316); /* Invalid value*/
  end


   /* ------------------------------------------------------------*/
   /* Edit CARRIER SERVICE NAME*/
   /* Valid values: Can't be blank*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] > " ") /* Non-blank*/

     /* NEXT sentence                                     /* No error*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "530"; /* Module ID*/
    set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(318); /* Invalid value*/
  end


   /* ------------------------------------------------------------*/
   /* Edit DC CARRIER*/
   /* Valid values: Can't be blank*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-ID[TF0MW-IXM] > " ") /* Non-blank*/

     /* NEXT sentence                                     /* No error*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "530"; /* Module ID*/
    set TF0MM001.DC-CARR-ID[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(317); /* Invalid value*/
  end


   /* ------------------------------------------------------------*/
   /* Edit CARRIER*/
   /* Valid values: Can't be blank*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF-CARR-CD[TF0MW-IXM] > " ") /* Non-blank*/

     /* NEXT sentence                                     /* No error*/
  else

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/
    TF0MW00.XXX-MSG-LOC-ID = "530"; /* Module ID*/
    set TF0MM001.DC-CARR-ID[TF0MW-IXM] cursor, bold; /* Highlight*/
    converseLib.validationFailed(319); /* Invalid value*/
  end


   /* ------------------------------------------------------------*/
   /* If only the carrier name or status have changed, then*/
   /* ezeflo.*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]
   == TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM] /* Carr service abrv*/
   && TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]  
   == TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM])  /* Saturday Delivery*/

    return; /* No change, return*/

  end


   /* ------------------------------------------------------------*/
   /* Ensure there is always a single, unique instance of any*/
   /* DC Carrier/Carrier Service/Saturday Delivery/Freight Type.*/
   /* I.E.  each GOAL carrier must relate to a single DC carrier/*/
   /* Service/Sat Dlvr/Frght AND each DC carrier/Service/*/
   /* Sat Dlvr/Frght must relate to a single GOAL carrier.*/
   /* ------------------------------------------------------------*/

  TF0M-53100(); /* Open cursor on TWCARR00*/

  TF0M-53200(); /* Fetch cursor on TWCARR00*/

  if (SQLCA.VAGen_SQLCODE == 0)

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Flag edit sw*/
    TF0MW00.XXX-MSG-LOC-ID = "5300"; /* Module id*/
    set TF0MM001.DC-CARR-ID[TF0MW-IXM] cursor, bold; /* Hilite error*/
    set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] cursor, bold; /* Hilite error*/
    set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] bold, protect; /* Hilite error*/
    converseLib.validationFailed(320); /* Already used*/
  end

  TF0M-53300(); /* Close cursor on TWCARR00*/


end // end TF0M-53000

// Open csr on Warehouse Carrier
Function TF0M-53100()
   /* ------------------------------------------------------------*/
   /* Open the cursor on warehouse carrier table*/
   /* Allow for wildcard selection parameters*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear row storage area*/

  VWCARR01.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD; /* Whse code*/

  VWCARR01.DC-CARR-ID = TF0MM001.DC-CARR-ID[TF0MW-IXM]; /* DC Carrier*/
  VWCARR01.DC-CARR-SVC-ABRV = TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]; /* Carr Svc*/
  VWCARR01.DC-SAT-DLVR-FL = TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]; /* SAT Dlvr*/

   /* Wildcard the following selection fields*/
  VWCARR01.TF-CARR-CD = "*"; /* GOAL Carr*/
  VWCARR01.TF4FBLIN = "*"; /* Frgt Type*/
  VWCARR01.XXX-STAT = "*"; /* Status*/


   /* ------------------------------------------------------------*/
   /* Select warehouse carrier IO call*/
   /* ------------------------------------------------------------*/

  try
    call "VWCARR01" ("S1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return; /* Return to previous process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "5310"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OBTAIN WAREHOUSE CARRIER     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = VWCARR01.DC-CARR-ID; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0M-53100

// Fetch next Warehouse Carrier
Function TF0M-53200()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN layout*/

  try
    call "VWCARR01" ("N1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 100 /* Not found*/
     || SQLCA.VAGen_SQLCODE == 0)  /* Found*/

      return; /* Return to previous process*/

    end
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "5320"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT LANE DATABASE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = VWCARR01.DC-CARR-ID; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-53200

// Close csr on Warehouse Carrier
Function TF0M-53300()
   /* ------------------------------------------------------------*/
   /* Close selected cursor*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN record*/

  try
    call "VWCARR01" ("C1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "5330"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED CURSOR        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-53300

// Verify scroll request
Function TF0M-55000()
   /* ------------------------------------------------------------*/
   /* Verify scroll request*/
   /* For backward request, test that prev page exists*/
   /* For forward request, test that next page exists*/
   /* Verify that no hdr or line flds were changed*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Scrolling invalid on add screen*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "A") /* Add*/

    converseLib.validationFailed(394); /* Cannot scroll on add screen*/
    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module identification*/

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* Backward scrolling*/
   /* Test that prev page exists*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* If scroll backward request*/

    if (TF0MW00.XXXTSPAG <= 1) /* If already on page one*/
      TF0MW00.XXXTSPAG = 1; /* Safety reset*/
      converseLib.validationFailed(07); /* Unable to scroll backward*/
      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module identification*/

      return; /* Return*/
    end

  end


   /* ------------------------------------------------------------*/
   /* Forward scrolling*/
   /* Test that next page exists*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward request*/

    if (TF0MW00.XXXTSPAG >= TF0MW00.TA5TSQIX) /* if on last page*/
      TF0MW00.XXXTSPAG = TF0MW00.TA5TSQIX; /* Safety reset*/
      converseLib.validationFailed(08); /* Can't scroll forward*/
      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module identification*/

      return; /* Return*/
    end

  end


   /* ------------------------------------------------------------*/
   /* Make sure that no hdr or line fields were changed*/
   /* ------------------------------------------------------------*/

  TF0M-55500(); /* Test details for chgs*/

   /* * * Status * * **/
  if (TF0MM001.TF0MM-SEL-STAT != TF0MW00.TF0MM-SEL-STAT)

    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Move para number*/
    set TF0MM001.TF0MM-SEL-STAT cursor, bold; /* Highlight*/
    converseLib.validationFailed(18); /* Valid only with enter*/
  end


   /* * * Saturday Delivery Flag * * **/
  if (TF0MM001.TF0MM-SEL-SAT-DLVR-FL != TF0MW00.TF0MM-SEL-SAT-DLVR-FL)

    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module location*/
    set TF0MM001.TF0MM-SEL-SAT-DLVR-FL cursor, bold; /* Highlight*/
    converseLib.validationFailed(18); /* Valid with enter*/
  end


   /* * * Carrier Service Abbreviation * * **/
  if (TF0MM001.TF0MM-SEL-CARR-SVC-ABRV != TF0MW00.TF0MM-SEL-CARR-SVC-ABRV)

    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module location*/
    set TF0MM001.TF0MM-SEL-CARR-SVC-ABRV cursor, bold; /* Highlight*/
    converseLib.validationFailed(18); /* Valid with enter*/
  end


   /* * * DC Carrier * * **/
  if (TF0MM001.TF0MM-SEL-DC-CARR-ID != TF0MW00.TF0MM-SEL-DC-CARR-ID)

    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module location*/
    set TF0MM001.TF0MM-SEL-DC-CARR-ID cursor, bold; /* Highlight*/
    converseLib.validationFailed(18); /* Valid with enter*/
  end


   /* * * Carrier * * **/
  if (TF0MM001.TF0MM-SEL-CARR-CD != TF0MW00.TF0MM-SEL-CARR-CD)

    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module location*/
    set TF0MM001.TF0MM-SEL-CARR-CD cursor, bold; /* Highlight*/
    converseLib.validationFailed(18); /* Valid with enter*/
  end


   /* * * Warehoue * * **/
  if (TF0MM001.XWH-WHSE-CD != TF0MW00.XWH-WHSE-CD)

    TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module location*/
    set TF0MM001.XWH-WHSE-CD cursor, bold; /* Highlight*/
    converseLib.validationFailed(18); /* Valid with enter*/
  end


end // end TF0M-55000

// Verify scroll request
Function TF0M-55500()
   /* ------------------------------------------------------------*/
   /* Verify that line fields were not changed*/
   /* Executed for:*/
   /* Paging request (PF7, PF8)*/
   /* Header fields changed (select rows for new screen)*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = 12; /* Line index*/

  while (TF0MW-IXM > 0)

     /* * * * STATUS CHANGED * * **/
    if (TF0MM001.XXX-STAT[TF0MW-IXM] != TF0MW01.XXX-STAT[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.XXX-STAT[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

     /* * * FREIGHT BILL INDICATOR * * **/
    if (TF0MM001.TF4FBLIN[TF0MW-IXM] != TF0MW01.TF4FBLIN[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.TF4FBLIN[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

     /* * * SATURDAY DELIVERY FLAG * * **/
    if (TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]
     != TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

     /* * * * DC CARRIER SERVICE ABBREVIATION CHANGED * * **/
    if (TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]
     != TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

     /* * * * DC CARRIER SERVICE NAME CHANGED * * **/
    if (TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM]
     != TF0MW01.DC-CARR-SVC-NM[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

     /* * * * DC CARRIER CHANGED * * **/
    if (TF0MM001.DC-CARR-ID[TF0MW-IXM] != TF0MW01.DC-CARR-ID[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.DC-CARR-ID[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

     /* * * * CARRIER CHANGED * * **/
    if (TF0MM001.TF-CARR-CD[TF0MW-IXM] != TF0MW01.TF-CARR-CD[TF0MW-IXM])

      TF0MW00.XXX-MSG-LOC-ID = "550"; /* Module nbr*/
      set TF0MM001.TF-CARR-CD[TF0MW-IXM] cursor, bold; /* Highlight*/
      converseLib.validationFailed(264); /* Chg not ok*/
    end

    TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM - 1; /* Line index*/

  end


end // end TF0M-55500

// Process valid input request
Function TF0M-60000()
   /* ------------------------------------------------------------*/
   /* Apply database updates*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Test return conditions*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0 /* If error message or*/
   || TF0MW00.TF0MW-EDIT-PASS-SW == "N") /* Or edit error*/

    exit stack; /* Return*/
  end


   /* ------------------------------------------------------------*/
   /* Process valid scroll backward request*/
   /* Decrement page number and return to prev process*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll backward*/

    TF0MW00.TF0MW-FORMAT-SW = "Y"; /* Format map switch*/

    TF0MW00.XXXTSPAG = TF0MW00.XXXTSPAG - 1; /* Subtract 1 from page*/

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* Process valid scroll forward request*/
   /* Increment page number and return to prev process*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward*/

    TF0MW00.TF0MW-FORMAT-SW = "Y"; /* Format map switch*/

    TF0MW00.XXXTSPAG = TF0MW00.XXXTSPAG + 1; /* Add 1 to page*/

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* Apply ADD to Warehouse Carrier table*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "A") /* If ADD request*/

    TF0M-61000();

    return; /* Return*/

  end


   /* ------------------------------------------------------------*/
   /* Apply MNT to Warehouse Carrier table*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-MODE == "C") /* If MNT request*/

    TF0M-62000();

    return; /* Return*/

  end


end // end TF0M-60000

// Process ADD request
Function TF0M-61000()
   /* ------------------------------------------------------------*/
   /* Process ADD request*/

   /* Add occurs to WAREHOUSE CARRIER database (loop 12 times)*/
   /* Because of need for edit in this loop about existence*/
   /* of duplicate DC carr/service/Sat delivery, loop through*/
   /* entries from top to bottom, i.e. 1st is added & 2nd errors*/
   /* If errors then rollback else commit each add*/
   /* Delete temp storage - it will be rebuilt in tf0m-1000*/
   /* Send 'transaction completed' message*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = 1; /* Initialize index*/

  while (TF0MW00.TF0MW-IXM < 13 /* Loop 12 times*/
   && TF0MW00.TF0MW-EDIT-PASS-SW == "Y") /* No ADD error*/

    TF0M-61100(); /* Add records to database*/

    TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM + 1; /* Increment index*/

  end


   /* -----------------------------------------------------------*/
   /* TEST SWITCH*/
   /* IF ERRORS, ROLLBACK THE ADDS, ELSE COMMIT*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-EDIT-PASS-SW == "N") /* ADD error*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/

    exit stack; /* Return and send message*/

  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit(); /* Commit all ADDs*/

  end


   /* -----------------------------------------------------------*/
   /* Delete temporary storage*/
   /* Move 'transaction complete' message*/
   /* ------------------------------------------------------------*/


  TF0MS-91000(); /* Delete temp storage*/

  converseLib.validationFailed(21); /* Entries added*/

  TF0MW00.TF0MW-TS-PG-RTN-SW = "N"; /* Update not pending*/
  TF0MW00.TF0MW-ADD-FL = "N"; /* Add complete*/

  TF0MW00.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD; /* Reset warehouse*/


end // end TF0M-61000

// ADD record(s) to Lane database
Function TF0M-61100()
   /* ------------------------------------------------------------*/
   /* Test for presence of entry*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF-CARR-CD[TF0MW-IXM] <= " ") /* If there is no entry*/

    return; /* Leave loop*/
  end


   /* ------------------------------------------------------------*/
   /* Verify DC carrier/Service/Sat delivery does not already*/
   /* exist on the table.  Validation must be done in the update*/
   /* process, instead of the edit process, to exclude duplicates*/
   /* added on the same screen with a PF9.*/
   /* ------------------------------------------------------------*/

  TF0M-61110(); /* Open TWCARR00 csr*/

  TF0M-61120(); /* Fetch TWCARR00 csr*/

  if (SQLCA.VAGen_SQLCODE == 0)

    TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Flag edit sw*/
    TF0MW00.XXX-MSG-LOC-ID = "6110"; /* Module id*/
    set TF0MM001.DC-CARR-ID[TF0MW-IXM] cursor, bold; /* Hilite error*/
    set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] bold; /* Hilite error*/
    set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] bold; /* Hilite error*/
    converseLib.validationFailed(320); /* Already used*/

    TF0M-61130(); /* Close TWCARR00 csr*/

    return;

  else

    TF0M-61130(); /* Close TWCARR00 csr*/

  end


   /* ------------------------------------------------------------*/
   /* ADD to WAREHOUSE CARRIER*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear rec*/

  VWCARR01.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD; /* Warehouse*/
  VWCARR01.TF-CARR-CD = TF0MM001.TF-CARR-CD[TF0MW-IXM]; /* Carrier*/
  VWCARR01.DC-CARR-ID = TF0MM001.DC-CARR-ID[TF0MW-IXM]; /* DC Carrier*/
  VWCARR01.DC-CARR-SVC-ABRV = TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]; /* DC Carr ABR*/
  VWCARR01.DC-CARR-SVC-NM = TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM]; /* DC Carr SVC*/
  VWCARR01.DC-SAT-DLVR-FL = TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]; /* Sat Dlvr Fl*/
  VWCARR01.TF4FBLIN = TF0MM001.TF4FBLIN[TF0MW-IXM]; /* Frght bill*/
  VWCARR01.XXX-STAT = TF0MM001.XXX-STAT[TF0MW-IXM]; /* Entered val*/


   /* ------------------------------------------------------------*/
   /* Obtain the current data and time;*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* Obtain data and time*/

  VWCARR01.ZZZSDT = XX0XW01.XX0XWDAT; /* Setup date*/
  VWCARR01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
  VWCARR01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Time*/


   /* ------------------------------------------------------------*/
   /* Add database record*/
   /* ------------------------------------------------------------*/

  try
    call "VWCARR01" ("A ", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end /* Add row*/


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/


  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return*/

      return; /* Return*/

    else
      if (SQLCA.VAGen_SQLCODE == -803) /* Duplicate*/

        TF0MW00.XXX-MSG-LOC-ID = "611"; /* Module nbr*/
        converseLib.validationFailed(45); /* Duplicate data*/
        TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/

        set TF0MM001.TF-CARR-CD[TF0MW-IXM] bold; /* Carrier*/
        set TF0MM001.DC-CARR-ID[TF0MW-IXM] bold; /* DC Carrier*/
        set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] bold; /* DC Carr ABR*/
        set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] bold; /* DC Carr SVC*/
        set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] bold; /* Sat Dlvr Fl*/
        set TF0MM001.TF4FBLIN[TF0MW-IXM] bold; /* Frght bill*/
        set TF0MM001.XXX-STAT[TF0MW-IXM] bold; /* Status*/

        return; /* Return to previous process*/
      end
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "611"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end


  TA1REC.TA1TYPE = "DB2 "; /* Error type*/
  TA1REC.TA1LOC = "ADD WAREHOUSE/LANE TYPE      ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = TF0MM001.TF-CARR-CD[TF0MW-IXM]; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Err routine*/

  exit stack; /* Exit to map*/


end // end TF0M-61100

// Open csr on Warehouse Carrier
Function TF0M-61110()
   /* ------------------------------------------------------------*/
   /* Open the cursor on warehouse carrier table*/
   /* Allow for wildcard selection parameters*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear storage area*/

  VWCARR01.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD; /* Warehouse code*/

  VWCARR01.DC-CARR-ID = TF0MM001.DC-CARR-ID[TF0MW-IXM]; /* DC Carrier ID*/
  VWCARR01.DC-CARR-SVC-ABRV = TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]; /* Carrier Service*/
  VWCARR01.DC-SAT-DLVR-FL = TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]; /* Sat Delivery Flag*/

   /* Wildcard the following selection fields*/
  VWCARR01.TF-CARR-CD = "*"; /* GOAL Carrier*/
  VWCARR01.TF4FBLIN = "*"; /* Freight Type*/
  VWCARR01.XXX-STAT = "*"; /* Status*/


   /* ------------------------------------------------------------*/
   /* Select warehouse carrier IO call*/
   /* ------------------------------------------------------------*/

  try
    call "VWCARR01" ("S1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/

      return; /* Return to previous process*/
    end

  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "5210"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "OBTAIN WAREHOUSE CARRIER     ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = VWCARR01.DC-CARR-ID; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0M-61110

// Fetch next Warehouse Carrier
Function TF0M-61120()
   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN layout*/

  try
    call "VWCARR01" ("N1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
  )                                 
    if (SQLCA.VAGen_SQLCODE == 100 /* Not found*/
     || SQLCA.VAGen_SQLCODE == 0)  /* Found*/

      return; /* Return to previous process*/

    end
  end


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "5220"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen*/

  end


  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT NEXT LANE DATABASE    ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = VWCARR01.DC-CARR-ID; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-61120

// Close csr on Warehouse Carrier
Function TF0M-61130()
   /* ------------------------------------------------------------*/
   /* Close selected cursor*/
   /* ------------------------------------------------------------*/

  set VWCARR01 empty; /* Clear DCLGEN record*/

  try
    call "VWCARR01" ("C1", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Normal return code*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "5230"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "CLOSE SELECTED CURSOR        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module*/
  TA1REC.TA1DBASE = "DPICK   "; /* Data base*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit*/


end // end TF0M-61130

// Process MNT request
Function TF0M-62000()
   /* ------------------------------------------------------------*/
   /* Process MNT request*/
   /*  */
   /* Update the warehouse carrier database (loop 12 times)*/
   /* if errors then rollback else commit updates*/
   /* Move map row to temporary storage work row (loop 12 times)*/
   /* Rewrite temporary storage*/
   /* Send 'transaction complete' message*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* MNT occurs to warehouse carrier table*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = 13; /* Initialize index*/

  while (TF0MW00.TF0MW-IXM > 1) /* Read current page*/

    TF0M-62100(); /* MNT records to database*/
  end


   /* ------------------------------------------------------------*/
   /* Test switch*/
   /* If errors, rollback the MNTs, else commit*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-EDIT-PASS-SW == "N") /* MNT error*/

    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back all changes*/
    exit stack; /* Return and send message*/
  else

    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit(); /* Commit all MNTs*/
  end


   /* ------------------------------------------------------------*/
   /* Update the temporary storage page*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = 0; /* Set index*/

  while (TF0MW-IXM < 12) /* Loop 12 times*/

    TF0M-62200(); /* Prepare to update Temp storage*/
  end

  TF0M-62300(); /* rewrite temporary storage*/


   /* ------------------------------------------------------------*/
   /* Test switch*/
   /* If no errors, move 'Transaction completed' msg and send*/
   /* last page*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TF0MW-EDIT-PASS-SW == "N" /* MNT error*/
   || converseVar.validationMsgNum != 0) /* Error message*/

    exit stack; /* Return to send message*/
  end

  converseLib.validationFailed(20); /* Transaction completed*/

  TF0MW00.TF0MM-SEL-CARR-CD = " ";
  TF0MW00.TF0MM-SEL-DC-CARR-ID = " ";
  TF0MW00.TF0MM-SEL-CARR-SVC-ABRV = " ";
  TF0MW00.TF0MM-SEL-SAT-DLVR-FL = " ";
  TF0MW00.TF4FBLIN = " ";
  TF0MW00.TF0MM-SEL-STAT = " ";

  TF0MW00.TF0MW-TS-PG-RTN-SW = "N"; /* PA2 cancel will clear screen*/


end // end TF0M-62000

// CHG record(s) on LANE database
Function TF0M-62100()
   /* ------------------------------------------------------------*/
   /* Chg record(s) on warehouse carrier table - performed 12 times*/
   /*  */
   /* Test row for entry or change - ezertn if no new data*/
   /*  */
   /* Read unique for zzzchgct compare*/
   /* if record not found, it has been deleted*/
   /* if zzzchgct not match, it has since been updated*/
   /*  */
   /* Move map row to vwcarr01*/
   /* Obtain data and time*/
   /* Update vwcarr01 table*/
   /*  */
   /* Increment temporary storage zzzchgct*/
   /*  */
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM - 1; /* Decrement counter*/


   /* ------------------------------------------------------------*/
   /* Test for entry - if row not entered then leave loop*/
   /* ------------------------------------------------------------*/

  if (TF0MW01.TF0MW-LN-USED-FL[TF0MW-IXM] <= " ") /* If no entry*/
    return; /* Leave loop*/
  end


   /* ------------------------------------------------------------*/
   /* Compare map with temp storage for change*/
   /* If no difference then leave loop*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF-CARR-CD[TF0MW-IXM]
   == TF0MW01.TF-CARR-CD[TF0MW-IXM]
   && TF0MM001.DC-CARR-ID[TF0MW-IXM]
   == TF0MW01.DC-CARR-ID[TF0MW-IXM]
   && TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM]
   == TF0MW01.DC-CARR-SVC-NM[TF0MW-IXM]
   && TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]
   == TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM]
   && TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]
   == TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM]
   && TF0MM001.TF4FBLIN[TF0MW-IXM]
   == TF0MW01.TF4FBLIN[TF0MW-IXM]
   && TF0MM001.XXX-STAT[TF0MW-IXM]
   == TF0MW01.XXX-STAT[TF0MW-IXM])

    return; /* No change, leave loop*/
  end


   /* ------------------------------------------------------------*/
   /* Maintenance to warehouse carrier table*/
   /* ------------------------------------------------------------*/

  VWCARR01.XWH-WHSE-CD = TF0MM001.XWH-WHSE-CD; /* warehouse*/
  VWCARR01.TF-CARR-CD = TF0MM001.TF-CARR-CD[TF0MW-IXM]; /* carrier*/
  VWCARR01.DC-CARR-ID = TF0MM001.DC-CARR-ID[TF0MW-IXM]; /* DC carrier*/
  VWCARR01.DC-CARR-SVC-ABRV = TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]; /* carrier abrv*/
  VWCARR01.DC-CARR-SVC-NM = TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM]; /* carrier name*/
  VWCARR01.DC-SAT-DLVR-FL = TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]; /* Saturday dlvr*/
  VWCARR01.TF4FBLIN = TF0MM001.TF4FBLIN[TF0MW-IXM]; /* Freight bill*/

  if (TF0MM001.XXX-STAT[TF0MW-IXM] == " ") /* Active default*/
    TF0MM001.XXX-STAT[TF0MW-IXM] = "A";
  end

  VWCARR01.XXX-STAT = TF0MM001.XXX-STAT[TF0MW-IXM]; /* Status*/


   /* ------------------------------------------------------------*/
   /* Obtain the current data and time; move userid*/
   /* ------------------------------------------------------------*/

  XX0XS01(); /* Obtain data and time*/

  VWCARR01.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Date*/
  VWCARR01.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Time*/


   /* ------------------------------------------------------------*/
   /* Set change count before update*/
   /* ------------------------------------------------------------*/
  VWCARR01.ZZZCHGCT = TF0MW01.ZZZCHGCT[TF0MW-IXM]; /* Change count*/


   /* ------------------------------------------------------------*/
   /* Mnt database record*/
   /* ------------------------------------------------------------*/

  try
    call "VWCARR01" ("U ", SQLCA, VWCARR01) {isNoRefresh = yes, isExternal = yes};
  end /* Update*/


   /* ------------------------------------------------------------*/
   /* If successful, update temp storage zzzchgct and return*/
   /* ------------------------------------------------------------*/


  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      TF0MW01.ZZZCHGCT[TF0MW-IXM] = TF0MW01.ZZZCHGCT[TF0MW-IXM] + 1;

      return; /* Return to previous process*/
    end

  end


  TF0MW00.XXX-MSG-LOC-ID = "621"; /* Module number*/
  converseLib.validationFailed(01); /* Unexpected error*/

  TF0MW00.TF0MW-EDIT-PASS-SW = "N"; /* Edit switch*/

  set TF0MM001.TF-CARR-CD[TF0MW-IXM] bold; /* carrier*/
  set TF0MM001.DC-CARR-ID[TF0MW-IXM] bold; /* DC carrier*/
  set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] bold; /* carrier abrv*/
  set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] bold; /* carrier name*/
  set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] bold; /* Saturday dlvr*/
  set TF0MM001.TF4FBLIN[TF0MW-IXM] bold; /* Freight bill*/
  set TF0MM001.XXX-STAT[TF0MW-IXM] bold; /* Status*/


   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/

  TF0MW00.XXX-MSG-LOC-ID = "621"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(31); /* Data in use by another*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(01); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "MNT WAREHOUSE CARRIER        ";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Program number*/
  TA1REC.TA1DBASE = "DPICK   "; /* Database*/
  TA1REC.TA1TBLVU = "VWCARR01"; /* Table view*/

  TA1REC.TA1TBLKE = TF0MM001.TF-CARR-CD[TF0MW-IXM]; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0M-62100

// Move rows to Temp storage
Function TF0M-62200()
   /* ------------------------------------------------------------*/
   /* Update temp storage*/
   /* ------------------------------------------------------------*/

  TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM + 1; /* Increment index*/


   /* ------------------------------------------------------------*/
   /* Test for entry*/
   /* ------------------------------------------------------------*/

  if (TF0MM001.TF-CARR-CD[TF0MW-IXM] == " ") /* If there is no entry*/

    return; /* Leave loop*/
  end


   /* ------------------------------------------------------------*/
   /* Move map fields to TS work area*/
   /* ------------------------------------------------------------*/

  TF0MW01.TF-CARR-CD[TF0MW-IXM] = TF0MM001.TF-CARR-CD[TF0MW-IXM]; /* Carrier*/
  TF0MW01.TF1ABRV[TF0MW-IXM] = TF0MM001.TF1ABRV[TF0MW-IXM]; /* Carrier Abrv*/
  TF0MW01.DC-CARR-ID[TF0MW-IXM] = TF0MM001.DC-CARR-ID[TF0MW-IXM]; /* DC Carrier Id*/
  TF0MW01.DC-CARR-SVC-NM[TF0MW-IXM] = TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM]; /* DC Carrier Nm*/
  TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM] = TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM]; /* Carrier Svc*/
  TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM] = TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM]; /* Sat Dlvr Fl*/
  TF0MW01.TF4FBLIN[TF0MW-IXM] = TF0MM001.TF4FBLIN[TF0MW-IXM]; /* Freight Bill*/
  TF0MW01.XXX-STAT[TF0MW-IXM] = TF0MM001.XXX-STAT[TF0MW-IXM]; /* Status*/


end // end TF0M-62200

// Rewrite temporary strorage
Function TF0M-62300()
   /* ------------------------------------------------------------*/
   /* Update the page in temporary storage.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (TF0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parms*/

  TF0MW00.XXX-MSG-LOC-ID = "623"; /* Module nbr*/
  converseLib.validationFailed(01); /* Unexpected error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "UPDATE PAGE IN TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0M-62300

// Obtain the GOAL carrier name
Function TF0M-97000()
   /* ------------------------------------------------------------*/
   /* Obtain the GOAL carrier name*/
   /* ------------------------------------------------------------*/

  set TF1REC empty; /* Clear rec*/
  TF1REC.TF1CARCD = VWCARR01.TF-CARR-CD; /* Carrier key*/

  try
    call "IO0860" ("S ", SQLCA, TF1REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select tbl row*/

  if (sysVar.errorCode == "00000000") /* Good call*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return*/

      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        /* This should not happen unless GOAL carrier has been deleted*/

        TF1REC.TF1ABRV = " NOT FOUND  "; /* asterisks*/

        return; /* Return*/

      else

        converseLib.validationFailed(01); /* Error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination*/

        converseLib.clearScreen();
         /* Clear screen*/

        TA1REC.TA1TYPE = "DB2 "; /* Error type*/
        TA1REC.TA1LOC = "SELECT UNIQUE LANE DATABASE";
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
        TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module loc*/
        TA1REC.TA1DBASE = "DPICK   "; /* Database*/
        TA1REC.TA1TBLVU = "VCARR001"; /* View*/
        TA1REC.TA1TBLKE = TF1REC.TF1ABRV; /* Table key*/

        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Err routine*/

        exit stack;

      end
    end
  else

    converseLib.validationFailed(01); /* Error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination*/

    converseLib.clearScreen();
     /* Clear screen*/

    TA1REC.TA1TYPE = "DB2 "; /* Error type*/
    TA1REC.TA1LOC = "SELECT UNIQUE CARRIER      ";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program*/
    TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Module loc*/
    TA1REC.TA1DBASE = "DPICK   "; /* Database*/
    TA1REC.TA1TBLVU = "VCARR001"; /* Table view*/
    TA1REC.TA1TBLKE = TF1REC.TF1ABRV; /* Table key*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Err routine*/

    exit stack;

  end


end // end TF0M-97000

// Delete temporary storage
Function TF0MS-91000()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set TF0MW01 empty; /* M001 display storage*/

  TA5REC.TA5TSQIX = 0; /* Current page number*/
  TF0MW00.XXXTSPAG = 0; /* Current page number*/
  TF0MW00.TA5TSQIX = 0; /* Highest page number*/

  TF0MM001.MAPLMPNO = 0; /* Current Map page*/
  TF0MM001.MAPLMPAG = 0; /* Maximum Map page*/


   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (TF0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temp storage*/


   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    TF0MW00.TF0MW-TS-PG-RTN-SW = "N";

    return; /* Return to prior process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parameters*/

  TF0MW00.XXX-MSG-LOC-ID = "S01"; /* Module identification*/
  converseLib.validationFailed(01); /* Unexpected error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0MS-91000

// Read temporary storage page
Function TF0MS-92000()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  TF0MW01.XXXTSLEN = TF0MW00.XXXTSLEN; /* Temp storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application id*/
  TA5REC.TA5TSQIX = TF0MW00.XXXTSPAG; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (TF0MW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Temporary storage*/


   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end


   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TAEREC.TAEDESC1 = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* Subroutine parms*/

  TF0MW00.XXX-MSG-LOC-ID = "S02"; /* Module id*/
  converseLib.validationFailed(01); /* Unexpected error*/

  TA1REC.TA1FUNC = "RETN"; /* Termination*/
  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = TF0MW00.XXX-MSG-LOC-ID; /* Program number*/
  TA1REC.TA1MAPAP = COMMAREA.CACURRAP; /* Map application*/
  TA1REC.TA1MAPNO = "M001"; /* Map number*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error routine*/

  exit stack; /* Exit to map*/


end // end TF0MS-92000

// Move temp storage to map area
Function TF0MS-93000()
   /* ------------------------------------------------------------*/
   /* Move temp storage occur into map occur.*/
   /* ------------------------------------------------------------*/

  TF0MM001.TF-CARR-CD[TF0MW-IXM] = TF0MW01.TF-CARR-CD[TF0MW-IXM];
  TF0MM001.TF1ABRV[TF0MW-IXM] = TF0MW01.TF1ABRV[TF0MW-IXM];
  TF0MM001.DC-CARR-ID[TF0MW-IXM] = TF0MW01.DC-CARR-ID[TF0MW-IXM];
  TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] = TF0MW01.DC-CARR-SVC-ABRV[TF0MW-IXM];
  TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] = TF0MW01.DC-CARR-SVC-NM[TF0MW-IXM];
  TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] = TF0MW01.DC-SAT-DLVR-FL[TF0MW-IXM];
  TF0MM001.TF4FBLIN[TF0MW-IXM] = TF0MW01.TF4FBLIN[TF0MW-IXM];
  TF0MM001.XXX-STAT[TF0MW-IXM] = TF0MW01.XXX-STAT[TF0MW-IXM];

  TF0MW00.TF0MW-IXM = TF0MW00.TF0MW-IXM + 1; /* Increment occur index*/


end // end TF0MS-93000

// Set header/trailer attributes
Function TF0MS-94000()
   /* ------------------------------------------------------------*/
   /* Reset header attributes and cursor*/
   /* ------------------------------------------------------------*/

  set TF0MM001.XWH-WHSE-CD initialAttributes; /* Warehouse code*/
  set TF0MM001.TF0MM-SEL-CARR-CD initialAttributes; /* Carrier code*/
  set TF0MM001.TF0MM-SEL-DC-CARR-ID initialAttributes; /* DC Carrier code*/
  set TF0MM001.TF0MM-SEL-CARR-SVC-ABRV initialAttributes; /* Carrier service*/
  set TF0MM001.TF0MM-SEL-SAT-DLVR-FL initialAttributes; /* Saturday Delivery*/
  set TF0MM001.TF0MM-SEL-STAT initialAttributes; /* Status*/


   /* ------------------------------------------------------------*/
   /* Reset header attributes.*/
   /* ------------------------------------------------------------*/

  set TF0MM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set TF0MM001.CAITEM initialAttributes; /* FAST PATH application data*/
  set TF0MM001.MAPLMPNO initialAttributes; /* Page number*/
  set TF0MM001.MAPLMPAG initialAttributes; /* Page of number*/


  if (TF0MW00.TF0MW-MODE == "A") /* In Add mode*/

    set TF0MM001.MAPLMPGL protect, invisible; /* Page literal dark protect*/
    set TF0MM001.MAPLMPOL protect, invisible; /* of literal dark protect*/
  else

    set TF0MM001.MAPLMPGL protect, bold; /* Page literal bright protect*/
    set TF0MM001.MAPLMPOL protect, bold; /* of literal bright protect*/
  end


end // end TF0MS-94000

// Set row(12) attributes
Function TF0MS-95000()
   /* ------------------------------------------------------------*/
   /* Reset field attributes in occur area.*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TA5TSQIX == 0) /* No occur data*/
    if (TF0MW00.TF0MW-MODE == "A") /* Add mode*/

      set TF0MM001.TF-CARR-CD[TF0MW-IXM] normal;
      set TF0MM001.TF-CARR-CD[TF0MW-IXM] underline;
      set TF0MM001.DC-CARR-ID[TF0MW-IXM] normal;
      set TF0MM001.DC-CARR-ID[TF0MW-IXM] underline;
      set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] normal;
      set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] underline;
      set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] normal;
      set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] underline;
      set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] normal;
      set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] underline;
      set TF0MM001.TF4FBLIN[TF0MW-IXM] normal;
      set TF0MM001.TF4FBLIN[TF0MW-IXM] underline;
      set TF0MM001.XXX-STAT[TF0MW-IXM] normal;
      set TF0MM001.XXX-STAT[TF0MW-IXM] underline;

    else

      set TF0MM001.TF-CARR-CD[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-CARR-ID[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] initialAttributes;
      set TF0MM001.TF4FBLIN[TF0MW-IXM] initialAttributes;
      set TF0MM001.XXX-STAT[TF0MW-IXM] initialAttributes;
    end
  end


   /* ------------------------------------------------------------*/
   /* if screen has Warehoue Carrier data*/
   /* if inquiry mode then protect occur line*/
   /* if add mode then unprotect occur line*/
   /* if maintenance mode*/
   /* if occur has data then unprotect occur line*/
   /* else                     protect occur line*/
   /* ------------------------------------------------------------*/

  if (TF0MW00.TA5TSQIX > 0) /* occur data exists*/
    if (TF0MW00.TF0MW-MODE == "I") /* Inquiry mode*/

      set TF0MM001.TF-CARR-CD[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-CARR-ID[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] initialAttributes;
      set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] initialAttributes;
      set TF0MM001.TF4FBLIN[TF0MW-IXM] initialAttributes;
      set TF0MM001.XXX-STAT[TF0MW-IXM] initialAttributes;

    else
      if (TF0MW00.TF0MW-MODE == "A") /* Add mode*/

        set TF0MM001.TF-CARR-CD[TF0MW-IXM] normal;
        set TF0MM001.TF-CARR-CD[TF0MW-IXM] underline;
        set TF0MM001.DC-CARR-ID[TF0MW-IXM] normal;
        set TF0MM001.DC-CARR-ID[TF0MW-IXM] underline;
        set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] normal;
        set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] underline;
        set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] normal;
        set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] underline;
        set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] normal;
        set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] underline;
        set TF0MM001.TF4FBLIN[TF0MW-IXM] normal;
        set TF0MM001.TF4FBLIN[TF0MW-IXM] underline;
        set TF0MM001.XXX-STAT[TF0MW-IXM] normal;
        set TF0MM001.XXX-STAT[TF0MW-IXM] underline;

      else
        if (TF0MW00.TF0MW-MODE == "C") /* MNT mode*/
          if (TF0MW01.TF0MW-LN-USED-FL[TF0MW-IXM] == "Y") /* Line has data*/

             /* Allow editing on carrier name, freight bill, & status only*/
            set TF0MM001.TF-CARR-CD[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-CARR-ID[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] normal;
            set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] underline;
            set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] initialAttributes;
            set TF0MM001.TF4FBLIN[TF0MW-IXM] normal;
            set TF0MM001.TF4FBLIN[TF0MW-IXM] underline;
            set TF0MM001.XXX-STAT[TF0MW-IXM] normal;
            set TF0MM001.XXX-STAT[TF0MW-IXM] underline;

          else

            set TF0MM001.TF-CARR-CD[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-CARR-ID[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-CARR-SVC-NM[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-CARR-SVC-ABRV[TF0MW-IXM] initialAttributes;
            set TF0MM001.DC-SAT-DLVR-FL[TF0MW-IXM] initialAttributes;
            set TF0MM001.TF4FBLIN[TF0MW-IXM] initialAttributes;
            set TF0MM001.XXX-STAT[TF0MW-IXM] initialAttributes;

          end
        end
      end
    end
  end

  TF0MW-IXM = TF0MW-IXM + 1; /* increment work index*/


end // end TF0MS-95000

//*** RECORD=TF0MW00 ****
// ----------------------------
// Application working storage.
// ----------------------------
//  Note:
//   XXXTSLEN contains the temp storage length.
//   The value of the field is set in the flow
//   for the XSPL001 process at the beginning
//   of the application.
// ----------------------------
// ***********************
Record TF0MW00 type basicRecord
  10 TF0MW-IXM TF0MW-IXM ; 
  10 TF0MW-IX1 TF0MW-IX1 ; 
  10 TF0MW-IX2 TF0MW-IX2 ; 
  10 TF0MW-IX3 TF0MW-IX3 ; 
  10 TF0MW-WORK-CTR TF0MW-WORK-CTR ; 
  10 TF0MW-MODE TF0MW-MODE ; 
  10 TF0MW-EOC-SW TF0MW-EOC-SW ; 
  10 TF0MW-DISP-MAP-SW TF0MW-DISP-MAP-SW ; 
  10 TF0MW-EDIT-PASS-SW TF0MW-EDIT-PASS-SW ; 
  10 TF0MW-FORMAT-SW TF0MW-FORMAT-SW ; 
  10 TF0MW-DATA-RQST-SW TF0MW-DATA-RQST-SW ; 
  10 TF0MW-ADD-FL TF0MW-ADD-FL ; 
  10 TF0MW-MAPHDR-CHG-FL TF0MW-MAPHDR-CHG-FL ; 
  10 TF0MW-TS-PG-RTN-SW TF0MW-TS-PG-RTN-SW ; 
  10 TF0MW-MSG-NBR TF0MW-MSG-NBR ; 
  10 XXXTSLEN XXXTSLEN ; 
  10 XXXTSPAG XXXTSPAG ; 
  10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 TF0M-INIT-ENTRY-SW TF0M-INIT-ENTRY-SW ; 
  10 TF0M-VWCARR-KEYS TF0M-VWCARR-KEYS ; 
    15 XWH-WHSE-CD XWH-WHSE-CD ; 
    15 TF0MM-SEL-CARR-CD TF0MM-SEL-CARR-CD ; 
    15 TF0MM-SEL-DC-CARR-ID TF0MM-SEL-DC-CARR-ID ; 
    15 TF0MM-SEL-CARR-SVC-ABRV TF0MM-SEL-CARR-SVC-ABRV ; 
    15 TF0MM-SEL-SAT-DLVR-FL TF0MM-SEL-SAT-DLVR-FL ; 
    15 TF4FBLIN TF4FBLIN ; 
    15 TF0MM-SEL-STAT TF0MM-SEL-STAT ; 
end // end TF0MW00

//*** RECORD=TF0MW01 ****
// ------------------------
// TS 001 display storage.
// ------------------------
// Note:
//  If additional fields are
//  added to the screen, be
//  sure to move the correct
//  temp storage length to the
//  application work record in
//  the flow for XPSL001.
// ------------------------
// ***********************
Record TF0MW01 type basicRecord
  5 XXXTSLEN XXXTSLEN ; 
  5 TF0MW-TS-GRP TF0MW-TS-GRP ; 
    10 TF0MW-LN-USED-FL TF0MW-LN-USED-FL [12] ; 
    10 ZZZCHGCT ZZZCHGCT [12] ; 
    10 TF-CARR-CD TF-CARR-CD [12] ; 
    10 TF1ABRV TF1ABRV [12] ; 
    10 DC-CARR-ID DC-CARR-ID [12] ; 
    10 DC-CARR-SVC-ABRV DC-CARR-SVC-ABRV [12] ; 
    10 DC-CARR-SVC-NM DC-CARR-SVC-NM [12] ; 
    10 DC-SAT-DLVR-FL DC-SAT-DLVR-FL [12] ; 
    10 TF4FBLIN TF4FBLIN [12] ; 
    10 XXX-STAT XXX-STAT [12] ; 
end // end TF0MW01

// Initial entry switch
DataItem TF0M-INIT-ENTRY-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map VWCARR01 select key
DataItem TF0M-VWCARR-KEYS char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TF0M select carrier code
DataItem TF0MM-SEL-CARR-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TF0M select carr service abrv
DataItem TF0MM-SEL-CARR-SVC-ABRV char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TF0M select DC carrier code
DataItem TF0MM-SEL-DC-CARR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TF0M select Sat delivery flag
DataItem TF0MM-SEL-SAT-DLVR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TF0M select status
DataItem TF0MM-SEL-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ADD function completed (Y)
DataItem TF0MW-ADD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem TF0MW-DATA-RQST-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed switch
DataItem TF0MW-DISP-MAP-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit pass switch (Y or N)
DataItem TF0MW-EDIT-PASS-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file switch
DataItem TF0MW-EOC-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Format the map switch
DataItem TF0MW-FORMAT-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Variable work index
DataItem TF0MW-IX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Variable work index
DataItem TF0MW-IX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Variable work index
DataItem TF0MW-IX3 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem TF0MW-IXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Occurrence used('Y' or BLANK)
DataItem TF0MW-LN-USED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map header change switch
DataItem TF0MW-MAPHDR-CHG-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Update mode (I or C or A)
DataItem TF0MW-MODE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// msg no. save field
DataItem TF0MW-MSG-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Temp storage group level
DataItem TF0MW-TS-GRP char(720)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Return to TS page before updat
DataItem TF0MW-TS-PG-RTN-SW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Variable work counter
DataItem TF0MW-WORK-CTR smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

