package fy0c;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
import vv.common.*;
//*** PROGRAM=FY0C ****
// This program allows users to inquire/maintain existing
// rows in the factory table.  The user may specify the factory
// they want to work on, or specify the country and/or status.
// The database will return
// 0 to N rows based upon the information entered by the user.
// This program will format the screen with the information
// returned from the data base.
// 
// This program allows adding, changing, deleting, and
// inquiring of factory table rows.
// 
//    The user may add new rows by pressing PF13 from
//    the inquiry screen (blank or filled with rows).  This
//    will position them in an add screen.  Rows can then be
//    added (if entries pass edit criteria) by pressing ENTER.
//    The user may continue adding or exit to the inquiry
//    screen.  (If a row already exists on an add, a message
//    will appear to that effect: 'this row already exists').
// 
//    A user can select one or more rows for change and hit
//    PF14.  The user will then be positioned in a change
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for change or PF3 to return to the browse screen.
// 
//    A user can select one or more rows for delete and hit
//    PF15.  The user will then be positioned in a delete
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for change or PF3 to return to the browse screen.
// 
//    A user can select one or more rows for inquiry and hit
//    enter.  The user will then be positioned in an inquiry
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for inquiry or PF3 to return to the browse screen.
// 
// Upon initial entry, the table is read and columns from the
// selected rows are formatted and saved in temporary storage,
// one display page per queue record.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 07/08/88   gamen    New application.
// 04/25/89   gamen    Remove default to max return months
//                     in fy0c610 process.
// 02/11/91   gamen    Init new field, FY1CNTFL, to 'N' in add
//                     and change.
// 02/20/91   kdenne   allow field FY1CNTFL to be updated by
//                     user in the add or change process.
// 06/10/91   gamen    Remove YFDCD code and add default fob
//                     price field and temporary code for it.
// 07/08/91   DFRANC   Added default price field to the
//                     FY0CM003 map.  This field is not shown
//                     if the group code is '03'.  A default of
//                     $1.00 is entered during an add for a
//                     GPC of $1.00.  Added FYHREC record pro-
//                     cessing to add tag records.
// 12/03/91   chaert   update default price
// 05/27/92   KSANFO   Add edit of BGRD %, Add call to FY1350
//                     to create BGRD tag records, Add security
//                     control at the field level for Bgrd%,
//                     Parent Factory, Max Return Mo & Default
//                     Price.
//                     COMMAREA.CAALVL(1) controls FOB dflt prc
//                     COMMAREA.CAALVL(2) controls Bgrd%,
//                     Parent Factory and Max Return Mo.
//                     Default bgrade% to 60 percent.
// 05/28/92   KSANFO   Default Misc% field to 3.33%, for GPC 03
//                     off-shore factories only.
// 10/12/92   GAMEN    DB2 changes for 10/12/92. Two new fields
//                     added, fy-pc-bar-cd-fl and fy-fcty-nbr.
//                     init fy-pc-bar-cd-fl to 'N' and
//                     fy-fcty-nbr to 0.
// 10/21/92   GAMEN    Add factory number to map 2.
// 06/08/93   GAMEN    Allow factory number to be used by ftwr
// 11/01/93   GAMEN    Address fields resized for DB2 changes.
// 08/30/96   GAMEN    Default Assign nbr flag to 'Y'.
// 06/17/97   GREDDY   changed to use view VFCTY002
//                     restricted change of field office codes
//                     for gpc code '02'
//                     added field for MCO in screen and added
//                     code for validation
// 11/05/97   MBURLE   Y2KFIX: use date windowing to determine
//                     current century for item
//                     FY0CW01.FY0CWCEN in flow for XPFY001.
//                     Modified FY0C460, FY0C650, FY0C850 to
//                     use XX0XW01.XX0XWDAT for current date.
// 12/09/97   GREDDY   Modified FY0C840 to allow the updates
//                     for data base when some thing is changed
//                     in the screen FY0CM003 without changing
//                     any thing in the screen FY0CM002 for
//                     apparel
// 02/11/98  retrofit  add fy_fcty_xref_nbr to record and
//                     change from view vfcty002 to vfcty003.
// 27/03/98   DRAMMO   Add conformation message while adding
//                     a new equipment factory.
// 23/04/98   DRAMMO   Add a product type flag in place of
//                     preformance in map FY0CM002.
// 06/18/98   DRAMSE   Changed the length of FY0CW03 and
//                     VFCTY003
// 07/01/98   BCHELL   Added FY-FCTY-MFG-CD on FY0CM002 screen
//                     for Add/Modify option
// 07/14/98   DRAMSE   Used fy-fcty-typ-cd instead of fy1perfr
// 12/02/98   DRAMMO   Fixed the change date population for
//                     vfyclr01 table.
// 04/27/99   jniese   Change fy-fcty-typ-cd for Japan local
//                     PO's.
// 08/23/99   jniese   Change Japan local equipment edit.
// 06/12/01   SPITCH   Change to allow 'e' for apprel equip
//                     in field fy-fcty-typ-cd while adding
//                     a factory
// 01/17/02   SPITCH   Change not to allow same fcty-cd for
//                     across all gpc codes
// 03/17/03   AVERMA   Changed to make MCO a mandatory field
// 01/30/04   MRAGHU   Changed to remove NUMERIC check on the
//                     Factory code field for Japan Factories.
// 04/16/04   MPERI4   CHECK FOR NUMERIC VALUES OF FCTY.
// 08/02/18   NSAHA    CHG0111380: Fix for JAPA EQ factory addition
//                     logic and Liason Code change issues
// *********************
Program FY0C type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = yes, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY0CW01 FY0CW01; // record
  FY0CW02 FY0CW02; // record
  FY0CW03 FY0CW03; // record
  FY0CW04 FY0CW04; // record
  FY3REC FY3REC; // record
  FY6REC FY6REC; // record
  FYHREC FYHREC; // record
  FYWREC FYWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  TSCREC TSCREC; // record
  VFCTY003 VFCTY003; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XSTTBL {deleteAfterUse = yes}; // table
  use YABTBL {deleteAfterUse = yes}; // table
  use YBCTBL {deleteAfterUse = yes}; // table
  use FY0CM.FY0CM001,  // forms
      FY0CM.FY0CM002, 
      FY0CM.FY0CM003, 
      FY0CM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFY001: XPFY001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set FY0CW01 empty;
    set FY0CW02 empty;
    set FY0CW03 empty;
    set FY0CW04 empty;
    set FYHREC empty;
    set VFCTY003 empty;
    set FY6REC empty;
    set TA1REC empty;
    set TA5REC empty;
    set TSCREC empty;
    set SQLCA empty;
    set ERRSQLCA empty;
    set XX0XW01 empty;
    set XX0XW02 empty;
    set FY0CM001 initial; /* Initialize map1 output area*/
    set FY0CM002 initial; /* Initialize map2 output area*/
    set FY0CM003 initial; /* Initialize map3 output area*/
    set XX0XM001 initial; /* Initialize pop-up window area*/

     /* --------- Y2K OUT BEGIN ----------*/
     /* MOVE 19 TO FY0CW01.FY0CWCEN;     /* Initialize working century*/
     /* --------- Y2K OUT END ------------*/

     /* --------- Y2K IN BEGIN ----------*/
    FY0CW01.FY0CWYMD = VGVar.currentShortGregorianDate;
    if (FY0CW01.FY0CWYY > 57)
      FY0CW01.FY0CWCEN = 19; /* Initialize working century*/
    else
      FY0CW01.FY0CWCEN = 20; /* Initialize working century*/
    end
     /* --------- Y2K IN END ------------*/

    FY0CW01.FY0CWMFL = "N"; /* Initialize message flag*/
    FY0CW01.FY0CWPSW = "N"; /* Initialize problem switch*/
    FY0CW01.FY0CWSPG = 0; /* Set save page to 0*/

    FY0C001: FY0C001();
     /* no flow*/
    FY0C002: FY0C002();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Factory main process.*/
     /* ------------------------------------------------------------*/

    goto FY0C002; /* Converse Factory Inquiry/Main.*/

  end // end main
end // end FY0C


// Special initialization
Function FY0C001()
  FY0CW01.FY0CWSWR = "N"; /* init request for data switch*/

  FY0CW01.FY0CWLSF = "Y"; /* init list screen flag*/

  FY0CW01.FY0CWMAP = 1; /* init to map 1*/

  FY0CW01.FY0CWCFL = "N"; /* Initialize conformation flag*/

  FY0CW01.FY0CWFSW = COMMAREA.CAITEM;
  if (FY0CW01.FY0CWFSW == "I") /* check for valid function*/
    FY0CW01.FY0CWLSF = "N"; /* init list screen flag*/
    FY0CW01.FY0CWMAP = "2";
  end

  if (FY0CW01.FY0CWFSW == "A")
    if (COMMAREA.CAADDFL == "Y")
      FY0CW01.FY0CWLSF = "N"; /* init list screen flag*/
      FY0CW01.FY0CWMAP = "2";
    else
       /* set error msg*/
    end
  end

  if (FY0CW01.FY0CWFSW == "C")
    if (COMMAREA.CACHGFL == "Y")
      FY0CW01.FY0CWLSF = "N"; /* init list screen flag*/
      FY0CW01.FY0CWMAP = "2";
    else
       /* set error msg*/
    end
  end

  FY0CW01.XXXSTAT = "A";
  FY0CM001.XXXSTAT = "A";
  FY0CW01.FY0CWSTD = "ACTIVE";
  FY0CM001.FY0CMSTD = "ACTIVE";

  FY0CW01.XGPCD = COMMAREA.XGPCD; /* Init gpc code*/
  FY0CM001.XGPCD = COMMAREA.XGPCD;

  if (FY0CW01.XGPCD > " ")
    if (FY0CW01.XGPCD in XGPTBL.XGPCD)
      FY0CW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0CM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      if (FY0CW01.FY0CWMAP == "1")
        FY0CW01.FY0CWSWR = "Y"; /* set request for data switch on*/
      end
    end
  end

end // end FY0C001

// Factory Inquiry/Maintenance
Function FY0C002()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWMAP == "1") /* Map 1 was requested*/
    FY0C100(); /* Display map 1*/
  end

  if (FY0CW01.FY0CWMAP == "2" /* Map 2 was requested*/
   && FY0CW01.FY0CWFSW == "A") /* and ADD function*/
    FY0C200(); /* Display Location Add Map*/
  end

  if (FY0CW01.FY0CWMAP == "2" /* Map 2 was selected*/
   && FY0CW01.FY0CWFSW == "I") /* and INQUIRE function*/

    if (FY0CW01.FY0CWLSF == "Y")

      FY0CW01.FY0CWIXM = 1; /* Initialize index*/

      while (FY0CW01.FY0CWIXM <= 13 /* Until end of page*/
       && FY0CW01.FY0CWMAP == "2") /* and map 2*/
        if (FY0CM001.FY0CMSEL[FY0CWIXM] == "S") /* If line selected*/
          FY0C300(); /* Display Factory change Map*/
        end
        FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment index*/
      end
      FY0CW01.FY0CWMAP = "1"; /* Set map number to 1*/
    else
      while (FY0CW01.FY0CWMAP == "2") /* Until map ne 2*/
        FY0C300(); /* Display Factory Inquiry Map*/
      end
    end
  end

  if (FY0CW01.FY0CWMAP == "2" /* Map 2 was selected*/
   && FY0CW01.FY0CWFSW == "C") /* and CHANGE function*/

    if (FY0CW01.FY0CWLSF == "Y")

      FY0CW01.FY0CWIXM = 1; /* Initialize index*/

      while (FY0CW01.FY0CWIXM <= 13 /* Until end of page*/
       && FY0CW01.FY0CWMAP == "2") /* and map 2*/
        if (FY0CM001.FY0CMSEL[FY0CWIXM] == "S") /* If line selected*/
          FY0C400(); /* Display Factory change Map*/
        end
        FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment index*/
      end
      FY0CW01.FY0CWMAP = "1"; /* Set map number to 1*/
    else
      while (FY0CW01.FY0CWMAP == "2") /* Until map ne 2*/
        FY0C400(); /* Display Factory Change Map*/
      end
    end
  end

  if (FY0CW01.FY0CWMAP == "3" /* Map 3 was requested*/
   && FY0CW01.FY0CWFSW == "A") /* and ADD function*/
    FY0C600(); /* Display Location Add Map*/
  end

  if (FY0CW01.FY0CWMAP == "3" /* Map 2 was selected*/
   && FY0CW01.FY0CWFSW == "I") /* and INQUIRE function*/
    FY0C700(); /* Display Factory Inquiry Map*/
  end

  if (FY0CW01.FY0CWMAP == "3" /* Map 2 was selected*/
   && FY0CW01.FY0CWFSW == "C") /* and CHANGE function*/
    FY0C800(); /* Display Factory change Map*/
  end

  if (FY0CW01.FY0CWMAP == "1"
   || FY0CW01.FY0CWMAP == "2"
   || FY0CW01.FY0CWMAP == "3")

     /* next sentence*/
  else

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0C002 "; /* Process name*/
    TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
    TA1REC.TA1MAP = FY0CW01.FY0CWMAP; /* Map name*/
    SQLCA.SQLCAREC = "MAP NUMBER IS INVALID";

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/
    XSPF4(); /* Exit to Master Menu*/
  end

  if (FY0CW01.FY0CWMAP == "2")
    if (FY0CW01.FY0CWFSW == "A"
     || FY0CW01.FY0CWFSW == "I"
     || FY0CW01.FY0CWFSW == "C")

       /* next sentence*/

    else
      TA1REC.TA1TYPE = "APPL"; /* Type of error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1PGMNM = "FY0C002 "; /* Process name*/
      TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
      TA1REC.TA1MAP = FY0CW01.FY0CWMAP; /* Map name*/
      SQLCA.SQLCAREC = "MAP NUMBER IS INVALID";

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/
      XSPF4(); /* Exit to Master Menu*/
    end
  end

  if (FY0CW01.FY0CWMAP == "3")
    if (FY0CW01.FY0CWFSW == "A"
     || FY0CW01.FY0CWFSW == "I"
     || FY0CW01.FY0CWFSW == "C")

       /* next sentence*/

    else
      TA1REC.TA1TYPE = "APPL"; /* Type of error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1PGMNM = "FY0C002 "; /* Process name*/
      TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
      TA1REC.TA1MAP = FY0CW01.FY0CWMAP; /* Map name*/
      SQLCA.SQLCAREC = "MAP NUMBER IS INVALID";

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/
      XSPF4(); /* Exit to Master Menu*/
    end
  end

end // end FY0C002

// Factory list map
Function FY0C100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWSWR == "Y" /* The request for data is yes*/
   && FY0CW01.FY0CWPSW == "N") /* and no errors*/
    FY0C110(); /* Obtain the data to display*/
  end

  FY0C120(); /* Format and display the map*/

  FY0C130(); /* Check attention identifier*/

  FY0C140(); /* Reset fields to normal intensity*/

  FY0C150(); /* Verify the entered data*/

  FY0C160(); /* Process valid input request*/

end // end FY0C100

// Obtain the data to display
Function FY0C110()
   /* ------------------------------------------------------------*/
     /* Purge any existing queue in temporary storage.*/
     /* Select and open the cursor for the set to be formatted.*/
     /* Fetch and format the data in the page.*/
     /* If the page is full, add the page to the storage queue.*/
     /* At end of rows, add any partial page to the queue.*/
     /* At end of rows, close the selected set cursor.*/
     /* If no data found, display error message and return to*/
       /* previous process.*/
     /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  FY0C111(); /* Purge any temporary storage*/

  set VFCTY003 empty; /* Clear factory record*/

  VFCTY003.XGPCD = FY0CW01.XGPCD;

  if (FY0CW01.XCTCD > " ")
    VFCTY003.XCTCD = FY0CW01.XCTCD;
  else
    VFCTY003.XCTCD = "*";
  end

  if (FY0CW01.XXXSTAT > " ")
    VFCTY003.XXXSTAT = FY0CW01.XXXSTAT;
  else
    VFCTY003.XXXSTAT = "*";
  end

  FY0C113(); /* Select set and open the cursor*/

  if (SQLCA.VAGen_SQLCODE == 0) /* No errors were found*/
    set FY0CW02 empty; /* Clear temporary storage record*/
    FY0CW01.FY0CWIXM = 1; /* Initialize display line number*/
    FY0CW01.FY0CWSWC = "N"; /* Initialize end of file switch*/
    FY0CW01.FY0CWPSW = "N"; /* Init problem found switch*/
    while (FY0CW01.FY0CWSWC == "N" /* Until end of set or problem found*/
     && FY0CW01.FY0CWPSW == "N") /* or until a problem was found*/
      FY0C114(); /* Obtain data and format page*/
      if (FY0CW01.FY0CWIXM > 13) /* Page is full*/
        FY0C115(); /* Add page to temporary storage*/
      end
    end
    if (FY0CW01.FY0CWSWC == "Y") /* end of set was found*/
      if (FY0CW01.FY0CWIXM > 1) /* and some of the page was formatted*/
        FY0C115(); /* Add page to temporary storage*/
      end
      FY0CW01.FY0CWTSP = 1; /* Initialize page number*/
      FY0CW01.FY0CWSWR = "N"; /* Request for data completed*/
      FY0C116(); /* Close the selected set cursor*/
    end
  end

  if (FY0CW01.TA5TSQIX == 0) /* No data to display*/
    FY0CM001.XXXPRCNM = "FY0C110"; /* Process name*/
    set FY0CM001.FY1FCTYC cursor; /* Position crsr at fcty code*/
    set VFCTY003 empty; /* Clear factory record*/
    converseLib.validationFailed(21); /* Indicate no data to display*/
    FY0CW01.FY0CWPSW = "Y"; /* Override problem*/
  end

end // end FY0C110

// Purge any temporary storage
Function FY0C111()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "FY0C"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  call "TA0050" (FY0CW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C111"; /* Process name*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";
    TA1REC.TA1MAP = "FY0CM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end

  FY0CW01.FY0CWTSP = 0; /* Reset current page number*/
  FY0CW01.TA5TSQIX = 0; /* Reset highest page number*/

end // end FY0C111

// Select row(s)
Function FY0C113()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("S1", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C113"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "FY0CM001"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/
    TA1REC.TA1TBLKE = VFCTY003.VFCTY003-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C113"; /* Process name*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/

  end

end // end FY0C113

// Fetch next row and format
Function FY0C114()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("N1", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    FY0CW01.FY0CWSWC = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
      end

      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "FY0C114"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "FY0CM001"; /* Map name*/
      TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      FY0CM001.XXXPRCNM = "FY0C114"; /* Process name*/

    else
      if (VFCTY003.FY1FCTYC != " ") /* Not a blank factory code*/
        FY0CW02.FY1FCTYC[FY0CWIXM] = VFCTY003.FY1FCTYC; /* Save data*/
        FY0CW02.FY1FCTSN[FY0CWIXM] = VFCTY003.FY1FCTSN; /* Save data*/
        FY0CW02.FY1MGR[FY0CWIXM] = VFCTY003.FY1MGR; /* Save data*/
        FY0CW02.FY1FASST[FY0CWIXM] = VFCTY003.FY1FASST; /* Save data*/
        FY0CW02.XXXSTAT[FY0CWIXM] = VFCTY003.XXXSTAT; /* Save data*/

        if (VFCTY003.XCTCD in XCTTBL.XCTCD)
          FY0CW02.XCTDESC[FY0CWIXM] = XCTTBL.XCTDESC[sysVar.arrayIndex];
        else
          FY0CW02.XCTDESC[FY0CWIXM] = "UNKNOWN";
        end

        FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment line index*/
      end
    end
  end

end // end FY0C114

// Add page to temporary storage
Function FY0C115()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  FY0CW02.FY0CWLEN = 1404; /* Temporary storage length*/
  TA5REC.TA5APPID = "FY0C"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  call "TA0050" (FY0CW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* everything is a-ok*/
    FY0CW01.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    FY0CW01.FY0CWIXM = 1; /* Reset display line number*/
    set FY0CW02 empty; /* Clear temporary storage record*/
  else /* error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0C115"; /* Process name*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    TA1REC.TA1MAP = "FY0CM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C115"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/

    FY0CW01.FY0CWPSW = "Y"; /* indicate problem has been found*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

end // end FY0C115

// Close selected set cursor
Function FY0C116()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("C1", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0C116"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "FY0CM001"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCT003"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C116"; /* Process name*/
    converseLib.validationFailed(10); /* Indicate system error*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

  end

end // end FY0C116

// Format and display the map
Function FY0C120()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    set FY0CM001 initial; /* Clear map output area*/
    FY0CM001.XGPCD = FY0CW01.XGPCD;
    FY0CM001.XGPDESC = FY0CW01.XGPDESC;
    FY0CM001.FY1FCTYC = FY0CW01.FY1FCTYC;
    FY0CM001.FY1FCTNM = FY0CW01.FY1FCTNM;
    FY0CM001.XCTCD = FY0CW01.XCTCD;
    FY0CM001.XCTDESC = FY0CW01.XCTDESC;
    FY0CM001.XXXSTAT = FY0CW01.XXXSTAT;
    FY0CM001.FY0CMSTD = FY0CW01.FY0CWSTD;

    FY0C121(); /* Format the selected data*/

  end

  if (FY0CW01.FY0CWPSW == "Y") /* Error message to display*/

    FY0C111(); /* Purge temp storage*/
    set FY0CW02 empty; /* Clear temp storage record*/
    set VFCTY003 empty; /* Clear factory record*/

    set FY0CM001.FY0CMPGL initialAttributes; /* Turn off "PAGE" literal*/
    set FY0CM001.FY0CMOFL initialAttributes; /* Turn off "OF" literal*/

    FY0CM001.FY0CWTSP = 0; /* Current page number*/
    FY0CM001.TA5TSQIX = 0; /* Highest page number*/

    FY0CW01.FY0CWIXM = 1; /* Initialize line index*/
    while (FY0CW01.FY0CWIXM <= 13 /* Until end of lines*/
     && FY0CM001.FY0CMFCD[FY0CWIXM] != " ") /* or last line of data*/

      set FY0CM001.FY0CMSEL[FY0CWIXM] initialAttributes; /* Turn off select flag*/

      FY0CM001.FY0CMSEL[FY0CWIXM] = " ";
      FY0CM001.FY0CMFCD[FY0CWIXM] = " ";
      FY0CM001.FY0CMFSN[FY0CWIXM] = " ";
      FY0CM001.FY0CMCDS[FY0CWIXM] = " ";
      FY0CM001.FY1MGR[FY0CWIXM] = " ";
      FY0CM001.FY1FASST[FY0CWIXM] = " ";
      FY0CM001.FY0CMSTA[FY0CWIXM] = " ";

      FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment line index*/

    end
  end

  if (FY0CM001.XGPCD == "03") /* If apparel*/
    FY0CM001.FY0CMMGL = "  CONTRACTOR MGR   ";
  else
    FY0CM001.FY0CMMGL = " NIKE FACTORY MGR  ";
  end

  if (converseVar.validationMsgNum != 0) /* No error message to display*/
    set FY0CM001 alarm; /* Indicate sound alarm*/
  end

  if (FY0CW01.FY0CWPSW == "N") /* No error message to display*/
    if (FY0CM001.FY0CMFCD[1] == " ") /* No data to display*/
      set FY0CM001.FY1FCTYC cursor; /* Set cursor to factory code*/
    end
  end

  if (FY0CW01.FY0CWMFL == "Y") /* If message flag is yes*/
    converseLib.validationFailed(1); /* Indicate update was successful*/
    FY0CM001.XXXPRCNM = "FY0C120"; /* Process name*/
    FY0CW01.FY0CWMFL = "N"; /* Reset message flag*/
  end

  FY0CM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  converse FY0CM001 ;

  FY0CW01.FY0CWPSW = "N"; /* Reset problem switch*/

  if (converseVar.eventKey is enter)
    FY0C124(); /* Check for ? inquiry by user*/
  end

end // end FY0C120

// Format the selected data
Function FY0C121()
   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the plan location data in the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWSKF = "N"; /* Initialize save key flag*/

  if (FY0CW01.FY0CWSKY != " ") /* If save key set*/
    FY0CW01.FY0CWTSP = 1; /* Initialize search page*/
  end

  if (COMMAREA.CAADDFL == "Y") /* If user can perform add*/
    set FY0CM001.FY0CMADD skip; /* Display add PF Key*/
  end

  if (COMMAREA.CACHGFL == "Y") /* If user can perform change*/
    set FY0CM001.FY0CMCHG skip; /* Display change PF Key*/
  end

  if (FY0CW01.TA5TSQIX == 0) /* if no data to display*/
     /* Do not format data*/
  else

    while (FY0CW01.FY0CWSKF == "N") /* While save key not found*/
      FY0C122(); /* Obtain temporary storage page*/
      FY0C123(); /* locate page with key*/
    end

    if (FY0CW01.FY0CWTSP != TA5REC.TA5TSQIX) /* Desired page not current*/
      FY0C122(); /* Obtain temporary storage page*/
    end

    set FY0CM001.FY0CMPGL skip; /* Display "PAGE" literal*/
    set FY0CM001.FY0CMOFL skip; /* Display "OF" literal*/

    FY0CM001.FY0CWTSP = FY0CW01.FY0CWTSP; /* Current page number*/
    set FY0CM001.FY0CWTSP skip; /* Display number*/
    FY0CM001.TA5TSQIX = FY0CW01.TA5TSQIX; /* Highest page number*/
    set FY0CM001.TA5TSQIX skip; /* Display number*/

    FY0CW01.FY0CWIXM = 1; /* Initialize line index*/
    while (FY0CW01.FY0CWIXM <= 13 /* Until end of lines*/
     && FY0CW02.FY1FCTYC[FY0CWIXM] != " ") /* or last line of data*/

      set FY0CM001.FY0CMSEL[FY0CWIXM] normal; /* Display select flag*/

      FY0CM001.FY0CMFCD[FY0CWIXM] = FY0CW02.FY1FCTYC[FY0CWIXM];
      FY0CM001.FY0CMFSN[FY0CWIXM] = FY0CW02.FY1FCTSN[FY0CWIXM];
      FY0CM001.FY0CMCDS[FY0CWIXM] = FY0CW02.XCTDESC[FY0CWIXM];
      FY0CM001.FY1MGR[FY0CWIXM] = FY0CW02.FY1MGR[FY0CWIXM];
      FY0CM001.FY1FASST[FY0CWIXM] = FY0CW02.FY1FASST[FY0CWIXM];
      FY0CM001.FY0CMSTA[FY0CWIXM] = FY0CW02.XXXSTAT[FY0CWIXM];

      FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment line index*/

    end
  end

end // end FY0C121

// Read temporary storage page
Function FY0C122()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  FY0CW02.FY0CWLEN = 1404; /* Temporary storage length*/
  TA5REC.TA5APPID = "FY0C"; /* Application identification*/
  TA5REC.TA5TSQIX = FY0CW01.FY0CWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  call "TA0050" (FY0CW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0C122"; /* Process name*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    TA1REC.TA1MAP = "FY0CM001"; /* Map name*/
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C122"; /* Process name*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate Problem*/
    converseLib.validationFailed(10); /* Indicate system error*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0C122

// Locate save key
Function FY0C123()
   /* ------------------------------------------------------------*/
   /* Locate the page in which the key is less than or*/
   /* equal to the Change Save Key.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWSKY == " ") /* No factory code entered*/
    FY0CW01.FY0CWSKF = "Y"; /* Indicate key found*/
  else

    FY0CW01.FY0CWIXM = 1; /* Initialize index*/

    while (FY0CW01.FY0CWIXM <= 13 /* Until key is found*/
     && FY0CW01.FY0CWSKF == "N")
      if (FY0CW02.FY1FCTYC[FY0CWIXM] == " " /* no more factories*/
       || FY0CW02.FY1FCTYC[FY0CWIXM] > FY0CW01.FY0CWSKY)
        if (FY0CW01.FY0CWIXM <= 1) /* Key not on page*/
          if (FY0CW01.FY0CWTSP == 1) /* first page*/
            FY0CW01.FY0CWIXM = 1; /* Reset index*/
          else
            FY0CW01.FY0CWIXM = 13; /* Index to last entry*/
            FY0CW01.FY0CWTSP = FY0CW01.FY0CWTSP - 1; /* decrement page*/
          end
        else
          FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM - 1; /* Decrement index*/
        end
        set FY0CM001.FY0CMSEL[FY0CWIXM] cursor; /* Initial cursor*/
        FY0CW01.FY0CWSKF = "Y"; /* Indicate page was found*/
        FY0CW01.FY0CWSKY = " "; /* Reset save key*/
      else
        if (FY0CW02.FY1FCTYC[FY0CWIXM] == FY0CW01.FY0CWSKY)
          set FY0CM001.FY0CMSEL[FY0CWIXM] cursor; /* Initial cursor*/
          FY0CW01.FY0CWSKF = "Y"; /* Indicate key was found*/
          FY0CW01.FY0CWSKY = " "; /* Reset save key*/
        end
      end
      FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment index*/
    end

    if (FY0CW01.FY0CWSKF != "Y") /* Key not found*/
      if (FY0CW01.FY0CWTSP == FY0CW01.TA5TSQIX) /* Last page*/
        FY0CW01.FY0CWIXM = 13; /* Set index to last entry*/
        set FY0CM001.FY0CMSEL[FY0CWIXM] cursor; /* Initial cursor*/
        FY0CW01.FY0CWSKF = "Y"; /* Indicate page was found*/
        FY0CW01.FY0CWSKY = " "; /* Reset save key*/
      else
        FY0CW01.FY0CWTSP = FY0CW01.FY0CWTSP + 1; /* Increment page*/
      end
    end
  end

end // end FY0C123

// Check for ? inquiry by user
Function FY0C124()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0CM001.XGPCD == "?" /* if any ? entered*/
   || FY0CM001.XCTCD == "?")

    if (FY0CM001.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM001.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0CM001.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM001.XGPCD = " "; /* clear fields*/
        FY0CM001.XGPDESC = " ";
      end
    end

    if (FY0CM001.XCTCD == "?") /* if ? in country code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                COUNTRY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXCT01(); /* perform country code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM001.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
        FY0CM001.XCTDESC = XCTTBL.XCTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM001.XCTCD = " "; /* clear fields*/
        FY0CM001.XCTDESC = " ";
      end
    end

    converseLib.clearScreen();
     /* restore the original map*/

  end

end // end FY0C124

// Check attention identifier
Function FY0C130()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FY0CM001 initial; /* Clear map*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      FY0C111(); /* Purge any temporary storage*/
      set VFCTY003 empty; /* Clear record*/
      COMMAREA.CATOAP = FY0CM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0CM001.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/

      VFCTY003.FY1FCTYC = FY0CW01.FY1FCTYC; /* Reset load keys*/
      VFCTY003.XGPCD = FY0CW01.XGPCD;
      VFCTY003.XCTCD = FY0CW01.XCTCD;
      VFCTY003.XXXSTAT = FY0CW01.XXXSTAT;

      FY0CW01.FY0CWSWR = "Y"; /* Set request for data switch*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      FY0CM001.XXXPRCNM = "FY0C130"; /* PROCESS NAME*/
    end
    set FY0CM001.CATOAP cursor, modified, bold; /* Highlight*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0A"; /* Set to Factory menu*/
    FY0C111(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM001"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* Clear item*/
    end

    FY0C111(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf13 /* PF13 was pressed*/
   && COMMAREA.CAADDFL == "N")     /* and user add not authorized*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf14 /* PF14 was pressed*/
   && COMMAREA.CACHGFL == "N")     /* and user chg not authorized*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0P"; /* Set to Construction Type*/
    FY0CW01.FY0CWIXM = 1; /* Init. index*/
    FY0CW01.FY0CWSFL = "N"; /* Init selection flag*/
    while (FY0CW01.FY0CWSFL == "N" /* Until selection found*/
     && FY0CW01.FY0CWIXM <= 13) /* or end of list*/
      if (FY0CM001.FY0CMSEL[FY0CWIXM] == "S") /* Selection has been made*/
        FYWREC.XGPCD = FY0CM001.XGPCD; /* Move gpc code to fywrec*/
        FYWREC.FY1FCTYC = FY0CM001.FY0CMFCD[FY0CWIXM];
        COMMAREA.CAUSERA = FYWREC.CAUSERA; /* move to commarea*/
        FY0CW01.FY0CWSFL = "Y"; /* Init selection flag*/
      else
        FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Decrement line index*/
      end
    end
    FY0C111(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0F"; /* Set to Factory Style*/
    FY0CW01.FY0CWIXM = 1; /* Init. index*/
    FY0CW01.FY0CWSFL = "N"; /* Init. selection flag*/
    while (FY0CW01.FY0CWSFL == "N" /* Until selection found*/
     && FY0CW01.FY0CWIXM <= 13) /* or end of list*/
      if (FY0CM001.FY0CMSEL[FY0CWIXM] == "S") /* Selection has been made*/
        FYWREC.XGPCD = FY0CM001.XGPCD; /* Move gpc code to fywrec*/
        FYWREC.FY1FCTYC = FY0CM001.FY0CMFCD[FY0CWIXM];
        COMMAREA.CAUSERA = FYWREC.CAUSERA; /* move to commarea*/
        FY0CW01.FY0CWSFL = "Y"; /* Init selection flag*/
      else
        FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Decrement line index*/
      end
    end
    FY0C111(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14) /* and PF14 was not pressed*/

    FY0CM001.XXXPRCNM = "FY0C130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C130

// Reset highlighted fields
Function FY0C140()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM001.XGPCD initialAttributes; /* gpc code*/
  set FY0CM001.XGPDESC initialAttributes; /* gpc code desc*/
  set FY0CM001.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM001.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM001.XCTCD initialAttributes; /* country code*/
  set FY0CM001.XCTDESC initialAttributes; /* country code description*/
  set FY0CM001.XXXSTAT initialAttributes; /* status*/
  set FY0CM001.FY0CMSTD initialAttributes; /* status name*/

  FY0CW01.FY0CWIXM = 1; /* Initialize line index*/

  while (FY0CW01.FY0CWIXM <= 13 /* Until end of lines*/
   && FY0CM001.FY0CMFCD[FY0CWIXM] != " ") /* and location exists*/
    set FY0CM001.FY0CMSEL[FY0CWIXM] normal; /* Reset select flag*/
    FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM + 1; /* Increment line index*/
  end

  set FY0CM001.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM001.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C140

// Verify the entered data
Function FY0C150()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.CAITEM > " ") /* Application data was entered*/
    set FY0CM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CM001.XXXPRCNM = "FY0C150"; /* Process name*/
    exit stack;
  end

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    FY0C151(); /* Verify scroll request*/
  else
    FY0C152(); /* Verify any changed data*/
  end

  if (FY0CW01.FY0CWPSW == "Y") /* Errors were found*/
    exit stack; /* Exit to redisplay map*/
  end
   /* END ;*/

end // end FY0C150

// Verify scroll request
Function FY0C151()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FY0CW01.FY0CWTSP < 2)       /* and no previous pages*/
    FY0CM001.XXXPRCNM = "FY0C151"; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FY0CW01.FY0CWTSP >= FY0CW01.TA5TSQIX) /* and no more pages*/
    FY0CM001.XXXPRCNM = "FY0C151"; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/
  end

  if (converseVar.validationMsgNum == 0)

    FY0CW01.FY0CWIXM = 13; /* Initialize line index*/

    while (FY0CW01.FY0CWIXM > 0) /* Until end of lines*/
      if (FY0CM001.FY0CMSEL[FY0CWIXM] != FY0CW02.FY0CMSEL[FY0CWIXM])
        set FY0CM001.FY0CMSEL[FY0CWIXM] cursor, modified, bold;
                                   /* Highlight*/
        FY0CM001.XXXPRCNM = "FY0C151"; /* Process name*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end
      FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM - 1; /* Decrement line number*/
    end

  end

end // end FY0C151

// Verify any changed data
Function FY0C152()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID STATUS*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.XXXSTAT > " ") /* If status entered*/
    if (FY0CM001.XXXSTAT == "A")
      FY0CM001.FY0CMSTD = "ACTIVE";
    else
      if (FY0CM001.XXXSTAT == "I")
        FY0CM001.FY0CMSTD = "INACTIVE";
      else
        FY0CM001.FY0CMSTD = " ";
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(54); /* Error message and highlight*/
        FY0CM001.XXXPRCNM = "FY0C152"; /* Process name*/
        set FY0CM001.XXXSTAT cursor, modified, bold;
        FY0CW01.FY0CWSWR = "N"; /* Set request for data*/
      end
    end
  else
    FY0CM001.FY0CMSTD = " ";
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID COUNTRY*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.XCTCD > " ") /* If country code entered*/
    if (FY0CM001.XCTCD in XCTTBL.XCTCD)
      FY0CM001.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    else
      FY0CM001.XCTDESC = " ";
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(25); /* Error message and highlight*/
      FY0CM001.XXXPRCNM = "FY0C152"; /* Process name*/
      set FY0CM001.XCTCD cursor, modified, bold;
      FY0CW01.FY0CWSWR = "N"; /* Set request for data*/
    end
  else
    FY0CM001.XCTDESC = " ";
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.XGPCD > " ") /* If gpc code entered*/
    if (FY0CM001.XGPCD in XGPTBL.XGPCD)
      FY0CM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      COMMAREA.XGPCD = FY0CM001.XGPCD; /* Save in commarea*/
    else
      FY0CM001.XGPDESC = " ";
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0CM001.XXXPRCNM = "FY0C152"; /* Process name*/
      set FY0CM001.XGPCD cursor, modified, bold;
      FY0CW01.FY0CWSWR = "N"; /* Set request for data*/
    end
  else
    FY0CM001.XGPDESC = " ";
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(101); /* Error message and highlight*/
    FY0CM001.XXXPRCNM = "FY0C152"; /* Process name*/
    set FY0CM001.XGPCD cursor, modified, bold;
    FY0CW01.FY0CWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF FACTORY SEARCH KEY IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.FY1FCTYC > " ") /* factory code entered*/
    FY0CW01.FY0CWSKY = FY0CM001.FY1FCTYC; /* Move to search key*/
    FY0CM001.FY1FCTYC = " "; /* Clear map code*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE GPC CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.XGPCD != VFCTY003.XGPCD) /* gpc chged*/
    FY0CW01.XGPCD = FY0CM001.XGPCD; /* save code*/
    FY0CW01.XGPDESC = FY0CM001.XGPDESC; /* save description*/
    if (FY0CW01.FY0CWPSW == "N") /* No problem*/
      FY0CW01.FY0CWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE COUNTRY HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.XCTCD != FY0CW01.XCTCD) /* ctry chged*/
    FY0CW01.XCTCD = FY0CM001.XCTCD; /* save code*/
    FY0CW01.XCTDESC = FY0CM001.XCTDESC; /* save description*/
    if (FY0CW01.FY0CWPSW == "N") /* No problem*/
      FY0CW01.FY0CWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE STATUS HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0CM001.XXXSTAT != FY0CW01.XXXSTAT) /* stat  chged*/
    FY0CW01.XXXSTAT = FY0CM001.XXXSTAT; /* save code*/
    FY0CW01.FY0CWSTD = FY0CM001.FY0CMSTD; /* save code*/
    if (FY0CW01.FY0CWPSW == "N") /* No problem*/
      FY0CW01.FY0CWSWR = "Y"; /* request for data switch*/
    end
  end

  FY0CW01.FY0CWSFL = "N"; /* Initialize selection flag*/

  if (FY0CW01.FY0CWPSW == "N" /* No problem*/
   && FY0CW01.FY0CWSWR == "N") /* Request for data not set*/

    FY0CW01.FY0CWIXM = 13; /* Initialize index*/

    while (FY0CW01.FY0CWIXM > 0) /* Until end of lines*/
      if (FY0CM001.FY0CMSEL[FY0CWIXM] != " ") /* If selection not blank*/
        if (FY0CM001.FY0CMSEL[FY0CWIXM] == "S") /* Save the key*/
          FY0CW01.FY0CWSFL = "Y"; /* Initialize selection flag*/
        else
          converseLib.validationFailed(13); /* Error message and highlight*/
          FY0CM001.XXXPRCNM = "FY0C152"; /* Process name*/
          set FY0CM001.FY0CMSEL[FY0CWIXM] cursor, modified, bold;
          FY0CW01.FY0CWSWR = "N"; /* Set request for data*/
        end
      end
      FY0CW01.FY0CWIXM = FY0CW01.FY0CWIXM - 1; /* Decrement line index*/
    end

    if (converseVar.eventKey is pf14 /* PF14 was pressed*/
     && FY0CW01.FY0CWSFL == "N")     /* and selection was not made*/
      converseLib.validationFailed(53); /* error message*/
    end

  end

end // end FY0C152

// Process valid input request
Function FY0C160()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message set up*/
    if (converseVar.eventKey is pf7) /* Scroll back requested*/
      FY0CW01.FY0CWTSP = FY0CW01.FY0CWTSP - 1; /* Decrement page number*/
    else
      if (converseVar.eventKey is pf8) /* Scroll forward requested*/
        FY0CW01.FY0CWTSP = FY0CW01.FY0CWTSP + 1; /* Increment page number*/
      else
        if (converseVar.eventKey is pf13) /* PF13 was pressed*/
          FY0CW01.FY1FCTYC = " "; /* Clear factory for when we return*/
          FY0CW01.FY1FCTNM = " ";
          FY0CW01.XCTCD = " "; /* Clear country for when we return*/
          FY0CW01.XCTDESC = " ";
          FY0CW01.FY0CWMAP = "2"; /* Select Map #2*/
          FY0CW01.FY0CWFSW = "A"; /* Select add function*/
          converseLib.validationFailed(0); /* Clear error message field*/
        else
          if (converseVar.eventKey is pf14 /* PF14 was pressed*/
           && FY0CW01.FY0CWSFL == "Y")     /* and selection was made*/
            FY0CW01.FY1FCTYC = " "; /* Clear fcty for return*/
            FY0CW01.FY1FCTNM = " ";
            FY0CW01.XCTCD = " "; /* Clear country for when we return*/
            FY0CW01.XCTDESC = " ";
            FY0CW01.FY0CWMAP = "2"; /* Select Map #2*/
            FY0CW01.FY0CWFSW = "C"; /* Select change function*/
            converseLib.validationFailed(0); /* Clear error message field*/
          else
            if (converseVar.eventKey is enter /* enter was pressed*/
             && FY0CW01.FY0CWSFL == "Y")      /* and selection was made*/
              FY0CW01.FY0CWMAP = "2"; /* Select Map #2*/
              FY0CW01.FY0CWFSW = "I"; /* Select inquiry function*/
              converseLib.validationFailed(0); /* Clear error message field*/
            end
          end
        end
      end
    end
  end

end // end FY0C160

// Factory maintenance add map
Function FY0C200()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FY0C210(); /* Format and display the map*/

  FY0C220(); /* Check attention identifier*/

  FY0C230(); /* Reset fields to normal intensity*/

  FY0C240(); /* Verify the entered data*/

  FY0C250(); /* Process valid input request*/

end // end FY0C200

// Format and display the map
Function FY0C210()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "N") /* No errors*/
    set FY0CM002 initial; /* Clear map output area*/
    set FY0CM002.FY1FCTYC cursor; /* Clear map output area*/
    FY0CM002.FY0CMFUN = "ADD  "; /* Set ADD title to map*/
    FY0CM002.XXXSTAT = "A"; /* default status to active*/
    FY0CM002.FY0CMSTD = "ACTIVE"; /* status description*/

    if (FY0CW01.XGPCD == "02")
      FY0CM002.FY0CM-FCTY-NBR-FL = "Y"; /* Init factory nbr flag*/
    else
      FY0CM002.FY0CM-FCTY-NBR-FL = "N"; /* Init factory nbr flag*/
    end
    if (FY0CW01.XGPCD != "02"
     && FY0CW01.XGPCD != "03"
     && FY0CW01.XGPCD != " ")
      set FY0CM002.FY0CM-FCTY-NBR-FL skip;
    end

    if (FY0CW01.XGPCD != " ")
      FY0CM002.XGPCD = FY0CW01.XGPCD; /* Move values to map*/
      FY0CM002.XGPDESC = FY0CW01.XGPDESC;
      set FY0CM002.XGPCD protect; /* protect gpc code*/
    end
   /* Move default values to product type flag*/

    if (FY0CW01.XGPCD != " ")
      if (FY0CW01.XGPCD == "01")
        FY0CM002.FY1TYPFLG = "P";
      else
        if (FY0CW01.XGPCD == "02")
          FY0CM002.FY1TYPFLG = "F";
        else
          if (FY0CW01.XGPCD == "03")
            FY0CM002.FY1TYPFLG = "A";
          end
        end
      end
    end

  end

  FY0CM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  if (FY0CW01.FY0CWPSW == "Y") /* error message to display*/
    set FY0CM002 alarm; /* Indicate sound alarm*/
  end

  if (FY0CW01.FY0CWMFL == "Y") /* If add was successful*/
    converseLib.validationFailed(1); /* display a message*/
    FY0CW01.FY0CWCFL = "N"; /* Initialize conformation flag*/
    set FY0CM002 alarm; /* Indicate sound alarm*/
    FY0CM002.XXXPRCNM = "FY0C210"; /* Process name*/
    FY0CW01.FY0CWMFL = "N"; /* Reset message flag*/
  end

  converse FY0CM002 ;

  FY0CW01.FY0CWPSW = "N"; /* Reset problem switch*/

  if (converseVar.eventKey is enter)
    FY0C211();
  end

end // end FY0C210

// Check for ? inquiry by user
Function FY0C211()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0CM002.XGPCD == "?" /* if any ? entered*/
   || FY0CM002.XSTCD == "?" 
   || FY0CM002.XCTCD == "?" 
   || FY0CM002.XMCO == "?"  
   || FY0CM002.YABCD == "?" 
   || FY0CM002.YBCCD == "?")

    if (FY0CM002.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XGPCD = " "; /* clear fields*/
        FY0CM002.XGPDESC = " ";
      end
    end

    if (FY0CM002.XSTCD == "?") /* if ? in state code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 STATE    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXST01(); /* perform state code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XSTCD = XSTTBL.XSTCD[XX0XWPIX]; /* move code*/
        FY0CM002.XSTDESC = XSTTBL.XSTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XSTCD = " "; /* clear fields*/
        FY0CM002.XSTDESC = " ";
      end
    end

    if (FY0CM002.XCTCD == "?") /* if ? in country code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                COUNTRY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXCT01(); /* perform country code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
        FY0CM002.XCTDESC = XCTTBL.XCTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XCTCD = " "; /* clear fields*/
        FY0CM002.XCTDESC = " ";
      end
    end

    if (FY0CM002.XMCO == "?") /* if ? in mco*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                COUNTRY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXCT01(); /* perform country code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XMCO = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
        FY0CM002.XMCODESC = XCTTBL.XCTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XMCO = " "; /* clear fields*/
        FY0CM002.XMCODESC = " ";
      end
    end

    if (FY0CM002.YABCD == "?") /* if ? in advising bank code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        ADVISING BANK     "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYAB01(); /* perform adv. bnk code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.YABCD = YABTBL.YABCD[XX0XWPIX]; /* move code*/
        FY0CM002.YABSDESC = YABTBL.YABSDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.YABCD = " "; /* clear fields*/
        FY0CM002.YABSDESC = " ";
      end
    end

    if (FY0CM002.YBCCD == "?") /* if ? in book cond code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "      BOOKING CONDITIONS  "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYBC01(); /* perform book cond code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.YBCCD = YBCTBL.YBCCD[XX0XWPIX]; /* move code*/
        FY0CM002.YBCSDESC = YBCTBL.YBCSDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.YBCCD = " "; /* clear fields*/
        FY0CM002.YBCSDESC = " ";
      end
    end

    converseLib.clearScreen();
     /* restore the original map*/

  end

end // end FY0C211

// Check attention identifier
Function FY0C220()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FY0CM002 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0CM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0CM002.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    set FY0CM002.CATOAP cursor, modified, bold; /* Highlight*/
    FY0CM002.XXXPRCNM = "FY0C220"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0CW01.FY0CWMAP = "1"; /* Move to map 1*/
    if (FY0CW01.FY0CWLSF == "N")
      FY0CW01.FY0CWLSF = "Y"; /* Set list screen flag to yes*/
      FY0CW01.FY0CWSWR = "Y"; /* Set request for data to yes*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM002"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C220"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    FY0C111(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0CW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0A"; /* Exit to Factory Menu*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C220"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    FY0CM002.XXXPRCNM = "FY0C220"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C220

// Reset highlighted fields
Function FY0C230()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM002.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM002.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM002.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0CM002.TSCLOCCD initialAttributes; /* Location code*/
  set FY0CM002.XXX-ADDR1 initialAttributes; /* Street address*/
  set FY0CM002.XXX-ADDR2 initialAttributes; /* Street address*/
  set FY0CM002.XXX-ADDR3 initialAttributes; /* Street address*/
  set FY0CM002.XXXCITY initialAttributes; /* Street address*/
  set FY0CM002.XSTCD initialAttributes; /* State code*/
  set FY0CM002.XXXZIP initialAttributes; /* zip code*/
  set FY0CM002.XCTCD initialAttributes; /* country code*/
  set FY0CM002.XMCO initialAttributes; /* manufacturing country of orign*/
  set FY0CM002.FY1FCTPH initialAttributes; /* Phone number*/
  set FY0CM002.FY1FAX initialAttributes; /* Fax number*/
  set FY0CM002.FY1TELEX initialAttributes; /* Telex number*/
  set FY0CM002.FY1FCTRP initialAttributes; /* Representative*/
  set FY0CM002.FY1REPPH initialAttributes; /* Rep phone number*/
  set FY0CM002.FY1MGR initialAttributes; /* Commarea application data*/
  set FY0CM002.FY1FASST initialAttributes; /* Commarea application data*/
  set FY0CM002.FY1FRGN initialAttributes; /* Foreign flag*/
  set FY0CM002.FY6FOCD initialAttributes; /* Liaison/field office*/
  set FY0CM002.YABCD initialAttributes; /* Advising bank code*/
  set FY0CM002.YBCCD initialAttributes; /* Booking condition code*/
  set FY0CM002.FY-FCTY-MFG-CD initialAttributes; /* Factory manufacture code*/
  set FY0CM002.FY1DOWNB initialAttributes; /* Down time begin date*/
  set FY0CM002.FY1DOWNE initialAttributes; /* Down time ending date*/
  set FY0CM002.FY1PRTY initialAttributes; /* Factory priority*/
  set FY0CM002.FY1TYPFLG initialAttributes; /* Factory performance rating*/
  set FY0CM002.FY1MADD initialAttributes; /* Manufacturers adjustment days*/
  set FY0CM002.FY1REFPC initialAttributes; /* Refund percent*/
  set FY0CM002.FY1REFDT initialAttributes; /* Refund effective date*/
  set FY0CM002.FY1PRFPC initialAttributes; /* Previous refund percent*/
  set FY0CM002.FY1PRFDT initialAttributes; /* Previous refund effective date*/
  set FY0CM002.FY1CMNT1 initialAttributes; /* Comment line 1*/
  set FY0CM002.FY1CMNT2 initialAttributes; /* Comment line 2*/
  set FY0CM002.XXXSTAT initialAttributes; /* Status*/
  set FY0CM002.FY0CMSTD initialAttributes; /* Status description*/
  set FY0CM002.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM002.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C230

// Verify the entered data
Function FY0C240()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "N"; /* Initialize data entered flag*/

  if (FY0CM002.CAITEM > " ") /* Application data was entered*/
    set FY0CM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C240"; /* Process name*/
    exit stack;
  end

  if (converseVar.eventKey is enter /* If ENTER was pressed*/
   && FY0CM002.FY1FCTYC == " "      
   && FY0CM002.FY1FCTNM == " "      
   && FY0CM002.FY1FCTSN == " "      
   && FY0CM002.TSCLOCCD == " "      
   && FY0CM002.XXX-ADDR1 == " "     
   && FY0CM002.XXX-ADDR2 == " "     
   && FY0CM002.XXX-ADDR3 == " "     
   && FY0CM002.XXXCITY == " "       
   && FY0CM002.XSTCD == " "         
   && FY0CM002.XXXZIP == " "        
   && FY0CM002.XCTCD == " "         
   && FY0CM002.FY1FCTPH == " "      
   && FY0CM002.FY1FAX == " "        
   && FY0CM002.FY1TELEX == " "      
   && FY0CM002.FY1FCTRP == " "      
   && FY0CM002.FY1REPPH == " "      
   && FY0CM002.FY1MGR == " "        
   && FY0CM002.FY1FASST == " "      
   && FY0CM002.FY1FRGN == " "       
   && FY0CM002.FY6FOCD == " "       
   && FY0CM002.YABCD == " "         
   && FY0CM002.YBCCD == " "         
   && FY0CM002.FY-FCTY-MFG-CD == " "
   && FY0CM002.FY1DOWNB == " "      
   && FY0CM002.FY1DOWNE == " "      
   && FY0CM002.FY1PRTY == " "       
   && FY0CM002.FY1TYPFLG == " "     
   && FY0CM002.FY1MADD == " "       
   && FY0CM002.FY1REFPC == " "      
   && FY0CM002.FY1CMNT1 == " "      
   && FY0CM002.FY1CMNT2 == " "      
   && FY0CM002.XXXSTAT == " "       
   && FY0CM002.FY0CMSTD == " ")    
    exit stack; /* Exit to redisplay map*/
  else
    FY0C241(); /* Validate input data*/
  end

end // end FY0C240

// Validate any input data
Function FY0C241()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "Y"; /* Data has been entered*/

  if (FY0CM002.FY1FCTYC is numeric)
    converseLib.validationFailed(33); /* CHECK IF FCTY IS NUMERIC*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1FCTYC cursor, modified, bold; /* highlight field*/
  end
  if (FY0CM002.FY1FCTYC != " ") /* Check for equip factory*/
    FY0CW01.FY1FCTYC = FY0CM002.FY1FCTYC;
    if (FY0CM002.XGPCD == "02" && 
    FY0CW01.FY1FCTPR1 == "E" && 
    FY0CW01.FY1FCTPR2 != " " && 
    FY0CW01.FY1FCTPR3 != " ")
      FY0CW01.FY1EQPFLG = "Y"; /* Equipment Factory*/
      if (FY0CM002.FY1FCTYC is modified || 
      FY0CW01.FY0CWCFL == "N")
        converseLib.validationFailed(183); /* Conformation message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
        set FY0CM002.FY1FCTYC cursor;
      end
    else
      FY0CW01.FY1EQPFLG = "N"; /* Not Equipment Factory*/
    end
  end
   /* ------------------------------------------------------------*/
   /* VALIDATE THE REFUND DATE IF ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1REFDT > 0) /* if date entered*/
    FY0CS01();
  else
    FY0CW01.FY1REFDT = 0;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THAT THE REFUND HAS BEEN ENTERED IF THE PERCENT*/
   /* HAS BEEN ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1REFPC > 0 /* if percentage entered*/
   && FY0CM002.FY1REFDT == 0) /* and date not entered*/
    converseLib.validationFailed(62); /* Error message*/
    FY0CW01.FY0CWPSW = "Y"; /* indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1REFDT cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE REFUND PERCENT*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1REFPC > 100) /* If invalid refund percent*/
    converseLib.validationFailed(56); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1REFPC cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY DOWN TIMES.*/
   /* ------------------------------------------------------------*/

  FY0CS02();

   /* ------------------------------------------------------------*/
   /* VALIDATE THE SPECIAL CONDITION CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.YBCCD != " ") /* If special cond. code entered*/
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0CM002.YBCCD in YBCTBL.YBCCD /* Check valid code*/
     && YBCTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status is active*/
      FY0CM002.YBCSDESC = YBCTBL.YBCSDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(58); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.YBCCD cursor, modified, bold; /* highlight field*/
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY MANUFACTURE CODE( SSCC18 MFG CODE )*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XGPCD == "02") /* If Footwear manufacturing*/
    if (FY0CM002.FY-FCTY-MFG-CD == 0091201
    ) /* next sentence*/
    else
      converseLib.validationFailed(185); /* eror message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.FY-FCTY-MFG-CD cursor, modified, bold; /* highlight field*/
    end
  else
    if (FY0CM002.FY-FCTY-MFG-CD >= 0
     || FY0CM002.FY-FCTY-MFG-CD == " "
    )
    else /* SSCC18 MFG ID is not NUMERIC*/
      converseLib.validationFailed(186);
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241";
      set FY0CM002.FY-FCTY-MFG-CD cursor, modified, bold;
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE ADVISING BANK CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.YABCD != " ") /* If advising bank code entered*/
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0CM002.YABCD in YABTBL.YABCD /* Check valid code*/
     && YABTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Status is active*/
      FY0CM002.YABSDESC = YABTBL.YABSDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(59); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.YABCD cursor, modified, bold; /* highlight field*/
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE OFFSHORE FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1FRGN == "Y" /* If offshore flag entered*/
   || FY0CM002.FY1FRGN == "N") /* Check valid code*/
    /* next sentence*/
  else
    converseLib.validationFailed(47); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1FRGN cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE LIAISON/FIELD OFFICE CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY6FOCD != " ")
    FY6REC.XGPCD = FY0CM002.XGPCD;
    FY6REC.FY6FOCD = FY0CM002.FY6FOCD;
    FY0CS03(); /* validate liaison/field office*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (FY6REC.XXXSTAT == "A")
        FY0CM002.FY6FOCD = FY6REC.FY6FOCD;
        FY0CM002.FY6FOSDS = FY6REC.FY6FOSDS;
      else
        converseLib.validationFailed(18); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
        set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(18); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
        set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
      end
    end
  else
    converseLib.validationFailed(18); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE TRANSPORTATION LOCATION CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.TSCLOCCD != " ")
    TSCREC.TSCLOCCD = FY0CM002.TSCLOCCD;
    FY0CS04(); /* validate location code*/
    if (SQLCA.VAGen_SQLCODE == 100
     || TSCREC.XXXSTAT != "A")
      converseLib.validationFailed(46); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.TSCLOCCD cursor, modified, bold; /* highlight field*/
    end
  else
    converseLib.validationFailed(46); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.TSCLOCCD cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE COUNTRY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XCTCD != " ") /* check country code*/
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0CM002.XCTCD in XCTTBL.XCTCD /* Check valid code*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0CM002.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(25); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.XCTCD cursor, modified, bold; /* highlt fld*/
    end
  else
    converseLib.validationFailed(25); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.XCTCD cursor, modified, bold; /* highlt fld*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE MANUFACTURING COUNTRY OF ORIGN*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XMCO != " ") /* check mco code*/
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0CM002.XMCO in XCTTBL.XCTCD /* Check valid code*/
     && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0CM002.XMCODESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(25); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.XMCO cursor, modified, bold; /* highlt fld*/
    end
  else
    if (FY0CM002.XMCO == " ")
      sysVar.arrayIndex = 0;
      FY0CM002.XMCODESC = " ";
    /*ELSE;*/
      converseLib.validationFailed(25); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.XMCO cursor, modified, bold; /* highlt fld*/
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STATE CODE ONLY IF THE COUNTRY IS THE*/
   /* GOOD OLE U.S. OF A.*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XCTCD == "USA ") /* If USA state must be enter*/
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0CM002.XSTCD in XSTTBL.XSTCD /* Check valid code*/
     && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0CM002.XSTDESC = XSTTBL.XSTDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(24); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.XSTCD cursor, modified, bold; /* highlight fie*/
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE PRODUCT TYPE FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XCTCD == "JAPA") /* Check for Japan Local Factory*/
    if (FY0CM002.FY1TYPFLG == "AJ" || 
    FY0CM002.FY1TYPFLG == "EJ" || 
    FY0CM002.FY1TYPFLG == "FJ" || 
    FY0CM002.FY1TYPFLG == "PJ")
      /* CONTINUE*/
    else
      converseLib.validationFailed(188); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.FY1TYPFLG cursor, modified, bold;
    end
  end

  if (FY0CM002.FY1TYPFLG == "AJ" || 
  FY0CM002.FY1TYPFLG == "EJ" || 
  FY0CM002.FY1TYPFLG == "FJ" || 
  FY0CM002.FY1TYPFLG == "PJ")
    if (FY0CM002.XCTCD == "JAPA") /* Check for Japan Local Factory*/
         /* CONTINUE*/
    else
      converseLib.validationFailed(189); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.FY1TYPFLG cursor, modified, bold;
    end
  end

  if (FY0CM002.XGPCD == "01")
    if (FY0CM002.FY1TYPFLG == "P " || 
    FY0CM002.FY1TYPFLG == "PJ")
      FY0CW03.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG;
    else
      converseLib.validationFailed(187); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.FY1TYPFLG cursor, modified, bold;
    end
  end

  if (FY0CM002.XGPCD == "02")
    if (FY0CW01.FY1EQPFLG == "Y")
//Changes for CHG0111380
//    if (FY0CM002.FY1TYPFLG == "E ")
	  if (FY0CM002.FY1TYPFLG == "E "||
 		  FY0CM002.FY1TYPFLG == "EJ")   /* end Change for CHG0111380 */ 
        FY0CW03.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG;
      else
        converseLib.validationFailed(187); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
        set FY0CM002.FY1TYPFLG cursor, modified, bold;
      end
    else
//Changes for CHG0111380
//      if (FY0CM002.FY1TYPFLG == "EJ")
//        FY0CW03.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG;
//      else //End Changes for CHG0111380
        if (FY0CM002.FY1TYPFLG == "F " || 
        FY0CM002.FY1TYPFLG == "FJ")
          FY0CW03.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG;
        else
          converseLib.validationFailed(187); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
          set FY0CM002.FY1TYPFLG cursor, modified, bold;
        end
//      end //Changes for CHG0111380
    end
  end

  if (FY0CM002.XGPCD == "03")
    if (FY0CM002.FY1TYPFLG == "A " || 
    FY0CM002.FY1TYPFLG == "AJ" || 
    FY0CM002.FY1TYPFLG == "E ")

      FY0CW03.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG;
    else
      converseLib.validationFailed(187); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.FY1TYPFLG cursor, modified, bold;
    end
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT THE FACTORY PRIORITY IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XGPCD == "02" /* If footwear*/
   && FY0CM002.FY1PRTY == 0) /* If priority not entered*/
    converseLib.validationFailed(30); /* Display error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1PRTY cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT THE FACTORY SHORT NAME IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1FCTSN == " ") /* If short name not entered*/
    converseLib.validationFailed(60); /* Display error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1FCTSN cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT THE FACTORY NAME IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1FCTNM == " ") /* If name not entered*/
    converseLib.validationFailed(61); /* Display error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1FCTNM cursor, modified, bold; /* highlight field*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XGPCD != " ") /* check gpc code*/
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0CM002.XGPCD in XGPTBL.XGPCD /* Check valid code*/
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0CW01.XGPCD = FY0CM002.XGPCD; /* save in working storage*/
      COMMAREA.XGPCD = FY0CM002.XGPCD; /* save in commarea*/
      FY0CW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0CM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    else
      converseLib.validationFailed(101); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      set FY0CM002.XGPCD cursor, modified, bold; /* highlt fld*/
    end
  else
    converseLib.validationFailed(101); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.XGPCD cursor, modified, bold; /* highlt fld*/
  end

  if (FY0CM002.FY1FCTYC == " ") /* Check factory code*/
    converseLib.validationFailed(33); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY1FCTYC cursor, modified, bold; /* highlight field*/
  end

  if (FY0CM002.FY0CM-FCTY-NBR-FL != "Y" /* Factory nbr flag*/
   && FY0CM002.FY0CM-FCTY-NBR-FL != "N")
    converseLib.validationFailed(47); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
    set FY0CM002.FY0CM-FCTY-NBR-FL cursor, modified, bold;
  else
    FY0CW01.FY0CM-FCTY-NBR-FL = FY0CM002.FY0CM-FCTY-NBR-FL;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STATUS CODE*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.XXXSTAT == "A") /* If status is active*/
    FY0CM002.FY0CMSTD = "ACTIVE"; /* Move active literal*/
  else

    if (FY0CM002.XXXSTAT == "I") /* If status is inactive*/
      FY0CM002.FY0CMSTD = "INACTIVE"; /* Move inactive literal*/
    else
      set FY0CM002.XXXSTAT cursor, modified, bold; /* highlight field*/
      converseLib.validationFailed(54); /* Status is missing or invalid*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
      FY0CM002.FY0CMSTD = " "; /* Reset desc field*/
    end

  end

   /* the following if statement must be at end of all validations*/

  if (converseVar.validationMsgNum == 183)
    FY0CW01.FY0CWCFL = "Y"; /* Conformation flag*/
  else
    FY0CW01.FY0CWCFL = "N";
  end

end // end FY0C241

// Process valid input request
Function FY0C250()
   /* ------------------------------------------------------------*/
   /* Verify that no table row exists for the location.*/
   /* If found then display message that this row exists in*/
     /* either active or inactive status.*/
   /* If not found then add the row.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWDEF == "Y" /* and data was entered*/
   && converseVar.validationMsgNum == 0) /* and no errors*/

    set VFCTY003 empty; /* clear record*/
    FY0CW01.FY0CWSGP = FY0CM002.XGPCD; /* Save gpc code*/
    VFCTY003.FY1FCTYC = FY0CM002.FY1FCTYC; /* factory code*/
  /* MOVE FY0CM002.XGPCD TO VFCTY003.XGPCD;*/
    FY0C251(); /* Select unique factory row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* If no errors*/

      if (FY0CM002.XGPCD == VFCTY003.XGPCD)
        if (VFCTY003.XXXSTAT == "A") /* Row exists in active status*/
          converseLib.validationFailed(64);
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C250"; /* Process name*/
          set FY0CM002.FY1FCTYC cursor, modified, bold; /* Set cursor*/
        else
          converseLib.validationFailed(66);
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C250"; /* Process name*/
          set FY0CM002.FY1FCTYC cursor, modified, bold; /* Set cursor*/
        end
      else
        converseLib.validationFailed(86);
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C250"; /* Process name*/
        set FY0CM002.FY1FCTYC cursor, modified, bold; /* Set cursor*/
      end
    else

      if (SQLCA.VAGen_SQLCODE == -811)
        converseLib.validationFailed(86);
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C250"; /* Process name*/
        set FY0CM002.FY1FCTYC cursor, modified, bold; /* Set cursor*/
      end
    end
  /* IF SQLCA.SQLCODE EQ 100;     /* If no errors*/
  /* IF FY0CW01.FY0CWSGP EQ '02';/* If footwear*/
  /* MOVE '03' TO VFCTY003.XGPCD;/* Try again for apparel*/
  /* PERFORM FY0C251;         /* Select unique factory row*/
  /* IF SQLCA.SQLCODE EQ 0;   /* If no errors*/
  /* MOVE 86 TO EZEMNO;*/
  /* MOVE 'Y' TO FY0CW01.FY0CWPSW;/* Indicate problem*/
  /* MOVE 'FY0C250' TO FY0CM002.XXXPRCNM;/* Process name*/
  /* SET FY0CM002.FY1FCTYC CURSOR,MODIFIED,BRIGHT;/* Set cursor*/
  /* END;*/
  /* ELSE;*/
  /* IF FY0CW01.FY0CWSGP EQ '03';/* If apparel*/
  /* MOVE '02' TO VFCTY003.XGPCD;/* Try again for footwear*/
  /* PERFORM FY0C251;       /* Select unique factory row*/
  /* IF SQLCA.SQLCODE EQ 0; /* If no errors*/
  /* MOVE 86 TO EZEMNO;*/
  /* MOVE 'Y' TO FY0CW01.FY0CWPSW;/* Indicate problem*/
  /* MOVE 'FY0C250' TO FY0CM002.XXXPRCNM;/* Process name*/
  /* SET FY0CM002.FY1FCTYC CURSOR,MODIFIED,BRIGHT;/* Set cursor*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* END;*/

    VFCTY003.XGPCD = FY0CW01.FY0CWSGP; /* Restore gpc code*/

    if (FY0CW01.FY0CWPSW == "N") /* No errors exist*/
      FY0C254(); /* Setup fy1rec*/
      /* IF FY0CW01.FY0CM-FCTY-NBR-FL EQ 'Y';*/
       /* IF FY0CW01.FY0CWSGP EQ '02';/* If apparel*/
         /* OR FY0CW01.FY0CWSGP EQ '03';/* If apparel*/
         /* PERFORM FY0C255;         /* Select factory number*/
         /* FY1REC.FY-FCTY-NBR = FY1REC.FY-FCTY-NBR + 1;*/
         /* MOVE FY1REC.FY-FCTY-NBR TO FY0CM002.FY-FCTY-NBR;*/
       /* END;*/
      /* END;*/
      FY0CW03.FY0CWGRP = VFCTY003.VFCTY003-GROUP; /* Save in w.s.*/
      FY0CW01.FY0CWMAP = "3";
    end
  end

end // end FY0C250

// Select unique row
Function FY0C251()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("SA", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0   /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100 /* Row not found*/
   || SQLCA.VAGen_SQLCODE == -811) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C251"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/
    TA1REC.TA1TBLKE = VFCTY003.VFCTY003-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C251"; /* Process name*/
    if (FY0CW01.FY0CWLSF == "Y")
      FY0CW01.FY0CWMAP = "1"; /* Set map to 1*/
    else
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    end
    exit stack;

  end

end // end FY0C251

// Set up fy1rec for add
Function FY0C254()
   /* ------------------------------------------------------------*/
   /* This module sets up the factory table row.*/
   /* ------------------------------------------------------------*/

  VFCTY003.FY1FCTYC = FY0CM002.FY1FCTYC; /* Factory code*/
  VFCTY003.FY1FCTNM = FY0CM002.FY1FCTNM; /* Factory name*/
  VFCTY003.FY1FCTSN = FY0CM002.FY1FCTSN; /* Factory short name*/
  VFCTY003.TSCLOCCD = FY0CM002.TSCLOCCD; /* Location code*/
  VFCTY003.XXX-ADDR1 = FY0CM002.XXX-ADDR1; /* Street address*/
  VFCTY003.XXX-ADDR2 = FY0CM002.XXX-ADDR2; /* Street address*/
  VFCTY003.XXX-ADDR3 = FY0CM002.XXX-ADDR3; /* Street address*/
  VFCTY003.XXXCITY = FY0CM002.XXXCITY; /* Street address*/
  VFCTY003.XSTCD = FY0CM002.XSTCD; /* State code*/
  VFCTY003.XXXZIP = FY0CM002.XXXZIP; /* zip code*/
  VFCTY003.XCTCD = FY0CM002.XCTCD; /* country code*/
  VFCTY003.PC-XCT-ORIG-CD = FY0CM002.XMCO; /* mco code*/
  VFCTY003.FY1FCTPH = FY0CM002.FY1FCTPH; /* Phone number*/
  VFCTY003.FY1FAX = FY0CM002.FY1FAX; /* Fax number*/
  VFCTY003.FY1TELEX = FY0CM002.FY1TELEX; /* Telex number*/
  VFCTY003.FY1FCTRP = FY0CM002.FY1FCTRP; /* Representative*/
  VFCTY003.FY1REPPH = FY0CM002.FY1REPPH; /* Rep phone number*/
  VFCTY003.FY1MGR = FY0CM002.FY1MGR; /* Commarea application data*/
  VFCTY003.FY1FASST = FY0CM002.FY1FASST; /* Commarea application data*/
  VFCTY003.FY1FRGN = FY0CM002.FY1FRGN; /* Foreign flag*/
  VFCTY003.FY6FOCD = FY0CM002.FY6FOCD; /* Liaison/field office*/
  VFCTY003.YABCD = FY0CM002.YABCD; /* Advising bank code*/
  VFCTY003.YBCCD = FY0CM002.YBCCD; /* Booking condition code*/
  VFCTY003.FY-FCTY-MFG-CD = FY0CM002.FY-FCTY-MFG-CD; /* Fact. manf.cd*/
  VFCTY003.FY1DOWNB = FY0CW01.FY1DOWNB; /* Down time begin date*/
  VFCTY003.FY1DOWNE = FY0CW01.FY1DOWNE; /* Down time ending date*/
  VFCTY003.FY1PRTY = FY0CM002.FY1PRTY; /* Factory priority*/
  VFCTY003.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG; /* factory type code*/
  VFCTY003.FY1MADD = FY0CM002.FY1MADD;
                                   /* Manufacturers adjustment days*/
  VFCTY003.FY1REFPC = FY0CM002.FY1REFPC; /* Refund percent*/
  VFCTY003.FY1REFDT = FY0CW01.FY1REFDT; /* Refund effective date*/
  VFCTY003.FY1PRFPC = 0; /* Init prev pct to zero*/
  VFCTY003.FY1PRFDT = 0; /* Init. prev refund date to zero*/
  VFCTY003.FY-FCTY-NBR = 0; /* Init. factory number*/
  VFCTY003.FY-PC-BAR-CD-FL = "N"; /* Init. Bar code flag*/
  VFCTY003.FY1CMNT1 = FY0CM002.FY1CMNT1; /* Comment line 1*/
  VFCTY003.FY1CMNT2 = FY0CM002.FY1CMNT2; /* Comment line 2*/
  VFCTY003.XXXSTAT = FY0CM002.XXXSTAT; /* Status*/

end // end FY0C254

// Select Max(fy-fcty-nbr)
Function FY0C255()
   /* ------------------------------------------------------------*/
   /* Select the maximum factory number for the gpc code passed in*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("SM", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C255"; /* Process name*/
    TA1REC.TA1LOC = "SELECT MAX FACTORY NBR";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/
    TA1REC.TA1TBLKE = VFCTY003.VFCTY003-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C255"; /* Process name*/
    if (FY0CW01.FY0CWLSF == "Y")
      FY0CW01.FY0CWMAP = "1"; /* Set map to 1*/
    else
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    end
    exit stack;

  end

end // end FY0C255

// Factory maintence inquiry map
Function FY0C300()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "N") /* No errors*/
    FY0C310(); /* Obtain the data to display*/
  end

  FY0C320(); /* Format and display the map*/

  FY0C330(); /* Check attention identifier*/

  FY0C340(); /* Reset fields to normal intensity*/

  FY0C350(); /* Verify the entered data*/

  FY0C360(); /* Process valid input request*/

end // end FY0C300

// Obtain data to display
Function FY0C310()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on delete map from selected*/
     /* row on location inquiry map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf10)
    if (FY0CW01.FY0CWLSF == "Y")
      set VFCTY003 empty;
      VFCTY003.XGPCD = FY0CM001.XGPCD; /* Gpc code*/
      VFCTY003.FY1FCTYC = FY0CM001.FY0CMFCD[FY0CWIXM]; /* factory code*/
      FY0C311(); /* Select data for map*/
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(69);
        FY0CW01.FY0CWPSW = "Y"; /* Set error flag to yes*/
      end
    else
      if (FY0CW01.FY0CWSWR == "Y") /* request for data is yes*/
        set VFCTY003 empty;
        VFCTY003.XGPCD = FY0CM002.XGPCD; /* Gpc code*/
        VFCTY003.FY1FCTYC = FY0CM002.FY1FCTYC; /* factory code*/
        FY0C311(); /* Select data for map*/
        if (SQLCA.VAGen_SQLCODE == 100)
          converseLib.validationFailed(21);
          FY0CW01.FY0CWPSW = "Y"; /* Set error flag to yes*/
        end
      end
    end
  end

end // end FY0C310

// Select unique row
Function FY0C311()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("S ", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C311"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/
    TA1REC.TA1TBLKE = VFCTY003.VFCTY003-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C311"; /* Process name*/
    if (FY0CW01.FY0CWLSF == "Y")
      FY0CW01.FY0CWMAP = "1"; /* Set map to 1*/
    else
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    end
    exit stack;

  end

end // end FY0C311

// Format and display the map
Function FY0C320()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 21 /* Factory not found*/
   || converseVar.validationMsgNum == 69) /* Factory deleted*/

    FY0CW01.FY1FCTYC = FY0CM002.FY1FCTYC; /* Save factory code*/
    set FY0CM002 initial; /* Clear map output area*/
    set VFCTY003 empty; /* Clear factory record*/
    FY0CM002.FY1FCTYC = FY0CW01.FY1FCTYC; /* Restore factory code*/
    set FY0CM002.FY1FCTYC cursor, bold; /* Highlight factory code*/
    FY0CW01.FY1FCTYC = " "; /* Blank out saved factory code*/
    FY0CM002.FY0CMFUN = "INQUIRY"; /* Move inquiry literal to map*/
    FY0CM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    FY0CM002.XGPCD = FY0CW01.XGPCD; /* Move gpc code*/
    if (FY0CW01.XGPCD > " ")
      if (FY0CW01.XGPCD in XGPTBL.XGPCD)
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      FY0CW01.XGPDESC = FY0CM002.XGPDESC;
    end
  end

  if (FY0CW01.FY0CWPSW == "N") /* No error*/
    set FY0CM002 initial; /* Clear map output area*/

    FY0CM002.FY0CMFUN = "INQUIRY"; /* Move inquiry literal to map*/
    FY0CM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    FY0CM002.XGPCD = FY0CW01.XGPCD; /* Move gpc code*/
    if (FY0CW01.XGPCD > " ")
      if (FY0CW01.XGPCD in XGPTBL.XGPCD)
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
      FY0CW01.XGPDESC = FY0CM002.XGPDESC;
    end

    if (FY0CW01.FY0CWLSF == "Y") /* Came from list screen*/
      FY0C321(); /* Move fields to map*/
    else
      if (FY0CW01.FY0CWLSF == "N" /* Did not Come from list screen*/
       && FY0CW01.FY0CWSWR == "Y") /* and request for data set*/
        FY0C321(); /* Move fields to map*/
      end
    end
  end

  if (FY0CW01.FY0CWLSF == "Y")
    set FY0CM002.XGPCD protect; /* Gpc code*/
    set FY0CM002.FY1FCTYC protect; /* Factory code*/
    if (FY0CW01.FY0CWPSW == "N")
      set FY0CM002.CATOAP cursor; /* Set cursor*/
    end
  else
    if (FY0CW01.FY0CWPSW == "N")
      set FY0CM002.FY1FCTYC cursor; /* Set cursor to Factory code*/
    end
  end

  set FY0CM002.FY1FCTNM protect; /* Factory short name*/
  set FY0CM002.FY1FCTSN protect; /* Factory short name*/
  set FY0CM002.TSCLOCCD protect; /* Location code*/
  set FY0CM002.XXXSTAT protect; /* Status*/
  set FY0CM002.XXX-ADDR1 protect; /* Street address*/
  set FY0CM002.XXX-ADDR2 protect; /* Street address*/
  set FY0CM002.XXX-ADDR3 protect; /* Street address*/
  set FY0CM002.XXXCITY protect; /* Street address*/
  set FY0CM002.XSTCD protect; /* State code*/
  set FY0CM002.XXXZIP protect; /* zip code*/
  set FY0CM002.XCTCD protect; /* country code*/
  set FY0CM002.XMCO protect; /* manufacturing country of orign*/
  set FY0CM002.FY1FCTPH protect; /* Phone number*/
  set FY0CM002.FY1FAX protect; /* Fax number*/
  set FY0CM002.FY1TELEX protect; /* Telex number*/
  set FY0CM002.FY1FCTRP protect; /* Representative*/
  set FY0CM002.FY1REPPH protect; /* Rep phone number*/
  set FY0CM002.FY1MGR protect; /* Commarea application data*/
  set FY0CM002.FY1FASST protect; /* Commarea application data*/
  set FY0CM002.FY1FRGN protect; /* Foreign flag*/
  set FY0CM002.FY6FOCD protect; /* Liaison/field office*/
  set FY0CM002.YABCD protect; /* Advising bank code*/
  set FY0CM002.YBCCD protect; /* Booking condition code*/
  set FY0CM002.FY-FCTY-MFG-CD protect; /* Factory manufacture code*/
  set FY0CM002.FY1DOWNB protect; /* Down time begin date*/
  set FY0CM002.FY1DOWNE protect; /* Down time ending date*/
  set FY0CM002.FY1PRTY protect; /* Factory priority*/
  set FY0CM002.FY1TYPFLG protect; /* Product Type Flag*/
  set FY0CM002.FY1MADD protect; /* Manufacturers adjustment days*/
  set FY0CM002.FY1REFPC protect; /* Refund percent*/
  set FY0CM002.FY1REFDT protect; /* Refund effective date*/
  set FY0CM002.FY1PRFPC protect; /* Previous refund percent*/
  set FY0CM002.FY1PRFDT protect; /* Previous refund effective date*/
  set FY0CM002.FY1CMNT1 protect; /* Comment line 1*/
  set FY0CM002.FY1CMNT2 protect; /* Comment line 2*/
  set FY0CM002.FY0CMRGT protect; /* Set pf11 to normal intensity*/
  set FY0CM002.FY0CM-FCTY-NBR-FL skip; /* Factory nbr flab*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0CM002 alarm;
  end

  converse FY0CM002 ;

  FY0CW01.FY0CWPSW = "N"; /* Initialize problem switch*/

  if (converseVar.eventKey is enter)
    FY0C322(); /* Check for ? inquiry by user*/
  end

end // end FY0C320

// Move fields to map
Function FY0C321()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY0CM002.FY1FCTYC = VFCTY003.FY1FCTYC; /* Move selected fields*/
  FY0CM002.FY1FCTNM = VFCTY003.FY1FCTNM; /* to map*/
  FY0CM002.FY1FCTSN = VFCTY003.FY1FCTSN; /* to map*/
  FY0CM002.TSCLOCCD = VFCTY003.TSCLOCCD; /* Location code*/
  FY0CM002.XXX-ADDR1 = VFCTY003.XXX-ADDR1; /* Street address*/
  FY0CM002.XXX-ADDR2 = VFCTY003.XXX-ADDR2; /* Street address*/
  FY0CM002.XXX-ADDR3 = VFCTY003.XXX-ADDR3; /* Street address*/
  FY0CM002.XXXCITY = VFCTY003.XXXCITY; /* Street address*/
  FY0CM002.XSTCD = VFCTY003.XSTCD; /* State code*/
  if (VFCTY003.XSTCD != " ")
    if (VFCTY003.XSTCD in XSTTBL.XSTCD)
      FY0CM002.XSTDESC = XSTTBL.XSTDESC[sysVar.arrayIndex];
    end
  end
  FY0CM002.XXXZIP = VFCTY003.XXXZIP; /* zip code*/
  FY0CM002.XCTCD = VFCTY003.XCTCD; /* country code*/
  if (VFCTY003.XCTCD != " ")
    if (VFCTY003.XCTCD in XCTTBL.XCTCD)
      FY0CM002.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
  end
  FY0CM002.XMCO = VFCTY003.PC-XCT-ORIG-CD; /* mco code*/
  if (VFCTY003.PC-XCT-ORIG-CD != " ")
    if (VFCTY003.PC-XCT-ORIG-CD in XCTTBL.XCTCD)
      FY0CM002.XMCODESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
  end
  FY0CM002.FY1FCTPH = VFCTY003.FY1FCTPH; /* Phone number*/
  FY0CM002.FY1FAX = VFCTY003.FY1FAX; /* Fax number*/
  FY0CM002.FY1TELEX = VFCTY003.FY1TELEX; /* Telex number*/
  FY0CM002.FY1FCTRP = VFCTY003.FY1FCTRP; /* Representative*/
  FY0CM002.FY1REPPH = VFCTY003.FY1REPPH; /* Rep phone number*/
  FY0CM002.FY1MGR = VFCTY003.FY1MGR; /* Factory manager*/
  FY0CM002.FY1FASST = VFCTY003.FY1FASST; /* Assistant manager*/
  FY0CM002.FY1FRGN = VFCTY003.FY1FRGN; /* Foreign flag*/
  FY0CM002.FY6FOCD = VFCTY003.FY6FOCD; /* Liaison/field office*/
  if (VFCTY003.FY6FOCD != " ")
    FY6REC.XGPCD = VFCTY003.XGPCD; /* Move selected fields*/
    FY6REC.FY6FOCD = VFCTY003.FY6FOCD; /* Liaison/field office*/
    FY0CS03();
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0CM002.FY6FOSDS = FY6REC.FY6FOSDS; /* Lsn/fld off shrt nm*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0CM002.FY6FOSDS = "UNKNOWN"; /* Lsn/fld off shrt nm*/
      end
    end
  end

  FY0CM002.YABCD = VFCTY003.YABCD; /* Advising bank code*/
  if (VFCTY003.YABCD != " ")
    if (VFCTY003.YABCD in YABTBL.YABCD)
      FY0CM002.YABSDESC = YABTBL.YABSDESC[sysVar.arrayIndex];
    end
  end

  FY0CM002.YBCCD = VFCTY003.YBCCD; /* Booking condition code*/
  if (VFCTY003.YBCCD != " ")
    if (VFCTY003.YBCCD in YBCTBL.YBCCD)
      FY0CM002.YBCSDESC = YBCTBL.YBCSDESC[sysVar.arrayIndex];
    end
  end

  FY0CM002.FY-FCTY-MFG-CD = VFCTY003.FY-FCTY-MFG-CD; /* Fact.Manf.Code*/

  if (VFCTY003.FY1DOWNB != 0) /* Down time begin date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1DOWNB; /* Working date*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1DOWNB = FY0CW01.FY0CWCDT; /* Year*/
  end

  if (VFCTY003.FY1DOWNE != 0) /* Down time ending date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1DOWNE; /* Working date*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1DOWNE = FY0CW01.FY0CWCDT; /* Year*/
  end

  FY0CM002.FY1PRTY = VFCTY003.FY1PRTY; /* Factory priority*/
  FY0CM002.FY1TYPFLG = VFCTY003.FY-FCTY-TYP-CD; /* Product type flag*/
  FY0CM002.FY1MADD = VFCTY003.FY1MADD; /* Manufacturers adj. days*/
  FY0CM002.FY1REFPC = VFCTY003.FY1REFPC; /* Refund percent*/

  if (VFCTY003.FY1REFDT != 0) /* Refund date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1REFDT; /* Working date*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1REFDT = FY0CW01.FY0CWCDT; /* Year*/
  end

  FY0CM002.FY1PRFPC = VFCTY003.FY1PRFPC; /* Previous refund percent*/

  if (VFCTY003.FY1PRFDT != 0) /* Previous refund date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1PRFDT; /* Working date*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1PRFDT = FY0CW01.FY0CWCDT; /* Year*/
  end

  FY0CM002.FY1CMNT1 = VFCTY003.FY1CMNT1; /* Comment line 1*/
  FY0CM002.FY1CMNT2 = VFCTY003.FY1CMNT2; /* Comment line 2*/
  FY0CM002.XXXSTAT = VFCTY003.XXXSTAT; /* Status*/

  if (VFCTY003.XXXSTAT == "A") /* Active-inactive literals*/
    FY0CM002.FY0CMSTD = "ACTIVE";
  else
    if (VFCTY003.XXXSTAT == "I") /* Active-inactive literals*/
      FY0CM002.FY0CMSTD = "INACTIVE";
    else
      if (VFCTY003.XXXSTAT == " ") /* Active-inactive literals*/
        FY0CM002.FY0CMSTD = " ";
      else
        FY0CM002.FY0CMSTD = "UNKNOWN";
      end
    end
  end

  if (VFCTY003.FY-FCTY-NBR == 0) /* Factory number*/
    FY0CM002.FY0CM-FCTY-NBR-FL = "N";
  else
    FY0CM002.FY0CM-FCTY-NBR-FL = "Y";
  end

  FY0CM002.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR;

end // end FY0C321

// Check for ? inquiry by user
Function FY0C322()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0CM002.XGPCD == "?") /* if any ? entered*/

    if (FY0CM002.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XGPCD = " "; /* clear fields*/
        FY0CM002.XGPDESC = " ";
      end
    end

    converseLib.clearScreen();
     /* restore the original map*/

  end

end // end FY0C322

// Check attention identifier
Function FY0C330()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FY0CM002 initial; /* Clear the map fields*/
    if (FY0CW01.FY0CWLSF == "N")
      FY0CM002.FY1FCTYC = VFCTY003.FY1FCTYC; /* Replace factory code*/
      FY0CM002.XGPCD = VFCTY003.XGPCD; /* Replace gpc code*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0CM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0CM002.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    set FY0CM002.CATOAP cursor, bold; /* Highlight*/
    FY0CM002.XXXPRCNM = "FY0C330"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0CW01.FY0CWMAP = "1"; /* Move to map 1*/
    if (FY0CWLSF == "N")
      FY0CW01.FY0CWLSF = "Y";
      FY0CW01.FY0CWSWR = "Y";
    else
      FY0CW01.FY0CWSWR = "N";
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM002"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C330"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0CW01.XGPCD; /* Gpc code*/
    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C330"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter /* ENTER was pressed*/
   || converseVar.eventKey is pf11) /* PF11 was pressed*/
     /* next sentence*/
  else
    FY0CM002.XXXPRCNM = "FY0C330"; /* Process name*/
    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C330

// Reset highlighted fields
Function FY0C340()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM002.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM002.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM002.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0CM002.TSCLOCCD initialAttributes; /* Location code*/
  set FY0CM002.XXX-ADDR1 initialAttributes; /* Street address*/
  set FY0CM002.XXX-ADDR2 initialAttributes; /* Street address*/
  set FY0CM002.XXX-ADDR3 initialAttributes; /* Street address*/
  set FY0CM002.XXXCITY initialAttributes; /* Street address*/
  set FY0CM002.XSTCD initialAttributes; /* State code*/
  set FY0CM002.XXXZIP initialAttributes; /* zip code*/
  set FY0CM002.XCTCD initialAttributes; /* country code*/
  set FY0CM002.XMCO initialAttributes; /* manufacturing country of orign*/
  set FY0CM002.FY1FCTPH initialAttributes; /* Phone number*/
  set FY0CM002.FY1FAX initialAttributes; /* Fax number*/
  set FY0CM002.FY1TELEX initialAttributes; /* Telex number*/
  set FY0CM002.FY1FCTRP initialAttributes; /* Representative*/
  set FY0CM002.FY1REPPH initialAttributes; /* Rep phone number*/
  set FY0CM002.FY1MGR initialAttributes; /* Commarea application data*/
  set FY0CM002.FY1FASST initialAttributes; /* Commarea application data*/
  set FY0CM002.FY1FRGN initialAttributes; /* Foreign flag*/
  set FY0CM002.FY6FOCD initialAttributes; /* Liaison/field office*/
  set FY0CM002.YABCD initialAttributes; /* Advising bank code*/
  set FY0CM002.YBCCD initialAttributes; /* Booking condition code*/
  set FY0CM002.FY-FCTY-MFG-CD initialAttributes; /* Factory manufacture code*/
  set FY0CM002.FY1DOWNB initialAttributes; /* Down time begin date*/
  set FY0CM002.FY1DOWNE initialAttributes; /* Down time ending date*/
  set FY0CM002.FY1PRTY initialAttributes; /* Factory priority*/
  set FY0CM002.FY1TYPFLG initialAttributes; /* Product type flag*/
  set FY0CM002.FY1MADD initialAttributes; /* Manufacturers adjustment days*/
  set FY0CM002.FY1REFPC initialAttributes; /* Refund percent*/
  set FY0CM002.FY1REFDT initialAttributes; /* Refund effective date*/
  set FY0CM002.FY1PRFPC initialAttributes; /* Previous refund percent*/
  set FY0CM002.FY1PRFDT initialAttributes; /* Previous refund effective date*/
  set FY0CM002.FY1CMNT1 initialAttributes; /* Comment line 1*/
  set FY0CM002.FY1CMNT2 initialAttributes; /* Comment line 2*/
  set FY0CM002.XXXSTAT initialAttributes; /* Status*/
  set FY0CM002.FY0CMSTD initialAttributes; /* Status description*/
  set FY0CM002.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM002.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C340

// Verify the entered data
Function FY0C350()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "N"; /* Initialize data entered flag*/

  if (FY0CM002.CAITEM > " ") /* Application data was entered*/
    set FY0CM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C350"; /* Process name*/
    exit stack;
  end

  if (FY0CW01.FY0CWLSF == "Y") /* If came from list screen*/
     /* next sentence*/
  else
    FY0C351(); /* Validate input data*/
  end

end // end FY0C350

// Validate any input data
Function FY0C351()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "Y"; /* Data has been entered*/

   /* -------- DONT ALLOW PF11 IF KEY FIELDS HAVE CHANGED -------*/

  if (converseVar.eventKey is pf11) /* PF11 was pressed*/
    if (FY0CM002.XGPCD == VFCTY003.XGPCD /* And no data changed*/
     && FY0CM002.FY1FCTYC == VFCTY003.FY1FCTYC)
       /* next sentence*/
    else
      converseLib.validationFailed(68); /* Set data cannot be changed msg.*/
      FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
      if (VFCTY003.XGPCD != " ") /* Has data prev. been requested*/
        FY0CM002.XGPCD = VFCTY003.XGPCD; /* Replace gpc code*/
      end
      if (VFCTY003.FY1FCTYC != " ") /* Has data prev. been requested*/
        FY0CM002.FY1FCTYC = VFCTY003.FY1FCTYC; /* and factory code*/
      end
      set FY0CM002.FY1FCTYC cursor; /* Set cursor to factory code*/
    end
  end

   /* -------------- CHECK GPC CODE -----------------*/

  if (FY0CM002.XGPCD > " ") /* Check GPC code*/
    sysVar.arrayIndex = 0;
    if (FY0CM002.XGPCD in XGPTBL.XGPCD /* Is it in the table*/
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A") /* Is it active*/
      COMMAREA.XGPCD = FY0CM002.XGPCD; /* Save in commarea*/
      FY0CW01.XGPCD = FY0CM002.XGPCD; /* Save gpc code*/
    else
      converseLib.validationFailed(101); /* Display error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C551"; /* Process name*/
      FY0CW01.XGPDESC = " "; /* Clear description field*/
      FY0CM002.XGPDESC = " "; /* Clear description field*/
      set FY0CM002.XGPCD cursor, modified, bold; /* highlight field*/
    end
  else
    converseLib.validationFailed(101); /* Display error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C551"; /* Process name*/
    FY0CW01.XGPDESC = " "; /* Clear description field*/
    FY0CM002.XGPDESC = " "; /* Clear description field*/
    set FY0CM002.XGPCD cursor, modified, bold; /* highlight field*/
  end

   /* -------------- CHECK FACTORY CODE -----------------*/

  if (FY0CM002.FY1FCTYC > " ") /* Check factory code*/
     /* next sentence*/
  else
    converseLib.validationFailed(33); /* Display error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C351"; /* Process name*/
    set FY0CM002.FY1FCTYC cursor, bold; /* highlight field*/
  end

end // end FY0C351

// Process valid input request
Function FY0C360()
   /* ------------------------------------------------------------*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "Y") /* Error flag set*/
    exit stack;
  end

  FY0CW01.FY0CWSKY = FY0CM002.FY1FCTYC; /* Save key*/
  if (converseVar.eventKey is enter)
    if (FY0CW01.FY0CWLSF == "Y") /* and came from list screen*/
      FY0CM001.FY0CMSEL[FY0CWIXM] = " "; /* Clear selection field*/
    else
      FY0CW01.FY0CWSWR = "Y"; /* Set data switch to yes*/
    end
  else
    if (converseVar.eventKey is pf11) /* PF11 is pressed*/
      FY0CW01.FY0CWMAP = "3";
      exit stack;
    end
  end

end // end FY0C360

// Factory Main. change map
Function FY0C400()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "N") /* No errors occured*/
    FY0C410(); /* Obtain the data to display*/
  end

  FY0C420(); /* Format and display the map*/

  FY0C430(); /* Check attention identifier*/

  FY0C440(); /* Reset Highlighted fields*/

  FY0C450(); /* Verify the entered data*/

  FY0C460(); /* Process valid input request*/

end // end FY0C400

// Obtain the data to display
Function FY0C410()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on change map.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf10) /* Come from right screen?*/
    if (FY0CW01.FY0CWLSF == "Y")
      set VFCTY003 empty;
      set FY0CW03 empty;
      VFCTY003.XGPCD = FY0CM001.XGPCD; /* Gpc code*/
      VFCTY003.FY1FCTYC = FY0CM001.FY0CMFCD[FY0CWIXM]; /* factory code*/
      FY0C411(); /* Select data for map*/
      if (SQLCA.VAGen_SQLCODE == 0)
        FY0CW03.FY0CWGRP = VFCTY003.VFCTY003-GROUP;
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          converseLib.validationFailed(69);
          FY0CW01.FY0CWPSW = "Y"; /* Set error flag to yes*/
        end
      end
    else
      if (FY0CW01.FY0CWSWR == "Y") /* request for data is yes*/
        set VFCTY003 empty;
        set FY0CW03 empty;
        VFCTY003.XGPCD = FY0CM002.XGPCD; /* Gpc code*/
        VFCTY003.FY1FCTYC = FY0CM002.FY1FCTYC; /* factory code*/
        FY0C411(); /* Select data for map*/
        if (SQLCA.VAGen_SQLCODE == 0) /* No errors*/
          FY0CW03.FY0CWGRP = VFCTY003.VFCTY003-GROUP;
        else
          if (SQLCA.VAGen_SQLCODE == 100)
            converseLib.validationFailed(21);
            FY0CW01.FY0CWPSW = "Y"; /* Set error flag to yes*/
          end
        end
      end
    end
  end

end // end FY0C410

// Select unique row
Function FY0C411()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("S ", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C411"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/
    TA1REC.TA1TBLKE = VFCTY003.VFCTY003-KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C411"; /* Process name*/
    if (FY0CW01.FY0CWLSF == "Y")
      FY0CW01.FY0CWMAP = "1"; /* Set map to 1*/
    else
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    end
    exit stack;

  end

end // end FY0C411

// Format and display the map
Function FY0C420()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 21 /* Factory not found*/
   || converseVar.validationMsgNum == 69) /* or the factory was deleted*/
    FY0CW01.FY1FCTYC = FY0CM002.FY1FCTYC;
    set FY0CM002 initial; /* Clear map output area*/
    set VFCTY003 empty; /* Clear factory record*/
    FY0CM002.FY1FCTYC = FY0CW01.FY1FCTYC;
    set FY0CM002.FY1FCTYC cursor, bold; /* Highlight factory code*/
    FY0CW01.FY1FCTYC = " ";
    FY0CM002.FY0CMFUN = "CHANGE"; /* Move change literal to map*/
    FY0CM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    FY0CM002.XGPCD = FY0CW01.XGPCD; /* Move gpc code*/
    if (FY0CW01.XGPCD > " ")
      if (FY0CW01.XGPCD in XGPTBL.XGPCD)
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
    end
  end

  FY0CW01.FY0CWMLF = "N"; /* Init map loaded flag*/

  if (FY0CW01.FY0CWPSW == "N") /* No error*/

    set FY0CM002 initial; /* Clear map output area*/
    FY0CM002.FY0CMFUN = "CHANGE"; /* Move change literal to map*/
    FY0CM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
    FY0CM002.XGPCD = FY0CW01.XGPCD; /* Move gpc code*/
    if (FY0CW01.XGPCD > " ")
      if (FY0CW01.XGPCD in XGPTBL.XGPCD)
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      end
    end

    if (FY0CW01.FY0CWLSF == "Y") /* Came from list screen*/
      FY0C421(); /* Load data on map*/
    else
      if (FY0CW01.FY0CWLSF == "N" /* Did not Come from list screen*/
       && FY0CW01.FY0CWSWR == "Y") /* and data was retrieved*/
        FY0C421(); /* Load data on map*/
      end
    end
  end

  if (FY0CW01.FY0CWLSF == "Y") /* Came from list screen*/
    set FY0CM002.XGPCD protect; /* Gpc code*/
    set FY0CM002.FY1FCTYC protect; /* Factory code*/
  end

  if (FY0CW01.FY0CWLSF == "N") /* If not from the list screen*/
    if (FY0CW01.FY0CWSWR == "N" /* data not requested*/
     || converseVar.validationMsgNum == 21) /* or factory not found*/
      FY0C422(); /* protect non-key fields*/
    else
      if (FY0CW01.FY0CWSWR == "Y") /* data was requested*/
        set FY0CM002.XGPCD protect; /* Protect gpc code*/
        set FY0CM002.FY1FCTYC protect; /* and factory code*/
      end
    end
  end

  set FY0CM002.FY0CMRGT protect; /* Set pf11 to normal intensity*/
  set FY0CM002.FY1TYPFLG protect; /* Protect product type flag*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0CM002 alarm;
  end

  if (FY0CW01.FY0CWMFL == "Y")
    converseLib.validationFailed(1);
    FY0CM002.XXXPRCNM = "FY0C420";
    FY0CW01.FY0CWMFL = "N";
  end

  if (FY0CM002.XGPCD != "02"
   && FY0CM002.XGPCD != "03")
    set FY0CM002.FY0CM-FCTY-NBR-FL skip;
  end

  converse FY0CM002 ;

  FY0CW01.FY0CWPSW = "N"; /* Initialize problem switch*/

  if (converseVar.eventKey is enter)
    FY0C423(); /* Check for ? entered by user*/
  end
end // end FY0C420

// Load data on map
Function FY0C421()
   /* ------------------------------------------------------------*/
   /* Move all the fields to the map and obtain all descriptions*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWMLF = "Y"; /* Init map loaded flag*/

  FY0CM002.FY1FCTYC = VFCTY003.FY1FCTYC; /* Move selected fields*/
  FY0CM002.FY1FCTNM = VFCTY003.FY1FCTNM; /* to map*/
  if (VFCTY003.FY-FCTY-NBR > 0) /* Factory number entered*/
    FY0CM002.FY0CM-FCTY-NBR-FL = "Y";
    FY0CW01.FY0CM-FCTY-NBR-FL = "Y";
  else
    FY0CM002.FY0CM-FCTY-NBR-FL = "N";
    FY0CW01.FY0CM-FCTY-NBR-FL = "N";
  end
  FY0CM002.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR;
  FY0CM002.FY1FCTSN = VFCTY003.FY1FCTSN; /* to map*/
  FY0CM002.TSCLOCCD = VFCTY003.TSCLOCCD; /* Location code*/
  FY0CM002.XXX-ADDR1 = VFCTY003.XXX-ADDR1; /* Street address*/
  FY0CM002.XXX-ADDR2 = VFCTY003.XXX-ADDR2; /* Street address*/
  FY0CM002.XXX-ADDR3 = VFCTY003.XXX-ADDR3; /* Street address*/
  FY0CM002.XXXCITY = VFCTY003.XXXCITY; /* Street address*/
  FY0CM002.XSTCD = VFCTY003.XSTCD; /* State code*/
  if (VFCTY003.XSTCD != " ")
    if (VFCTY003.XSTCD in XSTTBL.XSTCD)
      FY0CM002.XSTDESC = XSTTBL.XSTDESC[sysVar.arrayIndex];
    end
  end
  FY0CM002.XXXZIP = VFCTY003.XXXZIP; /* zip code*/
  FY0CM002.XCTCD = VFCTY003.XCTCD; /* country code*/
  if (VFCTY003.XCTCD != " ")
    if (VFCTY003.XCTCD in XCTTBL.XCTCD)
      FY0CM002.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
  end
  FY0CM002.XMCO = VFCTY003.PC-XCT-ORIG-CD; /* MCO*/
  if (VFCTY003.PC-XCT-ORIG-CD != " ")
    if (VFCTY003.PC-XCT-ORIG-CD in XCTTBL.XCTCD)
      FY0CM002.XMCODESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
    end
  end
  FY0CM002.FY1FCTPH = VFCTY003.FY1FCTPH; /* Phone number*/
  FY0CM002.FY1FAX = VFCTY003.FY1FAX; /* Fax number*/
  FY0CM002.FY1TELEX = VFCTY003.FY1TELEX; /* Telex number*/
  FY0CM002.FY1FCTRP = VFCTY003.FY1FCTRP; /* Representative*/
  FY0CM002.FY1REPPH = VFCTY003.FY1REPPH; /* Rep phone number*/
  FY0CM002.FY1MGR = VFCTY003.FY1MGR; /* Factory manager*/
  FY0CM002.FY1FASST = VFCTY003.FY1FASST; /* Assistant manager*/
  FY0CM002.FY1FRGN = VFCTY003.FY1FRGN; /* Foreign flag*/
  FY0CM002.FY6FOCD = VFCTY003.FY6FOCD; /* Liaison/field office*/
  if (VFCTY003.FY6FOCD != " ")
    FY6REC.XGPCD = VFCTY003.XGPCD; /* Move selected fields*/
    FY6REC.FY6FOCD = VFCTY003.FY6FOCD; /* Liaison/field office*/
    FY0CS03();
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0CM002.FY6FOSDS = FY6REC.FY6FOSDS; /* Lsn/fld off shrt nm*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0CM002.FY6FOSDS = "UNKNOWN"; /* Lsn/fld off shrt nm*/
      end
    end
  end

  FY0CM002.YABCD = VFCTY003.YABCD; /* Advising bank code*/
  if (VFCTY003.YABCD != " ")
    if (VFCTY003.YABCD in YABTBL.YABCD)
      FY0CM002.YABSDESC = YABTBL.YABSDESC[sysVar.arrayIndex];
    end
  end

  FY0CM002.YBCCD = VFCTY003.YBCCD; /* Booking condition code*/
  if (VFCTY003.YBCCD != " ")
    if (VFCTY003.YBCCD in YBCTBL.YBCCD)
      FY0CM002.YBCSDESC = YBCTBL.YBCSDESC[sysVar.arrayIndex];
    end
  end

  FY0CM002.FY-FCTY-MFG-CD = VFCTY003.FY-FCTY-MFG-CD; /* Fact.Manf.Code*/

  if (VFCTY003.FY1DOWNB != 0) /* Down time begin date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1DOWNB; /* Working date*/
    FY0CW01.FY1DOWNB = VFCTY003.FY1DOWNB; /* Save date for update*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1DOWNB = FY0CW01.FY0CWCDT; /* mmddyy*/
    FY0CW01.FY0CWBDT = FY0CW01.FY0CWCDT; /* Save mmddyy*/
    FY0CW03.FY0CWBDT = FY0CW01.FY0CWCDT; /* Save mmddyy*/
  end

  if (VFCTY003.FY1DOWNE != 0) /* Down time ending date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1DOWNE; /* Working date*/
    FY0CW01.FY1DOWNE = VFCTY003.FY1DOWNE; /* Save date for update*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1DOWNE = FY0CW01.FY0CWCDT; /* mmddyy*/
    FY0CW01.FY0CWEDT = FY0CW01.FY0CWCDT; /* Save mmddyy*/
    FY0CW03.FY0CWEDT = FY0CW01.FY0CWCDT; /* Save mmddyy*/
  end

  FY0CM002.FY1PRTY = VFCTY003.FY1PRTY; /* Factory priority*/
  FY0CM002.FY1TYPFLG = VFCTY003.FY-FCTY-TYP-CD; /* Product type flag*/
  FY0CM002.FY1MADD = VFCTY003.FY1MADD; /* Manufacturers adj. days*/
  FY0CM002.FY1REFPC = VFCTY003.FY1REFPC; /* Refund percent*/
  FY0CW01.FY1REFPC = VFCTY003.FY1REFPC; /* Working strg refund pct.*/

  if (VFCTY003.FY1REFDT != 0) /* Refund date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1REFDT; /* Working date*/
    FY0CW01.FY1REFDT = VFCTY003.FY1REFDT; /* Save date for update*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1REFDT = FY0CW01.FY0CWCDT; /* mmddyy*/
    FY0CW01.FY0CWRDT = FY0CW01.FY0CWCDT; /* Save mmddyy*/
    FY0CW03.FY0CWRDT = FY0CW01.FY0CWCDT; /* Save mmddyy*/
  end

  FY0CM002.FY1PRFPC = VFCTY003.FY1PRFPC; /* Previous refund percent*/

  if (VFCTY003.FY1PRFDT != 0) /* Previous refund date*/
    FY0CW01.FY0CWDTE = VFCTY003.FY1PRFDT; /* Working date*/
    FY0CW01.FY1PRFDT = VFCTY003.FY1PRFDT; /* Save date for update*/
    FY0CW01.FY0CWCMM = FY0CW01.FY0CWMM; /* Month*/
    FY0CW01.FY0CWCDD = FY0CW01.FY0CWDD; /* Day*/
    FY0CW01.FY0CWCYY = FY0CW01.FY0CWYY; /* Year*/
    FY0CM002.FY1PRFDT = FY0CW01.FY0CWCDT; /* mmddyy*/
  end

  FY0CM002.XXXSTAT = VFCTY003.XXXSTAT; /* Status*/
  if (VFCTY003.XXXSTAT == "A")
    FY0CM002.FY0CMSTD = "ACTIVE"; /* Status description*/
  else
    FY0CM002.FY0CMSTD = "INACTIVE"; /* Status description*/
  end

  FY0CM002.FY1CMNT1 = VFCTY003.FY1CMNT1; /* Comment line 1*/
  FY0CM002.FY1CMNT2 = VFCTY003.FY1CMNT2; /* Comment line 2*/

  set FY0CM003 initial; /* Clear map output area*/

  FY0CM003.FY1MFGDY = VFCTY003.FY1MFGDY;
  FY0CM003.FY1FABDY = VFCTY003.FY1FABDY;
  FY0CM003.FY1STDC = VFCTY003.FY1STDC;
  FY0CM003.FY1SPCLC = VFCTY003.FY1SPCLC;
  FY0CM003.FY1STCDY = VFCTY003.FY1STCDY;
  FY0CM003.FY1LSTDY = VFCTY003.FY1LSTDY;
  FY0CM003.FY1BGDPC = VFCTY003.FY1BGDPC;
  FY0CM003.FY1PFYCD = VFCTY003.FY1PFYCD;
  FY0CM003.FY1FMRMO = VFCTY003.FY1FMRMO;
  FY0CM003.FY1DFPRC = VFCTY003.FY1DFPRC;

end // end FY0C421

// Protect non-key fields
Function FY0C422()
   /* ------------------------------------------------------------*/
   /* Set all non-key fields protected*/
   /* ------------------------------------------------------------*/

  set FY0CM002.FY1FCTYC cursor; /* Put cursor on Factory code*/
  set FY0CM002.FY1FCTNM protect; /* Factory name*/
  set FY0CM002.FY1FCTSN protect; /* Factory short name*/
  set FY0CM002.TSCLOCCD protect; /* Location code*/
  set FY0CM002.XXXSTAT protect; /* Status*/
  set FY0CM002.XXX-ADDR1 protect; /* Street address*/
  set FY0CM002.XXX-ADDR2 protect; /* Street address*/
  set FY0CM002.XXX-ADDR3 protect; /* Street address*/
  set FY0CM002.XXXCITY protect; /* Street address*/
  set FY0CM002.XSTCD protect; /* State code*/
  set FY0CM002.XXXZIP protect; /* zip code*/
  set FY0CM002.XCTCD protect; /* country code*/
  set FY0CM002.XMCO protect; /* manufacturing country of orign*/
  set FY0CM002.FY1FCTPH protect; /* Phone number*/
  set FY0CM002.FY1FAX protect; /* Fax number*/
  set FY0CM002.FY1TELEX protect; /* Telex number*/
  set FY0CM002.FY1FCTRP protect; /* Representative*/
  set FY0CM002.FY1REPPH protect; /* Rep phone number*/
  set FY0CM002.FY1MGR protect; /* Commarea application data*/
  set FY0CM002.FY1FASST protect; /* Commarea application data*/
  set FY0CM002.FY1FRGN protect; /* Foreign flag*/
  set FY0CM002.FY6FOCD protect; /* Liaison/field office*/
  set FY0CM002.YABCD protect; /* Advising bank code*/
  set FY0CM002.YBCCD protect; /* Booking condition code*/
  set FY0CM002.FY-FCTY-MFG-CD protect; /* Factory manufacture code*/
  set FY0CM002.FY1DOWNB protect; /* Down time begin date*/
  set FY0CM002.FY1DOWNE protect; /* Down time ending date*/
  set FY0CM002.FY1PRTY protect; /* Factory priority*/
  set FY0CM002.FY1TYPFLG protect; /* Product type flag*/
  set FY0CM002.FY1MADD protect; /* Manufacturers adjustment d*/
  set FY0CM002.FY1REFPC protect; /* Refund percent*/
  set FY0CM002.FY1REFDT protect; /* Refund effective date*/
  set FY0CM002.FY1PRFPC protect; /* Previous refund percent*/
  set FY0CM002.FY1PRFDT protect; /* Previous refund effective*/
  set FY0CM002.FY1CMNT1 protect; /* Comment line 1*/
  set FY0CM002.FY1CMNT2 protect; /* Comment line 2*/
  set FY0CM002.FY0CM-FCTY-NBR-FL skip; /* Factory nbr flag*/

end // end FY0C422

// Check for ? inquiry by user
Function FY0C423()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0CM002.XGPCD == "?" /* if any ? entered*/
   || FY0CM002.XSTCD == "?" 
   || FY0CM002.XCTCD == "?" 
   || FY0CM002.XMCO == "?"  
   || FY0CM002.YABCD == "?" 
   || FY0CM002.YBCCD == "?")

    if (FY0CM002.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XGPCD = " "; /* clear fields*/
        FY0CM002.XGPDESC = " ";
      end
    end

    if (FY0CM002.XSTCD == "?") /* if ? in state code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 STATE    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXST01(); /* perform state code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XSTCD = XSTTBL.XSTCD[XX0XWPIX]; /* move code*/
        FY0CM002.XSTDESC = XSTTBL.XSTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XSTCD = " "; /* clear fields*/
        FY0CM002.XSTDESC = " ";
      end
    end

    if (FY0CM002.XCTCD == "?") /* if ? in country code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                COUNTRY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXCT01(); /* perform country code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XCTCD = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
        FY0CM002.XCTDESC = XCTTBL.XCTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XCTCD = " "; /* clear fields*/
        FY0CM002.XCTDESC = " ";
      end
    end

    if (FY0CM002.XMCO == "?") /* if ? in mco field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                COUNTRY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXCT01(); /* perform country code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.XMCO = XCTTBL.XCTCD[XX0XWPIX]; /* move code*/
        FY0CM002.XMCODESC = XCTTBL.XCTDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.XMCO = " "; /* clear fields*/
        FY0CM002.XMCODESC = " ";
      end
    end

    if (FY0CM002.YABCD == "?") /* if ? in advising bank code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        ADVISING BANK     "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYAB01(); /* perform adv. bnk code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.YABCD = YABTBL.YABCD[XX0XWPIX]; /* move code*/
        FY0CM002.YABSDESC = YABTBL.YABSDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.YABCD = " "; /* clear fields*/
        FY0CM002.YABSDESC = " ";
      end
    end

    if (FY0CM002.YBCCD == "?") /* if ? in book cond code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "      BOOKING CONDITIONS  "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYBC01(); /* perform book cond code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0CM002.YBCCD = YBCTBL.YBCCD[XX0XWPIX]; /* move code*/
        FY0CM002.YBCSDESC = YBCTBL.YBCSDESC[XX0XWPIX]; /* move name*/
      else
        FY0CM002.YBCCD = " "; /* clear fields*/
        FY0CM002.YBCSDESC = " ";
      end
    end

    converseLib.clearScreen();
     /* restore the original map*/

  end

end // end FY0C423

// Check attention identifier
Function FY0C430()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    if (FY0CW01.FY0CWLSF == "Y")
      set FY0CM002 initial; /* Clear the map fields*/
    else
      set VFCTY003 empty; /* Clear factory record*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0CM002.CATOAP; /* Application*/
      COMMAREA.CAITEM = FY0CM002.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    set FY0CM002.CATOAP cursor, bold; /* Highlight*/
    FY0CM002.XXXPRCNM = "FY0C430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0CW01.FY0CWMAP = "1"; /* Move to map 1*/
    if (FY0CW01.FY0CWLSF == "N")
      FY0CW01.FY0CWLSF = "Y"; /* Set list screen flag to yes*/
      FY0CW01.FY0CWSWR = "Y"; /* Set request for data*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM002"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to Factory menu*/
    COMMAREA.XGPCD = FY0CW01.XGPCD; /* Gpc code*/
    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf11) /* PF11 was not pressed*/
    FY0CM002.XXXPRCNM = "FY0C430"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C430

// Reset highlighted fields
Function FY0C440()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM002.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM002.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM002.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0CM002.TSCLOCCD initialAttributes; /* Location code*/
  set FY0CM002.XXXSTAT initialAttributes; /* Status*/
  set FY0CM002.XXX-ADDR1 initialAttributes; /* Street address*/
  set FY0CM002.XXX-ADDR2 initialAttributes; /* Street address*/
  set FY0CM002.XXX-ADDR3 initialAttributes; /* Street address*/
  set FY0CM002.XXXCITY initialAttributes; /* Street address*/
  set FY0CM002.XSTCD initialAttributes; /* State code*/
  set FY0CM002.XXXZIP initialAttributes; /* zip code*/
  set FY0CM002.XCTCD initialAttributes; /* country code*/
  set FY0CM002.XMCO initialAttributes; /* manufacturing country of orign*/
  set FY0CM002.FY1FCTPH initialAttributes; /* Phone number*/
  set FY0CM002.FY1FAX initialAttributes; /* Fax number*/
  set FY0CM002.FY1TELEX initialAttributes; /* Telex number*/
  set FY0CM002.FY1FCTRP initialAttributes; /* Representative*/
  set FY0CM002.FY1REPPH initialAttributes; /* Rep phone number*/
  set FY0CM002.FY1MGR initialAttributes; /* Commarea application data*/
  set FY0CM002.FY1FASST initialAttributes; /* Commarea application data*/
  set FY0CM002.FY1FRGN initialAttributes; /* Foreign flag*/
  set FY0CM002.FY6FOCD initialAttributes; /* Liaison/field office*/
  set FY0CM002.YABCD initialAttributes; /* Advising bank code*/
  set FY0CM002.YBCCD initialAttributes; /* Booking condition code*/
  set FY0CM002.FY-FCTY-MFG-CD initialAttributes; /* Factory manufacture code*/
  set FY0CM002.FY1DOWNB initialAttributes; /* Down time begin date*/
  set FY0CM002.FY1DOWNE initialAttributes; /* Down time ending date*/
  set FY0CM002.FY1PRTY initialAttributes; /* Factory priority*/
  set FY0CM002.FY1TYPFLG initialAttributes; /* Product type flag*/
  set FY0CM002.FY1MADD initialAttributes; /* Manufacturers adjustment days*/
  set FY0CM002.FY1REFPC initialAttributes; /* Refund percent*/
  set FY0CM002.FY1REFDT initialAttributes; /* Refund effective date*/
  set FY0CM002.FY1PRFPC initialAttributes; /* Previous refund percent*/
  set FY0CM002.FY1PRFDT initialAttributes; /* Previous refund effective date*/
  set FY0CM002.FY1CMNT1 initialAttributes; /* Comment line 1*/
  set FY0CM002.FY1CMNT2 initialAttributes; /* Comment line 2*/
  set FY0CM002.XXXSTAT initialAttributes; /* Status*/
  set FY0CM002.FY0CMSTD initialAttributes; /* Status description*/
  set FY0CM002.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM002.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C440

// Verify the entered data
Function FY0C450()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "N"; /* Initialize data entered flag*/

  if (FY0CM002.CAITEM > " ") /* Application data was entered*/
    set FY0CM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0C450"; /* Process name*/
    exit stack;
  end

  if (FY0CM002.XGPCD == VFCTY003.XGPCD
   && FY0CM002.FY1FCTYC == VFCTY003.FY1FCTYC
   && FY0CM002.FY1FCTNM == FY0CW03.FY1FCTNM
   && FY0CM002.FY0CM-FCTY-NBR-FL == FY0CW01.FY0CM-FCTY-NBR-FL
   && FY0CM002.FY1FCTSN == FY0CW03.FY1FCTSN
   && FY0CM002.TSCLOCCD == FY0CW03.TSCLOCCD
   && FY0CM002.XXXSTAT == FY0CW03.XXXSTAT
   && FY0CM002.XXX-ADDR1 == FY0CW03.XXX-ADDR1
   && FY0CM002.XXX-ADDR2 == FY0CW03.XXX-ADDR2
   && FY0CM002.XXX-ADDR3 == FY0CW03.XXX-ADDR3
   && FY0CM002.XXXCITY == FY0CW03.XXXCITY
   && FY0CM002.XSTCD == FY0CW03.XSTCD
   && FY0CM002.XXXZIP == FY0CW03.XXXZIP
   && FY0CM002.XCTCD == FY0CW03.XCTCD
   && FY0CM002.XMCO == FY0CW03.PC-XCT-ORIG-CD
   && FY0CM002.FY1FCTPH == FY0CW03.FY1FCTPH
   && FY0CM002.FY1FAX == FY0CW03.FY1FAX
   && FY0CM002.FY1TELEX == FY0CW03.FY1TELEX
   && FY0CM002.FY1FCTRP == FY0CW03.FY1FCTRP
   && FY0CM002.FY1REPPH == FY0CW03.FY1REPPH
   && FY0CM002.FY1MGR == FY0CW03.FY1MGR
   && FY0CM002.FY1FASST == FY0CW03.FY1FASST
   && FY0CM002.FY1FRGN == FY0CW03.FY1FRGN
   && FY0CM002.FY6FOCD == FY0CW03.FY6FOCD
   && FY0CM002.YABCD == FY0CW03.YABCD
   && FY0CM002.YBCCD == FY0CW03.YBCCD
   && FY0CM002.FY-FCTY-MFG-CD == FY0CW03.FY-FCTY-MFG-CD
   && FY0CM002.FY1DOWNB == FY0CW03.FY0CWBDT
   && FY0CM002.FY1DOWNE == FY0CW03.FY0CWEDT
   && FY0CM002.FY1PRTY == FY0CW03.FY1PRTY
   && FY0CM002.FY1TYPFLG == FY0CW03.FY-FCTY-TYP-CD
   && FY0CM002.FY1MADD == FY0CW03.FY1MADD
   && FY0CM002.FY1REFPC == FY0CW03.FY1REFPC
   && FY0CM002.FY1REFDT == FY0CW03.FY0CWRDT
   && FY0CM002.FY1CMNT1 == FY0CW03.FY1CMNT1
   && FY0CM002.FY1CMNT2 == FY0CW03.FY1CMNT2
   && FY0CM003.FY1MFGDY == FY0CW03.FY1MFGDY
   && FY0CM003.FY1FABDY == FY0CW03.FY1FABDY
   && FY0CM003.FY1STDC == FY0CW03.FY1STDC
   && FY0CM003.FY1SPCLC == FY0CW03.FY1SPCLC
   && FY0CM003.FY1STCDY == FY0CW03.FY1STCDY
   && FY0CM003.FY1LSTDY == FY0CW03.FY1LSTDY
   && FY0CM003.FY1BGDPC == FY0CW03.FY1BGDPC
   && FY0CM003.FY1PFYCD == FY0CW03.FY1PFYCD
   && FY0CM003.FY1FMRMO == FY0CW03.FY1FMRMO
   && FY0CM003.FY1DFPRC == FY0CW03.FY1DFPRC)

    if (converseVar.eventKey is enter) /* ENTER was pressed and not PF11*/
      FY0CW01.FY0CWSKY = FY0CM002.FY1FCTYC; /* Save key*/
      set FY0CM002 initial;
      if (FY0CW01.FY0CWLSF == "Y")
        FY0CM001.FY0CMSEL[FY0CWIXM] = " ";
      else
        FY0CW01.FY0CWSWR = "N";
        set VFCTY003 empty;
      end
      exit stack; /* Exit to redisplay map*/
    end
  else
    FY0C451(); /* Validate input data*/
  end

end // end FY0C450

// Validate any input data
Function FY0C451()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "Y"; /* Data has been entered*/

   /* ------------------------------------------------------------*/
   /* IF THE FACTORY CODE OR GPC CODE HAS CHANGED*/
   /* VALIDATE THEM AND DROP THROUGH THE REST OF THE CODE.*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1FCTYC != VFCTY003.FY1FCTYC
   || FY0CM002.XGPCD != VFCTY003.XGPCD)

    if (FY0CM002.XGPCD != " ") /* check gpc code*/
      sysVar.arrayIndex = 0; /* Initialize ezetst*/
      if (FY0CM002.XGPCD in XGPTBL.XGPCD /* Check valid code*/
       && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        FY0CW01.XGPCD = FY0CM002.XGPCD; /* save in working storage*/
        COMMAREA.XGPCD = FY0CM002.XGPCD; /* save in commarea*/
        FY0CW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        FY0CM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      else
        converseLib.validationFailed(101); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        FY0CW01.XGPDESC = " ";
        FY0CM002.XGPDESC = " ";
        set FY0CM002.XGPCD cursor, modified, bold; /* highlt fld*/
      end
    else
      converseLib.validationFailed(101); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
      FY0CW01.XGPDESC = " ";
      FY0CM002.XGPDESC = " ";
      set FY0CM002.XGPCD cursor, modified, bold; /* highlt fld*/
    end

    if (FY0CM002.FY1FCTYC == " ") /* Check factory code*/
      converseLib.validationFailed(33); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
      set FY0CM002.FY1FCTYC cursor, modified, bold; /* highlight field*/
    end

  else

    /* ------------------------------------------------------------*/
     /* IF THE REFUND PERCENT HAS CHANGED, VALIDATE IT AND MOVE THE*/
     /* ORIGINAL TO THE PREVIOUS PERCENT.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1REFPC != VFCTY003.FY1REFPC) /* if percentage changed*/
      if (FY0CM002.FY1REFPC > 100) /* If invalid refund percent*/
        converseLib.validationFailed(56); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.FY1REFPC cursor, modified, bold; /* highlight field*/
      else
        FY0CW01.FY1PRFPC = FY0CW01.FY1REFPC; /* move to previous pct*/
        FY0CW01.FY1PRFDT = FY0CW01.FY1REFDT; /* move to previous date*/
      end
    end

    /* ------------------------------------------------------------*/
     /* IF THE PERCENT HAS BEEN ENTERED, INSURE THAT A DATE HAS*/
     /* BEEN ENTERED.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1REFPC > 0 /* if percentage entered*/
     && FY0CM002.FY1REFDT == 0) /* If refund date not entered*/
      converseLib.validationFailed(62); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
      set FY0CM002.FY1REFDT cursor, bold; /* highlight field*/
    end

    /* ------------------------------------------------------------*/
     /* IF THE REFUND DATE HAS BEEN CHANGED, VALIDATE IT AND MOVE*/
     /* BOTH THE PERCENT AND DATE TO THE PREVIOUS FIELDS*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1REFDT != FY0CW01.FY0CWRDT) /* or date changed*/
      if (FY0CM002.FY1REFDT != 0) /* if date entered*/

        set TA2REC empty; /* Clear working record*/
        TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
        TA2REC.TA2GRTYP = "A"; /* move date type to record*/
        TA2REC.TA2GRGA = FY0CM002.FY1REFDT; /* move date*/
        call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
        if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
          FY0CW01.FY1PRFDT = FY0CW01.FY1REFDT; /* move to previous dt*/
          FY0CW01.FY1PRFPC = FY0CW01.FY1REFPC;
                                   /* move to previous pct*/
          FY0CW01.FY1REFDT = TA2REC.TA2GRGGN;
                                   /* save date in ccyymmdd*/
          FY0CW01.FY0CWRDT = TA2REC.TA2GRGA; /* save date in mmddyy*/
        else /* Invalid date entered*/
          converseLib.validationFailed(62); /* Error message*/
          FY0CW01.FY0CWPSW = "Y"; /* indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C241"; /* Process name*/
          set FY0CM002.FY1REFDT cursor, modified, bold;
        end
      else /* Invalid date entered*/
        FY0CW01.FY1PRFDT = FY0CW01.FY1REFDT; /* move to previous dt*/
        FY0CW01.FY1PRFPC = FY0CW01.FY1REFPC; /* move to previous pct*/
        FY0CW01.FY1REFDT = 0; /* Set to zero*/
        FY0CW01.FY0CWRDT = 0; /* Set to zero*/
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE DOWN PERIODS*/
    /* ------------------------------------------------------------*/

    FY0CS02();

    /* ------------------------------------------------------------*/
     /* VALIDATE THE SPECIAL CONDITION CODE.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.YBCCD != VFCTY003.YBCCD) /* If special cond code changed*/
      if (FY0CM002.YBCCD != " ") /* If special cond. code entered*/
        sysVar.arrayIndex = 0; /* Initialize ezetst*/
        if (FY0CM002.YBCCD in YBCTBL.YBCCD /* Check valid code*/
         && YBCTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          FY0CM002.YBCSDESC = YBCTBL.YBCSDESC[sysVar.arrayIndex];
        else
          converseLib.validationFailed(58); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
          FY0CM002.YBCSDESC = " ";
          set FY0CM002.YBCCD cursor, modified, bold; /* highlight field*/
        end
      end
    end
    /* ------------------------------------------------------------*/
    /* VALIDATE THE FACTORY MANUFACTURE CODE ( SSCC18 CODE )*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.XGPCD == "02") /* If Footwear manufacturing*/
      if (FY0CM002.FY-FCTY-MFG-CD == 0091201
      ) /* next sentence*/
      else
        converseLib.validationFailed(185); /* eror message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.FY-FCTY-MFG-CD cursor, modified, bold;
      end
    else
      if (FY0CM002.FY-FCTY-MFG-CD >= 0
       || FY0CM002.FY-FCTY-MFG-CD == " "
      )
      else /* SSCC18 MFG ID is not NUMERIC*/
        converseLib.validationFailed(186);
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem lag*/
        FY0CM002.XXXPRCNM = "FY0C451";
        set FY0CM002.FY-FCTY-MFG-CD cursor, modified, bold;
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE ADVISING BANK CODE.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.YABCD != VFCTY003.YABCD) /* If advising bank code changed*/
      if (FY0CM002.YABCD != " ") /* If advising bank code entered*/
        sysVar.arrayIndex = 0; /* Initialize ezetst*/
        if (FY0CM002.YABCD in YABTBL.YABCD /* Check valid code*/
         && YABTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          FY0CM002.YABSDESC = YABTBL.YABSDESC[sysVar.arrayIndex];
        else
          converseLib.validationFailed(59); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
          FY0CM002.YABSDESC = " ";
          set FY0CM002.YABCD cursor, modified, bold; /* highlight field*/
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE OFFSHORE FLAG.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1FRGN != VFCTY003.FY1FRGN) /* if offshore flag changed*/
      if (FY0CM002.FY1FRGN == "Y" /* If offshore flag entered*/
       || FY0CM002.FY1FRGN == "N") /* Check valid code*/
        /* next sentence*/
      else
        converseLib.validationFailed(47); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.FY1FRGN cursor, modified, bold; /* highlight field*/
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE LIAISON/FIELD OFFICE CODE*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY6FOCD != VFCTY003.FY6FOCD /* if field offc. changed*/
     || FY0CM002.FY6FOCD == " ")             /* Blanks not allowed*/
//Changes for CHG0111380
//      if (FY0CM002.FY6FOCD != " "
//       && FY0CM002.XGPCD != "02")
		if (FY0CM002.FY6FOCD != " ") //End Changes for CHG0111380
        FY6REC.XGPCD = FY0CM002.XGPCD;
        FY6REC.FY6FOCD = FY0CM002.FY6FOCD;
        FY0CS03(); /* validate liaison/field office*/
        if (SQLCA.VAGen_SQLCODE == 0)
          if (FY6REC.XXXSTAT == "A")
            FY0CM002.FY6FOSDS = FY6REC.FY6FOSDS;
          else
            converseLib.validationFailed(18); /* error message*/
            FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
            FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
            FY0CM002.FY6FOSDS = " ";
            set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
          end
        else
          if (SQLCA.VAGen_SQLCODE == 100)
            converseLib.validationFailed(18); /* error message*/
            FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
            FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
            FY0CM002.FY6FOSDS = " ";
            set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
          end
        end
      else
//Changes for CHG0111380
//        if (FY0CM002.XGPCD == "02")
//          converseLib.validationFailed(171); /* error message*/
//          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
//          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
//          FY0CM002.FY6FOSDS = " ";
//          set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
//        else /* end Change for CHG0111380 */
          converseLib.validationFailed(18); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
          FY0CM002.FY6FOSDS = " ";
          set FY0CM002.FY6FOCD cursor, modified, bold; /* highlight field*/
//        end /* end Change for CHG0111380 */
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE TRANSPORTION LOCATION CODE*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.TSCLOCCD != VFCTY003.TSCLOCCD) /* if loc. code changed*/
      if (FY0CM002.TSCLOCCD != " ")
        TSCREC.TSCLOCCD = FY0CM002.TSCLOCCD;
        FY0CS04(); /* validate location code*/
        if (SQLCA.VAGen_SQLCODE == 100
         || TSCREC.XXXSTAT != "A")
          converseLib.validationFailed(46); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
          set FY0CM002.TSCLOCCD cursor, modified, bold; /* highlight field*/
        end
      else
        converseLib.validationFailed(46); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.TSCLOCCD cursor, modified, bold; /* highlight field*/
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE COUNTRY CODE*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.XCTCD != VFCTY003.XCTCD) /* if country code changed*/
      if (FY0CM002.XCTCD != " ") /* check country code*/
        sysVar.arrayIndex = 0; /* Initialize ezetst*/
        if (FY0CM002.XCTCD in XCTTBL.XCTCD /* Check valid code*/
         && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
          FY0CM002.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
        else
          converseLib.validationFailed(25); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
          FY0CM002.XCTDESC = " ";
          set FY0CM002.XCTCD cursor, modified, bold; /* highlt fld*/
        end
      else
        converseLib.validationFailed(25); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        FY0CM002.XCTDESC = " ";
        set FY0CM002.XCTCD cursor, modified, bold; /* highlt fld*/
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE MANUFACTURING COUNTRY OF ORIGN*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.XMCO != VFCTY003.PC-XCT-ORIG-CD /* if country code changed*/
     || FY0CM002.XMCO == " ")                   
      sysVar.arrayIndex = 0; /* Initialize ezetst*/
      if (FY0CM002.XMCO in XCTTBL.XCTCD /* Check valid code*/
       && XCTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        FY0CM002.XMCODESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
      else
        if (FY0CM002.XMCO == " ")
          FY0CM002.XMCODESC = " ";
       /* ELSE;*/
          converseLib.validationFailed(25); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
          FY0CM002.XMCODESC = " ";
          set FY0CM002.XMCO cursor, modified, bold; /* highlt fld*/
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE STATE CODE ONLY IF THE COUNTRY IS U.S.A*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.XCTCD == "USA ") /* Validate only if count. is USA*/
      sysVar.arrayIndex = 0; /* Initialize ezetst*/
      if (FY0CM002.XSTCD in XSTTBL.XSTCD /* Check valid code*/
       && XSTTBL.XXXSTAT[sysVar.arrayIndex] == "A")
        FY0CM002.XSTDESC = XSTTBL.XSTDESC[sysVar.arrayIndex];
      else
        converseLib.validationFailed(24); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        FY0CM002.XSTDESC = " ";
        set FY0CM002.XSTCD cursor, modified, bold; /* highlight fie*/
      end
    end

    /* ------------------------------------------------------------*/
     /* CHECK THE STATUS FOR A VALID VALUE*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.XXXSTAT != VFCTY003.XXXSTAT) /* if status changed*/
      if (FY0CM002.XXXSTAT == "A" /* If active or inactive*/
       || FY0CM002.XXXSTAT == "I") /* If not active or inactive*/
         /* next sentence*/
      else
        converseLib.validationFailed(54); /* Display error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.XXXSTAT cursor, modified, bold; /* highlight field*/
      end
    end

    /* ------------------------------------------------------------*/
     /* INSURE THAT THE FACTORY PRIORITY IS ENTERED.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1PRTY != VFCTY003.FY1PRTY) /* If priority changed*/
      if (FY0CM002.XGPCD == "02" /* If footwear*/
       && FY0CM002.FY1PRTY == 0) /* If priority not entered*/
        converseLib.validationFailed(30); /* Display error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.FY1PRTY cursor, modified, bold; /* highlight field*/
      end
    end

    /* ------------------------------------------------------------*/
     /* INSURE THAT THE FACTORY SHORT NAME IS ENTERED.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1FCTSN != VFCTY003.FY1FCTSN) /* if short name changed*/
      if (FY0CM002.FY1FCTSN == " ") /* If short name not entered*/
        converseLib.validationFailed(60); /* Display error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.FY1FCTSN cursor, modified, bold; /* highlight field*/
      end
    end

    /* ------------------------------------------------------------*/
     /* INSURE THAT THE FACTORY NAME IS ENTERED.*/
    /* ------------------------------------------------------------*/

    if (FY0CM002.FY1FCTNM != VFCTY003.FY1FCTNM) /* if short name changed*/
      if (FY0CM002.FY1FCTNM == " ") /* If name not entered*/
        converseLib.validationFailed(61); /* Display error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
        set FY0CM002.FY1FCTNM cursor, modified, bold; /* highlight field*/
      end
    end

    /* ------------------------------------------------------------*/
     /* check if facotry number needs assigned/unassigned*/
    /* ------------------------------------------------------------*/

    FY0CW01.FY0CW-UPDATE-FCTY-NBR-FL = "N"; /* Update fcty nbr flag*/
    if (FY0CM002.FY0CM-FCTY-NBR-FL != "N" /* Valid flag entered*/
     && FY0CM002.FY0CM-FCTY-NBR-FL != "Y" 
     && FY0CW01.FY0CWLSF == "Y")         
      converseLib.validationFailed(47); /* Display error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM002.XXXPRCNM = "FY0C451"; /* Process name*/
      set FY0CM002.FY0CM-FCTY-NBR-FL cursor, bold; /* highlight field*/
    else
      if (FY0CM002.FY0CM-FCTY-NBR-FL != "N" /* Remove number*/
       && FY0CM002.FY-FCTY-NBR > 0)        
        FY0CW01.FY0CW-UPDATE-FCTY-NBR-FL = "Y"; /* Update factory nbr*/
        FY0CW01.FY0CM-FCTY-NBR-FL = "N"; /* Update factory nbr*/
      else
        if (FY0CM002.FY0CM-FCTY-NBR-FL == "Y" /* Assign number*/
         && FY0CM002.FY-FCTY-NBR == 0)       
          FY0CW01.FY0CW-UPDATE-FCTY-NBR-FL = "Y"; /* Update fcty nbr*/
          FY0CW01.FY0CM-FCTY-NBR-FL = "Y"; /* Update factory nbr*/
        end
      end
    end
  end
end // end FY0C451

// Process valid input request
Function FY0C460()
   /* ------------------------------------------------------------*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "Y") /* Error switch equals yes*/
    exit stack;
  end

  if (FY0CM002.XGPCD != VFCTY003.XGPCD /* Gpc code changed*/
   || FY0CM002.FY1FCTYC != VFCTY003.FY1FCTYC) /* Fcty code chgd*/
    FY0CW01.FY0CWSWR = "Y"; /* Request for data*/
    return;
  end

  VFCTY003.FY1FCTNM = FY0CM002.FY1FCTNM; /* Factory name*/
  VFCTY003.FY1FCTSN = FY0CM002.FY1FCTSN; /* Factory short name*/
  VFCTY003.TSCLOCCD = FY0CM002.TSCLOCCD; /* Location code*/

  FY0CW01.FY0CWUSF = "N"; /* Reset update style flag*/

  if (FY0CM002.XXXSTAT == "I" /* Status changed to inactive*/
   && VFCTY003.XXXSTAT == "A") /* and originally active*/

    FY0CW01.FY0CWUSF = "Y"; /* Update style flag*/

  end

  VFCTY003.XXXSTAT = FY0CM002.XXXSTAT; /* Status*/
  VFCTY003.XXX-ADDR1 = FY0CM002.XXX-ADDR1; /* Street address*/
  VFCTY003.XXX-ADDR2 = FY0CM002.XXX-ADDR2; /* Street address*/
  VFCTY003.XXX-ADDR3 = FY0CM002.XXX-ADDR3; /* Street address*/
  VFCTY003.XXXCITY = FY0CM002.XXXCITY; /* Street address*/
  VFCTY003.XSTCD = FY0CM002.XSTCD; /* State code*/
  VFCTY003.XXXZIP = FY0CM002.XXXZIP; /* zip code*/
  VFCTY003.XCTCD = FY0CM002.XCTCD; /* country code*/
  VFCTY003.PC-XCT-ORIG-CD = FY0CM002.XMCO; /* country code*/
  VFCTY003.FY1FCTPH = FY0CM002.FY1FCTPH; /* Phone number*/
  VFCTY003.FY1FAX = FY0CM002.FY1FAX; /* Fax number*/
  VFCTY003.FY1TELEX = FY0CM002.FY1TELEX; /* Telex number*/
  VFCTY003.FY1FCTRP = FY0CM002.FY1FCTRP; /* Representative*/
  VFCTY003.FY1REPPH = FY0CM002.FY1REPPH; /* Rep phone number*/
  VFCTY003.FY1MGR = FY0CM002.FY1MGR; /* Com application data*/
  VFCTY003.FY1FASST = FY0CM002.FY1FASST; /* Commarea appl data*/
  VFCTY003.FY1FRGN = FY0CM002.FY1FRGN; /* Foreign flag*/
  VFCTY003.FY6FOCD = FY0CM002.FY6FOCD; /* Liaison/field office*/
  VFCTY003.YABCD = FY0CM002.YABCD; /* Advising bank code*/
  VFCTY003.YBCCD = FY0CM002.YBCCD; /* Booking condition code*/
  VFCTY003.FY-FCTY-MFG-CD = FY0CM002.FY-FCTY-MFG-CD; /* Fact. Manf.Code*/
  VFCTY003.FY1DOWNB = FY0CW01.FY1DOWNB; /* Down time begin date*/
  VFCTY003.FY1DOWNE = FY0CW01.FY1DOWNE; /* Down time ending date*/
  VFCTY003.FY1PRTY = FY0CM002.FY1PRTY; /* Factory priority*/
  VFCTY003.FY-FCTY-TYP-CD = FY0CM002.FY1TYPFLG; /* factory type code*/
  VFCTY003.FY1MADD = FY0CM002.FY1MADD; /* Mfg adj days*/
  VFCTY003.FY1REFPC = FY0CM002.FY1REFPC; /* Refund percent*/
  VFCTY003.FY1REFDT = FY0CW01.FY1REFDT; /* Refund effective date*/
  VFCTY003.FY1PRFPC = FY0CW01.FY1PRFPC; /* Previous refund per.*/
  VFCTY003.FY1PRFDT = FY0CW01.FY1PRFDT; /* Prev ref. eff date*/
  VFCTY003.FY1CMNT1 = FY0CM002.FY1CMNT1; /* Comment line 1*/
  VFCTY003.FY1CMNT2 = FY0CM002.FY1CMNT2; /* Comment line 2*/
  VFCTY003.XXXSTAT = FY0CM002.XXXSTAT; /* Status*/

  if (FY0CM002.XXXSTAT == "I") /* Status changed to inactive*/
    VFCTY003.FY-FCTY-NBR = 0; /* Factory number*/
    FY0CM002.FY-FCTY-NBR = 0;
    FY0CM002.FY0CM-FCTY-NBR-FL = "N"; /* Factory number flag*/
  else
    if (FY0CM002.FY0CM-FCTY-NBR-FL == "N" /* Factory number flag*/
     && VFCTY003.FY-FCTY-NBR > 0)         /* Factory number*/
      VFCTY003.FY-FCTY-NBR = 0; /* Factory number*/
      FY0CM002.FY-FCTY-NBR = 0;
    end
  end

  VFCTY003.FY-PC-BAR-CD-FL = "N"; /* Bar code flag*/

  FY0CW01.FY0CWTM1 = VGVar.currentFormattedTime;
  FY0CW01.FY0CWHR3 = FY0CW01.FY0CWHR1;
  FY0CW01.FY0CWMN3 = FY0CW01.FY0CWMN1;
  VFCTY003.ZZZCHGTM = FY0CW01.FY0CWTM3;
   /* ----------- Y2K OUT BEGIN ------------*/
   /* MOVE EZEDTE TO FY0CW01.FY0CWYMD; /* Change the date*/
   /* ----------- Y2K OUT END --------------*/

   /* ----------- Y2K IN BEGIN ------------*/
  XX0XS01(); /* get current date*/
  FY0CW01.FY0CWDTE = XX0XW01.XX0XWDAT;
   /* ----------- Y2K IN END --------------*/
  VFCTY003.ZZZCHGDT = FY0CW01.FY0CWDTE;

  if (converseVar.eventKey is pf11)
    FY0CW01.FY0CWMAP = "3"; /* Set request for data switch*/
    exit stack; /* Flow to converse map*/
  end

  if (FY0CW01.FY0CWDEF == "N") /* No data was changed*/
    return;
  end

  if (FY0CM002.FY0CM-FCTY-NBR-FL == "Y" /* Factory number flag*/
   && VFCTY003.FY-FCTY-NBR == 0)        /* Factory number*/
    VFCTY003.XGPCD = FY0CM002.XGPCD;
    FY0C255(); /* Select max nbr*/
    if (VFCTY003.FY-FCTY-NBR > 998)
      converseLib.validationFailed(167);
      FY0CM002.XXXPRCNM = "FY0C460";
      FY0CW01.FY0CWPSW = "Y";
      set FY0CM002.FY0CM-FCTY-NBR-FL cursor, bold;
      exit stack;
    end
    VFCTY003.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR + 1; /* Add 1 to fcty nbr*/
    FY0CM002.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR;
  end

  FY0C461(); /* Update table*/

  if (SQLCA.VAGen_SQLCODE == 100) /* row was not found*/
    converseLib.validationFailed(12); /* update error occured*/
    exit stack; /* exit to redisplay map*/
  end

  if (FY0CW01.FY0CWUSF == "Y") /* If update style flag is yes*/
    FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
    FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
    if (FY3REC.ZZZCHGCT == 9999) /* Change count*/
      FY3REC.ZZZCHGCT = 1;
    else
      FY3REC.ZZZCHGCT = FY3REC.ZZZCHGCT + 1;
    end
    FY3REC.XGPCD = VFCTY003.XGPCD;
    FY3REC.FY1FCTYC = VFCTY003.FY1FCTYC;
    FY3REC.FY3INPFL = "N"; /* Set in production flag*/
    FY3REC.FY3SFYFL = "N"; /* Set factory/style priority*/
    FY0C462();
                                   /* Update all style/colors for a factory*/
    FY0CW01.FY0CWUSF = "N"; /* Reset update style flag*/
  end

  if (FY0CW01.FY0CWPSW == "N") /* No errors*/
    if (FY0CW01.FY0CWLSF == "Y")
      FY0CW01.FY0CWSWR = "Y"; /* Set request for data switch*/
      FY0CM001.FY0CMSEL[FY0CWIXM] = " "; /* move blank to slct*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit(); /* commit the update*/
      FY0CW01.FY0CWSKY = FY0CM002.FY1FCTYC; /* Save key*/
      FY0CW01.FY0CWMFL = "Y";
                                   /* Set update message flag to yes*/
      set VFCTY003 empty; /* Clear factory record*/
      set FY0CM002 initial; /* Clear map 2*/
      set FY0CM003 initial; /* Clear map 3*/
    else
      FY0CW01.FY0CWSWR = "N"; /* Set request for data switch*/
    end
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* Roll back the update*/
  end

end // end FY0C460

// Update selected row
Function FY0C461()
   /* ------------------------------------------------------------*/
   /* Update the factory row.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("U ", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100) /* End of selected set*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C461"; /* Process name*/
    TA1REC.TA1LOC = "UPDATE TABLE ROW";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C461"; /* Process name*/

    FY0CW01.FY0CWPSW = "Y"; /* Indicate not available*/

  end

end // end FY0C461

// Update all style/color rows
Function FY0C462()
   /* ------------------------------------------------------------*/
   /* Update the factory/style table.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2990" ("UA", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

  if (sysVar.errorCode == "00000000") /* Call worked*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Rows found*/
     || SQLCA.VAGen_SQLCODE == 100) /* or not*/
      return;
    end
  end

  if (sysVar.errorCode == "00000000" /* Call worked*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0C462"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FY0CM002.XXXPRCNM = "FY0C462"; /* Process name*/

  FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/

end // end FY0C462

// Factory maintenance add map
Function FY0C600()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FY0C610(); /* Format and display the map*/

  FY0C620(); /* Check attention identifier*/

  FY0C630(); /* Reset fields to normal intensity*/

  FY0C640(); /* Verify the entered data*/

  FY0C650(); /* Process valid input request*/

end // end FY0C600

// Format and display the map
Function FY0C610()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "N") /* No errors*/
    set FY0CM003 initial; /* Clear map output area*/
    FY0CM003.FY0CMFUN = "ADD"; /* Set ADD title to map*/
  end

  FY0CM003.XGPCD = FY0CM002.XGPCD; /* Move values to map*/
  FY0CM003.XGPDESC = FY0CM002.XGPDESC;
  FY0CM003.FY1FCTYC = FY0CM002.FY1FCTYC;
  FY0CM003.FY1FCTNM = FY0CM002.FY1FCTNM;
  FY0CM003.FY1FCTSN = FY0CM002.FY1FCTSN;
  FY0CM003.FY0CM-FCTY-NBR-FL = FY0CM002.FY0CM-FCTY-NBR-FL;
  FY0CM003.FY-FCTY-NBR = FY0CM002.FY-FCTY-NBR;

  if (FY0CM002.XGPCD == "03") /* Is it apparel?*/
    FY0CM003.FY0CMBGL = "IRREGULAR:";
    set FY0CM003.FY0CDFDS skip, invisible; /* Hide default description*/
    set FY0CM003.FY1DFPRC skip, invisible; /* Skip default price*/
    FY0CM003.FY0CMPFL = "PARENT FACTORY:";
    FY0CM003.FY0CMMRL = "MAX RETURN MONTHS:";
    if (FY0CW01.FY0CWPSW == "N" /* No errors*/
     && FY0CM002.FY1FRGN == "Y") /* factory is off-shore*/
      FY0CM003.FY1MSCPC = 3.33; /* default misc% to 3.33%*/
    end
  else /* footwear*/
    if (COMMAREA.CAALVL[2] == "N")
      set FY0CM003.FY1BGDPC skip, invisible; /* Hide Bgrade%*/
      set FY0CM003.FY1PFYCD skip, invisible; /* Hide parent factory*/
      set FY0CM003.FY1FMRMO skip, invisible; /* Hide max return mos*/
      FY0CM003.FY0CMBGL = " ";
      FY0CM003.FY0CMPFL = " ";
      FY0CM003.FY0CMMRL = " ";
    else
      FY0CM003.FY0CMPFL = "PARENT FACTORY:";
      FY0CM003.FY0CMMRL = "MAX RETURN MONTHS:";
      FY0CM003.FY0CMBGL = "B-GRADE %:";
      if (FY0CW01.FY0CWPSW == "N") /* No errors*/
        FY0CM003.FY1BGDPC = 60; /* default bgrd% to 60%*/
      end
    end
    if (COMMAREA.CAALVL[1] == "N")
      set FY0CM003.FY0CDFDS skip, invisible; /* Hide default description*/
      set FY0CM003.FY1DFPRC skip, invisible; /* Skip default price*/
    else
      FY0CM003.FY0CDFDS = "DEFAULT PRICE:";
    end
  end

  FY0CM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  if (FY0CW01.FY0CWPSW == "Y") /* error message to display*/
    set FY0CM003 alarm; /* Indicate sound alarm*/
  end

  converse FY0CM003 ;

  FY0CW01.FY0CWPSW = "N"; /* Reset problem switch*/

end // end FY0C610

// Check attention identifier
Function FY0C620()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FY0CM003 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0CM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0CM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    set FY0CM003.CATOAP cursor, modified, bold; /* Highlight*/
    FY0CM002.XXXPRCNM = "FY0C620"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0CW01.FY0CWMAP = "1"; /* Move to map 1*/
    FY0CW01.FY0CWCFL = "N"; /* Initialize conformation flag*/
    if (FY0CW01.FY0CWLSF == "N")
      FY0CW01.FY0CWSWR = "Y"; /* Request for data switch*/
    end
    FY0CW01.FY0CWLSF = "Y"; /* List screen flag*/
    FY0CW01.FY0CWMFL = "N"; /* Reset message flag*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM002.XXXPRCNM = "FY0C620"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    FY0CM002.XXXPRCNM = "FY0C620"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C620

// Reset highlighted fields
Function FY0C630()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0CM003.XGPDESC initialAttributes; /* Gpc description*/
  set FY0CM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM003.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0CM003.FY1MFGDY initialAttributes; /* Manufacturers lead days*/
  set FY0CM003.FY1FABDY initialAttributes; /* Fabric lead days*/
  set FY0CM003.FY1STDC initialAttributes; /* Standard components lead days*/
  set FY0CM003.FY1SPCLC initialAttributes; /* Special components lead days*/
  set FY0CM003.FY1STCDY initialAttributes; /* Stitching days*/
  set FY0CM003.FY1LSTDY initialAttributes; /* Lasting days*/
  set FY0CM003.FY1MSCPC initialAttributes; /* Miscellaneous cost percent*/
  set FY0CM003.FY1BGDPC initialAttributes; /* B-grade percentage*/
  set FY0CM003.FY1CNTFL initialAttributes; /* fcty sub-contract flag*/
  set FY0CM003.FY1PFYCD initialAttributes; /* Parent factory code*/
  set FY0CM003.FY1FMRMO initialAttributes; /* Max return months*/
  set FY0CM003.FY0CDFDS initialAttributes; /* Default description*/
  set FY0CM003.FY1DFPRC initialAttributes; /* Default price*/
  set FY0CM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C630

// Verify the entered data
Function FY0C640()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "N"; /* Initialize data entered flag*/

  if (FY0CM003.CAITEM > " ") /* Application data was entered*/
    set FY0CM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C640"; /* Process name*/
    exit stack;
  end

  if (converseVar.eventKey is enter) /* If ENTER was pressed*/
    FY0C641(); /* Validate input data*/
  end

end // end FY0C640

// Validate any input data
Function FY0C641()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "Y"; /* Data has been entered*/

  if (FY0CM003.FY1PFYCD > " ") /* Parent fcty entered*/
    if (FY0CM003.FY1PFYCD == FY0CM003.FY1FCTYC) /* Can't equal factory*/
      converseLib.validationFailed(146); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
      set FY0CM003.FY1PFYCD cursor, modified, bold; /* highlight field*/
    else
  /* MOVE FY0CM003.XGPCD TO VFCTY003.XGPCD;*/
      VFCTY003.FY1FCTYC = FY0CM003.FY1PFYCD; /* Move parent to factory*/
      FY0C251();
      if (SQLCA.VAGen_SQLCODE == 0
       || SQLCA.VAGen_SQLCODE == -811)
         /* next sentence*/
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          converseLib.validationFailed(33); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
          set FY0CM003.FY1PFYCD cursor, modified, bold; /* highlight field*/
        end
      end
      VFCTY003.VFCTY003-GROUP = FY0CW03.FY0CWGRP; /* Restore fy1rec*/
    end
  end

  if (FY0CM003.FY1CNTFL == "Y" /* if fcty sub-contr flag entered*/
   || FY0CM003.FY1CNTFL == "N") /* check valid code*/
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C641"; /* process name*/
    set FY0CM003.FY1CNTFL cursor, modified, bold; /* highlight field*/
  end

  if (FY0CM003.XGPCD == "02") /* IF GPC IS FOOTWEAR*/
    if (COMMAREA.CAALVL[1] == "Y")
      if (FY0CM003.FY1DFPRC < 1) /* If invalid default price entered*/
        converseLib.validationFailed(155); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
        set FY0CM003.FY1DFPRC cursor, modified, bold; /* highlight field*/
      else
        XX0XS01(); /* date routine*/
        VFCTY003.FY1DFPRC = FY0CM003.FY1DFPRC; /* default price*/
        VFCTY003.FY1DFLDT = XX0XW01.XX0XWDAT; /* Current date*/
      end
    else
      XX0XS01(); /* date routine*/
      FY0CM003.FY1DFPRC = 1.00; /* move $1.00 to dflt price*/
      VFCTY003.FY1DFLDT = XX0XW01.XX0XWDAT; /* Current date*/
    end
  end

  if (FY0CM003.XGPCD == "02")
    if (COMMAREA.CAALVL[2] == "Y")
      if (FY0CM003.FY1BGDPC > 100 /* If invalid refund percent*/
       || FY0CM003.FY1BGDPC < 1) 
        converseLib.validationFailed(56); /* error message*/
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
        set FY0CM003.FY1BGDPC cursor, modified, bold; /* highlight field*/
      else
        VFCTY003.FY1BGDPC = FY0CM003.FY1BGDPC; /* bgrade%*/
      end
    else
      FY0CM003.FY1BGDPC = 60; /* default bgrd% to 60%*/
      VFCTY003.FY1BGDPC = 60; /* default bgrd% to 60%*/
    end
  end

  if (FY0CM003.XGPCD == "03")
    if (FY0CM003.FY1BGDPC > 100 /* If invalid refund percent*/
     || FY0CM003.FY1BGDPC < 1) 
      converseLib.validationFailed(56); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
      set FY0CM003.FY1BGDPC cursor, modified, bold; /* highlight field*/
    end
  end

  if (FY0CM003.FY1MSCPC > 99.99 /* If invalid misc. pct entered*/
   || FY0CM003.FY1MSCPC < 0)   
    converseLib.validationFailed(56); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
    set FY0CM003.FY1MSCPC cursor, modified, bold; /* highlight field*/
  end

  if (FY0CM003.XGPCD == "02") /* IF GPC IS FOOTWEAR*/
    if (FY0CW01.FY0CWPSW == "N") /* no errors found*/
      FY0C642(); /* write fytag rec for dflt prc*/
    end
  end
end // end FY0C641

// Fill and add DFCTY.VFYTAG01
Function FY0C642()

   /* --------------------------------------------------------*/
    /* This module will add a row to the DFCTY.VFYTAG01 tag*/
      /* record database for letter of credit memos.*/
   /* --------------------------------------------------------*/

  FYHREC.XGPCD = VFCTY003.XGPCD; /* Move in fields*/
  FYHREC.FY1FCTYC = VFCTY003.FY1FCTYC;
  FYHREC.SY1STNBR = "******";

  XX0XS01(); /* date routine*/

  FYHREC.ZZZSDT = XX0XW01.XX0XWDAT;
  FYHREC.ZZHHMMSS = XX0XW01.XX0XWHMS;

   /* ----------------------------------------------------------*/
    /* Add the row to the database*/
   /* ----------------------------------------------------------*/

  try
    call "IO4550" ("A ", SQLCA, FYHREC) {isNoRefresh = yes, isExternal = yes};
  end /* select table row*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Valid return code*/

    return; /* Return to previous process*/

  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* termination function*/
    converseLib.clearScreen();
     /* clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0C642"; /* Process name*/
  TA1REC.TA1LOC = "ADD A TAG RECORD TO TABLE ROW";
  TA1REC.TA1DBASE = "DFCTY  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYTAG01"; /* TABLE VIEW NAME*/
  TA1REC.TA1TBLKE = FYHREC.FYHKEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  exit stack; /* Exit to redisplay map*/
end // end FY0C642

// Process valid input request
Function FY0C650()
   /* ------------------------------------------------------------*/
   /* Verify that no table row exists for the factory.*/
   /* If found then display message that this row exists in*/
     /* either active or inactive status.*/
   /* If not found then add the row.*/
   /* ------------------------------------------------------------*/

  VFCTY003.FY1MFGDY = FY0CM003.FY1MFGDY; /* Move selected fields*/
  VFCTY003.FY1FABDY = FY0CM003.FY1FABDY;
  VFCTY003.FY1STDC = FY0CM003.FY1STDC;
  VFCTY003.FY1SPCLC = FY0CM003.FY1SPCLC;
  VFCTY003.FY1STCDY = FY0CM003.FY1STCDY;
  VFCTY003.FY1LSTDY = FY0CM003.FY1LSTDY;
  if (VFCTY003.XGPCD == "03"
   && VFCTY003.FY1FRGN == "Y")
    VFCTY003.FY1MSCPC = FY0CM003.FY1MSCPC * 100;
  else
    VFCTY003.FY1MSCPC = FY0CM003.FY1MSCPC;
  end
  VFCTY003.FY1BGDPC = FY0CM003.FY1BGDPC;
  VFCTY003.FY1PFYCD = FY0CM003.FY1PFYCD;
  VFCTY003.FY1FMRMO = FY0CM003.FY1FMRMO;
  VFCTY003.FY1DFPRC = FY0CM003.FY1DFPRC;
  VFCTY003.FY1CNTFL = FY0CM003.FY1CNTFL;

  if (FY0CM003.XGPCD == "03")
    VFCTY003.FY1DFPRC = 1; /* Set apparel default price to $1.00*/
  end

   /* ----------- Y2K OUT BEGIN ------------*/
   /* MOVE EZEDTE TO FY0CW01.FY0CWYMD; /* Obtain current date*/
   /* ----------- Y2K OUT END --------------*/

   /* ----------- Y2K IN BEGIN ------------*/
  XX0XS01(); /* Obtain current date*/
  FY0CW01.FY0CWDTE = XX0XW01.XX0XWDAT; /* Obtain current date*/
   /* ----------- Y2K IN END --------------*/
  VFCTY003.ZZZCHGDT = FY0CW01.FY0CWDTE;
  VFCTY003.ZZZSDT = FY0CW01.FY0CWDTE;
  XX0XS01(); /* Obtain current time*/
  VFCTY003.ZZZCHGTM = XX0XW01.XX0XWTIM;
  VFCTY003.ZZZCHGCT = 0;

  if (converseVar.eventKey is enter /* Enter was pressed*/
   && FY0CW01.FY0CWDEF == "Y"       /* and data was entered*/
   && converseVar.validationMsgNum == 0) /* and no errors*/

    FY0CW01.FY0CWSGP = FY0CM003.XGPCD; /* Save gpc code*/
    VFCTY003.FY1FCTYC = FY0CM003.FY1FCTYC; /* factory code*/
  /* MOVE FY0CM003.XGPCD TO VFCTY003.XGPCD;*/
    FY0C251(); /* Select unique factory row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* If no errors*/

      if (FY0CM003.XGPCD == VFCTY003.XGPCD)
        if (VFCTY003.XXXSTAT == "A") /* Row exists in active status*/
          converseLib.validationFailed(64);
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM003.XXXPRCNM = "FY0C250"; /* Process name*/
          set FY0CM003.FY1FCTYC cursor, modified, bold; /* Set cursor*/
        else
          converseLib.validationFailed(66);
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM003.XXXPRCNM = "FY0C250"; /* Process name*/
          set FY0CM003.FY1FCTYC cursor, modified, bold; /* Set cursor*/
        end
      else
        converseLib.validationFailed(86);
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM003.XXXPRCNM = "FY0C250"; /* Process name*/
        set FY0CM003.FY1FCTYC cursor, modified, bold; /* Set cursor*/
      end
    else

      if (SQLCA.VAGen_SQLCODE == -811) /* If no errors*/
        converseLib.validationFailed(86);
        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        FY0CM003.XXXPRCNM = "FY0C250"; /* Process name*/
        set FY0CM003.FY1FCTYC cursor, modified, bold; /* Set cursor*/
      end
    end
  /* IF SQLCA.SQLCODE EQ 100;     /* If no errors*/
  /* IF FY0CW01.FY0CWSGP EQ '02';/* If footwear*/
  /* MOVE '03' TO VFCTY003.XGPCD;/* Try again for apparel*/
  /* PERFORM FY0C251;         /* Select unique factory row*/
  /* IF SQLCA.SQLCODE EQ 0;   /* If no errors*/
  /* MOVE 86 TO EZEMNO;*/
  /* MOVE 'Y' TO FY0CW01.FY0CWPSW;/* Indicate problem*/
  /* MOVE 'FY0C250' TO FY0CM003.XXXPRCNM;/* Process name*/
  /* SET FY0CM003.FY1FCTYC CURSOR,MODIFIED,BRIGHT;/* Set cursor*/
  /* END;*/
  /* ELSE;*/
  /* IF FY0CW01.FY0CWSGP EQ '03';/* If apparel*/
  /* MOVE '02' TO VFCTY003.XGPCD;/* Try again for footwear*/
  /* PERFORM FY0C251;       /* Select unique factory row*/
  /* IF SQLCA.SQLCODE EQ 0; /* If no errors*/
  /* MOVE 86 TO EZEMNO;*/
  /* MOVE 'Y' TO FY0CW01.FY0CWPSW;/* Indicate problem*/
  /* MOVE 'FY0C250' TO FY0CM003.XXXPRCNM;/* Process name*/
  /* SET FY0CM003.FY1FCTYC CURSOR,MODIFIED,BRIGHT;/* Set cursor*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* END;*/
  /* END;*/

    VFCTY003.XGPCD = FY0CW01.FY0CWSGP; /* Restore gpc code*/

    if (FY0CW01.FY0CWPSW == "N") /* No errors exist*/
      if (FY0CW01.FY0CM-FCTY-NBR-FL == "Y")
        if (FY0CW01.FY0CWSGP == "02" /* If footwear*/
         || FY0CW01.FY0CWSGP == "03") /* If apparel*/
          FY0C255(); /* Select factory number*/
          if (VFCTY003.FY-FCTY-NBR > 998)
            converseLib.validationFailed(167);
            FY0CM002.XXXPRCNM = "FY0C460";
            FY0CW01.FY0CWPSW = "Y";
            set FY0CM002.FY0CM-FCTY-NBR-FL cursor, bold;
            FY0CW01.FY0CWMAP = "2"; /* Set map to 2*/
            exit stack;
          end
          VFCTY003.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR + 1;
          FY0CM002.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR;
        end
      end

      FY0C654(); /* Add the new table row*/
      FY0CW01.FY0CWSKY = FY0CM003.FY1FCTYC; /* Save key*/
      FY0CW01.FY0CWMFL = "Y"; /* Set message flag to yes*/
    end
  end

  if (FY0CW01.FY0CWPSW == "N") /* No errors exist*/
    set VFCTY003 empty; /* Clear record*/
    FY0CW01.FY1FCTYC = " "; /* Reset screen keys*/
    FY0CW01.FY0CWSWR = "Y"; /* Set request for data switch*/
    set FY0CM002 initial; /* Clear map 2*/
    set FY0CM003 initial; /* Clear map 3*/
    FY0CW01.FY0CWMAP = "2"; /* Set map to 2*/
  end

end // end FY0C650

// Add factory table row
Function FY0C654()
   /* ------------------------------------------------------------*/
   /* This module adds a factory table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/
   /* *******************************************/
   /* temporary load of field for mike huynh 2/17/98*/
   /* ------------------------------------------------------------*/
   /* MOVE '       ' TO VFCTY003.FY-FCTY-MFG-CD;*/
   /* *******************************************/

  call "VFCTY003" ("A ", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C651"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "FY0CM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM003.XXXPRCNM = "FY0C651"; /* Process name*/
  end

end // end FY0C654

// Factory maintenance inq. map
Function FY0C700()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FY0C710(); /* Format and display the map*/

  FY0C720(); /* Check attention identifier*/

  FY0C730(); /* Reset fields to normal intensity*/

  FY0C740(); /* Verify the entered data*/

end // end FY0C700

// Format and display the map
Function FY0C710()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "N") /* No errors*/
    set FY0CM003 initial; /* Clear map output area*/
    FY0CM003.FY0CMFUN = "INQUIRY"; /* Set ADD title to map*/

    FY0CM003.XGPCD = FY0CM002.XGPCD; /* Move values to map*/
    FY0CM003.XGPDESC = FY0CM002.XGPDESC;
    FY0CM003.FY1FCTYC = FY0CM002.FY1FCTYC;
    FY0CM003.FY1FCTNM = FY0CM002.FY1FCTNM;
    FY0CM003.FY1FCTSN = FY0CM002.FY1FCTSN;
    FY0CM003.FY0CM-FCTY-NBR-FL = FY0CM002.FY0CM-FCTY-NBR-FL;
    FY0CM003.FY-FCTY-NBR = FY0CM002.FY-FCTY-NBR;
    FY0CM003.FY1MFGDY = VFCTY003.FY1MFGDY; /* Manufacturesr lead days*/
    FY0CM003.FY1FABDY = VFCTY003.FY1FABDY; /* Fabric lead days*/
    FY0CM003.FY1STDC = VFCTY003.FY1STDC; /* Standard comp. lead days*/
    FY0CM003.FY1SPCLC = VFCTY003.FY1SPCLC; /* Special comp. lead days*/
    FY0CM003.FY1STCDY = VFCTY003.FY1STCDY; /* stitch days*/
    FY0CM003.FY1LSTDY = VFCTY003.FY1LSTDY; /* Mode code*/
    if (VFCTY003.XGPCD == "03" /* is it apparel?*/
     && VFCTY003.FY1FRGN == "Y") /* is factory an off-shore factory?*/
      FY0CM003.FY1MSCPC = VFCTY003.FY1MSCPC / 100; /* re-frmt as decimal pct*/
    else
      FY0CM003.FY1MSCPC = VFCTY003.FY1MSCPC; /* Misc. percentage*/
    end
    FY0CM003.FY1BGDPC = VFCTY003.FY1BGDPC; /* B-grade percentage*/
    FY0CM003.FY1CNTFL = VFCTY003.FY1CNTFL; /* fcty sub-contr flag*/
    FY0CM003.FY1PFYCD = VFCTY003.FY1PFYCD; /* Parent factory*/
    FY0CM003.FY1FMRMO = VFCTY003.FY1FMRMO; /* Max return months*/
    FY0CM003.FY1DFPRC = VFCTY003.FY1DFPRC; /* Default price*/

  end

  set FY0CM003.XGPCD protect; /* Gpc code*/
  set FY0CM003.XGPDESC protect; /* Gpc description*/
  set FY0CM003.FY1FCTYC protect; /* Factory code*/
  set FY0CM003.FY1FCTNM protect; /* Factory name*/
  set FY0CM003.FY1FCTSN protect; /* Factory short name*/
  set FY0CM003.FY1MFGDY protect; /* Manufacturers lead days*/
  set FY0CM003.FY1FABDY protect; /* Fabric lead days*/
  set FY0CM003.FY1STDC protect; /* Standard components lead days*/
  set FY0CM003.FY1SPCLC protect; /* Special components lead days*/
  set FY0CM003.FY1STCDY protect; /* Stitching days*/
  set FY0CM003.FY1LSTDY protect; /* Lasting days*/
  set FY0CM003.FY1MSCPC protect; /* Misc. pct.*/
  set FY0CM003.FY0CDFDS protect; /* Default description*/
  set FY0CM003.FY1DFPRC protect; /* Default price*/
  set FY0CM003.FY1BGDPC protect; /* B-grade percentage*/
  set FY0CM003.FY1CNTFL protect; /* fcty sub-contr flag*/
  set FY0CM003.FY1PFYCD protect; /* Parent factory*/
  set FY0CM003.FY1FMRMO protect; /* Max return months*/

  if (FY0CW01.FY0CWPSW == "N") /* No error message to display*/
    set FY0CM003.CATOAP cursor; /* Commarea TO application*/
  end

  if (FY0CM002.XGPCD == "03") /* Is it apparel?*/
    FY0CM003.FY0CMBGL = "IRREGULAR:";
    set FY0CM003.FY0CDFDS skip, invisible; /* Set default price*/
    set FY0CM003.FY1DFPRC skip, invisible; /* Set default description*/
    FY0CM003.FY0CMPFL = "PARENT FACTORY:";
    FY0CM003.FY0CMMRL = "MAX RETURN MONTHS:";
  else /* footwear*/
    if (COMMAREA.CACLVL[2] == "N") /* user authorized for these fields?*/
      set FY0CM003.FY1BGDPC skip, invisible; /* Set bgrade %*/
      set FY0CM003.FY1PFYCD skip, invisible; /* Set parent factory*/
      set FY0CM003.FY1FMRMO skip, invisible; /* Set max return months*/
      FY0CM003.FY0CMBGL = " ";
      FY0CM003.FY0CMPFL = " ";
      FY0CM003.FY0CMMRL = " ";
    else /* user is authorized to view these*/
                                   /* fields*/
      FY0CM003.FY0CMBGL = "B-GRADE %:";
      FY0CM003.FY0CMPFL = "PARENT FACTORY:";
      FY0CM003.FY0CMMRL = "MAX RETURN MONTHS:";
    end
    FY0CM003.FY0CDFDS = "DEFAULT PRICE:"; /* always display for inqui*/
  end

  FY0CM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  if (FY0CW01.FY0CWPSW == "Y") /* error message to display*/
    set FY0CM003 alarm; /* Indicate sound alarm*/
  end

  converse FY0CM003 ;

  FY0CW01.FY0CWPSW = "N"; /* Reset problem switch*/

end // end FY0C710

// Check attention identifier
Function FY0C720()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FY0CM003 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0CM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0CM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    set FY0CM003.CATOAP cursor, modified, bold; /* Highlight*/
    FY0CM003.XXXPRCNM = "FY0C720"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0CW01.FY0CWMAP = "1"; /* Move to map 1*/
    if (FY0CW01.FY0CWLSF == "N")
      FY0CW01.FY0CWSWR = "Y"; /* Request for data switch*/
    else
      FY0CW01.FY0CWSWR = "N"; /* Request for data switch*/
    end
    FY0CW01.FY0CWLSF = "Y"; /* List screen flag*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf10) /* PF10 was pressed*/
    FY0CW01.FY0CWMAP = "2"; /* Move to map 2*/
    if (FY0CW01.FY0CWLSF == "N")
      FY0CW01.FY0CWSWR = "Y"; /* Reset request for data*/
    end
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM003.XXXPRCNM = "FY0C720"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    FY0CM003.XXXPRCNM = "FY0C720"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C720

// Reset highlighted fields
Function FY0C730()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0CM003.XGPDESC initialAttributes; /* Gpc description*/
  set FY0CM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM003.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0CM003.FY1MFGDY initialAttributes; /* Manufacturers lead days*/
  set FY0CM003.FY1FABDY initialAttributes; /* Fabric lead days*/
  set FY0CM003.FY1STDC initialAttributes; /* Standard components lead days*/
  set FY0CM003.FY1SPCLC initialAttributes; /* Special components lead days*/
  set FY0CM003.FY1STCDY initialAttributes; /* Stitching days*/
  set FY0CM003.FY1LSTDY initialAttributes; /* Lasting days*/
  set FY0CM003.FY1MSCPC initialAttributes; /* Misc. pct.*/
  set FY0CM003.FY1BGDPC initialAttributes; /* B-grade percentage*/
  set FY0CM003.FY1CNTFL initialAttributes; /* fcty sub-contr flag*/
  set FY0CM003.FY1PFYCD initialAttributes; /* Parent*/
  set FY0CM003.FY1FMRMO initialAttributes; /* Return months*/
  set FY0CM003.FY0CDFDS initialAttributes; /* Default description*/
  set FY0CM003.FY1DFPRC initialAttributes; /* Default price*/
  set FY0CM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C730

// Verify the entered data
Function FY0C740()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "N"; /* Initialize data entered flag*/

  if (FY0CM003.CAITEM > " ") /* Application data was entered*/
    set FY0CM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C740"; /* Process name*/
  end

end // end FY0C740

// Factory maintenance change map
Function FY0C800()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FY0C810(); /* Format and display the map*/

  FY0C820(); /* Check attention identifier*/

  FY0C830(); /* Reset Highlighted fields*/

  FY0C840(); /* Verify the entered data*/

  FY0C850(); /* Process valid input request*/

end // end FY0C800

// Format and display the map
Function FY0C810()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "N") /* No error*/
    set FY0CM003 initial; /* Clear map output area*/
    FY0CM003.FY0CMFUN = "CHANGE"; /* Move inquiry literal to map*/
    FY0CM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    FY0CM003.XGPCD = FY0CM002.XGPCD; /* Move selected fields*/
    FY0CM003.XGPDESC = FY0CM002.XGPDESC;
    FY0CM003.FY1FCTYC = FY0CM002.FY1FCTYC;
    FY0CM003.FY1FCTNM = FY0CM002.FY1FCTNM;
    FY0CM003.FY0CM-FCTY-NBR-FL = FY0CM002.FY0CM-FCTY-NBR-FL;
    FY0CM003.FY-FCTY-NBR = FY0CM002.FY-FCTY-NBR;
    FY0CM003.FY1FCTSN = FY0CM002.FY1FCTSN;
    FY0CM003.FY1MFGDY = VFCTY003.FY1MFGDY;
    FY0CM003.FY1FABDY = VFCTY003.FY1FABDY;
    FY0CM003.FY1STDC = VFCTY003.FY1STDC;
    FY0CM003.FY1SPCLC = VFCTY003.FY1SPCLC;
    FY0CM003.FY1STCDY = VFCTY003.FY1STCDY;
    FY0CM003.FY1LSTDY = VFCTY003.FY1LSTDY;
    if (VFCTY003.XGPCD == "03" /* apparel*/
     && VFCTY003.FY1FRGN == "Y") /* off-shore factory*/
      FY0CM003.FY1MSCPC = VFCTY003.FY1MSCPC / 100; /* adjust decimal pt*/
    else
      FY0CM003.FY1MSCPC = VFCTY003.FY1MSCPC;
    end
    FY0CM003.FY1BGDPC = VFCTY003.FY1BGDPC;
    FY0CM003.FY1CNTFL = VFCTY003.FY1CNTFL;
    FY0CM003.FY1PFYCD = VFCTY003.FY1PFYCD;
    FY0CM003.FY1FMRMO = VFCTY003.FY1FMRMO;
    FY0CM003.FY1DFPRC = VFCTY003.FY1DFPRC;
  end

  if (FY0CM003.XGPCD == "03") /* it it apparel?*/
    FY0CM003.FY0CMBGL = "IRREGULAR:";
    set FY0CM003.FY0CDFDS skip, invisible; /* Set default price*/
    set FY0CM003.FY1DFPRC skip, invisible; /* Set default description*/
    FY0CM003.FY0CMPFL = "PARENT FACTORY:";
    FY0CM003.FY0CMMRL = "MAX RETURN MONTHS:";
  else /* footwear*/
    if (COMMAREA.CACLVL[2] == "N") /* is user authorized to chg these*/
                                   /* fields?*/
      set FY0CM003.FY1BGDPC skip, invisible;
      set FY0CM003.FY1PFYCD skip, invisible;
      set FY0CM003.FY1FMRMO skip, invisible;
      FY0CM003.FY0CMBGL = " ";
      FY0CM003.FY0CMPFL = " ";
      FY0CM003.FY0CMMRL = " ";
    else /* user is authorized to change these*/
                                   /* fields*/
      FY0CM003.FY0CMBGL = "B-GRADE %:";
      FY0CM003.FY0CMPFL = "PARENT FACTORY:";
      FY0CM003.FY0CMMRL = "MAX RETURN MONTHS:";
    end
    if (COMMAREA.CACLVL[1] == "N") /* is user authorized to change dflt*/
                                   /* prc?*/
      set FY0CM003.FY0CDFDS skip, invisible; /* Set default price*/
      set FY0CM003.FY1DFPRC skip, invisible; /* Set default description*/
    else /* user is authorized to change default*/
                                   /* price*/
      FY0CM003.FY0CDFDS = "DEFAULT PRICE:";
    end
  end

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0CM003 alarm;
  end

  converse FY0CM003 ;

  FY0CW01.FY0CWPSW = "N"; /* Initialize problem switch*/

end // end FY0C810

// Check attention identifier
Function FY0C820()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set FY0CM003 initial; /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0CM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0CM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0CM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/
    set FY0CM003.CATOAP cursor, modified, bold; /* Highlight*/
    FY0CM002.XXXPRCNM = "FY0C820"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0CW01.FY0CWMAP = "1"; /* Move to map 1*/
    FY0CW01.FY0CWMFL = "N"; /* Reset message flag*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0CM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0C111(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0CM003.XXXPRCNM = "FY0C820"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter /* ENTER was pressed*/
   || converseVar.eventKey is pf10) /* Pf10 was pressed*/
     /* next sentence*/
  else
    FY0CM003.XXXPRCNM = "FY0C820"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0C820

// Reset highlighted fields
Function FY0C830()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0CM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0CM003.XGPDESC initialAttributes; /* Gpc description*/
  set FY0CM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0CM003.FY1FCTNM initialAttributes; /* Factory name*/
  set FY0CM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0CM003.FY1MFGDY initialAttributes; /* Manufacturers lead days*/
  set FY0CM003.FY1FABDY initialAttributes; /* Fabric lead days*/
  set FY0CM003.FY1STDC initialAttributes; /* Standard components lead days*/
  set FY0CM003.FY1SPCLC initialAttributes; /* Special components lead days*/
  set FY0CM003.FY1STCDY initialAttributes; /* Stitching days*/
  set FY0CM003.FY1LSTDY initialAttributes; /* Lasting days*/
  set FY0CM003.FY1MSCPC initialAttributes; /* Misc. pct.*/
  set FY0CM003.FY1BGDPC initialAttributes; /* B-grade percentage*/
  set FY0CM003.FY0CDFDS initialAttributes; /* Default description*/
  set FY0CM003.FY1DFPRC initialAttributes; /* Default price*/
  set FY0CM003.FY1CNTFL initialAttributes; /* fcty sub-contr flag*/
  set FY0CM003.FY1PFYCD initialAttributes; /* Parent*/
  set FY0CM003.FY1FMRMO initialAttributes; /* Return months*/
  set FY0CM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0CM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0C830

// Verify the entered data
Function FY0C840()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0CM003.CAITEM > " ") /* Application data was entered*/
    set FY0CM003.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C840"; /* Process name*/
    exit stack;
  end

  if (FY0CM002.FY1FCTNM == FY0CW03.FY1FCTNM
   && FY0CM002.FY1FCTSN == FY0CW03.FY1FCTSN
   && FY0CM002.TSCLOCCD == FY0CW03.TSCLOCCD
   && FY0CM002.XXXSTAT == FY0CW03.XXXSTAT
   && FY0CM002.XXX-ADDR1 == FY0CW03.XXX-ADDR1
   && FY0CM002.XXX-ADDR2 == FY0CW03.XXX-ADDR2
   && FY0CM002.XXX-ADDR3 == FY0CW03.XXX-ADDR3
   && FY0CM002.XXXCITY == FY0CW03.XXXCITY
   && FY0CM002.XSTCD == FY0CW03.XSTCD
   && FY0CM002.XXXZIP == FY0CW03.XXXZIP
   && FY0CM002.XCTCD == FY0CW03.XCTCD
   && FY0CM002.XMCO == FY0CW03.PC-XCT-ORIG-CD
   && FY0CM002.FY1FCTPH == FY0CW03.FY1FCTPH
   && FY0CM002.FY1FAX == FY0CW03.FY1FAX
   && FY0CM002.FY1TELEX == FY0CW03.FY1TELEX
   && FY0CM002.FY1FCTRP == FY0CW03.FY1FCTRP
   && FY0CM002.FY1REPPH == FY0CW03.FY1REPPH
   && FY0CM002.FY1MGR == FY0CW03.FY1MGR
   && FY0CM002.FY1FASST == FY0CW03.FY1FASST
   && FY0CM002.FY1FRGN == FY0CW03.FY1FRGN
   && FY0CM002.FY6FOCD == FY0CW03.FY6FOCD
   && FY0CM002.YABCD == FY0CW03.YABCD
   && FY0CM002.YBCCD == FY0CW03.YBCCD
   && FY0CM002.FY-FCTY-MFG-CD == FY0CW03.FY-FCTY-MFG-CD
   && FY0CM002.FY1DOWNB == FY0CW03.FY0CWBDT
   && FY0CM002.FY1DOWNE == FY0CW03.FY0CWEDT
   && FY0CM002.FY1PRTY == FY0CW03.FY1PRTY
   && FY0CM002.FY1TYPFLG == FY0CW03.FY-FCTY-TYP-CD
   && FY0CM002.FY1MADD == FY0CW03.FY1MADD
   && FY0CM002.FY1REFPC == FY0CW03.FY1REFPC
   && FY0CM002.FY1REFDT == FY0CW03.FY0CWRDT
   && FY0CM002.FY1CMNT1 == FY0CW03.FY1CMNT1
   && FY0CM002.FY1CMNT2 == FY0CW03.FY1CMNT2
   && FY0CM003.FY1MFGDY == FY0CW03.FY1MFGDY
   && FY0CM003.FY1FABDY == FY0CW03.FY1FABDY
   && FY0CM003.FY1STDC == FY0CW03.FY1STDC
   && FY0CM003.FY1SPCLC == FY0CW03.FY1SPCLC
   && FY0CM003.FY1STCDY == FY0CW03.FY1STCDY
   && FY0CM003.FY1LSTDY == FY0CW03.FY1LSTDY
   && FY0CM003.FY1MSCPC == FY0CW03.FY1MSCPC
   && FY0CM003.FY1BGDPC == FY0CW03.FY1BGDPC
   && FY0CM003.FY1CNTFL == FY0CW03.FY1CNTFL
   && FY0CM003.FY1PFYCD == FY0CW03.FY1PFYCD
   && FY0CM003.FY1FMRMO == FY0CW03.FY1FMRMO
   && FY0CM003.FY1DFPRC == FY0CW03.FY1DFPRC
   && FY0CW01.FY0CW-UPDATE-FCTY-NBR-FL == "N")

    if (converseVar.eventKey is enter) /* If ENTER was pressed*/
      FY0CW01.FY0CWSKY = FY0CM003.FY1FCTYC; /* Save key*/
      set FY0CM002 initial;
      if (FY0CW01.FY0CWLSF == "Y")
        FY0CM001.FY0CMSEL[FY0CWIXM] = " "; /* Blank out selection*/
      else
        FY0CW01.FY0CWSWR = "N"; /* Set request for data to no*/
        set VFCTY003 empty; /* Clear factory record*/
      end
      FY0CW01.FY0CWMAP = "2"; /* Set map to 2*/
      exit stack; /* Exit to redisplay map*/
    end
  else
    FY0C841(); /* Validate input data*/
  end

end // end FY0C840

// Validate any input data
Function FY0C841()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0CW01.FY0CWDEF = "Y"; /* Data has been entered*/

  if (FY0CM003.FY1PFYCD > " ") /* Parent fcty entered*/
    if (FY0CM003.FY1PFYCD == FY0CM003.FY1FCTYC) /* Can't equal factory*/
      converseLib.validationFailed(146); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
      set FY0CM003.FY1PFYCD cursor, modified, bold; /* highlight field*/
    else
      VFCTY003.XGPCD = FY0CM003.XGPCD;
      VFCTY003.FY1FCTYC = FY0CM003.FY1PFYCD; /* Move parent to factory*/
      FY0C251();
      if (SQLCA.VAGen_SQLCODE == 0)
         /* next sentence*/
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          converseLib.validationFailed(33); /* error message*/
          FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
          FY0CM003.XXXPRCNM = "FY0C641"; /* Process name*/
          set FY0CM003.FY1PFYCD cursor, modified, bold; /* highlight field*/
        end
      end
      VFCTY003.VFCTY003-GROUP = FY0CW03.FY0CWGRP; /* Restore record*/
    end
  end

  if (FY0CM003.FY1CNTFL == "Y" /* if fcty sub-contr flag entered*/
   || FY0CM003.FY1CNTFL == "N") /* check valid code*/
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C841"; /* Process name*/
    set FY0CM003.FY1CNTFL cursor, modified, bold; /* highlight field*/
  end

  if (FY0CM003.XGPCD == "02") /* If gpc code is footwear*/
    if (FY0CM003.FY1DFPRC < 1) /* If invalid default price*/
      converseLib.validationFailed(155); /* error message*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      FY0CM003.XXXPRCNM = "FY0C841"; /* Process name*/
      set FY0CM003.FY1DFPRC cursor, modified, bold; /* highlight field*/
    else
      if (FY0CM003.FY1DFPRC != VFCTY003.FY1DFPRC) /* price changed*/
        XX0XS01(); /* date routine*/
        VFCTY003.FY1DFPRC = FY0CM003.FY1DFPRC; /* Default price*/
        VFCTY003.FY1DFLDT = XX0XW01.XX0XWDAT; /* Current date*/
      end
    end
  end

  if (FY0CM003.FY1MSCPC > 100 /* If invalid Misc. percent*/
   || FY0CM003.FY1MSCPC < 0) 
    converseLib.validationFailed(56); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C841"; /* Process name*/
    set FY0CM003.FY1MSCPC cursor, modified, bold; /* highlight field*/
  end

  if (FY0CM003.XGPCD == "02") /* If gpc code is footwear*/
    if (FY0CW01.FY0CWPSW == "N") /* No errors found*/
      if (VFCTY003.FY1DFLDT == XX0XW01.XX0XWDAT) /* price chgd today*/
        FY0C842(); /* Check if tag already written*/
      end
    end
  end

  FY0C845(); /* validate Bgrade %*/

end // end FY0C841

// Scan tag record
Function FY0C842()

   /* ----------------------------------------------------------*/
   /* This module will scans for a row from the DFCTY.VFYTAG01*/
   /* tag record database.*/
   /* ----------------------------------------------------------*/

  set FYHREC empty; /* Initialize FYHREC*/

  FYHREC.XGPCD = VFCTY003.XGPCD; /* Move fields in*/
  FYHREC.FY1FCTYC = VFCTY003.FY1FCTYC; /* Factory code*/
  FYHREC.SY1STNBR = "******"; /* Style number*/

  try
    call "IO4550" ("S1", SQLCA, FYHREC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Valid return code*/
    FY0C843(); /* Read next tag record*/
    FY0C844(); /* Close tag file*/
    return; /* Return to previous process*/
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Not found*/
    converseLib.validationFailed(11); /* Indicate resourse not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Terminate function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0C842"; /* Process name*/
  TA1REC.TA1LOC = "SELECT A TAG RECORD";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYTAG01"; /* TABLE VIEW NAME*/
  TA1REC.TA1TBLKE = "FYHREC.FYHKEY"; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  FY0CM003.XXXPRCNM = "FY0C842"; /* Process name*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes.*/

  exit stack;

end // end FY0C842

// Read next tag record
Function FY0C843()

   /* ----------------------------------------------------------*/
   /* This module will reads next row from the DFCTY.VFYTAG01*/
   /* tag record database.*/
   /* ----------------------------------------------------------*/

  try
    call "IO4550" ("N1", SQLCA, FYHREC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Valid return code*/
    return; /* Return to previous process*/
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 100)    /* Not found*/
    FY0C642(); /* Write tag record*/
    return; /* ; Return to previous process*/
  end

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Not found*/
    converseLib.validationFailed(11); /* Indicate resourse not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Terminate function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0C843"; /* Process name*/
  TA1REC.TA1LOC = "READ NEXT TAG RECORD";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYTAG01"; /* TABLE VIEW NAME*/
  TA1REC.TA1TBLKE = "FYHREC.FYHKEY"; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  FY0CM003.XXXPRCNM = "FY0C843"; /* Process name*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes.*/

  exit stack;

end // end FY0C843

// Close DFCTY.VFYTAG01 file
Function FY0C844()

   /* ----------------------------------------------------------*/
   /* This module will close the DFCTY.VFYTAG01 file.*/
   /* ----------------------------------------------------------*/

  try
    call "IO4550" ("C1", SQLCA, FYHREC) {isNoRefresh = yes, isExternal = yes};
  end /* select row*/

  if (sysVar.errorCode == "00000000" /* Successful call*/
   && SQLCA.VAGen_SQLCODE == 0)      /* Valid return code*/
    return; /* Return to previous process*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0C844"; /* Process name*/
  TA1REC.TA1LOC = "CLOSE TAG FILE";
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYTAG01"; /* TABLE VIEW NAME*/
  TA1REC.TA1TBLKE = "FYHREC.FYHKEY"; /* TABLE KEY*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error routine*/

  FY0CM003.XXXPRCNM = "FY0C844"; /* Process name*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes.*/

  exit stack;

end // end FY0C844

// validate bgrade %
Function FY0C845()
  /* -------------------------------------------------------------------*/
  /* Validate the Bgrade %*/
  /* If Bgrade % has been modified, create tag records for any*/
  /* existing items*/
  /* -------------------------------------------------------------------*/

  if (FY0CM003.FY1BGDPC > 100 /* If invalid refund percent*/
   || FY0CM003.FY1BGDPC < 1) 
    converseLib.validationFailed(56); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM003.XXXPRCNM = "FY0C845"; /* Process name*/
    set FY0CM003.FY1BGDPC cursor, modified, bold; /* highlight field*/
    return;
  end

  set FY0CW04 empty;

  if (FY0CM003.FY1BGDPC != VFCTY003.FY1BGDPC) /* bgrade pct changed*/
    FY0CS05(); /* create bgrade tag records*/
  else
    return; /* if % not changed, return to*/
  end /* previous process*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && FY0CW04.FY0CWRCD == "00")      /* Normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, display an error message and return.*/
   /* otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && FY0CW04.FY0CWRCD == "09"       /* Resource not available*/
  )                                 
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(11);

  else
    if (sysVar.errorCode == "00000000" /* Call successful*/
     && FY0CW04.FY0CWRCD == "11"       /* no items found for this fcty*/
    )                                 
      FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(276);

    else

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && FY0CW04.FY0CWRCD > "95"        /* negative SQL code error*/
       && FY0CW04.FY0CWRCD < "100")     

        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(10);

      else

        FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(10); /* indicate system error*/
        converseLib.clearScreen();
         /* clear screen before display*/

      end
    end
  end

  exit stack;

end // end FY0C845

// Process valid input request
Function FY0C850()
   /* ------------------------------------------------------------*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (FY0CW01.FY0CWPSW == "Y") /* Errors occurred*/
    return;
  end

  VFCTY003.FY1MFGDY = FY0CM003.FY1MFGDY; /* Move in fields*/
  VFCTY003.FY1FABDY = FY0CM003.FY1FABDY;
  VFCTY003.FY1STDC = FY0CM003.FY1STDC;
  VFCTY003.FY1SPCLC = FY0CM003.FY1SPCLC;
  VFCTY003.FY1STCDY = FY0CM003.FY1STCDY;
  VFCTY003.FY1LSTDY = FY0CM003.FY1LSTDY;
  if (VFCTY003.XGPCD == "03" /* apparel*/
   && VFCTY003.FY1FRGN == "Y") /* off-shore factore*/
    VFCTY003.FY1MSCPC = FY0CM003.FY1MSCPC * 100; /* adjust decimal pt*/
  else
    VFCTY003.FY1MSCPC = FY0CM003.FY1MSCPC;
  end
  VFCTY003.FY1BGDPC = FY0CM003.FY1BGDPC;
  VFCTY003.FY1PFYCD = FY0CM003.FY1PFYCD;
  VFCTY003.FY1FMRMO = FY0CM003.FY1FMRMO;
  VFCTY003.FY1CNTFL = FY0CM003.FY1CNTFL;
  VFCTY003.FY1DFPRC = FY0CM003.FY1DFPRC; /* default price chgd*/

  FY0CW01.FY0CWTM1 = VGVar.currentFormattedTime; /* set the zzz change info*/
  FY0CW01.FY0CWHR3 = FY0CW01.FY0CWHR1;
  FY0CW01.FY0CWMN3 = FY0CW01.FY0CWMN1;
  VFCTY003.ZZZCHGTM = FY0CW01.FY0CWTM3;
   /* ----------- Y2K OUT BEGIN ---------*/
   /* MOVE EZEDTE TO FY0CW01.FY0CWYMD;*/
   /* ----------- Y2K OUT END -----------*/

   /* ----------- Y2K IN BEGIN ----------*/
  XX0XS01(); /* Obtain current date*/
  FY0CW01.FY0CWDTE = XX0XW01.XX0XWDAT;
   /* ----------- Y2K IN END ------------*/
  VFCTY003.ZZZCHGDT = FY0CW01.FY0CWDTE;

  if (converseVar.eventKey is pf10)
    FY0CW01.FY0CWMAP = "2";
    exit stack; /* Flo to converse map*/
  end

  if (FY0CW01.FY0CWDEF == "Y") /* and data was entered*/

    if (FY0CM003.FY0CM-FCTY-NBR-FL == "Y" /* Factory number flag*/
     && VFCTY003.FY-FCTY-NBR == 0)        /* Factory number*/
      VFCTY003.XGPCD = FY0CM002.XGPCD;
      FY0C255(); /* Select max nbr*/
      if (VFCTY003.FY-FCTY-NBR > 998)
        converseLib.validationFailed(167);
        FY0CM002.XXXPRCNM = "FY0C460";
        FY0CW01.FY0CWPSW = "Y";
        set FY0CM002.FY0CM-FCTY-NBR-FL cursor, bold;
        FY0CW01.FY0CWMAP = "2";
        exit stack;
      end
      VFCTY003.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR + 1; /* Add 1 to fcty nbr*/
      FY0CM002.FY-FCTY-NBR = VFCTY003.FY-FCTY-NBR;
    end

    FY0C851(); /* Update table*/

    if (SQLCA.VAGen_SQLCODE == 100) /* row was not found*/
      converseLib.validationFailed(12); /* update error occured*/
      FY0CW01.FY0CWMAP = "2"; /* Set map to 2*/
      FY0CW01.FY0CWSWR = "Y"; /* Set request for data switch*/
      exit stack; /* exit to redisplay map*/
    end

    if (FY0CW01.FY0CWUSF == "Y")
      FY3REC.XGPCD = VFCTY003.XGPCD;
      FY3REC.FY1FCTYC = VFCTY003.FY1FCTYC;
      FY3REC.FY3INPFL = "N"; /* In production flag*/
      FY3REC.FY3SFYFL = "N"; /* Factory style flag*/
      FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT; /* Change date*/
      FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM; /* Change time*/
      if (FY3REC.ZZZCHGCT == 9999) /* Change count*/
        FY3REC.ZZZCHGCT = 1;
      else
        FY3REC.ZZZCHGCT = FY3REC.ZZZCHGCT + 1;
      end
      FY0C852(); /* Update all style/color rows*/
    end

    if (FY0CW01.FY0CWPSW == "N") /* No errors occurred*/
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit(); /* commit the update*/
      FY0CW01.FY0CWSKY = FY0CM003.FY1FCTYC; /* Set Right map key*/
      set FY0CM002 initial; /* Clear map area*/
      set FY0CM003 initial; /* Clear map area*/
      FY0CW01.FY0CWMFL = "Y"; /* Set message flag to yes*/
      FY0CW01.FY0CWMAP = "2";
      set VFCTY003 empty; /* Clear factory record*/
      if (FY0CW01.FY0CWLSF == "Y")
        FY0CW01.FY0CWSWR = "Y"; /* Set request for data switch*/
        FY0CM001.FY0CMSEL[FY0CWIXM] = " "; /* move blnk to slct*/
      else
        FY0CW01.FY0CWSWR = "N"; /* Set request for data switch*/
      end
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback(); /* Roll back changes*/
    end
  end

end // end FY0C850

// Update selected row
Function FY0C851()
   /* ------------------------------------------------------------*/
   /* Update the factory row.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "VFCTY003" ("U ", SQLCA, VFCTY003) {isNoRefresh = yes, isExternal = yes}; /* Update row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100) /* End of selected set*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      FY0CW01.FY0CWPSW = "Y"; /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0CW01.FY0CWMAP = "2"; /* Set map to 2*/
    end
    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0C851"; /* Process name*/
    TA1REC.TA1LOC = "UPDATE TABLE ROW";
    TA1REC.TA1MAP = "FY0CM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY003"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM001.XXXPRCNM = "FY0C851"; /* Process name*/

  end

end // end FY0C851

// Update all style/color rows
Function FY0C852()
   /* ------------------------------------------------------------*/
   /* Update the factory/style table.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  try
    call "IO2990" ("UA", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update row*/

  if (sysVar.errorCode == "00000000") /* Call worked*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Rows found*/
     || SQLCA.VAGen_SQLCODE == 100) /* or not*/
      return;
    end
  end

  if (sysVar.errorCode == "00000000" /* Call worked*/
   && SQLCA.VAGen_SQLCODE == -911)   /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    converseLib.clearScreen();
     /* Clear screen before redisplay*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0C852"; /* Process name*/
  TA1REC.TA1LOC = "UPDATE TABLE ROW";
  TA1REC.TA1MAP = "FY0CM003"; /* Map name*/
  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  FY0CM003.XXXPRCNM = "FY0C852"; /* Process name*/

  FY0CW01.FY0CWPSW = "Y"; /* Set error switch*/

end // end FY0C852

// Validate refund date
Function FY0CS01()
   /* ------------------------------------------------------------*/
   /* Validate the input refund date*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  set TA2REC empty; /* Clear working record*/
  TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
  TA2REC.TA2GRTYP = "A"; /* move date type to record*/
  TA2REC.TA2GRGA = FY0CM002.FY1REFDT; /* move date*/
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
  if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
    FY0CW01.FY1REFDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
    FY0CW01.FY0CWRDT = TA2REC.TA2GRGA; /* save date in mmddyy*/
  else /* Invalid date entered*/
    converseLib.validationFailed(62); /* Error message*/
    FY0CW01.FY0CWPSW = "Y"; /* indicate problem*/
    FY0CM002.XXXPRCNM = "FY0CS01"; /* Process name*/
    set FY0CM002.FY1REFDT cursor, modified, bold;
  end

end // end FY0CS01

// Validate the down period dates
Function FY0CS02()
   /* ------------------------------------------------------------*/
   /* Validate the down period dates*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0CM002.FY1DOWNE > 0) /* Date entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = FY0CM002.FY1DOWNE; /* move date*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      FY0CW01.FY1DOWNE = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      FY0CW01.FY0CWEDT = TA2REC.TA2GRGA; /* save date in mmddyy*/
    else /* Invalid date entered*/
      converseLib.validationFailed(62); /* Error message*/
      FY0CW01.FY0CWPSW = "Y"; /* indicate problem*/
      FY0CM002.XXXPRCNM = "FY0CS02"; /* Process name*/
      set FY0CM002.FY1DOWNE cursor, modified, bold;
    end
  else /* Invalid date entered*/
    FY0CW01.FY1DOWNE = 0; /* move in zero to date*/
  end

  if (FY0CM002.FY1DOWNB > 0) /* Date entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = FY0CM002.FY1DOWNB; /* move date*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      FY0CW01.FY1DOWNB = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      FY0CW01.FY0CWBDT = TA2REC.TA2GRGA; /* save date in mmddyy*/
    else /* Invalid date entered*/
      converseLib.validationFailed(62); /* Error message*/
      FY0CW01.FY0CWPSW = "Y"; /* indicate problem*/
      FY0CM002.XXXPRCNM = "FY0CS02"; /* Process name*/
      set FY0CM002.FY1DOWNB cursor, modified, bold;
    end
  else /* Invalid date entered*/
    FY0CW01.FY1DOWNB = 0; /* move in zero to date*/
  end

  if (FY0CM002.FY1DOWNE < FY0CM002.FY1DOWNB)
    converseLib.validationFailed(63); /* error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0CS02"; /* Process name*/
    set FY0CM002.FY1DOWNB cursor, modified, bold; /* highlight field*/
    set FY0CM002.FY1DOWNE modified, bold; /* highlight field*/
  end

  if (FY0CM002.FY1DOWNB == 0 /* If beg date not entered*/
   && FY0CM002.FY1DOWNE > 0) /* and ending date is entered*/
    converseLib.validationFailed(62); /* Invalid date error message*/
    FY0CW01.FY0CWPSW = "Y"; /* Indicate problem*/
    FY0CM002.XXXPRCNM = "FY0CS02"; /* Process name*/
    set FY0CM002.FY1DOWNB cursor, modified, bold; /* highlight field*/
  end

end // end FY0CS02

// Select liaison/field off. row
Function FY0CS03()
   /* ------------------------------------------------------------*/
   /* This module selects a table row from the liaison/field*/
   /* office table. It will return a system error if an*/
   /* unexpected return code is received.*/
   /* ------------------------------------------------------------*/

  call "IO2790" ("S ", SQLCA, FY6REC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100)
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0CS03"; /* Process name*/
    TA1REC.TA1LOC = "SELECT TABLE ROW";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFDOFC01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM002.XXXPRCNM = "FY0CS03"; /* Process name*/
  end

end // end FY0CS03

// Select location table row
Function FY0CS04()
   /* ------------------------------------------------------------*/
   /* This module selects a table row from the location table.*/
   /* It will return a system error if an unexpected return*/
     /* code is received.*/
   /* ------------------------------------------------------------*/

  call "IO2350" ("S ", SQLCA, TSCREC) {isNoRefresh = yes, isExternal = yes}; /* Select table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100)
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0CS04"; /* Process name*/
    TA1REC.TA1LOC = "SELECT TABLE ROW";
    TA1REC.TA1MAP = "FY0CM002"; /* Map name*/
    TA1REC.TA1DBASE = "DTRANS  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VTSLOC01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0CM002.XXXPRCNM = "FY0CS04"; /* Process name*/
  end

end // end FY0CS04

// Create Bgrade Tag Records
Function FY0CS05()
   /* ------------------------------------------------------------*/
   /* Create Bgrade Tag records by calling a COBOL subroutine*/
   /* ------------------------------------------------------------*/

  FY0CW04.XGPCD = FY0CW01.XGPCD;
  FY0CW04.FY1FCTYC = FY0CM003.FY1FCTYC;
  FY0CW04.FY0CWPCT = FY0CM003.FY1BGDPC;
  FY0CWSQL = 0;
  FY0CWRCD = "  ";

  try
    call "FY1350" (SQLCA, FY0CW04) {isNoRefresh = yes, isExternal = yes};
  end /* create tag recs*/

   /* ------------------------------------------------------------*/
   /* If successful, return to previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && FY0CW04.FY0CWRCD == "00")      /* Normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If data not available, post an error message and return.*/
   /* otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && FY0CW04.FY0CWRCD == "09"       /* Resource not available*/
  )                                 
    TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
    SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
    TA1REC.TA1FUNC = "POST";
    TA1REC.TA1TYPE = "DB2";
    TA1REC.TA1DBASE = "DPRODC";
    TA1REC.TA1TBLVU = "VPOITM01";
    TA1REC.TA1LOC = "FY0CS05 - 911 ERROR";
    TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  else

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && FY0CW04.FY0CWRCD == "99"       /* negative SQL code error*/
    )                                 

      TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
      SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
      TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
      TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
      TA1REC.TA1LOC = "FY0CS05 NEG SQL CODE";
      TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    else

      if (sysVar.errorCode == "00000000" /* Call successful*/
       && FY0CW04.FY0CWRCD == "11"       /* NO PO HDR FOUND FOR ITEM*/
      )                                 

        TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
        SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
        TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
        TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
        TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
        TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
        TA1REC.TA1LOC = "NO PO HDR FOR ITEM  ";
        TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      else

        if (sysVar.errorCode == "00000000" /* Call successful*/
         && FY0CW04.FY0CWRCD == "12"       /* SEL. SET ON FOB FILE FAILED*/
        )                                 

          TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
          SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
          TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
          TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
          TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
          TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
          TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/
          TA1REC.TA1LOC = "SS ON FOB TBL FAILED";
          TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

          call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        else

          if (sysVar.errorCode == "00000000" /* Call successful*/
           && FY0CW04.FY0CWRCD == "13"       /* SEL. SET ON POITEM FAILED*/
          )                                 

            TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
            SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
            TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
            TA1REC.TA1FUNC = "RETN"; /* Termination function*/
            TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
            TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
            TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
            TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
            TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
            TA1REC.TA1LOC = "SS ON POITEM  FAILED";
            TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

            call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

          else

            if (sysVar.errorCode == "00000000" /* Call successful*/
             && FY0CW04.FY0CWRCD == "14"       /* FETCH ON FOB FILE FAILED*/
            )                                 

              TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
              SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
              TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
              TA1REC.TA1FUNC = "RETN"; /* Termination function*/
              TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
              TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
              TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
              TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
              TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/
              TA1REC.TA1LOC = "FETCH ON FOB FAILED";
              TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

              call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

            else

              if (sysVar.errorCode == "00000000" /* Call successful*/
               && FY0CW04.FY0CWRCD == "15"       /* CLOSE ON FOB FILE FAILED*/
              )                                 

                TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
                TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
                TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
                TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
                TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
                TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
                TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/
                TA1REC.TA1LOC = "CLOSE ON FOB FAILED";
                TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

              else

                if (sysVar.errorCode == "00000000" /* Call successful*/
                 && FY0CW04.FY0CWRCD == "16"       /* COMMIT FAILED*/
                )                                 

                  TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                  SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
                  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
                  TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
                  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
                  TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
                  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
                  TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/
                  TA1REC.TA1LOC = "CLOSE ON FOB FAILED";
                  TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

                else
                  if (sysVar.errorCode == "00000000" /* Call successful*/
                   && FY0CW04.FY0CWRCD == "95"       /* TA0030 PROBLEM*/
                  )                                 

                    TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                    SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
                    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
                    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
                    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
                    TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
                    TA1REC.TA1DBASE = "        "; /* Data base name*/
                    TA1REC.TA1TBLVU = "TA0030  "; /* Table view name*/
                    TA1REC.TA1LOC = "TA0030 PROBLEM     ";
                    TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

                  else

                    if (sysVar.errorCode == "00000000" /* Call successful*/
                     && FY0CW04.FY0CWRCD == "96"       /* PO HDR FETCH FAILED*/
                    )                                 

                      TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                      SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
                      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
                      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
                      TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
                      TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
                      TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
                      TA1REC.TA1TBLVU = "VPOHDR01"; /* Table view name*/
                      TA1REC.TA1LOC = "FETCH PO HDR FAILED";
                      TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

                    else

                      if (sysVar.errorCode == "00000000" /* Call successful*/
                       && FY0CW04.FY0CWRCD == "97"       /* CLOSE FAILED ON POITEM*/
                      )                                 

                        TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                        SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
                        TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
                        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
                        TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
                        TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
                        TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
                        TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
                        TA1REC.TA1LOC = "CLOSE ON PO ITEM FAILED";
                        TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                        call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

                      else

                        if (sysVar.errorCode == "00000000" /* Call successful*/
                         && FY0CW04.FY0CWRCD == "98"       /* FETCH ON POITEM FAILED*/
                        )                                 

                          TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                          SQLCA.VAGen_SQLCODE = FY0CW04.FY0CWSQL;
                          TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL commarea*/
                          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                          TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
                          TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
                          TA1REC.TA1PGMNO = "FY0CS05"; /* Program number*/
                          TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
                          TA1REC.TA1TBLVU = "VPOITM01"; /* Table view name*/
                          TA1REC.TA1LOC = "FETCH ON PO ITEM FAILED";
                          TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                          call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

                        else

                          TA1REC.TA1MAP = sysVar.errorCode; /* csp return code*/
                          TAEREC.TAEDESC2 = FY0CW04.FY1FCTYC; /* subroutine parameters*/

                          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
                          TA1REC.TA1TYPE = "APPL"; /* Type of error*/
                          TA1REC.TA1LOC = "FY0CS05 - BAD CALL";
                          TA1REC.TA1TBLKE = FY0CW04.FY0CWGR4;

                          call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end // end FY0CS05


// converse pop up window
Function XPYAB01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && YABTBL.YABCD[XX0XWCT1] != "99") /* Or end of data*/
        if (YABTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YABTBL.YABCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YABTBL.YABDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (YABTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YABTBL.YABCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YABTBL.YABDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end

  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && YABTBL.YABCD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end XPYAB01

// converse pop up window
Function XPYBC01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && YBCTBL.YBCCD[XX0XWCT1] != "99") /* Or end of data*/
        if (YBCTBL.XXXSTAT[XX0XWCT1] == "A") /* If active status on code*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YBCTBL.YBCCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YBCTBL.YBCDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (YBCTBL.XXXSTAT[XX0XWCT1] == "A") /* If the status is active*/
          XX0XM001.XX0XMCD[XX0XWCT2] = YBCTBL.YBCCD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YBCTBL.YBCDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end

  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && YBCTBL.YBCCD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end

end // end XPYBC01


//*** RECORD=FY0CW01 ****
// Working storage for FY0C - Factory Inquiry/Maintenance
// ***********************
Record FY0CW01 type basicRecord
  10 FY0CWIXM FY0CWIXM ; 
  10 FY0CWGPI FY0CWGPI ; 
  10 FY0CWSGP FY0CWSGP ; 
  10 FY0CWSIX FY0CWSIX ; 
  10 FY0CWSPG FY0CWSPG ; 
  10 FY0CWSWC FY0CWSWC ; 
  10 FY0CWPSW FY0CWPSW ; 
  10 FY0CWSWR FY0CWSWR ; 
  10 FY0CWLSF FY0CWLSF ; 
  10 FY0CWUSF FY0CWUSF ; 
  10 FY0CWTSP FY0CWTSP ; 
  10 FY0CWMAP FY0CWMAP ; 
  10 FY0CWFSW FY0CWFSW ; 
  10 FY0CWSKY FY0CWSKY ; 
  10 FY0CWCFL FY0CWCFL ; 
  10 XGPCD XGPCD ; 
  10 XGPDESC XGPDESC ; 
  10 FY1FCTYC FY1FCTYC ; 
    15 FY1FCTPR1 char(1) ; 
    15 FY1FCTPR2 char(1) ; 
    15 FY1FCTPR3 char(1) ; 
    15 * char(1) ; 
  10 FY1EQPFLG FY1EQPFLG ; 
  10 FY1FCTNM FY1FCTNM ; 
  10 FY1PRTY FY1PRTY ; 
  10 XCTCD XCTCD ; 
  10 XCTDESC XCTDESC ; 
  10 XXXSTAT XXXSTAT ; 
  10 FY0CWSTD FY0CWSTD ; 
  10 FY0CM-FCTY-NBR-FL FY0CM-FCTY-NBR-FL ; 
  10 FY0CW-UPDATE-FCTY-NBR-FL FY0CW-UPDATE-FCTY-NBR-FL ; 
  10 FY0CWSKF FY0CWSKF ; 
  10 FY0CWSFL FY0CWSFL ; 
  10 FY0CWMFL FY0CWMFL ; 
  10 FY0CWURF FY0CWURF ; 
  10 FY0CWDEF FY0CWDEF ; 
  10 FY0CWMLF FY0CWMLF ; 
  10 FY0CWDTE FY0CWDTE ; 
    15 FY0CWCEN FY0CWCEN ; 
    15 FY0CWYMD FY0CWYMD ; 
      20 FY0CWYY FY0CWYY ; 
      20 FY0CWMM FY0CWMM ; 
      20 FY0CWDD FY0CWDD ; 
  10 FY0CWCDT FY0CWCDT ; 
    15 FY0CWCMM FY0CWCMM ; 
    15 FY0CWCDD FY0CWCDD ; 
    15 FY0CWCYY FY0CWCYY ; 
  10 FY1REFPC FY1REFPC ; 
  10 FY1REFDT FY1REFDT ; 
  10 FY0CWRDT FY0CWRDT ; 
  10 FY1PRFPC FY1PRFPC ; 
  10 FY1PRFDT FY1PRFDT ; 
  10 FY0CWPDT FY0CWPDT ; 
  10 FY1DOWNB FY1DOWNB ; 
  10 FY0CWBDT FY0CWBDT ; 
  10 FY1DOWNE FY1DOWNE ; 
  10 FY0CWEDT FY0CWEDT ; 
  10 FY0CWTM1 FY0CWTM1 ; 
    15 FY0CWHR1 FY0CWHR1 ; 
    15 FY0CWC1 FY0CWC1 ; 
    15 FY0CWMN1 FY0CWMN1 ; 
    15 FY0CWC2 FY0CWC2 ; 
    15 FY0CWSEC FY0CWSEC ; 
  10 FY0CWTM2 FY0CWTM2 ; 
    15 FY0CWHR2 FY0CWHR2 ; 
    15 FY0CWCOL FY0CWCOL ; 
    15 FY0CWMN2 FY0CWMN2 ; 
  10 FY0CWTM3 FY0CWTM3 ; 
    15 FY0CWHR3 FY0CWHR3 ; 
    15 FY0CWMN3 FY0CWMN3 ; 
  10 TA5TSQIX TA5TSQIX ; 
  10 FY0CWUPD FY0CWUPD ; 
end // end FY0CW01


//*** RECORD=FY0CW02 ****
// Temporary storage record for FY0C - Factory Inquiry/Maint.
// ***********************
Record FY0CW02 type basicRecord
  10 FY0CWLEN FY0CWLEN ; 
  10 FY0CWLIN FY0CWLIN [13] ; 
    15 FY0CMSEL FY0CMSEL ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 FY1FCTSN FY1FCTSN ; 
    15 XCTDESC XCTDESC ; 
    15 FY1MGR FY1MGR ; 
    15 FY1FASST FY1FASST ; 
    15 XXXSTAT XXXSTAT ; 
end // end FY0CW02


//*** RECORD=FY0CW03 ****
// * This record is a clone of the FY1REC record and must have
// * the same layout.
// *
// * maint     date      description
// *-----------------------------------------------------------
// * GAMEN   10/12/92    Add 2 new fields for DB2 changes.
// * GAMEN   11/01/93    Resize address fields and change name
// *                     to XXX-ADDR.
// * DRAMSE  06/18/98    changed to reflect new view.
// * (PCF137)            added field fy-fcty-typ-cd
// ***********************
Record FY0CW03 type basicRecord
  5 FY0CWGRP FY0CWGRP ; 
    10 FY0CWKEY FY0CWKEY ; 
      15 XGPCD XGPCD ; 
      15 FY1FCTYC FY1FCTYC ; 
    10 FY-FCTY-TYP-CD FY-FCTY-TYP-CD ; 
    10 FY1FCTNM FY1FCTNM ; 
    10 FY1FCTSN FY1FCTSN ; 
    10 FY-FCTY-NBR FY-FCTY-NBR ; 
    10 FY-FCTY-XREF-NBR FY-FCTY-XREF-NBR ; 
    10 TSCLOCCD TSCLOCCD ; 
    10 XXX-ADDR1 XXX-ADDR1 ; 
    10 XXX-ADDR2 XXX-ADDR2 ; 
    10 XXX-ADDR3 XXX-ADDR3 ; 
    10 XXXCITY XXXCITY ; 
    10 XSTCD XSTCD ; 
    10 XXXZIP XXXZIP ; 
    10 XCTCD XCTCD ; 
    10 PC-XCT-ORIG-CD PC-XCT-ORIG-CD ; 
    10 FY1FCTPH FY1FCTPH ; 
    10 FY1FAX FY1FAX ; 
    10 FY1TELEX FY1TELEX ; 
    10 FY1FCTRP FY1FCTRP ; 
    10 FY1REPPH FY1REPPH ; 
    10 FY1MGR FY1MGR ; 
    10 FY1FASST FY1FASST ; 
    10 FY1FRGN FY1FRGN ; 
    10 FY6FOCD FY6FOCD ; 
    10 YABCD YABCD ; 
    10 YBCCD YBCCD ; 
    10 FY1DOWNB FY1DOWNB ; 
    10 FY1DOWNE FY1DOWNE ; 
    10 FY1PRTY FY1PRTY ; 
    10 FY1PERFR FY1PERFR ; 
    10 FY1MADD FY1MADD ; 
    10 FY1REFPC FY1REFPC ; 
    10 FY1REFDT FY1REFDT ; 
    10 FY1PRFPC FY1PRFPC ; 
    10 FY1PRFDT FY1PRFDT ; 
    10 FY1MFGDY FY1MFGDY ; 
    10 FY1FABDY FY1FABDY ; 
    10 FY1STDC FY1STDC ; 
    10 FY1SPCLC FY1SPCLC ; 
    10 FY1STCDY FY1STCDY ; 
    10 FY1LSTDY FY1LSTDY ; 
    10 FY1BGDPC FY1BGDPC ; 
    10 FY1MSCPC FY1MSCPC ; 
    10 FY1CMNT1 FY1CMNT1 ; 
    10 FY1CMNT2 FY1CMNT2 ; 
    10 FY1PFYCD FY1PFYCD ; 
    10 FY1FMRMO FY1FMRMO ; 
    10 FY1CNTFL FY1CNTFL ; 
    10 FY-PC-BAR-CD-FL FY-PC-BAR-CD-FL ; 
    10 FY1DFPRC FY1DFPRC ; 
    10 FY1DFLDT FY1DFLDT ; 
    10 FY-FCTY-MFG-CD FY-FCTY-MFG-CD ; 
    10 XXXSTAT XXXSTAT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
  5 FY0CWBDT FY0CWBDT ; 
  5 FY0CWEDT FY0CWEDT ; 
  5 FY0CWRDT FY0CWRDT ; 
end // end FY0CW03


Record FY0CW04 type serialRecord  {
  fileName = "FY0CW04"
  }
  5 FY0CWGR4 FY0CWGR4 ; 
    10 XGPCD XGPCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 FY0CWPCT FY0CWPCT ; 
    10 FY0CWSQL FY0CWSQL ; 
    10 FY0CWRCD FY0CWRCD ; 
end // end FY0CW04


// Factory Number Flag
DataItem FY0CM-FCTY-NBR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem FY0CMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Update Factory Number Flag
DataItem FY0CW-UPDATE-FCTY-NBR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// beginning down date mmddyy
DataItem FY0CWBDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Colon 1
DataItem FY0CWC1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Colon 2
DataItem FY0CWC2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Day
DataItem FY0CWCDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Converted date
DataItem FY0CWCDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Working century
DataItem FY0CWCEN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// conformation flag
DataItem FY0CWCFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Month
DataItem FY0CWCMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Colon
DataItem FY0CWCOL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Year
DataItem FY0CWCYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Working day
DataItem FY0CWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Data Entered Flag
DataItem FY0CWDEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Working date
DataItem FY0CWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// ending down date mmddyy
DataItem FY0CWEDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Add/delete function switch
DataItem FY0CWFSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Index for gpc code table
DataItem FY0CWGPI smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem FY0CWGR4 char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Record group level
DataItem FY0CWGRP char(572)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Hour1
DataItem FY0CWHR1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Hour2
DataItem FY0CWHR2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Hour3
DataItem FY0CWHR3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Index for map fields
DataItem FY0CWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


// Key group level
DataItem FY0CWKEY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Temporary storage length
DataItem FY0CWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Data Display Line
DataItem FY0CWLIN char(108)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// List screen flag
DataItem FY0CWLSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map to be displayed
DataItem FY0CWMAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Message flag
DataItem FY0CWMFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Map loaded flag
DataItem FY0CWMLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Working month
DataItem FY0CWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Minute1
DataItem FY0CWMN1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Minute2
DataItem FY0CWMN2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Minute3
DataItem FY0CWMN3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// FY_BGRD_CST_PCT
DataItem FY0CWPCT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Previous refund date mmddyy
DataItem FY0CWPDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Problem switch
DataItem FY0CWPSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


DataItem FY0CWRCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Refund date mmddyy
DataItem FY0CWRDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Second1
DataItem FY0CWSEC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Selection flag
DataItem FY0CWSFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Saved gpc code
DataItem FY0CWSGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Save index
DataItem FY0CWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Save key flag
DataItem FY0CWSKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Save Key
DataItem FY0CWSKY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Save page
DataItem FY0CWSPG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// FY_BGRD_CST_PCT
DataItem FY0CWSQL int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// status description
DataItem FY0CWSTD char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Cursor end of file switch
DataItem FY0CWSWC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Request for data switch
DataItem FY0CWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Time1
DataItem FY0CWTM1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Time2
DataItem FY0CWTM2 char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Time3
DataItem FY0CWTM3 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Current temporary storage page
DataItem FY0CWTSP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end


DataItem FY0CWUPD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Update reload flag
DataItem FY0CWURF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Update style flag
DataItem FY0CWUSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end


// Working year month day
DataItem FY0CWYMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// Working year
DataItem FY0CWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


// equipment fcty flag
DataItem FY1EQPFLG char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end


