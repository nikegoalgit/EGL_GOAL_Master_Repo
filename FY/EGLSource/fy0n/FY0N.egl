package fy0n;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=FY0N ****
// This application displays the Report Request Menu screen and
// all subordinate report specification screens.
// 
// The menu is displayed for the user to select the reports to
// be printed.  Another available selection allows the user to
// view the available printers and change the remote printer
// destination.
// 
// Job Control Language statements are formatted and submitted
// through the Internal Reader Transient Data Queue (INTR).
// The job executes in batch and all output is routed to the
// remote destination specified through this application.
// 
// The JCL for each job is stored as a table.
// There are two formats available for a JCL statement.
// They are either a fixed or a variable format.
// 
// A fixed statement is identified in the table by a blank JCL
// statement type (FY0NTTYP).  These statements are written
// directly to the internal reader with no changes.
// 
// Variable statements are those that contain data that may
// change each time the job is submitted.  They are identified
// by a non-blank statement type.  The type determines the data
// that is to be substituted and the columns into which it is
// to be placed, as follows:
// 
// FY0NTTYP        JCL statement        Variable        Columns
// --------        -------------        --------        -------
//    J                JOB              FY0NWUID          5-10
//    N  (Test only)  NOTIFY            FY0NWUID         23-28
//    O               OUTPUT            FY0NMRMT         32-36
//                    "    "            FY0NMCPY           45
//    P             Parameters          FY0NWJCL          1-80
// 
// The data in working storage is substituted and the statement
// is written to the internal reader.
// 
// The user may exit to any allowed application, via FAST PATH
// or PF key, from the menu, only.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 11/08/88   GAMEN    New application.
// 08/17/90   MPISTO   added style selection to season reports
// 08/21/90   GAMEN    Add selection for LRPS update (summary)
// 08/21/90   GAMEN    Add selection for Mold and Last reports
// 11/12/90   GAMEN    Add reason code 4 as valid selection to
//                     fy0n174
// 11/28/90   MPISTO   Cost Worksheet Ehancements FY9
// 12/03/90   GAMEN    Allow FY1171 to print to laser printer
// 02/15/91   mpisto   correct edit for po-id by factory rpt
// 05/17/91   mpisto   add factory fob upload request (fy0r)
// 07/31/91   GAMEN    Include gpc code in product line edit
//                     in fy0n134.
// 12/12/91   GAMEN    Allow only only ftwr (gpc 02) to access
//                     fob by p.o. id reports.
// 02/28/92   GAMEN    Add color to fy0nm016, ftwr history.
// 02/30/92   GAMEN    Swap gpc and xpl codes for xpltbl key.
// 07/15/92   lsutto   make output a permanent file
// 08/05/93   GAMEN    Change style on map 8 to NOFILL.
// 03/07/94   GAMEN    Remove ftwr fob upload option.
// 08/08/94   SLEWIS   CHANGE XSNTBL TO YSNTBL TABLE
// 11/10/97   jniese   remove capacity reports.
// 11/12/97   nfield   y2k compliance - changes to fy0nm007,
//                     fy0nm008,9,10,11,12,13,14,17
// 12/30/97   jniese   remove mold/last reports
// 03/25/02   averma   remove ftwr lrps detail/summary reports
//                     change in FY0NM099  and FY0N002
// *********************
Program FY0N type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FY0NW00 FY0NW00; // record
  FY0NW01 FY0NW01; // record
  FY0NW02 FY0NW02; // record
  FY0NW03 FY0NW03; // record
  FY0NW04 FY0NW04; // record
  FY0NW05 FY0NW05; // record
  FY0NW06 FY0NW06; // record
  FY0NW07 FY0NW07; // record
  FY0NW08 FY0NW08; // record
  FY0NW09 FY0NW09; // record
  FY0NW10 FY0NW10; // record
  FY0NW11 FY0NW11; // record
  FY0NW12 FY0NW12; // record
  FY0NW13 FY0NW13; // record
  FY0NW14 FY0NW14; // record
  FY0NW15 FY0NW15; // record
  FY0NW16 FY0NW16; // record
  FY0NW17 FY0NW17; // record
  FY1REC FY1REC; // record
  FYWREC FYWREC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA6REC TA6REC; // record
  TABREC TABREC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FY0NT02 {deleteAfterUse = yes}; // table
  use FY0NT03 {deleteAfterUse = yes}; // table
  use FY0NT04 {deleteAfterUse = yes}; // table
  use FY0NT05 {deleteAfterUse = yes}; // table
  use FY0NT06 {deleteAfterUse = yes}; // table
  use FY0NT07 {deleteAfterUse = yes}; // table
  use FY0NT08 {deleteAfterUse = yes}; // table
  use FY0NT09 {deleteAfterUse = yes}; // table
  use FY0NT1O {deleteAfterUse = yes}; // table
  use FY0NT11 {deleteAfterUse = yes}; // table
  use FY0NT12 {deleteAfterUse = yes}; // table
  use FY0NT13 {deleteAfterUse = yes}; // table
  use FY0NT14 {deleteAfterUse = yes}; // table
  use FY0NT15 {deleteAfterUse = yes}; // table
  use FY0NT16 {deleteAfterUse = yes}; // table
  use FY0NT17 {deleteAfterUse = yes}; // table
  use FY0NT2O {deleteAfterUse = yes}; // table
  use FY0NT21 {deleteAfterUse = yes}; // table
  use FY0NT22 {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use XQATBL {deleteAfterUse = yes}; // table
  use XCTTBL {deleteAfterUse = yes}; // table
  use XPLTBL {deleteAfterUse = yes}; // table
  use XLCTBL {deleteAfterUse = yes}; // table
  use XPCTBL {deleteAfterUse = yes}; // table
  use FY0NM.FY0NM002,  // forms
      FY0NM.FY0NM003, 
      FY0NM.FY0NM004, 
      FY0NM.FY0NM005, 
      FY0NM.FY0NM006, 
      FY0NM.FY0NM007, 
      FY0NM.FY0NM008, 
      FY0NM.FY0NM009, 
      FY0NM.FY0NM010, 
      FY0NM.FY0NM011, 
      FY0NM.FY0NM012, 
      FY0NM.FY0NM013, 
      FY0NM.FY0NM014, 
      FY0NM.FY0NM015, 
      FY0NM.FY0NM016, 
      FY0NM.FY0NM017, 
      FY0NM.FY0NM020, 
      FY0NM.FY0NM099, 
      FY0NM.TA0PM001, 
      FY0NM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFY001: XPFY001();

     /* ------------------------------------------------------------*/
     /* Initialize the application working storage.*/
     /* Initialize the selection line index limit.*/
     /* ------------------------------------------------------------*/

    set FY0NW01 empty; /* Initialize working storage*/
    set FY0NW02 empty;
    set FY0NW03 empty;
    set FY0NW04 empty;
    set FY0NW05 empty;
    set FY0NW06 empty;
    set FY0NW07 empty;
    set FY0NW08 empty;
    set FY0NW09 empty;
    set FY0NW10 empty;
    set FY0NW11 empty;
    set FY0NW12 empty;
    set FY0NW13 empty;
    set FY0NW14 empty;
    set FY0NW15 empty;
    set FY0NW16 empty;
    set FY0NW17 empty;
    set SQLCA empty; /* Initialize working storage*/
    set TA6REC empty;

    TA6REC.TA6SUBSW = "I"; /* Indicate obtain information*/

    FY0NW01.XGPCD = COMMAREA.XGPCD; /* Init gpc code*/

    if (FY0NW01.XGPCD in XGPTBL.XGPCD)
      FY0NW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end

    set TA0PM001 initial; /* Initialize map output area*/
    set FY0NM002 initial;
    set FY0NM003 initial;
    set FY0NM004 initial;
    set FY0NM005 initial;
    set FY0NM006 initial;
    set FY0NM007 initial;
    set FY0NM008 initial;
    set FY0NM009 initial;
    set FY0NM010 initial;
    set FY0NM011 initial;
    set FY0NM012 initial;
    set FY0NM013 initial;
    set FY0NM014 initial;
    set FY0NM015 initial;
    set FY0NM016 initial;
    set FY0NM017 initial;
    set FY0NM020 initial;
     /* SET FY0NM021 CLEAR;*/
     /* SET FY0NM022 CLEAR;*/
    set FY0NM099 initial;

    FY0NW01.FY0NWIXL = 22; /* Number of menu selection lines*/

    FY0N002: FY0N002();
     /* ------------------------------------------------------------*/
     /* Flow to execute the Factory Report Request process.*/
     /* ------------------------------------------------------------*/

    goto FY0N002; /* Factory Report Request*/

  end // end main
end // end FY0N

// FACTORY Report Requests
Function FY0N002()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Invoke the process for each selection entered on menu.*/
   /* 2) After all selections are processed, display the menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf3) /* and EXIT not requested*/

    FY0NS05();

    if (FY0NW01.FY0NMSEL[1] == "S" /* Line 1 was selected*/
     || TA6REC.TA6SUBSW == "I")    /* or information requested*/
      FY0N010(); /* Specify/Override Default Printer*/
    end

    if (FY0NW01.FY0NMSEL[2] == "S") /* Line 2 was selected*/
      FY0N020(); /* Production factories report*/
    end

    if (FY0NW01.FY0NMSEL[3] == "S") /* Line 3 was selected*/
      FY0N030(); /* Factory code list report*/
    end

    if (FY0NW01.FY0NMSEL[4] == "S") /* Line 4 was selected*/
      FY0N040(); /* Country trade restrictions report*/
    end

    if (FY0NW01.FY0NMSEL[5] == "S") /* Line 5 was selected*/
      FY0N050(); /* Liaison/field office report*/
    end

    if (FY0NW01.FY0NMSEL[6] == "S") /* Line 6 was selected*/
      FY0N060(); /* Factory contacts report*/
    end

    if (FY0NW01.FY0NMSEL[7] == "S") /* Line 7 was selected*/
      FY0N070(); /* Footwear fob by effective date*/
    end

    if (FY0NW01.FY0NMSEL[8] == "S") /* Line 8 was selected*/
      FY0N080(); /* apparel fob by season*/
    end

    if (FY0NW01.FY0NMSEL[9] == "S") /* Line 9 was selected*/
      FY0N090(); /* apparel fob by season/factory*/
    end

    if (FY0NW01.FY0NMSEL[10] == "S") /* Line 10 was selected*/
      FY0N100(); /* apparel fob by season/country*/
    end

    if (FY0NW01.FY0NMSEL[11] == "S") /* Line 11 was selected*/
      FY0N110(); /* footwear fob by eff dt/factory*/
    end

    if (FY0NW01.FY0NMSEL[12] == "S") /* Line 12 was selected*/
      FY0N120(); /* footwear fob by eff dt/country*/
    end

    if (FY0NW01.FY0NMSEL[13] == "S") /* Line 13 was selected*/
      FY0N130(); /* footwear fob by eff dt/product line*/
    end

    if (FY0NW01.FY0NMSEL[14] == "S") /* Line 14 was selected*/
      FY0N140(); /* apparel cost worksheet*/
    end

    if (FY0NW01.FY0NMSEL[15] == "S") /* Line 15 was selected*/
      FY0N150(); /* Production products*/
    end

    if (FY0NW01.FY0NMSEL[16] == "S") /* Line 16 was selected*/
      FY0N160(); /* Footwear FOB history*/
    end

    if (FY0NW01.FY0NMSEL[17] == "S") /* Line 17 was selected*/
      FY0N170(); /* Apparel FOB history*/
    end

    if (FY0NW01.FY0NMSEL[18] == "S") /* Line 18 was selected*/
      FY0NW01.FY0NMSEL[18] = " "; /* clear selection*/
    end

    if (FY0NW01.FY0NMSEL[19] == "S") /* Line 19 was selected*/
      FY0NW01.FY0NMSEL[19] = " "; /* clear selection*/
    end

    if (FY0NW01.FY0NMSEL[20] == "S") /* Line 20 was selected*/
      FY0N200(); /* Mapper FOB update*/
    end

    if (FY0NW01.FY0NMSEL[21] == "S") /* Line 21 was selected*/
   /* PERFORM FY0N210;             /* LRPS update (detail)*/
      FY0NW01.FY0NMSEL[21] = " "; /* clear selection*/
    end

    if (FY0NW01.FY0NMSEL[22] == "S") /* Line 22 was selected*/
   /* PERFORM FY0N220;             /* LRPS update (summary)*/
      FY0NW01.FY0NMSEL[22] = " "; /* clear selection*/
    end

  end

  FY0N990(); /* Report Request Menu*/

end // end FY0N002

// Specify/Override Printer
Function FY0N010()
   /* ------------------------------------------------------------*/
   /* Obtain and/or display the output destination for the user.*/
   /* ------------------------------------------------------------*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If successful, indicate the selected function is completed.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (TA6REC.TA6RTNCD == "0") /* Normal return*/

      if (TA6REC.TA6SUBSW == "I") /* Obtain information only*/

        TA6REC.TA6SUBSW = "N"; /* Indicate information obtained*/
      else
        FY0NW01.FY0NMSEL[1] = "*"; /* Indicate function completed*/

      end

      return; /* Return to previous process*/

    end

    /* ------------------------------------------------------------*/
     /* If user cancelled request, indicate function cancelled.*/
    /* ------------------------------------------------------------*/

    if (TA6REC.TA6RTNCD == "1") /* User cancelled request*/

      FY0NW01.FY0NMSEL[1] = "C"; /* Indicate function cancelled*/

      return; /* Return to previous process*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  converseLib.validationFailed(10); /* Unexpected error occurred*/

end // end FY0N010

// Factory Address Report
Function FY0N020()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N021(); /* Format and display the map*/

  FY0N022(); /* Check attention identifier*/

  FY0N023(); /* Reset fields to normal intensity*/

  FY0N024(); /* Verify the entered data*/

  FY0N025(); /* Process valid input request*/

end // end FY0N020

// Format and display the map
Function FY0N021()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM002.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM002.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM002 alarm; /* Indicate sound alarm*/

  end

  FY0NM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM002.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM002.XRODESC = TA6REC.XRODESC; /* Description*/
  FY0NM002.XURCOPY = TA6REC.XURCOPY; /* Nbr of copies*/

  converse FY0NM002 ;

end // end FY0N021

// Check attention identifier
Function FY0N022()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[2] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM002.XXXPRCNM = "FY0N022"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N022

// Reset highlighted fields
Function FY0N023()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM002.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N023

// Verify the entered data
Function FY0N024()
   /* ------------------------------------------------------------*/
   /* Verify the number of copies to be printed.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM002.XXXSTAT == "A" /* If valid status entered*/
   || FY0NM002.XXXSTAT == "I" 
   || FY0NM002.XXXSTAT == " ")

     /* next sentence*/
  else

    set FY0NM002.XXXSTAT cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(54); /* Indicate invalid status*/
    FY0NM002.XXXPRCNM = "FY0N024"; /* Process name*/
  end

  if (FY0NM002.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM002.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM002.XXXPRCNM = "FY0N024"; /* Process name*/

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N024

// Process valid input request
Function FY0N025()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT02.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW02 empty; /* Parameters work area*/

      FY0NW02.XGPCD = FY0NM002.XGPCD; /* Gpc code*/
      FY0NW02.XXXSTAT = FY0NM002.XXXSTAT; /* Status*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW02.TARJCL; /* Parameters*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT02.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT02.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT02.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 103; /* Job was submitted*/
    FY0NW01.FY0NMSEL[2] = "*"; /* Indicate function completed*/

    set FY0NM002 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N025

// Factory Code List Report
Function FY0N030()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N031(); /* Format and display the map*/

  FY0N032(); /* Check attention identifier*/

  FY0N033(); /* Reset fields to normal intensity*/

  FY0N034(); /* Verify the entered data*/

  FY0N035(); /* Process valid input request*/

end // end FY0N030

// Format and display the map
Function FY0N031()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM003.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM003.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM003 alarm; /* Indicate sound alarm*/

  end

  FY0NM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM003.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM003.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM003.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM003 ;

end // end FY0N031

// Check attention identifier
Function FY0N032()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[3] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM003.XXXPRCNM = "FY0N032"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N032

// Reset highlighted fields
Function FY0N033()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM003.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N033

// Verify the entered data
Function FY0N034()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM003.XXXSTAT == "A" /* If valid status entered*/
   || FY0NM003.XXXSTAT == "I" 
   || FY0NM003.XXXSTAT == " ")

     /* next sentence*/
  else

    set FY0NM003.XXXSTAT cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(54); /* Indicate invalid status*/
    FY0NM003.XXXPRCNM = "FY0N034"; /* Process name*/
  end

  if (FY0NM003.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM003.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM003.XXXPRCNM = "FY0N034"; /* Process name*/

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N034

// Process valid input request
Function FY0N035()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT03.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW03 empty; /* Parameters work area*/

      FY0NW03.XGPCD = FY0NM003.XGPCD; /* Gpc code*/
      FY0NW03.XXXSTAT = FY0NM003.XXXSTAT; /* Status*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW03.TARJCL; /* Parameters*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT03.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT03.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT03.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 102; /* Job was submitted*/
    FY0NW01.FY0NMSEL[3] = "*"; /* Indicate function completed*/

    set FY0NM003 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N035

// Country trade restrictions rpt
Function FY0N040()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N041(); /* Format and display the map*/

  FY0N042(); /* Check attention identifier*/

  FY0N043(); /* Reset fields to normal intensity*/

  FY0N044(); /* Verify the entered data*/

  FY0N045(); /* Process valid input request*/

end // end FY0N040

// Format and display the map
Function FY0N041()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM004.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM004.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM004 alarm; /* Indicate sound alarm*/

  end

  FY0NM004.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM004.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM004.XRODESC = TA6REC.XRODESC; /* Description*/
  FY0NM004.XURCOPY = TA6REC.XURCOPY; /* Copies*/

  converse FY0NM004 ;

end // end FY0N041

// Check attention identifier
Function FY0N042()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[4] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM004.XXXPRCNM = "FY0N042"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N042

// Reset highlighted fields
Function FY0N043()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM004.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM004.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N043

// Verify the entered data
Function FY0N044()
   /* ------------------------------------------------------------*/
   /* Verify the number of copies to be printed.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM004.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM004.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM004.XXXPRCNM = "FY0N044"; /* Process name*/

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N044

// Process valid input request
Function FY0N045()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT04.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW04 empty; /* Parameters work area*/

      FY0NW04.XGPCD = FY0NM004.XGPCD; /* Gpc code*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW04.TARJCL; /* Parameters*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT04.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT04.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT04.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 104; /* Job was submitted*/
    FY0NW01.FY0NMSEL[4] = "*"; /* Indicate function completed*/

    set FY0NM004 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N045

// Liaison/Field Office Report
Function FY0N050()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N051(); /* Format and display the map*/

  FY0N052(); /* Check attention identifier*/

  FY0N053(); /* Reset fields to normal intensity*/

  FY0N054(); /* Verify the entered data*/

  FY0N055(); /* Process valid input request*/

end // end FY0N050

// Format and display the map
Function FY0N051()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM005.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM005.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM005 alarm; /* Indicate sound alarm*/

  end

  FY0NM005.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM005.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM005.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM005.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM005 ;

end // end FY0N051

// Check attention identifier
Function FY0N052()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[5] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM005.XXXPRCNM = "FY0N052"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N052

// Reset highlighted fields
Function FY0N053()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM005.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM005.XXXSTAT initialAttributes; /* Status*/
  set FY0NM005.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N053

// Verify the entered data
Function FY0N054()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM005.XXXSTAT == "A" /* If valid status entered*/
   || FY0NM005.XXXSTAT == "I" 
   || FY0NM005.XXXSTAT == " ")

     /* next sentence*/
  else

    set FY0NM005.XXXSTAT cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(54); /* Indicate invalid status*/
    FY0NM005.XXXPRCNM = "FY0N054"; /* Process name*/
  end

  if (FY0NM005.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM005.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM005.XXXPRCNM = "FY0N054"; /* Process name*/

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N054

// Process valid input request
Function FY0N055()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT05.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW05 empty; /* Parameters work area*/

      FY0NW05.XGPCD = FY0NM005.XGPCD; /* Gpc code*/
      FY0NW05.XXXSTAT = FY0NM005.XXXSTAT; /* Status*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW05.TARJCL; /* Parameters*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT05.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT05.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT05.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 105; /* Job was submitted*/
    FY0NW01.FY0NMSEL[5] = "*"; /* Indicate function completed*/

    set FY0NM005 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N055

// Factory Contacts Report
Function FY0N060()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N061(); /* Format and display the map*/

  FY0N062(); /* Check attention identifier*/

  FY0N063(); /* Reset fields to normal intensity*/

  FY0N064(); /* Verify the entered data*/

  FY0N065(); /* Process valid input request*/

end // end FY0N060

// Format and display the map
Function FY0N061()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM006.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM006.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM006 alarm; /* Indicate sound alarm*/

  end

  FY0NM006.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM006.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM006.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM006.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM006 ;

end // end FY0N061

// Check attention identifier
Function FY0N062()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[6] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM006.XXXPRCNM = "FY0N062"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N062

// Reset highlighted fields
Function FY0N063()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM006.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM006.XXXSTAT initialAttributes; /* Status*/
  set FY0NM006.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N063

// Verify the entered data
Function FY0N064()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM006.XXXSTAT == "A" /* If valid status entered*/
   || FY0NM006.XXXSTAT == "I" 
   || FY0NM006.XXXSTAT == " ")

     /* next sentence*/
  else

    set FY0NM006.XXXSTAT cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(54); /* Indicate invalid status*/
    FY0NM006.XXXPRCNM = "FY0N064"; /* Process name*/
  end

  if (FY0NM006.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM006.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM006.XXXPRCNM = "FY0N064"; /* Process name*/

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N064

// Process valid input request
Function FY0N065()

   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT06.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW06 empty; /* Parameters work area*/

      FY0NW06.XGPCD = FY0NM006.XGPCD; /* Gpc code*/
      FY0NW06.XXXSTAT = FY0NM006.XXXSTAT; /* Status*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW06.TARJCL; /* Parameters*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT06.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT06.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT06.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 103; /* Job was submitted*/
    FY0NW01.FY0NMSEL[6] = "*"; /* Indicate function completed*/

    set FY0NM006 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N065

// Fob by P.O. ID
Function FY0N070()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N071(); /* Format and display the map*/

  FY0N072(); /* Check attention identifier*/

  FY0N073(); /* Reset fields to normal intensity*/

  FY0N074(); /* Verify the entered data*/

  FY0N075(); /* Process valid input request*/

end // end FY0N070

// Format and display the map
Function FY0N071()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM007.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM007.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.XGPCD == "02")
      FY0NM007.XQACD = "01"; /* Quality code*/
    end

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM007 alarm; /* Indicate sound alarm*/

  end

  FY0NM007.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM007.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM007.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM007.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM007 ;

end // end FY0N071

// Check attention identifier
Function FY0N072()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[7] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM007.XXXPRCNM = "FY0N072"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N072

// Reset highlighted fields
Function FY0N073()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM007.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM007.FY0NMFYY initialAttributes; /* From p.o. id year*/
  set FY0NM007.FY0NMFMM initialAttributes; /* From p.o. id month*/
  set FY0NM007.FY0NMFDM initialAttributes; /* From p.o. id delivery month*/
  set FY0NM007.FY0NMTYY initialAttributes; /* to p.o. id year*/
  set FY0NM007.FY0NMTMM initialAttributes; /* to p.o. id month*/
  set FY0NM007.FY0NMTDM initialAttributes; /* to p.o. id delivery month*/
  set FY0NM007.XQACD initialAttributes; /* quality code*/
  set FY0NM007.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N073

// Verify the entered data
Function FY0N074()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM007.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM007.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/

  end

   /* ------------ VALIDATE THE QUALITY CODE ----------------*/

  if (FY0NM007.XQACD > " ")
    if (FY0NM007.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else

      set FY0NM007.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
    end

  else
    if (FY0NM007.XGPCD == "02")
      set FY0NM007.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
    end
  end

   /* ------------ VALIDATE THE style number ----------------*/

  if (FY0NM007.FY0NMSTY > " ")

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM007.XGPCD;
    PG2REC.SY1STNBR = FY0NM007.FY0NMSTY;

    XSPG201(); /* validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set FY0NM007.FY0NMSTY cursor, modified, bold; /* Highlight*/
        converseLib.validationFailed(73); /* Indicate invalid style*/
        FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
      end
    end
  end

   /* ------------ VALIDATE THE TO P.O. ID RANGE ----------------*/

  FY0NW01.FY0NWEDT = 0; /* Initialize the effective dates*/
  FY0NW01.FY0NWXDT = 0;

  if (FY0NM007.FY0NMTYY > 0
   || FY0NM007.FY0NMTMM > 0
   || FY0NM007.FY0NMTDM > 0)

    if (FY0NM007.FY0NMTDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
      set FY0NM007.FY0NMTYY modified, bold;
      set FY0NM007.FY0NMTMM modified, bold;
      set FY0NM007.FY0NMTDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM007.FY0NMTYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM007.FY0NMTMM; /* Move in month*/
      FY0NW01.FY0NWDD = 0; /* Move 0 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "LASTDAY"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/

      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWXDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
        set FY0NM007.FY0NMTYY cursor, modified, bold;
        set FY0NM007.FY0NMTMM modified, bold;
        set FY0NM007.FY0NMTDM modified, bold;
      end
    end
  end

   /* ------------ VALIDATE THE FROM P.O. ID RANGE ---------------*/

  if (FY0NM007.FY0NMFYY > 0
   || FY0NM007.FY0NMFMM > 0
   || FY0NM007.FY0NMFDM > 0)

    if (FY0NM007.FY0NMFDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
      set FY0NM007.FY0NMFYY modified, bold;
      set FY0NM007.FY0NMFMM modified, bold;
      set FY0NM007.FY0NMFDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM007.FY0NMFYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM007.FY0NMFMM; /* Move in month*/
      FY0NW01.FY0NWDD = 1; /* Move 1 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/
      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWEDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
        set FY0NM007.FY0NMFYY cursor, modified, bold;
        set FY0NM007.FY0NMFMM modified, bold;
        set FY0NM007.FY0NMFDM modified, bold;
      end
    end

  end

  if (FY0NW01.FY0NWEDT > FY0NW01.FY0NWXDT) /* From eff. dt > to eff. dt*/
    converseLib.validationFailed(116); /* Error message*/
    FY0NM007.XXXPRCNM = "FY0N074"; /* Process name*/
    set FY0NM007.FY0NMFYY cursor, modified, bold;
    set FY0NM007.FY0NMFMM modified, bold;
    set FY0NM007.FY0NMFDM modified, bold;
    set FY0NM007.FY0NMTYY modified, bold;
    set FY0NM007.FY0NMTMM modified, bold;
    set FY0NM007.FY0NMTDM modified, bold;
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N074

// Process valid input request
Function FY0N075()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT07.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW07 empty; /* Parameters work area*/

      FY0NW07.XGPCD = FY0NM007.XGPCD; /* Gpc code*/
      FY0NW07.FY0NWEDT = FY0NW01.FY0NWEDT; /* From eff. date*/
      FY0NW07.FY0NWFDM = FY0NM007.FY0NMFDM; /* From delivery month*/
      FY0NW07.FY0NWTDM = FY0NM007.FY0NMTDM; /* To delivery month*/
      FY0NW07.FY0NWSTY = FY0NM007.FY0NMSTY; /* style*/
      FY0NW07.FY0NWCYC = FY0NM007.FY0NMCYC; /* style*/
      if (FY0NW01.FY0NWEDT == 0) /* From eff. date not entered*/
        FY0NW07.FY0NWXDT = 99999999; /* Set to eff. date to max*/
        FY0NW07.FY0NWTDM = "99"; /* To delivery month*/
        FY0NW07.FY0NWFDM = "00"; /* From delivery month*/
      else
        FY0NW07.FY0NWXDT = FY0NW01.FY0NWXDT; /* To eff. date*/
      end
      FY0NW07.XQACD = FY0NM007.XQACD; /* Quality code*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW07.TARJCL; /* Parameters*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT07.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT07.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT07.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 107; /* Job was submitted*/
    FY0NW01.FY0NMSEL[7] = "*"; /* Indicate function completed*/

    set FY0NM007 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N075

// Fob by Season Code/Year
Function FY0N080()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N081(); /* Format and display the map*/

  FY0N082(); /* Check attention identifier*/

  FY0N083(); /* Reset fields to normal intensity*/

  FY0N084(); /* Verify the entered data*/

  FY0N085(); /* Process valid input request*/

end // end FY0N080

// Format and display the map
Function FY0N081()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM008.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM008.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM008 alarm; /* Indicate sound alarm*/

  end

  FY0NM008.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM008.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM008.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM008.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM008 ;

end // end FY0N081

// Check attention identifier
Function FY0N082()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[8] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM008.XXXPRCNM = "FY0N082"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N082

// Reset highlighted fields
Function FY0N083()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM008.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM008.FY0NMSCD initialAttributes; /* Season code*/
  set FY0NM008.FY0NMSYR initialAttributes; /* Season year*/
  set FY0NM008.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N083

// Verify the entered data
Function FY0N084()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM008.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM008.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM008.XXXPRCNM = "FY0N084"; /* Process name*/

  end

   /* --------------- VALIDATE THE SEASON CODE -------------------*/

  if (FY0NM008.FY0NMSCD > " ") /* Season code entered*/
    if (FY0NM008.FY0NMSCD in YSNTBL.XSECD)
       /* next sentence*/
    else
      set FY0NM008.FY0NMSCD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(74); /* Indicate invalid number*/
      FY0NM008.XXXPRCNM = "FY0N084"; /* Process name*/

    end
  else
    set FY0NM008.FY0NMSCD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(74); /* Indicate invalid number*/
    FY0NM008.XXXPRCNM = "FY0N084"; /* Process name*/

  end

   /* --------------- SETUP THE SEASON YEAR -------------------*/

  FY0NW01.FY0NWSYY = FY0NM008.FY0NMSYR; /* Move to year*/

  if (FY0NW01.FY0NWSYY < 80)
    FY0NW01.FY0NWSCC = 20; /* Move 20 to century*/
  else
    FY0NW01.FY0NWSCC = 19; /* Move 19 to century*/
  end

   /* -----------validate style                           -----*/

  if (FY0NM008.FY0NMSTY > " ")

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM008.XGPCD;
    PG2REC.SY1STNBR = FY0NM008.FY0NMSTY;

    XSPG201(); /* validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(73);
        FY0NM008.XXXPRCNM = "FY0N084"; /* process name*/
        set FY0NM008.FY0NMSTY cursor, modified, bold;
      end
    end
  end

   /* -----------validate the domestic-offshore selection -----*/

  if (FY0NM008.FY0NMDOF > " "  /* both ?*/
   && FY0NM008.FY0NMDOF != "D" /* domestics*/
   && FY0NM008.FY0NMDOF != "O") /* offshore*/
    set FY0NM008.FY0NMDOF cursor, modified, bold;
    converseLib.validationFailed(150);
    FY0NM008.XXXPRCNM = "FY0N084"; /* process name*/
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N084

// Process valid input request
Function FY0N085()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT08.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW08 empty; /* Parameters work area*/

      FY0NW08.XGPCD = FY0NM008.XGPCD; /* Gpc code*/
      FY0NW08.FY0NWSCD = FY0NM008.FY0NMSCD; /* season code*/
      FY0NW08.FY0NWSYR = FY0NW01.FY0NWSYR; /* season year*/
      FY0NW08.FY0NWOFF = FY0NM008.FY0NMDOF; /* domestic or offshore*/
      FY0NW08.FY0NWSTY = FY0NM008.FY0NMSTY; /* style*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW08.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT08.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT08.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT08.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 109; /* Job was submitted*/
    FY0NW01.FY0NMSEL[8] = "*"; /* Indicate function completed*/

    set FY0NM008 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N085

// Apparel fob by season/factory
Function FY0N090()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N091(); /* Format and display the map*/

  FY0N092(); /* Check attention identifier*/

  FY0N093(); /* Reset fields to normal intensity*/

  FY0N094(); /* Verify the entered data*/

  FY0N095(); /* Process valid input request*/

end // end FY0N090

// Format and display the map
Function FY0N091()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM009.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM009.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM009 alarm; /* Indicate sound alarm*/

  end

  FY0NM009.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM009.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM009.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM009.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM009 ;

end // end FY0N091

// Check attention identifier
Function FY0N092()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[9] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM009.XXXPRCNM = "FY0N092"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N092

// Reset highlighted fields
Function FY0N093()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM009.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM009.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0NM009.FY0NMSCD initialAttributes; /* Season code*/
  set FY0NM009.FY0NMSYR initialAttributes; /* Season year*/
  set FY0NM009.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N093

// Verify the entered data
Function FY0N094()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM009.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM009.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM009.XXXPRCNM = "FY0N094"; /* Process name*/

  end

   /* --------------- VALIDATE THE SEASON CODE -------------------*/

  if (FY0NM009.FY0NMSCD > " ") /* Season code entered*/
    if (FY0NM009.FY0NMSCD in YSNTBL.XSECD)
       /* next sentence*/
    else
      set FY0NM009.FY0NMSCD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(74); /* Indicate invalid number*/
      FY0NM009.XXXPRCNM = "FY0N094"; /* Process name*/

    end
  else
    set FY0NM009.FY0NMSCD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(74); /* Indicate invalid number*/
    FY0NM009.XXXPRCNM = "FY0N094"; /* Process name*/

  end

   /* --------------- SETUP THE SEASON YEAR -------------------*/

  FY0NW01.FY0NWSYY = FY0NM009.FY0NMSYR; /* Move to year*/

  if (FY0NW01.FY0NWSYY < 80)
    FY0NW01.FY0NWSCC = 20; /* Move 20 to century*/
  else
    FY0NW01.FY0NWSCC = 19; /* Move 19 to century*/
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

   /* ------------ VALIDATE FACTORY CODE --------------*/

  if (FY0NM009.FY1FCTYC > " ")

    set FY1REC empty;
    FY1REC.XGPCD = FY0NM009.XGPCD;
    FY1REC.FY1FCTYC = FY0NM009.FY1FCTYC;

    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        converseLib.validationFailed(33); /* Error message*/
        FY0NM009.XXXPRCNM = "FY0N094"; /* Process name*/
        set FY0NM009.FY1FCTYC cursor, modified, bold;
      else
        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "FY0N094"; /* Process name*/
        TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
        TA1REC.TA1MAP = "FY0NM009"; /* Map name*/
        TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
        TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0NM009.XXXPRCNM = "FY0N094"; /* Process name*/
      end
    end
  else

    converseLib.validationFailed(33); /* Error message*/
    FY0NM009.XXXPRCNM = "FY0N094"; /* Process name*/
    set FY0NM009.FY1FCTYC cursor, modified, bold;
  end

   /* ------------ VALIDATE STYLE   CODE --------------*/

  if (FY0NM009.FY0NMSTY > " ")

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM009.XGPCD;
    PG2REC.SY1STNBR = FY0NM009.FY0NMSTY;

    XSPG201(); /* validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
       /* NEXT SENTENCE*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(73);
        FY0NM009.XXXPRCNM = "FY0N094"; /* process name*/
        set FY0NM009.FY0NMSTY cursor, modified, bold;
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N094

// Process valid input request
Function FY0N095()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT09.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW09 empty; /* Parameters work area*/

      FY0NW09.XGPCD = FY0NM009.XGPCD; /* Gpc code*/
      FY0NW09.FY1FCTYC = FY0NM009.FY1FCTYC; /* factory code*/
      FY0NW09.FY0NWSTY = FY0NM009.FY0NMSTY; /* style   code*/
      FY0NW09.FY0NWSCD = FY0NM009.FY0NMSCD; /* season code*/
      FY0NW09.FY0NWSYR = FY0NW01.FY0NWSYR; /* season year*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW09.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT09.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT09.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT09.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 110; /* Job was submitted*/
    FY0NW01.FY0NMSEL[9] = "*"; /* Indicate function completed*/

    set FY0NM009 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N095

// Apparel fob by season/country
Function FY0N100()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N101(); /* Format and display the map*/

  FY0N102(); /* Check attention identifier*/

  FY0N103(); /* Reset fields to normal intensity*/

  FY0N104(); /* Verify the entered data*/

  FY0N105(); /* Process valid input request*/

end // end FY0N100

// Format and display the map
Function FY0N101()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM010.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM010.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM010 alarm; /* Indicate sound alarm*/

  end

  FY0NM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM010.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM010.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM010.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM010 ;

end // end FY0N101

// Check attention identifier
Function FY0N102()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[10] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM010.XXXPRCNM = "FY0N102"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N102

// Reset highlighted fields
Function FY0N103()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM010.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM010.FY0NMSCD initialAttributes; /* Season code*/
  set FY0NM010.FY0NMSYR initialAttributes; /* Season year*/
  set FY0NM010.XCTCD initialAttributes; /* Country code*/
  set FY0NM010.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N103

// Verify the entered data
Function FY0N104()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM010.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM010.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM010.XXXPRCNM = "FY0N104"; /* Process name*/

  end

   /* --------------- VALIDATE THE SEASON CODE -------------------*/

  if (FY0NM010.FY0NMSCD > " ") /* Season code entered*/
    if (FY0NM010.FY0NMSCD in YSNTBL.XSECD)
       /* next sentence*/
    else
      set FY0NM010.FY0NMSCD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(74); /* Indicate invalid number*/
      FY0NM010.XXXPRCNM = "FY0N104"; /* Process name*/

    end
  else
    set FY0NM010.FY0NMSCD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(74); /* Indicate invalid number*/
    FY0NM010.XXXPRCNM = "FY0N104"; /* Process name*/

  end

   /* --------------- SETUP THE SEASON YEAR -------------------*/

  FY0NW01.FY0NWSYY = FY0NM010.FY0NMSYR; /* Move to year*/

  if (FY0NW01.FY0NWSYY < 80)
    FY0NW01.FY0NWSCC = 20; /* Move 20 to century*/
  else
    FY0NW01.FY0NWSCC = 19; /* Move 19 to century*/
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

   /* ------------ VALIDATE COUNTRY CODE --------------*/

  if (FY0NM010.XCTCD > " ") /* Country code entered*/
    if (FY0NM010.XCTCD in XCTTBL.XCTCD)
       /* next sentence*/
    else
      set FY0NM010.XCTCD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(25); /* Indicate invalid number*/
      FY0NM010.XXXPRCNM = "FY0N104"; /* Process name*/

    end
  else
    set FY0NM010.XCTCD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(25); /* Indicate invalid number*/
    FY0NM010.XXXPRCNM = "FY0N104"; /* Process name*/

  end

   /* ------------ VALIDATE STYLE   CODE --------------*/

  if (FY0NM010.FY0NMSTY > " ") /* style   code entered*/

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM010.XGPCD;
    PG2REC.SY1STNBR = FY0NM010.FY0NMSTY;

    XSPG201(); /* validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(73);
        FY0NM010.XXXPRCNM = "FY0N104"; /* process name*/
        set FY0NM010.FY0NMSTY cursor, modified, bold;
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N104

// Process valid input request
Function FY0N105()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT1O.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW10 empty; /* Parameters work area*/

      FY0NW10.XGPCD = FY0NM010.XGPCD; /* Gpc code*/
      FY0NW10.XCTCD = FY0NM010.XCTCD; /* country code*/
      FY0NW10.FY0NWSTY = FY0NM010.FY0NMSTY; /* style  code*/
      FY0NW10.FY0NWSCD = FY0NM010.FY0NMSCD; /* season code*/
      FY0NW10.FY0NWSYR = FY0NW01.FY0NWSYR; /* season year*/
      TA6REC.TARJCL[TA6INDEX] = FY0NW10.TARJCL;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT1O.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT1O.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT1O.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 107; /* Job was submitted*/
    FY0NW01.FY0NMSEL[10] = "*"; /* Indicate function completed*/

    set FY0NM010 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N105

// Fob by Factory/P.O. ID
Function FY0N110()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N111(); /* Format and display the map*/

  FY0N112(); /* Check attention identifier*/

  FY0N113(); /* Reset fields to normal intensity*/

  FY0N114(); /* Verify the entered data*/

  FY0N115(); /* Process valid input request*/

end // end FY0N110

// Format and display the map
Function FY0N111()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM011.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM011.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.XGPCD == "02")
      FY0NM011.XQACD = "01"; /* Quality code*/
    end

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM011 alarm; /* Indicate sound alarm*/

  end

  FY0NM011.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM011.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM011.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM011.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM011 ;

end // end FY0N111

// Check attention identifier
Function FY0N112()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[11] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM011.XXXPRCNM = "FY0N112"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N112

// Reset highlighted fields
Function FY0N113()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM011.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM011.FY0NMFYY initialAttributes; /* From p.o. id year*/
  set FY0NM011.FY0NMFMM initialAttributes; /* From p.o. id month*/
  set FY0NM011.FY0NMFDM initialAttributes; /* From p.o. id delivery month*/
  set FY0NM011.FY1FCTYC initialAttributes; /* factory code*/
  set FY0NM011.FY0NMTYY initialAttributes; /* to p.o. id year*/
  set FY0NM011.FY0NMTMM initialAttributes; /* to p.o. id month*/
  set FY0NM011.FY0NMTDM initialAttributes; /* to p.o. id delivery month*/
  set FY0NM011.XQACD initialAttributes; /* quality code*/
  set FY0NM011.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N113

// Verify the entered data
Function FY0N114()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM011.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM011.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/

  end

   /* ------------ VALIDATE THE QUALITY CODE ----------------*/

  if (FY0NM011.XQACD > " ")
    if (FY0NM011.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else

      set FY0NM011.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/

    end
  else

    if (FY0NM011.XGPCD == "02")
      set FY0NM011.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/

    end
  end

   /* ------------ VALIDATE THE factory CODE ----------------*/

  if (FY0NM011.FY1FCTYC > " ")

    set FY1REC empty;
    FY1REC.XGPCD = FY0NM011.XGPCD;
    FY1REC.FY1FCTYC = FY0NM011.FY1FCTYC;

    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
        converseLib.validationFailed(33); /* Error message*/
        FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
        set FY0NM011.FY1FCTYC cursor, modified, bold;
      else

        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "FY0N114"; /* Process name*/
        TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
        TA1REC.TA1MAP = "FY0NM011"; /* Map name*/
        TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
        TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
      end
    end
  else
    converseLib.validationFailed(33); /* Error message*/
    FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
    set FY0NM011.FY1FCTYC cursor, modified, bold;
  end

   /* ------------ VALIDATE THE TO P.O. ID RANGE ----------------*/

  FY0NW01.FY0NWEDT = 0; /* Initialize the effective dates*/
  FY0NW01.FY0NWXDT = 0;

  if (FY0NM011.FY0NMTYY > 0
   || FY0NM011.FY0NMTMM > 0
   || FY0NM011.FY0NMTDM > 0)

    if (FY0NM011.FY0NMTDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
      set FY0NM011.FY0NMTYY modified, bold;
      set FY0NM011.FY0NMTMM modified, bold;
      set FY0NM011.FY0NMTDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM011.FY0NMTYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM011.FY0NMTMM; /* Move in month*/
      FY0NW01.FY0NWDD = 0; /* Move 0 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "LASTDAY"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/

      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWXDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
        set FY0NM011.FY0NMTYY cursor, modified, bold;
        set FY0NM011.FY0NMTMM modified, bold;
        set FY0NM011.FY0NMTDM modified, bold;
      end
    end
  end

   /* ------------ VALIDATE THE FROM P.O. ID RANGE ---------------*/

  if (FY0NM011.FY0NMFYY > 0
   || FY0NM011.FY0NMFMM > 0
   || FY0NM011.FY0NMFDM > 0)

    if (FY0NM011.FY0NMFDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
      set FY0NM011.FY0NMFYY modified, bold;
      set FY0NM011.FY0NMFMM modified, bold;
      set FY0NM011.FY0NMFDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM011.FY0NMFYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM011.FY0NMFMM; /* Move in month*/
      FY0NW01.FY0NWDD = 1; /* Move 1 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/
      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWEDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
        set FY0NM011.FY0NMFYY cursor, modified, bold;
        set FY0NM011.FY0NMFMM modified, bold;
        set FY0NM011.FY0NMFDM modified, bold;
      end
    end

  end

  if (FY0NW01.FY0NWEDT > FY0NW01.FY0NWXDT) /* From eff. dt > to eff. dt*/
    converseLib.validationFailed(116); /* Error message*/
    FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
    set FY0NM011.FY0NMFYY cursor, modified, bold;
    set FY0NM011.FY0NMFMM modified, bold;
    set FY0NM011.FY0NMFDM modified, bold;
    set FY0NM011.FY0NMTYY modified, bold;
    set FY0NM011.FY0NMTMM modified, bold;
    set FY0NM011.FY0NMTDM modified, bold;
  end

   /* ------------ VALIDATE THE style number ----------------*/

  if (FY0NM011.FY0NMSTY > " ")

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM011.XGPCD;
    PG2REC.SY1STNBR = FY0NM011.FY0NMSTY;

    XSPG201(); /* validate style number*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set FY0NM011.FY0NMSTY cursor, modified, bold; /* Highlight*/
        converseLib.validationFailed(73); /* Indicate invalid style*/
        FY0NM011.XXXPRCNM = "FY0N114"; /* Process name*/
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N114

// Process valid input request
Function FY0N115()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT11.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW11 empty; /* Parameters work area*/

      FY0NW11.XGPCD = FY0NM011.XGPCD; /* Gpc code*/
      FY0NW11.FY1FCTYC = FY0NM011.FY1FCTYC; /* Factory code*/
      FY0NW11.FY0NWSTY = FY0NM011.FY0NMSTY; /* style*/
      FY0NW11.FY0NWEDT = FY0NW01.FY0NWEDT; /* from eff. date*/
      FY0NW11.FY0NWFDM = FY0NM011.FY0NMFDM; /* From delivery month*/
      FY0NW11.FY0NWTDM = FY0NM011.FY0NMTDM; /* To delivery month*/
      if (FY0NW01.FY0NWEDT == 0) /* From eff. date not entered*/
        FY0NW11.FY0NWXDT = 99999999; /* Set to eff. date to max*/
        FY0NW11.FY0NWTDM = "99"; /* To delivery month*/
        FY0NW11.FY0NWFDM = "00"; /* From delivery month*/
      else
        FY0NW11.FY0NWXDT = FY0NW01.FY0NWXDT; /* To eff. date*/
      end
      FY0NW11.XQACD = FY0NM011.XQACD; /* quality code*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW11.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT11.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT11.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT11.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 111; /* Job was submitted*/
    FY0NW01.FY0NMSEL[11] = "*"; /* Indicate function completed*/

    set FY0NM011 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N115

// Fob by Country/P.O. ID
Function FY0N120()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N121(); /* Format and display the map*/

  FY0N122(); /* Check attention identifier*/

  FY0N123(); /* Reset fields to normal intensity*/

  FY0N124(); /* Verify the entered data*/

  FY0N125(); /* Process valid input request*/

end // end FY0N120

// Format and display the map
Function FY0N121()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM012.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM012.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.XGPCD == "02")
      FY0NM012.XQACD = "01"; /* Quality code*/
    end

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM012 alarm; /* Indicate sound alarm*/

  end

  FY0NM012.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM012.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM012.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM012.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM012 ;

end // end FY0N121

// Check attention identifier
Function FY0N122()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[12] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM012.XXXPRCNM = "FY0N122"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N122

// Reset highlighted fields
Function FY0N123()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM012.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM012.FY0NMFYY initialAttributes; /* From p.o. id year*/
  set FY0NM012.FY0NMFMM initialAttributes; /* From p.o. id month*/
  set FY0NM012.FY0NMFDM initialAttributes; /* From p.o. id delivery month*/
  set FY0NM012.FY0NMTYY initialAttributes; /* to p.o. id year*/
  set FY0NM012.FY0NMTMM initialAttributes; /* to p.o. id month*/
  set FY0NM012.FY0NMTDM initialAttributes; /* to p.o. id delivery month*/
  set FY0NM012.XCTCD initialAttributes; /* factory code*/
  set FY0NM012.XQACD initialAttributes; /* quality code*/
  set FY0NM012.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N123

// Verify the entered data
Function FY0N124()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM012.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM012.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/

  end

   /* ------------ VALIDATE THE QUALITY CODE ----------------*/

  if (FY0NM012.XQACD > " ")
    if (FY0NM012.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else

      set FY0NM012.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/

    end
  else

    if (FY0NM012.XGPCD == "02")
      set FY0NM012.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/

    end
  end

   /* ------------ VALIDATE THE COUNTRY CODE ----------------*/

  if (FY0NM012.XCTCD > " ")
    if (FY0NM012.XCTCD in XCTTBL.XCTCD)
       /* next sentence*/
    else

      set FY0NM012.XCTCD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(25); /* Indicate invalid country code*/
      FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/

    end
  else

    set FY0NM012.XCTCD cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(25); /* Indicate invalid country code*/
    FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/

  end

   /* ------------ VALIDATE THE TO P.O. ID RANGE ----------------*/

  FY0NW01.FY0NWEDT = 0; /* Initialize the effective dates*/
  FY0NW01.FY0NWXDT = 0;

  if (FY0NM012.FY0NMTYY > 0
   || FY0NM012.FY0NMTMM > 0
   || FY0NM012.FY0NMTDM > 0)

    if (FY0NM012.FY0NMTDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/
      set FY0NM012.FY0NMTYY modified, bold;
      set FY0NM012.FY0NMTMM modified, bold;
      set FY0NM012.FY0NMTDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM012.FY0NMTYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM012.FY0NMTMM; /* Move in month*/
      FY0NW01.FY0NWDD = 0; /* Move 0 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "LASTDAY"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/

      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWXDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/
        set FY0NM012.FY0NMTYY cursor, modified, bold;
        set FY0NM012.FY0NMTMM modified, bold;
        set FY0NM012.FY0NMTDM modified, bold;
      end
    end
  end

   /* ------------ VALIDATE THE FROM P.O. ID RANGE ---------------*/

  if (FY0NM012.FY0NMFYY > 0
   || FY0NM012.FY0NMFMM > 0
   || FY0NM012.FY0NMFDM > 0)

    if (FY0NM012.FY0NMFDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/
      set FY0NM012.FY0NMFYY modified, bold;
      set FY0NM012.FY0NMFMM modified, bold;
      set FY0NM012.FY0NMFDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM012.FY0NMFYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM012.FY0NMFMM; /* Move in month*/
      FY0NW01.FY0NWDD = 1; /* Move 1 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/
      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWEDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/
        set FY0NM012.FY0NMFYY cursor, modified, bold;
        set FY0NM012.FY0NMFMM modified, bold;
        set FY0NM012.FY0NMFDM modified, bold;
      end
    end

  end

  if (FY0NW01.FY0NWEDT > FY0NW01.FY0NWXDT) /* From eff. dt > to eff. dt*/
    converseLib.validationFailed(116); /* Error message*/
    FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/
    set FY0NM012.FY0NMFYY cursor, modified, bold;
    set FY0NM012.FY0NMFMM modified, bold;
    set FY0NM012.FY0NMFDM modified, bold;
    set FY0NM012.FY0NMTYY modified, bold;
    set FY0NM012.FY0NMTMM modified, bold;
    set FY0NM012.FY0NMTDM modified, bold;
  end

   /* ------------ VALIDATE THE style number ----------------*/

  if (FY0NM012.FY0NMSTY > " ")

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM012.XGPCD;
    PG2REC.SY1STNBR = FY0NM012.FY0NMSTY;

    XSPG201(); /* validate style number*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set FY0NM012.FY0NMSTY cursor, modified, bold; /* Highlight*/
        converseLib.validationFailed(73); /* Indicate invalid style*/
        FY0NM012.XXXPRCNM = "FY0N124"; /* Process name*/
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N124

// Process valid input request
Function FY0N125()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT12.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW12 empty; /* Parameters work area*/

      FY0NW12.XGPCD = FY0NM012.XGPCD; /* Gpc code*/
      FY0NW12.XCTCD = FY0NM012.XCTCD; /* Country code*/
      FY0NW12.FY0NWSTY = FY0NM012.FY0NMSTY; /* style*/
      FY0NW12.FY0NWCYC = FY0NM012.FY0NMCYC; /* life cycle*/
      FY0NW12.FY0NWEDT = FY0NW01.FY0NWEDT; /* from eff. date*/
      FY0NW12.FY0NWFDM = FY0NM012.FY0NMFDM; /* From delivery month*/
      FY0NW12.FY0NWTDM = FY0NM012.FY0NMTDM; /* To delivery month*/
      if (FY0NW01.FY0NWEDT == 0) /* From eff. date not entered*/
        FY0NW12.FY0NWXDT = 99999999; /* Set to eff. date to max*/
        FY0NW12.FY0NWTDM = "99"; /* To delivery month*/
        FY0NW12.FY0NWFDM = "00"; /* From delivery month*/
      else
        FY0NW12.FY0NWXDT = FY0NW01.FY0NWXDT; /* To eff. date*/
      end
      FY0NW12.XQACD = FY0NM012.XQACD; /* quality code*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW12.TARJCL;
      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT12.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT12.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT12.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 112; /* Job was submitted*/
    FY0NW01.FY0NMSEL[12] = "*"; /* Indicate function completed*/

    set FY0NM012 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N125

// Fob by Product Line/P.O. ID
Function FY0N130()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N131(); /* Format and display the map*/

  FY0N132(); /* Check attention identifier*/

  FY0N133(); /* Reset fields to normal intensity*/

  FY0N134(); /* Verify the entered data*/

  FY0N135(); /* Process valid input request*/

end // end FY0N130

// Format and display the map
Function FY0N131()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM013.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM013.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.XGPCD == "02")
      FY0NM013.XQACD = "01"; /* Qaulity code*/
    end

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM013 alarm; /* Indicate sound alarm*/

  end

  FY0NM013.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM013.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM013.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM013.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM013 ;

end // end FY0N131

// Check attention identifier
Function FY0N132()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[13] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM013.XXXPRCNM = "FY0N132"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N132

// Reset highlighted fields
Function FY0N133()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM013.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM013.FY0NMFYY initialAttributes; /* From p.o. id year*/
  set FY0NM013.FY0NMFMM initialAttributes; /* From p.o. id month*/
  set FY0NM013.FY0NMFDM initialAttributes; /* From p.o. id delivery month*/
  set FY0NM013.FY0NMTYY initialAttributes; /* to p.o. id year*/
  set FY0NM013.FY0NMTMM initialAttributes; /* to p.o. id month*/
  set FY0NM013.FY0NMTDM initialAttributes; /* to p.o. id delivery month*/
  set FY0NM013.XPLCD initialAttributes; /* product line code*/
  set FY0NM013.XQACD initialAttributes; /* quality code*/
  set FY0NM013.XURCOPY initialAttributes; /* Number of copies*/

  FY0NS01(); /* Perform pop-up window routine*/

end // end FY0N133

// Verify the entered data
Function FY0N134()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM013.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM013.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/

  end

   /* ------------ VALIDATE THE QUALITY CODE ----------------*/

  if (FY0NM013.XQACD > " ")
    if (FY0NM013.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else

      set FY0NM013.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/

    end
  else

    if (FY0NM013.XGPCD == "02")
      set FY0NM013.XQACD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(76); /* Indicate invalid quality code*/
      FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/

    end
  end

   /* ------------ VALIDATE THE PRODUCT LINE CODE -----------*/

  if (FY0NM013.XPLCD > " ")
    FY0NW01.XPLCD = FY0NM013.XPLCD;
    FY0NW01.FY0NWGPC = FY0NM013.XGPCD;
    if (FY0NW01.FY0NWGPL in XPLTBL.XPLKEY) /* Complete key*/
       /* next sentence*/
    else

      set FY0NM013.XPLCD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(114); /* Indicate invalid prod ln code*/
      FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/

    end
  else

    set FY0NM013.XPLCD cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(114); /* Indicate invalid prod ln code*/
    FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/

  end

   /* ------------ VALIDATE THE TO P.O. ID RANGE ----------------*/

  FY0NW01.FY0NWEDT = 0; /* Initialize the effective dates*/
  FY0NW01.FY0NWXDT = 0;

  if (FY0NM013.FY0NMTYY > 0
   || FY0NM013.FY0NMTMM > 0
   || FY0NM013.FY0NMTDM > 0)

    if (FY0NM013.FY0NMTDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/
      set FY0NM013.FY0NMTYY modified, bold;
      set FY0NM013.FY0NMTMM modified, bold;
      set FY0NM013.FY0NMTDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM013.FY0NMTYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM013.FY0NMTMM; /* Move in month*/
      FY0NW01.FY0NWDD = 0; /* Move 0 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "LASTDAY"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/

      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWXDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/
        set FY0NM013.FY0NMTYY cursor, modified, bold;
        set FY0NM013.FY0NMTMM modified, bold;
        set FY0NM013.FY0NMTDM modified, bold;
      end
    end
  end

   /* ------------ VALIDATE THE FROM P.O. ID RANGE ---------------*/

  if (FY0NM013.FY0NMFYY > 0
   || FY0NM013.FY0NMFMM > 0
   || FY0NM013.FY0NMFDM > 0)

    if (FY0NM013.FY0NMFDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/
      set FY0NM013.FY0NMFYY modified, bold;
      set FY0NM013.FY0NMFMM modified, bold;
      set FY0NM013.FY0NMFDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM013.FY0NMFYY; /* Move in year*/
      FY0NW01.FY0NWMM = FY0NM013.FY0NMFMM; /* Move in month*/
      FY0NW01.FY0NWDD = 1; /* Move 1 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/
      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWEDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/
        set FY0NM013.FY0NMFYY cursor, modified, bold;
        set FY0NM013.FY0NMFMM modified, bold;
        set FY0NM013.FY0NMFDM modified, bold;
      end
    end

  end

  if (FY0NW01.FY0NWEDT > FY0NW01.FY0NWXDT) /* From eff. dt > to eff. dt*/
    converseLib.validationFailed(116); /* Error message*/
    FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/
    set FY0NM013.FY0NMFYY cursor, modified, bold;
    set FY0NM013.FY0NMFMM modified, bold;
    set FY0NM013.FY0NMFDM modified, bold;
    set FY0NM013.FY0NMTYY modified, bold;
    set FY0NM013.FY0NMTMM modified, bold;
    set FY0NM013.FY0NMTDM modified, bold;
  end

   /* ------------ VALIDATE THE style             -----------*/

  if (FY0NM013.FY0NMSTY > " ")

    set PG2REC empty; /* next sentence*/
    PG2REC.XGPCD = FY0NM013.XGPCD;
    PG2REC.SY1STNBR = FY0NM013.FY0NMSTY;

    XSPG201(); /* validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        set FY0NM013.FY0NMSTY cursor, modified, bold; /* Highlight*/
        converseLib.validationFailed(73); /* Indicate invalid prod ln code*/
        FY0NM013.XXXPRCNM = "FY0N134"; /* Process name*/
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N134

// Process valid input request
Function FY0N135()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT13.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW13 empty; /* Parameters work area*/

      FY0NW13.XGPCD = FY0NM013.XGPCD; /* Gpc code*/
      FY0NW13.XPLCD = FY0NM013.XPLCD; /* prod ln code*/
      FY0NW13.FY0NWSTY = FY0NM013.FY0NMSTY; /* style*/
      FY0NW13.FY0NWEDT = FY0NW01.FY0NWEDT; /* from eff. date*/
      FY0NW13.FY0NWFDM = FY0NM013.FY0NMFDM; /* From delivery month*/
      FY0NW13.FY0NWTDM = FY0NM013.FY0NMTDM; /* To delivery month*/
      if (FY0NW01.FY0NWEDT == 0) /* From eff. date not entered*/
        FY0NW13.FY0NWXDT = 99999999; /* Set to eff. date to max*/
        FY0NW13.FY0NWTDM = "99"; /* To delivery month*/
        FY0NW13.FY0NWFDM = "00"; /* From delivery month*/
      else
        FY0NW13.FY0NWXDT = FY0NW01.FY0NWXDT; /* To eff. date*/
      end
      FY0NW13.XQACD = FY0NM013.XQACD; /* quality code*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW13.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT13.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT13.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT13.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 115; /* Job was submitted*/
    FY0NW01.FY0NMSEL[13] = "*"; /* Indicate function completed*/

    set FY0NM013 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N135

// Cost worksheet
Function FY0N140()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N141(); /* Format and display the map*/

  FY0N142(); /* Check attention identifier*/

  FY0N143(); /* Reset fields to normal intensity*/

  FY0N144(); /* Verify the entered data*/

  FY0N145(); /* Process valid input request*/

end // end FY0N140

// Format and display map
Function FY0N141()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM014.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM014.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM014 alarm; /* Indicate sound alarm*/

  end

  FY0NM014.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM014.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM014.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM014.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM014 ;

end // end FY0N141

// Check attention identifier
Function FY0N142()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[14] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM014.XXXPRCNM = "FY0N142"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N142

// Reset highlighted fields
Function FY0N143()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM014.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM014.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0NM014.SY1STNBR initialAttributes; /* Style number*/
  set FY0NM014.FY0NMSCD initialAttributes; /* Season code*/
  set FY0NM014.FY0NMSYR initialAttributes; /* Season year*/
  set FY0NM014.XURCOPY initialAttributes; /* Number of copies*/

end // end FY0N143

// Verify the entered data
Function FY0N144()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM014.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM014.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/

  end

   /* ------------ VALIDATE STYLE NUMBER --------------*/

  if (FY0NM014.SY1STNBR > " ")

    set PG2REC empty;
    PG2REC.XGPCD = FY0NM014.XGPCD;
    PG2REC.SY1STNBR = FY0NM014.SY1STNBR;

    XSPG201(); /* Validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        converseLib.validationFailed(73); /* Error message*/
        FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/
        set FY0NM014.SY1STNBR cursor, modified, bold;
      end
    end
  end

   /* ------------ VALIDATE FACTORY CODE --------------*/

  if (FY0NM014.FY1FCTYC > " ")

    set FY1REC empty;
    FY1REC.XGPCD = FY0NM014.XGPCD;
    FY1REC.FY1FCTYC = FY0NM014.FY1FCTYC;

    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        converseLib.validationFailed(33); /* Error message*/
        FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/
        set FY0NM014.FY1FCTYC cursor, modified, bold;
      else
        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "FY0N144"; /* Process name*/
        TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
        TA1REC.TA1MAP = "FY0NM014"; /* Map name*/
        TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
        TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/

      end
    end
  end

   /* --------------- VALIDATE THE SEASON CODE -------------------*/

  if (FY0NM014.FY0NMSCD > " ") /* Season code entered*/
    if (FY0NM014.FY0NMSCD in YSNTBL.XSECD)
       /* next sentence*/
    else
      set FY0NM014.FY0NMSCD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(74); /* Indicate invalid number*/
      FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/

    end
  else
    set FY0NM014.FY0NMSCD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(74); /* Indicate invalid number*/
    FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/

  end

   /* --------------- SETUP THE SEASON YEAR -------------------*/

  FY0NW01.FY0NWSYY = FY0NM014.FY0NMSYR; /* Move to year*/

  if (FY0NW01.FY0NWSYY < 80)
    FY0NW01.FY0NWSCC = 20; /* Move 20 to century*/
  else
    FY0NW01.FY0NWSCC = 19; /* Move 19 to century*/
  end

   /* ------------ VALIDATE COUNTRY CODE --------------*/

  if (FY0NM014.XCTCD > " ")

    if (FY0NM014.XCTCD in XCTTBL.XCTCD)
       /* next sentence*/
    else

      converseLib.validationFailed(25); /* Error message*/
      FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/
      set FY0NM014.XCTCD cursor, modified, bold;
    end
  end

   /* ------------ VALIDATE product category ----------*/

  if (FY0NM014.FY0NMCAT > " ")

    if (FY0NM014.FY0NMCAT in XPCTBL.XPCCD)
       /* next sentence*/
    else

      converseLib.validationFailed(141); /* Error message*/
      FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/
      set FY0NM014.FY0NMCAT cursor, modified, bold;
    end
  end

   /* ------------ VALIDATE product line     ----------*/

  if (FY0NM014.FY0NMLIN > " ")

    if (FY0NM014.FY0NMLIN in XPLTBL.XPLCD)
       /* next sentence*/
    else

      converseLib.validationFailed(114); /* Error message*/
      FY0NM014.XXXPRCNM = "FY0N144"; /* Process name*/
      set FY0NM014.FY0NMLIN cursor, modified, bold;
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N144

// Process valid input request
Function FY0N145()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT14.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW14 empty; /* Parameters work area*/

      FY0NW14.XGPCD = FY0NM014.XGPCD; /* Gpc code*/
      FY0NW14.XCTCD = FY0NM014.XCTCD; /* country code*/
      FY0NW14.FY1FCTYC = FY0NM014.FY1FCTYC; /* factory code*/
      FY0NW14.SY1STNBR = FY0NM014.SY1STNBR; /* Style number*/
      FY0NW14.FY0NWSCD = FY0NM014.FY0NMSCD; /* season code*/
      FY0NW14.FY0NWSYR = FY0NW01.FY0NWSYR; /* season year*/
      FY0NW14.FY0NWTYP = FY0NM014.FY0NMTYP; /* product type*/
      FY0NW14.FY0NWLIN = FY0NM014.FY0NMLIN; /* product line*/
      FY0NW14.FY0NWCAT = FY0NM014.FY0NMCAT; /* product category*/
      FY0NW14.FY0NWGDR = FY0NM014.FY0NMGDR; /* gender age*/
      FY0NW14.FY0NWDOF = FY0NM014.FY0NMDOF; /* domestic offshore*/
      FY0NW14.FY0NWSEG = FY0NM014.FY0NMSEG; /* iseg*/
      FY0NW14.FY0NWRPT = FY0NM014.FY0NMRPT; /* report type*/
      FY0NW14.FY0NWFOB = FY0NM014.FY0NMFOB; /* comfirmed quoted*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW14.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT14.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT14.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT14.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 135; /* Job was submitted*/
    FY0NW01.FY0NMSEL[14] = "*"; /* Indicate function completed*/

    set FY0NM014 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N145

// Production products
Function FY0N150()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N151(); /* Format and display the map*/

  FY0N152(); /* Check attention identifier*/

  FY0N153(); /* Reset fields to normal intensity*/

  FY0N154(); /* Verify the entered data*/

  FY0N155(); /* Process valid input request*/

end // end FY0N150

// Format and display map
Function FY0N151()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM015.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM015.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    if (FY0NM015.XGPCD == "02") /* Footwear?*/
      FY0NM015.XQACD = "01"; /* Quality code*/
    end

    FY0NM015.XLCCD = "10"; /* Life cycle*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM015 alarm; /* Indicate sound alarm*/

  end

  FY0NM015.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM015.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM015.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM015.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM015 ;

end // end FY0N151

// Check attention identifier
Function FY0N152()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[15] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM015.XXXPRCNM = "FY0N152"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N152

// Reset highlighted fields
Function FY0N153()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM015.XGPCD initialAttributes; /* Gpc code*/
  set FY0NM015.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0NM015.SY1STNBR initialAttributes; /* Style number*/
  set FY0NM015.XLCCD initialAttributes; /* Life cycle*/
  set FY0NM015.XQACD initialAttributes; /* Quality code*/

end // end FY0N153

// Verify the entered data
Function FY0N154()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0NM015.XURCOPY == 0) /* Number of copies invalid*/

    set FY0NM015.XURCOPY cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(16); /* Indicate invalid number*/
    FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/

  end

   /* --------------- VALIDATE THE QUALITY CODE ------------------*/

  if (FY0NM015.XQACD > " ") /* Quality code entered*/
    if (FY0NM015.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else
      set FY0NM015.XQACD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(76); /* Indicate invalid number*/
      FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
    end
  else
    if (FY0NM015.XGPCD == "02")
      set FY0NM015.XQACD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(76); /* Indicate invalid number*/
      FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
    end
  end

   /* --------------- VALIDATE THE LIFE CYCLE ------------------*/

  if (FY0NM015.XLCCD > " ") /* Life cycle entered*/
    if (FY0NM015.XLCCD in XLCTBL.XLCCD)
       /* next sentence*/
    else
      set FY0NM015.XLCCD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(137); /* Indicate invalid number*/
      FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
    end
  else
    set FY0NM015.XLCCD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(137); /* Indicate invalid number*/
    FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
  end

   /* ------------ VALIDATE STYLE NUMBER --------------*/

  if (FY0NM015.SY1STNBR > " " /* Style entered*/
   && FY0NM015.XGPCD == "02") /* and footwear*/

    set PG2REC empty;

    PG2REC.XGPCD = FY0NM015.XGPCD;
    PG2REC.SY1STNBR = FY0NM015.SY1STNBR;
    PG2REC.SY2CLRID = "00 ";
    PG2REC.XDMCD = "00";

    XSPG202(); /* Validate style*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        converseLib.validationFailed(73); /* Error message*/
        FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
        set FY0NM015.SY1STNBR cursor, modified, bold;
      end
    end
  end

   /* ------------------ VALIDATE FACTORY ----------------------*/

  if (FY0NM015.FY1FCTYC > " ")

    set FY1REC empty;
    FY1REC.XGPCD = FY0NM015.XGPCD;
    FY1REC.FY1FCTYC = FY0NM015.FY1FCTYC;

    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
        converseLib.validationFailed(33); /* Error message*/
        FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
        set FY0NM015.FY1FCTYC cursor, modified, bold;
      else
        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "FY0N154"; /* Process name*/
        TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
        TA1REC.TA1MAP = "FY0NM015"; /* Map name*/
        TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
        TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        FY0NM015.XXXPRCNM = "FY0N154"; /* Process name*/
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N154

// Process valid input request
Function FY0N155()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT15.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW15 empty; /* Parameters work area*/

      FY0NW15.XGPCD = FY0NM015.XGPCD; /* Gpc code*/
      FY0NW15.FY1FCTYC = FY0NM015.FY1FCTYC; /* Factory*/
      FY0NW15.SY1STNBR = FY0NM015.SY1STNBR; /* Style number*/
      FY0NW15.XLCCD = FY0NM015.XLCCD; /* Life cycle*/
      FY0NW15.XQACD = FY0NM015.XQACD; /* Quality code*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW15.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT15.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT15.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT15.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "Y"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 136; /* Job was submitted*/
    FY0NW01.FY0NMSEL[15] = "*"; /* Indicate function completed*/

    set FY0NM015 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N155

// Footwear FOB history
Function FY0N160()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N161(); /* Format and display the map*/

  FY0N162(); /* Check attention identifier*/

  FY0N163(); /* Reset fields to normal intensity*/

  FY0N164(); /* Verify the entered data*/

  FY0N165(); /* Process valid input request*/

end // end FY0N160

// Format and display map
Function FY0N161()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM016.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM016.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    FY0NM016.XQACD = "01"; /* Quality code*/
    if (FY0NM016.XQACD in XQATBL.XQACD)
      FY0NM016.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    end
    FY0NM016.XLCCD = "10"; /* Life cycle*/
    if (FY0NM016.XLCCD in XLCTBL.XLCCD)
      FY0NM016.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
    end

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM016 alarm; /* Indicate sound alarm*/

  end

  FY0NM016.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM016.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM016.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM016.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM016 ;

end // end FY0N161

// Check attention identifier
Function FY0N162()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[16] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM016.XXXPRCNM = "FY0N162"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N162

// Reset highlighted fields
Function FY0N163()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM016.FY0NMFYY initialAttributes; /* From p.o. id year*/
  set FY0NM016.FY0NMFMM initialAttributes; /* From p.o. id month*/
  set FY0NM016.FY0NMFDM initialAttributes; /* From p.o. id delivery month*/
  set FY0NM016.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0NM016.FY0NMTYY initialAttributes; /* To p.o. id year*/
  set FY0NM016.FY0NMTMM initialAttributes; /* To p.o. id month*/
  set FY0NM016.FY0NMTDM initialAttributes; /* To p.o. id delivery month*/
  set FY0NM016.FY0NMFDT initialAttributes; /* From date*/
  set FY0NM016.FY0NMTDT initialAttributes; /* To date*/
  set FY0NM016.XCTCD initialAttributes; /* Country code*/
  set FY0NM016.SY1STNBR initialAttributes; /* Style number*/
  set FY0NM016.SY2CLRID initialAttributes; /* Color code*/
  set FY0NM016.XQACD initialAttributes; /* Quality code*/
  set FY0NM016.XLCCD initialAttributes; /* Life cycle*/
  set FY0NM016.XPLCD initialAttributes; /* Product line*/
  set FY0NM016.XPCCD initialAttributes; /* Product category*/
  set FY0NM016.FYITPIND initialAttributes; /* Reason type indicator*/

end // end FY0N163

// Verify the entered data
Function FY0N164()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

   /* --------------- VALIDATE THE REASON CODE -------------------*/

  if (FY0NM016.FYITPIND > " ") /* Reason code entered*/
    if (FY0NM016.FYITPIND != "1" /* Invalid reason code entered*/
     && FY0NM016.FYITPIND != "2" 
     && FY0NM016.FYITPIND != "3")
      set FY0NM016.FYITPIND cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(140); /* Indicate invalid code*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/

    end
  end

   /* --------------- VALIDATE THE LIFE CYCLE ------------------*/

  if (FY0NM016.XLCCD in XLCTBL.XLCCD)
    FY0NM016.XLCDESC = XLCTBL.XLCDESC[sysVar.arrayIndex];
  else
    FY0NM016.XLCDESC = " ";
    set FY0NM016.XLCCD cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(137); /* Indicate invalid number*/
    FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/

  end

   /* --------------- VALIDATE THE PRODUCT CATEGORY ------------*/

  if (FY0NM016.XPCCD > " ") /* Product Category entered*/
    if (FY0NM016.XPCCD in XPCTBL.XPCCD)
      FY0NM016.XPCSDESC = XPCTBL.XPCSDESC[sysVar.arrayIndex];
    else
      FY0NM016.XPCSDESC = " ";
      set FY0NM016.XPCCD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(141); /* Indicate invalid number*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    end
  end

   /* --------------- VALIDATE THE PRODUCT LINE ----------------*/

  if (FY0NM016.XPLCD > " ") /* Product Line entered*/
    if (FY0NM016.XPLCD in XPLTBL.XPLCD)
      FY0NM016.XPLSDESC = XPLTBL.XPLSDESC[sysVar.arrayIndex];
    else
      FY0NM016.XPLSDESC = " ";
      set FY0NM016.XPLCD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(114); /* Indicate invalid number*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    end
  end

   /* --------------- VALIDATE THE QUALITY CODE ------------------*/

  if (FY0NM016.XQACD in XQATBL.XQACD)
    FY0NM016.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  else
    set FY0NM016.XQACD cursor, modified, bold; /* Highlight*/
    FY0NM016.XQADESC = " ";
    converseLib.validationFailed(76); /* Indicate invalid number*/
    FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
  end

   /* ------------ VALIDATE STYLE NUMBER --------------*/

  if (FY0NM016.SY1STNBR > " " /* Style entered*/
   && FY0NM016.SY2CLRID > " ") /* Color entered*/
    set PG2REC empty;
    PG2REC.XGPCD = FY0NM016.XGPCD;
    PG2REC.SY1STNBR = FY0NM016.SY1STNBR;
    PG2REC.SY2CLRID = FY0NM016.SY2CLRID;
    PG2REC.XDMCD = "00";
    XSPG202(); /* Validate style*/
    if (SQLCA.VAGen_SQLCODE != 0) /* Row found*/
      converseLib.validationFailed(73); /* Error message*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      set FY0NM016.SY1STNBR cursor, modified, bold;
      set FY0NM016.SY2CLRID modified, bold;
    end
  end

   /* ------------ VALIDATE STYLE NUMBER --------------*/

  if (FY0NM016.SY1STNBR > " " /* Style entered*/
   && FY0NM016.SY2CLRID == " ") /* Color entered*/
    set PG2REC empty;
    PG2REC.XGPCD = FY0NM016.XGPCD;
    PG2REC.SY1STNBR = FY0NM016.SY1STNBR;
    XSPG201(); /* Validate style*/
    SQLCA.SQLCAREC = TAEREC.SQLCAREC; /* Restore record from fetch*/
    if (SQLCA.VAGen_SQLCODE == 100) /* Row found*/
      converseLib.validationFailed(73); /* Error message*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      set FY0NM016.SY1STNBR cursor, modified, bold;
    end
  end

   /* --------------- VALIDATE THE COUNTRY CODE ----------------*/

  if (FY0NM016.XCTCD > " ") /* Country code entered*/
    if (FY0NM016.FY1FCTYC > " ") /* and Factory Code entered*/
      FY0NM016.XCTDESC = " ";
      set FY0NM016.XCTCD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(143); /* Indicate invalid number*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    else
      if (FY0NM016.XCTCD in XCTTBL.XCTCD)
        FY0NM016.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
      else
        FY0NM016.XCTDESC = " ";
        set FY0NM016.XCTCD cursor, modified, bold; /* Highlight*/
        converseLib.validationFailed(25); /* Indicate invalid number*/
        FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      end
    end
  end

   /* ------------ VALIDATE THE TO P.O. ID RANGE ----------------*/

  FY0NW01.FY0NWEDT = 0; /* Initialize the effective dates*/
  FY0NW01.FY0NWXDT = 0;

  if (FY0NM016.FY0NMTYY > " "
   || FY0NM016.FY0NMTMM > " "
   || FY0NM016.FY0NMTDM > " ")

    if (FY0NM016.FY0NMTDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      set FY0NM016.FY0NMTYY modified, bold;
      set FY0NM016.FY0NMTMM modified, bold;
      set FY0NM016.FY0NMTDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM016.FY0NMTYY; /* move in year*/
      FY0NW01.FY0NWMM = FY0NM016.FY0NMTMM; /* move in month*/
      FY0NW01.FY0NWDD = 0; /* move 0 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "LASTDAY"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/

      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/

      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWXDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
        set FY0NM016.FY0NMTYY cursor, modified, bold;
        set FY0NM016.FY0NMTMM modified, bold;
        set FY0NM016.FY0NMTDM modified, bold;
      end
    end
  end

   /* ------------ VALIDATE THE FROM P.O. ID RANGE ---------------*/

  if (FY0NM016.FY0NMFYY > " "
   || FY0NM016.FY0NMFMM > " "
   || FY0NM016.FY0NMFDM > " ")

    if (FY0NM016.FY0NMFDM > 12) /* Invalid delivery month entered*/
      converseLib.validationFailed(106); /* Error message*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      set FY0NM016.FY0NMFYY modified, bold;
      set FY0NM016.FY0NMFMM modified, bold;
      set FY0NM016.FY0NMFDM cursor, modified, bold;

    else /* check for a valid date entered*/

      FY0NW01.FY0NWYY = FY0NM016.FY0NMFYY; /* move in year*/
      FY0NW01.FY0NWMM = FY0NM016.FY0NMFMM; /* move in month*/
      FY0NW01.FY0NWDD = 1; /* move 1 to days*/

      set TA2REC empty; /* Clear working record*/
      TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
      TA2REC.TA2GRTYP = "E"; /* move date type to record*/
      TA2REC.TA2GRGE = FY0NW01.FY0NWDAT;
                                   /* move date in yymmdd format*/
      call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
      if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
        FY0NW01.FY0NWEDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
      else /* Invalid date entered*/
        converseLib.validationFailed(106); /* Error message*/
        FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
        set FY0NM016.FY0NMFYY cursor, modified, bold;
        set FY0NM016.FY0NMFMM modified, bold;
        set FY0NM016.FY0NMFDM modified, bold;
      end
    end

  end

  if (FY0NW01.FY0NWEDT > FY0NW01.FY0NWXDT) /* From eff. dt > to eff. dt*/
    converseLib.validationFailed(116); /* Error message*/
    FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    set FY0NM016.FY0NMFYY cursor, modified, bold;
    set FY0NM016.FY0NMFMM modified, bold;
    set FY0NM016.FY0NMFDM modified, bold;
    set FY0NM016.FY0NMTYY modified, bold;
    set FY0NM016.FY0NMTMM modified, bold;
    set FY0NM016.FY0NMTDM modified, bold;
  end

   /* ------------------ VALIDATE FACTORY ----------------------*/

  if (FY0NM016.FY1FCTYC > " ")

    set FY1REC empty;
    FY1REC.XGPCD = FY0NM016.XGPCD;
    FY1REC.FY1FCTYC = FY0NM016.FY1FCTYC;

    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
       /* next sentence*/
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
        converseLib.validationFailed(33); /* Error message*/
        FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
        set FY0NM016.FY1FCTYC cursor, modified, bold;
      else

        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "FY0N164"; /* Process name*/
        TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
        TA1REC.TA1MAP = "FY0NM016"; /* Map name*/
        TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
        TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      end
    end
  end

   /* ------------ VALIDATE THE DATE RANGE ----------------------*/

   /* ------------ First do the to date*/

  if (FY0NM016.FY0NMTDT > 0) /* To date was entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = FY0NM016.FY0NMTDT; /* move date in mmddyy format*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      FY0NW01.FY0NWTDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
    else /* Invalid date entered*/
      converseLib.validationFailed(62); /* Error message*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      set FY0NM016.FY0NMTDT cursor, modified, bold;
    end
  else /* Invalid date entered*/
    converseLib.validationFailed(62); /* Error message*/
    FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    set FY0NM016.FY0NMTDT cursor, modified, bold;
  end

   /* ------------ Now do the from date*/

  if (FY0NM016.FY0NMFDT > 0) /* To date was entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = FY0NM016.FY0NMFDT; /* move date in mmddyy format*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      FY0NW01.FY0NWFDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
    else /* Invalid date entered*/
      converseLib.validationFailed(62); /* Error message*/
      FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
      set FY0NM016.FY0NMFDT cursor, modified, bold;
    end
  else /* Invalid date entered*/
    converseLib.validationFailed(62); /* Error message*/
    FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    set FY0NM016.FY0NMFDT cursor, modified, bold;
  end

  if (FY0NW01.FY0NWFDT > FY0NW01.FY0NWTDT) /* From date > to date*/
    converseLib.validationFailed(63); /* Error message*/
    FY0NM016.XXXPRCNM = "FY0N164"; /* Process name*/
    set FY0NM016.FY0NMFDT cursor, modified, bold;
    set FY0NM016.FY0NMTDT modified, bold;
  end

end // end FY0N164

// Process valid input request
Function FY0N165()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Previous errors*/
    exit stack;
  end

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT16.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW16 empty; /* Parameters work area*/

      FY0NW16.XGPCD = FY0NM016.XGPCD; /* Gpc code*/
      FY0NW16.FY1FCTYC = FY0NM016.FY1FCTYC; /* Factory*/
      FY0NW16.SY1STNBR = FY0NM016.SY1STNBR; /* Style number*/
      FY0NW16.SY2CLRID = FY0NM016.SY2CLRID; /* Color*/
      FY0NW16.XLCCD = FY0NM016.XLCCD; /* Life cycle*/
      FY0NW16.XQACD = FY0NM016.XQACD; /* Quality code*/
      FY0NW16.XPLCD = FY0NM016.XPLCD; /* Product line*/
      FY0NW16.XPCCD = FY0NM016.XPCCD; /* Product category*/
      FY0NW16.XCTCD = FY0NM016.XCTCD; /* Country code*/
      FY0NW16.FYITPIND = FY0NM016.FYITPIND; /* Reason indicator*/

      FY0NW16.FY0NWEDT = FY0NW01.FY0NWEDT; /* from eff. date*/
      FY0NW16.FY0NWFDM = FY0NM016.FY0NMFDM; /* From delivery month*/
      FY0NW16.FY0NWTDM = FY0NM016.FY0NMTDM; /* To delivery month*/
      if (FY0NW01.FY0NWEDT == 0) /* From eff. date not entered*/
        FY0NW16.FY0NWFDM = 0; /* From delivery month*/
        FY0NW16.FY0NWTDM = 99; /* To delivery month*/
        FY0NW16.FY0NWXDT = 99999999; /* Set to eff. date to max*/
      else
        FY0NW16.FY0NWXDT = FY0NW01.FY0NWXDT; /* To eff. date*/
      end

      FY0NW16.FY0NWFDT = FY0NW01.FY0NWFDT; /* From date*/
      FY0NW16.FY0NWTDT = FY0NW01.FY0NWTDT; /* To date*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW16.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT16.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT16.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT16.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 142; /* Job was submitted*/
    FY0NW01.FY0NMSEL[16] = "*"; /* Indicate function completed*/

    set FY0NM016 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N165

// Apparel FOB history
Function FY0N170()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N171(); /* Format and display the map*/

  FY0N172(); /* Check attention identifier*/

  FY0N173(); /* Reset fields to normal intensity*/

  FY0N174(); /* Verify the entered data*/

  FY0N175(); /* Process valid input request*/

end // end FY0N170

// Format and display map
Function FY0N171()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    FY0NM017.XGPCD = FY0NW01.XGPCD; /* Gpc code*/
    FY0NM017.XGPDESC = FY0NW01.XGPDESC; /* Description*/

    FY0NM017.XQACD = "01"; /* Quality code*/
    if (FY0NM017.XQACD in XQATBL.XQACD)
      FY0NM017.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    end

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM017 alarm; /* Indicate sound alarm*/

  end

  FY0NM017.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  FY0NM017.XURDEST = TA6REC.XURDEST; /* Printer*/
  FY0NM017.XURCOPY = TA6REC.XURCOPY; /* Copies*/
  FY0NM017.XRODESC = TA6REC.XRODESC; /* Description*/

  converse FY0NM017 ;

end // end FY0N171

// Check attention identifier
Function FY0N172()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[17] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM017.XXXPRCNM = "FY0N172"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N172

// Reset highlighted fields
Function FY0N173()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0NM017.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0NM017.XSECD initialAttributes; /* Season code*/
  set FY0NM017.FY0NMSYR initialAttributes; /* Season year*/
  set FY0NM017.FY0NMFDT initialAttributes; /* From date*/
  set FY0NM017.FY0NMTDT initialAttributes; /* To date*/
  set FY0NM017.XCTCD initialAttributes; /* Country code*/
  set FY0NM017.SY1STNBR initialAttributes; /* Style number*/
  set FY0NM017.XQACD initialAttributes; /* Quality code*/
  set FY0NM017.FYITPIND initialAttributes; /* Reason type indicator*/
  set FY0NM017.FY0NMDOF initialAttributes; /* Domestic/Offshore flag*/

end // end FY0N173

// Verify the entered data
Function FY0N174()
   /* ------------------------------------------------------------*/
   /* Verify the entered data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

   /* --------------- VALIDATE THE REASON CODE -------------------*/

  if (FY0NM017.FYITPIND > " "  /* Reason code entered*/
   && FY0NM017.FYITPIND != "1" /* Invalid reason code entered*/
   && FY0NM017.FYITPIND != "2" 
   && FY0NM017.FYITPIND != "3" 
   && FY0NM017.FYITPIND != "4")
    set FY0NM017.FYITPIND cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(140); /* Indicate invalid code*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/

  end

   /* ----------- VALIDATE THE DOMESTIC/OFFSHORE FLAG -----------*/

  if (FY0NM017.FY0NMDOF > " "  /* Both?*/
   && FY0NM017.FY0NMDOF != "D" /* Domestic?*/
   && FY0NM017.FY0NMDOF != "O") /* Offshore?*/
    set FY0NM017.FY0NMDOF cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(114); /* Indicate invalid number*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
  end

   /* --------------- VALIDATE THE QUALITY CODE ------------------*/

  if (FY0NM017.XQACD in XQATBL.XQACD)
    FY0NM017.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  else
    set FY0NM017.XQACD cursor, modified, bold; /* Highlight*/
    FY0NM017.XQADESC = " ";
    converseLib.validationFailed(76); /* Indicate invalid number*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
  end

   /* ------------ VALIDATE STYLE NUMBER --------------*/

  if (FY0NM017.SY1STNBR > " ") /* Style entered*/
    set PG2REC empty;
    PG2REC.XGPCD = FY0NM017.XGPCD;
    PG2REC.SY1STNBR = FY0NM017.SY1STNBR;
    XSPG201(); /* Validate style*/
    if (SQLCA.VAGen_SQLCODE != 0) /* Row found*/
      converseLib.validationFailed(73); /* Error message*/
      FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
      set FY0NM017.SY1STNBR cursor, modified, bold;
    end
  end

   /* --------------- VALIDATE THE COUNTRY CODE ----------------*/

  if (FY0NM017.XCTCD > " ") /* Country code entered*/
    if (FY0NM017.FY1FCTYC > " ") /* and Factory Code entered*/
      FY0NM017.XCTDESC = " ";
      set FY0NM017.XCTCD cursor, modified, bold; /* Highlight*/
      converseLib.validationFailed(143); /* Indicate invalid number*/
      FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
    else
      if (FY0NM017.XCTCD in XCTTBL.XCTCD)
        FY0NM017.XCTDESC = XCTTBL.XCTDESC[sysVar.arrayIndex];
      else
        FY0NM017.XCTDESC = " ";
        set FY0NM017.XCTCD cursor, modified, bold; /* Highlight*/
        converseLib.validationFailed(25); /* Indicate invalid number*/
        FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
      end
    end
  end

   /* ------------------ VALIDATE FACTORY ----------------------*/

  if (FY0NM017.FY1FCTYC > " ")

    set FY1REC empty;
    FY1REC.XGPCD = FY0NM017.XGPCD;
    FY1REC.FY1FCTYC = FY0NM017.FY1FCTYC;

    call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

    if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
      if (FY0NM017.FY0NMDOF > " ") /* Domestic/Offshore entered?*/
        if (FY0NM017.FY0NMDOF == "D" /* Domestic?*/
         && FY1REC.FY1FRGN == "Y")   /* Foreign*/
          converseLib.validationFailed(144); /* Error message*/
          FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
          set FY0NM017.FY1FCTYC modified, bold;
          set FY0NM017.FY0NMDOF cursor, modified, bold;
        else
          if (FY0NM017.FY0NMDOF == "O" /* Offshore?*/
           && FY1REC.FY1FRGN == "N")   /* Foreign*/
            converseLib.validationFailed(144); /* Error message*/
            FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
            set FY0NM017.FY1FCTYC modified, bold;
            set FY0NM017.FY0NMDOF cursor, modified, bold;
          end
        end
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
        converseLib.validationFailed(33); /* Error message*/
        FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
        set FY0NM017.FY1FCTYC cursor, modified, bold;
      else

        if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
          converseLib.validationFailed(11); /* Indicate not available*/
          TA1REC.TA1FUNC = "POST"; /* Termination function*/
        else
          converseLib.validationFailed(10); /* Indicate system error*/
          TA1REC.TA1FUNC = "RETN"; /* Termination function*/
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
        end

        TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
        TA1REC.TA1PGMNM = "FY0N174"; /* Process name*/
        TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
        TA1REC.TA1MAP = "FY0NM017"; /* Map name*/
        TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
        TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
        TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

        call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

        FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
      end
    end
  end

   /* ------------ VALIDATE THE DATE RANGE ----------------------*/

   /* ------------ First do the to date*/

  if (FY0NM017.FY0NMTDT > 0) /* To date was entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = FY0NM017.FY0NMTDT; /* move date in mmddyy format*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      FY0NW01.FY0NWTDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
    else /* Invalid date entered*/
      converseLib.validationFailed(62); /* Error message*/
      FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
      set FY0NM017.FY0NMTDT cursor, modified, bold;
    end
  else /* Invalid date entered*/
    converseLib.validationFailed(62); /* Error message*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
    set FY0NM017.FY0NMTDT cursor, modified, bold;
  end

   /* ------------ Now do the from date*/

  if (FY0NM017.FY0NMFDT > 0) /* To date was entered*/
    set TA2REC empty; /* Clear working record*/
    TA2REC.TA2DTOPT = "GREGGREG"; /* move date option to record*/
    TA2REC.TA2GRTYP = "A"; /* move date type to record*/
    TA2REC.TA2GRGA = FY0NM017.FY0NMFDT; /* move date in mmddyy format*/
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes}; /* Check valid date w/routine*/
    if (TA2REC.TA2RTNCD == 0) /* valid date entered*/
      FY0NW01.FY0NWFDT = TA2REC.TA2GRGGN; /* save date in ccyymmdd*/
    else /* Invalid date entered*/
      converseLib.validationFailed(62); /* Error message*/
      FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
      set FY0NM017.FY0NMFDT cursor, modified, bold;
    end
  else /* Invalid date entered*/
    converseLib.validationFailed(62); /* Error message*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
    set FY0NM017.FY0NMFDT cursor, modified, bold;
  end

  if (FY0NW01.FY0NWFDT > FY0NW01.FY0NWTDT) /* From date > to date*/
    converseLib.validationFailed(63); /* Error message*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/
    set FY0NM017.FY0NMFDT cursor, modified, bold;
    set FY0NM017.FY0NMTDT modified, bold;
  end

   /* --------------- VALIDATE THE SEASON CODE -------------------*/

  if (FY0NM017.XSECD > " ") /* Season code entered*/
    if (FY0NM017.XSECD in YSNTBL.XSECD)
       /* next sentence*/
    else
      set FY0NM017.XSECD cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(74); /* Indicate invalid number*/
      FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/

    end
  else
    set FY0NM017.XSECD cursor, modified, bold; /* Highlight*/

    converseLib.validationFailed(74); /* Indicate invalid number*/
    FY0NM017.XXXPRCNM = "FY0N174"; /* Process name*/

  end

   /* --------------- SETUP THE SEASON YEAR -------------------*/

  FY0NW01.FY0NWSYY = FY0NM017.FY0NMSYR; /* Move to year*/

  if (FY0NW01.FY0NWSYY < 80)
    FY0NW01.FY0NWSCC = 20; /* Move 20 to century*/
  else
    FY0NW01.FY0NWSCC = 19; /* Move 19 to century*/
  end

end // end FY0N174

// Process valid input request
Function FY0N175()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Previous errors*/
    exit stack;
  end

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    if (FY0NT17.TARTYPE[FY0NWIXT] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format the variable parameters entered by the user.*/
      /* ------------------------------------------------------------*/

      set FY0NW17 empty; /* Parameters work area*/

      FY0NW17.XGPCD = FY0NM017.XGPCD; /* Gpc code*/
      FY0NW17.XSECD = FY0NM017.XSECD; /* Season code*/
      FY0NW17.FY0NWSYR = FY0NW01.FY0NWSYR; /* Season year*/
      FY0NW17.FY1FCTYC = FY0NM017.FY1FCTYC; /* Factory*/
      FY0NW17.SY1STNBR = FY0NM017.SY1STNBR; /* Style number*/
      FY0NW17.XQACD = FY0NM017.XQACD; /* Quality code*/
      FY0NW17.FYITPIND = FY0NM017.FYITPIND; /* Reason indicator*/
      FY0NW17.FY0NWDOF = FY0NM017.FY0NMDOF; /* Dom/Off flag*/
      FY0NW17.FY0NWFDT = FY0NW01.FY0NWFDT; /* From date*/
      FY0NW17.FY0NWTDT = FY0NW01.FY0NWTDT; /* To date*/
      FY0NW17.XCTCD = FY0NM017.XCTCD; /* Country code*/

      TA6REC.TARJCL[TA6INDEX] = FY0NW17.TARJCL;

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = FY0NT17.TARJCL[FY0NWIXT]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = FY0NT17.TARTYPE[FY0NWIXT]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT17.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 142; /* Job was submitted*/
    FY0NW01.FY0NMSEL[17] = "*"; /* Indicate function completed*/

    set FY0NM017 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N175

// Mapper FOB bridge
Function FY0N200()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N201(); /* Format and display the map*/

  FY0N202(); /* Check attention identifier*/

  FY0N205(); /* Process valid input request*/

end // end FY0N200

// Format and display map
Function FY0N201()
   /* ------------------------------------------------------------*/
   /* If no error to display, format and display the map.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    if (FY0NW01.FY0NWMNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FY0NW01.FY0NWMNO);
    end /* Job submitted message number*/
    FY0NW01.FY0NWMNO = 0; /* Reset message number*/

  else

    set FY0NM020 alarm; /* Indicate sound alarm*/

  end

  FY0NM020.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  converse FY0NM020 ;

end // end FY0N201

// Check attention identifier
Function FY0N202()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    FY0NW01.FY0NMSEL[20] = "C"; /* Indicate selection cancelled*/

    converseLib.clearScreen();
     /* Clear map output area*/

    exit stack; /* Exit to display next map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    exit stack; /* Exit to display selection menu*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM020.XXXPRCNM = "FY0N202"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0N202

// Process valid input request
Function FY0N205()
   /* ------------------------------------------------------------*/
   /* Initialize the work area and indexes to be used.*/
   /* ------------------------------------------------------------*/

  move " " to TA6REC.TA6ROW[1] for all; /* Clear JCL array rows*/

  FY0NW01.FY0NWIXT = 1; /* Input table index*/
  TA6REC.TA6INDEX = 1; /* Output array index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (TA6REC.TA6INDEX > 0) /* Until end of table*/

    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = FY0NT2O.TARJCL[FY0NWIXT]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = FY0NT2O.TARTYPE[FY0NWIXT]; /* Type*/

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Output array index*/

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (FY0NT2O.TARJCL[FY0NWIXT] == "/*EOF") /* End of table*/

      TA6REC.TA6INDEX = 0; /* Indicate end of table*/
    else
      FY0NW01.FY0NWIXT = FY0NW01.FY0NWIXT + 1; /* Input table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for background execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit the JCL*/
  TA6REC.TA6MSGSW = "N"; /* EOJ online message switch*/

  XPTA0P(); /* Submit JCL for background job*/

   /* ------------------------------------------------------------*/
   /* If submit was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    FY0NW01.FY0NWMNO = 148; /* Job was submitted*/
    FY0NW01.FY0NMSEL[20] = "*"; /* Indicate function completed*/

    set FY0NM020 initial; /* Clear map output area*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If not successful, indicate unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call not successful*/
   || TA6REC.TA6RTNCD > "1")         /* or unexpected error*/

    converseLib.validationFailed(10); /* Unexpected error occurred*/

  end

  exit stack; /* Exit to display map*/

end // end FY0N205

// Report Request Menu
Function FY0N990()
   /* ------------------------------------------------------------*/
   /* Format and display the map.*/
   /* Check the attention identifier used to respond.*/
   /* Reset highlighted fields to normal intensity.*/
   /* Verify the data that was entered.*/
   /* Process the valid input request.*/
   /* ------------------------------------------------------------*/

  FY0N991(); /* Format and display the map*/

  FY0N992(); /* Check attention identifier*/

  FY0N993(); /* Reset fields to normal intensity*/

  FY0N994(); /* Verify the entered data*/

  FY0N995(); /* Process valid input request*/

end // end FY0N990

// Format and display the map
Function FY0N991()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the map output area.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (FYWREC.XXXMSGNO > 0)
    if (FYWREC.XXXMSGNO == 9999)
      converseLib.validationFailed();
    else
      converseLib.validationFailed(FYWREC.XXXMSGNO);
    end
    FYWREC.XXXMSGNO = 0;
  end

  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    set FY0NM099 initial; /* Clear map output area*/

    FY0NM099.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    FY0NM099.XGPCD = FY0NW01.XGPCD;
    FY0NM099.XGPDESC = FY0NW01.XGPDESC;

    if (FY0NM099.XGPCD == " ") /* Gpc code not entered*/
      set FY0NM099.XGPCD cursor;
    end

    FY0NW01.FY0NWIXM = 1; /* Initialize map index*/

    while (FY0NW01.FY0NWIXM <= FY0NW01.FY0NWIXL) /* Until end of array*/

      FY0NM099.FY0NMSEL[FY0NWIXM] = FY0NW01.FY0NMSEL[FY0NWIXM];

      FY0NW01.FY0NWIXM = FY0NW01.FY0NWIXM + 1; /* Increment index*/

    end

    FY0NM099.CAITEM = COMMAREA.CAITEM; /* Application data*/
    COMMAREA.CAITEM = " "; /* Clear application data*/

    if (FY0NW01.FY0NWMNO != 0) /* Job has been submitted*/

      if (FY0NW01.FY0NWMNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(FY0NW01.FY0NWMNO);
      end /* Job submitted message number*/
      FY0NW01.FY0NWMNO = 0; /* Reset message number*/

    end

  else

    set FY0NM099 alarm; /* Indicate sound alarm*/

  end

  converse FY0NM099 ;

end // end FY0N991

// Check attention identifier
Function FY0N992()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    converseLib.clearScreen();
     /* Clear map output area*/

    FY0NS99(); /* Exit to redisplay map*/

  end

  if (FY0NM099.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = FY0NM099.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0NM099.CAITEM; /* Application data*/

      XSFY001(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set FY0NM099.CATOAP cursor, modified, bold; /* Highlight*/

    FY0NM099.XXXPRCNM = "FY0N992"; /* Process name*/

    FY0NS99(); /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/

    COMMAREA.CATOAP = "FY0A"; /* Transportation Master Menu*/

  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    XSFY001(); /* Exit to another application*/

    FY0NM099.XXXPRCNM = "FY0N992"; /* Process name*/

    FY0NS99(); /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0NM099.XXXPRCNM = "FY0N992"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    FY0NS99(); /* Exit to redisplay map*/

  end

end // end FY0N992

// Reset highlighted fields
Function FY0N993()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  FY0NW01.FY0NWIXM = 1; /* Initialize index*/

  while (FY0NW01.FY0NWIXM <= FY0NW01.FY0NWIXL) /* Until all lines are reset*/

    set FY0NM099.FY0NMSEL[FY0NWIXM] initialAttributes; /* Reset select tag*/

    FY0NW01.FY0NWIXM = FY0NW01.FY0NWIXM + 1; /* Increment line index*/

  end

  set FY0NM099.CATOAP initialAttributes; /* FAST PATH application*/
  set FY0NM099.CAITEM initialAttributes; /* Application data*/

end // end FY0N993

// Verify the entered data
Function FY0N994()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Check for proper select tag.*/
   /* Indicate an error if the line was not selected properly.*/
   /* ------------------------------------------------------------*/

  if (FY0NM099.CAITEM > " ") /* Application data was entered*/

    set FY0NM099.CAITEM cursor, modified, bold; /* Highlight data*/

    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0NM099.XXXPRCNM = "FY0N994"; /* Process name*/

  end

  FY0NW01.FY0NWIXM = FY0NW01.FY0NWIXL; /* Initialize line index*/

  while (FY0NW01.FY0NWIXM > 0) /* Until all lines are verified*/

    if (FY0NM099.FY0NMSEL[FY0NWIXM] != FY0NW01.FY0NMSEL[FY0NWIXM]
     && FY0NM099.FY0NMSEL[FY0NWIXM] != " " /* Line was selected*/
     && FY0NM099.FY0NMSEL[FY0NWIXM] != "S") /* and not with an "S"*/

      set FY0NM099.FY0NMSEL[FY0NWIXM] cursor, modified, bold; /* Highlight*/

      converseLib.validationFailed(13); /* Only "S" is valid*/
      FY0NM099.XXXPRCNM = "FY0N994"; /* Process name*/

    end

    FY0NW01.FY0NWIXM = FY0NW01.FY0NWIXM - 1; /* Decrement line number*/

  end

  if (FY0NM099.XGPCD > " ") /* If gpc code entered*/
    FY0NW01.XGPCD = FY0NM099.XGPCD; /* If gpc code entered*/
    if (FY0NM099.XGPCD in XGPTBL.XGPCD)
      COMMAREA.XGPCD = FY0NM099.XGPCD;
      FY0NM099.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0NW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    else
      set FY0NM099.XGPCD cursor, modified, bold; /* Highlight*/
      FY0NM099.XGPDESC = " ";
      FY0NW01.XGPDESC = " ";

      converseLib.validationFailed(101); /* Indicate invalid gpc code*/
      FY0NM099.XXXPRCNM = "FY0N994"; /* Process name*/

    end
  else
    FY0NM099.XGPDESC = " ";
    FY0NW01.XGPDESC = " ";
    FY0NW01.XGPCD = " ";

    set FY0NM099.XGPCD cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(101); /* Indicate invalid gpc code*/
    FY0NM099.XXXPRCNM = "FY0N994"; /* Process name*/

  end

  if (FY0NM099.XGPCD > " ") /* If gpc code entered*/
    if (FY0NM099.FY0NMSEL[13] == "S") /* Line 13 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[13] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[12] == "S") /* Line 12 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it apparel*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[12] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[11] == "S") /* Line 11 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[11] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[7] == "S") /* Line 7 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[7] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[22] == "S") /* Line 22 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[22] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[10] == "S") /* Line 10 was selected*/
      if (FY0NM099.XGPCD == "03") /* is it apparel*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[10] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[21] == "S") /* Line 21 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[21] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[9] == "S") /* Line 9 was selected*/
      if (FY0NM099.XGPCD == "03") /* is it apparel*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[9] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[8] == "S") /* Line 8 was selected*/
      if (FY0NM099.XGPCD == "03") /* is it apparel*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[8] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[19] == "S") /* Line 19 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[19] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[18] == "S") /* Line 18 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[18] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[17] == "S") /* Line 17 was selected*/
      if (FY0NM099.XGPCD == "03") /* is it apparel*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[17] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[16] == "S") /* Line 16 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[16] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[15] == "S") /* Line 15 was selected*/
      if (FY0NM099.XGPCD == "02") /* is it footwear*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[15] cursor, bold; /* Highlight*/
      end
    end

    if (FY0NM099.FY0NMSEL[14] == "S") /* Line 14 was selected*/
      if (FY0NM099.XGPCD == "03") /* is it apparel*/
        /* next sentence*/
      else
        converseLib.validationFailed(131); /* wrong gpc code*/
        FY0NM099.XXXPRCNM = "FY0N994"; /* process name*/
        set FY0NM099.FY0NMSEL[14] cursor, bold; /* Highlight*/
      end
    end
  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/

    FY0NS99(); /* Exit to redisplay map*/

  end

end // end FY0N994

// Process valid input request
Function FY0N995()
   /* ------------------------------------------------------------*/
   /* Indicate the lines that were selected.*/
   /* If no default print destination and at least one report was*/
   /* selected, force selection of printer.*/
   /* ------------------------------------------------------------*/

  move FY0NM099.FY0NMSEL to FY0NW01.FY0NMSEL[1] for all;

  if (FY0NW01.FY0NMSEL[1] == "S") /* If specify printer selected*/

    TA6REC.TA6SUBSW = "N"; /* Indicate do not submit JCL*/

  end

end // end FY0N995

// Pop-up window routine
Function FY0NS01()

   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0NM013.XPLCD == "?" /* if ? in Product line field*/
   || FY0NM013.XQACD == "?") /* if ? in quality code field*/

        /* NEXT SENTENCE*/

  else

    return; /* Return to previous process*/

  end

  if (FY0NM013.XPLCD == "?") /* if ? in product line field*/
    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "        PRODUCT LINE CODES"; /* heading*/
    XX0XW02.XGPCD = FY0NM013.XGPCD;
                                   /* Retrieve only entered gpc info*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPXPL01(); /* perform gpc code window*/
    end

     /* **********************************************************/
     /* *  If the pass index is greater than zero, use the      **/
     /* *  passed table index 'XX0XWPIX' to move the product    **/
     /* *  line table code and description to the map.          **/
     /* **********************************************************/

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      FY0NM013.XPLCD = XPLTBL.XPLCD[XX0XWPIX]; /* move code*/
      set FY0NM013.XPLCD cursor;
    else
      set FY0NM013.XPLCD cursor;
    end
  end

  if (FY0NM013.XQACD == "?") /* if ? in Quality code field*/
    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "             QUALITY CODES"; /* heading*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPXQA01(); /* perform gpc code window*/
    end

     /* **********************************************************/
     /* *  If the pass index is greater than zero, use the      **/
     /* *  passed table index 'XX0XWPIX' to move the Quality    **/
     /* *  table code and description to the map.               **/
     /* **********************************************************/

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      FY0NM013.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
      set FY0NM013.XQACD cursor, modified;
    else
      set FY0NM013.XQACD cursor, modified;
    end
  end

  converseLib.clearScreen();
   /* Clear screen before display*/

end // end FY0NS01

// Select Region code
Function FY0NS05()
   /* ------------------------------------------------------------*/
   /* Load key fields for table access*/
   /* ------------------------------------------------------------*/

  set TABREC empty;
  set SQLCA empty;
  TABREC.SQLCAREC = SQLCA.SQLCAREC;

  call "TA0800" (TABREC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  SQLCA.SQLCAREC = TABREC.SQLCAREC;

  if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
    return; /* Return to previous process*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMAP = "FY0N"; /* application name*/
  TA1REC.TA1PGMNM = "FY0NS05"; /* Process name*/
  TA1REC.TA1LOC = "SELECT THEATER OF OPER  ";
  TA1REC.TA1DBASE = "TA0800  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VXDR0001"; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end FY0NS05

// Clear selections and exit
Function FY0NS99()
   /* ------------------------------------------------------------*/
   /* Reset any selections in working storage.*/
   /* Exit to redisplay the selection menu map.*/
   /* ------------------------------------------------------------*/

  FY0NW01.FY0NWIXM = 1; /* Initialize map index*/

  while (FY0NW01.FY0NWIXM <= FY0NW01.FY0NWIXL) /* Until end of array*/

    if (FY0NW01.FY0NMSEL[FY0NWIXM] == "S") /* Entry is selected*/

      FY0NW01.FY0NMSEL[FY0NWIXM] = " "; /* Reset entry*/

    end

    FY0NW01.FY0NWIXM = FY0NW01.FY0NWIXM + 1; /* Increment index*/

  end

  exit stack; /* Exit to redisplay map*/

end // end FY0NS99

//*** RECORD=FY0NW00 ****
// JCL variable storage for FY0N - Report Request Menu
// ***********************
Record FY0NW00 type basicRecord
  10 XURCOPY XURCOPY ; 
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XXXSTAT XXXSTAT ; 
    15 * char(76) ; 
end // end FY0NW00

//*** RECORD=FY0NW01 ****
// Working storage for FY0N - Report Request Menu
// ***********************
Record FY0NW01 type basicRecord
  10 FY0NWUID FY0NWUID ; 
  10 FY0NWIXL FY0NWIXL ; 
  10 FY0NWIXM FY0NWIXM ; 
  10 FY0NWIX2 FY0NWIX2 ; 
  10 FY0NWIXP FY0NWIXP ; 
  10 FY0NWIXS FY0NWIXS [10] ; 
  10 FY0NWIXT FY0NWIXT ; 
  10 XURDEST XURDEST ; 
  10 XRODESC XRODESC ; 
  10 XGPCD XGPCD ; 
  10 XGPDESC XGPDESC ; 
  10 FY0NWGPL FY0NWGPL ; 
    15 XPLCD XPLCD ; 
    15 FY0NWGPC FY0NWGPC ; 
  10 FY0NWSWL FY0NWSWL ; 
  10 FY0NWSWP FY0NWSWP ; 
  10 FY0NWSWS FY0NWSWS ; 
  10 FY0NWMNO FY0NWMNO ; 
  10 FY0NWEDT FY0NWEDT ; 
  10 FY0NWXDT FY0NWXDT ; 
  10 FY0NWFDT FY0NWFDT ; 
  10 FY0NWTDT FY0NWTDT ; 
  10 FY0NWSYR FY0NWSYR ; 
    15 FY0NWSCC FY0NWSCC ; 
    15 FY0NWSYY FY0NWSYY ; 
  10 FY0NWDAT FY0NWDAT ; 
    15 FY0NWYM FY0NWYM ; 
      20 FY0NWYY FY0NWYY ; 
      20 FY0NWMM FY0NWMM ; 
    15 FY0NWDD FY0NWDD ; 
  10 TARTYPE TARTYPE ; 
  10 FY0NMSEL FY0NMSEL [98] ; 
end // end FY0NW01

//*** RECORD=FY0NW02 ****
// Parameters for FY1001 - Production Factories Report
// ***********************
Record FY0NW02 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XXXSTAT XXXSTAT ; 
    15 * char(76) ; 
end // end FY0NW02

//*** RECORD=FY0NW03 ****
// Parameters for FY1061 - Factory Code List Report
// ***********************
Record FY0NW03 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XXXSTAT XXXSTAT ; 
    15 * char(76) ; 
end // end FY0NW03

//*** RECORD=FY0NW04 ****
// Parameters for FY1071 - Country Trade Restrictions Report
// ***********************
Record FY0NW04 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(78) ; 
end // end FY0NW04

//*** RECORD=FY0NW05 ****
// Parameters for FY1081 - Liaison/Field Office Report
// ***********************
Record FY0NW05 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XXXSTAT XXXSTAT ; 
    15 * char(76) ; 
end // end FY0NW05

//*** RECORD=FY0NW06 ****
// Parameters for FY1011 - Factory Contacts Report
// ***********************
Record FY0NW06 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XXXSTAT XXXSTAT ; 
    15 * char(76) ; 
end // end FY0NW06

//*** RECORD=FY0NW07 ****
// Parameters for FY1021 - Fob by P.O. ID
// ***********************
Record FY0NW07 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY0NWEDT FY0NWEDT ; 
    15 * char(1) ; 
    15 FY0NWFDM FY0NWFDM ; 
    15 * char(1) ; 
    15 FY0NWXDT FY0NWXDT ; 
    15 * char(1) ; 
    15 FY0NWTDM FY0NWTDM ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(1) ; 
    15 FY0NWCYC FY0NWCYC ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(41) ; 
end // end FY0NW07

//*** RECORD=FY0NW08 ****
// Parameters for FY1021 - Footwear fob by effective date
// ***********************
Record FY0NW08 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY0NWSCD FY0NWSCD ; 
    15 * char(1) ; 
    15 FY0NWSYR FY0NWSYR ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(1) ; 
    15 FY0NWOFF FY0NWOFF ; 
    15 * char(61) ; 
end // end FY0NW08

//*** RECORD=FY0NW09 ****
// Parameters for FY1021 - Footwear fob by effective date
// ***********************
Record FY0NW09 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 FY0NWSCD FY0NWSCD ; 
    15 * char(1) ; 
    15 FY0NWSYR FY0NWSYR ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(58) ; 
end // end FY0NW09

//*** RECORD=FY0NW10 ****
// Parameters for FY1131 - Apparel fob by season/country
// ***********************
Record FY0NW10 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XCTCD XCTCD ; 
    15 * char(1) ; 
    15 FY0NWSCD FY0NWSCD ; 
    15 * char(1) ; 
    15 FY0NWSYR FY0NWSYR ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(58) ; 
end // end FY0NW10

//*** RECORD=FY0NW11 ****
// Parameters for FY1031 - Footwear fob by p.o. id/facotry
// ***********************
Record FY0NW11 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 FY0NWEDT FY0NWEDT ; 
    15 * char(1) ; 
    15 FY0NWFDM FY0NWFDM ; 
    15 * char(1) ; 
    15 FY0NWXDT FY0NWXDT ; 
    15 * char(1) ; 
    15 FY0NWTDM FY0NWTDM ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(39) ; 
end // end FY0NW11

//*** RECORD=FY0NW12 ****
// Parameters for FY1141 - Fob by P.O. ID/Factory
// ***********************
Record FY0NW12 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XCTCD XCTCD ; 
    15 * char(1) ; 
    15 FY0NWEDT FY0NWEDT ; 
    15 * char(1) ; 
    15 FY0NWFDM FY0NWFDM ; 
    15 * char(1) ; 
    15 FY0NWXDT FY0NWXDT ; 
    15 * char(1) ; 
    15 FY0NWTDM FY0NWTDM ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(1) ; 
    15 FY0NWCYC FY0NWCYC ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(36) ; 
end // end FY0NW12

//*** RECORD=FY0NW13 ****
// Parameters for FY1151 - Fob by P.O. ID/Product Line
// ***********************
Record FY0NW13 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XPLCD XPLCD ; 
    15 * char(1) ; 
    15 FY0NWEDT FY0NWEDT ; 
    15 * char(1) ; 
    15 FY0NWFDM FY0NWFDM ; 
    15 * char(1) ; 
    15 FY0NWXDT FY0NWXDT ; 
    15 * char(1) ; 
    15 FY0NWTDM FY0NWTDM ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(1) ; 
    15 FY0NWSTY FY0NWSTY ; 
    15 * char(41) ; 
end // end FY0NW13

//*** RECORD=FY0NW14 ****
// Parameters for FY1161 - Apparel cost worksheet
// ***********************
Record FY0NW14 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 XCTCD XCTCD ; 
    15 * char(1) ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 SY1STNBR SY1STNBR ; 
    15 * char(1) ; 
    15 FY0NWSCD FY0NWSCD ; 
    15 * char(1) ; 
    15 FY0NWSYR FY0NWSYR ; 
    15 * char(1) ; 
    15 FY0NWTYP FY0NWTYP ; 
    15 * char(1) ; 
    15 FY0NWLIN FY0NWLIN ; 
    15 * char(1) ; 
    15 FY0NWCAT FY0NWCAT ; 
    15 * char(1) ; 
    15 FY0NWGDR FY0NWGDR ; 
    15 * char(1) ; 
    15 FY0NWFOB FY0NWFOB ; 
    15 * char(1) ; 
    15 FY0NWDOF FY0NWDOF ; 
    15 * char(1) ; 
    15 FY0NWSEG FY0NWSEG ; 
    15 * char(1) ; 
    15 FY0NWRPT FY0NWRPT ; 
    15 * char(31) ; 
end // end FY0NW14

//*** RECORD=FY0NW15 ****
// Parameters for FY1171 - Production products
// ***********************
Record FY0NW15 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 SY1STNBR SY1STNBR ; 
    15 * char(1) ; 
    15 XLCCD XLCCD ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(60) ; 
end // end FY0NW15

//*** RECORD=FY0NW16 ****
// Parameters for FY1201 - Footwear FOB History
// ***********************
Record FY0NW16 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 SY1STNBR SY1STNBR ; 
    15 * char(1) ; 
    15 SY2CLRID SY2CLRID ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(1) ; 
    15 FYITPIND FYITPIND ; 
    15 * char(1) ; 
    15 FY0NWFDT FY0NWFDT ; 
    15 * char(1) ; 
    15 FY0NWTDT FY0NWTDT ; 
    15 * char(1) ; 
    15 FY0NWEDT FY0NWEDT ; 
    15 * char(1) ; 
    15 FY0NWXDT FY0NWXDT ; 
    15 * char(1) ; 
    15 FY0NWFDM FY0NWFDM ; 
    15 * char(1) ; 
    15 FY0NWTDM FY0NWTDM ; 
    15 * char(1) ; 
    15 XPLCD XPLCD ; 
    15 * char(1) ; 
    15 XPCCD XPCCD ; 
    15 * char(1) ; 
    15 XLCCD XLCCD ; 
    15 * char(1) ; 
    15 XCTCD XCTCD ; 
    15 * char(1) ; 
end // end FY0NW16

//*** RECORD=FY0NW17 ****
// Parameters for FY1211 - Apparel FOB History
// ***********************
Record FY0NW17 type basicRecord
  10 TARJCL TARJCL ; 
    15 XGPCD XGPCD ; 
    15 * char(1) ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 * char(1) ; 
    15 XSECD XSECD ; 
    15 * char(1) ; 
    15 FY0NWSYR FY0NWSYR ; 
    15 * char(1) ; 
    15 SY1STNBR SY1STNBR ; 
    15 * char(1) ; 
    15 XQACD XQACD ; 
    15 * char(1) ; 
    15 FY0NWDOF FY0NWDOF ; 
    15 * char(1) ; 
    15 FYITPIND FYITPIND ; 
    15 * char(1) ; 
    15 FY0NWFDT FY0NWFDT ; 
    15 * char(1) ; 
    15 FY0NWTDT FY0NWTDT ; 
    15 * char(1) ; 
    15 XCTCD XCTCD ; 
    15 * char(28) ; 
end // end FY0NW17

// select field
DataItem FY0NMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// category code
DataItem FY0NWCAT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// life cycle cd
DataItem FY0NWCYC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working storage date
DataItem FY0NWDAT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working day
DataItem FY0NWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Domestic/Offshore flag
DataItem FY0NWDOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// From effective date
DataItem FY0NWEDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From delivery month
DataItem FY0NWFDM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// From date
DataItem FY0NWFDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comfirmed/quoted  flag
DataItem FY0NWFOB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gender age code
DataItem FY0NWGDR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Gpc code
DataItem FY0NWGPC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table row key field
DataItem FY0NWGPL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Second index for map fields
DataItem FY0NWIX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Limit for map fields index
DataItem FY0NWIXL smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem FY0NWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for page number
DataItem FY0NWIXP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for starting table
DataItem FY0NWIXS smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Index for table fields
DataItem FY0NWIXT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// product line
DataItem FY0NWLIN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working month
DataItem FY0NWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Job submitted message number
DataItem FY0NWMNO num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// domestic or offshore switch
DataItem FY0NWOFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// report type
DataItem FY0NWRPT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season century
DataItem FY0NWSCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// season code
DataItem FY0NWSCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// iseg
DataItem FY0NWSEG char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_STY_NBR
DataItem FY0NWSTY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Line error switch
DataItem FY0NWSWL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Page full switch
DataItem FY0NWSWP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Job submitted switch
DataItem FY0NWSWS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season century/year
DataItem FY0NWSYR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// season year
DataItem FY0NWSYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// To delivery month
DataItem FY0NWTDM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// To date
DataItem FY0NWTDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// product type
DataItem FY0NWTYP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NIKE user identification
DataItem FY0NWUID char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// To effective date
DataItem FY0NWXDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working yymm
DataItem FY0NWYM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working year
DataItem FY0NWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end