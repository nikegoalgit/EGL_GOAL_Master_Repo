package fy0f;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import ku.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=FY0F ****
// This program allows users to inquire/maintain existing
// rows in the factory/style table.
// The user may specify the gpc, factory, and/or style and
// associated style fields
// they want to work on.
// The database will return
// 0 to N rows based upon the information entered by the user.
// This program will format the screen with the information
// returned from the data base.
// 
// This program allows adding, changing, deleting, and
// inquiring of factory/style table rows.
// 
//    The user may add new rows by pressing PF13 from
//    the inquiry screen (blank or filled with rows).  This
//    will position them in an add screen.  Rows can then be
//    added (if entries pass edit criteria) by pressing ENTER.
//    The user may continue adding or exit to the inquiry
//    screen.  (If a row already exists on an add, a message
//    will appear to that effect: 'this row already exists').
// 
//    A user can select one or more rows for change and hit
//    PF14.  The user will then be positioned in a change
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for change or PF3 to return to the browse screen.
// 
//    A user can select one or more rows for delete and hit
//    PF15.  The user will then be positioned in a delete
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for change or PF3 to return to the browse screen.
// 
//    A user can select one or more rows for inquiry and hit
//    enter.  The user will then be positioned in an inquiry
//    screen where they can make their changes to non-key
//    fields and hit ENTER to cycle to the next row selected
//    for inquiry or PF3 to return to the browse screen.
// 
// The records are retrieved from temporary storage one at a
// time, for display to the user.  The user may page forward
// and backward, to view the rows that were selected.
// 
// The user may exit to any allowed application via FAST PATH
// or PF key at any time.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 10/03/88   gamen    New application.
// 07/13/90   gamen    Set capacity defaults in add to Tgt-3000
//                     Max-200,000, Min 100,000
// 06/07/91   gamen    Set security up on FOB field using the
//                     cailvl(1) flag. If it = 'y', allow
//                     the user to view the FOB data.
// 07/31/91   gamen    So not edit season code/year for ftwr
//                     in fy0f751.
// 12/06/91   gamen    Allow close outs to be added one color
//                     at a time.
// 03/04/93   gamen    Show FOB for apparel.
// 06/16/93   gamen    Add zfc-crcy-cd for db2 changes.
// 08/08/94   SLEWIS   CHANGE XSNTB TO YSNTB TABLE
// 03/16/95   GAMEN    PCY197-ADD CARROVER FOR SUMMER.
// 11/07/97   MBURLE   Y2KFIX: Use date windowing to determine
//                     the correct century in the following
//                     procedures: XPFY001, FY0F152, FY0F252,
//                     FY0F341, FY0F410, FY0F510, FY0F551,
//                     FY0F610, FY0F651, FY0F660, FY0F710,
//                     FY0F751, FY0F760, FY0F810, FY0F910,
//                     FY0F951, FY0FS99. Changed map attributes
//                     in FY0FM001,2,3 for fields FY0FMSYR and
//                     FY0FMSNY so that the year 2000 will
//                     display as "00" rather than as blanks.
// 01/29/98   jniese   Y2KFIX: correct sesn yr for gpc 02
//                     fy0f152
// 08/13/98   wrobin   remove 3000 defualt minimum for gpc 02
//                     fy0f310
// *********************
Program FY0F type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY0FW01 FY0FW01; // record
  FY0FW02 FY0FW02; // record
  FY0FW03 FY0FW03; // record
  FY1REC FY1REC; // record
  FY2REC FY2REC; // record
  FY3REC FY3REC; // record
  FY4REC FY4REC; // record
  FYCREC FYCREC; // record
  FYWREC FYWREC; // record
  PC2REC PC2REC; // record
  PG2REC PG2REC; // record
  PG3REC PG3REC; // record
  PG6REC PG6REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TABREC TABREC; // record
  TAEREC TAEREC; // record
  XX0XW01 XX0XW01; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use XGPTBL {deleteAfterUse = yes}; // table
  use YSNTBL {deleteAfterUse = yes}; // table
  use XDMTBL {deleteAfterUse = yes}; // table
  use XQATBL {deleteAfterUse = yes}; // table
  use XPGTBL {deleteAfterUse = yes}; // table
  use XUMTBL {deleteAfterUse = yes}; // table
  use FY0FM.FY0FM001,  // forms
      FY0FM.FY0FM002, 
      FY0FM.FY0FM003, 
      FY0FM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFY001: XPFY001();
     /* ------------------------------------------------------------*/
     /* Initialize working storage and map output areas.*/
     /* Flow to converse the Transportation Prototype process.*/
     /* ------------------------------------------------------------*/

    set FY0FW01 empty;
    set FY0FW02 empty;
    set FY0FW03 empty;
    set FY1REC empty;
    set FY2REC empty;
    set FY3REC empty;
    set FY4REC empty;
    set FYCREC empty;
    set TA1REC empty;
    set TA5REC empty;
    set SQLCA empty;
    set ERRSQLCA empty;
    set XX0XW01 empty;
    set XX0XW02 empty;
    set FY0FM001 initial; /* Initialize map1 output area*/
    set FY0FM002 initial; /* Initialize map2 output area*/
    set FY0FM003 initial; /* Initialize map3 output area*/
    set XX0XM001 initial; /* Initialize pop-up window area*/

     /* ---------- Y2K OUT BEGIN -----------*/
     /* MOVE 19 TO FY0FW01.FY0FWCEN;      /* Initialize working century*/
     /* ---------- Y2K OUT END -------------*/

     /* ---------- Y2K IN BEGIN -----------*/
    FY0FW01.FY0FWDTE = VGVar.currentGregorianDate; /* Move in current date in cymd format*/
     /* ---------- Y2K IN END -------------*/

    FY0FW01.FY0FWMFL = "N"; /* Initialize message flag*/
    FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/
    FY0FW01.FY0FWSPG = 0; /* Set save page to 0*/

    FY0F001: FY0F001();
     /* no flow*/
    FY0F002: FY0F002();
     /* ------------------------------------------------------------*/
     /* Flow to converse the Factory/Style main process.*/
     /* ------------------------------------------------------------*/

    goto FY0F002; /* Converse Factory/Style Inquiry/Main.*/


  end // end main
end // end FY0F

// Special initialization
Function FY0F001()
  FY0FW01.FY0FWSWR = "N"; /* init request for data switch*/

  XX0XS01(); /* Obtain current date*/
  FYCREC.FYC1DATE = XX0XW01.XX0XWDAT;
  FYCREC.FYCFNC = "S1";

  FY0FW01.FY0FWLSF = "Y"; /* init list screen flag*/

  FY0FW01.FY0FWMAP = 1; /* init to map 1*/

  if (COMMAREA.CAITEM > " ") /* from outside application?*/
    FY0FW01.FY0FWFSW = COMMAREA.CAITEM;
    if (FY0FW01.FY0FWFSW == "I") /* check for valid function*/
      FY0FW01.FY0FWLSF = "N"; /* init list screen flag*/
      FY0FW01.FY0FWMAP = "3";
    else
      if (FY0FW01.FY0FWFSW == "A")
        if (COMMAREA.CAADDFL == "Y")
          FY0FW01.FY0FWLSF = "N"; /* init list screen flag*/
          FY0FW01.FY0FWMAP = "3";
        else
          FY0FW01.FY0FWFSW = " ";
        end
      else
        if (FY0FW01.FY0FWFSW == "C")
          if (COMMAREA.CACHGFL == "Y")
            FY0FW01.FY0FWLSF = "N"; /* init list screen flag*/
            FY0FW01.FY0FWMAP = "3";
          else
            FY0FW01.FY0FWFSW = " ";
          end
        else
          if (FY0FW01.FY0FWFSW == "D")
            if (COMMAREA.CADELFL == "Y")
              FY0FW01.FY0FWLSF = "N"; /* init list screen flag*/
              FY0FW01.FY0FWMAP = "3";
            else
              FY0FW01.FY0FWFSW = " ";
            end
          else
            FY0FW01.FY0FWFSW = " ";
          end
        end
      end
    end
  end

  FY0FW01.XGPCD = COMMAREA.XGPCD; /* Init gpc code*/
  FY0FM001.XGPCD = COMMAREA.XGPCD;

  if (FY0FW01.XGPCD > " ")
    if (FY0FW01.XGPCD in XGPTBL.XGPCD)
      FY0FW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0FM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      if (FYWREC.FY1FCTYC > " ")
        FY1REC.XGPCD = COMMAREA.XGPCD;
        FY1REC.FY1FCTYC = FYWREC.FY1FCTYC;
        FY0FS01(); /* Select factory row for name*/
        if (SQLCA.VAGen_SQLCODE == 0)
          FY0FW01.FY1FCTYC = FYWREC.FY1FCTYC;
          FY0FM001.FY1FCTYC = FYWREC.FY1FCTYC;
          FY0FW01.FY1FCTSN = FY1REC.FY1FCTSN;
          FY0FM001.FY1FCTSN = FY1REC.FY1FCTSN;
          if (FY0FW01.FY0FWMAP == "1")
            FY0FW01.FY0FWSWR = "Y";
          end
        end
      end
    end
  end

  FY0FS30();
  set FYWREC empty; /* Initialize now that were through with it*/

  FY0FW01.XQACD = "01";
  FY0FM001.XQACD = "01";
  FY0FW01.PC2INSEG = "000";
  FY0FM001.PC2INSEG = "000";
  FY0FW01.XDMCD = "00";
  FY0FM001.XDMCD = "00";
  FY0FW01.XPGCD = "00";
  FY0FM001.XPGCD = "00";
  FY0FW01.XUMCD = "01";
  if (FY0FW01.XGPCD == "02")
    FY0FW01.SY2CLRID = "00";
    FY0FM001.SY2CLRID = "00";
  end
  FY0FW01.FY3INPFL = "Y";
  FY0FM001.FY0FMINP = "Y";

end // end FY0F001

// Factory/Style inq/maint.
Function FY0F002()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display maps.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) If specified, display the first map.*/
      /* Otherwise, if specified, display the second map.*/
      /* Otherwise, if specified, display the third map.*/
      /* Otherwise, indicate error and exit to Master Menu.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWMAP == "1") /* Map 1 was requested*/
    FY0F100(); /* Display map 1*/
  end

  if (FY0FW01.FY0FWMAP == "2") /* Map 2 was requested*/
    FY0F200(); /* Display map 2*/
  end

  if (FY0FW01.FY0FWMAP == "3" /* Map 3 was requested*/
   && FY0FW01.FY0FWFSW == "A") /* and ADD function*/
    FY0F300(); /* Display Add Map*/
  end

  if (FY0FW01.FY0FWMAP == "3" /* Map 3 was selected*/
   && FY0FW01.FY0FWFSW == "I") /* and INQUIRE function*/

    if (FY0FW01.FY0FWLSF == "Y")
      FY0FW01.FY0FWIXM = 1; /* Initialize index*/
      while (FY0FW01.FY0FWIXM <= 11 /* Until end of page*/
       && FY0FW01.FY0FWMAP == "3") /* and map 3*/
        if (FY0FM001.FY0FMSEL[FY0FWIXM] == "S") /* If line selected*/
          FY0F400(); /* Display Factory/Style inquiry Map*/
        end
        FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment index*/
      end
      FY0FW01.FY0FWMAP = "1"; /* Set map number to 1*/
    else
      while (FY0FW01.FY0FWMAP == "3") /* Until map ne 3*/
        FY0F500(); /* Display Factory/Style inquiry Map*/
      end
    end
  end

  if (FY0FW01.FY0FWMAP == "3" /* Map 3 was selected*/
   && FY0FW01.FY0FWFSW == "C") /* and CHANGE function*/

    if (FY0FW01.FY0FWLSF == "Y")

      FY0FW01.FY0FWIXM = 1; /* Initialize index*/

      while (FY0FW01.FY0FWIXM <= 11 /* Until end of page*/
       && FY0FW01.FY0FWMAP == "3") /* and map 3*/
        if (FY0FM001.FY0FMSEL[FY0FWIXM] == "S") /* If line selected*/
          FY0F600(); /* Display Change Map*/
        end
        FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment index*/
      end
      FY0FW01.FY0FWMAP = "1"; /* Set map number to 1*/
    else
      while (FY0FW01.FY0FWMAP == "3") /* Until map ne 3*/
        FY0F700(); /* Display Change Map*/
      end
    end
  end

  if (FY0FW01.FY0FWMAP == "3" /* Map 3 was selected*/
   && FY0FW01.FY0FWFSW == "D") /* and DELETE function*/

    if (FY0FW01.FY0FWLSF == "Y")

      FY0FW01.FY0FWIXM = 1; /* Initialize index*/

      while (FY0FW01.FY0FWIXM <= 11 /* Until end of page*/
       && FY0FW01.FY0FWMAP == "3") /* and map 3*/
        if (FY0FM001.FY0FMSEL[FY0FWIXM] == "S") /* If line selected*/
          FY0F800(); /* Display Delete Map*/
        end
        FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment index*/
      end
      FY0FW01.FY0FWMAP = "1"; /* Set map number to 1*/
    else
      while (FY0FW01.FY0FWMAP == "3") /* Until map ne 3*/
        FY0F900(); /* Display Delete Map*/
      end
    end
  end


  if (FY0FW01.FY0FWMAP == "1"
   || FY0FW01.FY0FWMAP == "2"
   || FY0FW01.FY0FWMAP == "3")

     /* next sentence*/
  else

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0F002 "; /* Process name*/
    TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
    TA1REC.TA1MAP = FY0FW01.FY0FWMAP; /* Map name*/
    SQLCA.SQLCAREC = "MAP NUMBER IS INVALID";

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/
    XSPF4(); /* Exit to Master Menu*/
  end

  if (FY0FW01.FY0FWMAP == "3")
    if (FY0FW01.FY0FWFSW == "A"
     || FY0FW01.FY0FWFSW == "I"
     || FY0FW01.FY0FWFSW == "C"
     || FY0FW01.FY0FWFSW == "D")

       /* next sentence*/

    else
      TA1REC.TA1TYPE = "APPL"; /* Type of error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1PGMNM = "FY0F002 "; /* Process name*/
      TA1REC.TA1LOC = "MAIN APPLICATION PROCESS";
      TA1REC.TA1MAP = FY0FW01.FY0FWMAP; /* Map name*/
      SQLCA.SQLCAREC = "MAP FUNCTION IS INVALID";

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diag routine*/
      XSPF4(); /* Exit to Master Menu*/
    end
  end


end // end FY0F002

// Factory/Style list map
Function FY0F100()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWSWR == "Y" /* The request for data is yes*/
   && FY0FW01.FY0FWPSW == "N") /* and no errors*/
    FY0F110(); /* Obtain the data to display*/
  end

  FY0F120(); /* Format and display the map*/

  FY0F130(); /* Check attention identifier*/

  FY0F140(); /* Reset fields to normal intensity*/

  FY0F150(); /* Verify the entered data*/

  FY0F160(); /* Process valid input request*/


end // end FY0F100

// Obtain the data to display
Function FY0F110()
   /* ------------------------------------------------------------*/
     /* Purge any existing queue in temporary storage.*/
     /* Select and open the cursor for the set(s) to be formatted*/
     /* Fetch and format the data in the page.*/
     /* If the page is full, add the page to the storage queue.*/
     /* At end of rows, add any partial page to the queue.*/
     /* At end of rows, close the selected set cursor.*/
     /* If no data found, display error message and return to*/
       /* previous process.*/
     /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  FY0FS02(); /* Purge any temporary storage*/

  set FY2REC empty; /* Clear factory/style record*/
  set FY3REC empty; /* Clear factory/color record*/
  set FY4REC empty; /* Clear factory/fob record*/

  FY2REC.XGPCD = FY0FW01.XGPCD;
  FY2REC.XXXSTAT = "A"; /* Get only active records*/
  if (FY0FW01.FY1FCTYC > " ")
    FY2REC.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FW01.FY0FWIOT = "1"; /* I-O task indicator*/
  else
    FY2REC.FY1FCTYC = "*";
    FY0FW01.FY0FWIOT = "2"; /* I-O task indicator*/
  end

  if (FY0FW01.SY1STNBR > " ")
    FY2REC.SY1STNBR = FY0FW01.SY1STNBR;
  else
    FY2REC.SY1STNBR = "*";
  end

  if (FY0FW01.XSECD > " ")
    FY2REC.XSECD = FY0FW01.XSECD;
  else
    FY2REC.XSECD = "*";
  end

  if (FY0FW01.XSNYR > 0)
    FY2REC.XSNYR = FY0FW01.XSNYR;
  else
    FY2REC.XSNYR = -1;
  end

  FY0FS03(); /* Select set and open the cursor*/

  if (SQLCA.VAGen_SQLCODE == 0) /* No errors were found*/
    set FY0FW02 empty; /* Clear temporary storage record*/
    FY0FW01.FY0FWIXM = 1; /* Initialize display line number*/
    FY0FW01.FY0FWSW1 = "N"; /* Initialize end of file switch1*/
    FY0FW01.FY0FWPSW = "N"; /* Init problem found switch*/
    FY0FS04(); /* Fetch fy2rec row*/
    while (FY0FW01.FY0FWSW1 == "N" /* Until end of set or problem found*/
     && FY0FW01.FY0FWPSW == "N") /* or until a problem was found*/

      FY0F111(); /* Set up FY3REC*/
      FY0FS05(); /* Select set of fy3rec rows*/
      if (SQLCA.VAGen_SQLCODE == 0) /* No errors were found*/

        FY0FW01.FY0FWSW2 = "N"; /* Initialize end of file switch*/
        FY0FS06(); /* fetch fy3rec row*/

        while (FY0FW01.FY0FWSW2 == "N" /* Until end of set*/
         && FY0FW01.FY0FWPSW == "N") /* or until a problem was found*/

          FY0F112(); /* Set up temp. storage and FY4REC*/

  /* IF FY0FW01.XGPCD EQ '02';        /* and footwear*/
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F113(); /* determine FOB price*/
            else
              if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
               && FY3REC.XQACD == "02")      /* Quality '02'*/
                FY0FS10(); /* Close set of fy4rec rows*/
                if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
                  FY4REC.XQACD = "01";
                  FY0FS07(); /* Select set of fy4rec rows*/
                  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
                    FY0FS08(); /* fetch fy4rec row*/
                    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
                      FY0F113(); /* determine FOB price*/
                      FY0F114(); /* calculate from b-grade %*/
                    end
                  end
                end
              end
            end
            FY0FS10(); /* Close set of fy4rec rows*/
          end
  /* END;*/

          if (FY0FW01.FY0FWPSW == "N"
           && FY0FW01.FY0FWIXM >= 11)
            FY0FS11(); /* Add page to temp storage*/
          else
            FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Incr. index*/
          end
          FY0FS06(); /* fetch fy3rec row*/
        end
      end
      FY0FS12(); /* Close set of fy3rec rows*/
      FY0FS04(); /* Fetch fy2rec row*/
    end
    FY0FW01.FY0FWTSP = 1; /* Initialize page number*/
    FY0FS13(); /* Close set of fy2rec rows*/

    if (FY0FW01.FY0FWPSW == "N" /* and no errors*/
     && FY0FW01.FY0FWIXM > 1)   /* and some of the page was formatted*/
      FY0FS11(); /* Add page to temp storage*/
    end
  end

  FY0FW01.FY0FWSWR = "N"; /* Request for data completed*/

  if (FY0FW01.TA5TSQIX == 0 /* No data to display*/
   && FY0FW01.FY0FWPSW == "N") /* and no previous errors*/
    FY0FM001.XXXPRCNM = "FY0F110"; /* Process name*/
    set FY0FM001.FY1FCTYC cursor; /* Position crsr at fcty code*/
    set FY2REC empty; /* Clear factory/style record*/
    set FY3REC empty; /* Clear factory/color record*/
    set FY4REC empty; /* Clear factory/fob record*/
    converseLib.validationFailed(21); /* Indicate no data to display*/
    FY0FW01.FY0FWPSW = "Y"; /* Override problem*/
  end


end // end FY0F110

// Set up fy3rec
Function FY0F111()
   /* ------------------------------------------------------------*/
     /* Move data to the temp. storage record and setup*/
     /* the FY3REC for the call.*/
   /* ------------------------------------------------------------*/

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;
  FY3REC.XXXSTAT = FY2REC.XXXSTAT;
  if (FY0FW01.SY2CLRID > " ")
    FY3REC.SY2CLRID = FY0FW01.SY2CLRID;
  else
    FY3REC.SY2CLRID = "*";
  end
  if (FY0FW01.XQACD > " ")
    FY3REC.XQACD = FY0FW01.XQACD;
  else
    FY3REC.XQACD = "*";
  end
  if (FY0FW01.PC2INSEG > " ")
    FY3REC.PC2INSEG = FY0FW01.PC2INSEG;
  else
    FY3REC.PC2INSEG = "*";
  end
  if (FY0FW01.XDMCD > " ")
    FY3REC.XDMCD = FY0FW01.XDMCD;
  else
    FY3REC.XDMCD = "*";
  end
  if (FY0FW01.XPGCD > " ")
    FY3REC.XPGCD = FY0FW01.XPGCD;
  else
    FY3REC.XPGCD = "*";
  end
  FY3REC.XUMCD = "*";
  if (FY0FW01.FY3INPFL > " ")
    FY3REC.FY3INPFL = FY0FW01.FY3INPFL;
  else
    FY3REC.FY3INPFL = "*";
  end
  if (FY0FW01.FY3SFYFL > " ")
    FY3REC.FY3SFYFL = FY0FW01.FY3SFYFL;
  else
    FY3REC.FY3SFYFL = "*";
  end


end // end FY0F111

// Set up temp. strg and fy4rec
Function FY0F112()

   /* ------------------------------------------------------------*/
     /* Setup temp. storage and the FY4REC.*/
   /* ------------------------------------------------------------*/

  FY0FW02.SY1STNBR[FY0FWIXM] = FY2REC.SY1STNBR;
  FY0FW02.FY2MFGPC[FY0FWIXM] = FY2REC.FY2MFGPC;
  if (FY2REC.FY1MFGDY > 0)
    FY0FW02.FY1MFGDY[FY0FWIXM] = FY2REC.FY1MFGDY;
  else
    FY0FW02.FY1MFGDY[FY0FWIXM] = FY1REC.FY1MFGDY;
  end

  if (FY2REC.FY1FABDY > 0)
    FY0FW02.FY1FABDY[FY0FWIXM] = FY2REC.FY1FABDY;
  else
    FY0FW02.FY1FABDY[FY0FWIXM] = FY1REC.FY1FABDY;
  end

  if (FY2REC.FY1STDC > 0)
    FY0FW02.FY1STDC[FY0FWIXM] = FY2REC.FY1STDC;
  else
    FY0FW02.FY1STDC[FY0FWIXM] = FY1REC.FY1STDC;
  end

  if (FY2REC.FY1SPCLC > 0)
    FY0FW02.FY1SPCLC[FY0FWIXM] = FY2REC.FY1SPCLC;
  else
    FY0FW02.FY1SPCLC[FY0FWIXM] = FY1REC.FY1SPCLC;
  end

  if (FY2REC.FY1STCDY > 0)
    FY0FW02.FY1STCDY[FY0FWIXM] = FY2REC.FY1STCDY;
  else
    FY0FW02.FY1STCDY[FY0FWIXM] = FY1REC.FY1STCDY;
  end

  if (FY2REC.FY1LSTDY > 0)
    FY0FW02.FY1LSTDY[FY0FWIXM] = FY2REC.FY1LSTDY;
  else
    FY0FW02.FY1LSTDY[FY0FWIXM] = FY1REC.FY1LSTDY;
  end

  FY0FW02.SY2CLRID[FY0FWIXM] = FY3REC.SY2CLRID;
  FY0FW02.XSECD[FY0FWIXM] = FY3REC.XSECD;
  FY0FW02.XSNYR[FY0FWIXM] = FY3REC.XSNYR;
  FY0FW02.PC2INSEG[FY0FWIXM] = FY3REC.PC2INSEG;
  FY0FW02.XQACD[FY0FWIXM] = FY3REC.XQACD;
  FY0FW02.XDMCD[FY0FWIXM] = FY3REC.XDMCD;
  FY0FW02.XPGCD[FY0FWIXM] = FY3REC.XPGCD;
  FY0FW02.XUMCD[FY0FWIXM] = FY3REC.XUMCD;
  FY0FW02.FY3PRMIN[FY0FWIXM] = FY3REC.FY3PRMIN;
  FY0FW02.FY3PRTGT[FY0FWIXM] = FY3REC.FY3PRTGT;
  FY0FW02.FY3PRCAP[FY0FWIXM] = FY3REC.FY3PRCAP;
  FY0FW02.FY3SFYFL[FY0FWIXM] = FY3REC.FY3SFYFL;
  FY0FW02.FY3INPFL[FY0FWIXM] = FY3REC.FY3INPFL;
  FY0FW02.XXXSTAT[FY0FWIXM] = FY3REC.XXXSTAT;

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;


end // end FY0F112

// Determine Fob Price
Function FY0F113()
   /* *************************************************************/
                /* DETERMINE THE SCHEDULING FOB PRICE*/

   /* 1. Check to see if a confirmed price has been entered.*/
      /* If it has then obtain the gender age code from the*/
      /* the product file.  Then look up the scheduling fob*/
      /* size in the gender age table.  Then use this size*/
      /* to determine the price.*/
   /* 2. If a confirmed price has not been entered, check for a*/
      /* quoted.*/
   /* 3. If a quoted price has not been entered, check for a*/
      /* targeted.*/
   /* 4. If a no price has not been entered, use zero*/

   /* *************************************************************/

  FY0FW01.FY0FWSZI = 1; /* Init size index*/
  FY0FW01.FY0FWPRF = "N"; /* Init price found flag*/
  while (FY0FW01.FY0FWSZI <= 40
   && FY0FW01.FY0FWPRF == "N")
    if (FY4REC.FY4FOBPR[FY0FWSZI] > 0)
      FY0FW02.FY4FOBPR[FY0FWIXM] = FY4REC.FY4FOBPR[FY0FWSZI];
      FY0FW01.FY0FWPRF = "Y";
    else
      FY0FW01.FY0FWSZI = FY0FW01.FY0FWSZI + 1;
    end
  end

  FY0FW02.FY0FWPIN[FY0FWIXM] = " "; /* Price indicator*/

  if (FY0FW01.FY0FWPRF == "Y") /* If price was found*/
    FY0FW02.FY0FWPIN[FY0FWIXM] = "C"; /* Price indicator*/
    if (FY0FM001.XGPCD == "02")
      PG2REC.XGPCD = FY4REC.XGPCD;
      PG2REC.SY1STNBR = FY4REC.SY1STNBR;
      PG2REC.SY2CLRID = FY4REC.SY2CLRID;
      PG2REC.XDMCD = FY4REC.XDMCD;
      XSPG201(); /* Select style row*/
      if (SQLCA.VAGen_SQLCODE == 0)
        PG6REC.XGACD = PG2REC.XGACD;
        PG6REC.SY4SZSCL = PG2REC.SY4SZSCL;
        FY0FS28(); /* Select row from dprodg.vgasiz01*/
        if (SQLCA.VAGen_SQLCODE == 0
         && PG6REC.PG6FOBSZ > 0) /* And a size-id was returned*/
          FY0FW01.FY0FWSZI = PG6REC.PG6FOBSZ; /* Save internal size id*/
          if (FY4REC.FY4FOBPR[FY0FWSZI] > 0)
            FY0FW02.FY4FOBPR[FY0FWIXM] = FY4REC.FY4FOBPR[FY0FWSZI];
          end
        end
      end
    end
  else
    if (FY4REC.FY4QTDPR > 0) /* If quoted price entered*/
      FY0FW02.FY4FOBPR[FY0FWIXM] = FY4REC.FY4QTDPR;
      FY0FW02.FY0FWPIN[FY0FWIXM] = "Q"; /* Price indicator*/
    else
      if (FY4REC.FY4TGTPR > 0) /* If targeted price entered*/
        FY0FW02.FY4FOBPR[FY0FWIXM] = FY4REC.FY4TGTPR;
        FY0FW02.FY0FWPIN[FY0FWIXM] = "T"; /* Price indicator*/
      end
    end
  end
end // end FY0F113

// Calculate b-grade price
Function FY0F114()
   /* ------------------------------------------------------------*/
   /* Calculate the b-grade percentage using the inline price*/
   /* ------------------------------------------------------------*/

  if (FY0FW02.FY4FOBPR[FY0FWIXM] > 0)
    FY0FW01.FY0FWPRC = FY0FW02.FY4FOBPR[FY0FWIXM];
                                   /* For calculations*/
    if (FY1REC.FY1BGDPC > 0)
      FY0FW01.FY0FWPRC = FY1REC.FY1BGDPC / 100 * FY0FW01.FY0FWPRC;
      FY0FW02.FY4FOBPR[FY0FWIXM] = FY0FW01.FY0FWPRC;
    else
      FY0FW02.FY4FOBPR[FY0FWIXM] = 0;
      FY0FW02.FY0FWPIN[FY0FWIXM] = " ";
    end
  end
end // end FY0F114

// Format and display the map
Function FY0F120()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    set FY0FM001 initial; /* Clear map output area*/
    FY0FM001.XGPCD = FY0FW01.XGPCD;
    FY0FM001.XGPDESC = FY0FW01.XGPDESC;
    FY0FM001.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FM001.FY1FCTSN = FY0FW01.FY1FCTSN;
    FY0FM001.SY1STNBR = FY0FW01.SY1STNBR;
    FY0FM001.SY1SSTNM = FY0FW01.SY1SSTNM;
    FY0FM001.SY2CLRID = FY0FW01.SY2CLRID;
    FY0FM001.SY2CLRAB = FY0FW01.SY2CLRAB;
    FY0FM001.XSECD = FY0FW01.XSECD;
    FY0FM001.FY0FMSYR = FY0FW01.FY0FWSYR;
    FY0FM001.XQACD = FY0FW01.XQACD;
    FY0FM001.PC2INSEG = FY0FW01.PC2INSEG;
    FY0FM001.XDMCD = FY0FW01.XDMCD;
    FY0FM001.XPGCD = FY0FW01.XPGCD;
    FY0FM001.FY0FMINP = FY0FW01.FY3INPFL;
    FY0FM001.FY0FMPRF = FY0FW01.FY3SFYFL;

    FY0F121(); /* Format the selected data*/

  end

  if (FY0FW01.FY0FWPSW == "Y") /* Error message to display*/

    FY0FS02(); /* Purge temp storage*/
    set FY0FW02 empty; /* Clear temp storage record*/
    set FY1REC empty; /* Clear factory record*/
    set FY2REC empty; /* Clear factory/style record*/
    set FY3REC empty; /* Clear factory/color record*/
    set FY4REC empty; /* Clear factory/fob record*/

    set FY0FM001.FY0FMPGL initialAttributes; /* Turn off "PAGE" literal*/
    set FY0FM001.FY0FMOFL initialAttributes; /* Turn off "OF" literal*/

    FY0FM001.FY0FMTSP = 0; /* Current page number*/
    FY0FM001.TA5TSQIX = 0; /* Highest page number*/

    FY0FW01.FY0FWIXM = 1; /* Initialize line index*/
    while (FY0FW01.FY0FWIXM <= 11 /* Until end of lines*/
     && FY0FM001.FY0FMSTY[FY0FWIXM] != " ") /* or last line of data*/

      set FY0FM001.FY0FMSEL[FY0FWIXM] initialAttributes; /* Turn off select flag*/
      FY0FM001.FY0FMSEL[FY0FWIXM] = " ";
      FY0FM001.FY0FMSTY[FY0FWIXM] = " ";
      FY0FM001.FY0FMCLR[FY0FWIXM] = " ";
      FY0FM001.FY0FMSNC[FY0FWIXM] = " ";
      FY0FM001.FY0FMSNY[FY0FWIXM] = 0;
      FY0FM001.FY0FMQUA[FY0FWIXM] = " ";
      FY0FM001.FY0FMDIM[FY0FWIXM] = " ";
      FY0FM001.FY0FMSPC[FY0FWIXM] = " ";
      FY0FM001.FY0FMPKG[FY0FWIXM] = " ";
      FY0FM001.FY0FMUOM[FY0FWIXM] = " ";
      FY0FM001.FY4FOBPR[FY0FWIXM] = 0;
      FY0FM001.FY0FMPIN[FY0FWIXM] = " ";
      FY0FM001.FY3INPFL[FY0FWIXM] = " ";
      FY0FM001.FY3SFYFL[FY0FWIXM] = " ";
      FY0FM001.FY3PRTGT[FY0FWIXM] = 0;
      FY0FM001.FY3PRCAP[FY0FWIXM] = 0;
      FY0FM001.FY3PRMIN[FY0FWIXM] = 0;

      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment line index*/

    end
  end

  if (converseVar.validationMsgNum != 0) /* No error message to display*/
    set FY0FM001 alarm; /* Indicate sound alarm*/
  end

  if (FY0FW01.FY0FWPSW == "N") /* No error message to display*/
    if (FY0FM001.FY0FMSTY[1] == " ") /* No data to display*/
      set FY0FM001.FY1FCTYC cursor; /* Set cursor to factory code*/
    end
  end

  if (FY0FW01.FY0FWMFL == "Y") /* If message flag is yes*/
    converseLib.validationFailed(1); /* Indicate update was successful*/
    FY0FM001.XXXPRCNM = "FY0F120"; /* Process name*/
    FY0FW01.FY0FWMFL = "N"; /* Reset message flag*/
  end

  FY0FM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  converse FY0FM001 ;

  FY0FW01.FY0FWPSW = "N"; /* Reset problem switch*/

  if (converseVar.eventKey is enter)
    FY0F122(); /* Check for ? inquiry by user*/
  end

end // end FY0F120

// Format the selected data
Function FY0F121()
   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the plan location data in the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWSKF = "N"; /* Initialize save key flag*/

  if (FY0FW01.FY0FWSKY > " ") /* If save key set*/
    FY0FW01.FY0FWTSP = 1; /* Initialize search page*/
  end

  if (COMMAREA.CAADDFL == "Y") /* If user can perform add*/
    set FY0FM001.FY0FMADD skip; /* Display add PF Key*/
  end

  if (COMMAREA.CACHGFL == "Y") /* If user can perform change*/
    set FY0FM001.FY0FMCHG skip; /* Display change PF Key*/
  end

  if (COMMAREA.CADELFL == "Y") /* If user can perform delete*/
    set FY0FM001.FY0FMDEL skip; /* Display change PF Key*/
  end

  if (FY0FW01.TA5TSQIX == 0) /* if no data to display*/
     /* Do not format data*/
  else

    while (FY0FW01.FY0FWSKF == "N") /* While save key not found*/
      FY0FS14(); /* Obtain temporary storage page*/
      FY0FS15(); /* locate page with key*/
    end

    if (FY0FW01.FY0FWTSP != TA5REC.TA5TSQIX) /* Desired page not current*/
      FY0FS14(); /* Obtain temporary storage page*/
    end

    set FY0FM001.FY0FMPGL skip; /* Display "PAGE" literal*/
    set FY0FM001.FY0FMOFL skip; /* Display "OF" literal*/

    FY0FM001.FY0FMTSP = FY0FW01.FY0FWTSP; /* Current page number*/
    set FY0FM001.FY0FMTSP skip; /* Display number*/
    FY0FM001.TA5TSQIX = FY0FW01.TA5TSQIX; /* Highest page number*/
    set FY0FM001.TA5TSQIX skip; /* Display number*/

    FY0FW01.FY0FWIXM = 1; /* Initialize line index*/
    while (FY0FW01.FY0FWIXM <= 11 /* Until end of lines*/
     && FY0FW02.SY1STNBR[FY0FWIXM] != " ") /* or last line of data*/

      set FY0FM001.FY0FMSEL[FY0FWIXM] normal; /* Display select flag*/

      FY0FM001.FY0FMSTY[FY0FWIXM] = FY0FW02.SY1STNBR[FY0FWIXM];
      FY0FM001.FY0FMCLR[FY0FWIXM] = FY0FW02.SY2CLRID[FY0FWIXM];
      FY0FM001.FY0FMSNC[FY0FWIXM] = FY0FW02.XSECD[FY0FWIXM];
      FY0FW01.FY0FWSNY = FY0FW02.XSNYR[FY0FWIXM];
      FY0FM001.FY0FMSNY[FY0FWIXM] = FY0FW01.FY0FWSYY;
      FY0FM001.FY0FMDIM[FY0FWIXM] = FY0FW02.XDMCD[FY0FWIXM];
      FY0FM001.FY0FMQUA[FY0FWIXM] = FY0FW02.XQACD[FY0FWIXM];
      FY0FM001.FY0FMSPC[FY0FWIXM] = FY0FW02.PC2INSEG[FY0FWIXM];
      FY0FM001.FY0FMPKG[FY0FWIXM] = FY0FW02.XPGCD[FY0FWIXM];
      FY0FM001.FY0FMUOM[FY0FWIXM] = FY0FW02.XUMCD[FY0FWIXM];
      if (FY0FW02.XDMCD[FY0FWIXM] == "00")
        set FY0FM001.FY0FMDIM[FY0FWIXM] skip, invisible;
      end
      if (FY0FW02.XQACD[FY0FWIXM] == "01")
        set FY0FM001.FY0FMQUA[FY0FWIXM] skip, invisible;
      end
      if (FY0FW02.PC2INSEG[FY0FWIXM] == "000")
        set FY0FM001.FY0FMSPC[FY0FWIXM] skip, invisible;
      end
      if (FY0FW02.XPGCD[FY0FWIXM] == "00")
        set FY0FM001.FY0FMPKG[FY0FWIXM] skip, invisible;
      end
      if (FY0FW02.XUMCD[FY0FWIXM] == "01")
        set FY0FM001.FY0FMUOM[FY0FWIXM] skip, invisible;
      end
      FY0FM001.FY4FOBPR[FY0FWIXM] = FY0FW02.FY4FOBPR[FY0FWIXM];
      FY0FM001.FY0FMPIN[FY0FWIXM] = FY0FW02.FY0FWPIN[FY0FWIXM];
      if (COMMAREA.CAILVL[1] != "Y") /* If FOB inquiry flag not = 'y'*/
        set FY0FM001.FY4FOBPR[FY0FWIXM] skip, invisible; /* Darken*/
        set FY0FM001.FY0FMPIN[FY0FWIXM] skip, invisible; /* Darken*/
      end
      FY0FM001.FY3INPFL[FY0FWIXM] = FY0FW02.FY3INPFL[FY0FWIXM];
      FY0FM001.FY3SFYFL[FY0FWIXM] = FY0FW02.FY3SFYFL[FY0FWIXM];
      FY0FM001.FY3PRTGT[FY0FWIXM] = FY0FW02.FY3PRTGT[FY0FWIXM];
      FY0FM001.FY3PRCAP[FY0FWIXM] = FY0FW02.FY3PRCAP[FY0FWIXM];
      FY0FM001.FY3PRMIN[FY0FWIXM] = FY0FW02.FY3PRMIN[FY0FWIXM];

      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment line index*/

    end
  end


end // end FY0F121

// Check for ? inquiry by user
Function FY0F122()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0FM001.XGPCD == "?" /* if any ? entered*/
   || FY0FM001.XSECD == "?" 
   || FY0FM001.FY0FMSYR == "?"
   || FY0FM001.XQACD == "?" 
   || FY0FM001.XDMCD == "?" 
   || FY0FM001.XPGCD == "?")

    if (FY0FM001.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM001.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0FM001.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM001.XGPCD = " "; /* clear fields*/
        FY0FM001.XGPDESC = " ";
      end
    end


    if (FY0FM001.XSECD == "?" /* if ? in season code field*/
     || FY0FM001.FY0FMSYR == "?") /* or ? in season year field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SEASON    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYSN01(); /* perform season code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM001.XSECD = YSNTBL.XSECD[XX0XWPIX]; /* move code*/
        FY0FW01.FY0FWSNY = YSNTBL.XSNYR[XX0XWPIX];
        FY0FM001.FY0FMSYR = FY0FW01.FY0FWSYY; /* move year*/
      else
        FY0FM001.XSECD = " "; /* clear fields*/
        FY0FM001.FY0FMSYR = 0;
      end
    end

    if (FY0FM001.XQACD == "?") /* if ? in quality code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                QUALITY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXQA01(); /* perform quality code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM001.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
      else
        FY0FM001.XQACD = " "; /* clear fields*/
      end
    end


    if (FY0FM001.XDMCD == "?") /* if ? in dimension code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "          DIMENSION       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXDM01(); /* perform dimension code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM001.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* move code*/
      else
        FY0FM001.XDMCD = " "; /* clear fields*/
      end
    end


    if (FY0FM001.XPGCD == "?") /* if ? in package type field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        PACKAGE TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXPG01(); /* perform package type window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM001.XPGCD = XPGTBL.XPGCD[XX0XWPIX]; /* move code*/
      else
        FY0FM001.XPGCD = " "; /* clear fields*/
      end
    end


    converseLib.clearScreen();
     /* restore the original map*/

  end


end // end FY0F122

// Check attention identifier
Function FY0F130()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear map*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      FY0FS02(); /* Purge any temporary storage*/
      set FY1REC empty; /* Clear records*/
      set FY2REC empty;
      set FY3REC empty;
      set FY4REC empty;
      COMMAREA.CATOAP = FY0FM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM001.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/

      FY0FM001.XGPCD = FY0FW01.XGPCD;
      FY0FM001.FY1FCTYC = FY0FW01.FY1FCTYC;
      FY0FM001.SY1STNBR = FY0FW01.SY1STNBR;
      FY0FM001.SY2CLRID = FY0FW01.SY2CLRID;
      FY0FM001.XSECD = FY0FW01.XSECD;
      FY0FM001.FY0FMSYR = FY0FW01.FY0FWSYY;
      FY0FM001.PC2INSEG = FY0FW01.PC2INSEG;
      FY0FM001.XQACD = FY0FW01.XQACD;
      FY0FM001.XDMCD = FY0FW01.XDMCD;
      FY0FM001.XPGCD = FY0FW01.XPGCD;
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data switch*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      FY0FM001.XXXPRCNM = "FY0F130"; /* PROCESS NAME*/
    end
    set FY0FM001.CATOAP cursor, modified, bold; /* Highlight*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0A"; /* Set to Factory menu*/
    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM001"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* Clear item*/
    end

    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf13 /* PF13 was pressed*/
   && COMMAREA.CAADDFL == "N")     /* and user add not authorized*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf14 /* PF14 was pressed*/
   && COMMAREA.CACHGFL == "N")     /* and user chg not authorized*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf15 /* PF14 was pressed*/
   && COMMAREA.CADELFL == "N")     /* and user chg not authorized*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    if (FY0FM001.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Set to fob by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Set to fob by eff. date*/
    end
    FY0FW01.FY0FWIXM = 1; /* Init. index*/
    FY0FW01.FY0FWSFL = "N"; /* Init selection flag*/
    while (FY0FW01.FY0FWSFL == "N" /* Until selection found*/
     && FY0FW01.FY0FWIXM <= 11) /* or end of list*/
      if (FY0FM001.FY0FMSEL[FY0FWIXM] == "S") /* Selection has been made*/
        FYWREC.XGPCD = FY0FM001.XGPCD; /* Move gpc code to fywrec*/
        FYWREC.FY1FCTYC = FY0FM001.FY1FCTYC;
        FYWREC.SY1STNBR = FY0FW02.SY1STNBR[FY0FWIXM];
        FYWREC.SY2CLRID = FY0FW02.SY2CLRID[FY0FWIXM];
        FYWREC.XSECD = FY0FW02.XSECD[FY0FWIXM];
        FYWREC.XSNYR = FY0FW02.XSNYR[FY0FWIXM];
        FYWREC.XDMCD = FY0FW02.XDMCD[FY0FWIXM];
        FYWREC.XQACD = FY0FW02.XQACD[FY0FWIXM];
        FYWREC.PC2INSEG = FY0FW02.PC2INSEG[FY0FWIXM];
        FYWREC.XPGCD = FY0FW02.XPGCD[FY0FWIXM];
        FYWREC.XUMCD = FY0FW02.XUMCD[FY0FWIXM];
        COMMAREA.CAUSERA = FYWREC.CAUSERA; /* move to commarea*/
        FY0FW01.FY0FWSFL = "Y"; /* Init selection flag*/
      else
        FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Decrement line index*/
      end
    end
    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0C"; /* Set to factory*/
    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf11  /* and PF11 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf15) /* and PF15 was not pressed*/

    FY0FM001.XXXPRCNM = "FY0F130"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0F130

// Reset highlighted fields
Function FY0F140()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM001.XGPCD initialAttributes; /* gpc code*/
  set FY0FM001.XGPDESC initialAttributes; /* gpc code desc*/
  set FY0FM001.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM001.FY1FCTSN initialAttributes; /* Factory name*/
  set FY0FM001.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM001.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM001.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM001.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM001.XSECD initialAttributes; /* Season code*/
  set FY0FM001.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM001.XQACD initialAttributes; /* quality code*/
  set FY0FM001.PC2INSEG initialAttributes; /* Spec code*/
  set FY0FM001.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM001.XPGCD initialAttributes; /* Package type code*/

  FY0FW01.FY0FWIXM = 1; /* Initialize line index*/

  while (FY0FW01.FY0FWIXM <= 11 /* Until end of lines*/
   && FY0FM001.FY0FMSTY[FY0FWIXM] != " ") /* and style exists*/
    set FY0FM001.FY0FMSEL[FY0FWIXM] normal; /* Reset select flag*/
    FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment line index*/
  end

  set FY0FM001.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM001.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F140

// Verify the entered data
Function FY0F150()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.CAITEM > " ") /* Application data was entered*/
    set FY0FM001.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FM001.XXXPRCNM = "FY0F150"; /* Process name*/
    exit stack;
  end

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    FY0F151(); /* Verify scroll request*/
  else
    if (converseVar.eventKey not pf13)
      FY0F152(); /* Verify any changed data*/
    end
  end


end // end FY0F150

// Verify scroll request
Function FY0F151()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FY0FW01.FY0FWTSP < 2)       /* and no previous pages*/
    FY0FM001.XXXPRCNM = "FY0F151"; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FY0FW01.FY0FWTSP >= FY0FW01.TA5TSQIX) /* and no more pages*/
    FY0FM001.XXXPRCNM = "FY0F151"; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/
  end

  if (converseVar.validationMsgNum == 0)

    FY0FW01.FY0FWIXM = 11; /* Initialize line index*/

    while (FY0FW01.FY0FWIXM > 0) /* Until end of lines*/
      if (FY0FM001.FY0FMSEL[FY0FWIXM] != " ")
        set FY0FM001.FY0FMSEL[FY0FWIXM] cursor, modified, bold;
                                   /* Highlight*/
        FY0FM001.XXXPRCNM = "FY0F151"; /* Process name*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end
      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM - 1; /* Decrement line number*/
    end

  end


end // end FY0F151

// Verify any changed data
Function FY0F152()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID IN PRODUCTION FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY0FMINP > " ") /* If in prod flag entered*/
    if (FY0FM001.FY0FMINP == "Y"
     || FY0FM001.FY0FMINP == "N")
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(47); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.FY0FMINP cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID PACKAGE TYPE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XPGCD > " ") /* If package type entered*/
    if (FY0FM001.XPGCD in XPGTBL.XPGCD)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(79); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.XPGCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID DIMENSION*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XDMCD > " ") /* If dimension entered*/
    if (FY0FM001.XDMCD in XDMTBL.XDMCD)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(78); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.XDMCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A COLOR*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.SY1STNBR > " " /* If style entered*/
   && FY0FM001.SY2CLRID > " ") /* and color entered*/
    PG2REC.XGPCD = FY0FM001.XGPCD;
    PG2REC.SY1STNBR = FY0FM001.SY1STNBR;
    PG2REC.SY2CLRID = FY0FM001.SY2CLRID;
    if (FY0FM001.XDMCD > " ")
      PG2REC.XDMCD = FY0FM001.XDMCD;
    else
      PG2REC.XDMCD = "00";
    end
    XSPG202(); /* Select unique color*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM001.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FW01.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FM001.SY2CLRAB = PG2REC.SY2CLRAB;
      FY0FW01.SY2CLRAB = PG2REC.SY2CLRAB;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FW01.SY1SSTNM = " "; /* Clear description*/
        FY0FW01.SY2CLRAB = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
        set FY0FM001.SY1STNBR cursor, modified, bold;
        set FY0FM001.SY2CLRID bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID IN FACTORY PRIORITY FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY0FMPRF > " ") /* If in fcty prty entered*/
    if (FY0FM001.FY0FMPRF == "Y"
     || FY0FM001.FY0FMPRF == "N")
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(47); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.FY0FMPRF cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID INVENTORY SEGMENT CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.PC2INSEG > " ") /* If spec entered*/
    PC2REC.XGPCD = FY0FM001.XGPCD;
    PC2REC.PC2INSEG = FY0FM001.PC2INSEG;
    FY0FS29(); /* Get segment code*/
    if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(77); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.PC2INSEG cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID QUALITY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XQACD > " ") /* If quality entered*/
    if (FY0FM001.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(76); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.XQACD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON YEAR*/
   /* ------------------------------------------------------------*/

  FY0FW01.XSNYR = 0; /* Initialize working storage season*/
   /* --------- Y2K OUT BEGIN -----------*/
   /* IF FY0FM001.FY0FMSYR GT 0;       /* If season year entered*/
   /* MOVE 19 TO FY0FW01.FY0FWSCC;     /* Set up century*/
   /* --------- Y2K OUT END -------------*/

   /* --------- Y2K IN BEGIN ------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    /* next sentence*/
  else
    if (FY0FM001.FY0FMSYR > 60) /* Determine Century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    /* --------- Y2K IN END --------------*/
    FY0FW01.FY0FWSYY = FY0FM001.FY0FMSYR; /* Set up year*/
    FY0FW01.XSNYR = FY0FW01.FY0FWSNY; /* Move to season year*/

    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM001.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FW01.XSNYR == YSNTBL.XSNYR[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWSW1 = "Y";
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(75); /* Error message and highlight*/
          FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
          set FY0FM001.FY0FMSYR cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XSECD > " ") /* If season code entered*/
    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM001.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FM001.XSECD == YSNTBL.XSECD[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(74); /* Error message and highlight*/
          FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
          set FY0FM001.XSECD cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          FY0FW01.FY0FWSW1 = "Y";
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STYLE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.SY1STNBR > " ") /* If style entered*/
    PG2REC.XGPCD = FY0FM001.XGPCD;
    PG2REC.SY1STNBR = FY0FM001.SY1STNBR;
    XSPG201(); /* validate the style*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM001.SY1SSTNM = PG2REC.SY1SSTNM;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM001.SY1SSTNM = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
        set FY0FM001.SY1STNBR cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XGPCD > " ") /* If gpc code entered*/
    if (FY0FM001.XGPCD in XGPTBL.XGPCD)
      FY0FM001.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      COMMAREA.XGPCD = FY0FM001.XGPCD; /* Save in commarea*/
    else
      FY0FM001.XGPDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM001.XGPCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM001.XGPDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(101); /* Error message and highlight*/
    FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
    set FY0FM001.XGPCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY1FCTYC > " ") /* If factory entered*/
    FY1REC.XGPCD = FY0FM001.XGPCD;
    FY1REC.FY1FCTYC = FY0FM001.FY1FCTYC;
    FY0FS01(); /* Select unique factory*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM001.FY1FCTSN = FY1REC.FY1FCTSN;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM001.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(33); /* Error message and highlight*/
        FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
        set FY0FM001.FY1FCTYC cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  else
    FY0FM001.FY1FCTSN = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(33); /* Error message and highlight*/
    FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
    set FY0FM001.FY1FCTYC cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE IN PRODUCTION FLAG HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY0FMINP != FY0FW01.FY3INPFL) /* In prod flag changed*/
    FY0FW01.FY3INPFL = FY0FM001.FY0FMINP; /* save flag*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE IN PRIORITY FACTORY FLAG HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY0FMPRF != FY0FW01.FY3SFYFL) /* Prty fcty flag changed*/
    FY0FW01.FY3SFYFL = FY0FM001.FY0FMPRF; /* save flag*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE PKG TYPE CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XPGCD != FY0FW01.XPGCD) /* Pkg type chged*/
    FY0FW01.XPGCD = FY0FM001.XPGCD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE DIM CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XDMCD != FY0FW01.XDMCD) /* Dim chged*/
    FY0FW01.XDMCD = FY0FM001.XDMCD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE COLOR IS SPACES*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.SY2CLRID == " ") /* Color = spaces*/
    FY0FM001.SY2CLRAB = " "; /* Clear color desc.*/
    FY0FW01.SY2CLRAB = " ";
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE COLOR HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.SY2CLRID != FY0FW01.SY2CLRID) /* Color chged*/
    FY0FW01.SY2CLRID = FY0FM001.SY2CLRID; /* save code*/
    FY0FW01.SY2CLRAB = FY0FM001.SY2CLRAB; /* save desc.*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE SPEC HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.PC2INSEG != FY0FW01.PC2INSEG) /* Spec chged*/
    FY0FW01.PC2INSEG = FY0FM001.PC2INSEG; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE QUAL HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XQACD != FY0FW01.XQACD) /* Qual chged*/
    FY0FW01.XQACD = FY0FM001.XQACD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE SEASON YEAR HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY0FMSYR != FY0FW01.FY0FWSYR) /* Season year chged*/
    FY0FW01.FY0FWSYR = FY0FM001.FY0FMSYR; /* save year*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE SEASON CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XSECD != FY0FW01.XSECD) /* Season code chged*/
    FY0FW01.XSECD = FY0FM001.XSECD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE STYLE IS SPACES*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.SY1STNBR == " ") /* Style code = spaces*/
    FY0FM001.SY2CLRAB = " "; /* Clear color desc.*/
    FY0FW01.SY2CLRAB = " ";
    FY0FM001.SY1SSTNM = " "; /* Clear style desc.*/
    FY0FW01.SY1SSTNM = " ";
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE STYLE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.SY1STNBR != FY0FW01.SY1STNBR) /* Style code chged*/
    FY0FW01.SY1STNBR = FY0FM001.SY1STNBR; /* save code*/
    FY0FW01.SY1SSTNM = FY0FM001.SY1SSTNM; /* save name*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE GPC CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.XGPCD != FY0FW01.XGPCD) /* gpc chged*/
    FY0FW01.XGPCD = FY0FM001.XGPCD; /* save code*/
    FY0FW01.XGPDESC = FY0FM001.XGPDESC; /* save description*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE FACTORY HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM001.FY1FCTYC != FY0FW01.FY1FCTYC) /* Factory code chged*/
    FY0FW01.FY1FCTYC = FY0FM001.FY1FCTYC; /* save code*/
    FY0FW01.FY1FCTSN = FY0FM001.FY1FCTSN; /* save name*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end


  FY0FW01.FY0FWSFL = "N"; /* Initialize selection flag*/

  if (FY0FW01.FY0FWPSW == "N" /* No problem*/
   && FY0FW01.FY0FWSWR == "N") /* Request for data not set*/

    FY0FW01.FY0FWIXM = 11; /* Initialize index*/

    while (FY0FW01.FY0FWIXM > 0) /* Until end of lines*/
      if (FY0FM001.FY0FMSEL[FY0FWIXM] != " ") /* If selection not blank*/
        if (FY0FM001.FY0FMSEL[FY0FWIXM] == "S") /* Save the key*/
          FY0FW01.FY0FWSFL = "Y"; /* Initialize selection flag*/
          if (FY0FW02.XXXSTAT[FY0FWIXM] == "I" /* Status is inactive*/
           && converseVar.eventKey not enter)  /* Inquiry not requested*/
            converseLib.validationFailed(67); /* Error message and highlight*/
            FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
            set FY0FM001.FY0FMSEL[FY0FWIXM] cursor, modified, bold;
            FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          end
        else
          converseLib.validationFailed(13); /* Error message and highlight*/
          FY0FM001.XXXPRCNM = "FY0F152"; /* Process name*/
          set FY0FM001.FY0FMSEL[FY0FWIXM] cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM - 1; /* Decrement line index*/
    end


    if (converseVar.eventKey is pf14 /* PF14 was pressed*/
     && FY0FW01.FY0FWSFL == "N")     /* and selection was not made*/
      converseLib.validationFailed(53); /* error message*/
    end


    if (converseVar.eventKey is pf15 /* PF15 was pressed*/
     && FY0FW01.FY0FWSFL == "N")     /* and selection was not made*/
      converseLib.validationFailed(53); /* error message*/
    end

  end


end // end FY0F152

// Process valid input request
Function FY0F160()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message set up*/
    if (converseVar.eventKey is pf7) /* Scroll back requested*/
      FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP - 1; /* Decrement page number*/
    else
      if (converseVar.eventKey is pf8) /* Scroll forward requested*/
        FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP + 1; /* Increment page number*/
      else
        if (converseVar.eventKey is pf11) /* PF11 was pressed*/
          FY0FW01.FY0FWMAP = "2"; /* Select Map #2*/
          converseLib.validationFailed(0); /* Clear error message field*/
        else
          if (converseVar.eventKey is pf13) /* PF13 was pressed*/
            FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
            FY0FW01.FY0FWFSW = "A"; /* Select add function*/
            converseLib.validationFailed(0); /* Clear error message field*/
          else
            if (converseVar.eventKey is pf14 /* PF14 was pressed*/
             && FY0FW01.FY0FWSFL == "Y")     /* and selection was made*/
              FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
              FY0FW01.FY0FWFSW = "C"; /* Select change function*/
              converseLib.validationFailed(0); /* Clear error message field*/
            else
              if (converseVar.eventKey is pf15 /* PF15 was pressed*/
               && FY0FW01.FY0FWSFL == "Y")     /* and selection was made*/
                FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
                FY0FW01.FY0FWFSW = "D"; /* Select change function*/
                converseLib.validationFailed(0); /* Clear error message field*/
              else
                if (converseVar.eventKey is enter /* enter was pressed*/
                 && FY0FW01.FY0FWSFL == "Y")      /* and selection was made*/
                  FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
                  FY0FW01.FY0FWFSW = "I"; /* Select inquiry function*/
                  converseLib.validationFailed(0); /* Clear error message field*/
                end
              end
            end
          end
        end
      end
    end
  end


end // end FY0F160

// Factory/Style list map
Function FY0F200()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWSWR == "Y" /* The request for data is yes*/
   && FY0FW01.FY0FWPSW == "N") /* and no errors*/
    FY0F210(); /* Obtain the data to display*/
  end

  FY0F220(); /* Format and display the map*/

  FY0F230(); /* Check attention identifier*/

  FY0F240(); /* Reset fields to normal intensity*/

  FY0F250(); /* Verify the entered data*/

  FY0F260(); /* Process valid input request*/


end // end FY0F200

// Obtain the data to display
Function FY0F210()
   /* ------------------------------------------------------------*/
     /* Purge any existing queue in temporary storage.*/
     /* Select and open the cursor for the set(s) to be formatted*/
     /* Fetch and format the data in the page.*/
     /* If the page is full, add the page to the storage queue.*/
     /* At end of rows, add any partial page to the queue.*/
     /* At end of rows, close the selected set cursor.*/
     /* If no data found, display error message and return to*/
       /* previous process.*/
     /* Indicate that the request for data was completed.*/
   /* ------------------------------------------------------------*/

  FY0FS02(); /* Purge any temporary storage*/

  set FY2REC empty; /* Clear factory/style record*/
  set FY3REC empty; /* Clear factory/color record*/
  set FY4REC empty; /* Clear factory/fob record*/

  FY2REC.XGPCD = FY0FW01.XGPCD;
  FY2REC.XXXSTAT = "A"; /* Get only active records*/
  if (FY0FW01.FY1FCTYC > " ")
    FY2REC.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FW01.FY0FWIOT = "1"; /* I-O task indicator*/
  else
    FY2REC.FY1FCTYC = "*";
    FY0FW01.FY0FWIOT = "2"; /* I-O task indicator*/
  end

  if (FY0FW01.SY1STNBR > " ")
    FY2REC.SY1STNBR = FY0FW01.SY1STNBR;
  else
    FY2REC.SY1STNBR = "*";
  end

  if (FY0FW01.XSECD > " ")
    FY2REC.XSECD = FY0FW01.XSECD;
  else
    FY2REC.XSECD = "*";
  end

  if (FY0FW01.XSNYR > 0)
    FY2REC.XSNYR = FY0FW01.XSNYR;
  else
    FY2REC.XSNYR = -1;
  end

  FY0FS03(); /* Select set and open the cursor*/

  if (SQLCA.VAGen_SQLCODE == 0) /* No errors were found*/
    set FY0FW02 empty; /* Clear temporary storage record*/
    FY0FW01.FY0FWIXM = 1; /* Initialize display line number*/
    FY0FW01.FY0FWSW1 = "N"; /* Initialize end of file switch1*/
    FY0FW01.FY0FWPSW = "N"; /* Init problem found switch*/
    FY0FS04(); /* Fetch fy2rec row*/
    while (FY0FW01.FY0FWSW1 == "N" /* Until end of set or problem found*/
     && FY0FW01.FY0FWPSW == "N") /* or until a problem was found*/
      FY2REC.XGPCD = FY2REC.XGPCD;
      FY2REC.FY1FCTYC = FY2REC.FY1FCTYC;

      FY0F211(); /* Set up temp. storage and FY3REC*/
      FY0FS05(); /* Select set of fy3rec rows*/
      if (SQLCA.VAGen_SQLCODE == 0) /* No errors were found*/

        FY0FW01.FY0FWSW2 = "N"; /* Initialize end of file switch*/
        FY0FS06(); /* fetch fy3rec row*/

        while (FY0FW01.FY0FWSW2 == "N" /* Until end of set*/
         && FY0FW01.FY0FWPSW == "N") /* or until a problem was found*/

          FY0F212(); /* Set up temp. storage and FY4REC*/

  /* IF FY0FW01.XGPCD EQ '02';        /* If footwear*/
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F113(); /* determine price*/
            else
              if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
               && FY3REC.XQACD == "02")      /* Quality '02'*/
                FY0FS10(); /* Close set of fy4rec rows*/
                if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
                  FY4REC.XQACD = "01";
                  FY0FS07(); /* Select set of fy4rec rows*/
                  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
                    FY0FS08(); /* fetch fy4rec row*/
                    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
                      FY0F113(); /* determine price*/
                      FY0F114(); /* Calculate b-grade %*/
                    end
                  end
                end
              end
            end
          end
          FY0FS10(); /* Close set of fy4rec rows*/
  /* END;*/

          if (FY0FW01.FY0FWPSW == "N"
           && FY0FW01.FY0FWIXM >= 11)
            FY0FS11(); /* Add page to temp storage*/
          else
            FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Incr. index*/
          end
          FY0FS06(); /* fetch fy3rec row*/
        end
      end
      FY0FS12(); /* Close set of fy3rec rows*/
      FY0FS04(); /* Fetch fy2rec row*/
    end
    FY0FS13(); /* Close set of fy2rec rows*/

    if (FY0FW01.FY0FWPSW == "N" /* and no errors*/
     && FY0FW01.FY0FWIXM > 1)   /* and some of the page was formatted*/
      FY0FS11(); /* Add page to temp storage*/
      FY0FW01.FY0FWTSP = 1; /* Initialize page number*/
    end
  end

  FY0FW01.FY0FWSWR = "N"; /* Request for data completed*/

  if (FY0FW01.TA5TSQIX == 0 /* No data to display*/
   && FY0FW01.FY0FWPSW == "N") /* and no previous errors*/
    FY0FM002.XXXPRCNM = "FY0F210"; /* Process name*/
    set FY0FM002.FY1FCTYC cursor; /* Position crsr at fcty code*/
    set FY2REC empty; /* Clear factory/style record*/
    set FY3REC empty; /* Clear factory/color record*/
    set FY4REC empty; /* Clear factory/fob record*/
    converseLib.validationFailed(21); /* Indicate no data to display*/
    FY0FW01.FY0FWPSW = "Y"; /* Override problem*/
  end


end // end FY0F210

// Set temp strg. and fy3rec
Function FY0F211()
   /* ------------------------------------------------------------*/
     /* Set up the fy3rec for the call*/
   /* ------------------------------------------------------------*/

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;
  FY3REC.XXXSTAT = FY2REC.XXXSTAT;
  if (FY0FW01.SY2CLRID > " ")
    FY3REC.SY2CLRID = FY0FW01.SY2CLRID;
  else
    FY3REC.SY2CLRID = "*";
  end
  if (FY0FW01.XQACD > " ")
    FY3REC.XQACD = FY0FW01.XQACD;
  else
    FY3REC.XQACD = "*";
  end
  if (FY0FW01.PC2INSEG > " ")
    FY3REC.PC2INSEG = FY0FW01.PC2INSEG;
  else
    FY3REC.PC2INSEG = "*";
  end
  if (FY0FW01.XDMCD > " ")
    FY3REC.XDMCD = FY0FW01.XDMCD;
  else
    FY3REC.XDMCD = "*";
  end
  if (FY0FW01.XPGCD > " ")
    FY3REC.XPGCD = FY0FW01.XPGCD;
  else
    FY3REC.XPGCD = "*";
  end
  FY3REC.XUMCD = "*";
  if (FY0FW01.FY3INPFL > " ")
    FY3REC.FY3INPFL = FY0FW01.FY3INPFL;
  else
    FY3REC.FY3INPFL = "*";
  end
  if (FY0FW01.FY3SFYFL > " ")
    FY3REC.FY3SFYFL = FY0FW01.FY3SFYFL;
  else
    FY3REC.FY3SFYFL = "*";
  end


end // end FY0F211

// Set up temp. strg and fy4rec
Function FY0F212()
   /* ------------------------------------------------------------*/
     /* Move data to the temp. storage record and setup*/
     /* the FY4REC for the call.*/
   /* ------------------------------------------------------------*/

  FY0FW02.SY1STNBR[FY0FWIXM] = FY2REC.SY1STNBR;
  FY0FW02.FY2MFGPC[FY0FWIXM] = FY2REC.FY2MFGPC;
  if (FY2REC.FY1MFGDY > 0)
    FY0FW02.FY1MFGDY[FY0FWIXM] = FY2REC.FY1MFGDY;
  else
    FY0FW02.FY1MFGDY[FY0FWIXM] = FY1REC.FY1MFGDY;
  end

  if (FY2REC.FY1FABDY > 0)
    FY0FW02.FY1FABDY[FY0FWIXM] = FY2REC.FY1FABDY;
  else
    FY0FW02.FY1FABDY[FY0FWIXM] = FY1REC.FY1FABDY;
  end

  if (FY2REC.FY1STDC > 0)
    FY0FW02.FY1STDC[FY0FWIXM] = FY2REC.FY1STDC;
  else
    FY0FW02.FY1STDC[FY0FWIXM] = FY1REC.FY1STDC;
  end

  if (FY2REC.FY1SPCLC > 0)
    FY0FW02.FY1SPCLC[FY0FWIXM] = FY2REC.FY1SPCLC;
  else
    FY0FW02.FY1SPCLC[FY0FWIXM] = FY1REC.FY1SPCLC;
  end

  if (FY2REC.FY1STCDY > 0)
    FY0FW02.FY1STCDY[FY0FWIXM] = FY2REC.FY1STCDY;
  else
    FY0FW02.FY1STCDY[FY0FWIXM] = FY1REC.FY1STCDY;
  end

  if (FY2REC.FY1LSTDY > 0)
    FY0FW02.FY1LSTDY[FY0FWIXM] = FY2REC.FY1LSTDY;
  else
    FY0FW02.FY1LSTDY[FY0FWIXM] = FY1REC.FY1LSTDY;
  end
  FY0FW02.SY2CLRID[FY0FWIXM] = FY3REC.SY2CLRID;
  FY0FW02.XSECD[FY0FWIXM] = FY3REC.XSECD;
  FY0FW02.XSNYR[FY0FWIXM] = FY3REC.XSNYR;
  FY0FW02.PC2INSEG[FY0FWIXM] = FY3REC.PC2INSEG;
  FY0FW02.XQACD[FY0FWIXM] = FY3REC.XQACD;
  FY0FW02.XDMCD[FY0FWIXM] = FY3REC.XDMCD;
  FY0FW02.XPGCD[FY0FWIXM] = FY3REC.XPGCD;
  FY0FW02.XUMCD[FY0FWIXM] = FY3REC.XUMCD;
  FY0FW02.FY3PRMIN[FY0FWIXM] = FY3REC.FY3PRMIN;
  FY0FW02.FY3PRTGT[FY0FWIXM] = FY3REC.FY3PRTGT;
  FY0FW02.FY3PRCAP[FY0FWIXM] = FY3REC.FY3PRCAP;
  FY0FW02.FY3SFYFL[FY0FWIXM] = FY3REC.FY3SFYFL;
  FY0FW02.FY3INPFL[FY0FWIXM] = FY3REC.FY3INPFL;
  FY0FW02.XXXSTAT[FY0FWIXM] = FY3REC.XXXSTAT;


  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;


end // end FY0F212

// Format and display the map
Function FY0F220()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/


  if (converseVar.validationMsgNum == 0) /* No error message to display*/

    set FY0FM002 initial; /* Clear map output area*/
    FY0FM002.XGPCD = FY0FW01.XGPCD;
    FY0FM002.XGPDESC = FY0FW01.XGPDESC;
    FY0FM002.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FM002.FY1FCTSN = FY0FW01.FY1FCTSN;
    FY0FM002.SY1STNBR = FY0FW01.SY1STNBR;
    FY0FM002.SY1SSTNM = FY0FW01.SY1SSTNM;
    FY0FM002.SY2CLRID = FY0FW01.SY2CLRID;
    FY0FM002.SY2CLRAB = FY0FW01.SY2CLRAB;
    FY0FM002.XSECD = FY0FW01.XSECD;
    FY0FM002.FY0FMSYR = FY0FW01.FY0FWSYR;
    FY0FM002.XQACD = FY0FW01.XQACD;
    FY0FM002.PC2INSEG = FY0FW01.PC2INSEG;
    FY0FM002.XDMCD = FY0FW01.XDMCD;
    FY0FM002.XPGCD = FY0FW01.XPGCD;
    FY0FM002.FY0FMINP = FY0FW01.FY3INPFL;
    FY0FM002.FY0FMPRF = FY0FW01.FY3SFYFL;

    FY0F221(); /* Format the selected data*/

  end

  if (FY0FW01.FY0FWPSW == "Y") /* Error message to display*/

    FY0FS02(); /* Purge temp storage*/
    set FY0FW02 empty; /* Clear temp storage record*/
    set FY1REC empty; /* Clear factory record*/
    set FY2REC empty; /* Clear factory/style record*/
    set FY3REC empty; /* Clear factory/color record*/
    set FY4REC empty; /* Clear factory/fob record*/

    set FY0FM002.FY0FMPGL initialAttributes; /* Turn off "PAGE" literal*/
    set FY0FM002.FY0FMOFL initialAttributes; /* Turn off "OF" literal*/

    FY0FM002.FY0FMTSP = 0; /* Current page number*/
    FY0FM002.TA5TSQIX = 0; /* Highest page number*/

    FY0FW01.FY0FWIXM = 1; /* Initialize line index*/
    while (FY0FW01.FY0FWIXM <= 11 /* Until end of lines*/
     && FY0FM002.FY0FMSTY[FY0FWIXM] != " ") /* or last line of data*/

      set FY0FM002.FY0FMSEL[FY0FWIXM] initialAttributes; /* Turn off select flag*/
      FY0FM002.FY0FMSEL[FY0FWIXM] = " ";
      FY0FM002.FY0FMSTY[FY0FWIXM] = " ";
      FY0FM002.FY0FMCLR[FY0FWIXM] = " ";
      FY0FM002.FY0FMSNC[FY0FWIXM] = " ";
      FY0FM002.FY0FMSNY[FY0FWIXM] = 0;
      FY0FM002.FY2MFGPC[FY0FWIXM] = 0;
      FY0FM002.FY1MFGDY[FY0FWIXM] = 0;
      FY0FM002.FY1FABDY[FY0FWIXM] = 0;
      FY0FM002.FY1STDC[FY0FWIXM] = 0;
      FY0FM002.FY1SPCLC[FY0FWIXM] = 0;
      FY0FM002.FY1STCDY[FY0FWIXM] = 0;
      FY0FM002.FY1LSTDY[FY0FWIXM] = 0;

      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment line index*/

    end
  end

  if (converseVar.validationMsgNum != 0) /* No error message to display*/
    set FY0FM002 alarm; /* Indicate sound alarm*/
  end

  if (FY0FW01.FY0FWPSW == "N") /* No error message to display*/
    if (FY0FM002.FY0FMSTY[1] == " ") /* No data to display*/
      set FY0FM002.FY1FCTYC cursor; /* Set cursor to factory code*/
    end
  end

  if (FY0FW01.FY0FWMFL == "Y") /* If message flag is yes*/
    converseLib.validationFailed(1); /* Indicate update was successful*/
    FY0FM002.XXXPRCNM = "FY0F220"; /* Process name*/
    FY0FW01.FY0FWMFL = "N"; /* Reset message flag*/
  end

  FY0FM002.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  converse FY0FM002 ;

  FY0FW01.FY0FWPSW = "N"; /* Reset problem switch*/

  if (converseVar.eventKey is enter)
    FY0F222(); /* Check for ? inquiry by user*/
  end

end // end FY0F220

// Format the selected data
Function FY0F221()
   /* ------------------------------------------------------------*/
   /* Obtain the next page from temporary storage.*/
   /* Format the plan location data in the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWSKF = "N"; /* Initialize save key flag*/

  if (FY0FW01.FY0FWSKY > " ") /* If save key set*/
    FY0FW01.FY0FWTSP = 1; /* Initialize search page*/
  end

  if (COMMAREA.CAADDFL == "Y") /* If user can perform add*/
    set FY0FM002.FY0FMADD skip; /* Display add PF Key*/
  end

  if (COMMAREA.CACHGFL == "Y") /* If user can perform change*/
    set FY0FM002.FY0FMCHG skip; /* Display change PF Key*/
  end

  if (COMMAREA.CADELFL == "Y") /* If user can perform delete*/
    set FY0FM002.FY0FMDEL skip; /* Display change PF Key*/
  end

  if (FY0FW01.TA5TSQIX == 0) /* if no data to display*/
     /* Do not format data*/
  else

    while (FY0FW01.FY0FWSKF == "N") /* While save key not found*/
      FY0FS14(); /* Obtain temporary storage page*/
      FY0FS15(); /* locate page with key*/
    end

    if (FY0FW01.FY0FWTSP != TA5REC.TA5TSQIX) /* Desired page not current*/
      FY0FS14(); /* Obtain temporary storage page*/
    end

    set FY0FM002.FY0FMPGL skip; /* Display "PAGE" literal*/
    set FY0FM002.FY0FMOFL skip; /* Display "OF" literal*/

    FY0FM002.FY0FMTSP = FY0FW01.FY0FWTSP; /* Current page number*/
    set FY0FM002.FY0FMTSP skip; /* Display number*/
    FY0FM002.TA5TSQIX = FY0FW01.TA5TSQIX; /* Highest page number*/
    set FY0FM002.TA5TSQIX skip; /* Display number*/

    FY0FW01.FY0FWIXM = 1; /* Initialize line index*/
    while (FY0FW01.FY0FWIXM <= 11 /* Until end of lines*/
     && FY0FW02.SY1STNBR[FY0FWIXM] != " ") /* or last line of data*/

      set FY0FM002.FY0FMSEL[FY0FWIXM] normal; /* Display select flag*/

      FY0FM002.FY0FMSTY[FY0FWIXM] = FY0FW02.SY1STNBR[FY0FWIXM];
      FY0FM002.FY0FMCLR[FY0FWIXM] = FY0FW02.SY2CLRID[FY0FWIXM];
      FY0FM002.FY0FMSNC[FY0FWIXM] = FY0FW02.XSECD[FY0FWIXM];
      FY0FW01.FY0FWSNY = FY0FW02.XSNYR[FY0FWIXM];
      FY0FM002.FY0FMSNY[FY0FWIXM] = FY0FW01.FY0FWSYY;
      FY0FM002.FY2MFGPC[FY0FWIXM] = FY0FW02.FY2MFGPC[FY0FWIXM];
      FY0FM002.FY1MFGDY[FY0FWIXM] = FY0FW02.FY1MFGDY[FY0FWIXM];
      FY0FM002.FY1FABDY[FY0FWIXM] = FY0FW02.FY1FABDY[FY0FWIXM];
      FY0FM002.FY1STDC[FY0FWIXM] = FY0FW02.FY1STDC[FY0FWIXM];
      FY0FM002.FY1SPCLC[FY0FWIXM] = FY0FW02.FY1SPCLC[FY0FWIXM];
      FY0FM002.FY1STCDY[FY0FWIXM] = FY0FW02.FY1STCDY[FY0FWIXM];
      FY0FM002.FY1LSTDY[FY0FWIXM] = FY0FW02.FY1LSTDY[FY0FWIXM];

      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment line index*/

    end
  end


end // end FY0F221

// Check for ? inquiry by user
Function FY0F222()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0FM002.XGPCD == "?" /* if any ? entered*/
   || FY0FM002.XSECD == "?" 
   || FY0FM002.FY0FMSYR == "?"
   || FY0FM002.XQACD == "?" 
   || FY0FM002.XDMCD == "?" 
   || FY0FM002.XPGCD == "?")

    if (FY0FM002.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM002.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0FM002.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM002.XGPCD = " "; /* clear fields*/
        FY0FM002.XGPDESC = " ";
      end
    end


    if (FY0FM002.XSECD == "?" /* if ? in season code field*/
     || FY0FM002.FY0FMSYR == "?") /* or ? in season year field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SEASON    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYSN01(); /* perform season code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM002.XSECD = YSNTBL.XSECD[XX0XWPIX]; /* move code*/
        FY0FW01.FY0FWSNY = YSNTBL.XSNYR[XX0XWPIX];
        FY0FM002.FY0FMSYR = FY0FW01.FY0FWSYY; /* move year*/
      else
        FY0FM002.XSECD = " "; /* clear fields*/
        FY0FM002.FY0FMSYR = 0;
      end
    end

    if (FY0FM002.XQACD == "?") /* if ? in quality code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                QUALITY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXQA01(); /* perform quality code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM002.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
      else
        FY0FM002.XQACD = " "; /* clear fields*/
      end
    end


    if (FY0FM002.XDMCD == "?") /* if ? in dimension code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "          DIMENSION       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXDM01(); /* perform dimension code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM002.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* move code*/
      else
        FY0FM002.XDMCD = " "; /* clear fields*/
      end
    end


    if (FY0FM002.XPGCD == "?") /* if ? in package type field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        PACKAGE TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXPG01(); /* perform package type window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM002.XPGCD = XPGTBL.XPGCD[XX0XWPIX]; /* move code*/
      else
        FY0FM002.XPGCD = " "; /* clear fields*/
      end
    end


    converseLib.clearScreen();
     /* restore the original map*/

  end


end // end FY0F222

// Check attention identifier
Function FY0F230()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear map*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM002.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      FY0FS02(); /* Purge any temporary storage*/
      set FY1REC empty; /* Clear records*/
      set FY2REC empty;
      set FY3REC empty;
      set FY4REC empty;
      COMMAREA.CATOAP = FY0FM002.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM002.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/

      FY0FM002.XGPCD = FY0FW01.XGPCD; /* Reset key fields*/
      FY0FM002.FY1FCTYC = FY0FW01.FY1FCTYC;
      FY0FM002.SY1STNBR = FY0FW01.SY1STNBR;
      FY0FM002.SY2CLRID = FY0FW01.SY2CLRID;
      FY0FM002.XSECD = FY0FW01.XSECD;
      FY0FM002.FY0FMSYR = FY0FW01.FY0FWSYY;
      FY0FM002.PC2INSEG = FY0FW01.PC2INSEG;
      FY0FM002.XQACD = FY0FW01.XQACD;
      FY0FM002.XPGCD = FY0FW01.XPGCD;
      FY0FM002.XDMCD = FY0FW01.XDMCD;
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data switch*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      FY0FM002.XXXPRCNM = "FY0F230"; /* PROCESS NAME*/
    end
    set FY0FM002.CATOAP cursor, modified, bold; /* Highlight*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0A"; /* Set to Factory menu*/
    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM002"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* Clear item*/
    end

    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf13 /* PF13 was pressed*/
   && COMMAREA.CAADDFL == "N")     /* and user add not authorized*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf14 /* PF14 was pressed*/
   && COMMAREA.CACHGFL == "N")     /* and user chg not authorized*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf15 /* PF14 was pressed*/
   && COMMAREA.CADELFL == "N")     /* and user chg not authorized*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    if (FY0FM002.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Set to fob by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Set to fob by eff. date*/
    end
    FY0FW01.FY0FWIXM = 1; /* Init. index*/
    FY0FW01.FY0FWSFL = "N"; /* Init selection flag*/
    while (FY0FW01.FY0FWSFL == "N" /* Until selection found*/
     && FY0FW01.FY0FWIXM <= 11) /* or end of list*/
      if (FY0FM002.FY0FMSEL[FY0FWIXM] == "S") /* Selection has been made*/
        FYWREC.XGPCD = FY0FM002.XGPCD; /* Move gpc code to fywrec*/
        FYWREC.FY1FCTYC = FY0FM002.FY1FCTYC;
        FYWREC.SY1STNBR = FY0FW02.SY1STNBR[FY0FWIXM];
        FYWREC.SY2CLRID = FY0FW02.SY2CLRID[FY0FWIXM];
        FYWREC.XSECD = FY0FW02.XSECD[FY0FWIXM];
        FYWREC.XSNYR = FY0FW02.XSNYR[FY0FWIXM];
        FYWREC.XDMCD = FY0FW02.XDMCD[FY0FWIXM];
        FYWREC.XQACD = FY0FW02.XQACD[FY0FWIXM];
        FYWREC.PC2INSEG = FY0FW02.PC2INSEG[FY0FWIXM];
        FYWREC.XPGCD = FY0FW02.XPGCD[FY0FWIXM];
        FYWREC.XUMCD = FY0FW02.XUMCD[FY0FWIXM];
        COMMAREA.CAUSERA = FYWREC.CAUSERA; /* move to commarea*/
        FY0FW01.FY0FWSFL = "Y"; /* Init selection flag*/
      else
        FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Decrement line index*/
      end
    end
    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    COMMAREA.CAITEM = " "; /* Application data*/
    COMMAREA.CATOAP = "FY0C"; /* Set to Factory*/
    FY0FS02(); /* Purge any temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf10  /* and PF10 was not pressed*/
   && converseVar.eventKey not pf13  /* and PF13 was not pressed*/
   && converseVar.eventKey not pf14  /* and PF14 was not pressed*/
   && converseVar.eventKey not pf15) /* and PF15 was not pressed*/

    FY0FM002.XXXPRCNM = "FY0F230"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end

end // end FY0F230

// Reset highlighted fields
Function FY0F240()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM002.XGPCD initialAttributes; /* gpc code*/
  set FY0FM002.XGPDESC initialAttributes; /* gpc code desc*/
  set FY0FM002.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM002.FY1FCTSN initialAttributes; /* Factory name*/
  set FY0FM002.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM002.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM002.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM002.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM002.XSECD initialAttributes; /* Season code*/
  set FY0FM002.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM002.XQACD initialAttributes; /* quality code*/
  set FY0FM002.PC2INSEG initialAttributes; /* Spec code*/
  set FY0FM002.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM002.XPGCD initialAttributes; /* Package type code*/

  FY0FW01.FY0FWIXM = 1; /* Initialize line index*/

  while (FY0FW01.FY0FWIXM <= 11 /* Until end of lines*/
   && FY0FM002.FY0FMSTY[FY0FWIXM] != " ") /* and style exists*/
    set FY0FM002.FY0FMSEL[FY0FWIXM] normal; /* Reset select flag*/
    FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Increment line index*/
  end

  set FY0FM002.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM002.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F240

// Verify the entered data
Function FY0F250()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* If not a scroll request, verify any changed data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.CAITEM > " ") /* Application data was entered*/
    set FY0FM002.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FM002.XXXPRCNM = "FY0F250"; /* Process name*/
    exit stack;
  end

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/
    FY0F251(); /* Verify scroll request*/
  else
    FY0F252(); /* Verify any changed data*/
  end


end // end FY0F250

// Verify scroll request
Function FY0F251()
   /* ------------------------------------------------------------*/
   /* Ensure that pages exist to scroll forward or back.*/
   /* Indicate an error for any data that was modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && FY0FW01.FY0FWTSP < 2)       /* and no previous pages*/
    FY0FM002.XXXPRCNM = "FY0F251"; /* Process name*/
    converseLib.validationFailed(2); /* No previous page to display*/
  end

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && FY0FW01.FY0FWTSP >= FY0FW01.TA5TSQIX) /* and no more pages*/
    FY0FM002.XXXPRCNM = "FY0F251"; /* Process name*/
    converseLib.validationFailed(3); /* No more pages to display*/
  end

  if (converseVar.validationMsgNum == 0)

    FY0FW01.FY0FWIXM = 11; /* Initialize line index*/

    while (FY0FW01.FY0FWIXM > 0) /* Until end of lines*/
      if (FY0FM002.FY0FMSEL[FY0FWIXM] != " ")
        set FY0FM002.FY0FMSEL[FY0FWIXM] cursor, modified, bold;
                                   /* Highlight*/
        FY0FM002.XXXPRCNM = "FY0F251"; /* Process name*/
        converseLib.validationFailed(14); /* Modifications not allowed*/
      end
      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM - 1; /* Decrement line number*/
    end

  end


end // end FY0F251

// Verify any changed data
Function FY0F252()
   /* ------------------------------------------------------------*/
   /* Return to the previous process if no data was changed.*/
   /* Verify the data that was changed.*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID IN PRODUCTION FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY0FMINP > " ") /* If in prod flag entered*/
    if (FY0FM002.FY0FMINP == "Y"
     || FY0FM002.FY0FMINP == "N")
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(47); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM002.FY0FMINP cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end


   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID PACKAGE TYPE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XPGCD > " ") /* If package type entered*/
    if (FY0FM002.XPGCD in XPGTBL.XPGCD)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(79); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
      set FY0FM002.XPGCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID DIMENSION*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XDMCD > " ") /* If dimension entered*/
    if (FY0FM002.XDMCD in XDMTBL.XDMCD)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(78); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
      set FY0FM002.XDMCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A COLOR*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.SY1STNBR > " " /* If style entered*/
   && FY0FM002.SY2CLRID > " ") /* and color entered*/
    PG2REC.XGPCD = FY0FM002.XGPCD;
    PG2REC.SY1STNBR = FY0FM002.SY1STNBR;
    PG2REC.SY2CLRID = FY0FM002.SY2CLRID;
    if (FY0FM002.XDMCD > " ")
      PG2REC.XDMCD = FY0FM002.XDMCD;
    else
      PG2REC.XDMCD = "00";
    end
    XSPG202(); /* Select unique color*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM002.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FW01.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FM002.SY2CLRAB = PG2REC.SY2CLRAB;
      FY0FW01.SY2CLRAB = PG2REC.SY2CLRAB;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FW01.SY2CLRAB = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
        set FY0FM002.SY2CLRID cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID PRIORITY FACTORY FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY0FMPRF > " ") /* If fcty prty entered*/
    if (FY0FM002.FY0FMPRF == "Y"
     || FY0FM002.FY0FMPRF == "N")
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(47); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM002.FY0FMPRF cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID INVENTORY SEGMENT CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.PC2INSEG > " ") /* If spec entered*/
    PC2REC.XGPCD = FY0FM002.XGPCD;
    PC2REC.PC2INSEG = FY0FM002.PC2INSEG;
    FY0FS29();
    if (SQLCA.VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(77); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
      set FY0FM002.PC2INSEG cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID QUALITY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XQACD > " ") /* If quality entered*/
    if (FY0FM002.XQACD in XQATBL.XQACD)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(76); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
      set FY0FM002.XQACD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON YEAR*/
   /* ------------------------------------------------------------*/

  FY0FW01.XSNYR = 0; /* Initialize working storage season*/
   /* --------- Y2K OUT BEGIN -----------*/
   /* IF FY0FM002.FY0FMSYR GT 0;       /* If season year entered*/
    /* MOVE 19 TO FY0FW01.FY0FWSCC;   /* Set up century*/
   /* --------- Y2K OUT END -------------*/

   /* --------- Y2K IN BEGIN ------------*/
  if (FY0FM002.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    /* next sentence*/
  else
    if (FY0FM002.FY0FMSYR > 60) /* Determine century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    /* --------- Y2K IN END --------------*/
    FY0FW01.FY0FWSYY = FY0FM002.FY0FMSYR; /* Set up year*/
    FY0FW01.XSNYR = FY0FW01.FY0FWSNY; /* Move to season year*/

    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM002.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FW01.XSNYR == YSNTBL.XSNYR[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWSW1 = "Y";
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(75); /* Error message and highlight*/
          FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
          set FY0FM002.FY0FMSYR cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XSECD > " ") /* If season code entered*/
    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM002.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FM002.XSECD == YSNTBL.XSECD[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(74); /* Error message and highlight*/
          FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
          set FY0FM002.XSECD cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          FY0FW01.FY0FWSW1 = "Y";
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end



   /* ------------------------------------------------------------*/
   /* VALIDATE THE STYLE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.SY1STNBR > " ") /* If style entered*/
    PG2REC.XGPCD = FY0FM002.XGPCD;
    PG2REC.SY1STNBR = FY0FM002.SY1STNBR;
    XSPG201(); /* Open cursor*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM002.SY1SSTNM = PG2REC.SY1SSTNM;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM002.SY1SSTNM = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
        set FY0FM002.SY1STNBR cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XGPCD > " ") /* If gpc code entered*/
    if (FY0FM002.XGPCD in XGPTBL.XGPCD)
      FY0FM002.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      COMMAREA.XGPCD = FY0FM002.XGPCD; /* Save in commarea*/
    else
      FY0FM002.XGPDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0FM002.XXXPRCNM = "FY0F152"; /* Process name*/
      set FY0FM002.XGPCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM002.XGPDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(101); /* Error message and highlight*/
    FY0FM002.XXXPRCNM = "FY0F152"; /* Process name*/
    set FY0FM002.XGPCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY1FCTYC > " ") /* If factory entered*/
    FY1REC.XGPCD = FY0FM002.XGPCD;
    FY1REC.FY1FCTYC = FY0FM002.FY1FCTYC;
    FY0FS01(); /* Select unique factory*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM002.FY1FCTSN = FY1REC.FY1FCTSN;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM002.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(33); /* Error message and highlight*/
        FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
        set FY0FM002.FY1FCTYC cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  else
    FY0FM002.FY1FCTSN = " ";
    FY0FW01.FY1FCTSN = " ";
  end

   /* ------------------------------------------------------------*/
   /* VERIFY THAT A FACTORY CODE OR A STYLE HAVE BEEN ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY1FCTYC == " " /* If factory NOT entered*/
   && FY0FM002.SY1STNBR == " ") /* and style NOT entered*/
    FY0FM002.FY1FCTSN = " "; /* Clear factory name*/
    FY0FM002.SY1SSTNM = " "; /* Clear style short name*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(87); /* Error message and highlight*/
    FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
    set FY0FM002.FY1FCTYC cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE IN PRODUCTION FLAG HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY0FMINP != FY0FW01.FY3INPFL) /* In prod flag changed*/
    FY0FW01.FY3INPFL = FY0FM002.FY0FMINP; /* save flag*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE IN PRIORITY FACTORY FLAG HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY0FMPRF != FY0FW01.FY3SFYFL) /* Flag changed*/
    FY0FW01.FY3SFYFL = FY0FM002.FY0FMPRF; /* save flag*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE PKG TYPE CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XPGCD != FY0FW01.XPGCD) /* Pkg type chged*/
    FY0FW01.XPGCD = FY0FM002.XPGCD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE DIM CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XDMCD != FY0FW01.XDMCD) /* Dim chged*/
    FY0FW01.XDMCD = FY0FM002.XDMCD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE COLOR IS SPACES*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.SY2CLRID == " ") /* Color = spaces*/
    FY0FM002.SY2CLRAB = " ";
    FY0FW01.SY2CLRAB = " ";
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE COLOR HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.SY2CLRID != FY0FW01.SY2CLRID) /* Color chged*/
    FY0FW01.SY2CLRID = FY0FM002.SY2CLRID; /* save code*/
    FY0FW01.SY2CLRAB = FY0FM002.SY2CLRAB; /* save desc.*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE SPEC HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.PC2INSEG != FY0FW01.PC2INSEG) /* Spec chged*/
    FY0FW01.PC2INSEG = FY0FM002.PC2INSEG; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE QUAL HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XQACD != FY0FW01.XQACD) /* Qual chged*/
    FY0FW01.XQACD = FY0FM002.XQACD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE SEASON YEAR HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY0FMSYR != FY0FW01.FY0FWSYR) /* Season year chged*/
    FY0FW01.FY0FWSYR = FY0FM002.FY0FMSYR; /* save year*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE SEASON CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XSECD != FY0FW01.XSECD) /* Season code chged*/
    FY0FW01.XSECD = FY0FM002.XSECD; /* save code*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE STYLE IS SPACES*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.SY1STNBR == " ") /* Style code = spaces*/
    FY0FM002.SY2CLRAB = " "; /* Clear color desc.*/
    FY0FW01.SY2CLRAB = " ";
    FY0FM002.SY1SSTNM = " "; /* Clear style desc.*/
    FY0FW01.SY1SSTNM = " ";
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE STYLE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.SY1STNBR != FY0FW01.SY1STNBR) /* Style code chged*/
    FY0FW01.SY1STNBR = FY0FM002.SY1STNBR; /* save code*/
    FY0FW01.SY1SSTNM = FY0FM002.SY1SSTNM; /* save name*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE GPC CODE HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.XGPCD != FY0FW01.XGPCD) /* gpc chged*/
    FY0FW01.XGPCD = FY0FM002.XGPCD; /* save code*/
    FY0FW01.XGPDESC = FY0FM002.XGPDESC; /* save description*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF THE FACTORY HAS CHANGED*/
   /* ------------------------------------------------------------*/

  if (FY0FM002.FY1FCTYC != FY0FW01.FY1FCTYC) /* Factory code chged*/
    FY0FW01.FY1FCTYC = FY0FM002.FY1FCTYC; /* save code*/
    FY0FW01.FY1FCTSN = FY0FM002.FY1FCTSN; /* save name*/
    if (FY0FW01.FY0FWPSW == "N") /* No problem*/
      FY0FW01.FY0FWSWR = "Y"; /* request for data switch*/
    end
  end


  FY0FW01.FY0FWSFL = "N"; /* Initialize selection flag*/

  if (FY0FW01.FY0FWPSW == "N" /* No problem*/
   && FY0FW01.FY0FWSWR == "N") /* Request for data not set*/

    FY0FW01.FY0FWIXM = 11; /* Initialize index*/

    while (FY0FW01.FY0FWIXM > 0) /* Until end of lines*/
      if (FY0FM002.FY0FMSEL[FY0FWIXM] != " ") /* If selection not blank*/
        if (FY0FM002.FY0FMSEL[FY0FWIXM] == "S") /* Save the key*/
          FY0FW01.FY0FWSFL = "Y"; /* Initialize selection flag*/
          FY0FM002.FY0FMSEL[FY0FWIXM] = FY0FM002.FY0FMSEL[FY0FWIXM];
          if (FY0FW02.XXXSTAT[FY0FWIXM] == "I" /* Status is inactive*/
           && converseVar.eventKey not enter)  /* Inquiry not requested*/
            converseLib.validationFailed(67); /* Error message and highlight*/
            FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
            FY0FM002.FY0FMSEL[FY0FWIXM] = " ";
            set FY0FM002.FY0FMSEL[FY0FWIXM] cursor, modified, bold;
            FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          end
        else
          converseLib.validationFailed(13); /* Error message and highlight*/
          FY0FM002.XXXPRCNM = "FY0F252"; /* Process name*/
          set FY0FM002.FY0FMSEL[FY0FWIXM] cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM - 1; /* Decrement line index*/
    end


    if (converseVar.eventKey is pf14 /* PF14 was pressed*/
     && FY0FW01.FY0FWSFL == "N")     /* and selection was not made*/
      converseLib.validationFailed(53); /* error message*/
    end


    if (converseVar.eventKey is pf15 /* PF15 was pressed*/
     && FY0FW01.FY0FWSFL == "N")     /* and selection was not made*/
      converseLib.validationFailed(53); /* error message*/
    end

  end


end // end FY0F252

// Process valid input request
Function FY0F260()
   /* ------------------------------------------------------------*/
   /* If a scroll request, adjust temporary storage page number.*/
   /* Update any changed data.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message set up*/
    if (converseVar.eventKey is pf7) /* Scroll back requested*/
      FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP - 1; /* Decrement page number*/
    else
      if (converseVar.eventKey is pf8) /* Scroll forward requested*/
        FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP + 1; /* Increment page number*/
      else
        if (converseVar.eventKey is pf10) /* PF10 was pressed*/
          FY0FW01.FY0FWMAP = "1"; /* Select Map #2*/
          converseLib.validationFailed(0); /* Clear error message field*/
        else
          if (converseVar.eventKey is pf13) /* PF13 was pressed*/
            FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
            FY0FW01.FY0FWFSW = "A"; /* Select add function*/
            converseLib.validationFailed(0); /* Clear error message field*/
          else
            if (converseVar.eventKey is pf14 /* PF14 was pressed*/
             && FY0FW01.FY0FWSFL == "Y")     /* and selection was made*/
              move FY0FM002.FY0FMSEL to FY0FM001.FY0FMSEL[1] for all;
              move " " to FY0FM002.FY0FMSEL[1] for all;
              FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
              FY0FW01.FY0FWFSW = "C"; /* Select change function*/
              converseLib.validationFailed(0); /* Clear error message field*/
            else
              if (converseVar.eventKey is pf15 /* PF15 was pressed*/
               && FY0FW01.FY0FWSFL == "Y")     /* and selection was made*/
                move FY0FM002.FY0FMSEL to FY0FM001.FY0FMSEL[1] for all;
                move " " to FY0FM002.FY0FMSEL[1] for all;
                FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
                FY0FW01.FY0FWFSW = "D"; /* Select change function*/
                converseLib.validationFailed(0); /* Clear error message field*/
              else
                if (converseVar.eventKey is enter /* enter was pressed*/
                 && FY0FW01.FY0FWSFL == "Y")      /* and selection was made*/
                  move FY0FM002.FY0FMSEL to FY0FM001.FY0FMSEL[1] for all;
                  move " " to FY0FM002.FY0FMSEL[1] for all;
                  FY0FW01.FY0FWMAP = "3"; /* Select Map #3*/
                  FY0FW01.FY0FWFSW = "I"; /* Select inquiry function*/
                  converseLib.validationFailed(0); /* Clear error message field*/
                end
              end
            end
          end
        end
      end
    end
  end


end // end FY0F260

// Factory/Style maint. add map
Function FY0F300()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FY0F310(); /* Format and display the map*/

  FY0F320(); /* Check attention identifier*/

  FY0F330(); /* Reset fields to normal intensity*/

  FY0F340(); /* Verify the entered data*/

  FY0F350(); /* Process valid input request*/


end // end FY0F300

// Format and display the map
Function FY0F310()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0FM003.FY0FMFNC = "ADD  "; /* Set ADD title to map*/
    FY0FM003.FY0FMUAC = "N"; /* Move default values to map*/
    if (FY0FW01.XGPCD == "03")
      FY0FM003.SY2CLRID = " ";
    else
      FY0FM003.SY2CLRID = "00";
    end
    FY0FM003.SY2CLRAB = " ";
    FY0FM003.FY3INPFL = "Y";
    FY0FM003.FY3SFYFL = "N";
    FY0FM003.XDMCD = "00";
    if (FY0FM003.XDMCD in XDMTBL.XDMCD)
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    end
    FY0FM003.PC2INSEG = "000";
    FY0FM003.XQACD = "01";
    if (FY0FM003.XQACD in XQATBL.XQACD)
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    end
    FY0FM003.XPGCD = "00";
    if (FY0FM003.XPGCD in XPGTBL.XPGCD)
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    end

    if (FY0FW01.FY1FCTYC == " ")
      set FY0FM003.FY1FCTYC cursor;
    else
      FY0FM003.FY1FCTYC = FY0FW01.FY1FCTYC; /* Move values to map*/
      FY0FM003.FY1FCTSN = FY0FW01.FY1FCTSN;
    end

    if (FY0FW01.XGPCD == " ")
      set FY0FM003.XGPCD cursor; /* Set cursor here*/
    else
      FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move values to map*/
      FY0FM003.XGPDESC = FY0FW01.XGPDESC;
    end

    if (FY0FM003.XGPCD == "02")
      FY0FM003.FY3PRMIN = 0; /* Set capactiy defaults*/
      FY0FM003.FY3PRTGT = 100000;
      FY0FM003.FY3PRCAP = 200000;
    end
  end

  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  set FY0FM003.XUMCD skip; /* Protect unit of measure*/
  if (FY0FM003.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end

  if (FY0FW01.FY0FWPSW == "Y") /* error message to display*/
    set FY0FM003 alarm; /* Indicate sound alarm*/
  end

  if (COMMAREA.CAILVL[1] != "Y") /* If FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible; /* Darken*/
    set FY0FM003.FY0FMPIN skip, invisible; /* Darken*/
  end

  if (FY0FW01.FY0FWMFL == "Y") /* If add was successful*/
    converseLib.validationFailed(1); /* display a message*/
    FY0FM003.XXXPRCNM = "FY0F310"; /* Process name*/
    FY0FW01.FY0FWMFL = "N"; /* Reset message flag*/
  end

  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Reset problem switch*/

  if (converseVar.eventKey is enter)
    FY0F311(); /* Check for ? inquiry by user*/
  end

end // end FY0F310

// Check for ? inquiry by user
Function FY0F311()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD == "?" /* if any ? entered*/
   || FY0FM003.XSECD == "?" 
   || FY0FM003.XQACD == "?" 
   || FY0FM003.XDMCD == "?" 
   || FY0FM003.XPGCD == "?")

    if (FY0FM003.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0FM003.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XGPCD = " "; /* clear fields*/
        FY0FM003.XGPDESC = " ";
      end
    end


    if (FY0FM003.XSECD == "?") /* if ? in season code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SEASON    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYSN01(); /* perform season code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XSECD = YSNTBL.XSECD[XX0XWPIX]; /* move code*/
        FY0FW01.FY0FWSNY = YSNTBL.XSNYR[XX0XWPIX];
        FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY; /* move year*/
      else
        FY0FM003.XSECD = " "; /* clear fields*/
        FY0FM003.FY0FMSYR = 0;
      end
    end

    if (FY0FM003.XQACD == "?") /* if ? in quality code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                QUALITY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXQA01(); /* perform quality code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
        FY0FM003.XQADESC = XQATBL.XQADESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XQADESC = " "; /* move name*/
        FY0FM003.XQACD = " "; /* clear fields*/
      end
    end


    if (FY0FM003.XDMCD == "?") /* if ? in dimension code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "          DIMENSION       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXDM01(); /* perform dimension code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* move code*/
        FY0FM003.XDMDESC = XDMTBL.XDMDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XDMCD = " "; /* clear fields*/
        FY0FM003.XDMDESC = " "; /* move name*/
      end
    end


    if (FY0FM003.XPGCD == "?") /* if ? in package type field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        PACKAGE TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXPG01(); /* perform package type window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XPGCD = XPGTBL.XPGCD[XX0XWPIX]; /* move code*/
        FY0FM003.XPGDESC = XPGTBL.XPGDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XPGCD = " "; /* clear fields*/
        FY0FM003.XPGDESC = " "; /* move name*/
      end
    end


    converseLib.clearScreen();
     /* restore the original map*/

  end


end // end FY0F311

// Check attention identifier
Function FY0F320()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, modified, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F320"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    FY0FW01.SY1STNBR = " ";
    FY0FM001.SY1STNBR = " ";
    FY0FW01.SY1SSTNM = " ";
    FY0FM001.SY1SSTNM = " ";
    FY0FW01.SY2CLRID = " ";
    FY0FM001.SY2CLRID = " ";
    FY0FW01.SY2CLRAB = " ";
    FY0FM001.SY2CLRAB = " ";
    FY0FM001.XQACD = FY0FW01.XQACD;
    FY0FM001.XDMCD = FY0FW01.XDMCD;
    FY0FM001.PC2INSEG = FY0FW01.PC2INSEG;
    FY0FM001.XPGCD = FY0FW01.XPGCD;
    FY0FW01.XSECD = " ";
    FY0FM001.XSECD = " ";
    FY0FW01.XSNYR = 0;
    FY0FW01.FY0FWSNY = 0;
    FY0FW01.FY0FWSYR = 0;
    FY0FM001.FY0FMSYR = 0;
    if (FY0FW01.XGPCD > " "
     && FY0FW01.FY1FCTYC > " ")
      FY0FM001.XGPCD = FY0FM003.XGPCD; /* Set up map 1 data*/
      FY0FM001.FY1FCTYC = FY0FM003.FY1FCTYC;
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data to yes*/
    else
      FY0FS02(); /* Purge temp storage*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data to no*/
    end
    FY0FW01.FY0FWLSF = "Y"; /* Set list screen flag to yes*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F320"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0A"; /* Exit to Factory Menu*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F320"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Exit to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Exit to FOB by eff date*/
    end
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F320"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Exit to Factory*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F320"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/
    FY0FM003.XXXPRCNM = "FY0F320"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F320

// Reset highlighted fields
Function FY0F330()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory priority flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F330

// Validate any input data
Function FY0F340()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "N"; /* Initialize data entered flag*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F340"; /* Process name*/
    exit stack;
  end

  if (converseVar.eventKey is enter /* If ENTER was pressed*/
   && FY0FM003.SY1STNBR == " "      
   && FY0FM003.SY1SSTNM == " "      
   && FY0FM003.SY2CLRID == " "      
   && FY0FM003.SY2CLRAB == " "      
   && FY0FM003.FY0FMMFG == 0        
   && FY0FM003.FY0FMFAB == 0        
   && FY0FM003.FY3PRTGT == 0        
   && FY0FM003.FY0FMSTD == 0        
   && FY0FM003.FY3PRCAP == 0        
   && FY0FM003.FY0FMSPC == 0        
   && FY0FM003.FY3PRMIN == 0        
   && FY0FM003.FY0FMSTC == 0        
   && FY0FM003.FY0FMLST == 0        
   && FY0FM003.FY3FPRTY == 0        
   && FY0FM003.FY2MFGPC == 0)      
    exit stack; /* Exit to redisplay map*/
  else
    FY0F341(); /* Validate input data*/
  end


end // end FY0F340

// Validate any input data
Function FY0F341()
   /* -------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "Y"; /* Data has been entered*/

   /* ------------------------------------------------------------*/
   /* VALIDATE THE UPDATE ALL COLORS FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY0FMUAC == "Y" /* must equal 'y' or 'n'*/
   || FY0FM003.FY0FMUAC == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.FY0FMUAC cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE IN PRODUCTION FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY3INPFL == "Y" /* must equal 'y' or 'n'*/
   || FY0FM003.FY3INPFL == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.FY3INPFL cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY STYLE PRIORITY FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY3SFYFL == "Y" /* must equal 'y' or 'n'*/
   || FY0FM003.FY3SFYFL == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.FY3SFYFL cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE MANUFACTURING PERCENT*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY2MFGPC >= 0 /* must equal be greater than or equal*/
   /* to 0*/
   && FY0FM003.FY2MFGPC <= 100) /* and less than or equal to 100*/

    if (FY0FM003.XGPCD == "03") /* Apparel only*/
      FY0FS99(); /* Accumulate mfg. percent*/
    end

  else
    converseLib.validationFailed(56); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.FY2MFGPC cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON CODE/YEAR*/
   /* ------------------------------------------------------------*/

  FY0FW01.XSNYR = 0; /* Used in ADD ROW in FY0F350*/

  if (FY0FM003.XGPCD == "03" /* If gpc is apparel*/
   || FY0FM003.XSECD > " ")  /* or season code entered*/
    /* --------- Y2K OUT BEGIN -----------*/
    /* OR FY0FM003.FY0FMSYR GT 0;     /* or season entered*/
    /* MOVE 19 TO FY0FW01.FY0FWSCC;   /* Set up century*/
    /* --------- Y2K OUT END -------------*/

    /* --------- Y2K IN BEGIN -----------*/
    if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    /* --------- Y2K IN END --------------*/
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
    FY0FW01.XSNYR = FY0FW01.FY0FWSNY;
    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FM003.XSECD == YSNTBL.XSECD[sysVar.arrayIndex]
       && FY0FW01.XSNYR == YSNTBL.XSNYR[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWSW1 = "Y";
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(90); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
          set FY0FM003.XSECD cursor, modified, bold;
          set FY0FM003.FY0FMSYR modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID PACKAGE TYPE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XPGCD > " ") /* If package type entered*/
    if (FY0FM003.XPGCD in XPGTBL.XPGCD
     && XPGTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    else
      FY0FM003.XPGDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(79); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
      set FY0FM003.XPGCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XPGDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(79); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.XPGCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID INVENTORY SEGMENT CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.PC2INSEG > " ") /* If spec entered*/
    PC2REC.XGPCD = FY0FM003.XGPCD;
    PC2REC.PC2INSEG = FY0FM003.PC2INSEG;
    FY0FS29();
    if (SQLCA.VAGen_SQLCODE == 0
     && PC2REC.XXXSTAT == "A")
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(77); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
      set FY0FM003.PC2INSEG cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(77); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.PC2INSEG cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID QUALITY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XQACD > " ") /* If quality entered*/
    if (FY0FM003.XQACD in XQATBL.XQACD
     && XQATBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    else
      FY0FM003.XQADESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(76); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
      set FY0FM003.XQACD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XQADESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(76); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.XQACD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID DIMENSION*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XDMCD > " ") /* If dimension entered*/
    if (FY0FM003.XDMCD in XDMTBL.XDMCD
     && XDMTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    else
      FY0FM003.XDMDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(78); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
      set FY0FM003.XDMCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XDMDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(78); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.XDMCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT A COLOR IS ENTERED IF ALL COLORS FLAG = 'N'*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY0FMUAC == "N" /* all colors flag = 'n'*/
   && FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
    FY0FW01.SY2CLRAB = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(73); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.SY2CLRID cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT A STYLE IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR == " ") /* style not entered*/
    FY0FW01.SY1SSTNM = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(73); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.SY1STNBR cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDTE STYLE/COLOR COMBINATION*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR > " " /* If style entered*/
   && FY0FM003.SY2CLRID > " ") /* and color entered*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    PG2REC.SY2CLRID = FY0FM003.SY2CLRID;
    PG2REC.XDMCD = FY0FM003.XDMCD;
    XSPG202(); /* Select unique color*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
      FY0FW01.XUMCD = PG2REC.XUMCD;
      FY0FM003.XUMCD = PG2REC.XUMCD;

      if (FY0FM003.FY0FMUAC == "N") /* If update all colors is no*/
         /* Check the life cycle*/
        if (XX0XW01.XX0XWDAT >= PG2REC.SY2CEDT1) /* Life cyc dt current*/
          if (PG2REC.XLCCD1 == "05" /* Life cycle is active*/
           || PG2REC.XLCCD1 == "10" 
           || PG2REC.XLCCD1 == "20")
             /* next sentence*/
          else
            FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
            converseLib.validationFailed(120); /* Error message*/
            FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
            set FY0FM003.SY2CLRID bold;
            set FY0FM003.SY1STNBR cursor, modified, bold;
            FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          end
        else
          if (XX0XW01.XX0XWDAT >= PG2REC.SY2CEDT2) /* Life cyc dt current*/
            if (PG2REC.XLCCD2 == "05" /* Life cycle is active*/
             || PG2REC.XLCCD2 == "10" 
             || PG2REC.XLCCD2 == "20")
               /* next sentence*/
            else
              FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
              converseLib.validationFailed(120); /* Error message*/
              FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
              set FY0FM003.SY2CLRID bold;
              set FY0FM003.SY1STNBR cursor, modified, bold;
              FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
            end
          else
            if (XX0XW01.XX0XWDAT >= PG2REC.SY2CEDT3) /* Life cyc dt current*/
              if (PG2REC.XLCCD3 == "05" /* Life cycle is active*/
               || PG2REC.XLCCD3 == "10" 
               || PG2REC.XLCCD3 == "20")
                 /* next sentence*/
              else
                FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
                converseLib.validationFailed(120); /* Error message*/
                FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
                set FY0FM003.SY2CLRID bold;
                set FY0FM003.SY1STNBR cursor, modified, bold;
                FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
              end
            else
              if (XX0XW01.XX0XWDAT >= PG2REC.SY2CEDT4)
                                   /* Life cyc dt current*/
                if (PG2REC.XLCCD4 == "05" /* Life cycle is active*/
                 || PG2REC.XLCCD4 == "10" 
                 || PG2REC.XLCCD4 == "20")
                   /* next sentence*/
                else
                  FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
                  converseLib.validationFailed(120); /* Error message*/
                  FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
                  set FY0FM003.SY2CLRID bold;
                  set FY0FM003.SY1STNBR cursor, modified, bold;
                  FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
                end
              else
                FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
                converseLib.validationFailed(120); /* Error message*/
                FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
                set FY0FM003.SY2CLRID bold;
                set FY0FM003.SY1STNBR cursor, modified, bold;
                FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
              end /* Life cycle 4*/
            end /* Life cycle 3*/
          end /* Life cycle 2*/
        end /* Life cycle 1*/
      end /* End update all colors check*/
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM003.SY1SSTNM = " "; /* Clear description*/
        FY0FM003.SY2CLRAB = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, modified, bold;
        set FY0FM003.SY2CLRID bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STYLE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR > " " /* If style entered*/
   && FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    XSPG201(); /* Open cursor*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FW01.XUMCD = PG2REC.XUMCD;
      FY0FM003.XUMCD = PG2REC.XUMCD;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM003.SY1SSTNM = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY1FCTYC > " ") /* If factory entered*/
    FY1REC.XGPCD = FY0FM003.XGPCD;
    FY1REC.FY1FCTYC = FY0FM003.FY1FCTYC;
    FY0FS01(); /* Select unique factory*/
    if (SQLCA.VAGen_SQLCODE == 0)
      if (FY1REC.XXXSTAT == "A")
        FY0FW01.FY1FCTYC = FY0FM003.FY1FCTYC;
        FY0FW01.FY1FCTSN = FY1REC.FY1FCTSN;
        FY0FM003.FY1FCTSN = FY1REC.FY1FCTSN;
      else
        FY0FW01.FY1FCTYC = " ";
        FY0FW01.FY1FCTSN = " "; /* Clear description*/
        FY0FM003.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(67); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
        set FY0FM003.FY1FCTYC cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FW01.FY1FCTYC = " ";
        FY0FW01.FY1FCTSN = " "; /* Clear description*/
        FY0FM003.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(33); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
        set FY0FM003.FY1FCTYC cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  else
    FY0FW01.FY1FCTYC = " ";
    FY0FW01.FY1FCTSN = " "; /* Clear description*/
    FY0FM003.FY1FCTSN = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(33); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.FY1FCTYC cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD > " ") /* If gpc code entered*/
    if (FY0FM003.XGPCD in XGPTBL.XGPCD
     && XGPTBL.XXXSTAT[sysVar.arrayIndex] == "A")
      FY0FW01.XGPCD = FY0FM003.XGPCD;
      FY0FW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      COMMAREA.XGPCD = FY0FM003.XGPCD; /* Save in commarea*/
    else
      FY0FW01.XGPCD = " ";
      FY0FW01.XGPDESC = " ";
      FY0FM003.XGPDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
      set FY0FM003.XGPCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FW01.XGPCD = " ";
    FY0FW01.XGPDESC = " ";
    FY0FM003.XGPDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(101); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
    set FY0FM003.XGPCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end


   /* ------------------------------------------------------------*/
   /* IF ALL COLORS FLAG EQUALS 'Y', TABLE ALL THE COLORS*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* If no errors*/
   && FY0FM003.FY0FMUAC == "Y") /* and all colors flag = 'y'*/
    XX0XS01(); /* Get current date*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    PG2REC.SY2CLRID = " ";
    PG2REC.XDMCD = FY0FM003.XDMCD;
    FY0FS17(); /* Open style/color cursor*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FS18(); /* Fetch style/color row*/
      FY0FW01.FY0FWIDX = 1;
      FY0FW01.FY0FWSW1 = "N";
      move " " to FY0FW01.FY0FWGCL[1] for all; /* Init color array*/
      while (FY0FW01.FY0FWPSW == "N"
       && FY0FW01.FY0FWIDX <= 100
       && FY0FW01.FY0FWSW1 == "N")

        if (PG2REC.PG-CURR-XLC-CD == "05" /* Life cycle is active*/
         || PG2REC.PG-CURR-XLC-CD == "10" 
         || PG2REC.PG-CURR-XLC-CD == "20")

          if (FY0FM003.XGPCD == "03") /* If Apparel*/
            if (PG2REC.XSECD == FY0FM003.XSECD /* Same season*/
             && PG2REC.XSNYR == FY0FW01.XSNYR) /* Same season year*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end

            if (PG2REC.XSECD == "CF"
             && FY0FM003.XSECD == "FA"
             && PG2REC.XSNYR == FY0FW01.XSNYR) /* Same season year*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end

            if (PG2REC.XSECD == "CU"
             && FY0FM003.XSECD == "SU"
             && PG2REC.XSNYR == FY0FW01.XSNYR) /* Same season year*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end

            if (PG2REC.XSECD == "CS"
             && FY0FM003.XSECD == "SP"
             && PG2REC.XSNYR == FY0FW01.XSNYR) /* Same season year*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end

            if (PG2REC.XSECD == "CH"
             && FY0FM003.XSECD == "HO"
             && PG2REC.XSNYR == FY0FW01.XSNYR) /* Same season year*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end

          else

            if (PG2REC.PG-CURR-XLC-CD == "05"
             || PG2REC.PG-CURR-XLC-CD == "10") /* Life cycle is active*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end

          end
        end
        FY0FS18(); /* Fetch style/color row*/
      end /* End of while loop*/
    end /* Sqlcode check on open cursor*/
    FY0FS19(); /* Close style/color cursor*/
  end


   /* ------------------------------------------------------------*/
   /* CHECK TO SEE IF ANY ACTIVE LIFE CYCLES WERE FOUND*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* If no errors*/
   && FY0FM003.FY0FMUAC == "Y") /* and all colors flag = 'y'*/
    if (FY0FW01.FY0FWCLR[1] == " ") /* No colors were loaded*/
      FY0FW01.FY0FWPSW = "Y"; /* set error switch*/
      converseLib.validationFailed(128); /* Error message*/
      FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
      set FY0FM003.SY1STNBR cursor, bold; /* Highlight field*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* IF NO ERRORS, INSURE THAT ONLY ONE STYLE ROW HAS THE STYLE*/
   /* PRIORITY FLAG SET TO "Y"*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No errors*/
   && FY0FM003.FY3SFYFL == "Y") /* and prty flag is yes*/
    FY3REC.XGPCD = FY0FM003.XGPCD;
    FY3REC.FY1FCTYC = "*"; /* Wild card the factory*/
    FY3REC.SY1STNBR = FY0FM003.SY1STNBR;
    FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
    FY3REC.XDMCD = FY0FM003.XDMCD;
    FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
    FY3REC.XPGCD = FY0FM003.XPGCD;
    FY3REC.XUMCD = FY0FW01.XUMCD;
    FY3REC.XSECD = FY0FM003.XSECD;
    FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
    FY3REC.XXXSTAT = "A";

    if (FY0FM003.XGPCD == "03" /* If gpc is apparel*/
     || FY0FM003.XSECD > " ")  /* or season code entered*/
      /* ---------- Y2K OUT BEGIN -----------*/
      /* OR FY0FM003.FY0FMSYR GT 0;   /* or season entered*/
      /* MOVE 19 TO FY0FW01.FY0FWSCC; /* Set up century*/
      /* ---------- Y2K OUT END -------------*/

      /* --------- Y2K IN BEGIN ------------*/
      if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
        FY0FW01.FY0FWSCC = 19;
      else
        FY0FW01.FY0FWSCC = 20;
      end
      /* --------- Y2K IN END --------------*/
      FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
      FY3REC.XSNYR = FY0FW01.FY0FWSNY;
    else
      FY3REC.XSNYR = 0;
    end

    FY0FS05(); /* Open fy3rec cursor*/
    FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/

    FY0FS06(); /* Fetch row*/
    while (FY0FW01.FY0FWSW2 == "N" /* While not end of file*/
     && FY0FW01.FY0FWPSW == "N") /* and no errors*/
      if (FY3REC.FY3SFYFL == "Y") /* Prty flag eq 'y'*/
        FY0FW01.FY0FWPSW = "Y"; /* set error switch*/
        converseLib.validationFailed(127); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F341"; /* Process name*/
        set FY0FM003.FY3SFYFL cursor, bold; /* Highlight field*/
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      else
        FY0FS06(); /* Fetch row*/
      end
    end

    FY0FS12(); /* Close cursor*/

  end

end // end FY0F341

// Process valid input request
Function FY0F350()
   /* ------------------------------------------------------------*/
   /* Verify that no table row exists for the style/color*/
   /* If found then display message that this row exists in*/
     /* either active or inactive status.*/
   /* If not found then add the row.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWDEF == "Y" /* and data was entered*/
   && converseVar.validationMsgNum == 0) /* and no errors*/

    set FY2REC empty; /* clear records*/
    set FY3REC empty;
    XX0XS01(); /* Obtain current time*/
    FY2REC.ZZZSDT = XX0XW01.XX0XWDAT;
    FY2REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
    FY2REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
    FY2REC.ZZZCHGCT = 0;
    FY2REC.XGPCD = FY0FM003.XGPCD; /* gpc code*/
    FY3REC.XGPCD = FY0FM003.XGPCD; /* gpc code*/
    FY2REC.FY1FCTYC = FY0FM003.FY1FCTYC; /* factory code*/
    FY3REC.FY1FCTYC = FY0FM003.FY1FCTYC; /* factory code*/
    FY2REC.SY1STNBR = FY0FM003.SY1STNBR; /* style*/
    FY3REC.SY1STNBR = FY0FM003.SY1STNBR; /* style*/
    FY2REC.XSECD = FY0FM003.XSECD; /* season code*/
    FY3REC.XSECD = FY0FM003.XSECD; /* season code*/
    FY2REC.XXXSTAT = "A"; /* status*/
    FY3REC.XXXSTAT = "A"; /* status*/
    FY2REC.XSNYR = FY0FW01.XSNYR; /* Calculated in FY0F341*/
    FY3REC.XSNYR = FY0FW01.XSNYR;
    FY2REC.ZFC-CRCY-CD = " ";
    FY0FS20(); /* Select unique factory/style row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* If found, set up map with new data*/
      FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
      FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
      FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
      FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
      FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
      FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
      FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
    else
      if (SQLCA.VAGen_SQLCODE == 100) /* If not found, add it*/
        FY2REC.FY1MFGDY = FY0FM003.FY0FMMFG;
        FY2REC.FY1FABDY = FY0FM003.FY0FMFAB;
        FY2REC.FY1LSTDY = FY0FM003.FY0FMLST;
        FY2REC.FY1STDC = FY0FM003.FY0FMSTD;
        FY2REC.FY1SPCLC = FY0FM003.FY0FMSPC;
        FY2REC.FY1STCDY = FY0FM003.FY0FMSTC;
        FY2REC.FY2MFGPC = FY0FM003.FY2MFGPC;
        FY0FS21(); /* Add factory/style row*/
      end
    end

    if (FY0FW01.FY0FWPSW == "N") /* No errors*/
      if (FY0FM003.FY0FMUAC == "Y") /* No errors*/
        FY0FW01.FY0FWIDX = 1;
        while (FY0FW01.FY0FWCLR[FY0FWIDX] > " "
         && FY0FW01.FY0FWPSW == "N")
          FY3REC.SY2CLRID = FY0FW01.FY0FWCLR[FY0FWIDX];
          FY3REC.XDMCD = FY0FM003.XDMCD;
          FY3REC.XQACD = FY0FM003.XQACD;
          FY3REC.XUMCD = FY0FW01.XUMCD;
          FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
          FY3REC.XPGCD = FY0FM003.XPGCD;
          FY0FS22();
                                   /* Select unique factory/style/color row*/
          if (SQLCA.VAGen_SQLCODE == 100) /* If not found, add it*/
            FY3REC.ZZZSDT = XX0XW01.XX0XWDAT;
            FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
            FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
            FY3REC.ZZZCHGCT = 0;
            FY3REC.FY3FPRTY = FY0FM003.FY3FPRTY;
            FY3REC.FY3PRTGT = FY0FM003.FY3PRTGT;
            FY3REC.FY3PRMIN = FY0FM003.FY3PRMIN;
            FY3REC.FY3PRCAP = FY0FM003.FY3PRCAP;
            FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
            FY3REC.FY3SFYFL = FY0FM003.FY3SFYFL;
            FY0FS23(); /* Add factory/style row*/
          end
          FY0FW01.FY0FWIDX = FY0FW01.FY0FWIDX + 1;
        end
      else
        FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
        FY3REC.XDMCD = FY0FM003.XDMCD;
        FY3REC.XQACD = FY0FM003.XQACD;
        FY3REC.XUMCD = FY0FW01.XUMCD;
        FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
        FY3REC.XPGCD = FY0FM003.XPGCD;
        FY0FS22();
                                   /* Select unique factory/style/color row*/
        if (SQLCA.VAGen_SQLCODE == 0) /* If found, set up error*/
          FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY; /* Set up data found*/
          FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
          FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
          FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
          FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
          FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
          converseLib.validationFailed(81);
          FY0FW01.FY0FWPSW = "Y"; /* set error flag*/
          set FY0FM003.SY1STNBR cursor, bold;
          set FY0FM003.SY2CLRID bold;
        else
          if (SQLCA.VAGen_SQLCODE == 100) /* If not found, add it*/
            FY3REC.ZZZSDT = XX0XW01.XX0XWDAT;
            FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
            FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
            FY3REC.ZZZCHGCT = 0;
            FY3REC.FY3FPRTY = FY0FM003.FY3FPRTY;
            FY3REC.FY3PRTGT = FY0FM003.FY3PRTGT;
            FY3REC.FY3PRMIN = FY0FM003.FY3PRMIN;
            FY3REC.FY3PRCAP = FY0FM003.FY3PRCAP;
            FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
            FY3REC.FY3SFYFL = FY0FM003.FY3SFYFL;
            FY0FS23(); /* Add factory/style row*/
          end
        end
      end
    end

    if (FY0FW01.FY0FWPSW == "N")
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit();
      FY0FW01.FY0FWSTY = FY0FM003.SY1STNBR; /* move style to save key*/
      FY0FW01.FY0FWCOL = FY0FM003.SY2CLRID; /* move color to save key*/
      FY0FW01.FY0FWSWR = "Y"; /* set request for data*/
      FY0FW01.FY0FWMFL = "Y"; /* set message flag*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end
  end


end // end FY0F350

// Factory/Style inquiry map
Function FY0F400()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    FY0F410(); /* Obtain the data to display*/
  end

  FY0F420(); /* Format and display the map*/

  FY0F430(); /* Check attention identifier*/

  FY0F440(); /* Reset fields to normal intensity*/

  FY0F450(); /* Verify the entered data*/

  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    FY0F460(); /* Process valid input request*/
  end

end // end FY0F400

// Obtain data to display
Function FY0F410()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on the map from selected*/
   /* row on the list screen.*/
   /* ------------------------------------------------------------*/

  set FY2REC empty;
  set FY3REC empty;
  set FY4REC empty;
  FY2REC.XGPCD = FY0FM001.XGPCD; /* Move in key fields*/
  FY2REC.FY1FCTYC = FY0FM001.FY1FCTYC;
  FY2REC.SY1STNBR = FY0FM001.FY0FMSTY[FY0FWIXM];
  FY2REC.XSECD = FY0FM001.FY0FMSNC[FY0FWIXM];
   /* ----------- Y2K OUT BEGIN ------------*/
   /* IF FY0FM001.FY0FMSNY(FY0FWIXM) GT 0;*/
   /* ----------- Y2K OUT END --------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM001.FY0FMSNY[FY0FWIXM];
    if (FY0FW01.FY0FWSYY < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end
   /* ----------- Y2K OUT BEGIN ------------*/
   /* ELSE;*/
    /* MOVE 0 TO FY2REC.XSNYR;*/
   /* END;*/
   /* ----------- Y2K OUT END --------------*/
  FY0FS20(); /* Select fy2rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(69);
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.CATOAP cursor; /* Set cursor to to application field*/
    return;
  end

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.SY2CLRID = FY0FM001.FY0FMCLR[FY0FWIXM];
  if (FY0FM001.FY0FMDIM[FY0FWIXM] == " ")
    FY3REC.XDMCD = "00";
  else
    FY3REC.XDMCD = FY0FM001.FY0FMDIM[FY0FWIXM];
  end
  if (FY0FM001.FY0FMQUA[FY0FWIXM] == " ")
    FY3REC.XQACD = "01";
  else
    FY3REC.XQACD = FY0FM001.FY0FMQUA[FY0FWIXM];
  end
  if (FY0FM001.FY0FMSPC[FY0FWIXM] == " ")
    FY3REC.PC2INSEG = "000";
  else
    FY3REC.PC2INSEG = FY0FM001.FY0FMSPC[FY0FWIXM];
  end
  if (FY0FM001.FY0FMPKG[FY0FWIXM] == " ")
    FY3REC.XPGCD = "00";
  else
    FY3REC.XPGCD = FY0FM001.FY0FMPKG[FY0FWIXM];
  end
  if (FY0FM001.FY0FMUOM[FY0FWIXM] == " ")
    FY3REC.XUMCD = "01";
  else
    FY3REC.XUMCD = FY0FM001.FY0FMUOM[FY0FWIXM];
  end
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;

  FY0FS22(); /* Select fy3rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(69);
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.CATOAP cursor; /* Set cursor to to application field*/
    return;
  end

  /* IF FY0FW01.XGPCD NE '02';         /* If not footwear*/
  /* EZERTN;*/
  /* END;*/

   /* Next get the scheduling FOB*/

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;
  FY0FW01.FY0FWFOB = 0; /* Zero out ws fob price*/
  FY0FW01.FY0FWPIN = " "; /* Clear out ws fob price ind.*/
  FY0FS07(); /* Select set of fy4rec rows*/
  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
    FY0FS08(); /* fetch fy4rec row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
      FY0F411(); /* determine FOB price*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
       && FY3REC.XQACD == "02")      /* Quality '02'*/
        FY0FS10(); /* Close set of fy4rec rows*/
        if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
          FY4REC.XQACD = "01";
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F411(); /* determine FOB price*/
              FY0F412(); /* Calculate b-grade percentage*/
            end
          end
        end
      end
    end
    FY0FS10(); /* Close set of fy4rec rows*/
  end


end // end FY0F410

// Determine fob price
Function FY0F411()
   /* *************************************************************/
                /* DETERMINE THE SCHEDULING FOB PRICE*/

   /* 1. Check to see if a confirmed price has been entered.*/
      /* If it has then obtain the gender age code from the*/
      /* the product file.  Then look up the scheduling fob*/
      /* size in the gender age table.  Then use this size*/
      /* to determine the price.*/
   /* 2. If a confirmed price has not been entered, check for a*/
      /* quoted.*/
   /* 3. If a quoted price has not been entered, check for a*/
      /* targeted.*/
   /* 4. If a no price has not been entered, use zero*/

   /* *************************************************************/

  FY0FW01.FY0FWSZI = 1; /* Init size index*/
  FY0FW01.FY0FWPRF = "N"; /* Init price found flag*/
  while (FY0FW01.FY0FWSZI <= 40
   && FY0FW01.FY0FWPRF == "N")
    if (FY4REC.FY4FOBPR[FY0FWSZI] > 0)
      FY0FW01.FY0FWPRF = "Y";
      FY0FW01.FY0FWFOB = FY4REC.FY4FOBPR[FY0FWSZI];
    else
      FY0FW01.FY0FWSZI = FY0FW01.FY0FWSZI + 1;
    end
  end

  FY0FW01.FY0FWPIN = " "; /* Price indicator*/

  if (FY0FW01.FY0FWPRF == "Y") /* If price was found*/
    FY0FW01.FY0FWPIN = "C"; /* Price indicator*/
    if (FY0FM003.XGPCD == "02")
      PG2REC.XGPCD = FY4REC.XGPCD;
      PG2REC.SY1STNBR = FY4REC.SY1STNBR;
      PG2REC.SY2CLRID = FY4REC.SY2CLRID;
      PG2REC.XDMCD = FY4REC.XDMCD;
      XSPG201(); /* Select style row*/
      if (SQLCA.VAGen_SQLCODE == 0)
        set PG6REC empty;
        PG6REC.XGACD = PG2REC.XGACD; /* Gender age code*/
        PG6REC.SY4SZSCL = PG2REC.SY4SZSCL; /* Size scale code*/
        FY0FS28(); /* Select unique dprodg.vgasiz01 row*/
        if (SQLCA.VAGen_SQLCODE == 0
         && PG6REC.PG6FOBSZ > 0) /* And a size was returned*/
          FY0FW01.FY0FWSZI = PG6REC.PG6FOBSZ; /* Save internal size id*/
          if (FY4REC.FY4FOBPR[FY0FWSZI] > 0)
            FY0FW01.FY0FWFOB = FY4REC.FY4FOBPR[FY0FWSZI];
          end
        end
      end
    end
  else
    if (FY4REC.FY4QTDPR > 0) /* If quoted price entered*/
      FY0FW01.FY0FWFOB = FY4REC.FY4QTDPR;
      FY0FW01.FY0FWPIN = "Q"; /* Price indicator*/
    else
      if (FY4REC.FY4TGTPR > 0) /* If targeted price entered*/
        FY0FW01.FY0FWFOB = FY4REC.FY4TGTPR;
        FY0FW01.FY0FWPIN = "T"; /* Price indicator*/
      end
    end
  end


end // end FY0F411

// salculate b-grade price
Function FY0F412()
   /* ------------------------------------------------------------*/
   /* Calculate the b-grade percentage using the inline price*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWFOB > 0)
    if (FY1REC.FY1BGDPC > 0)
      FY0FW01.FY0FWFOB = FY1REC.FY1BGDPC / 100 * FY0FW01.FY0FWFOB;
    else
      FY0FW01.FY0FWFOB = 0;
      FY0FW01.FY0FWPIN = " ";
    end
  end
end // end FY0F412

// Format and display the map
Function FY0F420()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No error*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0F421(); /* Move fields to map*/
    set FY0FM003.CATOAP cursor; /* Set cursor*/
  end

  FY0FM003.FY0FMFNC = "INQUIRY"; /* Move inquiry literal to map*/
  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move gpc code*/
  if (FY0FW01.XGPCD in XGPTBL.XGPCD)
    FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
  end
  set FY0FM003.XGPCD protect; /* Gpc code*/
  set FY0FM003.FY1FCTYC protect; /* Factory code*/
  set FY0FM003.SY1STNBR protect; /* Style code*/
  set FY0FM003.SY2CLRID protect; /* Color code*/
  set FY0FM003.XDMCD protect; /* Dimension code*/
  set FY0FM003.XQACD protect; /* Quality code*/
  set FY0FM003.PC2INSEG protect; /* Spec diff code*/
  set FY0FM003.XPGCD protect; /* Pkg typ code*/
  set FY0FM003.XSECD protect; /* Season code*/
  set FY0FM003.FY0FMSYR protect; /* Season year*/
  set FY0FM003.XUMCD protect; /* Unit of measure code*/
  set FY0FM003.FY0FMMFG protect; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY protect; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB protect; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB protect; /* Fabric days*/
  set FY0FM003.FY1FABDY protect; /* Default fabric days*/
  set FY0FM003.FY3PRTGT protect; /* Target price*/
  set FY0FM003.FY0FMSTD protect; /* Standard comp. days*/
  set FY0FM003.FY1STDC protect; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP protect; /* Maximum price*/
  set FY0FM003.FY0FMSPC protect; /* Special comp. days*/
  set FY0FM003.FY1SPCLC protect; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN protect; /* Minimum price*/
  set FY0FM003.FY0FMSTC protect; /* Stitch days*/
  set FY0FM003.FY1STCDY protect; /* Default stitch days*/
  set FY0FM003.FY0FMLST protect; /* Last days*/
  set FY0FM003.FY1LSTDY protect; /* Default last days*/
  set FY0FM003.FY3FPRTY protect; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC protect; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL protect; /* In production flag*/
  set FY0FM003.FY3SFYFL protect; /* Style/Factory prty flag*/
  set FY0FM003.FY0FMUAC protect; /* Update all colors flag*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0FM003 alarm;
  end

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (COMMAREA.CAILVL[1] != "Y") /* FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible;
    set FY0FM003.FY0FMPIN skip, invisible;
  end

  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/

end // end FY0F420

// Move fields to map
Function FY0F421()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY1REC.XGPCD = FY2REC.XGPCD;
  FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;

  FY0FS01(); /* Get factory default lead times*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.FY1MFGDY = FY1REC.FY1MFGDY;
    FY0FM003.FY1FABDY = FY1REC.FY1FABDY;
    FY0FM003.FY1LSTDY = FY1REC.FY1LSTDY;
    FY0FM003.FY1STDC = FY1REC.FY1STDC;
    FY0FM003.FY1SPCLC = FY1REC.FY1SPCLC;
    FY0FM003.FY1STCDY = FY1REC.FY1STCDY;
  end

  FY0FM003.FY1FCTYC = FY2REC.FY1FCTYC;
  FY0FM003.SY1STNBR = FY2REC.SY1STNBR;
  FY0FM003.SY2CLRID = FY3REC.SY2CLRID;
  FY0FM003.XDMCD = FY3REC.XDMCD;
  if (FY3REC.XDMCD in XDMTBL.XDMCD)
    FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  PG2REC.XGPCD = FY2REC.XGPCD;
  PG2REC.SY1STNBR = FY2REC.SY1STNBR;
  PG2REC.SY2CLRID = FY3REC.SY2CLRID;
  PG2REC.XDMCD = FY3REC.XDMCD;

  XSPG202(); /* Select style/color row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
    FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
  end

  FY0FM003.XQACD = FY3REC.XQACD;
  if (FY3REC.XQACD in XQATBL.XQACD)
    FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  end
  FY0FM003.PC2INSEG = FY3REC.PC2INSEG;
  FY0FM003.XPGCD = FY3REC.XPGCD;
  if (FY3REC.XPGCD in XPGTBL.XPGCD)
    FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
  end
  FY0FM003.XUMCD = FY3REC.XUMCD;
  if (FY3REC.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end
  FY0FM003.XSECD = FY3REC.XSECD;
  if (FY0FM003.XGPCD == "03")
    FY0FW01.FY0FWSNY = FY3REC.XSNYR;
    FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY;
  else
    FY0FM003.FY0FMSYR = FY3REC.XSNYR;
  end

  FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
  FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
  FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
  FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
  FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
  FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
  FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY;
  FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
  FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
  FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
  FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
  FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
  FY0FM003.FY0FMFOB = FY0FW01.FY0FWFOB;
  FY0FM003.FY0FMPIN = FY0FW01.FY0FWPIN;


end // end FY0F421

// Check attention identifier
Function FY0F430()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    FY0FW01.FY0FWSWR = "N";
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FYWREC.FY1FCTYC = FY0FM003.FY1FCTYC; /* Gpc code*/
    FYWREC.SY1STNBR = FY0FM003.SY1STNBR; /* Style*/
    FYWREC.SY2CLRID = FY0FM003.SY2CLRID; /* Color*/
    FYWREC.XDMCD = FY0FM003.XDMCD; /* Dimension*/
    FYWREC.XQACD = FY0FM003.XQACD; /* Quality code*/
    FYWREC.XPGCD = FY0FM003.XPGCD; /* Package Type code*/
    FYWREC.XUMCD = FY0FM003.XUMCD; /* Unit of Measure*/
    FYWREC.PC2INSEG = FY0FM003.PC2INSEG; /* Spec code*/
    FYWREC.XSECD = FY0FM003.XSECD; /* Season code*/
    FYWREC.XSNYR = FY0FM003.FY0FMSYR; /* Season year*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Transfer to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Transfer to FOB by eff date*/
    end
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Transfer to factory*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F430"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
     /* next sentence*/
  else
    FY0FM003.XXXPRCNM = "FY0F430"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F430

// Reset highlighted fields
Function FY0F440()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.XUMCD initialAttributes; /* Unit of measure code*/
  set FY0FM003.XUMDESC initialAttributes; /* Unit of measure desc.*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F440

// Verify the entered data
Function FY0F450()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "N"; /* Initialize data entered flag*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F450"; /* Process name*/
    exit stack;
  end


end // end FY0F450

// Process valid input request
Function FY0F460()
   /* ------------------------------------------------------------*/
   /* Process valid request*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWSTY = FY0FM003.SY1STNBR; /* Save key*/
  FY0FW01.FY0FWCOL = FY0FM003.SY2CLRID;
  FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/


end // end FY0F460

// Factory/Style inquiry map
Function FY0F500()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No errors*/
   && FY0FW01.FY0FWSWR == "Y") /* Data requested*/
    FY0F510(); /* Obtain the data to display*/
  end

  FY0F520(); /* Format and display the map*/

  FY0F530(); /* Check attention identifier*/

  FY0F540(); /* Reset fields to normal intensity*/

  FY0F550(); /* Verify the entered data*/

  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    FY0FW01.FY0FWSWR = "Y"; /* Set data switch to yes*/
  end

end // end FY0F500

// Obtain data to display
Function FY0F510()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on the map from selected*/
   /* row on the list screen.*/
   /* ------------------------------------------------------------*/

  set FY2REC empty;
  set FY3REC empty;
  set FY4REC empty;
  FY2REC.XGPCD = FY0FM003.XGPCD; /* Move in key fields*/
  FY2REC.FY1FCTYC = FY0FM003.FY1FCTYC;
  FY2REC.SY1STNBR = FY0FM003.SY1STNBR;
  FY2REC.XSECD = FY0FM003.XSECD;
   /* --------- Y2K OUT BEGIN ----------*/
   /* IF FY0FM003.FY0FMSYR GT 0;*/
   /* --------- Y2K OUT END ------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR;
    if (FY0FW01.FY0FWSYY < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end
   /* --------- Y2K OUT BEGIN ----------*/
   /* ELSE;*/
    /* MOVE 0 TO FY2REC.XSNYR;*/
   /* END;*/
   /* --------- Y2K OUT END ------------*/

  FY0FS20(); /* Select fy2rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(21);
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.SY1STNBR cursor, bold; /* Set cursor to to style*/
    return;
  end

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
  FY3REC.XDMCD = FY0FM003.XDMCD;
  FY3REC.XQACD = FY0FM003.XQACD;
  FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
  FY3REC.XPGCD = FY0FM003.XPGCD;
  FY3REC.XUMCD = FY0FM003.XUMCD;
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;

  FY0FS22(); /* Select fy3rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(21);
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.SY1STNBR cursor, bold; /* Set cursor to to style*/
    return;
  end

  /* IF FY0FW01.XGPCD NE '02';         /* IF NOT FOOTWEAR*/
  /* EZERTN;*/
  /* END;*/

   /* Next get the scheculing FOB*/

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;
  FY0FW01.FY0FWFOB = 0; /* Zero out ws fob price*/
  FY0FW01.FY0FWPIN = " "; /* Clear out ws fob price ind.*/
  FY0FS07(); /* Select set of fy4rec rows*/
  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
    FY0FS08(); /* fetch fy4rec row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
      FY0F411(); /* determine FOB price*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
       && FY3REC.XQACD == "02")      /* Quality '02'*/
        FY0FS10(); /* Close set of fy4rec rows*/
        if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
          FY4REC.XQACD = "01";
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F411(); /* determine FOB price*/
              FY0F412(); /* Calculate b-grade percentage*/
            end
          end
        end
      end
    end
    FY0FS10(); /* Close set of fy4rec rows*/
  end


end // end FY0F510

// Format and display the map
Function FY0F520()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No error*/
   && FY0FW01.FY0FWSWR == "Y") /* And data requested*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0F521(); /* Move fields to map*/
  end

  FY0FM003.FY0FMFNC = "INQUIRY"; /* Move inquiry literal to map*/
  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  if (FY0FW01.XGPCD > " ")
    FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move gpc code*/
    FY0FM003.XGPDESC = FY0FW01.XGPDESC;
  end

  if (FY0FW01.FY1FCTYC > " ")
    FY0FM003.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FM003.FY1FCTSN = FY0FW01.FY1FCTSN;
  end

  if (FY0FW01.FY0FWPSW == "N" /* No error*/
   && FY0FW01.FY0FWSWR == "N") /* And data NOT requested*/
    if (FY0FM003.XGPCD == "02")
      FY0FM003.SY2CLRID = "00";
    end
    FY0FM003.XDMCD = "00";
    if (FY0FM003.XDMCD in XDMTBL.XDMCD)
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    end
    FY0FM003.PC2INSEG = "000";
    FY0FM003.XQACD = "01";
    if (FY0FM003.XQACD in XQATBL.XQACD)
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    end
    FY0FM003.XPGCD = "00";
    if (FY0FM003.XPGCD in XPGTBL.XPGCD)
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    end
     /* move in default season and year*/
    if (FY0FM003.XGPCD == " ")
      set FY0FM003.XGPCD cursor; /* Set cursor to gpc code*/
    else
      if (FY0FM003.FY1FCTYC == " ")
        set FY0FM003.FY1FCTYC cursor; /* Set cursor to factor code*/
      else
        set FY0FM003.SY1STNBR cursor; /* Set cursor to style*/
      end
    end
  end

  if (FY0FW01.FY0FWPSW == "Y" /* If error*/
   && FY0FW01.FY0FWSWR == "Y") /* And data requested*/
    FY0FM003.FY0FMMFG = 0;
    FY0FM003.FY1MFGDY = 0;
    FY0FM003.FY0FMFOB = 0;
    FY0FM003.FY0FMFAB = 0;
    FY0FM003.FY1FABDY = 0;
    FY0FM003.FY3PRTGT = 0;
    FY0FM003.FY0FMSTD = 0;
    FY0FM003.FY1STDC = 0;
    FY0FM003.FY3PRCAP = 0;
    FY0FM003.FY0FMSPC = 0;
    FY0FM003.FY1SPCLC = 0;
    FY0FM003.FY3PRMIN = 0;
    FY0FM003.FY0FMSTC = 0;
    FY0FM003.FY1STCDY = 0;
    FY0FM003.FY0FMLST = 0;
    FY0FM003.FY1LSTDY = 0;
    FY0FM003.FY3FPRTY = 0;
    FY0FM003.FY2MFGPC = 0;
    FY0FM003.FY3INPFL = " ";
    FY0FM003.FY3SFYFL = " ";
    FY0FM003.FY0FMPIN = " ";
  end

  set FY0FM003.XUMCD protect; /* Unit of measure*/
  set FY0FM003.FY0FMMFG protect; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY protect; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB protect; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB protect; /* Fabric days*/
  set FY0FM003.FY1FABDY protect; /* Default fabric days*/
  set FY0FM003.FY3PRTGT protect; /* Target price*/
  set FY0FM003.FY0FMSTD protect; /* Standard comp. days*/
  set FY0FM003.FY1STDC protect; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP protect; /* Maximum price*/
  set FY0FM003.FY0FMSPC protect; /* Special comp. days*/
  set FY0FM003.FY1SPCLC protect; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN protect; /* Minimum price*/
  set FY0FM003.FY0FMSTC protect; /* Stitch days*/
  set FY0FM003.FY1STCDY protect; /* Default stitch days*/
  set FY0FM003.FY0FMLST protect; /* Last days*/
  set FY0FM003.FY1LSTDY protect; /* Default last days*/
  set FY0FM003.FY3FPRTY protect; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC protect; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL protect; /* In production flag*/
  set FY0FM003.FY3SFYFL protect; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC protect; /* Update all colors flag*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0FM003 alarm;
  end

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (COMMAREA.CAILVL[1] != "Y") /* FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible; /* Darken*/
    set FY0FM003.FY0FMPIN skip, invisible; /* Darken*/
  end

  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/

  if (converseVar.eventKey is enter)
    FY0F522(); /* Check for ? inquiry by user*/
  end

end // end FY0F520

// Move fields to map
Function FY0F521()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY1REC.XGPCD = FY2REC.XGPCD;
  FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;

  FY0FS01(); /* Get factory default lead times*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.FY1MFGDY = FY1REC.FY1MFGDY;
    FY0FM003.FY1FABDY = FY1REC.FY1FABDY;
    FY0FM003.FY1LSTDY = FY1REC.FY1LSTDY;
    FY0FM003.FY1STDC = FY1REC.FY1STDC;
    FY0FM003.FY1SPCLC = FY1REC.FY1SPCLC;
    FY0FM003.FY1STCDY = FY1REC.FY1STCDY;
  end

  FY0FM003.FY1FCTYC = FY2REC.FY1FCTYC;
  FY0FM003.SY1STNBR = FY2REC.SY1STNBR;
  FY0FM003.SY2CLRID = FY3REC.SY2CLRID;
  FY0FM003.XDMCD = FY3REC.XDMCD;
  if (FY3REC.XDMCD in XDMTBL.XDMCD)
    FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  PG2REC.XGPCD = FY2REC.XGPCD;
  PG2REC.SY1STNBR = FY2REC.SY1STNBR;
  PG2REC.SY2CLRID = FY3REC.SY2CLRID;
  PG2REC.XDMCD = FY3REC.XDMCD;

  XSPG202(); /* Select style/color row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
    FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
  end

  FY0FM003.XQACD = FY3REC.XQACD;
  if (FY3REC.XQACD in XQATBL.XQACD)
    FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  end
  FY0FM003.PC2INSEG = FY3REC.PC2INSEG;
  FY0FM003.XPGCD = FY3REC.XPGCD;
  if (FY3REC.XPGCD in XPGTBL.XPGCD)
    FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
  end
  FY0FM003.XUMCD = FY3REC.XUMCD;
  if (FY3REC.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end
  FY0FM003.XSECD = FY3REC.XSECD;
  if (FY0FM003.XGPCD == "03")
    FY0FW01.FY0FWSNY = FY3REC.XSNYR;
    FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY;
  else
    FY0FM003.FY0FMSYR = FY3REC.XSNYR;
  end

  FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
  FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
  FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
  FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
  FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
  FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
  FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY;
  FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
  FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
  FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
  FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
  FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
  FY0FM003.FY0FMFOB = FY0FW01.FY0FWFOB;
  FY0FM003.FY0FMPIN = FY0FW01.FY0FWPIN;

end // end FY0F521

// Check for ? inquiry by user
Function FY0F522()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD == "?" /* if any ? entered*/
   || FY0FM003.XSECD == "?" 
   || FY0FM003.FY0FMSYR == "?"
   || FY0FM003.XQACD == "?" 
   || FY0FM003.XDMCD == "?" 
   || FY0FM003.XPGCD == "?")

    if (FY0FM003.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0FM003.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XGPCD = " "; /* clear fields*/
        FY0FM003.XGPDESC = " ";
      end
    end


    if (FY0FM003.XSECD == "?" /* if ? in season code field*/
     || FY0FM003.FY0FMSYR == "?") /* or ? in season year field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SEASON    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYSN01(); /* perform season code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XSECD = YSNTBL.XSECD[XX0XWPIX]; /* move code*/
        FY0FW01.FY0FWSNY = YSNTBL.XSNYR[XX0XWPIX];
        FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY; /* move year*/
      else
        FY0FM003.XSECD = " "; /* clear fields*/
        FY0FM003.FY0FMSYR = 0;
      end
    end

    if (FY0FM003.XQACD == "?") /* if ? in quality code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                QUALITY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXQA01(); /* perform quality code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
        FY0FM003.XQADESC = XQATBL.XQADESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XQADESC = " "; /* move name*/
        FY0FM003.XQACD = " "; /* clear fields*/
      end
    end


    if (FY0FM003.XDMCD == "?") /* if ? in dimension code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "          DIMENSION       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXDM01(); /* perform dimension code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* move code*/
        FY0FM003.XDMDESC = XDMTBL.XDMDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XDMCD = " "; /* clear fields*/
        FY0FM003.XDMDESC = " "; /* move name*/
      end
    end


    if (FY0FM003.XPGCD == "?") /* if ? in package type field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        PACKAGE TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXPG01(); /* perform package type window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XPGCD = XPGTBL.XPGCD[XX0XWPIX]; /* move code*/
        FY0FM003.XPGDESC = XPGTBL.XPGDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XPGCD = " "; /* clear fields*/
        FY0FM003.XPGDESC = " "; /* move name*/
      end
    end


    converseLib.clearScreen();
     /* restore the original map*/

  end


end // end FY0F522

// Check attention identifier
Function FY0F530()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    FY0FW01.FY0FWSWR = "N"; /* Turn off request for data*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F530"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    FY0FW01.SY1STNBR = " ";
    FY0FM001.SY1STNBR = " ";
    FY0FW01.SY1SSTNM = " ";
    FY0FM001.SY1SSTNM = " ";
    FY0FW01.SY2CLRID = " ";
    FY0FM001.SY2CLRID = " ";
    FY0FW01.SY2CLRAB = " ";
    FY0FM001.SY2CLRAB = " ";
    FY0FM001.XQACD = FY0FW01.XQACD;
    FY0FM001.XDMCD = FY0FW01.XDMCD;
    FY0FM001.PC2INSEG = FY0FW01.PC2INSEG;
    FY0FM001.XPGCD = FY0FW01.XPGCD;
    FY0FW01.XSECD = " ";
    FY0FM001.XSECD = " ";
    FY0FW01.XSNYR = 0;
    FY0FW01.FY0FWSNY = 0;
    FY0FW01.FY0FWSYR = 0;
    FY0FM001.FY0FMSYR = 0;
    if (FY0FW01.XGPCD > " "
     && FY0FW01.FY1FCTYC > " ")
      FY0FM001.XGPCD = FY0FM003.XGPCD; /* Set up map 1 data*/
      FY0FM001.FY1FCTYC = FY0FM003.FY1FCTYC;
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data to yes*/
    else
      FY0FW01.FY0FWSWR = "N"; /* Set request for data to no*/
    end
    FY0FW01.FY0FWLSF = "Y"; /* Set list screen flag to yes*/
    exit stack; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F530"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F530"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Exit to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Exit to FOB by eff date*/
    end
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F530"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Exit to Factory*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F530"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
     /* next sentence*/
  else
    FY0FM003.XXXPRCNM = "FY0F530"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F530

// Reset highlighted fields
Function FY0F540()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.XUMCD initialAttributes; /* Unit of measure code*/
  set FY0FM003.XUMDESC initialAttributes; /* Unit of measure desc.*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F540

// Verify the entered data
Function FY0F550()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "N"; /* Initialize data entered flag*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F550"; /* Process name*/
    exit stack;
  end

  FY0F551(); /* Validate input data*/


end // end FY0F550

// Validate any input data
Function FY0F551()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "Y"; /* Data has been entered*/

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON YEAR*/
   /* ------------------------------------------------------------*/

  FY0FW01.XSNYR = 0; /* Initialize working storage season*/
   /* --------- Y2K OUT BEGIN -----------*/
   /* IF FY0FM003.FY0FMSYR GT 0;       /* If season year entered*/
   /* MOVE 19 TO FY0FW01.FY0FWSCC;   /* Set up century*/
   /* --------- Y2K OUT END -------------*/

   /* --------- Y2K IN BEGIN ------------*/
  if (FY0FM003.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    /* next sentence*/
  else
    if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    /* --------- Y2K IN END --------------*/
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
    FY0FW01.XSNYR = FY0FW01.FY0FWSNY; /* Move to season year*/

    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FW01.XSNYR == YSNTBL.XSNYR[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWSW1 = "Y";
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(75); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
          set FY0FM003.FY0FMSYR cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XSECD > " ") /* If season code entered*/
    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM001.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FM003.XSECD == YSNTBL.XSECD[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(74); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
          set FY0FM003.XSECD cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          FY0FW01.FY0FWSW1 = "Y";
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID PACKAGE TYPE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XPGCD > " ") /* If package type entered*/
    if (FY0FM003.XPGCD in XPGTBL.XPGCD)
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    else
      FY0FM003.XPGDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(79); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
      set FY0FM003.XPGCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XPGDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(79); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.XPGCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID INVENTORY SPEC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.PC2INSEG > " ") /* If spec entered*/
    PC2REC.XGPCD = FY0FM003.XGPCD;
    PC2REC.PC2INSEG = FY0FM003.PC2INSEG;
    FY0FS29();
    if (SQLCA.VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(77); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
      set FY0FM003.PC2INSEG cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(77); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.PC2INSEG cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID QUALITY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XQACD > " ") /* If quality entered*/
    if (FY0FM003.XQACD in XQATBL.XQACD)
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    else
      FY0FM003.XQADESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(76); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
      set FY0FM003.XQACD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XQADESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(76); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.XQACD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID DIMENSION*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XDMCD > " ") /* If dimension entered*/
    if (FY0FM003.XDMCD in XDMTBL.XDMCD)
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    else
      FY0FM003.XDMDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(78); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
      set FY0FM003.XDMCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XDMDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(78); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.XDMCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT A COLOR IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
    FY0FW01.SY2CLRAB = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(73); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.SY2CLRID cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT A STYLE IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR == " ") /* style not entered*/
    FY0FW01.SY1SSTNM = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(73); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.SY1STNBR cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE STYLE/COLOR COMBINATION*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR > " " /* If style entered*/
   && FY0FM003.SY2CLRID > " ") /* and color entered*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    PG2REC.SY2CLRID = FY0FM003.SY2CLRID;
    if (FY0FM003.XDMCD > " ")
      PG2REC.XDMCD = FY0FM003.XDMCD;
    else
      PG2REC.XDMCD = "00";
    end
    XSPG202(); /* Select unique color*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
      FY0FW01.XUMCD = PG2REC.XUMCD;
      FY0FM003.XUMCD = PG2REC.XUMCD;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM003.SY1SSTNM = " "; /* Clear description*/
        FY0FM003.SY2CLRAB = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, modified, bold;
        set FY0FM003.SY2CLRID bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STYLE IF COLOR NOT ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR > " " /* If style entered*/
   && FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    XSPG201(); /* Open cursor*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FW01.XUMCD = PG2REC.XUMCD;
      FY0FM003.XUMCD = PG2REC.XUMCD;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM003.SY1SSTNM = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY1FCTYC > " ") /* If factory entered*/
    FY1REC.XGPCD = FY0FM003.XGPCD;
    FY1REC.FY1FCTYC = FY0FM003.FY1FCTYC;
    FY0FS01(); /* Select unique factory*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FW01.FY1FCTYC = FY1REC.FY1FCTYC;
      FY0FM003.FY1FCTSN = FY1REC.FY1FCTSN;
      FY0FW01.FY1FCTSN = FY1REC.FY1FCTSN;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FW01.FY1FCTYC = " ";
        FY0FM003.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(33); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
        set FY0FM003.FY1FCTYC cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  else
    FY0FW01.FY1FCTYC = " "; /* Clear code*/
    FY0FM003.FY1FCTSN = " "; /* Clear description*/
    FY0FW01.FY1FCTSN = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(33); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.FY1FCTYC cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD > " ") /* If gpc code entered*/
    if (FY0FM003.XGPCD in XGPTBL.XGPCD)
      FY0FW01.XGPCD = FY0FM003.XGPCD; /* Save in working storage*/
      FY0FW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      COMMAREA.XGPCD = FY0FM003.XGPCD; /* Save in commarea*/
    else
      FY0FW01.XGPCD = " ";
      FY0FW01.XGPDESC = " ";
      FY0FM003.XGPDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
      set FY0FM003.XGPCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FW01.XGPCD = " ";
    FY0FW01.XGPDESC = " ";
    FY0FM003.XGPDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(101); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F551"; /* Process name*/
    set FY0FM003.XGPCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end


end // end FY0F551

// Factory/Style Main. change map
Function FY0F600()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No errors occured*/
    FY0F610(); /* Obtain the data to display*/
  end

  FY0F620(); /* Format and display the map*/

  FY0F630(); /* Check attention identifier*/

  FY0F640(); /* Reset Highlighted fields*/

  FY0F650(); /* Verify the entered data*/

  FY0F660(); /* Process valid input request*/


end // end FY0F600

// Obtain the data to display
Function FY0F610()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on the map from selected*/
   /* row on the list screen.*/
   /* ------------------------------------------------------------*/

  set FY0FW03 empty;
  set FY2REC empty;
  set FY3REC empty;
  set FY4REC empty;
  FY2REC.XGPCD = FY0FM001.XGPCD; /* Move in key fields*/
  FY2REC.FY1FCTYC = FY0FM001.FY1FCTYC;
  FY2REC.SY1STNBR = FY0FM001.FY0FMSTY[FY0FWIXM];
  FY2REC.XSECD = FY0FM001.FY0FMSNC[FY0FWIXM];
   /* ------------- Y2K OUT BEGIN -------------*/
   /* IF FY0FM001.FY0FMSNY(FY0FWIXM) GT 0;*/
   /* ------------- Y2K OUT END ---------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM001.FY0FMSNY[FY0FWIXM];
    if (FY0FW01.FY0FWSYY < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end

  FY0FS20(); /* Select fy2rec row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
    FY0FW03.FY2GROUP = FY2REC.FY2GROUP; /* Save the row*/
  end
  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(69);
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.CATOAP cursor; /* Set cursor to to application field*/
    return;
  end

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.SY2CLRID = FY0FM001.FY0FMCLR[FY0FWIXM];
  if (FY0FM001.FY0FMDIM[FY0FWIXM] == " ")
    FY3REC.XDMCD = "00";
  else
    FY3REC.XDMCD = FY0FM001.FY0FMDIM[FY0FWIXM];
  end
  if (FY0FM001.FY0FMQUA[FY0FWIXM] == " ")
    FY3REC.XQACD = "01";
  else
    FY3REC.XQACD = FY0FM001.FY0FMQUA[FY0FWIXM];
  end
  if (FY0FM001.FY0FMSPC[FY0FWIXM] == " ")
    FY3REC.PC2INSEG = "000";
  else
    FY3REC.PC2INSEG = FY0FM001.FY0FMSPC[FY0FWIXM];
  end
  if (FY0FM001.FY0FMPKG[FY0FWIXM] == " ")
    FY3REC.XPGCD = "00";
  else
    FY3REC.XPGCD = FY0FM001.FY0FMPKG[FY0FWIXM];
  end
  if (FY0FM001.FY0FMUOM[FY0FWIXM] == " ")
    FY3REC.XUMCD = "01";
  else
    FY3REC.XUMCD = FY0FM001.FY0FMUOM[FY0FWIXM];
  end
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;

  FY0FS22(); /* Select fy3rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(69);
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.CATOAP cursor; /* Set cursor to to application field*/
  end

  /* IF FY0FW01.XGPCD NE '02';         /* If not footwear*/
  /* EZERTN;*/
  /* END;*/

   /* Next get the scheduliong FOB for footwear only*/

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;
  FY0FW01.FY0FWFOB = 0; /* Zero out ws fob price*/
  FY0FW01.FY0FWPIN = " "; /* Clear out ws fob price ind.*/
  FY0FS07(); /* Select set of fy4rec rows*/
  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
    FY0FS08(); /* fetch fy4rec row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
      FY0F411(); /* determine FOB price*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
       && FY3REC.XQACD == "02")      /* Quality '02'*/
        FY0FS10(); /* Close set of fy4rec rows*/
        if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
          FY4REC.XQACD = "01";
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F411(); /* determine FOB price*/
              FY0F412(); /* calculate from b-grade %*/
            end
          end
        end
      end
    end
    FY0FS10(); /* Close set of fy4rec rows*/
  end


end // end FY0F610

// Format and display the map
Function FY0F620()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No error*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0F621(); /* Move fields to map*/
    FY0FM003.FY0FMUAC = "N"; /* Default update all colors to nope*/
    set FY0FM003.FY0FMMFG cursor; /* Position cursor*/
  end

  FY0FM003.FY0FMFNC = "CHANGE"; /* Move 'CHANGE' literal to map*/
  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move gpc code*/
  if (FY0FW01.XGPCD > " ")
    if (FY0FW01.XGPCD in XGPTBL.XGPCD)
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    FY0FW01.XGPDESC = FY0FM003.XGPDESC;
  end

  set FY0FM003.XGPCD protect; /* Gpc code*/
  set FY0FM003.FY1FCTYC protect; /* Factory code*/
  set FY0FM003.SY1STNBR protect; /* Style code*/
  set FY0FM003.SY2CLRID protect; /* Color code*/
  set FY0FM003.XDMCD protect; /* Dimension code*/
  set FY0FM003.XQACD protect; /* Quality code*/
  set FY0FM003.PC2INSEG protect; /* Spec diff code*/
  set FY0FM003.XPGCD protect; /* Pkg typ code*/
  set FY0FM003.XSECD protect; /* Season code*/
  set FY0FM003.FY0FMSYR protect; /* Season year*/
  set FY0FM003.XUMCD protect; /* Unit of measure code*/

  if (FY0FM003.XGPCD == "02") /* Protect if footwear*/
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0FM003 alarm;
  end

  if (FY0FW01.FY0FWMFL == "Y")
    converseLib.validationFailed(1);
    FY0FM003.XXXPRCNM = "FY0F620";
    FY0FW01.FY0FWMFL = " ";
  end

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (COMMAREA.CAILVL[1] != "Y") /* FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible; /* Darken*/
    set FY0FM003.FY0FMPIN skip, invisible; /* Darken*/
  end

  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/

end // end FY0F620

// Load data on map
Function FY0F621()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY1REC.XGPCD = FY2REC.XGPCD;
  FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;

  FY0FS01(); /* Get factory default lead times*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY1REC.FY1FCTSN = FY1REC.FY1FCTSN;
    FY0FM003.FY1MFGDY = FY1REC.FY1MFGDY;
    FY0FM003.FY1FABDY = FY1REC.FY1FABDY;
    FY0FM003.FY1LSTDY = FY1REC.FY1LSTDY;
    FY0FM003.FY1STDC = FY1REC.FY1STDC;
    FY0FM003.FY1SPCLC = FY1REC.FY1SPCLC;
    FY0FM003.FY1STCDY = FY1REC.FY1STCDY;
  end


  FY0FM003.FY1FCTYC = FY2REC.FY1FCTYC;
  FY0FM003.SY1STNBR = FY2REC.SY1STNBR;
  FY0FM003.SY2CLRID = FY3REC.SY2CLRID;
  FY0FM003.XDMCD = FY3REC.XDMCD;
  if (FY3REC.XDMCD in XDMTBL.XDMCD)
    FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  PG2REC.XGPCD = FY2REC.XGPCD;
  PG2REC.SY1STNBR = FY2REC.SY1STNBR;
  PG2REC.SY2CLRID = FY3REC.SY2CLRID;
  PG2REC.XDMCD = FY3REC.XDMCD;

  XSPG202(); /* Select style/color row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
    FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
  end

  FY0FM003.XQACD = FY3REC.XQACD;
  if (FY3REC.XQACD in XQATBL.XQACD)
    FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  end
  FY0FM003.PC2INSEG = FY3REC.PC2INSEG;
  FY0FM003.XPGCD = FY3REC.XPGCD;
  if (FY3REC.XPGCD in XPGTBL.XPGCD)
    FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
  end
  FY0FM003.XUMCD = FY3REC.XUMCD;
  if (FY3REC.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end
  FY0FM003.XSECD = FY3REC.XSECD;
  if (FY0FM003.XGPCD == "03")
    FY0FW01.FY0FWSNY = FY3REC.XSNYR;
    FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY;
  else
    FY0FM003.FY0FMSYR = FY3REC.XSNYR;
  end

  FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
  FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
  FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
  FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
  FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
  FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
  FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FW01.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY;
  FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
  FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
  FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
  FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
  FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
  FY0FM003.FY0FMFOB = FY0FW01.FY0FWFOB;
  FY0FM003.FY0FMPIN = FY0FW01.FY0FWPIN;


end // end FY0F621

// Check attention identifier
Function FY0F630()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F630"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F630"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F630"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FYWREC.FY1FCTYC = FY0FM003.FY1FCTYC; /* Gpc code*/
    FYWREC.SY1STNBR = FY0FM003.SY1STNBR; /* Style*/
    FYWREC.SY2CLRID = FY0FM003.SY2CLRID; /* Color*/
    FYWREC.XDMCD = FY0FM003.XDMCD; /* Dimension*/
    FYWREC.XQACD = FY0FM003.XQACD; /* Quality code*/
    FYWREC.XPGCD = FY0FM003.XPGCD; /* Package Type code*/
    FYWREC.XUMCD = FY0FM003.XUMCD; /* Unit of Measure*/
    FYWREC.PC2INSEG = FY0FM003.PC2INSEG; /* Spec code*/
    FYWREC.XSECD = FY0FM003.XSECD; /* Season code*/
    FYWREC.XSNYR = FY0FM003.FY0FMSYR; /* Season year*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Transfer to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Transfer to FOB by eff date*/
    end
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F630"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Transfer to Factory*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F630"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
     /* next sentence*/
  else
    FY0FM003.XXXPRCNM = "FY0F630"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F630

// Reset highlighted fields
Function FY0F640()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.XUMCD initialAttributes; /* Unit of measure code*/
  set FY0FM003.XUMDESC initialAttributes; /* Unit of measure desc.*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F640

// Verify the entered data
Function FY0F650()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "N"; /* Initialize data entered flag*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F650"; /* Process name*/
    exit stack;
  end

  if (FY0FM003.FY0FMMFG == FY2REC.FY1MFGDY
   && FY0FM003.FY0FMFAB == FY2REC.FY1FABDY
   && FY0FM003.FY0FMSTD == FY2REC.FY1STDC
   && FY0FM003.FY0FMSPC == FY2REC.FY1SPCLC
   && FY0FM003.FY0FMSTC == FY2REC.FY1STCDY
   && FY0FM003.FY0FMLST == FY2REC.FY1LSTDY
   && FY0FM003.FY2MFGPC == FY2REC.FY2MFGPC
   && FY0FM003.FY3PRCAP == FY3REC.FY3PRCAP
   && FY0FM003.FY3PRTGT == FY3REC.FY3PRTGT
   && FY0FM003.FY3PRMIN == FY3REC.FY3PRMIN
   && FY0FM003.FY3FPRTY == FY3REC.FY3FPRTY
   && FY0FM003.FY3INPFL == FY3REC.FY3INPFL
   && FY0FM003.FY3SFYFL == FY3REC.FY3SFYFL)
    FY0FW01.FY0FWSTY = FY0FM003.SY1STNBR; /* Save key*/
    FY0FW01.FY0FWCOL = FY0FM003.SY2CLRID;
    set FY0FM003 initial;
    FY0FM001.FY0FMSEL[FY0FWIXM] = " ";
    exit stack; /* Exit to redisplay map*/
  else
    FY0F651(); /* Validate input data*/
  end

end // end FY0F650

// Validate any input data
Function FY0F651()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "Y"; /* Data has been entered*/

   /* ------------------------------------------------------------*/
   /* VALIDATE THE UPDATE ALL COLORS FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY0FMUAC == "Y" /* must equal 'y' or 'n'*/
   || FY0FM003.FY0FMUAC == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F651"; /* Process name*/
    set FY0FM003.FY0FMUAC cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE IN PRODUCTION FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY3INPFL == "Y" /* must equal 'y' or 'n'*/
   || FY0FM003.FY3INPFL == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F651"; /* Process name*/
    set FY0FM003.FY3INPFL cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STYLE FACTORY PRIORITY FLAG*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY3SFYFL == "Y" /* must equal 'y' or 'n'*/
   || FY0FM003.FY3SFYFL == "N")
     /* next sentence*/
  else
    converseLib.validationFailed(47); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F651"; /* Process name*/
    set FY0FM003.FY3SFYFL cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE MANUFACTURING PERCENT*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY2MFGPC >= 0 /* must equal be greater than or equal*/
   /* to 0*/
   && FY0FM003.FY2MFGPC <= 100) /* and less than or equal to 100*/

    FY0FW01.ZZZCHGCT = FY2REC.ZZZCHGCT; /* Save change count*/

    if (FY0FM003.XGPCD == "03") /* Apparel*/
      FY0FS99();
    end

    FY2REC.ZZZCHGCT = FY0FW01.ZZZCHGCT; /* Restore change count*/

  else
    converseLib.validationFailed(56); /* Error message*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F651"; /* Process name*/
    set FY0FM003.FY2MFGPC cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* IF NO ERRORS, INSURE THAT ONLY ONE STYLE ROW HAS THE STYLE*/
   /* PRIORITY FLAG SET TO "Y"*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No errors*/
   && FY0FM003.FY3SFYFL == "Y") /* and prty flag is yes*/
    FY0FW01.ZZZCHGCT = FY3REC.ZZZCHGCT; /* Save the change count*/
    FY3REC.XGPCD = FY0FM003.XGPCD;
    FY3REC.FY1FCTYC = "*"; /* Wild card the factory*/
    FY3REC.SY1STNBR = FY0FM003.SY1STNBR;
    FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
    FY3REC.XDMCD = FY0FM003.XDMCD;
    FY3REC.XQACD = FY0FM003.XQACD;
    FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
    FY3REC.XPGCD = FY0FM003.XPGCD;
    FY3REC.XUMCD = FY0FM003.XUMCD;
    FY3REC.XSECD = FY0FM003.XSECD;
    FY3REC.FY3INPFL = "*";
    FY3REC.XXXSTAT = "A";

    if (FY0FM003.XGPCD == "03" /* If gpc is apparel*/
     || FY0FM003.XSECD > " ")  /* or season code entered*/
      if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
        FY0FW01.FY0FWSCC = 19;
      else
        FY0FW01.FY0FWSCC = 20;
      end
      /* --------- Y2K IN END --------------*/
      FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
      FY3REC.XSNYR = FY0FW01.FY0FWSNY;
    else
      FY3REC.XSNYR = 0;
    end

    FY0FS05(); /* Open fy3rec cursor*/
    FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/

    FY0FS06(); /* Fetch row*/
    while (FY0FW01.FY0FWSW2 == "N" /* While not end of file*/
     && FY0FW01.FY0FWPSW == "N") /* and no errors*/
      if (FY3REC.FY3SFYFL == "Y" /* Prty flag eq 'y'*/
       && FY3REC.FY1FCTYC != FY0FM003.FY1FCTYC) /* not current fcty*/
        FY0FW01.FY0FWPSW = "Y"; /* set error switch*/
        converseLib.validationFailed(127); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F651"; /* Process name*/
        set FY0FM003.FY3SFYFL cursor, bold; /* Highlight field*/
      else
        FY0FS06(); /* Fetch row*/
      end
    end

    FY0FS12(); /* Close cursor*/

    FY3REC.ZZZCHGCT = FY0FW01.ZZZCHGCT; /* Restore the change count*/

  end

end // end FY0F651

// Process valid input request
Function FY0F660()
   /* ------------------------------------------------------------*/
   /* Process valid inout request*/
   /* 1.  If the update all colors flag = yes update all rows*/
       /* in the fy3rec for that style*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No errors*/
   && FY0FW01.FY0FWDEF == "Y")          /* and data was entered*/

     /* next sentence*/

  else

    exit stack; /* Flow to reconverse map*/

  end


  FY2REC.XGPCD = FY0FM003.XGPCD; /* gpc code*/
  FY2REC.FY1FCTYC = FY0FM003.FY1FCTYC; /* factory code*/
  FY2REC.SY1STNBR = FY0FM003.SY1STNBR; /* style*/

  FY3REC.XGPCD = FY0FM003.XGPCD; /* gpc code*/
  FY3REC.FY1FCTYC = FY0FM003.FY1FCTYC; /* factory code*/
  FY3REC.SY1STNBR = FY0FM003.SY1STNBR; /* style*/
  FY3REC.XDMCD = FY0FM003.XDMCD;
  FY3REC.XQACD = FY0FM003.XQACD;
  FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
  FY3REC.XPGCD = FY0FM003.XPGCD;
  FY3REC.XUMCD = FY0FM003.XUMCD;
  FY2REC.XSECD = FY0FM003.XSECD; /* season code*/
  FY3REC.XSECD = FY0FM003.XSECD; /* season code*/

  if (FY0FM003.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
    FY3REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR;
    if (FY0FM003.FY0FMSYR < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
    FY3REC.XSNYR = FY0FW01.FY0FWSNY;
  end

  XX0XS01(); /* Obtain current date and time*/
  FY2REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FY2REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  if (FY0FM003.FY0FMMFG != FY0FW03.FY1MFGDY /* Has fcty/sty row changed?*/
   || FY0FM003.FY0FMFAB != FY0FW03.FY1FABDY 
   || FY0FM003.FY0FMLST != FY0FW03.FY1LSTDY 
   || FY0FM003.FY0FMSTD != FY0FW03.FY1STDC  
   || FY0FM003.FY0FMSPC != FY0FW03.FY1SPCLC 
   || FY0FM003.FY0FMSTC != FY0FW03.FY1STCDY 
   || FY0FM003.FY2MFGPC != FY0FW03.FY2MFGPC)

    FY2REC.FY1MFGDY = FY0FM003.FY0FMMFG;
    FY2REC.FY1FABDY = FY0FM003.FY0FMFAB;
    FY2REC.FY1LSTDY = FY0FM003.FY0FMLST;
    FY2REC.FY1STDC = FY0FM003.FY0FMSTD;
    FY2REC.FY1SPCLC = FY0FM003.FY0FMSPC;
    FY2REC.FY1STCDY = FY0FM003.FY0FMSTC;
    FY2REC.FY2MFGPC = FY0FM003.FY2MFGPC;
    FY2REC.ZFC-CRCY-CD = " ";

    FY0FS24(); /* Update the fy2rec*/

    if (SQLCA.VAGen_SQLCODE == 100)
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data*/
      converseLib.validationFailed(12); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F660"; /* Process name*/
      set FY0FM003.SY1STNBR cursor, bold; /* Highlight field*/
      exit stack;
    end

  end


  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    if (FY0FM003.FY0FMUAC == "Y") /* Update all colors*/

      FY3REC.SY2CLRID = "*"; /* Wild card the color*/
      FY0FS05(); /* Open fy3rec cursor*/
      FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/
      FY0FS06(); /* Fetch row*/

      if (FY0FW01.FY0FWSW2 == "Y") /* No rows found*/
        FY0FW01.FY0FWPSW = "Y"; /* set error switch*/
        converseLib.validationFailed(69); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F660"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, bold; /* Highlight field*/
      end

      while (FY0FW01.FY0FWSW2 == "N" /* While not end of file*/
       && FY0FW01.FY0FWPSW == "N") /* and no errors*/
        FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
        FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
        FY3REC.FY3FPRTY = FY0FM003.FY3FPRTY;
        FY3REC.FY3PRTGT = FY0FM003.FY3PRTGT;
        FY3REC.FY3PRMIN = FY0FM003.FY3PRMIN;
        FY3REC.FY3PRCAP = FY0FM003.FY3PRCAP;
        FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
        FY3REC.FY3SFYFL = FY0FM003.FY3SFYFL;
        FY0FS25(); /* Update the fy3rec*/
        if (FY0FW01.FY0FWPSW == "N") /* and no errors*/
          FY0FS06(); /* Fetch row*/
        end
      end

      FY0FS12(); /* Close cursor*/


    else
      FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
      FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      FY3REC.FY3FPRTY = FY0FM003.FY3FPRTY;
      FY3REC.FY3PRTGT = FY0FM003.FY3PRTGT;
      FY3REC.FY3PRMIN = FY0FM003.FY3PRMIN;
      FY3REC.FY3PRCAP = FY0FM003.FY3PRCAP;
      FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
      FY3REC.FY3SFYFL = FY0FM003.FY3SFYFL;
      FY0FS25(); /* Update the fy3rec*/

      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FW01.FY0FWSWR = "Y"; /* Set request for data*/
        converseLib.validationFailed(12); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F660"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, bold; /* Highlight field*/
        exit stack;
      end

    end
  end

  if (FY0FW01.FY0FWPSW == "N")
    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit();
    FY0FW01.FY0FWSTY = FY0FM003.SY1STNBR; /* move style to save key*/
    FY0FW01.FY0FWCOL = FY0FM003.SY2CLRID; /* move color to save key*/
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear out selection field*/
    FY0FW01.FY0FWSWR = "Y"; /* set request for data*/
    FY0FW01.FY0FWMFL = "Y"; /* set message flag*/
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
  end


end // end FY0F660

// Factory/Style Main. change map
Function FY0F700()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No errors occured*/
   && FY0FW01.FY0FWSWR == "Y")          /* and data requested*/
    FY0F710(); /* Obtain the data to display*/
  end

  FY0F720(); /* Format and display the map*/

  FY0F730(); /* Check attention identifier*/

  FY0F740(); /* Reset Highlighted fields*/

  FY0F750(); /* Verify the entered data*/

  FY0F760(); /* Process valid input request*/


end // end FY0F700

// Obtain the data to display
Function FY0F710()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on the map from selected*/
   /* row on the list screen.*/
   /* ------------------------------------------------------------*/

  set FY0FW03 empty; /* Record hold area*/
  set FY2REC empty;
  set FY3REC empty;
  set FY4REC empty;
  FY2REC.XGPCD = FY0FM003.XGPCD; /* Move in key fields*/
  FY2REC.FY1FCTYC = FY0FM003.FY1FCTYC;
  FY2REC.SY1STNBR = FY0FM003.SY1STNBR;
  FY2REC.XSECD = FY0FM003.XSECD;
   /* ----------- Y2K OUT BEGIN ----------*/
   /* IF FY0FM003.FY0FMSYR GT 0;*/
   /* ----------- Y2K OUT END ------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR;
    if (FY0FW01.FY0FWSYY < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end
   /* ----------- Y2K OUT BEGIN-----------*/
   /* ELSE;*/
    /* MOVE 0 TO FY2REC.XSNYR;*/
   /* END;*/
   /* ----------- Y2K OUT END ------------*/

  FY0FS20(); /* Select fy2rec row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
    FY0FW03.FY2GROUP = FY2REC.FY2GROUP; /* Save the row for later*/
  end
  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(21);
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.SY1STNBR cursor, bold; /* Set cursor to to style*/
    return;
  end

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
  FY3REC.XDMCD = FY0FM003.XDMCD;
  FY3REC.XQACD = FY0FM003.XQACD;
  FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
  FY3REC.XPGCD = FY0FM003.XPGCD;
  FY3REC.XUMCD = FY0FM003.XUMCD;
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;

  FY0FS22(); /* Select fy3rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(21);
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.SY1STNBR cursor, bold; /* Set cursor to to style*/
    return;
  end

  /* IF FY0FW01.XGPCD NE '02';*/
  /* EZERTN;*/
  /* END;*/

   /* Next get the scheduling FOB*/

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;
  FY0FW01.FY0FWFOB = 0; /* Zero out ws fob price*/
  FY0FW01.FY0FWPIN = " "; /* Clear out ws fob price ind.*/
  FY0FS07(); /* Select set of fy4rec rows*/
  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
    FY0FS08(); /* fetch fy4rec row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
      FY0F411(); /* determine FOB price*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
       && FY3REC.XQACD == "02")      /* Quality '02'*/
        FY0FS10(); /* Close set of fy4rec rows*/
        if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
          FY4REC.XQACD = "01";
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F411(); /* determine FOB price*/
              FY0F412(); /* calculate from b-grade %*/
            end
          end
        end
      end
    end
    FY0FS10(); /* Close set of fy4rec rows*/
  end


end // end FY0F710

// Format and display the map
Function FY0F720()

   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No error*/
   && FY0FW01.FY0FWSWR == "Y")          /* Data requested*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0F721(); /* Move fields to map*/
    FY0FM003.FY0FMUAC = "N"; /* Default update all colors to nope*/
    set FY0FM003.XGPCD protect; /* Protect KEY fields*/
    set FY0FM003.FY1FCTYC protect;
    set FY0FM003.SY1STNBR protect;
    set FY0FM003.SY2CLRID protect;
    set FY0FM003.XDMCD protect;
    set FY0FM003.XQACD protect;
    set FY0FM003.PC2INSEG protect;
    set FY0FM003.XPGCD protect;
    set FY0FM003.XSECD protect;
    set FY0FM003.FY0FMSYR protect;
    set FY0FM003.FY0FMMFG cursor; /* Position cursor*/
  end

  FY0FM003.FY0FMFNC = "CHANGE"; /* Move 'CHANGE' literal to map*/
  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  if (FY0FW01.XGPCD > " ")
    FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move gpc code*/
    if (FY0FW01.XGPCD in XGPTBL.XGPCD)
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    FY0FW01.XGPDESC = FY0FM003.XGPDESC;
  end

  if (FY0FW01.FY1FCTYC > " ")
    FY0FM003.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FM003.FY1FCTSN = FY0FW01.FY1FCTSN;
  end

  if (FY0FW01.FY0FWPSW == "N" /* No error*/
   && FY0FW01.FY0FWSWR == "N") /* And data NOT requested*/
    if (FY0FM003.XGPCD == "02")
      FY0FM003.SY2CLRID = "00";
    end
    FY0FM003.XDMCD = "00";
    if (FY0FM003.XDMCD in XDMTBL.XDMCD)
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    end
    FY0FM003.PC2INSEG = "000";
    FY0FM003.XQACD = "01";
    if (FY0FM003.XQACD in XQATBL.XQACD)
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    end
    FY0FM003.XPGCD = "00";
    if (FY0FM003.XPGCD in XPGTBL.XPGCD)
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    end
    set FY0FM003.FY3PRTGT protect; /* Protect NON-KEY fields*/
    set FY0FM003.FY3PRCAP protect;
    set FY0FM003.FY3PRMIN protect;
    set FY0FM003.FY3FPRTY protect;
    set FY0FM003.FY0FMMFG protect;
    set FY0FM003.FY0FMFAB protect;
    set FY0FM003.FY0FMSTD protect;
    set FY0FM003.FY0FMSPC protect;
    set FY0FM003.FY0FMSTC protect;
    set FY0FM003.FY0FMLST protect;
    set FY0FM003.FY2MFGPC protect;
    set FY0FM003.FY3INPFL protect;
    set FY0FM003.FY3SFYFL protect;
    set FY0FM003.FY0FMUAC protect;
    if (FY0FM003.XGPCD == " ")
      set FY0FM003.XGPCD cursor; /* Set cursor to gpc code*/
    else
      if (FY0FM003.FY1FCTYC == " ")
        set FY0FM003.FY1FCTYC cursor; /* Set cursor to factory code*/
      else
        set FY0FM003.SY1STNBR cursor; /* Set cursor to style*/
      end
    end
  end


  if (FY0FW01.FY0FWPSW == "Y" /* fcty/style not found*/
   && FY0FM003.XGPCD != FY2REC.XGPCD
   && FY0FM003.SY1STNBR != FY2REC.SY1STNBR
   && FY0FM003.SY2CLRID != FY3REC.SY2CLRID
   && FY0FM003.XDMCD != FY3REC.XDMCD
   && FY0FM003.XQACD != FY3REC.XQACD
   && FY0FM003.PC2INSEG != FY3REC.PC2INSEG
   && FY0FM003.XPGCD != FY3REC.XPGCD
   && FY0FM003.XSECD != FY2REC.XSECD
   && FY0FM003.FY0FMSYR != FY0FW01.FY0FWSYY)

    set FY0FM003.FY3PRTGT protect; /* Protect NON-KEY fields*/
    set FY0FM003.FY3PRCAP protect;
    set FY0FM003.FY3PRMIN protect;
    set FY0FM003.FY3FPRTY protect;
    set FY0FM003.FY0FMMFG protect;
    set FY0FM003.FY0FMFAB protect;
    set FY0FM003.FY0FMSTD protect;
    set FY0FM003.FY0FMSPC protect;
    set FY0FM003.FY0FMSTC protect;
    set FY0FM003.FY0FMLST protect;
    set FY0FM003.FY2MFGPC protect;
    set FY0FM003.FY3INPFL protect;
    set FY0FM003.FY3SFYFL protect;
    set FY0FM003.FY0FMUAC protect;
  end

  if (FY0FW01.FY0FWPSW == "Y" /* fcty/style not found*/
   && FY0FM003.XGPCD == FY2REC.XGPCD
   && FY0FM003.SY1STNBR == FY2REC.SY1STNBR
   && FY0FM003.SY2CLRID == FY3REC.SY2CLRID
   && FY0FM003.XDMCD == FY3REC.XDMCD
   && FY0FM003.XQACD == FY3REC.XQACD
   && FY0FM003.PC2INSEG == FY3REC.PC2INSEG
   && FY0FM003.XPGCD == FY3REC.XPGCD
   && FY0FM003.XSECD == FY2REC.XSECD
   && FY0FM003.FY0FMSYR == FY0FW01.FY0FWSYY)
    set FY0FM003.XGPCD protect; /* Protect KEY fields*/
    set FY0FM003.FY1FCTYC protect;
    set FY0FM003.SY1STNBR protect;
    set FY0FM003.SY2CLRID protect;
    set FY0FM003.XDMCD protect;
    set FY0FM003.XQACD protect;
    set FY0FM003.PC2INSEG protect;
    set FY0FM003.XPGCD protect;
    set FY0FM003.XSECD protect;
    set FY0FM003.FY0FMSYR protect;
  end

  if (FY0FW01.FY0FWPSW == "N" /* Error flag = no*/
   && converseVar.validationMsgNum != 0) /* and error exists*/
    set FY0FM003.XGPCD protect; /* Protect KEY fields*/
    set FY0FM003.FY1FCTYC protect;
    set FY0FM003.SY1STNBR protect;
    set FY0FM003.SY2CLRID protect;
    set FY0FM003.XDMCD protect;
    set FY0FM003.XQACD protect;
    set FY0FM003.PC2INSEG protect;
    set FY0FM003.XPGCD protect;
    set FY0FM003.XSECD protect;
    set FY0FM003.FY0FMSYR protect;
  end

  set FY0FM003.XUMCD protect;

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0FM003 alarm;
  end

  if (FY0FW01.FY0FWMFL == "Y")
    converseLib.validationFailed(1);
    FY0FM003.XXXPRCNM = "FY0F720";
    FY0FW01.FY0FWMFL = " ";
  end

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (COMMAREA.CAILVL[1] != "Y") /* FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible; /* Darken*/
    set FY0FM003.FY0FMPIN skip, invisible; /* Darken*/
  end


  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/

  if (converseVar.eventKey is enter)
    FY0F722(); /* Check for ? entered by user*/
  end
end // end FY0F720

// Load data on map
Function FY0F721()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY1REC.XGPCD = FY2REC.XGPCD;
  FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;

  FY0FS01(); /* Get factory default lead times*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.FY1MFGDY = FY1REC.FY1MFGDY;
    FY0FM003.FY1FABDY = FY1REC.FY1FABDY;
    FY0FM003.FY1LSTDY = FY1REC.FY1LSTDY;
    FY0FM003.FY1STDC = FY1REC.FY1STDC;
    FY0FM003.FY1SPCLC = FY1REC.FY1SPCLC;
    FY0FM003.FY1STCDY = FY1REC.FY1STCDY;
  end


  FY0FM003.FY1FCTYC = FY2REC.FY1FCTYC;
  FY0FM003.SY1STNBR = FY2REC.SY1STNBR;
  FY0FM003.SY2CLRID = FY3REC.SY2CLRID;
  FY0FM003.XDMCD = FY3REC.XDMCD;
  if (FY3REC.XDMCD in XDMTBL.XDMCD)
    FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  PG2REC.XGPCD = FY2REC.XGPCD;
  PG2REC.SY1STNBR = FY2REC.SY1STNBR;
  PG2REC.SY2CLRID = FY3REC.SY2CLRID;
  PG2REC.XDMCD = FY3REC.XDMCD;

  XSPG202(); /* Select style/color row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
    FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
  end

  FY0FM003.XQACD = FY3REC.XQACD;
  if (FY3REC.XQACD in XQATBL.XQACD)
    FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  end
  FY0FM003.PC2INSEG = FY3REC.PC2INSEG;
  FY0FM003.XPGCD = FY3REC.XPGCD;
  if (FY3REC.XPGCD in XPGTBL.XPGCD)
    FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
  end
  FY0FM003.XUMCD = FY3REC.XUMCD;
  if (FY3REC.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end
  FY0FM003.XSECD = FY3REC.XSECD;
  if (FY0FM003.XGPCD == "03")
    FY0FW01.FY0FWSNY = FY3REC.XSNYR;
    FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY;
  else
    FY0FM003.FY0FMSYR = FY3REC.XSNYR;
  end

  FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
  FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
  FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
  FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
  FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
  FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
  FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FW01.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY;
  FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
  FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
  FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
  FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
  FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
  FY0FM003.FY0FMFOB = FY0FW01.FY0FWFOB;
  FY0FM003.FY0FMPIN = FY0FW01.FY0FWPIN;


end // end FY0F721

// Check for ? inquiry by user
Function FY0F722()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD == "?" /* if any ? entered*/
   || FY0FM003.XSECD == "?" 
   || FY0FM003.FY0FMSYR == "?"
   || FY0FM003.XQACD == "?" 
   || FY0FM003.XDMCD == "?" 
   || FY0FM003.XPGCD == "?")

    if (FY0FM003.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0FM003.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XGPCD = " "; /* clear fields*/
        FY0FM003.XGPDESC = " ";
      end
    end


    if (FY0FM003.XSECD == "?" /* if ? in season code field*/
     || FY0FM003.FY0FMSYR == "?") /* or ? in season year field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SEASON    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYSN01(); /* perform season code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XSECD = YSNTBL.XSECD[XX0XWPIX]; /* move code*/
        FY0FW01.FY0FWSNY = YSNTBL.XSNYR[XX0XWPIX];
        FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY; /* move year*/
      else
        FY0FM003.XSECD = " "; /* clear fields*/
        FY0FM003.FY0FMSYR = 0;
      end
    end

    if (FY0FM003.XQACD == "?") /* if ? in quality code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                QUALITY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXQA01(); /* perform quality code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
        FY0FM003.XQADESC = XQATBL.XQADESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XQADESC = " "; /* move name*/
        FY0FM003.XQACD = " "; /* clear fields*/
      end
    end


    if (FY0FM003.XDMCD == "?") /* if ? in dimension code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "          DIMENSION       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXDM01(); /* perform dimension code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* move code*/
        FY0FM003.XDMDESC = XDMTBL.XDMDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XDMCD = " "; /* clear fields*/
        FY0FM003.XDMDESC = " "; /* move name*/
      end
    end


    if (FY0FM003.XPGCD == "?") /* if ? in package type field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        PACKAGE TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXPG01(); /* perform package type window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XPGCD = XPGTBL.XPGCD[XX0XWPIX]; /* move code*/
        FY0FM003.XPGDESC = XPGTBL.XPGDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XPGCD = " "; /* clear fields*/
        FY0FM003.XPGDESC = " "; /* move name*/
      end
    end


    converseLib.clearScreen();
     /* restore the original map*/

  end


end // end FY0F722

// Check attention identifier
Function FY0F730()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    FY0FW01.FY0FWSWR = "N"; /* Set request for data to NO*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch to NO*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F730"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    FY0FW01.SY1STNBR = " ";
    FY0FM001.SY1STNBR = " ";
    FY0FW01.SY1SSTNM = " ";
    FY0FM001.SY1SSTNM = " ";
    FY0FW01.SY2CLRID = " ";
    FY0FM001.SY2CLRID = " ";
    FY0FW01.SY2CLRAB = " ";
    FY0FM001.SY2CLRAB = " ";
    FY0FM001.XQACD = FY0FW01.XQACD;
    FY0FM001.XDMCD = FY0FW01.XDMCD;
    FY0FM001.PC2INSEG = FY0FW01.PC2INSEG;
    FY0FM001.XPGCD = FY0FW01.XPGCD;
    FY0FW01.XSECD = " ";
    FY0FM001.XSECD = " ";
    FY0FW01.XSNYR = 0;
    FY0FW01.FY0FWSNY = 0;
    FY0FW01.FY0FWSYR = 0;
    FY0FM001.FY0FMSYR = 0;
    if (FY0FW01.XGPCD > " "
     && FY0FW01.FY1FCTYC > " ")
      FY0FM001.XGPCD = FY0FM003.XGPCD; /* Set up map 1 data*/
      FY0FM001.FY1FCTYC = FY0FM003.FY1FCTYC;
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data to yes*/
    else
      FY0FW01.FY0FWSWR = "N"; /* Set request for data to no*/
    end
    FY0FW01.FY0FWLSF = "Y"; /* Set list screen flag to yes*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F730"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F730"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Exit to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Exit to FOB by eff date*/
    end
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F730"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Exit to FOB by eff date*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F730"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
     /* next sentence*/
  else
    FY0FM003.XXXPRCNM = "FY0F730"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F730

// Reset highlighted fields
Function FY0F740()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.XUMCD initialAttributes; /* Unit of measure code*/
  set FY0FM003.XUMDESC initialAttributes; /* Unit of measure desc.*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

  if (FY0FM003.XGPCD == "03") /* Apparel*/
    set FY0FM003.FY0FMSNL initialAttributes; /* Season literal*/
    set FY0FM003.FY0FMSLL initialAttributes; /* Slash literal*/
  end


end // end FY0F740

// Verify the entered data
Function FY0F750()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "N"; /* Initialize data entered flag*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F750"; /* Process name*/
    exit stack;
  end

  if (FY0FM003.XGPCD == FY2REC.XGPCD
   && FY0FM003.SY1STNBR == FY2REC.SY1STNBR
   && FY0FM003.SY2CLRID == FY3REC.SY2CLRID
   && FY0FM003.XQACD == FY3REC.XQACD
   && FY0FM003.XDMCD == FY3REC.XDMCD
   && FY0FM003.PC2INSEG == FY3REC.PC2INSEG
   && FY0FM003.XPGCD == FY3REC.XPGCD
   && FY0FM003.XSECD == FY2REC.XSECD
   && FY0FM003.FY0FMSYR == FY0FW01.FY0FWSYY
   && FY0FM003.FY0FMMFG == FY2REC.FY1MFGDY
   && FY0FM003.FY0FMFAB == FY2REC.FY1FABDY
   && FY0FM003.FY0FMSTD == FY2REC.FY1STDC
   && FY0FM003.FY0FMSPC == FY2REC.FY1SPCLC
   && FY0FM003.FY0FMSTC == FY2REC.FY1STCDY
   && FY0FM003.FY0FMLST == FY2REC.FY1LSTDY
   && FY0FM003.FY2MFGPC == FY2REC.FY2MFGPC
   && FY0FM003.FY3PRCAP == FY3REC.FY3PRCAP
   && FY0FM003.FY3PRTGT == FY3REC.FY3PRTGT
   && FY0FM003.FY3PRMIN == FY3REC.FY3PRMIN
   && FY0FM003.FY3FPRTY == FY3REC.FY3FPRTY
   && FY0FM003.FY3INPFL == FY3REC.FY3INPFL
   && FY0FM003.FY3SFYFL == FY3REC.FY3SFYFL)
    set FY0FM003 initial;
    FY0FW01.FY0FWSWR = "N";
    exit stack; /* Exit to redisplay map*/
  else
    FY0F751(); /* Validate input data*/
  end

end // end FY0F750

// Validate any input data
Function FY0F751()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "Y"; /* Data has been entered*/

  if (FY0FM003.XGPCD != FY2REC.XGPCD
   || FY0FM003.SY1STNBR != FY2REC.SY1STNBR
   || FY0FM003.SY2CLRID != FY3REC.SY2CLRID
   || FY0FM003.XDMCD != FY3REC.XDMCD
   || FY0FM003.XQACD != FY3REC.XQACD
   || FY0FM003.PC2INSEG != FY3REC.PC2INSEG
   || FY0FM003.XPGCD != FY3REC.XPGCD
   || FY0FM003.XSECD != FY2REC.XSECD
   || FY0FM003.FY0FMSYR != FY0FW01.FY0FWSYY)

    /* ------------------------------------------------------------*/
     /* VALIDATE THE FOLLOWING FIELDS AND DROP THROUGH THE REST*/
    /* ------------------------------------------------------------*/

    /* ------------------------------------------------------------*/
     /* DO NOT VALIDATE SEASON FOR FOOTWEAR*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.XGPCD != "02")

  /* GET FY0FSRL*/
      /* ------------------------------------------------------------*/
      /* CHECK FOR A VALID SEASON YEAR*/
      /* ------------------------------------------------------------*/

      FY0FW01.XSNYR = 0; /* Initialize working storage season*/
      /* ---------- Y2K OUT BEGIN ----------*/
      /* IF FY0FM003.FY0FMSYR GT 0;   /* If season year entered*/
      /* MOVE 19 TO FY0FW01.FY0FWSCC;/* Set up century*/
      /* ---------- Y2K OUT END ------------*/

      /* ---------- Y2K IN BEGIN ----------*/
      if (FY0FM003.FY0FMSYR > 60)
        FY0FW01.FY0FWSCC = 19; /* Set up century*/
      else
        FY0FW01.FY0FWSCC = 20; /* Set up century*/
      end
        /* ---------- Y2K IN END ------------*/
      FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
      FY0FW01.XSNYR = FY0FW01.FY0FWSNY; /* Move to season year*/

      sysVar.arrayIndex = 1; /* Initialize ezetst*/
      FY0FW01.FY0FWSW1 = "N";
      while (FY0FW01.FY0FWSW1 == "N")
        if (FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
         && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
         && FY0FW01.XSNYR == YSNTBL.XSNYR[sysVar.arrayIndex])
          FY0FW01.FY0FWSW1 = "Y";
        else
          if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
            FY0FW01.FY0FWSW1 = "Y";
            FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
            converseLib.validationFailed(75); /* Error message and highlight*/
            FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
            set FY0FM003.FY0FMSYR cursor, modified, bold;
            FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          end
        end
        sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
      end
      /* ---------- Y2K OUT BEGIN ----------*/
      /* END;*/
      /* ---------- Y2K OUT END ------------*/

      /* ------------------------------------------------------------*/
      /* CHECK FOR A VALID SEASON CODE*/
      /* ------------------------------------------------------------*/

      if (FY0FM003.XSECD > " ") /* If season code entered*/
        sysVar.arrayIndex = 1; /* Initialize ezetst*/
        FY0FW01.FY0FWSW1 = "N";
        while (FY0FW01.FY0FWSW1 == "N")
          if (FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
           && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
           && FY0FM003.XSECD == YSNTBL.XSECD[sysVar.arrayIndex])
            FY0FW01.FY0FWSW1 = "Y";
          else
            if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
              FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
              converseLib.validationFailed(74); /* Error message and highlight*/
              FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
              set FY0FM003.XSECD cursor, modified, bold;
              FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
              FY0FW01.FY0FWSW1 = "Y";
            end
          end
          sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
        end
      end



    end /* End of footwear check*/

    /* ------------------------------------------------------------*/
     /* CHECK FOR A VALID PACKAGE TYPE*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.XPGCD > " ") /* If package type entered*/
      if (FY0FM003.XPGCD in XPGTBL.XPGCD)
        FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
      else
        FY0FM003.XPGDESC = " ";
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(79); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.XPGCD cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    else
      FY0FM003.XPGDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(79); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.XPGCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* CHECK FOR A VALID INVENTORY SEGMENT CODE*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.PC2INSEG > " ") /* If spec entered*/
      PC2REC.XGPCD = FY0FM003.XGPCD;
      PC2REC.PC2INSEG = FY0FM003.PC2INSEG;
      FY0FS29();
      if (SQLCA.VAGen_SQLCODE == 0
       && PC2REC.XXXSTAT == "A")
         /* next sentence*/
      else
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(77); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.PC2INSEG cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(77); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.PC2INSEG cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* CHECK FOR A VALID QUALITY CODE*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.XQACD > " ") /* If quality entered*/
      if (FY0FM003.XQACD in XQATBL.XQACD)
        FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
      else
        FY0FM003.XQADESC = " ";
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(76); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.XQACD cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    else
      FY0FM003.XQADESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(76); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.XQACD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* CHECK FOR A VALID DIMENSION*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.XDMCD > " ") /* If dimension entered*/
      if (FY0FM003.XDMCD in XDMTBL.XDMCD)
        FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
      else
        FY0FM003.XDMDESC = " ";
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(78); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.XDMCD cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    else
      FY0FM003.XDMDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(78); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.XDMCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* INSURE THAT A STYLE IS ENTERED*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.SY1STNBR == " ") /* style not entered*/
      FY0FW01.SY1SSTNM = " "; /* Clear description*/
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      converseLib.validationFailed(73); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.SY1STNBR cursor, modified, bold;
    end

    /* ------------------------------------------------------------*/
     /* VALIDTE STYLE/COLOR COMBINATION*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.SY1STNBR > " " /* If style entered*/
     && FY0FM003.SY2CLRID > " ") /* and color entered*/
      PG2REC.XGPCD = FY0FM003.XGPCD;
      PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
      PG2REC.SY2CLRID = FY0FM003.SY2CLRID;
      if (FY0FM003.XDMCD > " ")
        PG2REC.XDMCD = FY0FM003.XDMCD;
      else
        PG2REC.XDMCD = "00";
      end
      XSPG202(); /* Select unique color*/
      if (SQLCA.VAGen_SQLCODE == 0)
        FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
        FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
        FY0FM003.XUMCD = PG2REC.XUMCD;
        FY0FW01.XUMCD = PG2REC.XUMCD;
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          FY0FM003.SY1SSTNM = " "; /* Clear description*/
          FY0FM003.SY2CLRAB = " "; /* Clear description*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(73); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
          set FY0FM003.SY1STNBR cursor, modified, bold;
          set FY0FM003.SY2CLRID bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE STYLE*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.SY1STNBR > " " /* If style entered*/
     && FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
      PG2REC.XGPCD = FY0FM003.XGPCD;
      PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
      XSPG201(); /* Open cursor*/
      if (SQLCA.VAGen_SQLCODE == 0)
        FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
        FY0FM003.XUMCD = PG2REC.XUMCD;
        FY0FW01.XUMCD = PG2REC.XUMCD;
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          FY0FM003.SY1SSTNM = " "; /* Clear description*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(73); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
          set FY0FM003.SY1STNBR cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE FACTORY CODE*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.FY1FCTYC > " ") /* If factory entered*/
      FY1REC.XGPCD = FY0FM003.XGPCD;
      FY1REC.FY1FCTYC = FY0FM003.FY1FCTYC;
      FY0FS01(); /* Select unique factory*/
      if (SQLCA.VAGen_SQLCODE == 0)
        FY0FW01.FY1FCTYC = FY1REC.FY1FCTYC;
        FY0FM003.FY1FCTSN = FY1REC.FY1FCTSN;
        FY0FW01.FY1FCTSN = FY1REC.FY1FCTSN;
      else
        if (SQLCA.VAGen_SQLCODE == 100)
          FY0FW01.FY1FCTYC = " ";
          FY0FW01.FY1FCTSN = " "; /* Clear description*/
          FY0FM003.FY1FCTSN = " "; /* Clear description*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(33); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
          set FY0FM003.FY1FCTYC cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
    else
      FY0FW01.FY1FCTYC = " ";
      FY0FW01.FY1FCTSN = " "; /* Clear description*/
      FY0FM003.FY1FCTSN = " "; /* Clear description*/
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(33); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.FY1FCTYC cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* CHECK FOR A VALID GPC CODE*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.XGPCD > " ") /* If gpc code entered*/
      if (FY0FM003.XGPCD in XGPTBL.XGPCD)
        FY0FW01.XGPCD = FY0FM003.XGPCD; /* Save in working storage*/
        FY0FW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
        COMMAREA.XGPCD = FY0FM003.XGPCD; /* Save in commarea*/
      else
        FY0FW01.XGPCD = " ";
        FY0FW01.XGPDESC = " ";
        FY0FM003.XGPDESC = " ";
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(101); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.XGPCD cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    else
      FY0FW01.XGPCD = " ";
      FY0FW01.XGPDESC = " ";
      FY0FM003.XGPDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.XGPCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

  else

    /* ------------------------------------------------------------*/
     /* VALIDATE THE UPDATE ALL COLORS FLAG*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.FY0FMUAC == "Y" /* must equal 'y' or 'n'*/
     || FY0FM003.FY0FMUAC == "N")
       /* next sentence*/
    else
      converseLib.validationFailed(47); /* Error message*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.FY0FMUAC cursor, modified, bold;
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE IN PRODUCTION FLAG*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.FY3INPFL == "Y" /* must equal 'y' or 'n'*/
     || FY0FM003.FY3INPFL == "N")
       /* next sentence*/
    else
      converseLib.validationFailed(47); /* Error message*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.FY3INPFL cursor, modified, bold;
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE IN STYLE FACTORY PRIORITY FLAG*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.FY3SFYFL == "Y" /* must equal 'y' or 'n'*/
     || FY0FM003.FY3SFYFL == "N")
       /* next sentence*/
    else
      converseLib.validationFailed(47); /* Error message*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.FY3SFYFL cursor, modified, bold;
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* VALIDATE THE MANUFACTURING PERCENT*/
    /* ------------------------------------------------------------*/

    if (FY0FM003.FY2MFGPC >= 0 /* must equal be greater than or equal*/
     /* to 0*/
     && FY0FM003.FY2MFGPC <= 100) /* and less than or equal to 100*/

      FY0FW01.ZZZCHGCT = FY2REC.ZZZCHGCT; /* Save chg count*/

      if (FY0FM003.XGPCD == "03") /* Apparel*/
        FY0FS99(); /* Add up total %*/
      end

      FY2REC.ZZZCHGCT = FY0FW01.ZZZCHGCT; /* Restore chg count*/

    else
      converseLib.validationFailed(56); /* Error message*/
      FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
      set FY0FM003.FY2MFGPC cursor, modified, bold;
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end

    /* ------------------------------------------------------------*/
     /* INSURE THAT A COLOR IS ENTERED IF ALL COLORS FLAG = 'N'*/
    /* ------------------------------------------------------------*/

    if (converseVar.validationMsgNum == 0) /* no error*/
      if (FY0FM003.FY0FMUAC == "N" /* all colors flag = 'n'*/
       && FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
        FY0FW01.SY2CLRAB = " "; /* Clear description*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.SY2CLRID cursor, modified, bold;
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end

    /* ------------------------------------------------------------*/
     /* IF ALL COLORS FLAG EQUALS 'Y', TABLE ALL THE COLORS*/
    /* ------------------------------------------------------------*/

    if (converseVar.validationMsgNum == 0 /* If no errors*/
     && FY0FM003.FY0FMUAC == "Y")         /* and all colors flag = 'y'*/
      XX0XS01(); /* Get current date*/
      PG2REC.XGPCD = FY0FM003.XGPCD;
      PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
      PG2REC.SY2CLRID = " ";
      PG2REC.XDMCD = FY0FM003.XDMCD;
      FY0FS17(); /* Open style/color cursor*/
      if (SQLCA.VAGen_SQLCODE == 0)
        FY0FS18(); /* Fetch style/color row*/
        FY0FW01.FY0FWIDX = 1;
        FY0FW01.FY0FWSW1 = "N";
        move " " to FY0FW01.FY0FWGCL[1] for all; /* Init color array*/
        while (FY0FW01.FY0FWPSW == "N"
         && FY0FW01.FY0FWIDX <= 100
         && FY0FW01.FY0FWSW1 == "N")
           /* check life cycle*/
          if (XX0XW01.XX0XWDAT > PG2REC.SY2CEDT1) /* Life cyc dt current*/
            if (PG2REC.XLCCD1 == "10") /* Life cycle is active*/
              FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
              FY0FW01.FY0FWIDX = FY0FWIDX + 1;
            end
          else
            if (XX0XW01.XX0XWDAT > PG2REC.SY2CEDT2) /* Life cyc dt current*/
              if (PG2REC.XLCCD2 == "10") /* Life cycle is active*/
                FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
                FY0FW01.FY0FWIDX = FY0FWIDX + 1;
              end
            else
              if (XX0XW01.XX0XWDAT > PG2REC.SY2CEDT3)
                                   /* Life cyc dt current*/
                if (PG2REC.XLCCD3 == "10") /* Life cycle is active*/
                  FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
                  FY0FW01.FY0FWIDX = FY0FWIDX + 1;
                end
              else
                if (XX0XW01.XX0XWDAT > PG2REC.SY2CEDT4) /* Life cyc dt cur*/
                  if (PG2REC.XLCCD4 == "10") /* Life cycle is active*/
                    FY0FW01.FY0FWCLR[FY0FWIDX] = PG2REC.SY2CLRID;
                    FY0FW01.FY0FWIDX = FY0FWIDX + 1;
                  end
                end /* Life cycle 4*/
              end /* Life cycle 3*/
            end /* Life cycle 2*/
          end /* Life cycle 1*/
          FY0FS18(); /* Fetch style/color row*/
        end /* End while loop*/
        FY0FS19(); /* Close style/color cursor*/
      end /* End sqlcode check on open cursor*/
    end
  end

   /* ------------------------------------------------------------*/
   /* IF NO ERRORS, INSURE THAT ONLY ONE STYLE ROW HAS THE STYLE*/
   /* PRIORITY FLAG SET TO "Y"*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No errors*/
   && FY0FM003.FY3SFYFL == "Y") /* and prty flag is yes*/
    FY3REC.XGPCD = FY0FM003.XGPCD;
    FY3REC.FY1FCTYC = "*"; /* Wild card the factory*/
    FY3REC.SY1STNBR = FY0FM003.SY1STNBR;
    FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
    FY3REC.XDMCD = FY0FM003.XDMCD;
    FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
    FY3REC.XPGCD = FY0FM003.XPGCD;
    FY3REC.XUMCD = FY0FM003.XUMCD;
    FY3REC.XSECD = FY0FM003.XSECD;
    FY3REC.XXXSTAT = "A";

    /* ------------ Y2K OUT BEGIN ------------*/
    /* IF FY0FM003.XGPCD EQ '03'      /* If gpc is apparel*/
      /* OR FY0FM003.XSECD GT ' '     /* or season code entered*/
      /* OR FY0FM003.FY0FMSYR GT 0;   /* or season entered*/
      /* MOVE 19 TO FY0FW01.FY0FWSCC; /* Set up century*/
    /* ------------ Y2K OUT END --------------*/

    /* --------- Y2K IN BEGIN ------------*/
    if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    /* --------- Y2K IN END --------------*/
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
    FY3REC.XSNYR = FY0FW01.FY0FWSNY;
    /* ------------ Y2K OUT BEGIN ------------*/
    /* ELSE;*/
      /* MOVE 0 TO FY3REC.XSNYR;*/
    /* END;*/
    /* ------------ Y2K OUT END --------------*/

    FY0FS05(); /* Open fy3rec cursor*/
    FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/

    FY0FS06(); /* Fetch row*/
    while (FY0FW01.FY0FWSW2 == "N" /* While not end of file*/
     && FY0FW01.FY0FWPSW == "N") /* and no errors*/
      if (FY3REC.FY3SFYFL == "Y") /* Prty flag eq 'y'*/
        FY0FW01.FY0FWPSW = "Y"; /* set error switch*/
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        converseLib.validationFailed(127); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F751"; /* Process name*/
        set FY0FM003.FY3SFYFL cursor, bold; /* Highlight field*/
      else
        FY0FS06(); /* Fetch row*/
      end
    end

    FY0FS12(); /* Close cursor*/

  end

end // end FY0F751

// Process valid input request
Function FY0F760()
   /* ------------------------------------------------------------*/
   /* Process valid inout request*/
   /* 1.  If the update all colors flag = yes update all rows*/
       /* in the fy3rec for that style*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0 /* No errors*/
   && FY0FW01.FY0FWDEF == "Y")          /* and data was entered*/

     /* next sentence*/

  else

    exit stack; /* Flow to reconverse map*/

  end

  if (FY0FM003.XGPCD != FY2REC.XGPCD
   || FY0FM003.SY1STNBR != FY2REC.SY1STNBR
   || FY0FM003.SY2CLRID != FY3REC.SY2CLRID
   || FY0FM003.XDMCD != FY3REC.XDMCD
   || FY0FM003.XQACD != FY3REC.XQACD
   || FY0FM003.PC2INSEG != FY3REC.PC2INSEG
   || FY0FM003.XPGCD != FY3REC.XPGCD
   || FY0FM003.XUMCD != FY3REC.XUMCD
   || FY0FM003.XSECD != FY2REC.XSECD
   || FY0FM003.FY0FMSYR != FY0FW01.FY0FWSYY)
    FY0FW01.FY0FWSWR = "Y";
    exit stack;
  end

  FY2REC.XGPCD = FY0FM003.XGPCD; /* gpc code*/
  FY2REC.FY1FCTYC = FY0FM003.FY1FCTYC; /* factory code*/
  FY2REC.SY1STNBR = FY0FM003.SY1STNBR; /* style*/
  FY2REC.XSECD = FY0FM003.XSECD; /* season code*/

  FY3REC.XGPCD = FY0FM003.XGPCD; /* gpc code*/
  FY3REC.FY1FCTYC = FY0FM003.FY1FCTYC; /* factory code*/
  FY3REC.SY1STNBR = FY0FM003.SY1STNBR; /* style*/
  FY3REC.XDMCD = FY0FM003.XDMCD;
  FY3REC.XQACD = FY0FM003.XQACD;
  FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
  FY3REC.XPGCD = FY0FM003.XPGCD;
  FY3REC.XUMCD = FY0FM003.XUMCD;
  FY3REC.XSECD = FY0FM003.XSECD; /* season code*/

  if (FY0FM003.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
    FY3REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR;
    if (FY0FM003.FY0FMSYR < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
    FY3REC.XSNYR = FY0FW01.FY0FWSNY;
  end

  XX0XS01(); /* Obtain current date and time*/
  FY2REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
  FY2REC.ZZZCHGTM = XX0XW01.XX0XWTIM;

  if (FY0FM003.FY0FMMFG != FY0FW03.FY1MFGDY /* Does fcty/sty have changes?*/
   || FY0FM003.FY0FMFAB != FY0FW03.FY1FABDY 
   || FY0FM003.FY0FMLST != FY0FW03.FY1LSTDY 
   || FY0FM003.FY0FMSTD != FY0FW03.FY1STDC  
   || FY0FM003.FY0FMSPC != FY0FW03.FY1SPCLC 
   || FY0FM003.FY0FMSTC != FY0FW03.FY1STCDY 
   || FY0FM003.FY2MFGPC != FY0FW03.FY2MFGPC)

    FY2REC.FY1MFGDY = FY0FM003.FY0FMMFG;
    FY2REC.FY1FABDY = FY0FM003.FY0FMFAB;
    FY2REC.FY1LSTDY = FY0FM003.FY0FMLST;
    FY2REC.FY1STDC = FY0FM003.FY0FMSTD;
    FY2REC.FY1SPCLC = FY0FM003.FY0FMSPC;
    FY2REC.FY1STCDY = FY0FM003.FY0FMSTC;
    FY2REC.FY2MFGPC = FY0FM003.FY2MFGPC;
    FY2REC.ZFC-CRCY-CD = " ";

    FY0FS24(); /* Update the fy2rec*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Row updated*/
       /* Next sentence*/

    else
      if (SQLCA.VAGen_SQLCODE == 100) /* Row not updated*/
        converseLib.validationFailed(12); /* Row updated by someone else*/
        FY0FW01.FY0FWPSW = "Y"; /* Turn on error switch*/
        FY0FM003.XXXPRCNM = "FY0F760";

      end
    end
  end

  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    if (FY0FM003.FY0FMUAC == "Y") /* Update all colors*/

      FY3REC.SY2CLRID = "*"; /* Wild card the colors*/
      FY0FS05(); /* Open fy3rec cursor*/
      FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/
      FY0FS06(); /* Fetch row*/

      if (FY0FW01.FY0FWSW2 == "Y") /* No rows found*/
        FY0FW01.FY0FWPSW = "Y"; /* set error switch*/
        converseLib.validationFailed(69); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F660"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, bold; /* Highlight field*/
      end

      while (FY0FW01.FY0FWSW2 == "N" /* While not end of file*/
       && FY0FW01.FY0FWPSW == "N") /* and no errors*/
        FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
        FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
        FY3REC.FY3FPRTY = FY0FM003.FY3FPRTY;
        FY3REC.FY3PRTGT = FY0FM003.FY3PRTGT;
        FY3REC.FY3PRMIN = FY0FM003.FY3PRMIN;
        FY3REC.FY3PRCAP = FY0FM003.FY3PRCAP;
        FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
        FY3REC.FY3SFYFL = FY0FM003.FY3SFYFL;
        FY0FS25(); /* Update the fy3rec*/
        if (FY0FW01.FY0FWPSW == "N") /* and no errors*/
          FY0FS06(); /* Fetch row*/
        end
      end

      FY0FS12(); /* Close cursor*/

    else

      FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
      FY3REC.ZZZCHGDT = XX0XW01.XX0XWDAT;
      FY3REC.ZZZCHGTM = XX0XW01.XX0XWTIM;
      FY3REC.FY3FPRTY = FY0FM003.FY3FPRTY;
      FY3REC.FY3PRTGT = FY0FM003.FY3PRTGT;
      FY3REC.FY3PRMIN = FY0FM003.FY3PRMIN;
      FY3REC.FY3PRCAP = FY0FM003.FY3PRCAP;
      FY3REC.FY3INPFL = FY0FM003.FY3INPFL;
      FY3REC.FY3SFYFL = FY0FM003.FY3SFYFL;
      FY0FS25(); /* Update the fy3rec*/
    end
  end

  if (FY0FW01.FY0FWPSW == "N")
    VGVar.handleSysLibraryErrors = 0;
    sysLib.commit();
    set FY2REC empty;
    set FY3REC empty;
    set FY4REC empty;
    set FY0FM003 initial;
    FY0FW01.FY0FWSWR = "N"; /* set request for data*/
    FY0FW01.FY0FWMFL = "Y"; /* set message flag*/
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
  end

end // end FY0F760

// Factory/Style delete map
Function FY0F800()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No errors*/
    FY0F810(); /* Obtain the data to display*/
  end

  FY0F820(); /* Format and display the map*/

  FY0F830(); /* Check attention identifier*/

  FY0F840(); /* Reset fields to normal intensity*/

  FY0F850(); /* Verify the entered data*/

  FY0F860(); /* Process valid input request*/

end // end FY0F800

// Obtain the data to display
Function FY0F810()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on the map from selected*/
   /* row on the list screen.*/
   /* ------------------------------------------------------------*/

  set FY2REC empty;
  set FY3REC empty;
  set FY4REC empty;
  FY2REC.XGPCD = FY0FM001.XGPCD; /* Move in key fields*/
  FY2REC.FY1FCTYC = FY0FM001.FY1FCTYC;
  FY2REC.SY1STNBR = FY0FM001.FY0FMSTY[FY0FWIXM];
  FY2REC.XSECD = FY0FM001.FY0FMSNC[FY0FWIXM];
   /* ---------- Y2K OUT BEGIN ------------*/
   /* IF FY0FM001.FY0FMSNY(FY0FWIXM) GT 0;*/
   /* ---------- Y2K OUT END --------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM001.FY0FMSNY[FY0FWIXM];
    if (FY0FW01.FY0FWSYY < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end
   /* ---------- Y2K OUT BEGIN ------------*/
   /* ELSE;*/
    /* MOVE 0 TO FY2REC.XSNYR;*/
   /* END;*/
   /* ---------- Y2K OUT END --------------*/

  FY0FS20(); /* Select fy2rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(69);
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.CATOAP cursor; /* Set cursor to to application field*/
    return;
  end

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.SY2CLRID = FY0FM001.FY0FMCLR[FY0FWIXM];
  if (FY0FM001.FY0FMDIM[FY0FWIXM] == " ")
    FY3REC.XDMCD = "00";
  else
    FY3REC.XDMCD = FY0FM001.FY0FMDIM[FY0FWIXM];
  end
  if (FY0FM001.FY0FMQUA[FY0FWIXM] == " ")
    FY3REC.XQACD = "01";
  else
    FY3REC.XQACD = FY0FM001.FY0FMQUA[FY0FWIXM];
  end
  if (FY0FM001.FY0FMSPC[FY0FWIXM] == " ")
    FY3REC.PC2INSEG = "000";
  else
    FY3REC.PC2INSEG = FY0FM001.FY0FMSPC[FY0FWIXM];
  end
  if (FY0FM001.FY0FMPKG[FY0FWIXM] == " ")
    FY3REC.XPGCD = "00";
  else
    FY3REC.XPGCD = FY0FM001.FY0FMPKG[FY0FWIXM];
  end
  if (FY0FM001.FY0FMUOM[FY0FWIXM] == " ")
    FY3REC.XUMCD = "01";
  else
    FY3REC.XUMCD = FY0FM001.FY0FMUOM[FY0FWIXM];
  end
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;

  FY0FS22(); /* Select fy3rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(69);
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.CATOAP cursor; /* Set cursor to to application field*/
    return;
  end

  /* IF FY0FW01.XGPCD NE '02';         /* If not footwear*/
  /* EZERTN;*/
  /* END;*/

   /* Next get the scheduling FOB*/

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;
  FY0FW01.FY0FWFOB = 0; /* Zero out ws fob price*/
  FY0FW01.FY0FWPIN = " "; /* Clear out ws fob price ind.*/
  FY0FS07(); /* Select set of fy4rec rows*/
  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
    FY0FS08(); /* fetch fy4rec row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
      FY0F411(); /* determine FOB price*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
       && FY3REC.XQACD == "02")      /* Quality '02'*/
        FY0FS10(); /* Close set of fy4rec rows*/
        if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
          FY4REC.XQACD = "01";
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F411(); /* determine FOB price*/
              FY0F412(); /* calculate from b-grade %*/
            end
          end
        end
      end
    end
    FY0FS10(); /* Close set of fy4rec rows*/
  end


end // end FY0F810

// Format and display the map
Function FY0F820()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N") /* No error*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0F821(); /* Move fields to map*/
    set FY0FM003.CATOAP cursor; /* Set cursor*/
  end

  FY0FM003.FY0FMFNC = "DELETE"; /* Move inquiry literal to map*/
  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move gpc code*/
  if (FY0FW01.XGPCD > " ")
    if (FY0FW01.XGPCD in XGPTBL.XGPCD)
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    FY0FW01.XGPDESC = FY0FM003.XGPDESC;
  end

  set FY0FM003.XGPCD protect; /* Gpc code*/
  set FY0FM003.FY1FCTYC protect; /* Factory code*/
  set FY0FM003.SY1STNBR protect; /* Style code*/
  set FY0FM003.SY2CLRID protect; /* Color code*/
  set FY0FM003.XDMCD protect; /* Dimension code*/
  set FY0FM003.XQACD protect; /* Quality code*/
  set FY0FM003.PC2INSEG protect; /* Spec diff code*/
  set FY0FM003.XPGCD protect; /* Pkg typ code*/
  set FY0FM003.XSECD protect; /* Season code*/
  set FY0FM003.FY0FMSYR protect; /* Season year*/
  set FY0FM003.XUMCD protect; /* Unit of measure code*/
  set FY0FM003.FY0FMMFG protect; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY protect; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB protect; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB protect; /* Fabric days*/
  set FY0FM003.FY1FABDY protect; /* Default fabric days*/
  set FY0FM003.FY3PRTGT protect; /* Target price*/
  set FY0FM003.FY0FMSTD protect; /* Standard comp. days*/
  set FY0FM003.FY1STDC protect; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP protect; /* Maximum price*/
  set FY0FM003.FY0FMSPC protect; /* Special comp. days*/
  set FY0FM003.FY1SPCLC protect; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN protect; /* Minimum price*/
  set FY0FM003.FY0FMSTC protect; /* Stitch days*/
  set FY0FM003.FY1STCDY protect; /* Default stitch days*/
  set FY0FM003.FY0FMLST protect; /* Last days*/
  set FY0FM003.FY1LSTDY protect; /* Default last days*/
  set FY0FM003.FY3FPRTY protect; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC protect; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL protect; /* In production flag*/
  set FY0FM003.FY3SFYFL protect; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC protect; /* Update all colors flag*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0FM003 alarm;
  else
    converseLib.validationFailed(65); /* ; 'Press pa2 or enter' message*/
  end

  if (FY0FW01.FY0FWMFL == "Y")
    converseLib.validationFailed(1);
    FY0FM003.XXXPRCNM = "FY0F820";
    FY0FW01.FY0FWMFL = "N";
  end

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (COMMAREA.CAILVL[1] != "Y") /* FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible; /* Darken*/
    set FY0FM003.FY0FMPIN skip, invisible; /* Darken*/
  end

  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/

end // end FY0F820

// Move fields to map
Function FY0F821()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY1REC.XGPCD = FY2REC.XGPCD;
  FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;

  FY0FS01(); /* Get factory default lead times*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.FY1MFGDY = FY1REC.FY1MFGDY;
    FY0FM003.FY1FABDY = FY1REC.FY1FABDY;
    FY0FM003.FY1LSTDY = FY1REC.FY1LSTDY;
    FY0FM003.FY1STDC = FY1REC.FY1STDC;
    FY0FM003.FY1SPCLC = FY1REC.FY1SPCLC;
    FY0FM003.FY1STCDY = FY1REC.FY1STCDY;
  end

  FY0FM003.FY1FCTYC = FY2REC.FY1FCTYC;
  FY0FM003.SY1STNBR = FY2REC.SY1STNBR;
  FY0FM003.SY2CLRID = FY3REC.SY2CLRID;
  FY0FM003.XDMCD = FY3REC.XDMCD;
  if (FY3REC.XDMCD in XDMTBL.XDMCD)
    FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  PG2REC.XGPCD = FY2REC.XGPCD;
  PG2REC.SY1STNBR = FY2REC.SY1STNBR;
  PG2REC.SY2CLRID = FY3REC.SY2CLRID;
  PG2REC.XDMCD = FY3REC.XDMCD;

  XSPG202(); /* Select style/color row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
    FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
  end

  FY0FM003.XQACD = FY3REC.XQACD;
  if (FY3REC.XQACD in XQATBL.XQACD)
    FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  end
  FY0FM003.PC2INSEG = FY3REC.PC2INSEG;
  FY0FM003.XPGCD = FY3REC.XPGCD;
  if (FY3REC.XPGCD in XPGTBL.XPGCD)
    FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
  end
  FY0FM003.XUMCD = FY3REC.XUMCD;
  if (FY3REC.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end
  FY0FM003.XSECD = FY3REC.XSECD;
  if (FY0FM003.XGPCD == "03")
    FY0FW01.FY0FWSNY = FY3REC.XSNYR;
    FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY;
  else
    FY0FM003.FY0FMSYR = FY3REC.XSNYR;
  end

  FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
  FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
  FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
  FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
  FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
  FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
  FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY;
  FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
  FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
  FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
  FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
  FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
  FY0FM003.FY0FMFOB = FY0FW01.FY0FWFOB;
  FY0FM003.FY0FMPIN = FY0FW01.FY0FWPIN;


end // end FY0F821

// Check attention identifier
Function FY0F830()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear selection field*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F830"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F830"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F830"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FYWREC.FY1FCTYC = FY0FM003.FY1FCTYC; /* Gpc code*/
    FYWREC.SY1STNBR = FY0FM003.SY1STNBR; /* Style*/
    FYWREC.SY2CLRID = FY0FM003.SY2CLRID; /* Color*/
    FYWREC.XDMCD = FY0FM003.XDMCD; /* Dimension*/
    FYWREC.XQACD = FY0FM003.XQACD; /* Quality code*/
    FYWREC.XPGCD = FY0FM003.XPGCD; /* Package Type code*/
    FYWREC.XUMCD = FY0FM003.XUMCD; /* Unit of Measure*/
    FYWREC.PC2INSEG = FY0FM003.PC2INSEG; /* Spec code*/
    FYWREC.XSECD = FY0FM003.XSECD; /* Season code*/
    FYWREC.XSNYR = FY0FM003.FY0FMSYR; /* Season year*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Transfer to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Transfer to FOB by eff date*/
    end
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F830"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Transfer to Factory*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F830"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
     /* next sentence*/
  else
    FY0FM003.XXXPRCNM = "FY0F830"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F830

// Reset highlighted fields
Function FY0F840()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.XUMCD initialAttributes; /* Unit of measure code*/
  set FY0FM003.XUMDESC initialAttributes; /* Unit of measure desc.*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F840

// Verify the entered data
Function FY0F850()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F850"; /* Process name*/
    exit stack;
  end


end // end FY0F850

// Process valid input request
Function FY0F860()
   /* ------------------------------------------------------------*/
   /* Process valid inout request*/
   /* 1.  If the update all colors flag = yes update all rows*/
       /* in the fy3rec for that style*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No errors*/

    FY0FS26(); /* Delete the fy3rec*/

    if (FY0FW01.FY0FWPSW == "N")
      FY3REC.SY2CLRID = "*"; /* Wild card all style fields*/
      FY3REC.XDMCD = "*"; /* not on the fy2rec*/
      FY3REC.XQACD = "*";
      FY3REC.PC2INSEG = "*";
      FY3REC.XPGCD = "*";
      FY3REC.XUMCD = "*";
      FY0FS05(); /* Open fy3rec cursor*/
      FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/
      FY0FS06(); /* Fetch row*/

      if (FY0FW01.FY0FWPSW == "N"
       && FY0FW01.FY0FWSW2 == "Y") /* If no rows found*/
        FY0FS27(); /* Delete the fy2rec row*/
      end
      FY0FS12(); /* Close cursor*/
    end

    if (FY0FW01.FY0FWPSW == "N")
      VGVar.handleSysLibraryErrors = 0;
      sysLib.commit();
      FY0FW01.FY0FWSTY = FY0FM003.SY1STNBR; /* move style to save key*/
      FY0FW01.FY0FWCOL = FY0FM003.SY2CLRID; /* move color to save key*/
      FY0FM001.FY0FMSEL[FY0FWIXM] = " "; /* Clear out selection field*/
      FY0FW01.FY0FWSWR = "Y"; /* set request for data*/
      FY0FW01.FY0FWMFL = "Y"; /* set message flag*/
    else
      VGVar.handleSysLibraryErrors = 0;
      sysLib.rollback();
    end
  end


end // end FY0F860

// Factory/Style delete map
Function FY0F900()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No errors*/
   && FY0FW01.FY0FWSWR == "Y") /* and data requested*/
    FY0F910(); /* Obtain the data to display*/
  end

  FY0F920(); /* Format and display the map*/

  FY0F930(); /* Check attention identifier*/

  FY0F940(); /* Reset fields to normal intensity*/

  FY0F950(); /* Verify the entered data*/

  FY0F960(); /* Process valid input request*/

end // end FY0F900

// Obtain the data to display
Function FY0F910()
   /* ------------------------------------------------------------*/
   /* Obtain data to be displayed on the map from selected*/
   /* row on the list screen.*/
   /* ------------------------------------------------------------*/

  set FY2REC empty;
  set FY3REC empty;
  set FY4REC empty;
  FY2REC.XGPCD = FY0FM003.XGPCD; /* Move in key fields*/
  FY2REC.FY1FCTYC = FY0FM003.FY1FCTYC;
  FY2REC.SY1STNBR = FY0FM003.SY1STNBR;
  FY2REC.XSECD = FY0FM003.XSECD;
   /* ---------- Y2K OUT BEGIN ------------*/
   /* IF FY0FM003.FY0FMSYR GT 0;*/
   /* ---------- Y2K OUT END --------------*/
  if (FY0FM001.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR;
    if (FY0FW01.FY0FWSYY < 80)
      FY0FW01.FY0FWSCC = 20;
    else
      FY0FW01.FY0FWSCC = 19;
    end
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end
   /* ---------- Y2K OUT BEGIN ------------*/
   /* ELSE;*/
    /* MOVE 0 TO FY2REC.XSNYR;*/
   /* END;*/
   /* ---------- Y2K OUT END --------------*/

  FY0FS20(); /* Select fy2rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(21);
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.SY1STNBR cursor, bold; /* Set cursor to to style*/
    return;
  end

  FY3REC.XGPCD = FY2REC.XGPCD;
  FY3REC.FY1FCTYC = FY2REC.FY1FCTYC;
  FY3REC.SY1STNBR = FY2REC.SY1STNBR;
  FY3REC.SY2CLRID = FY0FM003.SY2CLRID;
  FY3REC.XDMCD = FY0FM003.XDMCD;
  FY3REC.XQACD = FY0FM003.XQACD;
  FY3REC.PC2INSEG = FY0FM003.PC2INSEG;
  FY3REC.XPGCD = FY0FM003.XPGCD;
  FY3REC.XUMCD = FY0FM003.XUMCD;
  FY3REC.XSECD = FY2REC.XSECD;
  FY3REC.XSNYR = FY2REC.XSNYR;

  FY0FS22(); /* Select fy3rec row*/

  if (SQLCA.VAGen_SQLCODE == 100)
    converseLib.validationFailed(21);
    FY0FW01.FY0FWPSW = "Y"; /* Set error flag to yes*/
    set FY0FM003.SY1STNBR cursor, bold; /* Set cursor to to style*/
    return;
  end

  /* IF FY0FW01.XGPCD NE '02';*/
  /* EZERTN;*/
  /* END;*/

   /* Next get the scheduling FOB*/

  FY4REC.XGPCD = FY3REC.XGPCD;
  FY4REC.FY1FCTYC = FY3REC.FY1FCTYC;
  FY4REC.SY1STNBR = FY3REC.SY1STNBR;
  FY4REC.SY2CLRID = FY3REC.SY2CLRID;
  FY4REC.XSECD = FY3REC.XSECD;
  FY4REC.XSNYR = FY3REC.XSNYR;
  FY4REC.XQACD = FY3REC.XQACD;
  FY4REC.XDMCD = FY3REC.XDMCD;
  FY4REC.PC2INSEG = FY3REC.PC2INSEG;
  FY4REC.XPGCD = FY3REC.XPGCD;
  FY4REC.XUMCD = FY3REC.XUMCD;
  FY4REC.XXXSTAT = FY3REC.XXXSTAT;
  FY0FW01.FY0FWFOB = 0; /* Zero out ws fob price*/
  FY0FW01.FY0FWPIN = " "; /* Clear out ws fob price ind.*/
  FY0FS07(); /* Select set of fy4rec rows*/
  if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
    FY0FS08(); /* fetch fy4rec row*/
    if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
      FY0F411(); /* determine FOB price*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row was NOT found*/
       && FY3REC.XQACD == "02")      /* Quality '02'*/
        FY0FS10(); /* Close set of fy4rec rows*/
        if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
          FY4REC.XQACD = "01";
          FY0FS07(); /* Select set of fy4rec rows*/
          if (SQLCA.VAGen_SQLCODE == 0) /* no errors were found*/
            FY0FS08(); /* fetch fy4rec row*/
            if (SQLCA.VAGen_SQLCODE == 0) /* row was found*/
              FY0F411(); /* determine FOB price*/
              FY0F412(); /* calculate from b-grade %*/
            end
          end
        end
      end
    end
    FY0FS10(); /* Close set of fy4rec rows*/
  end


end // end FY0F910

// Format and display the map
Function FY0F920()
   /* ------------------------------------------------------------*/
   /* Format the map heading.*/
   /* If no error to display, format the selected data.*/
   /* Indicate sound audible alarm for any error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWPSW == "N" /* No error*/
   && FY0FW01.FY0FWSWR == "Y") /* And data requested*/
    set FY0FM003 initial; /* Clear map output area*/
    FY0F921(); /* Move fields to map*/
    set FY0FM003.XGPCD protect; /* Protect KEY fields*/
    set FY0FM003.FY1FCTYC protect;
    set FY0FM003.SY1STNBR protect;
    set FY0FM003.SY2CLRID protect;
    set FY0FM003.XQACD protect;
    set FY0FM003.XDMCD protect;
    set FY0FM003.PC2INSEG protect;
    set FY0FM003.XPGCD protect;
    set FY0FM003.XSECD protect;
    set FY0FM003.FY0FMSYR protect;
    set FY0FM003.CATOAP cursor; /* Put cursor at to application*/
  end

  set FY0FM003.XUMCD protect;

  FY0FM003.FY0FMFNC = "DELETE"; /* Move inquiry literal to map*/
  FY0FM003.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  if (FY0FW01.XGPCD > " ")
    FY0FM003.XGPCD = FY0FW01.XGPCD; /* Move gpc code*/
    if (FY0FW01.XGPCD in XGPTBL.XGPCD)
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
    end
    FY0FW01.XGPDESC = FY0FM003.XGPDESC;
  end

  if (FY0FW01.FY1FCTYC > " ")
    FY0FM003.FY1FCTYC = FY0FW01.FY1FCTYC;
    FY0FM003.FY1FCTSN = FY0FW01.FY1FCTSN;
  end

  if (FY0FW01.FY0FWPSW == "N" /* No error*/
   && FY0FW01.FY0FWSWR == "N") /* And data NOT requested*/
    if (FY0FM003.XGPCD == "02")
      FY0FM003.SY2CLRID = "00";
    end
    FY0FM003.XDMCD = "00";
    if (FY0FM003.XDMCD in XDMTBL.XDMCD)
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    end
    FY0FM003.PC2INSEG = "000";
    FY0FM003.XQACD = "01";
    if (FY0FM003.XQACD in XQATBL.XQACD)
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    end
    FY0FM003.XPGCD = "00";
    if (FY0FM003.XPGCD in XPGTBL.XPGCD)
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    end
     /* move in default season and year*/
    if (FY0FM003.XGPCD == " ")
      set FY0FM003.XGPCD cursor; /* Set cursor to gpc code*/
    else
      if (FY0FM003.FY1FCTYC == " ")
        set FY0FM003.FY1FCTYC cursor; /* Set cursor to factory code*/
      else
        set FY0FM003.SY1STNBR cursor; /* Set cursor to style*/
      end
    end
  end

  if (FY0FW01.FY0FWPSW == "Y" /* If error*/
   && FY0FW01.FY0FWSWR == "Y") /* And data requested*/
    FY0FM003.FY0FMMFG = 0;
    FY0FM003.FY1MFGDY = 0;
    FY0FM003.FY0FMFOB = 0;
    FY0FM003.FY0FMFAB = 0;
    FY0FM003.FY1FABDY = 0;
    FY0FM003.FY3PRTGT = 0;
    FY0FM003.FY0FMSTD = 0;
    FY0FM003.FY1STDC = 0;
    FY0FM003.FY3PRCAP = 0;
    FY0FM003.FY0FMSPC = 0;
    FY0FM003.FY1SPCLC = 0;
    FY0FM003.FY3PRMIN = 0;
    FY0FM003.FY0FMSTC = 0;
    FY0FM003.FY1STCDY = 0;
    FY0FM003.FY0FMLST = 0;
    FY0FM003.FY1LSTDY = 0;
    FY0FM003.FY3FPRTY = 0;
    FY0FM003.FY2MFGPC = 0;
    FY0FM003.FY3INPFL = " ";
    FY0FM003.FY3SFYFL = " ";
    FY0FM003.FY0FMPIN = " ";
  end

  set FY0FM003.FY0FMMFG protect; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY protect; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB protect; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB protect; /* Fabric days*/
  set FY0FM003.FY1FABDY protect; /* Default fabric days*/
  set FY0FM003.FY3PRTGT protect; /* Target price*/
  set FY0FM003.FY0FMSTD protect; /* Standard comp. days*/
  set FY0FM003.FY1STDC protect; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP protect; /* Maximum price*/
  set FY0FM003.FY0FMSPC protect; /* Special comp. days*/
  set FY0FM003.FY1SPCLC protect; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN protect; /* Minimum price*/
  set FY0FM003.FY0FMSTC protect; /* Stitch days*/
  set FY0FM003.FY1STCDY protect; /* Default stitch days*/
  set FY0FM003.FY0FMLST protect; /* Last days*/
  set FY0FM003.FY1LSTDY protect; /* Default last days*/
  set FY0FM003.FY3FPRTY protect; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC protect; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL protect; /* In production flag*/
  set FY0FM003.FY3SFYFL protect; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC protect; /* Update all colors flag*/

  if (converseVar.validationMsgNum != 0) /* Errors exist*/
    set FY0FM003 alarm;
  else
    if (FY0FW01.FY0FWPSW == "N" /* No error*/
     && FY0FW01.FY0FWSWR == "Y") /* And data requested*/
      converseLib.validationFailed(65);
    end
  end

  if (FY0FW01.FY0FWMFL == "Y")
    converseLib.validationFailed(1);
    FY0FM003.XXXPRCNM = "FY0F960";
    FY0FW01.FY0FWMFL = "N";
  end

  if (FY0FM003.XGPCD == "02")
    set FY0FM003.FY0FMSNL skip, invisible;
    set FY0FM003.XSECD skip, invisible;
    set FY0FM003.FY0FMSLL skip, invisible;
    set FY0FM003.FY0FMSYR skip, invisible;
  end

  if (COMMAREA.CAILVL[1] != "Y") /* FOB inquiry not allowed*/
    set FY0FM003.FY0FMFOB skip, invisible; /* Darken*/
    set FY0FM003.FY0FMPIN skip, invisible; /* Darken*/
  end

  converse FY0FM003 ;

  FY0FW01.FY0FWPSW = "N"; /* Initialize problem switch*/

  if (converseVar.eventKey is enter)
    FY0F922(); /* Check for ? inquiry by user*/
  end

end // end FY0F920

// Move fields to map
Function FY0F921()
   /* ------------------------------------------------------------*/
   /* Move selected fields to map.*/
   /* ------------------------------------------------------------*/

  FY1REC.XGPCD = FY2REC.XGPCD;
  FY1REC.FY1FCTYC = FY2REC.FY1FCTYC;

  FY0FS01(); /* Get factory default lead times*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.FY1MFGDY = FY1REC.FY1MFGDY;
    FY0FM003.FY1FABDY = FY1REC.FY1FABDY;
    FY0FM003.FY1LSTDY = FY1REC.FY1LSTDY;
    FY0FM003.FY1STDC = FY1REC.FY1STDC;
    FY0FM003.FY1SPCLC = FY1REC.FY1SPCLC;
    FY0FM003.FY1STCDY = FY1REC.FY1STCDY;
  end

  FY0FM003.FY1FCTYC = FY2REC.FY1FCTYC;
  FY0FM003.SY1STNBR = FY2REC.SY1STNBR;
  FY0FM003.SY2CLRID = FY3REC.SY2CLRID;
  FY0FM003.XDMCD = FY3REC.XDMCD;
  if (FY3REC.XDMCD in XDMTBL.XDMCD)
    FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
  end

  PG2REC.XGPCD = FY2REC.XGPCD;
  PG2REC.SY1STNBR = FY2REC.SY1STNBR;
  PG2REC.SY2CLRID = FY3REC.SY2CLRID;
  PG2REC.XDMCD = FY3REC.XDMCD;

  XSPG202(); /* Select style/color row*/

  if (SQLCA.VAGen_SQLCODE == 0)
    FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
    FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
  end

  FY0FM003.XQACD = FY3REC.XQACD;
  if (FY3REC.XQACD in XQATBL.XQACD)
    FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
  end
  FY0FM003.PC2INSEG = FY3REC.PC2INSEG;
  FY0FM003.XPGCD = FY3REC.XPGCD;
  if (FY3REC.XPGCD in XPGTBL.XPGCD)
    FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
  end
  FY0FM003.XUMCD = FY3REC.XUMCD;
  if (FY3REC.XUMCD in XUMTBL.XUMCD)
    FY0FM003.XUMDESC = XUMTBL.XUMDESC[sysVar.arrayIndex];
  end
  FY0FM003.XSECD = FY3REC.XSECD;
  if (FY0FM003.XGPCD == "03")
    FY0FW01.FY0FWSNY = FY3REC.XSNYR;
    FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY;
  else
    FY0FM003.FY0FMSYR = FY3REC.XSNYR;
  end

  FY0FM003.FY0FMMFG = FY2REC.FY1MFGDY;
  FY0FM003.FY0FMFAB = FY2REC.FY1FABDY;
  FY0FM003.FY0FMLST = FY2REC.FY1LSTDY;
  FY0FM003.FY0FMSTD = FY2REC.FY1STDC;
  FY0FM003.FY0FMSPC = FY2REC.FY1SPCLC;
  FY0FM003.FY0FMSTC = FY2REC.FY1STCDY;
  FY0FM003.FY2MFGPC = FY2REC.FY2MFGPC;
  FY0FM003.FY3FPRTY = FY3REC.FY3FPRTY;
  FY0FM003.FY3PRTGT = FY3REC.FY3PRTGT;
  FY0FM003.FY3PRMIN = FY3REC.FY3PRMIN;
  FY0FM003.FY3PRCAP = FY3REC.FY3PRCAP;
  FY0FM003.FY3INPFL = FY3REC.FY3INPFL;
  FY0FM003.FY3SFYFL = FY3REC.FY3SFYFL;
  FY0FM003.FY0FMFOB = FY0FW01.FY0FWFOB;
  FY0FM003.FY0FMPIN = FY0FW01.FY0FWPIN;


end // end FY0F921

// Check for ? inquiry by user
Function FY0F922()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD == "?" /* if any ? entered*/
   || FY0FM003.XSECD == "?" 
   || FY0FM003.FY0FMSYR == "?"
   || FY0FM003.XQACD == "?" 
   || FY0FM003.XDMCD == "?" 
   || FY0FM003.XPGCD == "?")

    if (FY0FM003.XGPCD == "?") /* if ? in gpc code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXGP01(); /* perform gpc code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
        FY0FM003.XGPDESC = XGPTBL.XGPDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XGPCD = " "; /* clear fields*/
        FY0FM003.XGPDESC = " ";
      end
    end


    if (FY0FM003.XSECD == "?" /* if ? in season code field*/
     || FY0FM003.FY0FMSYR == "?") /* or ? in season year field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                 SEASON    "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPYSN01(); /* perform season code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XSECD = YSNTBL.XSECD[XX0XWPIX]; /* move code*/
        FY0FW01.FY0FWSNY = YSNTBL.XSNYR[XX0XWPIX];
        FY0FM003.FY0FMSYR = FY0FW01.FY0FWSYY; /* move year*/
      else
        FY0FM003.XSECD = " "; /* clear fields*/
        FY0FM003.FY0FMSYR = 0;
      end
    end

    if (FY0FM003.XQACD == "?") /* if ? in quality code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "                QUALITY   "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXQA01(); /* perform quality code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XQACD = XQATBL.XQACD[XX0XWPIX]; /* move code*/
        FY0FM003.XQADESC = XQATBL.XQADESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XQADESC = " "; /* move name*/
        FY0FM003.XQACD = " "; /* clear fields*/
      end
    end


    if (FY0FM003.XDMCD == "?") /* if ? in dimension code field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "          DIMENSION       "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXDM01(); /* perform dimension code window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XDMCD = XDMTBL.XDMCD[XX0XWPIX]; /* move code*/
        FY0FM003.XDMDESC = XDMTBL.XDMDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XDMCD = " "; /* clear fields*/
        FY0FM003.XDMDESC = " "; /* move name*/
      end
    end


    if (FY0FM003.XPGCD == "?") /* if ? in package type field*/
      XPXX001(); /* perform pop-up window initialize*/
      XX0XW02.XX0XWHDR = "        PACKAGE TYPE      "; /* heading*/

      while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
        XPXPG01(); /* perform package type window*/
      end

       /* **********************************************************/
       /* *  If the pass index is greater than zero, use the      **/
       /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
       /* *  type table code and description to the map.          **/
       /* **********************************************************/

      if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
        FY0FM003.XPGCD = XPGTBL.XPGCD[XX0XWPIX]; /* move code*/
        FY0FM003.XPGDESC = XPGTBL.XPGDESC[XX0XWPIX]; /* move name*/
      else
        FY0FM003.XPGCD = " "; /* clear fields*/
        FY0FM003.XPGDESC = " "; /* move name*/
      end
    end


    converseLib.clearScreen();
     /* restore the original map*/

  end


end // end FY0F922

// Check attention identifier
Function FY0F930()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    FY0FW01.FY0FWSWR = "N"; /* Reset request for data*/
    set FY2REC empty;
    set FY3REC empty;
    set FY4REC empty;
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (FY0FM003.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/
      COMMAREA.CATOAP = FY0FM003.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0FM003.CAITEM; /* Application data*/
      XSFY001(); /* Exit to another application*/
    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    set FY0FM003.CATOAP cursor, bold; /* Highlight*/
    FY0FM003.XXXPRCNM = "FY0F930"; /* Process name*/
    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3) /* PF3 was pressed*/
    FY0FW01.FY0FWMAP = "1"; /* Move to map 1*/
    FY0FW01.SY1STNBR = " ";
    FY0FM001.SY1STNBR = " ";
    FY0FW01.SY1SSTNM = " ";
    FY0FM001.SY1SSTNM = " ";
    FY0FW01.SY2CLRID = " ";
    FY0FM001.SY2CLRID = " ";
    FY0FW01.SY2CLRAB = " ";
    FY0FM001.SY2CLRAB = " ";
    FY0FM001.XQACD = FY0FW01.XQACD;
    FY0FM001.XDMCD = FY0FW01.XDMCD;
    FY0FM001.PC2INSEG = FY0FW01.PC2INSEG;
    FY0FM001.XPGCD = FY0FW01.XPGCD;
    FY0FW01.XSECD = " ";
    FY0FM001.XSECD = " ";
    FY0FW01.XSNYR = 0;
    FY0FW01.FY0FWSNY = 0;
    FY0FW01.FY0FWSYR = 0;
    FY0FM001.FY0FMSYR = 0;
    if (FY0FW01.XGPCD > " "
     && FY0FW01.FY1FCTYC > " ")
      FY0FM001.XGPCD = FY0FM003.XGPCD; /* Set up map 1 data*/
      FY0FM001.FY1FCTYC = FY0FM003.FY1FCTYC;
      FY0FW01.FY0FWSWR = "Y"; /* Set request for data to yes*/
    else
      FY0FW01.FY0FWSWR = "N"; /* Set request for data to no*/
    end
    FY0FW01.FY0FWLSF = "Y"; /* Set list screen flag to yes*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf1) /* pf1 pressed*/
      COMMAREA.CAITEM = "FY0FM003"; /* move in map name for help*/
    else
      COMMAREA.CAITEM = " "; /* clear item field*/
    end

    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F930"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf5) /* PF5 was pressed*/
    COMMAREA.CAITEM = " "; /* clear item field*/
    COMMAREA.CATOAP = "FY0A"; /* Transfer to factory menu*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    FY0FS02(); /* Purge temporary storage*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F930"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf16) /* PF16 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    if (FY0FW01.XGPCD == "02")
      COMMAREA.CATOAP = "FY0G"; /* Exit to FOB by p.o. id*/
    else
      COMMAREA.CATOAP = "FY0L"; /* Exit to FOB by eff date*/
    end
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F930"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf17) /* PF17 was pressed*/
    FY0FS02(); /* Purge temporary storage*/
    COMMAREA.XGPCD = FY0FW01.XGPCD; /* Gpc code*/
    COMMAREA.CATOAP = "FY0C"; /* Exit to Factory*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    XSFY001(); /* Exit to another application*/
    FY0FM003.XXXPRCNM = "FY0F930"; /* Process name*/
    exit stack; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is enter) /* ENTER was pressed*/
     /* next sentence*/
  else
    FY0FM003.XXXPRCNM = "FY0F930"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Set error switch*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0F930

// Reset highlighted fields
Function FY0F940()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0FM003.XGPCD initialAttributes; /* Gpc code*/
  set FY0FM003.XGPDESC initialAttributes; /* Gpc desc.*/
  set FY0FM003.FY1FCTYC initialAttributes; /* Factory code*/
  set FY0FM003.FY1FCTSN initialAttributes; /* Factory short name*/
  set FY0FM003.SY1STNBR initialAttributes; /* Style code*/
  set FY0FM003.SY1SSTNM initialAttributes; /* Style name*/
  set FY0FM003.SY2CLRID initialAttributes; /* Color code*/
  set FY0FM003.SY2CLRAB initialAttributes; /* Color name*/
  set FY0FM003.XDMCD initialAttributes; /* Dimension code*/
  set FY0FM003.XDMDESC initialAttributes; /* Dimension desc.*/
  set FY0FM003.XQACD initialAttributes; /* Quality code*/
  set FY0FM003.XQADESC initialAttributes; /* Quality desc.*/
  set FY0FM003.PC2INSEG initialAttributes; /* Spec diff code*/
  set FY0FM003.XSDDESC initialAttributes; /* Spec diff desc.*/
  set FY0FM003.XPGCD initialAttributes; /* Pkg typ code*/
  set FY0FM003.XPGDESC initialAttributes; /* Pkg typ desc.*/
  set FY0FM003.XSECD initialAttributes; /* Season code*/
  set FY0FM003.FY0FMSYR initialAttributes; /* Season year*/
  set FY0FM003.XUMCD initialAttributes; /* Unit of measure code*/
  set FY0FM003.XUMDESC initialAttributes; /* Unit of measure desc.*/
  set FY0FM003.FY0FMMFG initialAttributes; /* Manufacturing days*/
  set FY0FM003.FY1MFGDY initialAttributes; /* Default manufacturing days*/
  set FY0FM003.FY0FMFOB initialAttributes; /* Scheduling FOB price*/
  set FY0FM003.FY0FMFAB initialAttributes; /* Fabric days*/
  set FY0FM003.FY1FABDY initialAttributes; /* Default fabric days*/
  set FY0FM003.FY3PRTGT initialAttributes; /* Target price*/
  set FY0FM003.FY0FMSTD initialAttributes; /* Standard comp. days*/
  set FY0FM003.FY1STDC initialAttributes; /* Default standard comp. days*/
  set FY0FM003.FY3PRCAP initialAttributes; /* Maximum price*/
  set FY0FM003.FY0FMSPC initialAttributes; /* Special comp. days*/
  set FY0FM003.FY1SPCLC initialAttributes; /* Default special comp. days*/
  set FY0FM003.FY3PRMIN initialAttributes; /* Minimum price*/
  set FY0FM003.FY0FMSTC initialAttributes; /* Stitch days*/
  set FY0FM003.FY1STCDY initialAttributes; /* Default stitch days*/
  set FY0FM003.FY0FMLST initialAttributes; /* Last days*/
  set FY0FM003.FY1LSTDY initialAttributes; /* Default last days*/
  set FY0FM003.FY3FPRTY initialAttributes; /* Factory/style priority*/
  set FY0FM003.FY2MFGPC initialAttributes; /* Manufacturing percent*/
  set FY0FM003.FY3INPFL initialAttributes; /* In production flag*/
  set FY0FM003.FY3SFYFL initialAttributes; /* Style/factory prty flag*/
  set FY0FM003.FY0FMUAC initialAttributes; /* Update all colors flag*/
  set FY0FM003.CATOAP initialAttributes; /* Commarea TO application*/
  set FY0FM003.CAITEM initialAttributes; /* Commarea application data*/

end // end FY0F940

// Verify the entered data
Function FY0F950()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.CAITEM > " ") /* Application data was entered*/
    set FY0FM003.CAITEM cursor, modified, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    FY0FM003.XXXPRCNM = "FY0F950"; /* Process name*/
    exit stack;
  end

  if (converseVar.validationMsgNum == 0)
    if (FY0FM003.XGPCD == FY2REC.XGPCD
     && FY0FM003.SY1STNBR == FY2REC.SY1STNBR
     && FY0FM003.SY2CLRID == FY3REC.SY2CLRID
     && FY0FM003.XDMCD == FY3REC.XDMCD
     && FY0FM003.XQACD == FY3REC.XQACD
     && FY0FM003.PC2INSEG == FY3REC.PC2INSEG
     && FY0FM003.XPGCD == FY3REC.XPGCD
     && FY0FM003.XSECD == FY2REC.XSECD
     && FY0FM003.FY0FMSYR == FY0FW01.FY0FWSYY)
      return;

    else
      FY0F951();

    end
  end


end // end FY0F950

// Validate any input data
Function FY0F951()
   /* ------------------------------------------------------------*/
   /* Validate any input data.*/
   /* If any errors were found, exit to redisplay the map.*/
   /* ------------------------------------------------------------*/

  FY0FW01.FY0FWDEF = "Y"; /* Data has been entered*/

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON YEAR*/
   /* ------------------------------------------------------------*/

  FY0FW01.XSNYR = 0; /* Initialize working storage season*/
   /* ---------- Y2K OUT BEGIN -----------*/
   /* IF FY0FM003.FY0FMSYR GT 0;       /* If season year entered*/
   /* MOVE 19 TO FY0FW01.FY0FWSCC;   /* Set up century*/
   /* ---------- Y2K OUT END -------------*/

   /* --------- Y2K IN BEGIN ------------*/
  if (FY0FM003.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    /* next sentence*/
  else
    if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    /* --------- Y2K IN END --------------*/
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
    FY0FW01.XSNYR = FY0FW01.FY0FWSNY; /* Move to season year*/

    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FW01.XSNYR == YSNTBL.XSNYR[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWSW1 = "Y";
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(75); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
          set FY0FM003.FY0FMSYR cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XSECD > " ") /* If season code entered*/
    sysVar.arrayIndex = 1; /* Initialize ezetst*/
    FY0FW01.FY0FWSW1 = "N";
    while (FY0FW01.FY0FWSW1 == "N")
      if (FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
       && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex]
       && FY0FM003.XSECD == YSNTBL.XSECD[sysVar.arrayIndex])
        FY0FW01.FY0FWSW1 = "Y";
      else
        if (YSNTBL.XSECD[sysVar.arrayIndex] == "99") /* End of table found*/
          FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
          converseLib.validationFailed(74); /* Error message and highlight*/
          FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
          set FY0FM003.XSECD cursor, modified, bold;
          FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
          FY0FW01.FY0FWSW1 = "Y";
        end
      end
      sysVar.arrayIndex = sysVar.arrayIndex + 1; /* Increment ezetst*/
    end
  end


   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON YEAR*/
   /* ------------------------------------------------------------*/

  FY0FW01.XSNYR = 0;
   /* ------------ Y2K OUT BEGIN ------------*/
   /* IF FY0FM003.FY0FMSYR GT 0;       /* If season year entered*/
    /* MOVE 19 TO FY0FW01.FY0FWSCC;   /* Set up century*/
   /* ------------ Y2K OUT END --------------*/

   /* --------- Y2K IN BEGIN ------------*/
  if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
    FY0FW01.FY0FWSCC = 19;
  else
    FY0FW01.FY0FWSCC = 20;
  end
   /* --------- Y2K IN END --------------*/
  FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
  FY0FW01.XSNYR = FY0FW01.FY0FWSNY; /* Move to season year field*/
  if (FY0FW01.XSNYR in YSNTBL.XSNYR
   && FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
   && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex])
       /* next sentence*/
  else
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(75); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.FY0FMSYR cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end
   /* ------------ Y2K OUT BEGIN ------------*/
   /* END;*/
   /* ------------ Y2K OUT END --------------*/

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID SEASON CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XSECD > " ") /* If season code entered*/
    if (FY0FM003.XSECD in YSNTBL.XSECD
     && FY0FM003.XGPCD == YSNTBL.XGPCD[sysVar.arrayIndex]
     && TABREC.XDR-PROD-REG-CD == YSNTBL.XDR-PROD-REG-CD[sysVar.arrayIndex])
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(74); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
      set FY0FM003.XSECD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID PACKAGE TYPE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XPGCD > " ") /* If package type entered*/
    if (FY0FM003.XPGCD in XPGTBL.XPGCD)
      FY0FM003.XPGDESC = XPGTBL.XPGDESC[sysVar.arrayIndex];
    else
      FY0FM003.XPGDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(79); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
      set FY0FM003.XPGCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XPGDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(79); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.XPGCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID INVENTORY SEGMENT CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.PC2INSEG > " ") /* If spec entered*/
    PC2REC.XGPCD = FY0FM003.XGPCD;
    PC2REC.PC2INSEG = FY0FM003.PC2INSEG;
    FY0FS29();
    if (SQLCA.VAGen_SQLCODE == 0)
       /* next sentence*/
    else
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(77); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
      set FY0FM003.PC2INSEG cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(77); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.PC2INSEG cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID QUALITY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XQACD > " ") /* If quality entered*/
    if (FY0FM003.XQACD in XQATBL.XQACD)
      FY0FM003.XQADESC = XQATBL.XQADESC[sysVar.arrayIndex];
    else
      FY0FM003.XQADESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(76); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
      set FY0FM003.XQACD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XQADESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(76); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.XQACD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID DIMENSION*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XDMCD > " ") /* If dimension entered*/
    if (FY0FM003.XDMCD in XDMTBL.XDMCD)
      FY0FM003.XDMDESC = XDMTBL.XDMDESC[sysVar.arrayIndex];
    else
      FY0FM003.XDMDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(78); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
      set FY0FM003.XDMCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FM003.XDMDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(78); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.XDMCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* INSURE THAT A STYLE IS ENTERED*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR == " ") /* style not entered*/
    FY0FW01.SY1SSTNM = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(73); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.SY1STNBR cursor, modified, bold;
  end

   /* ------------------------------------------------------------*/
   /* VALIDTE STYLE/COLOR COMBINATION*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR > " " /* If style entered*/
   && FY0FM003.SY2CLRID > " ") /* and color entered*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    PG2REC.SY2CLRID = FY0FM003.SY2CLRID;
    if (FY0FM003.XDMCD > " ")
      PG2REC.XDMCD = FY0FM003.XDMCD;
    else
      PG2REC.XDMCD = "00";
    end
    XSPG202(); /* Select unique color*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FM003.SY2CLRAB = PG2REC.SY2CLRAB;
      FY0FM003.XUMCD = PG2REC.XUMCD;
      FY0FW01.XUMCD = PG2REC.XUMCD;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM003.SY1SSTNM = " "; /* Clear description*/
        FY0FM003.SY2CLRAB = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, modified, bold;
        set FY0FM003.SY2CLRID bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE STYLE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.SY1STNBR > " " /* If style entered*/
   && FY0FM003.SY2CLRID == " ") /* and color NOT entered*/
    PG2REC.XGPCD = FY0FM003.XGPCD;
    PG2REC.SY1STNBR = FY0FM003.SY1STNBR;
    XSPG201(); /* Open cursor*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FM003.SY1SSTNM = PG2REC.SY1SSTNM;
      FY0FM003.XUMCD = PG2REC.XUMCD;
      FY0FW01.XUMCD = PG2REC.XUMCD;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FM003.SY1SSTNM = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(73); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
        set FY0FM003.SY1STNBR cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  end

   /* ------------------------------------------------------------*/
   /* VALIDATE THE FACTORY CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.FY1FCTYC > " ") /* If factory entered*/
    FY1REC.XGPCD = FY0FM003.XGPCD;
    FY1REC.FY1FCTYC = FY0FM003.FY1FCTYC;
    FY0FS01(); /* Select unique factory*/
    if (SQLCA.VAGen_SQLCODE == 0)
      FY0FW01.FY1FCTYC = FY1REC.FY1FCTYC;
      FY0FM003.FY1FCTSN = FY1REC.FY1FCTSN;
      FY0FW01.FY1FCTSN = FY1REC.FY1FCTSN;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        FY0FW01.FY1FCTYC = " ";
        FY0FW01.FY1FCTSN = " "; /* Clear description*/
        FY0FM003.FY1FCTSN = " "; /* Clear description*/
        FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
        converseLib.validationFailed(33); /* Error message and highlight*/
        FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
        set FY0FM003.FY1FCTYC cursor, modified, bold;
        FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
      end
    end
  else
    FY0FW01.FY1FCTYC = " ";
    FY0FW01.FY1FCTSN = " "; /* Clear description*/
    FY0FM003.FY1FCTSN = " "; /* Clear description*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(33); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.FY1FCTYC cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end

   /* ------------------------------------------------------------*/
   /* CHECK FOR A VALID GPC CODE*/
   /* ------------------------------------------------------------*/

  if (FY0FM003.XGPCD > " ") /* If gpc code entered*/
    if (FY0FM003.XGPCD in XGPTBL.XGPCD)
      FY0FW01.XGPCD = FY0FM003.XGPCD; /* Save in working storage*/
      FY0FW01.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      FY0FM003.XGPDESC = XGPTBL.XGPDESC[sysVar.arrayIndex];
      COMMAREA.XGPCD = FY0FM003.XGPCD; /* Save in commarea*/
    else
      FY0FW01.XGPCD = " ";
      FY0FW01.XGPDESC = " ";
      FY0FM003.XGPDESC = " ";
      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
      converseLib.validationFailed(101); /* Error message and highlight*/
      FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
      set FY0FM003.XGPCD cursor, modified, bold;
      FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
    end
  else
    FY0FW01.XGPCD = " ";
    FY0FW01.XGPDESC = " ";
    FY0FM003.XGPDESC = " ";
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
    converseLib.validationFailed(101); /* Error message and highlight*/
    FY0FM003.XXXPRCNM = "FY0F951"; /* Process name*/
    set FY0FM003.XGPCD cursor, modified, bold;
    FY0FW01.FY0FWSWR = "N"; /* Set request for data*/
  end


end // end FY0F951

// Process valid input request
Function FY0F960()
   /* ------------------------------------------------------------*/
   /* Process valid inout request*/
   /* 1.  If the update all colors flag = yes update all rows*/
       /* in the fy3rec for that style*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* and no errors*/
    if (FY0FM003.XGPCD == FY2REC.XGPCD
     && FY0FM003.FY1FCTYC == FY2REC.FY1FCTYC
     && FY0FM003.SY1STNBR == FY2REC.SY1STNBR
     && FY0FM003.SY2CLRID == FY3REC.SY2CLRID
     && FY0FM003.XQACD == FY3REC.XQACD
     && FY0FM003.XDMCD == FY3REC.XDMCD
     && FY0FM003.PC2INSEG == FY3REC.PC2INSEG
     && FY0FM003.XPGCD == FY3REC.XPGCD
     && FY0FM003.XSECD == FY2REC.XSECD
     && FY0FM003.FY0FMSYR == FY0FW01.FY0FWSYY)

      FY0FS26(); /* Delete the fy3rec*/

      if (FY0FW01.FY0FWPSW == "N")
        FY3REC.SY2CLRID = "*"; /* Wild card all style fields*/
        FY3REC.XDMCD = "*"; /* not on the fy2rec*/
        FY3REC.XQACD = "*";
        FY3REC.PC2INSEG = "*";
        FY3REC.XPGCD = "*";
        FY3REC.XUMCD = "*";
        FY0FS05(); /* Open fy3rec cursor*/
        FY0FW01.FY0FWSW2 = "N"; /* Init end of cursor switch*/
        FY0FS06(); /* Fetch row*/

        if (FY0FW01.FY0FWPSW == "N"
         && FY0FW01.FY0FWSW2 == "Y") /* If no rows found*/
          FY0FS27(); /* Delete the fy2rec row*/
        end

        FY0FS12(); /* Close cursor*/
      end

      if (FY0FW01.FY0FWPSW == "N")
        VGVar.handleSysLibraryErrors = 0;
        sysLib.commit();
        set FY2REC empty;
        set FY3REC empty;
        set FY3REC empty;
        set FY0FM003 empty;
        FY0FW01.FY0FWSWR = "N"; /* set request for data*/
        FY0FW01.FY0FWMFL = "Y"; /* set message flag*/
      else
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback();
      end
    else
      FY0FW01.FY0FWSWR = "Y"; /* set request for data*/
    end
  end


end // end FY0F960

// Select Factory row
Function FY0FS01()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS01"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
      else
        if (FY0FW01.FY0FWMAP == "3")
          TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
        end
      end
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
    TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS01"; /* Process name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM002.XXXPRCNM = "FY0FS01"; /* Process name*/
      else
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM003.XXXPRCNM = "FY0FS01"; /* Process name*/
      end
    end
  end


end // end FY0FS01

// Purge temp storage
Function FY0FS02()
   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = "FY0F"; /* Application identification*/
  TA5REC.TA5FNCCD = "P"; /* Function code*/

  call "TA0050" (FY0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1FUNC = "POST"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS02"; /* Process name*/
    TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE";

    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    end

    if (FY0FW01.FY0FWMAP == "2")
      TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
    end

    if (FY0FW01.FY0FWMAP == "3")
      TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    end

    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  end

  FY0FW01.FY0FWTSP = 0; /* Reset current page number*/
  FY0FW01.TA5TSQIX = 0; /* Reset highest page number*/


end // end FY0FS02

// Select Set Factory/Style
Function FY0FS03()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWIOT == "1")
    call "IO2980" ("S1", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select table set S1*/
  else
    call "IO2980" ("S2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select table set S2*/
  end

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS03"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
      else
        if (FY0FW01.FY0FWMAP == "3")
          TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
        end
      end
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
    TA1REC.TA1TBLKE = FY2REC.FY2KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS03"; /* Process name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM002.XXXPRCNM = "FY0FS03"; /* Process name*/
      else
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM003.XXXPRCNM = "FY0FS03"; /* Process name*/
      end
    end
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/
  end


end // end FY0FS03

// Fetch Factory/Style row
Function FY0FS04()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWIOT == "1")
    call "IO2980" ("N1", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Fetch next row from C1*/
  else
    call "IO2980" ("N2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Fetch next row from C2*/
  end

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    FY0FW01.FY0FWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "FY0FS04"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      if (FY0FW01.FY0FWMAP == "1")
        TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
      else
        if (FY0FW01.FY0FWMAP == "2")
          TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
        else
          TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
        end
      end
      TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
      TA1REC.TA1TBLKE = FY2REC.FY2KEY; /* Table key*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      if (FY0FW01.FY0FWMAP == "1")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM001.XXXPRCNM = "FY0FS04"; /* Process name*/
      else
        if (FY0FW01.FY0FWMAP == "2")
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
          FY0FM002.XXXPRCNM = "FY0FS04"; /* Process name*/
        else
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
          FY0FM003.XXXPRCNM = "FY0FS04"; /* Process name*/
        end
      end
    end
  end


end // end FY0FS04

// Select Set Factory/Color
Function FY0FS05()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("S1", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS05"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
      else
        TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
      end
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = FY3REC.FY3KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS05"; /* Process name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM002.XXXPRCNM = "FY0FS05"; /* Process name*/
      else
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM003.XXXPRCNM = "FY0FS05"; /* Process name*/
      end
    end
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end


end // end FY0FS05

// Fetch Factory/Color row
Function FY0FS06()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("N1", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    FY0FW01.FY0FWSW2 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "FY0FS06"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      if (FY0FW01.FY0FWMAP == "1")
        TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
      else
        if (FY0FW01.FY0FWMAP == "2")
          TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
        else
          TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
        end
      end
      TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
      TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/
      TA1REC.TA1TBLKE = FY3REC.FY3KEY; /* Table key*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      if (FY0FW01.FY0FWMAP == "1")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM001.XXXPRCNM = "FY0FS06"; /* Process name*/
      else
        if (FY0FW01.FY0FWMAP == "2")
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
          FY0FM002.XXXPRCNM = "FY0FS06"; /* Process name*/
        else
          converseLib.clearScreen();
           /* Clear screen before redisplay*/
          FY0FM003.XXXPRCNM = "FY0FS06"; /* Process name*/
        end
      end

    end
  end


end // end FY0FS06

// Select Set Factory/Fob
Function FY0FS07()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO3000" (FYCREC, SQLCA, FY4REC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS07"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/
    TA1REC.TA1TBLKE = FY4REC.FY4KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS07"; /* Process name*/
    else
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM002.XXXPRCNM = "FY0FS07"; /* Process name*/
    end
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end


end // end FY0FS07

// Fetch Factory/Fob row
Function FY0FS08()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  call "IO3000" ("N1", SQLCA, FY4REC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100) /* End of selected set*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS08"; /* Process name*/
    TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/
    TA1REC.TA1TBLKE = FY4REC.FY4KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS08"; /* Process name*/
    else
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM002.XXXPRCNM = "FY0FS08"; /* Process name*/
    end
  end


end // end FY0FS08

// Close selected fy4rec set
Function FY0FS10()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "IO3000" ("C1", SQLCA, FY4REC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0FS10"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYFOB01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS10"; /* Process name*/
    else
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM002.XXXPRCNM = "FY0FS10"; /* Process name*/
    end

    converseLib.validationFailed(10); /* Indicate system error*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end


end // end FY0FS10

// Add page to temp storage
Function FY0FS11()
   /* ------------------------------------------------------------*/
   /* Add the next page to temporary storage.*/
   /* ------------------------------------------------------------*/

  FY0FW02.FY0FWLEN = 660; /* Temporary storage length*/
  TA5REC.TA5APPID = "FY0F"; /* Application identification*/
  TA5REC.TA5FNCCD = "A"; /* Function code*/

  call "TA0050" (FY0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD == 0) /* everything is a-ok*/
    FY0FW01.TA5TSQIX = TA5REC.TA5TSQIX; /* Highest page number*/
    FY0FW01.FY0FWIXM = 1; /* Reset display line number*/
    set FY0FW02 empty; /* Clear temporary storage record*/
  else /* error was found*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0FS11"; /* Process name*/
    TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE";
    if (FY0FW01.FY0FWMAP == "1") /* If map 1*/
      TA1REC.TA1MAP = "FY0FM001"; /* Map 1 name*/
    else /* else map 2*/
      TA1REC.TA1MAP = "FY0FM002"; /* Map 2 name*/
    end
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1") /* If map 1*/
      converseLib.clearScreen();
       /* Clear screen 1 before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS11"; /* Process name*/
    else /* else map 2*/
      converseLib.clearScreen();
       /* Clear screen 2 before redisplay*/
      FY0FM002.XXXPRCNM = "FY0FS11"; /* Process name*/
    end

    converseLib.validationFailed(10); /* Indicate system error*/
    FY0FW01.FY0FWPSW = "Y"; /* indicate problem has been found*/

  end


end // end FY0FS11

// Close selected fy3rec set
Function FY0FS12()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("C1", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0FS12"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
      else
        TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
      end
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS12"; /* Process name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM002.XXXPRCNM = "FY0FS12"; /* Process name*/
      else
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM003.XXXPRCNM = "FY0FS12"; /* Process name*/
      end
    end

    converseLib.validationFailed(10); /* Indicate system error*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end


end // end FY0FS12

// Close selected fy2rec set
Function FY0FS13()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWIOT == "1")
    call "IO2980" ("C1", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Close table set C1*/
  else
    call "IO2980" ("C2", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Close table set C2*/
  end

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0FS13"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    if (FY0FW01.FY0FWMAP == "1")
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
      else
        TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
      end
    end
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS13"; /* Process name*/
    else
      if (FY0FW01.FY0FWMAP == "2")
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM002.XXXPRCNM = "FY0FS13"; /* Process name*/
      else
        converseLib.clearScreen();
         /* Clear screen before redisplay*/
        FY0FM003.XXXPRCNM = "FY0FS13"; /* Process name*/
      end
    end

    converseLib.validationFailed(10); /* Indicate system error*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end


end // end FY0FS13

// Obtain page from temp storage
Function FY0FS14()
   /* ------------------------------------------------------------*/
   /* Obtain the next page of data to display.*/
   /* ------------------------------------------------------------*/

  FY0FW02.FY0FWLEN = 660; /* Temporary storage length*/
  TA5REC.TA5APPID = "FY0F"; /* Application identification*/
  TA5REC.TA5TSQIX = FY0FW01.FY0FWTSP; /* Page number*/
  TA5REC.TA5FNCCD = "R"; /* Function code*/

  call "TA0050" (FY0FW02, TA5REC) {isNoRefresh = yes, isExternal = yes};
                                   /* Temporary storage subroutine*/

  if (TA5REC.TA5RTNCD != 0) /* Error was found*/

    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0FS14"; /* Process name*/
    TA1REC.TA1LOC = "READ PAGE FROM TEMPORARY STORAGE";
    if (FY0FW01.FY0FWMAP == "1") /* If map1*/
      TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
    else
      TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
    end
    SQLCA.SQLCAREC = TA5REC.TA5DATA; /* Subroutine parameters*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FW01.FY0FWPSW = "Y"; /* Indicate Problem*/
    converseLib.validationFailed(10); /* Indicate system error*/

    if (FY0FW01.FY0FWMAP == "1") /* If map1*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS14"; /* Process name*/
    else
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM002.XXXPRCNM = "FY0FS14"; /* Process name*/
    end

    exit stack; /* Exit to redisplay map*/

  end

end // end FY0FS14

// Locate save key
Function FY0FS15()
   /* ------------------------------------------------------------*/
   /* Locate the page in which the key is less than or*/
   /* equal to the Change Save Key.*/
   /* ------------------------------------------------------------*/

  if (FY0FW01.FY0FWSKY == " ") /* No key saved*/
    FY0FW01.FY0FWSKF = "Y"; /* Indicate key found*/
  else

    FY0FW01.FY0FWIXM = 1; /* Initialize index*/

    while (FY0FW01.FY0FWIXM <= 11 /* Until key is found*/
     && FY0FW01.FY0FWSKF == "N")
      if (FY0FW02.SY1STNBR[FY0FWIXM] == FY0FW01.FY0FWSTY
       && FY0FW02.SY2CLRID[FY0FWIXM] == FY0FW01.FY0FWCOL)
        set FY0FM001.FY0FMSEL[FY0FWIXM] cursor; /* Initial cursor*/
        FY0FW01.FY0FWSKF = "Y"; /* Indicate key was found*/
        FY0FW01.FY0FWSKY = " "; /* Reset save key*/
      else
        if (FY0FW02.SY1STNBR[FY0FWIXM] == " ") /* no more styles*/
          if (FY0FW01.FY0FWIXM == 1) /* No data on page*/
            if (FY0FW01.FY0FWTSP == 1) /* first page*/
               /* next sentence*/
            else
              FY0FW01.FY0FWIXM = 11; /* Index to last entry*/
              FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP - 1; /* decrement page*/
            end
          else
            FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM - 1; /* Decrement index*/
          end
          set FY0FM001.FY0FMSEL[FY0FWIXM] cursor; /* Initial cursor*/
          FY0FW01.FY0FWSKF = "Y"; /* Indicate page was found*/
          FY0FW01.FY0FWSKY = " "; /* Reset save key*/
        else
          if (FY0FW02.SY1STNBR[FY0FWIXM] > FY0FW01.FY0FWSTY
           || FY0FW02.SY2CLRID[FY0FWIXM] > FY0FW01.FY0FWCOL)
            if (FY0FW01.FY0FWIXM == 1) /* Key not on page*/
              if (FY0FW01.FY0FWTSP == 1) /* first page*/
                 /* next sentence*/
              else
                FY0FW01.FY0FWIXM = 11; /* Index to last entry*/
                FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP - 1; /* decrement page*/
              end
            else
              FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM - 1; /* Decrement index*/
            end
            set FY0FM001.FY0FMSEL[FY0FWIXM] cursor; /* Initial cursor*/
            FY0FW01.FY0FWSKF = "Y"; /* Indicate page was found*/
            FY0FW01.FY0FWSKY = " "; /* Reset save key*/
          else
            FY0FW01.FY0FWIXM = FY0FW01.FY0FWIXM + 1; /* Decrement index*/
          end
        end
      end
    end

    if (FY0FW01.FY0FWSKF == "Y") /* Key found*/
       /* next sentence*/
    else
      if (FY0FW01.FY0FWTSP == FY0FW01.TA5TSQIX) /* Last page*/
        FY0FW01.FY0FWIXM = 11; /* Set index to last entry*/
        set FY0FM001.FY0FMSEL[FY0FWIXM] cursor; /* Initial cursor*/
        FY0FW01.FY0FWSKF = "Y"; /* Indicate page was found*/
        FY0FW01.FY0FWSKY = " "; /* Reset save key*/
      else
        FY0FW01.FY0FWTSP = FY0FW01.FY0FWTSP + 1; /* Increment page*/
      end
    end
  end


end // end FY0FS15

// Select set style/color
Function FY0FS17()
   /* ------------------------------------------------------------*/
   /* Select the set of table rows.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes}; /* Select table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS17"; /* Process name*/
    TA1REC.TA1LOC = "SELECT SET OF TABLE ROWS";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    FY0FM003.XXXPRCNM = "FY0FS17"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end

end // end FY0FS17

// Fetch style/color
Function FY0FS18()
   /* ------------------------------------------------------------*/
   /* Fetch the next row from the selected set of rows.*/
   /* If end of file, set end of file switch.*/
   /* If any error, indicate a system error.*/
   /* Format the data in the temporary storage display line.*/
   /* ------------------------------------------------------------*/

  call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes}; /* Fetch the next row*/

  if (SQLCA.VAGen_SQLCODE == 100) /* End of selected set*/
    FY0FW01.FY0FWSW1 = "Y"; /* end of set found*/
  else
    if (SQLCA.VAGen_SQLCODE != 0) /* unexpected return code*/
      if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
        converseLib.validationFailed(11); /* Indicate not available*/
        TA1REC.TA1FUNC = "POST"; /* Termination function*/
      else
        converseLib.validationFailed(10); /* Indicate system error*/
        TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      end

      FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "FY0FS18"; /* Process name*/
      TA1REC.TA1LOC = "FETCH NEXT SELECTED TABLE ROW";
      TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
      TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
      TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
      TA1REC.TA1TBLKE = PG2REC.PG2KEY; /* Table key*/

      call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM003.XXXPRCNM = "FY0FS18"; /* Process name*/
    end
  end


end // end FY0FS18

// Close style/color cursor
Function FY0FS19()
   /* ------------------------------------------------------------*/
   /* Close the selected set of table rows.*/
   /* If any error, indicate a system error.*/
   /* ------------------------------------------------------------*/

  call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes}; /* Close table set*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1PGMNM = "FY0FS19"; /* Process name*/
    TA1REC.TA1LOC = "CLOSE SELECTED SET OF TABLE ROWS";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    FY0FM003.XXXPRCNM = "FY0FS19"; /* Process name*/

    converseLib.validationFailed(10); /* Indicate system error*/
    FY0FW01.FY0FWPSW = "Y"; /* Indicate problem*/

  end


end // end FY0FS19

// Select factory/style row
Function FY0FS20()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO2980" ("S ", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS20"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/
    TA1REC.TA1TBLKE = FY2REC.FY2KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    FY0FM003.XXXPRCNM = "FY0FS20"; /* Process name*/
  end


end // end FY0FS20

// Add factory/style row
Function FY0FS21()
   /* ------------------------------------------------------------*/
   /* This module adds a table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  call "IO2980" ("A ", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS21"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FM003.XXXPRCNM = "FY0FS21"; /* Process name*/
  end


end // end FY0FS21

// Select factory/color row
Function FY0FS22()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("S ", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
     /* next sentence*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS22"; /* Process name*/
    TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = FY3REC.FY3KEY; /* Table key*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    converseLib.clearScreen();
     /* Clear screen before redisplay*/
    FY0FM003.XXXPRCNM = "FY0FS22"; /* Process name*/
  end


end // end FY0FS22

// Add factory/color row
Function FY0FS23()
   /* ------------------------------------------------------------*/
   /* This module adds a table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("A ", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS23"; /* Process name*/
    TA1REC.TA1LOC = "ADD TABLE ROW";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FM003.XXXPRCNM = "FY0FS23"; /* Process name*/
  end


end // end FY0FS23

// Update the dfcty.vfysty01 tble
Function FY0FS24()
   /* ------------------------------------------------------------*/
   /* This module adds a table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  call "IO2980" ("U ", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100)
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS24"; /* Process name*/
    TA1REC.TA1LOC = "UPDATE TABLE ROW";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FM003.XXXPRCNM = "FY0FS24"; /* Process name*/
  end


end // end FY0FS24

// Update the dfcty.vfyclr01 tble
Function FY0FS25()
   /* ------------------------------------------------------------*/
   /* This module adds a table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("U ", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100)
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS25"; /* Process name*/
    TA1REC.TA1LOC = "UPDATE TABLE ROW";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FM003.XXXPRCNM = "FY0FS25"; /* Process name*/
  end


end // end FY0FS25

// Delete dfcty.vfyclr01 row
Function FY0FS26()
   /* ------------------------------------------------------------*/
   /* This module adds a table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  call "IO2990" ("D ", SQLCA, FY3REC) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0 /* Unexpected return code*/
   && SQLCA.VAGen_SQLCODE != 100)
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS26"; /* Process name*/
    TA1REC.TA1LOC = "DELETE TABLE ROW";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYCLR01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FM003.XXXPRCNM = "FY0FS26"; /* Process name*/
  end


end // end FY0FS26

// Delete dfcty.vfysty01 row
Function FY0FS27()

   /* ------------------------------------------------------------*/
   /* This module deletes a table row.*/
   /* It will return and document system errors if unexpected*/
     /* return codes are found.*/
   /* ------------------------------------------------------------*/

  call "IO2980" ("D ", SQLCA, FY2REC) {isNoRefresh = yes, isExternal = yes}; /* Add table row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* Unexpected return code*/
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1PGMNM = "FY0FS27"; /* Process name*/
    TA1REC.TA1LOC = "DELETE TABLE ROW";
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
    TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
    TA1REC.TA1TBLVU = "VFYSTY01"; /* Table view name*/

    call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    FY0FM003.XXXPRCNM = "FY0FS27"; /* Process name*/
  end


end // end FY0FS27

// Select dprodg.vgasiz01 row
Function FY0FS28()
   /* ------------------------------------------------------------*/
   /* Select a unique row.*/
   /* If not available, return an error message to the user.*/
   /* If any other, indicate system error.*/
   /* ------------------------------------------------------------*/

  call "IO0960" ("S ", SQLCA, PG6REC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* Row found*/
   || SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

    return;
  end

  if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    if (FY0FW01.FY0FWMAP == "1")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM001.XXXPRCNM = "FY0FS28"; /* Process name*/
    end
    if (FY0FW01.FY0FWMAP == "2")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM002.XXXPRCNM = "FY0FS28"; /* Process name*/
    end
    if (FY0FW01.FY0FWMAP == "3")
      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      FY0FM003.XXXPRCNM = "FY0FS28"; /* Process name*/
    end
  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1PGMNM = "FY0FS28"; /* Process name*/
  TA1REC.TA1LOC = "SELECT UNIQUE ROW       ";

  if (FY0FW01.FY0FWMAP == "1")
    TA1REC.TA1MAP = "FY0FM001"; /* Map name*/
  end

  if (FY0FW01.FY0FWMAP == "2")
    TA1REC.TA1MAP = "FY0FM002"; /* Map name*/
  end

  if (FY0FW01.FY0FWMAP == "3")
    TA1REC.TA1MAP = "FY0FM003"; /* Map name*/
  end

  TA1REC.TA1DBASE = "DFCTY   "; /* Data base name*/
  TA1REC.TA1TBLVU = "VFCTY001"; /* Table view name*/
  TA1REC.TA1TBLKE = FY1REC.FY1KEY; /* Table key*/

  call "TA0020" (TA1REC, SQLCA) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/


end // end FY0FS28

// Select row in dprodc.vprdcu01
Function FY0FS29()
   /* ------------------------------------------------------------*/
   /* Select inventory segment code*/
   /* ------------------------------------------------------------*/

  try
    call "IO3340" ("SG", SQLCA, PC2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous precess.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* or not found*/
      return; /* Return to previous process*/

    end
  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user*/
   /* otherwise, indicate that an unexpected error has occured.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  if (FY0FW01.FY0FWMAP == 1)
    FY0FM001.XXXPRCNM = "FY0FS29"; /* Process identification*/
  else
    if (FY0FW01.FY0FWMAP == 2)
      FY0FM002.XXXPRCNM = "FY0FS29";
    else
      FY0FM003.XXXPRCNM = "FY0FS29";
    end
  end

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/
    converseLib.validationFailed(11); /* Data was not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/


  else
    converseLib.validationFailed(10); /* Unexpected error occurred*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    if (FY0FW01.FY0FWMAP == 1)
      converseLib.clearScreen();
       /* Clear screen before display*/
    else
      if (FY0FW01.FY0FWMAP == 2)
        converseLib.clearScreen();
        
      else
        converseLib.clearScreen();
        
      end
    end

  end

  TA1REC.TA1TYPE = "DB2"; /* Type of error*/
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "S29"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPRDCU01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC2REC.PC2INSEG; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end FY0FS29

// Select Region code
Function FY0FS30()
   /* ------------------------------------------------------------*/
   /* Load key fields for table access*/
   /* ------------------------------------------------------------*/

  set TABREC empty;
  set SQLCA empty;
  TABREC.SQLCAREC = SQLCA.SQLCAREC;

  call "TA0800" (TABREC) {isNoRefresh = yes, isExternal = yes}; /* Select row*/
  SQLCA.SQLCAREC = TABREC.SQLCAREC;

  if (SQLCA.VAGen_SQLCODE == 0) /* Row found*/
    return; /* Return to previous process*/
  else
    if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      converseLib.clearScreen();
       /* Clear map*/
    end
  end

  if (SQLCA.VAGen_SQLCODE == 0 &&  /* Row found*/
  TAB-RTN-CD != 0)                
    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/
  end

  TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
  TABREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql comm. area*/
  if (SQLCA.VAGen_SQLCODE == 0)
    TA1REC.TA1TYPE = "DA  "; /* Type of error*/
  else
    TA1REC.TA1TYPE = TAB-RTN-CD;
  end
  TA1REC.TA1PGMNM = "PC0VS52"; /* Process name*/
  TA1REC.TA1LOC = "SELECT THEATER OF OPER  ";
  TA1REC.TA1DBASE = "TA0800  "; /* Data base name*/
  TA1REC.TA1TBLVU = "        "; /* Table view name*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack;

end // end FY0FS30

// Accumulate MFG. Percent
Function FY0FS99()

   /* ------------------------------------------------------------*/
   /* Select the set of factory table rows.*/
   /* While rows exist accum. the mfg. %*/
   /* Then add the map amount and if gt 100% set error.*/
   /* ------------------------------------------------------------*/

  set FY2REC empty; /* Clear record*/
  FY0FW01.FY0FWIOT = "2";

  FY2REC.XGPCD = FY0FM003.XGPCD; /* Gpc code*/
  FY2REC.SY1STNBR = FY0FM003.SY1STNBR; /* Style number*/
  FY2REC.FY1FCTYC = "*"; /* Wild card factory code*/
  FY2REC.XSECD = FY0FM003.XSECD; /* Season  code*/
   /* ---------- Y2K OUT BEGIN ----------*/
   /* IF FY0FM003.FY0FMSYR GT 0;        /* Season entered*/
    /* MOVE 19 TO FY0FW01.FY0FWSCC;    /* Set up century*/
   /* ---------- Y2K OUT END ------------*/

  if (FY0FM003.XGPCD == "02") /* If gpc code 02; xsnyr=0*/
    FY2REC.XSNYR = 0;
  else
    if (FY0FM003.FY0FMSYR > 60) /* Determine century*/
      FY0FW01.FY0FWSCC = 19;
    else
      FY0FW01.FY0FWSCC = 20;
    end
    FY0FW01.FY0FWSYY = FY0FM003.FY0FMSYR; /* Set up year*/
    FY2REC.XSNYR = FY0FW01.FY0FWSNY;
  end
  FY2REC.XXXSTAT = "*"; /* Stat code*/

  FY0FS03(); /* Select Factory Style row*/

  FY0FS04(); /* Fetch Factory Style row*/

  FY0FW01.FY0FWTPC = 0; /* Set accum. to zero*/

  while (SQLCA.VAGen_SQLCODE == 0)

    FY0FW01.FY0FWTPC = FY0FW01.FY0FWTPC + FY2REC.FY2MFGPC;

    FY0FS04(); /* Fetch Factory Style row*/

  end

  if (FY0FW01.FY0FWFSW == "A") /* Add map*/
    FY0FW01.FY0FWTPC = FY0FW01.FY0FWTPC + FY0FM003.FY2MFGPC; /* Add in map*/
  else
    if (FY0FW01.FY0FWTPC > 0)
      FY0FW01.FY0FWTPC = FY0FW01.FY0FWTPC - FY0FW01.FY2MFGPC; /* Sub in map*/
      FY0FW01.FY0FWTPC = FY0FW01.FY0FWTPC + FY0FM003.FY2MFGPC;
                                   /* Add in map*/
    end
  end

  FY0FS13(); /* Close Factory Style row*/

  if (FY0FW01.FY0FWTPC > 100.00
   || FY0FW01.FY0FWTPC < 0.00)
    converseLib.validationFailed(147); /* Cannot be gt 100%*/
    set FY0FM003.FY2MFGPC cursor, bold; /* Highlight mfg. %*/
    FY0FM003.XXXPRCNM = "FY0FS99"; /* Process name*/
    FY0FW01.FY0FWPSW = "Y"; /* Turn on error switch*/
    FY0FW01.FY0FWSWR = "N"; /* Turn off request for data*/
  end



end // end FY0FS99

// converse pop up window
Function XPYSN01()
   /* ------------------------------------------------------------*/

              /* CONVERSE POP UP WINDOW*/

      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.*/
      /* 2) Converse the map.*/
      /* 3) Reset selection fields to normal after converse.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/

   /* ------------------------------------------------------------*/

   /* **********************************************************/
   /* ***  If no errors clear page and set up for scrolling ****/
   /* **********************************************************/

  if (XX0XW02.XX0XWERR == "N") /* If error flag not yes*/

     /* **********************************************************/
     /* *** Make sure table count is set for next page.       ****/
     /* *** Clear map and set up header for new scroll screen.****/
     /* **********************************************************/

    if (XX0XW02.XX0XWFFL == "N") /* if not the first time through*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[10] + 1; /* set up scroll pf8*/
    end

    set XX0XM001 initial; /* Clear map output area*/
    XX0XM001.XX0XMHDR = XX0XW02.XX0XWHDR; /* Place heading on map*/
    XX0XM001.XX0XMTR1 = "              SELECT & ENTER          ";
    XX0XM001.XX0XMTR2 = "   PF7:BACK                   PF8:FRWD";

     /* *********************************************************/
     /* ***      If PF8 was pressed then scroll forward      ****/
     /* *********************************************************/

    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW02.XX0XWFFL == "Y")    /* Or it is the first time thru*/
      XX0XW02.XX0XWCT2 = 1; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 <= 10 /* Until end of screen lines*/
       && YSNTBL.XSECD[XX0XWCT1] != "99") /* Or end of data*/
        if (YSNTBL.XXXSTAT[XX0XWCT1] == "A" /* If active status on code*/
         && YSNTBL.XGPCD[XX0XWCT1] == FY0FW01.XGPCD
         && YSNTBL.XDR-PROD-REG-CD[XX0XWCT1] == TABREC.XDR-PROD-REG-CD)
          XX0XM001.XX0XMCD[XX0XWCT2] = YSNTBL.XSECD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YSNTBL.XSNDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          if (XX0XW02.XX0XWFFL == "Y") /* If first time thru*/
            XX0XW02.XX0XWSIX = XX0XW02.XX0XWCT1; /* Save last index*/
          end
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set selects to normal*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
                                   /* Increment screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 + 1; /* Increment table index*/
      end
      XX0XW02.XX0XWFFL = "N"; /* Set first time flag to no*/
    end

     /* ******************************************************/
     /* ***    If PF7 was pressed then scroll backward    ****/
     /* ******************************************************/

    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW02.XX0XWCT1 = XX0XW02.XX0XWINX[1] - 1; /* Set up table index*/
      XX0XW02.XX0XWCT2 = 10; /* Set up screen index*/
      while (XX0XW02.XX0XWCT2 >= 1) /* Load from the bottom up*/
        if (YSNTBL.XXXSTAT[XX0XWCT1] == "A"          /* If the status is active*/
         && YSNTBL.XGPCD[XX0XWCT1] == FY0FM001.XGPCD /* AND CORRECT GPC*/
         && YSNTBL.XDR-PROD-REG-CD[XX0XWCT1] == TABREC.XDR-PROD-REG-CD)
          XX0XM001.XX0XMCD[XX0XWCT2] = YSNTBL.XSECD[XX0XWCT1];
          XX0XM001.XX0XMDES[XX0XWCT2] = YSNTBL.XSNDESC[XX0XWCT1];
          XX0XW02.XX0XWINX[XX0XWCT2] = XX0XW02.XX0XWCT1;
                                   /* Save array*/
          set XX0XM001.XX0XMSEL[XX0XWCT2] normal; /* Set select visible*/
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 - 1;
                                   /* Decrement screen index*/
        end
        XX0XW02.XX0XWCT1 = XX0XW02.XX0XWCT1 - 1; /* Decrement table index*/
      end
      if (XX0XW02.XX0XWCT1 < 1) /* If the table index was decremented*/
        XX0XW02.XX0XWCT1 = 1;
                                   /* to zero, set it up to 1 (valid value)*/
      end
    end
  end


  converse XX0XM001 ;

  XX0XW02.XX0XWERR = "N"; /* Reset error flag*/

     /* *********************************************************/
     /* ******  Reset selection fields after converse     *******/
     /* *********************************************************/

  XX0XW02.XX0XWCT2 = 1; /* Screen index*/
  while (XX0XW02.XX0XWCT2 <= 10 /* Set all fields with data to normal*/
   && XX0XM001.XX0XMCD[XX0XWCT2] != " ")
    set XX0XM001.XX0XMSEL[XX0XWCT2] normal;
    XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
  end

    /* *********************************************************/
    /* ******  Check for PFkey errors and scroll errors  *******/
    /* *********************************************************/

  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && YSNTBL.XSECD[XX0XWCT1] == "99") /* And end of table*/
    XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW02.XX0XWINX[1] <= XX0XW02.XX0XWSIX)
      XX0XW02.XX0XWERR = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW02.XX0XWEND = "Y"; /* Set end flag*/

         /* *********************************************************/
         /* ******          Check for user selection          *******/
         /* *********************************************************/

        XX0XW02.XX0XWCT2 = 1; /* Screen index*/
        while (XX0XW02.XX0XWCT2 <= 10) /* Until end of screen data*/
          if (XX0XM001.XX0XMSEL[XX0XWCT2] == "S") /* Check for selection*/
            XX0XW02.XX0XWPIX = XX0XW02.XX0XWINX[XX0XWCT2];
            XX0XW02.XX0XWCT2 = 11; /* End loop*/
          end
          XX0XW02.XX0XWCT2 = XX0XW02.XX0XWCT2 + 1;
        end
      else
        if (converseVar.eventKey not pf7 /* invalid pf key*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW02.XX0XWERR = "Y"; /* set error flag*/
        end
      end
    end
  end


end // end XPYSN01

//*** RECORD=FY0FW01 ****
// Working storage for FY0F - Factory Style Inquiry/Maintenance
// ***********************
Record FY0FW01 type basicRecord
  10 FY0FWIXM FY0FWIXM ; 
  10 FY0FWIDX FY0FWIDX ; 
  10 FY0FWSZI FY0FWSZI ; 
  10 FY0FWSGP FY0FWSGP ; 
  10 FY0FWSIX FY0FWSIX ; 
  10 FY0FWSPG FY0FWSPG ; 
  10 FY0FWSW1 FY0FWSW1 ; 
  10 FY0FWSW2 FY0FWSW2 ; 
  10 FY0FWDSF FY0FWDSF ; 
  10 FY0FWIOT FY0FWIOT ; 
  10 FY0FWPRF FY0FWPRF ; 
  10 FY0FWPSW FY0FWPSW ; 
  10 FY0FWSWR FY0FWSWR ; 
  10 FY0FWLSF FY0FWLSF ; 
  10 FY0FWTSP FY0FWTSP ; 
  10 FY0FWMAP FY0FWMAP ; 
  10 FY0FWFSW FY0FWFSW ; 
  10 XGPCD XGPCD ; 
  10 XGPDESC XGPDESC ; 
  10 FY1FCTYC FY1FCTYC ; 
  10 FY1FCTSN FY1FCTSN ; 
  10 SY1SSTNM SY1SSTNM ; 
  10 SY2CLRAB SY2CLRAB ; 
  10 FY0FWSKY FY0FWSKY ; 
    15 FY0FWSTY FY0FWSTY ; 
    15 FY0FWCOL FY0FWCOL ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XSECD XSECD ; 
  10 FY0FWSYR FY0FWSYR ; 
  10 FY0FWFOB FY0FWFOB ; 
  10 FY0FWPRC FY0FWPRC ; 
  10 FY0FWPIN FY0FWPIN ; 
  10 XDMCD XDMCD ; 
  10 XQACD XQACD ; 
  10 PC2INSEG PC2INSEG ; 
  10 XPGCD XPGCD ; 
  10 XUMCD XUMCD ; 
  10 XSNYR XSNYR ; 
  10 ZZZCHGCT ZZZCHGCT ; 
  10 FY3INPFL FY3INPFL ; 
  10 FY3SFYFL FY3SFYFL ; 
  10 FY0FWGCL FY0FWGCL [100] ; 
    15 FY0FWCLR FY0FWCLR ; 
  10 FY0FWSNY FY0FWSNY ; 
    15 FY0FWSCC FY0FWSCC ; 
    15 FY0FWSYY FY0FWSYY ; 
  10 FY0FWSKF FY0FWSKF ; 
  10 FY0FWSFL FY0FWSFL ; 
  10 FY0FWMFL FY0FWMFL ; 
  10 FY0FWDEF FY0FWDEF ; 
  10 FY0FWDTE FY0FWDTE ; 
    15 FY0FWCEN FY0FWCEN ; 
    15 FY0FWYMD FY0FWYMD ; 
      20 FY0FWYY FY0FWYY ; 
      20 FY0FWMM FY0FWMM ; 
      20 FY0FWDD FY0FWDD ; 
  10 FY0FWCDT FY0FWCDT ; 
    15 FY0FWCMM FY0FWCMM ; 
    15 FY0FWCDD FY0FWCDD ; 
    15 FY0FWCYY FY0FWCYY ; 
  10 FY0FWTPC FY0FWTPC ; 
  10 FY2MFGPC FY2MFGPC ; 
  10 TA5TSQIX TA5TSQIX ; 
end // end FY0FW01

//*** RECORD=FY0FW02 ****
// Temp. storage record for FY0F - Factory Style Inquiry/Maint.
// ***********************
Record FY0FW02 type basicRecord
  10 FY0FWLEN FY0FWLEN ; 
  10 FY0FWLIN FY0FWLIN [11] ; 
    15 FY0FMSEL FY0FMSEL ; 
    15 FY0FWPRD FY0FWPRD ; 
      20 SY1STNBR SY1STNBR ; 
      20 SY2CLRID SY2CLRID ; 
      20 XSECD XSECD ; 
      20 XSNYR XSNYR ; 
      20 XDMCD XDMCD ; 
      20 XQACD XQACD ; 
      20 PC2INSEG PC2INSEG ; 
      20 XPGCD XPGCD ; 
      20 XUMCD XUMCD ; 
    15 FY4FOBPR FY4FOBPR ; 
    15 FY0FWPIN FY0FWPIN ; 
    15 FY3INPFL FY3INPFL ; 
    15 FY3SFYFL FY3SFYFL ; 
    15 FY3PRTGT FY3PRTGT ; 
    15 FY3PRCAP FY3PRCAP ; 
    15 FY3PRMIN FY3PRMIN ; 
    15 FY2MFGPC FY2MFGPC ; 
    15 FY1MFGDY FY1MFGDY ; 
    15 FY1FABDY FY1FABDY ; 
    15 FY1STDC FY1STDC ; 
    15 FY1SPCLC FY1SPCLC ; 
    15 FY1STCDY FY1STCDY ; 
    15 FY1LSTDY FY1LSTDY ; 
    15 XXXSTAT XXXSTAT ; 
end // end FY0FW02

//*** RECORD=FY0FW03 ****
// **************** FACTORY STYLE TABLE CLONE *****************
// 
// record holding area for checking to see if a row displayed
// on the change map has indeed been changed. This record will
// be used for checks on an apparel row.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ---------------------------------------
// 04/10/90   GWITZI   New record.
// 06/16/93   GAMEN    Add zfc-crcy-cd for db2 changes.
// ***********************
Record FY0FW03 type basicRecord
  5 FY2GROUP FY2GROUP ; 
    10 FY2KEY FY2KEY ; 
      15 XGPCD XGPCD ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 SY1STNBR SY1STNBR ; 
      15 XSECD XSECD ; 
      15 XSNYR XSNYR ; 
    10 FY1MFGDY FY1MFGDY ; 
    10 FY1FABDY FY1FABDY ; 
    10 FY1STDC FY1STDC ; 
    10 FY1SPCLC FY1SPCLC ; 
    10 FY1STCDY FY1STCDY ; 
    10 FY1LSTDY FY1LSTDY ; 
    10 FY2MFGPC FY2MFGPC ; 
    10 ZFC-CRCY-CD ZFC-CRCY-CD ; 
    10 XXXSTAT XXXSTAT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end FY0FW03

// Selection field
DataItem FY0FMSEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Day
DataItem FY0FWCDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Converted date
DataItem FY0FWCDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working century
DataItem FY0FWCEN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage color
DataItem FY0FWCLR char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Month
DataItem FY0FWCMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save key color code
DataItem FY0FWCOL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Year
DataItem FY0FWCYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working day
DataItem FY0FWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data Entered Flag
DataItem FY0FWDEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Duplicate style flag
DataItem FY0FWDSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working date
DataItem FY0FWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FY_FOB_PRC
DataItem FY0FWFOB decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Add/delete function switch
DataItem FY0FWFSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group level color array
DataItem FY0FWGCL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for working storage
DataItem FY0FWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// I-O task indicator
DataItem FY0FWIOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Index for map fields
DataItem FY0FWIXM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Temporary storage length
DataItem FY0FWLEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Data Display Line
DataItem FY0FWLIN char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// List screen flag
DataItem FY0FWLSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Map to be displayed
DataItem FY0FWMAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Message flag
DataItem FY0FWMFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working month
DataItem FY0FWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Price indicator
DataItem FY0FWPIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working storage for FOB price
DataItem FY0FWPRC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group level product
DataItem FY0FWPRD char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Price found flag
DataItem FY0FWPRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Problem switch
DataItem FY0FWPSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season century
DataItem FY0FWSCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Selection flag
DataItem FY0FWSFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Saved gpc code
DataItem FY0FWSGP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save index
DataItem FY0FWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save key flag
DataItem FY0FWSKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Save Key
DataItem FY0FWSKY char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Working storage for seas. year
DataItem FY0FWSNY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save page
DataItem FY0FWSPG num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Save key style number
DataItem FY0FWSTY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file switch 1
DataItem FY0FWSW1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Cursor end of file switch 2
DataItem FY0FWSW2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Request for data switch
DataItem FY0FWSWR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// season year range
DataItem FY0FWSYR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// season year
DataItem FY0FWSYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Index for map fields
DataItem FY0FWSZI smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Total mfg. percent
DataItem FY0FWTPC decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Current temporary storage page
DataItem FY0FWTSP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Working year month day
DataItem FY0FWYMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working year
DataItem FY0FWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

