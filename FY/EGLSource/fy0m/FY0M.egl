package fy0m;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=FY0M ****
// This application displays the "PRODUCTION MASTER MENU".
// It provides entry to the subordinate applications.
// 
//   DATE      NAME    DESCRIPTION OF CHANGE
// --------   ------   ----------------------------------------
// 08/01/88   GAMEN    New application.
// 08/20/90   RHETRI   CHG name on map.
// 09/14/90   JJUDKI   ADDED OPTION 30 FOR NIL FORECAST.
// 10/24/90   GAMEN    Put 'flow' back into application
// 11/06/91   Gamen    ADDED OPTION 31 FOR comp. frcst.
// 06/16/94   KGRAHA   Added option 32 for NIL History Reports.
// *********************
Program FY0M type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "FY00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  FYWREC FYWREC; // record
  XX0XW02 XX0XW02; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use FY0MT {deleteAfterUse = yes}; // table
  use XGPTBL {deleteAfterUse = yes}; // table
  use FY0MM.FY0MM001,  // forms
      FY0MM.XX0XM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPFY001: XPFY001();
     /* ------------------------------------------------------------*/
     /* Flow to converse the FACTORY Master Menu.*/
     /* ------------------------------------------------------------*/

    set FY0MM001 empty;
    set XX0XW02 empty;
    FYWREC.XGPCD = COMMAREA.XGPCD;


    FY0M001: FY0M001();

    goto FY0M001;

  end // end main
end // end FY0M

// FACTORY Master Menu
Function FY0M001()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Format the map output area and display the map.*/
   /* 2) Check the attention identifier used to respond.*/
   /* 3) Reset highlighted fields to normal intensity.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  FY0M100(); /* Format and display the map*/

  FY0M200(); /* Check attention identifier*/

  FY0M300(); /* Reset fields to normal intensity*/

  FY0M400(); /* Verify the data that was entered*/

  FY0M500(); /* Process valid input request*/


end // end FY0M001

// Format and display the map
Function FY0M100()
   /* ------------------------------------------------------------*/
   /* If no error to display, format the map output area.*/
   /* Indicate sound audible alarm for any error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum == 0) /* No error message*/

    set FY0MM001 initial; /* Clear map output area*/

    FY0MM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/

    FY0MM001.XGPCD = FYWREC.XGPCD; /* GPC code*/
    FY0MM001.CAITEM = COMMAREA.CAITEM; /* Application data*/
    COMMAREA.CAITEM = " "; /* Clear application data*/

  else

    set FY0MM001 alarm; /* Indicate sound alarm*/

  end

  converse FY0MM001 ;

  if (converseVar.eventKey is enter)
    FY0M110(); /* Check for ? inquiry by user*/
  end

end // end FY0M100

// Check for ? inquiry by user
Function FY0M110()
   /* ------------------------------------------------------------*/

              /* CHECK FOR USER ? CODE INQUIRY*/

     /* 1) If the user has enter a '?' in any of the appropiate*/
        /* fields, display the pop up window for that CSP table*/
        /* and allow for inquiry.*/

     /* 2) Set map page after all windows displayed*/

   /* ------------------------------------------------------------*/

  if (FY0MM001.XGPCD == "?") /* if ? in gpc code field*/
    XPXX001(); /* perform pop-up window initialize*/
    XX0XW02.XX0XWHDR = "                   GPC    "; /* heading*/

    while (XX0XW02.XX0XWEND == "N") /* until user hits enter*/
      XPXGP01(); /* perform gpc code window*/
    end

     /* **********************************************************/
     /* *  If the pass index is greater than zero, use the      **/
     /* *  passed table index 'XX0XWPIX' to move the warehouse  **/
     /* *  type table code and description to the map.          **/
     /* **********************************************************/

    if (XX0XW02.XX0XWPIX > 0) /* if user selected a code*/
      FY0MM001.XGPCD = XGPTBL.XGPCD[XX0XWPIX]; /* move code*/
    else
      FY0MM001.XGPCD = " "; /* clear fields*/
    end

    converseLib.clearScreen();
     /* restore the original map*/
  end

end // end FY0M110

// Check attention identifier
Function FY0M200()
   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set FY0MM001 initial; /* Clear the map fields*/

    exit stack; /* Exit to redisplay map*/

  end

  if (FY0MM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      COMMAREA.CATOAP = FY0MM001.CATOAP; /* TO application*/
      COMMAREA.CAITEM = FY0MM001.CAITEM; /* Application data*/

      XSFY001(); /* Exit to another application*/

    else

      converseLib.validationFailed(5); /* Indicate PF key not valid*/

    end

    set FY0MM001.CATOAP cursor, modified, bold; /* Highlight*/

    FY0MM001.XXXPRCNM = "FY0M200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/

    COMMAREA.CAITEM = "FY0MM001"; /* Move map name for help*/

    XSFY001(); /* Exit to another application*/

    FY0MM001.XXXPRCNM = "FY0M200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    XSFY001(); /* Exit to another application*/

    FY0MM001.XXXPRCNM = "FY0M200"; /* Process name*/

    exit stack; /* Exit to redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    converseLib.validationFailed(4); /* Indicate invalid attention key*/
    FY0MM001.XXXPRCNM = "FY0M200"; /* Process name*/

    if (converseVar.eventKey is pa1 /* PA1 was pressed*/
     || converseVar.eventKey is pa3) /* or PA3 was pressed*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/

    end

    exit stack; /* Exit to redisplay map*/

  end


end // end FY0M200

// Reset highlighted fields
Function FY0M300()
   /* ------------------------------------------------------------*/
   /* Reset field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

  set FY0MM001.FY0MMSEL initialAttributes; /* Menu selection*/
  set FY0MM001.XGPCD initialAttributes; /* General Product Class*/
  set FY0MM001.CATOAP initialAttributes; /* FAST PATH to application*/
  set FY0MM001.CAITEM initialAttributes; /* FAST PATH application data*/


end // end FY0M300

// Verify data that was entered
Function FY0M400()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Verify the menu selection that was entered.*/
   /* Exit to redisplay the map if any error was found.*/
   /* ------------------------------------------------------------*/

  if (FY0MM001.CAITEM > " ") /* Application data was entered*/
    set FY0MM001.CAITEM cursor, modified, bold; /* Highlight*/
    converseLib.validationFailed(7); /* Indicate enter only with FAST PATH*/
    FY0MM001.XXXPRCNM = "FY0M400"; /* Process name*/
  end

  if (FY0MM001.FY0MMSEL > 0) /* Menu selection was entered*/
    FY0M410(); /* Verify the menu selection*/

    if (converseVar.validationMsgNum == 0) /* No error was found*/
      FYWREC.FYWTOAP = FY0MT.CATOAP[sysVar.arrayIndex]; /* Save the 'TO' appl*/
    else /* Error was found*/
      exit stack; /* Exit to redisplay map*/
    end
  end

  FY0M420(); /* Verify GPC code*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to redisplay map*/
  end


end // end FY0M400

// Verify the menu selection
Function FY0M410()
   /* ------------------------------------------------------------*/
   /* Verify the menu selection against the selection table.*/
   /* Return an error message if the selection is not found.*/
   /* ------------------------------------------------------------*/

  if (FY0MM001.FY0MMSEL in FY0MT.FY0MMSEL)
    return;
  end /* Verify selection*/

  set FY0MM001.FY0MMSEL cursor, modified, bold; /* Highlight*/

  converseLib.validationFailed(9); /* Indicate invalid selection*/
  FY0MM001.XXXPRCNM = "FY0M410"; /* Process name*/


end // end FY0M410

// Verify the entered data
Function FY0M420()
   /* ------------------------------------------------------------*/

                  /* VERIFY THE ENTERED DATA*/

       /* Edit;*/
           /* 1) valid GPC code is entered*/

   /* ------------------------------------------------------------*/

  if (FY0MM001.XGPCD == " ") /* if general product is blank*/
    converseLib.validationFailed(101); /* Display error message*/
    FY0MM001.XXXPRCNM = "FY0M420"; /* Process name*/
    set FY0MM001.XGPCD cursor, modified, bold; /* highlight field*/
  else
    sysVar.arrayIndex = 0; /* Initialize ezetst*/
    if (FY0MM001.XGPCD in XGPTBL.XGPCD) /* Check valid code*/
    end
    if (sysVar.arrayIndex == 0 /* Not in table*/
     || XGPTBL.XXXSTAT[sysVar.arrayIndex] == "I") /* or inactive*/
      converseLib.validationFailed(101); /* Display error message*/
      FY0MM001.XXXPRCNM = "FY0M420"; /* Process name*/
      set FY0MM001.XGPCD cursor, modified, bold; /* highlight field*/
    else /* Save gpc code*/
      FYWREC.XGPCD = XGPTBL.XGPCD[sysVar.arrayIndex];
    end
  end


end // end FY0M420

// Process valid input request
Function FY0M500()
   /* ------------------------------------------------------------*/
   /* Invoke the application indicated by the table entry.*/
   /* If the request failed, display the returned error message.*/
   /* ------------------------------------------------------------*/

  if (FY0MM001.FY0MMSEL > 0) /* Menu selection was entered*/

    COMMAREA.CATOAP = FYWREC.FYWTOAP; /* TO application*/
    COMMAREA.XGPCD = FYWREC.XGPCD; /* TO application*/

    XSFY001(); /* Exit to another application*/

    set FY0MM001.FY0MMSEL cursor, modified, bold; /* Highlight*/

    FY0MM001.XXXPRCNM = "FY0M500"; /* Process name*/

  end


end // end FY0M500

