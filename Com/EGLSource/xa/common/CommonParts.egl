package xa.common;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpz3.*;
import ku.common.*;
import nl.common.*;
//*** RECORD=XA0AW02 ****
// this record is used to pass information to and from the
// address table module. it contains elements which tell the
// application what function to perform, the address id, the
// address itself, and an array of 7 error messages ( one
// general error message, and 6 error messages, one for each
// field in the address which may be in error. the error
// message fields will contain the ezemno error message number
// corresponding to the error for that field.
// ***********************
Record XA0AW02 type basicRecord
  5 XA0AWFNC XA0AWFNC ; 
  5 XA0AWGRP XA0AWGRP ; 
    10 KUCCOID KUCCOID ; 
    10 KULAAID KULAAID ; 
    10 KULUSCNT KULUSCNT ; 
    10 XXX-ADDR1 XXX-ADDR1 ; 
    10 XXX-ADDR2 XXX-ADDR2 ; 
    10 XXX-ADDR3 XXX-ADDR3 ; 
    10 XXX-ADDR4 XXX-ADDR4 ; 
    10 XXX-ADDR5 XXX-ADDR5 ; 
    10 XXX-ADDR6 XXX-ADDR6 ; 
    10 XXXCITY XXXCITY ; 
    10 XSTCD XSTCD ; 
    10 XXXZIP XXXZIP ; 
    10 XCYCD XCYCD ; 
    10 XCTCD XCTCD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
  5 XSTDESC XSTDESC ; 
  5 XCTDESC XCTDESC ; 
  5 XA0AWEGP XA0AWEGP ; 
    10 XA0AWERR XA0AWERR [8] ; 
  5 XXXUSER XXXUSER ; 
end // end XA0AW02

//*** RECORD=XA1REC ****
// this record is used to pass information to and from the
// address table module. it contains elements which tell the
// application what function to perform, the address id, the
// address itself, and an array of 10 error messages (one
// general error message, and 9 error messages, one for each
// field in the address which may be in error. the error
// message fields will contain the ezemno error message number
// corresponding to the error for that field.
// ;*
// ;* 11-02-93 CHELLM Renamed NLAADDR1-6 to XXX-ADDR1-6.
// ;*
// **********************
Record XA1REC type basicRecord
  5 XA1FUNCT XA1FUNCT ; 
  5 XA1GROUP XA1GROUP ; 
    10 NLATYPIN NLATYPIN ; 
    10 NLABSIND NLABSIND ; 
    10 NLAONECH NLAONECH ; 
    10 NLAINTGR NLAINTGR ; 
    10 NLASINT1 NLASINT1 ; 
    10 NLASINT2 NLASINT2 ; 
    10 NLAADRID NLAADRID ; 
    10 XXX-ADDR1 XXX-ADDR1 ; 
    10 XXX-ADDR2 XXX-ADDR2 ; 
    10 XXX-ADDR3 XXX-ADDR3 ; 
    10 XXX-ADDR4 XXX-ADDR4 ; 
    10 XXX-ADDR5 XXX-ADDR5 ; 
    10 XXX-ADDR6 XXX-ADDR6 ; 
    10 XSTCD XSTCD ; 
    10 XXXZIP XXXZIP ; 
    10 XCTCD XCTCD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
  5 XSTDESC XSTDESC ; 
  5 XCTDESC XCTDESC ; 
  5 XA1ERGRP XA1ERGRP ; 
    10 XA1ERIND XA1ERIND [10] ; 
  5 XXXUSER XXXUSER ; 
end // end XA1REC

// error group
DataItem XA0AWEGP char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error fields
DataItem XA0AWERR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// address appl function code
DataItem XA0AWFNC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem XA0AWGRP char(294)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error group
DataItem XA1ERGRP char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error fields
DataItem XA1ERIND num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// address appl function code
DataItem XA1FUNCT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem XA1GROUP char(271)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

