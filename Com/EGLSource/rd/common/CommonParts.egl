package rd.common;
//*** RECORD=RD2REC ****
// The RDS recipient file contains the following data elements:
//     -recipient number (rd2recno), which is the key
//     -recipient name   (rd2name)
//     -recipient dept   (rd2dept)
//     -recipient loc    (rd3locno)
// 
// The recipient file can be added, changed or deleted from the
// RDS recipient file menu. Records added are automatically
// assigned a recipient number from the next available recip-
// ient number stored in the RDS control file.
// **********************
Record RD2REC type indexedRecord  {
  fileName = "RD2RECP", keyItem = RD2RECNO
  }
  5 * char(200) ; 
    10 RD2RECNO RD2RECNO ; 
    10 RD2NAME RD2NAME ; 
    10 RD2DEPT RD2DEPT ; 
    10 RD3LOCNO RD3LOCNO ; 
    10 * char(155) ; 
end // end RD2REC

//*** RECORD=RD3REC ****
// The RDS location file contains the following data elements:
//     -location number (rd3locno), which is the key
//     -location name   (rd3name)
// 
// Records are added, deleted and changed via the RDS location
// master file menu. When a record is added, the RDS system
// automatically assigns the next available location number
// which is stored in the RDS control file. When a record is
// changed, the only field available for update is the location
// name.
// **********************
Record RD3REC type indexedRecord  {
  fileName = "RD3LOCAT", keyItem = RD3LOCNO
  }
  5 * char(200) ; 
    10 RD3LOCNO RD3LOCNO ; 
    10 RD3NAME RD3NAME ; 
    10 * char(175) ; 
end // end RD3REC

//*** RECORD=RD4REC ****
// The RDS control file contains the following data elements:
//     -company id  (rd4coid), key field, always 00001 for NIKE
//     -next avail recipient number
//                  (rd4narec)
//     -next avail location number
//                  (rd4naloc)
// The RDS control file next avail data elements are updated
// automatically when a recipient or location record is added
// to RDS.
// **********************
Record RD4REC type indexedRecord  {
  fileName = "RD4CNTL", keyItem = RD4KEY
  }
  5 * char(300) ; 
    10 RD4KEY RD4KEY ; 
      15 RD4COID RD4COID ; 
      15 RD4TYPE RD4TYPE ; 
    10 * char(293) ; 
end // end RD4REC

Record RD5REC type basicRecord // VAGen Info - redefined RD4REC
  10 RD4COID RD4COID ; 
  10 RD4TYPE RD4TYPE ; 
  10 RD5SORT1 RD5SORT1 ; 
  10 RD5SORT2 RD5SORT2 ; 
  10 RD5PGBRK RD5PGBRK ; 
  10 RD1COPNO RD1COPNO ; 
  10 RD5FLDID RD5FLDID ; 
  10 RD5FLD9 RD5FLD9 ; 
    15 RD5FLDX RD5FLDX ; 
      20 RD5FLDX1 RD5FLDX1 ; 
      20 RD5FLDX2 RD5FLDX2 ; 
      20 RD5FLDX3 RD5FLDX3 ; 
      20 RD5FLDX4 RD5FLDX4 ; 
      20 RD5FLDX5 RD5FLDX5 ; 
      20 * char(10) ; 
  10 RD1FREQC RD1FREQC ; 
  10 RD5FREQD RD5FREQD ; 
  10 RD1DOCNO RD1DOCNO [20] ; 
  10 * char(130) ; 
end // end RD5REC

Record RDWREC type basicRecord
  10 RDWERFLG RDWERFLG ; 
  10 RDWUPFLG RDWUPFLG ; 
end // end RDWREC

// RB_DIM_IND
DataItem RB-DIM-IND char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RB-MFG-CHAR-CD
DataItem RB-MFG-CHAR-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group for mfg char
DataItem RB-MFG-CHAR-CD-TABLE char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RB_MIDSL_VER_CD
DataItem RB-MIDSL-VER-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PG_PRM_SZ_RNG_TXT
DataItem RB-PRM-SZ-RNG-TXT char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// RB_SG_COLR_ID
DataItem RB-SG-COLR-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RB_STY_ID
DataItem RB-STY-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RB-STYGRP-CNSMR-NM
DataItem RB-STYGRP-CNSMR-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RCVPHGRP char(129)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RCVPHKEY char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RCVPIGRP char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RCVPIPKEY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RCVSHPGRP char(82)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem RCVSHPKEY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// number of copies
DataItem RD1COPNO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// document number
DataItem RD1DOCNO char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     frequency code
DataItem RD1FREQC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// department number
DataItem RD2DEPT char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// recipient name
DataItem RD2NAME char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// recipient number
DataItem RD2RECNO num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// location number
DataItem RD3LOCNO num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// location name
DataItem RD3NAME char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company id
DataItem RD4COID num(5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// control key
DataItem RD4KEY num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record type
DataItem RD4TYPE num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// print field numeric
DataItem RD5FLD9 num(15)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// print field id
DataItem RD5FLDID num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// print field alpha
DataItem RD5FLDX char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf alpha pos 1
DataItem RD5FLDX1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf alpha pos 2
DataItem RD5FLDX2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf alpha pos 3
DataItem RD5FLDX3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf alpha pos 4
DataItem RD5FLDX4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf alpha pos 5
DataItem RD5FLDX5 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     frequency day
DataItem RD5FREQD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// page break indicator
DataItem RD5PGBRK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// major sort field
DataItem RD5SORT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// minor sort field
DataItem RD5SORT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem RDWERFLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update flag
DataItem RDWUPFLG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

