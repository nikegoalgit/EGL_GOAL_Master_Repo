package corpcom1;
import as1.common.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import dg.common.*;
import fy.common.*;
import iv.common.*;
import ku.common.*;
import op.common.*;
import pc.common.*;
import pf.common.*;
import pk.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
import tf.common.*;
//*** RECORD=CC1REC ****
// credit check record
// 
// created by larry hughey
// 
// created nov. 1986
// 
// used by order entry and order maintenance to do on-line
// credit checking.
// 
// ----------------------------------------------------------
//   maintenance
// ----------------------------------------------------------
// date       who        why
// ----------------------------------------------------------
// 03-07-89  j. fiat   added allocated value and units so that
//                     online systems pass the values to credit
// 
// 01-27-92  WJOHNS    added Order Id, Sub Order Id, and
//                     part char for processing bulk orders.
// **********************
Record CC1REC type basicRecord
  5 CC1GROUP CC1GROUP ; 
    10 CC1CLRSN CC1CLRSN ; 
    10 CC1PVALU CC1PVALU ; 
    10 CC1PUNTS CC1PUNTS ; 
    10 CC1AVALU CC1AVALU ; 
    10 CC1AUNTS CC1AUNTS ; 
    10 CC1PGMNM CC1PGMNM ; 
    10 CC1RTNCD CC1RTNCD ; 
    10 CC1RTNMA CC1RTNMA ; 
      15 CC1RTNSQ CC1RTNSQ ; 
      15 CC1RTNMS CC1RTNMS ; 
    10 CC1CUOID CC1CUOID ; 
    10 CC1NORID CC1NORID ; 
    10 CC1PARTN CC1PARTN ; 
end // end CC1REC

//*** RECORD=CCWREC ****
// Common record layout for all credit checking applications.
// 
// Maintenance Log
// 04/18/89 DSALZW   Made changes to credit applications for
//                   Credit Life project.  Removed all fields
//                   but CCWCHTAG from CCWREC.
// **********************
Record CCWREC type basicRecord
  10 CCWCHTAG CCWCHTAG ; 
end // end CCWREC

//*** RECORD=CL0AW01 ****
// the "commarea" is is the communication area that will be
// used between csp applications.  this area will be used to
// transport system required information and application
// specific information between applications.  all online
// main transactions will be required to use the commarea as
// working storage.
// ***********************
Record CL0AW01 type basicRecord
  5 CL0AWGRP CL0AWGRP ; 
    10 CL0AWKEY CL0AWKEY ; 
      15 CLWMNOPT CLWMNOPT ; 
      15 YCTCD YCTCD ; 
    10 CL0AWNUM CL0AWNUM ; 
end // end CL0AW01

//*** RECORD=CL1REC ****
// ************  Claim Exceptions Table  **********************
// 
// DB2 Table:           DCLAIM.VCLXCP01
// 
// Copylib Member:      DCL00520
// 
// I/O Mod:             IO2840
// 
// Key to DB2 Table:    CLACLMNB
//                      CL2ISNBR
//                      CLLRTNNB
// 
// Maintenance Log:
//   Date    Init.  Comment
// --------  -----  ---------------------------------------
// 07-21-88 bcourt  Initial record creation
// 
// 
// **********************
Record CL1REC type basicRecord
  5 CL1GROUP CL1GROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 CLLRTNNB CLLRTNNB ; 
    10 YCECD YCECD ; 
    10 CL1XOFL CL1XOFL ; 
    10 CL1CLMN2 CL1CLMN2 ; 
    10 XXXUSRID XXXUSRID ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CL1REC

//*** RECORD=CL2REC ****
// ************  Claim Return Inspections Header Table  *******
// 
// DB2 Table:           DCLAIM.VRINSP01
// 
// Copylib Member:      DCL00523
// 
// I/O Mod:             IO2580
// 
// Key to DB2 Table:    CLACLMNB
//                      CL2ISNBR
// 
// Maintenance Log:
//   Date    Init.  Comment
// --------  -----  ---------------------------------------
// 07-20-88 bcourt  Initial record creation
// 08-15-88 bcourt  flip-flop sequence of CL_INSP_NBR &
//                  CL_SEQ_NBR to match DB2 definition.
// 08-07-89 bcourt  Add CL-NBR-CRTNS-INSP, XWH-WHSE-CD.
//  2-15-91 bcourt  add CL-TO-SL-FL.
// 
// **********************
Record CL2REC type basicRecord
  5 CL2GROUP CL2GROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 YCICD YCICD ; 
    10 CLJRDIND CLJRDIND ; 
    10 XXXUSRID XXXUSRID ; 
    10 CL2ISBDT CL2ISBDT ; 
    10 CL2ISXDT CL2ISXDT ; 
    10 CL2TOSLF CL2TOSLF ; 
    10 CL2CRTNS CL2CRTNS ; 
    10 XWHCD XWHCD ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CL2REC

//*** RECORD=CL6REC ****
// **************   Invoice Overide Price Table   *************
// 
// DB2 Table:          DCLAIM.VIVOVR01
// 
// Copylib Member:     DCL00318
// 
// I/O Mod:            IO2950
// 
// Key to DB2 Table:   IV0PARTN
//                     IV0IVCID
//                     XGPCD
//                     SY1STNBR
//                     SY2CLRID
//                     XDMCD
//                     SY5SZID
//                     XQACD
//                     XUMCD
//                     CLACLMNB
// 
// Date Created:       09/23/88
// 
// Maintenance Log:
// 
//   Date      Name    Comments
// --------   ------   ----------------------------------------
// 09-22-88   CTROUW   Initial Record Creation
// 04-06-90   bcourt   add XQA-QUAL-CD, XUM-UOM-CD.
// 12.10/90   chyde    Correct data item def description.
//  2-15-91   bcourt   on CL6OVPRC, rename UNIT to UNT.
// **********************
Record CL6REC type basicRecord
  10 IV0PARTN IV0PARTN ; 
  10 IV0IVCID IV0IVCID ; 
  10 XGPCD XGPCD ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 SY5SZID SY5SZID ; 
  10 XQACD XQACD ; 
  10 XUMCD XUMCD ; 
  10 CL6OVPRC CL6OVPRC ; 
  10 CLACLMNB CLACLMNB ; 
  10 CLHMEMNB CLHMEMNB ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end CL6REC

//*** RECORD=CLAREC ****
// *******************  Claim Header Table  *******************
// 
// DB2 Table:           DCLAIM.VCLHDR01
// 
// Copylib Member:      DCL00203
// 
// I/O Mod:             IO1160
// 
// Key to DB2 Table:    CLACLMNB
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
//   Date    Init.   Comment
// --------  -----   ---------------------------------------
// 03-01-87   PAG    Initial record creation
// 07-20-88  bcourt  add ycs-clm-stat-cd2,
//                       cl-curr-rtn-nbr,
//                       cl-curr-insp-nbr,
//                   chg ycs-clm-stat-cd to ycs-clm-stat-cd1
//                   drop cl-clm-lock-fl.
// 08-31-88  bcourt  add CL_WRKSHT_ENTR_FL,
//                       CL_CLXCP_IND
// 03-23-89  bcourt  add XOB-BASE-OT-CD, XDV-DIV-CD,CL-ORIG-IND
//                   drop YCE-XCEP-CD1 through CD8.
// 05-15-89 bcourt rename XCUCD3 to XCUCD.
// 08-07-89 bcourt drop CL-COOP-AUTH-FL,
//                 add CL-FRST-AUTH-FL.
// 11-10-89 bcourt add CU_COMP_CO_ID, CL_PRV_YCT_IND,
//                     CL_ORIG_CLM_QTY, CL_PRV_AUTH_BY_ID.
// 04-06-90 bcourt add XBC-BRAND-CD, CU-COGS-CO-ID.
// 10-05-90 JWOOD  CHANGED XCGCD TO OP1COGID (CSP RENAME ONLY)
//  2-15-91 bcourt rename CU-BLGRP-ID to CU-BLGRP-ADDR-ID
//                 rename XCU-REP-CD3 to XCE-CR-ANLS-CD, & resz
//                 rename CLAXOPNF    to CLAXCIND.
//  6-12-92 bcourt Resize CL-TAKEN-BY-ID from smallint to char8
//                 Rename from CLATBYID to same as DB2.
// **********************
Record CLAREC type basicRecord
  5 CLAGROUP CLAGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 XGPCD XGPCD ; 
    10 OP1CMPNB OP1CMPNB ; 
    10 OP1COGID OP1COGID ; 
    10 OP1CUPO OP1CUPO ; 
    10 SM1AGYID SM1AGYID ; 
    10 SM4REPID SM4REPID ; 
    10 YCTCD YCTCD ; 
    10 CLAPRYCT CLAPRYCT ; 
    10 CLACAIND CLACAIND ; 
    10 YCSCD1 YCSCD1 ; 
      15 YCSCD YCSCD ; 
    10 YCSCD2 YCSCD2 ; 
    10 YCSACTCD YCSACTCD ; 
    10 YCSRPTEX YCSRPTEX ; 
    10 CLASTTDT CLASTTDT ; 
    10 CLASCGBY CLASCGBY ; 
    10 CLASETDT CLASETDT ; 
    10 YCRCD YCRCD ; 
    10 XIECD XIECD ; 
    10 XSOCD XSOCD ; 
    10 CLADNLFL CLADNLFL ; 
    10 CLADNLDT CLADNLDT ; 
    10 CLACTCNM CLACTCNM ; 
    10 CLACCLDT CLACCLDT ; 
    10 CLAOCAMT CLAOCAMT ; 
    10 CLAOCQTY CLAOCQTY ; 
    10 CLAESTVL CLAESTVL ; 
    10 CLATQTY CLATQTY ; 
    10 CLABLGFF CLABLGFF ; 
    10 KUCBLAID KUCBLAID ; 
    10 CLASHPFF CLASHPFF ; 
    10 KUMSHAID KUMSHAID ; 
    10 CLARTNFF CLARTNFF ; 
    10 CL-TAKEN-BY-ID CL-TAKEN-BY-ID ; 
    10 CLYATHID CLYATHID ; 
    10 CLAPRATH CLAPRATH ; 
    10 CLAAUTHF CLAAUTHF ; 
    10 XCECD XCECD ; 
    10 KUYSVRID KUYSVRID ; 
    10 YCPCD YCPCD ; 
    10 XWHCD XWHCD ; 
    10 XPTCD XPTCD ; 
    10 XOTCD XOTCD ; 
    10 XOBCD XOBCD ; 
    10 XDVCD XDVCD ; 
    10 XBCCD XBCCD ; 
    10 SP1ID SP1ID ; 
    10 XOCCD XOCCD ; 
    10 CLACSQNB CLACSQNB ; 
    10 CLACRTNB CLACRTNB ; 
    10 CLACISNB CLACISNB ; 
    10 CLAWSENF CLAWSENF ; 
    10 CLAORIGI CLAORIGI ; 
    10 CLADBOCL CLADBOCL ; 
    10 YITCD YITCD ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 CLAXCIND CLAXCIND ; 
    10 CLAMEIND CLAMEIND ; 
    10 CLACMIND CLACMIND ; 
    10 CLATFIND CLATFIND ; 
    10 CLACNIND CLACNIND ; 
    10 CLADJIND CLADJIND ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLAREC

//*** RECORD=CLBREC ****
// ****************  Invoice/Claim Xref Table  ****************
// 
// DB2 Table:           DCLAIM.VCLIVX01
// 
// Copylib Member:      DCL00208
// 
// I/O Mod:             IO1180
// 
// Key to DB2 Table:    iv0partn
//                      iv0ivcid
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 
// **********************
Record CLBREC type basicRecord
  5 CLBGROUP CLBGROUP ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 CLACLMNB CLACLMNB ; 
    10 OP1PARTN OP1PARTN ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 CLBPMIVC CLBPMIVC ; 
    10 IV0IVCDT IV0IVCDT ; 
    10 YITCD YITCD ; 
    10 CLBIVIND CLBIVIND ; 
    10 CLBGLIND CLBGLIND ; 
    10 CLBSRIND CLBSRIND ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLBREC

//*** RECORD=CLCREC ****
// ******************  Claim/AR Xref Table  *******************
// 
// DB2 Table:           DCLAIM.VCLARX01
// 
// Copylib Member:      DCL00207
// 
// I/O Mod:             IO1170
// 
// Key to DB2 Table:    arcrefnb
// 
// Date Created:        03/04/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-04-87   PAG       Initial record creation
// 
// **********************
Record CLCREC type basicRecord
  5 CLCGROUP CLCGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 ARCREFNB ARCREFNB ; 
    10 YASCD YASCD ; 
    10 ARCCHKNB ARCCHKNB ; 
    10 ARCCHKDT ARCCHKDT ; 
    10 ARCCCREF ARCCCREF ; 
    10 ARCARAMT ARCARAMT ; 
    10 CLCPMAR CLCPMAR ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLCREC

//*** RECORD=CLDREC ****
// ******************  Claim Consumer Table  ******************
// 
// DB2 Table:           DCLAIM.VCNSMR01
// 
// Copylib Member:      DCL00209
// 
// I/O Mod:             IO1190
// 
// Key to DB2 Table:    cld3nm
//                      cld7nm
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 10-16-92   bcourt    Add direct marketing claim number
//                      to support PC/Unix consumer services.
// 11-30-92   gdecke    Add first name ,middle init., last name
//                      and gender code for dirice marketing.
// **********************
Record CLDREC type basicRecord
  5 CLDGROUP CLDGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLD3NM CLD3NM ; 
    10 CLD7NM CLD7NM ; 
    10 DM-CLM-NBR DM-CLM-NBR ; 
    10 XXX-LAST-NM XXX-LAST-NM ; 
    10 XXX-FRST-NM XXX-FRST-NM ; 
    10 XXX-MID-INIT XXX-MID-INIT ; 
    10 XXX-GNDR-IND XXX-GNDR-IND ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLDREC

//*** RECORD=CLEREC ****
// ******************  Claim Traffic Table  *******************
// 
// DB2 Table:           DCLAIM.VCLTRF01
// 
// Copylib Member:      DCL00210
// 
// I/O Mod:             IO1240
// 
// Key to DB2 Table:    claclmnb
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 08-07-89  bcourt     Add XXX-USER-ID.
// 
// 
// **********************
Record CLEREC type basicRecord
  5 CLEGROUP CLEGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 TF2PRONO TF2PRONO ; 
    10 CLETRFDT CLETRFDT ; 
    10 CLETNFDT CLETNFDT ; 
    10 CLETFGD CLETFGD ; 
    10 CLETFGDN CLETFGDN ; 
    10 CLETFGDD CLETFGDD ; 
    10 CLETFGCG CLETFGCG ; 
    10 CLETMICG CLETMICG ; 
    10 CLENBCRT CLENBCRT ; 
    10 CLEPPFL CLEPPFL ; 
    10 YPSCD YPSCD ; 
    10 CLEPPSDT CLEPPSDT ; 
    10 CLEPPRQC CLEPPRQC ; 
    10 CLEPPRQD CLEPPRQD ; 
    10 XXXUSRID XXXUSRID ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLEREC

//*** RECORD=CLFREC ****
// ******************  Claim Address Table  *******************
// 
// DB2 Table:           DCLAIM.VCLADR01
// 
// Copylib Member:      DCL00211
// 
// I/O Mod:             IO1250
// 
// Key to DB2 Table:    claclmnb
//                      clfadtyp
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 03-11-94   slg       DB2 Chgs - Increase addr1,2, & 3 from
//                        length of 30 to 38.
// 03-14-94   BCourt    Also change CL0FW01.CL0FWBTA, STA & RTA
//                      when change CLFGROUP.
//                      Also change KL05W01.KL05WBTA, STA & RTA
// **********************
Record CLFREC type basicRecord
  5 CLFGROUP CLFGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLFADTYP CLFADTYP ; 
    10 CLFADNM CLFADNM ; 
    10 XXX-ADDR1 XXX-ADDR1 ; 
    10 XXX-ADDR2 XXX-ADDR2 ; 
    10 XXX-ADDR3 XXX-ADDR3 ; 
    10 XXXCITY XXXCITY ; 
    10 XSTCD XSTCD ; 
    10 XXXZIP XXXZIP ; 
    10 XCTCD XCTCD ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLFREC

//*** RECORD=CLGREC ****
// ******************  Claim Comment Table  *******************
// 
// DB2 Table:           DCLAIM.VCLCOM01
// 
// Copylib Member:      DCL00212
// 
// I/O Mod:             IO1260
// 
// Key to DB2 Table:    claclmnb
//                      clhsegnb
//                      clgcmtyp
//                      xgpcd
//                      sy1stnbr
//                      sy2clrid
//                      xdmcd
//                      clgcmseq
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 
// **********************
Record CLGREC type basicRecord
  5 CLGGROUP CLGGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 CLGCMTYP CLGCMTYP ; 
    10 CLGCMSEQ CLGCMSEQ ; 
    10 CLGCOMNT CLGCOMNT ; 
    10 XXXUSRID XXXUSRID ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLGREC

//*** RECORD=CLHREC ****
// ********************  Claim Memo Table  ********************
// 
// DB2 Table:           DCLAIM.VCLMEM01
// 
// Copylib Member:      DCL00215
// 
// I/O Mod:             IO1290
// 
// Key to DB2 Table:    CLACLMNB
//                      CLHSEQNB
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.   Comment
// --------  -----   ---------------------------------------
// 03-01-87   PAG    Initial record creation
// 07-27-87  bcourt  change CLLSEQNB to CLHSEQNM since item
//                   dropped from CLLREC.
//  1-19-90  bcourt  rename PD1FCTYC to FY1FCTYC.
// 
// **********************
Record CLHREC type basicRecord
  5 CLHGROUP CLHGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CLHMEMNB CLHMEMNB ; 
    10 CLHMEMDT CLHMEMDT ; 
    10 CLHASODT CLHASODT ; 
    10 CLHMEMMO CLHMEMMO ; 
    10 CLHMEMAM CLHMEMAM ; 
    10 CLHGMAMT CLHGMAMT ; 
    10 CLHMEMGL CLHMEMGL ; 
    10 CLHNETFL CLHNETFL ; 
    10 XPTCD XPTCD ; 
    10 TF1CARCD TF1CARCD ; 
    10 PK1BLLAD PK1BLLAD ; 
    10 TF2PRONO TF2PRONO ; 
    10 XDSCD XDSCD ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 XWHCD XWHCD ; 
    10 CLHSHPCG CLHSHPCG ; 
    10 CLMTOGL1 CLMTOGL1 ; 
    10 CLHWGT CLHWGT ; 
    10 CLHSHPDT CLHSHPDT ; 
    10 CLENBCRT CLENBCRT ; 
    10 CLACMIND CLACMIND ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLHREC

//*** RECORD=CLIREC ****
// ******************  Claim GL Code Table  *******************
// 
// DB2 Table:           DCLAIM.VCLGLX01
// 
// Copylib Member:      DCL00216
// 
// I/O Mod:             IO1300
// 
// Key to DB2 Table:    claclmnb
//                      clhsegnb
//                      clicrdfl
//                      glacd
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date   Init.  Comment
// -------- -----  ---------------------------------------
// 03-01-87  PAG   Initial record creation
// 05-15-89 bcourt XSNCD renamed to XSECD.
//  1-19-90 bcourt rename xgexref  to pfjxref
//                        xgefbtyp to iv6fbtyp
//                        clinmtfl to cliadmat
//                        glcd     to glacd.
// 12/10/90 CHYDE  Correct data item descriptions.
// 
// **********************
Record CLIREC type basicRecord
  5 CLIGROUP CLIGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CLICRDFL CLICRDFL ; 
    10 GLACD GLACD ; 
    10 PFJXREF PFJXREF ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 IV6FBTYP IV6FBTYP ; 
    10 OP2LNINB OP2LNINB ; 
    10 IV6GLSEQ IV6GLSEQ ; 
    10 XHDCD XHDCD ; 
    10 CLIIGOFL CLIIGOFL ; 
    10 CLIGLAM CLIGLAM ; 
    10 CLIGLPC CLIGLPC ; 
    10 CLIGLOIN CLIGLOIN ; 
    10 CLIGLPPT CLIGLPPT ; 
    10 CLIGLNFL CLIGLNFL ; 
    10 CLIADVSQ CLIADVSQ ; 
    10 YMDCD YMDCD ; 
    10 CLIADMAT CLIADMAT ; 
    10 YAPCD YAPCD ; 
    10 CLICARCT CLICARCT ; 
    10 CLICARMO CLICARMO ; 
    10 XSECD XSECD ; 
    10 XSTCD XSTCD ; 
    10 YSRSLSRG YSRSLSRG ; 
    10 CLICALPC CLICALPC ; 
    10 CLGCMSEQ CLGCMSEQ ; 
    10 CLIGLFIV CLIGLFIV ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLIREC

//*** RECORD=CLJREC ****
// ************  Claim Return Authorization Table  ************
// 
// DB2 Table:           DCLAIM.VRAHDR01
// 
// Copylib Member:      DCL00213
// 
// I/O Mod:             IO1270
// 
// Key to DB2 Table:    CLACLMNB
// Maintenance Log:
//   Date    Init.  Comment
// --------  -----  ---------------------------------------
// 03-01-87   PAG   Initial record creation
// 06-03-88 bcourt  add fields:
//                      CL_NBR_RAUTH_RQT    CL_NBR_LABL_RQT
//                      CL_TOT_LABL_PRT     CL_FRGT_DBT_FL
//                      CL_FRGT_CR_FL       XXX_USER_ID
//                      XSO_SLS_OFC_ID      XDA_DEF_ALW_CD
//                  drop fields:
//                      CL_FRGT_DB_CR_FL    CL_DEF_ALW_FL
//                  chnge name:
//                      CL_AUTH_RTN_QTY  to CL_TOT_RAUTH_QTY
// 10-11-91 bcourt  add fields:
//                      CL_RPS_LABL_FL      YCR_NPAY_FRGT_FL
// 08-13-93 bcourt  Add CL-UPC-LABL-FL.
// 
// **********************
Record CLJREC type basicRecord
  5 CLJGROUP CLJGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 XXXUSRID XXXUSRID ; 
    10 XSOCD XSOCD ; 
    10 CLJPRTLB CLJPRTLB ; 
    10 CLJLBRQT CLJLBRQT ; 
    10 CLJNBLB CLJNBLB ; 
    10 CLJLBTOT CLJLBTOT ; 
    10 CL-RPS-LABL-FL CL-RPS-LABL-FL ; 
    10 CLJPRTRA CLJPRTRA ; 
    10 CLJRARQT CLJRARQT ; 
    10 CLJRAIDT CLJRAIDT ; 
    10 CLJRAXDT CLJRAXDT ; 
    10 CLJORAXD CLJORAXD ; 
    10 CLJFRCRF CLJFRCRF ; 
    10 CLJFRDBF CLJFRDBF ; 
    10 YCR-NPAY-FRGT-FL YCR-NPAY-FRGT-FL ; 
    10 CLJNCRFL CLJNCRFL ; 
    10 XWHCD XWHCD ; 
    10 CLJTATHQ CLJTATHQ ; 
    10 CLJRDIND CLJRDIND ; 
    10 CLJRSKFL CLJRSKFL ; 
    10 YRMRESTK YRMRESTK ; 
    10 CLJRBGFL CLJRBGFL ; 
    10 CLJRBXFL CLJRBXFL ; 
    10 CLJRTGFL CLJRTGFL ; 
    10 CLJUNLFL CLJUNLFL ; 
    10 CL-UPC-LABL-FL CL-UPC-LABL-FL ; 
    10 XDACD XDACD ; 
    10 CLJRAIND CLJRAIND ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLJREC

//*** RECORD=CLKREC ****
// *************  Claim Return Auth. Item Table  **************
// 
// DB2 Table:           DCLAIM.VRAITM01
// 
// Copylib Member:      DCL00214
// 
// I/O Mod:             IO1280
// 
// Notes: Each product has summary only, or summary & sizes.
//        Each product always has summary record, Size ID = 0.
//        If product has sizes, CL_NBR_SZ ^= 0.
// 
//        These fields are used only on summary record:
//           XQA_QUAL_CD
//           XUM_UOM_CD
//           OP_PRC_VARY_FL
//           YCE_XCEP_CD
//           CL_ONEWHSE_XCEP_FL
// 
// Maintenance Log:
//   Date    Init.   Comment
// --------  -----   ---------------------------------------
// 03-01-87   PAG    Initial record creation
// 06-03-88  bcourt  Add fields:
//                     CL_NBR_SZ            OP_LINE_ITEM_NBR
//                     OP_PRC_VARY_FL       CL_RAUTH_CR_FL
//                     YCE_XCEP_CD          CL_ONEWHSE_XCEP_FL
//                     CUST_PROD_ID
//                   Change fields:
//                     CL_RTS_DEF_FL      to CL_RTS_DEF_IND
//                     CL_SZ_RQT_RTN_QTY  to CL_RQT_RTN_QTY
//                     CL_SZ_AUTH_RTN_QTY to CL_RAUTH_RTN_QTY
// 04-12-91  bcourt  Add op_cu_po_line_nbr.
// 03-13-92  bcourt  Add XEG_ENGR_DIFF_CD, XBK_BK_SESN_CD,
//                       OP_BK_YR
//   ** Future - add OP_BK_MO after YR.
// 04-17-92  sgorga  Add op-bk-mo.
// **********************
Record CLKREC type basicRecord
  5 CLKGROUP CLKGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY5SZID SY5SZID ; 
    10 CLKNBRSZ CLKNBRSZ ; 
    10 CLKCRFL CLKCRFL ; 
    10 CLKWHSXF CLKWHSXF ; 
    10 CLJRDIND CLJRDIND ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 OP2LNINB OP2LNINB ; 
    10 OP2CPLNB OP2CPLNB ; 
    10 XQACD XQACD ; 
    10 XUMCD XUMCD ; 
    10 XEGCD XEGCD ; 
    10 XBK-BK-SESN-CD XBK-BK-SESN-CD ; 
    10 OP-BK-YR OP-BK-YR ; 
    10 OP-BK-MO OP-BK-MO ; 
    10 CLKCLPRC CLKCLPRC ; 
    10 OP2PRCVF OP2PRCVF ; 
    10 CLKPRCFF CLKPRCFF ; 
    10 CLKRQTQ CLKRQTQ ; 
    10 CLKAUTHQ CLKAUTHQ ; 
    10 YCECD YCECD ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLKREC

//*** RECORD=CLLREC ****
// ***************  Claim Actual Return Table  ****************
// 
// DB2 Table:           DCLAIM.VCLRTN01
// 
// Copylib Member:      DCL00217
// 
// I/O Mod:             IO1310
// 
// Key to DB2 Table:    claclmnb
//                      cllrtnnb
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 07-20-88  bcourt     add cl-rtn-nbr,
//                          cl-rtn-disp
//                      drop cl-seq-nbr,
//                           cl-rts-def-fl,
//                           cl-proc-comp-dt,
//                           cl-insp-by-id,
//                           cl-insp-dt,
//                           cl-stk-loc-fl.
// 08-13-93 bcourt      Add  ZZ-SDT.
//                      Rename cllpdcfl to CL-PPD-COLL-IND.
// **********************
Record CLLREC type basicRecord
  5 CLLGROUP CLLGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLLRTNNB CLLRTNNB ; 
    10 CLLWRDT CLLWRDT ; 
    10 XWHCD XWHCD ; 
    10 TF1CARCD TF1CARCD ; 
    10 CLLNBRCV CLLNBRCV ; 
    10 CL-PPD-COLL-IND CL-PPD-COLL-IND ; 
    10 CLLPDCCG CLLPDCCG ; 
    10 CLMTOGL1 CLMTOGL1 ; 
    10 XXXUSRID XXXUSRID ; 
    10 CLLRTDSP CLLRTDSP ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLLREC

//*** RECORD=CLMREC ****
// *****************  Claim RTS Actual Table  *****************
// 
// DB2 Table:           DCLAIM.VRTSHD01
// 
// Copylib Member:      DCL00218
// 
// I/O Mod:             IO1320
// 
// Key to DB2 Table:    claclmnb
//                      cl2isnbr
//                      clhseqnb
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 07-20-88  bcourt     add cl-insp-nbr
//                      chg cl-tot-rtc-qty to cl-tot-noncr-qty
//                          clotrqty to clmtrtsq
//                          cllseqnb to clhseqnb
//                      drop cl-tot-rtn-qty,
//                           cl-tot-rts-cr-qty
// 08-13-93  bcourt     Add CL-UPC-LABL-QTY.
// 
// **********************
Record CLMREC type basicRecord
  5 CLMGROUP CLMGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 CLMRSKCG CLMRSKCG ; 
    10 CLMTOGL1 CLMTOGL1 ; 
    10 CLMRBGQ CLMRBGQ ; 
    10 CLMRBXQ CLMRBXQ ; 
    10 CLMRTGQ CLMRTGQ ; 
    10 CLMUNLQ CLMUNLQ ; 
    10 CL-UPC-LABL-QTY CL-UPC-LABL-QTY ; 
    10 CLMRMHCG CLMRMHCG ; 
    10 CLMTOGL2 CLMTOGL2 ; 
    10 CLMTNCRQ CLMTNCRQ ; 
    10 CLMTRTSQ CLMTRTSQ ; 
    10 CLMRMAMT CLMRMAMT ; 
    10 CLACMIND CLACMIND ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLMREC

//*** RECORD=CLNREC ****
// **************  Claim RTS Actual Item Table  ***************
// 
// DB2 Table:           DCLAIM.VRTSIT01
// 
// Copylib Member:      DCL00219
// 
// I/O Mod:             IO1330
// 
// Key to DB2 Table:    claclmnb
//                      cl2isnbr
//                      clhseqnb
//                      xgpcd
//                      sy1stnbr
//                      sy2clrid
//                      xdmcd
//                      sy5szid
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 07-20-88  bcourt     add cl-insp-nbr,
//                          xow-own-grp-cd,
//                          ydr-cr-dnl-rsn-cd
//                      chg cl-rtn-cust-qty to cl-noncr-qty
//                          cllseqnb        to clhseqnb
//                      drop cl-actual-rtn-qty,
//                           cl-cr-qty
// 06-08-90   JBW       ADD CLKPRCFF
// 03-13-92   bcourt    Add XEG_ENGR_DIFF_CD, XBK_BK_SESN_CD,
//                          OP_BK_YR.
//   ** future - add OP_BK_MO after OP_BK_YR.
// 04-17-92   sgorga    Add op-bk-mo.
// **********************
Record CLNREC type basicRecord
  5 CLNGROUP CLNGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY5SZID SY5SZID ; 
    10 XQACD XQACD ; 
    10 XOWCD XOWCD ; 
    10 XUMCD XUMCD ; 
    10 XEGCD XEGCD ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 XBK-BK-SESN-CD XBK-BK-SESN-CD ; 
    10 OP-BK-YR OP-BK-YR ; 
    10 OP-BK-MO OP-BK-MO ; 
    10 YDRCD YDRCD ; 
    10 CLNNCRQ CLNNCRQ ; 
    10 CLNRTSQ CLNRTSQ ; 
    10 CLNGRPRC CLNGRPRC ; 
    10 CLNNTPRC CLNNTPRC ; 
    10 CLKPRCFF CLKPRCFF ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLNREC

//*** RECORD=CLOREC ****
// *****************  Claim Defective Table  ******************
// 
// DB2 Table:           DCLAIM.VDEFHD01
// 
// Copylib Member:      DCL00220
// 
// I/O Mod:             IO1340
// 
// Key to DB2 Table:    claclmnb
//                      cl2isnbr
//                      clhseqnb
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.   Comment
// --------  -----   ------------------------------------------
// 03-01-87   PAG    Initial record creation
// 07-20-88  bcourt  add cl-insp-nbr
//                   chg cl-tot-ncr-def-qty to cl-tot-noncr-qty
//                       cllseqnb to clhseqnb
//                       clotrqty to clmtrtsq
//                   drop cl-tot-def-cr-qty,
//                        cl-tot-rts-qty
// 
// **********************
Record CLOREC type basicRecord
  5 CLOGROUP CLOGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 CLOTLRID CLOTLRID ; 
    10 CLOFGAQ CLOFGAQ ; 
    10 CLOFGAAM CLOFGAAM ; 
    10 CLMTOGL1 CLMTOGL1 ; 
    10 CLORCTFL CLORCTFL ; 
    10 CLOTDFQY CLOTDFQY ; 
    10 CLMTNCRQ CLMTNCRQ ; 
    10 CLOTRCQY CLOTRCQY ; 
    10 CLODMAMT CLODMAMT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLOREC

//*** RECORD=CLPREC ****
// **************  Claim Defective Item Table  ****************
// 
// DB2 Table:           DCLAIM.VDEFIT01
// 
// Copylib Member:      DCL00221
// 
// I/O Mod:             VDEFIT01
// 
// Key to DB2 Table:    claclmnb
//                      cl2isnbr
//                      clhseqnb
//                      xgpcd
//                      sy1stnbr
//                      sy2clrid
//                      xdmcd
//                      yddcd
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.   Comment
// --------  -----   ------------------------------------------
// 03-01-87   PAG    Initial record creation
// 07-20-88  bcourt  add cl-insp-nbr
//                   chg cl-noncr-def-qty to cl-noncr-qty
//                       cllseqnb         to clhseqnb
//                       clnrctq          to clprtctq
//                       pd1fctyc         to fy1fctyc
//                       pd2ftypo         to fy1ftypo
//                   drop cl-cr-qty,
//                        cl-rts-qty
// 08-07-89  bcourt  Add XQA-QUAL-CD.
// 06-08-90  JWOOD   RENAME FY2FTYPO TO PC3POIDT
// 04-17-92  sgorga  Added xbk-bk-sesn-cd, op-bk-yr, op-bk-mo.
//                   Rename CLACMIND to CL-CLCOM-FL.
// 08-13-93  bcourt  Add SY-SZ-ID,
//                       PC-PO-ID-SESN-CD.
// 06-19-00  rgomat  Add Prod-cat-cd , season code & season
//                       year.
// 11-28-01  SVIJAY  REMOVED PROD-CAT-CD,SEASON CODE & SEASON
//                   YEAR TO KEEP IN SYNC WITH DCL00221.
// **********************
Record CLPREC type basicRecord
  5 CLPGROUP CLPGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CL2ISNBR CL2ISNBR ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY-SZ-ID SY-SZ-ID ; 
    10 YDDCD YDDCD ; 
    10 XQACD XQACD ; 
    10 XUMCD XUMCD ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 XBK-BK-SESN-CD XBK-BK-SESN-CD ; 
    10 OP-BK-YR OP-BK-YR ; 
    10 OP-BK-MO OP-BK-MO ; 
    10 CLKCLPRC CLKCLPRC ; 
    10 CLKPRCFF CLKPRCFF ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 PC3POIDT PC3POIDT ; 
    10 PC-PO-ID-SESN-CD PC-PO-ID-SESN-CD ; 
    10 CLPVLDFL CLPVLDFL ; 
    10 CLPCRTNB CLPCRTNB ; 
    10 YDFCD YDFCD ; 
    10 CLPDEFQ CLPDEFQ ; 
    10 CLNNCRQ CLNNCRQ ; 
    10 YDRCD YDRCD ; 
    10 CLPRTCTQ CLPRTCTQ ; 
    10 CL-CLCOM-FL CL-CLCOM-FL ; 
    10 CLGCMSEQ CLGCMSEQ ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLPREC

//*** RECORD=CLRREC ****
// **************  Claim Adjustment Item Table  ***************
// 
// DB2 Table:           DCLAIM.VCLADJ01
// 
// Copylib Member:      DCL00223
// 
// I/O Mod:             IO1370
// 
// Key to DB2 Table:    claclmnb
//                      clicrdfl
//                      xgpcd
//                      sy1stnbr
//                      sy2clrid
//                      xdmcd
//                      sy5szid
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 04-12-91   bcourt    Add op_cu_po_line_nbr.
// 04-17-92   sgorga    Added op-bk-mo.
// **********************
Record CLRREC type basicRecord
  5 CLRGROUP CLRGROUP ; 
    10 CLACLMNB CLACLMNB ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CLICRDFL CLICRDFL ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 SY5SZID SY5SZID ; 
    10 IV0PARTN IV0PARTN ; 
    10 IV0IVCID IV0IVCID ; 
    10 OP2LNINB OP2LNINB ; 
    10 OP2CPLNB OP2CPLNB ; 
    10 XQACD XQACD ; 
    10 XUMCD XUMCD ; 
    10 XBK-BK-SESN-CD XBK-BK-SESN-CD ; 
    10 OP-BK-YR OP-BK-YR ; 
    10 OP-BK-MO OP-BK-MO ; 
    10 XCOCD XCOCD ; 
    10 CLNGRPRC CLNGRPRC ; 
    10 CLNNTPRC CLNNTPRC ; 
    10 CLKPRCFF CLKPRCFF ; 
    10 CLRRQTQ CLRRQTQ ; 
    10 CLRCLMQ CLRCLMQ ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLRREC

//*** RECORD=CLSREC ****
// ******************  Claim Trailer Table  *******************
// 
// DB2 Table:           DCLAIM.VTRALR01
// 
// Copylib Member:      DCL00227
// 
// I/O Mod:             IO1390
// 
// Key to DB2 Table:    xwhcd
//                      clotrlid
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 
// **********************
Record CLSREC type basicRecord
  5 CLSGROUP CLSGROUP ; 
    10 XWHCD XWHCD ; 
    10 CLOTLRID CLOTLRID ; 
    10 CLSTLRST CLSTLRST ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end CLSREC

//*** RECORD=CLUREC ****
// ******************  Claim Control Table  *******************
// 
// DB2 Table:           DCLAIM.VCLCTL01
// 
// Copylib Member:      DCL00225
// 
// I/O Mod:             IO1380
// 
// Key to DB2 Table:    only one record in table
// 
// Date Created:        03/01/87
// 
// Maintenance Log:
// 
//   Date    Init.      Comment
// --------  -----      ---------------------------------------
// 03-01-87   PAG       Initial record creation
// 07-20-88  bcourt     add cl-clsd-co-id
// 
// **********************
Record CLUREC type basicRecord
  5 CLUGROUP CLUGROUP ; 
    10 CLUNXRUN CLUNXRUN ; 
    10 CLUNXCLM CLUNXCLM ; 
    10 CLUNXRQT CLUNXRQT ; 
    10 CLUCLOSD CLUCLOSD ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
end // end CLUREC

//*** RECORD=CLWREC ****
// **********  claims global working-storage ******************
// 
// this record will be used by all claims applications to pass
// data between the applications.  it contains data fields
// used by many appls.  the menu option, current sequence #, &
// other common data is kept here.
// 
// the entire clarec, claims header, is here in clagroup.
// 
// maint:
// date      by   comment
// --------  ---  ---------------------------------------------
// 05-03-87  ehc  add clwadlar so cl0e will auto flow instead
//                of having user use pf keys
// 11-87     all  add array of claim numbers for inquiry
// 07-27-88 bcourt add XOT-ORD-TYP-CD
//                 chg CLLSEQNB to CLHSEQNB
// 03-28-89 bcourt CLAREC length changed.
// 04-20-89 bcourt drop XOTCD; add XOBCD, XDVCD (for CL0B inq)
// 11-10-89 bcourt CLAREC length changed.
// 04-06-89 bcourt CLAREC length changed.
//  2-15-91 bcourt CLAREC length changed.
// 06-12-92 bcourt CLAREC length changed.
// 
// **********************
Record CLWREC type basicRecord
  5 CLWGROUP CLWGROUP ; 
    10 CLWMNOPT CLWMNOPT ; 
    10 CLWSVSEL CLWSVSEL ; 
    10 CLWACTIV CLWACTIV ; 
    10 CLWADLAR CLWADLAR ; 
    10 CLWADDR CLWADDR ; 
    10 CLWMCMNT CLWMCMNT ; 
    10 CLWSETBY CLWSETBY ; 
    10 CLHSEQNB CLHSEQNB ; 
    10 CLHMEMNB CLHMEMNB ; 
    10 KUCCONM KUCCONM ; 
    10 XLECD XLECD ; 
    10 XLEABRV XLEABRV ; 
    10 CLWMAPFM CLWMAPFM ; 
      15 CLWAPPFM CLWAPPFM ; 
      15 * char(4) ; 
    10 CLWITMCT CLWITMCT ; 
    10 CLWITEMS CLWITEMS ; 
      15 CLWITM1C CLWITM1C ; 
        20 CLWITM1N CLWITM1N ; 
      15 CLWITM2C CLWITM2C ; 
        20 CLWITM2N CLWITM2N ; 
      15 CLWITM3C CLWITM3C ; 
        20 CLWITM3N CLWITM3N ; 
      15 CLWITM4C CLWITM4C ; 
        20 CLWITM4N CLWITM4N ; 
    10 CLAGROUP CLAGROUP ; 
    10 IV0IVCID IV0IVCID ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 ARCREFNB ARCREFNB ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 XSOCD XSOCD ; 
    10 XWHCD XWHCD ; 
    10 CLWLSTNM CLWLSTNM ; 
    10 KUCGRPID KUCGRPID ; 
    10 XGPCD XGPCD ; 
    10 YCTCD YCTCD ; 
    10 XOBCD XOBCD ; 
    10 XDVCD XDVCD ; 
    10 YCRCD YCRCD ; 
    10 CLWSETLO CLWSETLO ; 
    10 CLWSETHI CLWSETHI ; 
    10 OP1CUPO OP1CUPO ; 
    10 ARCCCREF ARCCCREF ; 
    10 ARCCHKNB ARCCHKNB ; 
    10 YCSCD YCSCD ; 
    10 CLWSTTLO CLWSTTLO ; 
    10 CLWSTTHI CLWSTTHI ; 
    10 CLWESTLO CLWESTLO ; 
    10 CLWESTHI CLWESTHI ; 
    10 SM1AGYID SM1AGYID ; 
    10 SM4REPID SM4REPID ; 
    10 YPSCD YPSCD ; 
    10 CLWCLIDX CLWCLIDX ; 
    10 CLWMXIDX CLWMXIDX ; 
    10 CLWARRAY CLWARRAY [200] ; 
      15 CLWCLMNB CLWCLMNB ; 
      15 CLWSELCD CLWSELCD ; 
    10 CLWCL0BX CLWCL0BX ; 
    10 CLWEZMNO CLWEZMNO ; 
    10 CLWYZINT CLWYZINT ; 
      15 CL2ISNBR CL2ISNBR ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY2CLRID SY2CLRID ; 
      15 XDMCD XDMCD ; 
      15 XUMCD XUMCD ; 
      15 CLWYZIDX CLWYZIDX ; 
      15 CLWYZSWT CLWYZSWT ; 
    10 TF1CARCD TF1CARCD ; 
    10 CLACLMNB CLACLMNB ; 
end // end CLWREC

//*** RECORD=CLXREC ****
// ******************** claim common data names record ********
// 
// this record contains many common data names used by many
// claims applications.  this is not a global working-storage
// passed to other claims appl.  it is a second w-s record
// for an individual application.
// 
// ************************************************************
// *     M A I N T E N A N C E      H I S T O R Y    L O G    *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 11-12-93  GDECKE  DB2 TABLE CHANGES - NOV. 1993.         *
// * 10-21-94  sgorga  DB2 Tbl chg - IV0group had field added.*
// ************************************************************
// **********************
Record CLXREC type basicRecord
  5 CLXGROUP CLXGROUP ; 
    10 CLXEOAF CLXEOAF ; 
    10 CLXEOSF CLXEOSF ; 
    10 CLXEOFF CLXEOFF ; 
    10 CLXEDITF CLXEDITF ; 
    10 CLXUPDTF CLXUPDTF ; 
    10 CLXTESTF CLXTESTF ; 
    10 CLXERRF CLXERRF ; 
    10 CLXVALDT CLXVALDT ; 
    10 CLXVITMF CLXVITMF ; 
    10 CLXORDFD CLXORDFD ; 
    10 CLXINVFD CLXINVFD ; 
    10 CLXWRTOR CLXWRTOR ; 
    10 CLXWRTIV CLXWRTIV ; 
    10 IV0IVCID IV0IVCID ; 
    10 OP1CUOID OP1CUOID ; 
    10 OP1NORID OP1NORID ; 
    10 YITCD YITCD ; 
    10 YATKEY YATKEY ; 
      15 CATOAP CATOAP ; 
      15 YCTCD YCTCD ; 
    10 CLXMSG CLXMSG ; 
      15 CLACLMNB CLACLMNB ; 
      15 * char(74) ; 
    10 CLXORDIV CLXORDIV ; 
      15 * char(7) ; 
      15 CLXPARTN CLXPARTN ; 
    10 IV0GROUP IV0GROUP ; 
    10 CLXNEWSC CLXNEWSC ; 
    10 CLXBLDSC CLXBLDSC ; 
    10 CLXBLDAY CLXBLDAY ; 
    10 CLXYCSX CLXYCSX ; 
    10 CLXYCRX CLXYCRX ; 
    10 CLXYCTX CLXYCTX ; 
    10 CLXYITX CLXYITX ; 
    10 CLXSCRNX CLXSCRNX ; 
    10 CLXLINEX CLXLINEX ; 
    10 CLXARAYX CLXARAYX ; 
    10 CLXLSTAX CLXLSTAX ; 
    10 CLXLSTKE CLXLSTKE ; 
    10 CLXCURSZ CLXCURSZ ; 
    10 CLXLSTSZ CLXLSTSZ ; 
    10 CLXCPROC CLXCPROC ; 
    10 CLXCSCRN CLXCSCRN ; 
    10 CLXSINFO CLXSINFO ; 
      15 CLXSNAME CLXSNAME [6] ; 
      15 CLXMAXLN CLXMAXLN [6] ; 
      15 CLXARY1X CLXARY1X [6] ; 
    10 CLXCURLN CLXCURLN ; 
    10 CLXMAPMX CLXMAPMX ; 
    10 CLXAPPX CLXAPPX ; 
    10 CLXITMX CLXITMX ; 
    10 CLXLTRX1 CLXLTRX1 ; 
    10 CLXLTRX2 CLXLTRX2 ; 
    10 CLXWLTRX CLXWLTRX ; 
    10 CLXCNF CLXCNF [4] ; 
    10 CLXILTH CLXILTH [4] ; 
    10 CLXILOC CLXILOC [4] ; 
    10 CLXITMCT CLXITMCT ; 
    10 CLXWFLDC CLXWFLDC ; 
      15 CLXWFLDN CLXWFLDN ; 
        20 CLXWLTR CLXWLTR [10] ; 
    10 XXXWDTE XXXWDTE ; 
      12 XXXWCYMD XXXWCYMD ; 
        15 XXXWCC XXXWCC ; 
        15 XXXWYMD XXXWYMD ; 
          20 XXXWYY XXXWYY ; 
            25 XXXWYY1 XXXWYY1 ; 
            25 XXXWYY2 XXXWYY2 ; 
          20 XXXWMM XXXWMM ; 
            25 XXXWMM1 XXXWMM1 ; 
            25 XXXWMM2 XXXWMM2 ; 
          20 XXXWDD XXXWDD ; 
            25 XXXWDD1 XXXWDD1 ; 
            25 XXXWDD2 XXXWDD2 ; 
    10 XXXCDTE XXXCDTE ; 
      15 XXXCCC XXXCCC ; 
      15 XXXCYMD XXXCYMD ; 
        20 XXXCYY XXXCYY ; 
        20 XXXCMM XXXCMM ; 
        20 XXXCDD XXXCDD ; 
    10 XXXCTIME XXXCTIME ; 
      15 XXXCHHMM XXXCHHMM ; 
        20 XXXCHRS XXXCHRS ; 
        20 XXXCMINS XXXCMINS ; 
      15 XXXCSECS XXXCSECS ; 
    10 XXXFSDT XXXFSDT ; 
      15 XXXFSMM XXXFSMM ; 
        20 XXXFSM1 XXXFSM1 ; 
        20 XXXFSM2 XXXFSM2 ; 
      15 XXXFSDD XXXFSDD ; 
        20 XXXFSD1 XXXFSD1 ; 
        20 XXXFSD2 XXXFSD2 ; 
      15 XXXFSYY XXXFSYY ; 
        20 XXXFSY1 XXXFSY1 ; 
        20 XXXFSY2 XXXFSY2 ; 
    10 XXXFLDT XXXFLDT ; 
      15 XXXFLMM XXXFLMM ; 
      15 XXXSEP5 XXXSEP5 ; 
      15 XXXFLDD XXXFLDD ; 
      15 XXXSEP6 XXXSEP6 ; 
      15 XXXFLYY XXXFLYY ; 
    10 XXXEDFLD XXXEDFLD ; 
      20 XXXED10C XXXED10C ; 
        30 XXXED8C XXXED8C ; 
          40 XXXED6C XXXED6C ; 
            45 XXXEDC1 XXXEDC1 ; 
              46 XXXEDN1 XXXEDN1 ; 
            45 XXXEDC2 XXXEDC2 ; 
              46 XXXEDN2 XXXEDN2 ; 
            45 XXXEDC3 XXXEDC3 ; 
              46 XXXEDN3 XXXEDN3 ; 
            45 XXXEDC4 XXXEDC4 ; 
              46 XXXEDN4 XXXEDN4 ; 
            45 XXXEDC5 XXXEDC5 ; 
              46 XXXEDN5 XXXEDN5 ; 
            45 XXXEDC6 XXXEDC6 ; 
              46 XXXEDN6 XXXEDN6 ; 
          40 XXXEDC7 XXXEDC7 ; 
            41 XXXEDN7 XXXEDN7 ; 
          40 XXXEDC8 XXXEDC8 ; 
            41 XXXEDN8 XXXEDN8 ; 
        30 XXXEDC9 XXXEDC9 ; 
          31 XXXEDN9 XXXEDN9 ; 
        30 XXXEDC10 XXXEDC10 ; 
          31 XXXEDN10 XXXEDN10 ; 
      20 XXXEDC11 XXXEDC11 ; 
        25 XXXEDN11 XXXEDN11 ; 
      20 XXXEDC12 XXXEDC12 ; 
        25 XXXEDN12 XXXEDN12 ; 
      20 XXXEDC13 XXXEDC13 ; 
        25 XXXEDN13 XXXEDN13 ; 
      20 XXXEDC14 XXXEDC14 ; 
        25 XXXEDN14 XXXEDN14 ; 
      20 XXXEDC15 XXXEDC15 ; 
        25 XXXEDN15 XXXEDN15 ; 
      20 XXXEDC16 XXXEDC16 ; 
        25 XXXEDN16 XXXEDN16 ; 
      20 XXXEDC17 XXXEDC17 ; 
        25 XXXEDN17 XXXEDN17 ; 
      20 XXXEDC18 XXXEDC18 ; 
        25 XXXEDN18 XXXEDN18 ; 
      20 XXXEDC19 XXXEDC19 ; 
        25 XXXEDN19 XXXEDN19 ; 
      20 XXXEDC20 XXXEDC20 ; 
        25 XXXEDN20 XXXEDN20 ; 
      20 XXXEDC21 XXXEDC21 ; 
        25 XXXEDN21 XXXEDN21 ; 
      20 XXXEDC22 XXXEDC22 ; 
        25 XXXEDN22 XXXEDN22 ; 
      20 XXXEDC23 XXXEDC23 ; 
        25 XXXEDN23 XXXEDN23 ; 
      20 XXXEDC24 XXXEDC24 ; 
        25 XXXEDN24 XXXEDN24 ; 
      20 XXXEDC25 XXXEDC25 ; 
        25 XXXEDN25 XXXEDN25 ; 
      20 XXXEDC26 XXXEDC26 ; 
        25 XXXEDN26 XXXEDN26 ; 
      20 XXXEDC27 XXXEDC27 ; 
        25 XXXEDN27 XXXEDN27 ; 
      20 XXXEDC28 XXXEDC28 ; 
        25 XXXEDN28 XXXEDN28 ; 
      20 XXXEDC29 XXXEDC29 ; 
        25 XXXEDN29 XXXEDN29 ; 
      20 XXXEDC30 XXXEDC30 ; 
        25 XXXEDN30 XXXEDN30 ; 
end // end CLXREC

//*** RECORD=CYRREC ****
// *************** cycle count IO module record ***************
// 
// PUROSE:              passes the desired function and
//                      beginning & ending date values and
//                      first & last range values for
//                      area, zone & location
// 
// NOTE:                passes: function code
//                              beginning date
//                              ending date
//                              first area
//                              first zone
//                              first location
//                              last area
//                              last zone
//                              last location
// 
// MAINTENANCE LOG:
// 
// DATE:      INIT:    COMMENTS:
// --------   -------  -------------------------------------
// 01-28-88   w.jones  created csp record
// 12-11-92   JCAMPB   ADDED CYRFYLT AND CYRLYLT
// ************************************************************
// **********************
Record CYRREC type basicRecord
  10 CYRFNC CYRFNC ; 
  10 CYRSDT CYRSDT ; 
  10 CYREDT CYREDT ; 
  10 CYRRCNT CYRRCNT ; 
  10 CYRFAREA CYRFAREA ; 
  10 CYR-FIRST-YLTCD CYR-FIRST-YLTCD ; 
  10 CYRFZONE CYRFZONE ; 
  10 CYRFLOC CYRFLOC ; 
  10 CYRLAREA CYRLAREA ; 
  10 CYR-LAST-YLTCD CYR-LAST-YLTCD ; 
  10 CYRLZONE CYRLZONE ; 
  10 CYRLLOC CYRLLOC ; 
end // end CYRREC

//*** RECORD=CYUREC ****
// *******************  cycle count record  *******************
// 
// PUROSE:              used to create & pass each line of jcl
// 
// PASSES:              return code
//                      line count
//                      80 character line
// 
// MAINTENANCE LOG:
// 
// DATE:      INIT:    COMMENTS:
// --------   -------  -------------------------------------
// 01-22-88   w.jones  created csp record
// ************************************************************
// **********************
Record CYUREC type basicRecord
  10 CYURETRN CYURETRN ; 
  10 CYUCOUNT CYUCOUNT ; 
  10 CYUJCLIN CYUJCLIN [80] ; 
  10 CYULIT18 CYULIT18 ; 
  10 CYUUSRID CYUUSRID ; 
  10 CYUFILER CYUFILER ; 
end // end CYUREC

//*** RECORD=CYVREC ****
// *************** cycle count IO module record ***************
// 
// PUROSE:              passes the desired function and
//                      beginning & ending date values
// 
// NOTE:                passes: function code
//                              beginning date
//                              ending date
// 
// MAINTENANCE LOG:
// 
// DATE:      INIT:    COMMENTS:
// --------   -------  -------------------------------------
// 01-11-88   w.jones  created csp record
// ************************************************************
// **********************
Record CYVREC type basicRecord
  10 CYVFNC CYVFNC ; 
  10 CYVSDT CYVSDT ; 
  10 CYVEDT CYVEDT ; 
end // end CYVREC

//*** RECORD=CYWREC ****
// ************************************************************
// 
//                    CYCLE COUNT
//            COMMON WORKING STORAGE FIELDS
//            =============================
// 
// ************************************************************
// 
// OVERVIEW:
// ========
//           These working storage fields are generally used
//           by all Cycle Count applications.
// 
// 
// MAINTENANCE HISTORY:
// ===================
// 
//   Date     By Whom     Overview of Changes
// --------  -----------  -------------------------------------
// 01-11-88  Ward Jones   created (from SLWREC)
// 
// ************************************************************
// ************************************************************
// **********************
Record CYWREC type basicRecord
  10 CYWERRSW CYWERRSW ; 
  10 CYWSKYSW CYWSKYSW ; 
  10 CYWFTMSW CYWFTMSW ; 
  10 CYWEOFSW CYWEOFSW ; 
  10 CYWSEXSW CYWSEXSW ; 
  10 CYWVERSW CYWVERSW ; 
  10 CYWLINSS CYWLINSS ; 
  10 CYWLASPF CYWLASPF ; 
  10 CYWLASRL CYWLASRL ; 
  10 CYWMSGNO CYWMSGNO ; 
  10 CYWTSTNO CYWTSTNO ; 
  10 CYWWKINT CYWWKINT ; 
  10 CYWLINPP CYWLINPP ; 
  10 CYWSUMIX CYWSUMIX ; 
  10 CYWDETIX CYWDETIX ; 
  10 CYWSMAXR CYWSMAXR ; 
  10 CYWDMAXR CYWDMAXR ; 
  10 CYWSNXTR CYWSNXTR ; 
  10 CYWDNXTR CYWDNXTR ; 
  10 CYWLLEFT CYWLLEFT ; 
  10 CYWLNEED CYWLNEED ; 
  10 CYWBUFLX CYWBUFLX ; 
  10 CYWSUMLX CYWSUMLX ; 
  10 CYWDETLX CYWDETLX ; 
  10 CYWIX CYWIX ; 
  10 CYWIDX01 CYWIDX01 ; 
  10 CYWIDX02 CYWIDX02 ; 
  10 CYWIDX03 CYWIDX03 ; 
  10 CYWIDX04 CYWIDX04 ; 
  10 CYWIDX05 CYWIDX05 ; 
  10 CYWIDX06 CYWIDX06 ; 
  10 CYWCTR01 CYWCTR01 ; 
  10 CYWREM01 CYWREM01 ; 
  10 VAGen_SQLCODE VAGen_SQLCODE ; 
  10 XXXMAPNM XXXMAPNM ; 
  10 XXXTITLE XXXTITLE ; 
  10 XXXRVNBR XXXRVNBR ; 
  10 XXXERRID XXXERRID ; 
    15 XXXAPPID XXXAPPID ; 
    15 XXXLOCID XXXLOCID ; 
  10 CYWTALOC CYWTALOC ; 
  10 CYWTAMAP CYWTAMAP ; 
  10 CYWTBLKY CYWTBLKY ; 
    15 XWHCD XWHCD ; 
    15 CYWTBLCD CYWTBLCD ; 
  10 CAITEM CAITEM ; 
    15 XMCYMSNO XMCYMSNO ; 
    15 * char(19) ; 
  10 CYWSUMQU CYWSUMQU ; 
  10 CYWDETQU CYWDETQU ; 
  10 XWHOWNGF XWHOWNGF ; 
  10 CYWWKDTE CYWWKDTE ; 
    15 CYWWKCC CYWWKCC ; 
    15 CYWWKSD CYWWKSD ; 
      20 CYWWKYY CYWWKYY ; 
      20 CYWWKMM CYWWKMM ; 
      20 CYWWKDD CYWWKDD ; 
  10 CYWINDTE CYWINDTE ; 
    15 CYWINMM CYWINMM ; 
    15 CYWINDD CYWINDD ; 
    15 CYWINYY CYWINYY ; 
  10 SY4IDDSC SY4IDDSC ; 
  10 CAUSERID CAUSERID ; 
    15 CYWUSRID CYWUSRID ; 
    15 * char(2) ; 
end // end CYWREC

DataItem BYPASS-ELIGB char(1)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem CA-SYS-WORKAREA char(2048)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem CA-SYS-WORKAREA-1 char(512)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 512-char system sub-workarea
DataItem CA-SYS-WORKAREA-2 char(512)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 512-char system sub-workarea
DataItem CA-SYS-WORKAREA-3 char(512)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 512-char system sub-workarea
DataItem CA-SYS-WORKAREA-4 char(512)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 6K Workarea avail to users
DataItem CA-USER-WORKAREA char(6144)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2K sub-workarea
DataItem CA-USER-WORKAREA-2K-A char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2K sub-workarea
DataItem CA-USER-WORKAREA-2K-B char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2k sub-workarea
DataItem CA-USER-WORKAREA-2K-C char(2048)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 4K sub-workarea
DataItem CA-USER-WORKAREA-4K char(4096)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea add info
DataItem CAADD char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea add flag
DataItem CAADDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea add level flags
DataItem CAALVL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea chg info
DataItem CACHG char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea chg flag
DataItem CACHGFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea chg level flags
DataItem CACLVL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 3rd pos of current applic
DataItem CACURAP3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 4th pos of current applic
DataItem CACURAP4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea current applic
DataItem CACURAPP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea current applic id
DataItem CACURRAP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea current system
DataItem CACURSYS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea del info
DataItem CADEL char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea del flag
DataItem CADELFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea del level flags
DataItem CADLVL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezesegtr w/s
DataItem CAEZSAP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezesegtr 1 & 2 pos
DataItem CAEZSG12 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezesegtr 3rd pos
DataItem CAEZSG3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ezesegtr 4th pos
DataItem CAEZSG4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea from applic
DataItem CAFRMAPP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea from system
DataItem CAFRMSYS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea from applic id
DataItem CAFROMAP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea inq level flags
DataItem CAILVL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea inq info
DataItem CAINQ char(11)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea inq flag
DataItem CAINQFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea item (to data)
DataItem CAITEM char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea item letter array
DataItem CAITMLTR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea system message
DataItem CAMSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message, part a (1 of 2 parts)
DataItem CAMSGA char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message, part b (2 of 2 parts)
DataItem CAMSGB char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2 char msg sequence number
DataItem CAMSGNO char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// appl id to transfer to
DataItem CAMTOAP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea security ret code
DataItem CASECRC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// commarea system init flag
DataItem CASYSINT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea to application id
DataItem CATOAP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea to applic
DataItem CATOAPP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea to system
DataItem CATOSYS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// orig user workarea(1700 chars)
DataItem CAUSERA char(1700)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commarea user id
DataItem CAUSERID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// alloc  units
DataItem CC1AUNTS num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// alloc  value
DataItem CC1AVALU num(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// call reason
DataItem CC1CLRSN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-cust-ord-id
DataItem CC1CUOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cc1rec group level
DataItem CC1GROUP char(121)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// op-nike-ord-id
DataItem CC1NORID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// op-ord-part-char
DataItem CC1PARTN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// call program name
DataItem CC1PGMNM char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// passed units
DataItem CC1PUNTS num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// passed value
DataItem CC1PVALU num(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// return code
DataItem CC1RTNCD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// return message area
DataItem CC1RTNMA char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return message
DataItem CC1RTNMS char(55)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return sql code
DataItem CC1RTNSQ char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order tag written flag
DataItem CCWCHTAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem CEN-WORK num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-clcom-fl
DataItem CL-CLCOM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-CLM-NBR
DataItem CL-CLM-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL-COMP-FL
DataItem CL-COMP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-CR-ANLS-USER-ID
DataItem CL-CR-ANLS-USER-ID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-ESC-ACT-CD
DataItem CL-ESC-ACT-CD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-ESC-DAYS1
DataItem CL-ESC-DAYS1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL-ESC-DAYS2
DataItem CL-ESC-DAYS2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL-ESC-USER-ID1
DataItem CL-ESC-USER-ID1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-ESC-USER-ID2
DataItem CL-ESC-USER-ID2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-INSP-FL
DataItem CL-INSP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_ISP_POP_AUTH_FL
DataItem CL-ISP-POP-AUTH-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_MEMO_NBR
DataItem CL-MEMO-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL_PPD_COLL_IND
DataItem CL-PPD-COLL-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_RPS_STAT_ID
DataItem CL-RPS-BILL-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rps-labl-fl
DataItem CL-RPS-LABL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_RPS_NBR
DataItem CL-RPS-NBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CL_RPS_STAT_ID
DataItem CL-RPS-STAT-ID char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DATE CR ANLST ASSIGNED TO CLM
DataItem CL-RSLV-BDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL-RSLV-CD
DataItem CL-RSLV-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DATE CR ANLST STOP WORK ON CLM
DataItem CL-RSLV-TDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL-CR-ANLS-USER-ID
DataItem CL-RSLV-USER-ID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-RTN-FL
DataItem CL-RTN-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-SPR-USER-FL
DataItem CL-SPR-USER-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl_taken_by_id (xxx-user-id)
DataItem CL-TAKEN-BY-ID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-TF-CLM-FL
DataItem CL-TF-CLM-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_UPC_LABL_FL
DataItem CL-UPC-LABL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_UPC_LABL_QTY
DataItem CL-UPC-LABL-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL_UPD_COMNT_FL
DataItem CL-UPD-COMNT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL-XCEP-FL
DataItem CL-XCEP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem CL0AWGRP char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key
DataItem CL0AWKEY char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ta1rec info
DataItem CL0AWNUM num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust contact phone number
DataItem CL0EMPHN char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clm-nbr2
DataItem CL1CLMN2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CL1GROUP char(32)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-xcep-ovrd-fl
DataItem CL1XOFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-crtns-insp
DataItem CL2CRTNS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CL2GROUP char(43)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-insp-bdt
DataItem CL2ISBDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-insp-nbr
DataItem CL2ISNBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-insp-xdt
DataItem CL2ISXDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-to-sl-fl
DataItem CL2TOSLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl_ovrd_unt_prc
DataItem CL6OVPRC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-frst-auth-fl
DataItem CLAAUTHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-blgrp-from-fl
DataItem CLABLGFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cr-all-ind
DataItem CLACAIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cust-clm-dt
DataItem CLACCLDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-curr-insp-nbr
DataItem CLACISNB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl_clm_nbr
DataItem CLACLMNB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-clcom-ind
DataItem CLACMIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cnsmr-ind
DataItem CLACNIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-curr-rtn-nbr
DataItem CLACRTNB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-curr-seq-nbr
DataItem CLACSQNB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-cust-ctct-nm
DataItem CLACTCNM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-dbt-on-clm-fl
DataItem CLADBOCL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cladj-ind
DataItem CLADJIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-dnl-ltr-dt
DataItem CLADNLDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-dnl-ltr-fl
DataItem CLADNLFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-est-clm-val
DataItem CLAESTVL decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLAGROUP char(226)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clmem-ind
DataItem CLAMEIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-orig-clm-amt
DataItem CLAOCAMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-orig-clm-qty
DataItem CLAOCQTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-orig-ind
DataItem CLAORIGI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-prv-auth-by-id
DataItem CLAPRATH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-prv-yct-ind
DataItem CLAPRYCT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rtn-to-from-fl
DataItem CLARTNFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-stat-chng-by (xxx-user-id)
DataItem CLASCGBY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clm-sdt
DataItem CLASETDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-shgrp-from-fl
DataItem CLASHPFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clm-stat-dt
DataItem CLASTTDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-cltrf-ind
DataItem CLATFIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-tot-clm-qty
DataItem CLATQTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-wrksht-entr-fl
DataItem CLAWSENF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clxcp-ind
DataItem CLAXCIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clglx-ind
DataItem CLBGLIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLBGROUP char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-ivhdr-ind
DataItem CLBIVIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-pmry-ivc-fl
DataItem CLBPMIVC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-sy-rec-ind
DataItem CLBSRIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLCGROUP char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-pmry-ar-fl
DataItem CLCPMAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cnsmr-lst-3nm
DataItem CLD3NM char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cnsmr-lst-7nm
DataItem CLD7NM char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLDGROUP char(62)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLEGROUP char(89)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-of-cartons
DataItem CLENBCRT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-pod-pos-fl
DataItem CLEPPFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-pod-pos-rqt-cnt
DataItem CLEPPRQC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-pod-pos-rqt-dt
DataItem CLEPPRQD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-pod-pos-stat-dt
DataItem CLEPPSDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tf-frgt-chg
DataItem CLETFGCG decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tf-frgt-di
DataItem CLETFGD char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-tf-frgt-di-dt
DataItem CLETFGDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tf-frgt-di-nbr
DataItem CLETFGDN decimal(11)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tf-misc-chg
DataItem CLETMICG decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tf-ntfy-dt
DataItem CLETNFDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tf-rfus-dt
DataItem CLETRFDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-addr-nm
DataItem CLFADNM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-addr-typ-cd
DataItem CLFADTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLFGROUP char(198)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-comnt-seq-nbr
DataItem CLGCMSEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-comnt-typ-cd
DataItem CLGCMTYP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-comnt
DataItem CLGCOMNT char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLGGROUP char(88)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-memo-asof-dt
DataItem CLHASODT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-grs-mrch-amt
DataItem CLHGMAMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLHGROUP char(103)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-memo-amt
DataItem CLHMEMAM decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-memo-dt
DataItem CLHMEMDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-memo-gl-amt
DataItem CLHMEMGL decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-memo-bus-mo
DataItem CLHMEMMO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-memo-nbr
DataItem CLHMEMNB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-memo-net-fl
DataItem CLHNETFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_SEQ_NBR
DataItem CLHSEQNB smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-shp-chg
DataItem CLHSHPCG decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-shp-dt
DataItem CLHSHPDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-weight
DataItem CLHWGT decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-nike-ad-mat-ind
DataItem CLIADMAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-gl-adv-seq-nbr
DataItem CLIADVSQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-coop-ad-alw-pct
DataItem CLICALPC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL_COOP_AD_RUN_CNT
DataItem CLICARCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-coop-ad-run-mo
DataItem CLICARMO char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-cr-dbt-fl
DataItem CLICRDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-gl-amt
DataItem CLIGLAM decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-ivglx-ind
DataItem CLIGLFIV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-gl-net-fl
DataItem CLIGLNFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-gl-ovrd-ind
DataItem CLIGLOIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-gl-pct
DataItem CLIGLPC decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-gl-prv-pct
DataItem CLIGLPPT decimal(5,3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLIGROUP char(83)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-gl-appl-fl
DataItem CLIIGOFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-frgt-cr-fl
DataItem CLJFRCRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-frgt-dbt-fl
DataItem CLJFRDBF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLJGROUP char(68)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-labl-rqt
DataItem CLJLBRQT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-tot-labl-prt
DataItem CLJLBTOT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-of-labl
DataItem CLJNBLB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-noncr-rtn-fl
DataItem CLJNCRFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-orig-rauth-xdt
DataItem CLJORAXD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-prt-labl-fl
DataItem CLJPRTLB char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-prt-rauth-fl
DataItem CLJPRTRA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rauth-idt
DataItem CLJRAIDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-raitm-ind
DataItem CLJRAIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-rauth-rqt
DataItem CLJRARQT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-rauth-xdt
DataItem CLJRAXDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rebag-fl
DataItem CLJRBGFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rebox-fl
DataItem CLJRBXFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rts-def-ind
DataItem CLJRDIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-restk-fl
DataItem CLJRSKFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rmv-tag-fl
DataItem CLJRTGFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-tot-rauth-qty
DataItem CLJTATHQ int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-unlace-fl
DataItem CLJUNLFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rauth-rtn-qty
DataItem CLKAUTHQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-clm-prc
DataItem CLKCLPRC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rauth-cr-fl
DataItem CLKCRFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLKGROUP char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-sz
DataItem CLKNBRSZ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-prc-from-ind
DataItem CLKPRCFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rqt-rtn-qty
DataItem CLKRQTQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-onewhse-xcep-fl
DataItem CLKWHSXF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLLGROUP char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-insp-dt
DataItem CLLIDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-nbr-cartons-rcv
DataItem CLLNBRCV int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-ppd-collect-chg
DataItem CLLPDCCG decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rtn-disp
DataItem CLLRTDSP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl_rtn_nbr
DataItem CLLRTNNB smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// cl-whse-rdt
DataItem CLLWRDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group flag y or n
DataItem CLM-DEF-GRP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// defective group name
DataItem CLM-DEF-GRP-NM char(6)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem CLMGROUP char(63)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rebag-qty
DataItem CLMRBGQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rebox-qty
DataItem CLMRBXQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rts-mrch-amt
DataItem CLMRMAMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-remrch-chg
DataItem CLMRMHCG decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-restk-chg
DataItem CLMRSKCG decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rmv-tag-qty
DataItem CLMRTGQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-tot-noncr-qty
DataItem CLMTNCRQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-chg-to-gl-fl1
DataItem CLMTOGL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-chg-to-gl-fl2
DataItem CLMTOGL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-tot-rts-qty
DataItem CLMTRTSQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-unlace-qty
DataItem CLMUNLQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLNGROUP char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-grs-unit-prc
DataItem CLNGRPRC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-noncr-qty
DataItem CLNNCRQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-net-unit-prc
DataItem CLNNTPRC decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-rts-qty
DataItem CLNRTSQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-def-mrch-amt
DataItem CLODMAMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-frgt-alw-amt
DataItem CLOFGAAM decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-frgt-alw-qty
DataItem CLOFGAQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLOGROUP char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rtn-cust-fl
DataItem CLORCTFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-tot-def-qty
DataItem CLOTDFQY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-def-trailer-id
DataItem CLOTLRID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-tot-rtc-qty
DataItem CLOTRCQY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-carton-nbr
DataItem CLPCRTNB char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-def-qty
DataItem CLPDEFQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLPGROUP char(86)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rtn-cust-qty
DataItem CLPRTCTQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-fcty-po-vald-fl
DataItem CLPVLDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clm-qty
DataItem CLRCLMQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLRGROUP char(70)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-rqt-qty
DataItem CLRRQTQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLSGROUP char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-trailer-stat-cd
DataItem CLSTLRST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-clsd-co-id
DataItem CLUCLOSD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem CLUGROUP char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl-nxt-clm-nbr
DataItem CLUNXCLM int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-nxt-btch-rqtnbr
DataItem CLUNXRQT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-nxt-run-nbr
DataItem CLUNXRUN smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// 'a'dd, 'c'hange, 'i'nquiry
DataItem CLWACTIV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// y =address, n =addl invoices
DataItem CLWADDR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// y =add'l a/r, n = none
DataItem CLWADLAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// application showing main map
DataItem CLWAPPFM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// clm array, selected for inqry
DataItem CLWARRAY char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// show map x in cl0b
DataItem CLWCL0BX char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// clm array map start index
DataItem CLWCLIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cl-clm-nbr
DataItem CLWCLMNB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Claim Value (high)
DataItem CLWESTHI bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Claim Value (low)
DataItem CLWESTLO bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// EZEMNO to pass to next pgm
DataItem CLWEZMNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// clwrec group level
DataItem CLWGROUP char(1510)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast-path items
DataItem CLWITEMS char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast-path item 1 - char format
DataItem CLWITM1C char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast-path item 1 - nbr format
DataItem CLWITM1N num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fast-path item 2 - char format
DataItem CLWITM2C char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast-path item 2 - nbr format
DataItem CLWITM2N num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fast-path item 3 - char format
DataItem CLWITM3C char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast-path item 3 - nbr format
DataItem CLWITM3N num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fast-path item 4 - char format
DataItem CLWITM4C char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fast-path item 4 - nbr format
DataItem CLWITM4N num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// number of fast-path items
DataItem CLWITMCT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// consumer Last Name (First 10)
DataItem CLWLSTNM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// main map in this flow
DataItem CLWMAPFM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// y =memo comnt, n =clm comnt
DataItem CLWMCMNT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// claims menu option
DataItem CLWMNOPT num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// clm array max index loaded
DataItem CLWMXIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Claim Status date (high)
DataItem CLWSTTHI int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Claim Status date (low)
DataItem CLWSTTLO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// special service selection
DataItem CLWSVSEL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index for m001 array
DataItem CLWYZIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// group lvl cly - clz interfc
DataItem CLWYZINT char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cl0y - cl0z switch
DataItem CLWYZSWT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// appl index (for yua table)
DataItem CLXAPPX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// array index
DataItem CLXARAYX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 1st array row for assoc map
DataItem CLXARY1X smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// build array from database (y/n
DataItem CLXBLDAY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// build screen (y/n)
DataItem CLXBLDSC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws char/numeric flags
DataItem CLXCNF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// name of current process
DataItem CLXCPROC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// name of current screen
DataItem CLXCSCRN char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current screen line
DataItem CLXCURLN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// curr size in size array
DataItem CLXCURSZ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// do-edits flag
DataItem CLXEDITF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-application flag (y/n)
DataItem CLXEOAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-file (y/n)
DataItem CLXEOFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-screen flag (y/n)
DataItem CLXEOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// have map error (y/n)
DataItem CLXERRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem CLXGROUP char(421)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws starting item locations
DataItem CLXILOC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws item lengths
DataItem CLXILTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// invoice-found flag
DataItem CLXINVFD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// number of items entered
DataItem CLXITMCT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// item index
DataItem CLXITMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen line index
DataItem CLXLINEX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last filled array row
DataItem CLXLSTAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last key in array
DataItem CLXLSTKE char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last avail size in size array
DataItem CLXLSTSZ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// letter index
DataItem CLXLTRX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// letter index
DataItem CLXLTRX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last map line with data
DataItem CLXMAPMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum number of lines
DataItem CLXMAXLN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// application error message
DataItem CLXMSG char(78)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display new screen (y/n)
DataItem CLXNEWSC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order-found flag
DataItem CLXORDFD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// order/invoice #, partitioning
DataItem CLXORDIV num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// order/invoice partition char
DataItem CLXPARTN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen pointer
DataItem CLXSCRNX num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen-information-array
DataItem CLXSINFO char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen name
DataItem CLXSNAME char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// generic test flag (y/n)
DataItem CLXTESTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// do-updates flag
DataItem CLXUPDTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid-date flag
DataItem CLXVALDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid-item flag
DataItem CLXVITMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working field character format
DataItem CLXWFLDC char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working field numeric format
DataItem CLXWFLDN num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working field letter array
DataItem CLXWLTR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index to working field letters
DataItem CLXWLTRX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// write invoice xref flag
DataItem CLXWRTIV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// write order xref flag
DataItem CLXWRTOR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ycrtbl index
DataItem CLXYCRX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ycstbl index
DataItem CLXYCSX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ycttbl index
DataItem CLXYCTX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// yittbl index
DataItem CLXYITX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CL_TF_AUTH_FL
DataItem CLYATHFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CL_CLM_AUTH_BY_ID
DataItem CLYATHID smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CL_CLM_AUTH_LMT1
DataItem CLYATHLM decimal(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem CY-SCHED-QTY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CY_SCHED_TOT_QTY
DataItem CY-SCHED-TOT-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem CY-SY-RQT-QTY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// start date (CCYYMMDD)
DataItem CYRSDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// line count
DataItem CYUCOUNT num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line filler
DataItem CYUFILER char(54)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl line of data
DataItem CYUJCLIN char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// notify literal
DataItem CYULIT18 char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// return code
DataItem CYURETRN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cics user id
DataItem CYUUSRID char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end date (CCYYMMDD)
DataItem CYVEDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// IO module function
DataItem CYVFNC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// start date (CCYYMMDD)
DataItem CYVSDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// buffer last used line index
DataItem CYWBUFLX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work counter
DataItem CYWCTR01 num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// det tsq rel. rec. no.
DataItem CYWDETIX num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// last used det pg line index
DataItem CYWDETLX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// detail tsq id
DataItem CYWDETQU char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max no. of det tsq rec.s
DataItem CYWDMAXR num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// next det tsq record no.
DataItem CYWDNXTR num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// EOF (=y) switch
DataItem CYWEOFSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error switch
DataItem CYWERRSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time (=y) switch
DataItem CYWFTMSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 'while' counter/index #1
DataItem CYWIDX01 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 'while' counter/index #2
DataItem CYWIDX02 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 'while' counter/index #3
DataItem CYWIDX03 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 'while' counter/index #4
DataItem CYWIDX04 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 'while' counter/index #5
DataItem CYWIDX05 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 'while' counter/index #6
DataItem CYWIDX06 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// input date (dd)
DataItem CYWINDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// input date (mmddyy)
DataItem CYWINDTE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// input date (mm)
DataItem CYWINMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// input date (yy)
DataItem CYWINYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// special short index
DataItem CYWIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last pfkey (E or 6)
DataItem CYWLASPF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last rt/lft pfkey(10or11)
DataItem CYWLASRL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// lines per page
DataItem CYWLINPP num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// line started switch (Y/N)
DataItem CYWLINSS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// lines left on det tsq pg
DataItem CYWLLEFT num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// lines needed on det tsq pg
DataItem CYWLNEED num(2)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// msg no. save field
DataItem CYWMSGNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work remainder field
DataItem CYWREM01 num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// special exit switch
DataItem CYWSEXSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// same key (=y) switch
DataItem CYWSKYSW char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max no. of sum tsq rec.s
DataItem CYWSMAXR num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// next sum tsq record no.
DataItem CYWSNXTR num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// sum tsq rel. rec. no.
DataItem CYWSUMIX num(4)  {
  currency = no, numericSeparator = no, sign = none, zeroFormat = yes, 
  align = right, fillCharacter = "0", inputRequired = no, minimumInput = 1
}
end

// last used sum pg line index
DataItem CYWSUMLX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// summary tsq id
DataItem CYWSUMQU char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TA0020 last process/sgrp
DataItem CYWTALOC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TA0020 last map
DataItem CYWTAMAP char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// tbl grp lvl key code
DataItem CYWTBLCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

