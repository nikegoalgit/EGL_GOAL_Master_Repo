package sa.common;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import op.common.*;
import sm.common.*;
import sp.common.*;
import sy.common.*;
//*** RECORD=SA1REC ****
// *************** next batch request nbr *********************
// 
// DB2 TABLE:           Dsales.Vsactl01
// 
// COPYLIB MEMBER:      DCL00450
// 
// I/O MOD:             IO2280
// 
// KEY TO DB2 TABLE:    NONE
// 
// DATE CREATED:        02/05/88
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  -----      ---------------------------------------
// 02-05-88   jdv       INITIAL RECORD CREATION
// 
// **********************
Record SA1REC type basicRecord
  5 SA1GROUP SA1GROUP ; 
    10 SA1NRQNB SA1NRQNB ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
end // end SA1REC

//*** RECORD=SA2REC ****
// *************** sa req parameter record ********************
// 
// DB2 TABLE:           Dsales.Vsaprm01
// 
// COPYLIB MEMBER:      DCL00448
// 
// I/O MOD:             IO2500
// 
// KEY TO DB2 TABLE:    xxxusrid -- user id
//                      sa2rqnbr -- request number
// 
// DATE CREATED:        02/05/88
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  -----      ---------------------------------------
// 02-05-88   jdv       INITIAL RECORD CREATION
// 06-06-89  ssteph     redefined report type as SA4RTCD
// 01-29-90  dharri     task 68 changed yfmcd to sa5fmtcd
// 02/04/91  CHYDE      Correct data item descriptions only.
// 06/13/91  rcasca     changed XCYCD to KULCNTY and
//                      changed YCLCD to * (filler)
// 02/23/94  RPATTE     TBLCH INCREASE SAMNDLR/SAMXDLR 11 TO 15
// **********************
Record SA2REC type basicRecord
  5 SA2GROUP SA2GROUP ; 
    10 SA2KEY SA2KEY ; 
      15 XXXUSRID XXXUSRID ; 
      15 SA2RQNBR SA2RQNBR ; 
    10 YSDCD YSDCD ; 
    10 SA4RTCD SA4RTCD ; 
    10 SA5FMTCD SA5FMTCD ; 
    10 SA2ADAGF SA2ADAGF ; 
    10 SA2EENTF SA2EENTF ; 
    10 OP1CUNDT OP1CUNDT [2] ; 
    10 SA2INPYF SA2INPYF ; 
    10 SA2INNAF SA2INNAF ; 
    10 SA2TECID SA2TECID ; 
    10 SA2AXDVF SA2AXDVF ; 
    10 XDVCD XDVCD ; 
    10 SA2AXGPF SA2AXGPF ; 
    10 XGPCD XGPCD [3] ; 
    10 SA2SPGOF SA2SPGOF ; 
    10 SP1ID SP1ID [10] ; 
    10 SA2AXOTF SA2AXOTF ; 
    10 XOTCD XOTCD [10] ; 
    10 SA2AAGYF SA2AAGYF ; 
    10 SA2ACSTF SA2ACSTF ; 
    10 SA2ASTYF SA2ASTYF ; 
    10 SA3LSTNM SA3LSTNM ; 
    10 KUKPCOID KUKPCOID ; 
    10 KUCGRPID KUCGRPID ; 
    10 KUCACYNR KUCACYNR ; 
    10 XAUCD XAUCD [4] ; 
    10 YSVCD YSVCD [8] ; 
    10 XSGCD XSGCD ; 
    10 XNACD XNACD [6] ; 
    10 XNICD XNICD [3] ; 
    10 * char(2) [2] ; 
    10 SA2ADTYP SA2ADTYP ; 
    10 XSTCD XSTCD [3] ; 
    10 KULCNTY KULCNTY [3] ; 
    10 XXXZIP XXXZIP [3] ; 
    10 XCTCD XCTCD [5] ; 
    10 SA2AXQAF SA2AXQAF ; 
    10 XQACD XQACD [2] ; 
    10 SA2AXLCF SA2AXLCF ; 
    10 XLCCD XLCCD [3] ; 
    10 XPCCD XPCCD [2] ; 
    10 YSCCD YSCCD [5] ; 
    10 XSPCD XSPCD [5] ; 
    10 XBTCD XBTCD [5] ; 
    10 XCNCD XCNCD [5] ; 
    10 XFCCD XFCCD ; 
    10 XFMCD XFMCD [5] ; 
    10 XGACD XGACD [10] ; 
    10 XPRCD XPRCD [3] ; 
    10 XSUCD XSUCD [5] ; 
    10 SA2AXMRF SA2AXMRF ; 
    10 XMRCD XMRCD [5] ; 
    10 SA2TITLE SA2TITLE [2] ; 
    10 SA2RPLOC SA2RPLOC ; 
    10 SA2DISTO SA2DISTO ; 
    10 XXXNBRCY XXXNBRCY [2] ; 
    10 XSOPDEST XSOPDEST ; 
    10 SA2RKBYP SA2RKBYP ; 
    10 SA2RKBYI SA2RKBYI ; 
    10 SA2NBRRK SA2NBRRK ; 
    10 SA2MNDLR SA2MNDLR ; 
    10 SA2MXDLR SA2MXDLR ; 
    10 SA2MNUNT SA2MNUNT ; 
    10 SA2MXUNT SA2MXUNT ; 
    10 SA2R1BKF SA2R1BKF [25] ; 
    10 SA2R2BKF SA2R2BKF [25] ; 
    10 SA2NBPPG SA2NBPPG [2] ; 
    10 SA2RSTDT SA2RSTDT ; 
    10 SA2RSTTM SA2RSTTM ; 
    10 SA2RENDT SA2RENDT ; 
    10 SA2RENTM SA2RENTM ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZSTM ZZZSTM ; 
end // end SA2REC

//*** RECORD=SA3REC ****
// ******************* sa list table***** *********************
// 
// DB2 TABLE:           Dsales.Vsalst01
// 
// COPYLIB MEMBER:      DCL00449
// 
// I/O MOD:             IO2510
// 
// KEY TO DB2 TABLE:    xxxusrid
//                      sa2lstnm
//                      sa2lstyp
//                      sa2lstst
// 
// DATE CREATED:        02/05/88
// 
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  -----      ---------------------------------------
// 02-05-88   jdv       INITIAL RECORD CREATION
// 
// **********************
Record SA3REC type basicRecord
  5 SA3GROUP SA3GROUP ; 
    10 SA3KEY SA3KEY ; 
      15 XXXUSRID XXXUSRID ; 
      15 SA3LSTNM SA3LSTNM ; 
      15 SA3LSTSQ SA3LSTSQ ; 
      15 SA3LSTIN SA3LSTIN ; 
      15 SA3LSTST SA3LSTST ; 
    10 SM4REPID SM4REPID ; 
    10 SM1AGYID SM1AGYID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end SA3REC

//*** RECORD=SAAREC ****
// sales analysis common work field working storage.  these are
// common work areas used by most of the sales analysis prgms.
// these fields are not kept globally as the sawrec record is,
// and will go away when the program is exited.
// 
// 
// maint log
// when     who      what
// -------- -------- ------------------------------------------
// 04/06/88 jvande   initial record creation
// 
// **********************
Record SAAREC type basicRecord
  5 SAAGROUP SAAGROUP ; 
    10 SAASUB SAASUB ; 
    10 SAASUB1 SAASUB1 ; 
    10 SAASUB2 SAASUB2 ; 
    10 SAASUB3 SAASUB3 ; 
    10 SAACNT1 SAACNT1 ; 
    10 SAACNT2 SAACNT2 ; 
    10 SAACNT3 SAACNT3 ; 
    10 SAACNT4 SAACNT4 ; 
    10 SAAFLAG1 SAAFLAG1 ; 
    10 SAAFLAG2 SAAFLAG2 ; 
    10 SAAFLAG3 SAAFLAG3 ; 
    10 SAAFLAG4 SAAFLAG4 ; 
    10 SAAEND SAAEND ; 
    10 SAAPF4 SAAPF4 ; 
    10 SAAPF3 SAAPF3 ; 
    10 SAAFND SAAFND ; 
    10 SAAERR SAAERR ; 
    10 SAASEL SAASEL ; 
      15 SAAOPT SAAOPT ; 
      15 * char(1) ; 
      15 SA3LSTNM SA3LSTNM ; 
    10 SAACDT SAACDT ; 
      15 SAACCC SAACCC ; 
      15 SAACYMD SAACYMD ; 
        20 SAACYY SAACYY ; 
        20 SAACMM SAACMM ; 
        20 SAACDD SAACDD ; 
    10 SAAWDT SAAWDT ; 
      15 SAAWCC SAAWCC ; 
      15 SAAWYMD SAAWYMD ; 
        20 SAAWYY SAAWYY ; 
        20 SAAWMM SAAWMM ; 
        20 SAAWDD SAAWDD ; 
    10 SAAFDT SAAFDT ; 
      15 SAAFMM SAAFMM ; 
      15 SAAFDD SAAFDD ; 
      15 SAAFYY SAAFYY ; 
    10 SAAFTM SAAFTM ; 
      15 SAAFTHH SAAFTHH ; 
      15 * char(1) ; 
      15 SAAFTMM SAAFTMM ; 
      15 * char(1) ; 
      15 SAAFTSS SAAFTSS ; 
    10 SAANTM1 SAANTM1 ; 
      15 SAANTM2 SAANTM2 ; 
        20 SAANTHH SAANTHH ; 
        20 SAANTMM SAANTMM ; 
      15 SAANTSS SAANTSS ; 
end // end SAAREC

//*** RECORD=SAEREC ****
// this is the csp working storage format for the agency/rep
// table to be used in sales analysis.
// 
// db2 table:             dsales.vragcys1
// 
// copylib member:        dcl00373
// 
// i/o module:            io0150
// 
// key to db2 table:      sm4repid   sm-srep-id
//                        sm1agyid   sm-sagcy-id
//                        sm5stat    sm-srep-stat
// 
// 
// maintenance:
// init   date      reason
// ---- --------    -------------------------------------------
// jdv   4/5/88     created.
// **********************
Record SAEREC type basicRecord
  5 SAEGROUP SAEGROUP ; 
    10 SM4REPID SM4REPID ; 
    10 SM1AGYID SM1AGYID ; 
    10 SM5STAT SM5STAT ; 
    10 XXXLSTNM XXXLSTNM ; 
    10 XXXFSTNM XXXFSTNM ; 
    10 XXXMDINT XXXMDINT ; 
    10 SM5EDT SM5EDT ; 
    10 SM5TDT SM5TDT ; 
    10 SM5GPCIN SM5GPCIN ; 
    10 SM5SPCIN SM5SPCIN ; 
    10 SM5COMIN SM5COMIN ; 
    10 XRTCD XRTCD ; 
    10 XRTABRV XRTABRV ; 
    10 SM5PRSCU SM5PRSCU ; 
    10 SM5PRSST SM5PRSST ; 
    10 SM5PRMCU SM5PRMCU ; 
    10 SM5PRMST SM5PRMST ; 
    10 ZZZLDT ZZZLDT ; 
end // end SAEREC

//*** RECORD=SAFREC ****
// this is the csp working storage format for the agency
// history table to be used in sales analysis
// 
// db2 table:            dsales.vsaghs01
// 
// copylib member:       dcl00372
// 
// i/o module:           io1230
// 
// key to db2 table:     sm1agyid    sm-sagcy-id
// 
// 
// maintenance:
// init   date      reason
// ---- --------    -------------------------------------------
// jdv   4/5/88     created.
// **********************
Record SAFREC type basicRecord
  5 SAFGROUP SAFGROUP ; 
    10 SM1AGYID SM1AGYID ; 
    10 SM1AGYNM SM1AGYNM ; 
    10 SM1CNSLD SM1CNSLD ; 
    10 XSOCD XSOCD ; 
    10 XSOABRV XSOABRV ; 
    10 XSSCD XSSCD ; 
    10 XSSABRV XSSABRV ; 
    10 SM1STAT SM1STAT ; 
    10 XTTCD XTTCD ; 
    10 XTTABRV XTTABRV ; 
    10 SM1EDT SM1EDT ; 
    10 XSCCD XSCCD ; 
    10 XSCABRV XSCABRV ; 
    10 YGRCD YGRCD ; 
    10 YGRABRV YGRABRV ; 
    10 SM1HSDT SM1HSDT [4] ; 
    10 ZZZLDT ZZZLDT ; 
end // end SAFREC

//*** RECORD=SAWREC ****
// Global working storage for the On-Line Sales Analysis System
// 
// Date Created: 02-15-88
// 
// Creator: Jim Vander Velden
// 
//    Maintenance Log
// 
//  who   | when     | what
// ------------------------------------------------------------
// jvande | 02-15-88 | creation
// mgatre | 11-17-88 | Increase occurs to 5 for maint rsn codes
// ssteph | 05-11-89 | Added yrtcd - Report Type Code - to dis-
//        |          | tinguish Account Management (A), from
//        |          | Rep Performance (P).
// dharri | 01-29-90 | task 68 changed yfmcd to sa5fmtcd
// 
// rcasca   06/13/91   change XCYCD to KULCNTY, and change
//                     YCLCD to filler
// RPATTE   02/23/94   TBLC INCREASE SA2MNDLR/SA2MXDLR 11 TO 15
// **********************
Record SAWREC type basicRecord
  5 SAWGROUP SAWGROUP ; 
    10 YSDCD YSDCD ; 
    10 SA4RTCD SA4RTCD ; 
    10 SA5FMTCD SA5FMTCD ; 
    10 SA2EENTF SA2EENTF ; 
    10 SAWPRMLP SAWPRMLP [10] ; 
    10 SAWSPMLP SAWSPMLP [14] ; 
    10 SAWFLAGS SAWFLAGS ; 
      15 SA2INNAF SA2INNAF ; 
      15 SA2INPYF SA2INPYF ; 
      15 SA2SPGOF SA2SPGOF ; 
      15 SAWSPGEF SAWSPGEF ; 
      15 SA2AXDVF SA2AXDVF ; 
      15 SAWXDVEF SAWXDVEF ; 
      15 SA2AXOTF SA2AXOTF ; 
      15 SAWXOTEF SAWXOTEF ; 
      15 SA2AXGPF SA2AXGPF ; 
      15 SAWXGPEF SAWXGPEF ; 
      15 SA2AAGYF SA2AAGYF ; 
      15 SAWAGYEF SAWAGYEF ; 
      15 SAWREPEF SAWREPEF ; 
      15 SA2ACSTF SA2ACSTF ; 
      15 SAWCSTEF SAWCSTEF ; 
      15 SAWXAUEF SAWXAUEF ; 
      15 SAWYSVEF SAWYSVEF ; 
      15 SAWXSGEF SAWXSGEF ; 
      15 SAWSCTEF SAWSCTEF ; 
      15 SAWZIPEF SAWZIPEF ; 
      15 SAWXCTEF SAWXCTEF ; 
      15 SA2AXQAF SA2AXQAF ; 
      15 SAWXQAEF SAWXQAEF ; 
      15 SA2AXLCF SA2AXLCF ; 
      15 SAWXLCEF SAWXLCEF ; 
      15 SA2ASTYF SA2ASTYF ; 
      15 SAWSTYEF SAWSTYEF ; 
      15 SAWXPREF SAWXPREF ; 
      15 SAWYSCEF SAWYSCEF ; 
      15 SAWYCLEF SAWYCLEF ; 
      15 SAWXPCEF SAWXPCEF ; 
      15 SAWXBTEF SAWXBTEF ; 
      15 SAWXNIEF SAWXNIEF ; 
      15 SAWXSUEF SAWXSUEF ; 
      15 SAWXGAEF SAWXGAEF ; 
      15 SAWXSPEF SAWXSPEF ; 
      15 SAWXCNEF SAWXCNEF ; 
      15 SAWXFCEF SAWXFCEF ; 
      15 SAWXFMEF SAWXFMEF ; 
      15 SAWXMREF SAWXMREF ; 
      15 SA2AXMRF SA2AXMRF ; 
      15 SAWXNAEF SAWXNAEF ; 
      15 SA2TECID SA2TECID ; 
      15 SA2RKBYI SA2RKBYI ; 
      15 SA2RKBYP SA2RKBYP ; 
    10 SAWDATA SAWDATA ; 
      15 SA2RQNBR SA2RQNBR ; 
      15 SA3LSTNM SA3LSTNM [3] ; 
      15 XGPCD XGPCD [3] ; 
      15 SP1ID SP1ID [10] ; 
      15 XDVCD XDVCD ; 
      15 XOTCD XOTCD [10] ; 
      15 KUKPCOID KUKPCOID ; 
      15 KUCGRPID KUCGRPID ; 
      15 KUCACYNR KUCACYNR ; 
      15 XAUCD XAUCD [4] ; 
      15 YSVCD YSVCD [8] ; 
      15 XSGCD XSGCD ; 
      15 XNACD XNACD [6] ; 
      15 SA2ADTYP SA2ADTYP ; 
      15 XSTCD XSTCD [3] ; 
      15 KULCNTY KULCNTY [3] ; 
      15 XXXZIP XXXZIP [3] ; 
      15 XCTCD XCTCD [5] ; 
      15 XQACD XQACD [2] ; 
      15 XLCCD XLCCD [3] ; 
      15 XPCCD XPCCD [2] ; 
      15 YSCCD YSCCD [5] ; 
      15 * char(4) ; 
      15 XSPCD XSPCD [5] ; 
      15 XBTCD XBTCD [5] ; 
      15 XNICD XNICD [3] ; 
      15 XCNCD XCNCD [5] ; 
      15 XFCCD XFCCD ; 
      15 XFMCD XFMCD [5] ; 
      15 XGACD XGACD [10] ; 
      15 XPRCD XPRCD [3] ; 
      15 XSUCD XSUCD [5] ; 
      15 XMRCD XMRCD [5] ; 
      15 SA2MNDLR SA2MNDLR ; 
      15 SA2MXDLR SA2MXDLR ; 
      15 SA2MNUNT SA2MNUNT ; 
      15 SA2MXUNT SA2MXUNT ; 
      15 OP1CUNDT OP1CUNDT [2] ; 
      15 SA2TITLE SA2TITLE [2] ; 
      15 XXXNBRCY XXXNBRCY [2] ; 
      15 SA2R1BKF SA2R1BKF [25] ; 
      15 SA2R2BKF SA2R2BKF [25] ; 
      15 SM1AGYID SM1AGYID [30] ; 
      15 SM4REPID SM4REPID [30] ; 
      15 SAWXGPCD SAWXGPCD [30] ; 
      15 SY1STNBR SY1STNBR [30] ; 
      15 SY2CLRID SY2CLRID [30] ; 
      15 XDMCD XDMCD [30] ; 
      15 KUCCOID KUCCOID [30] ; 
      15 KUMSTRID KUMSTRID [30] ; 
      15 XNXCD XNXCD [30] ; 
      15 SA2NBRRK SA2NBRRK ; 
end // end SAWREC

// record group level
DataItem SA1GROUP char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-nxt-btch-nbr
DataItem SA1NRQNB int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-sel-all-agcy-fl
DataItem SA2AAGYF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-cust-fl
DataItem SA2ACSTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-adj-agcy-fl
DataItem SA2ADAGF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-addr-typ-ind
DataItem SA2ADTYP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-prod-fl
DataItem SA2ASTYF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-xdv-fl
DataItem SA2AXDVF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-xgp-fl
DataItem SA2AXGPF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-xlc-fl
DataItem SA2AXLCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-xmr-fl
DataItem SA2AXMRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-xot-fl
DataItem SA2AXOTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-all-xqa-fl
DataItem SA2AXQAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SA_RPT_DIST_TXT
DataItem SA2DISTO char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-exprt-entr-fl
DataItem SA2EENTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem SA2GROUP char(722)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-incl-natl-fl
DataItem SA2INNAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-incl-prv-yr-fl
DataItem SA2INPYF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record key to parm rec
DataItem SA2KEY char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-min-dlr
DataItem SA2MNDLR decimal(15)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-min-unt
DataItem SA2MNUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-max-dlr
DataItem SA2MXDLR decimal(15)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SA_MAX_UNT
DataItem SA2MXUNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-nbr-prt-page
DataItem SA2NBPPG int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-nbr-to-rank
DataItem SA2NBRRK smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SA_RPT1_BRK_FL
DataItem SA2R1BKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SA_RPT2_BRK_FL
DataItem SA2R2BKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-rpt-rqt-xdt
DataItem SA2RENDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-rpt-rqt-fnsh-tm
DataItem SA2RENTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-rank-by-ind
DataItem SA2RKBYI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-rank-by-pct-fl
DataItem SA2RKBYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SA_RPT_LOC_TXT
DataItem SA2RPLOC char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-btch-rqt-nbr
DataItem SA2RQNBR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-rpt-rqt-bdt
DataItem SA2RSTDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-rpt-rqt-strt-tm
DataItem SA2RSTTM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-sel-spgm-flag
DataItem SA2SPGOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-sel-tech-ind
DataItem SA2TECID char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SA_RPT_TITL_TXT
DataItem SA2TITLE char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem SA3GROUP char(54)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa list key
DataItem SA3KEY char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-list-typ-ind
DataItem SA3LSTIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-list-nm
DataItem SA3LSTNM char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-list-rec-seq
DataItem SA3LSTSQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa-list-stat-ind
DataItem SA3LSTST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-rpt-typ-ind
DataItem SA4RTCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-rpt-typ-sdesc
DataItem SA4RTDSC char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-parm-appl-nm
DataItem SA5APPL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SA_FMAT_DESC
DataItem SA5DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-fmat-cd
DataItem SA5FMTCD char(2)  {
  align = right, fillCharacter = " ", inputRequired = no
}
end

// sa-prmy-data-ind
DataItem SA5PDTID char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sa-prd-grp-rpt-fl
DataItem SA5PGRPT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current date century
DataItem SAACCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date day
DataItem SAACDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem SAACDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date month
DataItem SAACMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter 1
DataItem SAACNT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter 2
DataItem SAACNT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter 3
DataItem SAACNT3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter 4
DataItem SAACNT4 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date yymmdd
DataItem SAACYMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date year
DataItem SAACYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end loop flag
DataItem SAAEND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag (y/n)
DataItem SAAERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format date day
DataItem SAAFDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format date
DataItem SAAFDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// misc flag 1
DataItem SAAFLAG1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// misc flag 2
DataItem SAAFLAG2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// misc flag 3
DataItem SAAFLAG3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// misc flag 4
DataItem SAAFLAG4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format date month
DataItem SAAFMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa found flag
DataItem SAAFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format hh
DataItem SAAFTHH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format time
DataItem SAAFTM char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format mm
DataItem SAAFTMM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format ss
DataItem SAAFTSS char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// format date year
DataItem SAAFYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sa group ws1
DataItem SAAGROUP char(66)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// numeric time - hh
DataItem SAANTHH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric time 1 - hhmmss
DataItem SAANTM1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric time 2 - hhmm
DataItem SAANTM2 num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric time - mm
DataItem SAANTMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric time - ss
DataItem SAANTSS num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// option {'l','a','r',' '}
DataItem SAAOPT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf3 confirmation flag
DataItem SAAPF3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf4 confirmation flag
DataItem SAAPF4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select code redefine
DataItem SAASEL char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// wk sub 1
DataItem SAASUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// wk sub 2
DataItem SAASUB1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// wk sub 3
DataItem SAASUB2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// wk sub 4
DataItem SAASUB3 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date century
DataItem SAAWCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date day
DataItem SAAWDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date
DataItem SAAWDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date month
DataItem SAAWMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date yymmdd
DataItem SAAWYMD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date year
DataItem SAAWYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sls anal agency/rep rec group
DataItem SAEGROUP char(83)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sls anal agy hist rec group
DataItem SAFGROUP char(103)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SAP-DLVR-SUB-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// agencies entered flag
DataItem SAWAGYEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// customers entered flag
DataItem SAWCSTEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem SAWDATA char(1384)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// enter flags
DataItem SAWFLAGS char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem SAWGROUP char(1459)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parm loop array
DataItem SAWPRMLP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// reps entered flag
DataItem SAWREPEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// state/cnty entered flag
DataItem SAWSCTEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sls prog entered flag
DataItem SAWSPGEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sub-parm loop array
DataItem SAWSPMLP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// styles entered flag
DataItem SAWSTYEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// acct classes entered flag
DataItem SAWXAUEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// body type entered flag
DataItem SAWXBTEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// const cat entered flag
DataItem SAWXCNEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// country entered flag
DataItem SAWXCTEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// division entered flag
DataItem SAWXDVEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// special features ent flag
DataItem SAWXFCEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// family code entered flag
DataItem SAWXFMEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gender/age entered flag
DataItem SAWXGAEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc code
DataItem SAWXGPCD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// gpc's entered flag
DataItem SAWXGPEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// life cycle entered flag
DataItem SAWXLCEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xl rsn entered flag
DataItem SAWXMREF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nat'l acct id entered
DataItem SAWXNAEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nike image entered flag
DataItem SAWXNIEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ord types entered flag
DataItem SAWXOTEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product categories entered
DataItem SAWXPCEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product type entered flag
DataItem SAWXPREF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// quality entered flag
DataItem SAWXQAEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// special grps entered flag
DataItem SAWXSGEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sport activity ent flag
DataItem SAWXSPEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// silhouette entered flag
DataItem SAWXSUEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// call class entered flag
DataItem SAWYCLEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sls category entered flag
DataItem SAWYSCEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store class entered flag
DataItem SAWYSVEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// zip code entered flag
DataItem SAWZIPEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

