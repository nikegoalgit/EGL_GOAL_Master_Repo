package pv.common;
import corpcom1.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sl.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** RECORD=PV0AW01 ****
//    This record contains the working storage fields that
// are unique to the application PV0A - online coding.
// 08-05-94 bcourt  Change pv0awlit # line items from 200 to
//                  300.  Invoice af760094 had 213.
//                  pv0a abended with purple lines, code 1006.
// 08-10-94 bcourt  Add max field = 300, replace hard coding.
// 08-19-94 bcourt  Change from num(3) to bin(4) to match new
//                  pvwrec.pvwlinex:  pv0aw1st, pv0awlim,
//                  pv0awcln, pv0awlin.  Also see pvwec.
//                  Note that moving 300 to num field left it
//                  unsigned so did not compare well.
//                  Since pv0aw01 is set empty in many places,
//                  move pv0awmax to pv0aw02 record.
// 03-03-96 bbasha  added ni0lw-gcoa-message, ni0lw-gcoa-text,
//                  ni0lw-gcoa-key.
// ***********************
Record PV0AW01 type basicRecord
  5 PV0AWTOT PV0AWTOT ; 
    10 PV0AWICG PV0AWICG ; 
    10 PV0AWIIV PV0AWIIV ; 
    10 PV0AWIOS PV0AWIOS ; 
    10 PV0AWIFB PV0AWIFB ; 
    10 PV0AWTFR PV0AWTFR ; 
    10 PV0AWIAD PV0AWIAD ; 
    10 PV0AWIIT PV0AWIIT ; 
    10 PV0AWIOC PV0AWIOC ; 
    10 PV0AWIPV PV0AWIPV ; 
    10 PV0AWSUB PV0AWSUB ; 
  5 PV0AWHD1 PV0AWHD1 ; 
  5 PV0AWHD2 PV0AWHD2 ; 
  5 PV0AWQTY PV0AWQTY ; 
  5 PV0AWADD PV0AWADD ; 
  5 PV0AW1ST PV0AW1ST ; 
  5 PV0AWDEL PV0AWDEL ; 
  5 PV0AWSCF PV0AWSCF ; 
  5 PV0AWBMF PV0AWBMF ; 
  5 PV0AWUPF PV0AWUPF ; 
  5 PV0AWUP2 PV0AWUP2 ; 
  5 PV0AWUP3 PV0AWUP3 ; 
  5 PV0AWWNF PV0AWWNF ; 
  5 PV0AWCAF PV0AWCAF ; 
  5 PV0AWCRC PV0AWCRC ; 
  5 PV0AWPAF PV0AWPAF ; 
  5 PV0AWPA2 PV0AWPA2 ; 
  5 PV0AWFLL PV0AWFLL ; 
  5 PV0AWERR PV0AWERR ; 
  5 PV0AWFF PV0AWFF ; 
  5 PV0AWHDF PV0AWHDF ; 
  5 PV0AWSTF PV0AWSTF ; 
  5 PV0AWMDF PV0AWMDF ; 
  5 PV0AWKEY PV0AWKEY ; 
  5 PV0AWADF PV0AWADF ; 
  5 PV0AWLFO PV0AWLFO ; 
  5 PV0AWDTY PV0AWDTY ; 
  5 PV0AWLIN PV0AWLIN ; 
  5 PV0AWLIM PV0AWLIM ; 
  5 PV0AWCLN PV0AWCLN ; 
  5 PV0AWBGD PV0AWBGD ; 
  5 PV0AWLIT PV0AWLIT [300] ; 
    10 PV0AWLDT PV0AWLDT ; 
      15 PV0AWEDT PV0AWEDT ; 
      15 PV0AWMKF PV0AWMKF ; 
      15 PV0AWOSF PV0AWOSF ; 
      15 PV0AWLEF PV0AWLEF ; 
      15 PVBLNINB PVBLNINB ; 
      15 PC3PONBR PC3PONBR ; 
      15 FY1FCTYC FY1FCTYC ; 
      15 XGPCD XGPCD ; 
      15 XWHCD XWHCD ; 
      15 SY1STNBR SY1STNBR ; 
      15 SY1SSTNM SY1SSTNM ; 
      15 SY2CLRID SY2CLRID ; 
      15 PVBLNQTY PVBLNQTY ; 
      15 PCMOSQTY PCMOSQTY ; 
      15 PVBLNFOB PVBLNFOB ; 
      15 PVBLNCOM PVBLNCOM ; 
      15 PVBLNDTY PVBLNDTY ; 
      15 XUMCD XUMCD ; 
      15 PC2CUXID PC2CUXID ; 
      15 PVBLNAMT PVBLNAMT ; 
      15 XSECD XSECD ; 
      15 PCFSEYR PCFSEYR ; 
      15 YSRSLSRG YSRSLSRG ; 
      15 XDSCD XDSCD ; 
      15 YMTCD YMTCD ; 
      15 ZZZSDT ZZZSDT ; 
    10 PV0AWCLC PV0AWCLC ; 
      15 XQACD XQACD ; 
      15 XDMCD XDMCD ; 
      15 PC2INSEG PC2INSEG ; 
      15 XPGCD XPGCD ; 
      15 PVBCONTN PVBCONTN ; 
      15 PVBBSZDS PVBBSZDS ; 
      15 PVBESZDS PVBESZDS ; 
      15 PVBBSZNK PVBBSZNK ; 
      15 PVBESZNK PVBESZNK ; 
      15 PV0AWADV PV0AWADV ; 
      15 PV0AWACM PV0AWACM ; 
      15 PV0AWSCM PV0AWSCM ; 
      15 PV0AWCMV PV0AWCMV ; 
      15 PV0AWSFR PV0AWSFR ; 
      15 PV0AWVFR PV0AWVFR ; 
      15 PV0AWRFR PV0AWRFR ; 
      15 PV0AWOFR PV0AWOFR ; 
      15 PV0AWSPR PV0AWSPR ; 
      15 PV0AWPPV PV0AWPPV ; 
      15 PV0AWSPL PV0AWSPL ; 
      15 PV0AWQUO PV0AWQUO ; 
      15 PV0AWADP PV0AWADP ; 
      15 PV0AWAD1 PV0AWAD1 ; 
      15 PV0AWAD2 PV0AWAD2 ; 
      15 PV0AWSDP PV0AWSDP ; 
      15 PV0AWACR PV0AWACR ; 
      15 PV0AWABC PV0AWABC ; 
      15 PV0AWSBC PV0AWSBC ; 
      15 PV0AWBCV PV0AWBCV ; 
      15 PV0AWLUF PV0AWLUF ; 
      15 PV0AWLFA PV0AWLFA ; 
      15 PV0AWAFV PV0AWAFV ; 
      15 PV0AWVFV PV0AWVFV ; 
      15 PV0AWITT PV0AWITT ; 
      15 PV0AWBCA PV0AWBCA ; 
      15 PV0AWOCV PV0AWOCV ; 
      15 PV0AWAM1 PV0AWAM1 ; 
      15 PV0AWOTW PV0AWOTW ; 
      15 PV0AWFRV PV0AWFRV ; 
  5 PV0AW-GCOA-MESSAGE PV0AW-GCOA-MESSAGE ; 
    10 PV0AW-GCOA-TEXT PV0AW-GCOA-TEXT ; 
    10 PV0AW-GCOA-KEY PV0AW-GCOA-KEY ; 
  5 PV0AW-NLXERRF PV0AW-NLXERRF ; 
  5 PV0AW-NLXCPROC PV0AW-NLXCPROC ; 
  5 PV0AW-GCOA-NOT-FOUND PV0AW-GCOA-NOT-FOUND ; 
  5 PV0AW-GCOA-MESSAGE-2 PV0AW-GCOA-MESSAGE-2 ; 
    10 PV0AW-GCOA-TEXT-2 PV0AW-GCOA-TEXT-2 ; 
    10 PV0AW-GCOA-KEY-2 PV0AW-GCOA-KEY-2 ; 
  5 PV0AW-NUMBER-TEST PV0AW-NUMBER-TEST ; 
  5 PV0AW-CHAR-TEST PV0AW-CHAR-TEST ; 
  5 PV0AW-CHG-MSG PV0AW-CHG-MSG ; 
    10 PV0AW-CHG-MSG-TITLE PV0AW-CHG-MSG-TITLE ; 
    10 PV0AW-CHG-MSG-QTY-DESC PV0AW-CHG-MSG-QTY-DESC ; 
    10 PV0AW-CHG-MSG-QTY-AMT PV0AW-CHG-MSG-QTY-AMT ; 
    10 PV0AW-CHG-MSG-FOB-DESC PV0AW-CHG-MSG-FOB-DESC ; 
    10 PV0AW-CHG-MSG-FOB-DLR PV0AW-CHG-MSG-FOB-DLR ; 
    10 PV0AW-CHG-MSG-FOB-DOT PV0AW-CHG-MSG-FOB-DOT ; 
    10 PV0AW-CHG-MSG-FOB-CNT PV0AW-CHG-MSG-FOB-CNT ; 
    10 PV0AW-CHG-MSG-DUTY-DESC PV0AW-CHG-MSG-DUTY-DESC ; 
    10 PV0AW-CHG-MSG-DUTY-DLR PV0AW-CHG-MSG-DUTY-DLR ; 
    10 PV0AW-CHG-MSG-DUTY-DOT PV0AW-CHG-MSG-DUTY-DOT ; 
    10 PV0AW-CHG-MSG-DUTY-CNT PV0AW-CHG-MSG-DUTY-CNT ; 
    10 PV0AW-CHG-MSG-COMM-DESC PV0AW-CHG-MSG-COMM-DESC ; 
    10 PV0AW-CHG-MSG-COMM-DLR PV0AW-CHG-MSG-COMM-DLR ; 
    10 PV0AW-CHG-MSG-COMM-DOT PV0AW-CHG-MSG-COMM-DOT ; 
    10 PV0AW-CHG-MSG-COMM-CNT PV0AW-CHG-MSG-COMM-CNT ; 
  5 PV0AW-CHG-MSG-WORK-CHAR1 PV0AW-CHG-MSG-WORK-CHAR1 ; 
    10 PV0AW-CHG-MSG-WORK PV0AW-CHG-MSG-WORK ; 
  5 PV0AW-CHG-MSG-WORK-CHAR2 PV0AW-CHG-MSG-WORK-CHAR2 ; 
    10 PV0AW-CHG-MSG-WK-DLR PV0AW-CHG-MSG-WK-DLR ; 
      15 PV0AW-CHG-MSG-WK-DLR-CHAR PV0AW-CHG-MSG-WK-DLR-CHAR [7] ; 
    10 PV0AW-CHG-MSG-WK-CNT PV0AW-CHG-MSG-WK-CNT ; 
end // end PV0AW01

//*** RECORD=PV0AW02 ****
//    This record contains the working storage fields that
// are unique to the application Pv0A - online coding.
// 
// Maintenance log:
// 08-19-94 BCourt  Add pv0awmax, init in pv0as00, see pv0aw01.
// 11-18-97 NJana   Add pv0adt3,pv0adt4 group variable for
//                  century field(Y2K validation)
// 01-25-01 BPARAN  Add PV0AW-XIP-IVC-STAT-CD and
//                  PV0AM-NEW-FRIEGHT-MODIFIED for non L/C
//                  changes and total invc amt changes respect-
//                  -ively
// ***********************
Record PV0AW02 type basicRecord
  5 PV0AWMDF PV0AWMDF ; 
  5 PV0AWOSF PV0AWOSF ; 
  5 PV0AWFYF PV0AWFYF ; 
  5 PV0AWSZF PV0AWSZF ; 
  5 PV0AWEDF PV0AWEDF ; 
  5 PV0AWLLF PV0AWLLF ; 
  5 PV0AWBLD PV0AWBLD ; 
  5 PV0AWSCP PV0AWSCP ; 
  5 XSTCD XSTCD ; 
  5 PV0AWIDX PV0AWIDX ; 
  5 PV0AWFYX PV0AWFYX ; 
  5 PV0AWID2 PV0AWID2 ; 
  5 PV0AWIMX PV0AWIMX ; 
  5 PV0AWSIX PV0AWSIX ; 
  5 PV0AWLRX PV0AWLRX ; 
  5 PV0AWQY PV0AWQY ; 
  5 PV0AWINV PV0AWINV ; 
  5 PV0AW1DA PV0AW1DA ; 
  5 PV0AW1DB PV0AW1DB ; 
  5 PV0AW1DC PV0AW1DC ; 
  5 PV0AW1DD PV0AW1DD ; 
  5 PV0AW1DE PV0AW1DE ; 
  5 PV0AW1DG PV0AW1DG ; 
  5 PV0AWMT PV0AWMT ; 
  5 PV0AWFYP PV0AWFYP [50] ; 
    10 XUMCD XUMCD ; 
    10 PV0AWCDF PV0AWCDF ; 
    10 PCMIVQTY PCMIVQTY ; 
  5 PV0AWDTE PV0AWDTE ; 
    10 PV0AWCEN PV0AWCEN ; 
    10 PV0AWYR PV0AWYR ; 
    10 PV0AWMTH PV0AWMTH ; 
    10 PV0AWDAY PV0AWDAY ; 
  5 PV0AWDT2 PV0AWDT2 ; 
    10 PV0AWCN2 PV0AWCN2 ; 
    10 PV0AWMT2 PV0AWMT2 ; 
    10 PV0AWDA2 PV0AWDA2 ; 
    10 PV0AWYR2 PV0AWYR2 ; 
  5 PV0AWDT1 PV0AWDT1 ; 
    10 PV0AWCN1 PV0AWCN1 ; 
    10 PV0AWMT1 PV0AWMT1 ; 
    10 PV0AWDA1 PV0AWDA1 ; 
    10 PV0AWYR1 PV0AWYR1 ; 
  5 PV0AWDT3 PV0AWDT3 ; 
    10 PV0AWCN3 PV0AWCN3 ; 
    10 PV0AWYR3 PV0AWYR3 ; 
    10 PV0AWMT3 PV0AWMT3 ; 
    10 PV0AWDA3 PV0AWDA3 ; 
  5 PV0AWDT4 PV0AWDT4 ; 
    10 PV0AWCN4 PV0AWCN4 ; 
    10 PV0AWYR4 PV0AWYR4 ; 
    10 PV0AWMT4 PV0AWMT4 ; 
    10 PV0AWDA4 PV0AWDA4 ; 
  5 PV0AWMAX PV0AWMAX ; 
  5 PV0AWCDT PV0AWCDT ; 
  5 XIP-IVC-STAT-CD XIP-IVC-STAT-CD ; 
  5 PV0AW-XIP-IVC-STAT-CD PV0AW-XIP-IVC-STAT-CD ; 
  5 TA2TIME TA2TIME ; 
    10 TA2TIMEN TA2TIMEN ; 
      15 TA2TIMHM TA2TIMHM ; 
      15 TA2TIMSS TA2TIMSS ; 
  5 PVADSCT PVADSCT ; 
  5 PVABANKC PVABANKC ; 
  5 PVAINT1 PVAINT1 ; 
  5 PVAINT2 PVAINT2 ; 
  5 PVAINT3 PVAINT3 ; 
  5 PVATCOMM PVATCOMM ; 
  5 PVAOCHG1 PVAOCHG1 ; 
  5 PVAOCHG2 PVAOCHG2 ; 
  5 PVASCHG1 PVASCHG1 ; 
  5 PVASCHG2 PVASCHG2 ; 
  5 PVABRKRY PVABRKRY ; 
  5 PV0AW-FAN-FIRST-TIME PV0AW-FAN-FIRST-TIME ; 
  5 PV0AW-SAME-FOB-PMT-FL PV0AW-SAME-FOB-PMT-FL ; 
  5 PV0AW-DIFF-FOB-PMT-FL PV0AW-DIFF-FOB-PMT-FL ; 
  5 PV0AW-SAME-DUTY-PMT-FL PV0AW-SAME-DUTY-PMT-FL ; 
  5 PV0AW-DIFF-DUTY-PMT-FL PV0AW-DIFF-DUTY-PMT-FL ; 
  5 PV0AW-SAME-FRGT-PMT-FL PV0AW-SAME-FRGT-PMT-FL ; 
  5 PV0AW-DIFF-FRGT-PMT-FL PV0AW-DIFF-FRGT-PMT-FL ; 
  5 PV0AW-SAME-FREIGHT-AMT PV0AW-SAME-FREIGHT-AMT ; 
  5 PV0AW-DIFF-FREIGHT-AMT PV0AW-DIFF-FREIGHT-AMT ; 
  5 PV0AW-ORIG-FRGT-AMT PV0AW-ORIG-FRGT-AMT ; 
  5 PV0AW-SAME-DA-PMT-FL PV0AW-SAME-DA-PMT-FL ; 
  5 PV0AW-DIFF-DA-PMT-FL PV0AW-DIFF-DA-PMT-FL ; 
  5 PV0AW-SAME-BC-PMT-FL PV0AW-SAME-BC-PMT-FL ; 
  5 PV0AW-DIFF-BC-PMT-FL PV0AW-DIFF-BC-PMT-FL ; 
  5 PV0AW-SAME-BF-PMT-FL PV0AW-SAME-BF-PMT-FL ; 
  5 PV0AW-DIFF-BF-PMT-FL PV0AW-DIFF-BF-PMT-FL ; 
  5 PV0AW-SAME-C1-PMT-FL PV0AW-SAME-C1-PMT-FL ; 
  5 PV0AW-DIFF-C1-PMT-FL PV0AW-DIFF-C1-PMT-FL ; 
  5 PV0AW-SAME-C2-PMT-FL PV0AW-SAME-C2-PMT-FL ; 
  5 PV0AW-DIFF-C2-PMT-FL PV0AW-DIFF-C2-PMT-FL ; 
  5 PV0AW-SAME-C3-PMT-FL PV0AW-SAME-C3-PMT-FL ; 
  5 PV0AW-DIFF-C3-PMT-FL PV0AW-DIFF-C3-PMT-FL ; 
  5 PV0AW-SAME-C4-PMT-FL PV0AW-SAME-C4-PMT-FL ; 
  5 PV0AW-DIFF-C4-PMT-FL PV0AW-DIFF-C4-PMT-FL ; 
  5 PV0AW-SAME-I1-PMT-FL PV0AW-SAME-I1-PMT-FL ; 
  5 PV0AW-DIFF-I1-PMT-FL PV0AW-DIFF-I1-PMT-FL ; 
  5 PV0AW-SAME-I2-PMT-FL PV0AW-SAME-I2-PMT-FL ; 
  5 PV0AW-DIFF-I2-PMT-FL PV0AW-DIFF-I2-PMT-FL ; 
  5 PV0AW-SAME-I3-PMT-FL PV0AW-SAME-I3-PMT-FL ; 
  5 PV0AW-DIFF-I3-PMT-FL PV0AW-DIFF-I3-PMT-FL ; 
  5 PV0AW-SAME-CM-PMT-FL PV0AW-SAME-CM-PMT-FL ; 
  5 PV0AW-DIFF-CM-PMT-FL PV0AW-DIFF-CM-PMT-FL ; 
  5 PV0AW-DETAIL-UPDATED-FL PV0AW-DETAIL-UPDATED-FL ; 
  5 PV0AW-TRANSPORTATION-REQ-FL PV0AW-TRANSPORTATION-REQ-FL ; 
  5 PV0AW-NEW-INVOICE-FL PV0AW-NEW-INVOICE-FL ; 
  5 PV0AW-FIRST-TIME-TR0H-FL PV0AW-FIRST-TIME-TR0H-FL ; 
  5 PV0AW-FIRST-TIME-QTY-MSG PV0AW-FIRST-TIME-QTY-MSG ; 
  5 PV0AW-FIRST-TIME-FOB-MSG PV0AW-FIRST-TIME-FOB-MSG ; 
  5 PV0AW-FIRST-TIME-DUTY-MSG PV0AW-FIRST-TIME-DUTY-MSG ; 
  5 PV0AW-STAT-CHG-NP-IP-FL PV0AW-STAT-CHG-NP-IP-FL ; 
  5 PV0AW-SENT-FOB-PMT-FL PV0AW-SENT-FOB-PMT-FL ; 
  5 PV0AW-SENT-DUTY-PMT-FL PV0AW-SENT-DUTY-PMT-FL ; 
  5 PV0AW-SENT-FRGT-PMT-FL PV0AW-SENT-FRGT-PMT-FL ; 
  5 PV0AW-SENT-DA-PMT-FL PV0AW-SENT-DA-PMT-FL ; 
  5 PV0AW-SENT-BC-PMT-FL PV0AW-SENT-BC-PMT-FL ; 
  5 PV0AW-SENT-BF-PMT-FL PV0AW-SENT-BF-PMT-FL ; 
  5 PV0AW-SENT-C1-PMT-FL PV0AW-SENT-C1-PMT-FL ; 
  5 PV0AW-SENT-C2-PMT-FL PV0AW-SENT-C2-PMT-FL ; 
  5 PV0AW-SENT-C3-PMT-FL PV0AW-SENT-C3-PMT-FL ; 
  5 PV0AW-SENT-C4-PMT-FL PV0AW-SENT-C4-PMT-FL ; 
  5 PV0AW-SENT-I1-PMT-FL PV0AW-SENT-I1-PMT-FL ; 
  5 PV0AW-SENT-I2-PMT-FL PV0AW-SENT-I2-PMT-FL ; 
  5 PV0AW-SENT-I3-PMT-FL PV0AW-SENT-I3-PMT-FL ; 
  5 PV0AW-SENT-CM-PMT-FL PV0AW-SENT-CM-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-FOB-PMT-FL PV0AW-OTHR-VNDR-FOB-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-DUTY-PMT-FL PV0AW-OTHR-VNDR-DUTY-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-FRGT-PMT-FL PV0AW-OTHR-VNDR-FRGT-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-DA-PMT-FL PV0AW-OTHR-VNDR-DA-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-BC-PMT-FL PV0AW-OTHR-VNDR-BC-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-BF-PMT-FL PV0AW-OTHR-VNDR-BF-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-C1-PMT-FL PV0AW-OTHR-VNDR-C1-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-C2-PMT-FL PV0AW-OTHR-VNDR-C2-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-C3-PMT-FL PV0AW-OTHR-VNDR-C3-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-C4-PMT-FL PV0AW-OTHR-VNDR-C4-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-I1-PMT-FL PV0AW-OTHR-VNDR-I1-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-I2-PMT-FL PV0AW-OTHR-VNDR-I2-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-I3-PMT-FL PV0AW-OTHR-VNDR-I3-PMT-FL ; 
  5 PV0AW-OTHR-VNDR-CM-PMT-FL PV0AW-OTHR-VNDR-CM-PMT-FL ; 
  5 PV0AM-NEW-FRIEGHT-MODIFIED PV0AM-NEW-FRIEGHT-MODIFIED ; 
end // end PV0AW02

//*** RECORD=PV0AW03 ****
// This record contains the working storage fields that
// are unique to the application PV0A -
// ***********************
Record PV0AW03 type basicRecord
  5 PV0AWOS1 PV0AWOS1 ; 
  5 PV0AWOS2 PV0AWOS2 ; 
  5 PV0AWOS3 PV0AWOS3 ; 
  5 PV0AWOST PV0AWOST ; 
end // end PV0AW03

//*** RECORD=PV0AW04 ****
// ************************************************************
// *   RECORD CONTAINS ONE FIELD - PV0BW-DBIO-FUNCTION *
// *                                                          *
// *   THE USE OF THIS RECORD IN THE DATABASE CALLS ALLOWS    *
// *   THE APPLICATION TO BE CODED WITH JUST ONE CALL TO      *
// *   EACH IOMOD. THE ONE CALL WILL HANDLE ANY FUNCTION CODE *
// *   AS LONG AS THE VALUE IS MOVED TO THE FUNCTION FIELD    *
// *   IN THIS RECORD BEFORE THE IOMOD ROUTINE IS USED.       *
// *                                                          *
// ************************************************************
// *    M A I N T E N A N C E    H I S T O R Y    L O G       *
// *----------------------------------------------------------*
// *   DATE    PGMR    DESCRIPTION                            *
// *----------------------------------------------------------*
// * 10-19-99  gdecke  ADD FOR CALL TO VPVPMT01 CALL IN PV0A  *
// ************************************************************
// ***********************
Record PV0AW04 type basicRecord
  5 PV0AW-DBIO-FUNCTION PV0AW-DBIO-FUNCTION ; 
end // end PV0AW04

//*** RECORD=PV0BW01 ****
// ************************************************************
// *  PV0BW01 - WORKING STORAGE RECORD FOR PV0B APPLICATION   *
// *            MISCELLANEOUS FIELDS - INDEXES, FLAGS, ETC.   *
// *                                                          *
// *                                                          *
// ************************************************************
// Maintenance Log:                                           *
//                                                            *
//   Date   Init   Proj#       C o m m e n t s                *
// -------- ------ -----  -------------------------------------
// 10-05-99 GDECKE        Initial Construction                *
// 01-16-01 BPARAN        Included the variable PV0BWIX6      *
// ************************************************************
// ***********************
Record PV0BW01 type basicRecord
  5 PV0BW-PV0BW01-GROUP PV0BW-PV0BW01-GROUP ; 
    10 VAGen_SQLCODE VAGen_SQLCODE ; 
    10 PV0BWMAP PV0BWMAP ; 
    10 PV0BWLST PV0BWLST ; 
    10 PV0BWPRV PV0BWPRV ; 
    10 PV0BWMAX PV0BWMAX ; 
    10 PV0BWMAX-MAP3 PV0BWMAX-MAP3 ; 
    10 PV0BWNUM PV0BWNUM ; 
    10 PV0BW-CALC-TOLERANCE PV0BW-CALC-TOLERANCE ; 
    10 PV0BWTOP PV0BWTOP ; 
    10 PV0BWTOP-MAP3 PV0BWTOP-MAP3 ; 
    10 PV0BWBOT PV0BWBOT ; 
    10 PV0BWBOT-MAP3 PV0BWBOT-MAP3 ; 
    10 PV0BWCNT PV0BWCNT ; 
    10 PV0BWCNT-MAP3 PV0BWCNT-MAP3 ; 
    10 PV0BWCUR PV0BWCUR ; 
    10 PV0BWCUR-MAP3 PV0BWCUR-MAP3 ; 
    10 PV0BWSCP PV0BWSCP ; 
    10 PV0BWIMX PV0BWIMX ; 
    10 PV0BWIDX PV0BWIDX ; 
    10 PV0BWIX2 PV0BWIX2 ; 
    10 PV0BWIX3 PV0BWIX3 ; 
    10 PV0BWIX4 PV0BWIX4 ; 
    10 PV0BWIX5 PV0BWIX5 ; 
    10 PV0BW-FIELD-CT PV0BW-FIELD-CT ; 
    10 PV-IVC-ID PV-IVC-ID ; 
    10 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
    10 PV-MSA-VEND-GRP PV-MSA-VEND-GRP ; 
    10 PV-PMT-VEND-NM PV-PMT-VEND-NM ; 
    10 PV-PMT-VEND-NBR PV-PMT-VEND-NBR ; 
    10 PV-PMT-VEND-GRP PV-PMT-VEND-GRP ; 
    10 PV-PMT-VEND-IVC-ID PV-PMT-VEND-IVC-ID ; 
    10 PV0BW-SELECT-LINE-COUNT PV0BW-SELECT-LINE-COUNT ; 
    10 PV0BW-TOTAL-FOB-AMOUNT PV0BW-TOTAL-FOB-AMOUNT ; 
    10 PV0BW-TOTAL-DUTY-AMOUNT PV0BW-TOTAL-DUTY-AMOUNT ; 
    10 PV0BW-TOTAL-FRGT-AMOUNT PV0BW-TOTAL-FRGT-AMOUNT ; 
    10 PV-IVC-AMT PV-IVC-AMT ; 
    10 PV-IVC-TOT-FRGT PV-IVC-TOT-FRGT ; 
    10 PV-IVC-DSCT-AMT PV-IVC-DSCT-AMT ; 
    10 PV-NISSHO-BANK-CHG PV-NISSHO-BANK-CHG ; 
    10 PV-NISSHO-FOB-AMT PV-NISSHO-FOB-AMT ; 
    10 PV-NISSHO-TOT-DTY PV-NISSHO-TOT-DTY ; 
    10 PV-NISSHO-BRKR-CHG PV-NISSHO-BRKR-CHG ; 
    10 PV-NISSHO-OTH-CHG1 PV-NISSHO-OTH-CHG1 ; 
    10 PV-NISSHO-OTH-CHG2 PV-NISSHO-OTH-CHG2 ; 
    10 PV-NISSHO-SUB-CHG1 PV-NISSHO-SUB-CHG1 ; 
    10 PV-NISSHO-SUB-CHG2 PV-NISSHO-SUB-CHG2 ; 
    10 PV-NISSHO-INT-CHG1 PV-NISSHO-INT-CHG1 ; 
    10 PV-NISSHO-INT-CHG2 PV-NISSHO-INT-CHG2 ; 
    10 PV-NISSHO-INT-CHG3 PV-NISSHO-INT-CHG3 ; 
    10 PV-NISSHO-COMM-AMT PV-NISSHO-COMM-AMT ; 
    10 PV0BW-PREV-CANCEL-FL PV0BW-PREV-CANCEL-FL ; 
    10 PV0BW-LC-TOTALS-BY-BANK PV0BW-LC-TOTALS-BY-BANK ; 
      15 PV-LN-ITM-QTY PV-LN-ITM-QTY ; 
      15 PV-LN-UNT-FOB-AMT PV-LN-UNT-FOB-AMT ; 
      15 PV-LN-UNT-COMM-AMT PV-LN-UNT-COMM-AMT ; 
      15 PV-NISSHO-LN-DTY PV-NISSHO-LN-DTY ; 
      15 PV0BW-SUM-FCTY-DSCT PV0BW-SUM-FCTY-DSCT ; 
      15 PV0BW-CURR-IBANK-CD PV0BW-CURR-IBANK-CD ; 
      15 XIB-IBANK-CD XIB-IBANK-CD [30] ; 
      15 PV-LC-ITM-QTY PV-LC-ITM-QTY [30] ; 
      15 PV-LC-UNT-FOB-AMT PV-LC-UNT-FOB-AMT [30] ; 
      15 PV-LC-UNT-COMM-AMT PV-LC-UNT-COMM-AMT [30] ; 
      15 PV-NISSHO-LC-DTY PV-NISSHO-LC-DTY [30] ; 
      15 PV0BW-SUM-BANK-DSCT PV0BW-SUM-BANK-DSCT [30] ; 
    10 PV0BW-LINE-IS-LC-FL PV0BW-LINE-IS-LC-FL ; 
    10 PV0BW-FOB-LC-FACTOR PV0BW-FOB-LC-FACTOR ; 
    10 PV0BW-COMM-LC-FACTOR PV0BW-COMM-LC-FACTOR ; 
    10 PV0BW-DUTY-LC-FACTOR PV0BW-DUTY-LC-FACTOR ; 
    10 PV0BW-QTY-LC-FACTOR PV0BW-QTY-LC-FACTOR ; 
    10 PV0BW-UPDATE-HEADER-FL PV0BW-UPDATE-HEADER-FL ; 
    10 PV0BW-FRGT-PMT-STAT PV0BW-FRGT-PMT-STAT ; 
    10 PV0BW-FOB-PMT-STAT PV0BW-FOB-PMT-STAT ; 
    10 PV0BW-DUTY-PMT-STAT PV0BW-DUTY-PMT-STAT ; 
    10 PV0BW-FORCE-PAY-FL PV0BW-FORCE-PAY-FL ; 
    10 PV0BW-FISCAL-MONTH PV0BW-FISCAL-MONTH ; 
      15 PV0BW-FISCAL-FILLER PV0BW-FISCAL-FILLER ; 
      15 PV0BW-FISCAL-CC PV0BW-FISCAL-CC ; 
      15 PV0BW-FISCAL-YYMM PV0BW-FISCAL-YYMM ; 
    10 PV0BW-FRGT-DBT-STAT PV0BW-FRGT-DBT-STAT ; 
    10 PV0BW-DUTY-DBT-STAT PV0BW-DUTY-DBT-STAT ; 
    10 PV0BW-BROK-DBT-STAT PV0BW-BROK-DBT-STAT ; 
    10 PV0BW-LCRED-DBT-STAT PV0BW-LCRED-DBT-STAT ; 
  5 PV0BWIX6 PV0BWIX6 ; 
end // end PV0BW01

//*** RECORD=PV0BW02 ****
// ************************************************************
// *  PV0BW02 - WORKING STORAGE RECORD ALL DATA DISPLAYED ON  *
// *            MAP PV0BM002 - FACTORY INVOICE SELECTION LIST.*
// *                                                          *
// ************************************************************
// Maintenance Log:                                           *
//                                                            *
//   Date   Init   Proj#       C o m m e n t s                *
// -------- ------ -----  -------------------------------------
// 10-05-99 GDECKE        Initial Construction                *
// ************************************************************
// ***********************
Record PV0BW02 type basicRecord
  5 PV0BW-PV0BW02-GROUP PV0BW-PV0BW02-GROUP ; 
    7 PV0BW-MAP2-LINE-GROUP PV0BW-MAP2-LINE-GROUP [1000] ; 
      10 PV0BW-SELECT-FLAG PV0BW-SELECT-FLAG ; 
      10 PV-IVC-ID PV-IVC-ID ; 
      10 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
      10 PV-MSA-VEND-GRP PV-MSA-VEND-GRP ; 
end // end PV0BW02

//*** RECORD=PV0BW03 ****
// ************************************************************
// *  PV0BW02 - WORKING STORAGE RECORD ALL DATA DISPLAYED ON  *
// *            MAP PV0BM003 - PAYMENT DETAILS SCREEN.        *
// *                                                          *
// ************************************************************
// Maintenance Log:                                           *
//                                                            *
//   Date   Init   Proj#       C o m m e n t s                *
// -------- ------ -----  -------------------------------------
// 10-05-99 GDECKE        Initial Construction                *
// ************************************************************
// ***********************
Record PV0BW03 type basicRecord
  5 PV0BW-PV0BW03-GROUP PV0BW-PV0BW03-GROUP ; 
    7 PV0BW-MAP3-LINE-GROUP1 PV0BW-MAP3-LINE-GROUP1 [1400] ; 
      10 PV-IVC-ID PV-IVC-ID ; 
      10 PV-MSA-VEND-GRP PV-MSA-VEND-GRP ; 
      10 XPV-IVC-TYP-CD XPV-IVC-TYP-CD ; 
      10 XIP-IVC-STAT-CD XIP-IVC-STAT-CD ; 
end // end PV0BW03

//*** RECORD=PV0BW04 ****
// ************************************************************
// *  PV0BW02 - WORKING STORAGE RECORD ALL DATA DISPLAYED ON  *
// *            MAP PV0BM003 - PAYMENT DETAILS SCREEN.        *
// *                                                          *
// ************************************************************
// Maintenance Log:                                           *
//                                                            *
//   Date   Init   Proj#       C o m m e n t s                *
// -------- ------ -----  -------------------------------------
// 10-05-99 GDECKE        Initial Construction                *
// 01-16-01 BPARAN        Included the variable               *
//                        PV0BW-ARR-MOV-FL                    *
// ************************************************************
// ***********************
Record PV0BW04 type basicRecord
  5 PV0BW-PV0BW03-GROUP PV0BW-PV0BW03-GROUP ; 
    7 PV0BW-MAP3-LINE-GROUP2 PV0BW-MAP3-LINE-GROUP2 [1400] ; 
      10 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
      10 PV-PMT-IVC-AMT PV-PMT-IVC-AMT ; 
      10 PV-IVC-TO-AP-DT PV-IVC-TO-AP-DT ; 
  5 PV0BW-SELEC-LIN-FL PV0BW-SELEC-LIN-FL ; 
  5 PVOBW-ERR-MSG-FL PVOBW-ERR-MSG-FL ; 
  5 PV0BW-ARR-MOV-FL PV0BW-ARR-MOV-FL ; 
end // end PV0BW04

Record PV0BW05 type basicRecord
  5 PV0BW-PV0BW05-GROUP PV0BW-PV0BW05-GROUP ; 
    7 PV0BW-MAP4-LINE-GROUP PV0BW-MAP4-LINE-GROUP [1000] ; 
      10 XPV-IVC-TYP-CD XPV-IVC-TYP-CD ; 
      10 PV-PMT-IVC-AMT PV-PMT-IVC-AMT ; 
      10 PV-IVC-TO-AP-DT PV-IVC-TO-AP-DT ; 
      10 PV-PMT-IVC-DT PV-PMT-IVC-DT ; 
      10 PV-PMT-IVC-DUE-DT PV-PMT-IVC-DUE-DT ; 
      10 ZZ-SDT ZZ-SDT ; 
      10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end PV0BW05

//*** RECORD=PV4050W1 ****
//    THIS RECORD CONTAINS THE WORKING STORAGE FIELDS THAT
// ARE USED BY SUBROUTINE PV3081 TO GET THE 'FAN' CODE.
// THIS IS THE ONLY RECORD THAT IS PASSED TO OR FROM PV3081
// ;
// 08-05-94 GDECKE  NEW RECORD
// ************************
Record PV4050W1 type basicRecord
  5 PV4050W-GROUP-ITEM PV4050W-GROUP-ITEM ; 
    10 PC-PRDCU-ID PC-PRDCU-ID ; 
    10 XWH-WHSE-CD XWH-WHSE-CD ; 
    10 XGP-GPC-CD XGP-GPC-CD ; 
    10 PC-PO-NBR PC-PO-NBR ; 
    10 PV-IVC-ACCT-RSPIND PV-IVC-ACCT-RSPIND ; 
    10 PV4050W-RETURN-CODE PV4050W-RETURN-CODE ; 
    10 PV4050W-FILLER PV4050W-FILLER ; 
end // end PV4050W1

//*** RECORD=PVAREC ****
// csp record for the factory production invoice header
// 
// db2 table: dpinvc.vpvhdr01
// 
// dclgen:    DCL00893
// 
// i/o mod:   io5660
// 
// key to table:     pvovendr
//                   pvovendg
//                   pvaivcid
// 
// maintenance log:
// 
//   who      when         why
// --------  --------  --------------------------------------
// cross     01/31/91  create
// 
// **********************
Record PVAREC type basicRecord
  5 PVAGRP PVAGRP ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVARIVID PVARIVID ; 
    10 XIPCD XIPCD ; 
    10 PVAXIPDT PVAXIPDT ; 
    10 XIVCD XIVCD ; 
    10 PVAACRIN PVAACRIN ; 
    10 PVAIVCDT PVAIVCDT ; 
    10 PVAAPEDT PVAAPEDT ; 
    10 XZCGLEDT XZCGLEDT ; 
    10 PVABTNBR PVABTNBR ; 
    10 PVAFRMIN PVAFRMIN ; 
    10 PVAFRCFL PVAFRCFL ; 
    10 PVAACRSP PVAACRSP ; 
    10 PVASPLFL PVASPLFL ; 
    10 XGPCD XGPCD ; 
    10 PVAFDIND PVAFDIND ; 
    10 PC6XCTCD PC6XCTCD ; 
    10 PVADUEDT PVADUEDT ; 
    10 PVATQTY PVATQTY ; 
    10 PVATFRGT PVATFRGT ; 
    10 PVADSCT PVADSCT ; 
    10 PVAIVAMT PVAIVAMT ; 
    10 PVASPTID PVASPTID ; 
    10 PVAETADT PVAETADT ; 
    10 PVABOLDT PVABOLDT ; 
    10 PVACRELD PVACRELD ; 
    10 PVAINTRT PVAINTRT ; 
    10 PVABANKC PVABANKC ; 
    10 PVABANKP PVABANKP ; 
    10 PVATFOB PVATFOB ; 
    10 PVATDUTY PVATDUTY ; 
    10 PVABRKRY PVABRKRY ; 
    10 PVAOCHG1 PVAOCHG1 ; 
    10 PVAOCHG2 PVAOCHG2 ; 
    10 PVASCHG1 PVASCHG1 ; 
    10 PVASCHG2 PVASCHG2 ; 
    10 PVAINT1 PVAINT1 ; 
    10 PVAINT2 PVAINT2 ; 
    10 PVAINT3 PVAINT3 ; 
    10 PVACOMMP PVACOMMP ; 
    10 PVATCOMM PVATCOMM ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PVAREC

//*** RECORD=PVBREC ****
// csp record for the factory production invoice line items
// 
// db2 table: dpinvc.vpvitm01
// 
// dclgen:    DCL00894
// 
// i/o mod:   io5670
// 
// key to table:     pvovendr
//                   pvovendg
//                   pvaivcid
// maintenance log:
// 
//   who      when         why
// --------  --------  --------------------------------------
// MMALIN    02/15/91  create
// 
// **********************
Record PVBREC type basicRecord
  5 PVBGRP PVBGRP ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVBLNINB PVBLNINB ; 
    10 PC3PONBR PC3PONBR ; 
    10 FY1FCTYC FY1FCTYC ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 PC2INSEG PC2INSEG ; 
    10 XPGCD XPGCD ; 
    10 XUMCD XUMCD ; 
    10 YMTCD YMTCD ; 
    10 XDSCD XDSCD ; 
    10 XSECD XSECD ; 
    10 PCFSEYR PCFSEYR ; 
    10 YSRSLSRG YSRSLSRG ; 
    10 XWHCD XWHCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 PVBCONTN PVBCONTN ; 
    10 PVBBSZDS PVBBSZDS ; 
    10 PVBBSZNK PVBBSZNK ; 
    10 PVBESZDS PVBESZDS ; 
    10 PVBESZNK PVBESZNK ; 
    10 PVBLNQTY PVBLNQTY ; 
    10 PCMOSQTY PCMOSQTY ; 
    10 PVBLNFOB PVBLNFOB ; 
    10 PVBLNCOM PVBLNCOM ; 
    10 PVBLNDTY PVBLNDTY ; 
    10 PVBLNAMT PVBLNAMT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PVBREC

//*** RECORD=PVCREC ****
// csp record for the pv system profitability transactions
// 
// db2 table: dpinvc.vpftrn01
// 
// dclgen:    DCL00895
// 
// i/o mod:   io????
// 
// key to table:     pvovendr
//                   pvovendg
//                   pvaivcid
//                   pvcacrfl
// maintenance log:
// 
//   who      when         why
// --------  --------  --------------------------------------
// cross     01/31/91  create
// 
// **********************
Record PVCREC type basicRecord
  5 PVCGRP PVCGRP ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVCOVRFL PVCOVRFL ; 
    10 XXXUSRID XXXUSRID ; 
    10 XAOCD XAOCD ; 
    10 PVCAETYP PVCAETYP ; 
    10 YISCD YISCD ; 
    10 PVCPSTDT PVCPSTDT ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 PVCMNNBR PVCMNNBR ; 
    10 PVCACAMT PVCACAMT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PVCREC

//*** RECORD=PVDREC ****
// csp record for the pv system gl transactions
// 
// db2 table: dpinvc.vgltrn01
// 
// dclgen:    DCL00896
// 
// i/o mod:   IO5890
// 
// key to table:     pvovendr
//                   pvovendg
//                   pvaivcid
//                   pvcacrfl
// maintenance log:
// 
//   who      when         why
// --------  --------  --------------------------------------
// cross     01/31/91  create
// 
// **********************
Record PVDREC type basicRecord
  5 PVDGRP PVDGRP ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVCAETYP PVCAETYP ; 
    10 GLAENT GLAENT ; 
    10 GLARCID GLARCID ; 
    10 GLANTAC GLANTAC ; 
    10 GLASUB GLASUB ; 
    10 GLAPRJ GLAPRJ ; 
    10 PVCOVRFL PVCOVRFL ; 
    10 XAOCD XAOCD ; 
    10 XXXUSRID XXXUSRID ; 
    10 PVDJENBR PVDJENBR ; 
    10 PVDPRIOD PVDPRIOD ; 
    10 PVDRFNBR PVDRFNBR ; 
    10 PVCACAMT PVCACAMT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PVDREC

//*** RECORD=PVEREC ****
// csp record for the factory production invoice - reciepts
//     from the next month, matched to invoices for the
//     current month audit table
// 
// db2 table: dpinvc.vrused01
// 
// dclgen:    DCL00898
// 
// i/o mod:   io????
// 
// key to table:     ?
// 
// maintenance log:
// 
//   who      when         why
// --------  --------  --------------------------------------
// cross     01/31/91  create
// 
// **********************
Record PVEREC type basicRecord
  5 PVEGRP PVEGRP ; 
    10 PC3PONBR PC3PONBR ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 PC2INSEG PC2INSEG ; 
    10 XPGCD XPGCD ; 
    10 XUMCD XUMCD ; 
    10 PC2CUXID PC2CUXID ; 
    10 SL1RCRNO SL1RCRNO ; 
    10 TSHCNTNR TSHCNTNR ; 
    10 TSHRCTDT TSHRCTDT ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVAIVCDT PVAIVCDT ; 
    10 PVERCQTY PVERCQTY ; 
    10 PV-RUSED-TYP-IND PV-RUSED-TYP-IND ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PVEREC

//*** RECORD=PVFREC ****
// Factory Production Invoice Control Record
// 
// DB2 Table:     DPINVC.VPVCTL01
// 
// DCLGEN:        DCL00897
// 
// I/O Module:    IO5690
// 
// Key To Table:  Single Record
// 
// Maintenance Log:
// 
//   Date   Init   Proj#       C o m m e n t s
// -------- ------ -----  -------------------------------------
// 03-19-91 HVARGA P9999  Initial Construction
// 06-05-92 MHAMIL        DATA BASE CHANGES
// **********************
Record PVFREC type basicRecord
  5 PVFGRP PVFGRP ; 
    10 PVFNXIVC PVFNXIVC ; 
    10 PVFPRCMO PVFPRCMO ; 
    10 PV-1ST-BUS-DT PV-1ST-BUS-DT ; 
    10 PV-AP-CUTOFF-DT PV-AP-CUTOFF-DT ; 
    10 PV-2ND-GL-CLS-DT PV-2ND-GL-CLS-DT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PVFREC

//*** RECORD=PVGREC ****
// PVGREC
// **********************
Record PVGREC type basicRecord
  10 PVGREC-GROUP PVGREC-GROUP ; 
    15 PV-ERR-MSG-ID PV-ERR-MSG-ID ; 
    15 PV-ERR-MSG-DESC PV-ERR-MSG-DESC ; 
    15 PV-ERR-OWN-DESC PV-ERR-OWN-DESC ; 
    15 ZZ-SDT ZZ-SDT ; 
    15 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    15 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    15 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end PVGREC

Record PVLREC type basicRecord
  10 PVLGRP PVLGRP ; 
    15 PVAIVCID PVAIVCID ; 
    15 PVOVENDR PVOVENDR ; 
    15 PVOVENDG PVOVENDG ; 
    15 PVBLNINB PVBLNINB ; 
    15 XFACD XFACD ; 
    15 XFAIND XFAIND ; 
    15 PVLFRAMT PVLFRAMT ; 
    15 XXXUSID1 XXXUSID1 ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end PVLREC

//*** RECORD=PVOREC ****
// CSP RECORD FOR THE DB2 VENDOR NAME FILE
// 
// DB2 TABLE: DPINVC.VVENDR01
// 
// DCLGEN:    DCL00899
// 
// I/O MOD:   IO5680
// 
// KEY TO TABLE:     PVOVENDR
//                   PVOVENDG
// 
// MAINTENANCE LOG:
// 
//   WHO      WHEN         WHY
// --------  --------  --------------------------------------
// MMALIN    03/15/91  CREATE
// 
// **********************
Record PVOREC type basicRecord
  10 PVOVENDR PVOVENDR ; 
  10 PVOVENDG PVOVENDG ; 
  10 PVOVNDNM PVOVNDNM ; 
  10 PVOVNDSN PVOVNDSN ; 
  10 ZZZLDT ZZZLDT ; 
end // end PVOREC

//*** RECORD=PVUREC ****
// Maintenance Log:
// 
//   Date   Init   Proj#       C o m m e n t s
// -------- ------ -----  -------------------------------------
// 04-25-91 HVARGA P9999  Initial Construction
// ************************************************************
// **********************
Record PVUREC type basicRecord
  3 PVUGROUP PVUGROUP ; 
    5 PVUPVZRC PVUPVZRC ; 
    5 PVURCRD1 PVURCRD1 ; 
    5 PVURCRD2 PVURCRD2 ; 
    5 PVURCRD3 PVURCRD3 ; 
    5 PVURCRD4 PVURCRD4 ; 
    5 PVURCRD5 PVURCRD5 ; 
    5 PVURCRD6 PVURCRD6 ; 
    5 PVOVENDR PVOVENDR ; 
    5 PVOVENDG PVOVENDG ; 
    5 PC3PONBR PC3PONBR ; 
    5 FY1FCTYC FY1FCTYC ; 
    5 XGPCD XGPCD ; 
    5 SY1STNBR SY1STNBR ; 
    5 SY2CLRID SY2CLRID ; 
    5 XDMCD XDMCD ; 
    5 XQACD XQACD ; 
    5 PC2INSEG PC2INSEG ; 
    5 XPGCD XPGCD ; 
    5 XUMCD XUMCD ; 
    5 XWHCD XWHCD ; 
    5 YMTCD YMTCD ; 
    5 XOWCD XOWCD ; 
    5 SL1RCRNO SL1RCRNO ; 
    5 PC2CUXID PC2CUXID ; 
    5 TSHRCTDT TSHRCTDT ; 
    5 TSHCNTNR TSHCNTNR ; 
    5 PVBLNINB PVBLNINB ; 
    5 PVXERNBR PVXERNBR ; 
    5 PVCAETYP PVCAETYP ; 
    5 YISCD YISCD ; 
    5 GLAENT GLAENT ; 
    5 GLARCID GLARCID ; 
    5 GLANTAC GLANTAC ; 
    5 GLASUB GLASUB ; 
    5 GLAPRJ GLAPRJ ; 
    5 CAMSG CAMSG ; 
    5 PVUINQRY PVUINQRY ; 
    5 PVUALLWD PVUALLWD ; 
    5 PVUENDOA PVUENDOA ; 
    5 PVUSCRDL PVUSCRDL ; 
    5 PVUERNBR PVUERNBR ; 
    5 PVUCNTR1 PVUCNTR1 ; 
    5 PVUCNTR2 PVUCNTR2 ; 
    5 PVUFIRST PVUFIRST ; 
    5 PVAIVCID PVAIVCID ; 
      10 PVUNEXTI PVUNEXTI ; 
      10 PVUINVCA PVUINVCA ; 
    5 PVUINVCE PVUINVCE ; 
      10 PVUINVCO PVUINVCO [16] ; 
    5 PVUERRTB PVUERRTB ; 
      10 PVUERROR PVUERROR [4] ; 
    5 PVUERVND PVUERVND ; 
    5 PVUERIVC PVUERIVC ; 
    5 PVUERKEY PVUERKEY ; 
    5 PVUERGEN PVUERGEN ; 
    5 PVUMESSG PVUMESSG ; 
      10 PVUMESS1 PVUMESS1 ; 
      10 PVUMESS2 PVUMESS2 ; 
      10 PVUMESS3 PVUMESS3 ; 
    5 PVULIMT1 PVULIMT1 ; 
    5 PVULIMT2 PVULIMT2 ; 
    5 PVUCHOIC PVUCHOIC ; 
    5 PV-IVC-ID PV-IVC-ID ; 
    5 PV-MSA-VEND-NBR PV-MSA-VEND-NBR ; 
    5 PV-MSA-VEND-GRP PV-MSA-VEND-GRP ; 
    5 PV-PMT-VEND-IVC-ID PV-PMT-VEND-IVC-ID ; 
    5 PV-PMT-VEND-NBR PV-PMT-VEND-NBR ; 
    5 PV-PMT-VEND-GRP PV-PMT-VEND-GRP ; 
    5 PV-CONTROL-OPTION PV-CONTROL-OPTION ; 
end // end PVUREC

//*** RECORD=PVWREC ****
// ******************** nil common data names record ********
// 
// this record contains many common data names used by many
// applications.  this is not a global working-storage
// passed to other appl.  it is a second w-s record
// for an individual application.
// 
// 08-19-94 BCourt  change num fields to bin for:  pvwlinex,
//                  pvwscrnx (not used) & pvwmaxln (not used).
//                  This ensures signed fields for indexing.
// ************************************************************
// **********************
Record PVWREC type basicRecord
  5 PVWGROUP PVWGROUP ; 
    10 PVWIVCKY PVWIVCKY ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVWMCHER PVWMCHER ; 
    10 PVWCODER PVWCODER ; 
    10 PVWSQLER PVWSQLER ; 
    10 PVWFRCMT PVWFRCMT ; 
    10 PVWFRCCD PVWFRCCD ; 
    10 PVWEOAF PVWEOAF ; 
    10 PVWEOSF PVWEOSF ; 
    10 PVWEOFF PVWEOFF ; 
    10 PVWADDMD PVWADDMD ; 
    10 PVWKEYCH PVWKEYCH ; 
    10 PVWEDITF PVWEDITF ; 
    10 PVWUPDTF PVWUPDTF ; 
    10 PVWERRF PVWERRF ; 
    10 PVWVALDT PVWVALDT ; 
    10 PVWVITMF PVWVITMF ; 
    10 CATOAP CATOAP ; 
    10 PVWNEWSC PVWNEWSC ; 
    10 PVWBLDSC PVWBLDSC ; 
    10 PVWSCRNX PVWSCRNX ; 
    10 PVWLINEX PVWLINEX ; 
    10 PVWCPROC PVWCPROC ; 
    10 PVWCSCRN PVWCSCRN ; 
    10 PVWSINFO PVWSINFO ; 
      15 PVWSNAME PVWSNAME [6] ; 
      15 PVWMAXLN PVWMAXLN [6] ; 
      15 PVWARY1X PVWARY1X [6] ; 
    10 PVWCURLN PVWCURLN ; 
    10 PVWLNCK PVWLNCK ; 
    10 PVWLNCH PVWLNCH ; 
    10 PVWMAPMX PVWMAPMX ; 
    10 PVWITMX PVWITMX ; 
    10 PVWLTRX1 PVWLTRX1 ; 
    10 PVWLTRX2 PVWLTRX2 ; 
    10 PVWNUM8A PVWNUM8A ; 
      15 PVWBYTE PVWBYTE [8] ; 
    10 PVWWLTRX PVWWLTRX ; 
    10 PVWCNF PVWCNF [4] ; 
    10 PVWILTH PVWILTH [4] ; 
    10 PVWILOC PVWILOC [4] ; 
    10 PVWITMCT PVWITMCT ; 
    10 PVWWFLDC PVWWFLDC ; 
end // end PVWREC

//*** RECORD=PVXREC ****
//                   p v x r e c
//   this is a record that is created by matching
//   application (pv0b) or the coding application
//   (pv0?). whenever either of these applications
//   encounters an error, they will pass pertinent
//   error information back to the invoice entry
//   program. this error information will then be
//   used by the force match application (pv0d) or
//   the force coding application (pv0?). the error
//   information is stored in pvxrec. pvxrec is then
//   moved to the xsrrec.xsrdata field of the csp
//   scratchpad and is written to the csp scatchpad
//   database.
// **********************
Record PVXREC type basicRecord
  5 PVXGRP PVXGRP ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVXFDATA PVXFDATA [200] ; 
      15 PVBLNINB PVBLNINB ; 
      15 PVXERNBR PVXERNBR ; 
      15 PVXPDIFF PVXPDIFF ; 
        20 PVXACTAM PVXACTAM ; 
      15 PVXQDIFF PVXQDIFF ; 
        20 PVXPRCNT PVXPRCNT ; 
      15 PVXTOLER PVXTOLER ; 
end // end PVXREC

//*** RECORD=PVYREC ****
// ** RECORD USED TO PASS FUNCTION AND P.O. MONTH/YEAR RANGE **
// ** TO IO-MOD IO3360 AND IO3380                            **
// 
//   DATE     NAME     DESCRIPTION OF CHANGE
// --------  ------    ----------------------------------------
// 01/24/89  GAMEN     New record.
// **********************
Record PVYREC type basicRecord
  5 PVYGRP PVYGRP ; 
    10 PVYFNC PVYFNC ; 
    10 PVYFRDT PVYFRDT ; 
      15 PVYREASN PVYREASN ; 
        20 PVYRESN1 PVYRESN1 ; 
        20 PVYRESN2 PVYRESN2 ; 
        20 PVYRESN3 PVYRESN3 ; 
        20 PVYRESN4 PVYRESN4 ; 
    10 PVYTODT PVYTODT ; 
    10 PVYSTAT1 PVYSTAT1 ; 
    10 PVYSTAT2 PVYSTAT2 ; 
    10 PVYSTAT3 PVYSTAT3 ; 
    10 PVYSTAT4 PVYSTAT4 ; 
    10 PVYSTAT5 PVYSTAT5 ; 
    10 PVYSTAT6 PVYSTAT6 ; 
end // end PVYREC

Record PVZREC type basicRecord
  5 PVZGRP PVZGRP ; 
    10 PVZRECRD PVZRECRD ; 
    10 PVOVENDR PVOVENDR ; 
    10 PVOVENDG PVOVENDG ; 
    10 PVAIVCID PVAIVCID ; 
    10 PVZNORCV PVZNORCV ; 
    10 PVAFRMIN PVAFRMIN ; 
    10 PVAFRCFL PVAFRCFL ; 
    10 PVZMCHER PVZMCHER ; 
    10 PVZCODER PVZCODER ; 
    10 XXXUSRID XXXUSRID ; 
end // end PVZREC

// PV_1ST_BUS_DT
DataItem PV-1ST-BUS-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV_2ND_GL_CLS_DT
DataItem PV-2ND-GL-CLS-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV_AP_CUTOFF_DT
DataItem PV-AP-CUTOFF-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CONTROL OPTION - PV0B TO PV0A
DataItem PV-CONTROL-OPTION char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-CSTMS-TXT char(50)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-CURR-STAT-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ACTION TAKEN
DataItem PV-ERR-ACT-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-ERR-LD-CD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV LOAD DATE
DataItem PV-ERR-LD-DT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV ERROR MESSAGE DESCRIPTION
DataItem PV-ERR-MSG-DESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-ERR-MSG-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV ERROR OWNER GROUP
DataItem PV-ERR-OWN-DESC char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-ERR-PROC-CD char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV ERROR SEQUENCE NUMBER
DataItem PV-ERR-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-ACCT-RSPIND - FAN CODE
DataItem PV-IVC-ACCT-RSPIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV_IVC_AMT
DataItem PV-IVC-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-DSCT-AMT
DataItem PV-IVC-DSCT-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV_IVC_ID
DataItem PV-IVC-ID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-TO-AP-DT
DataItem PV-IVC-TO-AP-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV_IVC_TOT_FRGT
DataItem PV-IVC-TOT-FRGT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-LN-ITM-QTY
DataItem PV-LC-ITM-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-LN-UNT-COMM-AMT
DataItem PV-LC-UNT-COMM-AMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV_LN_UNT_FOB_AMT
DataItem PV-LC-UNT-FOB-AMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-LN-ITM-QTY
DataItem PV-LN-ITM-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-LN-UNT-COMM-AMT
DataItem PV-LN-UNT-COMM-AMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV_LN_UNT_FOB_AMT
DataItem PV-LN-UNT-FOB-AMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV-MSA-VEND-GRP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-MSA-VEND-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-BANK-CHG
DataItem PV-NISSHO-BANK-CHG decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-BRKR-CHG
DataItem PV-NISSHO-BRKR-CHG decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-COMM-AMT
DataItem PV-NISSHO-COMM-AMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-FOB-AMT
DataItem PV-NISSHO-FOB-AMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-INT-CHG1
DataItem PV-NISSHO-INT-CHG1 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-INT-CHG2
DataItem PV-NISSHO-INT-CHG2 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-INT-CHG3
DataItem PV-NISSHO-INT-CHG3 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// +V-NISSHO-LN-DTY
DataItem PV-NISSHO-LC-DTY decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-LN-DTY
DataItem PV-NISSHO-LN-DTY decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-OTH-CHG1
DataItem PV-NISSHO-OTH-CHG1 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-OTH-CHG2
DataItem PV-NISSHO-OTH-CHG2 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-SUB-CHG1
DataItem PV-NISSHO-SUB-CHG1 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-SUB-CHG2
DataItem PV-NISSHO-SUB-CHG2 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-TOT-DTY
DataItem PV-NISSHO-TOT-DTY decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-PMT-IVC-AMT
DataItem PV-PMT-IVC-AMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-PMT-IVC-DT
DataItem PV-PMT-IVC-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-PMT-IVC-DUE-DT
DataItem PV-PMT-IVC-DUE-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV-PMT-VEND-GRP char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-PMT-VEND-IVC-ID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-PMT-VEND-NBR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV-PMT-VEND-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pv-rused-typ-ind
DataItem PV-RUSED-TYP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0A-INPUT char(28)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0AM-NEW-FRIEGHT-MODIFIED char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// view character value
DataItem PV0AW-CHAR-TEST char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change totals message
DataItem PV0AW-CHG-MSG char(75)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DETAIL CHANGE COMM CENTS
DataItem PV0AW-CHG-MSG-COMM-CNT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change comm amt desc
DataItem PV0AW-CHG-MSG-COMM-DESC char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change comm DOLLARS
DataItem PV0AW-CHG-MSG-COMM-DLR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DETAIL CHANGE COMM DECIMAL
DataItem PV0AW-CHG-MSG-COMM-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DETAIL CHANGE DUTY CENTS
DataItem PV0AW-CHG-MSG-DUTY-CNT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change duty amt desc
DataItem PV0AW-CHG-MSG-DUTY-DESC char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change duty DOLLARS
DataItem PV0AW-CHG-MSG-DUTY-DLR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DETAIL CHANGE DUTY DECIMAL
DataItem PV0AW-CHG-MSG-DUTY-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DETAIL CHANGE FOB CENTS
DataItem PV0AW-CHG-MSG-FOB-CNT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change fob amt desc
DataItem PV0AW-CHG-MSG-FOB-DESC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change fob DOLLARS
DataItem PV0AW-CHG-MSG-FOB-DLR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DETAIL CHANGE FOB DECIMAL
DataItem PV0AW-CHG-MSG-FOB-DOT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change quantity
DataItem PV0AW-CHG-MSG-QTY-AMT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// detail change quantity desc
DataItem PV0AW-CHG-MSG-QTY-DESC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// detail change totals title
DataItem PV0AW-CHG-MSG-TITLE char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dollar edit: cents only
DataItem PV0AW-CHG-MSG-WK-CNT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dollar edit: dollars only
DataItem PV0AW-CHG-MSG-WK-DLR char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dollar edit; single character
DataItem PV0AW-CHG-MSG-WK-DLR-CHAR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dollar edit like pic 9(7)v99
DataItem PV0AW-CHG-MSG-WORK num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group item #1 for dollar edit
DataItem PV0AW-CHG-MSG-WORK-CHAR1 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group itme #2 for dollar edit
DataItem PV0AW-CHG-MSG-WORK-CHAR2 char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// iomod function to perform
DataItem PV0AW-DBIO-FUNCTION char(2)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// indicates line items updated
DataItem PV0AW-DETAIL-UPDATED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BC PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-BC-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BF PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-BF-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C1 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-C1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C2 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-C2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C3 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-C3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C4 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-C4-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CM PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-CM-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DA PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-DA-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DUTY PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-DUTY-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FOB PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-FOB-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TOT FREIGHT ON DIFFERENT IVC
DataItem PV0AW-DIFF-FREIGHT-AMT num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FRGT PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-FRGT-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I1 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-I1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I2 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-I2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I3 PMT EXISTS FOR OTHER IVC
DataItem PV0AW-DIFF-I3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GET FAN CODE ON ADD OF 1ST ITM
DataItem PV0AW-FAN-FIRST-TIME char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAKE DUTY MSG SHOW ONCE
DataItem PV0AW-FIRST-TIME-DUTY-MSG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAKE FOB MSG SHOW ONCE
DataItem PV0AW-FIRST-TIME-FOB-MSG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAKE QTY MSG SHOW ONCE
DataItem PV0AW-FIRST-TIME-QTY-MSG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FIRST TIME RUNNING TR0H FOR IV
DataItem PV0AW-FIRST-TIME-TR0H-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ga-glbl-acct-id key.
DataItem PV0AW-GCOA-KEY char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0AW-GCOA-KEY-2 char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key error on vgcoa001 table.
DataItem PV0AW-GCOA-MESSAGE char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0AW-GCOA-MESSAGE-2 char(76)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GCOA/GL Conversion not found.
DataItem PV0AW-GCOA-NOT-FOUND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table name description.
DataItem PV0AW-GCOA-TEXT char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0AW-GCOA-TEXT-2 char(34)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NEW INVOICE BEING SET UP: Y/N
DataItem PV0AW-NEW-INVOICE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0AW-NLXCPROC char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0AW-NLXERRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// view numeric value
DataItem PV0AW-NUMBER-TEST num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ORIGINAL FREIGHT AMOUNT ON IVC
DataItem PV0AW-ORIG-FRGT-AMT num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// BC PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-BC-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BF PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-BF-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C1 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-C1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C2 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-C2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C3 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-C3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C4 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-C4-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CM PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-CM-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DA PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-DA-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DUTY PAYMENT ON OTHER VENDR IV
DataItem PV0AW-OTHR-VNDR-DUTY-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FOB PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-FOB-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FRGT PAYMENT ON OTHER VENDR IV
DataItem PV0AW-OTHR-VNDR-FRGT-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I1 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-I1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I2 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-I2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I3 PAYMENT ON OTHER VENDR IVC
DataItem PV0AW-OTHR-VNDR-I3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BC PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-BC-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// BF PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-BF-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C1 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-C1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C2 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-C2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C3 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-C3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// C4 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-C4-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CM PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-CM-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DA PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-DA-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DUTY PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-DUTY-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FOB PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-FOB-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TOTAL FREIGHT ON SAME IVC
DataItem PV0AW-SAME-FREIGHT-AMT num(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FRGT PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-FRGT-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I1 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-I1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I2 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-I2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// I3 PMT EXISTS FOR INVOICE
DataItem PV0AW-SAME-I3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF BC  PAYMENT IS 'SN'
DataItem PV0AW-SENT-BC-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF BF  PAYMENT IS 'SN'
DataItem PV0AW-SENT-BF-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF C1  PAYMENT IS 'SN'
DataItem PV0AW-SENT-C1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF C2  PAYMENT IS 'SN'
DataItem PV0AW-SENT-C2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF C3  PAYMENT IS 'SN'
DataItem PV0AW-SENT-C3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF C4  PAYMENT IS 'SN'
DataItem PV0AW-SENT-C4-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF CM  PAYMENT IS 'SN'
DataItem PV0AW-SENT-CM-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF DA  PAYMENT IS 'SN'
DataItem PV0AW-SENT-DA-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF DUTY PAYMENT IS 'SN'
DataItem PV0AW-SENT-DUTY-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF FOB PAYMENT IS 'SN'
DataItem PV0AW-SENT-FOB-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF FRGT PAYMENT IS 'SN'
DataItem PV0AW-SENT-FRGT-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF I1  PAYMENT IS 'SN'
DataItem PV0AW-SENT-I1-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF I2  PAYMENT IS 'SN'
DataItem PV0AW-SENT-I2-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// STATUS OF I3  PAYMENT IS 'SN'
DataItem PV0AW-SENT-I3-PMT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CHNG STATUS OF HDR TO IP OR NP
DataItem PV0AW-STAT-CHG-NP-IP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TR0H REQ'D AFTER IVC CHANGED
DataItem PV0AW-TRANSPORTATION-REQ-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XIP-IVC-STAT-CD
DataItem PV0AW-XIP-IVC-STAT-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// totals ws field
DataItem PV0AW1DA bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// totals ws field
DataItem PV0AW1DB bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// totals ws field
DataItem PV0AW1DC bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// totals ws field
DataItem PV0AW1DD bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// totals ws field
DataItem PV0AW1DE bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// commission working storage
DataItem PV0AW1DG bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 1st line of screen
DataItem PV0AW1ST smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item act. bank chg.
DataItem PV0AWABC bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item act. commission
DataItem PV0AWACM bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item act. comm. rate
DataItem PV0AWACR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item work field
DataItem PV0AWAD1 bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item work field
DataItem PV0AWAD2 bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// add mode(y/n)
DataItem PV0AWADD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hdr totals(y/n)
DataItem PV0AWADF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item act. duty %
DataItem PV0AWADP bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item duty variance
DataItem PV0AWADV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item air freight var.
DataItem PV0AWAFV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item work field
DataItem PV0AWAM1 bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item bank charge
DataItem PV0AWBCA bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item bank chg. var.
DataItem PV0AWBCV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// B-grade edit marker
DataItem PV0AWBGD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Build Screen Array (Y/N)
DataItem PV0AWBLD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bm flag check
DataItem PV0AWBMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cancel flag (y/n)
DataItem PV0AWCAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end
// processed flag (y/n)
DataItem PV0AWCDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Temp storage for current date
DataItem PV0AWCDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem PV0AWCEN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. line item calculateds
DataItem PV0AWCLC char(152)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current line item
DataItem PV0AWCLN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item commission var.
DataItem PV0AWCMV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem PV0AWCN1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem PV0AWCN2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem PV0AWCN3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century
DataItem PV0AWCN4 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cancel cd entered (y/n)
DataItem PV0AWCRC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// day
DataItem PV0AWDA1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem PV0AWDA2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem PV0AWDA3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem PV0AWDA4 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day
DataItem PV0AWDAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// blank line item (y/n)
DataItem PV0AWDEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// date edit for screen
DataItem PV0AWDT1 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date edit for screen
DataItem PV0AWDT2 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date edit for screen
DataItem PV0AWDT3 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date edit for screen
DataItem PV0AWDT4 num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date edit for dbase
DataItem PV0AWDTE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// duty change(y/n)
DataItem PV0AWDTY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error exists (y/n)
DataItem PV0AWEDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Edit Item (del chg add)
DataItem PV0AWEDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// inquiry error(y/n)
DataItem PV0AWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time through(y/n)
DataItem PV0AWFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// deleted line (y/n)
DataItem PV0AWFLL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item freight var.
DataItem PV0AWFRV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fypo processed (y/n)
DataItem PV0AWFYF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fypo table
DataItem PV0AWFYP char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fypo index for select scan
DataItem PV0AWFYX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// num hold field 1
DataItem PV0AWHD1 bin(9,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// num hold field 2
DataItem PV0AWHD2 bin(9,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// found inv header fly/n)
DataItem PV0AWHDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// inv. tot. actual duty
DataItem PV0AWIAD bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. cogs
DataItem PV0AWICG bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index used for repeat
DataItem PV0AWID2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index
DataItem PV0AWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. fob $ mike
DataItem PV0AWIFB bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. interest
DataItem PV0AWIIT bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. inventory
DataItem PV0AWIIV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index max
DataItem PV0AWIMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// totals fob + freight
DataItem PV0AWINV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. other chgs.
DataItem PV0AWIOC bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. over & short
DataItem PV0AWIOS bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// inv. tot. ppv total
DataItem PV0AWIPV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item interest
DataItem PV0AWITT bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// key change(y/n)
DataItem PV0AWKEY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// inv. line item data fields
DataItem PV0AWLDT char(84)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// incoming error flag
DataItem PV0AWLEF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item freight actual
DataItem PV0AWLFA bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fob change(y/n)
DataItem PV0AWLFO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// last line on current screen
DataItem PV0AWLIM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item max
DataItem PV0AWLIN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// invoice line item,see PV0AWMAX
DataItem PV0AWLIT char(236)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item found (y/n)
DataItem PV0AWLLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// left right index
DataItem PV0AWLRX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item user fee
DataItem PV0AWLUF bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// max PV0AW01 line items = 300
DataItem PV0AWMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// modified(y/n)
DataItem PV0AWMDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// incoming info (y/n)
DataItem PV0AWMKF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line total
DataItem PV0AWMT bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month
DataItem PV0AWMT1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month
DataItem PV0AWMT2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month
DataItem PV0AWMT3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month
DataItem PV0AWMT4 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month
DataItem PV0AWMTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item other chg. var.
DataItem PV0AWOCV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item other freight
DataItem PV0AWOFR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Over & Short ws field
DataItem PV0AWOS1 bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Over & Short ws field
DataItem PV0AWOS2 bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Over & Short ws field
DataItem PV0AWOS3 bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// over and short flag (y/n)
DataItem PV0AWOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Over & Short ws field
DataItem PV0AWOST bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item on the water
DataItem PV0AWOTW bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// change made to hdr(y/n)
DataItem PV0AWPA2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change made to hdr(y/n)
DataItem PV0AWPAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item ppv
DataItem PV0AWPPV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// reverse fypo qty
DataItem PV0AWQTY bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item quoto
DataItem PV0AWQUO bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fypo remainder
DataItem PV0AWQY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item local freight
DataItem PV0AWRFR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item std. bank chg.
DataItem PV0AWSBC bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// scr flag check
DataItem PV0AWSCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item std. commission
DataItem PV0AWSCM bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Scratch Pad Written(Y/N)
DataItem PV0AWSCP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item std. duty
DataItem PV0AWSDP bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item std. freight
DataItem PV0AWSFR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// style index
DataItem PV0AWSIX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item salesmen sample
DataItem PV0AWSPL bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item std. price
DataItem PV0AWSPR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// invoice status eq 'ex'(y/n)
DataItem PV0AWSTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// inv. sub total
DataItem PV0AWSUB bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// size flag (y/n)
DataItem PV0AWSZF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// inv. tot. freight
DataItem PV0AWTFR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// invoice totals
DataItem PV0AWTOT char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf2 update flag (y/n)
DataItem PV0AWUP2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf2 update flag (y/n)
DataItem PV0AWUP3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// update flag (y/n)
DataItem PV0AWUPF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line item vessel freight
DataItem PV0AWVFR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// line item vessel freight var.
DataItem PV0AWVFV bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// warning flag (y/n)
DataItem PV0AWWNF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// year
DataItem PV0AWYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem PV0AWYR1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem PV0AWYR2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem PV0AWYR3 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year
DataItem PV0AWYR4 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0BW-ARR-MOV-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0BW-BROK-DBT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Calculated Tolerance
DataItem PV0BW-CALC-TOLERANCE decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// COMM PCT THAT IS BANK TYPE LC
DataItem PV0BW-COMM-LC-FACTOR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// XIB-IBANK-CD OF CURRENT LN ITM
DataItem PV0BW-CURR-IBANK-CD char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0BW-DUTY-DBT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// DUTY PCT THAT IS BANK TYPE LC
DataItem PV0BW-DUTY-LC-FACTOR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Status of the DUTY pmt record
DataItem PV0BW-DUTY-PMT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// COUNT NUMBER OF FIELDS ENTERED
DataItem PV0BW-FIELD-CT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Fiscal cc
DataItem PV0BW-FISCAL-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Filler
DataItem PV0BW-FISCAL-FILLER num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Fiscal period
DataItem PV0BW-FISCAL-MONTH num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fiscal yymm
DataItem PV0BW-FISCAL-YYMM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// FOB PCT THAT IS BANK TYPE LC
DataItem PV0BW-FOB-LC-FACTOR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Status of the FOB pmt record
DataItem PV0BW-FOB-PMT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// FORCE PAYMENT ERROR FLAG
DataItem PV0BW-FORCE-PAY-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0BW-FRGT-DBT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Status of the FREIGHT pmt recd
DataItem PV0BW-FRGT-PMT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ACCUM TOTAL-CALC CANCEL FACTOR
DataItem PV0BW-LC-TOTALS-BY-BANK char(961)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0BW-LCRED-DBT-STAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// LINE ITM IS BANK TYPE 'LC'-Y/N
DataItem PV0BW-LINE-IS-LC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAP2 ROW GROUP ITEM
DataItem PV0BW-MAP2-LINE-GROUP char(29)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAP3 ROW GROUP ITEM
DataItem PV0BW-MAP3-LINE-GROUP1 char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PV0BW-MAP3-LINE-GROUP2 char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MAP2 ROW GROUP ITEM
DataItem PV0BW-MAP4-LINE-GROUP char(28)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// TYPE 60 FORCE REC EXISTS - Y/N
DataItem PV0BW-PREV-CANCEL-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GROUP ITEM-PV0BW01 WORK STORAG
DataItem PV0BW-PV0BW01-GROUP char(1260)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GROUP ITEM FOR PV0BM002 DATA
DataItem PV0BW-PV0BW02-GROUP char(29000)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GROUP ITEM FOR PV0BM003 DATA
DataItem PV0BW-PV0BW03-GROUP char(30800)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// GROUP ITEM FOR PV0BM002 DATA
DataItem PV0BW-PV0BW05-GROUP char(28000)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// QTY PCT THAT IS BANK TYPE LC
DataItem PV0BW-QTY-LC-FACTOR bin(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0BW-SELEC-LIN-FL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ROW SELECTION FLAG - PV0BM002
DataItem PV0BW-SELECT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV0BW-SELECT-LINE-COUNT
DataItem PV0BW-SELECT-LINE-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SUM OF ALL LC DSCT FOR A BANK
DataItem PV0BW-SUM-BANK-DSCT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SUM OF LC DSCT FOR FACTRY IVC
DataItem PV0BW-SUM-FCTY-DSCT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TOTAL DUTY AMOUNT
DataItem PV0BW-TOTAL-DUTY-AMOUNT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TOTAL FOB AMOUNT
DataItem PV0BW-TOTAL-FOB-AMOUNT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// TOTAL FREIGHT AMOUNT
DataItem PV0BW-TOTAL-FRGT-AMOUNT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Header needs to be updated:Y/N
DataItem PV0BW-UPDATE-HEADER-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Bottom Line Pointerfor sumry
DataItem PV0BWBOT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Bottom Line Pointer for pmts
DataItem PV0BWBOT-MAP3 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Screen Scroll Counter for sumr
DataItem PV0BWCNT smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Screen Scroll Counter for pmts
DataItem PV0BWCNT-MAP3 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Top Line Showing for sumry
DataItem PV0BWCUR smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Top Line Showing for pmts
DataItem PV0BWCUR-MAP3 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// index USED IN PF17 DELETE PROC
DataItem PV0BWIDX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index max
DataItem PV0BWIMX int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for map 2 list table
DataItem PV0BWIX2 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for map 3 pmt details
DataItem PV0BWIX3 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for map 2 LINE SELECTION
DataItem PV0BWIX4 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index for map 2 LINE UPDATE
DataItem PV0BWIX5 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PV0BWIX6 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Prev Active Item Screen
DataItem PV0BWLST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Active Screen
DataItem PV0BWMAP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Number of Item Scroll Lines
DataItem PV0BWMAX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Number of Item Scroll Lines
DataItem PV0BWMAX-MAP3 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Numeric Work Area
DataItem PV0BWNUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Prev Active Screen
DataItem PV0BWPRV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Scratch Pad Written(Y/N)
DataItem PV0BWSCP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Top Line Pointer for sumry
DataItem PV0BWTOP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Top Line Pointer for pmts
DataItem PV0BWTOP-MAP3 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV4050 FILLER FOR CICS REQ'MT
DataItem PV4050W-FILLER char(2484)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV4050-CALL-REC GRP ITM INPUT
DataItem PV4050W-GROUP-ITEM char(2500)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV4050 STATUS RETURN CODE
DataItem PV4050W-RETURN-CODE char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-ACR-IND
DataItem PVAACRIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-ACCT-RSPIND
DataItem PVAACRSP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-AP-ENTR-DT
DataItem PVAAPEDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-BANK-CHG
DataItem PVABANKC decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-BANK-PCT
DataItem PVABANKP decimal(7,6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-BOL-DT
DataItem PVABOLDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-BRKR-CHG
DataItem PVABRKRY decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-BTCH-NBR
DataItem PVABTNBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-COMM-PCT
DataItem PVACOMMP decimal(7,6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-CARGO-DT
DataItem PVACRELD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-DSCT-AMT
DataItem PVADSCT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-DUE-DT
DataItem PVADUEDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-ETA-DT
DataItem PVAETADT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-FRGN-DOM-IND
DataItem PVAFDIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV_FORC_COST_FL
DataItem PVAFRCFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV_FORC_MCH_IND
DataItem PVAFRMIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// qroup level for pv hdr rec
DataItem PVAGRP char(223)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-INT-CHG1
DataItem PVAINT1 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-INT-CHG2
DataItem PVAINT2 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-INT-CHG3
DataItem PVAINT3 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-INT-RATE
DataItem PVAINTRT decimal(7,6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-AMT
DataItem PVAIVAMT decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-DT
DataItem PVAIVCDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-ID
DataItem PVAIVCID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-OTH-CHG1
DataItem PVAOCHG1 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-OTH-CHG2
DataItem PVAOCHG2 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-REF-IVC-ID
DataItem PVARIVID char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-SUB-CHG1
DataItem PVASCHG1 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-SUB-CHG2
DataItem PVASCHG2 decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-SMPL-FL
DataItem PVASPLFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-SPT-ID
DataItem PVASPTID char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-COMM-AMT
DataItem PVATCOMM decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-TOT-DUTY
DataItem PVATDUTY decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-NISSHO-FOB-AMT
DataItem PVATFOB decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-TOT-FRGT
DataItem PVATFRGT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-IVC-TOT-QTY
DataItem PVATQTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-XIP-CHG-DT
DataItem PVAXIPDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-SZ-SCL-DESC-BEG
DataItem PVBBSZDS char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-LN-BEG-NIKE-SZ
DataItem PVBBSZNK smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-CONT-NBR
DataItem PVBCONTN char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-SZ-SCL-DESC-END
DataItem PVBESZDS char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-LN-END-NIKE-SZ
DataItem PVBESZNK smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// group level for pv ln itm rec
DataItem PVBGRP char(136)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-LN-ITM-AMT
DataItem PVBLNAMT decimal(11,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-LN-UNT-COMM-AMT
DataItem PVBLNCOM decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV-NISSHO-LN-DTY
DataItem PVBLNDTY decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV_LN_UNT_FOB_AMT
DataItem PVBLNFOB decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV_LN_ITM_NBR
DataItem PVBLNINB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-LN-ITM-QTY
DataItem PVBLNQTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-ACCT-AMT
DataItem PVCACAMT decimal(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PV-ACCT-ENT-TYP-IND
DataItem PVCAETYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for pv prft rec
DataItem PVCGRP char(84)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-PRFT-MAN-NBR
DataItem PVCMNNBR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-ACCT-OVRD-FL
DataItem PVCOVRFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-PRFT-POST-MO
DataItem PVCPSTDT int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Error Description
DataItem PVDERDSC char(40)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error number
DataItem PVDERNBR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for pv gl rec
DataItem PVDGRP char(86)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-GEN-LED-JRNLNBR
DataItem PVDJENBR char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-GEN-LED-PERIOD
DataItem PVDPRIOD smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PV-GEN-LED-REFNBR
DataItem PVDRFNBR int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Equivalent FORCE Error
DataItem PVDXFACD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level for pv rused rec
DataItem PVEGRP char(102)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NXT-MO-RCPT-QTY
DataItem PVERCQTY int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Group Level
DataItem PVFGRP char(44)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-NXT-ADJ-IVC-ID
DataItem PVFNXIVC char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-CURR-PROC-MO
DataItem PVFPRCMO int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PVGREC-GROUP char(56)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XFA_FORC_AMT
DataItem PVLFRAMT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// RECORD GROUP LEVEL
DataItem PVLGRP char(58)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PVOBW-ERR-MSG-FL char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-MSA-VEND-GRP
DataItem PVOVENDG char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-MSA-VEND-NBR
DataItem PVOVENDR char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-MSA-VEND-NM
DataItem PVOVNDNM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-MSA-VEND-SNM
DataItem PVOVNDSN char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Allowed Flag
DataItem PVUALLWD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV Menu Choice
DataItem PVUCHOIC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work Counter 1
DataItem PVUCNTR1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Work Counter 2
DataItem PVUCNTR2 smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// End of Appl Flag
DataItem PVUENDOA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// General Error Pointer
DataItem PVUERGEN num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Invoice Error Pointer
DataItem PVUERIVC num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// General Error Pointer
DataItem PVUERKEY num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Error Message Number
DataItem PVUERNBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Error Indicator Table
DataItem PVUERROR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Error Indicator Table
DataItem PVUERRTB char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Vendor  Error Pointer
DataItem PVUERVND num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// First Time Flag
DataItem PVUFIRST char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group Record
DataItem PVUGROUP char(503)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Inquiry Flag
DataItem PVUINQRY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment Ivc Number Ind
DataItem PVUINVCA char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-ID
DataItem PVUINVCE char(16)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV-IVC-ID
DataItem PVUINVCO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Memo Amount Limit
DataItem PVULIMT1 decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Memo Amount Limit
DataItem PVULIMT2 decimal(15,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// Portion 1
DataItem PVUMESS1 char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Portion 2
DataItem PVUMESS2 char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Portion 3
DataItem PVUMESS3 char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PV Message Line
DataItem PVUMESSG char(54)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Numeric Part of Ivc
DataItem PVUNEXTI num(15)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PVZREC Area
DataItem PVUPVZRC char(100)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name 1 (PVAREC)
DataItem PVURCRD1 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name 2 (PVBREC)
DataItem PVURCRD2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name 3 (PVOREC)
DataItem PVURCRD3 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name 4 (PVCREC)
DataItem PVURCRD4 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name 5 (PVDREC)
DataItem PVURCRD5 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name 5 (PCMREC)
DataItem PVURCRD6 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Scratch Pad Delete Flag
DataItem PVUSCRDL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// add mode (y/n)
DataItem PVWADDMD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 1st array row for assoc map
DataItem PVWARY1X smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// build screen (y/n)
DataItem PVWBLDSC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// byte position in array
DataItem PVWBYTE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws char/numeric flags
DataItem PVWCNF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// coding error flag
DataItem PVWCODER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// name of current process
DataItem PVWCPROC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// name of current screen
DataItem PVWCSCRN char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current screen line
DataItem PVWCURLN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// do-edits flag
DataItem PVWEDITF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem PVWEGRP char(174)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-application flag (y/n)
DataItem PVWEOAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-file (y/n)
DataItem PVWEOFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-screen flag (y/n)
DataItem PVWEOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// have map error (y/n)
DataItem PVWERRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// coding force flag
DataItem PVWFRCCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// matching force flag
DataItem PVWFRCMT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem PVWGROUP char(224)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws starting item locations
DataItem PVWILOC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws item lengths
DataItem PVWILTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// number of items entered
DataItem PVWITMCT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// item index
DataItem PVWITMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// passed invoice key
DataItem PVWIVCKY char(28)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// key change (y/n)
DataItem PVWKEYCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen line index
DataItem PVWLINEX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// used for pvblninb process.
DataItem PVWLNCH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current line being copied
DataItem PVWLNCK smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// letter index
DataItem PVWLTRX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// letter index
DataItem PVWLTRX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last map line with data
DataItem PVWMAPMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum number of lines
DataItem PVWMAXLN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// matching error flag
DataItem PVWMCHER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display new screen (y/n)
DataItem PVWNEWSC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// numeric 8 array
DataItem PVWNUM8A num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen pointer
DataItem PVWSCRNX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen-information-array
DataItem PVWSINFO char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen name
DataItem PVWSNAME char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data base search error
DataItem PVWSQLER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// do-updates flag
DataItem PVWUPDTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid-date flag
DataItem PVWVALDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid-item flag
DataItem PVWVITMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working field character format
DataItem PVWWFLDC char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index to working field letters
DataItem PVWWLTRX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Actual Amount
DataItem PVXACTAM decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// match/coding error nbr.
DataItem PVXERNBR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// force data
DataItem PVXFDATA char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Group
DataItem PVXGRP char(3628)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// calc. price difference
DataItem PVXPDIFF decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Percentage Over
DataItem PVXPRCNT decimal(7,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Calculated Qty difference
DataItem PVXQDIFF decimal(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Calculated Tolerance
DataItem PVXTOLER decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IO function code
DataItem PVYFNC char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Start date to pass
DataItem PVYFRDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Group Record
DataItem PVYGRP char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Reason Indicators
DataItem PVYREASN char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XFA-FORC-RSN-IND 1
DataItem PVYRESN1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XFA-FORC-RSN-IND 2
DataItem PVYRESN2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XFA-FORC-RSN-IND 3
DataItem PVYRESN3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XFA-FORC-RSN-IND 4
DataItem PVYRESN4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XRI-RCPT-STAT-CD 1
DataItem PVYSTAT1 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XRI-RCPT-STAT-CD 2
DataItem PVYSTAT2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XRI-RCPT-STAT-CD 3
DataItem PVYSTAT3 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XRI-RCPT-STAT-CD 4
DataItem PVYSTAT4 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XRI-RCPT-STAT-CD 5
DataItem PVYSTAT5 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XRI-RCPT-STAT-CD 6
DataItem PVYSTAT6 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// End date to pass
DataItem PVYTODT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CODING PROCESS FLAG
DataItem PVZCODER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Group Level
DataItem PVZGRP char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// MATCH PROCESS FLAG
DataItem PVZMCHER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NO RECEIVING FLAG
DataItem PVZNORCV char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Record Name
DataItem PVZRECRD char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

