package kb.common;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import ku.common.*;
import sm.common.*;
//*** RECORD=KB3REC ****
// Formats data and transaction code for the buyer system.  The
// audit records are written to the customer audit file.
// **********************
Record KB3REC type basicRecord
  5 KB3GRP KB3GRP ; 
    10 KB3TRAN KB3TRAN ; 
    10 KB3DATA KB3DATA ; 
end // end KB3REC

//*** RECORD=KBAREC ****
// -------------------------attention--------------------------
// This is the Buyer General Information record, DCUST.VBUYER01
// The DCLGEN is DCL00712
//   date     person      reason
//  -------   -------   ---------------------------------------
//  06-04-92  jricha    added new fields
//  08/04/93  tmorri    database changes.
//                      added:   CU-COMNT-FL
//                      deleted: XST-ST-CD
//                               XXX-ZIP
//                               CU-CNTY-CD
//                               XCT-CTRY-CD
//                               YML-BUYER-MAIL-CD
// ------------------------------------------------------------
// **********************
Record KBAREC type basicRecord
  5 KBAGRP KBAGRP ; 
    10 KBABUYID KBABUYID ; 
    10 XXXLSTNM XXXLSTNM ; 
    10 XXXLSTSN XXXLSTSN ; 
    10 XXXFSTNM XXXFSTNM ; 
    10 XXXMDINT XXXMDINT ; 
    10 XXXGNTNM XXXGNTNM ; 
    10 XXXPHN XXXPHN ; 
    10 XXXAPHN XXXAPHN ; 
    10 YBTCD YBTCD ; 
    10 KBABUYFL KBABUYFL ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XAD-ADDR-TYP-CD XAD-ADDR-TYP-CD ; 
    10 KULAAID KULAAID ; 
    10 XXXUSID1 XXXUSID1 ; 
    10 XXXUSID2 XXXUSID2 ; 
    10 YBBCD YBBCD [10] ; 
    10 XXXSTAT XXXSTAT ; 
    10 CU-COMNT-FL CU-COMNT-FL ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end KBAREC

//*** RECORD=KBBREC ****
// This record describes the Buyer Address, DCUST.VBADDR01.
// The DCLGEN is DCL00712.
// 
//   DATE       USER    CHANGE
//  --------   ------   --------------------------------------
//  03-30-94   gcalki   DB2 changes
//                      rename:xxxaddr1-3 to xxx-addr1-3
//                      resize:xxxaddr1-3
// **********************
Record KBBREC type basicRecord
  10 KBBGRP KBBGRP ; 
    15 KBABUYID KBABUYID ; 
    15 XXX-ADDR1 XXX-ADDR1 ; 
      20 XXXADDR1 XXXADDR1 ; 
      20 * char(8) ; 
    15 XXX-ADDR2 XXX-ADDR2 ; 
      20 XXXADDR2 XXXADDR2 ; 
      20 * char(8) ; 
    15 XXX-ADDR3 XXX-ADDR3 ; 
      20 XXXADDR3 XXXADDR3 ; 
      20 * char(8) ; 
    15 XXXCITY XXXCITY ; 
    15 XSTCD XSTCD ; 
    15 XXXZIP XXXZIP ; 
    15 XCYCD XCYCD ; 
    15 XCTCD XCTCD ; 
    15 ZZZSDT ZZZSDT ; 
    15 ZZZCHGDT ZZZCHGDT ; 
    15 ZZZCHGTM ZZZCHGTM ; 
    15 ZZZCHGCT ZZZCHGCT ; 
end // end KBBREC

//*** RECORD=KBCREC ****
// This record is used to manipulate and display buyer comments
// Applications using this record are KB0N and KB0V.
// **********************
Record KBCREC type basicRecord
  5 KBC-GROUP KBC-GROUP ; 
    10 KBC-TS-LENGTH KBC-TS-LENGTH ; 
    10 KBC-TS-ROW KBC-TS-ROW [15] ; 
      15 KUECSEQ KUECSEQ ; 
      15 KUECOMNT KUECOMNT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 KBCTRAN KBCTRAN ; 
      15 KBC-CHANGE-FL KBC-CHANGE-FL ; 
end // end KBCREC

//*** RECORD=KBIREC ****
// This record is used to pass execution parameters to IO4330,
// which accesses DCUST.VBXREF01, the buyer/customer cross
// reference.
// **********************
Record KBIREC type basicRecord
  5 KBIGROUP KBIGROUP ; 
    10 KBIOTASK KBIOTASK ; 
    10 KBIOSTAT KBIOSTAT ; 
    10 KBIODATE KBIODATE ; 
    10 KBIOCNT KBIOCNT ; 
end // end KBIREC

Record KBKREC type basicRecord
  5 KBK-GROUP KBK-GROUP ; 
    10 KBK-TASK KBK-TASK ; 
    10 KBK-STATUS KBK-STATUS ; 
    10 KBK-DATE KBK-DATE ; 
    10 KBK-YSB-COUNT KBK-YSB-COUNT ; 
    10 KBABUYID KBABUYID [2] ; 
end // end KBKREC

//*** RECORD=KBLREC ****
// This record is used to pass execution parameters to KB1040.
// 
// ***********************************************************
// *
// *   maint.
// *    who       when      why
// *   ------    --------   ----------------------------------
// *   jricha    07-21-92   added in count and join of curep01
// *                        and bxref01 tables.
// *
// ***********************************************************
// **********************
Record KBLREC type basicRecord
  5 KBLGROUP KBLGROUP ; 
    10 KBLTRAN KBLTRAN ; 
      15 KBLTASK KBLTASK ; 
      15 KBLTYPE KBLTYPE ; 
    10 KBLSTAT KBLSTAT ; 
    10 KBLDATE KBLDATE ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 KUMSTSNM KUMSTSNM ; 
    10 KUMXSTCD KUMXSTCD ; 
    10 KUMCITYS KUMCITYS ; 
    10 SM4REPID SM4REPID ; 
    10 YSBCD YSBCD ; 
    10 KBL-YSB-CNT KBL-YSB-CNT ; 
    10 KBABUYID KBABUYID ; 
    10 CU-CO-SHORT-NM CU-CO-SHORT-NM ; 
end // end KBLREC

//*** RECORD=KBWREC ****
// ***********************************************************
// This is the commarea working record for Buyer system.
// 
//     DATE    WHO      REASON FOR CHANGE
//  --------   ---------------------------------------------
//  06/08/92   JRICHA   INCREASED RECORD LENGTH DUE TO KBAGRP
//                      RECORD INCREASING IN SIZE.
// 
//  03/01/93   tmorri   Moved YMLCD out of KBAGRP and added
//                      it to the bottom of the record.
// 
//  04/23/93   tmorri   Added 2 character field for dept id.
// 
//  08/04/93   tmorri   Database Changes.  Removed fields that
//                      are no longer used in KBAGRP.
// 
// -----------------------------------------------------------
//  NOTE:  THE KBAREC LAYOUT HAS A FILLER IN IT TO REPLACE
//         KUMSTRID. THIS RECORD NEEDS TO BE INVESTIGATED TO
//         SEE HOW KUMSTRID IS REALLY USED IN KBWREC. JRICHA.
//         AFTER A QUICK REVIEW LOOKS LIKE THE STORE ID WILL
//         WILL BE NAMED KBW-KUMSTRID THIS WILL MAKE TABLE
//         CHANGES HARDER IN THE FUTURE.
// 
// ************************************************************
// **********************
Record KBWREC type basicRecord
  5 KBWGROUP KBWGROUP ; 
    10 KBWADDFL KBWADDFL ; 
    10 KBWBRSFL KBWBRSFL ; 
    10 KBWERRFL KBWERRFL ; 
    10 KBWCHGFL KBWCHGFL ; 
    10 KBWCH2FL KBWCH2FL ; 
    10 KBWSELFL KBWSELFL ; 
    10 KBWMSGFL KBWMSGFL ; 
    10 KBWDUPFL KBWDUPFL ; 
    10 KBWRETNF KBWRETNF ; 
    10 KBWRLDFL KBWRLDFL ; 
    10 KBWEOF KBWEOF ; 
    10 KBWPFKEY KBWPFKEY [2] ; 
    10 XXXMAPNM XXXMAPNM ; 
    10 KBWSUB KBWSUB ; 
    10 KBWSUB1 KBWSUB1 ; 
    10 KBWSUB2 KBWSUB2 ; 
    10 KBWORK1 KBWORK1 ; 
    10 KBWORK2 KBWORK2 ; 
    10 KBWBIDKE KBWBIDKE ; 
    10 KBWADRKE KBWADRKE ; 
      15 KBWADRCO KBWADRCO ; 
      15 KBWADRID KBWADRID ; 
    10 KBWXIDKE KBWXIDKE ; 
      15 KBWXIDBY KBWXIDBY ; 
      15 KBWCSTKE KBWCSTKE ; 
        20 KBWSTRKE KBWSTRKE ; 
          25 KBWXIDCO KBWXIDCO ; 
          25 KBWXIDST KBWXIDST ; 
        20 KBWXIDDP KBWXIDDP ; 
      15 KBWXIDDT KBWXIDDT ; 
    10 KBWCMTKE KBWCMTKE ; 
      15 KBWCMTID KBWCMTID ; 
      15 KBWCMTTP KBWCMTTP ; 
      15 KBWCMTSQ KBWCMTSQ ; 
    10 KBWSNMKE KBWSNMKE ; 
      15 KUMSTSNM KUMSTSNM ; 
      15 KUMXSTCD KUMXSTCD ; 
      15 KUMCITYS KUMCITYS ; 
    10 KBWBNMKE KBWBNMKE ; 
      15 KBWBNKLN KBWBNKLN ; 
      15 KBWBNKFN KBWBNKFN ; 
    10 KBWAUKEY KBWAUKEY ; 
      15 KBWAUSEQ KBWAUSEQ ; 
      15 KBWAUTYP KBWAUTYP ; 
      15 KBWAUCD KBWAUCD ; 
      15 KBWAUTBL KBWAUTBL ; 
      15 KBWAUSER KBWAUSER ; 
      15 KBWAUID KBWAUID ; 
    10 KBAGRP KBAGRP ; 
      15 KBABUYID KBABUYID ; 
      15 XXXLSTNM XXXLSTNM ; 
        20 KBWLNCHR KBWLNCHR [25] ; 
      15 XXXLSTSN XXXLSTSN ; 
        20 KBWSNCHR KBWSNCHR [10] ; 
      15 XXXFSTNM XXXFSTNM ; 
        20 KBWFNCHR KBWFNCHR ; 
        20 * char(14) ; 
      15 XXXMDINT XXXMDINT ; 
      15 XXXGNTNM XXXGNTNM ; 
      15 XXXPHN XXXPHN ; 
        20 KBWAREA1 KBWAREA1 ; 
        20 KBWPRFX1 KBWPRFX1 ; 
        20 KBWLINE1 KBWLINE1 ; 
      15 XXXAPHN XXXAPHN ; 
        20 KBWAREA2 KBWAREA2 ; 
        20 KBWPRFX2 KBWPRFX2 ; 
        20 KBWLINE2 KBWLINE2 ; 
      15 YBTCD YBTCD ; 
      15 KBABUYFL KBABUYFL ; 
      15 KUCCOID KUCCOID ; 
      15 KBW-KUMSTRID smallint ; // kba cu_stor_id
      15 XAD-ADDR-TYP-CD XAD-ADDR-TYP-CD ; 
      15 KULAAID KULAAID ; 
      15 XXXUSID1 XXXUSID1 ; 
      15 XXXUSID2 XXXUSID2 ; 
      15 YBBCD YBBCD [10] ; 
      15 XXXSTAT XXXSTAT ; 
      15 CU-COMNT-FL CU-COMNT-FL ; 
      15 ZZZSDT ZZZSDT ; 
      15 ZZZCHGDT ZZZCHGDT ; 
      15 ZZZCHGTM ZZZCHGTM ; 
      15 ZZZCHGCT ZZZCHGCT ; 
    10 KBWYBBNM KBWYBBNM ; 
      15 KBWYBBCH KBWYBBCH ; 
    10 KBWBGINF KBWBGINF ; 
      15 KBWBUYID KBWBUYID ; 
      15 KBWFSTNM KBWFSTNM ; 
      15 KBWLSTNM KBWLSTNM ; 
      15 KBASTAT KBASTAT ; 
      15 KUMSTRNM KUMSTRNM ; 
      15 KBWCOID KBWCOID ; 
      15 KUMSTRID KUMSTRID ; 
      15 KBWSTRID KBWSTRID ; 
        20 KBWSTRCH KBWSTRCH ; 
      15 XNXCD XNXCD ; 
      15 KBWDPTID KBWDPTID ; 
        20 KBWDPTCH KBWDPTCH ; 
      15 KBWANBR KBWANBR ; 
      15 KBWASEL KBWASEL [6] ; 
      15 KBWACNBR KBWACNBR [4] ; 
      15 KBWASNBR KBWASNBR [2] ; 
        20 KBWASCHR KBWASCHR ; 
      15 KBWAAID KBWAAID [4] ; 
      15 XXXADDR1 XXXADDR1 ; 
      15 XXXADDR2 XXXADDR2 ; 
      15 XXXADDR3 XXXADDR3 ; 
      15 XXXCITY XXXCITY ; 
      15 XSTCD XSTCD ; 
      15 XXXZIP XXXZIP ; 
      15 XCTCD XCTCD ; 
    10 KBWTBLID KBWTBLID ; 
    10 KBWATVFL KBWATVFL ; 
    10 KBWATCHF KBWATCHF ; 
    10 KBWFNDFL KBWFNDFL ; 
    10 KBWBFND KBWBFND ; 
    10 KBWAFND KBWAFND ; 
    10 KBWCFND KBWCFND ; 
    10 KBWSFND KBWSFND ; 
    10 KBWDFND KBWDFND ; 
    10 KBWCNT KBWCNT ; 
    10 KBWPAGE KBWPAGE ; 
    10 KBWTOTPG KBWTOTPG ; 
    10 KBWRMNDR KBWRMNDR ; 
    10 KBWSPLIT KBWSPLIT ; 
      15 KBWSPLT1 KBWSPLT1 ; 
      15 KBWSPLT2 KBWSPLT2 ; 
      15 KBWSPLT3 KBWSPLT3 ; 
      15 KBWSPLT4 KBWSPLT4 ; 
    10 KBWDATE KBWDATE ; 
    10 KBWEFFDT KBWEFFDT ; 
      15 KBWEFFYR KBWEFFYR ; 
      15 KBWEFFMO KBWEFFMO ; 
      15 KBWEFFDY KBWEFFDY ; 
    10 KBXXEDT KBXXEDT ; 
    10 KBXXXDT KBXXXDT ; 
    10 KBWDEF1 KBWDEF1 ; 
      15 KBWCHR1 KBWCHR1 [30] ; 
    10 KBWDEF2 KBWDEF2 ; 
      15 KBWCHR2 KBWCHR2 [10] ; 
    10 KBW-BXREF-CNT KBW-BXREF-CNT ; 
    10 SM4REPID SM4REPID ; 
    10 YSBCD YSBCD ; 
    10 KUCCONM KUCCONM ; 
    10 CU-CO-SHORT-NM CU-CO-SHORT-NM ; 
    10 KBW-SM4REPID-KEY KBW-SM4REPID-KEY ; 
    10 KBW-CURR-PAGE KBW-CURR-PAGE ; 
    10 KBW-MAX-PAGE KBW-MAX-PAGE ; 
    10 KBW-SAVE-SELECT KBW-SAVE-SELECT [6] ; 
    10 KBW-SAVE-KUCCOID KBW-SAVE-KUCCOID [4] ; 
    10 KBW-SAVE-KUMSTRID KBW-SAVE-KUMSTRID [2] ; 
    10 KBW-SAVE-KULAAID KBW-SAVE-KULAAID [4] ; 
    10 YMLCD YMLCD ; 
    10 KBW-XNX-DEPT-ID-NUM KBW-XNX-DEPT-ID-NUM ; 
      15 KBW-XNX-DEPT-ID-CHAR KBW-XNX-DEPT-ID-CHAR ; 
end // end KBWREC

//*** RECORD=KBXREC ****
// This record is the Buyer/customer cross reference,
// DCUST.VBXREF01.  The DCLGEN is DCL00714.
// 
//    date       who       why
//  --------   --------   -------------------------------------
//  04-10-92   jricha     added 3 fields for new databases.
// 
//  08/04/93   tmorri     Database Changes.
//                        added:    xxx-user-id
//                        deleted:  xxx-rank-nbr
// ************************************************************
// **********************
Record KBXREC type basicRecord
  5 KBXGRP KBXGRP ; 
    10 KBABUYID KBABUYID ; 
    10 KUCCOID KUCCOID ; 
    10 KUMSTRID KUMSTRID ; 
    10 XNXCD XNXCD ; 
    10 YSBCD YSBCD ; 
    10 YMLCD YMLCD ; 
    10 KBXXEDT KBXXEDT ; 
    10 KBXXXDT KBXXXDT ; 
    10 XXX-USER-ID XXX-USER-ID ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end KBXREC

Record KBYREC type basicRecord
  5 KBY-GROUP KBY-GROUP ; 
    10 KBY-TS-LENGTH KBY-TS-LENGTH ; 
    10 KBY-TS-ROW KBY-TS-ROW [14] ; 
      15 KBY-SELECT KBY-SELECT ; 
      15 KBABUYID KBABUYID ; 
      15 XXXFSTNM XXXFSTNM ; 
      15 XXXLSTNM XXXLSTNM ; 
      15 XXXMDINT XXXMDINT ; 
      15 XXXGNTNM XXXGNTNM ; 
      15 XXXSTAT XXXSTAT ; 
      15 YBTCD YBTCD ; 
      15 KBABUYFL KBABUYFL ; 
end // end KBYREC

DataItem KB3DATA char(3960)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KB3GRP char(3961)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KB3TRAN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_BUYER_FL
DataItem KBABUYFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_BUYER_ID
DataItem KBABUYID int {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// buyer record group field
DataItem KBAGRP char(164)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// account link status
DataItem KBASTAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KBBGRP char(174)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// change flag
DataItem KBC-CHANGE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for kbcrec
DataItem KBC-GROUP char(874)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temporary storage length
DataItem KBC-TS-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temporary storage row
DataItem KBC-TS-ROW char(58)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// transaction code
DataItem KBCTRAN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KBIGROUP char(12)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO pass count (for IO4330)
DataItem KBIOCNT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IO pass date (for IO4330)
DataItem KBIODATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IO pass stat (for IO4330)
DataItem KBIOSTAT char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO pass task (for IO4330)
DataItem KBIOTASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO pass date   for KB1000
DataItem KBK-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// group level for KBKREC
DataItem KBK-GROUP char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO pass status for KB1000
DataItem KBK-STATUS char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO pass task   for KB1000
DataItem KBK-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// count returned from KB1000
DataItem KBK-YSB-COUNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// count of active ysb/reps
DataItem KBL-YSB-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// IO date (for KB1040)
DataItem KBLDATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KBLGROUP char(57)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO stat (for KB1040)
DataItem KBLSTAT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO task (for KB1040)
DataItem KBLTASK char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// io tran (for KB1040)
DataItem KBLTRAN char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// IO type (for KB1040)
DataItem KBLTYPE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bxref count
DataItem KBW-BXREF-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save ts page for browse
DataItem KBW-CURR-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save ts page for browse
DataItem KBW-MAX-PAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save mailing company id
DataItem KBW-SAVE-KUCCOID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save mailing address id
DataItem KBW-SAVE-KULAAID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save mailing store id
DataItem KBW-SAVE-KUMSTRID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// save mailing address selection
DataItem KBW-SAVE-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// rep key for use w/ta1tblke
DataItem KBW-SM4REPID-KEY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 2 byte character dept id
DataItem KBW-XNX-DEPT-ID-CHAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 2 byte numeric dept id
DataItem KBW-XNX-DEPT-ID-NUM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// address id for addr selection
DataItem KBWAAID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// company for addr selection
DataItem KBWACNBR num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// add function being used
DataItem KBWADDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// addr cmpny id
DataItem KBWADRCO num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// addr id
DataItem KBWADRID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// addr key for use w/ ta1tblke
DataItem KBWADRKE char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address found flag
DataItem KBWAFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// numeric redefinition
DataItem KBWANBR num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// area code portion of phone 1
DataItem KBWAREA1 char(3)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// area code of phone 2
DataItem KBWAREA2 char(3)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// store addr sel character
DataItem KBWASCHR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// address selection
DataItem KBWASEL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store for addr selection
DataItem KBWASNBR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// attaches done flag
DataItem KBWATCHF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// activating flag
DataItem KBWATVFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// before/after flag
DataItem KBWAUCD char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// company/buyer id
DataItem KBWAUID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// audit key for use w/ ta1tblke
DataItem KBWAUKEY char(31)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sequence number
DataItem KBWAUSEQ num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// user id
DataItem KBWAUSER char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table name
DataItem KBWAUTBL char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// updt type (a,c,d)
DataItem KBWAUTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buyer found flag
DataItem KBWBFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buyer gen info group level
DataItem KBWBGINF char(284)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buyer id for use w/ ta1tblke
DataItem KBWBIDKE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buyer nm key - first nm
DataItem KBWBNKFN char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buyer nm key - last nm
DataItem KBWBNKLN char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buyer nm key - w w/ ta1tblke
DataItem KBWBNMKE char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// browse function being used
DataItem KBWBRSFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s buyer id
DataItem KBWBUYID num(7)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// customer found flag
DataItem KBWCFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// changes made flag - other maps
DataItem KBWCH2FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// changes made flag
DataItem KBWCHGFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s short def 1 by char
DataItem KBWCHR1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s short def 2 by char
DataItem KBWCHR2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// comnt id
DataItem KBWCMTID num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = "0", inputRequired = no
}
end

// cmnt key for use w/ ta1tblke
DataItem KBWCMTKE char(14)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// comnt seq
DataItem KBWCMTSQ num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comnt typ
DataItem KBWCMTTP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index to count cmnt records
DataItem KBWCNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CU_CO_ID
DataItem KBWCOID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cust key for use w/ ta1tblke
DataItem KBWCSTKE char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// date
DataItem KBWDATE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// w/s short definition 1
DataItem KBWDEF1 char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s short definition 2
DataItem KBWDEF2 char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dept  found flag
DataItem KBWDFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dept id (character)
DataItem KBWDPTCH char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dept id (numeric)
DataItem KBWDPTID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// duplicate flag
DataItem KBWDUPFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// effective date group level
DataItem KBWEFFDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// effective day
DataItem KBWEFFDY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// effective month
DataItem KBWEFFMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// effective year
DataItem KBWEFFYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// end of database/file flag
DataItem KBWEOF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// error flag
DataItem KBWERRFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s first name character
DataItem KBWFNCHR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// browse found flag
DataItem KBWFNDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s first name
DataItem KBWFSTNM char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KBWGROUP char(846)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line number of phone 1
DataItem KBWLINE1 char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// line of phone 2
DataItem KBWLINE2 char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// w/s last name character
DataItem KBWLNCHR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s last name
DataItem KBWLSTNM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// message displayed flag
DataItem KBWMSGFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// numeric work field 1
DataItem KBWORK1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// numeric work field 2
DataItem KBWORK2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current page
DataItem KBWPAGE num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// pfkey pressed
DataItem KBWPFKEY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// prefix of phone 1
DataItem KBWPRFX1 char(3)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// prefix of phone 2
DataItem KBWPRFX2 char(3)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// return flag
DataItem KBWRETNF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// load screen flag
DataItem KBWRLDFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// remainder for page calc
DataItem KBWRMNDR num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// selection made flag
DataItem KBWSELFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store found flag
DataItem KBWSFND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// w/s short last name character
DataItem KBWSNCHR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// stor nm key - use w/ ta1tblke
DataItem KBWSNMKE char(22)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// field break down
DataItem KBWSPLIT char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first character
DataItem KBWSPLT1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// second character
DataItem KBWSPLT2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// third character
DataItem KBWSPLT3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// fourth character
DataItem KBWSPLT4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store id (character)
DataItem KBWSTRCH char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store id (numeric)
DataItem KBWSTRID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// stor key for use w/ ta1tblke
DataItem KBWSTRKE char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen access index
DataItem KBWSUB smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage index
DataItem KBWSUB1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working storage index
DataItem KBWSUB2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table for KB0U to work on
DataItem KBWTBLID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// total number of pages
DataItem KBWTOTPG num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// buyer id
DataItem KBWXIDBY num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// cmpny id
DataItem KBWXIDCO num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dept id
DataItem KBWXIDDP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// e7f date
DataItem KBWXIDDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// xref key for use w/ ta1tblke
DataItem KBWXIDKE char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// store id
DataItem KBWXIDST num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// YBBCD character conversion
DataItem KBWYBBCH char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YBBCD numeric conversion
DataItem KBWYBBNM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buyer xref group field
DataItem KBXGRP char(44)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CU_BUYER_XREF_EDT
DataItem KBXXEDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// CU_BUYER_XREF_TDT
DataItem KBXXXDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kbyrec group level
DataItem KBY-GROUP char(760)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// select indicator
DataItem KBY-SELECT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage length
DataItem KBY-TS-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage row
DataItem KBY-TS-ROW char(54)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

