package pf.common;
import corpcom5.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import sy.common.*;
//*** RECORD=PF1REC ****
// PF1REC is used to pass reference numbers and other infor-
// mation between Profitability applications when transfering
// via PFkeys, instead of the main Profitability menu.  This
// stored data allows the sending application to "remember"
// where it came from, and return to that point later.
// 
// PF1REC is used by the rtn XPPF200, which is performed by
// both sending and receiving applications.
// 
// Currently, these applications use the PFkey transfer:
// 
//         PF0C  goes to & from PF0E via PF14
//          "                   PF0F  "  PF15
//          "     "   "  "  "   PF0D  "  PF16
//          "     "   "  "  "   PF0B  "  PF17
// 
//         PF0G  goes to & from PF0E via PF14
//          "                   PF0F  "  PF15
//          "     "   "  "  "   PF0D  "  PF16
// 
//         PF0H  goes to & from PF0E via PF14
//          "                   PF0F  "  PF15
//          "     "   "  "  "   PF0D  "  PF16
//         PF0p  goes to & from PF0E via PF14
//          "                   PF0F  "  PF15
//          "     "   "  "  "   PF0D  "  PF16
// this record will also be used to pass summary information
// from the summary view application(pf0b) to the format view
// applications(pf0k, pf0l, pf0m, pf0n, pf0o). the information
// will be to used in initializing each of the format
// applications.
// 
// maintenance log:
//   date      init     comments
// --------   ------   ----------------------------------------
// 12-30-88   mhamil   initial transfer to production.
//  2-28-89   dcassi   added new pf0h fields and filler.
//  2-15-90   bmanil   added pf1atr1-8, pf1prm, pf1cyc,pf1srt
//                     pf1side, pf1anx for pf0p application.
// 10/02/93   dcassi   moved pf1sort from level 20 down to
//                     level 25 and added pf1-sort-char-rdf at
//                     level 20, above it.  moved pf1tblx from
//                     level 15 down to level 20 and added
//                     pf1-tbl-index-char-rdf at level 15,
//                     above it.  this is so we can check
//                     if they are numeric and move 0 to them
//                     if it they are not, in pf0p.
// **********************
Record PF1REC type basicRecord
  10 PF1PASS PF1PASS ; 
    15 PFESUMNM PFESUMNM ; 
    15 PFISDESC PFISDESC [8] ; 
    15 PF1STLVL PF1STLVL ; 
    15 PF1STSEQ PF1STSEQ ; 
    15 PF1DISP PF1DISP ; 
    15 PF1XFERF PF1XFERF ; 
    15 PF1PDEFF PF1PDEFF ; 
    15 PF1ORIG PF1ORIG ; 
    15 PF1CURR PF1CURR ; 
    15 PF1NAM PF1NAM ; 
    15 PF1FMT PF1FMT ; 
    15 PF1ISG PF1ISG ; 
    15 PF1ATT PF1ATT ; 
    15 PF1COL PF1COL ; 
    15 PF1DT PF1DT ; 
    15 PF1ELE PF1ELE ; 
      20 PF1FILL PF1FILL ; 
      20 PF1ICLS PF1ICLS ; 
    15 PF1SEQ PF1SEQ ; 
    15 PF1BMY PF1BMY ; 
      20 PF1BMM PF1BMM ; 
      20 PF1BYY PF1BYY ; 
    15 PF1-TBL-INDEX-CHAR-RDF PF1-TBL-INDEX-CHAR-RDF ; 
      20 PF1TBLX PF1TBLX ; 
    15 PF1IDX PF1IDX ; 
    15 PF1SKEY PF1SKEY ; 
    15 PF1DES PF1DES ; 
    15 PF1HGRP PF1HGRP ; 
      20 PFESRCNM PFESRCNM ; 
      20 PFESUMDE PFESUMDE ; 
      20 PF1DSC PF1DSC ; 
      20 PF1PRY PF1PRY ; 
      20 PFELGCPG PFELGCPG ; 
      20 XXXUNTXT XXXUNTXT ; 
      20 PF1CSQ PF1CSQ ; 
      20 XROCD XROCD ; 
      20 XROABRV XROABRV ; 
      20 XXXNDTXT XXXNDTXT ; 
      20 PFECYCIN PFECYCIN ; 
      20 XXXNBRCY XXXNBRCY ; 
      20 XXXNLTXT XXXNLTXT ; 
      20 PFFPRLVL PFFPRLVL ; 
      20 PFFFMCH PFFFMCH [8] ; 
      20 PFIDESC PFIDESC [8] ; 
      20 PFDCDVAL PFDCDVAL [8] ; 
      20 PF1VDS PF1VDS [7] ; 
      20 PF1PRD PF1PRD ; 
      20 XGPCD XGPCD ; 
      20 SY1STNBR SY1STNBR ; 
      20 SY2CLRID SY2CLRID ; 
      20 XDMCD XDMCD ; 
      20 XQACD XQACD ; 
      20 XLCCD XLCCD ; 
      20 SY1SSTNM SY1SSTNM ; 
      20 SY2CLRAB SY2CLRAB ; 
      20 PFFPRFRS PFFPRFRS ; 
      20 PFESRTEL PFESRTEL ; 
      20 YISCD YISCD ; 
      20 PFBISGRP PFBISGRP ; 
      20 PFESEIND PFESEIND ; 
      20 PFESQCOL PFESQCOL ; 
      20 PF1ELEM PF1ELEM [8] ; 
      20 PF1CLS PF1CLS ; 
      20 PF1DEO PF1DEO ; 
      20 PF1ASO PF1ASO ; 
      20 PF1COLUM PF1COLUM ; 
      20 PFFDTFMI PFFDTFMI ; 
      20 PF1SCRNF PF1SCRNF ; 
      20 PF1RECF PF1RECF ; 
      20 PF1EZEMN PF1EZEMN ; 
      20 PF1S4AIN PF1S4AIN ; 
    15 PF1GRP PF1GRP ; 
      20 PF1GPRI PF1GPRI ; 
      20 PF1ATR1 PF1ATR1 ; 
      20 PF1ATR2 PF1ATR2 ; 
      20 PF1ATR3 PF1ATR3 ; 
      20 PF1ATR4 PF1ATR4 ; 
      20 PF1ATR5 PF1ATR5 ; 
      20 PF1ATR6 PF1ATR6 ; 
      20 PF1ATR7 PF1ATR7 ; 
      20 PF1ATR8 PF1ATR8 ; 
      20 PF1PRM PF1PRM ; 
      20 PF1CYC PF1CYC ; 
      20 PF1-SORT-CHAR-RDF PF1-SORT-CHAR-RDF ; 
        25 PF1SORT PF1SORT ; 
      20 PF1SIDE PF1SIDE ; 
      20 PF1ANX PF1ANX ; 
      20 PF1PAGE PF1PAGE ; 
      20 * char(43) ; 
  10 * char(200) ; 
end // end PF1REC

//*** RECORD=PF2REC ****
// **********************************************************
// *   this record is used to store windowing values from   *
// *   dproft.vsumcd01. the data base is accessed by        *
// *   process xpfsm01 to obtain                            *
// *   values specific to the system ('pf', 'sa', etc.)     *
// *   and a particular summary code ('xga', xot', etc.).   *
// *   common process xpsum01 will will scroll thru the     *
// *   values in pf1rec and will display 'windows'.         *
// **********************************************************
// **********************
Record PF2REC type basicRecord
  5 PF2WGRP PF2WGRP [200] ; 
    10 PF2WSMK PF2WSMK ; 
      15 PF2WSTK PF2WSTK ; 
        20 YSMTBLPF YSMTBLPF ; 
        20 YSMSYSPF YSMSYSPF ; 
        20 YSMSUMID YSMSUMID ; 
      15 YSMSUMCD YSMSUMCD ; 
      15 YSMSRCVL YSMSRCVL ; 
    10 YSMSMDSC YSMSMDSC ; 
    10 XXXSTAT XXXSTAT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PF2REC

//*** RECORD=PFAREC ****
// *************  Profitability Control Table  ****************
// 
// DB2 Table:          DPROFT.VPFCTL01
// 
// Copylib Member:     DCL00472
// 
// I/O Module:         IO2670
// 
// Key to DB2 Table:   No Key - One Row Table
// 
// Maintenance Log:
// 
//   Date    Init  Comments
// --------  ----  --------------------------------------------
// 06-23-88   DC   Created CSP Record
// 08-19-88   DC   Added PFANXTNO and PFAYREND data items.
// 01/29/91  CMH   Chg all pfa* data item literal descriptions
//                  to applicable db2 name.
// **********************
Record PFAREC type basicRecord
  10 PFABSPRM PFABSPRM ; 
  10 PFABSPRY PFABSPRY ; 
  10 PFALKOTF PFALKOTF ; 
  10 PFAIVCMO PFAIVCMO ; 
  10 PFACLMMO PFACLMMO ; 
  10 PFACOMMO PFACOMMO ; 
  10 PFAINVMO PFAINVMO ; 
  10 PFANBKMO PFANBKMO ; 
  10 PFACRACM PFACRACM ; 
  10 PFACLSI PFACLSI ; 
  10 PFANXTNO PFANXTNO ; 
  10 PFANSUMN PFANSUMN ; 
  10 PFAYREND PFAYREND ; 
  10 PFASTBLF PFASTBLF ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end PFAREC

//*** RECORD=PFBREC ****
// ***** profitability income/statement group table ***********
// 
// db2 table :         dproft.visgrp01
// 
// copylib member :    dcl00482
// 
// i/o module :        io2710
// 
// key to db2 table :  pfbref
//                     yiscd(1)
// 
// maintenance log :
// 
//   date       initials      comments
// --------     --------      -----------------------------
// 08/10/88        mh         created record.
// 01/29/91     CHYDE         Change all pfb* data item literal
//                             descriptions to db2 name.
// **********************
Record PFBREC type basicRecord
  10 PFBREF PFBREF ; 
  10 YISCD YISCD [2] ; 
  10 PFBISGRP PFBISGRP ; 
  10 PFBISDSC PFBISDSC ; 
  10 XXXUSRID XXXUSRID ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end PFBREC

//*** RECORD=PFCREC ****
// ***********  Profitability Report Format Table *************
// 
// DB2 Table:          DPROFT.VRPTFM01
// 
// Copylib Member:     DCL00483
// 
// I/O Module:         IO02730
// 
// Key to DB2 Table:   PFCref
// 
// Maintenance Log:
// 
//   Date    Init  Comments
// --------  ----  --------------------------------------------
// 06-15-88   DC   Created CSP Record
// 01/29/91  CHYDE Chg pfc* data item literal to db names.
// **********************
Record PFCREC type basicRecord
  10 PFCREF PFCREF ; 
  10 PFCFMNBR PFCFMNBR ; 
  10 YFTCD YFTCD ; 
  10 YTPCD YTPCD [13] ; 
  10 YPDCD YPDCD [13] ; 
  10 PFCPCTC PFCPCTC [8] ; 
  10 XXXUSRID XXXUSRID ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end PFCREC

//*** RECORD=PFDREC ****
// ********  Profitability Reporting Attribute Table  *********
// 
// db2 table:          dproft.vrptat01
// 
// copylib member:     dcl00468
// 
// i/o mod:            io2740
// 
// key to db2 table:   pfdref
// 
// maintenance log:
// 
// date     init      comments
// ------   ----      ----------------------------------------
// 06-21-86  mh       created csp record
// 01/29/91 CHYDE     Chg pfd* data item literal descriptions
//                     to db2 name.
// **********************
Record PFDREC type basicRecord
  10 PFDREF PFDREF ; 
  10 PFICD PFICD [8] ; 
  10 PFDVALFL PFDVALFL [8] ; 
  10 PFDCDVAL PFDCDVAL [56] ; 
  10 XGPCD XGPCD [9] ; 
  10 SY1STNBR SY1STNBR [9] ; 
  10 SY2CLRID SY2CLRID [9] ; 
  10 XDMCD XDMCD [9] ; 
  10 XQACD XQACD [9] ; 
  10 XLCCD XLCCD [9] ; 
  10 XXXUSRID XXXUSRID ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end PFDREC

//*** RECORD=PFEREC ****
// ********  Profitabilty Summary Attributes Table  ***********
// 
// db2 table:          dproft.vsumat01
// 
// copylib member:     dcl00484
// 
// i/o module:         io2770
// 
// key to db2 table:   pfesumnm
//                     pfbref - used for data verification
//                     pfcref - used for data verification
//                     pfdref - used for data verification
// 
// maintenance log:
// 
//   date      init       comments
// -------     ----    ------------------------------------
// 06-24-88     mh     created record.
// 11-10-89     dc     added zznbrrow.
// 01/29/91    CMH     Chg pfe* data item literal descriptions
//                     to applicable db2 name.
// **********************
Record PFEREC type basicRecord
  5 PFEGRP PFEGRP ; 
    10 PFESUMNM PFESUMNM ; 
    10 PFESRCNM PFESRCNM ; 
    10 PFESUMDE PFESUMDE ; 
    10 PFGSUMN PFGSUMN ; 
    10 PFCREF PFCREF ; 
    10 PFBREF PFBREF ; 
    10 PFDREF PFDREF ; 
    10 PFABSPRM PFABSPRM ; 
    10 PFABSPRY PFABSPRY ; 
    10 PFEPRIND PFEPRIND ; 
    10 PFESRTEL PFESRTEL ; 
    10 YISCD YISCD ; 
    10 PFBISGRP PFBISGRP ; 
    10 PFESEIND PFESEIND ; 
    10 PFESQCOL PFESQCOL ; 
    10 PFECRTDT PFECRTDT ; 
    10 PFECYCIN PFECYCIN ; 
    10 XXXUSRID XXXUSRID ; 
    10 PFESTIND PFESTIND ; 
    10 PFELGCPG PFELGCPG ; 
    10 ZZNBRROW ZZNBRROW ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PFEREC

//*** RECORD=PFFREC ****
// *********  Profitability Report Parameter Table  ***********
// 
// db2 table :            dproft.vrptpm01
// 
// copylib member :       dcl00487
// 
// i/o module :           io2880
// 
// key to db2 table :     pfesumnm - summary name
//                        pfanxtno - next print parameter seq #
// 
// ******** note *********
// if this record changes, pf0pw02's first portion must be
// changed to match.  pf0pw02 contains other stuff besides
// pffrec data, and that must remain.  only match the pffrec
// portion
// ******** note *********
// 
// maintenance log :
// 
//   date       init    comments
// ________    ______   ______________________________________
//  8-08-88      mh     created csp record.
// 12-30-88      mh     original transfer to production.
//  1-26-89    dcassi   added PFECYCIN.
//  2-28-89    dcassi   added XXXUNTXT, XXXNLTXT, and XXXNDTXT.
//  1-15-90    dbrock   added PFFSTIND.
//  2-15-90    bmanil   added PFFgroup.
// 10-02-90    JWOOD    CHANGED XROCD FROM 2 TO 4 CHARS...
// 01/31/91    CHYDE    Chg pff* data item literal descriptions
//                      to corres db2 name.
// **********************
Record PFFREC type basicRecord
  5 PFFGROUP PFFGROUP ; 
    10 PFESUMNM PFESUMNM ; 
    10 PFANXTNO PFANXTNO ; 
    10 PFFSTIND PFFSTIND ; 
    10 PFFRPTDS PFFRPTDS ; 
    10 PFFPRLVL PFFPRLVL ; 
    10 XROCD XROCD ; 
    10 PFFDTFMI PFFDTFMI ; 
    10 PFFPRTYP PFFPRTYP ; 
    10 XXXNBRCY XXXNBRCY ; 
    10 PFFPRTYI PFFPRTYI ; 
    10 PFFPRFRS PFFPRFRS ; 
    10 PFECYCIN PFECYCIN ; 
    10 PFFFMCH PFFFMCH [8] ; 
    10 PFICD PFICD [8] ; 
    10 PFDCDVAL PFDCDVAL [8] ; 
    10 XGPCD XGPCD ; 
    10 SY1STNBR SY1STNBR ; 
    10 SY2CLRID SY2CLRID ; 
    10 XDMCD XDMCD ; 
    10 XQACD XQACD ; 
    10 XLCCD XLCCD ; 
    10 PFESRTEL PFESRTEL ; 
    10 YISCD YISCD ; 
    10 PFBISGRP PFBISGRP ; 
    10 PFESEIND PFESEIND ; 
    10 PFESQCOL PFESQCOL ; 
    10 XXXUSRID XXXUSRID ; 
    10 XXXUNTXT XXXUNTXT ; 
    10 XXXNLTXT XXXNLTXT ; 
    10 XXXNDTXT XXXNDTXT ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PFFREC

//*** RECORD=PFGREC ****
// **************  Profitability Summary Table  ***************
// 
// db2 table :          dproft.vsumry01
// 
// copylib member :     dcl00485
// 
// i/o module :         io2920
// 
// key to db2 table :   key 1 - pfesumnm
//                              pfdcdval 1
//                              pfdcdval 2
//                              pfdcdval 3
//                              pfdcdval 4
//                              pfdcdval 5
//                              pfdcdval 6
//                              pfdcdval 7
//                              xgpcd
//                              sy1stnbr
//                              sy2clrid
//                              xdmcd
//                              xqacd
//                              xlccd
// 
// 
//                      key 2 - pfesumnm
//                              pfglvlno
//                              pfglvlsq
// 
// maintenance log :
//   date          init      comments
// --------        ----      ---------------------------------
// 09-08-88         mh       created record.
// 01/31/91       CHYDE      Chg pfg* data item literal desc
//                            to corres db2 name.
// **********************
Record PFGREC type basicRecord
  10 PFGSUMN PFGSUMN ; 
  10 PFESUMNM PFESUMNM ; 
  10 PFGLVLNO PFGLVLNO ; 
  10 PFGLVLSQ PFGLVLSQ ; 
  10 PFGISSEQ PFGISSEQ ; 
  10 PFDCDVAL PFDCDVAL [7] ; 
  10 PFGSYIND PFGSYIND ; 
  10 XGPCD XGPCD ; 
  10 SY1STNBR SY1STNBR ; 
  10 SY2CLRID SY2CLRID ; 
  10 XDMCD XDMCD ; 
  10 XQACD XQACD ; 
  10 XLCCD XLCCD ; 
  10 YTYCD YTYCD ; 
  10 YISCD YISCD [2] ; 
  10 PFBISGRP PFBISGRP ; 
  10 PFGQTY PFGQTY [13] ; 
  10 ZZZSDT ZZZSDT ; 
end // end PFGREC

//*** RECORD=PFIREC ****
// Profitability Reporting Attribute Field Description Table
// 
// db2 table:          dproft.vfield01
// 
// copylib member:     dcl00527
// 
// i/o mod:            io2890
// 
// key to db2 table:   pficd
// 
// ****** note ***********
// if this record is changed, pf0pw03 must match it
// ****** note ***********
// 
// maintenance log:
// 
// date     init      comments
// ------   ----      ----------------------------------------
// 08-15-88  mh       created csp record
// 01-15-90 dbrock    added PFIABRV
// 02-15-90 bmanil    added PFIgroup
// 01/31/91 CHYDE     Chg pfi* data item literal descriptions
//                    only to corres db2 name.
// **********************
Record PFIREC type basicRecord
  5 PFIGROUP PFIGROUP ; 
    10 PFICD PFICD ; 
    10 PFIDESC PFIDESC ; 
    10 PFISDESC PFISDESC ; 
    10 PFIABRV PFIABRV ; 
    10 PFIDB2NM PFIDB2NM ; 
    10 ZZZSDT ZZZSDT ; 
    10 ZZZCHGDT ZZZCHGDT ; 
    10 ZZZCHGTM ZZZCHGTM ; 
    10 ZZZCHGCT ZZZCHGCT ; 
end // end PFIREC

//*** RECORD=PFJREC ****
// ***  PROFITABILITY GENERAL LEDGER CODES  *******************
// 
// DB2 Table:           DPROFT.VGLCDS01
// 
// Copylib Member:      DCL00481
// 
// I/O Mod:             IO4360
// 
// Key to DB2 Table:    GLACD
// 
// Date Created:        11/09/89
// 
// Maintenance Log:
//   Date    Init.   Comment
// --------  -----   ---------------------------------------
// 11-17-89   ehc    Initial record creation
//  1-19-90   ehc    rename pf-xref         to pf-gl-xref
//                        & pf-bank-intf-fl to pf-bank-intf-ind
// 
// **********************
Record PFJREC type basicRecord
  10 GLACD GLACD ; 
  10 GLADESC GLADESC ; 
  10 GLASDESC GLASDESC ; 
  10 PFJXREF PFJXREF ; 
  10 YISCD YISCD ; 
  10 PFJARFL PFJARFL ; 
  10 PFJBNKIF PFJBNKIF ; 
  10 COCMFL COCMFL ; 
  10 PFJRESFL PFJRESFL ; 
  10 PFJPCTFL PFJPCTFL ; 
  10 XATCD XATCD [5] ; 
  10 XGPCD XGPCD [6] ; 
  10 XXXGLAC1 XXXGLAC1 ; 
  10 XXXGLAC2 XXXGLAC2 ; 
  10 XXXSTAT XXXSTAT ; 
  10 ZZZSDT ZZZSDT ; 
  10 ZZZCHGDT ZZZCHGDT ; 
  10 ZZZCHGTM ZZZCHGTM ; 
  10 ZZZCHGCT ZZZCHGCT ; 
end // end PFJREC

//*** RECORD=PFWREC ****
// pfwrec is the w/s area for common data names used throughout
// the profitability system.
// **********************
Record PFWREC type basicRecord
  10 PFWCPROC PFWCPROC ; 
  10 PFWMSG PFWMSG ; 
    15 PFWMSG1 PFWMSG1 ; 
    15 PFWMSG2 PFWMSG2 ; 
  10 PFWCTOAP PFWCTOAP ; 
  10 PFWCITEM PFWCITEM ; 
  10 PFWEOAF PFWEOAF ; 
  10 PFWEOSF PFWEOSF ; 
  10 PFWERRF PFWERRF ; 
  10 PFW1STF PFW1STF ; 
  10 PFWRECF PFWRECF ; 
  10 PFWLIMIT PFWLIMIT ; 
  10 PFWTBLX PFWTBLX ; 
  10 PFWIDX PFWIDX ; 
  10 PFWSUB PFWSUB ; 
  10 PFWSUB1 PFWSUB1 ; 
  10 PFWSUB2 PFWSUB2 ; 
  10 PFWSUB3 PFWSUB3 ; 
  10 PFWDTE PFWDTE ; 
  10 PFWCPG PFWCPG ; 
  10 PFWTPG PFWTPG ; 
  10 PFWEXT PFWEXT ; 
  10 PFWHKEY PFWHKEY ; 
  10 XXXUSRID XXXUSRID ; 
  10 PFWSUMKY PFWSUMKY ; 
    15 PFWSETKY PFWSETKY ; 
      20 PFWTBLID PFWTBLID ; 
      20 PFWSYSID PFWSYSID ; 
      20 PFWSUMID PFWSUMID ; 
    15 PFWSUMCD PFWSUMCD ; 
    15 PFWSUMVL PFWSUMVL ; 
  10 PFWTBLF PFWTBLF ; 
  10 PFWEDTF PFWEDTF ; 
  10 PFWHPROD PFWHPROD ; 
  10 PFWPROD PFWPROD ; 
    15 XGPCD XGPCD ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 XDMCD XDMCD ; 
    15 XQACD XQACD ; 
    15 XLCCD XLCCD ; 
  10 PFWHFLGS PFWHFLGS ; 
    15 PFWHGPCF PFWHGPCF ; 
    15 PFWHSTYF PFWHSTYF ; 
    15 PFWHCOLF PFWHCOLF ; 
    15 PFWHDIMF PFWHDIMF ; 
    15 PFWHQUAF PFWHQUAF ; 
    15 PFWHLFCF PFWHLFCF ; 
  10 PFWHPRD2 PFWHPRD2 ; 
  10 PFWSLSRP PFWSLSRP ; 
  10 PFWCOUNT PFWCOUNT ; 
  10 PFWREF PFWREF ; 
  10 PFWSAVDX PFWSAVDX ; 
  10 PFWNXTDX PFWNXTDX ; 
  10 PFDCDVAL PFDCDVAL [7] ; 
    15 PFWCDNUM PFWCDNUM ; 
      20 PFWCD4 PFWCD4 ; 
        25 PFWCD3 PFWCD3 ; 
          30 PFWCD2 PFWCD2 ; 
          30 PFWFIL1 PFWFIL1 ; 
        25 PFWFIL2 PFWFIL2 ; 
  10 PFWCH4 PFWCH4 ; 
    15 PFWCH1 PFWCH1 [4] ; 
  10 PFWDESC PFWDESC [8] ; 
  10 PFWVALER PFWVALER [7] ; 
  10 PFIDESC PFIDESC [8] ; 
  10 PFWHDESC PFWHDESC ; 
  10 PFWABRV PFWABRV [8] ; 
  10 PFWPRDAT PFWPRDAT ; 
  10 PFWDATE PFWDATE ; 
    15 PFWMONTH PFWMONTH ; 
    15 PFWDAY PFWDAY ; 
    15 PFWYEAR PFWYEAR ; 
  10 PFWCDATE PFWCDATE ; 
    15 PFWCENT PFWCENT ; 
    15 PFWCYR PFWCYR ; 
    15 PFWCMO PFWCMO ; 
    15 PFWCDA PFWCDA ; 
  10 SY2CLRAB SY2CLRAB ; 
end // end PFWREC

// sort 1 or 2 used - redefine
DataItem PF1-SORT-CHAR-RDF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// position on table - redefine
DataItem PF1-TBL-INDEX-CHAR-RDF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sequence no
DataItem PF1ANX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pf0h scrn 4 ascend scrn entry
DataItem PF1ASO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 1
DataItem PF1ATR1 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 2
DataItem PF1ATR2 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 3
DataItem PF1ATR3 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 4
DataItem PF1ATR4 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 5
DataItem PF1ATR5 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 6
DataItem PF1ATR6 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 7
DataItem PF1ATR7 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attr 8
DataItem PF1ATR8 char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// attribute ref number
DataItem PF1ATT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      month only
DataItem PF1BMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// base month/year (mmyy)
DataItem PF1BMY num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      year  only
DataItem PF1BYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pf0h scrn 4 i/s cls scrn entry
DataItem PF1CLS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// data/time sort column
DataItem PF1COL num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pf0h scrn 4 column scrn entry
DataItem PF1COLUM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pf0h change sort seq indicator
DataItem PF1CSQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current application
DataItem PF1CURR char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// cycle parameter
DataItem PF1CYC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h scrn 4 descend scrn entry
DataItem PF1DEO char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// summary description
DataItem PF1DES char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen display type
DataItem PF1DISP char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h print or new sum desc
DataItem PF1DSC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// data/time sort key
DataItem PF1DT char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// element sort key
DataItem PF1ELE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h scrn 4 element scrn entry
DataItem PF1ELEM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h screen message
DataItem PF1EZEMN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// i/s literal area
DataItem PF1FILL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// report format ref number
DataItem PF1FMT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pf0g priority level
DataItem PF1GPRI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem PF1GRP char(104)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h group level
DataItem PF1HGRP char(638)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// income stmt class
DataItem PF1ICLS num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// position on screen
DataItem PF1IDX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// income stmt group ref number
DataItem PF1ISG num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// summary report file name
DataItem PF1NAM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// originating application
DataItem PF1ORIG char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current page
DataItem PF1PAGE num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// fields passed in commarea
DataItem PF1PASS char(934)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF0G predefined summary flag
DataItem PF1PDEFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// product attribute description
DataItem PF1PRD char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// priority parameter
DataItem PF1PRM char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h prt or sum priority ind
DataItem PF1PRY char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h record found flag
DataItem PF1RECF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h scrn 4 active indicator
DataItem PF1S4AIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf0h active screen flag
DataItem PF1SCRNF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sequence of sort (asc,des)
DataItem PF1SEQ char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// which side of map
DataItem PF1SIDE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// start key
DataItem PF1SKEY char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sort 1 or 2 used
DataItem PF1SORT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// starting level #
DataItem PF1STLVL num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// starting seq. #
DataItem PF1STSEQ num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// position on table
DataItem PF1TBLX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// att. value description
DataItem PF1VDS char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// transfer via PF key flag
DataItem PF1XFERF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// summary table group desc
DataItem PF2WGRP char(51)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// summary table key
DataItem PF2WSMK char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// summary table set key
DataItem PF2WSTK char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_BASE_PERIOD_MO
DataItem PFABSPRM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_BASE_PERIOD_YR
DataItem PFABSPRY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_CLM_POST_MO
DataItem PFACLMMO smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_ACCT_CLOSE_IND
DataItem PFACLSI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_COMM_POST_MO
DataItem PFACOMMO smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_CURR_ACCT_MO
DataItem PFACRACM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_INV_POST_MO
DataItem PFAINVMO smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_IVC_POST_MO
DataItem PFAIVCMO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_LOCK_OUT_FL
DataItem PFALKOTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_NBANK_POST_MO
DataItem PFANBKMO smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_NXT_SUM_SEQ_NBR
DataItem PFANSUMN int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_NXT_SUM_RQT_NBR
DataItem PFANXTNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_TBL_LOCK_FL
DataItem PFASTBLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_YR_END_CLS_IND
DataItem PFAYREND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_IST_GRP_DESC
DataItem PFBISDSC char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_IST_GRP_NBR
DataItem PFBISGRP smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_IST_GRP_REFNBR
DataItem PFBREF smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// format type number (1-5)
DataItem PFCFMNBR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_PCT_CHNG_COL
DataItem PFCPCTC smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_FMAT_REFNBR
DataItem PFCREF smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_ATTR_CD_VAL
DataItem PFDCDVAL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_RPT_ATTR_REFNBR
DataItem PFDREF smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_ATTR_VAL_FL
DataItem PFDVALFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_CRDT
DataItem PFECRTDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_SUM_CYC_IND
DataItem PFECYCIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// summary record group level
DataItem PFEGRP char(108)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_LOGL_PAGE_CNT
DataItem PFELGCPG int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_SUM_PRTY_IND
DataItem PFEPRIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SRT_SEQ_IND
DataItem PFESEIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_LVL_SEQ_COL
DataItem PFESQCOL smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_SRC_SUM_NM
DataItem PFESRCNM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SRT_ELE_IND
DataItem PFESRTEL char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_STAT_IND
DataItem PFESTIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_DESC
DataItem PFESUMDE char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_NM
DataItem PFESUMNM char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_DATA_FMAT_IND
DataItem PFFDTFMI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_RPT_FM_IND
DataItem PFFFMCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pffrec grp
DataItem PFFGROUP char(218)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_PRT_FRST_OCCUR
DataItem PFFPRFRS smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_PRT_LVL_IND
DataItem PFFPRLVL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_PRT_PRTY_IND
DataItem PFFPRTYI char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_PRT_TYP_IND
DataItem PFFPRTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_RPT_DESC
DataItem PFFRPTDS char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_RPT_STAT_IND
DataItem PFFSTIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_SUM_IST_SEQ_NBR
DataItem PFGISSEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_SUM_LVL_NBR
DataItem PFGLVLNO smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_SUM_LVL_SEQ_NBR
DataItem PFGLVLSQ int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_RPT_COL_QTY
DataItem PFGQTY decimal(13,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_SUM_SEQ_NBR
DataItem PFGSUMN int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PF_PFSYA_IND
DataItem PFGSYIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_ATTR_FLD_ABRV
DataItem PFIABRV char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_ATTR_FLD_CD
DataItem PFICD char(2)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// PF_ATTR_FLD_DB2_NM
DataItem PFIDB2NM char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_ATTR_FLD_DESC
DataItem PFIDESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem PFIGROUP char(75)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// PF_ATTR_FLD_SDESC
DataItem PFISDESC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf-gl-cd-to-ar-fl
DataItem PFJARFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf-bank-intf-ind
DataItem PFJBNKIF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf-percent-req-fl
DataItem PFJPCTFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf-restrict-fl
DataItem PFJRESFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf-gl-xref
DataItem PFJXREF char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first time logic flag
DataItem PFW1STF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// att. code value abrev.
DataItem PFWABRV char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//         2 position attr. code
DataItem PFWCD2 char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//       3 position attr. code
DataItem PFWCD3 char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     4 position attr. code
DataItem PFWCD4 char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   day - century style
DataItem PFWCDA num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// century style date area
DataItem PFWCDATE num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   numeric attr. code value
DataItem PFWCDNUM num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   century
DataItem PFWCENT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   1 char field-numeric check
DataItem PFWCH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// 4 char field-numeric check
DataItem PFWCH4 char(4)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// saved value from caitem
DataItem PFWCITEM char(21)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   month - century style
DataItem PFWCMO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// counter
DataItem PFWCOUNT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current page number
DataItem PFWCPG num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// name of current process
DataItem PFWCPROC char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// saved value from catoap
DataItem PFWCTOAP char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   year - century style
DataItem PFWCYR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// common date area
DataItem PFWDATE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   common date day
DataItem PFWDAY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// attr. value desc
DataItem PFWDESC char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Current System Date
DataItem PFWDTE num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// edit flag
DataItem PFWEDTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of appl flag
DataItem PFWEOAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of screen flag
DataItem PFWEOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Statement Group rtn err flg
DataItem PFWERRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Exit Flag
DataItem PFWEXT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//         attr. code filler
DataItem PFWFIL1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//       attr. code filler
DataItem PFWFIL2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   hold color error flag
DataItem PFWHCOLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// att. field hold desc.
DataItem PFWHDESC char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   hold dimension error flag
DataItem PFWHDIMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold error flags
DataItem PFWHFLGS char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   hold gpc error flag
DataItem PFWHGPCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// db2 abend hold key
DataItem PFWHKEY char(20)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   hold life cycle error flag
DataItem PFWHLFCF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// prod. duplication hold field
DataItem PFWHPRD2 char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// prod. inquiry hold fields
DataItem PFWHPROD char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   hold quality error flag
DataItem PFWHQUAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   hold style error flag
DataItem PFWHSTYF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table index
DataItem PFWIDX num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// index limit
DataItem PFWLIMIT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   common date month
DataItem PFWMONTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Returned error msg
DataItem PFWMSG char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   first part of msg area
DataItem PFWMSG1 char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   second part of msg area
DataItem PFWMSG2 char(35)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index for next page
DataItem PFWNXTDX num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// product attr. field code
DataItem PFWPRDAT char(2)  {
  align = right, fillCharacter = "0", inputRequired = no
}
end

// prod. inquiry group level
DataItem PFWPROD char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record found flag
DataItem PFWRECF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// hold ref #
DataItem PFWREF smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// saved index
DataItem PFWSAVDX num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   summary set key
DataItem PFWSETKY char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// sales rep. id
DataItem PFWSLSRP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// general purpose index
DataItem PFWSUB num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// packing routine subscript
DataItem PFWSUB1 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// packing routine subscript
DataItem PFWSUB2 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// packing routine subscript
DataItem PFWSUB3 num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//   summary code
DataItem PFWSUMCD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     summary summary id
DataItem PFWSUMID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// summary key
DataItem PFWSUMKY char(13)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   summary source value
DataItem PFWSUMVL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     summary system id
DataItem PFWSYSID char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table search flag
DataItem PFWTBLF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//     summary table id
DataItem PFWTBLID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table index
DataItem PFWTBLX num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Total Table Pages
DataItem PFWTPG num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// attribute field error flag
DataItem PFWVALER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//   common date year
DataItem PFWYEAR num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

