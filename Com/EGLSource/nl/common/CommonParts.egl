package nl.common;
import corpcom1.*;
import corpcom5.*;
import corpcom7.*;
import ku.common.*;
//*** RECORD=NLXREC ****
// ******************** nil common data names record ********
// 
// this record contains many common data names used by many
// applications.  this is not a global working-storage
// passed to other appl.  it is a second w-s record
// for an individual application.
// 
// ************************************************************
// Maintenance
// 10-02-92    jjudki  Expanded nlxcproc to 18 bytes.
// ************************************************************
// **********************
Record NLXREC type basicRecord
  5 NLXGROUP NLXGROUP ; 
    10 NLXEOAF NLXEOAF ; 
    10 NLXEOSF NLXEOSF ; 
    10 NLXEOFF NLXEOFF ; 
    10 NLXEDITF NLXEDITF ; 
    10 NLXUPDTF NLXUPDTF ; 
    10 NLXERRF NLXERRF ; 
    10 NLXVALDT NLXVALDT ; 
    10 NLXVITMF NLXVITMF ; 
    10 CATOAP CATOAP ; 
    10 GLACCT GLACCT ; 
      15 NLXNLGL NLXNLGL ; 
      15 NLXPFFIL NLXPFFIL ; 
    10 GLAGRP GLAGRP ; 
      15 GLAENT GLAENT ; 
      15 GLARCID GLARCID ; 
      15 GLANTAC GLANTAC ; 
      15 GLASUB GLASUB ; 
      15 GLAPRJ GLAPRJ ; 
    10 NLXNEWSC NLXNEWSC ; 
    10 NLXBLDSC NLXBLDSC ; 
    10 NLXSCRNX NLXSCRNX ; 
    10 NLXLINEX NLXLINEX ; 
    10 NLXCPROC NLXCPROC ; 
    10 NLXCSCRN NLXCSCRN ; 
    10 NLXSINFO NLXSINFO ; 
      15 NLXSNAME NLXSNAME [6] ; 
      15 NLXMAXLN NLXMAXLN [6] ; 
      15 NLXARY1X NLXARY1X [6] ; 
    10 NLXCURLN NLXCURLN ; 
    10 NLXMAPMX NLXMAPMX ; 
    10 NLXITMX NLXITMX ; 
    10 NLXLTRX1 NLXLTRX1 ; 
    10 NLXLTRX2 NLXLTRX2 ; 
    10 NLXNUM8A NLXNUM8A ; 
      15 NLXBYTE NLXBYTE [8] ; 
    10 NLXWLTRX NLXWLTRX ; 
    10 NLXCNF NLXCNF [4] ; 
    10 NLXILTH NLXILTH [4] ; 
    10 NLXILOC NLXILOC [4] ; 
    10 NLXITMCT NLXITMCT ; 
    10 NLXWFLDC NLXWFLDC ; 
      15 NLXWFLDN NLXWFLDN ; 
        20 NLXWLTR NLXWLTR [10] ; 
    10 NLXCID NLXCID ; 
      15 KUCCOID KUCCOID ; 
      15 NLXCUPER NLXCUPER ; 
      15 KUMSTRID KUMSTRID ; 
    10 NLXOID NLXOID ; 
      15 NLXOP1CU NLXOP1CU ; 
      15 NLXOP1NO NLXOP1NO ; 
    10 NLXORGRP NLXORGRP ; 
      15 NLXORD7 NLXORD7 ; 
      15 NLXPARCH NLXPARCH ; 
    10 NLXPF3 NLXPF3 ; 
    10 NLXPF4 NLXPF4 ; 
    10 NLXPF20 NLXPF20 ; 
    10 XXXWDTE XXXWDTE ; 
      12 XXXWCYMD XXXWCYMD ; 
        15 XXXWCC XXXWCC ; 
        15 XXXWYMD XXXWYMD ; 
          20 XXXWYY XXXWYY ; 
            25 XXXWYY1 XXXWYY1 ; 
            25 XXXWYY2 XXXWYY2 ; 
          20 XXXWMM XXXWMM ; 
            25 XXXWMM1 XXXWMM1 ; 
            25 XXXWMM2 XXXWMM2 ; 
          20 XXXWDD XXXWDD ; 
            25 XXXWDD1 XXXWDD1 ; 
            25 XXXWDD2 XXXWDD2 ; 
    10 XXXCDTE XXXCDTE ; 
      15 XXXCCC XXXCCC ; 
      15 XXXCYMD XXXCYMD ; 
        20 XXXCYY XXXCYY ; 
        20 XXXCMM XXXCMM ; 
        20 XXXCDD XXXCDD ; 
    10 XXXCTIME XXXCTIME ; 
      15 XXXCHHMM XXXCHHMM ; 
        20 XXXCHRS XXXCHRS ; 
        20 XXXCMINS XXXCMINS ; 
      15 XXXCSECS XXXCSECS ; 
    10 XXXFSDT XXXFSDT ; 
      15 XXXFSMM XXXFSMM ; 
        20 XXXFSM1 XXXFSM1 ; 
        20 XXXFSM2 XXXFSM2 ; 
      15 XXXFSDD XXXFSDD ; 
        20 XXXFSD1 XXXFSD1 ; 
        20 XXXFSD2 XXXFSD2 ; 
      15 XXXFSYY XXXFSYY ; 
        20 XXXFSY1 XXXFSY1 ; 
        20 XXXFSY2 XXXFSY2 ; 
    10 XXXFLDT XXXFLDT ; 
      15 XXXFLMM XXXFLMM ; 
      15 XXXSEP5 XXXSEP5 ; 
      15 XXXFLDD XXXFLDD ; 
      15 XXXSEP6 XXXSEP6 ; 
      15 XXXFLYY XXXFLYY ; 
    10 XXXED8C XXXED8C ; 
      40 XXXED6C XXXED6C ; 
        45 XXXEDC1 XXXEDC1 ; 
          46 XXXEDN1 XXXEDN1 ; 
        45 XXXEDC2 XXXEDC2 ; 
          46 XXXEDN2 XXXEDN2 ; 
        45 XXXEDC3 XXXEDC3 ; 
          46 XXXEDN3 XXXEDN3 ; 
        45 XXXEDC4 XXXEDC4 ; 
          46 XXXEDN4 XXXEDN4 ; 
        45 XXXEDC5 XXXEDC5 ; 
          46 XXXEDN5 XXXEDN5 ; 
        45 XXXEDC6 XXXEDC6 ; 
          46 XXXEDN6 XXXEDN6 ; 
      40 XXXEDC7 XXXEDC7 ; 
        41 XXXEDN7 XXXEDN7 ; 
      40 XXXEDC8 XXXEDC8 ; 
        41 XXXEDN8 XXXEDN8 ; 
end // end NLXREC

// NL_CLM_AMT
DataItem NL-CLM-AMT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_CLM_COMNT
DataItem NL-CLM-COMNT char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL_CLM_COMNT_IND
DataItem NL-CLM-COMNT-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end
// NL_CLM_COMNT_NBR
DataItem NL-CLM-COMNT-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// NL_CLM_FCUR_AMT
DataItem NL-CLM-FCUR-AMT decimal(9,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_CLM_ID
DataItem NL-CLM-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_CLM_LN_QTY
DataItem NL-CLM-LN-QTY int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_CLM_PRT_MO
DataItem NL-CLM-PRT-DT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_CRTF_ADDR_IND
DataItem NL-CRTF-ADDR-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ND_DSTR_FCST_IND
DataItem NL-DSTR-FCST-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL-EXCHG-RATE
DataItem NL-EXCHG-RATE decimal(11,5)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_GEN_LED_PMO3
DataItem NL-GEN-LED-PMO3 int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL-GEN-LED-SUSP-FL
DataItem NL-GEN-LED-SUSP-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL-NXT-CLM-ID
DataItem NL-NXT-CLM-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// PAYMENT METHOD CODE (YPY)
DataItem NL-PMT-MTHD-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL_PRC_COST_PCT
DataItem NL-PRC-COST-PCT decimal(5,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL_PRT_MUL_PRO_FL
DataItem NL-PRT-MUL-PRO-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL_PRT_SECR_PRO_FL
DataItem NL-PRT-SECR-PRO-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL_PRT_UNT_PRC_FL
DataItem NL-PRT-UNT-PRC-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL_PRT_WT_PRO_FL
DataItem NL-PRT-WT-PRO-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// NL_PRT_XMC_IND
DataItem NL-PRT-XMC-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nl-addr-id
DataItem NLAADRID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-bill-shp-ind
DataItem NLABSIND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level for nil address
DataItem NLAGRP char(271)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nl-addr-integer
DataItem NLAINTGR int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-addr-one-char
DataItem NLAONECH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nl-addr-sinteger1
DataItem NLASINT1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-addr-sinteger2
DataItem NLASINT2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-addr-sys-ind
DataItem NLATYPIN char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// record group level
DataItem NLBGROUP char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nl-nxt-mat-ctnt-id
DataItem NLBNMCID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-nxt-ivc-id
DataItem NLBNXIID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-nxt-locr-intrn
DataItem NLBNXLCI smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// nl-nxt-misc-ivc-id
DataItem NLBNXMID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// NL-NXT-PRO-IVC-ID
DataItem NLBNXPID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// 1st array row for assoc map
DataItem NLXARY1X smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// build screen (y/n)
DataItem NLXBLDSC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// byte position in array
DataItem NLXBYTE char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// display customer.store
DataItem NLXCID char(7)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

// ws char/numeric flags
DataItem NLXCNF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// name of current process
DataItem NLXCPROC char(18)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// name of current screen
DataItem NLXCSCRN char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// period separator
DataItem NLXCUPER char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current screen line
DataItem NLXCURLN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// do-edits flag
DataItem NLXEDITF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-application flag (y/n)
DataItem NLXEOAF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-file (y/n)
DataItem NLXEOFF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end-of-screen flag (y/n)
DataItem NLXEOSF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// have map error (y/n)
DataItem NLXERRF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// group level
DataItem NLXGROUP char(285)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// ws starting item locations
DataItem NLXILOC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ws item lengths
DataItem NLXILTH num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// number of items entered
DataItem NLXITMCT num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// item index
DataItem NLXITMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen line index
DataItem NLXLINEX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// letter index
DataItem NLXLTRX1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// letter index
DataItem NLXLTRX2 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// last map line with data
DataItem NLXMAPMX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// maximum number of lines
DataItem NLXMAXLN num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// display new screen (y/n)
DataItem NLXNEWSC char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// nil gl acct from proft
DataItem NLXNLGL char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// numeric 8 array
DataItem NLXNUM8A num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// display order.suborder
DataItem NLXOID num(10,2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// op-cust-ord-id
DataItem NLXOP1CU num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-nike-ord-id
DataItem NLXOP1NO num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// ord nbr first 7 char
DataItem NLXORD7 num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// order group
DataItem NLXORGRP num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// op-ord-part-char
DataItem NLXPARCH char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf20 confirm flag
DataItem NLXPF20 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf3 confirm flag
DataItem NLXPF3 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// pf4 confirm flag
DataItem NLXPF4 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// filler
DataItem NLXPFFIL char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen pointer
DataItem NLXSCRNX num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// screen-information-array
DataItem NLXSINFO char(72)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// screen name
DataItem NLXSNAME char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// do-updates flag
DataItem NLXUPDTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid-date flag
DataItem NLXVALDT char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// valid-item flag
DataItem NLXVITMF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working field character format
DataItem NLXWFLDC char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// working field numeric format
DataItem NLXWFLDN num(10)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// working field letter array
DataItem NLXWLTR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// index to working field letters
DataItem NLXWLTRX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SY_NIL_BK_RSTR_EDT
DataItem NPAEDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// record group level
DataItem NPAGROUP char(38)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SY_NIL_BK_RSTR_XDT
DataItem NPAXDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

