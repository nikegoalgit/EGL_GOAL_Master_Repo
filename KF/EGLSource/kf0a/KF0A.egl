package kf0a;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.COMMAREA;
import kf.common.*;
//*** PROGRAM=KF0A ****
//   KO0A is the Commissions Rate Forecasting System main
//   menu.  This program allows the user to select any program
//   within the system, or to fast path to a program in a
//   different system.
// 
// ***********************************************************
// *                MAINTENANCE LOG                          *
// ***********************************************************
// 
// Log #    date    init   description
// -----  --------  ----   ------------------------------------
// 
//  001   08/26/92   JAB   created new program.
//  026   12/11/92    DL   Added KF0E and KF0F as selections.
//        04/21/98  OENFIE Added KF0G as selection in the
//                         KF0AT01 table.
// 
// *********************
Program KF0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "KF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  KFWREC KFWREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KF0AT01 {deleteAfterUse = yes}; // table
  use KF0AM.KF0AM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KF0A-00000: KF0A-00000();
    KF0A-10000: KF0A-10000();
        /* always loop through this process*/

    goto KF0A-10000;


  end // end main
end // end KF0A

// security check, 1st time inits
Function KF0A-00000()
  XSENTRY();
  XSSEGTR();
  KF0A-INITIALIZE();
end // end KF0A-00000

// converse the menu
Function KF0A-10000()


       /* nothing to do in the before stage*/


  converse KF0AM001 ;


       /* If enter was pressed, edit selection.*/
       /* Otherwise, if a PF key was pressed, edit PF keys*/


  if (converseVar.eventKey is enter)
    KF0AS-EDIT-OPTION();
  else
    if (converseVar.eventKey is pf1
     || converseVar.eventKey is pf3
     || converseVar.eventKey is pf4)
      KF0AS-EDIT-PF-KEYS();
    else
      if (converseVar.eventKey is pa2)
        set KF0AM001 initial;
        KF0AM-DATE = VGVar.currentShortGregorianDate;
      else
        converseLib.validationFailed(2); /* invalid key pressed*/
      end
    end
  end
end // end KF0A-10000

// initialize map and commarea
Function KF0A-INITIALIZE()
     /* first time through, move the date to the screen map*/
     /* and initialize the comm area*/

  set KF0AM001 initial;
  set KFWREC empty; /* common w/s record*/

  KF0AM-DATE = VGVar.currentShortGregorianDate;

  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* transfer within system*/
    KFWREC.KFW-GROUP = COMMAREA.CAUSERA; /* common w/s record*/
    if (KFWREC.KFW-MSGNO != 0) /* check if msg returned*/
      if (KFWREC.KFW-MSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KFWREC.KFW-MSGNO);
      end
      KFWREC.KFW-MSGNO = 0;
    end
  end

  COMMAREA.CAUSERA = " ";
end // end KF0A-INITIALIZE

// edit option entered by user
Function KF0AS-EDIT-OPTION()


      /* if a fast path has been entered, pass control to that program*/
      /* otherwise, check to make sure a valid selection option was*/
      /* entered.*/
      /* if the option is valid, pass control to the indicated program*/
      /* if the option is not valid, display an error message;*/


  if (KF0AM001.CATOAP > " ") /* fastpath requested*/
    COMMAREA.CATOAP = KF0AM001.CATOAP;
    COMMAREA.CAITEM = KF0AM001.CAITEM;
    COMMAREA.CAUSERA = " "; /* clear user area*/
    if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* transfer in same system*/
      COMMAREA.CAUSERA = KFWREC.KFW-GROUP; /* common w/s record*/
    end
    XSEXIT(); /* transfer control*/
    VAGen_EZEMSG = COMMAREA.CAMSG; /* an error was found*/
  else
    if (KF0AM001.KF0AM-OPT in KF0AT01.KF0AT-OPTION)
      COMMAREA.CATOAP = KF0AT01.KF0AT-PRGM[sysVar.arrayIndex];
    end /* determine application*/
    if (sysVar.arrayIndex == 0)
      converseLib.validationFailed(1); /* invalid option entered*/
    else
      COMMAREA.CAUSERA = " "; /* clear user area*/
      COMMAREA.CAUSERA = KFWREC.KFW-GROUP; /* common w/s record*/
      XSEXIT(); /* transfer control*/
      VAGen_EZEMSG = COMMAREA.CAMSG; /* an error was found*/
    end
  end
end // end KF0AS-EDIT-OPTION

// edit PF key pressed by user
Function KF0AS-EDIT-PF-KEYS()


       /* edit pf key that was pressed*/
       /* pass control as requested*/


  if (KF0AM001.CATOAP > " ") /* fast path requested*/
    converseLib.validationFailed(4); /* cannot pf key and fast path*/
  else
    if (converseVar.eventKey is pf1)
      XSPF1();
      KF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* an error occurred*/
    else
      if (converseVar.eventKey is pf3)
        COMMAREA.CAUSERA = " ";
        COMMAREA.CATOAP = "KO0A"; /* Ko system main menu*/
        COMMAREA.CAITEM = " ";
        XSEXIT();
        KF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* an error occurred*/
      else
        if (converseVar.eventKey is pf4)
          XSPF4();
          KF0AM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error occurred*/
        end
      end
    end
  end
end // end KF0AS-EDIT-PF-KEYS

