package kf0g;

import corpcom2.XX0XW01;
import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSKFS-CHK-SECURITY;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom4.XX0XS01;
import corpcom5.CO-OVRD-RATE-EDT;
import corpcom5.CO-OVRD-RATE-XDT;
import corpcom5.CO-SREP-TRGT-INCM;
import corpcom5.CO-TRGT-COMM-PCT;
import corpcom5.CO-TRGT-SLRY-PCT;
import corpcom5.COMMAREA;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXX-CURR-PAGE-NBR;
import corpcom7.XXX-HI-PAGE-NBR;
import corpcom7.XXX-INX-FLD-NBR;
import corpcom7.XXX-INX-LMT-NBR;
import corpcom7.XXX-MAP-FMAT-FL;
import corpcom7.XXX-MSG-LOC-ID;
import corpcom7.XXX-PAGE-UPD-FL;
import corpcom7.XXX-RQT-DATA-FL;
import corpcom7.XXX-TEMP-STG-LNTH;
import corpcom7.XXX-USER-ID;
import corpcom7.ZZ-SETUP-HHMM;
import corpy2.YNSTBL;
import corpz3.ZZ-CHNG-CNT;
import corpz3.ZZ-CHNG-DT;
import corpz3.ZZ-CHNG-HHMM;
import corpz3.ZZ-SDT;
import kf.common.*;
import sm.common.SM-SAGCY-ID;
import sm.common.SM-SREP-ID;
import sm.common.SM-SREP-MGR-IND;
import sm.common.SM-SREP-PSTN-ID;
import sm.common.SM1REC;
import sm.common.SM4REC;
import sm.common.SM5REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VKOAUD01;
import vv.common.VKOCTL01;
import vv.common.VREPOS01;
import vv.common.VSNADJ01;
import vv.common.VSNSLS01;
//*** PROGRAM=KF0G ****
// KF0G is used to enter and update rep compensation formulas.
// (This is to replace the application KF0D)
// 
// The user enters the Agency ID and the Rep ID.  KF system
// internal security is checked to see if the user is allowed
// access to information for that agency and rep.  If access
// is not allowed no data is displayed.
// 
// If access is allowed, GOAL security is used to determine if
// the user has update authority, or browse authority only.
// 
// If the user entered KF0G from another KF program, the agency
// and rep entered on the previous screen will be used to build
// the KF0G screen (after security is checked).
// 
// The user can exit this screen by pressing PF1, PF3 or PF4;
// or by entering a valid fastpath option.
// 
// If the user presses PA2 and updates are pending, the
// updates are cancelled and the screen is refreshed with the
// original data for the agency / rep.
// 
// if the user presses PA2 and no updates are pending, the
// screen is cleared.
// 
// DIFFERENCES BETWEEN KF0D & KF0G:
// 1. This application does not access the DB2 table:
//    DCOMM.VFRMLA01 but a new DB2 table is created:
//    DCOMM.VCOFRM01 for this application.
// 2. Season Code & Year Code are no longer referenced in this
//    application.
// 3. A new column called 'number of months' is added to the
//    screen which will be enterable.
// 4. The field Rep Sales is now enterable.  Before, the value
//    in this field is computed and updated by a batch program
//    called KF1180.  This batch program will be deinstalled
//    when this application goes live.
// 5. The column 'Incl Inact' is removed from the screen.
// 6. Temp Storage pages are used for scrolling purpose.
// 7. Page number is added on the right hand corner of the
//    screen.
// 8. Function keys PF19 & PF20 are removed from the screen.
//    All logic relating to these 2 functions keys are removed
//    from the application code.
// 
// ************************************************************
// *                MAINTENANCE HISTORY                       *
// ************************************************************
// 
//   Date     Name   Description
// --------  ------  -----------------------------------
// 
// 04/23/98  OENFIE  Created new program.
// *********************
Program KF0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "KF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KF0GW00 KF0GW00; // record
  KF0GW01 KF0GW01; // record
  KFWREC KFWREC; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SM5REC SM5REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VCOFRM01 VCOFRM01; // record
  VKOAUD01 VKOAUD01; // record
  VKOCTL01 VKOCTL01; // record
  VREPOS01 VREPOS01; // record
  VSNADJ01 VSNADJ01; // record
  VSNSLS01 VSNSLS01; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use KFATBL {deleteAfterUse = yes}; // table
  use YNSTBL {deleteAfterUse = yes}; // table
  use KF0GM.KF0GM001 // form
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KF0G-00000: KF0G-00000();

     /* -------------------------------------------------------------*/
     /* CLEAR FILES, INITIALIZE WORKING STORAGE AND MAP DISPLAY AREAS*/
     /* -------------------------------------------------------------*/

    set KF0GM001 initial; /* Map/screen input/output*/
    set KF0GW00 empty; /* Working storage*/
    set KF0GW01 empty; /* M001 display storage*/
    set SQLCA empty; /* SQL communication area*/
    set TAEREC empty; /* Error diagnosis information*/
    set TA1REC empty; /* Error diagnosis parameters*/
    set TA2REC empty; /* Error diagnosis parameters*/
    set TA5REC empty; /* Temporary storage parameters*/
    set XX0XW01 empty; /* Date/time subroutine parameters*/

     /* -------------------------------------------------------------*/
     /* INITIALIZE INDEXES AND COUNTERS*/
     /* -------------------------------------------------------------*/
    if (KFWREC.SM-SAGCY-ID > " " /* agcy id is passed*/
     && KFWREC.SM-SREP-ID > 0)   /* & srep id is passed*/
      KF0GW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/
      KF0GW00.KF0GW-SM-SAGCY-ID = KFWREC.SM-SAGCY-ID;
      KF0GW00.KF0GW-SM-SREP-ID = KFWREC.SM-SREP-ID;
    else
      KF0GW00.XXX-RQT-DATA-FL = "N"; /* do not request for data*/
                                          /* first time thru with no*/
                                          /* key data*/
    end

    KF0GW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

    KF0GW00.XXX-TEMP-STG-LNTH = 747; /* Temporary storage length*/

    KF0GW00.KF0GW-AUDIT-FILL-LEN = 1992; /* length of audit text*/

    KF0GW00.XXX-INX-LMT-NBR = 9; /* maximum nbr of lines on*/
                                     /* the screen or T/S record*/

    KF0GW00.KF0GW-CURR-DATE = VGVar.currentShortGregorianDate; /* get current date*/

    if (KF0GW00.KF0GW-CURR-YY > 75) /* determine century*/
      KF0GW00.KF0GW-CURR-CC = 19;
    else
      KF0GW00.KF0GW-CURR-CC = 20;
    end

    KF0G-10000: KF0G-10000();

        /* always loop through this process*/

    goto KF0G-10000;

  end // end main
end // end KF0G

// Application Initialization
Function KF0G-00000()
   /* ------------------------------------------------------------*/
   /* Ensure that the COMMAREA has been properly formatted.*/
   /* ------------------------------------------------------------*/

  XSENTRY(); /* Application entry validation*/

   /* ------------------------------------------------------------*/
   /* Initialize the segmented transaction identification.*/
   /* ------------------------------------------------------------*/

  XSSEGTR(); /* Set transaction identification*/

   /* ------------------------------------------------------------*/
   /* If control was passed to this transaction from another*/
   /* within the same application system, restore the work record*/
   /* from the COMMAREA.  Otherwise, initialize the work record.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* Same system*/

    KFWREC.KFW-GROUP = COMMAREA.CAUSERA; /* Restore work record*/

  end

   /* ------------------------------------------------------------*/
   /* Initialize CSP special function data items.*/
   /* ------------------------------------------------------------*/

  VGVar.handleHardIOErrors = 1; /* Return all file errors*/
  converseVar.commitOnConverse = 1; /* Commit on every converse*/

   /* ------------------------------------------------------------*/
   /* Check for KF security*/
   /* ------------------------------------------------------------*/

  XSKFS-CHK-SECURITY(); /* Check KF system security*/

end // end KF0G-00000

// MAIN PROCESSING
Function KF0G-10000()
   /* ------------------------------------------------------------*/
   /* This is the main process used to display a map.  Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to display.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Verify the data that was entered.*/
   /* 5) Process a valid input request.*/

   /* In all subordinate processes, "EZEFLO" is used to exit to*/
   /* redisplay the map when an error is found.  This is done to*/
   /* minimize the coding effort required to skip subsequent*/
   /* processing under error conditions.*/
   /* ------------------------------------------------------------*/

  KF0G-11000(); /* Obtain the data to display*/

  KF0G-12000(); /* Format and display the map*/

  KF0G-13000(); /* Check attention identifier*/

  KF0G-14000(); /* Verify the entered data*/

  KF0G-15000(); /* Process valid input request*/


end // end KF0G-10000

// OBTAIN DATA TO DISPLAY
Function KF0G-11000()
   /* ------------------------------------------------------------*/
   /* If data was not requested or an error was found, return to*/
   /* the previous process.First time in, the XXX-RQT-DATA-FL*/
   /* should be set to 'N' in the initialization process.*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-RQT-DATA-FL != "Y" /* Data was not requested*/
   || (KF0GM001.KF0GM-SM-SAGCY-ID == 
  KF0GW00.KF0GW-SM-SAGCY-ID          
   && KF0GM001.KF0GM-SM-SREP-ID ==   
  KF0GW00.KF0GW-SM-SREP-ID))        

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If no message to display, reset the page number to display.*/
   /* ------------------------------------------------------------*/

  if (KFWREC.KFW-MSGNO == 0) /* No message to display*/
    KF0GW00.XXX-CURR-PAGE-NBR = 1; /* Page number to display*/
  end

  if (converseVar.validationMsgNum != 0)
    KFWREC.KFW-MSGNO = converseVar.validationMsgNum;
    converseLib.validationFailed(0);
  end

  set KF0GM001 initial;

  KF0GM001.KF0GM-SM-SAGCY-ID = KF0GW00.KF0GW-SM-SAGCY-ID;

  KF0GM001.KF0GM-SM-SREP-ID = KF0GW00.KF0GW-SM-SREP-ID;

   /* ------------------------------------------------------------*/
   /* Purge any pages from temporary storage and save key fields.*/
   /* ------------------------------------------------------------*/

  KF0GS-TA0050-P(); /* Purge any temporary storage*/

   /* ------------------------------------------------------------*/
   /* Select the information to display in the map heading.*/
   /* ------------------------------------------------------------*/

   /* -----------------------------------------*/
   /* Get Sales Agency name*/
   /* -----------------------------------------*/
  KF0GS-GET-AGCY(); /* Get Agency record*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if agency is found*/
    KF0GM001.KF0GM-SM-SAGCY-NM = SM1REC.SM1AGYNM; /* move to map*/
    KF0GW00.KF0GW-SM-SAGCY-NM = SM1REC.SM1AGYNM; /* move to map*/
  end

   /* -----------------------------------------*/
   /* Get Sales Rep name*/
   /* -----------------------------------------*/
  KF0GS-GET-SREP(); /* Get Sales Rep record*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if rep is found*/
    KF0GM001.KF0GM-XXX-LAST-NM = SM4REC.XXXLSTNM; /* move to map*/
    KF0GM001.KF0GM-XXX-FRST-NM = SM4REC.XXXFSTNM;
    KF0GW00.KF0GW-XXX-LAST-NM = SM4REC.XXXLSTNM; /* move to map*/
    KF0GW00.KF0GW-XXX-FRST-NM = SM4REC.XXXFSTNM;
  end

   /* -----------------------------------------*/
   /* Get Rep's current position id*/
   /* -----------------------------------------*/
  KF0GS-GET-RAGCY(); /* Get Rep/Agency record*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if rep is found*/
    KF0GM001.KF0GM-SM-SREP-PSTN-ID = SM5REC.SM-SREP-PSTN-ID;
    KF0GW00.KF0GW-SM-SREP-PSTN-ID = SM5REC.SM-SREP-PSTN-ID;

    KF0GS-GET-REPOS(); /* get rep's position description*/

    if (SQLCA.VAGen_SQLCODE == 0)
      KF0GM001.KF0GM-SM-SREP-PSTN-DESC = VREPOS01.SM-SREP-PSTN-DESC;
      KF0GW00.KF0GW-SM-SREP-PSTN-DESC = VREPOS01.SM-SREP-PSTN-DESC;
      KF0GW00.SM-SREP-MGR-IND = VREPOS01.SM-SREP-MGR-IND;

    else /* rep's position record not found*/
      if (SQLCA.VAGen_SQLCODE == +100)
        KF0GM001.KF0GM-SM-SREP-PSTN-DESC = "UNKNOWN";
        KF0GW00.KF0GW-SM-SREP-PSTN-DESC = "UNKNOWN";
      end
    end

  else /* rep/agency record not found*/
    if (SQLCA.VAGen_SQLCODE == +100) /* not found, get term date*/
      KF0GS-SREP-TERM();
    end
  end

  if (converseVar.validationMsgNum != 0) /* errors found*/
    KF0GW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
    return;
  end

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  KF0GS-BUILD-TS(); /* Build temp storage pages for dtl lines*/

   /* ------------------------------------------------------------*/
   /* If no pages were formatted, indicate no data to display.*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-HI-PAGE-NBR == 0) /* No pages formatted*/

    KF0GW00.XXX-MSG-LOC-ID = "11000"; /* Message location*/
    converseLib.validationFailed(80); /* No data was found to display*/

    exit stack; /* Exit to display map*/

  else
    if (KF0GW00.XXX-HI-PAGE-NBR > 0) /* at least 1 page is formatted*/

      KF0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Indicate that the request for data is complete.*/
   /* ------------------------------------------------------------*/

  KF0GW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/

end // end KF0G-11000

// FORMAT AND DISPLAY MAP
Function KF0G-12000()

   /* ------------------------------------------------------------*/
   /* If an error was found, save the error message number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    KFWREC.KFW-MSGNO = converseVar.validationMsgNum; /* Message number*/
  end

   /* ------------------------------------------------------------*/
   /* If the map must be formatted, format the data in the map.*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-MAP-FMAT-FL == "Y") /* Map must be formatted*/
    KF0GS-FMAT-MAP(); /* Format the data in the map*/
  end

   /* ------------------------------------------------------------*/
   /* Determine whether to protect any of the modifiable fields*/
   /* ------------------------------------------------------------*/

  KF0GS-PROTECT-FLDS();

   /* ------------------------------------------------------------*/
   /* Format the current date and any FAST PATH information.*/
   /* ------------------------------------------------------------*/

  KF0GM001.XXX-CURR-DT = VGVar.currentShortGregorianDate; /* Map Current date*/

  KF0GW00.KF0GW-CURR-DATE = VGVar.currentShortGregorianDate; /* w/s current date*/

  if (KF0GW00.KF0GW-CURR-YY > 75) /* determine century*/
    KF0GW00.KF0GW-CURR-CC = 19;
  else
    KF0GW00.KF0GW-CURR-CC = 20;
  end

  KF0GM001.CATOAP = COMMAREA.CATOAP; /* TO application*/
  KF0GM001.CAITEM = COMMAREA.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* If a message to display, indicate sound audible alarm.*/
   /* ------------------------------------------------------------*/

  if (KFWREC.KFW-MSGNO != 0 /* Message to display*/
   || COMMAREA.CAMSG != " ") /* or message text*/

    if (KFWREC.KFW-MSGNO != 0) /* Message to display*/

      if (KFWREC.KFW-MSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KFWREC.KFW-MSGNO);
      end /* Message number*/
    else
      KF0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* Message text*/

    end

    KF0GM001.XXX-MSG-LOC-ID = KF0GW00.XXX-MSG-LOC-ID;
                                   /* Message location*/

    set KF0GM001 alarm; /* Indicate sound alarm*/

  end

   /* ------------------------------------------------------------*/
   /* protect page number if there are no pages formatted*/
   /* or if there is only 1 page formatted*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-HI-PAGE-NBR == 0
   || KF0GW00.XXX-HI-PAGE-NBR == 1)
    set KF0GM001.XXX-CURR-PAGE-NBR skip;
  end

   /* ------------------------------------------------------------*/
   /* set initial cursor position*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-HI-PAGE-NBR > 0       /* more than 1 page formatted*/
   && converseVar.validationMsgNum == 0 /* NO ERRORS FOUND*/
   && KF0GM001.KF0GM-SM-SAGCY-ID > " ") /* Sales Agency ID is entered*/
    set KF0GM001.KF0GM-ADD-TRGT-INCM cursor;
  end

  converse KF0GM001 ;

   /* ------------------------------------------------------------*/
   /* Clear the message fields and save FAST PATH information.*/
   /* ------------------------------------------------------------*/

  KF0GW00.XXX-MSG-LOC-ID = " "; /* Message location*/
  KFWREC.KFW-MSGNO = 0; /* Message number*/
  COMMAREA.CAMSG = " "; /* Message text*/

  COMMAREA.CATOAP = KF0GM001.CATOAP; /* TO application*/
  COMMAREA.CAITEM = KF0GM001.CAITEM; /* Application data*/

   /* ------------------------------------------------------------*/
   /* Reset modifiable field attributes to normal intensity.*/
   /* ------------------------------------------------------------*/

   /* ------   KEY FIELDS -----*/
  set KF0GM001.KF0GM-SM-SAGCY-ID normal; /* GPC code*/
  set KF0GM001.KF0GM-SM-SREP-ID normal; /* Style number*/

   /* ------   "ADD" LINE -----*/
  set KF0GM001.KF0GM-ADD-TRGT-INCM normal;
  set KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT normal;
  set KF0GM001.KF0GM-ADD-TRGT-COMM-PCT normal;
  set KF0GM001.KF0GM-ADD-SLS-AMT normal;
  set KF0GM001.KF0GM-ADD-NMO-QTY normal;
  set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT normal;

  KF0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (KF0GW00.XXX-INX-FLD-NBR <= KF0GW00.XXX-INX-LMT-NBR)
                                   /* Until end of screen*/
   /* AND KF0GM001.KF0GM-CO-SREP-TRGT-INCM(XXX-INX-FLD-NBR) GT 0;*/
                                   /* or end of formatted lines*/

    /* ------   DETAIL  LINE -----*/
    set KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] normal;
    set KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] normal;
    set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] normal;
    set KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] normal;
    set KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] normal;
    set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] normal;
    set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] normal;

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

  set KF0GM001.CATOAP normal; /* TO application*/
  set KF0GM001.CAITEM normal; /* Application data*/


end // end KF0G-12000

// CHECK ATTENETION IDENTIFIED
Function KF0G-13000()
   /* ------------------------------------------------------------*/
   /* If CANCEL was requested, clear the map fields and exit.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/

    set KF0GW00 empty;
    set KF0GW01 empty;
    set KF0GM001 initial;

    KF0GS-INIT-REBUILD(); /* initialize records, fields*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.CATOAP > " ") /* FAST PATH was requested*/

    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      KF0GS-TA0050-P(); /* Purge any temporary storage*/

      XSKFS-EXIT(); /* Exit to another application*/

      set KF0GM001.CATOAP cursor, bold; /* Highlight*/

    else

      KF0GW00.XXX-MSG-LOC-ID = "13000"; /* Message location*/
      converseLib.validationFailed(4); /* PA/PF key may not be used*/

    end

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* If a PF key transfer requested, exit to another application.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1 /* PF1 was pressed*/
   || converseVar.eventKey is pf3 /* or PF3 was pressed*/
   || converseVar.eventKey is pf4) /* or PF4 was pressed*/

    if (converseVar.eventKey is pf3) /* PF3 was pressed*/
      COMMAREA.CATOAP = "KF0A"; /* System Menu*/
    end

    KF0GS-TA0050-P(); /* Purge any temporary storage*/

    XSKFS-EXIT(); /* Exit to another application*/

    exit stack; /* Exit to display map*/

  end

   /* ------------------------------------------------------------*/
   /* Determine whether a valid attention identifier was used to*/
   /* invoke the transaction.  Display an error message to the*/
   /* user if the PF key used is not supported.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf7   /* and PF7 was not pressed*/
   && converseVar.eventKey not pf8   /* and PF8 was not pressed*/
   && converseVar.eventKey not pf12) /* and PF12 was not pressed*/

    KF0GW00.XXX-MSG-LOC-ID = "13000"; /* Message location*/
    converseLib.validationFailed(2); /* PA/PF key pressed is not valid*/

    if (converseVar.eventKey is pakey) /* PA key was pressed*/
      converseLib.clearScreen();
       /* Clear screen before display*/
    end

    exit stack; /* Exit to display map*/

  end

end // end KF0G-13000

// VERIFY THE ENTERED DATA
Function KF0G-14000()
   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.CAITEM > " ") /* Application data was entered*/

    KF0GW00.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    set KF0GM001.CAITEM cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll requested, determine if any other field changed.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   || converseVar.eventKey is pf8) /* or scroll forward request*/

    KF0G-14100(); /* Highlight other changed fields*/

    /* ------------------------------------------------------------*/
    /* Determine whether a valid request to scroll was entered.*/
    /* ------------------------------------------------------------*/

    KF0G-14200(); /* verify scroll request*/

  else
    if (converseVar.eventKey is enter) /* ENTER WAS PRESSED*/

       /* ENTER key was pressed*/
       /* ------------------------------------------------------------*/
       /* If key field changed, determine if any other field changed.*/
       /* ------------------------------------------------------------*/

      if (KF0GM001.KF0GM-SM-SAGCY-ID != KF0GW00.KF0GW-SM-SAGCY-ID
       || KF0GM001.KF0GM-SM-SREP-ID != KF0GW00.KF0GW-SM-SREP-ID)
                                      /* or sale rep changed*/

        KF0G-14100(); /* Highlight other changed fields*/

        if (converseVar.validationMsgNum == 0) /* NO errors foound KF0G-14100*/
            /* ----------------------------------------------------*/
            /* Determine if all the required key fields were entered.*/
            /* ------------------------------------------------------*/

          KF0G-14300(); /* Edit key fields*/
        end

      else

         /* ------------------------------------------------------------*/
         /* Otherwise, verify any modifiable data that was changed.*/
         /* ------------------------------------------------------------*/

        KF0G-14400(); /* Verify data in the line*/

      end
    else
      if (converseVar.eventKey is pf12) /* 'edit' REQUESTED*/
        KF0G-14500(); /* validate for pf12*/
        if (converseVar.validationMsgNum == 0) /* NO errors foound KF0G-14500*/
          KF0G-14400(); /* Verify data in the line*/
        end
      end
    end

  end

  if (converseVar.validationMsgNum != 0) /* Error was found*/
    exit stack; /* Exit to display map*/
  end

   /* ------------------------------------------------------------*/
   /* If EDIT requested, indicate edit completed and no errors.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf12) /* PF12 was pressed*/

    KF0GW00.XXX-MSG-LOC-ID = "14000"; /* Message location*/
    converseLib.validationFailed(79); /* Edit completed and no errors*/

    exit stack; /* Exit to display map*/

  end

end // end KF0G-14000

// Highlight changed fields
Function KF0G-14100()
   /* ------------------------------------------------------------*/
   /* If a modifiable field was changed, indicate that field may*/
   /* not be changed when key is changed or a pf key is pressed.*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.XXX-HI-PAGE-NBR == 0) /* no pages formatted*/
    return;
  end

  KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-LMT-NBR; /* Line index*/

  while (KF0GW00.XXX-INX-FLD-NBR > 0 /* Until end of lines*/
   && KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] > 0)

    if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] cursor, bold;

    end

    if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] cursor, bold;

    end

    if (KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] cursor, bold;

    end

    if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] cursor, bold;

    end

    if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] cursor, bold;

    end

    if (KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] cursor, bold;

    end

    if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] != 
    KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR])

      KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
      converseLib.validationFailed(73); /* Field may not change*/
      set KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] cursor, bold;

    end

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR - 1;
                                   /* Decrement line number*/

  end

   /* ----------  'ADD' LINE -------------*/
  if (KF0GM001.KF0GM-ADD-OVRD-RATE-EDT != KF0GW00.KF0GW-ADD-OVRD-RATE-EDT)
    KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;
  end

  if (KF0GM001.KF0GM-ADD-NMO-QTY != KF0GW00.KF0GW-ADD-NMO-QTY)
    KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-ADD-NMO-QTY cursor, bold;
  end

  if (KF0GM001.KF0GM-ADD-SLS-AMT != KF0GW00.KF0GW-ADD-SLS-AMT)
    KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-ADD-SLS-AMT cursor, bold;
  end

  if (KF0GM001.KF0GM-ADD-TRGT-COMM-PCT != KF0GW00.KF0GW-ADD-TRGT-COMM-PCT)
    KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-ADD-TRGT-COMM-PCT cursor, bold;
  end

  if (KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT != KF0GW00.KF0GW-ADD-TRGT-SLRY-PCT)
    KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT cursor, bold;
  end

  if (KF0GM001.KF0GM-ADD-TRGT-INCM != KF0GW00.KF0GW-ADD-TRGT-INCM)
    KF0GW00.XXX-MSG-LOC-ID = "14100"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-ADD-TRGT-INCM cursor, bold;
  end

end // end KF0G-14100

// Verify if Scroll is possible
Function KF0G-14200()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when scroll is requested.*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.KF0GM-SM-SREP-ID != KF0GW00.KF0GW-SM-SREP-ID) /* Sls rep id*/

    KF0GW00.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-SM-SREP-ID cursor, bold; /* Highlight*/

  end

  if (KF0GM001.KF0GM-SM-SAGCY-ID != KF0GW00.KF0GW-SM-SAGCY-ID) /* Sls Agency*/

    KF0GW00.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-SM-SAGCY-ID cursor, bold; /* Highlight*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll back was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7 /* Scroll back request*/
   && KF0GW00.XXX-CURR-PAGE-NBR < 2) /* and no previous pages*/

    KF0GW00.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(3); /* cannot page up any further*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, ensure that pages exist.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8 /* Scroll forward request*/
   && KF0GW00.XXX-CURR-PAGE-NBR >= KF0GW00.XXX-HI-PAGE-NBR)
                                   /* and no more pages*/

    KF0GW00.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(9); /* cannot page down any further*/

  end

end // end KF0G-14200

// Edit key fields
Function KF0G-14300()
   /* ------------------------------------------------------------*/
   /* Verify that a Sales Agency id  is entered*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.KF0GM-SM-SAGCY-ID <= " " /* Sales agency not entered*/
   || KF0GM001.KF0GM-SM-SREP-ID <= 0)   /* Sales rep not entered*/

    KF0GW00.XXX-MSG-LOC-ID = "14300"; /* Message location*/

    if (KF0GM001.KF0GM-SM-SAGCY-ID <= " ")
      converseLib.validationFailed(12); /* enter sagcy-id*/
      set KF0GM001.KF0GM-SM-SAGCY-ID cursor, bold; /* Highlight*/
    end

    if (KF0GM001.KF0GM-SM-SREP-ID <= " ")
      converseLib.validationFailed(13); /* enter rep id*/
      set KF0GM001.KF0GM-SM-SREP-ID cursor, bold; /* Highlight*/
    end

  else

     /* -----------------------------------------*/
     /* Get Sales Agency*/
     /* -----------------------------------------*/
    KF0GS-GET-AGCY(); /* Get Agency record*/


     /* -----------------------------------------*/
     /* Get Sales Rep name*/
     /* -----------------------------------------*/
    KF0GS-GET-SREP(); /* Get Sales Rep record*/

  end
end // end KF0G-14300

// Validate modifiable lines
Function KF0G-14400()

   /* ------------------------------------------------------------*/
   /* Otherwise, verify any modifiable data that was changed on*/
   /* the detail lines and the 'ADD' line.*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-HI-PAGE-NBR > 0) /* Page was formatted*/

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-LMT-NBR;
                               /* Line index*/

    while (KF0GW00.XXX-INX-FLD-NBR > 0) /* Until end of lines*/

      KF0GS-EDIT-DTL(); /* VERIFY EACH DETAIL LINE*/

      KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR - 1;
                               /* Decrement line number*/

    end

  end

   /* ---------------------------------------------------------*/
   /* VALIDATE 'ADD' LINE*/
   /* ---------------------------------------------------------*/
   /* --------------------------------------------------------*/
   /* if any field on the ADD line is filled, edit the values*/
   /* --------------------------------------------------------*/
  if (KF0GM001.KF0GM-ADD-TRGT-INCM > 0
   || KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT > 0
   || KF0GM001.KF0GM-ADD-TRGT-COMM-PCT > 0
   || KF0GM001.KF0GM-ADD-NMO-QTY > 0
   || KF0GM001.KF0GM-ADD-OVRD-RATE-EDT > " "
   || KF0GM001.KF0GM-ADD-SLS-AMT > 0)

    KF0GS-EDIT-ADD(); /* Edit the add line*/

  end

end // end KF0G-14400

// Edit when PF12 is pressed
Function KF0G-14500()
   /* ------------------------------------------------------------*/
   /* Indicate key fields may not change when pf12 is requested*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.KF0GM-SM-SREP-ID != KF0GW00.KF0GW-SM-SREP-ID) /* Sls rep id*/

    KF0GW00.XXX-MSG-LOC-ID = "14500"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-SM-SREP-ID cursor, bold; /* Highlight*/

  end

  if (KF0GM001.KF0GM-SM-SAGCY-ID != KF0GW00.KF0GW-SM-SAGCY-ID) /* Sls Agency*/

    KF0GW00.XXX-MSG-LOC-ID = "14200"; /* Message location*/
    converseLib.validationFailed(73); /* Field may not change*/
    set KF0GM001.KF0GM-SM-SAGCY-ID cursor, bold; /* Highlight*/

  end

end // end KF0G-14500

// PROCESS VALID INPUT REQUEST
Function KF0G-15000()
   /* ------------------------------------------------------------*/
   /* Save any work record fields that may have been modified.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7
   || converseVar.eventKey is pf8)

    KF0GW00.KF0GW-SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
    KF0GW00.KF0GW-SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;

    set KF0GM001 initial;

  end

   /* ------------------------------------------------------------*/
   /* If scroll backward was requested, decrement the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf7) /* Scroll back requested*/

    KF0GW00.XXX-CURR-PAGE-NBR = KF0GW00.XXX-CURR-PAGE-NBR - 1;
                                   /* Decrement page number*/

    KF0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If scroll forward was requested, increment the page number.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf8) /* Scroll forward requested*/

    KF0GW00.XXX-CURR-PAGE-NBR = KF0GW00.XXX-CURR-PAGE-NBR + 1;
                                   /* Increment page number*/

    KF0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* ENTER was pressed:*/
   /* If the key fields changed, request the data to display.*/
   /* ------------------------------------------------------------*/

  if (KF0GM001.KF0GM-SM-SAGCY-ID != KF0GW00.KF0GW-SM-SAGCY-ID
   || KF0GM001.KF0GM-SM-SREP-ID != KF0GW00.KF0GW-SM-SREP-ID)

    KF0GW00.XXX-RQT-DATA-FL = "Y"; /* Request for data flag*/

    KF0GW00.KF0GW-SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
    KF0GW00.KF0GW-SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;
    set KF0GM001 initial;

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Save any field that was changed in the map display storage.*/
   /* Start from the bottom to the top*/
   /* ------------------------------------------------------------*/

  KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-LMT-NBR;

  while (KF0GW00.XXX-INX-FLD-NBR >= 1) /* Until top of the detail line*/

    if (KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] == "Y") /* LINE UPDATED*/

      KF0G-15100(); /* process change*/

      KF0GW00.XXX-PAGE-UPD-FL = "Y"; /* Page update flag*/

    end

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR - 1;
                                   /* Increment line index*/

  end

  if (KF0GM001.KF0GM-ADD-TRGT-INCM > 0)

    KF0G-15200(); /* process add*/

    set KF0GW00 empty;

    KF0GW00.KF0GW-SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
    KF0GW00.KF0GW-SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;
    set KF0GM001 initial;

    KF0GS-INIT-REBUILD(); /* initialize variables*/

    KF0GW00.XXX-RQT-DATA-FL = "Y"; /* rebuild temp storage*/

    converseLib.validationFailed(28); /* updates accepted*/

  else

    if (KF0GW00.XXX-PAGE-UPD-FL == "Y")

      KF0GS-UPDT-TS(); /* Update temp storage from map*/

      KF0GS-TA0050-U(); /* Update temp storage*/

      KF0GW00.XXX-PAGE-UPD-FL = "N"; /**/

      KF0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

      converseLib.validationFailed(28); /* updates accepted*/

    end
  end



end // end KF0G-15000

// Process Change
Function KF0G-15100()

  set VCOFRM01 empty; /* initialize record*/
  set VKOAUD01 empty; /* init audit record*/

  VCOFRM01.SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
  VCOFRM01.SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;
   /* ---------------------------------------------------------*/
   /* use the old effective date on the T/S to look for a match*/
   /* in the DB2 table*/
   /* ---------------------------------------------------------*/
  VCOFRM01.CO-OVRD-RATE-EDT = KF0GW01.KF0GW-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR];

  KF0GS-VCOFRM01-S(); /* select the old record*/

  VKOAUD01.CO-AUD-FILLR-BFR-TEXT = VCOFRM01.VCOFRM01-GROUP;
  VKOAUD01.CO-AUD-TYP-IND = "C";

  if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR])

    KF0GS-VCOFRM01-D(); /* Delete old eff date*/

    KF0GS-FMAT-VCOFRM(); /* format the DB2 record*/

    KF0GS-VCOFRM01-A(); /* ADD/INSERT the new eff date*/

  else

    KF0GS-FMAT-VCOFRM(); /* format the DB2 record*/

    KF0GS-VCOFRM01-U(); /* UPDATE*/

  end

  VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VCOFRM01.VCOFRM01-GROUP;

  KF0GS-VKOAUD01-A();
end // end KF0G-15100

// Process Add
Function KF0G-15200()

  KF0GS-VCOFRM01-SO(); /* Select the open-ended record from table*/

  if (SQLCA.VAGen_SQLCODE == 0) /* OPEN-ENDED row found*/

    KF0GS-COMP-DAY-B4(); /* compute 1 day before*/

    KF0GS-VCOFRM01-U(); /* Update the xdt on the open-ended row*/
  end

  KF0GS-FMAT-ADD(); /* format the new open-ended row*/
  KF0GS-VCOFRM01-A(); /* add the new open-ended row*/

   /* -------------------------------*/
   /* insert audit record*/
   /* -------------------------------*/
  set VKOAUD01 empty;
  VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VCOFRM01.VCOFRM01-GROUP;
  VKOAUD01.CO-AUD-TYP-IND = "A";

  KF0GS-VKOAUD01-A();

end // end KF0G-15200

// Build Temp Stor for Dtl lines
Function KF0GS-BUILD-TS()

   /* ------------------------------------------------------------*/
   /* Select and open the cursor for the set to be formatted.*/
   /* ------------------------------------------------------------*/

  set VCOFRM01 empty; /* Clear db2 record*/

   /* -------------------------------------------*/
   /* Set up keys to DB2 table:  DCOMM.VCOFRM01*/
   /* -------------------------------------------*/
  VCOFRM01.SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
  VCOFRM01.SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;

  KF0GS-VCOFRM01-S1(); /* Select set and open cursor*/

   /* ------------------------------------------------------------*/
   /* Fetch and format the data into pages until end of cursor.*/
   /* ------------------------------------------------------------*/

  KF0GW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

  KF0GW00.KF0GW-EOF-FL = "N"; /* End of cursor flag*/

  while (KF0GW00.KF0GW-EOF-FL == "N") /* Until end of cursor*/

    KF0GS-VCOFRM01-N1(); /* Fetch next row in cursor*/

    /* ------------------------------------------------------------*/
    /* If not end of cursor, save the data in display storage.*/
    /* ------------------------------------------------------------*/

    if (KF0GW00.KF0GW-EOF-FL == "N") /* Not end of cursor*/

      if (KF0GW00.XXX-INX-FLD-NBR == 1) /* start of a page*/
        set KF0GW01 empty;
      end

      /* ------------------------------------------------------------*/
      /* Save the data from the table row in display storage.*/
      /* ------------------------------------------------------------*/

      KF0GS-FMAT-TS(); /* format temp storage*/

      /* ------------------------------------------------------------*/
      /* Increment the line index to the next row in display storage.*/
      /* ------------------------------------------------------------*/

      KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

    end

    /* ------------------------------------------------------------*/
    /* If the page is full, add the page to the storage queue.*/
    /* ------------------------------------------------------------*/

    if (KF0GW00.XXX-INX-FLD-NBR > KF0GW00.XXX-INX-LMT-NBR) /* Page is full*/

      KF0GS-TA0050-A(); /* Add page to temporary storage*/

      KF0GW00.XXX-INX-FLD-NBR = 1; /* Display line index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Add any partially formatted last page to the queue.*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-INX-FLD-NBR > 1) /* Page was formatted*/
    KF0GS-TA0050-A(); /* Add page to temporary storage*/
  end

   /* ------------------------------------------------------------*/
   /* Close the cursor for the selected set.*/
   /* ------------------------------------------------------------*/

  KF0GS-VCOFRM01-C1(); /* Close selected set cursor*/

end // end KF0GS-BUILD-TS

// Compute 1 day before
Function KF0GS-COMP-DAY-B4()
   /* -------------------------------------------------------*/
   /* this statement group computes for 1 day before the*/
   /* Effective date of the new open ended record which will*/
   /* be used to update the open ended record existing in the*/
   /* database*/
   /* -------------------------------------------------------*/

  set TA2REC empty;
  TA2REC.TA2DTOPT = "GREGGREG";
  TA2DYAOD = -1;
  TA2REC.TA2GRTYP = "G";
  TA2REC.TA2GRGGN = KF0GW00.KF0GW-ADD-EDT-CCYYMMDD;

  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};

  if (TA2REC.TA2RTNCD != 0) /* this should never happen*/
    converseLib.validationFailed(13);
    set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, modified, bold;
    return;
  end

  VCOFRM01.CO-OVRD-RATE-XDT = TA2REC.TA2GRGGN;
end // end KF0GS-COMP-DAY-B4

// Compute Override Comm Rate
Function KF0GS-COMP-OVRD-RT()
   /* --------------------------------------------------*/
   /* OVERRIDE COMMISSION RATE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] > 0)
     /* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-**/
     /* COMPUTE OVRD RATE*/
     /* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-**/

     /* ------------------------------------------*/
     /* STEP 1:  COMPUTE THE COMMISSION AMOUNT*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-TRGT-COMM-AMT = KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR]          * VCOFRM01.CO-TRGT-COMM-PCT;

     /* ------------------------------------------*/
     /* STEP 2:  COMPUTE THE NUMBER OF PERIODS IN*/
     /* A YEAR BASED ON THE NBR OF MONTHS*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-NBR-OF-PERIOD = 12 / KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR];

     /* ------------------------------------------*/
     /* STEP 3:  DIVIDE THE COMMISSION AMOUNT BY*/
     /* THE NUMBER OF PERIODS(ROUNDED*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-TRGT-COMM-AMT = mathLib.round(KF0GW00.KF0GW-TRGT-COMM-AMT       / KF0GW00.KF0GW-NBR-OF-PERIOD, -mathLib.decimals(KF0GW00.KF0GW-TRGT-COMM-AMT));

     /* ------------------------------------------*/
     /* STEP 4:  DIVIDE THE COMMISSION AMOUNT FROM*/
     /* STEP 3 BY THE TARGETTED SALES AMT*/
     /* ------------------------------------------*/
   /* 8 decimal*/
    KF0GW00.KF0GW-COMP-OVRD-RATE = mathLib.round(KF0GW00.KF0GW-TRGT-COMM-AMT       / KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR], -mathLib.decimals(KF0GW00.KF0GW-COMP-OVRD-RATE));

    VCOFRM01.CO-SREP-OVRD-RATE2 = KF0GW00.KF0GW-COMP-OVRD-RATE;
  else /* TARGETTED SALES AMOUNT IS 0*/
    VCOFRM01.CO-SREP-OVRD-RATE2 = 0;
  end

end // end KF0GS-COMP-OVRD-RT

// Set modifiable fields uscore
Function KF0GS-DETL-USCORE()
  set KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] underline;
  set KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] underline;
  set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] underline;
  set KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] underline;
  set KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] underline;
  set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] underline;
  if (KF0GW01.KF0GW-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] == 999999999)
     /*  */
  else
    set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] underline;
  end

end // end KF0GS-DETL-USCORE

// Edit ADD line
Function KF0GS-EDIT-ADD()
   /* --------------------------------------------------------------*/
   /* If a modifiable field was changed, VALIDATE the changed field*/
   /* --------------------------------------------------------------*/

  if (KF0GM001.KF0GM-ADD-OVRD-RATE-EDT > " ")

    KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-ADD-OVRD-RATE-EDT;

    TA1REC.TA1LOCAT[1] = "VLDT EDT"; /* location*/

    KF0GS-EDIT-DATES();

    if (sysVar.errorCode == "00000000")
      if (TA2REC.TA2RTNCD == 0) /* valid date*/

        KF0GM001.KF0GM-ADD-OVRD-RATE-EDT = KF0GW00.KF0GW-DATE-OUT; /* formatted to mm-dd-yy*/

        KF0GW00.KF0GW-ADD-EDT-CCYYMMDD = TA2REC.TA2GRGGN;

        KF0GS-MORE-EDITS(); /* validate if exist*/

      else /* invalid date*/

        converseLib.validationFailed(24); /* eff date is not valid*/

        set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;

      end
    end
  end

  if (KF0GM001.KF0GM-ADD-NMO-QTY == 0
   || KF0GM001.KF0GM-ADD-NMO-QTY > 12)

    KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(76); /* nbr months cannot be 0*/
    set KF0GM001.KF0GM-ADD-NMO-QTY cursor, bold;

  end

  if (KF0GM001.KF0GM-ADD-TRGT-COMM-PCT > 100)
    KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(21); /* must be > 0 & <= 100*/
    set KF0GM001.KF0GM-ADD-TRGT-COMM-PCT cursor, bold;
  end

  if (KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT > 100)
    KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(19); /* must be > 0 & <= 100*/
    set KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT cursor, bold;
  end

   /* ------------------------------------------------------*/
   /* check to make sure that the total of the 2 percentages*/
   /* equal 100*/
   /* ------------------------------------------------------*/
  KF0GW00.KF0GW-TOT-PCT = KF0GM001.KF0GM-ADD-TRGT-COMM-PCT      + KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT;

  if (KF0GW00.KF0GW-TOT-PCT != 100)
    KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(22); /* must = 100*/
    set KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT cursor, bold;
    set KF0GM001.KF0GM-ADD-TRGT-COMM-PCT bold;
  end

  if (KF0GM001.KF0GM-ADD-TRGT-COMM-PCT > 0)
    if (KF0GM001.KF0GM-ADD-SLS-AMT == 0)
      KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(77); /* Must be greater than 0*/
      set KF0GM001.KF0GM-ADD-SLS-AMT cursor, bold;
    end
  end

  if (converseVar.validationMsgNum > 0) /* if errors found,*/
    return; /* exit.  no sense in cross editing*/
  end

   /* ---------------------------------------------------------*/
   /* cross edit the required fields to make sure they're*/
   /* filled in.*/
   /* ---------------------------------------------------------*/

  if (KF0GM001.KF0GM-ADD-TRGT-INCM <= 0
   && (KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT > 0
   || KF0GM001.KF0GM-ADD-TRGT-COMM-PCT > 0)
   && (KF0GM001.KF0GM-ADD-SLS-AMT > 0
   && KF0GM001.KF0GM-ADD-NMO-QTY > 0
   && KF0GM001.KF0GM-ADD-OVRD-RATE-EDT > " "))

    KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
    converseLib.validationFailed(78); /* required field*/
    set KF0GM001.KF0GM-CO-SREP-TRGT-INCM cursor, bold;

  end

  if (KF0GM001.KF0GM-ADD-TRGT-INCM > 0)
    if (KF0GM001.KF0GM-ADD-OVRD-RATE-EDT == " ")
      set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;
      converseLib.validationFailed(78); /* required field*/
    end

  end

  if (KF0GM001.KF0GM-ADD-SLS-AMT > 0)
    if (KF0GM001.KF0GM-ADD-OVRD-RATE-EDT == " ")
      set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;
      converseLib.validationFailed(78); /* required field*/
    end

    if (KF0GM001.KF0GM-ADD-TRGT-INCM == 0)
      set KF0GM001.KF0GM-ADD-TRGT-INCM cursor, bold;
      converseLib.validationFailed(78); /* required field*/
    end

    if (KF0GM001.KF0GM-ADD-TRGT-COMM-PCT == 0
     && KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT == 0)
      set KF0GM001.KF0GM-ADD-TRGT-COMM-PCT bold;
      set KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT cursor, bold;
      converseLib.validationFailed(78); /* required field*/
    end

  end

  if (KF0GM001.KF0GM-ADD-TRGT-COMM-PCT > 0
   || KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT > 0)
    if (KF0GM001.KF0GM-ADD-TRGT-INCM == 0)
      set KF0GM001.KF0GM-ADD-TRGT-INCM cursor, bold;
      converseLib.validationFailed(78); /* required field*/
    end

    if (KF0GM001.KF0GM-ADD-OVRD-RATE-EDT == " ")
      set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;
      converseLib.validationFailed(78); /* required field*/
    end

  end
end // end KF0GS-EDIT-ADD

// Edit dates
Function KF0GS-EDIT-DATES()

  if (KF0GW00.KF0GW-DATE-FILL-1 == "-" /* date with separators*/
   || KF0GW00.KF0GW-DATE-FILL-1 == "/" 
   || KF0GW00.KF0GW-DATE-FILL-1 == "." 
   || KF0GW00.KF0GW-DATE-FILL-1 == " ")

  else /* date with no separators*/
    /* INSERT THE SEPARATORS*/
    KF0GW00.KF0GW-DATE-TEST-MMDDYY = KF0GW00.KF0GW-DATE-OUT;
    KF0GW00.KF0GW-DATE-OUT-MM = KF0GW00.KF0GW-DATE-TEST-MM;
    KF0GW00.KF0GW-DATE-OUT-DD = KF0GW00.KF0GW-DATE-TEST-DD;
    KF0GW00.KF0GW-DATE-OUT-YY = KF0GW00.KF0GW-DATE-TEST-YY;
    KF0GW00.KF0GW-DATE-FILL-1 = "-";
    KF0GW00.KF0GW-DATE-FILL-2 = "-";
  end

  set TA2REC empty;

  TA2REC.TA2DTOPT = "GREGGREG"; /* option*/
  TA2GRTYP = "B"; /* date type*/
  TA2REC.TA2GRGB = KF0GW00.KF0GW-DATE-OUT;

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* validate date*/

  if (sysVar.errorCode != "00000000") /* good call*/
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA2REC.TA2GROUP; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "POST"; /* post, no abend*/
    TA1REC.TA1LOCAT[2] = "TA0040  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    converseLib.validationFailed(40); /* set error message*/
  end

end // end KF0GS-EDIT-DATES

// Edit Detail Lines & Add line
Function KF0GS-EDIT-DTL()
   /* --------------------------------------------------------------*/
   /* If a modifiable field was changed, VALIDATE the changed field*/
   /* --------------------------------------------------------------*/

  KF0GW00.KF0GW-XDT-ERR-FL = "N";
  KF0GW00.KF0GW-EDT-ERR-FL = "N";

  if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR])

    if (KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR] > " ") /* value exist*/
      if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] == " ")
                                   /* value blank out*/

        KF0GS-VCOFRM01-SO(); /* select if an open row exist*/

        if (SQLCA.VAGen_SQLCODE == 0) /* open row exist*/
          KF0GW00.KF0GW-XDT-ERR-FL = "Y"; /* set err-flag*/
          KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
          KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
          converseLib.validationFailed(74);
          set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] cursor, bold;
        else /* open row not found*/
          if (KF0GW00.KF0GW-BLANK-XDT-FL == "Y") /* previous blank*/
            KF0GW00.KF0GW-XDT-ERR-FL = "Y"; /* set err-flag*/
            KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
            KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
            converseLib.validationFailed(74); /* cannot have more than 1 open exp*/
            set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] cursor, bold;
          else
            KF0GW00.KF0GW-BLANK-XDT-FL = "Y";
            KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";
          end
        end

      else
        KF0GS-EDIT-EXP-DT(); /* edit expiry date*/
      end
    else /* open ended record*/
      if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] > " ")
                                   /* value was entered*/
        KF0GS-EDIT-EXP-DT(); /* edit expiry date*/
      end
    end

  end

  if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR])

    if (KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR] > " ") /* value exist*/
      if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] == " ")
                                   /* value blank out*/
        KF0GW00.KF0GW-EDT-ERR-FL = "Y"; /* set err-flag*/
        KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(75); /* exp dt cannot be blank or zero*/
        set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] cursor, bold;
      else
        KF0GS-EDIT-EFF-DT(); /* edit effective date*/
      end
    else /* open ended record*/
      if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] > " ")
                                   /* value was entered*/

        KF0GS-EDIT-EFF-DT(); /* edit effective date*/
      end
    end

  end

   /* --------------------------------------------------*/
   /* if Expiry date modified or Effective date modified*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR]
   || KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR])

     /* ----------------------------------------------*/
     /* if previous validation of date is error free*/
     /* check to make sure that eff date is < exp date*/
     /* ----------------------------------------------*/
    if (KF0GW00.KF0GW-EDT-ERR-FL == "N"
     && KF0GW00.KF0GW-XDT-ERR-FL == "N")

      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";
      if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] > " ")

           /* ---------------------------------*/
           /* format expiry date to CCYYMMDD*/
           /* ---------------------------------*/
        KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR];

        KF0GS-FORMAT-DATE(); /* format date to CCYYMMDD*/

        KF0GW00.KF0GW-XDT-CCYYMMDD = KF0GW00.KF0GW-DATE-WORK-CCYYMMDD;

      else
        KF0GW00.KF0GW-XDT-CCYYMMDD = 99999999;
      end

        /* ---------------------------------*/
        /* format expiry date to CCYYMMDD*/
        /* ---------------------------------*/
      KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR];

      KF0GS-FORMAT-DATE(); /* format date to CCYYMMDD*/

      KF0GW00.KF0GW-EDT-CCYYMMDD = KF0GW00.KF0GW-DATE-WORK-CCYYMMDD;

        /* -------------------------------------*/
        /* compare expiry date to effective date*/
        /* ------------------------------------*/
      if (KF0GW00.KF0GW-EDT-CCYYMMDD > KF0GW00.KF0GW-XDT-CCYYMMDD)
        converseLib.validationFailed(25);
        KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
        set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] cursor, bold;
        set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] cursor, bold;
      end
    end
  end

  if (KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";

    if (KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] == 0
     || KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] > 12)

      KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(76); /* nbr months cannot be 0*/
      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
      set KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] cursor, bold;

    end

  end

  if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";

    if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] == 0)
      if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] > 0)

        KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
        KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
        converseLib.validationFailed(77); /* Must be greater than 0*/
        set KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] cursor, bold;
      end
    end

  end

  if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR]
   || KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";

    if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] > 100)
      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
      KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(21); /* must be > 0 & <= 100*/
      set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] cursor, bold;
    end

    if (KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] > 100)
      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
      KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(19); /* must be > 0 & <= 100*/
      set KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] cursor, bold;
    end

     /* ------------------------------------------------------*/
     /* check to make sure that the total of the 2 percentages*/
     /* equal 100*/
     /* ------------------------------------------------------*/
    KF0GW00.KF0GW-TOT-PCT = KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR]     + KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR];

    if (KF0GW00.KF0GW-TOT-PCT != 100)
      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
      KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(22); /* must = 100*/
      set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] cursor, bold;
      set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] cursor, bold;
    else

      if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] > 0)
        if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] == 0)
          KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
          KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
          converseLib.validationFailed(77); /* Must be greater than 0*/
          set KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] cursor, bold;
        end
      end

    end

  end

  if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";

    if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] <= 0
     && (KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] > 0
     || KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] > 0)
     && (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] > 0
     && KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] > 0
     && KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] > 0
     && KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] > 0))

      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";
      KF0GW00.XXX-MSG-LOC-ID = "14400"; /* Message location*/
      converseLib.validationFailed(78); /* cannot be zero if other fields on the*/
                                   /* row*/
                              /* are entered*/
      set KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] cursor, bold;

    end

  end

end // end KF0GS-EDIT-DTL

// Edit effective date
Function KF0GS-EDIT-EFF-DT()


         /* must be a valid date if present*/

  KF0GW00.KF0GW-DATE-OUT = " "; /* init*/

  KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR];

  TA1REC.TA1LOCAT[1] = "VLDT EDT"; /* location*/

  KF0GS-EDIT-DATES();

  if (sysVar.errorCode == "00000000")
    if (TA2REC.TA2RTNCD == 0) /* valid date*/

      KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] = KF0GW00.KF0GW-DATE-OUT;

    else /* bad date*/

      KF0GW00.KF0GW-EDT-ERR-FL = "Y"; /* eff dt error*/
      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";

      converseLib.validationFailed(24); /* eff date is not valid*/

      set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] cursor, bold;

    end
  end

end // end KF0GS-EDIT-EFF-DT

// Edit expiry dates
Function KF0GS-EDIT-EXP-DT()


         /* must be a valid date if present*/

  KF0GW00.KF0GW-DATE-OUT = " "; /* init*/

  KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR];

  TA1REC.TA1LOCAT[1] = "VLDT XDT"; /* location*/

  KF0GS-EDIT-DATES();

  if (sysVar.errorCode == "00000000")
    if (TA2REC.TA2RTNCD == 0) /* valid date*/

      KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] = KF0GW00.KF0GW-DATE-OUT;

      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "Y";

    else /* bad date*/

      KF0GW00.KF0GW-XDT-ERR-FL = "Y"; /* exp date error*/
      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = " ";

      converseLib.validationFailed(26); /* exp date if not valid*/

      set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] cursor, bold;

    end
  end

end // end KF0GS-EDIT-EXP-DT

// Format for add new open ended
Function KF0GS-FMAT-ADD()
   /* --------------------------------------------------------------*/
   /* move fields from ADD line to the DB2 CSP record*/
   /* --------------------------------------------------------------*/

  VCOFRM01.CO-OVRD-RATE-EDT = KF0GW00.KF0GW-ADD-EDT-CCYYMMDD;

  VCOFRM01.CO-OVRD-RATE-XDT = 999999999; /* open ended expiry*/

  VCOFRM01.CO-NMO-QTY = KF0GM001.KF0GM-ADD-NMO-QTY; /* nbr of months*/

  VCOFRM01.CO-TRGT-SLS-AMT = KF0GM001.KF0GM-ADD-SLS-AMT; /* Sls amt*/

  if (KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT > 0)
    VCOFRM01.CO-TRGT-SLRY-PCT = KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT / 100;
  else
    VCOFRM01.CO-TRGT-SLRY-PCT = 0;
  end

  if (KF0GM001.KF0GM-ADD-TRGT-COMM-PCT > 0)
    VCOFRM01.CO-TRGT-COMM-PCT = KF0GM001.KF0GM-ADD-TRGT-COMM-PCT / 100;
  else
    VCOFRM01.CO-TRGT-COMM-PCT = 0;
  end

  VCOFRM01.SM-SREP-PSTN-ID = SM5REC.SM-SREP-PSTN-ID;

  VCOFRM01.XXX-USER-ID = COMMAREA.CAUSERID;

  VCOFRM01.CO-SREP-TRGT-INCM = KF0GM001.KF0GM-ADD-TRGT-INCM;

  if (KF0GM001.KF0GM-ADD-SLS-AMT > 0
  ) /* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-**/
     /* COMPUTE OVRD RATE*/
     /* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-**/
     /* ------------------------------------------*/
     /* STEP 1:  COMPUTE THE COMMISSION AMOUNT*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-TRGT-COMM-AMT = KF0GM001.KF0GM-ADD-TRGT-INCM * VCOFRM01.CO-TRGT-COMM-PCT;

     /* ------------------------------------------*/
     /* STEP 2:  COMPUTE THE NUMBER OF PERIODS IN*/
     /* A YEAR BASED ON THE NBR OF MONTHS*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-NBR-OF-PERIOD = 12 / KF0GM001.KF0GM-ADD-NMO-QTY;

     /* ------------------------------------------*/
     /* STEP 3:  DIVIDE THE COMMISSION AMOUNT BY*/
     /* THE NUMBER OF PERIODS(ROUNDED*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-TRGT-COMM-AMT = mathLib.round(KF0GW00.KF0GW-TRGT-COMM-AMT / KF0GW00.KF0GW-NBR-OF-PERIOD, -mathLib.decimals(KF0GW00.KF0GW-TRGT-COMM-AMT));

     /* ------------------------------------------*/
     /* STEP 4:  DIVIDE THE COMMISSION AMOUNT FROM*/
     /* STEP 3 BY THE TARGETTED SALES AMT*/
     /* ------------------------------------------*/
   /* 8 DECIMAL*/
    KF0GW00.KF0GW-COMP-OVRD-RATE = mathLib.round(KF0GW00.KF0GW-TRGT-COMM-AMT / KF0GM001.KF0GM-ADD-SLS-AMT, -mathLib.decimals(KF0GW00.KF0GW-COMP-OVRD-RATE));

    VCOFRM01.CO-SREP-OVRD-RATE2 = KF0GW00.KF0GW-COMP-OVRD-RATE;

  else /* TARGETTED SALES AMOUNT IS 0*/
    VCOFRM01.CO-SREP-OVRD-RATE2 = 0;
  end

end // end KF0GS-FMAT-ADD

// Format Map fields from T/S
Function KF0GS-FMAT-MAP()
   /* ------------------------------------------------------------*/
   /* Clear the fields in the map storage area to be formatted.*/
   /* ------------------------------------------------------------*/

  KF0GW00.XXX-MAP-FMAT-FL = "N"; /* Format the map flag*/

   /* ------------------------------------------------------------*/
   /* FORMAT THE HEADING PART*/
   /* ------------------------------------------------------------*/
  KF0GM001.KF0GM-SM-SAGCY-ID = KF0GW00.KF0GW-SM-SAGCY-ID;
  KF0GM001.KF0GM-SM-SAGCY-NM = KF0GW00.KF0GW-SM-SAGCY-NM;

  KF0GM001.KF0GM-SM-SREP-ID = KF0GW00.KF0GW-SM-SREP-ID;
  KF0GM001.KF0GM-XXX-LAST-NM = KF0GW00.KF0GW-XXX-LAST-NM;
  KF0GM001.KF0GM-XXX-FRST-NM = KF0GW00.KF0GW-XXX-FRST-NM;

  KF0GM001.KF0GM-SM-SREP-PSTN-ID = KF0GW00.KF0GW-SM-SREP-PSTN-ID;
  KF0GM001.KF0GM-SM-SREP-PSTN-DESC = KF0GW00.KF0GW-SM-SREP-PSTN-DESC;

  if (KF0GW00.KF0GW-REP-TERM-DATE > 0)

    KF0GM001.KF0GM-REP-TERM-DATE = KF0GW00.KF0GW-REP-TERM-DATE;
    set KF0GM001.KF0GM-REP-TERM-DATE skip, bold;
    set KF0GM001.KF0GM-REP-TERM-HEADING skip, bold;

  end

   /* ------------------------------------------------------------*/
   /* If the page in storage is not the page to be displayed,*/
   /* obtain the desired page from temporary storage.*/
   /* ------------------------------------------------------------*/

  if (KF0GW00.XXX-HI-PAGE-NBR > 0) /* Pages were formatted*/

    if (KF0GW00.XXX-CURR-PAGE-NBR != TA5REC.TA5TSQIX)
                                   /* Desired page not current*/

      /* ------------------------------------------------------------*/
      /* If the current page has been changed, update the page in*/
      /* storage before obtaining the next one to display.*/
      /* ------------------------------------------------------------*/

      if (KF0GW00.XXX-PAGE-UPD-FL == "Y") /* Current page was changed*/

        KF0GS-TA0050-U(); /* Update temporary storage page*/

        KF0GW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

      end

      /* ------------------------------------------------------------*/
      /* If the desired page number is greater than the highest page*/
      /* in storage, default to the highest page number.*/
      /* ------------------------------------------------------------*/

      if (KF0GW00.XXX-CURR-PAGE-NBR > KF0GW00.XXX-HI-PAGE-NBR)
                                   /* Desired greater highest*/
        KF0GW00.XXX-CURR-PAGE-NBR = KF0GW00.XXX-HI-PAGE-NBR;
                                   /* Default to highest*/
      end

      KF0GS-TA0050-R(); /* Read temporary storage page*/

    end

    /* ------------------------------------------------------------*/
    /* Display the page information on the screen.*/
    /* ------------------------------------------------------------*/

    KF0GM001.XXX-CURR-PAGE-NBR = KF0GW00.XXX-CURR-PAGE-NBR;
                                   /* Current page*/
    KF0GM001.XXX-HI-PAGE-NBR = KF0GW00.XXX-HI-PAGE-NBR;
                                   /* Highest page*/

  end

   /* ------------------------------------------------------------*/
   /* Format the map fields from the display storage area.*/
   /* ------------------------------------------------------------*/

  KF0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (KF0GW00.XXX-INX-FLD-NBR <= KF0GW00.XXX-INX-LMT-NBR)
                                   /* Until end of screen*/
    if (KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] > 0)
                                   /* or end of formatted lines*/

       /* ------   DETAIL  LINE -----*/
      KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-SLRY-AMT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-SLRY-AMT[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-COMM-AMT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-COMM-AMT[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-CO-SREP-OVRD-RATE[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-CO-SREP-OVRD-RATE[XXX-INX-FLD-NBR];

      KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR];

      if (KF0GW01.KF0GW-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] > 0)

        KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR];

      end

       /* -----------------------------------------------------------*/
       /* if the expiration date is 999999999, it means it is the*/
       /* open-ended record and therefore do not display the value*/
       /* on the screen and protect the expiry date on the screen*/
       /* -----------------------------------------------------------*/
      if (KF0GW01.KF0GW-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] == 999999999)
        set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] skip;
      else
        if (KF0GW01.KF0GW-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] > 0)

          KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] = KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR];

        end
      end

      KF0GS-DETL-USCORE();

    end

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

end // end KF0GS-FMAT-MAP

// Format Temp Storage
Function KF0GS-FMAT-TS()
   /* ------------------------------------------*/
   /* formats the temporary storage fields*/
   /* ------------------------------------------*/

  KF0GW01.KF0GW-DETAIL-LINE[XXX-INX-FLD-NBR] = " "; /* init detl line*/

  KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] = VCOFRM01.CO-SREP-TRGT-INCM;

  KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] = VCOFRM01.CO-TRGT-SLRY-PCT * 100;

  KF0GW01.KF0GW-SLRY-AMT[XXX-INX-FLD-NBR] = VCOFRM01.CO-SREP-TRGT-INCM * VCOFRM01.CO-TRGT-SLRY-PCT;

  KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] = VCOFRM01.CO-TRGT-COMM-PCT * 100;

  KF0GW01.KF0GW-COMM-AMT[XXX-INX-FLD-NBR] = VCOFRM01.CO-SREP-TRGT-INCM * VCOFRM01.CO-TRGT-COMM-PCT;

  KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] = VCOFRM01.CO-TRGT-SLS-AMT;

  KF0GW01.KF0GW-CO-SREP-OVRD-RATE[XXX-INX-FLD-NBR] = VCOFRM01.CO-SREP-OVRD-RATE2;

  KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR] = VCOFRM01.CO-NMO-QTY;

  KF0GW01.KF0GW-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] = VCOFRM01.CO-OVRD-RATE-EDT;

   /* --- format the effective date -----*/
  KF0GW00.KF0GW-DATE-WORK-CCYYMMDD = VCOFRM01.CO-OVRD-RATE-EDT;

  KF0GW00.KF0GW-DATE-OUT-YY = KF0GW00.KF0GW-DATE-WORK-YY;
  KF0GW00.KF0GW-DATE-OUT-MM = KF0GW00.KF0GW-DATE-WORK-MM;
  KF0GW00.KF0GW-DATE-OUT-DD = KF0GW00.KF0GW-DATE-WORK-DD;
  KF0GW00.KF0GW-DATE-FILL-1 = "-";
  KF0GW00.KF0GW-DATE-FILL-2 = "-";

  KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR] = KF0GW00.KF0GW-DATE-OUT;
   /* --- -------------------------------*/

  KF0GW01.KF0GW-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] = VCOFRM01.CO-OVRD-RATE-XDT;

   /* --- format the expiry date -----*/
   /* -----------------------------------------------------------*/
   /* if the expiration date is 999999999, it means it is the*/
   /* open-ended record and therefore do not display this on the*/
   /* screen.*/
   /* -----------------------------------------------------------*/
  if (VCOFRM01.CO-OVRD-RATE-XDT == 999999999)
     /* CONTINUE*/
  else
    if (VCOFRM01.CO-OVRD-RATE-XDT > 0)
      KF0GW00.KF0GW-DATE-WORK-CCYYMMDD = VCOFRM01.CO-OVRD-RATE-XDT;

      KF0GW00.KF0GW-DATE-OUT-YY = KF0GW00.KF0GW-DATE-WORK-YY;
      KF0GW00.KF0GW-DATE-OUT-MM = KF0GW00.KF0GW-DATE-WORK-MM;
      KF0GW00.KF0GW-DATE-OUT-DD = KF0GW00.KF0GW-DATE-WORK-DD;
      KF0GW00.KF0GW-DATE-FILL-1 = "-";
      KF0GW00.KF0GW-DATE-FILL-2 = "-";

      KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR] = KF0GW00.KF0GW-DATE-OUT;

    end
  end

end // end KF0GS-FMAT-TS

// Format temp storage from map
Function KF0GS-FMAT-TS2()
   /* --------------------------------------------------*/
   /* RECOMPUTE OVERRIDE COMMISSION RATE IF ANY OF THE*/
   /* FOLLOWING FIELDS CHANGED:  TARGET INCOME*/
   /* COMMISSION PCT*/
   /* TARGET REP SALES AMT*/
   /* NBR OF MONTHS*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] !=  /* Target incm*/
  KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR]          
   || KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] !=   /* comm pct*/
  KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR]           
   || KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] !=    /* rep sales*/
  KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR]            
   || KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] !=         /* nbr of mos.*/
  KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR])               

    KF0GW00.KF0GW-TRGT-COMM-PCT = (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] / 100);

    KF0GW01.KF0GW-COMM-AMT[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] *         KF0GW00.KF0GW-TRGT-COMM-PCT;


     /* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-**/
     /* COMPUTE OVRD RATE*/
     /* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-**/

     /* ------------------------------------------*/
     /* STEP 1:  COMPUTE THE NUMBER OF PERIODS IN*/
     /* A YEAR BASED ON THE NBR OF MONTHS*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-NBR-OF-PERIOD = 12 / KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR];

     /* ------------------------------------------*/
     /* STEP 2:  DIVIDE THE COMMISSION AMOUNT BY*/
     /* THE NUMBER OF PERIODS(ROUNDED*/
     /* ------------------------------------------*/
    KF0GW00.KF0GW-TRGT-COMM-AMT = mathLib.round(KF0GW01.KF0GW-COMM-AMT[XXX-INX-FLD-NBR]       / KF0GW00.KF0GW-NBR-OF-PERIOD, -mathLib.decimals(KF0GW00.KF0GW-TRGT-COMM-AMT)); /**/

     /* ------------------------------------------*/
     /* STEP 3:  DIVIDE THE COMMISSION AMOUNT FROM*/
     /* STEP 2 BY THE TARGETTED SALES AMT*/
     /* ------------------------------------------*/
   /* 8 DECIMAL*/
    KF0GW00.KF0GW-COMP-OVRD-RATE = mathLib.round(KF0GW00.KF0GW-TRGT-COMM-AMT       / KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR], -mathLib.decimals(KF0GW00.KF0GW-COMP-OVRD-RATE));

    KF0GW01.KF0GW-CO-SREP-OVRD-RATE[XXX-INX-FLD-NBR] = KF0GW00.KF0GW-COMP-OVRD-RATE;

  end

   /* --------------------------------------------------*/
   /* EFFECTIVE DATE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR]
  )
    KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR];
     /* ---------------------------------*/
     /* format effective date to CCYYMMDD*/
     /* ---------------------------------*/
    KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR];

    KF0GS-FORMAT-DATE(); /* format date to CCYYMMDD*/

    KF0GW01.KF0GW-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] = KF0GW00.KF0GW-DATE-WORK-CCYYMMDD;
  end

   /* --------------------------------------------------*/
   /* EXPIRY  DATE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR]
  )
    KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR];
     /* ---------------------------------*/
     /* format expiry date to CCYYMMDD*/
     /* ---------------------------------*/
    KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR];

    KF0GS-FORMAT-DATE(); /* format date to CCYYMMDD*/

    KF0GW01.KF0GW-CO-OVRD-RATE-XDT = KF0GW00.KF0GW-DATE-WORK-CCYYMMDD;

  end

   /* --------------------------------------------------*/
   /* TARGET INCOME*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* SALARY PERCENTAGE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* SALARY AMOUNT*/
   /* --------------------------------------------------*/
  KF0GW01.KF0GW-SLRY-AMT[XXX-INX-FLD-NBR] = (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] *    KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR]) / 100;

   /* --------------------------------------------------*/
   /* COMMISSION  PERCENTAGE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* COMMISSION AMOUNT*/
   /* --------------------------------------------------*/
  KF0GW01.KF0GW-COMM-AMT[XXX-INX-FLD-NBR] = (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] *    KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR]) / 100;

   /* --------------------------------------------------*/
   /* TARGET REP SALES AMOUNT*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* NUMBER OF MONTHS*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR])

    KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR] = KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR];

  end

end // end KF0GS-FMAT-TS2

// Format the new DB2 record
Function KF0GS-FMAT-VCOFRM()
   /* --------------------------------------------------*/
   /* EFFECTIVE DATE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-EDT[XXX-INX-FLD-NBR]
  )
     /* ---------------------------------*/
     /* format expiry date to CCYYMMDD*/
     /* ---------------------------------*/
    KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR];

    KF0GS-FORMAT-DATE(); /* format date to CCYYMMDD*/

    VCOFRM01.CO-OVRD-RATE-EDT = KF0GW00.KF0GW-DATE-WORK-CCYYMMDD;

  end

   /* --------------------------------------------------*/
   /* EXPIRY  DATE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-FMAT-RATE-XDT[XXX-INX-FLD-NBR]
  ) /* ---------------------------------*/
     /* format expiry date to CCYYMMDD*/
     /* ---------------------------------*/
    KF0GW00.KF0GW-DATE-OUT = KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR];

    KF0GS-FORMAT-DATE(); /* format date to CCYYMMDD*/

    VCOFRM01.CO-OVRD-RATE-XDT = KF0GW00.KF0GW-DATE-WORK-CCYYMMDD;

  end


   /* --------------------------------------------------*/
   /* TARGET INCOME*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR])

    VCOFRM01.CO-SREP-TRGT-INCM = KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* SALARY PERCENTAGE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR])

    VCOFRM01.CO-TRGT-SLRY-PCT = KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] / 100;


  end

   /* --------------------------------------------------*/
   /* COMMISSION  PERCENTAGE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR])

    VCOFRM01.CO-TRGT-COMM-PCT = KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] / 100;

  end

   /* --------------------------------------------------*/
   /* TARGET REP SALES AMOUNT*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR])

    VCOFRM01.CO-TRGT-SLS-AMT = KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* NUMBER OF MONTHS*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR])

    VCOFRM01.CO-NMO-QTY = KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR];

  end

   /* --------------------------------------------------*/
   /* IF ANY OF THE MODIFIABLE FIELDS WERE CHANGED,*/
   /* RECOMPUTE THE COMMISSION RATE*/
   /* --------------------------------------------------*/
  if (KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR]
   || KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR]
   || KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR]
   || KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR]
   || KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] != 
  KF0GW01.KF0GW-CO-NMO-QTY[XXX-INX-FLD-NBR])

    KF0GS-COMP-OVRD-RT();

  end

end // end KF0GS-FMAT-VCOFRM

// Format dates
Function KF0GS-FORMAT-DATE()
        /* internal format = 'ccyymmdd'*/
        /* display format = 'mm-dd-yy'*/

  move KF0GW-DATE-OUT-MM to KF0GW-DATE-WORK-MM withV60Compat;

  move KF0GW-DATE-OUT-DD to KF0GW-DATE-WORK-DD withV60Compat;

  move KF0GW-DATE-OUT-YY to KF0GW-DATE-WORK-YY withV60Compat;

  if (KF0GW-DATE-OUT-YY > 60)
    KF0GW-DATE-WORK-CC = 19;
  else
    KF0GW-DATE-WORK-CC = 20;
  end
end // end KF0GS-FORMAT-DATE

// Get Sales Agency
Function KF0GS-GET-AGCY()


  set SM1REC empty; /* init record*/

  SM1REC.SM1AGYID = KF0GM001.KF0GM-SM-SAGCY-ID; /* set up key*/

  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes}; /* fetch agency row*/
  /*  */
  if (SQLCA.VAGen_SQLCODE == 0) /* if agency is found*/
    return;
  else /* agency not found*/
    if (SQLCA.VAGen_SQLCODE == 100)
      converseLib.validationFailed(5); /* agency doesn't exist*/
      set KF0GM001.KF0GM-SM-SAGCY-ID cursor, bold;
    else /* an error occurred*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "BUILD  2"; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program; /* goal memu failure*/
    end
  end

end // end KF0GS-GET-AGCY

// Get Sales Rep/Agency
Function KF0GS-GET-RAGCY()

   /* ----------------------------------------------------------*/
   /* get sales rep ACTIVE position id from DSLSMN.VRAGCY01*/
   /* if not found, get the most current inactive record*/
   /* and set the terminate message bright and display the*/
   /* termination date.*/
   /* ----------------------------------------------------------*/
  set SM5REC empty; /* init record*/

  SM5REC.SM1AGYID = KF0GM001.KF0GM-SM-SAGCY-ID;
  SM5REC.SM4REPID = KF0GM001.KF0GM-SM-SREP-ID;
  SM5REC.XXXSTAT = "A";

  call "IO0160" ("S ", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes}; /* fetch agency/rep row*/

  if (SQLCA.VAGen_SQLCODE == 0 /* rep found*/
   || SQLCA.VAGen_SQLCODE == +100) /* rep not found*/
    return;
  else
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "BUILD  2"; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal memu failure*/
  end

end // end KF0GS-GET-RAGCY

// Get Reps' position description
Function KF0GS-GET-REPOS()
   /* ----------------------------------------------------------*/
   /* get sales rep Position Id description and the Manager*/
   /* indicator.*/
   /* ----------------------------------------------------------*/
  KF0GW00.SM-SREP-MGR-IND = "N"; /* mgr indicator*/

  set VREPOS01 empty;

  VREPOS01.SM-SREP-PSTN-ID = KF0GM001.KF0GM-SM-SREP-PSTN-ID;

   /* get position desc*/
  call "IO0660" ("S ", SQLCA, VREPOS01) {isNoRefresh = yes, isExternal = yes};
  if (SQLCA.VAGen_SQLCODE == 0 /* found*/
   || SQLCA.VAGen_SQLCODE == 100) /* not found*/
    return;
  else
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPOS01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "GET DESC"; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0660"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal memu failure*/
  end

end // end KF0GS-GET-REPOS

// Get Sales Rep
Function KF0GS-GET-SREP()


  set SM4REC empty;

  SM4REC.SM4REPID = KF0GM001.KF0GM-SM-SREP-ID; /* set up key*/

  call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes}; /* fetch rep row*/

  if (SQLCA.VAGen_SQLCODE == 0) /* if rep is found*/
    return;
  else /* an error occurred*/
    if (SQLCA.VAGen_SQLCODE == 100) /* rep not found*/
      converseLib.validationFailed(7); /* rep does not exist*/
      set KF0GM001.KF0GM-SM-SREP-ID cursor, bold;
    else /* an error occurred*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "BUILD  1"; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program; /* goal memu failure*/
    end
  end

end // end KF0GS-GET-SREP

// Initialize records and fields
Function KF0GS-INIT-REBUILD()
  KF0GW00.XXX-RQT-DATA-FL = "N"; /* Request for data flag*/
  KF0GW00.XXX-MAP-FMAT-FL = "Y"; /* Format the map flag*/

  COMMAREA.CATOAP = " "; /* TO application*/
  COMMAREA.CAITEM = " "; /* Application data*/

  KF0GW00.XXX-HI-PAGE-NBR = 0;

  KF0GW00.XXX-TEMP-STG-LNTH = 720; /* Temporary storage length*/

  KF0GW00.KF0GW-AUDIT-FILL-LEN = 1992; /* length of audit text*/

  KF0GW00.XXX-INX-LMT-NBR = 9; /* maximum nbr of lines on*/

end // end KF0GS-INIT-REBUILD

// More edit on the Add date
Function KF0GS-MORE-EDITS()

  set VCOFRM01 empty; /* initialize record*/

  VCOFRM01.SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
  VCOFRM01.SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;

  VCOFRM01.CO-OVRD-RATE-EDT = KF0GW00.KF0GW-ADD-EDT-CCYYMMDD;

  KF0GS-VCOFRM01-S(); /* select unique*/

  if (KF0GW00.KF0GW-COFRM-FND-FL == "N") /* not found*/

    set VCOFRM01 empty; /* Clear db2 record*/

     /* -----------------------------------------------------------*/
     /* Set up keys to DB2 table:  DCOMM.VCOFRM01 for selecting set*/
     /* -----------------------------------------------------------*/
    VCOFRM01.SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
    VCOFRM01.SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;

    KF0GS-VCOFRM01-S1(); /* Select set and open cursor*/

     /* ------------------------------------------------------------*/
     /* Fetch just the first record which should have the highest*/
     /* effective date.*/
     /* ------------------------------------------------------------*/

    KF0GW00.KF0GW-EOF-FL = "N"; /* End of cursor flag*/

    KF0GS-VCOFRM01-N1(); /* Fetch next row in cursor*/

    if (KF0GW00.KF0GW-EOF-FL == "N") /* Not end of cursor*/
      if (KF0GW00.KF0GW-ADD-EDT-CCYYMMDD <= VCOFRM01.CO-OVRD-RATE-EDT)
        converseLib.validationFailed(81);
        set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;
      else /* Add EDT > highest row in DB*/
        if (VCOFRM01.CO-OVRD-RATE-XDT != 999999999)

          if (KF0GW00.KF0GW-ADD-EDT-CCYYMMDD
           <= VCOFRM01.CO-OVRD-RATE-XDT)
            converseLib.validationFailed(82);
            set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;

          end
        end
      end
    end

     /* ------------------------------------------------------------*/
     /* Close the cursor for the selected set.*/
     /* ------------------------------------------------------------*/

    KF0GS-VCOFRM01-C1(); /* Close selected set cursor*/

  else
    converseLib.validationFailed(83);
    set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT cursor, bold;
  end
end // end KF0GS-MORE-EDITS

// Protect fields
Function KF0GS-PROTECT-FLDS()

   /* ------------------------------------------------------------*/
   /* Protect the detail fields and the 'add' line if the user*/
   /* does not have access authority*/
   /* ------------------------------------------------------------*/

   /* ---------------------------*/
   /* <------ 'ADD'    LINE ---->*/
   /* ---------------------------*/
  if (KFWREC.KFW-ACCESS-IND != "Y"
   || KF0GM001.KF0GM-REP-TERM-DATE > 0)
    set KF0GM001.KF0GM-ADD-TRGT-INCM skip;
    set KF0GM001.KF0GM-ADD-TRGT-SLRY-PCT skip;
    set KF0GM001.KF0GM-ADD-TRGT-COMM-PCT skip;
    set KF0GM001.KF0GM-ADD-SLS-AMT skip;
    set KF0GM001.KF0GM-ADD-NMO-QTY skip;
    set KF0GM001.KF0GM-ADD-OVRD-RATE-EDT skip;
    set KF0GM001.KF0GM-ADD-OVRD-RATE-XDT skip;
  end

   /* ---------------------------*/
   /* <-----   DETAIL  LINE ---->*/
   /* ---------------------------*/
  KF0GW00.XXX-INX-FLD-NBR = 1; /* Initialize line index*/

  while (KF0GW00.XXX-INX-FLD-NBR <= KF0GW00.XXX-INX-LMT-NBR)
                                   /* Until end of screen*/
    if ((KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] == 0
     && KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] == 0
     && KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] == 0)
     || KFWREC.KFW-ACCESS-IND != "Y"
     || KF0GM001.KF0GM-REP-TERM-DATE > 0)
        /* protect all the enterable fields on the line*/

      set KF0GM001.KF0GM-CO-SREP-TRGT-INCM[XXX-INX-FLD-NBR] skip;
      set KF0GM001.KF0GM-CO-TRGT-SLRY-PCT[XXX-INX-FLD-NBR] skip;
      set KF0GM001.KF0GM-CO-TRGT-COMM-PCT[XXX-INX-FLD-NBR] skip;
      set KF0GM001.KF0GM-CO-TRGT-SLS-AMT[XXX-INX-FLD-NBR] skip;
      set KF0GM001.KF0GM-CO-NMO-QTY[XXX-INX-FLD-NBR] skip;
      set KF0GM001.KF0GM-CO-OVRD-RATE-EDT[XXX-INX-FLD-NBR] skip;
      set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] skip;

    end

    /* -----------------------------------------------------------*/
    /* if the expiration date is 999999999, it means it is the*/
    /* open-ended record and therefore do not display the value*/
    /* on the screen and protect the expiry date on the screen*/
    /* -----------------------------------------------------------*/
    if (KF0GW01.KF0GW-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] == 999999999
     || KFWREC.KFW-ACCESS-IND != "Y"
     || KF0GM001.KF0GM-REP-TERM-DATE > 0)
      set KF0GM001.KF0GM-CO-OVRD-RATE-XDT[XXX-INX-FLD-NBR] skip;
    end

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR + 1;
                                   /* Increment line index*/

  end

end // end KF0GS-PROTECT-FLDS

// Get Sales Rep termination date
Function KF0GS-SREP-TERM()
   /* select the first record from the set DSLSMN.VRAGY01*/
   /* since this should be the most recent record that would*/
   /* show the termination date.*/

  SM5REC.XXXSTAT = " ";

  call "IO0160" ("S3", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

  if (SQLCA.VAGen_SQLCODE == 0)

    call "IO0160" ("N3", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes};

    if (SQLCA.VAGen_SQLCODE == 0)
      KF0GM001.KF0GM-REP-TERM-DATE = SM5REC.SM5TDT;
      KF0GW00.KF0GW-REP-TERM-DATE = SM5REC.SM5TDT;
      set KF0GM001.KF0GM-REP-TERM-DATE skip, bold;
      set KF0GM001.KF0GM-REP-TERM-HEADING skip, bold;
    else
      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(14); /* rep not in agency*/
        set KF0GM001.KF0GM-SM-SAGCY-ID cursor, bold;
        set KF0GM001.KF0GM-SM-SREP-ID bold;
      end
    end

    call "IO0160" ("C3", SQLCA, SM5REC) {isNoRefresh = yes, isExternal = yes}; /* close cursor*/

    if (SQLCA.VAGen_SQLCODE != 0)
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
      TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "BUILD  2"; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program; /* goal memu failure*/
    end
  end

end // end KF0GS-SREP-TERM

// Add page to temporary storage
Function KF0GS-TA0050-A()
   /* ------------------------------------------------------------*/
   /* Add the next page to the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  KF0GW01.XXX-TEMP-STG-LNTH = KF0GW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "A"; /* Function code*/

  try
    call "TA0050" (KF0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Add page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, initialize the storage area and*/
   /* indicators to be used and return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    set KF0GW01 empty; /* M001 display storage*/

    KF0GW00.XXX-HI-PAGE-NBR = TA5REC.TA5TSQIX; /* Highest page number*/

    TA5REC.TA5TSQIX = 0; /* Clear last page number*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KF0GW00.XXX-MSG-LOC-ID = "TA0050A"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = KF0GW00.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "ADD PAGE TO TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KF0GS-TA0050-A

// Purge any temporary storage
Function KF0GS-TA0050-P()
   /* ------------------------------------------------------------*/
   /* Initialize the storage areas and indicators to be used.*/
   /* ------------------------------------------------------------*/

  set KF0GW01 empty; /* M001 display storage*/

  KF0GW00.XXX-PAGE-UPD-FL = "N"; /* Page update flag*/

  TA5REC.TA5TSQIX = 0; /* Displayed page number*/
  KF0GW00.XXX-HI-PAGE-NBR = 0; /* Highest page number*/

   /* ------------------------------------------------------------*/
   /* Purge any temporary storage for this application.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/

  TA5REC.TA5FNCCD = "P"; /* Function code*/

  try
    call "TA0050" (KF0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Purge storage*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KF0GW00.XXX-MSG-LOC-ID = "TA0050P"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = KF0GW00.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "PURGE ANY TEMPORARY STORAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KF0GS-TA0050-P

// Read temporary storage page
Function KF0GS-TA0050-R()
   /* ------------------------------------------------------------*/
   /* Read the next page from the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  KF0GW01.XXX-TEMP-STG-LNTH = KF0GW00.XXX-TEMP-STG-LNTH;
                                   /* Temporary storage length*/

  TA5REC.TA5APPID = COMMAREA.CACURRAP; /* Application identification*/
  TA5REC.TA5TSQIX = KF0GW00.XXX-CURR-PAGE-NBR; /* Page number*/

  TA5REC.TA5FNCCD = "R"; /* Function code*/

  try
    call "TA0050" (KF0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Read page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KF0GW00.XXX-MSG-LOC-ID = "TA0050R"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = KF0GW00.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "READ TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KF0GS-TA0050-R

// Update temporary storage page
Function KF0GS-TA0050-U()
   /* ------------------------------------------------------------*/
   /* Update the page in the temporary storage queue.*/
   /* ------------------------------------------------------------*/

  TA5REC.TA5FNCCD = "U"; /* Function code*/

  try
    call "TA0050" (KF0GW01, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* Update page*/

   /* ------------------------------------------------------------*/
   /* If the call was successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return code*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* Otherwise, indicate that an unexpected error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.TAEDESC1 = TA5REC.TA5DATA; /* Subroutine parameters*/

  KF0GW00.XXX-MSG-LOC-ID = "TA0050U"; /* Message location*/

  VGVar.handleSysLibraryErrors = 0;
  sysLib.rollback(); /* Roll back all changes*/

  converseLib.validationFailed(34); /* Unexpected error occurred*/
  TA1REC.TA1FUNC = "RETN"; /* Termination function*/

  TA1REC.TA1TYPE = "APPL"; /* Type of error*/
  TA1REC.TA1PGMNM = KF0GW00.XXX-MSG-LOC-ID; /* Message location*/
  TA1REC.TA1LOC = "UPDATE TEMPORARY STORAGE PAGE"; /* Description*/

  call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/


end // end KF0GS-TA0050-U

// Update temp storage from map
Function KF0GS-UPDT-TS()
  KF0GW00.XXX-INX-FLD-NBR = 1;

  while (KF0GW00.XXX-INX-FLD-NBR <= KF0GW00.XXX-INX-LMT-NBR)

    if (KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] == "Y") /* LINE UPDATED*/

      KF0GS-FMAT-TS2(); /* format T/S from map*/

      KF0GW01.KF0GW-UPDATE-FL[XXX-INX-FLD-NBR] = "N";

    end

    KF0GW00.XXX-INX-FLD-NBR = KF0GW00.XXX-INX-FLD-NBR + 1;

  end

end // end KF0GS-UPDT-TS

// Call IOMOD to add the record
Function KF0GS-VCOFRM01-A()

  set SQLCA empty;

  XX0XS01(); /* convert date & time*/

  VCOFRM01.ZZ-SDT = XX0XW01.XX0XWDAT; /* SETUP  date*/
  VCOFRM01.ZZ-SETUP-HHMM = XX0XW01.XX0XWTIM; /* SETUP  time*/
  VCOFRM01.ZZ-CHNG-CNT = 0;

  call "VCOFRM01" ("A ", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* select unique*/
  /*  */
  if (SQLCA.VAGen_SQLCODE != 0) /* if an error occured*/
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "ADD     "; /* error location*/
    TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-VCOFRM01-A

// Close set: Scan 1
Function KF0GS-VCOFRM01-C1()

          /* close DCOMM.VCOFRM01 cursor*/

  call "VCOFRM01" ("C1", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* close  cursor*/

  if (SQLCA.VAGen_SQLCODE != 0) /* if an error occured*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "CLOSE C1"; /* error location*/
    TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-VCOFRM01-C1

// Delete the old DB2 record
Function KF0GS-VCOFRM01-D()

  set SQLCA empty;

  call "VCOFRM01" ("D ", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* open cursor*/
  /*  */
  if (SQLCA.VAGen_SQLCODE == 0
   || SQLCA.VAGen_SQLCODE == 100)
     /*  */
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback(); /* ROLL BACK PREVIOUS CHANGES*/
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "DELETE  "; /* error location*/
    TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-VCOFRM01-D

// Select next in set: Scan 1
Function KF0GS-VCOFRM01-N1()

          /* open a cursor for DCOMM.VCOFRM01 to fetch the*/
          /* sales rep compensation formulas for the map*/


  call "VCOFRM01" ("N1", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* open cursor*/
  /*  */
  if (SQLCA.VAGen_SQLCODE == 0
  ) /* CONTINUE*/
  else
    if (SQLCA.VAGen_SQLCODE == +100)
      KF0GW00.KF0GW-EOF-FL = "Y"; /* set EOF flag*/
    else /* anything other than 0/100*/
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "OPEN S1 "; /* error location*/
      TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      XSPF4(); /* pass to goal menu*/
      exit program; /* goal menu failure*/
    end
  end

end // end KF0GS-VCOFRM01-N1

// Select Unique
Function KF0GS-VCOFRM01-S()

  set SQLCA empty;

  call "VCOFRM01" ("S ", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* select unique*/
  /*  */
  if (SQLCA.VAGen_SQLCODE == 0)
    KF0GW00.KF0GW-COFRM-FND-FL = "Y"; /* init to found*/
  else
    if (SQLCA.VAGen_SQLCODE == +100) /* not found*/
      KF0GW00.KF0GW-COFRM-FND-FL = "N";
    else
      if (SQLCA.VAGen_SQLCODE != 0) /* if an error occured*/
        VGVar.handleSysLibraryErrors = 0;
        sysLib.rollback();
        move SQLCA to ERRSQLCA withV60Compat;
        TA1REC.TA1TYPE = "DB2"; /* db2 error*/
        TA1REC.TA1FUNC = "RETN";
        TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
        TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
        TA1REC.TA1LOCAT[3] = "SELECT U"; /* error location*/
        TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
        try
          call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
        end /* message formatter*/
        COMMAREA.CAUSERA = " "; /* clear commarea*/
        XSPF4(); /* pass to goal menu*/
        exit program; /* goal menu failure*/
      end
    end
  end

end // end KF0GS-VCOFRM01-S

// Select set: Scan 1
Function KF0GS-VCOFRM01-S1()

          /* open a cursor for DCOMM.VCOFRM01 to fetch the*/
          /* sales rep compensation formulas for the map*/


  set SQLCA empty;

  call "VCOFRM01" ("S1", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* open cursor*/
  /*  */
  if (SQLCA.VAGen_SQLCODE != 0) /* if an error occured*/
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "OPEN S1 "; /* error location*/
    TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-VCOFRM01-S1

// Select open-ended record
Function KF0GS-VCOFRM01-SO()
   /* --------------------------------------------------------------*/
   /* this will select the OPEN-ENDED row (XDT = 999999999) from the*/
   /* DB2 table DCOMM.VCOFRM01*/
   /* --------------------------------------------------------------*/

  set VCOFRM01 empty;
  set SQLCA empty;

  VCOFRM01.SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
  VCOFRM01.SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;

  call "VCOFRM01" ("SO", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* select unique*/
  /*  */
  if (SQLCA.VAGen_SQLCODE == 0 /* found*/
   || SQLCA.VAGen_SQLCODE == +100) /* not found*/
     /* continue*/
  else
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "SELECT U"; /* error location*/
    TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-VCOFRM01-SO

// Update the DB2 record
Function KF0GS-VCOFRM01-U()

  set SQLCA empty;

  XX0XS01(); /* convert date & time*/

  VCOFRM01.ZZ-CHNG-DT = XX0XW01.XX0XWDAT; /* change date*/
  VCOFRM01.ZZ-CHNG-HHMM = XX0XW01.XX0XWTIM; /* change time*/

  call "VCOFRM01" ("U ", SQLCA, VCOFRM01) {isNoRefresh = yes, isExternal = yes}; /* select unique*/
  /*  */
  if (SQLCA.VAGen_SQLCODE != 0)
    VGVar.handleSysLibraryErrors = 0;
    sysLib.rollback();
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCOFRM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "UPDATE  "; /* error location*/
    TA1REC.TA1LOCAT[4] = "VCOFRM01"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-VCOFRM01-U

// Add audit record
Function KF0GS-VKOAUD01-A()
  VKOAUD01.XXX-TBL-NM = "VCOFRM01";
  VKOAUD01.SM-SAGCY-ID = KF0GM001.KF0GM-SM-SAGCY-ID;
  VKOAUD01.SM-SREP-ID = KF0GM001.KF0GM-SM-SREP-ID;
  VKOAUD01.XXX-USER-ID = COMMAREA.CAUSERID;
  VKOAUD01.ZZ-SDT = XX0XW01.XX0XWDAT;
  VKOAUD01.ZZ-SETUP-HHMMSS = XX0XW01.XX0XWTIM;

  VKOAUD01.CO-AUD-FILLR-BFR-LEN = KF0GW00.KF0GW-AUDIT-FILL-LEN;
  VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0GW00.KF0GW-AUDIT-FILL-LEN;

  KF0GS-WRITE-AUDIT();

end // end KF0GS-VKOAUD01-A

// Write DCOMM.VKOAUD01
Function KF0GS-WRITE-AUDIT()

       /* insert a new audit row*/


  call "IO3940" ("A ", SQLCA, VKOAUD01) {isNoRefresh = yes, isExternal = yes}; /* get next row*/

  if (SQLCA.VAGen_SQLCODE != 0) /* bad return*/
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOAUD01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "ADD AUDT"; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3940"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    exit program; /* goal menu failure*/
  end

end // end KF0GS-WRITE-AUDIT

Function XSKFS-EXIT()
   /* ------------------------------------------------------------*/
   /* Set the application to be invoked for PF1 or PF4.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf1) /* PF1 was pressed*/
    COMMAREA.CATOAP = "GD00"; /* Goal Documentation*/
  end

  if (converseVar.eventKey is pf4) /* PF4 was pressed*/
    COMMAREA.CATOAP = "MN0M"; /* Master Menu*/
  end

   /* ------------------------------------------------------------*/
   /* Save the system work record in the COMMAREA user area.*/
   /* ------------------------------------------------------------*/

  if (COMMAREA.CATOSYS == COMMAREA.CACURSYS) /* Same system*/

    COMMAREA.CAUSERA = KFWREC.KFW-GROUP; /* Save work record*/
  else
    COMMAREA.CAUSERA = " "; /* Clear user area*/

  end

   /* ------------------------------------------------------------*/
   /* Transfer control to the specified application.*/
   /* ------------------------------------------------------------*/

  XSEXIT(); /* Exit to another application*/

  KF0GW00.XXX-MSG-LOC-ID = "XSEXIT"; /* Message location*/

   /* ------------------------------------------------------------*/
   /* Reestablish the COMMAREA application and item fields.*/
   /* ------------------------------------------------------------*/

  COMMAREA.CAEZSG3 = "0"; /* Force zero third character*/
  COMMAREA.CACURRAP = COMMAREA.CAEZSAP; /* Current application*/

  if (converseVar.eventKey is pfkey) /* PF key was pressed*/

    COMMAREA.CATOAP = " "; /* Clear TO application*/

    if (converseVar.eventKey is pf1) /* PF1 was pressed*/
      COMMAREA.CAITEM = " "; /* Clear map name from item*/
    end

  end


end // end XSKFS-EXIT

//*** RECORD=KF0GW00 ****
// this record contains working storage fields for program KF0G
// 
// ************************************************************
// *                  Maintenance History                     *
// ************************************************************
// 
//  Date      Name    Description
// --------  ------  -----------------------------------------
// 04/25/98  OENFIE    Created record.
// ***********************
Record KF0GW00 type basicRecord
  10 XXX-RQT-DATA-FL XXX-RQT-DATA-FL ; 
  10 XXX-MAP-FMAT-FL XXX-MAP-FMAT-FL ; 
  10 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  10 XXX-INX-LMT-NBR XXX-INX-LMT-NBR ; 
  10 XXX-INX-FLD-NBR XXX-INX-FLD-NBR ; 
  10 XXX-CURR-PAGE-NBR XXX-CURR-PAGE-NBR ; 
  10 XXX-HI-PAGE-NBR XXX-HI-PAGE-NBR ; 
  10 XXX-PAGE-UPD-FL XXX-PAGE-UPD-FL ; 
  10 XXX-MSG-LOC-ID XXX-MSG-LOC-ID ; 
  10 * char(1) ; 
  10 SM-SREP-MGR-IND SM-SREP-MGR-IND ; 
  10 KF0GW-SM-SAGCY-ID KF0GW-SM-SAGCY-ID ; 
  10 KF0GW-SM-SREP-ID KF0GW-SM-SREP-ID ; 
  10 KF0GW-SM-SAGCY-NM KF0GW-SM-SAGCY-NM ; 
  10 KF0GW-XXX-LAST-NM KF0GW-XXX-LAST-NM ; 
  10 KF0GW-XXX-FRST-NM KF0GW-XXX-FRST-NM ; 
  10 KF0GW-SM-SREP-PSTN-ID KF0GW-SM-SREP-PSTN-ID ; 
  10 KF0GW-SM-SREP-PSTN-DESC KF0GW-SM-SREP-PSTN-DESC ; 
  10 KF0GW-REP-TERM-DATE KF0GW-REP-TERM-DATE ; 
  10 * char(1) ; 
  10 KF0GW-ADD-TRGT-INCM KF0GW-ADD-TRGT-INCM ; 
  10 KF0GW-ADD-TRGT-SLRY-PCT KF0GW-ADD-TRGT-SLRY-PCT ; 
  10 KF0GW-ADD-TRGT-COMM-PCT KF0GW-ADD-TRGT-COMM-PCT ; 
  10 KF0GW-ADD-SLS-AMT KF0GW-ADD-SLS-AMT ; 
  10 KF0GW-ADD-NMO-QTY KF0GW-ADD-NMO-QTY ; 
  10 KF0GW-ADD-OVRD-RATE-EDT KF0GW-ADD-OVRD-RATE-EDT ; 
  10 KF0GW-ADD-EDT-CCYYMMDD KF0GW-ADD-EDT-CCYYMMDD ; 
  10 KF0GW-TRGT-COMM-AMT KF0GW-TRGT-COMM-AMT ; 
  10 KF0GW-COMP-OVRD-RATE KF0GW-COMP-OVRD-RATE ; 
  10 KF0GW-TRGT-COMM-PCT KF0GW-TRGT-COMM-PCT ; 
  10 * char(1) ; 
  10 KF0GW-EDT-CCYYMMDD KF0GW-EDT-CCYYMMDD ; 
  10 KF0GW-XDT-CCYYMMDD KF0GW-XDT-CCYYMMDD ; 
  10 * char(1) ; 
  10 KF0GW-CURR-DATE KF0GW-CURR-DATE ; 
    15 KF0GW-CURR-CC KF0GW-CURR-CC ; 
    15 KF0GW-CURR-YYMMDD KF0GW-CURR-YYMMDD ; 
      20 KF0GW-CURR-YY KF0GW-CURR-YY ; 
      20 KF0GW-CURR-MM KF0GW-CURR-MM ; 
      20 KF0GW-CURR-DD KF0GW-CURR-DD ; 
  10 * char(1) ; 
  10 KF0GW-DATE-OUT KF0GW-DATE-OUT ; 
    15 KF0GW-DATE-OUT-MM KF0GW-DATE-OUT-MM ; 
    15 KF0GW-DATE-FILL-1 KF0GW-DATE-FILL-1 ; 
    15 KF0GW-DATE-OUT-DD KF0GW-DATE-OUT-DD ; 
    15 KF0GW-DATE-FILL-2 KF0GW-DATE-FILL-2 ; 
    15 KF0GW-DATE-OUT-YY KF0GW-DATE-OUT-YY ; 
  10 * char(1) ; 
  10 KF0GW-DATE-WORK-CCYYMMDD KF0GW-DATE-WORK-CCYYMMDD ; 
    15 KF0GW-DATE-WORK-CC KF0GW-DATE-WORK-CC ; 
    15 KF0GW-DATE-WORK-YYMMDD KF0GW-DATE-WORK-YYMMDD ; 
      20 KF0GW-DATE-WORK-YY KF0GW-DATE-WORK-YY ; 
      20 KF0GW-DATE-WORK-MM KF0GW-DATE-WORK-MM ; 
      20 KF0GW-DATE-WORK-DD KF0GW-DATE-WORK-DD ; 
  10 * char(1) ; 
  10 KF0GW-DATE-TEST-MMDDYY KF0GW-DATE-TEST-MMDDYY ; 
    15 KF0GW-DATE-TEST-MM KF0GW-DATE-TEST-MM ; 
    15 KF0GW-DATE-TEST-DD KF0GW-DATE-TEST-DD ; 
    15 KF0GW-DATE-TEST-YY KF0GW-DATE-TEST-YY ; 
  10 * char(1) ; 
  10 KF0GW-TOT-PCT KF0GW-TOT-PCT ; 
  10 KF0GW-NBR-OF-PERIOD KF0GW-NBR-OF-PERIOD ; 
  10 KF0GW-AUDIT-FILL-LEN KF0GW-AUDIT-FILL-LEN ; 
  10 KF0GW-EOF-FL KF0GW-EOF-FL ; 
  10 KF0GW-XDT-ERR-FL KF0GW-XDT-ERR-FL ; 
  10 KF0GW-EDT-ERR-FL KF0GW-EDT-ERR-FL ; 
  10 KF0GW-COFRM-FND-FL KF0GW-COFRM-FND-FL ; 
  10 KF0GW-MISSING-ADD-FLD-FL KF0GW-MISSING-ADD-FLD-FL ; 
  10 KF0GW-BLANK-XDT-FL KF0GW-BLANK-XDT-FL ; 
end // end KF0GW00

//*** RECORD=KF0GW01 ****
// this record contains the working storage table that is moved
// to the screen map KF0GM001.  This is also the temp storage
// page record.  A page means 1 of this record.
// 
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
//  Date      Name    Description
// --------  -------  ------------------------------------
// 04/25/98  OENFIE    Created table.
// 
// ***********************
Record KF0GW01 type basicRecord
  5 XXX-TEMP-STG-LNTH XXX-TEMP-STG-LNTH ; 
  5 * char(747) ; 
    10 KF0GW-DETAIL-LINE KF0GW-DETAIL-LINE [9] ; 
      15 KF0GW-CO-SREP-TRGT-INCM KF0GW-CO-SREP-TRGT-INCM ; 
      15 KF0GW-CO-TRGT-SLRY-PCT KF0GW-CO-TRGT-SLRY-PCT ; 
      15 KF0GW-SLRY-AMT KF0GW-SLRY-AMT ; 
      15 KF0GW-CO-TRGT-COMM-PCT KF0GW-CO-TRGT-COMM-PCT ; 
      15 KF0GW-COMM-AMT KF0GW-COMM-AMT ; 
      15 KF0GW-CO-TRGT-SLS-AMT KF0GW-CO-TRGT-SLS-AMT ; 
      15 KF0GW-CO-SREP-OVRD-RATE KF0GW-CO-SREP-OVRD-RATE ; 
      15 KF0GW-CO-NMO-QTY KF0GW-CO-NMO-QTY ; 
      15 KF0GW-CO-OVRD-RATE-EDT KF0GW-CO-OVRD-RATE-EDT ; 
      15 KF0GW-CO-OVRD-RATE-XDT KF0GW-CO-OVRD-RATE-XDT ; 
      15 KF0GW-FMAT-RATE-EDT KF0GW-FMAT-RATE-EDT ; 
      15 KF0GW-FMAT-RATE-XDT KF0GW-FMAT-RATE-XDT ; 
      15 KF0GW-UPDATE-FL KF0GW-UPDATE-FL ; 
end // end KF0GW01

//*** RECORD=VCOFRM01 ****
// ********** SALES COMMISSION COMPENSATION FORMULA TABLE *****
// 
// DB2 TABLE VIEW:      DCOMM.VCOFRM01
// 
// COPYLIB MEMBER:      DCOFRM01
// 
// I/O MODULE:          VCOFRM01
// 
// KEY TO DB2 TABLE:    SM-SAGCY-ID
//                      SM-SREP-ID
//                      CO-OVRD-RATE-EDT
// 
// 
// DATE CREATED:        04/24/98
// 
// ***********************************************************
// * CO-SREP-OVRD-RATE2 = This is the new data item name used
// *       for CSP.  The original data item, CO-SREP-OVRD-RATE
// *       is 5 decimal. This new item is now 9 decimal as per
// *       user request.  The DBA, Ken Krug, would like to
// *       retain the same old DB2 name and change the
// *       LTEC of this.  However, for CSP, we do not want to
// *       overlay the old data item name since this name is
// *       still being used by the old record: VFRMLA01.
// ***********************************************************
// MAINTENANCE LOG:
// 
//   DATE    INIT.      COMMENT
// --------  ------     ---------------------------------------
// 04/24/98  OENFIE     New record definition.
// ************************
Record VCOFRM01 type basicRecord
  5 VCOFRM01-GROUP VCOFRM01-GROUP ; 
    10 SM-SAGCY-ID SM-SAGCY-ID ; 
    10 SM-SREP-ID SM-SREP-ID ; 
    10 CO-OVRD-RATE-EDT CO-OVRD-RATE-EDT ; 
    10 CO-OVRD-RATE-XDT CO-OVRD-RATE-XDT ; 
    10 CO-SREP-OVRD-RATE2 CO-SREP-OVRD-RATE2 ; 
    10 CO-SREP-TRGT-INCM CO-SREP-TRGT-INCM ; 
    10 CO-TRGT-SLRY-PCT CO-TRGT-SLRY-PCT ; 
    10 CO-TRGT-COMM-PCT CO-TRGT-COMM-PCT ; 
    10 CO-TRGT-SLS-AMT CO-TRGT-SLS-AMT ; 
    10 CO-NMO-QTY CO-NMO-QTY ; 
    10 SM-SREP-PSTN-ID SM-SREP-PSTN-ID ; 
    10 XXX-USER-ID XXX-USER-ID ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-SETUP-HHMM ZZ-SETUP-HHMM ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VCOFRM01

DataItem CO-NMO-QTY smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// new rep override rate
DataItem CO-SREP-OVRD-RATE2 decimal(9,9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// total seasonal sales for rep
DataItem CO-TRGT-SLS-AMT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-ADD-EDT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-ADD-NMO-QTY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-ADD-OVRD-RATE-EDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-ADD-SLS-AMT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-ADD-TRGT-COMM-PCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-ADD-TRGT-INCM num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-ADD-TRGT-SLRY-PCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// length of audit row
DataItem KF0GW-AUDIT-FILL-LEN smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-BLANK-XDT-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// number of months
DataItem KF0GW-CO-NMO-QTY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// formula effective date
DataItem KF0GW-CO-OVRD-RATE-EDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// formula expire date
DataItem KF0GW-CO-OVRD-RATE-XDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sales rep override rate
DataItem KF0GW-CO-SREP-OVRD-RATE num(8,8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sales rep target income
DataItem KF0GW-CO-SREP-TRGT-INCM num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sales rep commission percent
DataItem KF0GW-CO-TRGT-COMM-PCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sales rep salary percent
DataItem KF0GW-CO-TRGT-SLRY-PCT num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// sales rep targetted sales amt
DataItem KF0GW-CO-TRGT-SLS-AMT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// VCOFRM01 rec found flag
DataItem KF0GW-COFRM-FND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// commission compensation
DataItem KF0GW-COMM-AMT num(7)  {
  currency = no, numericSeparator = yes, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// override rate work field
DataItem KF0GW-COMP-OVRD-RATE num(8,8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date century portion
DataItem KF0GW-CURR-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem KF0GW-CURR-DATE num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date dd portion
DataItem KF0GW-CURR-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date mm portion
DataItem KF0GW-CURR-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date yy portion
DataItem KF0GW-CURR-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date yymmdd portion
DataItem KF0GW-CURR-YYMMDD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// output date first dash
DataItem KF0GW-DATE-FILL-1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// output date 2nd dash
DataItem KF0GW-DATE-FILL-2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// date output format
DataItem KF0GW-DATE-OUT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// output date day portion
DataItem KF0GW-DATE-OUT-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// output date month portion
DataItem KF0GW-DATE-OUT-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// output date year portion
DataItem KF0GW-DATE-OUT-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// date edit field mm portion
DataItem KF0GW-DATE-TEST-DD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// date edit field mm portion
DataItem KF0GW-DATE-TEST-MM char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// date edit field
DataItem KF0GW-DATE-TEST-MMDDYY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// date edit field mm portion
DataItem KF0GW-DATE-TEST-YY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// century portion of date
DataItem KF0GW-DATE-WORK-CC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date in ccyymmcc format
DataItem KF0GW-DATE-WORK-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// day portion of date
DataItem KF0GW-DATE-WORK-DD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// month portion of date
DataItem KF0GW-DATE-WORK-MM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year portion of date
DataItem KF0GW-DATE-WORK-YY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// work date yymmdd portion
DataItem KF0GW-DATE-WORK-YYMMDD num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working storage for map
DataItem KF0GW-DETAIL-LINE char(83)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-EDT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-EDT-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of file flag
DataItem KF0GW-EOF-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-FMAT-RATE-EDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-FMAT-RATE-XDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-MISSING-ADD-FLD-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-NBR-OF-PERIOD smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SM_SREP_TDT
DataItem KF0GW-REP-TERM-DATE int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// sales rep salary amount
DataItem KF0GW-SLRY-AMT num(7)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// agency id
DataItem KF0GW-SM-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SAGCY_NM
DataItem KF0GW-SM-SAGCY-NM char(30)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// rep id
DataItem KF0GW-SM-SREP-ID num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// SM_SREP_PSTN_DESC
DataItem KF0GW-SM-SREP-PSTN-DESC char(24)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// SM_SREP_PSTN_ID
DataItem KF0GW-SM-SREP-PSTN-ID char(10)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// percent edit field
DataItem KF0GW-TOT-PCT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// override rate work field
DataItem KF0GW-TRGT-COMM-AMT bin(18,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// commission percent
DataItem KF0GW-TRGT-COMM-PCT decimal(5,4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// formula updated indicator
DataItem KF0GW-UPDATE-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0GW-XDT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0GW-XDT-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xxx-frst-nm
DataItem KF0GW-XXX-FRST-NM char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// xxx-last-nm
DataItem KF0GW-XXX-LAST-NM char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dcomm.vfrmla01 group level
DataItem VCOFRM01-GROUP char(67)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

