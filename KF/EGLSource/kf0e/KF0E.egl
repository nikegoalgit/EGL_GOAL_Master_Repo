package kf0e;

import corpcom4.XSENTRY;
import corpcom4.XSEXIT;
import corpcom4.XSKFS-CHK-SECURITY;
import corpcom4.XSPF1;
import corpcom4.XSPF4;
import corpcom4.XSSEGTR;
import corpcom5.CO-ADJ-MGR-SLS-FL;
import corpcom5.CO-COMNT-ID;
import corpcom5.CO-CUST-SLS-ADJAMT;
import corpcom5.CO-LST-RALGN-DT;
import corpcom5.CO-MGMT-SAGCY-ID;
import corpcom5.CO-MGMT-SREP-ID;
import corpcom5.CO-PFRM-SAGCY-ID;
import corpcom5.CO-PFRM-SREP-ID;
import corpcom5.CO-SLS-ADJ-EDT;
import corpcom5.CO-SLS-ADJ-XDT;
import corpcom5.COMMAREA;
import corpcom5.CU-CO-ID;
import corpcom5.ERRSQLCA;
import corpcom6.SQLCA;
import corpcom7.XXX-USER-ID;
import corpx1.XSETBL;
import corpx2.XSE-SESN-CD;
import corpx2.XXX-STAT;
import corpy2.YNS-BUS-FUNC-ID;
import corpy2.YNS-SESN-YR;
import corpy2.YNSTBL;
import corpy2.YSB-SLS-RESP-CD;
import corpy2.YSBTBL;
import corpz3.ZZ-CHNG-CNT;
import corpz3.ZZ-CHNG-DT;
import corpz3.ZZ-CHNG-HHMM;
import corpz3.ZZ-SDT;
import kf.common.*;
import ku.common.KUCREC;
import ku.common.KUJREC;
import ku.common.KUMREC;
import sm.common.SM1REC;
import sm.common.SM4REC;
import ta.common.TA1REC;
import ta.common.TA2REC;
import ta.common.TA5REC;
import ta.common.TAEREC;
import vv.common.VFRMLA01;
import vv.common.VKOAUD01;
import vv.common.VKOCTL01;
import vv.common.VRAGCY02;
import vv.common.VSNADJ01;
//*** PROGRAM=KF0E ****
// KF0E is an inquiry / update screen that will display
// seasonal sales adjustments for a given cust/store/dept/resp
// code.  Authorized userid's can view sales adjustments, add
// new adjustments, or change existing adjustments.  Client
// access may also be restricted by the management view (cur-
// rent) agency/rep.
// 
// KF0E includes two screens: The first will be used to input,
// update and view the adjustment detail; the second is used to
// input, update and view comments.  A pop-up screen listing
// valid seasons is also provided.
// 
// This screen can be reached by selecting option 4, "Seasonal
// Adjustment Detail" from the commissions rate forecasting
// main menu (KF0A).
// 
// MAINTENANCE HISTORY
// 
// Log #    Date     Name   Description
// -----  --------  ------  -----------------------------------
//   001  01/30/93  RCORON  Created application
//   002  03/16/93  RCORON  fixed the formula record split bug:
//                          to get one day before if passed dt
//                          to the update formula routine is
//                          an eff dt; and to get one day after
//                          if passed date to the update formu-
//                          la routine is an expire date.
// 
//   003  04/13/93  jbecke  fixed the formula update bug:
//                          always use the day after the expire
//                          date as the start date for formula
//                          splits and for updating formulas
//                          past the adjustment expire date.
// 
//   000  09/13/93  ischmi  Changed proc1-fastpath process to
//                          move kfwrec.kfwgroup to commarea.
//                          causera when commarea.catosys eq
//                          commarea.cacursys.
//                          Changed call to IO5610 to come from
//                          a 4 byte record instead of a
//                          literal, which will prevent over-
//                          of storage in subsequent calls to
//                          other subroutines.
// *********************
Program KF0E type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "KF00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  KF0EW01 KF0EW01; // record
  KF0EW02 KF0EW02; // record
  KF0EW03 KF0EW03; // record
  KF0EW04 KF0EW04; // record
  KF0EW05 KF0EW05; // record
  KF0EW06 KF0EW06; // record
  KF0EW07 KF0EW07; // record
  KF0EW08 KF0EW08; // record
  KF0EW09 KF0EW09; // record
  KFWREC KFWREC; // record
  KUCREC KUCREC; // record
  KUJREC KUJREC; // record
  KUMREC KUMREC; // record
  SM1REC SM1REC; // record
  SM4REC SM4REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA5REC TA5REC; // record
  TAEREC TAEREC; // record
  VFRMLA01 VFRMLA01; // record
  VKOAUD01 VKOAUD01; // record
  VKOCOM01 VKOCOM01; // record
  VKOCTL01 VKOCTL01; // record
  VRAGCY02 VRAGCY02; // record
  VSNADJ01 VSNADJ01; // record
  XX0XW04 XX0XW04; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use YNSTBL; // table
  use XSETBL; // table
  use YSBTBL; // table
  use KFATBL; // table
  use KF0EM.KF0EM001,
      KF0EM.KF0EM002, 
      KF0EM.XX0XM004
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    KF0E-00000: KF0E-00000();
    if (KF0EW-ERR-FL == "Y") /* invalid key from KF0F*/
      goto KF0E-20000; /* CONVERSE KF0EM001*/
    else
      goto KF0E-10000; /* INITIALIZE FOR KF0EM001*/
    end
    KF0E-10000: KF0E-10000();
    goto KF0E-20000; /* CONVERSE KF0EM001*/
    KF0E-20000: KF0E-20000();
    if (KF0EW-ERR-FL == "Y") /* prior errors*/
      goto KF0E-20000; /* CONVERSE KF0EM001*/
    end
    ;
    if (converseVar.eventKey is pf17 /* prev or next adjustment rec*/
     || converseVar.eventKey is pf18 
     || converseVar.eventKey is pa2) /* Cancel*/
      goto KF0E-10000; /* INITIALIZE FOR KF0EM001*/
    end
    ;
    if (converseVar.eventKey is pf5) /* goto comments screen*/
      goto KF0E-30000; /* INITIALIZE FOR KF0EM002*/
    end
                                     /* no errors and other keys pressed*/
    goto KF0E-20000; /* CONVERSE KF0EM001*/
    ;
    KF0E-30000: KF0E-30000();
    goto KF0E-40000; /* CONVERSE KF0EM002*/
    KF0E-40000: KF0E-40000();
    if (KF0EW-ERR-FL == "Y") /* prior errors*/
      goto KF0E-40000; /* CONVERSE KF0EM002*/
    end
    ;
    if (converseVar.eventKey is pf3  /* exit*/
     || converseVar.eventKey is pf17 /* prior adjustment record*/
     || converseVar.eventKey is pf18) /* next adjustment record*/
      goto KF0E-10000; /* INITIALIZE FOR KF0EM001*/
    end
    ;
    if (converseVar.eventKey is pa2) /* exit*/
      goto KF0E-30000; /* INITIALIZE FOR KF0EM002*/
    end
                                     /* no errors and other keys pressed*/
    goto KF0E-40000; /* CONVERSE KF0EM002*/
    ;
  end // end main
end // end KF0E

// INITIALIZE FOR KF0E
Function KF0E-00000()
  XSENTRY();
  ;
  XSSEGTR();
  ;
     /* first time through, initialize all work areas and map*/
  ;
  set KF0EM001 initial;
  set KF0EM002 initial;
  set XX0XM004 initial;
  set KFWREC empty; /* KF common w/s record*/
  set KF0EW01 empty; /* KF0E main work area*/
  set KF0EW02 empty; /* KF0EM001 curr header save area*/
  set KF0EW03 empty; /* KF0EM001 prev header save area*/
  set KF0EW04 empty; /* KF0EM001 curr detail save area*/
  set KF0EW05 empty; /* KF0EM001 prev detail save area*/
  set KF0EW06 empty; /* KF0EM002 curr comments save area*/
  set KF0EW07 empty; /* KF0EM002 curr comments save area*/
  set KF0EW08 empty; /* KF0E work area for literals*/
  set KF0EW09 empty; /* KF0E work area for IO5610 call parms*/
  converseVar.commitOnConverse = 1; /* commit on converse*/
  ;
  KF0EW01.KF0EW-VSNADJ01-LENGTH = 068;
  KF0EW01.KF0EW-VFRMLA01-LENGTH = 066;
  KF0EW01.KF0EW-VKOCOM01-LENGTH = 088;
  ;
  if (COMMAREA.CAFRMSYS == COMMAREA.CACURSYS) /* transfer within system*/
    KFWREC.KFW-GROUP = COMMAREA.CAUSERA; /* common w/s record*/
    if (KFWREC.KFW-MSGNO != 0) /* check if msg returned*/
      if (KFWREC.KFW-MSGNO == 9999)
        converseLib.validationFailed();
      else
        converseLib.validationFailed(KFWREC.KFW-MSGNO);
      end
      KFWREC.KFW-MSGNO = 0;
    end
    if (KFWREC.KFW-POPUP-IND == "Y") /* came from KF0F w/ selections*/
      KFWREC.KFW-POPUP-IND = "N"; /* reset KF0F flag*/
      KF0ES-COUNT-ADJ(); /* count adjustments passed*/
      if (KF0EW-ADJ-HELD-CNT == 0) /* nothing was returned*/
        KF0ES-BLD-ERR-MSG(); /* build security error msg*/
        KF0EW-ERR-FL = "Y"; /* error was encountered*/
        KF0ES-KFW-KEY-MAP1(); /* move invalid key to map*/
        KF0ES-MAP1-TO-CHDR();
        KF0ES-RESET-MAP1(); /* reset map*/
      else /* some adjs were returned*/
        KF0EW-ADJ-PTR = 1; /* set adj pointer to 1*/
      end
    end
  end
  ;
  COMMAREA.CAUSERA = " ";
end // end KF0E-00000

// INITIALIZE FOR KF0EM001
Function KF0E-10000()
  ;
     /* Initialize for KF0EM001*/
  ;
  set KF0EM001 initial;
  ;
  if (KF0EW-ADJ-HELD-CNT > 0) /* adj recs passed from KF0F*/
    KF0ES-PICK-ADJ-KEY(); /* move sel adj to prev hdr*/
  end
  ;
  KF0ES-PHDR-TO-MAP1(); /* move prev hdr to map*/
  KF0ES-MAP1-TO-CHDR(); /* move map to curr hdr*/
  ;
  if (KF0EW02.XSE-SESN-CD != " " /* hdr has a value*/
   || KF0EW02.YNS-SESN-YR != 0   
   || KF0EW02.CU-CO-ID != 0      
   || KF0EW02.KF0EW-CU-STOR-ID != " "
   || KF0EW02.KF0EW-XNX-DEPT-ID-XREF != " ")
    KF0ES-GET-ADJ(); /* get seasonal adjustment*/
  end
  ;
  KF0ES-RESET-MAP1(); /* reset KF0EM001 attrib*/
  ;
end // end KF0E-10000

// CONVERSE KF0EM001
Function KF0E-20000()
   /*  */
   /* CONVERSE KF0EM001 MAP*/
   /*  */
  ;
  KF0EM001.KF0EM-DATE = VGVar.currentShortGregorianDate;
  ;
  converse KF0EM001 ;
  ;
  KF0ES-RESET-MAP1(); /* reset map attributes*/
  KF0EW-ERR-FL = "N"; /* reset error flag*/
  KF0EW-DUPKEY-PRESSED-FL = "N"; /* reset dup key flag*/
  ;
  KF0ES-MAP1-TO-CHDR(); /* move header fields to workarea*/
  ;
  KF0ES-MAP1-TO-CDTL(); /* move detail fields to workarea*/
  ;
  ;
  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    KF0ES-PROC1-ENTER();
  else
    if (converseVar.eventKey is pf12 /* EDIT-ONLY key was pressed and allowed*/
     && KF0EW-PROTECT-ATTR-FL == "N")
      KF0ES-PROC1-ENTER();
    else
      if (converseVar.eventKey is pf16 /* DUPLICATE adjustment key pressed*/
       && COMMAREA.CAADDFL == "Y")     /* allowed to add*/
        KF0EW-DUPKEY-PRESSED-FL = "Y";
        KF0EW-ADJ-HELD-CNT = 0;
        set KF0EW03 empty;
        set KF0EW05 empty;
        KF0ES-PROC1-ENTER();
      else
        if (converseVar.eventKey is pa2) /* CANCEL key was pressed*/
          KF0ES-PROC1-PA2();
        else
          if (converseVar.eventKey is pf14) /* POP-UP key for Season code/yr*/
            KF0ES-POPUP-SEASON();
          else
            if (converseVar.eventKey is pf1 /* Other valid PFkeys pressed*/
             || converseVar.eventKey is pf3 
             || converseVar.eventKey is pf4)
              KF0ES-PROC1-PFKEYS();
            else
              if (converseVar.eventKey is pf5 /* Go to COMMENTS screen key was pressed*/
               && KF0EW03.CU-CO-ID != 0)      /* and is valid because there is an Adj*/
                KF0ES-PROC1-PFKEYS();
              else
                if (converseVar.eventKey is pf9 /* RE-ACTIVATE Adj key was pressed and*/
                 && KF0EW05.XXX-STAT == "I")    /* is valid because Adj is inactive*/
                  KF0ES-PROC1-PFKEYS();
                else
                  if (converseVar.eventKey is pf17 /* PREV Adj key was pressed and several*/
                   && KF0EW-ADJ-HELD-CNT > 1)      /* sel Adj recs were passed from KF0F*/
                    KF0ES-PROC1-PFKEYS();
                  else
                    if (converseVar.eventKey is pf18 /* NEXT Adj key was pressed and several*/
                     && KF0EW-ADJ-HELD-CNT > 1)      /* sel Adj recs were passed from KF0F*/
                      KF0ES-PROC1-PFKEYS();
                    else
                      converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
                      KF0EW-ERR-FL = "Y"; /* error*/
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
  ;
  ;
end // end KF0E-20000

// INITIALIZE FOR KF0EM002
Function KF0E-30000()
  ;
     /* Initialize for KF0EM002*/
  ;
  set KF0EM002 initial;
  ;
  set KF0EW06 empty; /* curr comment save area*/
  set KF0EW07 empty; /* prev comment save area & TSQ parm*/
  set TA5REC empty; /* TSQ parm*/
  ;
  KF0EW01.KF0EW-TSQ-APPL = "KF0E";
  KF0EW01.KF0EW-TSQ-LEN = 576;
  KF0EW01.KF0EW-SAVE-CO-COMNT-ID = 0;
  ;
  KF0EW01.KF0EW-CMT-MAX-PG = 0;
  KF0EW01.KF0EW-CMT-CURR-PG = 0;
  KF0EW01.KF0EW-CMT-PTR = 0;
  KF0EW01.KF0EW-CMT-HIGHEST-SEQ = 0;
  ;
  ;
  KF0ES-PHDR-TO-MAP2(); /* move prev Adj hdr to map2*/
  ;
  KF0ES-DSC1-TO-DSC2(); /* move map1 hdr desc to map2*/
  ;
  KF0ES-RESET-MAP2(); /* reset KF0EM002 attrib*/
  ;
  if (VSNADJ01.CO-COMNT-ID != 0) /* adjustment has comments*/
    KF0ES-BLD-TSQ-CMT(); /* build temp sto for comments*/
    ;
    if (KF0EW-ERR-FL != "Y" /* no errors building TSQ*/
     && KF0EW-CMT-MAX-PG > 0) /* and there exist TSQ pages*/
      KF0EW-CMT-CURR-PG = 1; /* set curr page to 1*/
      KF0ES-LD-MAP2-CHG(); /* load KF0EM002 for updates/inquiry*/
      ;
    end
  end
  ;
end // end KF0E-30000

// CONVERSE KF0EM002
Function KF0E-40000()
   /*  */
   /* CONVERSE KF0EM002 MAP*/
   /*  */
  ;
  KF0EM002.KF0EM-DATE = VGVar.currentShortGregorianDate;
  ;
  converse KF0EM002 ;
  ;
  KF0ES-RESET-MAP2(); /* reset map attributes*/
  KF0EW-ERR-FL = "N"; /* reset error flag*/
  ;
  KF0ES-MAP2-TO-CDTL(); /* move detail fields to workarea*/
  ;
  ;
  if (converseVar.eventKey is enter) /* ENTER was pressed*/
    KF0ES-PROC2-ENTER();
  else
    if (converseVar.eventKey is pf12 /* EDIT-ONLY key was pressed and allowed*/
     && KF0EW-PROTECT-ATTR-FL == "N")
      KF0ES-PROC2-ENTER();
    else
      if (converseVar.eventKey is pa2) /* CANCEL key was pressed*/
        KF0ES-PROC2-PA2();
      else
        if (converseVar.eventKey is pf1 /* Other valid PFkeys pressed*/
         || converseVar.eventKey is pf3 
         || converseVar.eventKey is pf4 
         || converseVar.eventKey is pf7 
         || converseVar.eventKey is pf8)
          KF0ES-PROC2-PFKEYS();
        else
          if (converseVar.eventKey is pf17 /* PREV Adj key was pressed and several*/
           && KF0EW-ADJ-HELD-CNT > 1)      /* sel Adj recs were passed from KF0F*/
            KF0ES-PROC2-PFKEYS();
          else
            if (converseVar.eventKey is pf18 /* NEXT Adj key was pressed and several*/
             && KF0EW-ADJ-HELD-CNT > 1)      /* sel Adj recs were passed from KF0F*/
              KF0ES-PROC2-PFKEYS();
            else
              converseLib.validationFailed(0002); /* Invalid PF/PA key pressed*/
              KF0EW-ERR-FL = "Y"; /* error*/
            end
          end
        end
      end
    end
  end
  ;
  ;
end // end KF0E-40000

// Add TSQ page
Function KF0ES-ADD-TSQ()
   /* **********************************************************************/
   /* Add temp storage*/
   /* **********************************************************************/
  ;
  set TA5REC empty;
  if (KF0EW-CMT-MAX-PG == 0)
    TA5REC.TA5FNCCD = "N"; /* purge TSQ and add page*/
  else
    TA5REC.TA5FNCCD = "A"; /* add page*/
  end
  TA5REC.TA5APPID = KF0EW-TSQ-APPL; /* application ID*/
  KF0EW07.KF0EW-COMMENT-PAGE-LENGTH = KF0EW-TSQ-LEN;
                                           /* temp storage length*/
  ;
  try
    call "TA0050" (KF0EW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage routine*/
  ;
  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
    KF0EW-CMT-MAX-PG = TA5REC.TA5TSQIX; /* save max page count*/
    KF0EW-CMT-CURR-PG = TA5REC.TA5TSQIX; /* save cur page count*/
    KF0EW-CMT-PTR = 0; /* reset map line ptr*/
    set KF0EW07 empty; /* reset temp sto rec area*/
  else /* an error occurred*/
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post*/
    TA1REC.TA1LOCAT[1] = "ADD TS  "; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass control to menu*/
    converseLib.validationFailed(34); /* temp storage error*/
    ;
  end
  ;
end // end KF0ES-ADD-TSQ

// Call IO3950 add vfrmla01
Function KF0ES-ADD-VFRMLA()
   /* **********************************************************************/
   /* KF0ES-ADD-VFRMLA*/
   /* This routine calls IO3950 to insert a Formula row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3950" ("A ", SQLCA, VFRMLA01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != -803) /* not record already exists*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VFRMLA01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3950"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-ADD-VFRMLA

// Call IO3940 add vkoaud01
Function KF0ES-ADD-VKOAUD()
   /* **********************************************************************/
   /* KF0ES-ADD-VKOAUD*/
   /* This routine calls IO3940 to insert a KO audit record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3940" ("A ", SQLCA, VKOAUD01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOAUD01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3940"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-ADD-VKOAUD

// Call IO2480 add vkocom01
Function KF0ES-ADD-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-ADD-VKOCOM*/
   /* This routine calls IO2480 to insert an adjustment comment row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("A ", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != -803) /* not record already exists*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-ADD-VKOCOM

// Call IO5610 add vsnadj01
Function KF0ES-ADD-VSNADJ()
   /* **********************************************************************/
   /* KF0ES-ADD-VSNADj*/
   /* This routine calls IO5610 to insert a seasonal sales adjustment row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  KF0EW09.KF0EW-IO-TASK = "A "; /* set up call parms*/
  KF0EW09.KF0EW-IO-IND1 = 0;
  call "IO5610" (KF0EW09, SQLCA, VSNADJ01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != -803) /* not record already exists*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VSNADJ01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "A       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO5610"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-ADD-VSNADJ

// Move VSNADJ01 to PREV-DTL
Function KF0ES-ADJ-TO-PDTL()
   /* **********************************************************************/
   /* move VSNADJ01 to PREV-DTL*/
   /* **********************************************************************/
  ;
  KF0EW05.CO-MGMT-SAGCY-ID = VSNADJ01.CO-MGMT-SAGCY-ID;
  KF0EW05.CO-MGMT-SREP-ID = VSNADJ01.CO-MGMT-SREP-ID;
  KF0EW05.CO-CUST-SLS-ADJAMT = VSNADJ01.CO-CUST-SLS-ADJAMT;
  KF0EW05.XXX-STAT = VSNADJ01.XXX-STAT;
  KF0EW05.CO-ADJ-MGR-SLS-FL = VSNADJ01.CO-ADJ-MGR-SLS-FL;
  KF0EW05.CO-SLS-ADJ-EDT = VSNADJ01.CO-SLS-ADJ-EDT;
  KF0EW05.CO-SLS-ADJ-XDT = VSNADJ01.CO-SLS-ADJ-XDT;
  KF0EW05.KF0EW-CO-SLS-ADJ-EDT = " ";
  KF0EW05.KF0EW-CO-SLS-ADJ-XDT = " ";
  ;
   /* reformat edt & xdt to mm-dd-yy format from ccyymmdd*/
  ;
  if (KF0EW05.CO-SLS-ADJ-EDT > 0)
    KF0EW01.KF0EW-EDIT-CCYYMMDD = KF0EW05.CO-SLS-ADJ-EDT;
    KF0EW01.KF0EW-EDIT-MMDDYY-MONTH = KF0EW01.KF0EW-EDIT-CCYYMMDD-MONTH;
    KF0EW01.KF0EW-EDIT-MMDDYY-DASH1 = "-";
    KF0EW01.KF0EW-EDIT-MMDDYY-DAY = KF0EW01.KF0EW-EDIT-CCYYMMDD-DAY;
    KF0EW01.KF0EW-EDIT-MMDDYY-DASH2 = "-";
    KF0EW01.KF0EW-EDIT-MMDDYY-YEAR = KF0EW01.KF0EW-EDIT-CCYYMMDD-YEAR;
    KF0EW05.KF0EW-CO-SLS-ADJ-EDT = KF0EW01.KF0EW-EDIT-MMDDYY-DISPLAY;
  end
  ;
  if (KF0EW05.CO-SLS-ADJ-XDT > 0
   && KF0EW05.CO-SLS-ADJ-XDT < 999999999)
    KF0EW01.KF0EW-EDIT-CCYYMMDD = KF0EW05.CO-SLS-ADJ-XDT;
    KF0EW01.KF0EW-EDIT-MMDDYY-MONTH = KF0EW01.KF0EW-EDIT-CCYYMMDD-MONTH;
    KF0EW01.KF0EW-EDIT-MMDDYY-DASH1 = "-";
    KF0EW01.KF0EW-EDIT-MMDDYY-DAY = KF0EW01.KF0EW-EDIT-CCYYMMDD-DAY;
    KF0EW01.KF0EW-EDIT-MMDDYY-DASH2 = "-";
    KF0EW01.KF0EW-EDIT-MMDDYY-YEAR = KF0EW01.KF0EW-EDIT-CCYYMMDD-YEAR;
    KF0EW05.KF0EW-CO-SLS-ADJ-XDT = KF0EW01.KF0EW-EDIT-MMDDYY-DISPLAY;
  end
  ;
   /* **********************************************************************/
   /* save read-only fields from VSNADJ01 to PREV-DTL*/
   /* **********************************************************************/
  ;
  KF0EW05.CO-PFRM-SAGCY-ID = VSNADJ01.CO-PFRM-SAGCY-ID;
  KF0EW05.CO-PFRM-SREP-ID = VSNADJ01.CO-PFRM-SREP-ID;
  KF0EW05.ZZ-SDT = VSNADJ01.ZZ-SDT;
  KF0EW05.ZZ-CHNG-DT = VSNADJ01.ZZ-CHNG-DT;
  KF0EW05.CO-LST-RALGN-DT = VSNADJ01.CO-LST-RALGN-DT;
  ;
end // end KF0ES-ADJ-TO-PDTL

// Build agcy/rep security msg
Function KF0ES-BLD-ERR-MSG()
   /* **********************************************************************/
   /* this module will build the appropriate message when the security*/
   /* check for the userid vs rep/agency fails.*/
   /* **********************************************************************/
  ;
  if (KFW-SCRTY-LVL-CD == "0") /* no access*/
    return;
  end
  ;
  converseLib.validationFailed(0); /* reset error message*/
  if (KFW-SCRTY-LVL-CD == "1") /* all agencies, all reps*/
    KF0EM001.VAGen_EZEMSG = "NO ADJUSTMENTS FOUND FOR THIS KEY";
    return;
  end
  ;
  if (KFW-SCRTY-LVL-CD == "2") /* one agency, all reps*/
    KF0EW01.KF0EW-MSG2-LIT = "NO ADJUSTMENTS FOUND FOR THIS KEY FOR AGENCY";
    KF0EW01.KF0EW-MSG2-AGENCY = KFW-USER-SM-SAGCY-ID;
    KF0EM001.VAGen_EZEMSG = KF0EW01.KF0EW-MSG2;
    return;
  end
  ;
  if (KFW-SCRTY-LVL-CD == "3") /* all agencies, one rep*/
    KF0EW01.KF0EW-MSG3-LIT = "NO ADJUSTMENTS FOUND FOR THIS KEY FOR REP";
    KF0EW01.KF0EW-MSG3-REP = KFW-USER-SM-SREP-ID;
    KF0EM001.VAGen_EZEMSG = KF0EW01.KF0EW-MSG3;
    return;
  end
  ;
  if (KFW-SCRTY-LVL-CD == "4") /* one agency, one rep*/
    KF0EW01.KF0EW-MSG4-LIT1 = "NO ADJUSTMENTS FOUND FOR THIS KEY FOR AGENCY";
    KF0EW01.KF0EW-MSG4-LIT2 = "AND REP";
    KF0EW01.KF0EW-MSG4-AGENCY = KFW-USER-SM-SAGCY-ID;
    KF0EW01.KF0EW-MSG4-REP = KFW-USER-SM-SREP-ID;
    KF0EM001.VAGen_EZEMSG = KF0EW01.KF0EW-MSG4;
  end
  ;
end // end KF0ES-BLD-ERR-MSG

// Build Temp Storage comments
Function KF0ES-BLD-TSQ-CMT()
   /* **********************************************************************/
   /* Build Temp Storage pages for adjustment comments*/
   /* **********************************************************************/
  ;
  KF0EW-CMT-HIGHEST-SEQ = 0; /* last seq used*/
  KF0EW-CMT-PTR = 0; /* map line pointer*/
  KF0EW-CMT-CURR-PG = 0; /* current TSQ page pointer*/
  KF0EW-CMT-MAX-PG = 0; /* TSQ page count*/
  KF0EW-MORE-VKOCOM01-FL = "Y";
  ;
  set VKOCOM01 empty;
  VKOCOM01.CO-COMNT-ID = VSNADJ01.CO-COMNT-ID;
  ;
  KF0ES-OPEN-VKOCOM(); /* open comments cursor*/
  ;
  while (KF0EW-MORE-VKOCOM01-FL == "Y" /* while more comments*/
   && KF0EW-ERR-FL != "Y") /* and no errors*/
    ;
    KF0ES-SCAN-VKOCOM(); /* fetch comment row*/
    ;
    if (KF0EW-MORE-VKOCOM01-FL == "Y" /* comment row found*/
     && KF0EW-ERR-FL != "Y")          /* and no errors*/
      ;
      KF0EW-CMT-PTR = KF0EW-CMT-PTR + 1; /* increment line ptr*/
      KF0EW07.CO-COMNT[KF0EW-CMT-PTR] = VKOCOM01.CO-COMNT;
      KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR] = VKOCOM01.CO-COMNT-SEQ-NBR;
      KF0EW07.ZZ-CHNG-CNT[KF0EW-CMT-PTR] = VKOCOM01.ZZ-CHNG-CNT;
      KF0EW-CMT-HIGHEST-SEQ = VKOCOM01.CO-COMNT-SEQ-NBR;
      ;
      if (KF0EW-CMT-PTR == 9) /* page is full*/
        KF0ES-ADD-TSQ(); /* add page to temp storage*/
      end
      ;
    else
      if (KF0EW-MORE-VKOCOM01-FL == "N") /* end of comment cursor*/
        KF0ES-CLOS-VKOCOM(); /* close comment csr*/
        ;
        if (KF0EW-ERR-FL != "Y") /* no errors*/
          if (KF0EW-CMT-PTR > 0) /* partial page filled*/
            KF0ES-ADD-TSQ(); /* add page to temp storage*/
          end
        end
        ;
      end
    end /* END comment found OR no more comments*/
    ;
  end /* END-WHILE*/
  ;
end // end KF0ES-BLD-TSQ-CMT

// Chk edt & xdt vs sesn range
Function KF0ES-CHK-SESN-RNG()
   /* **********************************************************************/
   /* Check effective and expire dates against the season table*/
   /* **********************************************************************/
  ;
   /* season was searched earlier and not found, do not check again*/
  ;
  if (KF0EW-NXT-YNS-MISSING-FL == "Y")
    return;
  end
  ;
  KF0EW01.KF0EW-YNSTBL-XSE-SESN-CD = KF0EW03.XSE-SESN-CD;
  KF0EW01.KF0EW-YNSTBL-YNS-SESN-YR = KF0EW03.YNS-SESN-YR;
  KF0EW01.KF0EW-YNSTBL-YNS-BUS-FUNC-ID = "COM";
  ;
    /* Find season record for season code on the map*/
  ;
  if (KF0EW01.KF0EW-YNSTBL-YNS-RECORD-KEY in YNSTBL.YNS-RECORD-KEY)
    KF0EW-PTR = sysVar.arrayIndex;
  else
    KF0EW-NXT-YNS-MISSING-FL = "Y";
    KF0EW-DT-CHK-WARN-DISPLAYED-FL = "N";
    return;
  end
  ;
    /* Skip to the next season record in the YNS table to get the SESN BDT*/
  ;
  KF0EW-PTR = KF0EW-PTR + 1;
  ;
  if (YNSTBL.XXX-STAT[KF0EW-PTR] == "A"
   && YNSTBL.YNS-BUS-FUNC-ID[KF0EW-PTR] == "COM")
  else
    KF0EW-NXT-YNS-MISSING-FL = "Y";
    KF0EW-DT-CHK-WARN-DISPLAYED-FL = "N";
    return;
  end
  ;
    /* Check effective and expire dates if after the YNS season begin date*/
  ;
  if (KF0EW04.CO-SLS-ADJ-EDT > 0)
    if (KF0EW04.CO-SLS-ADJ-EDT < YNSTBL.YNS-SESN-BDT[KF0EW-PTR])
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0064); /* Edt cannot be outside of the Adj season*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-EDT cursor, bold;
      return;
    end
  end
  if (KF0EW04.CO-SLS-ADJ-XDT < 999999999)
    if (KF0EW04.CO-SLS-ADJ-XDT < YNSTBL.YNS-SESN-BDT[KF0EW-PTR])
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0071); /* Xdt cannot be outside of the Adj season*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-XDT cursor, bold;
      return;
    end
  end
  ;
    /* Skip to the next season record in the YNS table to get the SESN XDT*/
  ;
  KF0EW-PTR = KF0EW-PTR + 1;
  ;
  if (YNSTBL.XXX-STAT[KF0EW-PTR] == "A"
   && YNSTBL.YNS-BUS-FUNC-ID[KF0EW-PTR] == "COM")
  else
    KF0EW-NXT-YNS-MISSING-FL = "Y";
    KF0EW-DT-CHK-WARN-DISPLAYED-FL = "N";
    return;
  end
  ;
    /* Check effective and expire dates if before the YNS season expire dt*/
  ;
  if (KF0EW04.CO-SLS-ADJ-EDT > 0)
    if (KF0EW04.CO-SLS-ADJ-EDT > YNSTBL.YNS-SESN-XDT[KF0EW-PTR])
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0064); /* Edt cannot be outside of the Adj season*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-EDT cursor, bold;
      return;
    end
  end
  if (KF0EW04.CO-SLS-ADJ-XDT < 999999999)
    if (KF0EW04.CO-SLS-ADJ-XDT > YNSTBL.YNS-SESN-XDT[KF0EW-PTR])
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0071); /* Xdt cannot be outside of the Adj season*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-XDT cursor, bold;
      return;
    end
  end
  ;
end // end KF0ES-CHK-SESN-RNG

// Call IO3950 close vfrmla01 csr
Function KF0ES-CLOS-VFRMLA()
   /* **********************************************************************/
   /* KF0ES-CLOS-VFRMLA*/
   /* This routine calls IO3950 to close a Formula cursor*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3950" ("C2", SQLCA, VFRMLA01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VFRMLA01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "C2      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3950"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-CLOS-VFRMLA

// Call IO2480 close vkocom01 csr
Function KF0ES-CLOS-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-CLOS-VKOCOM*/
   /* This routine calls IO2480 to close a Comment cursor*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("C1", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "C1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-CLOS-VKOCOM

// Clear KF0EM001 disp-only dtl
Function KF0ES-CLR-DT1-DESC()
   /* **********************************************************************/
   /* Clear KF0EM001 detail descriptions*/
   /* **********************************************************************/
  ;
  KF0EM001.KF0EM-MGMT-SAGCY-NM = " ";
  KF0EM001.KF0EM-MGMT-XXX-LAST-NM = " ";
  KF0EM001.KF0EM-MGMT-XXX-FRST-NM = " ";
  KF0EM001.KF0EM-MGMT-XXX-MID-INIT = " ";
  KF0EM001.KF0EM-PERF-SAGCY-NM = " ";
  KF0EM001.KF0EM-PERF-XXX-LAST-NM = " ";
  KF0EM001.KF0EM-PERF-XXX-FRST-NM = " ";
  KF0EM001.KF0EM-PERF-XXX-MID-INIT = " ";
  KF0EM001.KF0EM-STATUS-DESCRIPTION = " ";
  KF0EM001.KF0EM-MANAGER-ADJUST-DESC = " ";
  ;
end // end KF0ES-CLR-DT1-DESC

// Compress comment lines fr map
Function KF0ES-COMPRESS-CMT()
   /* **********************************************************************/
   /* Compress comment lines*/
   /* **********************************************************************/
  ;
  KF0EW-CMT-PTR = 0;
  KF0EW-PTR = 0;
  ;
  while (KF0EW-CMT-PTR < 9) /* for all lines*/
    KF0EW-CMT-PTR = KF0EW-CMT-PTR + 1;
    ;
    if (KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR] == 0) /* never used*/
      KF0EW-PTR = KF0EW-CMT-PTR + 1; /* set second pointer*/
      ;
      while (KF0EW-PTR <= 9) /* search next filled seq*/
        if (KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-PTR] != 0)
          KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR] = KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-PTR];
          KF0EW07.CO-COMNT[KF0EW-CMT-PTR] = KF0EW07.CO-COMNT[KF0EW-PTR];
          KF0EW07.ZZ-CHNG-CNT[KF0EW-CMT-PTR] = KF0EW07.ZZ-CHNG-CNT[KF0EW-PTR];
          KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-PTR] = 0;
          KF0EW07.CO-COMNT[KF0EW-PTR] = " ";
          KF0EW07.ZZ-CHNG-CNT[KF0EW-PTR] = 0;
          KF0EW-PTR = 10;
        end
        KF0EW-PTR = KF0EW-PTR + 1; /* set second pointer*/
      end
      ;
    end
    ;
  end
  ;
  ;
end // end KF0ES-COMPRESS-CMT

// Count Adj recs passed by KF0F
Function KF0ES-COUNT-ADJ()
   /* this module will determine the number of passed seasonal sales*/
   /* adjustment records from KF0F.*/
  ;
  sysVar.arrayIndex = 0;
  if (0 in KFWREC.CU-CO-ID)
    KF0EW-ADJ-HELD-CNT = sysVar.arrayIndex - 1; /* contains the pos of last row used*/
  else
    KF0EW-ADJ-HELD-CNT = 25; /* table was completely filled*/
  end
  ;
end // end KF0ES-COUNT-ADJ

// Call IO2480 dele vkocom01
Function KF0ES-DELE-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-DELE-VKOCOM*/
   /* This routine calls IO2480 to delete an adjustment comment row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("D ", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "D       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-DELE-VKOCOM

// Move map1 hdr desc to map2
Function KF0ES-DSC1-TO-DSC2()
   /* **********************************************************************/
   /* move KF0EM001 header descriptions to KF0EM002*/
   /* **********************************************************************/
  ;
  KF0EM002.KF0EM-CU-CO-NM = KF0EM001.KF0EM-CU-CO-NM;
  KF0EM002.KF0EM-CU-STOR-NM = KF0EM001.KF0EM-CU-STOR-NM;
  KF0EM002.KF0EM-XNX-DEPT-XREF-DESC = KF0EM001.KF0EM-XNX-DEPT-XREF-DESC;
  KF0EM002.KF0EM-YSB-SLS-RESP-DESC = KF0EM001.KF0EM-YSB-SLS-RESP-DESC;
  ;
end // end KF0ES-DSC1-TO-DSC2

// Edit Adjustment eff dt
Function KF0ES-EDIT-ADJ-EDT()
   /* **********************************************************************/
   /* Edit Adjustment Effective date*/
   /* **********************************************************************/
  ;
   /* Validate adjustment effective date format*/
  ;
  KF0EW04.CO-SLS-ADJ-EDT = 0;
  ;
  if (KF0EW04.KF0EW-CO-SLS-ADJ-EDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    KF0EW01.KF0EW-WORK-CHAR-DATE = KF0EW04.KF0EW-CO-SLS-ADJ-EDT;
    KF0ES-VAL-DT-FMT(); /* validate date format*/
    if (KF0EW-ERR-FL == "Y")
      return;
    end
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      KF0EW04.CO-SLS-ADJ-EDT = TA2REC.TA2GRGGN;
      KF0EW04.KF0EW-CO-SLS-ADJ-EDT = TA2REC.TA2GRGB;
      KF0EM001.KF0EM-CO-SLS-ADJ-EDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0024); /* invalid eff date*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-EDT cursor, bold;
      return;
    end
  end
  ;
   /* Effective date must not be after last day of this month*/
  ;
  KF0ES-GET-TM-STAMP(); /* get current date*/
  if (KF0EW-ERR-FL == "Y")
    return;
  end
  KF0ES-GET-LAST-DAY(); /* get last day of month*/
  if (KF0EW-ERR-FL == "Y")
    return;
  end
  if (KF0EW04.CO-SLS-ADJ-EDT > KF0EW01.KF0EW-LASTDAY-CCYYMMDD)
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0046); /* edt cant be aft lastday*/
    set KF0EM001.KF0EM-CO-SLS-ADJ-EDT cursor, bold;
    return;
  end
  ;
   /* Effective date must not be after expire date*/
  ;
  if (KF0EW04.CO-SLS-ADJ-EDT > KF0EW04.CO-SLS-ADJ-XDT)
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0025); /* eff dt must be bfr exp dt*/
    set KF0EM001.KF0EM-CO-SLS-ADJ-EDT cursor, bold;
    set KF0EM001.KF0EM-CO-SLS-ADJ-XDT bold;
    return;
  end
  ;
   /* Check effective and expire dates against the season table*/
  ;
  if (KF0EW-ERR-FL != "Y")
    if (KF0EW04.CO-SLS-ADJ-EDT > 0
     || KF0EW04.CO-SLS-ADJ-XDT < 999999999)
      KF0ES-CHK-SESN-RNG(); /* chk if within sesn range*/
    end
  end
  ;
end // end KF0ES-EDIT-ADJ-EDT

// Edit Adjustment exp dt
Function KF0ES-EDIT-ADJ-XDT()
   /* **********************************************************************/
   /* Edit Adjustment Expiration date*/
   /* **********************************************************************/
  ;
   /* Validate date format*/
  ;
  KF0EW04.CO-SLS-ADJ-XDT = 999999999;
  ;
  if (KF0EW04.KF0EW-CO-SLS-ADJ-XDT != " ")
    set TA2REC empty;
    TA2REC.TA2DTOPT = "GREGGREG";
    KF0EW01.KF0EW-WORK-CHAR-DATE = KF0EW04.KF0EW-CO-SLS-ADJ-XDT;
    KF0ES-VAL-DT-FMT(); /* validate date format*/
    if (KF0EW-ERR-FL == "Y")
      return;
    end
    if (TA2REC.TA2RTNCD == 0) /* valid format*/
      KF0EW04.CO-SLS-ADJ-XDT = TA2REC.TA2GRGGN;
      KF0EW04.KF0EW-CO-SLS-ADJ-XDT = TA2REC.TA2GRGB;
      KF0EM001.KF0EM-CO-SLS-ADJ-XDT = TA2REC.TA2GRGB;
    else /* invalid format*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0026); /* invalid exp date*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-XDT cursor, bold;
      return;
    end
  end
  ;
  return;
  ;
end // end KF0ES-EDIT-ADJ-XDT

// Edit Season code and year
Function KF0ES-EDIT-YSN-XSE()
   /* **********************************************************************/
   /* Edit Season code and year*/
   /* **********************************************************************/
  if (KF0EW02.XSE-SESN-CD in XSETBL.XSECD
   && XSETBL.XXXSTAT[sysVar.arrayIndex] == "A")
    ;
  else
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0061); /* Season code is invalid*/
    set KF0EM001.KF0EM-XSE-SESN-CD cursor, bold;
    return;
  end
  ;
  KF0EW01.KF0EW-YNSTBL-XSE-SESN-CD = KF0EW02.XSE-SESN-CD;
  KF0EW01.KF0EW-YNSTBL-YNS-SESN-YR = KF0EW02.YNS-SESN-YR;
  KF0EW01.KF0EW-YNSTBL-YNS-BUS-FUNC-ID = "COM";
  ;
  if (KF0EW01.KF0EW-YNSTBL-YNS-RECORD-KEY in YNSTBL.YNS-RECORD-KEY
   && YNSTBL.XXX-STAT[sysVar.arrayIndex] == "A")
    ;
  else
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0062); /* Season not in commissions rate forecasting*/
    set KF0EM001.KF0EM-XSE-SESN-CD cursor, bold;
    set KF0EM001.KF0EM-YNS-SESN-YR bold;
    return;
  end
  ;
end // end KF0ES-EDIT-YSN-XSE

// Call IO0240 read vcmpny01
Function KF0ES-FIND-VCMPNY()
   /* **********************************************************************/
   /* KF0ES-FIND-VCMPNY*/
   /* This routine calls IO0240 to read a unique company id record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0240" ("S ", SQLCA, KUCREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VCMPNY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0240"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VCMPNY

// Call IO0290 read vdept001
Function KF0ES-FIND-VDEPT0()
   /* **********************************************************************/
   /* KF0ES-FIND-VDEPT0*/
   /* This routine calls IO0290 to read a unique customer deparment id*/
   /* record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0290" ("S ", SQLCA, KUJREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VDEPT001"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0290"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VDEPT0

// Call IO2480 read vkocom01
Function KF0ES-FIND-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-FIND-VKOCOM*/
   /* This routine calls IO2480 to read a unique adjustment comment.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("S ", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VKOCOM

// Call IO3970 read vkoctl01
Function KF0ES-FIND-VKOCTL()
   /* **********************************************************************/
   /* KF0ES-FIND-VKOCTL*/
   /* This routine calls IO3970 to read the next comment id in the control*/
   /* record.*/
  ;
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3970" ("S ", SQLCA, VKOCTL01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCTL01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3970"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VKOCTL

// Call IO0400 read vragcy02
Function KF0ES-FIND-VRAGCY()
   /* **********************************************************************/
   /* KF0ES-FIND-VRAGCY*/
   /* This routine calls IO0400 to read a unique sales rep/agency record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0400" ("S ", SQLCA, VRAGCY02) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VRAGCY02"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0400"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VRAGCY

// Call IO0020 read vresp001
Function KF0ES-FIND-VREPS0()
   /* **********************************************************************/
   /* KF0ES-FIND-VREPS0*/
   /* This routine calls IO0020 to read a unique sales rep id record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0020" ("S ", SQLCA, SM4REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VREPS001"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0020"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VREPS0

// Call IO0050 read vsagcy01
Function KF0ES-FIND-VSAGCY()
   /* **********************************************************************/
   /* KF0ES-FIND-VSAGCY*/
   /* This routine calls IO0050 to read a unique sales agency id record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0050" ("S ", SQLCA, SM1REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DSLSMN  "; /* data base name*/
    TA1REC.TA1TBLVU = "VSAGCY01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0050"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VSAGCY

// Call IO5610 read vsnadj01
Function KF0ES-FIND-VSNADJ()
   /* **********************************************************************/
   /* KF0ES-FIND-VSNADJ*/
   /* This routine calls IO5610 to read a unique seasonal sales adjustment*/
   /* record.  If found, the adjustment found fl is set to 'Y'.*/
  ;
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  KF0EW09.KF0EW-IO-TASK = "S "; /* set up call parms*/
  KF0EW09.KF0EW-IO-IND1 = 0;
  call "IO5610" (KF0EW09, SQLCA, VSNADJ01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
    KF0EW-VSNADJ01-FOUND-FL = "Y";
  else
    KF0EW-VSNADJ01-FOUND-FL = "N";
    if (SQLCA.VAGen_SQLCODE != 100) /* row not found*/
      KF0EW-ERR-FL = "Y";
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VSNADJ01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO5610"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* pass to goal menu*/
      converseLib.validationFailed(0035); /* error -- contact help desk*/
    end
  end
  ;
end // end KF0ES-FIND-VSNADJ

// Call IO0340 read vstore01
Function KF0ES-FIND-VSTORE()
   /* **********************************************************************/
   /* KF0ES-FIND-VSTORE*/
   /* This routine calls IO0340 to read a unique customer store id record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO0340" ("S ", SQLCA, KUMREC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCUST   "; /* data base name*/
    TA1REC.TA1TBLVU = "VSTORE01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO0340"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-FIND-VSTORE

// Get Seasonal Sls Adj Record
Function KF0ES-GET-ADJ()
   /* **********************************************************************/
   /* Get adjustment record*/
   /* This routine reads the vsnadj01 table.  If the adjustment was not*/
   /* found, and the key was entered on the map, then assume ADD process*/
   /* and proceed editing the adjustment key components.  If found, then*/
   /* load on the map and prompt for changes.*/
   /* **********************************************************************/
  ;
   /* reset flags for bypass check date ranges if the next season row*/
   /* from the current entered season cannot be found*/
  KF0EW-NXT-YNS-MISSING-FL = "N";
  KF0EW-DT-CHK-WARN-DISPLAYED-FL = "N";
  ;
  KF0ES-SET-ADJ-KEY(); /* set vsnadj01 key from curr-hdr*/
  ;
  KF0ES-FIND-VSNADJ(); /* call io5610 to read sesn sls adj*/
  ;
  if (KF0EW-ERR-FL == "Y") /* errors found*/
    return;
  end
   /* **********************************************************************/
   /* Adj key was passed from KF0F*/
   /* **********************************************************************/
  if (KF0EW-ADJ-HELD-CNT > 0) /* adj rec was passed from KF0F*/
    if (KF0EW-VSNADJ01-FOUND-FL == "N") /* adj rec not found*/
      KF0ES-HILITE-M1KEY(); /* set key KF0EM001 bright*/
      KF0EW-ERR-FL = "Y";
      set TAEREC empty;
      TAEREC.TAEDESC1 = "SEASONAL SLS ADJ PASSED BY KF0F WAS NOT FOUND.";
      TA1REC.TA1TYPE = "APPL";
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1PGMNM = "KF0E";
      TA1REC.TA1LOC = "KF0ES-GET-ADJ";
      TA1REC.TA1MAP = "KF0EM001";
      try
        call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
      end
      converseLib.validationFailed(0035); /* error -- contact help desk*/
    else /* adj rec was found*/
      KF0ES-LD-MAP1-CHG(); /* load KF0EM001 for inquiry or change*/
    end
   /* **********************************************************************/
   /* Adj key was entered from KF0EM001*/
   /* **********************************************************************/
  else /* adj rec key was entered fr KF0EM001*/
    if (KF0EW-VSNADJ01-FOUND-FL == "N") /* adj rec not found*/
      if (COMMAREA.CAADDFL == "N") /* user id has no add authority*/
        KF0ES-HILITE-M1KEY(); /* set key KF0EM001 bright*/
        KF0EW-ERR-FL = "Y";
        KFWREC.SM-SAGCY-ID = " "; /* set dummy agency*/
        KFWREC.SM-SREP-ID = 0; /* set dummy rep*/
        XSKFS-CHK-SECURITY(); /* determine access level*/
        KF0ES-BLD-ERR-MSG(); /* build error msg depending on lvl*/
      else /* user id has add authority*/
        KF0ES-LD-MAP1-ADD(); /* load KF0EM001 for add*/
      end
    else /* adj rec was found*/
      if (KF0EW-DUPKEY-PRESSED-FL == "Y") /* dup key pressed*/
        KF0EW-ERR-FL = "Y";
        KF0ES-HILITE-M1KEY(); /* set key KF0EM001 bright*/
        converseLib.validationFailed(0058); /* adj already exist cannot add*/
      else /* dup key was not pressed*/
        KFWREC.SM-SAGCY-ID = VSNADJ01.CO-MGMT-SAGCY-ID;
        KFWREC.SM-SREP-ID = VSNADJ01.CO-MGMT-SREP-ID;
        XSKFS-CHK-SECURITY(); /* chk if userid allowed for agcy/rep*/
        if (KFWREC.KFW-ACCESS-IND == "N") /* access denied for level*/
          KF0ES-HILITE-M1KEY(); /* set key KF0EM001 bright*/
          KF0ES-BLD-ERR-MSG(); /* build security error message*/
        else /* access allowed*/
          KF0ES-LD-MAP1-CHG(); /* load KF0EM001 for inquiry or change*/
        end
      end
    end
  end
  ;
end // end KF0ES-GET-ADJ

// Get day after adj exp dt
Function KF0ES-GET-DAY-AFT()
   /* **********************************************************************/
   /* Get the date one day after the adjustment expire date*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "GREGGREG"; /* greg to greg*/
  TA2REC.TA2GRTYP = "G"; /* seed dt is ccyymmdd*/
  TA2REC.TA2DYAOD = +1; /* days to add*/
  TA2REC.TA2GRGGN = KF0EW01.KF0EW-FP-EDT; /* seed date*/
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET NEXT DAY DATE FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "KF0EM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(0040); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-GET-DAY-AFT

// Get day before adj eff dt
Function KF0ES-GET-DAY-BFR()
   /* **********************************************************************/
   /* Get the date one day before the adjustment effective date*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "GREGGREG"; /* greg to greg*/
  TA2REC.TA2GRTYP = "G"; /* seed dt is ccyymmdd*/
  TA2REC.TA2DYAOD = -1; /* days to add*/
  TA2REC.TA2GRGGN = KF0EW01.KF0EW-FP-EDT; /* seed date*/
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0)
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET PREVIOUS DAY DATE FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "KF0EM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(0040); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-GET-DAY-BFR

// Get KF0EM001 dtl descriptions
Function KF0ES-GET-DT1-DESC()
   /* **********************************************************************/
   /* Get KF0EM001 detail descriptions*/
   /* This routine gets the descriptions for the adjustment data fields.*/
   /* This also doubles up as the edit routine for the adjustment details*/
   /* if the KF0EW-DISP-ERR-FL is set to 'Y'.*/
   /* NOTE: This routine picks up the key fields from CURR-DTL for*/
   /* entered fields and from KF0EM001 for output only fields.*/
   /* **********************************************************************/
   /* PROCESS ADJUSTMENT STATUS INDICATOR*/
   /* **********************************************************************/
  if (KF0EW04.XXX-STAT == "A")
    KF0EM001.KF0EM-STATUS-DESCRIPTION = "ACTIVE";
  else
    if (KF0EW04.XXX-STAT == "I")
      KF0EM001.KF0EM-STATUS-DESCRIPTION = "INACTIVE";
      if (KF0EW-DISP-ERR-FL == "Y")
        if (KF0EW04.KF0EW-CURR-DTL-OTHERS != 
        KF0EW05.KF0EW-PREV-DTL-OTHERS) /* other dtl fields changed*/
          KF0EW-ERR-FL = "Y";
          converseLib.validationFailed(0069); /* Cant updt when changing status*/
          set KF0EM001.KF0EM-XXX-STAT cursor, bold;
        end
      end
    else
      KF0EM001.KF0EM-STATUS-DESCRIPTION = " ";
      if (KF0EW-DISP-ERR-FL == "Y")
        KF0EW-ERR-FL = "Y";
        converseLib.validationFailed(0060); /* Status must be A or I*/
        set KF0EM001.KF0EM-XXX-STAT cursor, bold;
      end
    end
  end
   /* **********************************************************************/
   /* PROCESS ADJUSTMENT EXPIRATION DATE*/
   /* **********************************************************************/
  if (KF0EW-DISP-ERR-FL == "Y")
    KF0ES-EDIT-ADJ-XDT(); /* edit seasonal sls adj exp dt*/
  end
   /* **********************************************************************/
   /* PROCESS ADJUSTMENT EFFECTIVE DATE*/
   /* **********************************************************************/
  if (KF0EW-DISP-ERR-FL == "Y")
    KF0ES-EDIT-ADJ-EDT(); /* edit seasonal sls adj eff dt*/
  end
   /* **********************************************************************/
   /* PROCESS ADJUST MANAGER SALES FLAG*/
   /* **********************************************************************/
  if (KF0EW04.CO-ADJ-MGR-SLS-FL == "Y")
    KF0EM001.KF0EM-MANAGER-ADJUST-DESC = "YES";
  else
    if (KF0EW04.CO-ADJ-MGR-SLS-FL == "N")
      KF0EM001.KF0EM-MANAGER-ADJUST-DESC = "NO";
    else
      KF0EM001.KF0EM-MANAGER-ADJUST-DESC = " ";
      if (KF0EW-DISP-ERR-FL == "Y")
        KF0EW-ERR-FL = "Y";
        converseLib.validationFailed(0065); /* Adj for mgr must be Y or N*/
        set KF0EM001.KF0EM-CO-ADJ-MGR-SLS-FL cursor, bold;
      end
    end
  end
   /* **********************************************************************/
   /* PROCESS ADJUSTMENT AMOUNT*/
   /* **********************************************************************/
   /* IF KF0EW-DISP-ERR-FL EQ 'Y';*/
   /* IF KF0EW04.CO-CUST-SLS-ADJAMT LT 0;*/
     /* MOVE 'Y' TO KF0EW-ERR-FL;*/
     /* MOVE 0059 TO EZEMNO;              /* Invalid adjustment amount*/
     /* SET KF0EM001.KF0EM-CO-CUST-SLS-ADJAMT CURSOR,BRIGHT;*/
   /* END;*/
   /* END;*/
   /* **********************************************************************/
   /* PROCESS PERFORMANCE REP ID*/
   /* **********************************************************************/
  if (KF0EM001.KF0EM-PERF-SREP-ID > 0)
    set SM4REC empty;
    SM4REC.SM4REPID = KF0EM001.KF0EM-PERF-SREP-ID;
    ;
    KF0ES-FIND-VREPS0(); /* read sales rep row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
      KF0EM001.KF0EM-PERF-XXX-LAST-NM = SM4REC.XXXLSTNM;
      KF0EM001.KF0EM-PERF-XXX-FRST-NM = SM4REC.XXXFSTNM;
      KF0EM001.KF0EM-PERF-XXX-MID-INIT = SM4REC.XXXMDINT;
    else /* record not found*/
      KF0EM001.KF0EM-PERF-XXX-LAST-NM = "UNKNOWN";
      KF0EM001.KF0EM-PERF-XXX-FRST-NM = " ";
      KF0EM001.KF0EM-PERF-XXX-MID-INIT = " ";
    end
  else
    KF0EM001.KF0EM-PERF-XXX-LAST-NM = " ";
    KF0EM001.KF0EM-PERF-XXX-FRST-NM = " ";
    KF0EM001.KF0EM-PERF-XXX-MID-INIT = " ";
  end
   /* **********************************************************************/
   /* PROCESS PERFORMANCE AGENCY ID*/
   /* **********************************************************************/
  if (KF0EM001.KF0EM-PERF-SAGCY-ID != " ")
    set SM1REC empty;
    SM1REC.SM1AGYID = KF0EM001.KF0EM-PERF-SAGCY-ID;
    ;
    KF0ES-FIND-VSAGCY(); /* read sales agency row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
      KF0EM001.KF0EM-PERF-SAGCY-NM = SM1REC.SM1AGYNM;
    else /* record not found*/
      KF0EM001.KF0EM-PERF-SAGCY-NM = "UNKNOWN";
    end
  else
    KF0EM001.KF0EM-PERF-SAGCY-NM = " ";
  end
   /* **********************************************************************/
   /* PROCESS MANAGEMENT REP ID*/
   /* **********************************************************************/
  set VRAGCY02 empty;
  VRAGCY02.SM4REPID = KF0EW04.CO-MGMT-SREP-ID;
  VRAGCY02.SM1AGYID = KF0EW04.CO-MGMT-SAGCY-ID;
  VRAGCY02.XXXSTAT = "A";
  ;
  KF0ES-FIND-VRAGCY(); /* read sales rep/agency row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    if (KF0EW-DISP-ERR-FL == "Y") /* if editing, check security*/
      KFWREC.SM-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
      KFWREC.SM-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
      XSKFS-CHK-SECURITY(); /* check ragcy security*/
      if (KFWREC.KFW-ACCESS-IND == "N") /* if access denied for ragcy*/
        KF0EW-ERR-FL = "Y";
        set KF0EM001.KF0EM-MGMT-SREP-ID bold;
        set KF0EM001.KF0EM-MGMT-SAGCY-ID cursor, bold;
      end
    else
      KF0EM001.KF0EM-MGMT-XXX-LAST-NM = VRAGCY02.XXXLSTNM;
      KF0EM001.KF0EM-MGMT-XXX-FRST-NM = VRAGCY02.XXXFSTNM;
      KF0EM001.KF0EM-MGMT-XXX-MID-INIT = VRAGCY02.XXXMDINT;
    end
  else /* record not found*/
    if (KF0EW-DISP-ERR-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0014); /* Rep is not valid for agency*/
      set KF0EM001.KF0EM-MGMT-SREP-ID cursor, bold;
      set KF0EM001.KF0EM-MGMT-SAGCY-ID bold;
      KF0EM001.KF0EM-MGMT-XXX-LAST-NM = " ";
      KF0EM001.KF0EM-MGMT-XXX-FRST-NM = " ";
      KF0EM001.KF0EM-MGMT-XXX-MID-INIT = " ";
    else /* re-try getting name w/ vreps001*/
      set SM4REC empty;
      SM4REC.SM4REPID = KF0EW04.CO-MGMT-SREP-ID;
      ;
      KF0ES-FIND-VREPS0(); /* read sales rep row*/
      ;
      if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
        KF0EM001.KF0EM-MGMT-XXX-LAST-NM = SM4REC.XXXLSTNM;
        KF0EM001.KF0EM-MGMT-XXX-FRST-NM = SM4REC.XXXFSTNM;
        KF0EM001.KF0EM-MGMT-XXX-MID-INIT = SM4REC.XXXMDINT;
      else /* record not found*/
        KF0EM001.KF0EM-MGMT-XXX-LAST-NM = "UNKNOWN";
        KF0EM001.KF0EM-MGMT-XXX-FRST-NM = " ";
        KF0EM001.KF0EM-MGMT-XXX-MID-INIT = " ";
      end
    end
  end
   /* **********************************************************************/
   /* PROCESS MANAGEMENT AGENCY ID*/
   /* **********************************************************************/
  set SM1REC empty;
  SM1REC.SM1AGYID = KF0EW04.CO-MGMT-SAGCY-ID;
  ;
  KF0ES-FIND-VSAGCY(); /* read sales agency row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    KF0EM001.KF0EM-MGMT-SAGCY-NM = SM1REC.SM1AGYNM;
  else /* record not found*/
    if (KF0EW-DISP-ERR-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0005); /* Invalid agency id*/
      set KF0EM001.KF0EM-MGMT-SAGCY-ID cursor, bold;
      KF0EM001.KF0EM-MGMT-SAGCY-NM = " ";
    else
      KF0EM001.KF0EM-MGMT-SAGCY-NM = "UNKNOWN";
    end
  end
  ;
end // end KF0ES-GET-DT1-DESC

// Get KF0EM001 hdr descriptions
Function KF0ES-GET-HD1-DESC()
   /* **********************************************************************/
   /* Get KF0EM001 header descriptions*/
   /* This routine gets the descriptions for the header key fields.  It*/
   /* also doubles up as the edit routine for the header fields if the*/
   /* KF0EW-DISP-ERR-FL is set to 'Y'.*/
   /* NOTE: This routine picks up the key fields from CURR-HDR.*/
   /* **********************************************************************/
   /* PROCESS RESPONSIBILITY CODE*/
   /* **********************************************************************/
  if (KF0EW02.YSB-SLS-RESP-CD in YSBTBL.YSBCD
   && YSBTBL.XXXSTAT[sysVar.arrayIndex] == "A")
    KF0EM001.KF0EM-YSB-SLS-RESP-DESC = YSBTBL.YSBDESC[sysVar.arrayIndex];
  else
    if (KF0EW-DISP-ERR-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0054); /* Resp cd does not exist*/
      set KF0EM001.KF0EM-YSB-SLS-RESP-CD cursor, bold;
    else
      KF0EM001.KF0EM-YSB-SLS-RESP-DESC = "UNKNOWN";
    end
  end
   /* **********************************************************************/
   /* PROCESS CUSTOMER DEPARTMENT ID*/
   /* **********************************************************************/
  KF0ES-SET-DEPT-KEY(); /* set cust dept key*/
  ;
  KF0ES-FIND-VDEPT0(); /* read cust dept row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    KF0EM001.KF0EM-XNX-DEPT-XREF-DESC = KUJREC.KUJSLFNM;
  else /* record not found*/
    if (KF0EW-DISP-ERR-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0053); /* Dept id does not exist*/
      set KF0EM001.KF0EM-XNX-DEPT-ID-XREF cursor, bold;
    else
      KF0EM001.KF0EM-XNX-DEPT-XREF-DESC = "UNKNOWN";
    end
  end
   /* **********************************************************************/
   /* PROCESS CUSTOMER STORE ID*/
   /* **********************************************************************/
  KF0ES-SET-STOR-KEY(); /* set cust store key*/
  ;
  KF0ES-FIND-VSTORE(); /* read cust store row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    KF0EM001.KF0EM-CU-STOR-NM = KUMREC.KUMSTRNM;
  else /* record not found*/
    if (KF0EW-DISP-ERR-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0052); /* Store does not exist*/
      set KF0EM001.KF0EM-CU-STOR-ID cursor, bold;
    else
      KF0EM001.KF0EM-CU-STOR-NM = "UNKNOWN";
    end
  end
   /* **********************************************************************/
   /* PROCESS CUSTOMER COMPANY ID*/
   /* **********************************************************************/
  set KUCREC empty;
  KUCREC.KUCCOID = KF0EW02.CU-CO-ID;
  ;
  KF0ES-FIND-VCMPNY(); /* read cust company row*/
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
    KF0EM001.KF0EM-CU-CO-NM = KUCREC.KUCCONM;
  else /* record not found*/
    if (KF0EW-DISP-ERR-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0051); /* Company does not exist*/
      set KF0EM001.KF0EM-CU-STOR-ID cursor, bold;
    else
      KF0EM001.KF0EM-CU-CO-NM = "UNKNOWN";
    end
  end
   /* **********************************************************************/
   /* PROCESS EDIT SEASON YEAR AND CODE*/
   /* **********************************************************************/
  if (KF0EW-DISP-ERR-FL == "Y")
    KF0ES-EDIT-YSN-XSE(); /* edit season year and code*/
  end
  ;
end // end KF0ES-GET-HD1-DESC

// Get last day of the month
Function KF0ES-GET-LAST-DAY()
   /* **********************************************************************/
   /* Get the last day of the month*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "LASTDAY"; /* last day of the month*/
  TA2REC.TA2GRTYP = "G"; /* seed dt is ccyymmdd*/
  TA2REC.TA2GRGGN = KF0EW01.KF0EW-CURR-CCYYMMDD; /* seed date*/
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD == 0)
    KF0EW01.KF0EW-LASTDAY-CCYYMMDD = TA2REC.TA2GRGGN;
  else
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET LAST DAY OF MONTH FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "KF0EM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(0040); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-GET-LAST-DAY

// Get date & time stamp
Function KF0ES-GET-TM-STAMP()
   /* **********************************************************************/
   /* Get current date and time*/
   /* **********************************************************************/
  set TA2REC empty; /* initialize TA0040 parm*/
  TA2REC.TA2DTOPT = "GETDATE";
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD == 0)
    KF0EW01.KF0EW-CURR-CCYYMMDD = TA2REC.TA2GRGGN;
    KF0EW01.KF0EW-CURR-HHMMSS = TA2REC.TA2TIMEN;
    KF0EW01.KF0EW-CURR-HHMM = TA2REC.TA2TIMHM;
  else
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 GET-DATE FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GET DATE";
    TA1REC.TA1MAP = "KF0EM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(0040); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-GET-TM-STAMP

// Transfer to KF0F
Function KF0ES-GOTO-KF0F()
   /* **********************************************************************/
   /* Set up KFWREC and transfer to KF0F*/
   /* **********************************************************************/
  ;
  KFWREC.XXX-STAT[1] = " ";
  KFWREC.CU-CO-ID[1] = KF0EW02.CU-CO-ID;
  KFWREC.CU-STOR-ID[1] = 0;
  KFWREC.XNX-DEPT-ID-XREF[1] = 0;
  KFWREC.YSB-SLS-RESP-CD[1] = " ";
  ;
  KFWREC.KFW-POPUP-IND = "Y";
  KFWREC.XSE-SESN-CD = KF0EW02.XSE-SESN-CD;
  KFWREC.YNS-SESN-YR = KF0EW02.YNS-SESN-YR;
  KFWREC.KFW-CU-CO-ID-KEY = KF0EW02.CU-CO-ID;
  ;
   /* **********************************************************************/
   /* Set up char to num conversion parms*/
   /* **********************************************************************/
  KFWREC.KFW-NUM-CHK-FUNC = "CHRTONUM";
  KFWREC.KFW-NUM-CHK-LEN = 4;
  ;
   /* **********************************************************************/
   /* convert store or use -1 for all stores*/
   /* **********************************************************************/
  if (KF0EW02.KF0EW-CU-STOR-ID != " ") /* stor id is valued*/
    KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-CU-STOR-ID;
    XSKFS-NUM-CHK();
    KFWREC.KFW-CU-STOR-ID-KEY = KFWREC.KFW-NUM-CHK-NBR;
  else
    KFWREC.KFW-CU-STOR-ID-KEY = -1;
  end
  ;
   /* **********************************************************************/
   /* convert dept or use -1 for all depts*/
   /* **********************************************************************/
  if (KF0EW02.KF0EW-XNX-DEPT-ID-XREF != " ") /* dept id is valued*/
    KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-XNX-DEPT-ID-XREF;
    XSKFS-NUM-CHK();
    KFWREC.KFW-XNX-DEPT-ID-XREF-KEY = KFWREC.KFW-NUM-CHK-NBR;
  else
    KFWREC.KFW-XNX-DEPT-ID-XREF-KEY = -1;
  end
  ;
   /* **********************************************************************/
   /* transfer to KF0F*/
   /* **********************************************************************/
  COMMAREA.CATOAP = "KF0F";
  COMMAREA.CAITEM = " ";
  COMMAREA.CAUSERA = KFWREC.KFW-GROUP;
  ;
  XSEXIT();
  ;
  set KF0EM001.CATOAP bold, cursor; /* unsuccessful fastpath*/
  KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG;
  KF0EW-ERR-FL = "Y";
  ;
  ;
end // end KF0ES-GOTO-KF0F

// Set KF0EM001 key fields bright
Function KF0ES-HILITE-M1KEY()
   /* **********************************************************************/
   /* Set KF0EM001 key fields bright*/
   /* **********************************************************************/
  ;
  set KF0EM001.KF0EM-XSE-SESN-CD cursor, bold;
  set KF0EM001.KF0EM-YNS-SESN-YR bold;
  set KF0EM001.KF0EM-CU-CO-ID bold;
  set KF0EM001.KF0EM-CU-STOR-ID bold;
  set KF0EM001.KF0EM-XNX-DEPT-ID-XREF bold;
  set KF0EM001.KF0EM-YSB-SLS-RESP-CD bold;
  ;
end // end KF0ES-HILITE-M1KEY

// Ld inval key from KF0F to map1
Function KF0ES-KFW-KEY-MAP1()
   /* **********************************************************************/
   /* Load KFWREC key that KF0F could not find*/
   /* **********************************************************************/
  KF0EM001.KF0EM-XSE-SESN-CD = KFWREC.XSE-SESN-CD;
  KF0EM001.KF0EM-YNS-SESN-YR = KFWREC.YNS-SESN-YR;
  KF0EM001.KF0EM-CU-CO-ID = KFWREC.KFW-CU-CO-ID-KEY;
  KF0EM001.KF0EM-YSB-SLS-RESP-CD = " ";
  ;
   /* convert stor id to char format and move to prev hdr*/
  ;
  if (KFWREC.KFW-CU-STOR-ID-KEY == -1)
    KF0EM001.KF0EM-CU-STOR-ID = " ";
  else
    KFWREC.KFW-NUM-CHK-NBR = KFWREC.KFW-CU-STOR-ID-KEY;
    KFWREC.KFW-NUM-CHK-LEN = 4;
    KFWREC.KFW-NUM-CHK-FUNC = "NUMTOCHR";
    XSKFS-NUM-CHK(); /* convert fr num to character*/
    KF0EM001.KF0EM-CU-STOR-ID = KFWREC.KFW-NUM-CHK-WORD;
  end
  ;
   /* convert dept id to char format and move to prev hdr*/
  ;
  if (KFWREC.KFW-XNX-DEPT-ID-XREF-KEY == -1)
    KF0EM001.KF0EM-XNX-DEPT-ID-XREF = " ";
  else
    KFWREC.KFW-NUM-CHK-NBR = KFWREC.KFW-XNX-DEPT-ID-XREF-KEY;
    KFWREC.KFW-NUM-CHK-LEN = 4;
    KFWREC.KFW-NUM-CHK-FUNC = "NUMTOCHR";
    XSKFS-NUM-CHK(); /* convert fr num to character*/
    KF0EM001.KF0EM-XNX-DEPT-ID-XREF = KFWREC.KFW-NUM-CHK-WORD;
  end
  ;
end // end KF0ES-KFW-KEY-MAP1

// Load KF0EM001 for add
Function KF0ES-LD-MAP1-ADD()
   /* **********************************************************************/
   /* Set KF0EM001 and load for add*/
   /* **********************************************************************/
  ;
  KF0EW-DISP-ERR-FL = "Y"; /* highlight errors if found*/
  KF0EW-PROC-TYP-IND = "A"; /* process type is add adjusment*/
  ;
  KF0ES-GET-HD1-DESC(); /* get KF0EM001 hdr desc w/ edits*/
  ;
  if (KF0EW-ERR-FL == "Y") /* errors found in header*/
    ;
    set KF0EW05 empty; /* initialize PREV-DTL*/
    KF0ES-PDTL-TO-MAP1(); /* initialize KF0EM001 dtl*/
    KF0EW04.KF0EW-CURR-DTL = KF0EW05.KF0EW-PREV-DTL; /* initialize CURR-DTL*/
    KF0EW04.CO-SLS-ADJ-EDT = KF0EW05.CO-SLS-ADJ-EDT;
    KF0EW04.CO-SLS-ADJ-XDT = KF0EW05.CO-SLS-ADJ-XDT;
    KF0ES-CLR-DT1-DESC(); /* clear KF0EM001 detail desc*/
    ;
  else /* no errors found in header*/
    ;
     /* if the previous screen was blanks, then accept the just entered*/
     /* screen detail.  Otherwise, clear the detail area and prompt for*/
     /* new detail information.*/
    ;
    if (KF0EW03.KF0EW-PREV-HDR == KF0EW08.KF0EW-INIT-HDR
     && KF0EW05.KF0EW-PREV-DTL == KF0EW08.KF0EW-INIT-DTL)
      ;
      KF0EW03.KF0EW-PREV-HDR = KF0EW02.KF0EW-CURR-HDR; /* save entered Header key*/
      ;
      KF0ES-PROC-ADJ-DTL(); /* Process the adjustment detail*/
      ;
    else
      ;
      KF0EW03.KF0EW-PREV-HDR = KF0EW02.KF0EW-CURR-HDR; /* save entered Header key*/
      ;
      set KF0EW05 empty; /* initialize PREV-DTL*/
      KF0ES-PDTL-TO-MAP1(); /* initialize KF0EM001 dtl*/
      KF0EW04.KF0EW-CURR-DTL = KF0EW05.KF0EW-PREV-DTL; /* initialize CURR-DTL*/
      KF0EW04.CO-SLS-ADJ-EDT = KF0EW05.CO-SLS-ADJ-EDT;
      KF0EW04.CO-SLS-ADJ-XDT = KF0EW05.CO-SLS-ADJ-XDT;
      KF0ES-CLR-DT1-DESC(); /* clear KF0EM001 detail desc*/
      KF0ES-RESET-MAP1(); /* reset KF0EM001 attributes*/
      set KF0EM001.KF0EM-MGMT-SAGCY-ID cursor;
      ;
    end
    ;
  end
  ;
end // end KF0ES-LD-MAP1-ADD

// Load KF0EM001 for chg or inq
Function KF0ES-LD-MAP1-CHG()
   /* **********************************************************************/
   /* Set KF0EM001 and load for inquiry or update*/
   /* **********************************************************************/
  ;
  KF0EW-DISP-ERR-FL = "N"; /* do not highlight errors*/
  ;
  if (COMMAREA.CACHGFL == "Y") /* has change authority*/
    KF0EW-PROC-TYP-IND = "U";
  else
    KF0EW-PROC-TYP-IND = "I";
  end
  ;
  KF0ES-GET-HD1-DESC(); /* get KF0EM001 header desc*/
  ;
  KF0EW03.KF0EW-PREV-HDR = KF0EW02.KF0EW-CURR-HDR; /* save entered Header key*/
  KF0ES-ADJ-TO-PDTL(); /* save VSNADJ01 info to prev dtl*/
  KF0ES-PDTL-TO-MAP1(); /* move save adj info to KF0EM001*/
  KF0EW04.KF0EW-CURR-DTL = KF0EW05.KF0EW-PREV-DTL; /* move saved dtl to curr dtl*/
  KF0EW04.CO-SLS-ADJ-EDT = KF0EW05.CO-SLS-ADJ-EDT;
  KF0EW04.CO-SLS-ADJ-XDT = KF0EW05.CO-SLS-ADJ-XDT;
  ;
  KF0ES-GET-DT1-DESC(); /* get KF0EM001 detail desc*/
  ;
  KF0ES-RESET-MAP1(); /* reset map based on new data*/
  ;
end // end KF0ES-LD-MAP1-CHG

// Load KF0EM002 for chg or inq
Function KF0ES-LD-MAP2-CHG()
   /* **********************************************************************/
   /* Load KF0EWM002 for change or inquiry*/
   /* **********************************************************************/
  ;
  TA5REC.TA5TSQIX = KF0EW01.KF0EW-CMT-CURR-PG;
  ;
  KF0ES-READ-TSQ(); /* read page from temp storage*/
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors*/
    ;
    KF0EW-CMT-PTR = 0;
    ;
    while (KF0EW-CMT-PTR < 9)
      KF0EW-CMT-PTR = KF0EW-CMT-PTR + 1;
      ;
      KF0EM002.KF0EM-CO-COMNTS[KF0EW-CMT-PTR] = KF0EW07.CO-COMNT[KF0EW-CMT-PTR];
      ;
    end
    ;
  end
  ;
end // end KF0ES-LD-MAP2-CHG

// Move KF0EM001 to CURR-DTL
Function KF0ES-MAP1-TO-CDTL()
   /* **********************************************************************/
   /* move KF0EM001 to CURR-DTL*/
   /* **********************************************************************/
  ;
  KF0EW04.CO-MGMT-SAGCY-ID = KF0EM001.KF0EM-MGMT-SAGCY-ID;
  KF0EW04.CO-MGMT-SREP-ID = KF0EM001.KF0EM-MGMT-SREP-ID;
  KF0EW04.CO-CUST-SLS-ADJAMT = KF0EM001.KF0EM-CO-CUST-SLS-ADJAMT;
  KF0EW04.XXX-STAT = KF0EM001.KF0EM-XXX-STAT;
  KF0EW04.CO-ADJ-MGR-SLS-FL = KF0EM001.KF0EM-CO-ADJ-MGR-SLS-FL;
  KF0EW04.KF0EW-CO-SLS-ADJ-EDT = KF0EM001.KF0EM-CO-SLS-ADJ-EDT;
  KF0EW04.KF0EW-CO-SLS-ADJ-XDT = KF0EM001.KF0EM-CO-SLS-ADJ-XDT;
  ;
end // end KF0ES-MAP1-TO-CDTL

// Move KF0EM001 to CURR-HDR
Function KF0ES-MAP1-TO-CHDR()
   /* **********************************************************************/
   /* move KF0EM001 to CURR-HDR*/
   /* **********************************************************************/
  KF0EW02.XSE-SESN-CD = KF0EM001.KF0EM-XSE-SESN-CD;
  KF0EW02.YNS-SESN-YR = KF0EM001.KF0EM-YNS-SESN-YR;
  KF0EW02.CU-CO-ID = KF0EM001.KF0EM-CU-CO-ID;
  KF0EW02.KF0EW-CU-STOR-ID = KF0EM001.KF0EM-CU-STOR-ID;
  KF0EW02.KF0EW-XNX-DEPT-ID-XREF = KF0EM001.KF0EM-XNX-DEPT-ID-XREF;
  KF0EW02.YSB-SLS-RESP-CD = KF0EM001.KF0EM-YSB-SLS-RESP-CD;
  ;
end // end KF0ES-MAP1-TO-CHDR

// Move KF0EM002 to curr-cmt
Function KF0ES-MAP2-TO-CDTL()
   /* **********************************************************************/
   /* Move KF0EWM002 to curr comment save area*/
   /* **********************************************************************/
  ;
  KF0EW-CMT-PTR = 0;
  ;
  while (KF0EW-CMT-PTR < 9)
    KF0EW-CMT-PTR = KF0EW-CMT-PTR + 1;
    ;
    KF0EW06.CO-COMNT[KF0EW-CMT-PTR] = KF0EM002.KF0EM-CO-COMNTS[KF0EW-CMT-PTR];
    ;
  end
  ;
end // end KF0ES-MAP2-TO-CDTL

// Call IO3950 open vfrmla01 csr
Function KF0ES-OPEN-VFRMLA()
   /* **********************************************************************/
   /* KF0ES-OPEN-VFRMLA*/
   /* This routine calls IO3950 to open a Formula cursor*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3950" ("S2", SQLCA, VFRMLA01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VFRMLA01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S2      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3950"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-OPEN-VFRMLA

// Call IO2480 open vkocom01 csr
Function KF0ES-OPEN-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-OPEN-VKOCOM*/
   /* This routine calls IO2480 to open a Comment cursor*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("S1", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "S1      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-OPEN-VKOCOM

// Move PREV-DTL to KF0EM001
Function KF0ES-PDTL-TO-MAP1()
   /* **********************************************************************/
   /* move PREV-DTL to KF0EM001*/
   /* **********************************************************************/
  ;
  KF0EM001.KF0EM-MGMT-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
  KF0EM001.KF0EM-MGMT-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
  if (KF0EW05.CO-CUST-SLS-ADJAMT != 0)
    KF0EM001.KF0EM-CO-CUST-SLS-ADJAMT = KF0EW05.CO-CUST-SLS-ADJAMT;
  end
  KF0EM001.KF0EM-XXX-STAT = KF0EW05.XXX-STAT;
  KF0EM001.KF0EM-CO-ADJ-MGR-SLS-FL = KF0EW05.CO-ADJ-MGR-SLS-FL;
  KF0EM001.KF0EM-CO-SLS-ADJ-EDT = KF0EW05.KF0EW-CO-SLS-ADJ-EDT;
  KF0EM001.KF0EM-CO-SLS-ADJ-XDT = KF0EW05.KF0EW-CO-SLS-ADJ-XDT;
  ;
   /* **********************************************************************/
   /* move saved read-only fields in PREV-DTL to KF0EM001*/
   /* **********************************************************************/
  ;
  KF0EM001.KF0EM-PERF-SAGCY-ID = KF0EW05.CO-PFRM-SAGCY-ID;
  KF0EM001.KF0EM-PERF-SREP-ID = KF0EW05.CO-PFRM-SREP-ID;
  KF0EM001.KF0EM-ZZ-SDT = KF0EW05.ZZ-SDT;
  KF0EM001.KF0EM-ZZ-CHNG-DT = KF0EW05.ZZ-CHNG-DT;
  KF0EM001.KF0EM-CO-LST-RALGN-DT = KF0EW05.CO-LST-RALGN-DT;
  ;
end // end KF0ES-PDTL-TO-MAP1

// Move PREV-HDR to KF0EM001
Function KF0ES-PHDR-TO-MAP1()
   /* **********************************************************************/
   /* move PREV-HDR to KF0EM001*/
   /* **********************************************************************/
  KF0EM001.KF0EM-XSE-SESN-CD = KF0EW03.XSE-SESN-CD;
  KF0EM001.KF0EM-YNS-SESN-YR = KF0EW03.YNS-SESN-YR;
  KF0EM001.KF0EM-CU-CO-ID = KF0EW03.CU-CO-ID;
  KF0EM001.KF0EM-CU-STOR-ID = KF0EW03.KF0EW-CU-STOR-ID;
  KF0EM001.KF0EM-XNX-DEPT-ID-XREF = KF0EW03.KF0EW-XNX-DEPT-ID-XREF;
  KF0EM001.KF0EM-YSB-SLS-RESP-CD = KF0EW03.YSB-SLS-RESP-CD;
  ;
end // end KF0ES-PHDR-TO-MAP1

// Move HDR keys to KF0EM002
Function KF0ES-PHDR-TO-MAP2()
   /* **********************************************************************/
   /* move PREV-HDR to KF0EM002*/
   /* **********************************************************************/
  KF0EM002.KF0EM-XSE-SESN-CD = KF0EW03.XSE-SESN-CD;
  KF0EM002.KF0EM-YNS-SESN-YR = KF0EW03.YNS-SESN-YR;
  KF0EM002.KF0EM-CU-CO-ID = KF0EW03.CU-CO-ID;
  KF0EM002.KF0EM-CU-STOR-ID = KF0EW03.KF0EW-CU-STOR-ID;
  KF0EM002.KF0EM-XNX-DEPT-ID-XREF = KF0EW03.KF0EW-XNX-DEPT-ID-XREF;
  KF0EM002.KF0EM-YSB-SLS-RESP-CD = KF0EW03.YSB-SLS-RESP-CD;
  ;
end // end KF0ES-PHDR-TO-MAP2

// Move passed adj key to prev
Function KF0ES-PICK-ADJ-KEY()
   /* **********************************************************************/
   /* move kfw selected adjustment to prev hdr*/
   /* **********************************************************************/
  KF0EW03.XSE-SESN-CD = KFWREC.XSE-SESN-CD;
  KF0EW03.YNS-SESN-YR = KFWREC.YNS-SESN-YR;
  KF0EW03.CU-CO-ID = KFWREC.CU-CO-ID[KF0EW-ADJ-PTR];
  KF0EW03.YSB-SLS-RESP-CD = KFWREC.YSB-SLS-RESP-CD[KF0EW-ADJ-PTR];
  ;
   /* convert stor id to char format and move to prev hdr*/
  ;
  KFWREC.KFW-NUM-CHK-NBR = KFWREC.CU-STOR-ID[KF0EW-ADJ-PTR];
  KFWREC.KFW-NUM-CHK-LEN = 4;
  KFWREC.KFW-NUM-CHK-FUNC = "NUMTOCHR";
  XSKFS-NUM-CHK(); /* convert fr num to character*/
  KF0EW03.KF0EW-CU-STOR-ID = KFWREC.KFW-NUM-CHK-WORD;
  ;
   /* convert dept id to char format and move to prev hdr*/
  ;
  KFWREC.KFW-NUM-CHK-NBR = KFWREC.XNX-DEPT-ID-XREF[KF0EW-ADJ-PTR];
  KFWREC.KFW-NUM-CHK-LEN = 4;
  KFWREC.KFW-NUM-CHK-FUNC = "NUMTOCHR";
  XSKFS-NUM-CHK(); /* convert fr num to character*/
  KF0EW03.KF0EW-XNX-DEPT-ID-XREF = KFWREC.KFW-NUM-CHK-WORD;
  ;
end // end KF0ES-PICK-ADJ-KEY

// process season popup window
Function KF0ES-POPUP-SEASON()
   /* ******************************************************************/
   /* * module:    KF0Es-POPUP-SEASON*/
   /* * purpose:   pop up window for season selection*/
   /* ******************************************************************/
  ;
  XPXX004(); /* initialize*/
  ;
  XX0XW04.YNS-BUS-FUNC-ID = "COM"; /* commissions system*/
  ;
  while (XX0XW04.XX0XW-END-FLAG == "N") /* not end of process*/
    XPYNS01(); /* popup season window*/
  end
  ;
  
  // VAGen Info - map = KF0EM001
  converseLib.clearScreen();
  
  ;
  if (XX0XW04.XX0XW-SELECT-FLAG == "Y") /* entry was selected*/
    KF0EM001.KF0EM-XSE-SESN-CD = XX0XW04.XSE-SESN-CD;
    KF0EM001.KF0EM-YNS-SESN-YR = XX0XW04.YNS-SESN-YR;
    set KF0EM001.KF0EM-CU-CO-ID cursor;
  end
  ;
end // end KF0ES-POPUP-SEASON

// Process Adjustment Detail
Function KF0ES-PROC-ADJ-DTL()
   /* **********************************************************************/
   /* Process KF0EM001 details*/
   /* **********************************************************************/
  ;
  KF0EW-DISP-ERR-FL = "Y"; /* highlight errors if found*/
  ;
  KF0ES-GET-DT1-DESC(); /* get KF0EM001 dtl desc w/ edits*/
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors found editing detail*/
     /* if could not get next YNS record, issue warning message that date*/
     /* range check will be bypassed for the season on the map.*/
    if (KF0EW-NXT-YNS-MISSING-FL == "Y"
     && KF0EW-DT-CHK-WARN-DISPLAYED-FL != "Y")
      KF0EW-ERR-FL = "Y";
      KF0EW-DT-CHK-WARN-DISPLAYED-FL = "Y";
      converseLib.validationFailed(0070); /* Unable to validate date ranges*/
      set KF0EM001.KF0EM-CO-SLS-ADJ-EDT cursor, bold;
      set KF0EM001.KF0EM-CO-SLS-ADJ-XDT bold;
    end
  end
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors found editing detail*/
    if (converseVar.eventKey is pf12 /* edit only*/
     || KF0EW-DUPKEY-PRESSED-FL == "Y") /* dup key was pressed*/
      ;
      converseLib.validationFailed(0027); /* Press enter again to accept*/
      ;
    else /* Enter was pressed*/
      ;
      KF0ES-UPD-TB1-PROC(); /* Update tables process*/
      ;
    end /* end PF12 or ENTER pressed*/
  end /* end no errors from edit detail*/
  ;
end // end KF0ES-PROC-ADJ-DTL

// Process Adjustment Header
Function KF0ES-PROC-ADJ-HDR()
   /* **********************************************************************/
   /* Process KF0EM001 header keys*/
   /* **********************************************************************/
  ;
  if (KF0EW-DUPKEY-PRESSED-FL == "Y") /* dup key -- then all required*/
    KF0EW-REQUIRED-FL = "Y";
  else
    KF0EW-REQUIRED-FL = "N"; /* reset nxt-key-is-required fl*/
  end
  ;
   /* **********************************************************************/
   /* Edit for Responsibility code*/
   /* **********************************************************************/
  if (KF0EW02.YSB-SLS-RESP-CD != " ") /* resp cd is valued*/
    KF0EW-REQUIRED-FL = "Y";
  else
    if (KF0EW-REQUIRED-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0054); /* invalid resp code*/
      set KF0EM001.KF0EM-YSB-SLS-RESP-CD cursor, bold;
    end
  end
  ;
   /* Set up char to num conversion parms*/
  ;
  KFWREC.KFW-NUM-CHK-FUNC = "CHRTONUM";
  KFWREC.KFW-NUM-CHK-LEN = 4;
  ;
   /* **********************************************************************/
   /* Edit for customer Department id*/
   /* **********************************************************************/
  if (KF0EW02.KF0EW-XNX-DEPT-ID-XREF != " ") /* dept id is valued*/
    KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-XNX-DEPT-ID-XREF;
    XSKFS-NUM-CHK();
    if (KFW-NUM-CHK-ERR == "N")
      KF0EW-REQUIRED-FL = "Y";
    else
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0053); /* invalid dept*/
      set KF0EM001.KF0EM-XNX-DEPT-ID-XREF cursor, bold;
    end
  else
    if (KF0EW-REQUIRED-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0053); /* invalid dept*/
      set KF0EM001.KF0EM-XNX-DEPT-ID-XREF cursor, bold;
    end
  end
  ;
   /* **********************************************************************/
   /* Edit for customer Store id*/
   /* **********************************************************************/
  if (KF0EW02.KF0EW-CU-STOR-ID != " ") /* stor id is valued*/
    KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-CU-STOR-ID;
    XSKFS-NUM-CHK();
    if (KFW-NUM-CHK-ERR == "N")
      KF0EW-REQUIRED-FL = "Y";
    else
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0052); /* invalid store*/
      set KF0EM001.KF0EM-CU-STOR-ID cursor, bold;
    end
  else
    if (KF0EW-REQUIRED-FL == "Y")
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0052); /* invalid store*/
      set KF0EM001.KF0EM-CU-STOR-ID cursor, bold;
    end
  end
  ;
   /* **********************************************************************/
   /* Edit for customer Company id*/
   /* **********************************************************************/
  if (KF0EW02.CU-CO-ID == 0) /* company id is zero*/
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0057); /* enter company id*/
    set KF0EM001.KF0EM-CU-CO-ID cursor, bold;
  end
  ;
   /* **********************************************************************/
   /* Edit for Season year*/
   /* **********************************************************************/
  if (KF0EW02.YNS-SESN-YR == 0) /* season year is zero*/
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0056); /* enter season year*/
    set KF0EM001.KF0EM-YNS-SESN-YR cursor, bold;
  end
  ;
   /* **********************************************************************/
   /* Edit for Season code*/
   /* **********************************************************************/
  if (KF0EW02.XSE-SESN-CD == " ") /* season code is blanks*/
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0055); /* enter season code*/
    set KF0EM001.KF0EM-XSE-SESN-CD cursor, bold;
  end
  ;
  ;
   /* **********************************************************************/
   /* Transfer to KF0F if valid partial key was entered.  Get data if*/
   /* complete key was entered.*/
   /* **********************************************************************/
  ;
  if (KF0EW-ERR-FL == "Y") /* errors found*/
    return;
  end
  ;
  if (KF0EW02.YSB-SLS-RESP-CD != " ") /* complete key entered*/
    ;
    KF0ES-GET-ADJ(); /* get adjustment record*/
    ;
  else /* valid partial key entered*/
    ;
    KF0ES-GOTO-KF0F(); /* xfer to KF0F*/
    ;
  end
  ;
  ;
end // end KF0ES-PROC-ADJ-HDR

// ENTER key pressed
Function KF0ES-PROC1-ENTER()
   /* **********************************************************************/
   /* Process ENTER*/
   /* **********************************************************************/
  ;
  if (KF0EM001.CATOAP != " ") /* Fast path was filled*/
    KF0ES-PROC1-FPATH(); /* process fastpath*/
    if (KF0EW-ERR-FL == "Y")
      return;
    end
  else
    if (KF0EM001.CAITEM != " ") /* Fast path item was filled*/
      KF0EM001.CAITEM = " ";
    end
  end
  ;
  ;
  if (KF0EW02.KF0EW-CURR-HDR == KF0EW08.KF0EW-INIT-HDR /* HDR blanks*/
   && KF0EW04.KF0EW-CURR-DTL == KF0EW08.KF0EW-INIT-DTL) /* DTL blanks*/
    ;
    set KF0EM001 initial;
    set KF0EW03 empty;
    set KF0EW05 empty;
    KF0EW-ADJ-HELD-CNT = 0;
    KF0ES-RESET-MAP1();
    return;
    ;
  end
  ;
  ;
  if (KF0EW02.KF0EW-CURR-HDR != KF0EW03.KF0EW-PREV-HDR) /* HDR changed*/
    KF0EW-ADJ-HELD-CNT = 0;
    KF0ES-PROC-ADJ-HDR(); /* Process Adj HDR info*/
    ;
  else /* no HDR change*/
    if (KF0EW04.KF0EW-CURR-DTL != KF0EW05.KF0EW-PREV-DTL) /* DTL changed*/
      KF0ES-PROC-ADJ-DTL(); /* Process Adj DTL info*/
      ;
    else /* no DTL change*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0042); /* No changes made*/
      ;
    end
  end
  ;
  ;
end // end KF0ES-PROC1-ENTER

// Process Fastpath from KF0EM001
Function KF0ES-PROC1-FPATH()
   /* **********************************************************************/
   /* Process Fast Path for KF0EM001*/
   /* **********************************************************************/
  ;
  if (converseVar.eventKey is pf12)
    converseLib.validationFailed(0004); /* Can't fastpath w/ pfkey*/
    KF0EW-ERR-FL = "Y";
    set KF0EM001.CATOAP cursor, bold;
  else
    COMMAREA.CATOAP = KF0EM001.CATOAP;
    COMMAREA.CAITEM = KF0EM001.CAITEM;
    COMMAREA.CAUSERA = " ";
    if (COMMAREA.CATOSYS == COMMAREA.CACURSYS)
      COMMAREA.CAUSERA = KFWREC.KFW-GROUP;
    end
    XSEXIT();
    set KF0EM001.CATOAP bold, cursor; /* unsuccessful fastpath*/
    KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG;
    KF0EW-ERR-FL = "Y";
  end
  ;
end // end KF0ES-PROC1-FPATH

// CANCEL key pressed
Function KF0ES-PROC1-PA2()
   /* **********************************************************************/
   /* Process CANCEL key*/
   /* **********************************************************************/
  ;
  if (KF0EW02.KF0EW-CURR-HDR == KF0EW03.KF0EW-PREV-HDR /* no hdr change*/
   && KF0EW04.KF0EW-CURR-DTL == KF0EW05.KF0EW-PREV-DTL) /* no dtl change*/
    ;
    KF0EW01.KF0EW-ADJ-HELD-CNT = 0; /* reset held adj cnt to 0*/
    set KF0EW02 empty; /* init CURR-HDR*/
    set KF0EW03 empty; /* init PREV-HDR*/
    set KF0EW04 empty; /* init CURR-DTL*/
    set KF0EW05 empty; /* init PREV-DTL*/
    ;
  else
    ;
    set KF0EW02 empty; /* init CURR-HDR*/
    set KF0EW04 empty; /* init CURR-DTL*/
    set KF0EW05 empty; /* init PREV-DTL*/
    converseLib.validationFailed(0029); /* Updates cancelled*/
    ;
  end
  ;
end // end KF0ES-PROC1-PA2

// Valid PFKEY pressed
Function KF0ES-PROC1-PFKEYS()
   /* **********************************************************************/
   /* Process valid PFkey was pressed*/
   /* PF1, PF3, PF4, PF9, PF5, PF17 or PF18*/
   /* **********************************************************************/
  ;
  if (KF0EW02.KF0EW-CURR-HDR == KF0EW03.KF0EW-PREV-HDR /* no HDR chng*/
   && KF0EW04.KF0EW-CURR-DTL == KF0EW05.KF0EW-PREV-DTL) /* no DTL chng*/
    if (KF0EM001.CATOAP != " ") /* Fast path was filled*/
      converseLib.validationFailed(0004); /* Can't Fastpath & PFkey*/
      KF0EW-ERR-FL = "Y";
      set KF0EM001.CATOAP cursor, bold;
      return;
    else
      if (KF0EM001.CAITEM != " ") /* Fast path item was filled*/
        KF0EM001.CAITEM = " ";
      end
    end
  else /* KF0EM001 changed*/
    if (KF0EW04.KF0EW-CURR-DTL != KF0EW05.KF0EW-PREV-DTL) /* DTL chng*/
      converseLib.validationFailed(0031); /* Can't PFkey w/ changes*/
      KF0EW-ERR-FL = "Y";
      return;
    else /* HDR chng*/
      if (converseVar.eventKey is pf1 /* HELP key is pressed*/
       || converseVar.eventKey is pf3) /* RETURN key is pressed*/
      else
        converseLib.validationFailed(0031); /* Can't PFkey w/ changes*/
        KF0EW-ERR-FL = "Y";
        return;
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf1) /* HELP key is pressed*/
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help screen*/
    KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    KF0EW-ERR-FL = "Y";
  end
  ;
  if (converseVar.eventKey is pf3) /* RETURN key is pressed*/
    COMMAREA.CATOAP = "KF0A";
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = KFWREC.KFW-GROUP;
    XSEXIT(); /* transfer module*/
    KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    KF0EW-ERR-FL = "Y";
  end
  ;
  if (converseVar.eventKey is pf4) /* RETURN key is pressed*/
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to GOAL menu*/
    KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    KF0EW-ERR-FL = "Y";
  end
  ;
  if (converseVar.eventKey is pf9) /* RE-ACTIVATE adjustment*/
    KF0EM001.KF0EM-XXX-STAT = "A";
    KF0EW04.XXX-STAT = "A";
    KF0EW01.KF0EW-PROC-TYP-IND = "U";
    KF0ES-UPD-TB1-PROC(); /* Update process for map1*/
    return;
  end
  ;
  if (converseVar.eventKey is pf5) /* Go to COMMENTS screen*/
    return; /* everything ok when this point is reached.*/
                              /* FLOW area will handle the needed routing.*/
  end
  ;
  if (converseVar.eventKey is pf17 /* prev selected ADJ record or*/
   || converseVar.eventKey is pf18) /* next selected ADJ record*/
    KF0ES-PROC1-SCROLL();
  end
  ;
  ;
end // end KF0ES-PROC1-PFKEYS

// Scroll selected Adjustment PTR
Function KF0ES-PROC1-SCROLL()
   /* **********************************************************************/
   /* Process Scroll to prev or next selected Adjustment record*/
   /* **********************************************************************/
  ;
  if (converseVar.eventKey is pf17) /* PREV adjustment*/
    ;
    if (KF0EW-ADJ-PTR <= 1)
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0067); /* already on first sel Adj*/
    else
      KF0EW-ADJ-PTR = KF0EW-ADJ-PTR - 1;
    end
    ;
  else /* NEXT adjustment*/
    ;
    if (KF0EW-ADJ-PTR >= KF0EW-ADJ-HELD-CNT)
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0066); /* already on last sel Adj*/
    else
      KF0EW-ADJ-PTR = KF0EW-ADJ-PTR + 1;
    end
    ;
  end
  ;
end // end KF0ES-PROC1-SCROLL

// ENTER key pressed
Function KF0ES-PROC2-ENTER()
   /* **********************************************************************/
   /* Process ENTER for KF0EM002*/
   /* **********************************************************************/
  ;
  if (KF0EM002.CATOAP != " ") /* Fast path was filled*/
    KF0ES-PROC2-FPATH(); /* process fastpath*/
    if (KF0EW-ERR-FL == "Y")
      return;
    end
  else
    if (KF0EM002.CAITEM != " ") /* Fast path item was filled*/
      KF0EM002.CAITEM = " ";
    end
  end
  ;
  ;
  if (KF0EW06.KF0EW-CURR-CMT != KF0EW07.KF0EW-PREV-CMT) /* CMT changed*/
    if (converseVar.eventKey is pf12) /* Edit-Only key was pressed*/
      converseLib.validationFailed(0027); /* Press enter again*/
      ;
    else /* Enter was pressed*/
      KF0ES-UPD-TB2-PROC(); /* Update process for map2*/
      ;
    end
    ;
  else /* no CMT changes*/
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0042); /* No changes made*/
    ;
  end
  ;
  ;
end // end KF0ES-PROC2-ENTER

// Process Fastpath from KF0EM002
Function KF0ES-PROC2-FPATH()
   /* **********************************************************************/
   /* Process Fast Path for KF0EM002*/
   /* **********************************************************************/
  ;
  if (converseVar.eventKey is pf12)
    converseLib.validationFailed(0004); /* Can't fastpath w/ pfkey*/
    KF0EW-ERR-FL = "Y";
    set KF0EM002.CATOAP cursor, bold;
  else
    if (KF0EW-CMT-MAX-PG > 0) /* there are TSQ pages created*/
      KF0ES-PURGE-TSQ(); /* purge temp sto*/
    end
    COMMAREA.CATOAP = KF0EM002.CATOAP;
    COMMAREA.CAITEM = KF0EM002.CAITEM;
    COMMAREA.CAUSERA = " ";
    if (COMMAREA.CATOSYS == COMMAREA.CAFRMSYS)
      COMMAREA.CAUSERA = KFWREC.KFW-GROUP;
    end
    XSEXIT();
    set KF0EM002.CATOAP bold, cursor; /* unsuccessful fastpath*/
    KF0EM002.VAGen_EZEMSG = COMMAREA.CAMSG;
    KF0EW-ERR-FL = "Y";
  end
  ;
end // end KF0ES-PROC2-FPATH

// CANCEL key pressed
Function KF0ES-PROC2-PA2()
   /* **********************************************************************/
   /* Process CANCEL key -- refresh adjustment record and reload comments*/
   /* **********************************************************************/
  ;
  KF0ES-FIND-VSNADJ(); /* re-read adj rec*/
  ;
  if (KF0EW-VSNADJ01-FOUND-FL == "N")
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0068);
    return;
  else
    if (KF0EW-ERR-FL == "Y")
      return;
    end
  end
  ;
  KF0ES-ADJ-TO-PDTL(); /* Move VSNADJ01 to PREV-DTL*/
  ;
  converseLib.validationFailed(0029); /* Updates cancelled*/
  ;
end // end KF0ES-PROC2-PA2

// Valid PFkey pressed in map2
Function KF0ES-PROC2-PFKEYS()
   /* **********************************************************************/
   /* Process valid PFkey was pressed*/
   /* PF1, PF3, PF4, PF7, PF8, PF17 or PF18*/
   /* **********************************************************************/
  ;
  if (KF0EW06.KF0EW-CURR-CMT != KF0EW07.KF0EW-PREV-CMT) /* CMT changed*/
    converseLib.validationFailed(0031); /* Can't PFkey w/ changes*/
    KF0EW-ERR-FL = "Y";
    return;
  else
    if (KF0EM002.CATOAP != " ") /* Fast path was filled*/
      converseLib.validationFailed(0004); /* Can't Fastpath & PFkey*/
      KF0EW-ERR-FL = "Y";
      set KF0EM002.CATOAP cursor, bold;
      return;
    else
      if (KF0EM002.CAITEM != " ") /* Fast path item was filled*/
        KF0EM002.CAITEM = " ";
      end
    end
  end
  ;
  ;
  if (converseVar.eventKey is pf1) /* HELP key is pressed*/
    if (KF0EW-CMT-MAX-PG > 0) /* TSQ created*/
      KF0ES-PURGE-TSQ(); /* purge TSQ*/
    end
    ;
    COMMAREA.CAUSERA = " ";
    XSPF1(); /* transfer to help screen*/
    KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    KF0EW-ERR-FL = "Y";
    ;
  end
  ;
  if (converseVar.eventKey is pf3) /* RETURN key is pressed*/
    if (KF0EW-CMT-MAX-PG > 0) /* TSQ created*/
      KF0ES-PURGE-TSQ(); /* purge TSQ*/
    end
    ;
    return; /* return to KF0EM001*/
    ;
  end
  ;
  if (converseVar.eventKey is pf4) /* RETURN key is pressed*/
    if (KF0EW-CMT-MAX-PG > 0) /* TSQ created*/
      KF0ES-PURGE-TSQ(); /* purge TSQ*/
    end
    ;
    COMMAREA.CAITEM = " ";
    COMMAREA.CAUSERA = " ";
    XSPF4(); /* transfer to GOAL menu*/
    KF0EM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* error*/
    KF0EW-ERR-FL = "Y";
    ;
  end
  ;
  if (converseVar.eventKey is pf7 /* Page up was pressed*/
   || converseVar.eventKey is pf8) /* Page dn was pressed*/
    KF0ES-PROC2-SCROLL(); /* Scroll comments*/
    return;
  end
  ;
  if (converseVar.eventKey is pf17 /* prev selected ADJ record or*/
   || converseVar.eventKey is pf18) /* next selected ADJ record*/
    ;
    KF0ES-PROC1-SCROLL(); /* next or previous adjustment*/
    ;
    if (KF0EW-ERR-FL != "Y" /* no errors and*/
     && KF0EW-CMT-MAX-PG > 0) /* TSQ created*/
      KF0ES-PURGE-TSQ(); /* purge TSQ*/
    end
    ;
  end
  ;
  ;
end // end KF0ES-PROC2-PFKEYS

// Scroll comments screen
Function KF0ES-PROC2-SCROLL()
   /* **********************************************************************/
   /* Process Scroll to prev or next comment page*/
   /* **********************************************************************/
  ;
  if (converseVar.eventKey is pf7) /* PREV comment page*/
    ;
    if (KF0EW-CMT-CURR-PG <= 1)
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0003); /* already on first page*/
    else
      KF0EW-CMT-CURR-PG = KF0EW-CMT-CURR-PG - 1;
    end
    ;
  else /* NEXT comment page*/
    ;
    if (KF0EW-CMT-CURR-PG >= KF0EW-CMT-MAX-PG)
      if (KF0EW-PROTECT-ATTR-FL == "N"
       && KF0EW07.CO-COMNT[9] != " "
       && COMMAREA.CAADDFL == "Y")
        set KF0EW07 empty;
        KF0ES-ADD-TSQ(); /* add another page and*/
        move KF0EW-CMT-MAX-PG to KF0EW-CMT-CURR-PG withV60Compat; /* goto that page*/
      else
        KF0EW-ERR-FL = "Y";
        converseLib.validationFailed(0009); /* already on last page*/
      end
    else
      KF0EW-CMT-CURR-PG = KF0EW-CMT-CURR-PG + 1;
    end
    ;
  end
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors*/
    KF0ES-LD-MAP2-CHG(); /* load page from TSQ to map2*/
  end
  ;
end // end KF0ES-PROC2-SCROLL

// Purge TSQ
Function KF0ES-PURGE-TSQ()
   /* **********************************************************************/
   /* Purge temp storage*/
   /* **********************************************************************/
  ;
  set TA5REC empty;
  TA5REC.TA5FNCCD = "P"; /* read temp storage*/
  TA5REC.TA5APPID = KF0EW-TSQ-APPL; /* application ID*/
  KF0EW07.KF0EW-COMMENT-PAGE-LENGTH = KF0EW-TSQ-LEN;
                                           /* temp storage length*/
  ;
  try
    call "TA0050" (KF0EW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage routine*/
  ;
  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
     /* next sentence*/
  else /* an error occurred*/
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post*/
    TA1REC.TA1LOCAT[1] = "PURGE TS"; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass control to menu*/
    converseLib.validationFailed(34); /* temp storage error*/
    ;
  end
  ;
end // end KF0ES-PURGE-TSQ

// Read TSQ page
Function KF0ES-READ-TSQ()
   /* **********************************************************************/
   /* Read temp storage*/
   /* **********************************************************************/
  ;
  TA5REC.TA5FNCCD = "R"; /* read temp storage*/
  TA5REC.TA5APPID = KF0EW-TSQ-APPL; /* application ID*/
  KF0EW07.KF0EW-COMMENT-PAGE-LENGTH = KF0EW-TSQ-LEN;
                                           /* temp storage length*/
  ;
  try
    call "TA0050" (KF0EW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage routine*/
  ;
  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
     /* next sentence*/
  else /* an error occurred*/
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post*/
    TA1REC.TA1LOCAT[1] = "READ TS "; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass control to menu*/
    converseLib.validationFailed(34); /* temp storage error*/
    ;
  end
  ;
end // end KF0ES-READ-TSQ

// Apply adjustment & Recalc rate
Function KF0ES-RECALC-RATES()
   /* **********************************************************************/
   /* Apply the net seasonal sales adjustment amount to the formula*/
   /* row and recalculate the overide rate.*/
   /* **********************************************************************/
  ;
  VFRMLA01.CO-TOT-SESNSLS-AMT = VFRMLA01.CO-TOT-SESNSLS-AMT                             + KF0EW01.KF0EW-FP-NET-AMT;
  ;
  if (VFRMLA01.CO-TOT-SESNSLS-AMT <= 0)
    VFRMLA01.CO-SREP-OVRD-RATE = 0;
  else
    KF0EW01.KF0EW-FP-WORK-AMT = VFRMLA01.CO-SREP-TRGT-INCM                             * VFRMLA01.CO-TRGT-COMM-PCT;
    VFRMLA01.CO-SREP-OVRD-RATE = mathLib.round(KF0EW01.KF0EW-FP-WORK-AMT / 2                             / VFRMLA01.CO-TOT-SESNSLS-AMT, -mathLib.decimals(VFRMLA01.CO-SREP-OVRD-RATE));
  end
  ;
end // end KF0ES-RECALC-RATES

// Reset KF0EM001 attributes
Function KF0ES-RESET-MAP1()
   /* **********************************************************************/
   /* Reset attributes for KF0EM001*/
   /* **********************************************************************/
  ;
   /* Set special PFkeys -- PF17 & PF18 valid only if several adjustments*/
   /* were selected from KF0F*/
  ;
  if (KF0EW-ADJ-HELD-CNT > 1) /* several adj recs were selected*/
    set KF0EM001.KF0EM-PF17-DISPLAY initialAttributes;
    set KF0EM001.KF0EM-PF18-DISPLAY initialAttributes;
  else
    set KF0EM001.KF0EM-PF17-DISPLAY invisible, skip;
    set KF0EM001.KF0EM-PF18-DISPLAY invisible, skip;
  end
  ;
   /* Set special PFkeys -- PF9 used to re-activate an inactive adjustment*/
   /* record is valid only if Userid is authorized*/
   /* to add and adjustment held is inactive.*/
  ;
  if (COMMAREA.CAADDFL == "Y" /* has add authority*/
   && KF0EW05.XXX-STAT == "I") /* adj is inactive*/
    set KF0EM001.KF0EM-PF9-DISPLAY initialAttributes;
  else
    set KF0EM001.KF0EM-PF9-DISPLAY invisible, skip;
  end
  ;
   /* Set special PFkeys -- PF16 used to duplicate from a displayed*/
   /* adjustment on the screen.  this is allowed*/
   /* only if Userid has add authority.*/
  ;
  if (COMMAREA.CAADDFL == "Y" /* has add authority*/
   && KF0EW05.XXX-STAT == "A") /* has displayed an active adj*/
    set KF0EM001.KF0EM-PF16-DISPLAY initialAttributes;
  else
    set KF0EM001.KF0EM-PF16-DISPLAY invisible, skip;
  end
  ;
   /* Set special PFkeys -- PF5 used to transfer to the comments screen*/
   /* valid only if there is a currently held Adj.*/
  ;
  if (KF0EW03.CU-CO-ID != 0) /* PREV-HDR has value*/
    set KF0EM001.KF0EM-PF5-DISPLAY initialAttributes;
  else
    set KF0EM001.KF0EM-PF5-DISPLAY invisible, skip;
  end
  ;
   /* Reset detail fields*/
  ;
  if (COMMAREA.CAADDFL == "Y" /* has add authority*/
   || COMMAREA.CACHGFL == "Y") /* has chg authority*/
    if (KF0EW05.XXX-STAT == "A" /* adj is active*/
     || KF0EW05.XXX-STAT == " ") /* or was empty*/
      KF0EW-PROTECT-ATTR-FL = "N";
    else
      KF0EW-PROTECT-ATTR-FL = "Y";
    end
  else
    KF0EW-PROTECT-ATTR-FL = "Y";
  end
  ;
  if (KF0EW-PROTECT-ATTR-FL == "Y") /* restricted access*/
    set KF0EM001.KF0EM-PF12-DISPLAY invisible, skip;
    set KF0EM001.KF0EM-MGMT-SAGCY-ID skip;
    set KF0EM001.KF0EM-MGMT-SREP-ID skip;
    set KF0EM001.KF0EM-CO-CUST-SLS-ADJAMT skip;
    set KF0EM001.KF0EM-XXX-STAT skip;
    set KF0EM001.KF0EM-CO-ADJ-MGR-SLS-FL skip;
    set KF0EM001.KF0EM-CO-SLS-ADJ-EDT skip;
    set KF0EM001.KF0EM-CO-SLS-ADJ-XDT skip;
  else
    set KF0EM001.KF0EM-PF12-DISPLAY initialAttributes;
    set KF0EM001.KF0EM-MGMT-SAGCY-ID initialAttributes;
    set KF0EM001.KF0EM-MGMT-SREP-ID initialAttributes;
    set KF0EM001.KF0EM-CO-CUST-SLS-ADJAMT initialAttributes;
    set KF0EM001.KF0EM-XXX-STAT initialAttributes;
    set KF0EM001.KF0EM-CO-ADJ-MGR-SLS-FL initialAttributes;
    set KF0EM001.KF0EM-CO-SLS-ADJ-EDT initialAttributes;
    set KF0EM001.KF0EM-CO-SLS-ADJ-XDT initialAttributes;
  end
  ;
   /* Reset header fields*/
  ;
  set KF0EM001.KF0EM-XSE-SESN-CD cursor, initialAttributes;
  set KF0EM001.KF0EM-YNS-SESN-YR initialAttributes;
  set KF0EM001.KF0EM-CU-CO-ID initialAttributes;
  set KF0EM001.KF0EM-CU-STOR-ID initialAttributes;
  set KF0EM001.KF0EM-XNX-DEPT-ID-XREF initialAttributes;
  set KF0EM001.KF0EM-YSB-SLS-RESP-CD initialAttributes;
  ;
   /* Reset fastpath fields*/
  ;
  set KF0EM001.CATOAP initialAttributes;
  set KF0EM001.CAITEM initialAttributes;
  ;
end // end KF0ES-RESET-MAP1

// Reset KF0EM002 attributes
Function KF0ES-RESET-MAP2()
   /* **********************************************************************/
   /* Reset attributes for KF0EM002*/
   /* **********************************************************************/
  ;
   /* Set special PFkeys -- PF17 & PF18 valid only if several adjustments*/
   /* were selected from KF0F*/
  ;
  if (KF0EW-ADJ-HELD-CNT > 1) /* several adj recs were selected*/
    set KF0EM002.KF0EM-PF17-DISPLAY initialAttributes;
    set KF0EM002.KF0EM-PF18-DISPLAY initialAttributes;
  else
    set KF0EM002.KF0EM-PF17-DISPLAY invisible, skip;
    set KF0EM002.KF0EM-PF18-DISPLAY invisible, skip;
  end
  ;
   /* Reset detail fields*/
  ;
  if (COMMAREA.CAADDFL == "Y" /* has add authority*/
   || COMMAREA.CACHGFL == "Y") /* has chg authority*/
    if (KF0EW05.XXX-STAT == "A" /* adj is active*/
     || KF0EW05.XXX-STAT == " ") /* or was empty*/
      KF0EW-PROTECT-ATTR-FL = "N";
      set KF0EM002.KF0EM-PF12-DISPLAY initialAttributes;
      set KF0EM002.KF0EM-CO-COMNTS[1] cursor;
    else
      KF0EW-PROTECT-ATTR-FL = "Y";
      set KF0EM002.KF0EM-PF12-DISPLAY invisible, skip;
      set KF0EM002.CATOAP cursor;
    end
  else
    KF0EW-PROTECT-ATTR-FL = "Y";
    set KF0EM002.KF0EM-PF12-DISPLAY invisible, skip;
    set KF0EM002.CATOAP cursor;
  end
  ;
  KF0EW-CMT-PTR = 0;
  while (KF0EW-CMT-PTR < 9)
    KF0EW-CMT-PTR = KF0EW-CMT-PTR + 1;
    if (KF0EW-PROTECT-ATTR-FL == "Y") /* restricted access*/
      set KF0EM002.KF0EM-CO-COMNTS[KF0EW-CMT-PTR] skip;
    else
      set KF0EM002.KF0EM-CO-COMNTS[KF0EW-CMT-PTR] initialAttributes;
    end
  end
  ;
   /* Reset fastpath fields*/
  ;
  set KF0EM002.CATOAP initialAttributes;
  set KF0EM002.CAITEM initialAttributes;
  ;
end // end KF0ES-RESET-MAP2

// Call IO3950 fetch vfrmla01 row
Function KF0ES-SCAN-VFRMLA()
   /* **********************************************************************/
   /* KF0ES-SCAN-VFRMLA*/
   /* This routine calls IO3950 to fetch the next Formula row in the*/
   /* opened cursor.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3950" ("N2", SQLCA, VFRMLA01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VFRMLA01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "N2      "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3950"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-SCAN-VFRMLA

// Call IO2480 fetch vkocom01 row
Function KF0ES-SCAN-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-SCAN-VKOCOM*/
   /* This routine calls IO2480 to fetch the next Comment row in the*/
   /* opened cursor.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("N1", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE == 0) /* record found*/
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* end of cursor*/
      KF0EW-MORE-VKOCOM01-FL = "N";
    else
      KF0EW-ERR-FL = "Y";
      set ERRSQLCA empty;
      move SQLCA to ERRSQLCA withV60Compat;
      TA1REC.TA1TYPE = "DB2"; /* db2 error*/
      TA1REC.TA1FUNC = "RETN";
      TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
      TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
      TA1REC.TA1LOCAT[3] = "N1      "; /* error location*/
      TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
      try
        call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
      end /* message formatter*/
      COMMAREA.CAUSERA = " "; /* clear commarea*/
      VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
      VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
      sysLib.rollback();
      VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
      
      XSPF4(); /* pass to goal menu*/
      converseLib.validationFailed(0035); /* error -- contact help desk*/
    end
  end
  ;
end // end KF0ES-SCAN-VKOCOM

// Move CURR-DTL to VSNADJ01
Function KF0ES-SET-ADJ-DATA()
   /* **********************************************************************/
   /* move CURR-DTL to VSNADJ01*/
   /* **********************************************************************/
  ;
  VSNADJ01.CO-MGMT-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
  VSNADJ01.CO-MGMT-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
  VSNADJ01.CO-CUST-SLS-ADJAMT = KF0EW04.CO-CUST-SLS-ADJAMT;
  VSNADJ01.XXX-STAT = KF0EW04.XXX-STAT;
  VSNADJ01.CO-ADJ-MGR-SLS-FL = KF0EW04.CO-ADJ-MGR-SLS-FL;
  ;
  VSNADJ01.CO-SLS-ADJ-EDT = KF0EW04.CO-SLS-ADJ-EDT;
  VSNADJ01.CO-SLS-ADJ-XDT = KF0EW04.CO-SLS-ADJ-XDT;
  ;
   /* **********************************************************************/
   /* modify change date and time (change count is handled by IOMOD), and*/
   /* setup userid.*/
   /* **********************************************************************/
  ;
  VSNADJ01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSNADJ01.ZZ-CHNG-DT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  VSNADJ01.ZZ-CHNG-HHMM = KF0EW01.KF0EW-CURR-HHMM;
  ;
end // end KF0ES-SET-ADJ-DATA

// Move CURR-HDR to VSNADJ01
Function KF0ES-SET-ADJ-KEY()
   /* **********************************************************************/
   /* move CURR-HDR to VSNADJ01 keys*/
   /* **********************************************************************/
  ;
  set VSNADJ01 empty;
  ;
  VSNADJ01.XSE-SESN-CD = KF0EW02.XSE-SESN-CD;
  VSNADJ01.YNS-SESN-YR = KF0EW02.YNS-SESN-YR;
  VSNADJ01.CU-CO-ID = KF0EW02.CU-CO-ID;
  VSNADJ01.YSB-SLS-RESP-CD = KF0EW02.YSB-SLS-RESP-CD;
  ;
   /* convert stor id to num format and move to vsnadj01*/
  ;
  KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-CU-STOR-ID;
  KFWREC.KFW-NUM-CHK-LEN = 4;
  KFWREC.KFW-NUM-CHK-FUNC = "CHRTONUM";
  XSKFS-NUM-CHK(); /* convert fr char to numeric fmt*/
  VSNADJ01.CU-STOR-ID = KFWREC.KFW-NUM-CHK-NBR;
  ;
   /* convert dept id to num format and move to vsnadj01*/
  ;
  KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-XNX-DEPT-ID-XREF;
  KFWREC.KFW-NUM-CHK-LEN = 4;
  KFWREC.KFW-NUM-CHK-FUNC = "CHRTONUM";
  XSKFS-NUM-CHK(); /* convert fr char to numeric fmt*/
  VSNADJ01.XNX-DEPT-ID-XREF = KFWREC.KFW-NUM-CHK-NBR;
  ;
end // end KF0ES-SET-ADJ-KEY

// Set initial VSNADJ01 value
Function KF0ES-SET-ADJ-REC()
   /* **********************************************************************/
   /* Set initial value of VSNADJ01 for insert*/
   /* **********************************************************************/
  ;
  KF0ES-SET-ADJ-KEY(); /* Initialize & move CURR-HDR to VSNADJ01*/
  ;
  VSNADJ01.CO-LST-RALGN-DT = 0;
  VSNADJ01.CO-COMNT-ID = 0;
  VSNADJ01.ZZ-SDT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  ;
   /* **********************************************************************/
   /* use the first mgmt-rep/agcy for the perf-rep/agcy*/
   /* **********************************************************************/
  ;
  VSNADJ01.CO-PFRM-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
  VSNADJ01.CO-PFRM-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
  ;
end // end KF0ES-SET-ADJ-REC

// Init VKOAUD01 audit record
Function KF0ES-SET-AUD-REC()
   /* **********************************************************************/
   /* Setup common fields in the KO audit record*/
   /* **********************************************************************/
  ;
  set VKOAUD01 empty;
  ;
  VKOAUD01.XXX-USER-ID = COMMAREA.CAUSERID;
  VKOAUD01.ZZ-SDT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  VKOAUD01.ZZ-SETUP-HHMMSS = KF0EW01.KF0EW-CURR-HHMMSS;
  ;
end // end KF0ES-SET-AUD-REC

// Move CURR-dept to VDEPT001
Function KF0ES-SET-DEPT-KEY()
   /* **********************************************************************/
   /* move CURR-HDR company & department id to VDEPT001  (KUJREC)*/
   /* **********************************************************************/
  ;
  set KUJREC empty;
  ;
  KUJREC.KUCCOID = KF0EW02.CU-CO-ID;
  ;
   /* convert dept id to num format and move to kujrec*/
  ;
  KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-XNX-DEPT-ID-XREF;
  KFWREC.KFW-NUM-CHK-LEN = 4;
  KFWREC.KFW-NUM-CHK-FUNC = "CHRTONUM";
  XSKFS-NUM-CHK(); /* convert fr char to numeric fmt*/
  KUJREC.XNXCD = KFWREC.KFW-NUM-CHK-NBR;
  ;
end // end KF0ES-SET-DEPT-KEY

// Move CURR-stor to VSTORE01
Function KF0ES-SET-STOR-KEY()
   /* **********************************************************************/
   /* move CURR-HDR company & store id to VSTORE01  (KUMREC)*/
   /* **********************************************************************/
  ;
  set KUMREC empty;
  ;
  KUMREC.KUCCOID = KF0EW02.CU-CO-ID;
  ;
   /* convert store id to num format and move to kumrec*/
  ;
  KFWREC.KFW-NUM-CHK-WORD = KF0EW02.KF0EW-CU-STOR-ID;
  KFWREC.KFW-NUM-CHK-LEN = 4;
  KFWREC.KFW-NUM-CHK-FUNC = "CHRTONUM";
  XSKFS-NUM-CHK(); /* convert fr char to numeric fmt*/
  KUMREC.KUMSTRID = KFWREC.KFW-NUM-CHK-NBR;
  ;
end // end KF0ES-SET-STOR-KEY

// Update Adjustment Process
Function KF0ES-UPD-ADJ-PROC()
   /* **********************************************************************/
   /* Update Seasonal Sales Adjustment process*/
   /* **********************************************************************/
  ;
  KF0ES-SET-AUD-REC(); /* init audit record*/
  VKOAUD01.XXX-TBL-NM = "VSNADJ01"; /* set table nm in the audit rec*/
  ;
  if (KF0EW-PROC-TYP-IND == "U") /* update adj row*/
    ;
    VKOAUD01.CO-AUD-TYP-IND = "C";
    VKOAUD01.CO-AUD-FILLR-BFR-LEN = KF0EW01.KF0EW-VSNADJ01-LENGTH;
    VKOAUD01.CO-AUD-FILLR-BFR-TEXT = VSNADJ01.VSNADJ01-GROUP;
    ;
    KF0ES-SET-ADJ-DATA(); /* move changed data to VSNADJ01*/
    ;
    KF0ES-UPDT-VSNADJ(); /* Update VSNADJ01*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was updated by another*/
    end
    ;
  else /* add adj row*/
    ;
    VKOAUD01.CO-AUD-TYP-IND = "A";
    VKOAUD01.CO-AUD-FILLR-BFR-LEN = 1;
    VKOAUD01.CO-AUD-FILLR-BFR-TEXT = " ";
    ;
    KF0ES-SET-ADJ-REC(); /* set VSNADJ01 to initial value*/
    KF0ES-SET-ADJ-DATA(); /* move changed data to VSNADJ01*/
    ;
    KF0ES-ADD-VSNADJ(); /* Add VSNADJ01*/
    ;
    if (SQLCA.VAGen_SQLCODE == -803) /* record to add exists*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was added by another*/
    end
    ;
  end
  ;
  ;
  if (KF0EW-ERR-FL != "Y") /* no DB2 errors*/
    ;
    VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VSNADJ01-LENGTH;
    VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VSNADJ01.VSNADJ01-GROUP;
    ;
    VKOAUD01.SM-SAGCY-ID = VSNADJ01.CO-MGMT-SAGCY-ID;
    VKOAUD01.SM-SREP-ID = VSNADJ01.CO-MGMT-SREP-ID;
    VKOAUD01.CU-CO-ID = VSNADJ01.CU-CO-ID;
    VKOAUD01.CU-STOR-ID = VSNADJ01.CU-STOR-ID;
    VKOAUD01.XNX-DEPT-ID-XREF = VSNADJ01.XNX-DEPT-ID-XREF;
    VKOAUD01.YSB-SLS-RESP-CD = VSNADJ01.YSB-SLS-RESP-CD;
    ;
    KF0ES-ADD-VKOAUD(); /* Add VKOAUD01*/
    ;
  end
  ;
end // end KF0ES-UPD-ADJ-PROC

// Updt*for*each*map*line*comment
Function KF0ES-UPD-CMT-LINE()
   /* **********************************************************************/
   /* Update, change or delete comment rows for each comment line being*/
   /* processed.  Note that this routine is performed only for each*/
   /* comment line on the map that changed.*/
   /* **********************************************************************/
  ;
  KF0ES-SET-AUD-REC(); /* init audit record*/
  VKOAUD01.XXX-TBL-NM = "VKOCOM01"; /* set table nm in the audit rec*/
  ;
  ;
  if (KF0EW07.CO-COMNT[KF0EW-CMT-PTR] != " ") /* cmt-ln had prev value*/
    ;
     /* read comment record and check if it has been updated by another*/
    ;
    VKOCOM01.CO-COMNT-SEQ-NBR = KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR]; /* set comment seq key*/
    KF0ES-FIND-VKOCOM(); /* find comment row*/
    if (KF0EW-ERR-FL == "Y") /* db2 error*/
      return;
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* row not found or is different*/
       || VKOCOM01.ZZ-CHNG-CNT != KF0EW07.ZZ-CHNG-CNT[KF0EW-CMT-PTR])
        KF0EW-ERR-FL = "Y";
        converseLib.validationFailed(0068); /* rec was updated by another*/
        return;
      end
    end
    ;
     /* setup audit record before image*/
    ;
    VKOAUD01.CO-AUD-FILLR-BFR-LEN = KF0EW01.KF0EW-VKOCOM01-LENGTH;
    VKOAUD01.CO-AUD-FILLR-BFR-TEXT = VKOCOM01.VKOCOM01-GROUP;
    ;
     /* setup zz stat fields of VKOCOM01*/
    ;
    VKOCOM01.XXX-USER-ID = COMMAREA.CAUSERID;
    VKOCOM01.ZZ-CHNG-DT = KF0EW-CURR-CCYYMMDD;
    VKOCOM01.ZZ-CHNG-HHMM = KF0EW-CURR-HHMM;
    ;
     /* Update or Delete VKOCOM01 row*/
    ;
    if (KF0EW06.CO-COMNT[KF0EW-CMT-PTR] != " ") /* cmt-ln was changed*/
      VKOAUD01.CO-AUD-TYP-IND = "C";
      VKOCOM01.CO-COMNT = KF0EW06.CO-COMNT[KF0EW-CMT-PTR];
      ;
      KF0ES-UPDT-VKOCOM(); /* Update Vkocom01*/
      ;
      VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VKOCOM01-LENGTH;
      VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VKOCOM01.VKOCOM01-GROUP;
      ;
    else /* cmt-ln was blanked*/
      VKOAUD01.CO-AUD-TYP-IND = "D";
      ;
      KF0ES-DELE-VKOCOM(); /* Delete Vkocom01*/
      ;
      VKOAUD01.CO-AUD-FILLR-AFT-LEN = 1;
      VKOAUD01.CO-AUD-FILLR-AFT-TEXT = " ";
      ;
    end
    ;
     /* Check status after delete or update*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* row to updt or del not found*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was updated by another*/
      return;
    end
    ;
  else /* cmt-ln was previously blank*/
    ;
     /* setup audit record before image*/
    ;
    VKOAUD01.CO-AUD-FILLR-BFR-LEN = 1;
    VKOAUD01.CO-AUD-FILLR-BFR-TEXT = " ";
    VKOAUD01.CO-AUD-TYP-IND = "A";
    ;
     /* setup zz stat fields of VKOCOM01*/
    ;
    VKOCOM01.XXX-USER-ID = COMMAREA.CAUSERID;
    VKOCOM01.ZZ-SDT = KF0EW-CURR-CCYYMMDD;
    VKOCOM01.ZZ-CHNG-DT = KF0EW-CURR-CCYYMMDD;
    VKOCOM01.ZZ-CHNG-HHMM = KF0EW-CURR-HHMM;
    ;
     /* seq key and comment field of VKOCOM01*/
    ;
    VKOCOM01.CO-COMNT = KF0EW06.CO-COMNT[KF0EW-CMT-PTR];
    if (KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR] == 0) /* no seq assigned yet*/
      KF0EW-CMT-HIGHEST-SEQ = KF0EW-CMT-HIGHEST-SEQ + 1;
      KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR] = KF0EW-CMT-HIGHEST-SEQ; /* assign next seq*/
    end
    VKOCOM01.CO-COMNT-SEQ-NBR = KF0EW07.CO-COMNT-SEQ-NBR[KF0EW-CMT-PTR];
    ;
    KF0ES-ADD-VKOCOM(); /* Add Vkocom01*/
    ;
    VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VKOCOM01-LENGTH;
    VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VKOCOM01.VKOCOM01-GROUP;
    ;
    if (SQLCA.VAGen_SQLCODE == -803) /* record to add exists*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was added by another*/
    end
    ;
  end
  ;
  ;
  if (KF0EW-ERR-FL != "Y") /* no DB2 errors*/
    ;
    VKOAUD01.SM-SAGCY-ID = VSNADJ01.CO-MGMT-SAGCY-ID;
    VKOAUD01.SM-SREP-ID = VSNADJ01.CO-MGMT-SREP-ID;
    VKOAUD01.CU-CO-ID = VSNADJ01.CU-CO-ID;
    VKOAUD01.CU-STOR-ID = VSNADJ01.CU-STOR-ID;
    VKOAUD01.XNX-DEPT-ID-XREF = VSNADJ01.XNX-DEPT-ID-XREF;
    VKOAUD01.YSB-SLS-RESP-CD = VSNADJ01.YSB-SLS-RESP-CD;
    ;
    KF0ES-ADD-VKOAUD(); /* Add VKOAUD01*/
    ;
  end
  ;
end // end KF0ES-UPD-CMT-LINE

// Update Comments Process
Function KF0ES-UPD-CMT-PROC()
   /* **********************************************************************/
   /* Update Comments Process*/
   /* **********************************************************************/
  ;
  KF0EW-CMT-PTR = 0;
  ;
  while (KF0EW-CMT-PTR < 9 /* for all lines on the map*/
   && KF0EW-ERR-FL != "Y") /* and no errors*/
    ;
    KF0EW-CMT-PTR = KF0EW-CMT-PTR + 1;
    ;
    if (KF0EW06.CO-COMNT[KF0EW-CMT-PTR]
     != KF0EW07.CO-COMNT[KF0EW-CMT-PTR]) /* for each comment line that*/
                                         /* changed on the map*/
      ;
      set VKOCOM01 empty; /* init comment DB2 IO area*/
      VKOCOM01.CO-COMNT-ID = VSNADJ01.CO-COMNT-ID;
      ;
      KF0ES-UPD-CMT-LINE(); /* upd cmt tbl for each map line*/
      ;
    end
    ;
  end
  ;
  if (KF0EW-ERR-FL == "Y") /* errors*/
    return;
  end
  ;
   /* update TSQ page after updating the comments table*/
  ;
  KF0EW07.KF0EW-PREV-CMT = KF0EW06.KF0EW-CURR-CMT;
  ;
  KF0ES-COMPRESS-CMT(); /* compress comment lines*/
  ;
  if (KF0EW-CMT-MAX-PG == 0) /* no TSQ rec created yet for pg*/
    KF0ES-ADD-TSQ(); /* Add page*/
  else /* TSQ page already created*/
    TA5REC.TA5TSQIX = KF0EW-CMT-CURR-PG; /* set page number*/
    KF0ES-UPDT-TSQ(); /* Update page*/
  end
  ;
end // end KF0ES-UPD-CMT-PROC

// Retr next comnt-id & updt Adj
Function KF0ES-UPD-CTL-PROC()
   /* **********************************************************************/
   /* Retrieve next comment id and update Adjustment record*/
   /* **********************************************************************/
  ;
   /* Get next comment id and update KO control record*/
  ;
  KF0ES-FIND-VKOCTL(); /* get next comment-id*/
  ;
  if (KF0EW-ERR-FL == "Y") /* error getting next comment id*/
    return;
    ;
  else
    KF0EW-SAVE-CO-COMNT-ID = VKOCTL01.CO-NXT-COMNT-ID;
    KF0ES-UPDT-VKOCTL(); /* increment next comment-id ctr*/
    ;
    if (KF0EW-ERR-FL == "Y") /* error updating the control rec*/
      return;
      ;
    end
  end
  ;
   /* Update Adjustment record's comment id field*/
  ;
  KF0ES-SET-AUD-REC(); /* init audit record*/
  VKOAUD01.XXX-TBL-NM = "VSNADJ01"; /* set table nm in the audit rec*/
  VKOAUD01.CO-AUD-TYP-IND = "C";
  VKOAUD01.CO-AUD-FILLR-BFR-LEN = KF0EW01.KF0EW-VSNADJ01-LENGTH;
  VKOAUD01.CO-AUD-FILLR-BFR-TEXT = VSNADJ01.VSNADJ01-GROUP;
  ;
  VSNADJ01.CO-COMNT-ID = KF0EW-SAVE-CO-COMNT-ID;
  VSNADJ01.XXX-USER-ID = COMMAREA.CAUSERID;
  VSNADJ01.ZZ-CHNG-DT = KF0EW-CURR-CCYYMMDD;
  VSNADJ01.ZZ-CHNG-HHMM = KF0EW-CURR-HHMM;
  ;
  KF0ES-UPDT-VSNADJ(); /* Update VSNADJ01*/
  ;
  if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
    KF0EW-ERR-FL = "Y";
    converseLib.validationFailed(0068); /* rec was updated by another*/
  end
  ;
  ;
  if (KF0EW-ERR-FL != "Y") /* no DB2 errors*/
    ;
    VKOAUD01.SM-SAGCY-ID = VSNADJ01.CO-MGMT-SAGCY-ID;
    VKOAUD01.SM-SREP-ID = VSNADJ01.CO-MGMT-SREP-ID;
    VKOAUD01.CU-CO-ID = VSNADJ01.CU-CO-ID;
    VKOAUD01.CU-STOR-ID = VSNADJ01.CU-STOR-ID;
    VKOAUD01.XNX-DEPT-ID-XREF = VSNADJ01.XNX-DEPT-ID-XREF;
    VKOAUD01.YSB-SLS-RESP-CD = VSNADJ01.YSB-SLS-RESP-CD;
    VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VSNADJ01-LENGTH;
    VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VSNADJ01.VSNADJ01-GROUP;
    ;
    KF0ES-ADD-VKOAUD(); /* Add VKOAUD01*/
    ;
  end
  ;
end // end KF0ES-UPD-CTL-PROC

// Upd all Frmla w/n given parms
Function KF0ES-UPD-FRL-LOOP()
   /* **********************************************************************/
   /* Update all Formula records within the specified parameters*/
   /* **********************************************************************/
  ;
  KF0EW-MORE-VFRMLA01-FL = "Y"; /* more formula rows*/
  ;
  set VFRMLA01 empty;
  VFRMLA01.SM-SAGCY-ID = KF0EW01.KF0EW-FP-SAGCY-ID;
  VFRMLA01.SM-SREP-ID = KF0EW01.KF0EW-FP-SREP-ID;
  VFRMLA01.XSE-SESN-CD = VSNADJ01.XSE-SESN-CD;
  VFRMLA01.YNS-SESN-YR = VSNADJ01.YNS-SESN-YR + 1; /* same season next yr*/
  VFRMLA01.CO-OVRD-RATE-XDT = KF0EW01.KF0EW-FP-EDT;
  ;
  KF0ES-OPEN-VFRMLA(); /* open VFRMLA01 cursor*/
  ;
  while (KF0EW-MORE-VFRMLA01-FL == "Y" /* more formula rows*/
   && KF0EW-ERR-FL != "Y") /* and no errors*/
    ;
    KF0ES-SCAN-VFRMLA(); /* fetch VFRMLA01 row*/
    ;
    if (SQLCA.VAGen_SQLCODE == 100) /* end of Formula table cursor*/
      KF0EW-MORE-VFRMLA01-FL = "N";
      KF0ES-CLOS-VFRMLA(); /* close VFRMLA01 cursor*/
    else
      if (SQLCA.VAGen_SQLCODE == 0) /* row found*/
        if (VFRMLA01.CO-OVRD-RATE-EDT < KF0EW01.KF0EW-FP-EDT)
          KF0ES-UPD-FRL-SPLT(); /* split formula row and update*/
          ;
        else
          KF0ES-UPD-FRL-REG(); /* update formula row, no splits*/
          ;
        end
        ;
      end
    end
    ;
  end /* end-while more formula rows*/
  ;
end // end KF0ES-UPD-FRL-LOOP

// Update Formula Process
Function KF0ES-UPD-FRL-PROC()
   /* **********************************************************************/
   /* Update Formula table process*/
   /* **********************************************************************/
  ;
  if (KF0EW-PROC-TYP-IND == "A") /* adjusment record was added*/
     /*  */
     /* use new amount, new edt date, and new mgmt rep/agency*/
     /*  */
    KF0EW01.KF0EW-FP-NET-AMT = KF0EW04.CO-CUST-SLS-ADJAMT;
    KF0EW01.KF0EW-FP-EDT = KF0EW04.CO-SLS-ADJ-EDT;
    KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
    KF0EW01.KF0EW-FP-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
    KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
     /*  */
     /* if entered w/ exp date, backout new amount from new exp dt*/
     /* onwards for the new mgmt rep/agency*/
     /*  */
    if (KF0EW04.CO-SLS-ADJ-XDT < 999999999 /* has expire date*/
     && KF0EW-ERR-FL != "Y")              
      KF0EW01.KF0EW-FP-NET-AMT = KF0EW04.CO-CUST-SLS-ADJAMT * -1;
      KF0EW01.KF0EW-FP-EDT = KF0EW04.CO-SLS-ADJ-XDT;
      KF0ES-GET-DAY-AFT(); /* get next day*/
      KF0EW01.KF0EW-FP-EDT = TA2REC.TA2GRGGN;
      KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
      KF0EW01.KF0EW-FP-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
      KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
    end
    ;
    return;
    ;
  end
   /* **********************************************************************/
  ;
  if (KF0EW04.XXX-STAT == "I" /* adjusment record de-activated*/
   && KF0EW05.XXX-STAT == "A")
     /*  */
     /* use -(old amount), old date, and old mgmt rep/agency*/
     /*  */
    KF0EW01.KF0EW-FP-NET-AMT = KF0EW05.CO-CUST-SLS-ADJAMT * -1;
    KF0EW01.KF0EW-FP-EDT = KF0EW05.CO-SLS-ADJ-EDT;
    KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
    KF0EW01.KF0EW-FP-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
    KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
     /*  */
     /* if entered w/ exp date, addback old amount from old exp dt*/
     /* onwards for the old mgmt rep/agency*/
     /*  */
    if (KF0EW05.CO-SLS-ADJ-XDT < 999999999 /* has expire date*/
     && KF0EW-ERR-FL != "Y")              
      KF0EW01.KF0EW-FP-NET-AMT = KF0EW05.CO-CUST-SLS-ADJAMT;
      KF0EW01.KF0EW-FP-EDT = KF0EW05.CO-SLS-ADJ-XDT;
      KF0ES-GET-DAY-AFT(); /* get next day*/
      KF0EW01.KF0EW-FP-EDT = TA2REC.TA2GRGGN;
      KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
      KF0EW01.KF0EW-FP-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
      KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
    end
    ;
    return;
    ;
  end
   /* **********************************************************************/
  ;
  if (KF0EW04.XXX-STAT == "A" /* adjusment record re-activated*/
   && KF0EW05.XXX-STAT == "I")
     /*  */
     /* use old amount, last adj chg date, and old mgmt rep/agency*/
     /*  */
    KF0EW01.KF0EW-FP-NET-AMT = KF0EW05.CO-CUST-SLS-ADJAMT;
    KF0EW01.KF0EW-FP-EDT = KF0EW05.CO-SLS-ADJ-EDT;
    KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
    KF0EW01.KF0EW-FP-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
    KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
     /*  */
     /* if entered w/ exp date, backout old amount from old exp dt*/
     /* onwards for the old mgmt rep/agency*/
     /*  */
    if (KF0EW05.CO-SLS-ADJ-XDT < 999999999 /* has expire date*/
     && KF0EW-ERR-FL != "Y")              
      KF0EW01.KF0EW-FP-NET-AMT = KF0EW05.CO-CUST-SLS-ADJAMT * -1;
      KF0EW01.KF0EW-FP-EDT = KF0EW05.CO-SLS-ADJ-XDT;
      KF0ES-GET-DAY-AFT(); /* get next day*/
      KF0EW01.KF0EW-FP-EDT = TA2REC.TA2GRGGN;
      KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
      KF0EW01.KF0EW-FP-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
      KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
    end
    ;
    return;
    ;
  end
   /* **********************************************************************/
  ;
  if (KF0EW05.CO-MGMT-SAGCY-ID != KF0EW04.CO-MGMT-SAGCY-ID     /* chg agcy*/
   || KF0EW05.CO-MGMT-SREP-ID != KF0EW04.CO-MGMT-SREP-ID       /* chg rep*/
   || KF0EW05.CO-CUST-SLS-ADJAMT != KF0EW04.CO-CUST-SLS-ADJAMT /* chg amt*/
   || KF0EW05.KF0EW-CO-SLS-ADJ-EDT                             
   != KF0EW04.KF0EW-CO-SLS-ADJ-EDT                             /* chg edt*/
   || KF0EW05.KF0EW-CO-SLS-ADJ-XDT                             
   != KF0EW04.KF0EW-CO-SLS-ADJ-XDT)                            /* chg xdt*/
     /*  */
     /* back out old amount from formula records within the old effective*/
     /* date, having old agency and old rep id's.*/
     /*  */
    KF0EW01.KF0EW-FP-NET-AMT = KF0EW05.CO-CUST-SLS-ADJAMT * -1;
    KF0EW01.KF0EW-FP-EDT = KF0EW05.CO-SLS-ADJ-EDT;
    KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
    KF0EW01.KF0EW-FP-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
    KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
     /*  */
     /* if entered w/ exp date, addback old amount from old exp dt*/
     /* onwards for the old mgmt rep/agency*/
     /*  */
    if (KF0EW05.CO-SLS-ADJ-XDT < 999999999 /* has expire date*/
     && KF0EW-ERR-FL != "Y")              
      KF0EW01.KF0EW-FP-NET-AMT = KF0EW05.CO-CUST-SLS-ADJAMT;
      KF0EW01.KF0EW-FP-EDT = KF0EW05.CO-SLS-ADJ-XDT;
      KF0ES-GET-DAY-AFT(); /* get next day*/
      KF0EW01.KF0EW-FP-EDT = TA2REC.TA2GRGGN;
      KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW05.CO-MGMT-SAGCY-ID;
      KF0EW01.KF0EW-FP-SREP-ID = KF0EW05.CO-MGMT-SREP-ID;
      KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
    end
    if (KF0EW-ERR-FL == "Y") /* error while updating formula*/
      return; /* abort further updates*/
    end
     /*  */
     /* add new amount to the formula records within the new effective*/
     /* date, having new agency and new rep id's.*/
     /*  */
    KF0EW01.KF0EW-FP-NET-AMT = KF0EW04.CO-CUST-SLS-ADJAMT;
    KF0EW01.KF0EW-FP-EDT = KF0EW04.CO-SLS-ADJ-EDT;
    KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
    KF0EW01.KF0EW-FP-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
    KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
     /*  */
     /* if entered w/ exp date, backout new amount from new exp dt*/
     /* onwards for the new mgmt rep/agency*/
     /*  */
    if (KF0EW04.CO-SLS-ADJ-XDT < 999999999 /* has expire date*/
     && KF0EW-ERR-FL != "Y")              
      KF0EW01.KF0EW-FP-NET-AMT = KF0EW04.CO-CUST-SLS-ADJAMT * -1;
      KF0EW01.KF0EW-FP-EDT = KF0EW04.CO-SLS-ADJ-XDT;
      KF0ES-GET-DAY-AFT(); /* get next day*/
      KF0EW01.KF0EW-FP-EDT = TA2REC.TA2GRGGN;
      KF0EW01.KF0EW-FP-SAGCY-ID = KF0EW04.CO-MGMT-SAGCY-ID;
      KF0EW01.KF0EW-FP-SREP-ID = KF0EW04.CO-MGMT-SREP-ID;
      KF0ES-UPD-FRL-LOOP(); /* update all frmla for parms*/
    end
    ;
  end
  ;
end // end KF0ES-UPD-FRL-PROC

// Update Formula rec Rate
Function KF0ES-UPD-FRL-REG()
   /* **********************************************************************/
   /* Update held Formula record's sesn sls adj amount and rates*/
   /* **********************************************************************/
  ;
   /* set up some fields of the audit record that are available*/
  ;
  KF0ES-SET-AUD-REC(); /* init audit record*/
  VKOAUD01.XXX-TBL-NM = "VFRMLA01"; /* set table nm in the audit rec*/
  VKOAUD01.CO-AUD-TYP-IND = "C";
  VFRMLA01.SM-SAGCY-ID = VFRMLA01.SM-SAGCY-ID;
  VFRMLA01.SM-SREP-ID = VFRMLA01.SM-SREP-ID;
  VKOAUD01.CO-AUD-FILLR-BFR-LEN = KF0EW01.KF0EW-VFRMLA01-LENGTH;
  VKOAUD01.CO-AUD-FILLR-BFR-TEXT = VFRMLA01.VFRMLA01-GROUP;
  ;
   /* setup zz aud fields in the Formula record*/
  ;
  VFRMLA01.ZZ-CHNG-DT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  VFRMLA01.ZZ-CHNG-HHMM = KF0EW01.KF0EW-CURR-HHMM;
  VFRMLA01.XXX-USER-ID = COMMAREA.CAUSERID;
  ;
  KF0ES-RECALC-RATES(); /* set tot-sn-sls-amt and recalc ovrd-rt*/
  ;
  KF0ES-UPDT-VFRMLA(); /* Update VFRMLA01*/
  ;
  if (KF0EW-ERR-FL == "Y") /* error updating formula*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was updated by another*/
      return;
    end
  end
  ;
   /* complete the audit record fields and insert audit row*/
  ;
  VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VFRMLA01-LENGTH;
  VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VFRMLA01.VFRMLA01-GROUP;
  VKOAUD01.SM-SAGCY-ID = VFRMLA01.SM-SAGCY-ID;
  VKOAUD01.SM-SREP-ID = VFRMLA01.SM-SREP-ID;
  ;
  KF0ES-ADD-VKOAUD(); /* Insert VKOAUD01*/
  ;
end // end KF0ES-UPD-FRL-REG

// Split Formula rec and upd Rate
Function KF0ES-UPD-FRL-SPLT()
   /* **********************************************************************/
   /* Split held Formula record and update the latter*/
   /* **********************************************************************/
  ;
  KF0ES-GET-DAY-BFR(); /* get the dt one day before edt*/
  ;
  if (KF0EW-ERR-FL == "Y") /* error in date rtn*/
    return;
  end
  ;
   /* set up some fields of the audit record that are available*/
  ;
  KF0ES-SET-AUD-REC(); /* init audit record*/
  VKOAUD01.XXX-TBL-NM = "VFRMLA01"; /* set table nm in the audit rec*/
  VKOAUD01.CO-AUD-TYP-IND = "C";
  VFRMLA01.SM-SAGCY-ID = VFRMLA01.SM-SAGCY-ID;
  VFRMLA01.SM-SREP-ID = VFRMLA01.SM-SREP-ID;
  VKOAUD01.CO-AUD-FILLR-BFR-LEN = KF0EW01.KF0EW-VFRMLA01-LENGTH;
  VKOAUD01.CO-AUD-FILLR-BFR-TEXT = VFRMLA01.VFRMLA01-GROUP;
  ;
   /* save expire date of original formula record*/
  ;
  KF0EW01.KF0EW-WORK-CCYYMMDD = VFRMLA01.CO-OVRD-RATE-XDT;
   /* **********************************************************************/
   /* create first half of spit Formula record*/
   /* **********************************************************************/
  VFRMLA01.CO-OVRD-RATE-XDT = TA2REC.TA2GRGGN;
  VFRMLA01.ZZ-CHNG-DT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  VFRMLA01.ZZ-CHNG-HHMM = KF0EW01.KF0EW-CURR-HHMM;
  VFRMLA01.XXX-USER-ID = COMMAREA.CAUSERID;
  ;
  KF0ES-UPDT-VFRMLA(); /* Update VFRMLA01*/
  ;
  if (KF0EW-ERR-FL == "Y") /* error updating formula*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == 100) /* record to update not found*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was updated by another*/
      return;
    end
  end
  ;
   /* complete the audit record fields and insert audit row*/
  ;
  VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VFRMLA01-LENGTH;
  VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VFRMLA01.VFRMLA01-GROUP;
  VKOAUD01.SM-SAGCY-ID = VFRMLA01.SM-SAGCY-ID;
  VKOAUD01.SM-SREP-ID = VFRMLA01.SM-SREP-ID;
  ;
  KF0ES-ADD-VKOAUD(); /* Insert VKOAUD01*/
  ;
  if (KF0EW-ERR-FL == "Y") /* error inserting audit row*/
    return;
  end
  ;
   /* restore expire date of original formula record*/
  ;
  VFRMLA01.CO-OVRD-RATE-XDT = KF0EW01.KF0EW-WORK-CCYYMMDD;
   /* **********************************************************************/
   /* create second half of split Formula record*/
   /* **********************************************************************/
  VFRMLA01.CO-OVRD-RATE-EDT = KF0EW01.KF0EW-FP-EDT;
  VFRMLA01.ZZ-SDT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  VFRMLA01.ZZ-CHNG-DT = KF0EW01.KF0EW-CURR-CCYYMMDD;
  VFRMLA01.ZZ-CHNG-HHMM = KF0EW01.KF0EW-CURR-HHMM;
  VFRMLA01.ZZ-CHNG-CNT = 0;
  ;
  KF0ES-RECALC-RATES(); /* set tot-sn-sls-amt and recalc ovrd-rt*/
  ;
  KF0ES-ADD-VFRMLA(); /* Add VFRMLA01*/
  ;
  if (KF0EW-ERR-FL == "Y") /* error adding formula*/
    return;
  else
    if (SQLCA.VAGen_SQLCODE == -803) /* record to add exists*/
      KF0EW-ERR-FL = "Y";
      converseLib.validationFailed(0068); /* rec was added by another*/
      return;
    end
  end
  ;
   /* fill the audit record fields and insert audit row*/
  ;
  VKOAUD01.CO-AUD-TYP-IND = "A";
  VKOAUD01.CO-AUD-FILLR-BFR-LEN = 1;
  VKOAUD01.CO-AUD-FILLR-BFR-TEXT = " ";
  VKOAUD01.CO-AUD-FILLR-AFT-LEN = KF0EW01.KF0EW-VFRMLA01-LENGTH;
  VKOAUD01.CO-AUD-FILLR-AFT-TEXT = VFRMLA01.VFRMLA01-GROUP;
  ;
  KF0ES-ADD-VKOAUD(); /* Insert VKOAUD01*/
  ;
end // end KF0ES-UPD-FRL-SPLT

// Update Tables Process
Function KF0ES-UPD-TB1-PROC()
   /* **********************************************************************/
   /* Update tables process*/
   /* **********************************************************************/
  ;
  KF0ES-GET-TM-STAMP(); /* get dt & tm stamp for update*/
  ;
  if (KF0EW-ERR-FL == "Y") /* errors from date rtn*/
    return;
  end
  ;
  KF0ES-UPD-ADJ-PROC(); /* update/add VSNADJ01 process*/
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors found while updating*/
    KF0ES-UPD-FRL-PROC(); /* update VFRMLA01 process*/
  end
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors found while updating*/
    KF0ES-LD-MAP1-CHG(); /* Reload map*/
    converseLib.validationFailed(0028); /* Updates accepted*/
    ;
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* Rollback any updates done*/
  end
  ;
end // end KF0ES-UPD-TB1-PROC

// Update Table Process
Function KF0ES-UPD-TB2-PROC()
   /* **********************************************************************/
   /* Update tables process*/
   /* **********************************************************************/
  ;
   /* Get date and time stamp process*/
  ;
  KF0ES-GET-TM-STAMP(); /* get dt & tm stamp for update*/
  ;
  if (KF0EW-ERR-FL == "Y") /* errors from date rtn*/
    return;
  end
  ;
   /* If Adjustment did not have any previous comment id assigned, get*/
   /* one from the control record and update the comment id field in the*/
   /* adjustment record.*/
  ;
  if (VSNADJ01.CO-COMNT-ID == 0) /* Adjustment rec had no prev comments*/
    KF0ES-UPD-CTL-PROC(); /* retrieve next comnt-id and upd adj*/
    KF0EW-CMT-HIGHEST-SEQ = 0;
  end
  ;
   /* At this point, the comment id in the adjustment record should not*/
   /* be zero.  Using this as the key, update the comments table.*/
  ;
  if (KF0EW-ERR-FL != "Y") /* no previous errors*/
    KF0ES-UPD-CMT-PROC(); /* update VKOCOM01 process*/
  end
  ;
   /* After all the update process, if any errors were encountered,*/
   /* ROLLBACK any applied changes to the database.*/
  ;
  if (KF0EW-ERR-FL != "Y") /* no errors found while updating*/
    KF0ES-LD-MAP2-CHG(); /* reload prev-cmt and map2*/
    converseLib.validationFailed(0028); /* Updates accepted*/
  else
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
     /* Rollback any updates done*/
  end
  ;
end // end KF0ES-UPD-TB2-PROC

// Update TSQ page
Function KF0ES-UPDT-TSQ()
   /* **********************************************************************/
   /* Update temp storage*/
   /* **********************************************************************/
  ;
  TA5REC.TA5FNCCD = "U"; /* read temp storage*/
  TA5REC.TA5APPID = KF0EW-TSQ-APPL; /* application ID*/
  KF0EW07.KF0EW-COMMENT-PAGE-LENGTH = KF0EW-TSQ-LEN;
                                           /* temp storage length*/
  ;
  try
    call "TA0050" (KF0EW07, TA5REC) {isNoRefresh = yes, isExternal = yes};
  end /* temp storage routine*/
  ;
  if (sysVar.errorCode == "00000000" /* call was successful*/
   && TA5REC.TA5RTNCD == 0)          /* and normal return*/
     /* next sentence*/
  else /* an error occurred*/
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = sysVar.errorCode; /* csp return code*/
    TAEREC.TAEDESC2 = TA5REC.TA5DATA; /* subroutine parameters*/
    TA1REC.TA1TYPE = "APPL"; /* application error*/
    TA1REC.TA1FUNC = "RETN"; /* post*/
    TA1REC.TA1LOCAT[1] = "UPDT TS "; /* location*/
    TA1REC.TA1LOCAT[2] = "TA0050  "; /* subroutine*/
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end /* message formatter*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass control to menu*/
    converseLib.validationFailed(34); /* temp storage error*/
    ;
  end
  ;
end // end KF0ES-UPDT-TSQ

// Call IO3950 update vfrmla01
Function KF0ES-UPDT-VFRMLA()
   /* **********************************************************************/
   /* KF0ES-UPDT-VFRMLA*/
   /* This routine calls IO3950 to update a Formula rate row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3950" ("U ", SQLCA, VFRMLA01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != 100) /* not record not found*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VFRMLA01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3950"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-UPDT-VFRMLA

// Call IO2480 updt vkocom01
Function KF0ES-UPDT-VKOCOM()
   /* **********************************************************************/
   /* KF0ES-UPDT-VKOCOM*/
   /* This routine calls IO2480 to update an adjustment comment row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO2480" ("U ", SQLCA, VKOCOM01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* DB2 error*/
   && SQLCA.VAGen_SQLCODE != 100)
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCOM01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO2480"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-UPDT-VKOCOM

// Call IO3970 updt vkoctl01
Function KF0ES-UPDT-VKOCTL()
   /* **********************************************************************/
   /* KF0ES-UPDT-VKOCTL*/
   /* This routine calls IO3970 to update the next comment id counter in*/
   /* the commissions control record.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  call "IO3970" ("U ", SQLCA, VKOCTL01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0) /* DB2 error*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VKOCTL01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO3970"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-UPDT-VKOCTL

// Call IO5610 updt vsnadj01
Function KF0ES-UPDT-VSNADJ()
   /* **********************************************************************/
   /* KF0ES-UPDT-VSNADj*/
   /* This routine calls IO5610 to update a seasonal sales adjustment row.*/
   /* **********************************************************************/
  ;
  set SQLCA empty;
  ;
  KF0EW09.KF0EW-IO-TASK = "U "; /* set up call parms*/
  KF0EW09.KF0EW-IO-IND1 = 0;
  call "IO5610" (KF0EW09, SQLCA, VSNADJ01) {isNoRefresh = yes, isExternal = yes};
  ;
  if (SQLCA.VAGen_SQLCODE != 0 /* not found and*/
   && SQLCA.VAGen_SQLCODE != 100) /* not record not found*/
    KF0EW-ERR-FL = "Y";
    set ERRSQLCA empty;
    move SQLCA to ERRSQLCA withV60Compat;
    TA1REC.TA1TYPE = "DB2"; /* db2 error*/
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1DBASE = "DCOMM   "; /* data base name*/
    TA1REC.TA1TBLVU = "VSNADJ01"; /* table view name*/
    TA1REC.TA1LOCAT[3] = "U       "; /* error location*/
    TA1REC.TA1LOCAT[4] = "IO5610"; /* i/o mod*/
    try
      call "TA0020" (TA1REC, ERRSQLCA) {isExternal = yes};
    end /* message formatter*/
    COMMAREA.CAUSERA = " "; /* clear commarea*/
    VAGen_EZEREPLY = VGVar.handleSysLibraryErrors;	  // save value
    VGVar.handleSysLibraryErrors = 0;		// VAGEN (REPLY option omitted
    sysLib.rollback();
    VGVar.handleSysLibraryErrors = VAGen_EZEREPLY;		//restore value
    
    XSPF4(); /* pass to goal menu*/
    converseLib.validationFailed(0035); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-UPDT-VSNADJ

// Validate date format
Function KF0ES-VAL-DT-FMT()
   /* **********************************************************************/
   /* Validate Date format*/
   /* must be valid MMDDYY or MM/DD/YY format ('/' must be valid delimiter*/
   /* **********************************************************************/
  ;
  if (KF0EW-WORK-CHAR-DATE-BLANK == " ") /* mmddyy format*/
    TA2REC.TA2GRTYP = "A";
    TA2REC.TA2GRGA = KF0EW-WORK-CHAR-DATE-MMDDYY;
  else /* mm/dd/yy format*/
    KF0EW01.KF0EW-EDIT-MMDDYY-DISPLAY = KF0EW-WORK-CHAR-DATE-MM-DD-YY;
    if (KF0EW-EDIT-MMDDYY-DASH1 != "/"
     && KF0EW-EDIT-MMDDYY-DASH1 != "."
     && KF0EW-EDIT-MMDDYY-DASH1 != "-"
     && KF0EW-EDIT-MMDDYY-DASH1 != " "
     && KF0EW-EDIT-MMDDYY-DASH1 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    if (KF0EW-EDIT-MMDDYY-DASH2 != "/"
     && KF0EW-EDIT-MMDDYY-DASH2 != "."
     && KF0EW-EDIT-MMDDYY-DASH2 != "-"
     && KF0EW-EDIT-MMDDYY-DASH2 != " "
     && KF0EW-EDIT-MMDDYY-DASH2 != ":")
      TA2REC.TA2RTNCD = 222;
      return;
    end
    TA2REC.TA2GRTYP = "B";
    TA2REC.TA2GRGB = KF0EW-WORK-CHAR-DATE-MM-DD-YY;
  end
  ;
  call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  ;
  if (TA2REC.TA2RTNCD != 0
   && TA2REC.TA2RTNCD != 222)
    KF0EW-ERR-FL = "Y";
    set TAEREC empty;
    TAEREC.TAEDESC1 = "TA0040 VALIDATE DATE FORMAT FAILED.";
    TAEREC.TAEDESC2 = TA2REC.TA2ERMSG;
    TA1REC.TA1TYPE = "APPL";
    TA1REC.TA1FUNC = "RETN";
    TA1REC.TA1PGMNM = "TA0040";
    TA1REC.TA1LOC = "GREGGREG";
    TA1REC.TA1MAP = "KF0EM001";
    try
      call "TA0020" (TA1REC, TAEREC) {isExternal = yes};
    end
    converseLib.validationFailed(0040); /* error -- contact help desk*/
  end
  ;
end // end KF0ES-VAL-DT-FMT

// Initialization - pop up window
Function XPXX004()
   /* ------------------------------------------------------------*/
  ;
           /* INITIALIZATION PROCESS FOR POP UP WINDOWS*/
  ;
      /* Initialize fields on map and in working storage.*/
  ;
   /* ------------------------------------------------------------*/
  ;
     /* ***********************************************/
     /* ******  Initialize appropriate fields   *******/
     /* ***********************************************/
  ;
  set XX0XM004 initial; /* Clear the map area*/
  set XX0XW04 empty; /* clear working storage*/
  XX0XW04.XX0XW-TABLE-INDEX = 1; /* Table index*/
  XX0XW04.XX0XW-SCREEN-INDEX = 0; /* End of page save index*/
  XX0XW04.XX0XW-FIRST-TIME-FLAG = "Y"; /* first time thru flag*/
  XX0XW04.XX0XW-ERROR-FLAG = "N"; /* error flag to no*/
  XX0XW04.XX0XW-SELECT-FLAG = "N"; /* selected flag to no*/
  XX0XW04.XX0XW-END-FLAG = "N"; /* End of pop up session*/
  ;
  ;
end // end XPXX004

// converse pop up window
Function XPYNS01()
   /* ------------------------------------------------------------*/
  ;
              /* CONVERSE POP UP WINDOW*/
  ;
      /* 1) If no errors, clear the map and set up for*/
         /* scrolling.  If PF7, PF8, or first time through,*/
         /* scroll the table.  If PA2, clear selection fields.*/
      /* 2) Reset selection fields.*/
      /* 3) Converse the map.*/
      /* 4) Check for PFkey and scroll errors.*/
      /* 5) If ENTER pressed, check for any user selections.*/
  ;
   /* ------------------------------------------------------------*/
  ;
   /* **********************************************************/
   /* *    If no errors clear page and set up for scrolling   **/
   /* **********************************************************/
  ;
  if (XX0XW04.XX0XW-FIRST-TIME-FLAG == "Y") /* first time through*/
    if (XX0XW04.YNS-BUS-FUNC-ID in YNSTBL.YNS-BUS-FUNC-ID)
                                            /* entry for sys exists*/
      XX0XW04.XX0XW-FIRST-ENTRY-INDEX = sysVar.arrayIndex;
      XX0XW04.XX0XW-TABLE-INDEX = sysVar.arrayIndex;
      XX0XW04.XX0XW-PAGE-TOP = sysVar.arrayIndex;
    else
      XX0XW04.XX0XW-PAGE-TOP = 0;
      XX0XW04.XX0XW-FIRST-ENTRY-INDEX = 0;
    end
  end
  ;
  if (XX0XW04.XX0XW-ERROR-FLAG == "N") /* If error flag not yes*/
    ;
     /* **********************************************************/
     /* *   Clear map and set up header for new scroll screen   **/
     /* **********************************************************/
    ;
    set XX0XM004 initial; /* Clear map output area*/
    XX0XM004.XX0XM-HEADER = "    SEASON CODE / YEAR AND DESCRIPTION     "; /* Place heading on map*/
    XX0XM004.XX0XM-FOOTER-1 = "  SELECT A SEASON - PRESS ENTER TO RETURN  ";
    XX0XM004.XX0XM-FOOTER-2 = "  PF7:BACK     PF8:FORWARD     PA2:CANCEL  ";
    ;
     /* *********************************************************/
     /* *        If PF8 was pressed then scroll forward        **/
     /* *********************************************************/
    ;
    if (converseVar.eventKey is pf8 /* If PF8 pressed*/
     || XX0XW04.XX0XW-FIRST-TIME-FLAG == "Y")
                                              /* Or first time thru*/
      XX0XW04.XX0XW-SCREEN-INDEX = 1; /* Set up screen index*/
      if (XX0XW04.XX0XW-FIRST-TIME-FLAG == "N")
                                              /* not first time thru*/
                                             /* set up scroll pf8*/
        XX0XW04.XX0XW-PAGE-TOP = XX0XW04.XX0XW-PAGE-BOTTOM + 1;
        XX0XW04.XX0XW-TABLE-INDEX = XX0XW04.XX0XW-PAGE-TOP;
        XX0XW04.XX0XW-PAGE-BOTTOM = XX0XW04.XX0XW-PAGE-BOTTOM + 10;
      else
        XX0XW04.XX0XW-PAGE-BOTTOM = 10;
      end
      ;
      while (XX0XW04.XX0XW-SCREEN-INDEX <= 10)
                                           /* Until end of screen lines*/
        if (YNSTBL.YNS-BUS-FUNC-ID[XX0XW-TABLE-INDEX]
         == XX0XW04.YNS-BUS-FUNC-ID /* still table for this system*/
                                    
         && YNSTBL.XXX-STAT[XX0XW-TABLE-INDEX] == "A")
                                          /* If active status on code*/
          XX0XM004.XX0XM-CODE-2-BYTES[XX0XW-SCREEN-INDEX] = YNSTBL.XSE-SESN-CD[XX0XW-TABLE-INDEX];
          XX0XM004.XX0XM-CODE-4-BYTES[XX0XW-SCREEN-INDEX] = YNSTBL.YNS-SESN-YR[XX0XW-TABLE-INDEX];
          XX0XM004.XX0XM-DESCRIPTION[XX0XW-SCREEN-INDEX] = YNSTBL.YNS-SESN-YR-DESC[XX0XW-TABLE-INDEX];
          XX0XW04.XX0XW-SCREEN-INDEX = XX0XW04.XX0XW-SCREEN-INDEX + 1;
          XX0XW04.XX0XW-TABLE-INDEX = XX0XW04.XX0XW-TABLE-INDEX + 1;
                                   /* Increment screen index*/
        else
          if (YNSTBL.YNS-BUS-FUNC-ID[XX0XW-TABLE-INDEX] != "EOT")
                                           /* and not end of table*/
            XX0XW04.XX0XW-TABLE-INDEX = XX0XW04.XX0XW-TABLE-INDEX + 1;
          else
            XX0XW04.XX0XW-SCREEN-INDEX = XX0XW04.XX0XW-SCREEN-INDEX + 1;
          end
        end
      end
      XX0XW04.XX0XW-FIRST-TIME-FLAG = "N"; /* not first time*/
    end
    ;
     /* ******************************************************/
     /* *      If PF7 was pressed then scroll backward      **/
     /* ******************************************************/
    ;
    if (converseVar.eventKey is pf7) /* If PF7 pressed*/
      XX0XW04.XX0XW-PAGE-BOTTOM = XX0XW04.XX0XW-PAGE-TOP - 1;
      XX0XW04.XX0XW-PAGE-TOP = XX0XW04.XX0XW-PAGE-TOP - 10;
      XX0XW04.XX0XW-TABLE-INDEX = XX0XW04.XX0XW-PAGE-BOTTOM; /* Set up table index*/
      XX0XW04.XX0XW-SCREEN-INDEX = 10; /* Set up screen index*/
      while (XX0XW04.XX0XW-SCREEN-INDEX >= 1 /* Load from bottom up*/
       && XX0XW04.XX0XW-TABLE-INDEX >= XX0XW04.XX0XW-FIRST-ENTRY-INDEX)
                                                    /* and for this sys*/
        if (YNSTBL.XXX-STAT[XX0XW-TABLE-INDEX] == "A")
                                                    /* If active status*/
          XX0XM004.XX0XM-CODE-2-BYTES[XX0XW-SCREEN-INDEX] = YNSTBL.XSE-SESN-CD[XX0XW-TABLE-INDEX];
          XX0XM004.XX0XM-CODE-4-BYTES[XX0XW-SCREEN-INDEX] = YNSTBL.YNS-SESN-YR[XX0XW-TABLE-INDEX];
          XX0XM004.XX0XM-DESCRIPTION[XX0XW-SCREEN-INDEX] = YNSTBL.YNS-SESN-YR-DESC[XX0XW-TABLE-INDEX];
          XX0XW04.XX0XW-SCREEN-INDEX = XX0XW04.XX0XW-SCREEN-INDEX - 1;
                                                    /* Decrement index*/
        end
        XX0XW04.XX0XW-TABLE-INDEX = XX0XW04.XX0XW-TABLE-INDEX - 1; /* Decrement index*/
      end
      if (XX0XW04.XX0XW-TABLE-INDEX < XX0XW04.XX0XW-FIRST-ENTRY-INDEX)
        XX0XW04.XX0XW-TABLE-INDEX = XX0XW04.XX0XW-FIRST-ENTRY-INDEX;
      end
    end
  end
  ;
  ;
     /* *********************************************************/
     /* *        If Pa2 was pressed then cancel selection      **/
     /* *********************************************************/
  ;
  if (converseVar.eventKey is pa2) /* If Pa2 pressed*/
    XX0XW04.XX0XW-SCREEN-INDEX = 1;
    while (XX0XW04.XX0XW-SCREEN-INDEX <= 10
     && XX0XM004.XX0XM-CODE-2-BYTES[XX0XW-SCREEN-INDEX] != " ")
                                                   /* clear all selects*/
      XX0XM004.XX0XM-SELECT[XX0XW-SCREEN-INDEX] = " ";
      XX0XW04.XX0XW-SCREEN-INDEX = XX0XW04.XX0XW-SCREEN-INDEX + 1;
    end
  end
  ;
     /* *********************************************************/
     /* *       Reset selection fields before converse         **/
     /* *********************************************************/
  ;
  XX0XW04.XX0XW-SCREEN-INDEX = 1; /* Screen index*/
  while (XX0XW04.XX0XW-SCREEN-INDEX <= 10)
                                    /* Set all fields with data defined*/
    if (XX0XM004.XX0XM-CODE-2-BYTES[XX0XW-SCREEN-INDEX] != " ")
      set XX0XM004.XX0XM-SELECT[XX0XW-SCREEN-INDEX] initialAttributes;
    else
      set XX0XM004.XX0XM-SELECT[XX0XW-SCREEN-INDEX] invisible, protect;
                                    /* Set selects dark if no data*/
    end
    XX0XW04.XX0XW-SCREEN-INDEX = XX0XW04.XX0XW-SCREEN-INDEX + 1;
  end
  ;
  ;
  converse XX0XM004 ;
  ;
  XX0XW04.XX0XW-ERROR-FLAG = "N"; /* Reset error flag*/
  XX0XW04.XX0XW-SELECT-FLAG = "N"; /* Reset select flag*/
  ;
    /* *********************************************************/
    /* *       Check for PFkey errors and scroll errors       **/
    /* *********************************************************/
  ;
  if (converseVar.eventKey is pf8 /* If PF8 pressed*/
   && YNSTBL.YNS-BUS-FUNC-ID[XX0XW-TABLE-INDEX] == "EOT")
                                                /* And end of table*/
    XX0XW04.XX0XW-ERROR-FLAG = "Y"; /* Set error flag*/
  else
    if (converseVar.eventKey is pf7 /* If PF7 pressed*/
     && XX0XW04.XX0XW-PAGE-TOP == XX0XW04.XX0XW-FIRST-ENTRY-INDEX)
                                            /* and at top*/
      XX0XW04.XX0XW-ERROR-FLAG = "Y"; /* Set error flag*/
    else
      if (converseVar.eventKey is enter) /* If enter pressed*/
        XX0XW04.XX0XW-END-FLAG = "Y"; /* Set end flag*/
        ;
         /* *********************************************************/
         /* *               Check for user selection               **/
         /* *********************************************************/
        ;
        XX0XW04.XX0XW-SCREEN-INDEX = 1; /* Screen index*/
        while (XX0XW04.XX0XW-SCREEN-INDEX <= 10)
                                               /* Until end of screen*/
          if (XX0XM004.XX0XM-SELECT[XX0XW-SCREEN-INDEX] > " ")
                                              /* Check for selection*/
            XX0XW04.XX0XW-SELECT-FLAG = "Y";
            XX0XW04.XSE-SESN-CD = XX0XM004.XX0XM-CODE-2-BYTES[XX0XW-SCREEN-INDEX];
            XX0XW04.YNS-SESN-YR = XX0XM004.XX0XM-CODE-4-BYTES[XX0XW-SCREEN-INDEX];
            XX0XW04.XX0XW-SCREEN-INDEX = 11;
          end
          XX0XW04.XX0XW-SCREEN-INDEX = XX0XW04.XX0XW-SCREEN-INDEX + 1;
        end
        ;
      else
        if (converseVar.eventKey not pf7 /* If any other attention ident*/
         && converseVar.eventKey not pf8 
         && converseVar.eventKey not enter)
          XX0XW04.XX0XW-ERROR-FLAG = "Y"; /* set error flag*/
        end
      end
    end
  end
  ;
  ;
end // end XPYNS01

// cnv chr to num
Function XSKFS-CHR-TO-NUM()
   /* **********************************************************************/
   /* XSKFS-CHR-TO-NUM*/
   /* This routine is called by XSKFS-NUM-CHK to validate and convert*/
   /* a character format number to its numeric format.*/
   /* **********************************************************************/
  ;
  if (KFWREC.KFW-NUM-CHK-LEN < 2
   || KFWREC.KFW-NUM-CHK-LEN > 9)
    KFWREC.KFW-NUM-CHK-ERR = "Y";
    return;
  end
  ;
   /* validate each character for 1 thru 9 or space*/
  ;
  KFW-NUM-CHK-PTRC = 1;
  while (KFW-NUM-CHK-PTRC <= KFW-NUM-CHK-LEN)
    if (KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] >= 0
     && KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] <= 9)
       /* okay*/
    else
      if (KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] != " ")
        KFWREC.KFW-NUM-CHK-ERR = "Y";
        return;
      end
    end
    KFW-NUM-CHK-PTRC = KFW-NUM-CHK-PTRC + 1;
  end
  ;
   /* right justify and pad with leading zeros*/
  ;
  move KFW-NUM-CHK-LEN to KFW-NUM-CHK-PTRC withV60Compat;
  KFW-NUM-CHK-PTRN = 9;
  while (KFW-NUM-CHK-PTRN > 0)
    if (KFW-NUM-CHK-PTRC > 0)
      if (KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] == " ") /* do not move blanks*/
        KFW-NUM-CHK-PTRC = KFW-NUM-CHK-PTRC - 1;
      else /* move the digit*/
        KFW-NUM-CHK-DIGIT[KFW-NUM-CHK-PTRN] = KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC];
        KFW-NUM-CHK-PTRC = KFW-NUM-CHK-PTRC - 1;
        KFW-NUM-CHK-PTRN = KFW-NUM-CHK-PTRN - 1;
      end
    else
      KFW-NUM-CHK-DIGIT[KFW-NUM-CHK-PTRN] = "0";
      KFW-NUM-CHK-PTRN = KFW-NUM-CHK-PTRN - 1;
    end
  end
  ;
end // end XSKFS-CHR-TO-NUM

// CONVERT NBR FORMAT MAIN SGRP
Function XSKFS-NUM-CHK()
   /* **********************************************************************/
   /* XSKFS-NUM-CHK*/
   /* This routine converts a passed character field into a numeric field,*/
   /* and validates for nonnumeric characters.  This routine can also*/
   /* convert numeric fields into 'suppress leading zeros' character*/
   /* field and right justified.*/
   /*  */
   /* kfwrec.kfw-num-chk-func      'numtochr' - converts num to char*/
   /* 'chrtonum' - converts char to num*/
   /* w/ numeric validation*/
   /* kfwrec.kfw-num-chk-len       2 thru 9   - number of digits*/
   /* kfwrec.kfw-num-chk-err       'y' or 'n' - returned value*/
   /* kfwrec.kfw-num-chk-word                 - character format*/
   /* kfwrec.kfw-num-chk-nbr                  - display numeric format*/
   /* **********************************************************************/
  ;
  KFWREC.KFW-NUM-CHK-ERR = "N";
  ;
  if (KFWREC.KFW-NUM-CHK-FUNC == "CHRTONUM")
    XSKFS-CHR-TO-NUM();
  else
    if (KFWREC.KFW-NUM-CHK-FUNC == "NUMTOCHR")
      XSKFS-NUM-TO-CHR();
    else
      KFWREC.KFW-NUM-CHK-ERR = "Y";
    end
  end
  ;
end // end XSKFS-NUM-CHK

// cnv num to chr
Function XSKFS-NUM-TO-CHR()
   /* **********************************************************************/
   /* XSKFS-NUM-TO-CHR*/
   /* This routine is called by XSKFS-NUM-CHK to validate and convert*/
   /* a numeric format number to character format.*/
   /* **********************************************************************/
  ;
  if (KFWREC.KFW-NUM-CHK-LEN < 2
   || KFWREC.KFW-NUM-CHK-LEN > 9)
    KFWREC.KFW-NUM-CHK-ERR = "Y";
    return;
  end
  ;
   /* move requested length of the number to char format*/
  ;
  move KFW-NUM-CHK-LEN to KFW-NUM-CHK-PTRC withV60Compat;
  KFW-NUM-CHK-PTRN = 9;
  while (KFW-NUM-CHK-PTRC > 0)
    KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] = KFW-NUM-CHK-DIGIT[KFW-NUM-CHK-PTRN];
    KFW-NUM-CHK-PTRC = KFW-NUM-CHK-PTRC - 1;
    KFW-NUM-CHK-PTRN = KFW-NUM-CHK-PTRN - 1;
  end
  ;
   /* pad leading zeros with spaces*/
  ;
  KFW-NUM-CHK-PTRC = 1;
  while (KFW-NUM-CHK-PTRC < KFW-NUM-CHK-LEN) /* replace all zeros*/
    if (KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] == "0") /* with a blank from*/
      KFW-NUM-CHK-CHAR[KFW-NUM-CHK-PTRC] = " "; /* left to right*/
      KFW-NUM-CHK-PTRC = KFW-NUM-CHK-PTRC + 1; /* until a non zero*/
    else /* digit is found*/
      return; /* except for the*/
    end /* last digit*/
  end
  ;
end // end XSKFS-NUM-TO-CHR

//*** RECORD=KF0EW01 ****
// Working storage record for application KF0E.
// 
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW01 type basicRecord
  10 * char(20) ; 
    15 KF0EW-ERR-FL KF0EW-ERR-FL ; 
    15 KF0EW-ADJ-PTR KF0EW-ADJ-PTR ; 
    15 KF0EW-ADJ-HELD-CNT KF0EW-ADJ-HELD-CNT ; 
    15 KF0EW-PROTECT-ATTR-FL KF0EW-PROTECT-ATTR-FL ; 
    15 KF0EW-VSNADJ01-FOUND-FL KF0EW-VSNADJ01-FOUND-FL ; 
    15 KF0EW-DISP-ERR-FL KF0EW-DISP-ERR-FL ; 
    15 KF0EW-PROC-TYP-IND KF0EW-PROC-TYP-IND ; 
    15 KF0EW-REQUIRED-FL KF0EW-REQUIRED-FL ; 
    15 KF0EW-DUPKEY-PRESSED-FL KF0EW-DUPKEY-PRESSED-FL ; 
    15 KF0EW-NXT-YNS-MISSING-FL KF0EW-NXT-YNS-MISSING-FL ; 
    15 KF0EW-DT-CHK-WARN-DISPLAYED-FL KF0EW-DT-CHK-WARN-DISPLAYED-FL ; 
    15 KF0EW-FP-DT-TYP KF0EW-FP-DT-TYP ; 
    15 KF0EW-MORE-VFRMLA01-FL KF0EW-MORE-VFRMLA01-FL ; 
    15 KF0EW-MORE-VKOCOM01-FL KF0EW-MORE-VKOCOM01-FL ; 
    15 KF0EW-PTR KF0EW-PTR ; 
  10 * char(6) ; 
    15 KF0EW-VSNADJ01-LENGTH KF0EW-VSNADJ01-LENGTH ; 
    15 KF0EW-VKOCOM01-LENGTH KF0EW-VKOCOM01-LENGTH ; 
    15 KF0EW-VFRMLA01-LENGTH KF0EW-VFRMLA01-LENGTH ; 
  10 * char(20) ; 
    15 KF0EW-SAVE-CO-COMNT-ID KF0EW-SAVE-CO-COMNT-ID ; 
    15 KF0EW-CMT-HIGHEST-SEQ KF0EW-CMT-HIGHEST-SEQ ; 
    15 KF0EW-CMT-PTR KF0EW-CMT-PTR ; 
    15 KF0EW-CMT-CURR-PG KF0EW-CMT-CURR-PG ; 
    15 KF0EW-CMT-MAX-PG KF0EW-CMT-MAX-PG ; 
    15 KF0EW-TSQ-APPL KF0EW-TSQ-APPL ; 
    15 KF0EW-TSQ-LEN KF0EW-TSQ-LEN ; 
  10 * char(156) ; 
    15 KF0EW-MSG2 KF0EW-MSG2 ; 
      20 KF0EW-MSG2-LIT KF0EW-MSG2-LIT ; 
      20 KF0EW-MSG2-AGENCY KF0EW-MSG2-AGENCY ; 
    15 KF0EW-MSG3 KF0EW-MSG3 ; 
      20 KF0EW-MSG3-LIT KF0EW-MSG3-LIT ; 
      20 KF0EW-MSG3-REP KF0EW-MSG3-REP ; 
    15 KF0EW-MSG4 KF0EW-MSG4 ; 
      20 KF0EW-MSG4-LIT1 KF0EW-MSG4-LIT1 ; 
      20 KF0EW-MSG4-AGENCY KF0EW-MSG4-AGENCY ; 
      20 KF0EW-MSG4-LIT2 KF0EW-MSG4-LIT2 ; 
      20 KF0EW-MSG4-REP KF0EW-MSG4-REP ; 
  10 * char(23) ; 
    15 KF0EW-FP-WORK-AMT KF0EW-FP-WORK-AMT ; 
    15 KF0EW-FP-NET-AMT KF0EW-FP-NET-AMT ; 
    15 KF0EW-FP-EDT KF0EW-FP-EDT ; 
    15 KF0EW-FP-SAGCY-ID KF0EW-FP-SAGCY-ID ; 
    15 KF0EW-FP-SREP-ID KF0EW-FP-SREP-ID ; 
  10 * char(24) ; 
    15 KF0EW-EDIT-CCYYMMDD KF0EW-EDIT-CCYYMMDD ; 
      20 KF0EW-EDIT-CCYYMMDD-CENTURY KF0EW-EDIT-CCYYMMDD-CENTURY ; 
      20 KF0EW-EDIT-CCYYMMDD-YEAR KF0EW-EDIT-CCYYMMDD-YEAR ; 
      20 KF0EW-EDIT-CCYYMMDD-MONTH KF0EW-EDIT-CCYYMMDD-MONTH ; 
      20 KF0EW-EDIT-CCYYMMDD-DAY KF0EW-EDIT-CCYYMMDD-DAY ; 
    15 KF0EW-EDIT-MMDDYY-DISPLAY KF0EW-EDIT-MMDDYY-DISPLAY ; 
      20 KF0EW-EDIT-MMDDYY-MONTH KF0EW-EDIT-MMDDYY-MONTH ; 
      20 KF0EW-EDIT-MMDDYY-DASH1 KF0EW-EDIT-MMDDYY-DASH1 ; 
      20 KF0EW-EDIT-MMDDYY-DAY KF0EW-EDIT-MMDDYY-DAY ; 
      20 KF0EW-EDIT-MMDDYY-DASH2 KF0EW-EDIT-MMDDYY-DASH2 ; 
      20 KF0EW-EDIT-MMDDYY-YEAR KF0EW-EDIT-MMDDYY-YEAR ; 
    15 KF0EW-WORK-CHAR-DATE KF0EW-WORK-CHAR-DATE ; 
      20 KF0EW-WORK-CHAR-DATE-MM-DD-YY KF0EW-WORK-CHAR-DATE-MM-DD-YY ; 
        25 KF0EW-WORK-CHAR-DATE-MMDDYY KF0EW-WORK-CHAR-DATE-MMDDYY ; 
        25 KF0EW-WORK-CHAR-DATE-BLANK KF0EW-WORK-CHAR-DATE-BLANK ; 
  10 * char(27) ; 
    15 KF0EW-WORK-CCYYMMDD KF0EW-WORK-CCYYMMDD ; 
    15 KF0EW-CURR-CCYYMMDD KF0EW-CURR-CCYYMMDD ; 
    15 KF0EW-LASTDAY-CCYYMMDD KF0EW-LASTDAY-CCYYMMDD ; 
    15 KF0EW-CURR-HHMMSS KF0EW-CURR-HHMMSS ; 
    15 KF0EW-CURR-HHMM KF0EW-CURR-HHMM ; 
    15 KF0EW-YNSTBL-YNS-RECORD-KEY KF0EW-YNSTBL-YNS-RECORD-KEY ; 
      20 KF0EW-YNSTBL-XSE-SESN-CD KF0EW-YNSTBL-XSE-SESN-CD ; 
      20 KF0EW-YNSTBL-YNS-SESN-YR KF0EW-YNSTBL-YNS-SESN-YR ; 
      20 KF0EW-YNSTBL-YNS-BUS-FUNC-ID KF0EW-YNSTBL-YNS-BUS-FUNC-ID ; 
end // end KF0EW01

//*** RECORD=KF0EW02 ****
// Working storage record for application KF0E to hold current
// adjustment keys.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW02 type basicRecord
  10 KF0EW-CURR-HDR KF0EW-CURR-HDR ; 
    15 XSE-SESN-CD XSE-SESN-CD ; 
    15 YNS-SESN-YR YNS-SESN-YR ; 
    15 CU-CO-ID CU-CO-ID ; 
    15 KF0EW-CU-STOR-ID KF0EW-CU-STOR-ID ; 
    15 KF0EW-XNX-DEPT-ID-XREF KF0EW-XNX-DEPT-ID-XREF ; 
    15 YSB-SLS-RESP-CD YSB-SLS-RESP-CD ; 
end // end KF0EW02

//*** RECORD=KF0EW03 ****
// Working storage record for application KF0E to hold previous
// adjustment keys.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW03 type basicRecord
  10 KF0EW-PREV-HDR KF0EW-PREV-HDR ; 
    15 XSE-SESN-CD XSE-SESN-CD ; 
    15 YNS-SESN-YR YNS-SESN-YR ; 
    15 CU-CO-ID CU-CO-ID ; 
    15 KF0EW-CU-STOR-ID KF0EW-CU-STOR-ID ; 
    15 KF0EW-XNX-DEPT-ID-XREF KF0EW-XNX-DEPT-ID-XREF ; 
    15 YSB-SLS-RESP-CD YSB-SLS-RESP-CD ; 
end // end KF0EW03

//*** RECORD=KF0EW04 ****
// Working storage record for application KF0E to hold current
// adjustment details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW04 type basicRecord
  5 KF0EW-CURR-DTL KF0EW-CURR-DTL ; 
    10 KF0EW-CURR-DTL-OTHERS KF0EW-CURR-DTL-OTHERS ; 
      15 CO-MGMT-SAGCY-ID CO-MGMT-SAGCY-ID ; 
      15 CO-MGMT-SREP-ID CO-MGMT-SREP-ID ; 
      15 CO-CUST-SLS-ADJAMT CO-CUST-SLS-ADJAMT ; 
      15 CO-ADJ-MGR-SLS-FL CO-ADJ-MGR-SLS-FL ; 
      15 KF0EW-CO-SLS-ADJ-EDT KF0EW-CO-SLS-ADJ-EDT ; 
      15 KF0EW-CO-SLS-ADJ-XDT KF0EW-CO-SLS-ADJ-XDT ; 
    10 XXX-STAT XXX-STAT ; 
  5 CO-SLS-ADJ-EDT CO-SLS-ADJ-EDT ; 
  5 CO-SLS-ADJ-XDT CO-SLS-ADJ-XDT ; 
end // end KF0EW04

//*** RECORD=KF0EW05 ****
// Working storage record for application KF0E to hold previous
// adjustment details.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW05 type basicRecord
  5 KF0EW-PREV-DTL KF0EW-PREV-DTL ; 
    10 KF0EW-PREV-DTL-OTHERS KF0EW-PREV-DTL-OTHERS ; 
      15 CO-MGMT-SAGCY-ID CO-MGMT-SAGCY-ID ; 
      15 CO-MGMT-SREP-ID CO-MGMT-SREP-ID ; 
      15 CO-CUST-SLS-ADJAMT CO-CUST-SLS-ADJAMT ; 
      15 CO-ADJ-MGR-SLS-FL CO-ADJ-MGR-SLS-FL ; 
      15 KF0EW-CO-SLS-ADJ-EDT KF0EW-CO-SLS-ADJ-EDT ; 
      15 KF0EW-CO-SLS-ADJ-XDT KF0EW-CO-SLS-ADJ-XDT ; 
    10 XXX-STAT XXX-STAT ; 
  5 CO-SLS-ADJ-EDT CO-SLS-ADJ-EDT ; 
  5 CO-SLS-ADJ-XDT CO-SLS-ADJ-XDT ; 
  5 KF0EW-PREV-DTL-READ-ONLY KF0EW-PREV-DTL-READ-ONLY ; 
    10 CO-PFRM-SAGCY-ID CO-PFRM-SAGCY-ID ; 
    10 CO-PFRM-SREP-ID CO-PFRM-SREP-ID ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 CO-LST-RALGN-DT CO-LST-RALGN-DT ; 
end // end KF0EW05

//*** RECORD=KF0EW06 ****
// Working storage record for application KF0E to hold current
// adjustment comments.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW06 type basicRecord
  10 KF0EW-CURR-CMT char(540) ; 
    15 CO-COMNT CO-COMNT [9] ; 
end // end KF0EW06

//*** RECORD=KF0EW07 ****
// Working storage record for application KF0E to hold previous
// adjustment comments and sequence numbers.
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW07 type basicRecord
  5 KF0EW-COMMENT-PAGE-LENGTH KF0EW-COMMENT-PAGE-LENGTH ; 
  5 KF0EW-COMMENT-PAGE KF0EW-COMMENT-PAGE ; 
    10 KF0EW-PREV-CMT char(540) ; 
      15 CO-COMNT CO-COMNT [9] ; 
    10 CO-COMNT-SEQ-NBR CO-COMNT-SEQ-NBR [9] ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT [9] ; 
end // end KF0EW07

//*** RECORD=KF0EW08 ****
// Working storage record for application KF0E to hold initial
// values for the KF0EM001 screen header and detail.
// 
// NOTE: It is very important that the items KF0EW-INIT-HDR
//       and KF0EW-INIT-DTL defined in this record match the
//       format of KF0EW03.KF0EW-PREV-HDR and the format of
//       KF0EW05.KF0EW-PREV-DTL respectively.  The fields in
//       this record will always contain the 'initialized'
//       value to provide an easy way to compare group item
//       values with blanks and spaces.
// 
// ************************************************************
// *                  Mainenance History                      *
// ************************************************************
// 
// Log #    Date      Name    Description
// _____  ________  ________  _________________________________
//  001    1/31/93  RCORON    Created record.
// 
// ***********************
Record KF0EW08 type basicRecord
  5 KF0EW-INIT-HDR KF0EW-INIT-HDR ; 
    10 XSE-SESN-CD XSE-SESN-CD ; 
    10 YNS-SESN-YR YNS-SESN-YR ; 
    10 CU-CO-ID CU-CO-ID ; 
    10 KF0EW-CU-STOR-ID KF0EW-CU-STOR-ID ; 
    10 KF0EW-XNX-DEPT-ID-XREF KF0EW-XNX-DEPT-ID-XREF ; 
    10 YSB-SLS-RESP-CD YSB-SLS-RESP-CD ; 
  5 KF0EW-INIT-DTL KF0EW-INIT-DTL ; 
    10 CO-MGMT-SAGCY-ID CO-MGMT-SAGCY-ID ; 
    10 CO-MGMT-SREP-ID CO-MGMT-SREP-ID ; 
    10 CO-CUST-SLS-ADJAMT CO-CUST-SLS-ADJAMT ; 
    10 CO-ADJ-MGR-SLS-FL CO-ADJ-MGR-SLS-FL ; 
    10 KF0EW-CO-SLS-ADJ-EDT KF0EW-CO-SLS-ADJ-EDT ; 
    10 KF0EW-CO-SLS-ADJ-XDT KF0EW-CO-SLS-ADJ-XDT ; 
    10 XXX-STAT XXX-STAT ; 
end // end KF0EW08

//*** RECORD=KF0EW09 ****
// This record contains the working storage fields for the call
// to IO5610
// ************************************************************
// *                MAINTENANCE HISTORY                       *
// ************************************************************
// Log #     Date        Name    Description
// ---       ----        ----    -----------
// 001       09/22/93    ISCHMI  Created record.
// ***********************
Record KF0EW09 type basicRecord
  5 KF0EW-IO-PASS KF0EW-IO-PASS ; 
    10 KF0EW-IO-TASK KF0EW-IO-TASK ; 
    10 KF0EW-IO-IND1 KF0EW-IO-IND1 ; 
end // end KF0EW09

//*** RECORD=VKOCOM01 ****
// ************************************************************
// *                                                          *
// *  This is the Commissions System common comment table.    *
// *                                                          *
// *  DB2 Table:   DCOMM.VKOCOM01                             *
// *  I/O MOD:     IO2480                                     *
// *  DCLGEN:      DCL01125                                   *
// *                                                          *
// *  Table Key:   CO-COMNT-ID                                *
// *               CO-COMNT-SEQ-NBR                           *
// *                                                          *
// ************************************************************
// *                    MAINTENANCE                           *
// ************************************************************
// *                                                          *
// * Log #    Date    Init  Description                       *
// * -----  --------  ----  --------------------------------- *
// *                                                          *
// *  001   08/27/92   JAB  Created new record                *
// *                                                          *
// ************************
Record VKOCOM01 type basicRecord
  5 VKOCOM01-GROUP VKOCOM01-GROUP ; 
    10 CO-COMNT-ID CO-COMNT-ID ; 
    10 CO-COMNT-SEQ-NBR CO-COMNT-SEQ-NBR ; 
    10 CO-COMNT-TYP-CD CO-COMNT-TYP-CD ; 
    10 CO-COMNT CO-COMNT ; 
    10 XXX-USER-ID XXX-USER-ID ; 
    10 ZZ-SDT ZZ-SDT ; 
    10 ZZ-CHNG-DT ZZ-CHNG-DT ; 
    10 ZZ-CHNG-HHMM ZZ-CHNG-HHMM ; 
    10 ZZ-CHNG-CNT ZZ-CHNG-CNT ; 
end // end VKOCOM01

//*** RECORD=XX0XW04 ****
// ************************************************************
// 
//         ***** POP UP WINDOW WORKING RECORD *****
// 
// ************************************************************
// 
// Overview :
//            This record is the working record used by
//            the CSP pop up window processes - xpxx004
//            and xpyns01.
// 
// Maintenance History :
// 
// CONTROL    DATE     NAME   DESCRIPTION OF CHANGE
// -------  --------  ------  ---------------------------------
//          02-04-93  jbecke  Created
// ************************************************************
// ***********************
Record XX0XW04 type basicRecord
  10 XX0XW-SCREEN-INDEX XX0XW-SCREEN-INDEX ; 
  10 XX0XW-TABLE-INDEX XX0XW-TABLE-INDEX ; 
  10 XX0XW-FIRST-ENTRY-INDEX XX0XW-FIRST-ENTRY-INDEX ; 
  10 XX0XW-PAGE-TOP XX0XW-PAGE-TOP ; 
  10 XX0XW-PAGE-BOTTOM XX0XW-PAGE-BOTTOM ; 
  10 XX0XW-END-FLAG XX0XW-END-FLAG ; 
  10 XX0XW-FIRST-TIME-FLAG XX0XW-FIRST-TIME-FLAG ; 
  10 XX0XW-ERROR-FLAG XX0XW-ERROR-FLAG ; 
  10 XX0XW-SELECT-FLAG XX0XW-SELECT-FLAG ; 
  10 YNS-BUS-FUNC-ID YNS-BUS-FUNC-ID ; 
  10 XSE-SESN-CD XSE-SESN-CD ; 
  10 YNS-SESN-YR YNS-SESN-YR ; 
end // end XX0XW04

// CO-COMNT
DataItem CO-COMNT char(60)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CO-COMNT-SEQ-NBR
DataItem CO-COMNT-SEQ-NBR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CO-COMNT-TYP-CD
DataItem CO-COMNT-TYP-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// selected Adj count from KF0F
DataItem KF0EW-ADJ-HELD-CNT smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// pointer to select Adj frm KF0F
DataItem KF0EW-ADJ-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comment current page pointer
DataItem KF0EW-CMT-CURR-PG smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// highest comment id seq nbr
DataItem KF0EW-CMT-HIGHEST-SEQ smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comment highest page pointer
DataItem KF0EW-CMT-MAX-PG smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// comment map line index
DataItem KF0EW-CMT-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// CO_SLS_ADJ_EDT
DataItem KF0EW-CO-SLS-ADJ-EDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// CO_SLS_ADJ_EDT
DataItem KF0EW-CO-SLS-ADJ-XDT char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-COMMENT-PAGE char(576)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-COMMENT-PAGE-LENGTH num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0EW-CU-STOR-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e curr date ccyymmdd
DataItem KF0EW-CURR-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0EW-CURR-DTL char(28)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-CURR-DTL-OTHERS char(27)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-CURR-HDR char(18)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e curr time hhmm
DataItem KF0EW-CURR-HHMM smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kf0e curr time hhmmss
DataItem KF0EW-CURR-HHMMSS int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Display errors found switch
DataItem KF0EW-DISP-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// missing sesn warning displayed
DataItem KF0EW-DT-CHK-WARN-DISPLAYED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// dup key was pressed flag
DataItem KF0EW-DUPKEY-PRESSED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-CCYYMMDD num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-CCYYMMDD-CENTURY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-CCYYMMDD-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-CCYYMMDD-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-CCYYMMDD-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-MMDDYY-DASH1 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-MMDDYY-DASH2 char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-MMDDYY-DAY char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-MMDDYY-DISPLAY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-MMDDYY-MONTH char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp storage rec length
DataItem KF0EW-EDIT-MMDDYY-YEAR char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e error flag
DataItem KF0EW-ERR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// formula rec split type ind
DataItem KF0EW-FP-DT-TYP char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// frmla proc date parm
DataItem KF0EW-FP-EDT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end


DataItem KF0EW-FP-NET-AMT int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// frmla proc agency parm
DataItem KF0EW-FP-SAGCY-ID char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// frmla proc rep parm
DataItem KF0EW-FP-SREP-ID smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kf0e numeric work area
DataItem KF0EW-FP-WORK-AMT decimal(17,6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem KF0EW-INIT-DTL char(28)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-INIT-HDR char(18)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// unused
DataItem KF0EW-IO-IND1 smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// io5610 calling field
DataItem KF0EW-IO-PASS char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// literal value
DataItem KF0EW-IO-TASK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e curr date ccyymmdd
DataItem KF0EW-LASTDAY-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// end of cursor fl for VFRMLA01
DataItem KF0EW-MORE-VFRMLA01-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end of cursor fl for FKOCOM01
DataItem KF0EW-MORE-VKOCOM01-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// security check msg area
DataItem KF0EW-MSG2 char(49)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG2-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG2-LIT char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// security check msg area
DataItem KF0EW-MSG3 char(46)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG3-LIT char(42)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG3-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// security check msg area
DataItem KF0EW-MSG4 char(61)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG4-AGENCY char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG4-LIT1 char(45)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG4-LIT2 char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-MSG4-REP num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// next season is not in table
DataItem KF0EW-NXT-YNS-MISSING-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-PREV-DTL char(28)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-PREV-DTL-OTHERS char(27)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-PREV-DTL-READ-ONLY char(18)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-PREV-HDR char(18)  {
  align = none, fillCharacter = nullFill, inputRequired = no
}
end

// Adjustment process indicator
DataItem KF0EW-PROC-TYP-IND char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// protect map fields flag
DataItem KF0EW-PROTECT-ATTR-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e work index pointer
DataItem KF0EW-PTR smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// next key is required flag
DataItem KF0EW-REQUIRED-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// save area for comment id
DataItem KF0EW-SAVE-CO-COMNT-ID int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// application name
DataItem KF0EW-TSQ-APPL char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// temp sto rec length
DataItem KF0EW-TSQ-LEN num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// length of VFRMLA01
DataItem KF0EW-VFRMLA01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// length of VKOCOM01
DataItem KF0EW-VKOCOM01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Adjustment found flag
DataItem KF0EW-VSNADJ01-FOUND-FL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// length of VSNADJ01
DataItem KF0EW-VSNADJ01-LENGTH smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kf0e work date
DataItem KF0EW-WORK-CCYYMMDD int {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// kf0e work date
DataItem KF0EW-WORK-CHAR-DATE char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e work date
DataItem KF0EW-WORK-CHAR-DATE-BLANK char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e work date
DataItem KF0EW-WORK-CHAR-DATE-MM-DD-YY char(8)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e work date
DataItem KF0EW-WORK-CHAR-DATE-MMDDYY char(6)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem KF0EW-XNX-DEPT-ID-XREF char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// XSE_SESN_CD
DataItem KF0EW-YNSTBL-XSE-SESN-CD char(2)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// buisiness function id
DataItem KF0EW-YNSTBL-YNS-BUS-FUNC-ID char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// kf0e work key for ynstbl
DataItem KF0EW-YNSTBL-YNS-RECORD-KEY char(9)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// YNS_SESN_YR
DataItem KF0EW-YNSTBL-YNS-SESN-YR num(4)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// dcomm.vkoctl01 group level
DataItem VKOCOM01-GROUP char(88)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// end flag
DataItem XX0XW-END-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// scroll error flag
DataItem XX0XW-ERROR-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// first entry for system in tble
DataItem XX0XW-FIRST-ENTRY-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// first time thru flag
DataItem XX0XW-FIRST-TIME-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// bottom of previous page
DataItem XX0XW-PAGE-BOTTOM smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// top of current page
DataItem XX0XW-PAGE-TOP smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// end of first page save index
DataItem XX0XW-SCREEN-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

// entry was selected
DataItem XX0XW-SELECT-FLAG char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// counter link screen/table
DataItem XX0XW-TABLE-INDEX smallint {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

