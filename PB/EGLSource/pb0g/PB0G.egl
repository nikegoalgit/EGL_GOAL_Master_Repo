package pb0g;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fk.common.*;
import fy.common.*;
import in1.common.*;
import pc.common.*;
import pg.common.*;
import sy.common.*;
import ta.common.*;
import ts.common.*;
//*** PROGRAM=PB0G ****
// ************************************************************
// *
// *   THIS PROGRAM IS USED TO SUBMIT THE FOOTWEAR BATCH AUTO-
// *   LOAD OF THE INLINE (PO TYPE 'FT').  ALL FACTORIES WILL
// *   LOAD AT THE SAME TIME.
// *
// *   THE USER  WILL ENTER THE BUY YEAR YY AND THE BUY MONTH
// *   MM ON THE MAP, THE PROGRAM WILL SUPPLY THE CENTRY.
// *
// *   THE USER WILL HIT THE ENTER KEY TO SUBMIT THE JOB.
// *
// *   DATE       USERID           COMMENTS
// *  _______    ________         ________________________
// *  9/13/89    GWITZI           NEW APPLICATION
// * 12/05/89    JWOOD            REMOVED TARREC FROM LIST
// * 12/05/89    JWOOD            REPLACED TA0PM001 WITH NEW
// * 07/17/90    JWOOD            REmoved ut2rec form t&l list
// * 11/14/90    mchris           changed jcl tables to run
// *                              ta0131 rather than ta0141
// *                              to allow for flexibility in
// *                              report distribution.
// * 11/21/90    mchris           changed to only select po's
// *                              with a delivery month that
// *                              is 3 months out for all
// *                              countries.
// * 12/12/90    mchris           changed copies of 3 for
// *                              pc1501 rpt to 1 copy.
// * 01/09/91    chaert           changed PC0D500. allow PF9
// *                              to be pressed before enter.
// * 04/16/91    lsutto           changed output to 'N' for
// *                              bundle processing.
// * 08/12/91    lsutto           changed non-laser print
// *                              requests to one copy only
// * 08/20/91    dfranc           Added check for style, color
// *                              within season.
// * 12/29/93    gamen            Add theater of op's logic.
// * 12/18/96    rmcafe           modified validation code tbl
// *                              season code.  pb0gt03
// * 12/02/97    BMUSTI           modified JCL table
// ************************************************************
// *********************
Program PB0G type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PC00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  FY1REC FY1REC; // record
  PB0GW01 PB0GW01; // record
  PC3REC PC3REC; // record
  PC4REC PC4REC; // record
  PCFREC PCFREC; // record
  PCWREC PCWREC; // record
  PCYREC PCYREC; // record
  PG2REC PG2REC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XCTHREC XCTHREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PB0GT01; // table
  use PB0GT02 {deleteAfterUse = yes}; // table
  use PB0GT11; // table
  use PB0GT22 {deleteAfterUse = yes}; // table
  use PB0GT03 {deleteAfterUse = yes}; // table
  use PB0GM.PB0GM001,  // forms
      PB0GM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPC001: XPPC001();

     /* ------------------------------------------------------------*/

     /* ------------------------------------------------------------*/

    set PB0GW01 empty; /* Initialize working storage*/
    set PC3REC empty; /* Initialize*/
    set PC4REC empty; /* Initialize*/
    set PG2REC empty; /* Initialize*/
    set PCYREC empty; /* Initialize*/
    set FY1REC empty; /* Initialize*/
    set PCFREC empty; /* Initialize*/

    set ERRSQLCA empty; /* Initialize*/
    set SQLCA empty; /* Initialize*/

    set TA1REC empty; /* Initialize*/
    set TA2REC empty; /* Initialize date record*/
    set XCTHREC empty; /* Initialize theater of ops record*/
    set TA6REC empty; /* Initialize Jcl record*/
    set TAEREC empty; /* Initialize*/

    set PB0GM001 initial; /* Initialize map*/

    set XX0XW01 empty; /* Initialize*/

    PB0G001: PB0G001();
     /* no flow*/
    PB0G002: PB0G002();
    goto PB0G002;
  end // end main
end // end PB0G

// GET CURRENT DATE
Function PB0G001()

   /* ----------------------------------------------------------*/
   /* CURRENT DATE*/
   /* ----------------------------------------------------------*/

  set TA2REC empty; /* Clear date record*/
  TA2REC.TA2DTOPT = "GETDATE"; /* Move in option*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Date validation*/

  if (sysVar.errorCode == "00000000") /* Good call*/
    if (TA2REC.TA2RTNCD == 0000) /* Valid date*/
      PB0GW01.PB0GWCDT = TA2REC.TA2GRGGN; /* Current date*/
    else
      converseLib.validationFailed(10); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/
      TA1REC.TA1MAP = sysVar.errorCode; /* Csp return code*/
      TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* Sql commarea*/
      TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
      TA1REC.TA1PGMNM = "PC0D"; /* Process name*/
      TA1REC.TA1LOC = "SELECT DATE ROUTINE     ";

      call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

      converseLib.clearScreen();
       /* Clear screen before redisplay*/
      PB0GM001.XXXPRCNM = "PB0G001"; /* Process name*/

    end
  end

   /* ----------------------------------------------------------*/
   /* set default season code*/
   /* ----------------------------------------------------------*/

  if (PB0GWMMM == 11
   || PB0GWMMM == 12)
    PB0GW01.PB0GWSES = "F";
    PB0GW01.PB0GWSEY = PB0GW01.PB0GWY2 + 1;
  else
    if (PB0GWMMM == 05
     || PB0GWMMM == 06
     || PB0GWMMM == 07
     || PB0GWMMM == 08
     || PB0GWMMM == 09
     || PB0GWMMM == 10)
      PB0GW01.PB0GWSES = "S";
      PB0GW01.PB0GWSEY = PB0GW01.PB0GWY2 + 1;
    else
      if (PB0GWMMM == 01
       || PB0GWMMM == 02
       || PB0GWMMM == 03
       || PB0GWMMM == 04)
        PB0GW01.PB0GWSES = "F";
        PB0GW01.PB0GWSEY = PB0GW01.PB0GWY2;
      end
    end
  end

  PB0GM001.PCFSECD = PB0GW01.PCFSECD; /* default sesn-cd*/

   /* ----------------------------------------------------------*/
   /* set other default fields*/
   /* ----------------------------------------------------------*/

  PB0GM001.PB0GMTDT = PB0GW01.PB0GWCDT; /* default to-date*/

  PB0GM001.PB0GMPTF = "N"; /* default print-flag*/

  PB0GW01.XGPCD = "03"; /* default gpc-cd*/

end // end PB0G001

// MAIN PROCESS TO DISPLAY MAP
Function PB0G002()

   /* ------------------------------------------------------------*/
   /* This is the main process used to show the Map. Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.*/

   /* In all PF Key, "EZEFLO" is used to exit to redisplay the*/
   /* map when a PF Key is pressed.*/
   /* ------------------------------------------------------------*/

  if (PCWREC.XGPCD == "03") /* Apparel*/

    PB0G003(); /* Report generation pcocess*/

  else
    PCWREC.XXXMSGNO = 138; /* Request for application invalid*/
    COMMAREA.CAUSERA = PCWREC.CAUSERA;
    COMMAREA.CATOAP = "PC0A"; /* To application*/
    XSPCS01(); /* Exit to another application*/

    /* ------------------------------------------------------------*/
     /* IF FOR SOME REASON THE USER IN NOT AUTHORIZED TO GET INTO*/
     /* THIS PROGRAM AND IS NO AUTHORIZED TO GET TO THE PC0A MENU*/
     /* THE USER WILL BE KICKED OUT TO THE MAIN MENU. THIS WILL*/
     /* ALLOW THE PROGRAM TO TERMINATE AND NOT RESULT IN AN*/
     /* INFINITE LOOP.*/
    /* ------------------------------------------------------------*/
    PCWREC.XXXMSGNO = 138; /* Request for application invalid*/
    COMMAREA.CAUSERA = PCWREC.CAUSERA;
    COMMAREA.CATOAP = "MN0M"; /* To application*/
    XSPCS01(); /* Exit to another application*/
  end


end // end PB0G002

// PROGRAM PROCESS CONTROL
Function PB0G003()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1)     NOT USED      (OBTAIN DATA TO DISPLAY).*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/
   /* 6) Process the entered data.*/

   /* In all PF Key functions "EZEFLO" is used to redisplay the*/
   /* map when an error is found.*/

   /* "EZEFLO" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PB0G100(); /* Format and display the map*/

  PB0G200(); /* Check attention identifier*/

  PB0G300(); /* Reset fields to normal intensity*/

  PB0G400(); /* Verify the entered data*/

  PB0G500(); /* Process the entered data*/


end // end PB0G003

// DISPLAY SELECT MAP
Function PB0G100()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PB0GM001.XXXPRCNM = "PB0G100"; /* PROCESS NAME*/
      PB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PB0GM001 alarm; /* Sound alarm*/

  end

  PB0GM001.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  PB0GM001.PB0GMTDT = PB0GW01.PB0GWCDT;
  PB0GW01.XGPCD = "03";

   /* pB0GS07 ?  FIND CURRENT SEASON AND DEFAULT SCREEN SESN-CD*/

  converse PB0GM001 ;


end // end PB0G100

// CHECK ATTENTION IDENTIFIERS
Function PB0G200()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    set PB0GM001 initial; /* Clear the map fields*/
    if (PB0GWMMM == 11
     || PB0GWMMM == 12)
      PB0GW01.PB0GWSES = "F";
      PB0GW01.PB0GWSEY = PB0GW01.PB0GWY2 + 1;
    else
      if (PB0GWMMM == 05
       || PB0GWMMM == 06
       || PB0GWMMM == 07
       || PB0GWMMM == 08
       || PB0GWMMM == 09
       || PB0GWMMM == 10)
        PB0GW01.PB0GWSES = "S";
        PB0GW01.PB0GWSEY = PB0GW01.PB0GWY2 + 1;
      else
        if (PB0GWMMM == 01
         || PB0GWMMM == 02
         || PB0GWMMM == 03
         || PB0GWMMM == 04)
          PB0GW01.PB0GWSES = "F";
          PB0GW01.PB0GWSEY = PB0GW01.PB0GWY2;
        end
      end
    end

    PB0GM001.PCFSECD = PB0GW01.PCFSECD; /* default sesn-cd*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PB0GM001.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PB0GM001.CATOAP; /* To application*/
      COMMAREA.CAITEM = PB0GM001.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PB0GM001.XXXPRCNM = "PB0G200"; /* Process name*/
    end

    set PB0GM001.CATOAP cursor, bold; /* Highlight*/
    PB0GM001.XXXPRCNM = "PB0G200"; /* Process name*/
    return; /* Exit to redisplay map*/
  end

  if (converseVar.eventKey is pf3) /* PF3  was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0X"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PB0GM001.XXXPRCNM = "PB0G200"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter /* ENTER was not pressed*/
   && converseVar.eventKey not pf9)  /* PF9 was not pressed*/

    PB0GM001.XXXPRCNM = "PB0G200"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    exit stack; /* Exit to redisplay map*/
  end


end // end PB0G200

// RESET HIGHLIGHTED FIELDS
Function PB0G300()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PB0GM001.CATOAP initialAttributes; /* Commarea TO application*/
  set PB0GM001.CAITEM initialAttributes; /* Commarea application data*/

  set PB0GM001.PCFSECD initialAttributes; /* po-id season code*/
  set PB0GM001.PB0GMPOM initialAttributes; /* po-id months*/
  set PB0GM001.FY1FCTYC initialAttributes; /* factory*/
  set PB0GM001.PC4ORTYP initialAttributes; /* order-type*/
  set PB0GM001.PB0GMPON initialAttributes; /* po-nbr*/
  set PB0GM001.SY1STNBR initialAttributes; /* style*/
  set PB0GM001.SY2CLRID initialAttributes; /* color*/
  set PB0GM001.PB0GMFDT initialAttributes; /* from date*/
  set PB0GM001.PB0GMTDT initialAttributes; /* to date*/
  set PB0GM001.PB0GMPTF initialAttributes; /* laser print flag*/

end // end PB0G300

// PROCESS THE ENTERED DATA
Function PB0G400()

   /* ------------------------------------------------------------*/
   /* First check to see if a fast path was requested.*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.CAITEM > " ") /* Application data was entered*/

    set PB0GM001.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    return;

  end


   /* ------------------------------------------------------------*/
    /* otherwise...  validate screen fields*/
   /* ------------------------------------------------------------*/

  PB0GW01.PB0GWERR = "N"; /* clear out edit error flag*/

   /* ------------------------------------------------------------*/
   /* check for conflicting selection criteria*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PB0GMPTF == "N" /* If season selected*/
   && PB0GM001.PB0GMPOM == " " /* but*/
   && PB0GM001.FY1FCTYC == " " /* did       then*/
   && PB0GM001.PC4ORTYP == " " /* not       you must*/
   && PB0GM001.PB0GMPON == 0   /* select    chose*/
   && PB0GM001.SY1STNBR == " " /* any       the*/
   && PB0GM001.SY2CLRID == " " /* other     laser*/
   && PB0GM001.PB0GMFDT == 0)  /* fields    printer.*/

    set PB0GM001.PB0GMPTF cursor, bold;
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    converseLib.validationFailed(424); /* must send big printout to laser*/
  end

  if (PB0GM001.PB0GMFDT > 0
   && PB0GM001.PB0GMPON > 0)
    set PB0GM001.PB0GMFDT cursor, bold;
    set PB0GM001.PB0GMPON bold;
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    converseLib.validationFailed(423);
                                   /* can't enter both from-date and po-num*/
  end

  if (PB0GM001.PC4ORTYP > "  "
   && PB0GM001.PB0GMPON > 0)
    set PB0GM001.PC4ORTYP cursor, bold;
    set PB0GM001.PB0GMPON bold;
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    converseLib.validationFailed(420); /* can't enter both or-typ and po-num*/
  end

  if (PB0GM001.FY1FCTYC > "  "
   && PB0GM001.PB0GMPON > 0)
    set PB0GM001.FY1FCTYC cursor, bold;
    set PB0GM001.PB0GMPON bold;
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    converseLib.validationFailed(422); /* can't enter both fcty and po-num*/
  end

  if (PB0GM001.PB0GMPOM > "  "
   && PB0GM001.PB0GMPON > 0)
    set PB0GM001.PB0GMPOM cursor, bold;
    set PB0GM001.PB0GMPON bold;
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    converseLib.validationFailed(418); /* can't enter both po-num & po-mo*/
  end

   /* ------------------------------------------------------------*/
   /* validate print flag*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PB0GMPTF != "N"
   && PB0GM001.PB0GMPTF != "Y")
    set PB0GM001.PB0GMPTF cursor, bold;
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
    converseLib.validationFailed(42); /* must enter 'y' or 'n'*/
  else
    PB0GW01.PB0GMPTF = PB0GM001.PB0GMPTF;
  end

   /* ------------------------------------------------------------*/
   /* validate from date*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PB0GMFDT > 0
   && PB0GM001.PB0GMFDT != PB0GW01.PB0GMFDT)
    set TA2REC empty;
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGG = PB0GM001.PB0GMFDT;
    PB0GS01(); /* edit date range*/

    if (TA2REC.TA2RTNCD != 0)
      set PB0GM001.PB0GMFDT cursor, bold;
      PB0GW01.PB0GWERR = "Y";
      PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
      converseLib.validationFailed(38); /* Indicate missing or invalid*/
    else
      PB0GW01.PB0GMFDT = PB0GM001.PB0GMFDT;
    end
  else
    if (PB0GM001.PB0GMFDT > 0)
      /* next sentence*/
    else
      PB0GW01.PB0GMFDT = 0;
    end
  end

   /* IF PB0GM001.PB0GMFDT > PB0GM001.PB0GMTDT;*/
    /* SET PB0GM001.PB0GMFDT CURSOR,BRIGHT;*/
    /* MOVE 'Y' TO PB0GW01.PB0GWERR;*/
    /* MOVE 'PB0G400' TO PB0GM001.XXXPRCNM  ; Process name*/
    /* MOVE 136 TO EZEMNO            ; Indicate missing or invali*/
   /* END ;*/


   /* ------------------------------------------------------------*/
   /* validate to date*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PB0GMTDT > 0
   && PB0GM001.PB0GMTDT != PB0GW01.PB0GMTDT)
    set TA2REC empty;
    TA2REC.TA2GRTYP = "G";
    TA2REC.TA2GRGG = PB0GM001.PB0GMTDT;
    PB0GS01(); /* edit date range*/

    if (TA2REC.TA2RTNCD != 0)
      set PB0GM001.PB0GMTDT cursor, bold;
      PB0GW01.PB0GWERR = "Y";
      PB0GM001.XXXPRCNM = "PB0G400"; /* Process name*/
      converseLib.validationFailed(38); /* Indicate missing or invalid*/
    else
      PB0GW01.PB0GMTDT = PB0GM001.PB0GMTDT;
    end
  else
    if (PB0GM001.PB0GMTDT > 0)
      /* next sentence*/
    else
      PB0GW01.PB0GMTDT = 0;
    end
  end

   /* ------------------------------------------------------------*/
   /* validate color code*/
       /* (can't enter color without style)*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.SY2CLRID > " "
   && PB0GM001.SY1STNBR == " ")
    converseLib.validationFailed(419);
    PB0GW01.PB0GWERR = "Y";
    PB0GM001.XXXPRCNM = "PB0G400";
    set PB0GM001.SY2CLRID cursor, bold;
  end

   /* ------------------------------------------------------------*/
   /* validate style number*/
   /* ------------------------------------------------------------*/
  if (PB0GM001.SY1STNBR != " ")
    if (PB0GM001.SY1STNBR != PB0GW01.SY1STNBR
     || PB0GM001.SY2CLRID != PB0GW01.SY2CLRID)

      set PG2REC empty;

      PG2REC.XGPCD = "03";
      PG2REC.SY1STNBR = PB0GM001.SY1STNBR;
      if (PB0GM001.SY2CLRID != "   ")
        PG2REC.SY2CLRID = PB0GM001.SY2CLRID;
        PB0GS04(); /* validate style/color*/
      else
        PG2REC.SY2CLRID = "00";
        PB0GW01.SY2CLRID = " ";
        PB0GS05(); /* validate style only*/
      end
    end

  else
    if (PB0GM001.SY1STNBR != " ")
      /* next sentence*/
    else
      PB0GW01.SY1STNBR = "     ";
    end

  end

   /* ------------------------------------------------------------*/
   /* validate style number/color code in season*/
   /* ------------------------------------------------------------*/
  if (PB0GM001.SY1STNBR != " "
   && PB0GM001.SY2CLRID != " ")

    set PG2REC empty;

    PG2REC.XGPCD = "03";
    PG2REC.SY1STNBR = PB0GM001.SY1STNBR;

    PB0GS08();

  end
   /* --------------------------------------------------------*/
   /* verify po number*/
   /* --------------------------------------------------------*/

  if (PB0GM001.PB0GMPON != 0 /* PO nbr entered*/
   && PB0GM001.PB0GMPON != PB0GW01.PB0GMPON)

    set PC3REC empty; /* Initialize record*/
    PC3REC.XGPCD = "03";
    PC3REC.PC3PONBR = PB0GM001.PB0GMPON;

    set PCYREC empty;
    PCYREC.PCYFUNC = "S ";
    try
      call "IO3270" (PCYREC, SQLCA, PC3REC) {isNoRefresh = yes, isExternal = yes};
    end /* Select row*/

    if (sysVar.errorCode == "00000000") /* Successful call*/
      if (SQLCA.VAGen_SQLCODE != 0) /* Bad sql code*/
        if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/
          converseLib.validationFailed(69);
          PB0GM001.XXXPRCNM = "PB0G400";
          set PB0GM001.PB0GMPON cursor, bold;
          PB0GW01.PB0GWERR = "Y";
        else
          if (SQLCA.VAGen_SQLCODE == -911) /* Resource not available*/
            converseLib.validationFailed(11); /* Indicate not available*/
            PB0GM001.XXXPRCNM = "PB0G400";
            exit stack;
          end
        end
      else
        PB0GW01.PB0GMPON = PB0GM001.PB0GMPON;
      end

    else
      converseLib.validationFailed(10); /* Indicate system error*/
      PB0GM001.XXXPRCNM = "PB0G400";
      converseLib.clearScreen();
      
      exit stack;
    end
  else
    if (PB0GM001.PB0GMPON != 0) /* PO nbr entered*/
      /* next sentence*/
    else
      PB0GW01.PB0GMPON = 0;
    end
  end

   /* ------------------------------------------------------------*/
   /* Verify  P.O. Type is valid and active.*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PC4ORTYP != "  ")
    set PC4REC empty;
    PC4REC.XGPCD = "03"; /* ===> GPC Code*/
    PC4REC.PC4ORTYP = PB0GM001.PC4ORTYP; /* ===> P.O. Type code*/

    PB0GS06(); /* ===> call P.O. Type D.B. from I.O.*/
                                   /* MODE*/

    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     && PC4REC.XXXSTAT == "A")  
      PB0GW01.PC4ORTYP = PB0GM001.PC4ORTYP; /* ===> p.o. type code*/
    else
      if (SQLCA.VAGen_SQLCODE == 100 /* Row not found*/
       || PC4REC.XXXSTAT != "A")    
        set PB0GM001.PC4ORTYP cursor, bold;
        PB0GM001.XXXPRCNM = "PB0G400"; /* Module identification*/
        converseLib.validationFailed(33);
      end
    end
  else
    if (PB0GM001.PC4ORTYP > "  ")
      /* next sentence*/
    else
      PB0GW01.PC4ORTYP = "  "; /* ===> p.o. type code*/
    end
  end

   /* ------------------------------------------------------------*/
   /* validate factory code*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.FY1FCTYC != "    "
   && PB0GM001.FY1FCTYC != PB0GW01.FY1FCTYC)
    set FY1REC empty;
    FY1REC.FY1FCTYC = PB0GM001.FY1FCTYC;
    FY1REC.XGPCD = "03";

    try
      call "IO2810" ("S ", SQLCA, FY1REC) {isNoRefresh = yes, isExternal = yes};
    end
    if (SQLCA.VAGen_SQLCODE != 0)
      set PB0GM001.FY1FCTYC cursor, bold; /* Highlight*/
      converseLib.validationFailed(32); /* Indicate missing or invalid*/
      PB0GM001.XXXPRCNM = "PB0G400";
    else
      PB0GW01.FY1FCTYC = PB0GM001.FY1FCTYC;
    end
  else
    if (PB0GM001.FY1FCTYC > "  ")
      /* next sentence*/
    else
      PB0GW01.FY1FCTYC = "    ";
    end
  end

   /* ------------------------------------------------------------*/
   /* validate the PO ID Months*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PB0GMPOM > " "
   && PB0GM001.PB0GMPOM != PB0GW01.PB0GMPOM)
    PB0GW01.PB0GMPOM = PB0GM001.PB0GMPOM;

    if (PB0GWPMO == "01"
     || PB0GWPMO == "02"
     || PB0GWPMO == "03"
     || PB0GWPMO == "04"
     || PB0GWPMO == "05"
     || PB0GWPMO == "06"
     || PB0GWPMO == "07"
     || PB0GWPMO == "08"
     || PB0GWPMO == "09"
     || PB0GWPMO == "10"
     || PB0GWPMO == "11"
     || PB0GWPMO == "12")
       /* next sentence*/
    else
      set PB0GM001.PB0GMPOM cursor, bold; /* Highlight*/
      PB0GW01.PB0GWERR = "Y";
      converseLib.validationFailed(421); /* Indicate missing or invalid*/
      PB0GM001.XXXPRCNM = "PB0G400";
    end

    if (PB0GWDMO == "01"
     || PB0GWDMO == "02"
     || PB0GWDMO == "03"
     || PB0GWDMO == "04"
     || PB0GWDMO == "05"
     || PB0GWDMO == "06"
     || PB0GWDMO == "07"
     || PB0GWDMO == "08"
     || PB0GWDMO == "09"
     || PB0GWDMO == "10"
     || PB0GWDMO == "11"
     || PB0GWDMO == "12")
      /* next sentence*/
    else
      set PB0GM001.PB0GMPOM cursor, bold; /* Highlight*/
      PB0GW01.PB0GWERR = "Y";
      converseLib.validationFailed(421); /* Indicate missing or invalid*/
      PB0GM001.XXXPRCNM = "PB0G400";
    end
  else
    PB0GW01.PB0GMPOM = "    ";
  end

  if (PB0GM001.PB0GMPOM > " "
   && converseVar.validationMsgNum == 421)
    PB0GW01.PB0GMPOM = "    ";
  end

   /* ------------------------------------------------------------*/
   /* validate 'short' season/year code*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PCFSECD != "  ")

    set PCFREC empty;
    PCFREC.PCFSECD = PB0GM001.PCFSECD;
    PCFREC.XXXSTAT = "*";
    PCFREC.PCFBUYMO = -1;

    try
      call "IO4090" ("S1", SQLCA, PCFREC) {isNoRefresh = yes, isExternal = yes};
    end
    if (SQLCA.VAGen_SQLCODE == 0)
      try
        call "IO4090" ("N1", SQLCA, PCFREC) {isNoRefresh = yes, isExternal = yes};
      end
      if (SQLCA.VAGen_SQLCODE != 0)
        set PB0GM001.PCFSECD cursor, bold; /* Highlight*/
        PB0GW01.PB0GWERR = "Y";
        converseLib.validationFailed(129); /* Indicate missing or invalid*/
        PB0GM001.XXXPRCNM = "PB0G400";
      else
        PB0GW01.PCFSECD = PB0GM001.PCFSECD;
      end
    else
      set PB0GM001.PCFSECD cursor, bold; /* Highlight*/
      PB0GW01.PB0GWERR = "Y";
      converseLib.validationFailed(82); /* Indicate missing or invalid*/
      PB0GM001.XXXPRCNM = "PB0G400";
    end
    try
      call "IO4090" ("C1", SQLCA, PCFREC) {isNoRefresh = yes, isExternal = yes};
    end
  else
    set PB0GM001.PCFSECD cursor, bold; /* Highlight*/
    PB0GW01.PB0GWERR = "Y";
    converseLib.validationFailed(82); /* Indicate missing or invalid*/
    PB0GM001.XXXPRCNM = "PB0G400";
  end

   /* ------------------------------------------------------------*/
   /* set 'abs' switch (apparel-buy data switch)*/
   /* ------------------------------------------------------------*/

  if (PB0GM001.PB0GMPOM > 0
   || PB0GM001.PB0GMPON > 0
   || PB0GM001.PC4ORTYP > " "
   || PB0GM001.PB0GMFDT > 0)
    PB0GW01.PB0GWABS = " ";
  else
    PB0GW01.PB0GWABS = "Y";
  end

   /* ------------------------------------------------------------*/
   /* set program switch*/
   /* ------------------------------------------------------------*/

  PB0GW01.PB0GWPGF = "Y";

   /* ------------------------------------------------------------*/
   /* If Pf9 was pressed dont display the message*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pf9
   && PB0GW01.PB0GWERR == "N") /* no edit errors indicated*/
    return;
  end


  if (PB0GW01.PB0GWERR == "N") /* no edit errors indicated*/
    PB0GM001.VAGen_EZEMSG = "PRESS PF9 TO SUBMIT THIS JOB";
  else
    PB0GM001.VAGen_EZEMSG = "                            ";
  end

end // end PB0G400

// PROCESS THE VALID DATA
Function PB0G500()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey not pf9 /* PF9 not pressed*/
   || PB0GW01.PB0GWERR == "Y"      /* we have an edit error*/
   || converseVar.validationMsgNum != 0) /* we have a message*/

    return; /* return to top of job*/

  end

   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/
  set XCTHREC empty;
  call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};

  if (XCTHREC.XCTH-THEATER-RUNTYPE == " ")
    PB0GM001.XXXPRCNM = "PB0G500"; /* module identification*/
    converseLib.validationFailed(8); /* Error encountered with print request*/
    exit stack;
  else
    if (PB0GM001.PB0GMPTF == "N") /* remote print*/
      if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD")
        PB0G510(); /* format production jcl*/
      else
        PB0G511(); /* format development jcl*/
      end
    end
    if (PB0GM001.PB0GMPTF == "Y") /* laser print*/
      if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD")
        PB0G520(); /* format production jcl*/
      else
        PB0G522(); /* format development jcl*/
      end
    end
  end

end // end PB0G500

// PROCESS THE prod jcl
Function PB0G510()
   /* ------------------------------------------------------------*/
   /* CREATE THE PRODUCTION JCL*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0GW01.PB0GWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PB0GW01.PB0GWLIX > 0) /* Until end of table*/

    if (PB0GT01.TARTYPE[PB0GWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GW01.PB0GWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GT01.TARJCL[PB0GWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PB0GT01.TARTYPE[PB0GWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0GT01.TARJCL[PB0GWLIX] == "/*EOF") /* End of table*/

      PB0GW01.PB0GWLIX = 0; /* Indicate end of table*/

    else

      PB0GW01.PB0GWLIX = PB0GW01.PB0GWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PB0GS02(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PB0GM001.XXXPRCNM = "PB0G510"; /* Process name*/
    PB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PB0GM001.VAGen_EZEMSG = " "; /* blank out scr msg to sbmt job*/

  else

    PB0GM001.XXXPRCNM = "PB0G510"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    exit stack;

  end

end // end PB0G510

// PROCESS THE TEST JCL
Function PB0G511()
   /* ------------------------------------------------------------*/
   /* CREATE THE test JCL*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0GW01.PB0GWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PB0GW01.PB0GWLIX > 0) /* Until end of table*/

    if (PB0GT11.TARTYPE[PB0GWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GW01.PB0GWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GT11.TARJCL[PB0GWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PB0GT11.TARTYPE[PB0GWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0GT11.TARJCL[PB0GWLIX] == "/*EOF") /* End of table*/

      PB0GW01.PB0GWLIX = 0; /* Indicate end of table*/

    else

      PB0GW01.PB0GWLIX = PB0GW01.PB0GWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PB0GS02(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PB0GM001.XXXPRCNM = "PB0G600"; /* Process name*/
    PB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PB0GM001.VAGen_EZEMSG = " "; /* blank out pf9 submit message*/

  else

    PB0GM001.XXXPRCNM = "PB0G600"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    exit stack;

  end

end // end PB0G511

// PROCESS THE prod jcl
Function PB0G520()
   /* ------------------------------------------------------------*/
   /* CREATE THE PRODUCTION JCL*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0GW01.PB0GWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PB0GW01.PB0GWLIX > 0) /* Until end of table*/

    if (PB0GT02.TARTYPE[PB0GWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GW01.PB0GWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GT02.TARJCL[PB0GWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PB0GT02.TARTYPE[PB0GWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0GT02.TARJCL[PB0GWLIX] == "/*EOF") /* End of table*/

      PB0GW01.PB0GWLIX = 0; /* Indicate end of table*/

    else

      PB0GW01.PB0GWLIX = PB0GW01.PB0GWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PB0GS02(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PB0GM001.XXXPRCNM = "PB0G510"; /* Process name*/
    PB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PB0GM001.VAGen_EZEMSG = " "; /* blank out scr msg to sbmt job*/

  else

    PB0GM001.XXXPRCNM = "PB0G510"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    exit stack;

  end

end // end PB0G520

// PROCESS THE TEST JCL
Function PB0G522()
   /* ------------------------------------------------------------*/
   /* CREATE THE test JCL*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0GW01.PB0GWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PB0GW01.PB0GWLIX > 0) /* Until end of table*/

    if (PB0GT22.TARTYPE[PB0GWLIX] == "P") /* Parameters statement*/

      /* ------------------------------------------------------------*/
       /* Format parameters*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GW01.PB0GWJCL; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = "P"; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    else

      /* ------------------------------------------------------------*/
       /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

      TA6REC.TARJCL[TA6INDEX] = PB0GT22.TARJCL[PB0GWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PB0GT22.TARTYPE[PB0GWLIX]; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    end

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0GT22.TARJCL[PB0GWLIX] == "/*EOF") /* End of table*/

      PB0GW01.PB0GWLIX = 0; /* Indicate end of table*/

    else

      PB0GW01.PB0GWLIX = PB0GW01.PB0GWLIX + 1; /* Increment table index*/

    end
  end


   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  PB0GS02(); /* Submit the JCL*/

   /* ------------------------------------------------------------*/
   /* Display results of print request.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PB0GM001.XXXPRCNM = "PB0G600"; /* Process name*/
    PB0GM001.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
    PB0GM001.VAGen_EZEMSG = " "; /* blank out pf9 submit message*/

  else

    PB0GM001.XXXPRCNM = "PB0G600"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    exit stack;

  end

end // end PB0G522

// date validation yymm
Function PB0GS01()

   /* ------------------------------------------------------------*/
   /* validate/format from YYMM to CCYYMM.*/
   /* ------------------------------------------------------------*/

  TA2REC.TA2DTOPT = "GREGGREG"; /* option*/

  try
    call "TA0040" (TA2REC) {isNoRefresh = yes, isExternal = yes};
  end /* date routine*/

   /* ------------------------------------------------------------*/
   /* Indicate error if the date doesn't pass the verification.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode != "00000000" /* Call successful*/
   || TA2REC.TA2RTNCD >= 888)        /* and subroutine completed*/

    TAEREC.TAEDESC1 = sysVar.errorCode;
    TAEREC.TAEDESC2 = TA2REC.TA2GROUP;

    TA1REC.TA1FUNC = "RETN"; /* Termination function*/
    TA1REC.TA1TYPE = "APPL"; /* Type of error*/
    TA1REC.TA1LOC = "PB0GS01 DATE EDIT CCYYMMDD";

    call "TA0020" (TA1REC, TAEREC) {isExternal = yes}; /* Error diagnosis routine*/

    PB0GM001.XXXPRCNM = "PB0GS01"; /* Module identification*/
    converseLib.validationFailed(10); /* System error occurred*/

    exit stack; /* exit to display map*/

  end


end // end PB0GS01

// SUBMIT JCL TO INTERNAL READER
Function PB0GS02()

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "Y"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* CICS job completed message*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(190); /* Return message*/
    PB0GM001.XXXPRCNM = "PC0DS96"; /* Process name*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(86); /* Indicate user cancelled*/
    PB0GM001.XXXPRCNM = "PC0DS96"; /* Process name*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    PB0GM001.XXXPRCNM = "PC0DS96"; /* Process name*/

  end

  exit stack; /* Exit to display map*/


end // end PB0GS02

// select 's' dprodg.vsyclr01
Function PB0GS04()
   /* ------------------------------------------------------------*/
   /* obtain style number dprodg.vsyclr01*/
   /* ------------------------------------------------------------*/

  PG2REC.XDMCD = "00";
  PG2REC.XGPCD = "03";

  try
    call "IO3120" ("S ", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/

      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(52);
        PB0GW01.PB0GWERR = "Y";
        PB0GM001.XXXPRCNM = "PB0GS04";
        set PB0GM001.SY1STNBR cursor, bold;
        set PB0GM001.SY2CLRID bold;
      else
        PB0GW01.SY1STNBR = PB0GM001.SY1STNBR;
        PB0GW01.SY2CLRID = PB0GM001.SY2CLRID;
        set PB0GM001.SY1STNBR initialAttributes;
      end


      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PB0GM001.XXXPRCNM = "PB0GS04"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(41); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODG.VSYCLR01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PB0GS04"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PB0GS04

// select 's' dprodg.vsyclr01
Function PB0GS05()
   /* ------------------------------------------------------------*/
   /* obtain style number dprodg.vsyclr01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 0 /* Normal return code*/
     || SQLCA.VAGen_SQLCODE == 100) /* row not found*/

      if (SQLCA.VAGen_SQLCODE == 100)
        converseLib.validationFailed(52);
        PB0GW01.PB0GWERR = "Y";
        PB0GM001.XXXPRCNM = "PB0G400";
        set PB0GM001.SY1STNBR cursor, bold;
      else
        PB0GW01.SY1STNBR = PB0GM001.SY1STNBR;
        PB0GW01.SY2CLRID = PB0GM001.SY2CLRID;
        set PB0GM001.SY1STNBR initialAttributes;
      end

      try
        call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
      end /* Select set*/

      return;

    end
  end

   /* ------------------------------------------------------------*/
   /* indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PB0GM001.XXXPRCNM = "PB0GS06"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(41); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODG.VSYCLR01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PB0GS06"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PB0GS05

// Select (S ) Unique    VPOTYP01
Function PB0GS06()
   /* ------------------------------------------------------------*/
   /* Select the row to display from the table.*/
   /* ------------------------------------------------------------*/

  try
    call "IO3320" ("S ", SQLCA, PC4REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select row*/

   /* ------------------------------------------------------------*/
   /* If successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/

    if (SQLCA.VAGen_SQLCODE == 0) /* Normal return code*/
      return; /* Return to previous process*/
    end

    /* ------------------------------------------------------------*/
     /* If row not found, indicate the P.O. Type invalid.*/
    /* ------------------------------------------------------------*/

    if (SQLCA.VAGen_SQLCODE == 100) /* Row not found*/

      return; /* Exit to display map*/

    end

  end

   /* ------------------------------------------------------------*/
   /* If data not available, return an error message to the user.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/


  PB0GM001.XXXPRCNM = "PB0GS06"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(10); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT THE TABLE ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNM = PB0GM001.XXXPRCNM; /* Program number*/
  TA1REC.TA1DBASE = "DPRODC  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VPOTYP01"; /* Table view name*/
  TA1REC.TA1TBLKE = PC4REC.PC4KEY; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

   /* **                                                        ***/
   /* ********************** End of pb0gS01 ***********************/
end // end PB0GS06

// select 'ss' dprodg.vsyclr01
Function PB0GS08()
   /* ------------------------------------------------------------*/
   /* obtain style number dprodg.vsyclr01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("SS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      converseLib.validationFailed(429);
      PB0GW01.PB0GWERR = "Y";
      PB0GM001.XXXPRCNM = "PB0G400";
      set PB0GM001.PCFSECD cursor, bold;
      set PB0GM001.SY1STNBR bold;
      set PB0GM001.SY2CLRID bold;
    else
      if (SQLCA.VAGen_SQLCODE == 0)
      end
    end
  else

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

    PB0GM001.XXXPRCNM = "PB0GS08"; /* Module identification*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(41); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "SELECT DPRODG.VSYCLR01 ROW";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "PB0GS06"; /* Program number*/
    TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Table key*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/
  end

  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* If successful return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      converseLib.validationFailed(429);
      PB0GW01.PB0GWERR = "Y";
      PB0GM001.XXXPRCNM = "PB0G400";
      set PB0GM001.PCFSECD cursor, bold;
      set PB0GM001.SY1STNBR bold;
      set PB0GM001.SY2CLRID bold;
    else
      while (SQLCA.VAGen_SQLCODE == 0)
        PB0GS09();
      end
    end

    try
      call "IO3120" ("CS", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
    end /* Select set*/

    return;

  end

   /* ------------------------------------------------------------*/
   /* indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
  TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

  PB0GM001.XXXPRCNM = "PB0GS08"; /* Module identification*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

    converseLib.validationFailed(11); /* Indicate not available*/
    TA1REC.TA1FUNC = "POST"; /* Termination function*/

  else

    converseLib.validationFailed(41); /* Indicate system error*/
    TA1REC.TA1FUNC = "RETN"; /* Termination function*/

    converseLib.clearScreen();
     /* Clear screen before display*/

  end

  TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
  TA1REC.TA1LOC = "SELECT DPRODG.VSYCLR01 ROW";
  TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
  TA1REC.TA1PGMNO = "PB0GS06"; /* Program number*/
  TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
  TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
  TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Table key*/

  call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

  exit stack; /* Exit to display map*/

end // end PB0GS08

// select 'SN' DPRODG.VSYCLR01
Function PB0GS09()
   /* ------------------------------------------------------------*/
   /* SET UP INDEX FOR TABLE SEARCH*/
   /* ------------------------------------------------------------*/

  PB0GW01.PB0GWEOT = "N";
  PB0GW01.PB0GWIDX = 1;
  PB0GW01.PCFSECD = PB0GM001.PCFSECD;

  while (PB0GW01.PB0GWEOT == "N")
    if (PB0GW01.PB0GWSES == PB0GT03.PB0GWSCD[PB0GWIDX]
     && PB0GW01.PB0GWSEY == PB0GT03.PB0GWYEAR[PB0GWIDX]
     && PG2REC.XSECD == PB0GT03.XSECD[PB0GWIDX]
     && PG2REC.XSNYR == PB0GT03.XSNYR[PB0GWIDX]
     && PG2REC.SY2CLRID == PB0GM001.SY2CLRID)
      PB0GW01.SY1STNBR = PB0GM001.SY1STNBR;
      PB0GW01.SY2CLRID = PB0GM001.SY2CLRID;
      PB0GW01.PB0GWEOT = "Y"; /* end of table*/
      SQLCA.VAGen_SQLCODE = 100; /* end of table*/
      return;
    else
      if (PB0GT03.PB0GWSCD[PB0GWIDX] == "9"
       && PB0GT03.PB0GWYEAR[PB0GWIDX] == "9"
       && PB0GT03.XSECD[PB0GWIDX] == "99"
       && PB0GT03.XSNYR[PB0GWIDX] == 9999)
        PB0GW01.PB0GWEOT = "Y"; /* end of table*/
      end
    end
    PB0GW01.PB0GWIDX = PB0GW01.PB0GWIDX + 1; /* increment index*/
  end

   /* ------------------------------------------------------------*/
   /* READ NEXT STYLE NUMBER FROM DPRODG.VSYCLR01*/
   /* ------------------------------------------------------------*/

  try
    call "IO3120" ("SN", SQLCA, PG2REC) {isNoRefresh = yes, isExternal = yes};
  end /* Select set*/

   /* ------------------------------------------------------------*/
   /* IF SUCCESSFUL RETURN TO THE PREVIOUS PROCESS.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (SQLCA.VAGen_SQLCODE == 100) /* row not found*/
      converseLib.validationFailed(429);
      PB0GW01.PB0GWERR = "Y";
      PB0GM001.XXXPRCNM = "PB0GS09";
      set PB0GM001.PCFSECD cursor, bold;
      set PB0GM001.SY1STNBR bold;
      set PB0GM001.SY2CLRID bold;
      return;
    end
  else

   /* ------------------------------------------------------------*/
   /* indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

    TA1REC.TA1MAP = sysVar.errorCode; /* CSP return code*/
    TAEREC.SQLCAREC = SQLCA.SQLCAREC; /* SQL Commarea*/

    PB0GM001.XXXPRCNM = "PB0GS09"; /* Module identification*/

    if (sysVar.errorCode == "00000000" /* Call successful*/
     && SQLCA.VAGen_SQLCODE == -911)   /* and resource not available*/

      converseLib.validationFailed(11); /* Indicate not available*/
      TA1REC.TA1FUNC = "POST"; /* Termination function*/

    else

      converseLib.validationFailed(41); /* Indicate system error*/
      TA1REC.TA1FUNC = "RETN"; /* Termination function*/

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    TA1REC.TA1TYPE = "DB2 "; /* Type of error*/
    TA1REC.TA1LOC = "SELECT DPRODG.VSYCLR01 ROW";
    TA1REC.TA1PGMAP = COMMAREA.CACURRAP; /* Program application*/
    TA1REC.TA1PGMNO = "PB0GS09"; /* Program number*/
    TA1REC.TA1DBASE = "DPRODG  "; /* Data base name*/
    TA1REC.TA1TBLVU = "VSYCLR01"; /* Table view name*/
    TA1REC.TA1TBLKE = PG2REC.PG2GROUP; /* Table key*/

    call "TA0020" (TA1REC, TAEREC) {isNoRefresh = yes, isExternal = yes}; /* Error diagnosis routine*/

    exit stack; /* Exit to display map*/

  end
end // end PB0GS09

//*** RECORD=PB0GW01 ****
// ************************************************************
// *
// *     WORKING STORAGE FOR PB0G
// *
// *
// *   DATE             USERID        COMMENTS
// * ________         __________     ________________________
// * 09/20/89          gwitzi         new record
// *
// ************************************************************
// ***********************
Record PB0GW01 type basicRecord
  10 PB0GWLIX PB0GWLIX ; 
  10 PB0GWERR PB0GWERR ; 
  10 PB0GWCDT PB0GWCDT ; 
    15 PB0GWCCC PB0GWCCC ; 
    15 PB0GWYYY PB0GWYYY ; 
      20 PB0GWY1 PB0GWY1 ; 
      20 PB0GWY2 PB0GWY2 ; 
    15 PB0GWMMM PB0GWMMM ; 
    15 PB0GWDDD PB0GWDDD ; 
  10 PB0GWJCL PB0GWJCL ; 
    15 XGPCD XGPCD ; 
    15 PCFSECD PCFSECD ; 
      20 PB0GWSES PB0GWSES ; 
      20 PB0GWSEY PB0GWSEY ; 
    15 PB0GMPOM PB0GMPOM ; 
      20 PB0GWPMO PB0GWPMO ; 
      20 PB0GWDMO PB0GWDMO ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 PB0GMPON PB0GMPON ; 
    15 PC4ORTYP PC4ORTYP ; 
    15 SY1STNBR SY1STNBR ; 
    15 SY2CLRID SY2CLRID ; 
    15 PB0GMFDT PB0GMFDT ; 
    15 PB0GMTDT PB0GMTDT ; 
    15 PB0GWABS PB0GWABS ; 
    15 PB0GMPTF PB0GMPTF ; 
    15 PB0GWPGF PB0GWPGF ; 
    15 * char(32) ; 
  10 PB0GWEOT PB0GWEOT ; 
  10 PB0GWIDX PB0GWIDX ; 
end // end PB0GW01

// from-date
DataItem PB0GMFDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PB0GMPOM char(4)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// po number
DataItem PB0GMPON num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// print flag laser/local
DataItem PB0GMPTF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// to-date
DataItem PB0GMTDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = nullFill, inputRequired = no
}
end

// apparel buy data switch
DataItem PB0GWABS char(1)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

//      centry
DataItem PB0GWCCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem PB0GWCDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      day
DataItem PB0GWDDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// delivery month
DataItem PB0GWDMO char(2)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PB0GWEOT char(3)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// edit error flag
DataItem PB0GWERR char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PB0GWIDX smallint {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PB0GWJCL char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line index
DataItem PB0GWLIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      month
DataItem PB0GWMMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// program flag
DataItem PB0GWPGF char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// production month
DataItem PB0GWPMO char(2)  {
  align = right, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PB0GWSES char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

DataItem PB0GWSEY num(1)  {
  currency = no, numericSeparator = no, sign = none, align = left, 
  fillCharacter = nullFill, inputRequired = no
}
end

DataItem PB0GWY1 num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PB0GWY2 num(1)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      year
DataItem PB0GWYYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

