package pb0a;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=PB0A ****
// ************************************************************
// *
// *   THIS PROGRAM IS USED TO SUBMIT THE APPAREL PAST DUE
// *   AUDIT REPORT (PC2330).
// *
// *   THE USER WILL HIT THE ENTER KEY TO SUBMIT THE JOB.
// *
// *   DATE     USERID  COMMENTS
// * ________  ________ _______________________________________
// * 12/30/96  KGRAHA   NEW APPLICATION
// * 12/01/97  BMUSTI   Modified JCL table
// ************************************************************
// *********************
Program PB0A type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PC00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PB0AW00 PB0AW00; // record
  PCWREC PCWREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XCTHREC XCTHREC; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PB0AT01 {deleteAfterUse = yes}; // table
  use PB0AT11 {deleteAfterUse = yes}; // table
  use PB0AM.PB0AM010,  // forms
      PB0AM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPC001: XPPC001();

     /* ------------------------------------------------------------*/
     /* initialize records and maps*/
     /* ------------------------------------------------------------*/

    set PB0AW00 empty; /* Initialize jcl working storage*/

    set ERRSQLCA empty; /* Initialize*/
    set SQLCA empty; /* Initialize*/

    set TA1REC empty; /* Initialize*/
    set XCTHREC empty; /* Initialize theater of ops record*/
    set TA6REC empty; /* Initialize Jcl record*/
    set TAEREC empty; /* Initialize*/

    set PB0AM010 initial; /* Initialize map*/

    PB0A-00000: PB0A-00000();
    goto PB0A-00000;
  end // end main
end // end PB0A

// MAIN PROCESS TO DISPLAY MAP
Function PB0A-00000()
   /* ------------------------------------------------------------*/
      /* CALL SUB-ROUTINE TO FIND WHICH ENVIRONMENT*/
      /* THE PROGRAM IS EXECUTING IN, DEVELOPMENT*/
      /* OR PRODUCTION.*/
   /* ------------------------------------------------------------*/

  set XCTHREC empty;
  call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};

  if (XCTHREC.XCTH-THEATER-RUNTYPE == " ")

    PB0AM010.XXXPRCNM = "PB0A050"; /* module identification*/
    converseLib.validationFailed(8); /* Error encountered with print request*/
    exit stack;
  end

   /* ------------------------------------------------------------*/
   /* This is the main process used to show the Map. Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.*/

   /* In all PF Key, "EZEFLO" is used to exit to redisplay the*/
   /* map when a PF Key is pressed.*/
   /* ------------------------------------------------------------*/

  if (PCWREC.XGPCD == "03") /* Apparel*/

    PB0A-05000(); /* Report generation pcocess*/

  else
    PCWREC.XXXMSGNO = 138; /* Request for application invalid*/
    COMMAREA.CAUSERA = PCWREC.CAUSERA;
    COMMAREA.CATOAP = "PC0A"; /* To application*/
    XSPCS01(); /* Exit to another application*/

    /* ------------------------------------------------------------*/
     /* IF FOR SOME REASON THE USER IN NOT AUTHORIZED TO GET INTO*/
     /* THIS PROGRAM AND IS NOT AUTHORIZED TO GET TO THE PC0A MENU*/
     /* THE USER WILL BE KICKED OUT TO THE MAIN MENU. THIS WILL*/
     /* ALLOW THE PROGRAM TO TERMINATE AND NOT RESULT IN AN*/
     /* INFINITE LOOP.*/
    /* ------------------------------------------------------------*/
    PCWREC.XXXMSGNO = 138; /* Request for application invalid*/
    COMMAREA.CAUSERA = PCWREC.CAUSERA;
    COMMAREA.CATOAP = "MN0M"; /* To application*/
    XSPCS01(); /* Exit to another application*/
  end



end // end PB0A-00000

// PROGRAM PROCESS CONTROL
Function PB0A-05000()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to be later displayed on the map.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/

   /* In all PF Key functions "EZEFLO" is used to redisplay the*/
   /* map when an error is found.*/

   /* "EZEFLO" is also used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PB0A-10000(); /* Format and display the map*/

  PB0A-20000(); /* Check attention identifier*/

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/
  set PB0AM010.CATOAP initialAttributes; /* Commarea TO application*/
  set PB0AM010.CAITEM initialAttributes; /* Commarea application data*/

  PB0A-30000(); /* Process the entered data*/


end // end PB0A-05000

// DISPLAY SELECT MAP
Function PB0A-10000()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PB0AM010.XXXPRCNM = "PB0A200"; /* PROCESS NAME*/
      PB0AM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PB0AM010 alarm; /* Sound alarm*/

  end

  PB0AM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PB0AM010 ;


end // end PB0A-10000

// CHECK ATTENTION IDENTIFIERS
Function PB0A-20000()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PB0AM010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PB0AM010.CATOAP; /* To application*/
      COMMAREA.CAITEM = PB0AM010.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PB0AM010.XXXPRCNM = "PB0A300"; /* Process name*/
    end

    set PB0AM010.CATOAP cursor, bold; /* Highlight*/
    PB0AM010.XXXPRCNM = "PB0A300"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CAITEM = "PB0AM010"; /* This map name*/
    XSPCS01();

    PB0AM010.XXXPRCNM = "PB0A300"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "PC0X";
    XSPCS01();

    PB0AM010.XXXPRCNM = "PB0A300"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PB0AM010.XXXPRCNM = "PB0A300"; /* Process name*/
    exit stack; /* Redisplay map*/

  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    PB0AM010.XXXPRCNM = "PB0A300"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    exit stack; /* Exit to redisplay map*/
  end


end // end PB0A-20000

// PROCESS THE VALID DATA
Function PB0A-30000()

   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter /* Enter pressed*/
   && converseVar.validationMsgNum == 0) /* No message*/

    if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
      PB0A-31000(); /* format production jcl*/
    else
      PB0A-31100(); /* format development jcl*/
    end


  end


end // end PB0A-30000

// SUBMIT THE JCL
Function PB0A-31000()

   /* ------------------------------------------------------------*/
   /* CREATE THE APPROPRIATE PRODUCTION JCL*/
   /* ------------------------------------------------------------*/

   /* ------------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0AW00.PB0AWOIX = 0; /* Initialize over. index*/
  PB0AW00.PB0AWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PB0AW00.PB0AWLIX > 0) /* Until end of table*/

    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = PB0AT01.TARJCL[PB0AWLIX]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = PB0AT01.TARTYPE[PB0AWLIX]; /* Type*/

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0AT01.TARJCL[PB0AWLIX] == "/*EOF") /* End of table*/

      PB0AW00.PB0AWLIX = 0; /* Indicate end of table*/

    else

      PB0AW00.PB0AWLIX = PB0AW00.PB0AWLIX + 1; /* Increment table index*/

    end
  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* CICS job completed message*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA6REC.TA6RTNCD == "0") /* and normal return*/

      converseLib.validationFailed(190); /* Return message*/
      PB0AM010.XXXPRCNM = "PB0AS-31000"; /* Process name*/

      return; /* Return to previous process*/

    else
      if (TA6REC.TA6RTNCD == "1") /* and user cancelled request*/

        converseLib.validationFailed(86); /* Indicate user cancelled*/
        PB0AM010.XXXPRCNM = "PB0AS-31000"; /* Process name*/

        return; /* Return to previous process*/

      else
        converseLib.validationFailed(10); /* Indicate system error*/
        PB0AM010.XXXPRCNM = "PB0AS-31000"; /* Process name*/

        exit stack; /* Exit to display map*/

      end
    end
  end


end // end PB0A-31000

// SUBMIT THE JCL
Function PB0A-31100()

   /* ------------------------------------------------------------*/
   /* CREATE THE APPROPRIATE TEST JCL*/
   /* ------------------------------------------------------------*/

   /* -----------------------------------------------------------*/
   /* Initialize the work areas and indexes to be used.*/
   /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0AW00.PB0AWOIX = 0; /* Initialize over. index*/
  PB0AW00.PB0AWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

   /* ------------------------------------------------------------*/
   /* Format JCL and parameters into the subroutine work area.*/
   /* ------------------------------------------------------------*/

  while (PB0AW00.PB0AWLIX > 0) /* Until end of table*/

    /* ------------------------------------------------------------*/
     /* Format the Job Control Language statement from the table.*/
    /* ------------------------------------------------------------*/

    TA6REC.TARJCL[TA6INDEX] = PB0AT11.TARJCL[PB0AWLIX]; /* JCL*/
    TA6REC.TARTYPE[TA6INDEX] = PB0AT11.TARTYPE[PB0AWLIX]; /* Type*/

    TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

    /* ------------------------------------------------------------*/
     /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0AT11.TARJCL[PB0AWLIX] == "/*EOF") /* End of table*/

      PB0AW00.PB0AWLIX = 0; /* Indicate end of table*/

    else

      PB0AW00.PB0AWLIX = PB0AW00.PB0AWLIX + 1; /* Increment table index*/

    end

  end

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* CICS job completed message*/

  while (TA6REC.TA6RTNCD < "0") /* Until subroutine completed*/
    XPTA0P(); /* Print Request Subroutine*/
  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000") /* Call successful*/
    if (TA6REC.TA6RTNCD == "0") /* and normal return*/

      converseLib.validationFailed(190); /* Return message*/
      PB0AM010.XXXPRCNM = "PB0A-31100"; /* PROCESS NAME*/

      return; /* Return to previous process*/

    else
      if (TA6REC.TA6RTNCD == "1") /* and user cancelled request*/

        converseLib.validationFailed(86); /* Indicate user cancelled*/
        PB0AM010.XXXPRCNM = "PB0A-31100"; /* PROCESS NAME*/

        return; /* Return to previous process*/

      else
        converseLib.validationFailed(10); /* Indicate system error*/
        PB0AM010.XXXPRCNM = "PB0A-31100"; /* PROCESS NAME*/

        exit stack; /* Exit to display map*/

      end
    end
  end


end // end PB0A-31100

//*** RECORD=PB0AW00 ****
// ************************************************************
// *
// *      JCL WORKING STORAGE FOR  PB0A
// *
// *  DATE              USERID       COMMENTS
// * ________          _________    _______________________
// * 12/30/96          KGRAHA       NEW RECORD
// *
// ************************************************************
// ***********************
Record PB0AW00 type basicRecord
  10 PB0AWJCE PB0AWJCE ; 
    15 PB0AWEX1 PB0AWEX1 ; 
    15 PB0AWPGM PB0AWPGM ; 
    15 * char(58) ; 
  10 PB0AWJCP PB0AWJCP ; 
  10 PB0AWTYP PB0AWTYP ; 
  10 PB0AWOVR PB0AWOVR [6] ; 
  10 PB0AWJCC PB0AWJCC [6] ; 
    15 * char(19) ; 
    15 PB0AWCLG PB0AWCLG ; 
    15 * char(36) ; 
  10 PB0AWOIX PB0AWOIX ; 
  10 PB0AWLIX PB0AWLIX ; 
end // end PB0AW00

// Condition logic
DataItem PB0AWCLG char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// execute stat. constants
DataItem PB0AWEX1 char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// Condition statement
DataItem PB0AWJCC char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// execute statement
DataItem PB0AWJCE char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parm. statement
DataItem PB0AWJCP char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line indexs
DataItem PB0AWLIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// override index
DataItem PB0AWOIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// override statement
DataItem PB0AWOVR char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// program name
DataItem PB0AWPGM char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl type
DataItem PB0AWTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

