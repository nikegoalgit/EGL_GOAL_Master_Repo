package pb0q;
import corpcom1.*;
import corpcom2.*;
import corpcom3.*;
import corpcom4.*;
import corpcom5.*;
import corpcom6.*;
import corpcom7.*;
import corpx1.*;
import corpx2.*;
import corpy2.*;
import corpz3.*;
import fy.common.*;
import pc.common.*;
import sy.common.*;
import ta.common.*;
//*** PROGRAM=PB0Q ****
// ************************************************************
// *
// *   THIS PROGRAM IS USED TO SUBMIT THE APPAREL BATCH
// *   CUSTOM LOGO AUTOLOAD JOB.
// *
// *   THE USER WILL HIT THE ENTER KEY TO SUBMIT THE JOB,
// *   THE REMOTE PRINTER SELECTION LIST WILL ALWAYS BE
// *   DISPLAYED BY TA0P.
// *
// *   NO INPUT PARAMETERS ARE NEEDED.
// *
// *   DATE       USERID           COMMENTS
// *  _______    ________         ________________________
// * 02/01/93    KSANFO           NEW APPLICATION
// * 12/29/93    gamen            add theater of ops code
// * 11/15/94    chaert           remove fb recs.  not used.
// * 12/02/97    BMUSTI           modified jcl table.
// ************************************************************
// *********************
Program PB0Q type textUIProgram //VAGen Info - main text program
  {
  includeReferencedFunctions = yes, allowUnqualifiedItemReferences = yes, 
  throwNrfEofExceptions = yes, handleHardIOErrors = no, V60ExceptionCompatibility = yes, 
  I4GLItemsNullable = no, textLiteralDefaultIsString = no, localSQLScope = yes, 
  msgTablePrefix = "PC00", inputRecord = COMMAREA, segmented = yes
  }

  // Data Declarations
  COMMAREA COMMAREA ; // record
  ERRSQLCA ERRSQLCA; // record
  PB0QW01 PB0QW01; // record
  PB0QW02 PB0QW02; // record
  PB0QWTBO PB0QWTBO; // record
  PB0QWTBT PB0QWTBT; // record
  PCWREC PCWREC; // record
  PCYREC PCYREC; // record
  SQLCA SQLCA; // record
  TA1REC TA1REC; // record
  TA2REC TA2REC; // record
  TA6REC TA6REC; // record
  TAEREC TAEREC; // record
  XCTHREC XCTHREC; // record
  XX0XW01 XX0XW01; // record

  // VAGen Info - items needed for migration
  VAGen_EZESYS char(8);
  VAGen_EZEREPLY num(1);
  VAGen_EZE_WAIT_TIME bin(9,2);
  VAGen_EZE_ITEMLEN int;

  // Use Declarations
  use PB0QT01; // table
  use PB0QT11; // table
  use PB0QM.PB0QM010,  // forms
      PB0QM.TA0PM001
   {
    pfKeyEquate = no
  };

  function main()
    // VAGen Info - initialization needed for migration
    VAGen_EZESYS = VGLib.getVAGSysType();
    XPPC001: XPPC001();

     /* ------------------------------------------------------------*/

     /* ------------------------------------------------------------*/

    set PB0QW01 empty; /* Initialize working storage*/
    set PB0QW02 empty; /* Initialize jcl working storage*/

    set ERRSQLCA empty; /* Initialize*/
    set SQLCA empty; /* Initialize*/

    set TA1REC empty; /* Initialize*/
    set TA2REC empty; /* Initialize date record*/
    set XCTHREC empty; /* Initialize user record*/
    set TA6REC empty; /* Initialize Jcl record*/
    set TAEREC empty; /* Initialize*/

    set PB0QM010 initial; /* Initialize map*/
    set XX0XW01 empty; /* Initialize*/

    PB0Q000: PB0Q000();
    goto PB0Q050;
    PB0Q050: PB0Q050();
    goto PB0Q050;
  end // end main
end // end PB0Q

// GET CURRENT DATE
Function PB0Q000()

   /* ----------------------------------------------------------*/
   /* MAIN FLOW*/
   /* ----------------------------------------------------------*/

end // end PB0Q000

// MAIN PROCESS TO DISPLAY MAP
Function PB0Q050()

   /* ------------------------------------------------------------*/
   /* determine which environment the program is executing in,*/
   /* development or production.*/
   /* ------------------------------------------------------------*/

  set XCTHREC empty;
  try
    call "XC0910" (XCTHREC) {isNoRefresh = yes, isExternal = yes};
  end

  if (XCTHREC.XCTH-THEATER-RUNTYPE == " ")

    PB0QM010.XXXPRCNM = "PB0Q050"; /* module identification*/
    converseLib.validationFailed(8); /* Error encountered with print request*/
    exit stack;
  end

   /* ------------------------------------------------------------*/
   /* This is the main process used to show the Map. Processing*/
   /* always returns to the top of this process and falls through*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.*/

   /* In all PF Key, "EZEFLO" is used to exit to redisplay the*/
   /* map when a PF Key is pressed.*/
   /* ------------------------------------------------------------*/

  if (PCWREC.XGPCD == "03" /* Apparel*/
   && COMMAREA.CACLVL[3] == "Y") /* User can enter*/

    PB0Q080(); /* job submission process*/

  else
    PCWREC.XXXMSGNO = 138; /* Request for application invalid*/
    COMMAREA.CAUSERA = PCWREC.CAUSERA;
    COMMAREA.CATOAP = "PC0A"; /* To application*/
    XSPCS01(); /* Exit to another application*/

    /* ------------------------------------------------------------*/
     /* If control is returned to this program, and the user*/
     /* is not authorized to display the PC0A menu, the user will*/
     /* be transferred to the main menu.  This will keep the*/
     /* program from becoming an infinite loop.*/
    /* ------------------------------------------------------------*/
    PCWREC.XXXMSGNO = 138; /* Request for application invalid*/
    COMMAREA.CAUSERA = PCWREC.CAUSERA;
    COMMAREA.CATOAP = "MN0M"; /* To application*/
    XSPCS01(); /* Exit to another application*/
  end
end // end PB0Q050

// PROGRAM PROCESS CONTROL
Function PB0Q080()

   /* ------------------------------------------------------------*/
   /* This is the main process used for this program. Process-*/
   /* ing always returns to the top of this process and falls to*/
   /* subordinate processes until an error is found or a valid*/
   /* request is processed.  Processing sequence is as follows:*/

   /* 1) Obtain the data to be later displayed on the map.*/
   /* 2) Format the map output area and display the map.*/
   /* 3) Check the attention identifier used to respond.*/
   /* 4) Reset highlighted fields to normal intensity.*/
   /* 5) Verify the data that was entered.*/

   /* "EZEFLO" is used to redisplay the map when a major*/
   /* error occurs.*/
   /* ------------------------------------------------------------*/


  PB0Q200(); /* Format and display the map*/

  PB0Q300(); /* Check attention identifier*/

  PB0Q400(); /* Reset fields to normal intensity*/

  PB0Q500(); /* Verify the entered data*/

  PB0Q600(); /* Process the entered data*/


end // end PB0Q080

// DISPLAY SELECT MAP
Function PB0Q200()


  if (converseVar.validationMsgNum == 0)

      /* NEXT SENTENCE*/

  else

    if (converseVar.validationMsgNum == 190
     && COMMAREA.CAMSG > " ") /* ===> Job info message*/
      converseLib.validationFailed(0); /* ===> reset Job submitted message*/
      PB0QM010.XXXPRCNM = "PB0Q200"; /* PROCESS NAME*/
      PB0QM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info message*/
      COMMAREA.CAMSG = " "; /* ===> reset Job info message*/
    end

    set PB0QM010 alarm; /* Sound alarm*/

  end

  PB0QM010.XXXCURDT = VGVar.currentShortGregorianDate; /* Current date*/
  converse PB0QM010 ;


end // end PB0Q200

// CHECK ATTENTION IDENTIFIERS
Function PB0Q300()

   /* ------------------------------------------------------------*/
   /* Check attention identifier used to invoke the transaction.*/
   /* If FAST PATH was requested, transfer to the application.*/
   /* If transfer failed, display returned error message.*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is pa2) /* PA2 was pressed*/
    converseLib.clearScreen();
     /* Clear the map fields*/
    exit stack; /* Exit to redisplay map*/
  end

  if (PB0QM010.CATOAP > " ") /* FAST PATH was requested*/
    if (converseVar.eventKey is enter) /* ENTER was pressed*/

      set PCWREC empty; /* Clear the system record*/
      COMMAREA.CATOAP = PB0QM010.CATOAP; /* To application*/
      COMMAREA.CAITEM = PB0QM010.CAITEM; /* To application*/

      XSPCS01(); /* Exit to another application*/

    else
      converseLib.validationFailed(5); /* Indicate PF key not valid*/
      PB0QM010.XXXPRCNM = "PB0Q300"; /* Process name*/
    end

    set PB0QM010.CATOAP cursor, bold; /* Highlight*/
    PB0QM010.XXXPRCNM = "PB0Q300"; /* Process name*/
    return; /* Exit to redisplay map*/
  end


  if (converseVar.eventKey is pf1)
    COMMAREA.CATOAP = "GD0G";
    XSPCS01();
  end

  if (converseVar.eventKey is pf3)
    COMMAREA.CATOAP = "PC0A";
    XSPCS01();

    PB0QM010.XXXPRCNM = "PB0Q300"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey is pf4 /* or PF4 was pressed*/
   || converseVar.eventKey is pf5) /* or PF5 was pressed*/

    XSPCS01(); /* Exit to another application*/

    PB0QM010.XXXPRCNM = "PB0Q300"; /* Process name*/
    exit stack; /* Redisplay map*/

  end

  if (converseVar.eventKey is pf21) /* PF21 was pressed*/
    COMMAREA.CAITEM = " "; /* Clear item field*/
    COMMAREA.CATOAP = "PC0X"; /* Set to p.o. menu*/

    XSPCS01(); /* Exit to another application*/

    PB0QM010.XXXPRCNM = "PB0Q300"; /* Process name*/
    exit stack; /* Redisplay map*/
  end

  if (converseVar.eventKey not enter) /* ENTER was not pressed*/

    PB0QM010.XXXPRCNM = "PB0Q300"; /* Process name*/
    converseLib.validationFailed(4); /* Indicate invalid attention key*/

    if (converseVar.eventKey is pa1
     || converseVar.eventKey is pa3)

      converseLib.clearScreen();
       /* Clear screen before display*/

    end

    exit stack; /* Exit to redisplay map*/
  end
end // end PB0Q300

// RESET HIGHLIGHTED FIELDS
Function PB0Q400()

   /* ------------------------------------------------------------*/
   /* RESET FIELD ATTRIBUTES TO NORMAL*/
   /* ------------------------------------------------------------*/

  set PB0QM010.CATOAP initialAttributes; /* Commarea TO application*/
  set PB0QM010.CAITEM initialAttributes; /* Commarea application data*/

end // end PB0Q400

// PROCESS THE ENTERED DATA
Function PB0Q500()

   /* ------------------------------------------------------------*/
   /* Highlight any application data that was entered.*/
   /* Determine whether a valid request to scroll was entered.*/
   /* ------------------------------------------------------------*/

  if (PB0QM010.CAITEM > " ") /* Application data was entered*/

    set PB0QM010.CAITEM cursor, bold; /* Highlight data*/
    converseLib.validationFailed(7); /* Enter only with FAST PATH*/
    PB0QM010.XXXPRCNM = "PB0Q500"; /* Process name*/

  end


end // end PB0Q500

// PROCESS THE VALID DATA
Function PB0Q600()
   /* ------------------------------------------------------------*/
       /* PROCESS THE INPUT*/
   /* ------------------------------------------------------------*/

  if (converseVar.eventKey is enter /* Enter pressed*/
   && converseVar.validationMsgNum == 0) /* No message*/

    if (XCTHREC.XCTH-THEATER-RUNTYPE == "PROD") /* if on production system*/
      PB0Q620(); /* format production jcl autoload*/
    else
      PB0Q621(); /* format development jcl autoload*/
    end

    PB0QW01.PB0QWLIX = 0; /* Line index*/

  end
end // end PB0Q600

// SUBMIT THE JCL
Function PB0Q620()

   /* ------------------------------------------------------------*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

  /* ------------------------------------------------------------*/
  /* Initialize the work areas and indexes to be used.*/
  /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0QW01.PB0QWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

  /* ------------------------------------------------------------*/
  /* Format JCL and parameters into the subroutine work area.*/
  /* ------------------------------------------------------------*/

  while (PB0QW01.PB0QWLIX > 0) /* Until end of table*/

    if (PB0QT01.TARTYPE[PB0QWLIX] == "E") /* Execute statement*/

        /* ------------------------------------------------------------*/
         /* Format Execute statement*/
        /* ------------------------------------------------------------*/

      PB0QW02.PB0QWTYP = "E"; /* Type*/

      TA6REC.TARJCL[TA6INDEX] = PB0QT01.TARJCL[PB0QWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PB0QW02.PB0QWTYP; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/


    else

      if (PB0QT01.TARTYPE[PB0QWLIX] == "O") /* Execute statement*/

        /* ------------------------------------------------------------*/
         /* Format Output Statement*/
        /* ------------------------------------------------------------*/

        PB0QW02.PB0QWTYP = "O"; /* Type*/


        TA6REC.TARJCL[TA6INDEX] = PB0QT01.TARJCL[PB0QWLIX]; /* JCL*/
        TA6REC.TARTYPE[TA6INDEX] = PB0QW02.PB0QWTYP; /* Type*/

        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/


      else

      /* ------------------------------------------------------------*/
      /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

        TA6REC.TARJCL[TA6INDEX] = PB0QT01.TARJCL[PB0QWLIX]; /* JCL*/
        TA6REC.TARTYPE[TA6INDEX] = PB0QT01.TARTYPE[PB0QWLIX]; /* Typ*/

        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

      end
    end

    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0QT01.TARJCL[PB0QWLIX] == "/*EOF") /* End of table*/

      PB0QW01.PB0QWLIX = 0; /* Indicate end of table*/

    else

      PB0QW01.PB0QWLIX = PB0QW01.PB0QWLIX + 1; /* Increment table index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Submit the JCL and parameters for batch execution.*/
  /* ------------------------------------------------------------*/

  PB0QS96(); /* Submit the JCL*/

  /* ------------------------------------------------------------*/
  /* Display results of print request.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PB0QM010.XXXPRCNM = "PB0Q621"; /* Process name*/
    PB0QM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
         /* MOVE 190 TO EZEMNO          ; Selections queued to print*/

  else

    PB0QM010.XXXPRCNM = "PB0Q621"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    exit stack;

  end


end // end PB0Q620

// SUBMIT THE JCL
Function PB0Q621()

   /* ------------------------------------------------------------*/
   /* CREATE THE APPROPRIATE JCL*/
   /* ------------------------------------------------------------*/

  /* ------------------------------------------------------------*/
  /* Initialize the work areas and indexes to be used.*/
  /* ------------------------------------------------------------*/

  set TA6REC empty; /* Subroutine work area*/

  PB0QW01.PB0QWLIX = 1; /* Initialize table index*/
  TA6REC.TA6INDEX = 1; /* Initialize parameters index*/

  /* ------------------------------------------------------------*/
  /* Format JCL and parameters into the subroutine work area.*/
  /* ------------------------------------------------------------*/

  while (PB0QW01.PB0QWLIX > 0) /* Until end of table*/

    if (PB0QT11.TARTYPE[PB0QWLIX] == "E") /* Execute statement*/

        /* ------------------------------------------------------------*/
         /* Format Execute statement*/
        /* ------------------------------------------------------------*/

      PB0QW02.PB0QWTYP = "E"; /* Type*/

      TA6REC.TARJCL[TA6INDEX] = PB0QT11.TARJCL[PB0QWLIX]; /* JCL*/
      TA6REC.TARTYPE[TA6INDEX] = PB0QW02.PB0QWTYP; /* Type*/

      TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/


    else

      if (PB0QT11.TARTYPE[PB0QWLIX] == "O") /* Execute statement*/

        /* ------------------------------------------------------------*/
         /* Format Output Statement*/
        /* ------------------------------------------------------------*/

        PB0QW02.PB0QWTYP = "O"; /* Type*/


        TA6REC.TARJCL[TA6INDEX] = PB0QT11.TARJCL[PB0QWLIX]; /* JCL*/
        TA6REC.TARTYPE[TA6INDEX] = PB0QW02.PB0QWTYP; /* Type*/

        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/


      else

      /* ------------------------------------------------------------*/
      /* Format the Job Control Language statement from the table.*/
      /* ------------------------------------------------------------*/

        TA6REC.TARJCL[TA6INDEX] = PB0QT11.TARJCL[PB0QWLIX]; /* JCL*/
        TA6REC.TARTYPE[TA6INDEX] = PB0QT11.TARTYPE[PB0QWLIX]; /* Typ*/

        TA6REC.TA6INDEX = TA6REC.TA6INDEX + 1; /* Increment parms index*/

      end
    end

    /* ------------------------------------------------------------*/
    /* If not end of table, increment the table index.*/
    /* ------------------------------------------------------------*/

    if (PB0QT11.TARJCL[PB0QWLIX] == "/*EOF") /* End of table*/

      PB0QW01.PB0QWLIX = 0; /* Indicate end of table*/

    else

      PB0QW01.PB0QWLIX = PB0QW01.PB0QWLIX + 1; /* Increment table index*/

    end

  end

  /* ------------------------------------------------------------*/
  /* Submit the JCL and parameters for batch execution.*/
  /* ------------------------------------------------------------*/

  PB0QS96(); /* Submit the JCL*/

  /* ------------------------------------------------------------*/
  /* Display results of print request.*/
  /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* If print was successful*/
   && SQLCA.VAGen_SQLCODE == 0)     

    PB0QM010.XXXPRCNM = "PB0Q621"; /* Process name*/
    PB0QM010.VAGen_EZEMSG = COMMAREA.CAMSG; /* ===> Job info messege*/
         /* MOVE 190 TO EZEMNO          ; Selections queued to print*/

  else

    PB0QM010.XXXPRCNM = "PB0Q621"; /* Process name*/
    converseLib.validationFailed(10); /* Error encountered with print request*/

    exit stack;

  end


end // end PB0Q621

// SUBMIT JCL TO INTERNAL READER
Function PB0QS96()

   /* ------------------------------------------------------------*/
   /* Submit the JCL and parameters for batch execution.*/
   /* ------------------------------------------------------------*/

  TA6REC.TA6SUBSW = "S"; /* Tailor and submit JCL*/
  TA6REC.TA6MSGSW = "Y"; /* CICS job completed message*/

  while (TA6REC.TA6RTNCD < "0")
    XPTA0P();
  end

   /* ------------------------------------------------------------*/
   /* If a successful, return to the previous process.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "0")        /* and normal return*/

    converseLib.validationFailed(190); /* Return message*/
    PB0QM010.XXXPRCNM = "PB0QS96"; /* Process name*/

    return; /* Return to previous process*/

  end

   /* ------------------------------------------------------------*/
   /* If user cancelled request, indicate user cancelled.*/
   /* Otherwise, indicate that a system error has occurred.*/
   /* ------------------------------------------------------------*/

  if (sysVar.errorCode == "00000000" /* Call successful*/
   && TA6REC.TA6RTNCD == "1")        /* and user cancelled request*/

    converseLib.validationFailed(86); /* Indicate user cancelled*/
    PB0QM010.XXXPRCNM = "PB0QS96"; /* Process name*/
  else
    converseLib.validationFailed(10); /* Indicate system error*/
    PB0QM010.XXXPRCNM = "PB0QS96"; /* Process name*/

  end

  exit stack; /* Exit to display map*/


end // end PB0QS96

//*** RECORD=PB0QW01 ****
// ************************************************************
// *
// *     WORKING STORAGE FOR PB0Q
// *
// *
// *   DATE             USERID        COMMENTS
// * ________         __________     ________________________
// * 12/18/92          KSANFO          NEW RECORD
// *
// ************************************************************
// ***********************
Record PB0QW01 type basicRecord
  10 PB0QWDAT PB0QWDAT ; 
    15 PB0QWBYY PB0QWBYY ; 
    15 PB0QWBMM PB0QWBMM ; 
    15 PB0QWBDD PB0QWBDD ; 
  10 PB0QWBAT PB0QWBAT ; 
    15 PB0QWBDC PB0QWBDC ; 
    15 PB0QWBDY PB0QWBDY ; 
    15 PB0QWBDM PB0QWBDM ; 
  10 PB0QWCY1 PB0QWCY1 ; 
  10 PB0QWCY2 PB0QWCY2 ; 
  10 PB0QWLIX PB0QWLIX ; 
  10 PB0QWAIX PB0QWAIX ; 
  10 PB0QWMLX PB0QWMLX ; 
  10 PB0QWBDT PB0QWBDT ; 
  10 PB0QWFAT PB0QWFAT ; 
  10 PB0QWCDT PB0QWCDT ; 
    15 PB0QWCCC PB0QWCCC ; 
    15 PB0QWYYY PB0QWYYY ; 
    15 PB0QWMMM PB0QWMMM ; 
    15 PB0QWDDD PB0QWDDD ; 
  10 PB0QWLTC PB0QWLTC ; 
  10 PB0QWOIX PB0QWOIX ; 
end // end PB0QW01

//*** RECORD=PB0QW02 ****
// ************************************************************
// *
// *              JCL WORKING STORAGE FOR PB0Q
// *
// *  DATE              USERID       COMMENTS
// * ________          _________    _______________________
// * 12/18/92          KSANFO         NEW RECORD
// *
// ************************************************************
// ***********************
Record PB0QW02 type basicRecord
  10 PB0QWJCE PB0QWJCE ; 
    15 PB0QWEX1 PB0QWEX1 ; 
    15 PB0QWPGM PB0QWPGM ; 
    15 * char(58) ; 
  10 PB0QWJCP PB0QWJCP ; 
  10 PB0QWTYP PB0QWTYP ; 
  10 PB0QWOVR PB0QWOVR [7] ; 
  10 PB0QWJCC PB0QWJCC [7] ; 
    15 * char(19) ; 
    15 PB0QWCLG PB0QWCLG ; 
    15 * char(36) ; 
end // end PB0QW02

//*** RECORD=PB0QWTBO ****
// ************************************************************
// *
// *     COMPARE ARRAY RECORD AREA TO WORK WITH PC0TTB2
// *
// ************************************************************
// ************************
Record PB0QWTBO type basicRecord
  10 PB0QWTBK PB0QWTBK ; 
    15 XGPCD XGPCD ; 
    15 PB0QWBCC PB0QWBCC ; 
    15 PB0QWBYY PB0QWBYY ; 
    15 PB0QWBMM PB0QWBMM ; 
    15 PB0QWIDT PB0QWIDT ; 
    15 PCFSECD PCFSECD ; 
    15 PC4ORTYP PC4ORTYP ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 XCTCD XCTCD ; 
    15 PB0QWAFL PB0QWAFL ; 
    15 * char(50) ; 
end // end PB0QWTBO

//*** RECORD=PB0QWTBT ****
// ************************************************************
// *
// *     ARRAY TABLE FOR STORING PARMS. TO PASS TO TA6REC
// *   DATE     USERID           COMMENTS
// *  ______   ________         ______________________
// *  9/14/89  gwitzi           new array record
// *  7/31/92 ksanfo            added redefines for PC0TWIDT
// *                            (pc-po-id-mo-rng)
// *
// ************************************************************
// ************************
Record PB0QWTBT type basicRecord
  10 PB0QWT2K PB0QWT2K [20] ; 
    15 XGPCD XGPCD ; 
    15 PB0QWBUY PB0QWBUY ; 
      20 PB0QWBCC PB0QWBCC ; 
      20 PB0QWBYY PB0QWBYY ; 
      20 PB0QWBMM PB0QWBMM ; 
    15 PB0QWIDT PB0QWIDT ; 
      20 * num(1) ; //        filler
      20 PB0QWPCC PB0QWPCC ; 
      20 PB0QWPYY PB0QWPYY ; 
      20 PB0QWPPM PB0QWPPM ; 
      20 PB0QWPDM PB0QWPDM ; 
    15 PCFSECD PCFSECD ; 
    15 PC4ORTYP PC4ORTYP ; 
    15 FY1FCTYC FY1FCTYC ; 
    15 XCTCD XCTCD ; 
    15 PB0QWAFL PB0QWAFL ; 
    15 * char(50) ; 
end // end PB0QWTBT

// Application flag
DataItem PB0QWAFL char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// array index
DataItem PB0QWAIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working buy date
DataItem PB0QWBAT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        centry
DataItem PB0QWBCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        centry
DataItem PB0QWBDC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        day
DataItem PB0QWBDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        month
DataItem PB0QWBDM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// buy date
DataItem PB0QWBDT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        year
DataItem PB0QWBDY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        month
DataItem PB0QWBMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

DataItem PB0QWBUY num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        year
DataItem PB0QWBYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      centry
DataItem PB0QWCCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// current date
DataItem PB0QWCDT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Condition logic
DataItem PB0QWCLG char(25)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// year +1
DataItem PB0QWCY1 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// year -1
DataItem PB0QWCY2 num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Working date
DataItem PB0QWDAT num(6)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      day
DataItem PB0QWDDD num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// execute stat. constants
DataItem PB0QWEX1 char(15)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// current date
DataItem PB0QWFAT num(8)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// po id mo rng
DataItem PB0QWIDT num(9)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Condition statement
DataItem PB0QWJCC char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// execute statement
DataItem PB0QWJCE char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// parm. statement
DataItem PB0QWJCP char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// line index
DataItem PB0QWLIX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Less than condition
DataItem PB0QWLTC char(5)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// max. lines
DataItem PB0QWMLX num(3)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//      month
DataItem PB0QWMMM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// Override index
DataItem PB0QWOIX num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// override statement
DataItem PB0QWOVR char(17)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//        centry
DataItem PB0QWPCC num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        delivery month
DataItem PB0QWPDM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// program name
DataItem PB0QWPGM char(7)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//        production month
DataItem PB0QWPPM num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

//        year
DataItem PB0QWPYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

// table key
DataItem PB0QWT2K char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// table key
DataItem PB0QWTBK char(80)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

// jcl type
DataItem PB0QWTYP char(1)  {
  align = left, fillCharacter = nullFill, inputRequired = no
}
end

//      year
DataItem PB0QWYYY num(2)  {
  currency = no, numericSeparator = no, sign = none, align = right, 
  fillCharacter = " ", inputRequired = no
}
end

